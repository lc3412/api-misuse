; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--colorspacedsp.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--colorspacedsp.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ColorSpaceDSPContext = type { [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], void (i16**, i64, i32, i32, [3 x [8 x i16]]*)* }

; Function Attrs: nounwind uwtable
define void @ff_colorspacedsp_init(%struct.ColorSpaceDSPContext* %dsp) #0 !dbg !29 {
entry:
  %dsp.addr = alloca %struct.ColorSpaceDSPContext*, align 8
  store %struct.ColorSpaceDSPContext* %dsp, %struct.ColorSpaceDSPContext** %dsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ColorSpaceDSPContext** %dsp.addr, metadata !93, metadata !94), !dbg !95
  %0 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !96
  %yuv2rgb = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %0, i32 0, i32 0, !dbg !97
  %arrayidx = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb, i64 0, i64 0, !dbg !96
  %arrayidx1 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx, i64 0, i64 0, !dbg !96
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_444p8_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx1, align 8, !dbg !98
  %1 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !99
  %yuv2rgb2 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %1, i32 0, i32 0, !dbg !100
  %arrayidx3 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb2, i64 0, i64 0, !dbg !99
  %arrayidx4 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx3, i64 0, i64 1, !dbg !99
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_422p8_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx4, align 8, !dbg !101
  %2 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !102
  %yuv2rgb5 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %2, i32 0, i32 0, !dbg !103
  %arrayidx6 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb5, i64 0, i64 0, !dbg !102
  %arrayidx7 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx6, i64 0, i64 2, !dbg !102
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_420p8_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx7, align 8, !dbg !104
  %3 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !105
  %yuv2rgb8 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %3, i32 0, i32 0, !dbg !106
  %arrayidx9 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb8, i64 0, i64 1, !dbg !105
  %arrayidx10 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx9, i64 0, i64 0, !dbg !105
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_444p10_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx10, align 8, !dbg !107
  %4 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !108
  %yuv2rgb11 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %4, i32 0, i32 0, !dbg !109
  %arrayidx12 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb11, i64 0, i64 1, !dbg !108
  %arrayidx13 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx12, i64 0, i64 1, !dbg !108
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_422p10_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx13, align 8, !dbg !110
  %5 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !111
  %yuv2rgb14 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %5, i32 0, i32 0, !dbg !112
  %arrayidx15 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb14, i64 0, i64 1, !dbg !111
  %arrayidx16 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx15, i64 0, i64 2, !dbg !111
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_420p10_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx16, align 8, !dbg !113
  %6 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !114
  %yuv2rgb17 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %6, i32 0, i32 0, !dbg !115
  %arrayidx18 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb17, i64 0, i64 2, !dbg !114
  %arrayidx19 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx18, i64 0, i64 0, !dbg !114
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_444p12_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx19, align 8, !dbg !116
  %7 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !117
  %yuv2rgb20 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %7, i32 0, i32 0, !dbg !118
  %arrayidx21 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb20, i64 0, i64 2, !dbg !117
  %arrayidx22 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx21, i64 0, i64 1, !dbg !117
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_422p12_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx22, align 8, !dbg !119
  %8 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !120
  %yuv2rgb23 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %8, i32 0, i32 0, !dbg !121
  %arrayidx24 = getelementptr inbounds [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %yuv2rgb23, i64 0, i64 2, !dbg !120
  %arrayidx25 = getelementptr inbounds [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx24, i64 0, i64 2, !dbg !120
  store void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)* @yuv2rgb_420p12_c, void (i16**, i64, i8**, i64*, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx25, align 8, !dbg !122
  %9 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !123
  %rgb2yuv = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %9, i32 0, i32 1, !dbg !124
  %arrayidx26 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv, i64 0, i64 0, !dbg !123
  %arrayidx27 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx26, i64 0, i64 0, !dbg !123
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_444p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx27, align 8, !dbg !125
  %10 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !126
  %rgb2yuv28 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %10, i32 0, i32 1, !dbg !127
  %arrayidx29 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv28, i64 0, i64 0, !dbg !126
  %arrayidx30 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx29, i64 0, i64 1, !dbg !126
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_422p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx30, align 8, !dbg !128
  %11 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !129
  %rgb2yuv31 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %11, i32 0, i32 1, !dbg !130
  %arrayidx32 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv31, i64 0, i64 0, !dbg !129
  %arrayidx33 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx32, i64 0, i64 2, !dbg !129
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_420p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx33, align 8, !dbg !131
  %12 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !132
  %rgb2yuv34 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %12, i32 0, i32 1, !dbg !133
  %arrayidx35 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv34, i64 0, i64 1, !dbg !132
  %arrayidx36 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx35, i64 0, i64 0, !dbg !132
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_444p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx36, align 8, !dbg !134
  %13 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !135
  %rgb2yuv37 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %13, i32 0, i32 1, !dbg !136
  %arrayidx38 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv37, i64 0, i64 1, !dbg !135
  %arrayidx39 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx38, i64 0, i64 1, !dbg !135
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_422p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx39, align 8, !dbg !137
  %14 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !138
  %rgb2yuv40 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %14, i32 0, i32 1, !dbg !139
  %arrayidx41 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv40, i64 0, i64 1, !dbg !138
  %arrayidx42 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx41, i64 0, i64 2, !dbg !138
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_420p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx42, align 8, !dbg !140
  %15 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !141
  %rgb2yuv43 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %15, i32 0, i32 1, !dbg !142
  %arrayidx44 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv43, i64 0, i64 2, !dbg !141
  %arrayidx45 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx44, i64 0, i64 0, !dbg !141
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_444p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx45, align 8, !dbg !143
  %16 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !144
  %rgb2yuv46 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %16, i32 0, i32 1, !dbg !145
  %arrayidx47 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv46, i64 0, i64 2, !dbg !144
  %arrayidx48 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx47, i64 0, i64 1, !dbg !144
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_422p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx48, align 8, !dbg !146
  %17 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !147
  %rgb2yuv49 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %17, i32 0, i32 1, !dbg !148
  %arrayidx50 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]]* %rgb2yuv49, i64 0, i64 2, !dbg !147
  %arrayidx51 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)*]* %arrayidx50, i64 0, i64 2, !dbg !147
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)* @rgb2yuv_420p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*)** %arrayidx51, align 8, !dbg !149
  %18 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !150
  %rgb2yuv_fsb = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %18, i32 0, i32 2, !dbg !151
  %arrayidx52 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb, i64 0, i64 0, !dbg !150
  %arrayidx53 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx52, i64 0, i64 0, !dbg !150
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_444p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx53, align 8, !dbg !152
  %19 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !153
  %rgb2yuv_fsb54 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %19, i32 0, i32 2, !dbg !154
  %arrayidx55 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb54, i64 0, i64 0, !dbg !153
  %arrayidx56 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx55, i64 0, i64 1, !dbg !153
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_422p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx56, align 8, !dbg !155
  %20 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !156
  %rgb2yuv_fsb57 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %20, i32 0, i32 2, !dbg !157
  %arrayidx58 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb57, i64 0, i64 0, !dbg !156
  %arrayidx59 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx58, i64 0, i64 2, !dbg !156
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_420p8_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx59, align 8, !dbg !158
  %21 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !159
  %rgb2yuv_fsb60 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %21, i32 0, i32 2, !dbg !160
  %arrayidx61 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb60, i64 0, i64 1, !dbg !159
  %arrayidx62 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx61, i64 0, i64 0, !dbg !159
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_444p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx62, align 8, !dbg !161
  %22 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !162
  %rgb2yuv_fsb63 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %22, i32 0, i32 2, !dbg !163
  %arrayidx64 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb63, i64 0, i64 1, !dbg !162
  %arrayidx65 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx64, i64 0, i64 1, !dbg !162
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_422p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx65, align 8, !dbg !164
  %23 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !165
  %rgb2yuv_fsb66 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %23, i32 0, i32 2, !dbg !166
  %arrayidx67 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb66, i64 0, i64 1, !dbg !165
  %arrayidx68 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx67, i64 0, i64 2, !dbg !165
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_420p10_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx68, align 8, !dbg !167
  %24 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !168
  %rgb2yuv_fsb69 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %24, i32 0, i32 2, !dbg !169
  %arrayidx70 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb69, i64 0, i64 2, !dbg !168
  %arrayidx71 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx70, i64 0, i64 0, !dbg !168
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_444p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx71, align 8, !dbg !170
  %25 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !171
  %rgb2yuv_fsb72 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %25, i32 0, i32 2, !dbg !172
  %arrayidx73 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb72, i64 0, i64 2, !dbg !171
  %arrayidx74 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx73, i64 0, i64 1, !dbg !171
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_422p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx74, align 8, !dbg !173
  %26 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !174
  %rgb2yuv_fsb75 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %26, i32 0, i32 2, !dbg !175
  %arrayidx76 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]], [3 x [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]]* %rgb2yuv_fsb75, i64 0, i64 2, !dbg !174
  %arrayidx77 = getelementptr inbounds [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*], [3 x void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)*]* %arrayidx76, i64 0, i64 2, !dbg !174
  store void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)* @rgb2yuv_fsb_420p12_c, void (i8**, i64*, i16**, i64, i32, i32, [3 x [8 x i16]]*, i16*, [2 x i32*]*)** %arrayidx77, align 8, !dbg !176
  %27 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !177
  %yuv2yuv = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %27, i32 0, i32 3, !dbg !178
  %arrayidx78 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv, i64 0, i64 0, !dbg !177
  %arrayidx79 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx78, i64 0, i64 0, !dbg !177
  %arrayidx80 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx79, i64 0, i64 0, !dbg !177
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p8to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx80, align 8, !dbg !179
  %28 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !180
  %yuv2yuv81 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %28, i32 0, i32 3, !dbg !181
  %arrayidx82 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv81, i64 0, i64 0, !dbg !180
  %arrayidx83 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx82, i64 0, i64 0, !dbg !180
  %arrayidx84 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx83, i64 0, i64 1, !dbg !180
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p8to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx84, align 8, !dbg !182
  %29 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !183
  %yuv2yuv85 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %29, i32 0, i32 3, !dbg !184
  %arrayidx86 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv85, i64 0, i64 0, !dbg !183
  %arrayidx87 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx86, i64 0, i64 0, !dbg !183
  %arrayidx88 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx87, i64 0, i64 2, !dbg !183
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p8to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx88, align 8, !dbg !185
  %30 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !186
  %yuv2yuv89 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %30, i32 0, i32 3, !dbg !187
  %arrayidx90 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv89, i64 0, i64 0, !dbg !186
  %arrayidx91 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx90, i64 0, i64 1, !dbg !186
  %arrayidx92 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx91, i64 0, i64 0, !dbg !186
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p8to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx92, align 8, !dbg !188
  %31 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !189
  %yuv2yuv93 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %31, i32 0, i32 3, !dbg !190
  %arrayidx94 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv93, i64 0, i64 0, !dbg !189
  %arrayidx95 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx94, i64 0, i64 1, !dbg !189
  %arrayidx96 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx95, i64 0, i64 1, !dbg !189
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p8to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx96, align 8, !dbg !191
  %32 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !192
  %yuv2yuv97 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %32, i32 0, i32 3, !dbg !193
  %arrayidx98 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv97, i64 0, i64 0, !dbg !192
  %arrayidx99 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx98, i64 0, i64 1, !dbg !192
  %arrayidx100 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx99, i64 0, i64 2, !dbg !192
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p8to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx100, align 8, !dbg !194
  %33 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !195
  %yuv2yuv101 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %33, i32 0, i32 3, !dbg !196
  %arrayidx102 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv101, i64 0, i64 0, !dbg !195
  %arrayidx103 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx102, i64 0, i64 2, !dbg !195
  %arrayidx104 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx103, i64 0, i64 0, !dbg !195
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p8to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx104, align 8, !dbg !197
  %34 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !198
  %yuv2yuv105 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %34, i32 0, i32 3, !dbg !199
  %arrayidx106 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv105, i64 0, i64 0, !dbg !198
  %arrayidx107 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx106, i64 0, i64 2, !dbg !198
  %arrayidx108 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx107, i64 0, i64 1, !dbg !198
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p8to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx108, align 8, !dbg !200
  %35 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !201
  %yuv2yuv109 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %35, i32 0, i32 3, !dbg !202
  %arrayidx110 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv109, i64 0, i64 0, !dbg !201
  %arrayidx111 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx110, i64 0, i64 2, !dbg !201
  %arrayidx112 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx111, i64 0, i64 2, !dbg !201
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p8to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx112, align 8, !dbg !203
  %36 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !204
  %yuv2yuv113 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %36, i32 0, i32 3, !dbg !205
  %arrayidx114 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv113, i64 0, i64 1, !dbg !204
  %arrayidx115 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx114, i64 0, i64 0, !dbg !204
  %arrayidx116 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx115, i64 0, i64 0, !dbg !204
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p10to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx116, align 8, !dbg !206
  %37 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !207
  %yuv2yuv117 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %37, i32 0, i32 3, !dbg !208
  %arrayidx118 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv117, i64 0, i64 1, !dbg !207
  %arrayidx119 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx118, i64 0, i64 0, !dbg !207
  %arrayidx120 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx119, i64 0, i64 1, !dbg !207
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p10to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx120, align 8, !dbg !209
  %38 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !210
  %yuv2yuv121 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %38, i32 0, i32 3, !dbg !211
  %arrayidx122 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv121, i64 0, i64 1, !dbg !210
  %arrayidx123 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx122, i64 0, i64 0, !dbg !210
  %arrayidx124 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx123, i64 0, i64 2, !dbg !210
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p10to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx124, align 8, !dbg !212
  %39 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !213
  %yuv2yuv125 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %39, i32 0, i32 3, !dbg !214
  %arrayidx126 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv125, i64 0, i64 1, !dbg !213
  %arrayidx127 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx126, i64 0, i64 1, !dbg !213
  %arrayidx128 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx127, i64 0, i64 0, !dbg !213
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p10to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx128, align 8, !dbg !215
  %40 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !216
  %yuv2yuv129 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %40, i32 0, i32 3, !dbg !217
  %arrayidx130 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv129, i64 0, i64 1, !dbg !216
  %arrayidx131 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx130, i64 0, i64 1, !dbg !216
  %arrayidx132 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx131, i64 0, i64 1, !dbg !216
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p10to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx132, align 8, !dbg !218
  %41 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !219
  %yuv2yuv133 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %41, i32 0, i32 3, !dbg !220
  %arrayidx134 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv133, i64 0, i64 1, !dbg !219
  %arrayidx135 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx134, i64 0, i64 1, !dbg !219
  %arrayidx136 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx135, i64 0, i64 2, !dbg !219
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p10to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx136, align 8, !dbg !221
  %42 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !222
  %yuv2yuv137 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %42, i32 0, i32 3, !dbg !223
  %arrayidx138 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv137, i64 0, i64 1, !dbg !222
  %arrayidx139 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx138, i64 0, i64 2, !dbg !222
  %arrayidx140 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx139, i64 0, i64 0, !dbg !222
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p10to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx140, align 8, !dbg !224
  %43 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !225
  %yuv2yuv141 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %43, i32 0, i32 3, !dbg !226
  %arrayidx142 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv141, i64 0, i64 1, !dbg !225
  %arrayidx143 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx142, i64 0, i64 2, !dbg !225
  %arrayidx144 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx143, i64 0, i64 1, !dbg !225
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p10to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx144, align 8, !dbg !227
  %44 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !228
  %yuv2yuv145 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %44, i32 0, i32 3, !dbg !229
  %arrayidx146 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv145, i64 0, i64 1, !dbg !228
  %arrayidx147 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx146, i64 0, i64 2, !dbg !228
  %arrayidx148 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx147, i64 0, i64 2, !dbg !228
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p10to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx148, align 8, !dbg !230
  %45 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !231
  %yuv2yuv149 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %45, i32 0, i32 3, !dbg !232
  %arrayidx150 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv149, i64 0, i64 2, !dbg !231
  %arrayidx151 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx150, i64 0, i64 0, !dbg !231
  %arrayidx152 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx151, i64 0, i64 0, !dbg !231
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p12to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx152, align 8, !dbg !233
  %46 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !234
  %yuv2yuv153 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %46, i32 0, i32 3, !dbg !235
  %arrayidx154 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv153, i64 0, i64 2, !dbg !234
  %arrayidx155 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx154, i64 0, i64 0, !dbg !234
  %arrayidx156 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx155, i64 0, i64 1, !dbg !234
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p12to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx156, align 8, !dbg !236
  %47 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !237
  %yuv2yuv157 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %47, i32 0, i32 3, !dbg !238
  %arrayidx158 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv157, i64 0, i64 2, !dbg !237
  %arrayidx159 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx158, i64 0, i64 0, !dbg !237
  %arrayidx160 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx159, i64 0, i64 2, !dbg !237
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p12to8_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx160, align 8, !dbg !239
  %48 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !240
  %yuv2yuv161 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %48, i32 0, i32 3, !dbg !241
  %arrayidx162 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv161, i64 0, i64 2, !dbg !240
  %arrayidx163 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx162, i64 0, i64 1, !dbg !240
  %arrayidx164 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx163, i64 0, i64 0, !dbg !240
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p12to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx164, align 8, !dbg !242
  %49 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !243
  %yuv2yuv165 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %49, i32 0, i32 3, !dbg !244
  %arrayidx166 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv165, i64 0, i64 2, !dbg !243
  %arrayidx167 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx166, i64 0, i64 1, !dbg !243
  %arrayidx168 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx167, i64 0, i64 1, !dbg !243
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p12to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx168, align 8, !dbg !245
  %50 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !246
  %yuv2yuv169 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %50, i32 0, i32 3, !dbg !247
  %arrayidx170 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv169, i64 0, i64 2, !dbg !246
  %arrayidx171 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx170, i64 0, i64 1, !dbg !246
  %arrayidx172 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx171, i64 0, i64 2, !dbg !246
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p12to10_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx172, align 8, !dbg !248
  %51 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !249
  %yuv2yuv173 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %51, i32 0, i32 3, !dbg !250
  %arrayidx174 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv173, i64 0, i64 2, !dbg !249
  %arrayidx175 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx174, i64 0, i64 2, !dbg !249
  %arrayidx176 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx175, i64 0, i64 0, !dbg !249
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_444p12to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx176, align 8, !dbg !251
  %52 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !252
  %yuv2yuv177 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %52, i32 0, i32 3, !dbg !253
  %arrayidx178 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv177, i64 0, i64 2, !dbg !252
  %arrayidx179 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx178, i64 0, i64 2, !dbg !252
  %arrayidx180 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx179, i64 0, i64 1, !dbg !252
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_422p12to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx180, align 8, !dbg !254
  %53 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !255
  %yuv2yuv181 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %53, i32 0, i32 3, !dbg !256
  %arrayidx182 = getelementptr inbounds [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]], [3 x [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]]* %yuv2yuv181, i64 0, i64 2, !dbg !255
  %arrayidx183 = getelementptr inbounds [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]], [3 x [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]]* %arrayidx182, i64 0, i64 2, !dbg !255
  %arrayidx184 = getelementptr inbounds [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*], [3 x void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)*]* %arrayidx183, i64 0, i64 2, !dbg !255
  store void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)* @yuv2yuv_420p12to12_c, void (i8**, i64*, i8**, i64*, i32, i32, [3 x [8 x i16]]*, [8 x i16]*)** %arrayidx184, align 8, !dbg !257
  %54 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !258
  %multiply3x3 = getelementptr inbounds %struct.ColorSpaceDSPContext, %struct.ColorSpaceDSPContext* %54, i32 0, i32 4, !dbg !259
  store void (i16**, i64, i32, i32, [3 x [8 x i16]]*)* @multiply3x3_c, void (i16**, i64, i32, i32, [3 x [8 x i16]]*)** %multiply3x3, align 8, !dbg !260
  %55 = load %struct.ColorSpaceDSPContext*, %struct.ColorSpaceDSPContext** %dsp.addr, align 8, !dbg !261
  call void @ff_colorspacedsp_x86_init(%struct.ColorSpaceDSPContext* %55), !dbg !263
  ret void, !dbg !264
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_444p8_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !265 {
entry:
  %retval.i102 = alloca i16, align 2
  %a.addr.i103 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i103, metadata !267, metadata !94), !dbg !272
  %retval.i90 = alloca i16, align 2
  %a.addr.i91 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i91, metadata !267, metadata !94), !dbg !280
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !282
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !284, metadata !94), !dbg !285
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !286, metadata !94), !dbg !287
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !288, metadata !94), !dbg !289
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !290, metadata !94), !dbg !291
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !292, metadata !94), !dbg !293
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !294, metadata !94), !dbg !295
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !296, metadata !94), !dbg !297
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !298, metadata !94), !dbg !299
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !300, metadata !94), !dbg !301
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !302
  store i8** %0, i8*** %yuv, align 8, !dbg !301
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !303, metadata !94), !dbg !306
  %1 = load i8**, i8*** %yuv, align 8, !dbg !307
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !307
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !307
  store i8* %2, i8** %yuv0, align 8, !dbg !306
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !308, metadata !94), !dbg !309
  %3 = load i8**, i8*** %yuv, align 8, !dbg !310
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !310
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !310
  store i8* %4, i8** %yuv1, align 8, !dbg !309
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !311, metadata !94), !dbg !312
  %5 = load i8**, i8*** %yuv, align 8, !dbg !313
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !313
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !313
  store i8* %6, i8** %yuv2, align 8, !dbg !312
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !314, metadata !94), !dbg !315
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !316
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !316
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !316
  store i16* %8, i16** %rgb0, align 8, !dbg !315
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !317, metadata !94), !dbg !318
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !319
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !319
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !319
  store i16* %10, i16** %rgb1, align 8, !dbg !318
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !320, metadata !94), !dbg !321
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !322
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !322
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !322
  store i16* %12, i16** %rgb2, align 8, !dbg !321
  call void @llvm.dbg.declare(metadata i32* %y, metadata !323, metadata !94), !dbg !324
  call void @llvm.dbg.declare(metadata i32* %x, metadata !325, metadata !94), !dbg !326
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !327, metadata !94), !dbg !328
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !329
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !329
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !329
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !329
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !329
  %conv = sext i16 %14 to i32, !dbg !329
  store i32 %conv, i32* %cy, align 4, !dbg !328
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !330, metadata !94), !dbg !331
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !332
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !332
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !332
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !332
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !332
  %conv12 = sext i16 %16 to i32, !dbg !332
  store i32 %conv12, i32* %crv, align 4, !dbg !331
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !333, metadata !94), !dbg !334
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !335
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 1, !dbg !335
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !335
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !335
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !335
  %conv16 = sext i16 %18 to i32, !dbg !335
  store i32 %conv16, i32* %cgu, align 4, !dbg !334
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !336, metadata !94), !dbg !337
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !338
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !338
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !338
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !338
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !338
  %conv20 = sext i16 %20 to i32, !dbg !338
  store i32 %conv20, i32* %cgv, align 4, !dbg !337
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !339, metadata !94), !dbg !340
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !341
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 2, !dbg !341
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !341
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !341
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !341
  %conv24 = sext i16 %22 to i32, !dbg !341
  store i32 %conv24, i32* %cbu, align 4, !dbg !340
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !342, metadata !94), !dbg !344
  store i32 7, i32* %sh, align 4, !dbg !344
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !345, metadata !94), !dbg !346
  store i32 64, i32* %rnd, align 4, !dbg !346
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !347, metadata !94), !dbg !348
  store i32 128, i32* %uv_offset, align 4, !dbg !348
  %23 = load i32, i32* %w.addr, align 4, !dbg !349
  %add = add nsw i32 %23, 1, !dbg !350
  %sub = sub nsw i32 %add, 1, !dbg !351
  %shr = ashr i32 %sub, 0, !dbg !352
  store i32 %shr, i32* %w.addr, align 4, !dbg !353
  %24 = load i32, i32* %h.addr, align 4, !dbg !354
  %add25 = add nsw i32 %24, 1, !dbg !355
  %sub26 = sub nsw i32 %add25, 1, !dbg !356
  %shr27 = ashr i32 %sub26, 0, !dbg !357
  store i32 %shr27, i32* %h.addr, align 4, !dbg !358
  store i32 0, i32* %y, align 4, !dbg !359
  br label %for.cond, !dbg !360

for.cond:                                         ; preds = %for.inc87, %entry
  %25 = load i32, i32* %y, align 4, !dbg !361
  %26 = load i32, i32* %h.addr, align 4, !dbg !363
  %cmp = icmp slt i32 %25, %26, !dbg !364
  br i1 %cmp, label %for.body, label %for.end89, !dbg !365

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !366
  br label %for.cond29, !dbg !367

for.cond29:                                       ; preds = %for.inc, %for.body
  %27 = load i32, i32* %x, align 4, !dbg !368
  %28 = load i32, i32* %w.addr, align 4, !dbg !370
  %cmp30 = icmp slt i32 %27, %28, !dbg !371
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !372

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !373, metadata !94), !dbg !374
  %29 = load i32, i32* %x, align 4, !dbg !375
  %shl = shl i32 %29, 0, !dbg !376
  %idxprom = sext i32 %shl to i64, !dbg !377
  %30 = load i8*, i8** %yuv0, align 8, !dbg !377
  %arrayidx33 = getelementptr inbounds i8, i8* %30, i64 %idxprom, !dbg !377
  %31 = load i8, i8* %arrayidx33, align 1, !dbg !377
  %conv34 = zext i8 %31 to i32, !dbg !377
  %32 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !378
  %arrayidx35 = getelementptr inbounds i16, i16* %32, i64 0, !dbg !378
  %33 = load i16, i16* %arrayidx35, align 2, !dbg !378
  %conv36 = sext i16 %33 to i32, !dbg !378
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !379
  store i32 %sub37, i32* %y00, align 4, !dbg !374
  call void @llvm.dbg.declare(metadata i32* %u, metadata !380, metadata !94), !dbg !381
  %34 = load i32, i32* %x, align 4, !dbg !382
  %idxprom38 = sext i32 %34 to i64, !dbg !383
  %35 = load i8*, i8** %yuv1, align 8, !dbg !383
  %arrayidx39 = getelementptr inbounds i8, i8* %35, i64 %idxprom38, !dbg !383
  %36 = load i8, i8* %arrayidx39, align 1, !dbg !383
  %conv40 = zext i8 %36 to i32, !dbg !383
  %sub41 = sub nsw i32 %conv40, 128, !dbg !384
  store i32 %sub41, i32* %u, align 4, !dbg !381
  call void @llvm.dbg.declare(metadata i32* %v, metadata !385, metadata !94), !dbg !386
  %37 = load i32, i32* %x, align 4, !dbg !387
  %idxprom42 = sext i32 %37 to i64, !dbg !388
  %38 = load i8*, i8** %yuv2, align 8, !dbg !388
  %arrayidx43 = getelementptr inbounds i8, i8* %38, i64 %idxprom42, !dbg !388
  %39 = load i8, i8* %arrayidx43, align 1, !dbg !388
  %conv44 = zext i8 %39 to i32, !dbg !388
  %sub45 = sub nsw i32 %conv44, 128, !dbg !389
  store i32 %sub45, i32* %v, align 4, !dbg !386
  %40 = load i32, i32* %y00, align 4, !dbg !390
  %41 = load i32, i32* %cy, align 4, !dbg !391
  %mul = mul nsw i32 %40, %41, !dbg !392
  %42 = load i32, i32* %crv, align 4, !dbg !393
  %43 = load i32, i32* %v, align 4, !dbg !394
  %mul46 = mul nsw i32 %42, %43, !dbg !395
  %add47 = add nsw i32 %mul, %mul46, !dbg !396
  %add48 = add nsw i32 %add47, 64, !dbg !397
  %shr49 = ashr i32 %add48, 7, !dbg !398
  store i32 %shr49, i32* %a.addr.i, align 4, !dbg !399
  %44 = load i32, i32* %a.addr.i, align 4, !dbg !400
  %add.i = add i32 %44, 32768, !dbg !402
  %and.i = and i32 %add.i, -65536, !dbg !403
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !403
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !404

if.then.i:                                        ; preds = %for.body32
  %45 = load i32, i32* %a.addr.i, align 4, !dbg !405
  %shr.i = ashr i32 %45, 31, !dbg !407
  %xor.i = xor i32 %shr.i, 32767, !dbg !408
  %conv.i = trunc i32 %xor.i to i16, !dbg !409
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !410
  br label %av_clip_int16_c.exit, !dbg !410

if.else.i:                                        ; preds = %for.body32
  %46 = load i32, i32* %a.addr.i, align 4, !dbg !411
  %conv1.i = trunc i32 %46 to i16, !dbg !411
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !412
  br label %av_clip_int16_c.exit, !dbg !412

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %47 = load i16, i16* %retval.i, align 2, !dbg !413
  %48 = load i32, i32* %x, align 4, !dbg !414
  %shl50 = shl i32 %48, 0, !dbg !415
  %idxprom51 = sext i32 %shl50 to i64, !dbg !416
  %49 = load i16*, i16** %rgb0, align 8, !dbg !416
  %arrayidx52 = getelementptr inbounds i16, i16* %49, i64 %idxprom51, !dbg !416
  store i16 %47, i16* %arrayidx52, align 2, !dbg !417
  %50 = load i32, i32* %y00, align 4, !dbg !418
  %51 = load i32, i32* %cy, align 4, !dbg !419
  %mul53 = mul nsw i32 %50, %51, !dbg !420
  %52 = load i32, i32* %cgu, align 4, !dbg !421
  %53 = load i32, i32* %u, align 4, !dbg !422
  %mul54 = mul nsw i32 %52, %53, !dbg !423
  %add55 = add nsw i32 %mul53, %mul54, !dbg !424
  %54 = load i32, i32* %cgv, align 4, !dbg !425
  %55 = load i32, i32* %v, align 4, !dbg !426
  %mul56 = mul nsw i32 %54, %55, !dbg !427
  %add57 = add nsw i32 %add55, %mul56, !dbg !428
  %add58 = add nsw i32 %add57, 64, !dbg !429
  %shr59 = ashr i32 %add58, 7, !dbg !430
  store i32 %shr59, i32* %a.addr.i103, align 4, !dbg !431
  %56 = load i32, i32* %a.addr.i103, align 4, !dbg !432
  %add.i104 = add i32 %56, 32768, !dbg !433
  %and.i105 = and i32 %add.i104, -65536, !dbg !434
  %tobool.i106 = icmp ne i32 %and.i105, 0, !dbg !434
  br i1 %tobool.i106, label %if.then.i110, label %if.else.i112, !dbg !435

if.then.i110:                                     ; preds = %av_clip_int16_c.exit
  %57 = load i32, i32* %a.addr.i103, align 4, !dbg !436
  %shr.i107 = ashr i32 %57, 31, !dbg !437
  %xor.i108 = xor i32 %shr.i107, 32767, !dbg !438
  %conv.i109 = trunc i32 %xor.i108 to i16, !dbg !439
  store i16 %conv.i109, i16* %retval.i102, align 2, !dbg !440
  br label %av_clip_int16_c.exit113, !dbg !440

if.else.i112:                                     ; preds = %av_clip_int16_c.exit
  %58 = load i32, i32* %a.addr.i103, align 4, !dbg !441
  %conv1.i111 = trunc i32 %58 to i16, !dbg !441
  store i16 %conv1.i111, i16* %retval.i102, align 2, !dbg !442
  br label %av_clip_int16_c.exit113, !dbg !442

av_clip_int16_c.exit113:                          ; preds = %if.then.i110, %if.else.i112
  %59 = load i16, i16* %retval.i102, align 2, !dbg !443
  %60 = load i32, i32* %x, align 4, !dbg !444
  %shl61 = shl i32 %60, 0, !dbg !445
  %idxprom62 = sext i32 %shl61 to i64, !dbg !446
  %61 = load i16*, i16** %rgb1, align 8, !dbg !446
  %arrayidx63 = getelementptr inbounds i16, i16* %61, i64 %idxprom62, !dbg !446
  store i16 %59, i16* %arrayidx63, align 2, !dbg !447
  %62 = load i32, i32* %y00, align 4, !dbg !448
  %63 = load i32, i32* %cy, align 4, !dbg !449
  %mul64 = mul nsw i32 %62, %63, !dbg !450
  %64 = load i32, i32* %cbu, align 4, !dbg !451
  %65 = load i32, i32* %u, align 4, !dbg !452
  %mul65 = mul nsw i32 %64, %65, !dbg !453
  %add66 = add nsw i32 %mul64, %mul65, !dbg !454
  %add67 = add nsw i32 %add66, 64, !dbg !455
  %shr68 = ashr i32 %add67, 7, !dbg !456
  store i32 %shr68, i32* %a.addr.i91, align 4, !dbg !457
  %66 = load i32, i32* %a.addr.i91, align 4, !dbg !458
  %add.i92 = add i32 %66, 32768, !dbg !459
  %and.i93 = and i32 %add.i92, -65536, !dbg !460
  %tobool.i94 = icmp ne i32 %and.i93, 0, !dbg !460
  br i1 %tobool.i94, label %if.then.i98, label %if.else.i100, !dbg !461

if.then.i98:                                      ; preds = %av_clip_int16_c.exit113
  %67 = load i32, i32* %a.addr.i91, align 4, !dbg !462
  %shr.i95 = ashr i32 %67, 31, !dbg !463
  %xor.i96 = xor i32 %shr.i95, 32767, !dbg !464
  %conv.i97 = trunc i32 %xor.i96 to i16, !dbg !465
  store i16 %conv.i97, i16* %retval.i90, align 2, !dbg !466
  br label %av_clip_int16_c.exit101, !dbg !466

if.else.i100:                                     ; preds = %av_clip_int16_c.exit113
  %68 = load i32, i32* %a.addr.i91, align 4, !dbg !467
  %conv1.i99 = trunc i32 %68 to i16, !dbg !467
  store i16 %conv1.i99, i16* %retval.i90, align 2, !dbg !468
  br label %av_clip_int16_c.exit101, !dbg !468

av_clip_int16_c.exit101:                          ; preds = %if.then.i98, %if.else.i100
  %69 = load i16, i16* %retval.i90, align 2, !dbg !469
  %70 = load i32, i32* %x, align 4, !dbg !470
  %shl70 = shl i32 %70, 0, !dbg !471
  %idxprom71 = sext i32 %shl70 to i64, !dbg !472
  %71 = load i16*, i16** %rgb2, align 8, !dbg !472
  %arrayidx72 = getelementptr inbounds i16, i16* %71, i64 %idxprom71, !dbg !472
  store i16 %69, i16* %arrayidx72, align 2, !dbg !473
  br label %for.inc, !dbg !474

for.inc:                                          ; preds = %av_clip_int16_c.exit101
  %72 = load i32, i32* %x, align 4, !dbg !475
  %inc = add nsw i32 %72, 1, !dbg !475
  store i32 %inc, i32* %x, align 4, !dbg !475
  br label %for.cond29, !dbg !477, !llvm.loop !478

for.end:                                          ; preds = %for.cond29
  %73 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !480
  %arrayidx73 = getelementptr inbounds i64, i64* %73, i64 0, !dbg !480
  %74 = load i64, i64* %arrayidx73, align 8, !dbg !480
  %mul74 = mul nsw i64 %74, 1, !dbg !481
  %div = udiv i64 %mul74, 1, !dbg !482
  %75 = load i8*, i8** %yuv0, align 8, !dbg !483
  %add.ptr = getelementptr inbounds i8, i8* %75, i64 %div, !dbg !483
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !483
  %76 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !484
  %arrayidx75 = getelementptr inbounds i64, i64* %76, i64 1, !dbg !484
  %77 = load i64, i64* %arrayidx75, align 8, !dbg !484
  %div76 = udiv i64 %77, 1, !dbg !485
  %78 = load i8*, i8** %yuv1, align 8, !dbg !486
  %add.ptr77 = getelementptr inbounds i8, i8* %78, i64 %div76, !dbg !486
  store i8* %add.ptr77, i8** %yuv1, align 8, !dbg !486
  %79 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !487
  %arrayidx78 = getelementptr inbounds i64, i64* %79, i64 2, !dbg !487
  %80 = load i64, i64* %arrayidx78, align 8, !dbg !487
  %div79 = udiv i64 %80, 1, !dbg !488
  %81 = load i8*, i8** %yuv2, align 8, !dbg !489
  %add.ptr80 = getelementptr inbounds i8, i8* %81, i64 %div79, !dbg !489
  store i8* %add.ptr80, i8** %yuv2, align 8, !dbg !489
  %82 = load i64, i64* %rgb_stride.addr, align 8, !dbg !490
  %mul81 = mul nsw i64 %82, 1, !dbg !491
  %83 = load i16*, i16** %rgb0, align 8, !dbg !492
  %add.ptr82 = getelementptr inbounds i16, i16* %83, i64 %mul81, !dbg !492
  store i16* %add.ptr82, i16** %rgb0, align 8, !dbg !492
  %84 = load i64, i64* %rgb_stride.addr, align 8, !dbg !493
  %mul83 = mul nsw i64 %84, 1, !dbg !494
  %85 = load i16*, i16** %rgb1, align 8, !dbg !495
  %add.ptr84 = getelementptr inbounds i16, i16* %85, i64 %mul83, !dbg !495
  store i16* %add.ptr84, i16** %rgb1, align 8, !dbg !495
  %86 = load i64, i64* %rgb_stride.addr, align 8, !dbg !496
  %mul85 = mul nsw i64 %86, 1, !dbg !497
  %87 = load i16*, i16** %rgb2, align 8, !dbg !498
  %add.ptr86 = getelementptr inbounds i16, i16* %87, i64 %mul85, !dbg !498
  store i16* %add.ptr86, i16** %rgb2, align 8, !dbg !498
  br label %for.inc87, !dbg !499

for.inc87:                                        ; preds = %for.end
  %88 = load i32, i32* %y, align 4, !dbg !500
  %inc88 = add nsw i32 %88, 1, !dbg !500
  store i32 %inc88, i32* %y, align 4, !dbg !500
  br label %for.cond, !dbg !502, !llvm.loop !503

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !505
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_422p8_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !506 {
entry:
  %retval.i178 = alloca i16, align 2
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !267, metadata !94), !dbg !507
  %retval.i166 = alloca i16, align 2
  %a.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i167, metadata !267, metadata !94), !dbg !515
  %retval.i154 = alloca i16, align 2
  %a.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i155, metadata !267, metadata !94), !dbg !517
  %retval.i142 = alloca i16, align 2
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !267, metadata !94), !dbg !519
  %retval.i130 = alloca i16, align 2
  %a.addr.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i131, metadata !267, metadata !94), !dbg !521
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !523
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !525, metadata !94), !dbg !526
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !527, metadata !94), !dbg !528
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !529, metadata !94), !dbg !530
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !531, metadata !94), !dbg !532
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !533, metadata !94), !dbg !534
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !535, metadata !94), !dbg !536
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !537, metadata !94), !dbg !538
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !539, metadata !94), !dbg !540
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !541, metadata !94), !dbg !542
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !543
  store i8** %0, i8*** %yuv, align 8, !dbg !542
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !544, metadata !94), !dbg !545
  %1 = load i8**, i8*** %yuv, align 8, !dbg !546
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !546
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !546
  store i8* %2, i8** %yuv0, align 8, !dbg !545
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !547, metadata !94), !dbg !548
  %3 = load i8**, i8*** %yuv, align 8, !dbg !549
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !549
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !549
  store i8* %4, i8** %yuv1, align 8, !dbg !548
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !550, metadata !94), !dbg !551
  %5 = load i8**, i8*** %yuv, align 8, !dbg !552
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !552
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !552
  store i8* %6, i8** %yuv2, align 8, !dbg !551
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !553, metadata !94), !dbg !554
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !555
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !555
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !555
  store i16* %8, i16** %rgb0, align 8, !dbg !554
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !556, metadata !94), !dbg !557
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !558
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !558
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !558
  store i16* %10, i16** %rgb1, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !559, metadata !94), !dbg !560
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !561
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !561
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !561
  store i16* %12, i16** %rgb2, align 8, !dbg !560
  call void @llvm.dbg.declare(metadata i32* %y, metadata !562, metadata !94), !dbg !563
  call void @llvm.dbg.declare(metadata i32* %x, metadata !564, metadata !94), !dbg !565
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !566, metadata !94), !dbg !567
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !568
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !568
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !568
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !568
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !568
  %conv = sext i16 %14 to i32, !dbg !568
  store i32 %conv, i32* %cy, align 4, !dbg !567
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !569, metadata !94), !dbg !570
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !571
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !571
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !571
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !571
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !571
  %conv12 = sext i16 %16 to i32, !dbg !571
  store i32 %conv12, i32* %crv, align 4, !dbg !570
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !572, metadata !94), !dbg !573
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !574
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 1, !dbg !574
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !574
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !574
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !574
  %conv16 = sext i16 %18 to i32, !dbg !574
  store i32 %conv16, i32* %cgu, align 4, !dbg !573
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !575, metadata !94), !dbg !576
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !577
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !577
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !577
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !577
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !577
  %conv20 = sext i16 %20 to i32, !dbg !577
  store i32 %conv20, i32* %cgv, align 4, !dbg !576
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !578, metadata !94), !dbg !579
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !580
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 2, !dbg !580
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !580
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !580
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !580
  %conv24 = sext i16 %22 to i32, !dbg !580
  store i32 %conv24, i32* %cbu, align 4, !dbg !579
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !581, metadata !94), !dbg !582
  store i32 7, i32* %sh, align 4, !dbg !582
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !583, metadata !94), !dbg !584
  store i32 64, i32* %rnd, align 4, !dbg !584
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !585, metadata !94), !dbg !586
  store i32 128, i32* %uv_offset, align 4, !dbg !586
  %23 = load i32, i32* %w.addr, align 4, !dbg !587
  %add = add nsw i32 %23, 2, !dbg !588
  %sub = sub nsw i32 %add, 1, !dbg !589
  %shr = ashr i32 %sub, 1, !dbg !590
  store i32 %shr, i32* %w.addr, align 4, !dbg !591
  %24 = load i32, i32* %h.addr, align 4, !dbg !592
  %add25 = add nsw i32 %24, 1, !dbg !593
  %sub26 = sub nsw i32 %add25, 1, !dbg !594
  %shr27 = ashr i32 %sub26, 0, !dbg !595
  store i32 %shr27, i32* %h.addr, align 4, !dbg !596
  store i32 0, i32* %y, align 4, !dbg !597
  br label %for.cond, !dbg !598

for.cond:                                         ; preds = %for.inc127, %entry
  %25 = load i32, i32* %y, align 4, !dbg !599
  %26 = load i32, i32* %h.addr, align 4, !dbg !601
  %cmp = icmp slt i32 %25, %26, !dbg !602
  br i1 %cmp, label %for.body, label %for.end129, !dbg !603

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !604
  br label %for.cond29, !dbg !605

for.cond29:                                       ; preds = %for.inc, %for.body
  %27 = load i32, i32* %x, align 4, !dbg !606
  %28 = load i32, i32* %w.addr, align 4, !dbg !608
  %cmp30 = icmp slt i32 %27, %28, !dbg !609
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !610

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !611, metadata !94), !dbg !612
  %29 = load i32, i32* %x, align 4, !dbg !613
  %shl = shl i32 %29, 1, !dbg !614
  %idxprom = sext i32 %shl to i64, !dbg !615
  %30 = load i8*, i8** %yuv0, align 8, !dbg !615
  %arrayidx33 = getelementptr inbounds i8, i8* %30, i64 %idxprom, !dbg !615
  %31 = load i8, i8* %arrayidx33, align 1, !dbg !615
  %conv34 = zext i8 %31 to i32, !dbg !615
  %32 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !616
  %arrayidx35 = getelementptr inbounds i16, i16* %32, i64 0, !dbg !616
  %33 = load i16, i16* %arrayidx35, align 2, !dbg !616
  %conv36 = sext i16 %33 to i32, !dbg !616
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !617
  store i32 %sub37, i32* %y00, align 4, !dbg !612
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !618, metadata !94), !dbg !619
  %34 = load i32, i32* %x, align 4, !dbg !620
  %mul = mul nsw i32 2, %34, !dbg !621
  %add38 = add nsw i32 %mul, 1, !dbg !622
  %idxprom39 = sext i32 %add38 to i64, !dbg !623
  %35 = load i8*, i8** %yuv0, align 8, !dbg !623
  %arrayidx40 = getelementptr inbounds i8, i8* %35, i64 %idxprom39, !dbg !623
  %36 = load i8, i8* %arrayidx40, align 1, !dbg !623
  %conv41 = zext i8 %36 to i32, !dbg !623
  %37 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !624
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 0, !dbg !624
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !624
  %conv43 = sext i16 %38 to i32, !dbg !624
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !625
  store i32 %sub44, i32* %y01, align 4, !dbg !619
  call void @llvm.dbg.declare(metadata i32* %u, metadata !626, metadata !94), !dbg !627
  %39 = load i32, i32* %x, align 4, !dbg !628
  %idxprom45 = sext i32 %39 to i64, !dbg !629
  %40 = load i8*, i8** %yuv1, align 8, !dbg !629
  %arrayidx46 = getelementptr inbounds i8, i8* %40, i64 %idxprom45, !dbg !629
  %41 = load i8, i8* %arrayidx46, align 1, !dbg !629
  %conv47 = zext i8 %41 to i32, !dbg !629
  %sub48 = sub nsw i32 %conv47, 128, !dbg !630
  store i32 %sub48, i32* %u, align 4, !dbg !627
  call void @llvm.dbg.declare(metadata i32* %v, metadata !631, metadata !94), !dbg !632
  %42 = load i32, i32* %x, align 4, !dbg !633
  %idxprom49 = sext i32 %42 to i64, !dbg !634
  %43 = load i8*, i8** %yuv2, align 8, !dbg !634
  %arrayidx50 = getelementptr inbounds i8, i8* %43, i64 %idxprom49, !dbg !634
  %44 = load i8, i8* %arrayidx50, align 1, !dbg !634
  %conv51 = zext i8 %44 to i32, !dbg !634
  %sub52 = sub nsw i32 %conv51, 128, !dbg !635
  store i32 %sub52, i32* %v, align 4, !dbg !632
  %45 = load i32, i32* %y00, align 4, !dbg !636
  %46 = load i32, i32* %cy, align 4, !dbg !637
  %mul53 = mul nsw i32 %45, %46, !dbg !638
  %47 = load i32, i32* %crv, align 4, !dbg !639
  %48 = load i32, i32* %v, align 4, !dbg !640
  %mul54 = mul nsw i32 %47, %48, !dbg !641
  %add55 = add nsw i32 %mul53, %mul54, !dbg !642
  %add56 = add nsw i32 %add55, 64, !dbg !643
  %shr57 = ashr i32 %add56, 7, !dbg !644
  store i32 %shr57, i32* %a.addr.i, align 4, !dbg !645
  %49 = load i32, i32* %a.addr.i, align 4, !dbg !646
  %add.i = add i32 %49, 32768, !dbg !647
  %and.i = and i32 %add.i, -65536, !dbg !648
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !648
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !649

if.then.i:                                        ; preds = %for.body32
  %50 = load i32, i32* %a.addr.i, align 4, !dbg !650
  %shr.i = ashr i32 %50, 31, !dbg !651
  %xor.i = xor i32 %shr.i, 32767, !dbg !652
  %conv.i = trunc i32 %xor.i to i16, !dbg !653
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !654
  br label %av_clip_int16_c.exit, !dbg !654

if.else.i:                                        ; preds = %for.body32
  %51 = load i32, i32* %a.addr.i, align 4, !dbg !655
  %conv1.i = trunc i32 %51 to i16, !dbg !655
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !656
  br label %av_clip_int16_c.exit, !dbg !656

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %52 = load i16, i16* %retval.i, align 2, !dbg !657
  %53 = load i32, i32* %x, align 4, !dbg !658
  %shl58 = shl i32 %53, 1, !dbg !659
  %idxprom59 = sext i32 %shl58 to i64, !dbg !660
  %54 = load i16*, i16** %rgb0, align 8, !dbg !660
  %arrayidx60 = getelementptr inbounds i16, i16* %54, i64 %idxprom59, !dbg !660
  store i16 %52, i16* %arrayidx60, align 2, !dbg !661
  %55 = load i32, i32* %y01, align 4, !dbg !662
  %56 = load i32, i32* %cy, align 4, !dbg !663
  %mul61 = mul nsw i32 %55, %56, !dbg !664
  %57 = load i32, i32* %crv, align 4, !dbg !665
  %58 = load i32, i32* %v, align 4, !dbg !666
  %mul62 = mul nsw i32 %57, %58, !dbg !667
  %add63 = add nsw i32 %mul61, %mul62, !dbg !668
  %add64 = add nsw i32 %add63, 64, !dbg !669
  %shr65 = ashr i32 %add64, 7, !dbg !670
  store i32 %shr65, i32* %a.addr.i179, align 4, !dbg !671
  %59 = load i32, i32* %a.addr.i179, align 4, !dbg !672
  %add.i180 = add i32 %59, 32768, !dbg !673
  %and.i181 = and i32 %add.i180, -65536, !dbg !674
  %tobool.i182 = icmp ne i32 %and.i181, 0, !dbg !674
  br i1 %tobool.i182, label %if.then.i186, label %if.else.i188, !dbg !675

if.then.i186:                                     ; preds = %av_clip_int16_c.exit
  %60 = load i32, i32* %a.addr.i179, align 4, !dbg !676
  %shr.i183 = ashr i32 %60, 31, !dbg !677
  %xor.i184 = xor i32 %shr.i183, 32767, !dbg !678
  %conv.i185 = trunc i32 %xor.i184 to i16, !dbg !679
  store i16 %conv.i185, i16* %retval.i178, align 2, !dbg !680
  br label %av_clip_int16_c.exit189, !dbg !680

if.else.i188:                                     ; preds = %av_clip_int16_c.exit
  %61 = load i32, i32* %a.addr.i179, align 4, !dbg !681
  %conv1.i187 = trunc i32 %61 to i16, !dbg !681
  store i16 %conv1.i187, i16* %retval.i178, align 2, !dbg !682
  br label %av_clip_int16_c.exit189, !dbg !682

av_clip_int16_c.exit189:                          ; preds = %if.then.i186, %if.else.i188
  %62 = load i16, i16* %retval.i178, align 2, !dbg !683
  %63 = load i32, i32* %x, align 4, !dbg !684
  %mul67 = mul nsw i32 2, %63, !dbg !685
  %add68 = add nsw i32 %mul67, 1, !dbg !686
  %idxprom69 = sext i32 %add68 to i64, !dbg !687
  %64 = load i16*, i16** %rgb0, align 8, !dbg !687
  %arrayidx70 = getelementptr inbounds i16, i16* %64, i64 %idxprom69, !dbg !687
  store i16 %62, i16* %arrayidx70, align 2, !dbg !688
  %65 = load i32, i32* %y00, align 4, !dbg !689
  %66 = load i32, i32* %cy, align 4, !dbg !690
  %mul71 = mul nsw i32 %65, %66, !dbg !691
  %67 = load i32, i32* %cgu, align 4, !dbg !692
  %68 = load i32, i32* %u, align 4, !dbg !693
  %mul72 = mul nsw i32 %67, %68, !dbg !694
  %add73 = add nsw i32 %mul71, %mul72, !dbg !695
  %69 = load i32, i32* %cgv, align 4, !dbg !696
  %70 = load i32, i32* %v, align 4, !dbg !697
  %mul74 = mul nsw i32 %69, %70, !dbg !698
  %add75 = add nsw i32 %add73, %mul74, !dbg !699
  %add76 = add nsw i32 %add75, 64, !dbg !700
  %shr77 = ashr i32 %add76, 7, !dbg !701
  store i32 %shr77, i32* %a.addr.i167, align 4, !dbg !702
  %71 = load i32, i32* %a.addr.i167, align 4, !dbg !703
  %add.i168 = add i32 %71, 32768, !dbg !704
  %and.i169 = and i32 %add.i168, -65536, !dbg !705
  %tobool.i170 = icmp ne i32 %and.i169, 0, !dbg !705
  br i1 %tobool.i170, label %if.then.i174, label %if.else.i176, !dbg !706

if.then.i174:                                     ; preds = %av_clip_int16_c.exit189
  %72 = load i32, i32* %a.addr.i167, align 4, !dbg !707
  %shr.i171 = ashr i32 %72, 31, !dbg !708
  %xor.i172 = xor i32 %shr.i171, 32767, !dbg !709
  %conv.i173 = trunc i32 %xor.i172 to i16, !dbg !710
  store i16 %conv.i173, i16* %retval.i166, align 2, !dbg !711
  br label %av_clip_int16_c.exit177, !dbg !711

if.else.i176:                                     ; preds = %av_clip_int16_c.exit189
  %73 = load i32, i32* %a.addr.i167, align 4, !dbg !712
  %conv1.i175 = trunc i32 %73 to i16, !dbg !712
  store i16 %conv1.i175, i16* %retval.i166, align 2, !dbg !713
  br label %av_clip_int16_c.exit177, !dbg !713

av_clip_int16_c.exit177:                          ; preds = %if.then.i174, %if.else.i176
  %74 = load i16, i16* %retval.i166, align 2, !dbg !714
  %75 = load i32, i32* %x, align 4, !dbg !715
  %shl79 = shl i32 %75, 1, !dbg !716
  %idxprom80 = sext i32 %shl79 to i64, !dbg !717
  %76 = load i16*, i16** %rgb1, align 8, !dbg !717
  %arrayidx81 = getelementptr inbounds i16, i16* %76, i64 %idxprom80, !dbg !717
  store i16 %74, i16* %arrayidx81, align 2, !dbg !718
  %77 = load i32, i32* %y01, align 4, !dbg !719
  %78 = load i32, i32* %cy, align 4, !dbg !720
  %mul82 = mul nsw i32 %77, %78, !dbg !721
  %79 = load i32, i32* %cgu, align 4, !dbg !722
  %80 = load i32, i32* %u, align 4, !dbg !723
  %mul83 = mul nsw i32 %79, %80, !dbg !724
  %add84 = add nsw i32 %mul82, %mul83, !dbg !725
  %81 = load i32, i32* %cgv, align 4, !dbg !726
  %82 = load i32, i32* %v, align 4, !dbg !727
  %mul85 = mul nsw i32 %81, %82, !dbg !728
  %add86 = add nsw i32 %add84, %mul85, !dbg !729
  %add87 = add nsw i32 %add86, 64, !dbg !730
  %shr88 = ashr i32 %add87, 7, !dbg !731
  store i32 %shr88, i32* %a.addr.i155, align 4, !dbg !732
  %83 = load i32, i32* %a.addr.i155, align 4, !dbg !733
  %add.i156 = add i32 %83, 32768, !dbg !734
  %and.i157 = and i32 %add.i156, -65536, !dbg !735
  %tobool.i158 = icmp ne i32 %and.i157, 0, !dbg !735
  br i1 %tobool.i158, label %if.then.i162, label %if.else.i164, !dbg !736

if.then.i162:                                     ; preds = %av_clip_int16_c.exit177
  %84 = load i32, i32* %a.addr.i155, align 4, !dbg !737
  %shr.i159 = ashr i32 %84, 31, !dbg !738
  %xor.i160 = xor i32 %shr.i159, 32767, !dbg !739
  %conv.i161 = trunc i32 %xor.i160 to i16, !dbg !740
  store i16 %conv.i161, i16* %retval.i154, align 2, !dbg !741
  br label %av_clip_int16_c.exit165, !dbg !741

if.else.i164:                                     ; preds = %av_clip_int16_c.exit177
  %85 = load i32, i32* %a.addr.i155, align 4, !dbg !742
  %conv1.i163 = trunc i32 %85 to i16, !dbg !742
  store i16 %conv1.i163, i16* %retval.i154, align 2, !dbg !743
  br label %av_clip_int16_c.exit165, !dbg !743

av_clip_int16_c.exit165:                          ; preds = %if.then.i162, %if.else.i164
  %86 = load i16, i16* %retval.i154, align 2, !dbg !744
  %87 = load i32, i32* %x, align 4, !dbg !745
  %mul90 = mul nsw i32 2, %87, !dbg !746
  %add91 = add nsw i32 %mul90, 1, !dbg !747
  %idxprom92 = sext i32 %add91 to i64, !dbg !748
  %88 = load i16*, i16** %rgb1, align 8, !dbg !748
  %arrayidx93 = getelementptr inbounds i16, i16* %88, i64 %idxprom92, !dbg !748
  store i16 %86, i16* %arrayidx93, align 2, !dbg !749
  %89 = load i32, i32* %y00, align 4, !dbg !750
  %90 = load i32, i32* %cy, align 4, !dbg !751
  %mul94 = mul nsw i32 %89, %90, !dbg !752
  %91 = load i32, i32* %cbu, align 4, !dbg !753
  %92 = load i32, i32* %u, align 4, !dbg !754
  %mul95 = mul nsw i32 %91, %92, !dbg !755
  %add96 = add nsw i32 %mul94, %mul95, !dbg !756
  %add97 = add nsw i32 %add96, 64, !dbg !757
  %shr98 = ashr i32 %add97, 7, !dbg !758
  store i32 %shr98, i32* %a.addr.i143, align 4, !dbg !759
  %93 = load i32, i32* %a.addr.i143, align 4, !dbg !760
  %add.i144 = add i32 %93, 32768, !dbg !761
  %and.i145 = and i32 %add.i144, -65536, !dbg !762
  %tobool.i146 = icmp ne i32 %and.i145, 0, !dbg !762
  br i1 %tobool.i146, label %if.then.i150, label %if.else.i152, !dbg !763

if.then.i150:                                     ; preds = %av_clip_int16_c.exit165
  %94 = load i32, i32* %a.addr.i143, align 4, !dbg !764
  %shr.i147 = ashr i32 %94, 31, !dbg !765
  %xor.i148 = xor i32 %shr.i147, 32767, !dbg !766
  %conv.i149 = trunc i32 %xor.i148 to i16, !dbg !767
  store i16 %conv.i149, i16* %retval.i142, align 2, !dbg !768
  br label %av_clip_int16_c.exit153, !dbg !768

if.else.i152:                                     ; preds = %av_clip_int16_c.exit165
  %95 = load i32, i32* %a.addr.i143, align 4, !dbg !769
  %conv1.i151 = trunc i32 %95 to i16, !dbg !769
  store i16 %conv1.i151, i16* %retval.i142, align 2, !dbg !770
  br label %av_clip_int16_c.exit153, !dbg !770

av_clip_int16_c.exit153:                          ; preds = %if.then.i150, %if.else.i152
  %96 = load i16, i16* %retval.i142, align 2, !dbg !771
  %97 = load i32, i32* %x, align 4, !dbg !772
  %shl100 = shl i32 %97, 1, !dbg !773
  %idxprom101 = sext i32 %shl100 to i64, !dbg !774
  %98 = load i16*, i16** %rgb2, align 8, !dbg !774
  %arrayidx102 = getelementptr inbounds i16, i16* %98, i64 %idxprom101, !dbg !774
  store i16 %96, i16* %arrayidx102, align 2, !dbg !775
  %99 = load i32, i32* %y01, align 4, !dbg !776
  %100 = load i32, i32* %cy, align 4, !dbg !777
  %mul103 = mul nsw i32 %99, %100, !dbg !778
  %101 = load i32, i32* %cbu, align 4, !dbg !779
  %102 = load i32, i32* %u, align 4, !dbg !780
  %mul104 = mul nsw i32 %101, %102, !dbg !781
  %add105 = add nsw i32 %mul103, %mul104, !dbg !782
  %add106 = add nsw i32 %add105, 64, !dbg !783
  %shr107 = ashr i32 %add106, 7, !dbg !784
  store i32 %shr107, i32* %a.addr.i131, align 4, !dbg !785
  %103 = load i32, i32* %a.addr.i131, align 4, !dbg !786
  %add.i132 = add i32 %103, 32768, !dbg !787
  %and.i133 = and i32 %add.i132, -65536, !dbg !788
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !788
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !789

if.then.i138:                                     ; preds = %av_clip_int16_c.exit153
  %104 = load i32, i32* %a.addr.i131, align 4, !dbg !790
  %shr.i135 = ashr i32 %104, 31, !dbg !791
  %xor.i136 = xor i32 %shr.i135, 32767, !dbg !792
  %conv.i137 = trunc i32 %xor.i136 to i16, !dbg !793
  store i16 %conv.i137, i16* %retval.i130, align 2, !dbg !794
  br label %av_clip_int16_c.exit141, !dbg !794

if.else.i140:                                     ; preds = %av_clip_int16_c.exit153
  %105 = load i32, i32* %a.addr.i131, align 4, !dbg !795
  %conv1.i139 = trunc i32 %105 to i16, !dbg !795
  store i16 %conv1.i139, i16* %retval.i130, align 2, !dbg !796
  br label %av_clip_int16_c.exit141, !dbg !796

av_clip_int16_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %106 = load i16, i16* %retval.i130, align 2, !dbg !797
  %107 = load i32, i32* %x, align 4, !dbg !798
  %mul109 = mul nsw i32 2, %107, !dbg !799
  %add110 = add nsw i32 %mul109, 1, !dbg !800
  %idxprom111 = sext i32 %add110 to i64, !dbg !801
  %108 = load i16*, i16** %rgb2, align 8, !dbg !801
  %arrayidx112 = getelementptr inbounds i16, i16* %108, i64 %idxprom111, !dbg !801
  store i16 %106, i16* %arrayidx112, align 2, !dbg !802
  br label %for.inc, !dbg !803

for.inc:                                          ; preds = %av_clip_int16_c.exit141
  %109 = load i32, i32* %x, align 4, !dbg !804
  %inc = add nsw i32 %109, 1, !dbg !804
  store i32 %inc, i32* %x, align 4, !dbg !804
  br label %for.cond29, !dbg !806, !llvm.loop !807

for.end:                                          ; preds = %for.cond29
  %110 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !809
  %arrayidx113 = getelementptr inbounds i64, i64* %110, i64 0, !dbg !809
  %111 = load i64, i64* %arrayidx113, align 8, !dbg !809
  %mul114 = mul nsw i64 %111, 1, !dbg !810
  %div = udiv i64 %mul114, 1, !dbg !811
  %112 = load i8*, i8** %yuv0, align 8, !dbg !812
  %add.ptr = getelementptr inbounds i8, i8* %112, i64 %div, !dbg !812
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !812
  %113 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !813
  %arrayidx115 = getelementptr inbounds i64, i64* %113, i64 1, !dbg !813
  %114 = load i64, i64* %arrayidx115, align 8, !dbg !813
  %div116 = udiv i64 %114, 1, !dbg !814
  %115 = load i8*, i8** %yuv1, align 8, !dbg !815
  %add.ptr117 = getelementptr inbounds i8, i8* %115, i64 %div116, !dbg !815
  store i8* %add.ptr117, i8** %yuv1, align 8, !dbg !815
  %116 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !816
  %arrayidx118 = getelementptr inbounds i64, i64* %116, i64 2, !dbg !816
  %117 = load i64, i64* %arrayidx118, align 8, !dbg !816
  %div119 = udiv i64 %117, 1, !dbg !817
  %118 = load i8*, i8** %yuv2, align 8, !dbg !818
  %add.ptr120 = getelementptr inbounds i8, i8* %118, i64 %div119, !dbg !818
  store i8* %add.ptr120, i8** %yuv2, align 8, !dbg !818
  %119 = load i64, i64* %rgb_stride.addr, align 8, !dbg !819
  %mul121 = mul nsw i64 %119, 1, !dbg !820
  %120 = load i16*, i16** %rgb0, align 8, !dbg !821
  %add.ptr122 = getelementptr inbounds i16, i16* %120, i64 %mul121, !dbg !821
  store i16* %add.ptr122, i16** %rgb0, align 8, !dbg !821
  %121 = load i64, i64* %rgb_stride.addr, align 8, !dbg !822
  %mul123 = mul nsw i64 %121, 1, !dbg !823
  %122 = load i16*, i16** %rgb1, align 8, !dbg !824
  %add.ptr124 = getelementptr inbounds i16, i16* %122, i64 %mul123, !dbg !824
  store i16* %add.ptr124, i16** %rgb1, align 8, !dbg !824
  %123 = load i64, i64* %rgb_stride.addr, align 8, !dbg !825
  %mul125 = mul nsw i64 %123, 1, !dbg !826
  %124 = load i16*, i16** %rgb2, align 8, !dbg !827
  %add.ptr126 = getelementptr inbounds i16, i16* %124, i64 %mul125, !dbg !827
  store i16* %add.ptr126, i16** %rgb2, align 8, !dbg !827
  br label %for.inc127, !dbg !828

for.inc127:                                       ; preds = %for.end
  %125 = load i32, i32* %y, align 4, !dbg !829
  %inc128 = add nsw i32 %125, 1, !dbg !829
  store i32 %inc128, i32* %y, align 4, !dbg !829
  br label %for.cond, !dbg !831, !llvm.loop !832

for.end129:                                       ; preds = %for.cond
  ret void, !dbg !834
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_420p8_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !835 {
entry:
  %retval.i338 = alloca i16, align 2
  %a.addr.i339 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i339, metadata !267, metadata !94), !dbg !836
  %retval.i326 = alloca i16, align 2
  %a.addr.i327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i327, metadata !267, metadata !94), !dbg !844
  %retval.i314 = alloca i16, align 2
  %a.addr.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i315, metadata !267, metadata !94), !dbg !846
  %retval.i302 = alloca i16, align 2
  %a.addr.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i303, metadata !267, metadata !94), !dbg !848
  %retval.i290 = alloca i16, align 2
  %a.addr.i291 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i291, metadata !267, metadata !94), !dbg !850
  %retval.i278 = alloca i16, align 2
  %a.addr.i279 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i279, metadata !267, metadata !94), !dbg !852
  %retval.i266 = alloca i16, align 2
  %a.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i267, metadata !267, metadata !94), !dbg !854
  %retval.i254 = alloca i16, align 2
  %a.addr.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i255, metadata !267, metadata !94), !dbg !856
  %retval.i242 = alloca i16, align 2
  %a.addr.i243 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i243, metadata !267, metadata !94), !dbg !858
  %retval.i230 = alloca i16, align 2
  %a.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i231, metadata !267, metadata !94), !dbg !860
  %retval.i218 = alloca i16, align 2
  %a.addr.i219 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i219, metadata !267, metadata !94), !dbg !862
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !864
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !866, metadata !94), !dbg !867
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !868, metadata !94), !dbg !869
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !870, metadata !94), !dbg !871
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !872, metadata !94), !dbg !873
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !874, metadata !94), !dbg !875
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !876, metadata !94), !dbg !877
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !878, metadata !94), !dbg !879
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !880, metadata !94), !dbg !881
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !882, metadata !94), !dbg !883
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !884
  store i8** %0, i8*** %yuv, align 8, !dbg !883
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !885, metadata !94), !dbg !886
  %1 = load i8**, i8*** %yuv, align 8, !dbg !887
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !887
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !887
  store i8* %2, i8** %yuv0, align 8, !dbg !886
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !888, metadata !94), !dbg !889
  %3 = load i8**, i8*** %yuv, align 8, !dbg !890
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !890
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !890
  store i8* %4, i8** %yuv1, align 8, !dbg !889
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !891, metadata !94), !dbg !892
  %5 = load i8**, i8*** %yuv, align 8, !dbg !893
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !893
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !893
  store i8* %6, i8** %yuv2, align 8, !dbg !892
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !894, metadata !94), !dbg !895
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !896
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !896
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !896
  store i16* %8, i16** %rgb0, align 8, !dbg !895
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !897, metadata !94), !dbg !898
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !899
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !899
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !899
  store i16* %10, i16** %rgb1, align 8, !dbg !898
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !900, metadata !94), !dbg !901
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !902
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !902
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !902
  store i16* %12, i16** %rgb2, align 8, !dbg !901
  call void @llvm.dbg.declare(metadata i32* %y, metadata !903, metadata !94), !dbg !904
  call void @llvm.dbg.declare(metadata i32* %x, metadata !905, metadata !94), !dbg !906
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !907, metadata !94), !dbg !908
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !909
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !909
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !909
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !909
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !909
  %conv = sext i16 %14 to i32, !dbg !909
  store i32 %conv, i32* %cy, align 4, !dbg !908
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !910, metadata !94), !dbg !911
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !912
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !912
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !912
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !912
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !912
  %conv12 = sext i16 %16 to i32, !dbg !912
  store i32 %conv12, i32* %crv, align 4, !dbg !911
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !913, metadata !94), !dbg !914
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !915
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 1, !dbg !915
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !915
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !915
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !915
  %conv16 = sext i16 %18 to i32, !dbg !915
  store i32 %conv16, i32* %cgu, align 4, !dbg !914
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !916, metadata !94), !dbg !917
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !918
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !918
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !918
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !918
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !918
  %conv20 = sext i16 %20 to i32, !dbg !918
  store i32 %conv20, i32* %cgv, align 4, !dbg !917
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !919, metadata !94), !dbg !920
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !921
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 2, !dbg !921
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !921
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !921
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !921
  %conv24 = sext i16 %22 to i32, !dbg !921
  store i32 %conv24, i32* %cbu, align 4, !dbg !920
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !922, metadata !94), !dbg !923
  store i32 7, i32* %sh, align 4, !dbg !923
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !924, metadata !94), !dbg !925
  store i32 64, i32* %rnd, align 4, !dbg !925
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !926, metadata !94), !dbg !927
  store i32 128, i32* %uv_offset, align 4, !dbg !927
  %23 = load i32, i32* %w.addr, align 4, !dbg !928
  %add = add nsw i32 %23, 2, !dbg !929
  %sub = sub nsw i32 %add, 1, !dbg !930
  %shr = ashr i32 %sub, 1, !dbg !931
  store i32 %shr, i32* %w.addr, align 4, !dbg !932
  %24 = load i32, i32* %h.addr, align 4, !dbg !933
  %add25 = add nsw i32 %24, 2, !dbg !934
  %sub26 = sub nsw i32 %add25, 1, !dbg !935
  %shr27 = ashr i32 %sub26, 1, !dbg !936
  store i32 %shr27, i32* %h.addr, align 4, !dbg !937
  store i32 0, i32* %y, align 4, !dbg !938
  br label %for.cond, !dbg !939

for.cond:                                         ; preds = %for.inc215, %entry
  %25 = load i32, i32* %y, align 4, !dbg !940
  %26 = load i32, i32* %h.addr, align 4, !dbg !942
  %cmp = icmp slt i32 %25, %26, !dbg !943
  br i1 %cmp, label %for.body, label %for.end217, !dbg !944

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !945
  br label %for.cond29, !dbg !946

for.cond29:                                       ; preds = %for.inc, %for.body
  %27 = load i32, i32* %x, align 4, !dbg !947
  %28 = load i32, i32* %w.addr, align 4, !dbg !949
  %cmp30 = icmp slt i32 %27, %28, !dbg !950
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !951

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !952, metadata !94), !dbg !953
  %29 = load i32, i32* %x, align 4, !dbg !954
  %shl = shl i32 %29, 1, !dbg !955
  %idxprom = sext i32 %shl to i64, !dbg !956
  %30 = load i8*, i8** %yuv0, align 8, !dbg !956
  %arrayidx33 = getelementptr inbounds i8, i8* %30, i64 %idxprom, !dbg !956
  %31 = load i8, i8* %arrayidx33, align 1, !dbg !956
  %conv34 = zext i8 %31 to i32, !dbg !956
  %32 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !957
  %arrayidx35 = getelementptr inbounds i16, i16* %32, i64 0, !dbg !957
  %33 = load i16, i16* %arrayidx35, align 2, !dbg !957
  %conv36 = sext i16 %33 to i32, !dbg !957
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !958
  store i32 %sub37, i32* %y00, align 4, !dbg !953
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !959, metadata !94), !dbg !960
  %34 = load i32, i32* %x, align 4, !dbg !961
  %mul = mul nsw i32 2, %34, !dbg !962
  %add38 = add nsw i32 %mul, 1, !dbg !963
  %idxprom39 = sext i32 %add38 to i64, !dbg !964
  %35 = load i8*, i8** %yuv0, align 8, !dbg !964
  %arrayidx40 = getelementptr inbounds i8, i8* %35, i64 %idxprom39, !dbg !964
  %36 = load i8, i8* %arrayidx40, align 1, !dbg !964
  %conv41 = zext i8 %36 to i32, !dbg !964
  %37 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !965
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 0, !dbg !965
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !965
  %conv43 = sext i16 %38 to i32, !dbg !965
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !966
  store i32 %sub44, i32* %y01, align 4, !dbg !960
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !967, metadata !94), !dbg !968
  %39 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !969
  %arrayidx45 = getelementptr inbounds i64, i64* %39, i64 0, !dbg !969
  %40 = load i64, i64* %arrayidx45, align 8, !dbg !969
  %div = udiv i64 %40, 1, !dbg !970
  %41 = load i32, i32* %x, align 4, !dbg !971
  %mul46 = mul nsw i32 2, %41, !dbg !972
  %conv47 = sext i32 %mul46 to i64, !dbg !973
  %add48 = add i64 %div, %conv47, !dbg !974
  %42 = load i8*, i8** %yuv0, align 8, !dbg !975
  %arrayidx49 = getelementptr inbounds i8, i8* %42, i64 %add48, !dbg !975
  %43 = load i8, i8* %arrayidx49, align 1, !dbg !975
  %conv50 = zext i8 %43 to i32, !dbg !975
  %44 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !976
  %arrayidx51 = getelementptr inbounds i16, i16* %44, i64 0, !dbg !976
  %45 = load i16, i16* %arrayidx51, align 2, !dbg !976
  %conv52 = sext i16 %45 to i32, !dbg !976
  %sub53 = sub nsw i32 %conv50, %conv52, !dbg !977
  store i32 %sub53, i32* %y10, align 4, !dbg !968
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !978, metadata !94), !dbg !979
  %46 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !980
  %arrayidx54 = getelementptr inbounds i64, i64* %46, i64 0, !dbg !980
  %47 = load i64, i64* %arrayidx54, align 8, !dbg !980
  %div55 = udiv i64 %47, 1, !dbg !981
  %48 = load i32, i32* %x, align 4, !dbg !982
  %mul56 = mul nsw i32 2, %48, !dbg !983
  %conv57 = sext i32 %mul56 to i64, !dbg !984
  %add58 = add i64 %div55, %conv57, !dbg !985
  %add59 = add i64 %add58, 1, !dbg !986
  %49 = load i8*, i8** %yuv0, align 8, !dbg !987
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !987
  %50 = load i8, i8* %arrayidx60, align 1, !dbg !987
  %conv61 = zext i8 %50 to i32, !dbg !987
  %51 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !988
  %arrayidx62 = getelementptr inbounds i16, i16* %51, i64 0, !dbg !988
  %52 = load i16, i16* %arrayidx62, align 2, !dbg !988
  %conv63 = sext i16 %52 to i32, !dbg !988
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !989
  store i32 %sub64, i32* %y11, align 4, !dbg !979
  call void @llvm.dbg.declare(metadata i32* %u, metadata !990, metadata !94), !dbg !991
  %53 = load i32, i32* %x, align 4, !dbg !992
  %idxprom65 = sext i32 %53 to i64, !dbg !993
  %54 = load i8*, i8** %yuv1, align 8, !dbg !993
  %arrayidx66 = getelementptr inbounds i8, i8* %54, i64 %idxprom65, !dbg !993
  %55 = load i8, i8* %arrayidx66, align 1, !dbg !993
  %conv67 = zext i8 %55 to i32, !dbg !993
  %sub68 = sub nsw i32 %conv67, 128, !dbg !994
  store i32 %sub68, i32* %u, align 4, !dbg !991
  call void @llvm.dbg.declare(metadata i32* %v, metadata !995, metadata !94), !dbg !996
  %56 = load i32, i32* %x, align 4, !dbg !997
  %idxprom69 = sext i32 %56 to i64, !dbg !998
  %57 = load i8*, i8** %yuv2, align 8, !dbg !998
  %arrayidx70 = getelementptr inbounds i8, i8* %57, i64 %idxprom69, !dbg !998
  %58 = load i8, i8* %arrayidx70, align 1, !dbg !998
  %conv71 = zext i8 %58 to i32, !dbg !998
  %sub72 = sub nsw i32 %conv71, 128, !dbg !999
  store i32 %sub72, i32* %v, align 4, !dbg !996
  %59 = load i32, i32* %y00, align 4, !dbg !1000
  %60 = load i32, i32* %cy, align 4, !dbg !1001
  %mul73 = mul nsw i32 %59, %60, !dbg !1002
  %61 = load i32, i32* %crv, align 4, !dbg !1003
  %62 = load i32, i32* %v, align 4, !dbg !1004
  %mul74 = mul nsw i32 %61, %62, !dbg !1005
  %add75 = add nsw i32 %mul73, %mul74, !dbg !1006
  %add76 = add nsw i32 %add75, 64, !dbg !1007
  %shr77 = ashr i32 %add76, 7, !dbg !1008
  store i32 %shr77, i32* %a.addr.i, align 4, !dbg !1009
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !1010
  %add.i = add i32 %63, 32768, !dbg !1011
  %and.i = and i32 %add.i, -65536, !dbg !1012
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1012
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1013

if.then.i:                                        ; preds = %for.body32
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !1014
  %shr.i = ashr i32 %64, 31, !dbg !1015
  %xor.i = xor i32 %shr.i, 32767, !dbg !1016
  %conv.i = trunc i32 %xor.i to i16, !dbg !1017
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !1018
  br label %av_clip_int16_c.exit, !dbg !1018

if.else.i:                                        ; preds = %for.body32
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !1019
  %conv1.i = trunc i32 %65 to i16, !dbg !1019
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !1020
  br label %av_clip_int16_c.exit, !dbg !1020

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %66 = load i16, i16* %retval.i, align 2, !dbg !1021
  %67 = load i32, i32* %x, align 4, !dbg !1022
  %shl78 = shl i32 %67, 1, !dbg !1023
  %idxprom79 = sext i32 %shl78 to i64, !dbg !1024
  %68 = load i16*, i16** %rgb0, align 8, !dbg !1024
  %arrayidx80 = getelementptr inbounds i16, i16* %68, i64 %idxprom79, !dbg !1024
  store i16 %66, i16* %arrayidx80, align 2, !dbg !1025
  %69 = load i32, i32* %y01, align 4, !dbg !1026
  %70 = load i32, i32* %cy, align 4, !dbg !1027
  %mul81 = mul nsw i32 %69, %70, !dbg !1028
  %71 = load i32, i32* %crv, align 4, !dbg !1029
  %72 = load i32, i32* %v, align 4, !dbg !1030
  %mul82 = mul nsw i32 %71, %72, !dbg !1031
  %add83 = add nsw i32 %mul81, %mul82, !dbg !1032
  %add84 = add nsw i32 %add83, 64, !dbg !1033
  %shr85 = ashr i32 %add84, 7, !dbg !1034
  store i32 %shr85, i32* %a.addr.i339, align 4, !dbg !1035
  %73 = load i32, i32* %a.addr.i339, align 4, !dbg !1036
  %add.i340 = add i32 %73, 32768, !dbg !1037
  %and.i341 = and i32 %add.i340, -65536, !dbg !1038
  %tobool.i342 = icmp ne i32 %and.i341, 0, !dbg !1038
  br i1 %tobool.i342, label %if.then.i346, label %if.else.i348, !dbg !1039

if.then.i346:                                     ; preds = %av_clip_int16_c.exit
  %74 = load i32, i32* %a.addr.i339, align 4, !dbg !1040
  %shr.i343 = ashr i32 %74, 31, !dbg !1041
  %xor.i344 = xor i32 %shr.i343, 32767, !dbg !1042
  %conv.i345 = trunc i32 %xor.i344 to i16, !dbg !1043
  store i16 %conv.i345, i16* %retval.i338, align 2, !dbg !1044
  br label %av_clip_int16_c.exit349, !dbg !1044

if.else.i348:                                     ; preds = %av_clip_int16_c.exit
  %75 = load i32, i32* %a.addr.i339, align 4, !dbg !1045
  %conv1.i347 = trunc i32 %75 to i16, !dbg !1045
  store i16 %conv1.i347, i16* %retval.i338, align 2, !dbg !1046
  br label %av_clip_int16_c.exit349, !dbg !1046

av_clip_int16_c.exit349:                          ; preds = %if.then.i346, %if.else.i348
  %76 = load i16, i16* %retval.i338, align 2, !dbg !1047
  %77 = load i32, i32* %x, align 4, !dbg !1048
  %mul87 = mul nsw i32 2, %77, !dbg !1049
  %add88 = add nsw i32 %mul87, 1, !dbg !1050
  %idxprom89 = sext i32 %add88 to i64, !dbg !1051
  %78 = load i16*, i16** %rgb0, align 8, !dbg !1051
  %arrayidx90 = getelementptr inbounds i16, i16* %78, i64 %idxprom89, !dbg !1051
  store i16 %76, i16* %arrayidx90, align 2, !dbg !1052
  %79 = load i32, i32* %y10, align 4, !dbg !1053
  %80 = load i32, i32* %cy, align 4, !dbg !1054
  %mul91 = mul nsw i32 %79, %80, !dbg !1055
  %81 = load i32, i32* %crv, align 4, !dbg !1056
  %82 = load i32, i32* %v, align 4, !dbg !1057
  %mul92 = mul nsw i32 %81, %82, !dbg !1058
  %add93 = add nsw i32 %mul91, %mul92, !dbg !1059
  %add94 = add nsw i32 %add93, 64, !dbg !1060
  %shr95 = ashr i32 %add94, 7, !dbg !1061
  store i32 %shr95, i32* %a.addr.i327, align 4, !dbg !1062
  %83 = load i32, i32* %a.addr.i327, align 4, !dbg !1063
  %add.i328 = add i32 %83, 32768, !dbg !1064
  %and.i329 = and i32 %add.i328, -65536, !dbg !1065
  %tobool.i330 = icmp ne i32 %and.i329, 0, !dbg !1065
  br i1 %tobool.i330, label %if.then.i334, label %if.else.i336, !dbg !1066

if.then.i334:                                     ; preds = %av_clip_int16_c.exit349
  %84 = load i32, i32* %a.addr.i327, align 4, !dbg !1067
  %shr.i331 = ashr i32 %84, 31, !dbg !1068
  %xor.i332 = xor i32 %shr.i331, 32767, !dbg !1069
  %conv.i333 = trunc i32 %xor.i332 to i16, !dbg !1070
  store i16 %conv.i333, i16* %retval.i326, align 2, !dbg !1071
  br label %av_clip_int16_c.exit337, !dbg !1071

if.else.i336:                                     ; preds = %av_clip_int16_c.exit349
  %85 = load i32, i32* %a.addr.i327, align 4, !dbg !1072
  %conv1.i335 = trunc i32 %85 to i16, !dbg !1072
  store i16 %conv1.i335, i16* %retval.i326, align 2, !dbg !1073
  br label %av_clip_int16_c.exit337, !dbg !1073

av_clip_int16_c.exit337:                          ; preds = %if.then.i334, %if.else.i336
  %86 = load i16, i16* %retval.i326, align 2, !dbg !1074
  %87 = load i32, i32* %x, align 4, !dbg !1075
  %mul97 = mul nsw i32 2, %87, !dbg !1076
  %conv98 = sext i32 %mul97 to i64, !dbg !1077
  %88 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1078
  %add99 = add nsw i64 %conv98, %88, !dbg !1079
  %89 = load i16*, i16** %rgb0, align 8, !dbg !1080
  %arrayidx100 = getelementptr inbounds i16, i16* %89, i64 %add99, !dbg !1080
  store i16 %86, i16* %arrayidx100, align 2, !dbg !1081
  %90 = load i32, i32* %y11, align 4, !dbg !1082
  %91 = load i32, i32* %cy, align 4, !dbg !1083
  %mul101 = mul nsw i32 %90, %91, !dbg !1084
  %92 = load i32, i32* %crv, align 4, !dbg !1085
  %93 = load i32, i32* %v, align 4, !dbg !1086
  %mul102 = mul nsw i32 %92, %93, !dbg !1087
  %add103 = add nsw i32 %mul101, %mul102, !dbg !1088
  %add104 = add nsw i32 %add103, 64, !dbg !1089
  %shr105 = ashr i32 %add104, 7, !dbg !1090
  store i32 %shr105, i32* %a.addr.i315, align 4, !dbg !1091
  %94 = load i32, i32* %a.addr.i315, align 4, !dbg !1092
  %add.i316 = add i32 %94, 32768, !dbg !1093
  %and.i317 = and i32 %add.i316, -65536, !dbg !1094
  %tobool.i318 = icmp ne i32 %and.i317, 0, !dbg !1094
  br i1 %tobool.i318, label %if.then.i322, label %if.else.i324, !dbg !1095

if.then.i322:                                     ; preds = %av_clip_int16_c.exit337
  %95 = load i32, i32* %a.addr.i315, align 4, !dbg !1096
  %shr.i319 = ashr i32 %95, 31, !dbg !1097
  %xor.i320 = xor i32 %shr.i319, 32767, !dbg !1098
  %conv.i321 = trunc i32 %xor.i320 to i16, !dbg !1099
  store i16 %conv.i321, i16* %retval.i314, align 2, !dbg !1100
  br label %av_clip_int16_c.exit325, !dbg !1100

if.else.i324:                                     ; preds = %av_clip_int16_c.exit337
  %96 = load i32, i32* %a.addr.i315, align 4, !dbg !1101
  %conv1.i323 = trunc i32 %96 to i16, !dbg !1101
  store i16 %conv1.i323, i16* %retval.i314, align 2, !dbg !1102
  br label %av_clip_int16_c.exit325, !dbg !1102

av_clip_int16_c.exit325:                          ; preds = %if.then.i322, %if.else.i324
  %97 = load i16, i16* %retval.i314, align 2, !dbg !1103
  %98 = load i32, i32* %x, align 4, !dbg !1104
  %mul107 = mul nsw i32 2, %98, !dbg !1105
  %conv108 = sext i32 %mul107 to i64, !dbg !1106
  %99 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1107
  %add109 = add nsw i64 %conv108, %99, !dbg !1108
  %add110 = add nsw i64 %add109, 1, !dbg !1109
  %100 = load i16*, i16** %rgb0, align 8, !dbg !1110
  %arrayidx111 = getelementptr inbounds i16, i16* %100, i64 %add110, !dbg !1110
  store i16 %97, i16* %arrayidx111, align 2, !dbg !1111
  %101 = load i32, i32* %y00, align 4, !dbg !1112
  %102 = load i32, i32* %cy, align 4, !dbg !1113
  %mul112 = mul nsw i32 %101, %102, !dbg !1114
  %103 = load i32, i32* %cgu, align 4, !dbg !1115
  %104 = load i32, i32* %u, align 4, !dbg !1116
  %mul113 = mul nsw i32 %103, %104, !dbg !1117
  %add114 = add nsw i32 %mul112, %mul113, !dbg !1118
  %105 = load i32, i32* %cgv, align 4, !dbg !1119
  %106 = load i32, i32* %v, align 4, !dbg !1120
  %mul115 = mul nsw i32 %105, %106, !dbg !1121
  %add116 = add nsw i32 %add114, %mul115, !dbg !1122
  %add117 = add nsw i32 %add116, 64, !dbg !1123
  %shr118 = ashr i32 %add117, 7, !dbg !1124
  store i32 %shr118, i32* %a.addr.i303, align 4, !dbg !1125
  %107 = load i32, i32* %a.addr.i303, align 4, !dbg !1126
  %add.i304 = add i32 %107, 32768, !dbg !1127
  %and.i305 = and i32 %add.i304, -65536, !dbg !1128
  %tobool.i306 = icmp ne i32 %and.i305, 0, !dbg !1128
  br i1 %tobool.i306, label %if.then.i310, label %if.else.i312, !dbg !1129

if.then.i310:                                     ; preds = %av_clip_int16_c.exit325
  %108 = load i32, i32* %a.addr.i303, align 4, !dbg !1130
  %shr.i307 = ashr i32 %108, 31, !dbg !1131
  %xor.i308 = xor i32 %shr.i307, 32767, !dbg !1132
  %conv.i309 = trunc i32 %xor.i308 to i16, !dbg !1133
  store i16 %conv.i309, i16* %retval.i302, align 2, !dbg !1134
  br label %av_clip_int16_c.exit313, !dbg !1134

if.else.i312:                                     ; preds = %av_clip_int16_c.exit325
  %109 = load i32, i32* %a.addr.i303, align 4, !dbg !1135
  %conv1.i311 = trunc i32 %109 to i16, !dbg !1135
  store i16 %conv1.i311, i16* %retval.i302, align 2, !dbg !1136
  br label %av_clip_int16_c.exit313, !dbg !1136

av_clip_int16_c.exit313:                          ; preds = %if.then.i310, %if.else.i312
  %110 = load i16, i16* %retval.i302, align 2, !dbg !1137
  %111 = load i32, i32* %x, align 4, !dbg !1138
  %shl120 = shl i32 %111, 1, !dbg !1139
  %idxprom121 = sext i32 %shl120 to i64, !dbg !1140
  %112 = load i16*, i16** %rgb1, align 8, !dbg !1140
  %arrayidx122 = getelementptr inbounds i16, i16* %112, i64 %idxprom121, !dbg !1140
  store i16 %110, i16* %arrayidx122, align 2, !dbg !1141
  %113 = load i32, i32* %y01, align 4, !dbg !1142
  %114 = load i32, i32* %cy, align 4, !dbg !1143
  %mul123 = mul nsw i32 %113, %114, !dbg !1144
  %115 = load i32, i32* %cgu, align 4, !dbg !1145
  %116 = load i32, i32* %u, align 4, !dbg !1146
  %mul124 = mul nsw i32 %115, %116, !dbg !1147
  %add125 = add nsw i32 %mul123, %mul124, !dbg !1148
  %117 = load i32, i32* %cgv, align 4, !dbg !1149
  %118 = load i32, i32* %v, align 4, !dbg !1150
  %mul126 = mul nsw i32 %117, %118, !dbg !1151
  %add127 = add nsw i32 %add125, %mul126, !dbg !1152
  %add128 = add nsw i32 %add127, 64, !dbg !1153
  %shr129 = ashr i32 %add128, 7, !dbg !1154
  store i32 %shr129, i32* %a.addr.i291, align 4, !dbg !1155
  %119 = load i32, i32* %a.addr.i291, align 4, !dbg !1156
  %add.i292 = add i32 %119, 32768, !dbg !1157
  %and.i293 = and i32 %add.i292, -65536, !dbg !1158
  %tobool.i294 = icmp ne i32 %and.i293, 0, !dbg !1158
  br i1 %tobool.i294, label %if.then.i298, label %if.else.i300, !dbg !1159

if.then.i298:                                     ; preds = %av_clip_int16_c.exit313
  %120 = load i32, i32* %a.addr.i291, align 4, !dbg !1160
  %shr.i295 = ashr i32 %120, 31, !dbg !1161
  %xor.i296 = xor i32 %shr.i295, 32767, !dbg !1162
  %conv.i297 = trunc i32 %xor.i296 to i16, !dbg !1163
  store i16 %conv.i297, i16* %retval.i290, align 2, !dbg !1164
  br label %av_clip_int16_c.exit301, !dbg !1164

if.else.i300:                                     ; preds = %av_clip_int16_c.exit313
  %121 = load i32, i32* %a.addr.i291, align 4, !dbg !1165
  %conv1.i299 = trunc i32 %121 to i16, !dbg !1165
  store i16 %conv1.i299, i16* %retval.i290, align 2, !dbg !1166
  br label %av_clip_int16_c.exit301, !dbg !1166

av_clip_int16_c.exit301:                          ; preds = %if.then.i298, %if.else.i300
  %122 = load i16, i16* %retval.i290, align 2, !dbg !1167
  %123 = load i32, i32* %x, align 4, !dbg !1168
  %mul131 = mul nsw i32 2, %123, !dbg !1169
  %add132 = add nsw i32 %mul131, 1, !dbg !1170
  %idxprom133 = sext i32 %add132 to i64, !dbg !1171
  %124 = load i16*, i16** %rgb1, align 8, !dbg !1171
  %arrayidx134 = getelementptr inbounds i16, i16* %124, i64 %idxprom133, !dbg !1171
  store i16 %122, i16* %arrayidx134, align 2, !dbg !1172
  %125 = load i32, i32* %y10, align 4, !dbg !1173
  %126 = load i32, i32* %cy, align 4, !dbg !1174
  %mul135 = mul nsw i32 %125, %126, !dbg !1175
  %127 = load i32, i32* %cgu, align 4, !dbg !1176
  %128 = load i32, i32* %u, align 4, !dbg !1177
  %mul136 = mul nsw i32 %127, %128, !dbg !1178
  %add137 = add nsw i32 %mul135, %mul136, !dbg !1179
  %129 = load i32, i32* %cgv, align 4, !dbg !1180
  %130 = load i32, i32* %v, align 4, !dbg !1181
  %mul138 = mul nsw i32 %129, %130, !dbg !1182
  %add139 = add nsw i32 %add137, %mul138, !dbg !1183
  %add140 = add nsw i32 %add139, 64, !dbg !1184
  %shr141 = ashr i32 %add140, 7, !dbg !1185
  store i32 %shr141, i32* %a.addr.i279, align 4, !dbg !1186
  %131 = load i32, i32* %a.addr.i279, align 4, !dbg !1187
  %add.i280 = add i32 %131, 32768, !dbg !1188
  %and.i281 = and i32 %add.i280, -65536, !dbg !1189
  %tobool.i282 = icmp ne i32 %and.i281, 0, !dbg !1189
  br i1 %tobool.i282, label %if.then.i286, label %if.else.i288, !dbg !1190

if.then.i286:                                     ; preds = %av_clip_int16_c.exit301
  %132 = load i32, i32* %a.addr.i279, align 4, !dbg !1191
  %shr.i283 = ashr i32 %132, 31, !dbg !1192
  %xor.i284 = xor i32 %shr.i283, 32767, !dbg !1193
  %conv.i285 = trunc i32 %xor.i284 to i16, !dbg !1194
  store i16 %conv.i285, i16* %retval.i278, align 2, !dbg !1195
  br label %av_clip_int16_c.exit289, !dbg !1195

if.else.i288:                                     ; preds = %av_clip_int16_c.exit301
  %133 = load i32, i32* %a.addr.i279, align 4, !dbg !1196
  %conv1.i287 = trunc i32 %133 to i16, !dbg !1196
  store i16 %conv1.i287, i16* %retval.i278, align 2, !dbg !1197
  br label %av_clip_int16_c.exit289, !dbg !1197

av_clip_int16_c.exit289:                          ; preds = %if.then.i286, %if.else.i288
  %134 = load i16, i16* %retval.i278, align 2, !dbg !1198
  %135 = load i32, i32* %x, align 4, !dbg !1199
  %mul143 = mul nsw i32 2, %135, !dbg !1200
  %conv144 = sext i32 %mul143 to i64, !dbg !1201
  %136 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1202
  %add145 = add nsw i64 %conv144, %136, !dbg !1203
  %137 = load i16*, i16** %rgb1, align 8, !dbg !1204
  %arrayidx146 = getelementptr inbounds i16, i16* %137, i64 %add145, !dbg !1204
  store i16 %134, i16* %arrayidx146, align 2, !dbg !1205
  %138 = load i32, i32* %y11, align 4, !dbg !1206
  %139 = load i32, i32* %cy, align 4, !dbg !1207
  %mul147 = mul nsw i32 %138, %139, !dbg !1208
  %140 = load i32, i32* %cgu, align 4, !dbg !1209
  %141 = load i32, i32* %u, align 4, !dbg !1210
  %mul148 = mul nsw i32 %140, %141, !dbg !1211
  %add149 = add nsw i32 %mul147, %mul148, !dbg !1212
  %142 = load i32, i32* %cgv, align 4, !dbg !1213
  %143 = load i32, i32* %v, align 4, !dbg !1214
  %mul150 = mul nsw i32 %142, %143, !dbg !1215
  %add151 = add nsw i32 %add149, %mul150, !dbg !1216
  %add152 = add nsw i32 %add151, 64, !dbg !1217
  %shr153 = ashr i32 %add152, 7, !dbg !1218
  store i32 %shr153, i32* %a.addr.i267, align 4, !dbg !1219
  %144 = load i32, i32* %a.addr.i267, align 4, !dbg !1220
  %add.i268 = add i32 %144, 32768, !dbg !1221
  %and.i269 = and i32 %add.i268, -65536, !dbg !1222
  %tobool.i270 = icmp ne i32 %and.i269, 0, !dbg !1222
  br i1 %tobool.i270, label %if.then.i274, label %if.else.i276, !dbg !1223

if.then.i274:                                     ; preds = %av_clip_int16_c.exit289
  %145 = load i32, i32* %a.addr.i267, align 4, !dbg !1224
  %shr.i271 = ashr i32 %145, 31, !dbg !1225
  %xor.i272 = xor i32 %shr.i271, 32767, !dbg !1226
  %conv.i273 = trunc i32 %xor.i272 to i16, !dbg !1227
  store i16 %conv.i273, i16* %retval.i266, align 2, !dbg !1228
  br label %av_clip_int16_c.exit277, !dbg !1228

if.else.i276:                                     ; preds = %av_clip_int16_c.exit289
  %146 = load i32, i32* %a.addr.i267, align 4, !dbg !1229
  %conv1.i275 = trunc i32 %146 to i16, !dbg !1229
  store i16 %conv1.i275, i16* %retval.i266, align 2, !dbg !1230
  br label %av_clip_int16_c.exit277, !dbg !1230

av_clip_int16_c.exit277:                          ; preds = %if.then.i274, %if.else.i276
  %147 = load i16, i16* %retval.i266, align 2, !dbg !1231
  %148 = load i32, i32* %x, align 4, !dbg !1232
  %mul155 = mul nsw i32 2, %148, !dbg !1233
  %conv156 = sext i32 %mul155 to i64, !dbg !1234
  %149 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1235
  %add157 = add nsw i64 %conv156, %149, !dbg !1236
  %add158 = add nsw i64 %add157, 1, !dbg !1237
  %150 = load i16*, i16** %rgb1, align 8, !dbg !1238
  %arrayidx159 = getelementptr inbounds i16, i16* %150, i64 %add158, !dbg !1238
  store i16 %147, i16* %arrayidx159, align 2, !dbg !1239
  %151 = load i32, i32* %y00, align 4, !dbg !1240
  %152 = load i32, i32* %cy, align 4, !dbg !1241
  %mul160 = mul nsw i32 %151, %152, !dbg !1242
  %153 = load i32, i32* %cbu, align 4, !dbg !1243
  %154 = load i32, i32* %u, align 4, !dbg !1244
  %mul161 = mul nsw i32 %153, %154, !dbg !1245
  %add162 = add nsw i32 %mul160, %mul161, !dbg !1246
  %add163 = add nsw i32 %add162, 64, !dbg !1247
  %shr164 = ashr i32 %add163, 7, !dbg !1248
  store i32 %shr164, i32* %a.addr.i255, align 4, !dbg !1249
  %155 = load i32, i32* %a.addr.i255, align 4, !dbg !1250
  %add.i256 = add i32 %155, 32768, !dbg !1251
  %and.i257 = and i32 %add.i256, -65536, !dbg !1252
  %tobool.i258 = icmp ne i32 %and.i257, 0, !dbg !1252
  br i1 %tobool.i258, label %if.then.i262, label %if.else.i264, !dbg !1253

if.then.i262:                                     ; preds = %av_clip_int16_c.exit277
  %156 = load i32, i32* %a.addr.i255, align 4, !dbg !1254
  %shr.i259 = ashr i32 %156, 31, !dbg !1255
  %xor.i260 = xor i32 %shr.i259, 32767, !dbg !1256
  %conv.i261 = trunc i32 %xor.i260 to i16, !dbg !1257
  store i16 %conv.i261, i16* %retval.i254, align 2, !dbg !1258
  br label %av_clip_int16_c.exit265, !dbg !1258

if.else.i264:                                     ; preds = %av_clip_int16_c.exit277
  %157 = load i32, i32* %a.addr.i255, align 4, !dbg !1259
  %conv1.i263 = trunc i32 %157 to i16, !dbg !1259
  store i16 %conv1.i263, i16* %retval.i254, align 2, !dbg !1260
  br label %av_clip_int16_c.exit265, !dbg !1260

av_clip_int16_c.exit265:                          ; preds = %if.then.i262, %if.else.i264
  %158 = load i16, i16* %retval.i254, align 2, !dbg !1261
  %159 = load i32, i32* %x, align 4, !dbg !1262
  %shl166 = shl i32 %159, 1, !dbg !1263
  %idxprom167 = sext i32 %shl166 to i64, !dbg !1264
  %160 = load i16*, i16** %rgb2, align 8, !dbg !1264
  %arrayidx168 = getelementptr inbounds i16, i16* %160, i64 %idxprom167, !dbg !1264
  store i16 %158, i16* %arrayidx168, align 2, !dbg !1265
  %161 = load i32, i32* %y01, align 4, !dbg !1266
  %162 = load i32, i32* %cy, align 4, !dbg !1267
  %mul169 = mul nsw i32 %161, %162, !dbg !1268
  %163 = load i32, i32* %cbu, align 4, !dbg !1269
  %164 = load i32, i32* %u, align 4, !dbg !1270
  %mul170 = mul nsw i32 %163, %164, !dbg !1271
  %add171 = add nsw i32 %mul169, %mul170, !dbg !1272
  %add172 = add nsw i32 %add171, 64, !dbg !1273
  %shr173 = ashr i32 %add172, 7, !dbg !1274
  store i32 %shr173, i32* %a.addr.i243, align 4, !dbg !1275
  %165 = load i32, i32* %a.addr.i243, align 4, !dbg !1276
  %add.i244 = add i32 %165, 32768, !dbg !1277
  %and.i245 = and i32 %add.i244, -65536, !dbg !1278
  %tobool.i246 = icmp ne i32 %and.i245, 0, !dbg !1278
  br i1 %tobool.i246, label %if.then.i250, label %if.else.i252, !dbg !1279

if.then.i250:                                     ; preds = %av_clip_int16_c.exit265
  %166 = load i32, i32* %a.addr.i243, align 4, !dbg !1280
  %shr.i247 = ashr i32 %166, 31, !dbg !1281
  %xor.i248 = xor i32 %shr.i247, 32767, !dbg !1282
  %conv.i249 = trunc i32 %xor.i248 to i16, !dbg !1283
  store i16 %conv.i249, i16* %retval.i242, align 2, !dbg !1284
  br label %av_clip_int16_c.exit253, !dbg !1284

if.else.i252:                                     ; preds = %av_clip_int16_c.exit265
  %167 = load i32, i32* %a.addr.i243, align 4, !dbg !1285
  %conv1.i251 = trunc i32 %167 to i16, !dbg !1285
  store i16 %conv1.i251, i16* %retval.i242, align 2, !dbg !1286
  br label %av_clip_int16_c.exit253, !dbg !1286

av_clip_int16_c.exit253:                          ; preds = %if.then.i250, %if.else.i252
  %168 = load i16, i16* %retval.i242, align 2, !dbg !1287
  %169 = load i32, i32* %x, align 4, !dbg !1288
  %mul175 = mul nsw i32 2, %169, !dbg !1289
  %add176 = add nsw i32 %mul175, 1, !dbg !1290
  %idxprom177 = sext i32 %add176 to i64, !dbg !1291
  %170 = load i16*, i16** %rgb2, align 8, !dbg !1291
  %arrayidx178 = getelementptr inbounds i16, i16* %170, i64 %idxprom177, !dbg !1291
  store i16 %168, i16* %arrayidx178, align 2, !dbg !1292
  %171 = load i32, i32* %y10, align 4, !dbg !1293
  %172 = load i32, i32* %cy, align 4, !dbg !1294
  %mul179 = mul nsw i32 %171, %172, !dbg !1295
  %173 = load i32, i32* %cbu, align 4, !dbg !1296
  %174 = load i32, i32* %u, align 4, !dbg !1297
  %mul180 = mul nsw i32 %173, %174, !dbg !1298
  %add181 = add nsw i32 %mul179, %mul180, !dbg !1299
  %add182 = add nsw i32 %add181, 64, !dbg !1300
  %shr183 = ashr i32 %add182, 7, !dbg !1301
  store i32 %shr183, i32* %a.addr.i231, align 4, !dbg !1302
  %175 = load i32, i32* %a.addr.i231, align 4, !dbg !1303
  %add.i232 = add i32 %175, 32768, !dbg !1304
  %and.i233 = and i32 %add.i232, -65536, !dbg !1305
  %tobool.i234 = icmp ne i32 %and.i233, 0, !dbg !1305
  br i1 %tobool.i234, label %if.then.i238, label %if.else.i240, !dbg !1306

if.then.i238:                                     ; preds = %av_clip_int16_c.exit253
  %176 = load i32, i32* %a.addr.i231, align 4, !dbg !1307
  %shr.i235 = ashr i32 %176, 31, !dbg !1308
  %xor.i236 = xor i32 %shr.i235, 32767, !dbg !1309
  %conv.i237 = trunc i32 %xor.i236 to i16, !dbg !1310
  store i16 %conv.i237, i16* %retval.i230, align 2, !dbg !1311
  br label %av_clip_int16_c.exit241, !dbg !1311

if.else.i240:                                     ; preds = %av_clip_int16_c.exit253
  %177 = load i32, i32* %a.addr.i231, align 4, !dbg !1312
  %conv1.i239 = trunc i32 %177 to i16, !dbg !1312
  store i16 %conv1.i239, i16* %retval.i230, align 2, !dbg !1313
  br label %av_clip_int16_c.exit241, !dbg !1313

av_clip_int16_c.exit241:                          ; preds = %if.then.i238, %if.else.i240
  %178 = load i16, i16* %retval.i230, align 2, !dbg !1314
  %179 = load i32, i32* %x, align 4, !dbg !1315
  %mul185 = mul nsw i32 2, %179, !dbg !1316
  %conv186 = sext i32 %mul185 to i64, !dbg !1317
  %180 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1318
  %add187 = add nsw i64 %conv186, %180, !dbg !1319
  %181 = load i16*, i16** %rgb2, align 8, !dbg !1320
  %arrayidx188 = getelementptr inbounds i16, i16* %181, i64 %add187, !dbg !1320
  store i16 %178, i16* %arrayidx188, align 2, !dbg !1321
  %182 = load i32, i32* %y11, align 4, !dbg !1322
  %183 = load i32, i32* %cy, align 4, !dbg !1323
  %mul189 = mul nsw i32 %182, %183, !dbg !1324
  %184 = load i32, i32* %cbu, align 4, !dbg !1325
  %185 = load i32, i32* %u, align 4, !dbg !1326
  %mul190 = mul nsw i32 %184, %185, !dbg !1327
  %add191 = add nsw i32 %mul189, %mul190, !dbg !1328
  %add192 = add nsw i32 %add191, 64, !dbg !1329
  %shr193 = ashr i32 %add192, 7, !dbg !1330
  store i32 %shr193, i32* %a.addr.i219, align 4, !dbg !1331
  %186 = load i32, i32* %a.addr.i219, align 4, !dbg !1332
  %add.i220 = add i32 %186, 32768, !dbg !1333
  %and.i221 = and i32 %add.i220, -65536, !dbg !1334
  %tobool.i222 = icmp ne i32 %and.i221, 0, !dbg !1334
  br i1 %tobool.i222, label %if.then.i226, label %if.else.i228, !dbg !1335

if.then.i226:                                     ; preds = %av_clip_int16_c.exit241
  %187 = load i32, i32* %a.addr.i219, align 4, !dbg !1336
  %shr.i223 = ashr i32 %187, 31, !dbg !1337
  %xor.i224 = xor i32 %shr.i223, 32767, !dbg !1338
  %conv.i225 = trunc i32 %xor.i224 to i16, !dbg !1339
  store i16 %conv.i225, i16* %retval.i218, align 2, !dbg !1340
  br label %av_clip_int16_c.exit229, !dbg !1340

if.else.i228:                                     ; preds = %av_clip_int16_c.exit241
  %188 = load i32, i32* %a.addr.i219, align 4, !dbg !1341
  %conv1.i227 = trunc i32 %188 to i16, !dbg !1341
  store i16 %conv1.i227, i16* %retval.i218, align 2, !dbg !1342
  br label %av_clip_int16_c.exit229, !dbg !1342

av_clip_int16_c.exit229:                          ; preds = %if.then.i226, %if.else.i228
  %189 = load i16, i16* %retval.i218, align 2, !dbg !1343
  %190 = load i32, i32* %x, align 4, !dbg !1344
  %mul195 = mul nsw i32 2, %190, !dbg !1345
  %conv196 = sext i32 %mul195 to i64, !dbg !1346
  %191 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1347
  %add197 = add nsw i64 %conv196, %191, !dbg !1348
  %add198 = add nsw i64 %add197, 1, !dbg !1349
  %192 = load i16*, i16** %rgb2, align 8, !dbg !1350
  %arrayidx199 = getelementptr inbounds i16, i16* %192, i64 %add198, !dbg !1350
  store i16 %189, i16* %arrayidx199, align 2, !dbg !1351
  br label %for.inc, !dbg !1352

for.inc:                                          ; preds = %av_clip_int16_c.exit229
  %193 = load i32, i32* %x, align 4, !dbg !1353
  %inc = add nsw i32 %193, 1, !dbg !1353
  store i32 %inc, i32* %x, align 4, !dbg !1353
  br label %for.cond29, !dbg !1355, !llvm.loop !1356

for.end:                                          ; preds = %for.cond29
  %194 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1358
  %arrayidx200 = getelementptr inbounds i64, i64* %194, i64 0, !dbg !1358
  %195 = load i64, i64* %arrayidx200, align 8, !dbg !1358
  %mul201 = mul nsw i64 %195, 2, !dbg !1359
  %div202 = udiv i64 %mul201, 1, !dbg !1360
  %196 = load i8*, i8** %yuv0, align 8, !dbg !1361
  %add.ptr = getelementptr inbounds i8, i8* %196, i64 %div202, !dbg !1361
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !1361
  %197 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1362
  %arrayidx203 = getelementptr inbounds i64, i64* %197, i64 1, !dbg !1362
  %198 = load i64, i64* %arrayidx203, align 8, !dbg !1362
  %div204 = udiv i64 %198, 1, !dbg !1363
  %199 = load i8*, i8** %yuv1, align 8, !dbg !1364
  %add.ptr205 = getelementptr inbounds i8, i8* %199, i64 %div204, !dbg !1364
  store i8* %add.ptr205, i8** %yuv1, align 8, !dbg !1364
  %200 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1365
  %arrayidx206 = getelementptr inbounds i64, i64* %200, i64 2, !dbg !1365
  %201 = load i64, i64* %arrayidx206, align 8, !dbg !1365
  %div207 = udiv i64 %201, 1, !dbg !1366
  %202 = load i8*, i8** %yuv2, align 8, !dbg !1367
  %add.ptr208 = getelementptr inbounds i8, i8* %202, i64 %div207, !dbg !1367
  store i8* %add.ptr208, i8** %yuv2, align 8, !dbg !1367
  %203 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1368
  %mul209 = mul nsw i64 %203, 2, !dbg !1369
  %204 = load i16*, i16** %rgb0, align 8, !dbg !1370
  %add.ptr210 = getelementptr inbounds i16, i16* %204, i64 %mul209, !dbg !1370
  store i16* %add.ptr210, i16** %rgb0, align 8, !dbg !1370
  %205 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1371
  %mul211 = mul nsw i64 %205, 2, !dbg !1372
  %206 = load i16*, i16** %rgb1, align 8, !dbg !1373
  %add.ptr212 = getelementptr inbounds i16, i16* %206, i64 %mul211, !dbg !1373
  store i16* %add.ptr212, i16** %rgb1, align 8, !dbg !1373
  %207 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1374
  %mul213 = mul nsw i64 %207, 2, !dbg !1375
  %208 = load i16*, i16** %rgb2, align 8, !dbg !1376
  %add.ptr214 = getelementptr inbounds i16, i16* %208, i64 %mul213, !dbg !1376
  store i16* %add.ptr214, i16** %rgb2, align 8, !dbg !1376
  br label %for.inc215, !dbg !1377

for.inc215:                                       ; preds = %for.end
  %209 = load i32, i32* %y, align 4, !dbg !1378
  %inc216 = add nsw i32 %209, 1, !dbg !1378
  store i32 %inc216, i32* %y, align 4, !dbg !1378
  br label %for.cond, !dbg !1380, !llvm.loop !1381

for.end217:                                       ; preds = %for.cond
  ret void, !dbg !1383
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_444p10_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !1384 {
entry:
  %retval.i102 = alloca i16, align 2
  %a.addr.i103 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i103, metadata !267, metadata !94), !dbg !1385
  %retval.i90 = alloca i16, align 2
  %a.addr.i91 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i91, metadata !267, metadata !94), !dbg !1393
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !1395
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !1397, metadata !94), !dbg !1398
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !1399, metadata !94), !dbg !1400
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !1401, metadata !94), !dbg !1402
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !1403, metadata !94), !dbg !1404
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !1405, metadata !94), !dbg !1406
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1407, metadata !94), !dbg !1408
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !1409, metadata !94), !dbg !1410
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !1411, metadata !94), !dbg !1412
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !1413, metadata !94), !dbg !1414
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !1415
  %1 = bitcast i8** %0 to i16**, !dbg !1416
  store i16** %1, i16*** %yuv, align 8, !dbg !1414
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !1417, metadata !94), !dbg !1420
  %2 = load i16**, i16*** %yuv, align 8, !dbg !1421
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !1421
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !1421
  store i16* %3, i16** %yuv0, align 8, !dbg !1420
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !1422, metadata !94), !dbg !1423
  %4 = load i16**, i16*** %yuv, align 8, !dbg !1424
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !1424
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !1424
  store i16* %5, i16** %yuv1, align 8, !dbg !1423
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !1425, metadata !94), !dbg !1426
  %6 = load i16**, i16*** %yuv, align 8, !dbg !1427
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !1427
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !1427
  store i16* %7, i16** %yuv2, align 8, !dbg !1426
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !1428, metadata !94), !dbg !1429
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !1430
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !1430
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !1430
  store i16* %9, i16** %rgb0, align 8, !dbg !1429
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !1431, metadata !94), !dbg !1432
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !1433
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !1433
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !1433
  store i16* %11, i16** %rgb1, align 8, !dbg !1432
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !1434, metadata !94), !dbg !1435
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !1436
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !1436
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !1436
  store i16* %13, i16** %rgb2, align 8, !dbg !1435
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1437, metadata !94), !dbg !1438
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1439, metadata !94), !dbg !1440
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !1441, metadata !94), !dbg !1442
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1443
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !1443
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !1443
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !1443
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !1443
  %conv = sext i16 %15 to i32, !dbg !1443
  store i32 %conv, i32* %cy, align 4, !dbg !1442
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !1444, metadata !94), !dbg !1445
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1446
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !1446
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !1446
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !1446
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !1446
  %conv12 = sext i16 %17 to i32, !dbg !1446
  store i32 %conv12, i32* %crv, align 4, !dbg !1445
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !1447, metadata !94), !dbg !1448
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1449
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !1449
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !1449
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !1449
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !1449
  %conv16 = sext i16 %19 to i32, !dbg !1449
  store i32 %conv16, i32* %cgu, align 4, !dbg !1448
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !1450, metadata !94), !dbg !1451
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1452
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !1452
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !1452
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !1452
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !1452
  %conv20 = sext i16 %21 to i32, !dbg !1452
  store i32 %conv20, i32* %cgv, align 4, !dbg !1451
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !1453, metadata !94), !dbg !1454
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1455
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !1455
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !1455
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !1455
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !1455
  %conv24 = sext i16 %23 to i32, !dbg !1455
  store i32 %conv24, i32* %cbu, align 4, !dbg !1454
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !1456, metadata !94), !dbg !1457
  store i32 9, i32* %sh, align 4, !dbg !1457
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !1458, metadata !94), !dbg !1459
  store i32 256, i32* %rnd, align 4, !dbg !1459
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !1460, metadata !94), !dbg !1461
  store i32 512, i32* %uv_offset, align 4, !dbg !1461
  %24 = load i32, i32* %w.addr, align 4, !dbg !1462
  %add = add nsw i32 %24, 1, !dbg !1463
  %sub = sub nsw i32 %add, 1, !dbg !1464
  %shr = ashr i32 %sub, 0, !dbg !1465
  store i32 %shr, i32* %w.addr, align 4, !dbg !1466
  %25 = load i32, i32* %h.addr, align 4, !dbg !1467
  %add25 = add nsw i32 %25, 1, !dbg !1468
  %sub26 = sub nsw i32 %add25, 1, !dbg !1469
  %shr27 = ashr i32 %sub26, 0, !dbg !1470
  store i32 %shr27, i32* %h.addr, align 4, !dbg !1471
  store i32 0, i32* %y, align 4, !dbg !1472
  br label %for.cond, !dbg !1473

for.cond:                                         ; preds = %for.inc87, %entry
  %26 = load i32, i32* %y, align 4, !dbg !1474
  %27 = load i32, i32* %h.addr, align 4, !dbg !1476
  %cmp = icmp slt i32 %26, %27, !dbg !1477
  br i1 %cmp, label %for.body, label %for.end89, !dbg !1478

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !1479
  br label %for.cond29, !dbg !1480

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !1481
  %29 = load i32, i32* %w.addr, align 4, !dbg !1483
  %cmp30 = icmp slt i32 %28, %29, !dbg !1484
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !1485

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !1486, metadata !94), !dbg !1487
  %30 = load i32, i32* %x, align 4, !dbg !1488
  %shl = shl i32 %30, 0, !dbg !1489
  %idxprom = sext i32 %shl to i64, !dbg !1490
  %31 = load i16*, i16** %yuv0, align 8, !dbg !1490
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !1490
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !1490
  %conv34 = zext i16 %32 to i32, !dbg !1490
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !1491
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !1491
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !1491
  %conv36 = sext i16 %34 to i32, !dbg !1491
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !1492
  store i32 %sub37, i32* %y00, align 4, !dbg !1487
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1493, metadata !94), !dbg !1494
  %35 = load i32, i32* %x, align 4, !dbg !1495
  %idxprom38 = sext i32 %35 to i64, !dbg !1496
  %36 = load i16*, i16** %yuv1, align 8, !dbg !1496
  %arrayidx39 = getelementptr inbounds i16, i16* %36, i64 %idxprom38, !dbg !1496
  %37 = load i16, i16* %arrayidx39, align 2, !dbg !1496
  %conv40 = zext i16 %37 to i32, !dbg !1496
  %sub41 = sub nsw i32 %conv40, 512, !dbg !1497
  store i32 %sub41, i32* %u, align 4, !dbg !1494
  call void @llvm.dbg.declare(metadata i32* %v, metadata !1498, metadata !94), !dbg !1499
  %38 = load i32, i32* %x, align 4, !dbg !1500
  %idxprom42 = sext i32 %38 to i64, !dbg !1501
  %39 = load i16*, i16** %yuv2, align 8, !dbg !1501
  %arrayidx43 = getelementptr inbounds i16, i16* %39, i64 %idxprom42, !dbg !1501
  %40 = load i16, i16* %arrayidx43, align 2, !dbg !1501
  %conv44 = zext i16 %40 to i32, !dbg !1501
  %sub45 = sub nsw i32 %conv44, 512, !dbg !1502
  store i32 %sub45, i32* %v, align 4, !dbg !1499
  %41 = load i32, i32* %y00, align 4, !dbg !1503
  %42 = load i32, i32* %cy, align 4, !dbg !1504
  %mul = mul nsw i32 %41, %42, !dbg !1505
  %43 = load i32, i32* %crv, align 4, !dbg !1506
  %44 = load i32, i32* %v, align 4, !dbg !1507
  %mul46 = mul nsw i32 %43, %44, !dbg !1508
  %add47 = add nsw i32 %mul, %mul46, !dbg !1509
  %add48 = add nsw i32 %add47, 256, !dbg !1510
  %shr49 = ashr i32 %add48, 9, !dbg !1511
  store i32 %shr49, i32* %a.addr.i, align 4, !dbg !1512
  %45 = load i32, i32* %a.addr.i, align 4, !dbg !1513
  %add.i = add i32 %45, 32768, !dbg !1514
  %and.i = and i32 %add.i, -65536, !dbg !1515
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1515
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1516

if.then.i:                                        ; preds = %for.body32
  %46 = load i32, i32* %a.addr.i, align 4, !dbg !1517
  %shr.i = ashr i32 %46, 31, !dbg !1518
  %xor.i = xor i32 %shr.i, 32767, !dbg !1519
  %conv.i = trunc i32 %xor.i to i16, !dbg !1520
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !1521
  br label %av_clip_int16_c.exit, !dbg !1521

if.else.i:                                        ; preds = %for.body32
  %47 = load i32, i32* %a.addr.i, align 4, !dbg !1522
  %conv1.i = trunc i32 %47 to i16, !dbg !1522
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !1523
  br label %av_clip_int16_c.exit, !dbg !1523

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %48 = load i16, i16* %retval.i, align 2, !dbg !1524
  %49 = load i32, i32* %x, align 4, !dbg !1525
  %shl50 = shl i32 %49, 0, !dbg !1526
  %idxprom51 = sext i32 %shl50 to i64, !dbg !1527
  %50 = load i16*, i16** %rgb0, align 8, !dbg !1527
  %arrayidx52 = getelementptr inbounds i16, i16* %50, i64 %idxprom51, !dbg !1527
  store i16 %48, i16* %arrayidx52, align 2, !dbg !1528
  %51 = load i32, i32* %y00, align 4, !dbg !1529
  %52 = load i32, i32* %cy, align 4, !dbg !1530
  %mul53 = mul nsw i32 %51, %52, !dbg !1531
  %53 = load i32, i32* %cgu, align 4, !dbg !1532
  %54 = load i32, i32* %u, align 4, !dbg !1533
  %mul54 = mul nsw i32 %53, %54, !dbg !1534
  %add55 = add nsw i32 %mul53, %mul54, !dbg !1535
  %55 = load i32, i32* %cgv, align 4, !dbg !1536
  %56 = load i32, i32* %v, align 4, !dbg !1537
  %mul56 = mul nsw i32 %55, %56, !dbg !1538
  %add57 = add nsw i32 %add55, %mul56, !dbg !1539
  %add58 = add nsw i32 %add57, 256, !dbg !1540
  %shr59 = ashr i32 %add58, 9, !dbg !1541
  store i32 %shr59, i32* %a.addr.i103, align 4, !dbg !1542
  %57 = load i32, i32* %a.addr.i103, align 4, !dbg !1543
  %add.i104 = add i32 %57, 32768, !dbg !1544
  %and.i105 = and i32 %add.i104, -65536, !dbg !1545
  %tobool.i106 = icmp ne i32 %and.i105, 0, !dbg !1545
  br i1 %tobool.i106, label %if.then.i110, label %if.else.i112, !dbg !1546

if.then.i110:                                     ; preds = %av_clip_int16_c.exit
  %58 = load i32, i32* %a.addr.i103, align 4, !dbg !1547
  %shr.i107 = ashr i32 %58, 31, !dbg !1548
  %xor.i108 = xor i32 %shr.i107, 32767, !dbg !1549
  %conv.i109 = trunc i32 %xor.i108 to i16, !dbg !1550
  store i16 %conv.i109, i16* %retval.i102, align 2, !dbg !1551
  br label %av_clip_int16_c.exit113, !dbg !1551

if.else.i112:                                     ; preds = %av_clip_int16_c.exit
  %59 = load i32, i32* %a.addr.i103, align 4, !dbg !1552
  %conv1.i111 = trunc i32 %59 to i16, !dbg !1552
  store i16 %conv1.i111, i16* %retval.i102, align 2, !dbg !1553
  br label %av_clip_int16_c.exit113, !dbg !1553

av_clip_int16_c.exit113:                          ; preds = %if.then.i110, %if.else.i112
  %60 = load i16, i16* %retval.i102, align 2, !dbg !1554
  %61 = load i32, i32* %x, align 4, !dbg !1555
  %shl61 = shl i32 %61, 0, !dbg !1556
  %idxprom62 = sext i32 %shl61 to i64, !dbg !1557
  %62 = load i16*, i16** %rgb1, align 8, !dbg !1557
  %arrayidx63 = getelementptr inbounds i16, i16* %62, i64 %idxprom62, !dbg !1557
  store i16 %60, i16* %arrayidx63, align 2, !dbg !1558
  %63 = load i32, i32* %y00, align 4, !dbg !1559
  %64 = load i32, i32* %cy, align 4, !dbg !1560
  %mul64 = mul nsw i32 %63, %64, !dbg !1561
  %65 = load i32, i32* %cbu, align 4, !dbg !1562
  %66 = load i32, i32* %u, align 4, !dbg !1563
  %mul65 = mul nsw i32 %65, %66, !dbg !1564
  %add66 = add nsw i32 %mul64, %mul65, !dbg !1565
  %add67 = add nsw i32 %add66, 256, !dbg !1566
  %shr68 = ashr i32 %add67, 9, !dbg !1567
  store i32 %shr68, i32* %a.addr.i91, align 4, !dbg !1568
  %67 = load i32, i32* %a.addr.i91, align 4, !dbg !1569
  %add.i92 = add i32 %67, 32768, !dbg !1570
  %and.i93 = and i32 %add.i92, -65536, !dbg !1571
  %tobool.i94 = icmp ne i32 %and.i93, 0, !dbg !1571
  br i1 %tobool.i94, label %if.then.i98, label %if.else.i100, !dbg !1572

if.then.i98:                                      ; preds = %av_clip_int16_c.exit113
  %68 = load i32, i32* %a.addr.i91, align 4, !dbg !1573
  %shr.i95 = ashr i32 %68, 31, !dbg !1574
  %xor.i96 = xor i32 %shr.i95, 32767, !dbg !1575
  %conv.i97 = trunc i32 %xor.i96 to i16, !dbg !1576
  store i16 %conv.i97, i16* %retval.i90, align 2, !dbg !1577
  br label %av_clip_int16_c.exit101, !dbg !1577

if.else.i100:                                     ; preds = %av_clip_int16_c.exit113
  %69 = load i32, i32* %a.addr.i91, align 4, !dbg !1578
  %conv1.i99 = trunc i32 %69 to i16, !dbg !1578
  store i16 %conv1.i99, i16* %retval.i90, align 2, !dbg !1579
  br label %av_clip_int16_c.exit101, !dbg !1579

av_clip_int16_c.exit101:                          ; preds = %if.then.i98, %if.else.i100
  %70 = load i16, i16* %retval.i90, align 2, !dbg !1580
  %71 = load i32, i32* %x, align 4, !dbg !1581
  %shl70 = shl i32 %71, 0, !dbg !1582
  %idxprom71 = sext i32 %shl70 to i64, !dbg !1583
  %72 = load i16*, i16** %rgb2, align 8, !dbg !1583
  %arrayidx72 = getelementptr inbounds i16, i16* %72, i64 %idxprom71, !dbg !1583
  store i16 %70, i16* %arrayidx72, align 2, !dbg !1584
  br label %for.inc, !dbg !1585

for.inc:                                          ; preds = %av_clip_int16_c.exit101
  %73 = load i32, i32* %x, align 4, !dbg !1586
  %inc = add nsw i32 %73, 1, !dbg !1586
  store i32 %inc, i32* %x, align 4, !dbg !1586
  br label %for.cond29, !dbg !1588, !llvm.loop !1589

for.end:                                          ; preds = %for.cond29
  %74 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1591
  %arrayidx73 = getelementptr inbounds i64, i64* %74, i64 0, !dbg !1591
  %75 = load i64, i64* %arrayidx73, align 8, !dbg !1591
  %mul74 = mul nsw i64 %75, 1, !dbg !1592
  %div = udiv i64 %mul74, 2, !dbg !1593
  %76 = load i16*, i16** %yuv0, align 8, !dbg !1594
  %add.ptr = getelementptr inbounds i16, i16* %76, i64 %div, !dbg !1594
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !1594
  %77 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1595
  %arrayidx75 = getelementptr inbounds i64, i64* %77, i64 1, !dbg !1595
  %78 = load i64, i64* %arrayidx75, align 8, !dbg !1595
  %div76 = udiv i64 %78, 2, !dbg !1596
  %79 = load i16*, i16** %yuv1, align 8, !dbg !1597
  %add.ptr77 = getelementptr inbounds i16, i16* %79, i64 %div76, !dbg !1597
  store i16* %add.ptr77, i16** %yuv1, align 8, !dbg !1597
  %80 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1598
  %arrayidx78 = getelementptr inbounds i64, i64* %80, i64 2, !dbg !1598
  %81 = load i64, i64* %arrayidx78, align 8, !dbg !1598
  %div79 = udiv i64 %81, 2, !dbg !1599
  %82 = load i16*, i16** %yuv2, align 8, !dbg !1600
  %add.ptr80 = getelementptr inbounds i16, i16* %82, i64 %div79, !dbg !1600
  store i16* %add.ptr80, i16** %yuv2, align 8, !dbg !1600
  %83 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1601
  %mul81 = mul nsw i64 %83, 1, !dbg !1602
  %84 = load i16*, i16** %rgb0, align 8, !dbg !1603
  %add.ptr82 = getelementptr inbounds i16, i16* %84, i64 %mul81, !dbg !1603
  store i16* %add.ptr82, i16** %rgb0, align 8, !dbg !1603
  %85 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1604
  %mul83 = mul nsw i64 %85, 1, !dbg !1605
  %86 = load i16*, i16** %rgb1, align 8, !dbg !1606
  %add.ptr84 = getelementptr inbounds i16, i16* %86, i64 %mul83, !dbg !1606
  store i16* %add.ptr84, i16** %rgb1, align 8, !dbg !1606
  %87 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1607
  %mul85 = mul nsw i64 %87, 1, !dbg !1608
  %88 = load i16*, i16** %rgb2, align 8, !dbg !1609
  %add.ptr86 = getelementptr inbounds i16, i16* %88, i64 %mul85, !dbg !1609
  store i16* %add.ptr86, i16** %rgb2, align 8, !dbg !1609
  br label %for.inc87, !dbg !1610

for.inc87:                                        ; preds = %for.end
  %89 = load i32, i32* %y, align 4, !dbg !1611
  %inc88 = add nsw i32 %89, 1, !dbg !1611
  store i32 %inc88, i32* %y, align 4, !dbg !1611
  br label %for.cond, !dbg !1613, !llvm.loop !1614

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !1616
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_422p10_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !1617 {
entry:
  %retval.i178 = alloca i16, align 2
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !267, metadata !94), !dbg !1618
  %retval.i166 = alloca i16, align 2
  %a.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i167, metadata !267, metadata !94), !dbg !1626
  %retval.i154 = alloca i16, align 2
  %a.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i155, metadata !267, metadata !94), !dbg !1628
  %retval.i142 = alloca i16, align 2
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !267, metadata !94), !dbg !1630
  %retval.i130 = alloca i16, align 2
  %a.addr.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i131, metadata !267, metadata !94), !dbg !1632
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !1634
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !1636, metadata !94), !dbg !1637
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !1638, metadata !94), !dbg !1639
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !1640, metadata !94), !dbg !1641
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !1642, metadata !94), !dbg !1643
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !1644, metadata !94), !dbg !1645
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1646, metadata !94), !dbg !1647
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !1648, metadata !94), !dbg !1649
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !1650, metadata !94), !dbg !1651
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !1652, metadata !94), !dbg !1653
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !1654
  %1 = bitcast i8** %0 to i16**, !dbg !1655
  store i16** %1, i16*** %yuv, align 8, !dbg !1653
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !1656, metadata !94), !dbg !1657
  %2 = load i16**, i16*** %yuv, align 8, !dbg !1658
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !1658
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !1658
  store i16* %3, i16** %yuv0, align 8, !dbg !1657
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !1659, metadata !94), !dbg !1660
  %4 = load i16**, i16*** %yuv, align 8, !dbg !1661
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !1661
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !1661
  store i16* %5, i16** %yuv1, align 8, !dbg !1660
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !1662, metadata !94), !dbg !1663
  %6 = load i16**, i16*** %yuv, align 8, !dbg !1664
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !1664
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !1664
  store i16* %7, i16** %yuv2, align 8, !dbg !1663
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !1665, metadata !94), !dbg !1666
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !1667
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !1667
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !1667
  store i16* %9, i16** %rgb0, align 8, !dbg !1666
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !1668, metadata !94), !dbg !1669
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !1670
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !1670
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !1670
  store i16* %11, i16** %rgb1, align 8, !dbg !1669
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !1671, metadata !94), !dbg !1672
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !1673
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !1673
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !1673
  store i16* %13, i16** %rgb2, align 8, !dbg !1672
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1674, metadata !94), !dbg !1675
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1676, metadata !94), !dbg !1677
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !1678, metadata !94), !dbg !1679
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1680
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !1680
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !1680
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !1680
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !1680
  %conv = sext i16 %15 to i32, !dbg !1680
  store i32 %conv, i32* %cy, align 4, !dbg !1679
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !1681, metadata !94), !dbg !1682
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1683
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !1683
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !1683
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !1683
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !1683
  %conv12 = sext i16 %17 to i32, !dbg !1683
  store i32 %conv12, i32* %crv, align 4, !dbg !1682
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !1684, metadata !94), !dbg !1685
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1686
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !1686
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !1686
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !1686
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !1686
  %conv16 = sext i16 %19 to i32, !dbg !1686
  store i32 %conv16, i32* %cgu, align 4, !dbg !1685
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !1687, metadata !94), !dbg !1688
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1689
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !1689
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !1689
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !1689
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !1689
  %conv20 = sext i16 %21 to i32, !dbg !1689
  store i32 %conv20, i32* %cgv, align 4, !dbg !1688
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !1690, metadata !94), !dbg !1691
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !1692
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !1692
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !1692
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !1692
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !1692
  %conv24 = sext i16 %23 to i32, !dbg !1692
  store i32 %conv24, i32* %cbu, align 4, !dbg !1691
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !1693, metadata !94), !dbg !1694
  store i32 9, i32* %sh, align 4, !dbg !1694
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !1695, metadata !94), !dbg !1696
  store i32 256, i32* %rnd, align 4, !dbg !1696
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !1697, metadata !94), !dbg !1698
  store i32 512, i32* %uv_offset, align 4, !dbg !1698
  %24 = load i32, i32* %w.addr, align 4, !dbg !1699
  %add = add nsw i32 %24, 2, !dbg !1700
  %sub = sub nsw i32 %add, 1, !dbg !1701
  %shr = ashr i32 %sub, 1, !dbg !1702
  store i32 %shr, i32* %w.addr, align 4, !dbg !1703
  %25 = load i32, i32* %h.addr, align 4, !dbg !1704
  %add25 = add nsw i32 %25, 1, !dbg !1705
  %sub26 = sub nsw i32 %add25, 1, !dbg !1706
  %shr27 = ashr i32 %sub26, 0, !dbg !1707
  store i32 %shr27, i32* %h.addr, align 4, !dbg !1708
  store i32 0, i32* %y, align 4, !dbg !1709
  br label %for.cond, !dbg !1710

for.cond:                                         ; preds = %for.inc127, %entry
  %26 = load i32, i32* %y, align 4, !dbg !1711
  %27 = load i32, i32* %h.addr, align 4, !dbg !1713
  %cmp = icmp slt i32 %26, %27, !dbg !1714
  br i1 %cmp, label %for.body, label %for.end129, !dbg !1715

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !1716
  br label %for.cond29, !dbg !1717

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !1718
  %29 = load i32, i32* %w.addr, align 4, !dbg !1720
  %cmp30 = icmp slt i32 %28, %29, !dbg !1721
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !1722

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !1723, metadata !94), !dbg !1724
  %30 = load i32, i32* %x, align 4, !dbg !1725
  %shl = shl i32 %30, 1, !dbg !1726
  %idxprom = sext i32 %shl to i64, !dbg !1727
  %31 = load i16*, i16** %yuv0, align 8, !dbg !1727
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !1727
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !1727
  %conv34 = zext i16 %32 to i32, !dbg !1727
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !1728
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !1728
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !1728
  %conv36 = sext i16 %34 to i32, !dbg !1728
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !1729
  store i32 %sub37, i32* %y00, align 4, !dbg !1724
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !1730, metadata !94), !dbg !1731
  %35 = load i32, i32* %x, align 4, !dbg !1732
  %mul = mul nsw i32 2, %35, !dbg !1733
  %add38 = add nsw i32 %mul, 1, !dbg !1734
  %idxprom39 = sext i32 %add38 to i64, !dbg !1735
  %36 = load i16*, i16** %yuv0, align 8, !dbg !1735
  %arrayidx40 = getelementptr inbounds i16, i16* %36, i64 %idxprom39, !dbg !1735
  %37 = load i16, i16* %arrayidx40, align 2, !dbg !1735
  %conv41 = zext i16 %37 to i32, !dbg !1735
  %38 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !1736
  %arrayidx42 = getelementptr inbounds i16, i16* %38, i64 0, !dbg !1736
  %39 = load i16, i16* %arrayidx42, align 2, !dbg !1736
  %conv43 = sext i16 %39 to i32, !dbg !1736
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !1737
  store i32 %sub44, i32* %y01, align 4, !dbg !1731
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1738, metadata !94), !dbg !1739
  %40 = load i32, i32* %x, align 4, !dbg !1740
  %idxprom45 = sext i32 %40 to i64, !dbg !1741
  %41 = load i16*, i16** %yuv1, align 8, !dbg !1741
  %arrayidx46 = getelementptr inbounds i16, i16* %41, i64 %idxprom45, !dbg !1741
  %42 = load i16, i16* %arrayidx46, align 2, !dbg !1741
  %conv47 = zext i16 %42 to i32, !dbg !1741
  %sub48 = sub nsw i32 %conv47, 512, !dbg !1742
  store i32 %sub48, i32* %u, align 4, !dbg !1739
  call void @llvm.dbg.declare(metadata i32* %v, metadata !1743, metadata !94), !dbg !1744
  %43 = load i32, i32* %x, align 4, !dbg !1745
  %idxprom49 = sext i32 %43 to i64, !dbg !1746
  %44 = load i16*, i16** %yuv2, align 8, !dbg !1746
  %arrayidx50 = getelementptr inbounds i16, i16* %44, i64 %idxprom49, !dbg !1746
  %45 = load i16, i16* %arrayidx50, align 2, !dbg !1746
  %conv51 = zext i16 %45 to i32, !dbg !1746
  %sub52 = sub nsw i32 %conv51, 512, !dbg !1747
  store i32 %sub52, i32* %v, align 4, !dbg !1744
  %46 = load i32, i32* %y00, align 4, !dbg !1748
  %47 = load i32, i32* %cy, align 4, !dbg !1749
  %mul53 = mul nsw i32 %46, %47, !dbg !1750
  %48 = load i32, i32* %crv, align 4, !dbg !1751
  %49 = load i32, i32* %v, align 4, !dbg !1752
  %mul54 = mul nsw i32 %48, %49, !dbg !1753
  %add55 = add nsw i32 %mul53, %mul54, !dbg !1754
  %add56 = add nsw i32 %add55, 256, !dbg !1755
  %shr57 = ashr i32 %add56, 9, !dbg !1756
  store i32 %shr57, i32* %a.addr.i, align 4, !dbg !1757
  %50 = load i32, i32* %a.addr.i, align 4, !dbg !1758
  %add.i = add i32 %50, 32768, !dbg !1759
  %and.i = and i32 %add.i, -65536, !dbg !1760
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1760
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1761

if.then.i:                                        ; preds = %for.body32
  %51 = load i32, i32* %a.addr.i, align 4, !dbg !1762
  %shr.i = ashr i32 %51, 31, !dbg !1763
  %xor.i = xor i32 %shr.i, 32767, !dbg !1764
  %conv.i = trunc i32 %xor.i to i16, !dbg !1765
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !1766
  br label %av_clip_int16_c.exit, !dbg !1766

if.else.i:                                        ; preds = %for.body32
  %52 = load i32, i32* %a.addr.i, align 4, !dbg !1767
  %conv1.i = trunc i32 %52 to i16, !dbg !1767
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !1768
  br label %av_clip_int16_c.exit, !dbg !1768

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %53 = load i16, i16* %retval.i, align 2, !dbg !1769
  %54 = load i32, i32* %x, align 4, !dbg !1770
  %shl58 = shl i32 %54, 1, !dbg !1771
  %idxprom59 = sext i32 %shl58 to i64, !dbg !1772
  %55 = load i16*, i16** %rgb0, align 8, !dbg !1772
  %arrayidx60 = getelementptr inbounds i16, i16* %55, i64 %idxprom59, !dbg !1772
  store i16 %53, i16* %arrayidx60, align 2, !dbg !1773
  %56 = load i32, i32* %y01, align 4, !dbg !1774
  %57 = load i32, i32* %cy, align 4, !dbg !1775
  %mul61 = mul nsw i32 %56, %57, !dbg !1776
  %58 = load i32, i32* %crv, align 4, !dbg !1777
  %59 = load i32, i32* %v, align 4, !dbg !1778
  %mul62 = mul nsw i32 %58, %59, !dbg !1779
  %add63 = add nsw i32 %mul61, %mul62, !dbg !1780
  %add64 = add nsw i32 %add63, 256, !dbg !1781
  %shr65 = ashr i32 %add64, 9, !dbg !1782
  store i32 %shr65, i32* %a.addr.i179, align 4, !dbg !1783
  %60 = load i32, i32* %a.addr.i179, align 4, !dbg !1784
  %add.i180 = add i32 %60, 32768, !dbg !1785
  %and.i181 = and i32 %add.i180, -65536, !dbg !1786
  %tobool.i182 = icmp ne i32 %and.i181, 0, !dbg !1786
  br i1 %tobool.i182, label %if.then.i186, label %if.else.i188, !dbg !1787

if.then.i186:                                     ; preds = %av_clip_int16_c.exit
  %61 = load i32, i32* %a.addr.i179, align 4, !dbg !1788
  %shr.i183 = ashr i32 %61, 31, !dbg !1789
  %xor.i184 = xor i32 %shr.i183, 32767, !dbg !1790
  %conv.i185 = trunc i32 %xor.i184 to i16, !dbg !1791
  store i16 %conv.i185, i16* %retval.i178, align 2, !dbg !1792
  br label %av_clip_int16_c.exit189, !dbg !1792

if.else.i188:                                     ; preds = %av_clip_int16_c.exit
  %62 = load i32, i32* %a.addr.i179, align 4, !dbg !1793
  %conv1.i187 = trunc i32 %62 to i16, !dbg !1793
  store i16 %conv1.i187, i16* %retval.i178, align 2, !dbg !1794
  br label %av_clip_int16_c.exit189, !dbg !1794

av_clip_int16_c.exit189:                          ; preds = %if.then.i186, %if.else.i188
  %63 = load i16, i16* %retval.i178, align 2, !dbg !1795
  %64 = load i32, i32* %x, align 4, !dbg !1796
  %mul67 = mul nsw i32 2, %64, !dbg !1797
  %add68 = add nsw i32 %mul67, 1, !dbg !1798
  %idxprom69 = sext i32 %add68 to i64, !dbg !1799
  %65 = load i16*, i16** %rgb0, align 8, !dbg !1799
  %arrayidx70 = getelementptr inbounds i16, i16* %65, i64 %idxprom69, !dbg !1799
  store i16 %63, i16* %arrayidx70, align 2, !dbg !1800
  %66 = load i32, i32* %y00, align 4, !dbg !1801
  %67 = load i32, i32* %cy, align 4, !dbg !1802
  %mul71 = mul nsw i32 %66, %67, !dbg !1803
  %68 = load i32, i32* %cgu, align 4, !dbg !1804
  %69 = load i32, i32* %u, align 4, !dbg !1805
  %mul72 = mul nsw i32 %68, %69, !dbg !1806
  %add73 = add nsw i32 %mul71, %mul72, !dbg !1807
  %70 = load i32, i32* %cgv, align 4, !dbg !1808
  %71 = load i32, i32* %v, align 4, !dbg !1809
  %mul74 = mul nsw i32 %70, %71, !dbg !1810
  %add75 = add nsw i32 %add73, %mul74, !dbg !1811
  %add76 = add nsw i32 %add75, 256, !dbg !1812
  %shr77 = ashr i32 %add76, 9, !dbg !1813
  store i32 %shr77, i32* %a.addr.i167, align 4, !dbg !1814
  %72 = load i32, i32* %a.addr.i167, align 4, !dbg !1815
  %add.i168 = add i32 %72, 32768, !dbg !1816
  %and.i169 = and i32 %add.i168, -65536, !dbg !1817
  %tobool.i170 = icmp ne i32 %and.i169, 0, !dbg !1817
  br i1 %tobool.i170, label %if.then.i174, label %if.else.i176, !dbg !1818

if.then.i174:                                     ; preds = %av_clip_int16_c.exit189
  %73 = load i32, i32* %a.addr.i167, align 4, !dbg !1819
  %shr.i171 = ashr i32 %73, 31, !dbg !1820
  %xor.i172 = xor i32 %shr.i171, 32767, !dbg !1821
  %conv.i173 = trunc i32 %xor.i172 to i16, !dbg !1822
  store i16 %conv.i173, i16* %retval.i166, align 2, !dbg !1823
  br label %av_clip_int16_c.exit177, !dbg !1823

if.else.i176:                                     ; preds = %av_clip_int16_c.exit189
  %74 = load i32, i32* %a.addr.i167, align 4, !dbg !1824
  %conv1.i175 = trunc i32 %74 to i16, !dbg !1824
  store i16 %conv1.i175, i16* %retval.i166, align 2, !dbg !1825
  br label %av_clip_int16_c.exit177, !dbg !1825

av_clip_int16_c.exit177:                          ; preds = %if.then.i174, %if.else.i176
  %75 = load i16, i16* %retval.i166, align 2, !dbg !1826
  %76 = load i32, i32* %x, align 4, !dbg !1827
  %shl79 = shl i32 %76, 1, !dbg !1828
  %idxprom80 = sext i32 %shl79 to i64, !dbg !1829
  %77 = load i16*, i16** %rgb1, align 8, !dbg !1829
  %arrayidx81 = getelementptr inbounds i16, i16* %77, i64 %idxprom80, !dbg !1829
  store i16 %75, i16* %arrayidx81, align 2, !dbg !1830
  %78 = load i32, i32* %y01, align 4, !dbg !1831
  %79 = load i32, i32* %cy, align 4, !dbg !1832
  %mul82 = mul nsw i32 %78, %79, !dbg !1833
  %80 = load i32, i32* %cgu, align 4, !dbg !1834
  %81 = load i32, i32* %u, align 4, !dbg !1835
  %mul83 = mul nsw i32 %80, %81, !dbg !1836
  %add84 = add nsw i32 %mul82, %mul83, !dbg !1837
  %82 = load i32, i32* %cgv, align 4, !dbg !1838
  %83 = load i32, i32* %v, align 4, !dbg !1839
  %mul85 = mul nsw i32 %82, %83, !dbg !1840
  %add86 = add nsw i32 %add84, %mul85, !dbg !1841
  %add87 = add nsw i32 %add86, 256, !dbg !1842
  %shr88 = ashr i32 %add87, 9, !dbg !1843
  store i32 %shr88, i32* %a.addr.i155, align 4, !dbg !1844
  %84 = load i32, i32* %a.addr.i155, align 4, !dbg !1845
  %add.i156 = add i32 %84, 32768, !dbg !1846
  %and.i157 = and i32 %add.i156, -65536, !dbg !1847
  %tobool.i158 = icmp ne i32 %and.i157, 0, !dbg !1847
  br i1 %tobool.i158, label %if.then.i162, label %if.else.i164, !dbg !1848

if.then.i162:                                     ; preds = %av_clip_int16_c.exit177
  %85 = load i32, i32* %a.addr.i155, align 4, !dbg !1849
  %shr.i159 = ashr i32 %85, 31, !dbg !1850
  %xor.i160 = xor i32 %shr.i159, 32767, !dbg !1851
  %conv.i161 = trunc i32 %xor.i160 to i16, !dbg !1852
  store i16 %conv.i161, i16* %retval.i154, align 2, !dbg !1853
  br label %av_clip_int16_c.exit165, !dbg !1853

if.else.i164:                                     ; preds = %av_clip_int16_c.exit177
  %86 = load i32, i32* %a.addr.i155, align 4, !dbg !1854
  %conv1.i163 = trunc i32 %86 to i16, !dbg !1854
  store i16 %conv1.i163, i16* %retval.i154, align 2, !dbg !1855
  br label %av_clip_int16_c.exit165, !dbg !1855

av_clip_int16_c.exit165:                          ; preds = %if.then.i162, %if.else.i164
  %87 = load i16, i16* %retval.i154, align 2, !dbg !1856
  %88 = load i32, i32* %x, align 4, !dbg !1857
  %mul90 = mul nsw i32 2, %88, !dbg !1858
  %add91 = add nsw i32 %mul90, 1, !dbg !1859
  %idxprom92 = sext i32 %add91 to i64, !dbg !1860
  %89 = load i16*, i16** %rgb1, align 8, !dbg !1860
  %arrayidx93 = getelementptr inbounds i16, i16* %89, i64 %idxprom92, !dbg !1860
  store i16 %87, i16* %arrayidx93, align 2, !dbg !1861
  %90 = load i32, i32* %y00, align 4, !dbg !1862
  %91 = load i32, i32* %cy, align 4, !dbg !1863
  %mul94 = mul nsw i32 %90, %91, !dbg !1864
  %92 = load i32, i32* %cbu, align 4, !dbg !1865
  %93 = load i32, i32* %u, align 4, !dbg !1866
  %mul95 = mul nsw i32 %92, %93, !dbg !1867
  %add96 = add nsw i32 %mul94, %mul95, !dbg !1868
  %add97 = add nsw i32 %add96, 256, !dbg !1869
  %shr98 = ashr i32 %add97, 9, !dbg !1870
  store i32 %shr98, i32* %a.addr.i143, align 4, !dbg !1871
  %94 = load i32, i32* %a.addr.i143, align 4, !dbg !1872
  %add.i144 = add i32 %94, 32768, !dbg !1873
  %and.i145 = and i32 %add.i144, -65536, !dbg !1874
  %tobool.i146 = icmp ne i32 %and.i145, 0, !dbg !1874
  br i1 %tobool.i146, label %if.then.i150, label %if.else.i152, !dbg !1875

if.then.i150:                                     ; preds = %av_clip_int16_c.exit165
  %95 = load i32, i32* %a.addr.i143, align 4, !dbg !1876
  %shr.i147 = ashr i32 %95, 31, !dbg !1877
  %xor.i148 = xor i32 %shr.i147, 32767, !dbg !1878
  %conv.i149 = trunc i32 %xor.i148 to i16, !dbg !1879
  store i16 %conv.i149, i16* %retval.i142, align 2, !dbg !1880
  br label %av_clip_int16_c.exit153, !dbg !1880

if.else.i152:                                     ; preds = %av_clip_int16_c.exit165
  %96 = load i32, i32* %a.addr.i143, align 4, !dbg !1881
  %conv1.i151 = trunc i32 %96 to i16, !dbg !1881
  store i16 %conv1.i151, i16* %retval.i142, align 2, !dbg !1882
  br label %av_clip_int16_c.exit153, !dbg !1882

av_clip_int16_c.exit153:                          ; preds = %if.then.i150, %if.else.i152
  %97 = load i16, i16* %retval.i142, align 2, !dbg !1883
  %98 = load i32, i32* %x, align 4, !dbg !1884
  %shl100 = shl i32 %98, 1, !dbg !1885
  %idxprom101 = sext i32 %shl100 to i64, !dbg !1886
  %99 = load i16*, i16** %rgb2, align 8, !dbg !1886
  %arrayidx102 = getelementptr inbounds i16, i16* %99, i64 %idxprom101, !dbg !1886
  store i16 %97, i16* %arrayidx102, align 2, !dbg !1887
  %100 = load i32, i32* %y01, align 4, !dbg !1888
  %101 = load i32, i32* %cy, align 4, !dbg !1889
  %mul103 = mul nsw i32 %100, %101, !dbg !1890
  %102 = load i32, i32* %cbu, align 4, !dbg !1891
  %103 = load i32, i32* %u, align 4, !dbg !1892
  %mul104 = mul nsw i32 %102, %103, !dbg !1893
  %add105 = add nsw i32 %mul103, %mul104, !dbg !1894
  %add106 = add nsw i32 %add105, 256, !dbg !1895
  %shr107 = ashr i32 %add106, 9, !dbg !1896
  store i32 %shr107, i32* %a.addr.i131, align 4, !dbg !1897
  %104 = load i32, i32* %a.addr.i131, align 4, !dbg !1898
  %add.i132 = add i32 %104, 32768, !dbg !1899
  %and.i133 = and i32 %add.i132, -65536, !dbg !1900
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !1900
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !1901

if.then.i138:                                     ; preds = %av_clip_int16_c.exit153
  %105 = load i32, i32* %a.addr.i131, align 4, !dbg !1902
  %shr.i135 = ashr i32 %105, 31, !dbg !1903
  %xor.i136 = xor i32 %shr.i135, 32767, !dbg !1904
  %conv.i137 = trunc i32 %xor.i136 to i16, !dbg !1905
  store i16 %conv.i137, i16* %retval.i130, align 2, !dbg !1906
  br label %av_clip_int16_c.exit141, !dbg !1906

if.else.i140:                                     ; preds = %av_clip_int16_c.exit153
  %106 = load i32, i32* %a.addr.i131, align 4, !dbg !1907
  %conv1.i139 = trunc i32 %106 to i16, !dbg !1907
  store i16 %conv1.i139, i16* %retval.i130, align 2, !dbg !1908
  br label %av_clip_int16_c.exit141, !dbg !1908

av_clip_int16_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %107 = load i16, i16* %retval.i130, align 2, !dbg !1909
  %108 = load i32, i32* %x, align 4, !dbg !1910
  %mul109 = mul nsw i32 2, %108, !dbg !1911
  %add110 = add nsw i32 %mul109, 1, !dbg !1912
  %idxprom111 = sext i32 %add110 to i64, !dbg !1913
  %109 = load i16*, i16** %rgb2, align 8, !dbg !1913
  %arrayidx112 = getelementptr inbounds i16, i16* %109, i64 %idxprom111, !dbg !1913
  store i16 %107, i16* %arrayidx112, align 2, !dbg !1914
  br label %for.inc, !dbg !1915

for.inc:                                          ; preds = %av_clip_int16_c.exit141
  %110 = load i32, i32* %x, align 4, !dbg !1916
  %inc = add nsw i32 %110, 1, !dbg !1916
  store i32 %inc, i32* %x, align 4, !dbg !1916
  br label %for.cond29, !dbg !1918, !llvm.loop !1919

for.end:                                          ; preds = %for.cond29
  %111 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1921
  %arrayidx113 = getelementptr inbounds i64, i64* %111, i64 0, !dbg !1921
  %112 = load i64, i64* %arrayidx113, align 8, !dbg !1921
  %mul114 = mul nsw i64 %112, 1, !dbg !1922
  %div = udiv i64 %mul114, 2, !dbg !1923
  %113 = load i16*, i16** %yuv0, align 8, !dbg !1924
  %add.ptr = getelementptr inbounds i16, i16* %113, i64 %div, !dbg !1924
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !1924
  %114 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1925
  %arrayidx115 = getelementptr inbounds i64, i64* %114, i64 1, !dbg !1925
  %115 = load i64, i64* %arrayidx115, align 8, !dbg !1925
  %div116 = udiv i64 %115, 2, !dbg !1926
  %116 = load i16*, i16** %yuv1, align 8, !dbg !1927
  %add.ptr117 = getelementptr inbounds i16, i16* %116, i64 %div116, !dbg !1927
  store i16* %add.ptr117, i16** %yuv1, align 8, !dbg !1927
  %117 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !1928
  %arrayidx118 = getelementptr inbounds i64, i64* %117, i64 2, !dbg !1928
  %118 = load i64, i64* %arrayidx118, align 8, !dbg !1928
  %div119 = udiv i64 %118, 2, !dbg !1929
  %119 = load i16*, i16** %yuv2, align 8, !dbg !1930
  %add.ptr120 = getelementptr inbounds i16, i16* %119, i64 %div119, !dbg !1930
  store i16* %add.ptr120, i16** %yuv2, align 8, !dbg !1930
  %120 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1931
  %mul121 = mul nsw i64 %120, 1, !dbg !1932
  %121 = load i16*, i16** %rgb0, align 8, !dbg !1933
  %add.ptr122 = getelementptr inbounds i16, i16* %121, i64 %mul121, !dbg !1933
  store i16* %add.ptr122, i16** %rgb0, align 8, !dbg !1933
  %122 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1934
  %mul123 = mul nsw i64 %122, 1, !dbg !1935
  %123 = load i16*, i16** %rgb1, align 8, !dbg !1936
  %add.ptr124 = getelementptr inbounds i16, i16* %123, i64 %mul123, !dbg !1936
  store i16* %add.ptr124, i16** %rgb1, align 8, !dbg !1936
  %124 = load i64, i64* %rgb_stride.addr, align 8, !dbg !1937
  %mul125 = mul nsw i64 %124, 1, !dbg !1938
  %125 = load i16*, i16** %rgb2, align 8, !dbg !1939
  %add.ptr126 = getelementptr inbounds i16, i16* %125, i64 %mul125, !dbg !1939
  store i16* %add.ptr126, i16** %rgb2, align 8, !dbg !1939
  br label %for.inc127, !dbg !1940

for.inc127:                                       ; preds = %for.end
  %126 = load i32, i32* %y, align 4, !dbg !1941
  %inc128 = add nsw i32 %126, 1, !dbg !1941
  store i32 %inc128, i32* %y, align 4, !dbg !1941
  br label %for.cond, !dbg !1943, !llvm.loop !1944

for.end129:                                       ; preds = %for.cond
  ret void, !dbg !1946
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_420p10_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !1947 {
entry:
  %retval.i338 = alloca i16, align 2
  %a.addr.i339 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i339, metadata !267, metadata !94), !dbg !1948
  %retval.i326 = alloca i16, align 2
  %a.addr.i327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i327, metadata !267, metadata !94), !dbg !1956
  %retval.i314 = alloca i16, align 2
  %a.addr.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i315, metadata !267, metadata !94), !dbg !1958
  %retval.i302 = alloca i16, align 2
  %a.addr.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i303, metadata !267, metadata !94), !dbg !1960
  %retval.i290 = alloca i16, align 2
  %a.addr.i291 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i291, metadata !267, metadata !94), !dbg !1962
  %retval.i278 = alloca i16, align 2
  %a.addr.i279 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i279, metadata !267, metadata !94), !dbg !1964
  %retval.i266 = alloca i16, align 2
  %a.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i267, metadata !267, metadata !94), !dbg !1966
  %retval.i254 = alloca i16, align 2
  %a.addr.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i255, metadata !267, metadata !94), !dbg !1968
  %retval.i242 = alloca i16, align 2
  %a.addr.i243 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i243, metadata !267, metadata !94), !dbg !1970
  %retval.i230 = alloca i16, align 2
  %a.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i231, metadata !267, metadata !94), !dbg !1972
  %retval.i218 = alloca i16, align 2
  %a.addr.i219 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i219, metadata !267, metadata !94), !dbg !1974
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !1976
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !1978, metadata !94), !dbg !1979
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !1980, metadata !94), !dbg !1981
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !1982, metadata !94), !dbg !1983
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !1984, metadata !94), !dbg !1985
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !1986, metadata !94), !dbg !1987
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !1988, metadata !94), !dbg !1989
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !1990, metadata !94), !dbg !1991
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !1992, metadata !94), !dbg !1993
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !1994, metadata !94), !dbg !1995
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !1996
  %1 = bitcast i8** %0 to i16**, !dbg !1997
  store i16** %1, i16*** %yuv, align 8, !dbg !1995
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !1998, metadata !94), !dbg !1999
  %2 = load i16**, i16*** %yuv, align 8, !dbg !2000
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !2000
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !2000
  store i16* %3, i16** %yuv0, align 8, !dbg !1999
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !2001, metadata !94), !dbg !2002
  %4 = load i16**, i16*** %yuv, align 8, !dbg !2003
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !2003
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !2003
  store i16* %5, i16** %yuv1, align 8, !dbg !2002
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !2004, metadata !94), !dbg !2005
  %6 = load i16**, i16*** %yuv, align 8, !dbg !2006
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !2006
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !2006
  store i16* %7, i16** %yuv2, align 8, !dbg !2005
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !2007, metadata !94), !dbg !2008
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !2009
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !2009
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !2009
  store i16* %9, i16** %rgb0, align 8, !dbg !2008
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !2010, metadata !94), !dbg !2011
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !2012
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !2012
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !2012
  store i16* %11, i16** %rgb1, align 8, !dbg !2011
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !2013, metadata !94), !dbg !2014
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !2015
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !2015
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !2015
  store i16* %13, i16** %rgb2, align 8, !dbg !2014
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2016, metadata !94), !dbg !2017
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2018, metadata !94), !dbg !2019
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !2020, metadata !94), !dbg !2021
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2022
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !2022
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !2022
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !2022
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !2022
  %conv = sext i16 %15 to i32, !dbg !2022
  store i32 %conv, i32* %cy, align 4, !dbg !2021
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !2023, metadata !94), !dbg !2024
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2025
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !2025
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !2025
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !2025
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !2025
  %conv12 = sext i16 %17 to i32, !dbg !2025
  store i32 %conv12, i32* %crv, align 4, !dbg !2024
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !2026, metadata !94), !dbg !2027
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2028
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !2028
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !2028
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !2028
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !2028
  %conv16 = sext i16 %19 to i32, !dbg !2028
  store i32 %conv16, i32* %cgu, align 4, !dbg !2027
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !2029, metadata !94), !dbg !2030
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2031
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !2031
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !2031
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !2031
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !2031
  %conv20 = sext i16 %21 to i32, !dbg !2031
  store i32 %conv20, i32* %cgv, align 4, !dbg !2030
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !2032, metadata !94), !dbg !2033
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2034
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !2034
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !2034
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !2034
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !2034
  %conv24 = sext i16 %23 to i32, !dbg !2034
  store i32 %conv24, i32* %cbu, align 4, !dbg !2033
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !2035, metadata !94), !dbg !2036
  store i32 9, i32* %sh, align 4, !dbg !2036
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !2037, metadata !94), !dbg !2038
  store i32 256, i32* %rnd, align 4, !dbg !2038
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !2039, metadata !94), !dbg !2040
  store i32 512, i32* %uv_offset, align 4, !dbg !2040
  %24 = load i32, i32* %w.addr, align 4, !dbg !2041
  %add = add nsw i32 %24, 2, !dbg !2042
  %sub = sub nsw i32 %add, 1, !dbg !2043
  %shr = ashr i32 %sub, 1, !dbg !2044
  store i32 %shr, i32* %w.addr, align 4, !dbg !2045
  %25 = load i32, i32* %h.addr, align 4, !dbg !2046
  %add25 = add nsw i32 %25, 2, !dbg !2047
  %sub26 = sub nsw i32 %add25, 1, !dbg !2048
  %shr27 = ashr i32 %sub26, 1, !dbg !2049
  store i32 %shr27, i32* %h.addr, align 4, !dbg !2050
  store i32 0, i32* %y, align 4, !dbg !2051
  br label %for.cond, !dbg !2052

for.cond:                                         ; preds = %for.inc215, %entry
  %26 = load i32, i32* %y, align 4, !dbg !2053
  %27 = load i32, i32* %h.addr, align 4, !dbg !2055
  %cmp = icmp slt i32 %26, %27, !dbg !2056
  br i1 %cmp, label %for.body, label %for.end217, !dbg !2057

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !2058
  br label %for.cond29, !dbg !2059

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !2060
  %29 = load i32, i32* %w.addr, align 4, !dbg !2062
  %cmp30 = icmp slt i32 %28, %29, !dbg !2063
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !2064

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !2065, metadata !94), !dbg !2066
  %30 = load i32, i32* %x, align 4, !dbg !2067
  %shl = shl i32 %30, 1, !dbg !2068
  %idxprom = sext i32 %shl to i64, !dbg !2069
  %31 = load i16*, i16** %yuv0, align 8, !dbg !2069
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !2069
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !2069
  %conv34 = zext i16 %32 to i32, !dbg !2069
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2070
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !2070
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !2070
  %conv36 = sext i16 %34 to i32, !dbg !2070
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !2071
  store i32 %sub37, i32* %y00, align 4, !dbg !2066
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !2072, metadata !94), !dbg !2073
  %35 = load i32, i32* %x, align 4, !dbg !2074
  %mul = mul nsw i32 2, %35, !dbg !2075
  %add38 = add nsw i32 %mul, 1, !dbg !2076
  %idxprom39 = sext i32 %add38 to i64, !dbg !2077
  %36 = load i16*, i16** %yuv0, align 8, !dbg !2077
  %arrayidx40 = getelementptr inbounds i16, i16* %36, i64 %idxprom39, !dbg !2077
  %37 = load i16, i16* %arrayidx40, align 2, !dbg !2077
  %conv41 = zext i16 %37 to i32, !dbg !2077
  %38 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2078
  %arrayidx42 = getelementptr inbounds i16, i16* %38, i64 0, !dbg !2078
  %39 = load i16, i16* %arrayidx42, align 2, !dbg !2078
  %conv43 = sext i16 %39 to i32, !dbg !2078
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !2079
  store i32 %sub44, i32* %y01, align 4, !dbg !2073
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !2080, metadata !94), !dbg !2081
  %40 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2082
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 0, !dbg !2082
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !2082
  %div = udiv i64 %41, 2, !dbg !2083
  %42 = load i32, i32* %x, align 4, !dbg !2084
  %mul46 = mul nsw i32 2, %42, !dbg !2085
  %conv47 = sext i32 %mul46 to i64, !dbg !2086
  %add48 = add i64 %div, %conv47, !dbg !2087
  %43 = load i16*, i16** %yuv0, align 8, !dbg !2088
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %add48, !dbg !2088
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !2088
  %conv50 = zext i16 %44 to i32, !dbg !2088
  %45 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2089
  %arrayidx51 = getelementptr inbounds i16, i16* %45, i64 0, !dbg !2089
  %46 = load i16, i16* %arrayidx51, align 2, !dbg !2089
  %conv52 = sext i16 %46 to i32, !dbg !2089
  %sub53 = sub nsw i32 %conv50, %conv52, !dbg !2090
  store i32 %sub53, i32* %y10, align 4, !dbg !2081
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !2091, metadata !94), !dbg !2092
  %47 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2093
  %arrayidx54 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !2093
  %48 = load i64, i64* %arrayidx54, align 8, !dbg !2093
  %div55 = udiv i64 %48, 2, !dbg !2094
  %49 = load i32, i32* %x, align 4, !dbg !2095
  %mul56 = mul nsw i32 2, %49, !dbg !2096
  %conv57 = sext i32 %mul56 to i64, !dbg !2097
  %add58 = add i64 %div55, %conv57, !dbg !2098
  %add59 = add i64 %add58, 1, !dbg !2099
  %50 = load i16*, i16** %yuv0, align 8, !dbg !2100
  %arrayidx60 = getelementptr inbounds i16, i16* %50, i64 %add59, !dbg !2100
  %51 = load i16, i16* %arrayidx60, align 2, !dbg !2100
  %conv61 = zext i16 %51 to i32, !dbg !2100
  %52 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2101
  %arrayidx62 = getelementptr inbounds i16, i16* %52, i64 0, !dbg !2101
  %53 = load i16, i16* %arrayidx62, align 2, !dbg !2101
  %conv63 = sext i16 %53 to i32, !dbg !2101
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !2102
  store i32 %sub64, i32* %y11, align 4, !dbg !2092
  call void @llvm.dbg.declare(metadata i32* %u, metadata !2103, metadata !94), !dbg !2104
  %54 = load i32, i32* %x, align 4, !dbg !2105
  %idxprom65 = sext i32 %54 to i64, !dbg !2106
  %55 = load i16*, i16** %yuv1, align 8, !dbg !2106
  %arrayidx66 = getelementptr inbounds i16, i16* %55, i64 %idxprom65, !dbg !2106
  %56 = load i16, i16* %arrayidx66, align 2, !dbg !2106
  %conv67 = zext i16 %56 to i32, !dbg !2106
  %sub68 = sub nsw i32 %conv67, 512, !dbg !2107
  store i32 %sub68, i32* %u, align 4, !dbg !2104
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2108, metadata !94), !dbg !2109
  %57 = load i32, i32* %x, align 4, !dbg !2110
  %idxprom69 = sext i32 %57 to i64, !dbg !2111
  %58 = load i16*, i16** %yuv2, align 8, !dbg !2111
  %arrayidx70 = getelementptr inbounds i16, i16* %58, i64 %idxprom69, !dbg !2111
  %59 = load i16, i16* %arrayidx70, align 2, !dbg !2111
  %conv71 = zext i16 %59 to i32, !dbg !2111
  %sub72 = sub nsw i32 %conv71, 512, !dbg !2112
  store i32 %sub72, i32* %v, align 4, !dbg !2109
  %60 = load i32, i32* %y00, align 4, !dbg !2113
  %61 = load i32, i32* %cy, align 4, !dbg !2114
  %mul73 = mul nsw i32 %60, %61, !dbg !2115
  %62 = load i32, i32* %crv, align 4, !dbg !2116
  %63 = load i32, i32* %v, align 4, !dbg !2117
  %mul74 = mul nsw i32 %62, %63, !dbg !2118
  %add75 = add nsw i32 %mul73, %mul74, !dbg !2119
  %add76 = add nsw i32 %add75, 256, !dbg !2120
  %shr77 = ashr i32 %add76, 9, !dbg !2121
  store i32 %shr77, i32* %a.addr.i, align 4, !dbg !2122
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !2123
  %add.i = add i32 %64, 32768, !dbg !2124
  %and.i = and i32 %add.i, -65536, !dbg !2125
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2125
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2126

if.then.i:                                        ; preds = %for.body32
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !2127
  %shr.i = ashr i32 %65, 31, !dbg !2128
  %xor.i = xor i32 %shr.i, 32767, !dbg !2129
  %conv.i = trunc i32 %xor.i to i16, !dbg !2130
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !2131
  br label %av_clip_int16_c.exit, !dbg !2131

if.else.i:                                        ; preds = %for.body32
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !2132
  %conv1.i = trunc i32 %66 to i16, !dbg !2132
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !2133
  br label %av_clip_int16_c.exit, !dbg !2133

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %67 = load i16, i16* %retval.i, align 2, !dbg !2134
  %68 = load i32, i32* %x, align 4, !dbg !2135
  %shl78 = shl i32 %68, 1, !dbg !2136
  %idxprom79 = sext i32 %shl78 to i64, !dbg !2137
  %69 = load i16*, i16** %rgb0, align 8, !dbg !2137
  %arrayidx80 = getelementptr inbounds i16, i16* %69, i64 %idxprom79, !dbg !2137
  store i16 %67, i16* %arrayidx80, align 2, !dbg !2138
  %70 = load i32, i32* %y01, align 4, !dbg !2139
  %71 = load i32, i32* %cy, align 4, !dbg !2140
  %mul81 = mul nsw i32 %70, %71, !dbg !2141
  %72 = load i32, i32* %crv, align 4, !dbg !2142
  %73 = load i32, i32* %v, align 4, !dbg !2143
  %mul82 = mul nsw i32 %72, %73, !dbg !2144
  %add83 = add nsw i32 %mul81, %mul82, !dbg !2145
  %add84 = add nsw i32 %add83, 256, !dbg !2146
  %shr85 = ashr i32 %add84, 9, !dbg !2147
  store i32 %shr85, i32* %a.addr.i339, align 4, !dbg !2148
  %74 = load i32, i32* %a.addr.i339, align 4, !dbg !2149
  %add.i340 = add i32 %74, 32768, !dbg !2150
  %and.i341 = and i32 %add.i340, -65536, !dbg !2151
  %tobool.i342 = icmp ne i32 %and.i341, 0, !dbg !2151
  br i1 %tobool.i342, label %if.then.i346, label %if.else.i348, !dbg !2152

if.then.i346:                                     ; preds = %av_clip_int16_c.exit
  %75 = load i32, i32* %a.addr.i339, align 4, !dbg !2153
  %shr.i343 = ashr i32 %75, 31, !dbg !2154
  %xor.i344 = xor i32 %shr.i343, 32767, !dbg !2155
  %conv.i345 = trunc i32 %xor.i344 to i16, !dbg !2156
  store i16 %conv.i345, i16* %retval.i338, align 2, !dbg !2157
  br label %av_clip_int16_c.exit349, !dbg !2157

if.else.i348:                                     ; preds = %av_clip_int16_c.exit
  %76 = load i32, i32* %a.addr.i339, align 4, !dbg !2158
  %conv1.i347 = trunc i32 %76 to i16, !dbg !2158
  store i16 %conv1.i347, i16* %retval.i338, align 2, !dbg !2159
  br label %av_clip_int16_c.exit349, !dbg !2159

av_clip_int16_c.exit349:                          ; preds = %if.then.i346, %if.else.i348
  %77 = load i16, i16* %retval.i338, align 2, !dbg !2160
  %78 = load i32, i32* %x, align 4, !dbg !2161
  %mul87 = mul nsw i32 2, %78, !dbg !2162
  %add88 = add nsw i32 %mul87, 1, !dbg !2163
  %idxprom89 = sext i32 %add88 to i64, !dbg !2164
  %79 = load i16*, i16** %rgb0, align 8, !dbg !2164
  %arrayidx90 = getelementptr inbounds i16, i16* %79, i64 %idxprom89, !dbg !2164
  store i16 %77, i16* %arrayidx90, align 2, !dbg !2165
  %80 = load i32, i32* %y10, align 4, !dbg !2166
  %81 = load i32, i32* %cy, align 4, !dbg !2167
  %mul91 = mul nsw i32 %80, %81, !dbg !2168
  %82 = load i32, i32* %crv, align 4, !dbg !2169
  %83 = load i32, i32* %v, align 4, !dbg !2170
  %mul92 = mul nsw i32 %82, %83, !dbg !2171
  %add93 = add nsw i32 %mul91, %mul92, !dbg !2172
  %add94 = add nsw i32 %add93, 256, !dbg !2173
  %shr95 = ashr i32 %add94, 9, !dbg !2174
  store i32 %shr95, i32* %a.addr.i327, align 4, !dbg !2175
  %84 = load i32, i32* %a.addr.i327, align 4, !dbg !2176
  %add.i328 = add i32 %84, 32768, !dbg !2177
  %and.i329 = and i32 %add.i328, -65536, !dbg !2178
  %tobool.i330 = icmp ne i32 %and.i329, 0, !dbg !2178
  br i1 %tobool.i330, label %if.then.i334, label %if.else.i336, !dbg !2179

if.then.i334:                                     ; preds = %av_clip_int16_c.exit349
  %85 = load i32, i32* %a.addr.i327, align 4, !dbg !2180
  %shr.i331 = ashr i32 %85, 31, !dbg !2181
  %xor.i332 = xor i32 %shr.i331, 32767, !dbg !2182
  %conv.i333 = trunc i32 %xor.i332 to i16, !dbg !2183
  store i16 %conv.i333, i16* %retval.i326, align 2, !dbg !2184
  br label %av_clip_int16_c.exit337, !dbg !2184

if.else.i336:                                     ; preds = %av_clip_int16_c.exit349
  %86 = load i32, i32* %a.addr.i327, align 4, !dbg !2185
  %conv1.i335 = trunc i32 %86 to i16, !dbg !2185
  store i16 %conv1.i335, i16* %retval.i326, align 2, !dbg !2186
  br label %av_clip_int16_c.exit337, !dbg !2186

av_clip_int16_c.exit337:                          ; preds = %if.then.i334, %if.else.i336
  %87 = load i16, i16* %retval.i326, align 2, !dbg !2187
  %88 = load i32, i32* %x, align 4, !dbg !2188
  %mul97 = mul nsw i32 2, %88, !dbg !2189
  %conv98 = sext i32 %mul97 to i64, !dbg !2190
  %89 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2191
  %add99 = add nsw i64 %conv98, %89, !dbg !2192
  %90 = load i16*, i16** %rgb0, align 8, !dbg !2193
  %arrayidx100 = getelementptr inbounds i16, i16* %90, i64 %add99, !dbg !2193
  store i16 %87, i16* %arrayidx100, align 2, !dbg !2194
  %91 = load i32, i32* %y11, align 4, !dbg !2195
  %92 = load i32, i32* %cy, align 4, !dbg !2196
  %mul101 = mul nsw i32 %91, %92, !dbg !2197
  %93 = load i32, i32* %crv, align 4, !dbg !2198
  %94 = load i32, i32* %v, align 4, !dbg !2199
  %mul102 = mul nsw i32 %93, %94, !dbg !2200
  %add103 = add nsw i32 %mul101, %mul102, !dbg !2201
  %add104 = add nsw i32 %add103, 256, !dbg !2202
  %shr105 = ashr i32 %add104, 9, !dbg !2203
  store i32 %shr105, i32* %a.addr.i315, align 4, !dbg !2204
  %95 = load i32, i32* %a.addr.i315, align 4, !dbg !2205
  %add.i316 = add i32 %95, 32768, !dbg !2206
  %and.i317 = and i32 %add.i316, -65536, !dbg !2207
  %tobool.i318 = icmp ne i32 %and.i317, 0, !dbg !2207
  br i1 %tobool.i318, label %if.then.i322, label %if.else.i324, !dbg !2208

if.then.i322:                                     ; preds = %av_clip_int16_c.exit337
  %96 = load i32, i32* %a.addr.i315, align 4, !dbg !2209
  %shr.i319 = ashr i32 %96, 31, !dbg !2210
  %xor.i320 = xor i32 %shr.i319, 32767, !dbg !2211
  %conv.i321 = trunc i32 %xor.i320 to i16, !dbg !2212
  store i16 %conv.i321, i16* %retval.i314, align 2, !dbg !2213
  br label %av_clip_int16_c.exit325, !dbg !2213

if.else.i324:                                     ; preds = %av_clip_int16_c.exit337
  %97 = load i32, i32* %a.addr.i315, align 4, !dbg !2214
  %conv1.i323 = trunc i32 %97 to i16, !dbg !2214
  store i16 %conv1.i323, i16* %retval.i314, align 2, !dbg !2215
  br label %av_clip_int16_c.exit325, !dbg !2215

av_clip_int16_c.exit325:                          ; preds = %if.then.i322, %if.else.i324
  %98 = load i16, i16* %retval.i314, align 2, !dbg !2216
  %99 = load i32, i32* %x, align 4, !dbg !2217
  %mul107 = mul nsw i32 2, %99, !dbg !2218
  %conv108 = sext i32 %mul107 to i64, !dbg !2219
  %100 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2220
  %add109 = add nsw i64 %conv108, %100, !dbg !2221
  %add110 = add nsw i64 %add109, 1, !dbg !2222
  %101 = load i16*, i16** %rgb0, align 8, !dbg !2223
  %arrayidx111 = getelementptr inbounds i16, i16* %101, i64 %add110, !dbg !2223
  store i16 %98, i16* %arrayidx111, align 2, !dbg !2224
  %102 = load i32, i32* %y00, align 4, !dbg !2225
  %103 = load i32, i32* %cy, align 4, !dbg !2226
  %mul112 = mul nsw i32 %102, %103, !dbg !2227
  %104 = load i32, i32* %cgu, align 4, !dbg !2228
  %105 = load i32, i32* %u, align 4, !dbg !2229
  %mul113 = mul nsw i32 %104, %105, !dbg !2230
  %add114 = add nsw i32 %mul112, %mul113, !dbg !2231
  %106 = load i32, i32* %cgv, align 4, !dbg !2232
  %107 = load i32, i32* %v, align 4, !dbg !2233
  %mul115 = mul nsw i32 %106, %107, !dbg !2234
  %add116 = add nsw i32 %add114, %mul115, !dbg !2235
  %add117 = add nsw i32 %add116, 256, !dbg !2236
  %shr118 = ashr i32 %add117, 9, !dbg !2237
  store i32 %shr118, i32* %a.addr.i303, align 4, !dbg !2238
  %108 = load i32, i32* %a.addr.i303, align 4, !dbg !2239
  %add.i304 = add i32 %108, 32768, !dbg !2240
  %and.i305 = and i32 %add.i304, -65536, !dbg !2241
  %tobool.i306 = icmp ne i32 %and.i305, 0, !dbg !2241
  br i1 %tobool.i306, label %if.then.i310, label %if.else.i312, !dbg !2242

if.then.i310:                                     ; preds = %av_clip_int16_c.exit325
  %109 = load i32, i32* %a.addr.i303, align 4, !dbg !2243
  %shr.i307 = ashr i32 %109, 31, !dbg !2244
  %xor.i308 = xor i32 %shr.i307, 32767, !dbg !2245
  %conv.i309 = trunc i32 %xor.i308 to i16, !dbg !2246
  store i16 %conv.i309, i16* %retval.i302, align 2, !dbg !2247
  br label %av_clip_int16_c.exit313, !dbg !2247

if.else.i312:                                     ; preds = %av_clip_int16_c.exit325
  %110 = load i32, i32* %a.addr.i303, align 4, !dbg !2248
  %conv1.i311 = trunc i32 %110 to i16, !dbg !2248
  store i16 %conv1.i311, i16* %retval.i302, align 2, !dbg !2249
  br label %av_clip_int16_c.exit313, !dbg !2249

av_clip_int16_c.exit313:                          ; preds = %if.then.i310, %if.else.i312
  %111 = load i16, i16* %retval.i302, align 2, !dbg !2250
  %112 = load i32, i32* %x, align 4, !dbg !2251
  %shl120 = shl i32 %112, 1, !dbg !2252
  %idxprom121 = sext i32 %shl120 to i64, !dbg !2253
  %113 = load i16*, i16** %rgb1, align 8, !dbg !2253
  %arrayidx122 = getelementptr inbounds i16, i16* %113, i64 %idxprom121, !dbg !2253
  store i16 %111, i16* %arrayidx122, align 2, !dbg !2254
  %114 = load i32, i32* %y01, align 4, !dbg !2255
  %115 = load i32, i32* %cy, align 4, !dbg !2256
  %mul123 = mul nsw i32 %114, %115, !dbg !2257
  %116 = load i32, i32* %cgu, align 4, !dbg !2258
  %117 = load i32, i32* %u, align 4, !dbg !2259
  %mul124 = mul nsw i32 %116, %117, !dbg !2260
  %add125 = add nsw i32 %mul123, %mul124, !dbg !2261
  %118 = load i32, i32* %cgv, align 4, !dbg !2262
  %119 = load i32, i32* %v, align 4, !dbg !2263
  %mul126 = mul nsw i32 %118, %119, !dbg !2264
  %add127 = add nsw i32 %add125, %mul126, !dbg !2265
  %add128 = add nsw i32 %add127, 256, !dbg !2266
  %shr129 = ashr i32 %add128, 9, !dbg !2267
  store i32 %shr129, i32* %a.addr.i291, align 4, !dbg !2268
  %120 = load i32, i32* %a.addr.i291, align 4, !dbg !2269
  %add.i292 = add i32 %120, 32768, !dbg !2270
  %and.i293 = and i32 %add.i292, -65536, !dbg !2271
  %tobool.i294 = icmp ne i32 %and.i293, 0, !dbg !2271
  br i1 %tobool.i294, label %if.then.i298, label %if.else.i300, !dbg !2272

if.then.i298:                                     ; preds = %av_clip_int16_c.exit313
  %121 = load i32, i32* %a.addr.i291, align 4, !dbg !2273
  %shr.i295 = ashr i32 %121, 31, !dbg !2274
  %xor.i296 = xor i32 %shr.i295, 32767, !dbg !2275
  %conv.i297 = trunc i32 %xor.i296 to i16, !dbg !2276
  store i16 %conv.i297, i16* %retval.i290, align 2, !dbg !2277
  br label %av_clip_int16_c.exit301, !dbg !2277

if.else.i300:                                     ; preds = %av_clip_int16_c.exit313
  %122 = load i32, i32* %a.addr.i291, align 4, !dbg !2278
  %conv1.i299 = trunc i32 %122 to i16, !dbg !2278
  store i16 %conv1.i299, i16* %retval.i290, align 2, !dbg !2279
  br label %av_clip_int16_c.exit301, !dbg !2279

av_clip_int16_c.exit301:                          ; preds = %if.then.i298, %if.else.i300
  %123 = load i16, i16* %retval.i290, align 2, !dbg !2280
  %124 = load i32, i32* %x, align 4, !dbg !2281
  %mul131 = mul nsw i32 2, %124, !dbg !2282
  %add132 = add nsw i32 %mul131, 1, !dbg !2283
  %idxprom133 = sext i32 %add132 to i64, !dbg !2284
  %125 = load i16*, i16** %rgb1, align 8, !dbg !2284
  %arrayidx134 = getelementptr inbounds i16, i16* %125, i64 %idxprom133, !dbg !2284
  store i16 %123, i16* %arrayidx134, align 2, !dbg !2285
  %126 = load i32, i32* %y10, align 4, !dbg !2286
  %127 = load i32, i32* %cy, align 4, !dbg !2287
  %mul135 = mul nsw i32 %126, %127, !dbg !2288
  %128 = load i32, i32* %cgu, align 4, !dbg !2289
  %129 = load i32, i32* %u, align 4, !dbg !2290
  %mul136 = mul nsw i32 %128, %129, !dbg !2291
  %add137 = add nsw i32 %mul135, %mul136, !dbg !2292
  %130 = load i32, i32* %cgv, align 4, !dbg !2293
  %131 = load i32, i32* %v, align 4, !dbg !2294
  %mul138 = mul nsw i32 %130, %131, !dbg !2295
  %add139 = add nsw i32 %add137, %mul138, !dbg !2296
  %add140 = add nsw i32 %add139, 256, !dbg !2297
  %shr141 = ashr i32 %add140, 9, !dbg !2298
  store i32 %shr141, i32* %a.addr.i279, align 4, !dbg !2299
  %132 = load i32, i32* %a.addr.i279, align 4, !dbg !2300
  %add.i280 = add i32 %132, 32768, !dbg !2301
  %and.i281 = and i32 %add.i280, -65536, !dbg !2302
  %tobool.i282 = icmp ne i32 %and.i281, 0, !dbg !2302
  br i1 %tobool.i282, label %if.then.i286, label %if.else.i288, !dbg !2303

if.then.i286:                                     ; preds = %av_clip_int16_c.exit301
  %133 = load i32, i32* %a.addr.i279, align 4, !dbg !2304
  %shr.i283 = ashr i32 %133, 31, !dbg !2305
  %xor.i284 = xor i32 %shr.i283, 32767, !dbg !2306
  %conv.i285 = trunc i32 %xor.i284 to i16, !dbg !2307
  store i16 %conv.i285, i16* %retval.i278, align 2, !dbg !2308
  br label %av_clip_int16_c.exit289, !dbg !2308

if.else.i288:                                     ; preds = %av_clip_int16_c.exit301
  %134 = load i32, i32* %a.addr.i279, align 4, !dbg !2309
  %conv1.i287 = trunc i32 %134 to i16, !dbg !2309
  store i16 %conv1.i287, i16* %retval.i278, align 2, !dbg !2310
  br label %av_clip_int16_c.exit289, !dbg !2310

av_clip_int16_c.exit289:                          ; preds = %if.then.i286, %if.else.i288
  %135 = load i16, i16* %retval.i278, align 2, !dbg !2311
  %136 = load i32, i32* %x, align 4, !dbg !2312
  %mul143 = mul nsw i32 2, %136, !dbg !2313
  %conv144 = sext i32 %mul143 to i64, !dbg !2314
  %137 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2315
  %add145 = add nsw i64 %conv144, %137, !dbg !2316
  %138 = load i16*, i16** %rgb1, align 8, !dbg !2317
  %arrayidx146 = getelementptr inbounds i16, i16* %138, i64 %add145, !dbg !2317
  store i16 %135, i16* %arrayidx146, align 2, !dbg !2318
  %139 = load i32, i32* %y11, align 4, !dbg !2319
  %140 = load i32, i32* %cy, align 4, !dbg !2320
  %mul147 = mul nsw i32 %139, %140, !dbg !2321
  %141 = load i32, i32* %cgu, align 4, !dbg !2322
  %142 = load i32, i32* %u, align 4, !dbg !2323
  %mul148 = mul nsw i32 %141, %142, !dbg !2324
  %add149 = add nsw i32 %mul147, %mul148, !dbg !2325
  %143 = load i32, i32* %cgv, align 4, !dbg !2326
  %144 = load i32, i32* %v, align 4, !dbg !2327
  %mul150 = mul nsw i32 %143, %144, !dbg !2328
  %add151 = add nsw i32 %add149, %mul150, !dbg !2329
  %add152 = add nsw i32 %add151, 256, !dbg !2330
  %shr153 = ashr i32 %add152, 9, !dbg !2331
  store i32 %shr153, i32* %a.addr.i267, align 4, !dbg !2332
  %145 = load i32, i32* %a.addr.i267, align 4, !dbg !2333
  %add.i268 = add i32 %145, 32768, !dbg !2334
  %and.i269 = and i32 %add.i268, -65536, !dbg !2335
  %tobool.i270 = icmp ne i32 %and.i269, 0, !dbg !2335
  br i1 %tobool.i270, label %if.then.i274, label %if.else.i276, !dbg !2336

if.then.i274:                                     ; preds = %av_clip_int16_c.exit289
  %146 = load i32, i32* %a.addr.i267, align 4, !dbg !2337
  %shr.i271 = ashr i32 %146, 31, !dbg !2338
  %xor.i272 = xor i32 %shr.i271, 32767, !dbg !2339
  %conv.i273 = trunc i32 %xor.i272 to i16, !dbg !2340
  store i16 %conv.i273, i16* %retval.i266, align 2, !dbg !2341
  br label %av_clip_int16_c.exit277, !dbg !2341

if.else.i276:                                     ; preds = %av_clip_int16_c.exit289
  %147 = load i32, i32* %a.addr.i267, align 4, !dbg !2342
  %conv1.i275 = trunc i32 %147 to i16, !dbg !2342
  store i16 %conv1.i275, i16* %retval.i266, align 2, !dbg !2343
  br label %av_clip_int16_c.exit277, !dbg !2343

av_clip_int16_c.exit277:                          ; preds = %if.then.i274, %if.else.i276
  %148 = load i16, i16* %retval.i266, align 2, !dbg !2344
  %149 = load i32, i32* %x, align 4, !dbg !2345
  %mul155 = mul nsw i32 2, %149, !dbg !2346
  %conv156 = sext i32 %mul155 to i64, !dbg !2347
  %150 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2348
  %add157 = add nsw i64 %conv156, %150, !dbg !2349
  %add158 = add nsw i64 %add157, 1, !dbg !2350
  %151 = load i16*, i16** %rgb1, align 8, !dbg !2351
  %arrayidx159 = getelementptr inbounds i16, i16* %151, i64 %add158, !dbg !2351
  store i16 %148, i16* %arrayidx159, align 2, !dbg !2352
  %152 = load i32, i32* %y00, align 4, !dbg !2353
  %153 = load i32, i32* %cy, align 4, !dbg !2354
  %mul160 = mul nsw i32 %152, %153, !dbg !2355
  %154 = load i32, i32* %cbu, align 4, !dbg !2356
  %155 = load i32, i32* %u, align 4, !dbg !2357
  %mul161 = mul nsw i32 %154, %155, !dbg !2358
  %add162 = add nsw i32 %mul160, %mul161, !dbg !2359
  %add163 = add nsw i32 %add162, 256, !dbg !2360
  %shr164 = ashr i32 %add163, 9, !dbg !2361
  store i32 %shr164, i32* %a.addr.i255, align 4, !dbg !2362
  %156 = load i32, i32* %a.addr.i255, align 4, !dbg !2363
  %add.i256 = add i32 %156, 32768, !dbg !2364
  %and.i257 = and i32 %add.i256, -65536, !dbg !2365
  %tobool.i258 = icmp ne i32 %and.i257, 0, !dbg !2365
  br i1 %tobool.i258, label %if.then.i262, label %if.else.i264, !dbg !2366

if.then.i262:                                     ; preds = %av_clip_int16_c.exit277
  %157 = load i32, i32* %a.addr.i255, align 4, !dbg !2367
  %shr.i259 = ashr i32 %157, 31, !dbg !2368
  %xor.i260 = xor i32 %shr.i259, 32767, !dbg !2369
  %conv.i261 = trunc i32 %xor.i260 to i16, !dbg !2370
  store i16 %conv.i261, i16* %retval.i254, align 2, !dbg !2371
  br label %av_clip_int16_c.exit265, !dbg !2371

if.else.i264:                                     ; preds = %av_clip_int16_c.exit277
  %158 = load i32, i32* %a.addr.i255, align 4, !dbg !2372
  %conv1.i263 = trunc i32 %158 to i16, !dbg !2372
  store i16 %conv1.i263, i16* %retval.i254, align 2, !dbg !2373
  br label %av_clip_int16_c.exit265, !dbg !2373

av_clip_int16_c.exit265:                          ; preds = %if.then.i262, %if.else.i264
  %159 = load i16, i16* %retval.i254, align 2, !dbg !2374
  %160 = load i32, i32* %x, align 4, !dbg !2375
  %shl166 = shl i32 %160, 1, !dbg !2376
  %idxprom167 = sext i32 %shl166 to i64, !dbg !2377
  %161 = load i16*, i16** %rgb2, align 8, !dbg !2377
  %arrayidx168 = getelementptr inbounds i16, i16* %161, i64 %idxprom167, !dbg !2377
  store i16 %159, i16* %arrayidx168, align 2, !dbg !2378
  %162 = load i32, i32* %y01, align 4, !dbg !2379
  %163 = load i32, i32* %cy, align 4, !dbg !2380
  %mul169 = mul nsw i32 %162, %163, !dbg !2381
  %164 = load i32, i32* %cbu, align 4, !dbg !2382
  %165 = load i32, i32* %u, align 4, !dbg !2383
  %mul170 = mul nsw i32 %164, %165, !dbg !2384
  %add171 = add nsw i32 %mul169, %mul170, !dbg !2385
  %add172 = add nsw i32 %add171, 256, !dbg !2386
  %shr173 = ashr i32 %add172, 9, !dbg !2387
  store i32 %shr173, i32* %a.addr.i243, align 4, !dbg !2388
  %166 = load i32, i32* %a.addr.i243, align 4, !dbg !2389
  %add.i244 = add i32 %166, 32768, !dbg !2390
  %and.i245 = and i32 %add.i244, -65536, !dbg !2391
  %tobool.i246 = icmp ne i32 %and.i245, 0, !dbg !2391
  br i1 %tobool.i246, label %if.then.i250, label %if.else.i252, !dbg !2392

if.then.i250:                                     ; preds = %av_clip_int16_c.exit265
  %167 = load i32, i32* %a.addr.i243, align 4, !dbg !2393
  %shr.i247 = ashr i32 %167, 31, !dbg !2394
  %xor.i248 = xor i32 %shr.i247, 32767, !dbg !2395
  %conv.i249 = trunc i32 %xor.i248 to i16, !dbg !2396
  store i16 %conv.i249, i16* %retval.i242, align 2, !dbg !2397
  br label %av_clip_int16_c.exit253, !dbg !2397

if.else.i252:                                     ; preds = %av_clip_int16_c.exit265
  %168 = load i32, i32* %a.addr.i243, align 4, !dbg !2398
  %conv1.i251 = trunc i32 %168 to i16, !dbg !2398
  store i16 %conv1.i251, i16* %retval.i242, align 2, !dbg !2399
  br label %av_clip_int16_c.exit253, !dbg !2399

av_clip_int16_c.exit253:                          ; preds = %if.then.i250, %if.else.i252
  %169 = load i16, i16* %retval.i242, align 2, !dbg !2400
  %170 = load i32, i32* %x, align 4, !dbg !2401
  %mul175 = mul nsw i32 2, %170, !dbg !2402
  %add176 = add nsw i32 %mul175, 1, !dbg !2403
  %idxprom177 = sext i32 %add176 to i64, !dbg !2404
  %171 = load i16*, i16** %rgb2, align 8, !dbg !2404
  %arrayidx178 = getelementptr inbounds i16, i16* %171, i64 %idxprom177, !dbg !2404
  store i16 %169, i16* %arrayidx178, align 2, !dbg !2405
  %172 = load i32, i32* %y10, align 4, !dbg !2406
  %173 = load i32, i32* %cy, align 4, !dbg !2407
  %mul179 = mul nsw i32 %172, %173, !dbg !2408
  %174 = load i32, i32* %cbu, align 4, !dbg !2409
  %175 = load i32, i32* %u, align 4, !dbg !2410
  %mul180 = mul nsw i32 %174, %175, !dbg !2411
  %add181 = add nsw i32 %mul179, %mul180, !dbg !2412
  %add182 = add nsw i32 %add181, 256, !dbg !2413
  %shr183 = ashr i32 %add182, 9, !dbg !2414
  store i32 %shr183, i32* %a.addr.i231, align 4, !dbg !2415
  %176 = load i32, i32* %a.addr.i231, align 4, !dbg !2416
  %add.i232 = add i32 %176, 32768, !dbg !2417
  %and.i233 = and i32 %add.i232, -65536, !dbg !2418
  %tobool.i234 = icmp ne i32 %and.i233, 0, !dbg !2418
  br i1 %tobool.i234, label %if.then.i238, label %if.else.i240, !dbg !2419

if.then.i238:                                     ; preds = %av_clip_int16_c.exit253
  %177 = load i32, i32* %a.addr.i231, align 4, !dbg !2420
  %shr.i235 = ashr i32 %177, 31, !dbg !2421
  %xor.i236 = xor i32 %shr.i235, 32767, !dbg !2422
  %conv.i237 = trunc i32 %xor.i236 to i16, !dbg !2423
  store i16 %conv.i237, i16* %retval.i230, align 2, !dbg !2424
  br label %av_clip_int16_c.exit241, !dbg !2424

if.else.i240:                                     ; preds = %av_clip_int16_c.exit253
  %178 = load i32, i32* %a.addr.i231, align 4, !dbg !2425
  %conv1.i239 = trunc i32 %178 to i16, !dbg !2425
  store i16 %conv1.i239, i16* %retval.i230, align 2, !dbg !2426
  br label %av_clip_int16_c.exit241, !dbg !2426

av_clip_int16_c.exit241:                          ; preds = %if.then.i238, %if.else.i240
  %179 = load i16, i16* %retval.i230, align 2, !dbg !2427
  %180 = load i32, i32* %x, align 4, !dbg !2428
  %mul185 = mul nsw i32 2, %180, !dbg !2429
  %conv186 = sext i32 %mul185 to i64, !dbg !2430
  %181 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2431
  %add187 = add nsw i64 %conv186, %181, !dbg !2432
  %182 = load i16*, i16** %rgb2, align 8, !dbg !2433
  %arrayidx188 = getelementptr inbounds i16, i16* %182, i64 %add187, !dbg !2433
  store i16 %179, i16* %arrayidx188, align 2, !dbg !2434
  %183 = load i32, i32* %y11, align 4, !dbg !2435
  %184 = load i32, i32* %cy, align 4, !dbg !2436
  %mul189 = mul nsw i32 %183, %184, !dbg !2437
  %185 = load i32, i32* %cbu, align 4, !dbg !2438
  %186 = load i32, i32* %u, align 4, !dbg !2439
  %mul190 = mul nsw i32 %185, %186, !dbg !2440
  %add191 = add nsw i32 %mul189, %mul190, !dbg !2441
  %add192 = add nsw i32 %add191, 256, !dbg !2442
  %shr193 = ashr i32 %add192, 9, !dbg !2443
  store i32 %shr193, i32* %a.addr.i219, align 4, !dbg !2444
  %187 = load i32, i32* %a.addr.i219, align 4, !dbg !2445
  %add.i220 = add i32 %187, 32768, !dbg !2446
  %and.i221 = and i32 %add.i220, -65536, !dbg !2447
  %tobool.i222 = icmp ne i32 %and.i221, 0, !dbg !2447
  br i1 %tobool.i222, label %if.then.i226, label %if.else.i228, !dbg !2448

if.then.i226:                                     ; preds = %av_clip_int16_c.exit241
  %188 = load i32, i32* %a.addr.i219, align 4, !dbg !2449
  %shr.i223 = ashr i32 %188, 31, !dbg !2450
  %xor.i224 = xor i32 %shr.i223, 32767, !dbg !2451
  %conv.i225 = trunc i32 %xor.i224 to i16, !dbg !2452
  store i16 %conv.i225, i16* %retval.i218, align 2, !dbg !2453
  br label %av_clip_int16_c.exit229, !dbg !2453

if.else.i228:                                     ; preds = %av_clip_int16_c.exit241
  %189 = load i32, i32* %a.addr.i219, align 4, !dbg !2454
  %conv1.i227 = trunc i32 %189 to i16, !dbg !2454
  store i16 %conv1.i227, i16* %retval.i218, align 2, !dbg !2455
  br label %av_clip_int16_c.exit229, !dbg !2455

av_clip_int16_c.exit229:                          ; preds = %if.then.i226, %if.else.i228
  %190 = load i16, i16* %retval.i218, align 2, !dbg !2456
  %191 = load i32, i32* %x, align 4, !dbg !2457
  %mul195 = mul nsw i32 2, %191, !dbg !2458
  %conv196 = sext i32 %mul195 to i64, !dbg !2459
  %192 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2460
  %add197 = add nsw i64 %conv196, %192, !dbg !2461
  %add198 = add nsw i64 %add197, 1, !dbg !2462
  %193 = load i16*, i16** %rgb2, align 8, !dbg !2463
  %arrayidx199 = getelementptr inbounds i16, i16* %193, i64 %add198, !dbg !2463
  store i16 %190, i16* %arrayidx199, align 2, !dbg !2464
  br label %for.inc, !dbg !2465

for.inc:                                          ; preds = %av_clip_int16_c.exit229
  %194 = load i32, i32* %x, align 4, !dbg !2466
  %inc = add nsw i32 %194, 1, !dbg !2466
  store i32 %inc, i32* %x, align 4, !dbg !2466
  br label %for.cond29, !dbg !2468, !llvm.loop !2469

for.end:                                          ; preds = %for.cond29
  %195 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2471
  %arrayidx200 = getelementptr inbounds i64, i64* %195, i64 0, !dbg !2471
  %196 = load i64, i64* %arrayidx200, align 8, !dbg !2471
  %mul201 = mul nsw i64 %196, 2, !dbg !2472
  %div202 = udiv i64 %mul201, 2, !dbg !2473
  %197 = load i16*, i16** %yuv0, align 8, !dbg !2474
  %add.ptr = getelementptr inbounds i16, i16* %197, i64 %div202, !dbg !2474
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !2474
  %198 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2475
  %arrayidx203 = getelementptr inbounds i64, i64* %198, i64 1, !dbg !2475
  %199 = load i64, i64* %arrayidx203, align 8, !dbg !2475
  %div204 = udiv i64 %199, 2, !dbg !2476
  %200 = load i16*, i16** %yuv1, align 8, !dbg !2477
  %add.ptr205 = getelementptr inbounds i16, i16* %200, i64 %div204, !dbg !2477
  store i16* %add.ptr205, i16** %yuv1, align 8, !dbg !2477
  %201 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2478
  %arrayidx206 = getelementptr inbounds i64, i64* %201, i64 2, !dbg !2478
  %202 = load i64, i64* %arrayidx206, align 8, !dbg !2478
  %div207 = udiv i64 %202, 2, !dbg !2479
  %203 = load i16*, i16** %yuv2, align 8, !dbg !2480
  %add.ptr208 = getelementptr inbounds i16, i16* %203, i64 %div207, !dbg !2480
  store i16* %add.ptr208, i16** %yuv2, align 8, !dbg !2480
  %204 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2481
  %mul209 = mul nsw i64 %204, 2, !dbg !2482
  %205 = load i16*, i16** %rgb0, align 8, !dbg !2483
  %add.ptr210 = getelementptr inbounds i16, i16* %205, i64 %mul209, !dbg !2483
  store i16* %add.ptr210, i16** %rgb0, align 8, !dbg !2483
  %206 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2484
  %mul211 = mul nsw i64 %206, 2, !dbg !2485
  %207 = load i16*, i16** %rgb1, align 8, !dbg !2486
  %add.ptr212 = getelementptr inbounds i16, i16* %207, i64 %mul211, !dbg !2486
  store i16* %add.ptr212, i16** %rgb1, align 8, !dbg !2486
  %208 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2487
  %mul213 = mul nsw i64 %208, 2, !dbg !2488
  %209 = load i16*, i16** %rgb2, align 8, !dbg !2489
  %add.ptr214 = getelementptr inbounds i16, i16* %209, i64 %mul213, !dbg !2489
  store i16* %add.ptr214, i16** %rgb2, align 8, !dbg !2489
  br label %for.inc215, !dbg !2490

for.inc215:                                       ; preds = %for.end
  %210 = load i32, i32* %y, align 4, !dbg !2491
  %inc216 = add nsw i32 %210, 1, !dbg !2491
  store i32 %inc216, i32* %y, align 4, !dbg !2491
  br label %for.cond, !dbg !2493, !llvm.loop !2494

for.end217:                                       ; preds = %for.cond
  ret void, !dbg !2496
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_444p12_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !2497 {
entry:
  %retval.i102 = alloca i16, align 2
  %a.addr.i103 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i103, metadata !267, metadata !94), !dbg !2498
  %retval.i90 = alloca i16, align 2
  %a.addr.i91 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i91, metadata !267, metadata !94), !dbg !2506
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !2508
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !2510, metadata !94), !dbg !2511
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !2512, metadata !94), !dbg !2513
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !2514, metadata !94), !dbg !2515
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !2516, metadata !94), !dbg !2517
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !2518, metadata !94), !dbg !2519
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2520, metadata !94), !dbg !2521
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !2522, metadata !94), !dbg !2523
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !2524, metadata !94), !dbg !2525
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !2526, metadata !94), !dbg !2527
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !2528
  %1 = bitcast i8** %0 to i16**, !dbg !2529
  store i16** %1, i16*** %yuv, align 8, !dbg !2527
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !2530, metadata !94), !dbg !2531
  %2 = load i16**, i16*** %yuv, align 8, !dbg !2532
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !2532
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !2532
  store i16* %3, i16** %yuv0, align 8, !dbg !2531
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !2533, metadata !94), !dbg !2534
  %4 = load i16**, i16*** %yuv, align 8, !dbg !2535
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !2535
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !2535
  store i16* %5, i16** %yuv1, align 8, !dbg !2534
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !2536, metadata !94), !dbg !2537
  %6 = load i16**, i16*** %yuv, align 8, !dbg !2538
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !2538
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !2538
  store i16* %7, i16** %yuv2, align 8, !dbg !2537
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !2539, metadata !94), !dbg !2540
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !2541
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !2541
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !2541
  store i16* %9, i16** %rgb0, align 8, !dbg !2540
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !2542, metadata !94), !dbg !2543
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !2544
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !2544
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !2544
  store i16* %11, i16** %rgb1, align 8, !dbg !2543
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !2545, metadata !94), !dbg !2546
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !2547
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !2547
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !2547
  store i16* %13, i16** %rgb2, align 8, !dbg !2546
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2548, metadata !94), !dbg !2549
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2550, metadata !94), !dbg !2551
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !2552, metadata !94), !dbg !2553
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2554
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !2554
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !2554
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !2554
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !2554
  %conv = sext i16 %15 to i32, !dbg !2554
  store i32 %conv, i32* %cy, align 4, !dbg !2553
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !2555, metadata !94), !dbg !2556
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2557
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !2557
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !2557
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !2557
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !2557
  %conv12 = sext i16 %17 to i32, !dbg !2557
  store i32 %conv12, i32* %crv, align 4, !dbg !2556
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !2558, metadata !94), !dbg !2559
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2560
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !2560
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !2560
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !2560
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !2560
  %conv16 = sext i16 %19 to i32, !dbg !2560
  store i32 %conv16, i32* %cgu, align 4, !dbg !2559
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !2561, metadata !94), !dbg !2562
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2563
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !2563
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !2563
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !2563
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !2563
  %conv20 = sext i16 %21 to i32, !dbg !2563
  store i32 %conv20, i32* %cgv, align 4, !dbg !2562
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !2564, metadata !94), !dbg !2565
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2566
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !2566
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !2566
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !2566
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !2566
  %conv24 = sext i16 %23 to i32, !dbg !2566
  store i32 %conv24, i32* %cbu, align 4, !dbg !2565
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !2567, metadata !94), !dbg !2568
  store i32 11, i32* %sh, align 4, !dbg !2568
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !2569, metadata !94), !dbg !2570
  store i32 1024, i32* %rnd, align 4, !dbg !2570
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !2571, metadata !94), !dbg !2572
  store i32 2048, i32* %uv_offset, align 4, !dbg !2572
  %24 = load i32, i32* %w.addr, align 4, !dbg !2573
  %add = add nsw i32 %24, 1, !dbg !2574
  %sub = sub nsw i32 %add, 1, !dbg !2575
  %shr = ashr i32 %sub, 0, !dbg !2576
  store i32 %shr, i32* %w.addr, align 4, !dbg !2577
  %25 = load i32, i32* %h.addr, align 4, !dbg !2578
  %add25 = add nsw i32 %25, 1, !dbg !2579
  %sub26 = sub nsw i32 %add25, 1, !dbg !2580
  %shr27 = ashr i32 %sub26, 0, !dbg !2581
  store i32 %shr27, i32* %h.addr, align 4, !dbg !2582
  store i32 0, i32* %y, align 4, !dbg !2583
  br label %for.cond, !dbg !2584

for.cond:                                         ; preds = %for.inc87, %entry
  %26 = load i32, i32* %y, align 4, !dbg !2585
  %27 = load i32, i32* %h.addr, align 4, !dbg !2587
  %cmp = icmp slt i32 %26, %27, !dbg !2588
  br i1 %cmp, label %for.body, label %for.end89, !dbg !2589

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !2590
  br label %for.cond29, !dbg !2591

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !2592
  %29 = load i32, i32* %w.addr, align 4, !dbg !2594
  %cmp30 = icmp slt i32 %28, %29, !dbg !2595
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !2596

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !2597, metadata !94), !dbg !2598
  %30 = load i32, i32* %x, align 4, !dbg !2599
  %shl = shl i32 %30, 0, !dbg !2600
  %idxprom = sext i32 %shl to i64, !dbg !2601
  %31 = load i16*, i16** %yuv0, align 8, !dbg !2601
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !2601
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !2601
  %conv34 = zext i16 %32 to i32, !dbg !2601
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2602
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !2602
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !2602
  %conv36 = sext i16 %34 to i32, !dbg !2602
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !2603
  store i32 %sub37, i32* %y00, align 4, !dbg !2598
  call void @llvm.dbg.declare(metadata i32* %u, metadata !2604, metadata !94), !dbg !2605
  %35 = load i32, i32* %x, align 4, !dbg !2606
  %idxprom38 = sext i32 %35 to i64, !dbg !2607
  %36 = load i16*, i16** %yuv1, align 8, !dbg !2607
  %arrayidx39 = getelementptr inbounds i16, i16* %36, i64 %idxprom38, !dbg !2607
  %37 = load i16, i16* %arrayidx39, align 2, !dbg !2607
  %conv40 = zext i16 %37 to i32, !dbg !2607
  %sub41 = sub nsw i32 %conv40, 2048, !dbg !2608
  store i32 %sub41, i32* %u, align 4, !dbg !2605
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2609, metadata !94), !dbg !2610
  %38 = load i32, i32* %x, align 4, !dbg !2611
  %idxprom42 = sext i32 %38 to i64, !dbg !2612
  %39 = load i16*, i16** %yuv2, align 8, !dbg !2612
  %arrayidx43 = getelementptr inbounds i16, i16* %39, i64 %idxprom42, !dbg !2612
  %40 = load i16, i16* %arrayidx43, align 2, !dbg !2612
  %conv44 = zext i16 %40 to i32, !dbg !2612
  %sub45 = sub nsw i32 %conv44, 2048, !dbg !2613
  store i32 %sub45, i32* %v, align 4, !dbg !2610
  %41 = load i32, i32* %y00, align 4, !dbg !2614
  %42 = load i32, i32* %cy, align 4, !dbg !2615
  %mul = mul nsw i32 %41, %42, !dbg !2616
  %43 = load i32, i32* %crv, align 4, !dbg !2617
  %44 = load i32, i32* %v, align 4, !dbg !2618
  %mul46 = mul nsw i32 %43, %44, !dbg !2619
  %add47 = add nsw i32 %mul, %mul46, !dbg !2620
  %add48 = add nsw i32 %add47, 1024, !dbg !2621
  %shr49 = ashr i32 %add48, 11, !dbg !2622
  store i32 %shr49, i32* %a.addr.i, align 4, !dbg !2623
  %45 = load i32, i32* %a.addr.i, align 4, !dbg !2624
  %add.i = add i32 %45, 32768, !dbg !2625
  %and.i = and i32 %add.i, -65536, !dbg !2626
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2626
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2627

if.then.i:                                        ; preds = %for.body32
  %46 = load i32, i32* %a.addr.i, align 4, !dbg !2628
  %shr.i = ashr i32 %46, 31, !dbg !2629
  %xor.i = xor i32 %shr.i, 32767, !dbg !2630
  %conv.i = trunc i32 %xor.i to i16, !dbg !2631
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !2632
  br label %av_clip_int16_c.exit, !dbg !2632

if.else.i:                                        ; preds = %for.body32
  %47 = load i32, i32* %a.addr.i, align 4, !dbg !2633
  %conv1.i = trunc i32 %47 to i16, !dbg !2633
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !2634
  br label %av_clip_int16_c.exit, !dbg !2634

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %48 = load i16, i16* %retval.i, align 2, !dbg !2635
  %49 = load i32, i32* %x, align 4, !dbg !2636
  %shl50 = shl i32 %49, 0, !dbg !2637
  %idxprom51 = sext i32 %shl50 to i64, !dbg !2638
  %50 = load i16*, i16** %rgb0, align 8, !dbg !2638
  %arrayidx52 = getelementptr inbounds i16, i16* %50, i64 %idxprom51, !dbg !2638
  store i16 %48, i16* %arrayidx52, align 2, !dbg !2639
  %51 = load i32, i32* %y00, align 4, !dbg !2640
  %52 = load i32, i32* %cy, align 4, !dbg !2641
  %mul53 = mul nsw i32 %51, %52, !dbg !2642
  %53 = load i32, i32* %cgu, align 4, !dbg !2643
  %54 = load i32, i32* %u, align 4, !dbg !2644
  %mul54 = mul nsw i32 %53, %54, !dbg !2645
  %add55 = add nsw i32 %mul53, %mul54, !dbg !2646
  %55 = load i32, i32* %cgv, align 4, !dbg !2647
  %56 = load i32, i32* %v, align 4, !dbg !2648
  %mul56 = mul nsw i32 %55, %56, !dbg !2649
  %add57 = add nsw i32 %add55, %mul56, !dbg !2650
  %add58 = add nsw i32 %add57, 1024, !dbg !2651
  %shr59 = ashr i32 %add58, 11, !dbg !2652
  store i32 %shr59, i32* %a.addr.i103, align 4, !dbg !2653
  %57 = load i32, i32* %a.addr.i103, align 4, !dbg !2654
  %add.i104 = add i32 %57, 32768, !dbg !2655
  %and.i105 = and i32 %add.i104, -65536, !dbg !2656
  %tobool.i106 = icmp ne i32 %and.i105, 0, !dbg !2656
  br i1 %tobool.i106, label %if.then.i110, label %if.else.i112, !dbg !2657

if.then.i110:                                     ; preds = %av_clip_int16_c.exit
  %58 = load i32, i32* %a.addr.i103, align 4, !dbg !2658
  %shr.i107 = ashr i32 %58, 31, !dbg !2659
  %xor.i108 = xor i32 %shr.i107, 32767, !dbg !2660
  %conv.i109 = trunc i32 %xor.i108 to i16, !dbg !2661
  store i16 %conv.i109, i16* %retval.i102, align 2, !dbg !2662
  br label %av_clip_int16_c.exit113, !dbg !2662

if.else.i112:                                     ; preds = %av_clip_int16_c.exit
  %59 = load i32, i32* %a.addr.i103, align 4, !dbg !2663
  %conv1.i111 = trunc i32 %59 to i16, !dbg !2663
  store i16 %conv1.i111, i16* %retval.i102, align 2, !dbg !2664
  br label %av_clip_int16_c.exit113, !dbg !2664

av_clip_int16_c.exit113:                          ; preds = %if.then.i110, %if.else.i112
  %60 = load i16, i16* %retval.i102, align 2, !dbg !2665
  %61 = load i32, i32* %x, align 4, !dbg !2666
  %shl61 = shl i32 %61, 0, !dbg !2667
  %idxprom62 = sext i32 %shl61 to i64, !dbg !2668
  %62 = load i16*, i16** %rgb1, align 8, !dbg !2668
  %arrayidx63 = getelementptr inbounds i16, i16* %62, i64 %idxprom62, !dbg !2668
  store i16 %60, i16* %arrayidx63, align 2, !dbg !2669
  %63 = load i32, i32* %y00, align 4, !dbg !2670
  %64 = load i32, i32* %cy, align 4, !dbg !2671
  %mul64 = mul nsw i32 %63, %64, !dbg !2672
  %65 = load i32, i32* %cbu, align 4, !dbg !2673
  %66 = load i32, i32* %u, align 4, !dbg !2674
  %mul65 = mul nsw i32 %65, %66, !dbg !2675
  %add66 = add nsw i32 %mul64, %mul65, !dbg !2676
  %add67 = add nsw i32 %add66, 1024, !dbg !2677
  %shr68 = ashr i32 %add67, 11, !dbg !2678
  store i32 %shr68, i32* %a.addr.i91, align 4, !dbg !2679
  %67 = load i32, i32* %a.addr.i91, align 4, !dbg !2680
  %add.i92 = add i32 %67, 32768, !dbg !2681
  %and.i93 = and i32 %add.i92, -65536, !dbg !2682
  %tobool.i94 = icmp ne i32 %and.i93, 0, !dbg !2682
  br i1 %tobool.i94, label %if.then.i98, label %if.else.i100, !dbg !2683

if.then.i98:                                      ; preds = %av_clip_int16_c.exit113
  %68 = load i32, i32* %a.addr.i91, align 4, !dbg !2684
  %shr.i95 = ashr i32 %68, 31, !dbg !2685
  %xor.i96 = xor i32 %shr.i95, 32767, !dbg !2686
  %conv.i97 = trunc i32 %xor.i96 to i16, !dbg !2687
  store i16 %conv.i97, i16* %retval.i90, align 2, !dbg !2688
  br label %av_clip_int16_c.exit101, !dbg !2688

if.else.i100:                                     ; preds = %av_clip_int16_c.exit113
  %69 = load i32, i32* %a.addr.i91, align 4, !dbg !2689
  %conv1.i99 = trunc i32 %69 to i16, !dbg !2689
  store i16 %conv1.i99, i16* %retval.i90, align 2, !dbg !2690
  br label %av_clip_int16_c.exit101, !dbg !2690

av_clip_int16_c.exit101:                          ; preds = %if.then.i98, %if.else.i100
  %70 = load i16, i16* %retval.i90, align 2, !dbg !2691
  %71 = load i32, i32* %x, align 4, !dbg !2692
  %shl70 = shl i32 %71, 0, !dbg !2693
  %idxprom71 = sext i32 %shl70 to i64, !dbg !2694
  %72 = load i16*, i16** %rgb2, align 8, !dbg !2694
  %arrayidx72 = getelementptr inbounds i16, i16* %72, i64 %idxprom71, !dbg !2694
  store i16 %70, i16* %arrayidx72, align 2, !dbg !2695
  br label %for.inc, !dbg !2696

for.inc:                                          ; preds = %av_clip_int16_c.exit101
  %73 = load i32, i32* %x, align 4, !dbg !2697
  %inc = add nsw i32 %73, 1, !dbg !2697
  store i32 %inc, i32* %x, align 4, !dbg !2697
  br label %for.cond29, !dbg !2699, !llvm.loop !2700

for.end:                                          ; preds = %for.cond29
  %74 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2702
  %arrayidx73 = getelementptr inbounds i64, i64* %74, i64 0, !dbg !2702
  %75 = load i64, i64* %arrayidx73, align 8, !dbg !2702
  %mul74 = mul nsw i64 %75, 1, !dbg !2703
  %div = udiv i64 %mul74, 2, !dbg !2704
  %76 = load i16*, i16** %yuv0, align 8, !dbg !2705
  %add.ptr = getelementptr inbounds i16, i16* %76, i64 %div, !dbg !2705
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !2705
  %77 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2706
  %arrayidx75 = getelementptr inbounds i64, i64* %77, i64 1, !dbg !2706
  %78 = load i64, i64* %arrayidx75, align 8, !dbg !2706
  %div76 = udiv i64 %78, 2, !dbg !2707
  %79 = load i16*, i16** %yuv1, align 8, !dbg !2708
  %add.ptr77 = getelementptr inbounds i16, i16* %79, i64 %div76, !dbg !2708
  store i16* %add.ptr77, i16** %yuv1, align 8, !dbg !2708
  %80 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !2709
  %arrayidx78 = getelementptr inbounds i64, i64* %80, i64 2, !dbg !2709
  %81 = load i64, i64* %arrayidx78, align 8, !dbg !2709
  %div79 = udiv i64 %81, 2, !dbg !2710
  %82 = load i16*, i16** %yuv2, align 8, !dbg !2711
  %add.ptr80 = getelementptr inbounds i16, i16* %82, i64 %div79, !dbg !2711
  store i16* %add.ptr80, i16** %yuv2, align 8, !dbg !2711
  %83 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2712
  %mul81 = mul nsw i64 %83, 1, !dbg !2713
  %84 = load i16*, i16** %rgb0, align 8, !dbg !2714
  %add.ptr82 = getelementptr inbounds i16, i16* %84, i64 %mul81, !dbg !2714
  store i16* %add.ptr82, i16** %rgb0, align 8, !dbg !2714
  %85 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2715
  %mul83 = mul nsw i64 %85, 1, !dbg !2716
  %86 = load i16*, i16** %rgb1, align 8, !dbg !2717
  %add.ptr84 = getelementptr inbounds i16, i16* %86, i64 %mul83, !dbg !2717
  store i16* %add.ptr84, i16** %rgb1, align 8, !dbg !2717
  %87 = load i64, i64* %rgb_stride.addr, align 8, !dbg !2718
  %mul85 = mul nsw i64 %87, 1, !dbg !2719
  %88 = load i16*, i16** %rgb2, align 8, !dbg !2720
  %add.ptr86 = getelementptr inbounds i16, i16* %88, i64 %mul85, !dbg !2720
  store i16* %add.ptr86, i16** %rgb2, align 8, !dbg !2720
  br label %for.inc87, !dbg !2721

for.inc87:                                        ; preds = %for.end
  %89 = load i32, i32* %y, align 4, !dbg !2722
  %inc88 = add nsw i32 %89, 1, !dbg !2722
  store i32 %inc88, i32* %y, align 4, !dbg !2722
  br label %for.cond, !dbg !2724, !llvm.loop !2725

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !2727
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_422p12_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !2728 {
entry:
  %retval.i178 = alloca i16, align 2
  %a.addr.i179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i179, metadata !267, metadata !94), !dbg !2729
  %retval.i166 = alloca i16, align 2
  %a.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i167, metadata !267, metadata !94), !dbg !2737
  %retval.i154 = alloca i16, align 2
  %a.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i155, metadata !267, metadata !94), !dbg !2739
  %retval.i142 = alloca i16, align 2
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !267, metadata !94), !dbg !2741
  %retval.i130 = alloca i16, align 2
  %a.addr.i131 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i131, metadata !267, metadata !94), !dbg !2743
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !2745
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !2747, metadata !94), !dbg !2748
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !2749, metadata !94), !dbg !2750
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !2751, metadata !94), !dbg !2752
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !2753, metadata !94), !dbg !2754
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !2755, metadata !94), !dbg !2756
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2757, metadata !94), !dbg !2758
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !2759, metadata !94), !dbg !2760
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !2761, metadata !94), !dbg !2762
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !2763, metadata !94), !dbg !2764
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !2765
  %1 = bitcast i8** %0 to i16**, !dbg !2766
  store i16** %1, i16*** %yuv, align 8, !dbg !2764
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !2767, metadata !94), !dbg !2768
  %2 = load i16**, i16*** %yuv, align 8, !dbg !2769
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !2769
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !2769
  store i16* %3, i16** %yuv0, align 8, !dbg !2768
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !2770, metadata !94), !dbg !2771
  %4 = load i16**, i16*** %yuv, align 8, !dbg !2772
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !2772
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !2772
  store i16* %5, i16** %yuv1, align 8, !dbg !2771
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !2773, metadata !94), !dbg !2774
  %6 = load i16**, i16*** %yuv, align 8, !dbg !2775
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !2775
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !2775
  store i16* %7, i16** %yuv2, align 8, !dbg !2774
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !2776, metadata !94), !dbg !2777
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !2778
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !2778
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !2778
  store i16* %9, i16** %rgb0, align 8, !dbg !2777
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !2779, metadata !94), !dbg !2780
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !2781
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !2781
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !2781
  store i16* %11, i16** %rgb1, align 8, !dbg !2780
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !2782, metadata !94), !dbg !2783
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !2784
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !2784
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !2784
  store i16* %13, i16** %rgb2, align 8, !dbg !2783
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2785, metadata !94), !dbg !2786
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2787, metadata !94), !dbg !2788
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !2789, metadata !94), !dbg !2790
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2791
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !2791
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !2791
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !2791
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !2791
  %conv = sext i16 %15 to i32, !dbg !2791
  store i32 %conv, i32* %cy, align 4, !dbg !2790
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !2792, metadata !94), !dbg !2793
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2794
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !2794
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !2794
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !2794
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !2794
  %conv12 = sext i16 %17 to i32, !dbg !2794
  store i32 %conv12, i32* %crv, align 4, !dbg !2793
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !2795, metadata !94), !dbg !2796
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2797
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !2797
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !2797
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !2797
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !2797
  %conv16 = sext i16 %19 to i32, !dbg !2797
  store i32 %conv16, i32* %cgu, align 4, !dbg !2796
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !2798, metadata !94), !dbg !2799
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2800
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !2800
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !2800
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !2800
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !2800
  %conv20 = sext i16 %21 to i32, !dbg !2800
  store i32 %conv20, i32* %cgv, align 4, !dbg !2799
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !2801, metadata !94), !dbg !2802
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !2803
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !2803
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !2803
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !2803
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !2803
  %conv24 = sext i16 %23 to i32, !dbg !2803
  store i32 %conv24, i32* %cbu, align 4, !dbg !2802
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !2804, metadata !94), !dbg !2805
  store i32 11, i32* %sh, align 4, !dbg !2805
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !2806, metadata !94), !dbg !2807
  store i32 1024, i32* %rnd, align 4, !dbg !2807
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !2808, metadata !94), !dbg !2809
  store i32 2048, i32* %uv_offset, align 4, !dbg !2809
  %24 = load i32, i32* %w.addr, align 4, !dbg !2810
  %add = add nsw i32 %24, 2, !dbg !2811
  %sub = sub nsw i32 %add, 1, !dbg !2812
  %shr = ashr i32 %sub, 1, !dbg !2813
  store i32 %shr, i32* %w.addr, align 4, !dbg !2814
  %25 = load i32, i32* %h.addr, align 4, !dbg !2815
  %add25 = add nsw i32 %25, 1, !dbg !2816
  %sub26 = sub nsw i32 %add25, 1, !dbg !2817
  %shr27 = ashr i32 %sub26, 0, !dbg !2818
  store i32 %shr27, i32* %h.addr, align 4, !dbg !2819
  store i32 0, i32* %y, align 4, !dbg !2820
  br label %for.cond, !dbg !2821

for.cond:                                         ; preds = %for.inc127, %entry
  %26 = load i32, i32* %y, align 4, !dbg !2822
  %27 = load i32, i32* %h.addr, align 4, !dbg !2824
  %cmp = icmp slt i32 %26, %27, !dbg !2825
  br i1 %cmp, label %for.body, label %for.end129, !dbg !2826

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !2827
  br label %for.cond29, !dbg !2828

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !2829
  %29 = load i32, i32* %w.addr, align 4, !dbg !2831
  %cmp30 = icmp slt i32 %28, %29, !dbg !2832
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !2833

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !2834, metadata !94), !dbg !2835
  %30 = load i32, i32* %x, align 4, !dbg !2836
  %shl = shl i32 %30, 1, !dbg !2837
  %idxprom = sext i32 %shl to i64, !dbg !2838
  %31 = load i16*, i16** %yuv0, align 8, !dbg !2838
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !2838
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !2838
  %conv34 = zext i16 %32 to i32, !dbg !2838
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2839
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !2839
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !2839
  %conv36 = sext i16 %34 to i32, !dbg !2839
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !2840
  store i32 %sub37, i32* %y00, align 4, !dbg !2835
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !2841, metadata !94), !dbg !2842
  %35 = load i32, i32* %x, align 4, !dbg !2843
  %mul = mul nsw i32 2, %35, !dbg !2844
  %add38 = add nsw i32 %mul, 1, !dbg !2845
  %idxprom39 = sext i32 %add38 to i64, !dbg !2846
  %36 = load i16*, i16** %yuv0, align 8, !dbg !2846
  %arrayidx40 = getelementptr inbounds i16, i16* %36, i64 %idxprom39, !dbg !2846
  %37 = load i16, i16* %arrayidx40, align 2, !dbg !2846
  %conv41 = zext i16 %37 to i32, !dbg !2846
  %38 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !2847
  %arrayidx42 = getelementptr inbounds i16, i16* %38, i64 0, !dbg !2847
  %39 = load i16, i16* %arrayidx42, align 2, !dbg !2847
  %conv43 = sext i16 %39 to i32, !dbg !2847
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !2848
  store i32 %sub44, i32* %y01, align 4, !dbg !2842
  call void @llvm.dbg.declare(metadata i32* %u, metadata !2849, metadata !94), !dbg !2850
  %40 = load i32, i32* %x, align 4, !dbg !2851
  %idxprom45 = sext i32 %40 to i64, !dbg !2852
  %41 = load i16*, i16** %yuv1, align 8, !dbg !2852
  %arrayidx46 = getelementptr inbounds i16, i16* %41, i64 %idxprom45, !dbg !2852
  %42 = load i16, i16* %arrayidx46, align 2, !dbg !2852
  %conv47 = zext i16 %42 to i32, !dbg !2852
  %sub48 = sub nsw i32 %conv47, 2048, !dbg !2853
  store i32 %sub48, i32* %u, align 4, !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2854, metadata !94), !dbg !2855
  %43 = load i32, i32* %x, align 4, !dbg !2856
  %idxprom49 = sext i32 %43 to i64, !dbg !2857
  %44 = load i16*, i16** %yuv2, align 8, !dbg !2857
  %arrayidx50 = getelementptr inbounds i16, i16* %44, i64 %idxprom49, !dbg !2857
  %45 = load i16, i16* %arrayidx50, align 2, !dbg !2857
  %conv51 = zext i16 %45 to i32, !dbg !2857
  %sub52 = sub nsw i32 %conv51, 2048, !dbg !2858
  store i32 %sub52, i32* %v, align 4, !dbg !2855
  %46 = load i32, i32* %y00, align 4, !dbg !2859
  %47 = load i32, i32* %cy, align 4, !dbg !2860
  %mul53 = mul nsw i32 %46, %47, !dbg !2861
  %48 = load i32, i32* %crv, align 4, !dbg !2862
  %49 = load i32, i32* %v, align 4, !dbg !2863
  %mul54 = mul nsw i32 %48, %49, !dbg !2864
  %add55 = add nsw i32 %mul53, %mul54, !dbg !2865
  %add56 = add nsw i32 %add55, 1024, !dbg !2866
  %shr57 = ashr i32 %add56, 11, !dbg !2867
  store i32 %shr57, i32* %a.addr.i, align 4, !dbg !2868
  %50 = load i32, i32* %a.addr.i, align 4, !dbg !2869
  %add.i = add i32 %50, 32768, !dbg !2870
  %and.i = and i32 %add.i, -65536, !dbg !2871
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2871
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2872

if.then.i:                                        ; preds = %for.body32
  %51 = load i32, i32* %a.addr.i, align 4, !dbg !2873
  %shr.i = ashr i32 %51, 31, !dbg !2874
  %xor.i = xor i32 %shr.i, 32767, !dbg !2875
  %conv.i = trunc i32 %xor.i to i16, !dbg !2876
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !2877
  br label %av_clip_int16_c.exit, !dbg !2877

if.else.i:                                        ; preds = %for.body32
  %52 = load i32, i32* %a.addr.i, align 4, !dbg !2878
  %conv1.i = trunc i32 %52 to i16, !dbg !2878
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !2879
  br label %av_clip_int16_c.exit, !dbg !2879

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %53 = load i16, i16* %retval.i, align 2, !dbg !2880
  %54 = load i32, i32* %x, align 4, !dbg !2881
  %shl58 = shl i32 %54, 1, !dbg !2882
  %idxprom59 = sext i32 %shl58 to i64, !dbg !2883
  %55 = load i16*, i16** %rgb0, align 8, !dbg !2883
  %arrayidx60 = getelementptr inbounds i16, i16* %55, i64 %idxprom59, !dbg !2883
  store i16 %53, i16* %arrayidx60, align 2, !dbg !2884
  %56 = load i32, i32* %y01, align 4, !dbg !2885
  %57 = load i32, i32* %cy, align 4, !dbg !2886
  %mul61 = mul nsw i32 %56, %57, !dbg !2887
  %58 = load i32, i32* %crv, align 4, !dbg !2888
  %59 = load i32, i32* %v, align 4, !dbg !2889
  %mul62 = mul nsw i32 %58, %59, !dbg !2890
  %add63 = add nsw i32 %mul61, %mul62, !dbg !2891
  %add64 = add nsw i32 %add63, 1024, !dbg !2892
  %shr65 = ashr i32 %add64, 11, !dbg !2893
  store i32 %shr65, i32* %a.addr.i179, align 4, !dbg !2894
  %60 = load i32, i32* %a.addr.i179, align 4, !dbg !2895
  %add.i180 = add i32 %60, 32768, !dbg !2896
  %and.i181 = and i32 %add.i180, -65536, !dbg !2897
  %tobool.i182 = icmp ne i32 %and.i181, 0, !dbg !2897
  br i1 %tobool.i182, label %if.then.i186, label %if.else.i188, !dbg !2898

if.then.i186:                                     ; preds = %av_clip_int16_c.exit
  %61 = load i32, i32* %a.addr.i179, align 4, !dbg !2899
  %shr.i183 = ashr i32 %61, 31, !dbg !2900
  %xor.i184 = xor i32 %shr.i183, 32767, !dbg !2901
  %conv.i185 = trunc i32 %xor.i184 to i16, !dbg !2902
  store i16 %conv.i185, i16* %retval.i178, align 2, !dbg !2903
  br label %av_clip_int16_c.exit189, !dbg !2903

if.else.i188:                                     ; preds = %av_clip_int16_c.exit
  %62 = load i32, i32* %a.addr.i179, align 4, !dbg !2904
  %conv1.i187 = trunc i32 %62 to i16, !dbg !2904
  store i16 %conv1.i187, i16* %retval.i178, align 2, !dbg !2905
  br label %av_clip_int16_c.exit189, !dbg !2905

av_clip_int16_c.exit189:                          ; preds = %if.then.i186, %if.else.i188
  %63 = load i16, i16* %retval.i178, align 2, !dbg !2906
  %64 = load i32, i32* %x, align 4, !dbg !2907
  %mul67 = mul nsw i32 2, %64, !dbg !2908
  %add68 = add nsw i32 %mul67, 1, !dbg !2909
  %idxprom69 = sext i32 %add68 to i64, !dbg !2910
  %65 = load i16*, i16** %rgb0, align 8, !dbg !2910
  %arrayidx70 = getelementptr inbounds i16, i16* %65, i64 %idxprom69, !dbg !2910
  store i16 %63, i16* %arrayidx70, align 2, !dbg !2911
  %66 = load i32, i32* %y00, align 4, !dbg !2912
  %67 = load i32, i32* %cy, align 4, !dbg !2913
  %mul71 = mul nsw i32 %66, %67, !dbg !2914
  %68 = load i32, i32* %cgu, align 4, !dbg !2915
  %69 = load i32, i32* %u, align 4, !dbg !2916
  %mul72 = mul nsw i32 %68, %69, !dbg !2917
  %add73 = add nsw i32 %mul71, %mul72, !dbg !2918
  %70 = load i32, i32* %cgv, align 4, !dbg !2919
  %71 = load i32, i32* %v, align 4, !dbg !2920
  %mul74 = mul nsw i32 %70, %71, !dbg !2921
  %add75 = add nsw i32 %add73, %mul74, !dbg !2922
  %add76 = add nsw i32 %add75, 1024, !dbg !2923
  %shr77 = ashr i32 %add76, 11, !dbg !2924
  store i32 %shr77, i32* %a.addr.i167, align 4, !dbg !2925
  %72 = load i32, i32* %a.addr.i167, align 4, !dbg !2926
  %add.i168 = add i32 %72, 32768, !dbg !2927
  %and.i169 = and i32 %add.i168, -65536, !dbg !2928
  %tobool.i170 = icmp ne i32 %and.i169, 0, !dbg !2928
  br i1 %tobool.i170, label %if.then.i174, label %if.else.i176, !dbg !2929

if.then.i174:                                     ; preds = %av_clip_int16_c.exit189
  %73 = load i32, i32* %a.addr.i167, align 4, !dbg !2930
  %shr.i171 = ashr i32 %73, 31, !dbg !2931
  %xor.i172 = xor i32 %shr.i171, 32767, !dbg !2932
  %conv.i173 = trunc i32 %xor.i172 to i16, !dbg !2933
  store i16 %conv.i173, i16* %retval.i166, align 2, !dbg !2934
  br label %av_clip_int16_c.exit177, !dbg !2934

if.else.i176:                                     ; preds = %av_clip_int16_c.exit189
  %74 = load i32, i32* %a.addr.i167, align 4, !dbg !2935
  %conv1.i175 = trunc i32 %74 to i16, !dbg !2935
  store i16 %conv1.i175, i16* %retval.i166, align 2, !dbg !2936
  br label %av_clip_int16_c.exit177, !dbg !2936

av_clip_int16_c.exit177:                          ; preds = %if.then.i174, %if.else.i176
  %75 = load i16, i16* %retval.i166, align 2, !dbg !2937
  %76 = load i32, i32* %x, align 4, !dbg !2938
  %shl79 = shl i32 %76, 1, !dbg !2939
  %idxprom80 = sext i32 %shl79 to i64, !dbg !2940
  %77 = load i16*, i16** %rgb1, align 8, !dbg !2940
  %arrayidx81 = getelementptr inbounds i16, i16* %77, i64 %idxprom80, !dbg !2940
  store i16 %75, i16* %arrayidx81, align 2, !dbg !2941
  %78 = load i32, i32* %y01, align 4, !dbg !2942
  %79 = load i32, i32* %cy, align 4, !dbg !2943
  %mul82 = mul nsw i32 %78, %79, !dbg !2944
  %80 = load i32, i32* %cgu, align 4, !dbg !2945
  %81 = load i32, i32* %u, align 4, !dbg !2946
  %mul83 = mul nsw i32 %80, %81, !dbg !2947
  %add84 = add nsw i32 %mul82, %mul83, !dbg !2948
  %82 = load i32, i32* %cgv, align 4, !dbg !2949
  %83 = load i32, i32* %v, align 4, !dbg !2950
  %mul85 = mul nsw i32 %82, %83, !dbg !2951
  %add86 = add nsw i32 %add84, %mul85, !dbg !2952
  %add87 = add nsw i32 %add86, 1024, !dbg !2953
  %shr88 = ashr i32 %add87, 11, !dbg !2954
  store i32 %shr88, i32* %a.addr.i155, align 4, !dbg !2955
  %84 = load i32, i32* %a.addr.i155, align 4, !dbg !2956
  %add.i156 = add i32 %84, 32768, !dbg !2957
  %and.i157 = and i32 %add.i156, -65536, !dbg !2958
  %tobool.i158 = icmp ne i32 %and.i157, 0, !dbg !2958
  br i1 %tobool.i158, label %if.then.i162, label %if.else.i164, !dbg !2959

if.then.i162:                                     ; preds = %av_clip_int16_c.exit177
  %85 = load i32, i32* %a.addr.i155, align 4, !dbg !2960
  %shr.i159 = ashr i32 %85, 31, !dbg !2961
  %xor.i160 = xor i32 %shr.i159, 32767, !dbg !2962
  %conv.i161 = trunc i32 %xor.i160 to i16, !dbg !2963
  store i16 %conv.i161, i16* %retval.i154, align 2, !dbg !2964
  br label %av_clip_int16_c.exit165, !dbg !2964

if.else.i164:                                     ; preds = %av_clip_int16_c.exit177
  %86 = load i32, i32* %a.addr.i155, align 4, !dbg !2965
  %conv1.i163 = trunc i32 %86 to i16, !dbg !2965
  store i16 %conv1.i163, i16* %retval.i154, align 2, !dbg !2966
  br label %av_clip_int16_c.exit165, !dbg !2966

av_clip_int16_c.exit165:                          ; preds = %if.then.i162, %if.else.i164
  %87 = load i16, i16* %retval.i154, align 2, !dbg !2967
  %88 = load i32, i32* %x, align 4, !dbg !2968
  %mul90 = mul nsw i32 2, %88, !dbg !2969
  %add91 = add nsw i32 %mul90, 1, !dbg !2970
  %idxprom92 = sext i32 %add91 to i64, !dbg !2971
  %89 = load i16*, i16** %rgb1, align 8, !dbg !2971
  %arrayidx93 = getelementptr inbounds i16, i16* %89, i64 %idxprom92, !dbg !2971
  store i16 %87, i16* %arrayidx93, align 2, !dbg !2972
  %90 = load i32, i32* %y00, align 4, !dbg !2973
  %91 = load i32, i32* %cy, align 4, !dbg !2974
  %mul94 = mul nsw i32 %90, %91, !dbg !2975
  %92 = load i32, i32* %cbu, align 4, !dbg !2976
  %93 = load i32, i32* %u, align 4, !dbg !2977
  %mul95 = mul nsw i32 %92, %93, !dbg !2978
  %add96 = add nsw i32 %mul94, %mul95, !dbg !2979
  %add97 = add nsw i32 %add96, 1024, !dbg !2980
  %shr98 = ashr i32 %add97, 11, !dbg !2981
  store i32 %shr98, i32* %a.addr.i143, align 4, !dbg !2982
  %94 = load i32, i32* %a.addr.i143, align 4, !dbg !2983
  %add.i144 = add i32 %94, 32768, !dbg !2984
  %and.i145 = and i32 %add.i144, -65536, !dbg !2985
  %tobool.i146 = icmp ne i32 %and.i145, 0, !dbg !2985
  br i1 %tobool.i146, label %if.then.i150, label %if.else.i152, !dbg !2986

if.then.i150:                                     ; preds = %av_clip_int16_c.exit165
  %95 = load i32, i32* %a.addr.i143, align 4, !dbg !2987
  %shr.i147 = ashr i32 %95, 31, !dbg !2988
  %xor.i148 = xor i32 %shr.i147, 32767, !dbg !2989
  %conv.i149 = trunc i32 %xor.i148 to i16, !dbg !2990
  store i16 %conv.i149, i16* %retval.i142, align 2, !dbg !2991
  br label %av_clip_int16_c.exit153, !dbg !2991

if.else.i152:                                     ; preds = %av_clip_int16_c.exit165
  %96 = load i32, i32* %a.addr.i143, align 4, !dbg !2992
  %conv1.i151 = trunc i32 %96 to i16, !dbg !2992
  store i16 %conv1.i151, i16* %retval.i142, align 2, !dbg !2993
  br label %av_clip_int16_c.exit153, !dbg !2993

av_clip_int16_c.exit153:                          ; preds = %if.then.i150, %if.else.i152
  %97 = load i16, i16* %retval.i142, align 2, !dbg !2994
  %98 = load i32, i32* %x, align 4, !dbg !2995
  %shl100 = shl i32 %98, 1, !dbg !2996
  %idxprom101 = sext i32 %shl100 to i64, !dbg !2997
  %99 = load i16*, i16** %rgb2, align 8, !dbg !2997
  %arrayidx102 = getelementptr inbounds i16, i16* %99, i64 %idxprom101, !dbg !2997
  store i16 %97, i16* %arrayidx102, align 2, !dbg !2998
  %100 = load i32, i32* %y01, align 4, !dbg !2999
  %101 = load i32, i32* %cy, align 4, !dbg !3000
  %mul103 = mul nsw i32 %100, %101, !dbg !3001
  %102 = load i32, i32* %cbu, align 4, !dbg !3002
  %103 = load i32, i32* %u, align 4, !dbg !3003
  %mul104 = mul nsw i32 %102, %103, !dbg !3004
  %add105 = add nsw i32 %mul103, %mul104, !dbg !3005
  %add106 = add nsw i32 %add105, 1024, !dbg !3006
  %shr107 = ashr i32 %add106, 11, !dbg !3007
  store i32 %shr107, i32* %a.addr.i131, align 4, !dbg !3008
  %104 = load i32, i32* %a.addr.i131, align 4, !dbg !3009
  %add.i132 = add i32 %104, 32768, !dbg !3010
  %and.i133 = and i32 %add.i132, -65536, !dbg !3011
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !3011
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !3012

if.then.i138:                                     ; preds = %av_clip_int16_c.exit153
  %105 = load i32, i32* %a.addr.i131, align 4, !dbg !3013
  %shr.i135 = ashr i32 %105, 31, !dbg !3014
  %xor.i136 = xor i32 %shr.i135, 32767, !dbg !3015
  %conv.i137 = trunc i32 %xor.i136 to i16, !dbg !3016
  store i16 %conv.i137, i16* %retval.i130, align 2, !dbg !3017
  br label %av_clip_int16_c.exit141, !dbg !3017

if.else.i140:                                     ; preds = %av_clip_int16_c.exit153
  %106 = load i32, i32* %a.addr.i131, align 4, !dbg !3018
  %conv1.i139 = trunc i32 %106 to i16, !dbg !3018
  store i16 %conv1.i139, i16* %retval.i130, align 2, !dbg !3019
  br label %av_clip_int16_c.exit141, !dbg !3019

av_clip_int16_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %107 = load i16, i16* %retval.i130, align 2, !dbg !3020
  %108 = load i32, i32* %x, align 4, !dbg !3021
  %mul109 = mul nsw i32 2, %108, !dbg !3022
  %add110 = add nsw i32 %mul109, 1, !dbg !3023
  %idxprom111 = sext i32 %add110 to i64, !dbg !3024
  %109 = load i16*, i16** %rgb2, align 8, !dbg !3024
  %arrayidx112 = getelementptr inbounds i16, i16* %109, i64 %idxprom111, !dbg !3024
  store i16 %107, i16* %arrayidx112, align 2, !dbg !3025
  br label %for.inc, !dbg !3026

for.inc:                                          ; preds = %av_clip_int16_c.exit141
  %110 = load i32, i32* %x, align 4, !dbg !3027
  %inc = add nsw i32 %110, 1, !dbg !3027
  store i32 %inc, i32* %x, align 4, !dbg !3027
  br label %for.cond29, !dbg !3029, !llvm.loop !3030

for.end:                                          ; preds = %for.cond29
  %111 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3032
  %arrayidx113 = getelementptr inbounds i64, i64* %111, i64 0, !dbg !3032
  %112 = load i64, i64* %arrayidx113, align 8, !dbg !3032
  %mul114 = mul nsw i64 %112, 1, !dbg !3033
  %div = udiv i64 %mul114, 2, !dbg !3034
  %113 = load i16*, i16** %yuv0, align 8, !dbg !3035
  %add.ptr = getelementptr inbounds i16, i16* %113, i64 %div, !dbg !3035
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !3035
  %114 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3036
  %arrayidx115 = getelementptr inbounds i64, i64* %114, i64 1, !dbg !3036
  %115 = load i64, i64* %arrayidx115, align 8, !dbg !3036
  %div116 = udiv i64 %115, 2, !dbg !3037
  %116 = load i16*, i16** %yuv1, align 8, !dbg !3038
  %add.ptr117 = getelementptr inbounds i16, i16* %116, i64 %div116, !dbg !3038
  store i16* %add.ptr117, i16** %yuv1, align 8, !dbg !3038
  %117 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3039
  %arrayidx118 = getelementptr inbounds i64, i64* %117, i64 2, !dbg !3039
  %118 = load i64, i64* %arrayidx118, align 8, !dbg !3039
  %div119 = udiv i64 %118, 2, !dbg !3040
  %119 = load i16*, i16** %yuv2, align 8, !dbg !3041
  %add.ptr120 = getelementptr inbounds i16, i16* %119, i64 %div119, !dbg !3041
  store i16* %add.ptr120, i16** %yuv2, align 8, !dbg !3041
  %120 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3042
  %mul121 = mul nsw i64 %120, 1, !dbg !3043
  %121 = load i16*, i16** %rgb0, align 8, !dbg !3044
  %add.ptr122 = getelementptr inbounds i16, i16* %121, i64 %mul121, !dbg !3044
  store i16* %add.ptr122, i16** %rgb0, align 8, !dbg !3044
  %122 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3045
  %mul123 = mul nsw i64 %122, 1, !dbg !3046
  %123 = load i16*, i16** %rgb1, align 8, !dbg !3047
  %add.ptr124 = getelementptr inbounds i16, i16* %123, i64 %mul123, !dbg !3047
  store i16* %add.ptr124, i16** %rgb1, align 8, !dbg !3047
  %124 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3048
  %mul125 = mul nsw i64 %124, 1, !dbg !3049
  %125 = load i16*, i16** %rgb2, align 8, !dbg !3050
  %add.ptr126 = getelementptr inbounds i16, i16* %125, i64 %mul125, !dbg !3050
  store i16* %add.ptr126, i16** %rgb2, align 8, !dbg !3050
  br label %for.inc127, !dbg !3051

for.inc127:                                       ; preds = %for.end
  %126 = load i32, i32* %y, align 4, !dbg !3052
  %inc128 = add nsw i32 %126, 1, !dbg !3052
  store i32 %inc128, i32* %y, align 4, !dbg !3052
  br label %for.cond, !dbg !3054, !llvm.loop !3055

for.end129:                                       ; preds = %for.cond
  ret void, !dbg !3057
}

; Function Attrs: nounwind uwtable
define internal void @yuv2rgb_420p12_c(i16** %rgb, i64 %rgb_stride, i8** %_yuv, i64* %yuv_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %yuv2rgb_coeffs, i16* %yuv_offset) #0 !dbg !3058 {
entry:
  %retval.i338 = alloca i16, align 2
  %a.addr.i339 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i339, metadata !267, metadata !94), !dbg !3059
  %retval.i326 = alloca i16, align 2
  %a.addr.i327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i327, metadata !267, metadata !94), !dbg !3067
  %retval.i314 = alloca i16, align 2
  %a.addr.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i315, metadata !267, metadata !94), !dbg !3069
  %retval.i302 = alloca i16, align 2
  %a.addr.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i303, metadata !267, metadata !94), !dbg !3071
  %retval.i290 = alloca i16, align 2
  %a.addr.i291 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i291, metadata !267, metadata !94), !dbg !3073
  %retval.i278 = alloca i16, align 2
  %a.addr.i279 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i279, metadata !267, metadata !94), !dbg !3075
  %retval.i266 = alloca i16, align 2
  %a.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i267, metadata !267, metadata !94), !dbg !3077
  %retval.i254 = alloca i16, align 2
  %a.addr.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i255, metadata !267, metadata !94), !dbg !3079
  %retval.i242 = alloca i16, align 2
  %a.addr.i243 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i243, metadata !267, metadata !94), !dbg !3081
  %retval.i230 = alloca i16, align 2
  %a.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i231, metadata !267, metadata !94), !dbg !3083
  %retval.i218 = alloca i16, align 2
  %a.addr.i219 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i219, metadata !267, metadata !94), !dbg !3085
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !3087
  %rgb.addr = alloca i16**, align 8
  %rgb_stride.addr = alloca i64, align 8
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %yuv2rgb_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %cy = alloca i32, align 4
  %crv = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbu = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %uv_offset = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !3089, metadata !94), !dbg !3090
  store i64 %rgb_stride, i64* %rgb_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rgb_stride.addr, metadata !3091, metadata !94), !dbg !3092
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !3093, metadata !94), !dbg !3094
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !3095, metadata !94), !dbg !3096
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3097, metadata !94), !dbg !3098
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3099, metadata !94), !dbg !3100
  store [3 x [8 x i16]]* %yuv2rgb_coeffs, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, metadata !3101, metadata !94), !dbg !3102
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !3103, metadata !94), !dbg !3104
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !3105, metadata !94), !dbg !3106
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !3107
  %1 = bitcast i8** %0 to i16**, !dbg !3108
  store i16** %1, i16*** %yuv, align 8, !dbg !3106
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !3109, metadata !94), !dbg !3110
  %2 = load i16**, i16*** %yuv, align 8, !dbg !3111
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !3111
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !3111
  store i16* %3, i16** %yuv0, align 8, !dbg !3110
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !3112, metadata !94), !dbg !3113
  %4 = load i16**, i16*** %yuv, align 8, !dbg !3114
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !3114
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !3114
  store i16* %5, i16** %yuv1, align 8, !dbg !3113
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !3115, metadata !94), !dbg !3116
  %6 = load i16**, i16*** %yuv, align 8, !dbg !3117
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !3117
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !3117
  store i16* %7, i16** %yuv2, align 8, !dbg !3116
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !3118, metadata !94), !dbg !3119
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !3120
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !3120
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !3120
  store i16* %9, i16** %rgb0, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !3121, metadata !94), !dbg !3122
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !3123
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !3123
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !3123
  store i16* %11, i16** %rgb1, align 8, !dbg !3122
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !3124, metadata !94), !dbg !3125
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !3126
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !3126
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !3126
  store i16* %13, i16** %rgb2, align 8, !dbg !3125
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3127, metadata !94), !dbg !3128
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3129, metadata !94), !dbg !3130
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !3131, metadata !94), !dbg !3132
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !3133
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !3133
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !3133
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !3133
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !3133
  %conv = sext i16 %15 to i32, !dbg !3133
  store i32 %conv, i32* %cy, align 4, !dbg !3132
  call void @llvm.dbg.declare(metadata i32* %crv, metadata !3134, metadata !94), !dbg !3135
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !3136
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !3136
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 2, !dbg !3136
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !3136
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !3136
  %conv12 = sext i16 %17 to i32, !dbg !3136
  store i32 %conv12, i32* %crv, align 4, !dbg !3135
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !3137, metadata !94), !dbg !3138
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !3139
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 1, !dbg !3139
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 1, !dbg !3139
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !3139
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !3139
  %conv16 = sext i16 %19 to i32, !dbg !3139
  store i32 %conv16, i32* %cgu, align 4, !dbg !3138
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !3140, metadata !94), !dbg !3141
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !3142
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !3142
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 2, !dbg !3142
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !3142
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !3142
  %conv20 = sext i16 %21 to i32, !dbg !3142
  store i32 %conv20, i32* %cgv, align 4, !dbg !3141
  call void @llvm.dbg.declare(metadata i32* %cbu, metadata !3143, metadata !94), !dbg !3144
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %yuv2rgb_coeffs.addr, align 8, !dbg !3145
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 2, !dbg !3145
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !3145
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !3145
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !3145
  %conv24 = sext i16 %23 to i32, !dbg !3145
  store i32 %conv24, i32* %cbu, align 4, !dbg !3144
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !3146, metadata !94), !dbg !3147
  store i32 11, i32* %sh, align 4, !dbg !3147
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !3148, metadata !94), !dbg !3149
  store i32 1024, i32* %rnd, align 4, !dbg !3149
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !3150, metadata !94), !dbg !3151
  store i32 2048, i32* %uv_offset, align 4, !dbg !3151
  %24 = load i32, i32* %w.addr, align 4, !dbg !3152
  %add = add nsw i32 %24, 2, !dbg !3153
  %sub = sub nsw i32 %add, 1, !dbg !3154
  %shr = ashr i32 %sub, 1, !dbg !3155
  store i32 %shr, i32* %w.addr, align 4, !dbg !3156
  %25 = load i32, i32* %h.addr, align 4, !dbg !3157
  %add25 = add nsw i32 %25, 2, !dbg !3158
  %sub26 = sub nsw i32 %add25, 1, !dbg !3159
  %shr27 = ashr i32 %sub26, 1, !dbg !3160
  store i32 %shr27, i32* %h.addr, align 4, !dbg !3161
  store i32 0, i32* %y, align 4, !dbg !3162
  br label %for.cond, !dbg !3163

for.cond:                                         ; preds = %for.inc215, %entry
  %26 = load i32, i32* %y, align 4, !dbg !3164
  %27 = load i32, i32* %h.addr, align 4, !dbg !3166
  %cmp = icmp slt i32 %26, %27, !dbg !3167
  br i1 %cmp, label %for.body, label %for.end217, !dbg !3168

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3169
  br label %for.cond29, !dbg !3170

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %x, align 4, !dbg !3171
  %29 = load i32, i32* %w.addr, align 4, !dbg !3173
  %cmp30 = icmp slt i32 %28, %29, !dbg !3174
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !3175

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !3176, metadata !94), !dbg !3177
  %30 = load i32, i32* %x, align 4, !dbg !3178
  %shl = shl i32 %30, 1, !dbg !3179
  %idxprom = sext i32 %shl to i64, !dbg !3180
  %31 = load i16*, i16** %yuv0, align 8, !dbg !3180
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom, !dbg !3180
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !3180
  %conv34 = zext i16 %32 to i32, !dbg !3180
  %33 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !3181
  %arrayidx35 = getelementptr inbounds i16, i16* %33, i64 0, !dbg !3181
  %34 = load i16, i16* %arrayidx35, align 2, !dbg !3181
  %conv36 = sext i16 %34 to i32, !dbg !3181
  %sub37 = sub nsw i32 %conv34, %conv36, !dbg !3182
  store i32 %sub37, i32* %y00, align 4, !dbg !3177
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !3183, metadata !94), !dbg !3184
  %35 = load i32, i32* %x, align 4, !dbg !3185
  %mul = mul nsw i32 2, %35, !dbg !3186
  %add38 = add nsw i32 %mul, 1, !dbg !3187
  %idxprom39 = sext i32 %add38 to i64, !dbg !3188
  %36 = load i16*, i16** %yuv0, align 8, !dbg !3188
  %arrayidx40 = getelementptr inbounds i16, i16* %36, i64 %idxprom39, !dbg !3188
  %37 = load i16, i16* %arrayidx40, align 2, !dbg !3188
  %conv41 = zext i16 %37 to i32, !dbg !3188
  %38 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !3189
  %arrayidx42 = getelementptr inbounds i16, i16* %38, i64 0, !dbg !3189
  %39 = load i16, i16* %arrayidx42, align 2, !dbg !3189
  %conv43 = sext i16 %39 to i32, !dbg !3189
  %sub44 = sub nsw i32 %conv41, %conv43, !dbg !3190
  store i32 %sub44, i32* %y01, align 4, !dbg !3184
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !3191, metadata !94), !dbg !3192
  %40 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3193
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 0, !dbg !3193
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !3193
  %div = udiv i64 %41, 2, !dbg !3194
  %42 = load i32, i32* %x, align 4, !dbg !3195
  %mul46 = mul nsw i32 2, %42, !dbg !3196
  %conv47 = sext i32 %mul46 to i64, !dbg !3197
  %add48 = add i64 %div, %conv47, !dbg !3198
  %43 = load i16*, i16** %yuv0, align 8, !dbg !3199
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %add48, !dbg !3199
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !3199
  %conv50 = zext i16 %44 to i32, !dbg !3199
  %45 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !3200
  %arrayidx51 = getelementptr inbounds i16, i16* %45, i64 0, !dbg !3200
  %46 = load i16, i16* %arrayidx51, align 2, !dbg !3200
  %conv52 = sext i16 %46 to i32, !dbg !3200
  %sub53 = sub nsw i32 %conv50, %conv52, !dbg !3201
  store i32 %sub53, i32* %y10, align 4, !dbg !3192
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !3202, metadata !94), !dbg !3203
  %47 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3204
  %arrayidx54 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !3204
  %48 = load i64, i64* %arrayidx54, align 8, !dbg !3204
  %div55 = udiv i64 %48, 2, !dbg !3205
  %49 = load i32, i32* %x, align 4, !dbg !3206
  %mul56 = mul nsw i32 2, %49, !dbg !3207
  %conv57 = sext i32 %mul56 to i64, !dbg !3208
  %add58 = add i64 %div55, %conv57, !dbg !3209
  %add59 = add i64 %add58, 1, !dbg !3210
  %50 = load i16*, i16** %yuv0, align 8, !dbg !3211
  %arrayidx60 = getelementptr inbounds i16, i16* %50, i64 %add59, !dbg !3211
  %51 = load i16, i16* %arrayidx60, align 2, !dbg !3211
  %conv61 = zext i16 %51 to i32, !dbg !3211
  %52 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !3212
  %arrayidx62 = getelementptr inbounds i16, i16* %52, i64 0, !dbg !3212
  %53 = load i16, i16* %arrayidx62, align 2, !dbg !3212
  %conv63 = sext i16 %53 to i32, !dbg !3212
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !3213
  store i32 %sub64, i32* %y11, align 4, !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %u, metadata !3214, metadata !94), !dbg !3215
  %54 = load i32, i32* %x, align 4, !dbg !3216
  %idxprom65 = sext i32 %54 to i64, !dbg !3217
  %55 = load i16*, i16** %yuv1, align 8, !dbg !3217
  %arrayidx66 = getelementptr inbounds i16, i16* %55, i64 %idxprom65, !dbg !3217
  %56 = load i16, i16* %arrayidx66, align 2, !dbg !3217
  %conv67 = zext i16 %56 to i32, !dbg !3217
  %sub68 = sub nsw i32 %conv67, 2048, !dbg !3218
  store i32 %sub68, i32* %u, align 4, !dbg !3215
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3219, metadata !94), !dbg !3220
  %57 = load i32, i32* %x, align 4, !dbg !3221
  %idxprom69 = sext i32 %57 to i64, !dbg !3222
  %58 = load i16*, i16** %yuv2, align 8, !dbg !3222
  %arrayidx70 = getelementptr inbounds i16, i16* %58, i64 %idxprom69, !dbg !3222
  %59 = load i16, i16* %arrayidx70, align 2, !dbg !3222
  %conv71 = zext i16 %59 to i32, !dbg !3222
  %sub72 = sub nsw i32 %conv71, 2048, !dbg !3223
  store i32 %sub72, i32* %v, align 4, !dbg !3220
  %60 = load i32, i32* %y00, align 4, !dbg !3224
  %61 = load i32, i32* %cy, align 4, !dbg !3225
  %mul73 = mul nsw i32 %60, %61, !dbg !3226
  %62 = load i32, i32* %crv, align 4, !dbg !3227
  %63 = load i32, i32* %v, align 4, !dbg !3228
  %mul74 = mul nsw i32 %62, %63, !dbg !3229
  %add75 = add nsw i32 %mul73, %mul74, !dbg !3230
  %add76 = add nsw i32 %add75, 1024, !dbg !3231
  %shr77 = ashr i32 %add76, 11, !dbg !3232
  store i32 %shr77, i32* %a.addr.i, align 4, !dbg !3233
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !3234
  %add.i = add i32 %64, 32768, !dbg !3235
  %and.i = and i32 %add.i, -65536, !dbg !3236
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3236
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3237

if.then.i:                                        ; preds = %for.body32
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !3238
  %shr.i = ashr i32 %65, 31, !dbg !3239
  %xor.i = xor i32 %shr.i, 32767, !dbg !3240
  %conv.i = trunc i32 %xor.i to i16, !dbg !3241
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !3242
  br label %av_clip_int16_c.exit, !dbg !3242

if.else.i:                                        ; preds = %for.body32
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !3243
  %conv1.i = trunc i32 %66 to i16, !dbg !3243
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !3244
  br label %av_clip_int16_c.exit, !dbg !3244

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %67 = load i16, i16* %retval.i, align 2, !dbg !3245
  %68 = load i32, i32* %x, align 4, !dbg !3246
  %shl78 = shl i32 %68, 1, !dbg !3247
  %idxprom79 = sext i32 %shl78 to i64, !dbg !3248
  %69 = load i16*, i16** %rgb0, align 8, !dbg !3248
  %arrayidx80 = getelementptr inbounds i16, i16* %69, i64 %idxprom79, !dbg !3248
  store i16 %67, i16* %arrayidx80, align 2, !dbg !3249
  %70 = load i32, i32* %y01, align 4, !dbg !3250
  %71 = load i32, i32* %cy, align 4, !dbg !3251
  %mul81 = mul nsw i32 %70, %71, !dbg !3252
  %72 = load i32, i32* %crv, align 4, !dbg !3253
  %73 = load i32, i32* %v, align 4, !dbg !3254
  %mul82 = mul nsw i32 %72, %73, !dbg !3255
  %add83 = add nsw i32 %mul81, %mul82, !dbg !3256
  %add84 = add nsw i32 %add83, 1024, !dbg !3257
  %shr85 = ashr i32 %add84, 11, !dbg !3258
  store i32 %shr85, i32* %a.addr.i339, align 4, !dbg !3259
  %74 = load i32, i32* %a.addr.i339, align 4, !dbg !3260
  %add.i340 = add i32 %74, 32768, !dbg !3261
  %and.i341 = and i32 %add.i340, -65536, !dbg !3262
  %tobool.i342 = icmp ne i32 %and.i341, 0, !dbg !3262
  br i1 %tobool.i342, label %if.then.i346, label %if.else.i348, !dbg !3263

if.then.i346:                                     ; preds = %av_clip_int16_c.exit
  %75 = load i32, i32* %a.addr.i339, align 4, !dbg !3264
  %shr.i343 = ashr i32 %75, 31, !dbg !3265
  %xor.i344 = xor i32 %shr.i343, 32767, !dbg !3266
  %conv.i345 = trunc i32 %xor.i344 to i16, !dbg !3267
  store i16 %conv.i345, i16* %retval.i338, align 2, !dbg !3268
  br label %av_clip_int16_c.exit349, !dbg !3268

if.else.i348:                                     ; preds = %av_clip_int16_c.exit
  %76 = load i32, i32* %a.addr.i339, align 4, !dbg !3269
  %conv1.i347 = trunc i32 %76 to i16, !dbg !3269
  store i16 %conv1.i347, i16* %retval.i338, align 2, !dbg !3270
  br label %av_clip_int16_c.exit349, !dbg !3270

av_clip_int16_c.exit349:                          ; preds = %if.then.i346, %if.else.i348
  %77 = load i16, i16* %retval.i338, align 2, !dbg !3271
  %78 = load i32, i32* %x, align 4, !dbg !3272
  %mul87 = mul nsw i32 2, %78, !dbg !3273
  %add88 = add nsw i32 %mul87, 1, !dbg !3274
  %idxprom89 = sext i32 %add88 to i64, !dbg !3275
  %79 = load i16*, i16** %rgb0, align 8, !dbg !3275
  %arrayidx90 = getelementptr inbounds i16, i16* %79, i64 %idxprom89, !dbg !3275
  store i16 %77, i16* %arrayidx90, align 2, !dbg !3276
  %80 = load i32, i32* %y10, align 4, !dbg !3277
  %81 = load i32, i32* %cy, align 4, !dbg !3278
  %mul91 = mul nsw i32 %80, %81, !dbg !3279
  %82 = load i32, i32* %crv, align 4, !dbg !3280
  %83 = load i32, i32* %v, align 4, !dbg !3281
  %mul92 = mul nsw i32 %82, %83, !dbg !3282
  %add93 = add nsw i32 %mul91, %mul92, !dbg !3283
  %add94 = add nsw i32 %add93, 1024, !dbg !3284
  %shr95 = ashr i32 %add94, 11, !dbg !3285
  store i32 %shr95, i32* %a.addr.i327, align 4, !dbg !3286
  %84 = load i32, i32* %a.addr.i327, align 4, !dbg !3287
  %add.i328 = add i32 %84, 32768, !dbg !3288
  %and.i329 = and i32 %add.i328, -65536, !dbg !3289
  %tobool.i330 = icmp ne i32 %and.i329, 0, !dbg !3289
  br i1 %tobool.i330, label %if.then.i334, label %if.else.i336, !dbg !3290

if.then.i334:                                     ; preds = %av_clip_int16_c.exit349
  %85 = load i32, i32* %a.addr.i327, align 4, !dbg !3291
  %shr.i331 = ashr i32 %85, 31, !dbg !3292
  %xor.i332 = xor i32 %shr.i331, 32767, !dbg !3293
  %conv.i333 = trunc i32 %xor.i332 to i16, !dbg !3294
  store i16 %conv.i333, i16* %retval.i326, align 2, !dbg !3295
  br label %av_clip_int16_c.exit337, !dbg !3295

if.else.i336:                                     ; preds = %av_clip_int16_c.exit349
  %86 = load i32, i32* %a.addr.i327, align 4, !dbg !3296
  %conv1.i335 = trunc i32 %86 to i16, !dbg !3296
  store i16 %conv1.i335, i16* %retval.i326, align 2, !dbg !3297
  br label %av_clip_int16_c.exit337, !dbg !3297

av_clip_int16_c.exit337:                          ; preds = %if.then.i334, %if.else.i336
  %87 = load i16, i16* %retval.i326, align 2, !dbg !3298
  %88 = load i32, i32* %x, align 4, !dbg !3299
  %mul97 = mul nsw i32 2, %88, !dbg !3300
  %conv98 = sext i32 %mul97 to i64, !dbg !3301
  %89 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3302
  %add99 = add nsw i64 %conv98, %89, !dbg !3303
  %90 = load i16*, i16** %rgb0, align 8, !dbg !3304
  %arrayidx100 = getelementptr inbounds i16, i16* %90, i64 %add99, !dbg !3304
  store i16 %87, i16* %arrayidx100, align 2, !dbg !3305
  %91 = load i32, i32* %y11, align 4, !dbg !3306
  %92 = load i32, i32* %cy, align 4, !dbg !3307
  %mul101 = mul nsw i32 %91, %92, !dbg !3308
  %93 = load i32, i32* %crv, align 4, !dbg !3309
  %94 = load i32, i32* %v, align 4, !dbg !3310
  %mul102 = mul nsw i32 %93, %94, !dbg !3311
  %add103 = add nsw i32 %mul101, %mul102, !dbg !3312
  %add104 = add nsw i32 %add103, 1024, !dbg !3313
  %shr105 = ashr i32 %add104, 11, !dbg !3314
  store i32 %shr105, i32* %a.addr.i315, align 4, !dbg !3315
  %95 = load i32, i32* %a.addr.i315, align 4, !dbg !3316
  %add.i316 = add i32 %95, 32768, !dbg !3317
  %and.i317 = and i32 %add.i316, -65536, !dbg !3318
  %tobool.i318 = icmp ne i32 %and.i317, 0, !dbg !3318
  br i1 %tobool.i318, label %if.then.i322, label %if.else.i324, !dbg !3319

if.then.i322:                                     ; preds = %av_clip_int16_c.exit337
  %96 = load i32, i32* %a.addr.i315, align 4, !dbg !3320
  %shr.i319 = ashr i32 %96, 31, !dbg !3321
  %xor.i320 = xor i32 %shr.i319, 32767, !dbg !3322
  %conv.i321 = trunc i32 %xor.i320 to i16, !dbg !3323
  store i16 %conv.i321, i16* %retval.i314, align 2, !dbg !3324
  br label %av_clip_int16_c.exit325, !dbg !3324

if.else.i324:                                     ; preds = %av_clip_int16_c.exit337
  %97 = load i32, i32* %a.addr.i315, align 4, !dbg !3325
  %conv1.i323 = trunc i32 %97 to i16, !dbg !3325
  store i16 %conv1.i323, i16* %retval.i314, align 2, !dbg !3326
  br label %av_clip_int16_c.exit325, !dbg !3326

av_clip_int16_c.exit325:                          ; preds = %if.then.i322, %if.else.i324
  %98 = load i16, i16* %retval.i314, align 2, !dbg !3327
  %99 = load i32, i32* %x, align 4, !dbg !3328
  %mul107 = mul nsw i32 2, %99, !dbg !3329
  %conv108 = sext i32 %mul107 to i64, !dbg !3330
  %100 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3331
  %add109 = add nsw i64 %conv108, %100, !dbg !3332
  %add110 = add nsw i64 %add109, 1, !dbg !3333
  %101 = load i16*, i16** %rgb0, align 8, !dbg !3334
  %arrayidx111 = getelementptr inbounds i16, i16* %101, i64 %add110, !dbg !3334
  store i16 %98, i16* %arrayidx111, align 2, !dbg !3335
  %102 = load i32, i32* %y00, align 4, !dbg !3336
  %103 = load i32, i32* %cy, align 4, !dbg !3337
  %mul112 = mul nsw i32 %102, %103, !dbg !3338
  %104 = load i32, i32* %cgu, align 4, !dbg !3339
  %105 = load i32, i32* %u, align 4, !dbg !3340
  %mul113 = mul nsw i32 %104, %105, !dbg !3341
  %add114 = add nsw i32 %mul112, %mul113, !dbg !3342
  %106 = load i32, i32* %cgv, align 4, !dbg !3343
  %107 = load i32, i32* %v, align 4, !dbg !3344
  %mul115 = mul nsw i32 %106, %107, !dbg !3345
  %add116 = add nsw i32 %add114, %mul115, !dbg !3346
  %add117 = add nsw i32 %add116, 1024, !dbg !3347
  %shr118 = ashr i32 %add117, 11, !dbg !3348
  store i32 %shr118, i32* %a.addr.i303, align 4, !dbg !3349
  %108 = load i32, i32* %a.addr.i303, align 4, !dbg !3350
  %add.i304 = add i32 %108, 32768, !dbg !3351
  %and.i305 = and i32 %add.i304, -65536, !dbg !3352
  %tobool.i306 = icmp ne i32 %and.i305, 0, !dbg !3352
  br i1 %tobool.i306, label %if.then.i310, label %if.else.i312, !dbg !3353

if.then.i310:                                     ; preds = %av_clip_int16_c.exit325
  %109 = load i32, i32* %a.addr.i303, align 4, !dbg !3354
  %shr.i307 = ashr i32 %109, 31, !dbg !3355
  %xor.i308 = xor i32 %shr.i307, 32767, !dbg !3356
  %conv.i309 = trunc i32 %xor.i308 to i16, !dbg !3357
  store i16 %conv.i309, i16* %retval.i302, align 2, !dbg !3358
  br label %av_clip_int16_c.exit313, !dbg !3358

if.else.i312:                                     ; preds = %av_clip_int16_c.exit325
  %110 = load i32, i32* %a.addr.i303, align 4, !dbg !3359
  %conv1.i311 = trunc i32 %110 to i16, !dbg !3359
  store i16 %conv1.i311, i16* %retval.i302, align 2, !dbg !3360
  br label %av_clip_int16_c.exit313, !dbg !3360

av_clip_int16_c.exit313:                          ; preds = %if.then.i310, %if.else.i312
  %111 = load i16, i16* %retval.i302, align 2, !dbg !3361
  %112 = load i32, i32* %x, align 4, !dbg !3362
  %shl120 = shl i32 %112, 1, !dbg !3363
  %idxprom121 = sext i32 %shl120 to i64, !dbg !3364
  %113 = load i16*, i16** %rgb1, align 8, !dbg !3364
  %arrayidx122 = getelementptr inbounds i16, i16* %113, i64 %idxprom121, !dbg !3364
  store i16 %111, i16* %arrayidx122, align 2, !dbg !3365
  %114 = load i32, i32* %y01, align 4, !dbg !3366
  %115 = load i32, i32* %cy, align 4, !dbg !3367
  %mul123 = mul nsw i32 %114, %115, !dbg !3368
  %116 = load i32, i32* %cgu, align 4, !dbg !3369
  %117 = load i32, i32* %u, align 4, !dbg !3370
  %mul124 = mul nsw i32 %116, %117, !dbg !3371
  %add125 = add nsw i32 %mul123, %mul124, !dbg !3372
  %118 = load i32, i32* %cgv, align 4, !dbg !3373
  %119 = load i32, i32* %v, align 4, !dbg !3374
  %mul126 = mul nsw i32 %118, %119, !dbg !3375
  %add127 = add nsw i32 %add125, %mul126, !dbg !3376
  %add128 = add nsw i32 %add127, 1024, !dbg !3377
  %shr129 = ashr i32 %add128, 11, !dbg !3378
  store i32 %shr129, i32* %a.addr.i291, align 4, !dbg !3379
  %120 = load i32, i32* %a.addr.i291, align 4, !dbg !3380
  %add.i292 = add i32 %120, 32768, !dbg !3381
  %and.i293 = and i32 %add.i292, -65536, !dbg !3382
  %tobool.i294 = icmp ne i32 %and.i293, 0, !dbg !3382
  br i1 %tobool.i294, label %if.then.i298, label %if.else.i300, !dbg !3383

if.then.i298:                                     ; preds = %av_clip_int16_c.exit313
  %121 = load i32, i32* %a.addr.i291, align 4, !dbg !3384
  %shr.i295 = ashr i32 %121, 31, !dbg !3385
  %xor.i296 = xor i32 %shr.i295, 32767, !dbg !3386
  %conv.i297 = trunc i32 %xor.i296 to i16, !dbg !3387
  store i16 %conv.i297, i16* %retval.i290, align 2, !dbg !3388
  br label %av_clip_int16_c.exit301, !dbg !3388

if.else.i300:                                     ; preds = %av_clip_int16_c.exit313
  %122 = load i32, i32* %a.addr.i291, align 4, !dbg !3389
  %conv1.i299 = trunc i32 %122 to i16, !dbg !3389
  store i16 %conv1.i299, i16* %retval.i290, align 2, !dbg !3390
  br label %av_clip_int16_c.exit301, !dbg !3390

av_clip_int16_c.exit301:                          ; preds = %if.then.i298, %if.else.i300
  %123 = load i16, i16* %retval.i290, align 2, !dbg !3391
  %124 = load i32, i32* %x, align 4, !dbg !3392
  %mul131 = mul nsw i32 2, %124, !dbg !3393
  %add132 = add nsw i32 %mul131, 1, !dbg !3394
  %idxprom133 = sext i32 %add132 to i64, !dbg !3395
  %125 = load i16*, i16** %rgb1, align 8, !dbg !3395
  %arrayidx134 = getelementptr inbounds i16, i16* %125, i64 %idxprom133, !dbg !3395
  store i16 %123, i16* %arrayidx134, align 2, !dbg !3396
  %126 = load i32, i32* %y10, align 4, !dbg !3397
  %127 = load i32, i32* %cy, align 4, !dbg !3398
  %mul135 = mul nsw i32 %126, %127, !dbg !3399
  %128 = load i32, i32* %cgu, align 4, !dbg !3400
  %129 = load i32, i32* %u, align 4, !dbg !3401
  %mul136 = mul nsw i32 %128, %129, !dbg !3402
  %add137 = add nsw i32 %mul135, %mul136, !dbg !3403
  %130 = load i32, i32* %cgv, align 4, !dbg !3404
  %131 = load i32, i32* %v, align 4, !dbg !3405
  %mul138 = mul nsw i32 %130, %131, !dbg !3406
  %add139 = add nsw i32 %add137, %mul138, !dbg !3407
  %add140 = add nsw i32 %add139, 1024, !dbg !3408
  %shr141 = ashr i32 %add140, 11, !dbg !3409
  store i32 %shr141, i32* %a.addr.i279, align 4, !dbg !3410
  %132 = load i32, i32* %a.addr.i279, align 4, !dbg !3411
  %add.i280 = add i32 %132, 32768, !dbg !3412
  %and.i281 = and i32 %add.i280, -65536, !dbg !3413
  %tobool.i282 = icmp ne i32 %and.i281, 0, !dbg !3413
  br i1 %tobool.i282, label %if.then.i286, label %if.else.i288, !dbg !3414

if.then.i286:                                     ; preds = %av_clip_int16_c.exit301
  %133 = load i32, i32* %a.addr.i279, align 4, !dbg !3415
  %shr.i283 = ashr i32 %133, 31, !dbg !3416
  %xor.i284 = xor i32 %shr.i283, 32767, !dbg !3417
  %conv.i285 = trunc i32 %xor.i284 to i16, !dbg !3418
  store i16 %conv.i285, i16* %retval.i278, align 2, !dbg !3419
  br label %av_clip_int16_c.exit289, !dbg !3419

if.else.i288:                                     ; preds = %av_clip_int16_c.exit301
  %134 = load i32, i32* %a.addr.i279, align 4, !dbg !3420
  %conv1.i287 = trunc i32 %134 to i16, !dbg !3420
  store i16 %conv1.i287, i16* %retval.i278, align 2, !dbg !3421
  br label %av_clip_int16_c.exit289, !dbg !3421

av_clip_int16_c.exit289:                          ; preds = %if.then.i286, %if.else.i288
  %135 = load i16, i16* %retval.i278, align 2, !dbg !3422
  %136 = load i32, i32* %x, align 4, !dbg !3423
  %mul143 = mul nsw i32 2, %136, !dbg !3424
  %conv144 = sext i32 %mul143 to i64, !dbg !3425
  %137 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3426
  %add145 = add nsw i64 %conv144, %137, !dbg !3427
  %138 = load i16*, i16** %rgb1, align 8, !dbg !3428
  %arrayidx146 = getelementptr inbounds i16, i16* %138, i64 %add145, !dbg !3428
  store i16 %135, i16* %arrayidx146, align 2, !dbg !3429
  %139 = load i32, i32* %y11, align 4, !dbg !3430
  %140 = load i32, i32* %cy, align 4, !dbg !3431
  %mul147 = mul nsw i32 %139, %140, !dbg !3432
  %141 = load i32, i32* %cgu, align 4, !dbg !3433
  %142 = load i32, i32* %u, align 4, !dbg !3434
  %mul148 = mul nsw i32 %141, %142, !dbg !3435
  %add149 = add nsw i32 %mul147, %mul148, !dbg !3436
  %143 = load i32, i32* %cgv, align 4, !dbg !3437
  %144 = load i32, i32* %v, align 4, !dbg !3438
  %mul150 = mul nsw i32 %143, %144, !dbg !3439
  %add151 = add nsw i32 %add149, %mul150, !dbg !3440
  %add152 = add nsw i32 %add151, 1024, !dbg !3441
  %shr153 = ashr i32 %add152, 11, !dbg !3442
  store i32 %shr153, i32* %a.addr.i267, align 4, !dbg !3443
  %145 = load i32, i32* %a.addr.i267, align 4, !dbg !3444
  %add.i268 = add i32 %145, 32768, !dbg !3445
  %and.i269 = and i32 %add.i268, -65536, !dbg !3446
  %tobool.i270 = icmp ne i32 %and.i269, 0, !dbg !3446
  br i1 %tobool.i270, label %if.then.i274, label %if.else.i276, !dbg !3447

if.then.i274:                                     ; preds = %av_clip_int16_c.exit289
  %146 = load i32, i32* %a.addr.i267, align 4, !dbg !3448
  %shr.i271 = ashr i32 %146, 31, !dbg !3449
  %xor.i272 = xor i32 %shr.i271, 32767, !dbg !3450
  %conv.i273 = trunc i32 %xor.i272 to i16, !dbg !3451
  store i16 %conv.i273, i16* %retval.i266, align 2, !dbg !3452
  br label %av_clip_int16_c.exit277, !dbg !3452

if.else.i276:                                     ; preds = %av_clip_int16_c.exit289
  %147 = load i32, i32* %a.addr.i267, align 4, !dbg !3453
  %conv1.i275 = trunc i32 %147 to i16, !dbg !3453
  store i16 %conv1.i275, i16* %retval.i266, align 2, !dbg !3454
  br label %av_clip_int16_c.exit277, !dbg !3454

av_clip_int16_c.exit277:                          ; preds = %if.then.i274, %if.else.i276
  %148 = load i16, i16* %retval.i266, align 2, !dbg !3455
  %149 = load i32, i32* %x, align 4, !dbg !3456
  %mul155 = mul nsw i32 2, %149, !dbg !3457
  %conv156 = sext i32 %mul155 to i64, !dbg !3458
  %150 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3459
  %add157 = add nsw i64 %conv156, %150, !dbg !3460
  %add158 = add nsw i64 %add157, 1, !dbg !3461
  %151 = load i16*, i16** %rgb1, align 8, !dbg !3462
  %arrayidx159 = getelementptr inbounds i16, i16* %151, i64 %add158, !dbg !3462
  store i16 %148, i16* %arrayidx159, align 2, !dbg !3463
  %152 = load i32, i32* %y00, align 4, !dbg !3464
  %153 = load i32, i32* %cy, align 4, !dbg !3465
  %mul160 = mul nsw i32 %152, %153, !dbg !3466
  %154 = load i32, i32* %cbu, align 4, !dbg !3467
  %155 = load i32, i32* %u, align 4, !dbg !3468
  %mul161 = mul nsw i32 %154, %155, !dbg !3469
  %add162 = add nsw i32 %mul160, %mul161, !dbg !3470
  %add163 = add nsw i32 %add162, 1024, !dbg !3471
  %shr164 = ashr i32 %add163, 11, !dbg !3472
  store i32 %shr164, i32* %a.addr.i255, align 4, !dbg !3473
  %156 = load i32, i32* %a.addr.i255, align 4, !dbg !3474
  %add.i256 = add i32 %156, 32768, !dbg !3475
  %and.i257 = and i32 %add.i256, -65536, !dbg !3476
  %tobool.i258 = icmp ne i32 %and.i257, 0, !dbg !3476
  br i1 %tobool.i258, label %if.then.i262, label %if.else.i264, !dbg !3477

if.then.i262:                                     ; preds = %av_clip_int16_c.exit277
  %157 = load i32, i32* %a.addr.i255, align 4, !dbg !3478
  %shr.i259 = ashr i32 %157, 31, !dbg !3479
  %xor.i260 = xor i32 %shr.i259, 32767, !dbg !3480
  %conv.i261 = trunc i32 %xor.i260 to i16, !dbg !3481
  store i16 %conv.i261, i16* %retval.i254, align 2, !dbg !3482
  br label %av_clip_int16_c.exit265, !dbg !3482

if.else.i264:                                     ; preds = %av_clip_int16_c.exit277
  %158 = load i32, i32* %a.addr.i255, align 4, !dbg !3483
  %conv1.i263 = trunc i32 %158 to i16, !dbg !3483
  store i16 %conv1.i263, i16* %retval.i254, align 2, !dbg !3484
  br label %av_clip_int16_c.exit265, !dbg !3484

av_clip_int16_c.exit265:                          ; preds = %if.then.i262, %if.else.i264
  %159 = load i16, i16* %retval.i254, align 2, !dbg !3485
  %160 = load i32, i32* %x, align 4, !dbg !3486
  %shl166 = shl i32 %160, 1, !dbg !3487
  %idxprom167 = sext i32 %shl166 to i64, !dbg !3488
  %161 = load i16*, i16** %rgb2, align 8, !dbg !3488
  %arrayidx168 = getelementptr inbounds i16, i16* %161, i64 %idxprom167, !dbg !3488
  store i16 %159, i16* %arrayidx168, align 2, !dbg !3489
  %162 = load i32, i32* %y01, align 4, !dbg !3490
  %163 = load i32, i32* %cy, align 4, !dbg !3491
  %mul169 = mul nsw i32 %162, %163, !dbg !3492
  %164 = load i32, i32* %cbu, align 4, !dbg !3493
  %165 = load i32, i32* %u, align 4, !dbg !3494
  %mul170 = mul nsw i32 %164, %165, !dbg !3495
  %add171 = add nsw i32 %mul169, %mul170, !dbg !3496
  %add172 = add nsw i32 %add171, 1024, !dbg !3497
  %shr173 = ashr i32 %add172, 11, !dbg !3498
  store i32 %shr173, i32* %a.addr.i243, align 4, !dbg !3499
  %166 = load i32, i32* %a.addr.i243, align 4, !dbg !3500
  %add.i244 = add i32 %166, 32768, !dbg !3501
  %and.i245 = and i32 %add.i244, -65536, !dbg !3502
  %tobool.i246 = icmp ne i32 %and.i245, 0, !dbg !3502
  br i1 %tobool.i246, label %if.then.i250, label %if.else.i252, !dbg !3503

if.then.i250:                                     ; preds = %av_clip_int16_c.exit265
  %167 = load i32, i32* %a.addr.i243, align 4, !dbg !3504
  %shr.i247 = ashr i32 %167, 31, !dbg !3505
  %xor.i248 = xor i32 %shr.i247, 32767, !dbg !3506
  %conv.i249 = trunc i32 %xor.i248 to i16, !dbg !3507
  store i16 %conv.i249, i16* %retval.i242, align 2, !dbg !3508
  br label %av_clip_int16_c.exit253, !dbg !3508

if.else.i252:                                     ; preds = %av_clip_int16_c.exit265
  %168 = load i32, i32* %a.addr.i243, align 4, !dbg !3509
  %conv1.i251 = trunc i32 %168 to i16, !dbg !3509
  store i16 %conv1.i251, i16* %retval.i242, align 2, !dbg !3510
  br label %av_clip_int16_c.exit253, !dbg !3510

av_clip_int16_c.exit253:                          ; preds = %if.then.i250, %if.else.i252
  %169 = load i16, i16* %retval.i242, align 2, !dbg !3511
  %170 = load i32, i32* %x, align 4, !dbg !3512
  %mul175 = mul nsw i32 2, %170, !dbg !3513
  %add176 = add nsw i32 %mul175, 1, !dbg !3514
  %idxprom177 = sext i32 %add176 to i64, !dbg !3515
  %171 = load i16*, i16** %rgb2, align 8, !dbg !3515
  %arrayidx178 = getelementptr inbounds i16, i16* %171, i64 %idxprom177, !dbg !3515
  store i16 %169, i16* %arrayidx178, align 2, !dbg !3516
  %172 = load i32, i32* %y10, align 4, !dbg !3517
  %173 = load i32, i32* %cy, align 4, !dbg !3518
  %mul179 = mul nsw i32 %172, %173, !dbg !3519
  %174 = load i32, i32* %cbu, align 4, !dbg !3520
  %175 = load i32, i32* %u, align 4, !dbg !3521
  %mul180 = mul nsw i32 %174, %175, !dbg !3522
  %add181 = add nsw i32 %mul179, %mul180, !dbg !3523
  %add182 = add nsw i32 %add181, 1024, !dbg !3524
  %shr183 = ashr i32 %add182, 11, !dbg !3525
  store i32 %shr183, i32* %a.addr.i231, align 4, !dbg !3526
  %176 = load i32, i32* %a.addr.i231, align 4, !dbg !3527
  %add.i232 = add i32 %176, 32768, !dbg !3528
  %and.i233 = and i32 %add.i232, -65536, !dbg !3529
  %tobool.i234 = icmp ne i32 %and.i233, 0, !dbg !3529
  br i1 %tobool.i234, label %if.then.i238, label %if.else.i240, !dbg !3530

if.then.i238:                                     ; preds = %av_clip_int16_c.exit253
  %177 = load i32, i32* %a.addr.i231, align 4, !dbg !3531
  %shr.i235 = ashr i32 %177, 31, !dbg !3532
  %xor.i236 = xor i32 %shr.i235, 32767, !dbg !3533
  %conv.i237 = trunc i32 %xor.i236 to i16, !dbg !3534
  store i16 %conv.i237, i16* %retval.i230, align 2, !dbg !3535
  br label %av_clip_int16_c.exit241, !dbg !3535

if.else.i240:                                     ; preds = %av_clip_int16_c.exit253
  %178 = load i32, i32* %a.addr.i231, align 4, !dbg !3536
  %conv1.i239 = trunc i32 %178 to i16, !dbg !3536
  store i16 %conv1.i239, i16* %retval.i230, align 2, !dbg !3537
  br label %av_clip_int16_c.exit241, !dbg !3537

av_clip_int16_c.exit241:                          ; preds = %if.then.i238, %if.else.i240
  %179 = load i16, i16* %retval.i230, align 2, !dbg !3538
  %180 = load i32, i32* %x, align 4, !dbg !3539
  %mul185 = mul nsw i32 2, %180, !dbg !3540
  %conv186 = sext i32 %mul185 to i64, !dbg !3541
  %181 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3542
  %add187 = add nsw i64 %conv186, %181, !dbg !3543
  %182 = load i16*, i16** %rgb2, align 8, !dbg !3544
  %arrayidx188 = getelementptr inbounds i16, i16* %182, i64 %add187, !dbg !3544
  store i16 %179, i16* %arrayidx188, align 2, !dbg !3545
  %183 = load i32, i32* %y11, align 4, !dbg !3546
  %184 = load i32, i32* %cy, align 4, !dbg !3547
  %mul189 = mul nsw i32 %183, %184, !dbg !3548
  %185 = load i32, i32* %cbu, align 4, !dbg !3549
  %186 = load i32, i32* %u, align 4, !dbg !3550
  %mul190 = mul nsw i32 %185, %186, !dbg !3551
  %add191 = add nsw i32 %mul189, %mul190, !dbg !3552
  %add192 = add nsw i32 %add191, 1024, !dbg !3553
  %shr193 = ashr i32 %add192, 11, !dbg !3554
  store i32 %shr193, i32* %a.addr.i219, align 4, !dbg !3555
  %187 = load i32, i32* %a.addr.i219, align 4, !dbg !3556
  %add.i220 = add i32 %187, 32768, !dbg !3557
  %and.i221 = and i32 %add.i220, -65536, !dbg !3558
  %tobool.i222 = icmp ne i32 %and.i221, 0, !dbg !3558
  br i1 %tobool.i222, label %if.then.i226, label %if.else.i228, !dbg !3559

if.then.i226:                                     ; preds = %av_clip_int16_c.exit241
  %188 = load i32, i32* %a.addr.i219, align 4, !dbg !3560
  %shr.i223 = ashr i32 %188, 31, !dbg !3561
  %xor.i224 = xor i32 %shr.i223, 32767, !dbg !3562
  %conv.i225 = trunc i32 %xor.i224 to i16, !dbg !3563
  store i16 %conv.i225, i16* %retval.i218, align 2, !dbg !3564
  br label %av_clip_int16_c.exit229, !dbg !3564

if.else.i228:                                     ; preds = %av_clip_int16_c.exit241
  %189 = load i32, i32* %a.addr.i219, align 4, !dbg !3565
  %conv1.i227 = trunc i32 %189 to i16, !dbg !3565
  store i16 %conv1.i227, i16* %retval.i218, align 2, !dbg !3566
  br label %av_clip_int16_c.exit229, !dbg !3566

av_clip_int16_c.exit229:                          ; preds = %if.then.i226, %if.else.i228
  %190 = load i16, i16* %retval.i218, align 2, !dbg !3567
  %191 = load i32, i32* %x, align 4, !dbg !3568
  %mul195 = mul nsw i32 2, %191, !dbg !3569
  %conv196 = sext i32 %mul195 to i64, !dbg !3570
  %192 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3571
  %add197 = add nsw i64 %conv196, %192, !dbg !3572
  %add198 = add nsw i64 %add197, 1, !dbg !3573
  %193 = load i16*, i16** %rgb2, align 8, !dbg !3574
  %arrayidx199 = getelementptr inbounds i16, i16* %193, i64 %add198, !dbg !3574
  store i16 %190, i16* %arrayidx199, align 2, !dbg !3575
  br label %for.inc, !dbg !3576

for.inc:                                          ; preds = %av_clip_int16_c.exit229
  %194 = load i32, i32* %x, align 4, !dbg !3577
  %inc = add nsw i32 %194, 1, !dbg !3577
  store i32 %inc, i32* %x, align 4, !dbg !3577
  br label %for.cond29, !dbg !3579, !llvm.loop !3580

for.end:                                          ; preds = %for.cond29
  %195 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3582
  %arrayidx200 = getelementptr inbounds i64, i64* %195, i64 0, !dbg !3582
  %196 = load i64, i64* %arrayidx200, align 8, !dbg !3582
  %mul201 = mul nsw i64 %196, 2, !dbg !3583
  %div202 = udiv i64 %mul201, 2, !dbg !3584
  %197 = load i16*, i16** %yuv0, align 8, !dbg !3585
  %add.ptr = getelementptr inbounds i16, i16* %197, i64 %div202, !dbg !3585
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !3585
  %198 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3586
  %arrayidx203 = getelementptr inbounds i64, i64* %198, i64 1, !dbg !3586
  %199 = load i64, i64* %arrayidx203, align 8, !dbg !3586
  %div204 = udiv i64 %199, 2, !dbg !3587
  %200 = load i16*, i16** %yuv1, align 8, !dbg !3588
  %add.ptr205 = getelementptr inbounds i16, i16* %200, i64 %div204, !dbg !3588
  store i16* %add.ptr205, i16** %yuv1, align 8, !dbg !3588
  %201 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3589
  %arrayidx206 = getelementptr inbounds i64, i64* %201, i64 2, !dbg !3589
  %202 = load i64, i64* %arrayidx206, align 8, !dbg !3589
  %div207 = udiv i64 %202, 2, !dbg !3590
  %203 = load i16*, i16** %yuv2, align 8, !dbg !3591
  %add.ptr208 = getelementptr inbounds i16, i16* %203, i64 %div207, !dbg !3591
  store i16* %add.ptr208, i16** %yuv2, align 8, !dbg !3591
  %204 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3592
  %mul209 = mul nsw i64 %204, 2, !dbg !3593
  %205 = load i16*, i16** %rgb0, align 8, !dbg !3594
  %add.ptr210 = getelementptr inbounds i16, i16* %205, i64 %mul209, !dbg !3594
  store i16* %add.ptr210, i16** %rgb0, align 8, !dbg !3594
  %206 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3595
  %mul211 = mul nsw i64 %206, 2, !dbg !3596
  %207 = load i16*, i16** %rgb1, align 8, !dbg !3597
  %add.ptr212 = getelementptr inbounds i16, i16* %207, i64 %mul211, !dbg !3597
  store i16* %add.ptr212, i16** %rgb1, align 8, !dbg !3597
  %208 = load i64, i64* %rgb_stride.addr, align 8, !dbg !3598
  %mul213 = mul nsw i64 %208, 2, !dbg !3599
  %209 = load i16*, i16** %rgb2, align 8, !dbg !3600
  %add.ptr214 = getelementptr inbounds i16, i16* %209, i64 %mul213, !dbg !3600
  store i16* %add.ptr214, i16** %rgb2, align 8, !dbg !3600
  br label %for.inc215, !dbg !3601

for.inc215:                                       ; preds = %for.end
  %210 = load i32, i32* %y, align 4, !dbg !3602
  %inc216 = add nsw i32 %210, 1, !dbg !3602
  store i32 %inc216, i32* %y, align 4, !dbg !3602
  br label %for.cond, !dbg !3604, !llvm.loop !3605

for.end217:                                       ; preds = %for.cond
  ret void, !dbg !3607
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_444p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !3608 {
entry:
  %retval.i117 = alloca i8, align 1
  %a.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i118, metadata !3609, metadata !94), !dbg !3613
  %retval.i106 = alloca i8, align 1
  %a.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i107, metadata !3609, metadata !94), !dbg !3621
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !3623
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !3625, metadata !94), !dbg !3626
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !3627, metadata !94), !dbg !3628
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !3629, metadata !94), !dbg !3630
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !3631, metadata !94), !dbg !3632
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3633, metadata !94), !dbg !3634
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3635, metadata !94), !dbg !3636
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !3637, metadata !94), !dbg !3638
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !3639, metadata !94), !dbg !3640
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !3641, metadata !94), !dbg !3642
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !3643
  store i8** %0, i8*** %yuv, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !3644, metadata !94), !dbg !3645
  %1 = load i8**, i8*** %yuv, align 8, !dbg !3646
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !3646
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !3646
  store i8* %2, i8** %yuv0, align 8, !dbg !3645
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !3647, metadata !94), !dbg !3648
  %3 = load i8**, i8*** %yuv, align 8, !dbg !3649
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !3649
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !3649
  store i8* %4, i8** %yuv1, align 8, !dbg !3648
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !3650, metadata !94), !dbg !3651
  %5 = load i8**, i8*** %yuv, align 8, !dbg !3652
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !3652
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !3652
  store i8* %6, i8** %yuv2, align 8, !dbg !3651
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !3653, metadata !94), !dbg !3654
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !3655
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !3655
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !3655
  store i16* %8, i16** %rgb0, align 8, !dbg !3654
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !3656, metadata !94), !dbg !3657
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !3658
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !3658
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !3658
  store i16* %10, i16** %rgb1, align 8, !dbg !3657
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !3659, metadata !94), !dbg !3660
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !3661
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !3661
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !3661
  store i16* %12, i16** %rgb2, align 8, !dbg !3660
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3662, metadata !94), !dbg !3663
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3664, metadata !94), !dbg !3665
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !3666, metadata !94), !dbg !3667
  store i32 21, i32* %sh, align 4, !dbg !3667
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !3668, metadata !94), !dbg !3669
  store i32 1048576, i32* %rnd, align 4, !dbg !3669
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !3670, metadata !94), !dbg !3671
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3672
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !3672
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !3672
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !3672
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !3672
  %conv = sext i16 %14 to i32, !dbg !3672
  store i32 %conv, i32* %cry, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !3673, metadata !94), !dbg !3674
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3675
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !3675
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !3675
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !3675
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !3675
  %conv12 = sext i16 %16 to i32, !dbg !3675
  store i32 %conv12, i32* %cgy, align 4, !dbg !3674
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !3676, metadata !94), !dbg !3677
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3678
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !3678
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !3678
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !3678
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !3678
  %conv16 = sext i16 %18 to i32, !dbg !3678
  store i32 %conv16, i32* %cby, align 4, !dbg !3677
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !3679, metadata !94), !dbg !3680
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3681
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !3681
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !3681
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !3681
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !3681
  %conv20 = sext i16 %20 to i32, !dbg !3681
  store i32 %conv20, i32* %cru, align 4, !dbg !3680
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !3682, metadata !94), !dbg !3683
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3684
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !3684
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !3684
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !3684
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !3684
  %conv24 = sext i16 %22 to i32, !dbg !3684
  store i32 %conv24, i32* %cgu, align 4, !dbg !3683
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !3685, metadata !94), !dbg !3686
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3687
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !3687
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !3687
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !3687
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !3687
  %conv28 = sext i16 %24 to i32, !dbg !3687
  store i32 %conv28, i32* %cburv, align 4, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !3688, metadata !94), !dbg !3689
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3690
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !3690
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !3690
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !3690
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !3690
  %conv32 = sext i16 %26 to i32, !dbg !3690
  store i32 %conv32, i32* %cgv, align 4, !dbg !3689
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !3691, metadata !94), !dbg !3692
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3693
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !3693
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !3693
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !3693
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !3693
  %conv36 = sext i16 %28 to i32, !dbg !3693
  store i32 %conv36, i32* %cbv, align 4, !dbg !3692
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !3694, metadata !94), !dbg !3695
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3696
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !3696
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !3696
  %div = udiv i64 %30, 1, !dbg !3697
  store i64 %div, i64* %s0, align 8, !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !3698, metadata !94), !dbg !3699
  store i32 128, i32* %uv_offset, align 4, !dbg !3699
  %31 = load i32, i32* %w.addr, align 4, !dbg !3700
  %add = add nsw i32 %31, 1, !dbg !3701
  %sub = sub nsw i32 %add, 1, !dbg !3702
  %shr = ashr i32 %sub, 0, !dbg !3703
  store i32 %shr, i32* %w.addr, align 4, !dbg !3704
  %32 = load i32, i32* %h.addr, align 4, !dbg !3705
  %add38 = add nsw i32 %32, 1, !dbg !3706
  %sub39 = sub nsw i32 %add38, 1, !dbg !3707
  %shr40 = ashr i32 %sub39, 0, !dbg !3708
  store i32 %shr40, i32* %h.addr, align 4, !dbg !3709
  store i32 0, i32* %y, align 4, !dbg !3710
  br label %for.cond, !dbg !3711

for.cond:                                         ; preds = %for.inc103, %entry
  %33 = load i32, i32* %y, align 4, !dbg !3712
  %34 = load i32, i32* %h.addr, align 4, !dbg !3714
  %cmp = icmp slt i32 %33, %34, !dbg !3715
  br i1 %cmp, label %for.body, label %for.end105, !dbg !3716

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3717
  br label %for.cond42, !dbg !3718

for.cond42:                                       ; preds = %for.inc, %for.body
  %35 = load i32, i32* %x, align 4, !dbg !3719
  %36 = load i32, i32* %w.addr, align 4, !dbg !3721
  %cmp43 = icmp slt i32 %35, %36, !dbg !3722
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !3723

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !3724, metadata !94), !dbg !3725
  %37 = load i32, i32* %x, align 4, !dbg !3726
  %shl = shl i32 %37, 0, !dbg !3727
  %idxprom = sext i32 %shl to i64, !dbg !3728
  %38 = load i16*, i16** %rgb0, align 8, !dbg !3728
  %arrayidx46 = getelementptr inbounds i16, i16* %38, i64 %idxprom, !dbg !3728
  %39 = load i16, i16* %arrayidx46, align 2, !dbg !3728
  %conv47 = sext i16 %39 to i32, !dbg !3728
  store i32 %conv47, i32* %r00, align 4, !dbg !3725
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !3729, metadata !94), !dbg !3730
  %40 = load i32, i32* %x, align 4, !dbg !3731
  %shl48 = shl i32 %40, 0, !dbg !3732
  %idxprom49 = sext i32 %shl48 to i64, !dbg !3733
  %41 = load i16*, i16** %rgb1, align 8, !dbg !3733
  %arrayidx50 = getelementptr inbounds i16, i16* %41, i64 %idxprom49, !dbg !3733
  %42 = load i16, i16* %arrayidx50, align 2, !dbg !3733
  %conv51 = sext i16 %42 to i32, !dbg !3733
  store i32 %conv51, i32* %g00, align 4, !dbg !3730
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !3734, metadata !94), !dbg !3735
  %43 = load i32, i32* %x, align 4, !dbg !3736
  %shl52 = shl i32 %43, 0, !dbg !3737
  %idxprom53 = sext i32 %shl52 to i64, !dbg !3738
  %44 = load i16*, i16** %rgb2, align 8, !dbg !3738
  %arrayidx54 = getelementptr inbounds i16, i16* %44, i64 %idxprom53, !dbg !3738
  %45 = load i16, i16* %arrayidx54, align 2, !dbg !3738
  %conv55 = sext i16 %45 to i32, !dbg !3738
  store i32 %conv55, i32* %b00, align 4, !dbg !3735
  %46 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !3739
  %arrayidx56 = getelementptr inbounds i16, i16* %46, i64 0, !dbg !3739
  %47 = load i16, i16* %arrayidx56, align 2, !dbg !3739
  %conv57 = sext i16 %47 to i32, !dbg !3739
  %48 = load i32, i32* %r00, align 4, !dbg !3740
  %49 = load i32, i32* %cry, align 4, !dbg !3741
  %mul = mul nsw i32 %48, %49, !dbg !3742
  %50 = load i32, i32* %g00, align 4, !dbg !3743
  %51 = load i32, i32* %cgy, align 4, !dbg !3744
  %mul58 = mul nsw i32 %50, %51, !dbg !3745
  %add59 = add nsw i32 %mul, %mul58, !dbg !3746
  %52 = load i32, i32* %b00, align 4, !dbg !3747
  %53 = load i32, i32* %cby, align 4, !dbg !3748
  %mul60 = mul nsw i32 %52, %53, !dbg !3749
  %add61 = add nsw i32 %add59, %mul60, !dbg !3750
  %add62 = add nsw i32 %add61, 1048576, !dbg !3751
  %shr63 = ashr i32 %add62, 21, !dbg !3752
  %add64 = add nsw i32 %conv57, %shr63, !dbg !3753
  store i32 %add64, i32* %a.addr.i, align 4, !dbg !3754
  %54 = load i32, i32* %a.addr.i, align 4, !dbg !3755
  %and.i = and i32 %54, -256, !dbg !3757
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3757
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3758

if.then.i:                                        ; preds = %for.body45
  %55 = load i32, i32* %a.addr.i, align 4, !dbg !3759
  %neg.i = xor i32 %55, -1, !dbg !3761
  %shr.i = ashr i32 %neg.i, 31, !dbg !3762
  %conv.i = trunc i32 %shr.i to i8, !dbg !3763
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !3764
  br label %av_clip_uint8_c.exit, !dbg !3764

if.else.i:                                        ; preds = %for.body45
  %56 = load i32, i32* %a.addr.i, align 4, !dbg !3765
  %conv1.i = trunc i32 %56 to i8, !dbg !3765
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !3766
  br label %av_clip_uint8_c.exit, !dbg !3766

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %57 = load i8, i8* %retval.i, align 1, !dbg !3767
  %58 = load i32, i32* %x, align 4, !dbg !3768
  %shl65 = shl i32 %58, 0, !dbg !3769
  %idxprom66 = sext i32 %shl65 to i64, !dbg !3770
  %59 = load i8*, i8** %yuv0, align 8, !dbg !3770
  %arrayidx67 = getelementptr inbounds i8, i8* %59, i64 %idxprom66, !dbg !3770
  store i8 %57, i8* %arrayidx67, align 1, !dbg !3771
  %60 = load i32, i32* %r00, align 4, !dbg !3772
  %61 = load i32, i32* %cru, align 4, !dbg !3773
  %mul68 = mul nsw i32 %60, %61, !dbg !3774
  %62 = load i32, i32* %g00, align 4, !dbg !3775
  %63 = load i32, i32* %cgu, align 4, !dbg !3776
  %mul69 = mul nsw i32 %62, %63, !dbg !3777
  %add70 = add nsw i32 %mul68, %mul69, !dbg !3778
  %64 = load i32, i32* %b00, align 4, !dbg !3779
  %65 = load i32, i32* %cburv, align 4, !dbg !3780
  %mul71 = mul nsw i32 %64, %65, !dbg !3781
  %add72 = add nsw i32 %add70, %mul71, !dbg !3782
  %add73 = add nsw i32 %add72, 1048576, !dbg !3783
  %shr74 = ashr i32 %add73, 21, !dbg !3784
  %add75 = add nsw i32 128, %shr74, !dbg !3785
  store i32 %add75, i32* %a.addr.i118, align 4, !dbg !3786
  %66 = load i32, i32* %a.addr.i118, align 4, !dbg !3787
  %and.i119 = and i32 %66, -256, !dbg !3788
  %tobool.i120 = icmp ne i32 %and.i119, 0, !dbg !3788
  br i1 %tobool.i120, label %if.then.i124, label %if.else.i126, !dbg !3789

if.then.i124:                                     ; preds = %av_clip_uint8_c.exit
  %67 = load i32, i32* %a.addr.i118, align 4, !dbg !3790
  %neg.i121 = xor i32 %67, -1, !dbg !3791
  %shr.i122 = ashr i32 %neg.i121, 31, !dbg !3792
  %conv.i123 = trunc i32 %shr.i122 to i8, !dbg !3793
  store i8 %conv.i123, i8* %retval.i117, align 1, !dbg !3794
  br label %av_clip_uint8_c.exit127, !dbg !3794

if.else.i126:                                     ; preds = %av_clip_uint8_c.exit
  %68 = load i32, i32* %a.addr.i118, align 4, !dbg !3795
  %conv1.i125 = trunc i32 %68 to i8, !dbg !3795
  store i8 %conv1.i125, i8* %retval.i117, align 1, !dbg !3796
  br label %av_clip_uint8_c.exit127, !dbg !3796

av_clip_uint8_c.exit127:                          ; preds = %if.then.i124, %if.else.i126
  %69 = load i8, i8* %retval.i117, align 1, !dbg !3797
  %70 = load i32, i32* %x, align 4, !dbg !3798
  %idxprom77 = sext i32 %70 to i64, !dbg !3799
  %71 = load i8*, i8** %yuv1, align 8, !dbg !3799
  %arrayidx78 = getelementptr inbounds i8, i8* %71, i64 %idxprom77, !dbg !3799
  store i8 %69, i8* %arrayidx78, align 1, !dbg !3800
  %72 = load i32, i32* %r00, align 4, !dbg !3801
  %73 = load i32, i32* %cburv, align 4, !dbg !3802
  %mul79 = mul nsw i32 %72, %73, !dbg !3803
  %74 = load i32, i32* %g00, align 4, !dbg !3804
  %75 = load i32, i32* %cgv, align 4, !dbg !3805
  %mul80 = mul nsw i32 %74, %75, !dbg !3806
  %add81 = add nsw i32 %mul79, %mul80, !dbg !3807
  %76 = load i32, i32* %b00, align 4, !dbg !3808
  %77 = load i32, i32* %cbv, align 4, !dbg !3809
  %mul82 = mul nsw i32 %76, %77, !dbg !3810
  %add83 = add nsw i32 %add81, %mul82, !dbg !3811
  %add84 = add nsw i32 %add83, 1048576, !dbg !3812
  %shr85 = ashr i32 %add84, 21, !dbg !3813
  %add86 = add nsw i32 128, %shr85, !dbg !3814
  store i32 %add86, i32* %a.addr.i107, align 4, !dbg !3815
  %78 = load i32, i32* %a.addr.i107, align 4, !dbg !3816
  %and.i108 = and i32 %78, -256, !dbg !3817
  %tobool.i109 = icmp ne i32 %and.i108, 0, !dbg !3817
  br i1 %tobool.i109, label %if.then.i113, label %if.else.i115, !dbg !3818

if.then.i113:                                     ; preds = %av_clip_uint8_c.exit127
  %79 = load i32, i32* %a.addr.i107, align 4, !dbg !3819
  %neg.i110 = xor i32 %79, -1, !dbg !3820
  %shr.i111 = ashr i32 %neg.i110, 31, !dbg !3821
  %conv.i112 = trunc i32 %shr.i111 to i8, !dbg !3822
  store i8 %conv.i112, i8* %retval.i106, align 1, !dbg !3823
  br label %av_clip_uint8_c.exit116, !dbg !3823

if.else.i115:                                     ; preds = %av_clip_uint8_c.exit127
  %80 = load i32, i32* %a.addr.i107, align 4, !dbg !3824
  %conv1.i114 = trunc i32 %80 to i8, !dbg !3824
  store i8 %conv1.i114, i8* %retval.i106, align 1, !dbg !3825
  br label %av_clip_uint8_c.exit116, !dbg !3825

av_clip_uint8_c.exit116:                          ; preds = %if.then.i113, %if.else.i115
  %81 = load i8, i8* %retval.i106, align 1, !dbg !3826
  %82 = load i32, i32* %x, align 4, !dbg !3827
  %idxprom88 = sext i32 %82 to i64, !dbg !3828
  %83 = load i8*, i8** %yuv2, align 8, !dbg !3828
  %arrayidx89 = getelementptr inbounds i8, i8* %83, i64 %idxprom88, !dbg !3828
  store i8 %81, i8* %arrayidx89, align 1, !dbg !3829
  br label %for.inc, !dbg !3830

for.inc:                                          ; preds = %av_clip_uint8_c.exit116
  %84 = load i32, i32* %x, align 4, !dbg !3831
  %inc = add nsw i32 %84, 1, !dbg !3831
  store i32 %inc, i32* %x, align 4, !dbg !3831
  br label %for.cond42, !dbg !3833, !llvm.loop !3834

for.end:                                          ; preds = %for.cond42
  %85 = load i64, i64* %s0, align 8, !dbg !3836
  %mul90 = mul nsw i64 %85, 1, !dbg !3837
  %86 = load i8*, i8** %yuv0, align 8, !dbg !3838
  %add.ptr = getelementptr inbounds i8, i8* %86, i64 %mul90, !dbg !3838
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !3838
  %87 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3839
  %arrayidx91 = getelementptr inbounds i64, i64* %87, i64 1, !dbg !3839
  %88 = load i64, i64* %arrayidx91, align 8, !dbg !3839
  %div92 = udiv i64 %88, 1, !dbg !3840
  %89 = load i8*, i8** %yuv1, align 8, !dbg !3841
  %add.ptr93 = getelementptr inbounds i8, i8* %89, i64 %div92, !dbg !3841
  store i8* %add.ptr93, i8** %yuv1, align 8, !dbg !3841
  %90 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3842
  %arrayidx94 = getelementptr inbounds i64, i64* %90, i64 2, !dbg !3842
  %91 = load i64, i64* %arrayidx94, align 8, !dbg !3842
  %div95 = udiv i64 %91, 1, !dbg !3843
  %92 = load i8*, i8** %yuv2, align 8, !dbg !3844
  %add.ptr96 = getelementptr inbounds i8, i8* %92, i64 %div95, !dbg !3844
  store i8* %add.ptr96, i8** %yuv2, align 8, !dbg !3844
  %93 = load i64, i64* %s.addr, align 8, !dbg !3845
  %mul97 = mul nsw i64 %93, 1, !dbg !3846
  %94 = load i16*, i16** %rgb0, align 8, !dbg !3847
  %add.ptr98 = getelementptr inbounds i16, i16* %94, i64 %mul97, !dbg !3847
  store i16* %add.ptr98, i16** %rgb0, align 8, !dbg !3847
  %95 = load i64, i64* %s.addr, align 8, !dbg !3848
  %mul99 = mul nsw i64 %95, 1, !dbg !3849
  %96 = load i16*, i16** %rgb1, align 8, !dbg !3850
  %add.ptr100 = getelementptr inbounds i16, i16* %96, i64 %mul99, !dbg !3850
  store i16* %add.ptr100, i16** %rgb1, align 8, !dbg !3850
  %97 = load i64, i64* %s.addr, align 8, !dbg !3851
  %mul101 = mul nsw i64 %97, 1, !dbg !3852
  %98 = load i16*, i16** %rgb2, align 8, !dbg !3853
  %add.ptr102 = getelementptr inbounds i16, i16* %98, i64 %mul101, !dbg !3853
  store i16* %add.ptr102, i16** %rgb2, align 8, !dbg !3853
  br label %for.inc103, !dbg !3854

for.inc103:                                       ; preds = %for.end
  %99 = load i32, i32* %y, align 4, !dbg !3855
  %inc104 = add nsw i32 %99, 1, !dbg !3855
  store i32 %inc104, i32* %y, align 4, !dbg !3855
  br label %for.cond, !dbg !3857, !llvm.loop !3858

for.end105:                                       ; preds = %for.cond
  ret void, !dbg !3860
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_422p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !3861 {
entry:
  %retval.i176 = alloca i8, align 1
  %a.addr.i177 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i177, metadata !3609, metadata !94), !dbg !3862
  %retval.i165 = alloca i8, align 1
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !3609, metadata !94), !dbg !3870
  %retval.i154 = alloca i8, align 1
  %a.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i155, metadata !3609, metadata !94), !dbg !3872
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !3874
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !3876, metadata !94), !dbg !3877
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !3878, metadata !94), !dbg !3879
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !3880, metadata !94), !dbg !3881
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !3882, metadata !94), !dbg !3883
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3884, metadata !94), !dbg !3885
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3886, metadata !94), !dbg !3887
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !3888, metadata !94), !dbg !3889
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !3890, metadata !94), !dbg !3891
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !3892, metadata !94), !dbg !3893
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !3894
  store i8** %0, i8*** %yuv, align 8, !dbg !3893
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !3895, metadata !94), !dbg !3896
  %1 = load i8**, i8*** %yuv, align 8, !dbg !3897
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !3897
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !3897
  store i8* %2, i8** %yuv0, align 8, !dbg !3896
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !3898, metadata !94), !dbg !3899
  %3 = load i8**, i8*** %yuv, align 8, !dbg !3900
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !3900
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !3900
  store i8* %4, i8** %yuv1, align 8, !dbg !3899
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !3901, metadata !94), !dbg !3902
  %5 = load i8**, i8*** %yuv, align 8, !dbg !3903
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !3903
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !3903
  store i8* %6, i8** %yuv2, align 8, !dbg !3902
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !3904, metadata !94), !dbg !3905
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !3906
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !3906
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !3906
  store i16* %8, i16** %rgb0, align 8, !dbg !3905
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !3907, metadata !94), !dbg !3908
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !3909
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !3909
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !3909
  store i16* %10, i16** %rgb1, align 8, !dbg !3908
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !3910, metadata !94), !dbg !3911
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !3912
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !3912
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !3912
  store i16* %12, i16** %rgb2, align 8, !dbg !3911
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3913, metadata !94), !dbg !3914
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3915, metadata !94), !dbg !3916
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !3917, metadata !94), !dbg !3918
  store i32 21, i32* %sh, align 4, !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !3919, metadata !94), !dbg !3920
  store i32 1048576, i32* %rnd, align 4, !dbg !3920
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !3921, metadata !94), !dbg !3922
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3923
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !3923
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !3923
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !3923
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !3923
  %conv = sext i16 %14 to i32, !dbg !3923
  store i32 %conv, i32* %cry, align 4, !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !3924, metadata !94), !dbg !3925
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3926
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !3926
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !3926
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !3926
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !3926
  %conv12 = sext i16 %16 to i32, !dbg !3926
  store i32 %conv12, i32* %cgy, align 4, !dbg !3925
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !3927, metadata !94), !dbg !3928
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3929
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !3929
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !3929
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !3929
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !3929
  %conv16 = sext i16 %18 to i32, !dbg !3929
  store i32 %conv16, i32* %cby, align 4, !dbg !3928
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !3930, metadata !94), !dbg !3931
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3932
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !3932
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !3932
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !3932
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !3932
  %conv20 = sext i16 %20 to i32, !dbg !3932
  store i32 %conv20, i32* %cru, align 4, !dbg !3931
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !3933, metadata !94), !dbg !3934
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3935
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !3935
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !3935
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !3935
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !3935
  %conv24 = sext i16 %22 to i32, !dbg !3935
  store i32 %conv24, i32* %cgu, align 4, !dbg !3934
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !3936, metadata !94), !dbg !3937
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3938
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !3938
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !3938
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !3938
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !3938
  %conv28 = sext i16 %24 to i32, !dbg !3938
  store i32 %conv28, i32* %cburv, align 4, !dbg !3937
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !3939, metadata !94), !dbg !3940
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3941
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !3941
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !3941
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !3941
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !3941
  %conv32 = sext i16 %26 to i32, !dbg !3941
  store i32 %conv32, i32* %cgv, align 4, !dbg !3940
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !3942, metadata !94), !dbg !3943
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !3944
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !3944
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !3944
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !3944
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !3944
  %conv36 = sext i16 %28 to i32, !dbg !3944
  store i32 %conv36, i32* %cbv, align 4, !dbg !3943
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !3945, metadata !94), !dbg !3946
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !3947
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !3947
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !3947
  %div = udiv i64 %30, 1, !dbg !3948
  store i64 %div, i64* %s0, align 8, !dbg !3946
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !3949, metadata !94), !dbg !3950
  store i32 128, i32* %uv_offset, align 4, !dbg !3950
  %31 = load i32, i32* %w.addr, align 4, !dbg !3951
  %add = add nsw i32 %31, 2, !dbg !3952
  %sub = sub nsw i32 %add, 1, !dbg !3953
  %shr = ashr i32 %sub, 1, !dbg !3954
  store i32 %shr, i32* %w.addr, align 4, !dbg !3955
  %32 = load i32, i32* %h.addr, align 4, !dbg !3956
  %add38 = add nsw i32 %32, 1, !dbg !3957
  %sub39 = sub nsw i32 %add38, 1, !dbg !3958
  %shr40 = ashr i32 %sub39, 0, !dbg !3959
  store i32 %shr40, i32* %h.addr, align 4, !dbg !3960
  store i32 0, i32* %y, align 4, !dbg !3961
  br label %for.cond, !dbg !3962

for.cond:                                         ; preds = %for.inc151, %entry
  %33 = load i32, i32* %y, align 4, !dbg !3963
  %34 = load i32, i32* %h.addr, align 4, !dbg !3965
  %cmp = icmp slt i32 %33, %34, !dbg !3966
  br i1 %cmp, label %for.body, label %for.end153, !dbg !3967

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3968
  br label %for.cond42, !dbg !3969

for.cond42:                                       ; preds = %for.inc, %for.body
  %35 = load i32, i32* %x, align 4, !dbg !3970
  %36 = load i32, i32* %w.addr, align 4, !dbg !3972
  %cmp43 = icmp slt i32 %35, %36, !dbg !3973
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !3974

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !3975, metadata !94), !dbg !3976
  %37 = load i32, i32* %x, align 4, !dbg !3977
  %shl = shl i32 %37, 1, !dbg !3978
  %idxprom = sext i32 %shl to i64, !dbg !3979
  %38 = load i16*, i16** %rgb0, align 8, !dbg !3979
  %arrayidx46 = getelementptr inbounds i16, i16* %38, i64 %idxprom, !dbg !3979
  %39 = load i16, i16* %arrayidx46, align 2, !dbg !3979
  %conv47 = sext i16 %39 to i32, !dbg !3979
  store i32 %conv47, i32* %r00, align 4, !dbg !3976
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !3980, metadata !94), !dbg !3981
  %40 = load i32, i32* %x, align 4, !dbg !3982
  %shl48 = shl i32 %40, 1, !dbg !3983
  %idxprom49 = sext i32 %shl48 to i64, !dbg !3984
  %41 = load i16*, i16** %rgb1, align 8, !dbg !3984
  %arrayidx50 = getelementptr inbounds i16, i16* %41, i64 %idxprom49, !dbg !3984
  %42 = load i16, i16* %arrayidx50, align 2, !dbg !3984
  %conv51 = sext i16 %42 to i32, !dbg !3984
  store i32 %conv51, i32* %g00, align 4, !dbg !3981
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !3985, metadata !94), !dbg !3986
  %43 = load i32, i32* %x, align 4, !dbg !3987
  %shl52 = shl i32 %43, 1, !dbg !3988
  %idxprom53 = sext i32 %shl52 to i64, !dbg !3989
  %44 = load i16*, i16** %rgb2, align 8, !dbg !3989
  %arrayidx54 = getelementptr inbounds i16, i16* %44, i64 %idxprom53, !dbg !3989
  %45 = load i16, i16* %arrayidx54, align 2, !dbg !3989
  %conv55 = sext i16 %45 to i32, !dbg !3989
  store i32 %conv55, i32* %b00, align 4, !dbg !3986
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !3990, metadata !94), !dbg !3991
  %46 = load i32, i32* %x, align 4, !dbg !3992
  %mul = mul nsw i32 %46, 2, !dbg !3993
  %add56 = add nsw i32 %mul, 1, !dbg !3994
  %idxprom57 = sext i32 %add56 to i64, !dbg !3995
  %47 = load i16*, i16** %rgb0, align 8, !dbg !3995
  %arrayidx58 = getelementptr inbounds i16, i16* %47, i64 %idxprom57, !dbg !3995
  %48 = load i16, i16* %arrayidx58, align 2, !dbg !3995
  %conv59 = sext i16 %48 to i32, !dbg !3995
  store i32 %conv59, i32* %r01, align 4, !dbg !3991
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !3996, metadata !94), !dbg !3997
  %49 = load i32, i32* %x, align 4, !dbg !3998
  %mul60 = mul nsw i32 %49, 2, !dbg !3999
  %add61 = add nsw i32 %mul60, 1, !dbg !4000
  %idxprom62 = sext i32 %add61 to i64, !dbg !4001
  %50 = load i16*, i16** %rgb1, align 8, !dbg !4001
  %arrayidx63 = getelementptr inbounds i16, i16* %50, i64 %idxprom62, !dbg !4001
  %51 = load i16, i16* %arrayidx63, align 2, !dbg !4001
  %conv64 = sext i16 %51 to i32, !dbg !4001
  store i32 %conv64, i32* %g01, align 4, !dbg !3997
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !4002, metadata !94), !dbg !4003
  %52 = load i32, i32* %x, align 4, !dbg !4004
  %mul65 = mul nsw i32 %52, 2, !dbg !4005
  %add66 = add nsw i32 %mul65, 1, !dbg !4006
  %idxprom67 = sext i32 %add66 to i64, !dbg !4007
  %53 = load i16*, i16** %rgb2, align 8, !dbg !4007
  %arrayidx68 = getelementptr inbounds i16, i16* %53, i64 %idxprom67, !dbg !4007
  %54 = load i16, i16* %arrayidx68, align 2, !dbg !4007
  %conv69 = sext i16 %54 to i32, !dbg !4007
  store i32 %conv69, i32* %b01, align 4, !dbg !4003
  %55 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4008
  %arrayidx70 = getelementptr inbounds i16, i16* %55, i64 0, !dbg !4008
  %56 = load i16, i16* %arrayidx70, align 2, !dbg !4008
  %conv71 = sext i16 %56 to i32, !dbg !4008
  %57 = load i32, i32* %r00, align 4, !dbg !4009
  %58 = load i32, i32* %cry, align 4, !dbg !4010
  %mul72 = mul nsw i32 %57, %58, !dbg !4011
  %59 = load i32, i32* %g00, align 4, !dbg !4012
  %60 = load i32, i32* %cgy, align 4, !dbg !4013
  %mul73 = mul nsw i32 %59, %60, !dbg !4014
  %add74 = add nsw i32 %mul72, %mul73, !dbg !4015
  %61 = load i32, i32* %b00, align 4, !dbg !4016
  %62 = load i32, i32* %cby, align 4, !dbg !4017
  %mul75 = mul nsw i32 %61, %62, !dbg !4018
  %add76 = add nsw i32 %add74, %mul75, !dbg !4019
  %add77 = add nsw i32 %add76, 1048576, !dbg !4020
  %shr78 = ashr i32 %add77, 21, !dbg !4021
  %add79 = add nsw i32 %conv71, %shr78, !dbg !4022
  store i32 %add79, i32* %a.addr.i, align 4, !dbg !4023
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !4024
  %and.i = and i32 %63, -256, !dbg !4025
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !4025
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4026

if.then.i:                                        ; preds = %for.body45
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !4027
  %neg.i = xor i32 %64, -1, !dbg !4028
  %shr.i = ashr i32 %neg.i, 31, !dbg !4029
  %conv.i = trunc i32 %shr.i to i8, !dbg !4030
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !4031
  br label %av_clip_uint8_c.exit, !dbg !4031

if.else.i:                                        ; preds = %for.body45
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !4032
  %conv1.i = trunc i32 %65 to i8, !dbg !4032
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !4033
  br label %av_clip_uint8_c.exit, !dbg !4033

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %66 = load i8, i8* %retval.i, align 1, !dbg !4034
  %67 = load i32, i32* %x, align 4, !dbg !4035
  %shl80 = shl i32 %67, 1, !dbg !4036
  %idxprom81 = sext i32 %shl80 to i64, !dbg !4037
  %68 = load i8*, i8** %yuv0, align 8, !dbg !4037
  %arrayidx82 = getelementptr inbounds i8, i8* %68, i64 %idxprom81, !dbg !4037
  store i8 %66, i8* %arrayidx82, align 1, !dbg !4038
  %69 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4039
  %arrayidx83 = getelementptr inbounds i16, i16* %69, i64 0, !dbg !4039
  %70 = load i16, i16* %arrayidx83, align 2, !dbg !4039
  %conv84 = sext i16 %70 to i32, !dbg !4039
  %71 = load i32, i32* %r01, align 4, !dbg !4040
  %72 = load i32, i32* %cry, align 4, !dbg !4041
  %mul85 = mul nsw i32 %71, %72, !dbg !4042
  %73 = load i32, i32* %g01, align 4, !dbg !4043
  %74 = load i32, i32* %cgy, align 4, !dbg !4044
  %mul86 = mul nsw i32 %73, %74, !dbg !4045
  %add87 = add nsw i32 %mul85, %mul86, !dbg !4046
  %75 = load i32, i32* %b01, align 4, !dbg !4047
  %76 = load i32, i32* %cby, align 4, !dbg !4048
  %mul88 = mul nsw i32 %75, %76, !dbg !4049
  %add89 = add nsw i32 %add87, %mul88, !dbg !4050
  %add90 = add nsw i32 %add89, 1048576, !dbg !4051
  %shr91 = ashr i32 %add90, 21, !dbg !4052
  %add92 = add nsw i32 %conv84, %shr91, !dbg !4053
  store i32 %add92, i32* %a.addr.i177, align 4, !dbg !4054
  %77 = load i32, i32* %a.addr.i177, align 4, !dbg !4055
  %and.i178 = and i32 %77, -256, !dbg !4056
  %tobool.i179 = icmp ne i32 %and.i178, 0, !dbg !4056
  br i1 %tobool.i179, label %if.then.i183, label %if.else.i185, !dbg !4057

if.then.i183:                                     ; preds = %av_clip_uint8_c.exit
  %78 = load i32, i32* %a.addr.i177, align 4, !dbg !4058
  %neg.i180 = xor i32 %78, -1, !dbg !4059
  %shr.i181 = ashr i32 %neg.i180, 31, !dbg !4060
  %conv.i182 = trunc i32 %shr.i181 to i8, !dbg !4061
  store i8 %conv.i182, i8* %retval.i176, align 1, !dbg !4062
  br label %av_clip_uint8_c.exit186, !dbg !4062

if.else.i185:                                     ; preds = %av_clip_uint8_c.exit
  %79 = load i32, i32* %a.addr.i177, align 4, !dbg !4063
  %conv1.i184 = trunc i32 %79 to i8, !dbg !4063
  store i8 %conv1.i184, i8* %retval.i176, align 1, !dbg !4064
  br label %av_clip_uint8_c.exit186, !dbg !4064

av_clip_uint8_c.exit186:                          ; preds = %if.then.i183, %if.else.i185
  %80 = load i8, i8* %retval.i176, align 1, !dbg !4065
  %81 = load i32, i32* %x, align 4, !dbg !4066
  %mul94 = mul nsw i32 %81, 2, !dbg !4067
  %add95 = add nsw i32 %mul94, 1, !dbg !4068
  %idxprom96 = sext i32 %add95 to i64, !dbg !4069
  %82 = load i8*, i8** %yuv0, align 8, !dbg !4069
  %arrayidx97 = getelementptr inbounds i8, i8* %82, i64 %idxprom96, !dbg !4069
  store i8 %80, i8* %arrayidx97, align 1, !dbg !4070
  %83 = load i32, i32* %r00, align 4, !dbg !4071
  %84 = load i32, i32* %r01, align 4, !dbg !4072
  %add98 = add nsw i32 %83, %84, !dbg !4073
  %add99 = add nsw i32 %add98, 1, !dbg !4074
  %shr100 = ashr i32 %add99, 1, !dbg !4075
  %85 = load i32, i32* %cru, align 4, !dbg !4076
  %mul101 = mul nsw i32 %shr100, %85, !dbg !4077
  %86 = load i32, i32* %g00, align 4, !dbg !4078
  %87 = load i32, i32* %g01, align 4, !dbg !4079
  %add102 = add nsw i32 %86, %87, !dbg !4080
  %add103 = add nsw i32 %add102, 1, !dbg !4081
  %shr104 = ashr i32 %add103, 1, !dbg !4082
  %88 = load i32, i32* %cgu, align 4, !dbg !4083
  %mul105 = mul nsw i32 %shr104, %88, !dbg !4084
  %add106 = add nsw i32 %mul101, %mul105, !dbg !4085
  %89 = load i32, i32* %b00, align 4, !dbg !4086
  %90 = load i32, i32* %b01, align 4, !dbg !4087
  %add107 = add nsw i32 %89, %90, !dbg !4088
  %add108 = add nsw i32 %add107, 1, !dbg !4089
  %shr109 = ashr i32 %add108, 1, !dbg !4090
  %91 = load i32, i32* %cburv, align 4, !dbg !4091
  %mul110 = mul nsw i32 %shr109, %91, !dbg !4092
  %add111 = add nsw i32 %add106, %mul110, !dbg !4093
  %add112 = add nsw i32 %add111, 1048576, !dbg !4094
  %shr113 = ashr i32 %add112, 21, !dbg !4095
  %add114 = add nsw i32 128, %shr113, !dbg !4096
  store i32 %add114, i32* %a.addr.i166, align 4, !dbg !4097
  %92 = load i32, i32* %a.addr.i166, align 4, !dbg !4098
  %and.i167 = and i32 %92, -256, !dbg !4099
  %tobool.i168 = icmp ne i32 %and.i167, 0, !dbg !4099
  br i1 %tobool.i168, label %if.then.i172, label %if.else.i174, !dbg !4100

if.then.i172:                                     ; preds = %av_clip_uint8_c.exit186
  %93 = load i32, i32* %a.addr.i166, align 4, !dbg !4101
  %neg.i169 = xor i32 %93, -1, !dbg !4102
  %shr.i170 = ashr i32 %neg.i169, 31, !dbg !4103
  %conv.i171 = trunc i32 %shr.i170 to i8, !dbg !4104
  store i8 %conv.i171, i8* %retval.i165, align 1, !dbg !4105
  br label %av_clip_uint8_c.exit175, !dbg !4105

if.else.i174:                                     ; preds = %av_clip_uint8_c.exit186
  %94 = load i32, i32* %a.addr.i166, align 4, !dbg !4106
  %conv1.i173 = trunc i32 %94 to i8, !dbg !4106
  store i8 %conv1.i173, i8* %retval.i165, align 1, !dbg !4107
  br label %av_clip_uint8_c.exit175, !dbg !4107

av_clip_uint8_c.exit175:                          ; preds = %if.then.i172, %if.else.i174
  %95 = load i8, i8* %retval.i165, align 1, !dbg !4108
  %96 = load i32, i32* %x, align 4, !dbg !4109
  %idxprom116 = sext i32 %96 to i64, !dbg !4110
  %97 = load i8*, i8** %yuv1, align 8, !dbg !4110
  %arrayidx117 = getelementptr inbounds i8, i8* %97, i64 %idxprom116, !dbg !4110
  store i8 %95, i8* %arrayidx117, align 1, !dbg !4111
  %98 = load i32, i32* %r00, align 4, !dbg !4112
  %99 = load i32, i32* %r01, align 4, !dbg !4113
  %add118 = add nsw i32 %98, %99, !dbg !4114
  %add119 = add nsw i32 %add118, 1, !dbg !4115
  %shr120 = ashr i32 %add119, 1, !dbg !4116
  %100 = load i32, i32* %cburv, align 4, !dbg !4117
  %mul121 = mul nsw i32 %shr120, %100, !dbg !4118
  %101 = load i32, i32* %g00, align 4, !dbg !4119
  %102 = load i32, i32* %g01, align 4, !dbg !4120
  %add122 = add nsw i32 %101, %102, !dbg !4121
  %add123 = add nsw i32 %add122, 1, !dbg !4122
  %shr124 = ashr i32 %add123, 1, !dbg !4123
  %103 = load i32, i32* %cgv, align 4, !dbg !4124
  %mul125 = mul nsw i32 %shr124, %103, !dbg !4125
  %add126 = add nsw i32 %mul121, %mul125, !dbg !4126
  %104 = load i32, i32* %b00, align 4, !dbg !4127
  %105 = load i32, i32* %b01, align 4, !dbg !4128
  %add127 = add nsw i32 %104, %105, !dbg !4129
  %add128 = add nsw i32 %add127, 1, !dbg !4130
  %shr129 = ashr i32 %add128, 1, !dbg !4131
  %106 = load i32, i32* %cbv, align 4, !dbg !4132
  %mul130 = mul nsw i32 %shr129, %106, !dbg !4133
  %add131 = add nsw i32 %add126, %mul130, !dbg !4134
  %add132 = add nsw i32 %add131, 1048576, !dbg !4135
  %shr133 = ashr i32 %add132, 21, !dbg !4136
  %add134 = add nsw i32 128, %shr133, !dbg !4137
  store i32 %add134, i32* %a.addr.i155, align 4, !dbg !4138
  %107 = load i32, i32* %a.addr.i155, align 4, !dbg !4139
  %and.i156 = and i32 %107, -256, !dbg !4140
  %tobool.i157 = icmp ne i32 %and.i156, 0, !dbg !4140
  br i1 %tobool.i157, label %if.then.i161, label %if.else.i163, !dbg !4141

if.then.i161:                                     ; preds = %av_clip_uint8_c.exit175
  %108 = load i32, i32* %a.addr.i155, align 4, !dbg !4142
  %neg.i158 = xor i32 %108, -1, !dbg !4143
  %shr.i159 = ashr i32 %neg.i158, 31, !dbg !4144
  %conv.i160 = trunc i32 %shr.i159 to i8, !dbg !4145
  store i8 %conv.i160, i8* %retval.i154, align 1, !dbg !4146
  br label %av_clip_uint8_c.exit164, !dbg !4146

if.else.i163:                                     ; preds = %av_clip_uint8_c.exit175
  %109 = load i32, i32* %a.addr.i155, align 4, !dbg !4147
  %conv1.i162 = trunc i32 %109 to i8, !dbg !4147
  store i8 %conv1.i162, i8* %retval.i154, align 1, !dbg !4148
  br label %av_clip_uint8_c.exit164, !dbg !4148

av_clip_uint8_c.exit164:                          ; preds = %if.then.i161, %if.else.i163
  %110 = load i8, i8* %retval.i154, align 1, !dbg !4149
  %111 = load i32, i32* %x, align 4, !dbg !4150
  %idxprom136 = sext i32 %111 to i64, !dbg !4151
  %112 = load i8*, i8** %yuv2, align 8, !dbg !4151
  %arrayidx137 = getelementptr inbounds i8, i8* %112, i64 %idxprom136, !dbg !4151
  store i8 %110, i8* %arrayidx137, align 1, !dbg !4152
  br label %for.inc, !dbg !4153

for.inc:                                          ; preds = %av_clip_uint8_c.exit164
  %113 = load i32, i32* %x, align 4, !dbg !4154
  %inc = add nsw i32 %113, 1, !dbg !4154
  store i32 %inc, i32* %x, align 4, !dbg !4154
  br label %for.cond42, !dbg !4156, !llvm.loop !4157

for.end:                                          ; preds = %for.cond42
  %114 = load i64, i64* %s0, align 8, !dbg !4159
  %mul138 = mul nsw i64 %114, 1, !dbg !4160
  %115 = load i8*, i8** %yuv0, align 8, !dbg !4161
  %add.ptr = getelementptr inbounds i8, i8* %115, i64 %mul138, !dbg !4161
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !4161
  %116 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4162
  %arrayidx139 = getelementptr inbounds i64, i64* %116, i64 1, !dbg !4162
  %117 = load i64, i64* %arrayidx139, align 8, !dbg !4162
  %div140 = udiv i64 %117, 1, !dbg !4163
  %118 = load i8*, i8** %yuv1, align 8, !dbg !4164
  %add.ptr141 = getelementptr inbounds i8, i8* %118, i64 %div140, !dbg !4164
  store i8* %add.ptr141, i8** %yuv1, align 8, !dbg !4164
  %119 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4165
  %arrayidx142 = getelementptr inbounds i64, i64* %119, i64 2, !dbg !4165
  %120 = load i64, i64* %arrayidx142, align 8, !dbg !4165
  %div143 = udiv i64 %120, 1, !dbg !4166
  %121 = load i8*, i8** %yuv2, align 8, !dbg !4167
  %add.ptr144 = getelementptr inbounds i8, i8* %121, i64 %div143, !dbg !4167
  store i8* %add.ptr144, i8** %yuv2, align 8, !dbg !4167
  %122 = load i64, i64* %s.addr, align 8, !dbg !4168
  %mul145 = mul nsw i64 %122, 1, !dbg !4169
  %123 = load i16*, i16** %rgb0, align 8, !dbg !4170
  %add.ptr146 = getelementptr inbounds i16, i16* %123, i64 %mul145, !dbg !4170
  store i16* %add.ptr146, i16** %rgb0, align 8, !dbg !4170
  %124 = load i64, i64* %s.addr, align 8, !dbg !4171
  %mul147 = mul nsw i64 %124, 1, !dbg !4172
  %125 = load i16*, i16** %rgb1, align 8, !dbg !4173
  %add.ptr148 = getelementptr inbounds i16, i16* %125, i64 %mul147, !dbg !4173
  store i16* %add.ptr148, i16** %rgb1, align 8, !dbg !4173
  %126 = load i64, i64* %s.addr, align 8, !dbg !4174
  %mul149 = mul nsw i64 %126, 1, !dbg !4175
  %127 = load i16*, i16** %rgb2, align 8, !dbg !4176
  %add.ptr150 = getelementptr inbounds i16, i16* %127, i64 %mul149, !dbg !4176
  store i16* %add.ptr150, i16** %rgb2, align 8, !dbg !4176
  br label %for.inc151, !dbg !4177

for.inc151:                                       ; preds = %for.end
  %128 = load i32, i32* %y, align 4, !dbg !4178
  %inc152 = add nsw i32 %128, 1, !dbg !4178
  store i32 %inc152, i32* %y, align 4, !dbg !4178
  br label %for.cond, !dbg !4180, !llvm.loop !4181

for.end153:                                       ; preds = %for.cond
  ret void, !dbg !4183
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_420p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !4184 {
entry:
  %retval.i278 = alloca i8, align 1
  %a.addr.i279 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i279, metadata !3609, metadata !94), !dbg !4185
  %retval.i267 = alloca i8, align 1
  %a.addr.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i268, metadata !3609, metadata !94), !dbg !4193
  %retval.i256 = alloca i8, align 1
  %a.addr.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i257, metadata !3609, metadata !94), !dbg !4195
  %retval.i245 = alloca i8, align 1
  %a.addr.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i246, metadata !3609, metadata !94), !dbg !4197
  %retval.i234 = alloca i8, align 1
  %a.addr.i235 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i235, metadata !3609, metadata !94), !dbg !4199
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !4201
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !4203, metadata !94), !dbg !4204
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !4205, metadata !94), !dbg !4206
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !4207, metadata !94), !dbg !4208
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !4209, metadata !94), !dbg !4210
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !4211, metadata !94), !dbg !4212
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4213, metadata !94), !dbg !4214
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !4215, metadata !94), !dbg !4216
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !4217, metadata !94), !dbg !4218
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !4219, metadata !94), !dbg !4220
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !4221
  store i8** %0, i8*** %yuv, align 8, !dbg !4220
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !4222, metadata !94), !dbg !4223
  %1 = load i8**, i8*** %yuv, align 8, !dbg !4224
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !4224
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !4224
  store i8* %2, i8** %yuv0, align 8, !dbg !4223
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !4225, metadata !94), !dbg !4226
  %3 = load i8**, i8*** %yuv, align 8, !dbg !4227
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !4227
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !4227
  store i8* %4, i8** %yuv1, align 8, !dbg !4226
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !4228, metadata !94), !dbg !4229
  %5 = load i8**, i8*** %yuv, align 8, !dbg !4230
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !4230
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !4230
  store i8* %6, i8** %yuv2, align 8, !dbg !4229
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !4231, metadata !94), !dbg !4232
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !4233
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !4233
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !4233
  store i16* %8, i16** %rgb0, align 8, !dbg !4232
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !4234, metadata !94), !dbg !4235
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !4236
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !4236
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !4236
  store i16* %10, i16** %rgb1, align 8, !dbg !4235
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !4237, metadata !94), !dbg !4238
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !4239
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !4239
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !4239
  store i16* %12, i16** %rgb2, align 8, !dbg !4238
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4240, metadata !94), !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4242, metadata !94), !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !4244, metadata !94), !dbg !4245
  store i32 21, i32* %sh, align 4, !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !4246, metadata !94), !dbg !4247
  store i32 1048576, i32* %rnd, align 4, !dbg !4247
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !4248, metadata !94), !dbg !4249
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4250
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !4250
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !4250
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !4250
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !4250
  %conv = sext i16 %14 to i32, !dbg !4250
  store i32 %conv, i32* %cry, align 4, !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !4251, metadata !94), !dbg !4252
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4253
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !4253
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !4253
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !4253
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !4253
  %conv12 = sext i16 %16 to i32, !dbg !4253
  store i32 %conv12, i32* %cgy, align 4, !dbg !4252
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !4254, metadata !94), !dbg !4255
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4256
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !4256
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !4256
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !4256
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !4256
  %conv16 = sext i16 %18 to i32, !dbg !4256
  store i32 %conv16, i32* %cby, align 4, !dbg !4255
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !4257, metadata !94), !dbg !4258
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4259
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !4259
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !4259
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !4259
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !4259
  %conv20 = sext i16 %20 to i32, !dbg !4259
  store i32 %conv20, i32* %cru, align 4, !dbg !4258
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !4260, metadata !94), !dbg !4261
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4262
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !4262
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !4262
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !4262
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !4262
  %conv24 = sext i16 %22 to i32, !dbg !4262
  store i32 %conv24, i32* %cgu, align 4, !dbg !4261
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !4263, metadata !94), !dbg !4264
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4265
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !4265
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !4265
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !4265
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !4265
  %conv28 = sext i16 %24 to i32, !dbg !4265
  store i32 %conv28, i32* %cburv, align 4, !dbg !4264
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !4266, metadata !94), !dbg !4267
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4268
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !4268
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !4268
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !4268
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !4268
  %conv32 = sext i16 %26 to i32, !dbg !4268
  store i32 %conv32, i32* %cgv, align 4, !dbg !4267
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !4269, metadata !94), !dbg !4270
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4271
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !4271
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !4271
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !4271
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !4271
  %conv36 = sext i16 %28 to i32, !dbg !4271
  store i32 %conv36, i32* %cbv, align 4, !dbg !4270
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !4272, metadata !94), !dbg !4273
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4274
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !4274
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !4274
  %div = udiv i64 %30, 1, !dbg !4275
  store i64 %div, i64* %s0, align 8, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !4276, metadata !94), !dbg !4277
  store i32 128, i32* %uv_offset, align 4, !dbg !4277
  %31 = load i32, i32* %w.addr, align 4, !dbg !4278
  %add = add nsw i32 %31, 2, !dbg !4279
  %sub = sub nsw i32 %add, 1, !dbg !4280
  %shr = ashr i32 %sub, 1, !dbg !4281
  store i32 %shr, i32* %w.addr, align 4, !dbg !4282
  %32 = load i32, i32* %h.addr, align 4, !dbg !4283
  %add38 = add nsw i32 %32, 2, !dbg !4284
  %sub39 = sub nsw i32 %add38, 1, !dbg !4285
  %shr40 = ashr i32 %sub39, 1, !dbg !4286
  store i32 %shr40, i32* %h.addr, align 4, !dbg !4287
  store i32 0, i32* %y, align 4, !dbg !4288
  br label %for.cond, !dbg !4289

for.cond:                                         ; preds = %for.inc231, %entry
  %33 = load i32, i32* %y, align 4, !dbg !4290
  %34 = load i32, i32* %h.addr, align 4, !dbg !4292
  %cmp = icmp slt i32 %33, %34, !dbg !4293
  br i1 %cmp, label %for.body, label %for.end233, !dbg !4294

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !4295
  br label %for.cond42, !dbg !4296

for.cond42:                                       ; preds = %for.inc, %for.body
  %35 = load i32, i32* %x, align 4, !dbg !4297
  %36 = load i32, i32* %w.addr, align 4, !dbg !4299
  %cmp43 = icmp slt i32 %35, %36, !dbg !4300
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !4301

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !4302, metadata !94), !dbg !4303
  %37 = load i32, i32* %x, align 4, !dbg !4304
  %shl = shl i32 %37, 1, !dbg !4305
  %idxprom = sext i32 %shl to i64, !dbg !4306
  %38 = load i16*, i16** %rgb0, align 8, !dbg !4306
  %arrayidx46 = getelementptr inbounds i16, i16* %38, i64 %idxprom, !dbg !4306
  %39 = load i16, i16* %arrayidx46, align 2, !dbg !4306
  %conv47 = sext i16 %39 to i32, !dbg !4306
  store i32 %conv47, i32* %r00, align 4, !dbg !4303
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !4307, metadata !94), !dbg !4308
  %40 = load i32, i32* %x, align 4, !dbg !4309
  %shl48 = shl i32 %40, 1, !dbg !4310
  %idxprom49 = sext i32 %shl48 to i64, !dbg !4311
  %41 = load i16*, i16** %rgb1, align 8, !dbg !4311
  %arrayidx50 = getelementptr inbounds i16, i16* %41, i64 %idxprom49, !dbg !4311
  %42 = load i16, i16* %arrayidx50, align 2, !dbg !4311
  %conv51 = sext i16 %42 to i32, !dbg !4311
  store i32 %conv51, i32* %g00, align 4, !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !4312, metadata !94), !dbg !4313
  %43 = load i32, i32* %x, align 4, !dbg !4314
  %shl52 = shl i32 %43, 1, !dbg !4315
  %idxprom53 = sext i32 %shl52 to i64, !dbg !4316
  %44 = load i16*, i16** %rgb2, align 8, !dbg !4316
  %arrayidx54 = getelementptr inbounds i16, i16* %44, i64 %idxprom53, !dbg !4316
  %45 = load i16, i16* %arrayidx54, align 2, !dbg !4316
  %conv55 = sext i16 %45 to i32, !dbg !4316
  store i32 %conv55, i32* %b00, align 4, !dbg !4313
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !4317, metadata !94), !dbg !4318
  %46 = load i32, i32* %x, align 4, !dbg !4319
  %mul = mul nsw i32 %46, 2, !dbg !4320
  %add56 = add nsw i32 %mul, 1, !dbg !4321
  %idxprom57 = sext i32 %add56 to i64, !dbg !4322
  %47 = load i16*, i16** %rgb0, align 8, !dbg !4322
  %arrayidx58 = getelementptr inbounds i16, i16* %47, i64 %idxprom57, !dbg !4322
  %48 = load i16, i16* %arrayidx58, align 2, !dbg !4322
  %conv59 = sext i16 %48 to i32, !dbg !4322
  store i32 %conv59, i32* %r01, align 4, !dbg !4318
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !4323, metadata !94), !dbg !4324
  %49 = load i32, i32* %x, align 4, !dbg !4325
  %mul60 = mul nsw i32 %49, 2, !dbg !4326
  %add61 = add nsw i32 %mul60, 1, !dbg !4327
  %idxprom62 = sext i32 %add61 to i64, !dbg !4328
  %50 = load i16*, i16** %rgb1, align 8, !dbg !4328
  %arrayidx63 = getelementptr inbounds i16, i16* %50, i64 %idxprom62, !dbg !4328
  %51 = load i16, i16* %arrayidx63, align 2, !dbg !4328
  %conv64 = sext i16 %51 to i32, !dbg !4328
  store i32 %conv64, i32* %g01, align 4, !dbg !4324
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !4329, metadata !94), !dbg !4330
  %52 = load i32, i32* %x, align 4, !dbg !4331
  %mul65 = mul nsw i32 %52, 2, !dbg !4332
  %add66 = add nsw i32 %mul65, 1, !dbg !4333
  %idxprom67 = sext i32 %add66 to i64, !dbg !4334
  %53 = load i16*, i16** %rgb2, align 8, !dbg !4334
  %arrayidx68 = getelementptr inbounds i16, i16* %53, i64 %idxprom67, !dbg !4334
  %54 = load i16, i16* %arrayidx68, align 2, !dbg !4334
  %conv69 = sext i16 %54 to i32, !dbg !4334
  store i32 %conv69, i32* %b01, align 4, !dbg !4330
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !4335, metadata !94), !dbg !4336
  %55 = load i32, i32* %x, align 4, !dbg !4337
  %mul70 = mul nsw i32 %55, 2, !dbg !4338
  %add71 = add nsw i32 %mul70, 0, !dbg !4339
  %conv72 = sext i32 %add71 to i64, !dbg !4337
  %56 = load i64, i64* %s.addr, align 8, !dbg !4340
  %add73 = add nsw i64 %conv72, %56, !dbg !4341
  %57 = load i16*, i16** %rgb0, align 8, !dbg !4342
  %arrayidx74 = getelementptr inbounds i16, i16* %57, i64 %add73, !dbg !4342
  %58 = load i16, i16* %arrayidx74, align 2, !dbg !4342
  %conv75 = sext i16 %58 to i32, !dbg !4342
  store i32 %conv75, i32* %r10, align 4, !dbg !4336
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !4343, metadata !94), !dbg !4344
  %59 = load i32, i32* %x, align 4, !dbg !4345
  %mul76 = mul nsw i32 %59, 2, !dbg !4346
  %add77 = add nsw i32 %mul76, 0, !dbg !4347
  %conv78 = sext i32 %add77 to i64, !dbg !4345
  %60 = load i64, i64* %s.addr, align 8, !dbg !4348
  %add79 = add nsw i64 %conv78, %60, !dbg !4349
  %61 = load i16*, i16** %rgb1, align 8, !dbg !4350
  %arrayidx80 = getelementptr inbounds i16, i16* %61, i64 %add79, !dbg !4350
  %62 = load i16, i16* %arrayidx80, align 2, !dbg !4350
  %conv81 = sext i16 %62 to i32, !dbg !4350
  store i32 %conv81, i32* %g10, align 4, !dbg !4344
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !4351, metadata !94), !dbg !4352
  %63 = load i32, i32* %x, align 4, !dbg !4353
  %mul82 = mul nsw i32 %63, 2, !dbg !4354
  %add83 = add nsw i32 %mul82, 0, !dbg !4355
  %conv84 = sext i32 %add83 to i64, !dbg !4353
  %64 = load i64, i64* %s.addr, align 8, !dbg !4356
  %add85 = add nsw i64 %conv84, %64, !dbg !4357
  %65 = load i16*, i16** %rgb2, align 8, !dbg !4358
  %arrayidx86 = getelementptr inbounds i16, i16* %65, i64 %add85, !dbg !4358
  %66 = load i16, i16* %arrayidx86, align 2, !dbg !4358
  %conv87 = sext i16 %66 to i32, !dbg !4358
  store i32 %conv87, i32* %b10, align 4, !dbg !4352
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !4359, metadata !94), !dbg !4360
  %67 = load i32, i32* %x, align 4, !dbg !4361
  %mul88 = mul nsw i32 %67, 2, !dbg !4362
  %add89 = add nsw i32 %mul88, 1, !dbg !4363
  %conv90 = sext i32 %add89 to i64, !dbg !4361
  %68 = load i64, i64* %s.addr, align 8, !dbg !4364
  %add91 = add nsw i64 %conv90, %68, !dbg !4365
  %69 = load i16*, i16** %rgb0, align 8, !dbg !4366
  %arrayidx92 = getelementptr inbounds i16, i16* %69, i64 %add91, !dbg !4366
  %70 = load i16, i16* %arrayidx92, align 2, !dbg !4366
  %conv93 = sext i16 %70 to i32, !dbg !4366
  store i32 %conv93, i32* %r11, align 4, !dbg !4360
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !4367, metadata !94), !dbg !4368
  %71 = load i32, i32* %x, align 4, !dbg !4369
  %mul94 = mul nsw i32 %71, 2, !dbg !4370
  %add95 = add nsw i32 %mul94, 1, !dbg !4371
  %conv96 = sext i32 %add95 to i64, !dbg !4369
  %72 = load i64, i64* %s.addr, align 8, !dbg !4372
  %add97 = add nsw i64 %conv96, %72, !dbg !4373
  %73 = load i16*, i16** %rgb1, align 8, !dbg !4374
  %arrayidx98 = getelementptr inbounds i16, i16* %73, i64 %add97, !dbg !4374
  %74 = load i16, i16* %arrayidx98, align 2, !dbg !4374
  %conv99 = sext i16 %74 to i32, !dbg !4374
  store i32 %conv99, i32* %g11, align 4, !dbg !4368
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !4375, metadata !94), !dbg !4376
  %75 = load i32, i32* %x, align 4, !dbg !4377
  %mul100 = mul nsw i32 %75, 2, !dbg !4378
  %add101 = add nsw i32 %mul100, 1, !dbg !4379
  %conv102 = sext i32 %add101 to i64, !dbg !4377
  %76 = load i64, i64* %s.addr, align 8, !dbg !4380
  %add103 = add nsw i64 %conv102, %76, !dbg !4381
  %77 = load i16*, i16** %rgb2, align 8, !dbg !4382
  %arrayidx104 = getelementptr inbounds i16, i16* %77, i64 %add103, !dbg !4382
  %78 = load i16, i16* %arrayidx104, align 2, !dbg !4382
  %conv105 = sext i16 %78 to i32, !dbg !4382
  store i32 %conv105, i32* %b11, align 4, !dbg !4376
  %79 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4383
  %arrayidx106 = getelementptr inbounds i16, i16* %79, i64 0, !dbg !4383
  %80 = load i16, i16* %arrayidx106, align 2, !dbg !4383
  %conv107 = sext i16 %80 to i32, !dbg !4383
  %81 = load i32, i32* %r00, align 4, !dbg !4384
  %82 = load i32, i32* %cry, align 4, !dbg !4385
  %mul108 = mul nsw i32 %81, %82, !dbg !4386
  %83 = load i32, i32* %g00, align 4, !dbg !4387
  %84 = load i32, i32* %cgy, align 4, !dbg !4388
  %mul109 = mul nsw i32 %83, %84, !dbg !4389
  %add110 = add nsw i32 %mul108, %mul109, !dbg !4390
  %85 = load i32, i32* %b00, align 4, !dbg !4391
  %86 = load i32, i32* %cby, align 4, !dbg !4392
  %mul111 = mul nsw i32 %85, %86, !dbg !4393
  %add112 = add nsw i32 %add110, %mul111, !dbg !4394
  %add113 = add nsw i32 %add112, 1048576, !dbg !4395
  %shr114 = ashr i32 %add113, 21, !dbg !4396
  %add115 = add nsw i32 %conv107, %shr114, !dbg !4397
  store i32 %add115, i32* %a.addr.i, align 4, !dbg !4398
  %87 = load i32, i32* %a.addr.i, align 4, !dbg !4399
  %and.i = and i32 %87, -256, !dbg !4400
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !4400
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4401

if.then.i:                                        ; preds = %for.body45
  %88 = load i32, i32* %a.addr.i, align 4, !dbg !4402
  %neg.i = xor i32 %88, -1, !dbg !4403
  %shr.i = ashr i32 %neg.i, 31, !dbg !4404
  %conv.i = trunc i32 %shr.i to i8, !dbg !4405
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !4406
  br label %av_clip_uint8_c.exit, !dbg !4406

if.else.i:                                        ; preds = %for.body45
  %89 = load i32, i32* %a.addr.i, align 4, !dbg !4407
  %conv1.i = trunc i32 %89 to i8, !dbg !4407
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !4408
  br label %av_clip_uint8_c.exit, !dbg !4408

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %90 = load i8, i8* %retval.i, align 1, !dbg !4409
  %91 = load i32, i32* %x, align 4, !dbg !4410
  %shl116 = shl i32 %91, 1, !dbg !4411
  %idxprom117 = sext i32 %shl116 to i64, !dbg !4412
  %92 = load i8*, i8** %yuv0, align 8, !dbg !4412
  %arrayidx118 = getelementptr inbounds i8, i8* %92, i64 %idxprom117, !dbg !4412
  store i8 %90, i8* %arrayidx118, align 1, !dbg !4413
  %93 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4414
  %arrayidx119 = getelementptr inbounds i16, i16* %93, i64 0, !dbg !4414
  %94 = load i16, i16* %arrayidx119, align 2, !dbg !4414
  %conv120 = sext i16 %94 to i32, !dbg !4414
  %95 = load i32, i32* %r01, align 4, !dbg !4415
  %96 = load i32, i32* %cry, align 4, !dbg !4416
  %mul121 = mul nsw i32 %95, %96, !dbg !4417
  %97 = load i32, i32* %g01, align 4, !dbg !4418
  %98 = load i32, i32* %cgy, align 4, !dbg !4419
  %mul122 = mul nsw i32 %97, %98, !dbg !4420
  %add123 = add nsw i32 %mul121, %mul122, !dbg !4421
  %99 = load i32, i32* %b01, align 4, !dbg !4422
  %100 = load i32, i32* %cby, align 4, !dbg !4423
  %mul124 = mul nsw i32 %99, %100, !dbg !4424
  %add125 = add nsw i32 %add123, %mul124, !dbg !4425
  %add126 = add nsw i32 %add125, 1048576, !dbg !4426
  %shr127 = ashr i32 %add126, 21, !dbg !4427
  %add128 = add nsw i32 %conv120, %shr127, !dbg !4428
  store i32 %add128, i32* %a.addr.i279, align 4, !dbg !4429
  %101 = load i32, i32* %a.addr.i279, align 4, !dbg !4430
  %and.i280 = and i32 %101, -256, !dbg !4431
  %tobool.i281 = icmp ne i32 %and.i280, 0, !dbg !4431
  br i1 %tobool.i281, label %if.then.i285, label %if.else.i287, !dbg !4432

if.then.i285:                                     ; preds = %av_clip_uint8_c.exit
  %102 = load i32, i32* %a.addr.i279, align 4, !dbg !4433
  %neg.i282 = xor i32 %102, -1, !dbg !4434
  %shr.i283 = ashr i32 %neg.i282, 31, !dbg !4435
  %conv.i284 = trunc i32 %shr.i283 to i8, !dbg !4436
  store i8 %conv.i284, i8* %retval.i278, align 1, !dbg !4437
  br label %av_clip_uint8_c.exit288, !dbg !4437

if.else.i287:                                     ; preds = %av_clip_uint8_c.exit
  %103 = load i32, i32* %a.addr.i279, align 4, !dbg !4438
  %conv1.i286 = trunc i32 %103 to i8, !dbg !4438
  store i8 %conv1.i286, i8* %retval.i278, align 1, !dbg !4439
  br label %av_clip_uint8_c.exit288, !dbg !4439

av_clip_uint8_c.exit288:                          ; preds = %if.then.i285, %if.else.i287
  %104 = load i8, i8* %retval.i278, align 1, !dbg !4440
  %105 = load i32, i32* %x, align 4, !dbg !4441
  %mul130 = mul nsw i32 %105, 2, !dbg !4442
  %add131 = add nsw i32 %mul130, 1, !dbg !4443
  %idxprom132 = sext i32 %add131 to i64, !dbg !4444
  %106 = load i8*, i8** %yuv0, align 8, !dbg !4444
  %arrayidx133 = getelementptr inbounds i8, i8* %106, i64 %idxprom132, !dbg !4444
  store i8 %104, i8* %arrayidx133, align 1, !dbg !4445
  %107 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4446
  %arrayidx134 = getelementptr inbounds i16, i16* %107, i64 0, !dbg !4446
  %108 = load i16, i16* %arrayidx134, align 2, !dbg !4446
  %conv135 = sext i16 %108 to i32, !dbg !4446
  %109 = load i32, i32* %r10, align 4, !dbg !4447
  %110 = load i32, i32* %cry, align 4, !dbg !4448
  %mul136 = mul nsw i32 %109, %110, !dbg !4449
  %111 = load i32, i32* %g10, align 4, !dbg !4450
  %112 = load i32, i32* %cgy, align 4, !dbg !4451
  %mul137 = mul nsw i32 %111, %112, !dbg !4452
  %add138 = add nsw i32 %mul136, %mul137, !dbg !4453
  %113 = load i32, i32* %b10, align 4, !dbg !4454
  %114 = load i32, i32* %cby, align 4, !dbg !4455
  %mul139 = mul nsw i32 %113, %114, !dbg !4456
  %add140 = add nsw i32 %add138, %mul139, !dbg !4457
  %add141 = add nsw i32 %add140, 1048576, !dbg !4458
  %shr142 = ashr i32 %add141, 21, !dbg !4459
  %add143 = add nsw i32 %conv135, %shr142, !dbg !4460
  store i32 %add143, i32* %a.addr.i268, align 4, !dbg !4461
  %115 = load i32, i32* %a.addr.i268, align 4, !dbg !4462
  %and.i269 = and i32 %115, -256, !dbg !4463
  %tobool.i270 = icmp ne i32 %and.i269, 0, !dbg !4463
  br i1 %tobool.i270, label %if.then.i274, label %if.else.i276, !dbg !4464

if.then.i274:                                     ; preds = %av_clip_uint8_c.exit288
  %116 = load i32, i32* %a.addr.i268, align 4, !dbg !4465
  %neg.i271 = xor i32 %116, -1, !dbg !4466
  %shr.i272 = ashr i32 %neg.i271, 31, !dbg !4467
  %conv.i273 = trunc i32 %shr.i272 to i8, !dbg !4468
  store i8 %conv.i273, i8* %retval.i267, align 1, !dbg !4469
  br label %av_clip_uint8_c.exit277, !dbg !4469

if.else.i276:                                     ; preds = %av_clip_uint8_c.exit288
  %117 = load i32, i32* %a.addr.i268, align 4, !dbg !4470
  %conv1.i275 = trunc i32 %117 to i8, !dbg !4470
  store i8 %conv1.i275, i8* %retval.i267, align 1, !dbg !4471
  br label %av_clip_uint8_c.exit277, !dbg !4471

av_clip_uint8_c.exit277:                          ; preds = %if.then.i274, %if.else.i276
  %118 = load i8, i8* %retval.i267, align 1, !dbg !4472
  %119 = load i32, i32* %x, align 4, !dbg !4473
  %mul145 = mul nsw i32 %119, 2, !dbg !4474
  %add146 = add nsw i32 %mul145, 0, !dbg !4475
  %conv147 = sext i32 %add146 to i64, !dbg !4473
  %120 = load i64, i64* %s0, align 8, !dbg !4476
  %add148 = add nsw i64 %conv147, %120, !dbg !4477
  %121 = load i8*, i8** %yuv0, align 8, !dbg !4478
  %arrayidx149 = getelementptr inbounds i8, i8* %121, i64 %add148, !dbg !4478
  store i8 %118, i8* %arrayidx149, align 1, !dbg !4479
  %122 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4480
  %arrayidx150 = getelementptr inbounds i16, i16* %122, i64 0, !dbg !4480
  %123 = load i16, i16* %arrayidx150, align 2, !dbg !4480
  %conv151 = sext i16 %123 to i32, !dbg !4480
  %124 = load i32, i32* %r11, align 4, !dbg !4481
  %125 = load i32, i32* %cry, align 4, !dbg !4482
  %mul152 = mul nsw i32 %124, %125, !dbg !4483
  %126 = load i32, i32* %g11, align 4, !dbg !4484
  %127 = load i32, i32* %cgy, align 4, !dbg !4485
  %mul153 = mul nsw i32 %126, %127, !dbg !4486
  %add154 = add nsw i32 %mul152, %mul153, !dbg !4487
  %128 = load i32, i32* %b11, align 4, !dbg !4488
  %129 = load i32, i32* %cby, align 4, !dbg !4489
  %mul155 = mul nsw i32 %128, %129, !dbg !4490
  %add156 = add nsw i32 %add154, %mul155, !dbg !4491
  %add157 = add nsw i32 %add156, 1048576, !dbg !4492
  %shr158 = ashr i32 %add157, 21, !dbg !4493
  %add159 = add nsw i32 %conv151, %shr158, !dbg !4494
  store i32 %add159, i32* %a.addr.i257, align 4, !dbg !4495
  %130 = load i32, i32* %a.addr.i257, align 4, !dbg !4496
  %and.i258 = and i32 %130, -256, !dbg !4497
  %tobool.i259 = icmp ne i32 %and.i258, 0, !dbg !4497
  br i1 %tobool.i259, label %if.then.i263, label %if.else.i265, !dbg !4498

if.then.i263:                                     ; preds = %av_clip_uint8_c.exit277
  %131 = load i32, i32* %a.addr.i257, align 4, !dbg !4499
  %neg.i260 = xor i32 %131, -1, !dbg !4500
  %shr.i261 = ashr i32 %neg.i260, 31, !dbg !4501
  %conv.i262 = trunc i32 %shr.i261 to i8, !dbg !4502
  store i8 %conv.i262, i8* %retval.i256, align 1, !dbg !4503
  br label %av_clip_uint8_c.exit266, !dbg !4503

if.else.i265:                                     ; preds = %av_clip_uint8_c.exit277
  %132 = load i32, i32* %a.addr.i257, align 4, !dbg !4504
  %conv1.i264 = trunc i32 %132 to i8, !dbg !4504
  store i8 %conv1.i264, i8* %retval.i256, align 1, !dbg !4505
  br label %av_clip_uint8_c.exit266, !dbg !4505

av_clip_uint8_c.exit266:                          ; preds = %if.then.i263, %if.else.i265
  %133 = load i8, i8* %retval.i256, align 1, !dbg !4506
  %134 = load i32, i32* %x, align 4, !dbg !4507
  %mul161 = mul nsw i32 %134, 2, !dbg !4508
  %add162 = add nsw i32 %mul161, 1, !dbg !4509
  %conv163 = sext i32 %add162 to i64, !dbg !4507
  %135 = load i64, i64* %s0, align 8, !dbg !4510
  %add164 = add nsw i64 %conv163, %135, !dbg !4511
  %136 = load i8*, i8** %yuv0, align 8, !dbg !4512
  %arrayidx165 = getelementptr inbounds i8, i8* %136, i64 %add164, !dbg !4512
  store i8 %133, i8* %arrayidx165, align 1, !dbg !4513
  %137 = load i32, i32* %r00, align 4, !dbg !4514
  %138 = load i32, i32* %r01, align 4, !dbg !4515
  %add166 = add nsw i32 %137, %138, !dbg !4516
  %139 = load i32, i32* %r10, align 4, !dbg !4517
  %add167 = add nsw i32 %add166, %139, !dbg !4518
  %140 = load i32, i32* %r11, align 4, !dbg !4519
  %add168 = add nsw i32 %add167, %140, !dbg !4520
  %add169 = add nsw i32 %add168, 2, !dbg !4521
  %shr170 = ashr i32 %add169, 2, !dbg !4522
  %141 = load i32, i32* %cru, align 4, !dbg !4523
  %mul171 = mul nsw i32 %shr170, %141, !dbg !4524
  %142 = load i32, i32* %g00, align 4, !dbg !4525
  %143 = load i32, i32* %g01, align 4, !dbg !4526
  %add172 = add nsw i32 %142, %143, !dbg !4527
  %144 = load i32, i32* %g10, align 4, !dbg !4528
  %add173 = add nsw i32 %add172, %144, !dbg !4529
  %145 = load i32, i32* %g11, align 4, !dbg !4530
  %add174 = add nsw i32 %add173, %145, !dbg !4531
  %add175 = add nsw i32 %add174, 2, !dbg !4532
  %shr176 = ashr i32 %add175, 2, !dbg !4533
  %146 = load i32, i32* %cgu, align 4, !dbg !4534
  %mul177 = mul nsw i32 %shr176, %146, !dbg !4535
  %add178 = add nsw i32 %mul171, %mul177, !dbg !4536
  %147 = load i32, i32* %b00, align 4, !dbg !4537
  %148 = load i32, i32* %b01, align 4, !dbg !4538
  %add179 = add nsw i32 %147, %148, !dbg !4539
  %149 = load i32, i32* %b10, align 4, !dbg !4540
  %add180 = add nsw i32 %add179, %149, !dbg !4541
  %150 = load i32, i32* %b11, align 4, !dbg !4542
  %add181 = add nsw i32 %add180, %150, !dbg !4543
  %add182 = add nsw i32 %add181, 2, !dbg !4544
  %shr183 = ashr i32 %add182, 2, !dbg !4545
  %151 = load i32, i32* %cburv, align 4, !dbg !4546
  %mul184 = mul nsw i32 %shr183, %151, !dbg !4547
  %add185 = add nsw i32 %add178, %mul184, !dbg !4548
  %add186 = add nsw i32 %add185, 1048576, !dbg !4549
  %shr187 = ashr i32 %add186, 21, !dbg !4550
  %add188 = add nsw i32 128, %shr187, !dbg !4551
  store i32 %add188, i32* %a.addr.i246, align 4, !dbg !4552
  %152 = load i32, i32* %a.addr.i246, align 4, !dbg !4553
  %and.i247 = and i32 %152, -256, !dbg !4554
  %tobool.i248 = icmp ne i32 %and.i247, 0, !dbg !4554
  br i1 %tobool.i248, label %if.then.i252, label %if.else.i254, !dbg !4555

if.then.i252:                                     ; preds = %av_clip_uint8_c.exit266
  %153 = load i32, i32* %a.addr.i246, align 4, !dbg !4556
  %neg.i249 = xor i32 %153, -1, !dbg !4557
  %shr.i250 = ashr i32 %neg.i249, 31, !dbg !4558
  %conv.i251 = trunc i32 %shr.i250 to i8, !dbg !4559
  store i8 %conv.i251, i8* %retval.i245, align 1, !dbg !4560
  br label %av_clip_uint8_c.exit255, !dbg !4560

if.else.i254:                                     ; preds = %av_clip_uint8_c.exit266
  %154 = load i32, i32* %a.addr.i246, align 4, !dbg !4561
  %conv1.i253 = trunc i32 %154 to i8, !dbg !4561
  store i8 %conv1.i253, i8* %retval.i245, align 1, !dbg !4562
  br label %av_clip_uint8_c.exit255, !dbg !4562

av_clip_uint8_c.exit255:                          ; preds = %if.then.i252, %if.else.i254
  %155 = load i8, i8* %retval.i245, align 1, !dbg !4563
  %156 = load i32, i32* %x, align 4, !dbg !4564
  %idxprom190 = sext i32 %156 to i64, !dbg !4565
  %157 = load i8*, i8** %yuv1, align 8, !dbg !4565
  %arrayidx191 = getelementptr inbounds i8, i8* %157, i64 %idxprom190, !dbg !4565
  store i8 %155, i8* %arrayidx191, align 1, !dbg !4566
  %158 = load i32, i32* %r00, align 4, !dbg !4567
  %159 = load i32, i32* %r01, align 4, !dbg !4568
  %add192 = add nsw i32 %158, %159, !dbg !4569
  %160 = load i32, i32* %r10, align 4, !dbg !4570
  %add193 = add nsw i32 %add192, %160, !dbg !4571
  %161 = load i32, i32* %r11, align 4, !dbg !4572
  %add194 = add nsw i32 %add193, %161, !dbg !4573
  %add195 = add nsw i32 %add194, 2, !dbg !4574
  %shr196 = ashr i32 %add195, 2, !dbg !4575
  %162 = load i32, i32* %cburv, align 4, !dbg !4576
  %mul197 = mul nsw i32 %shr196, %162, !dbg !4577
  %163 = load i32, i32* %g00, align 4, !dbg !4578
  %164 = load i32, i32* %g01, align 4, !dbg !4579
  %add198 = add nsw i32 %163, %164, !dbg !4580
  %165 = load i32, i32* %g10, align 4, !dbg !4581
  %add199 = add nsw i32 %add198, %165, !dbg !4582
  %166 = load i32, i32* %g11, align 4, !dbg !4583
  %add200 = add nsw i32 %add199, %166, !dbg !4584
  %add201 = add nsw i32 %add200, 2, !dbg !4585
  %shr202 = ashr i32 %add201, 2, !dbg !4586
  %167 = load i32, i32* %cgv, align 4, !dbg !4587
  %mul203 = mul nsw i32 %shr202, %167, !dbg !4588
  %add204 = add nsw i32 %mul197, %mul203, !dbg !4589
  %168 = load i32, i32* %b00, align 4, !dbg !4590
  %169 = load i32, i32* %b01, align 4, !dbg !4591
  %add205 = add nsw i32 %168, %169, !dbg !4592
  %170 = load i32, i32* %b10, align 4, !dbg !4593
  %add206 = add nsw i32 %add205, %170, !dbg !4594
  %171 = load i32, i32* %b11, align 4, !dbg !4595
  %add207 = add nsw i32 %add206, %171, !dbg !4596
  %add208 = add nsw i32 %add207, 2, !dbg !4597
  %shr209 = ashr i32 %add208, 2, !dbg !4598
  %172 = load i32, i32* %cbv, align 4, !dbg !4599
  %mul210 = mul nsw i32 %shr209, %172, !dbg !4600
  %add211 = add nsw i32 %add204, %mul210, !dbg !4601
  %add212 = add nsw i32 %add211, 1048576, !dbg !4602
  %shr213 = ashr i32 %add212, 21, !dbg !4603
  %add214 = add nsw i32 128, %shr213, !dbg !4604
  store i32 %add214, i32* %a.addr.i235, align 4, !dbg !4605
  %173 = load i32, i32* %a.addr.i235, align 4, !dbg !4606
  %and.i236 = and i32 %173, -256, !dbg !4607
  %tobool.i237 = icmp ne i32 %and.i236, 0, !dbg !4607
  br i1 %tobool.i237, label %if.then.i241, label %if.else.i243, !dbg !4608

if.then.i241:                                     ; preds = %av_clip_uint8_c.exit255
  %174 = load i32, i32* %a.addr.i235, align 4, !dbg !4609
  %neg.i238 = xor i32 %174, -1, !dbg !4610
  %shr.i239 = ashr i32 %neg.i238, 31, !dbg !4611
  %conv.i240 = trunc i32 %shr.i239 to i8, !dbg !4612
  store i8 %conv.i240, i8* %retval.i234, align 1, !dbg !4613
  br label %av_clip_uint8_c.exit244, !dbg !4613

if.else.i243:                                     ; preds = %av_clip_uint8_c.exit255
  %175 = load i32, i32* %a.addr.i235, align 4, !dbg !4614
  %conv1.i242 = trunc i32 %175 to i8, !dbg !4614
  store i8 %conv1.i242, i8* %retval.i234, align 1, !dbg !4615
  br label %av_clip_uint8_c.exit244, !dbg !4615

av_clip_uint8_c.exit244:                          ; preds = %if.then.i241, %if.else.i243
  %176 = load i8, i8* %retval.i234, align 1, !dbg !4616
  %177 = load i32, i32* %x, align 4, !dbg !4617
  %idxprom216 = sext i32 %177 to i64, !dbg !4618
  %178 = load i8*, i8** %yuv2, align 8, !dbg !4618
  %arrayidx217 = getelementptr inbounds i8, i8* %178, i64 %idxprom216, !dbg !4618
  store i8 %176, i8* %arrayidx217, align 1, !dbg !4619
  br label %for.inc, !dbg !4620

for.inc:                                          ; preds = %av_clip_uint8_c.exit244
  %179 = load i32, i32* %x, align 4, !dbg !4621
  %inc = add nsw i32 %179, 1, !dbg !4621
  store i32 %inc, i32* %x, align 4, !dbg !4621
  br label %for.cond42, !dbg !4623, !llvm.loop !4624

for.end:                                          ; preds = %for.cond42
  %180 = load i64, i64* %s0, align 8, !dbg !4626
  %mul218 = mul nsw i64 %180, 2, !dbg !4627
  %181 = load i8*, i8** %yuv0, align 8, !dbg !4628
  %add.ptr = getelementptr inbounds i8, i8* %181, i64 %mul218, !dbg !4628
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !4628
  %182 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4629
  %arrayidx219 = getelementptr inbounds i64, i64* %182, i64 1, !dbg !4629
  %183 = load i64, i64* %arrayidx219, align 8, !dbg !4629
  %div220 = udiv i64 %183, 1, !dbg !4630
  %184 = load i8*, i8** %yuv1, align 8, !dbg !4631
  %add.ptr221 = getelementptr inbounds i8, i8* %184, i64 %div220, !dbg !4631
  store i8* %add.ptr221, i8** %yuv1, align 8, !dbg !4631
  %185 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4632
  %arrayidx222 = getelementptr inbounds i64, i64* %185, i64 2, !dbg !4632
  %186 = load i64, i64* %arrayidx222, align 8, !dbg !4632
  %div223 = udiv i64 %186, 1, !dbg !4633
  %187 = load i8*, i8** %yuv2, align 8, !dbg !4634
  %add.ptr224 = getelementptr inbounds i8, i8* %187, i64 %div223, !dbg !4634
  store i8* %add.ptr224, i8** %yuv2, align 8, !dbg !4634
  %188 = load i64, i64* %s.addr, align 8, !dbg !4635
  %mul225 = mul nsw i64 %188, 2, !dbg !4636
  %189 = load i16*, i16** %rgb0, align 8, !dbg !4637
  %add.ptr226 = getelementptr inbounds i16, i16* %189, i64 %mul225, !dbg !4637
  store i16* %add.ptr226, i16** %rgb0, align 8, !dbg !4637
  %190 = load i64, i64* %s.addr, align 8, !dbg !4638
  %mul227 = mul nsw i64 %190, 2, !dbg !4639
  %191 = load i16*, i16** %rgb1, align 8, !dbg !4640
  %add.ptr228 = getelementptr inbounds i16, i16* %191, i64 %mul227, !dbg !4640
  store i16* %add.ptr228, i16** %rgb1, align 8, !dbg !4640
  %192 = load i64, i64* %s.addr, align 8, !dbg !4641
  %mul229 = mul nsw i64 %192, 2, !dbg !4642
  %193 = load i16*, i16** %rgb2, align 8, !dbg !4643
  %add.ptr230 = getelementptr inbounds i16, i16* %193, i64 %mul229, !dbg !4643
  store i16* %add.ptr230, i16** %rgb2, align 8, !dbg !4643
  br label %for.inc231, !dbg !4644

for.inc231:                                       ; preds = %for.end
  %194 = load i32, i32* %y, align 4, !dbg !4645
  %inc232 = add nsw i32 %194, 1, !dbg !4645
  store i32 %inc232, i32* %y, align 4, !dbg !4645
  br label %for.cond, !dbg !4647, !llvm.loop !4648

for.end233:                                       ; preds = %for.cond
  ret void, !dbg !4650
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_444p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !4651 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !4657
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !4666
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !4667
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !4669
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !4670
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !4672
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !4673, metadata !94), !dbg !4674
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !4675, metadata !94), !dbg !4676
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !4677, metadata !94), !dbg !4678
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !4679, metadata !94), !dbg !4680
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !4681, metadata !94), !dbg !4682
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4683, metadata !94), !dbg !4684
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !4685, metadata !94), !dbg !4686
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !4687, metadata !94), !dbg !4688
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !4689, metadata !94), !dbg !4690
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !4691
  %1 = bitcast i8** %0 to i16**, !dbg !4692
  store i16** %1, i16*** %yuv, align 8, !dbg !4690
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !4693, metadata !94), !dbg !4694
  %2 = load i16**, i16*** %yuv, align 8, !dbg !4695
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !4695
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !4695
  store i16* %3, i16** %yuv0, align 8, !dbg !4694
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !4696, metadata !94), !dbg !4697
  %4 = load i16**, i16*** %yuv, align 8, !dbg !4698
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !4698
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !4698
  store i16* %5, i16** %yuv1, align 8, !dbg !4697
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !4699, metadata !94), !dbg !4700
  %6 = load i16**, i16*** %yuv, align 8, !dbg !4701
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !4701
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !4701
  store i16* %7, i16** %yuv2, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !4702, metadata !94), !dbg !4703
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !4704
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !4704
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !4704
  store i16* %9, i16** %rgb0, align 8, !dbg !4703
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !4705, metadata !94), !dbg !4706
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !4707
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !4707
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !4707
  store i16* %11, i16** %rgb1, align 8, !dbg !4706
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !4708, metadata !94), !dbg !4709
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !4710
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !4710
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !4710
  store i16* %13, i16** %rgb2, align 8, !dbg !4709
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4711, metadata !94), !dbg !4712
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4713, metadata !94), !dbg !4714
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !4715, metadata !94), !dbg !4716
  store i32 19, i32* %sh, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !4717, metadata !94), !dbg !4718
  store i32 262144, i32* %rnd, align 4, !dbg !4718
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !4719, metadata !94), !dbg !4720
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4721
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !4721
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !4721
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !4721
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !4721
  %conv = sext i16 %15 to i32, !dbg !4721
  store i32 %conv, i32* %cry, align 4, !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !4722, metadata !94), !dbg !4723
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4724
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !4724
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !4724
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !4724
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !4724
  %conv12 = sext i16 %17 to i32, !dbg !4724
  store i32 %conv12, i32* %cgy, align 4, !dbg !4723
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !4725, metadata !94), !dbg !4726
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4727
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !4727
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !4727
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !4727
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !4727
  %conv16 = sext i16 %19 to i32, !dbg !4727
  store i32 %conv16, i32* %cby, align 4, !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !4728, metadata !94), !dbg !4729
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4730
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !4730
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !4730
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !4730
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !4730
  %conv20 = sext i16 %21 to i32, !dbg !4730
  store i32 %conv20, i32* %cru, align 4, !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !4731, metadata !94), !dbg !4732
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4733
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !4733
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !4733
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !4733
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !4733
  %conv24 = sext i16 %23 to i32, !dbg !4733
  store i32 %conv24, i32* %cgu, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !4734, metadata !94), !dbg !4735
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4736
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !4736
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !4736
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !4736
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !4736
  %conv28 = sext i16 %25 to i32, !dbg !4736
  store i32 %conv28, i32* %cburv, align 4, !dbg !4735
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !4737, metadata !94), !dbg !4738
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4739
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !4739
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !4739
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !4739
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !4739
  %conv32 = sext i16 %27 to i32, !dbg !4739
  store i32 %conv32, i32* %cgv, align 4, !dbg !4738
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !4740, metadata !94), !dbg !4741
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4742
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !4742
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !4742
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !4742
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !4742
  %conv36 = sext i16 %29 to i32, !dbg !4742
  store i32 %conv36, i32* %cbv, align 4, !dbg !4741
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !4743, metadata !94), !dbg !4744
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4745
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !4745
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !4745
  %div = udiv i64 %31, 2, !dbg !4746
  store i64 %div, i64* %s0, align 8, !dbg !4744
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !4747, metadata !94), !dbg !4748
  store i32 512, i32* %uv_offset, align 4, !dbg !4748
  %32 = load i32, i32* %w.addr, align 4, !dbg !4749
  %add = add nsw i32 %32, 1, !dbg !4750
  %sub = sub nsw i32 %add, 1, !dbg !4751
  %shr = ashr i32 %sub, 0, !dbg !4752
  store i32 %shr, i32* %w.addr, align 4, !dbg !4753
  %33 = load i32, i32* %h.addr, align 4, !dbg !4754
  %add38 = add nsw i32 %33, 1, !dbg !4755
  %sub39 = sub nsw i32 %add38, 1, !dbg !4756
  %shr40 = ashr i32 %sub39, 0, !dbg !4757
  store i32 %shr40, i32* %h.addr, align 4, !dbg !4758
  store i32 0, i32* %y, align 4, !dbg !4759
  br label %for.cond, !dbg !4760

for.cond:                                         ; preds = %for.inc106, %entry
  %34 = load i32, i32* %y, align 4, !dbg !4761
  %35 = load i32, i32* %h.addr, align 4, !dbg !4763
  %cmp = icmp slt i32 %34, %35, !dbg !4764
  br i1 %cmp, label %for.body, label %for.end108, !dbg !4765

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !4766
  br label %for.cond42, !dbg !4767

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !4768
  %37 = load i32, i32* %w.addr, align 4, !dbg !4770
  %cmp43 = icmp slt i32 %36, %37, !dbg !4771
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !4772

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !4773, metadata !94), !dbg !4774
  %38 = load i32, i32* %x, align 4, !dbg !4775
  %shl = shl i32 %38, 0, !dbg !4776
  %idxprom = sext i32 %shl to i64, !dbg !4777
  %39 = load i16*, i16** %rgb0, align 8, !dbg !4777
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !4777
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !4777
  %conv47 = sext i16 %40 to i32, !dbg !4777
  store i32 %conv47, i32* %r00, align 4, !dbg !4774
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !4778, metadata !94), !dbg !4779
  %41 = load i32, i32* %x, align 4, !dbg !4780
  %shl48 = shl i32 %41, 0, !dbg !4781
  %idxprom49 = sext i32 %shl48 to i64, !dbg !4782
  %42 = load i16*, i16** %rgb1, align 8, !dbg !4782
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !4782
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !4782
  %conv51 = sext i16 %43 to i32, !dbg !4782
  store i32 %conv51, i32* %g00, align 4, !dbg !4779
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !4783, metadata !94), !dbg !4784
  %44 = load i32, i32* %x, align 4, !dbg !4785
  %shl52 = shl i32 %44, 0, !dbg !4786
  %idxprom53 = sext i32 %shl52 to i64, !dbg !4787
  %45 = load i16*, i16** %rgb2, align 8, !dbg !4787
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !4787
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !4787
  %conv55 = sext i16 %46 to i32, !dbg !4787
  store i32 %conv55, i32* %b00, align 4, !dbg !4784
  %47 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !4788
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 0, !dbg !4788
  %48 = load i16, i16* %arrayidx56, align 2, !dbg !4788
  %conv57 = sext i16 %48 to i32, !dbg !4788
  %49 = load i32, i32* %r00, align 4, !dbg !4789
  %50 = load i32, i32* %cry, align 4, !dbg !4790
  %mul = mul nsw i32 %49, %50, !dbg !4791
  %51 = load i32, i32* %g00, align 4, !dbg !4792
  %52 = load i32, i32* %cgy, align 4, !dbg !4793
  %mul58 = mul nsw i32 %51, %52, !dbg !4794
  %add59 = add nsw i32 %mul, %mul58, !dbg !4795
  %53 = load i32, i32* %b00, align 4, !dbg !4796
  %54 = load i32, i32* %cby, align 4, !dbg !4797
  %mul60 = mul nsw i32 %53, %54, !dbg !4798
  %add61 = add nsw i32 %add59, %mul60, !dbg !4799
  %add62 = add nsw i32 %add61, 262144, !dbg !4800
  %shr63 = ashr i32 %add62, 19, !dbg !4801
  %add64 = add nsw i32 %conv57, %shr63, !dbg !4802
  store i32 %add64, i32* %a.addr.i, align 4, !dbg !4803
  store i32 10, i32* %p.addr.i, align 4, !dbg !4803
  %55 = load i32, i32* %a.addr.i, align 4, !dbg !4804
  %56 = load i32, i32* %p.addr.i, align 4, !dbg !4806
  %shl.i = shl i32 1, %56, !dbg !4807
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !4808
  %neg.i = xor i32 %sub.i, -1, !dbg !4809
  %and.i = and i32 %55, %neg.i, !dbg !4810
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !4810
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4811

if.then.i:                                        ; preds = %for.body45
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !4812
  %neg1.i = xor i32 %57, -1, !dbg !4814
  %shr.i = ashr i32 %neg1.i, 31, !dbg !4815
  %58 = load i32, i32* %p.addr.i, align 4, !dbg !4816
  %shl2.i = shl i32 1, %58, !dbg !4817
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !4818
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !4819
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !4820
  br label %av_clip_uintp2_c.exit, !dbg !4820

if.else.i:                                        ; preds = %for.body45
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !4821
  store i32 %59, i32* %retval.i, align 4, !dbg !4822
  br label %av_clip_uintp2_c.exit, !dbg !4822

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %60 = load i32, i32* %retval.i, align 4, !dbg !4823
  %conv65 = trunc i32 %60 to i16, !dbg !4803
  %61 = load i32, i32* %x, align 4, !dbg !4824
  %shl66 = shl i32 %61, 0, !dbg !4825
  %idxprom67 = sext i32 %shl66 to i64, !dbg !4826
  %62 = load i16*, i16** %yuv0, align 8, !dbg !4826
  %arrayidx68 = getelementptr inbounds i16, i16* %62, i64 %idxprom67, !dbg !4826
  store i16 %conv65, i16* %arrayidx68, align 2, !dbg !4827
  %63 = load i32, i32* %r00, align 4, !dbg !4828
  %64 = load i32, i32* %cru, align 4, !dbg !4829
  %mul69 = mul nsw i32 %63, %64, !dbg !4830
  %65 = load i32, i32* %g00, align 4, !dbg !4831
  %66 = load i32, i32* %cgu, align 4, !dbg !4832
  %mul70 = mul nsw i32 %65, %66, !dbg !4833
  %add71 = add nsw i32 %mul69, %mul70, !dbg !4834
  %67 = load i32, i32* %b00, align 4, !dbg !4835
  %68 = load i32, i32* %cburv, align 4, !dbg !4836
  %mul72 = mul nsw i32 %67, %68, !dbg !4837
  %add73 = add nsw i32 %add71, %mul72, !dbg !4838
  %add74 = add nsw i32 %add73, 262144, !dbg !4839
  %shr75 = ashr i32 %add74, 19, !dbg !4840
  %add76 = add nsw i32 512, %shr75, !dbg !4841
  store i32 %add76, i32* %a.addr.i126, align 4, !dbg !4842
  store i32 10, i32* %p.addr.i127, align 4, !dbg !4842
  %69 = load i32, i32* %a.addr.i126, align 4, !dbg !4843
  %70 = load i32, i32* %p.addr.i127, align 4, !dbg !4844
  %shl.i128 = shl i32 1, %70, !dbg !4845
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !4846
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !4847
  %and.i131 = and i32 %69, %neg.i130, !dbg !4848
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !4848
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !4849

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %71 = load i32, i32* %a.addr.i126, align 4, !dbg !4850
  %neg1.i133 = xor i32 %71, -1, !dbg !4851
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !4852
  %72 = load i32, i32* %p.addr.i127, align 4, !dbg !4853
  %shl2.i135 = shl i32 1, %72, !dbg !4854
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !4855
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !4856
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !4857
  br label %av_clip_uintp2_c.exit140, !dbg !4857

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %73 = load i32, i32* %a.addr.i126, align 4, !dbg !4858
  store i32 %73, i32* %retval.i125, align 4, !dbg !4859
  br label %av_clip_uintp2_c.exit140, !dbg !4859

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %74 = load i32, i32* %retval.i125, align 4, !dbg !4860
  %conv78 = trunc i32 %74 to i16, !dbg !4842
  %75 = load i32, i32* %x, align 4, !dbg !4861
  %idxprom79 = sext i32 %75 to i64, !dbg !4862
  %76 = load i16*, i16** %yuv1, align 8, !dbg !4862
  %arrayidx80 = getelementptr inbounds i16, i16* %76, i64 %idxprom79, !dbg !4862
  store i16 %conv78, i16* %arrayidx80, align 2, !dbg !4863
  %77 = load i32, i32* %r00, align 4, !dbg !4864
  %78 = load i32, i32* %cburv, align 4, !dbg !4865
  %mul81 = mul nsw i32 %77, %78, !dbg !4866
  %79 = load i32, i32* %g00, align 4, !dbg !4867
  %80 = load i32, i32* %cgv, align 4, !dbg !4868
  %mul82 = mul nsw i32 %79, %80, !dbg !4869
  %add83 = add nsw i32 %mul81, %mul82, !dbg !4870
  %81 = load i32, i32* %b00, align 4, !dbg !4871
  %82 = load i32, i32* %cbv, align 4, !dbg !4872
  %mul84 = mul nsw i32 %81, %82, !dbg !4873
  %add85 = add nsw i32 %add83, %mul84, !dbg !4874
  %add86 = add nsw i32 %add85, 262144, !dbg !4875
  %shr87 = ashr i32 %add86, 19, !dbg !4876
  %add88 = add nsw i32 512, %shr87, !dbg !4877
  store i32 %add88, i32* %a.addr.i110, align 4, !dbg !4878
  store i32 10, i32* %p.addr.i111, align 4, !dbg !4878
  %83 = load i32, i32* %a.addr.i110, align 4, !dbg !4879
  %84 = load i32, i32* %p.addr.i111, align 4, !dbg !4880
  %shl.i112 = shl i32 1, %84, !dbg !4881
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !4882
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !4883
  %and.i115 = and i32 %83, %neg.i114, !dbg !4884
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !4884
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !4885

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %85 = load i32, i32* %a.addr.i110, align 4, !dbg !4886
  %neg1.i117 = xor i32 %85, -1, !dbg !4887
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !4888
  %86 = load i32, i32* %p.addr.i111, align 4, !dbg !4889
  %shl2.i119 = shl i32 1, %86, !dbg !4890
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !4891
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !4892
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !4893
  br label %av_clip_uintp2_c.exit124, !dbg !4893

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %87 = load i32, i32* %a.addr.i110, align 4, !dbg !4894
  store i32 %87, i32* %retval.i109, align 4, !dbg !4895
  br label %av_clip_uintp2_c.exit124, !dbg !4895

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %88 = load i32, i32* %retval.i109, align 4, !dbg !4896
  %conv90 = trunc i32 %88 to i16, !dbg !4878
  %89 = load i32, i32* %x, align 4, !dbg !4897
  %idxprom91 = sext i32 %89 to i64, !dbg !4898
  %90 = load i16*, i16** %yuv2, align 8, !dbg !4898
  %arrayidx92 = getelementptr inbounds i16, i16* %90, i64 %idxprom91, !dbg !4898
  store i16 %conv90, i16* %arrayidx92, align 2, !dbg !4899
  br label %for.inc, !dbg !4900

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %91 = load i32, i32* %x, align 4, !dbg !4901
  %inc = add nsw i32 %91, 1, !dbg !4901
  store i32 %inc, i32* %x, align 4, !dbg !4901
  br label %for.cond42, !dbg !4903, !llvm.loop !4904

for.end:                                          ; preds = %for.cond42
  %92 = load i64, i64* %s0, align 8, !dbg !4906
  %mul93 = mul nsw i64 %92, 1, !dbg !4907
  %93 = load i16*, i16** %yuv0, align 8, !dbg !4908
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %mul93, !dbg !4908
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !4908
  %94 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4909
  %arrayidx94 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !4909
  %95 = load i64, i64* %arrayidx94, align 8, !dbg !4909
  %div95 = udiv i64 %95, 2, !dbg !4910
  %96 = load i16*, i16** %yuv1, align 8, !dbg !4911
  %add.ptr96 = getelementptr inbounds i16, i16* %96, i64 %div95, !dbg !4911
  store i16* %add.ptr96, i16** %yuv1, align 8, !dbg !4911
  %97 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !4912
  %arrayidx97 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !4912
  %98 = load i64, i64* %arrayidx97, align 8, !dbg !4912
  %div98 = udiv i64 %98, 2, !dbg !4913
  %99 = load i16*, i16** %yuv2, align 8, !dbg !4914
  %add.ptr99 = getelementptr inbounds i16, i16* %99, i64 %div98, !dbg !4914
  store i16* %add.ptr99, i16** %yuv2, align 8, !dbg !4914
  %100 = load i64, i64* %s.addr, align 8, !dbg !4915
  %mul100 = mul nsw i64 %100, 1, !dbg !4916
  %101 = load i16*, i16** %rgb0, align 8, !dbg !4917
  %add.ptr101 = getelementptr inbounds i16, i16* %101, i64 %mul100, !dbg !4917
  store i16* %add.ptr101, i16** %rgb0, align 8, !dbg !4917
  %102 = load i64, i64* %s.addr, align 8, !dbg !4918
  %mul102 = mul nsw i64 %102, 1, !dbg !4919
  %103 = load i16*, i16** %rgb1, align 8, !dbg !4920
  %add.ptr103 = getelementptr inbounds i16, i16* %103, i64 %mul102, !dbg !4920
  store i16* %add.ptr103, i16** %rgb1, align 8, !dbg !4920
  %104 = load i64, i64* %s.addr, align 8, !dbg !4921
  %mul104 = mul nsw i64 %104, 1, !dbg !4922
  %105 = load i16*, i16** %rgb2, align 8, !dbg !4923
  %add.ptr105 = getelementptr inbounds i16, i16* %105, i64 %mul104, !dbg !4923
  store i16* %add.ptr105, i16** %rgb2, align 8, !dbg !4923
  br label %for.inc106, !dbg !4924

for.inc106:                                       ; preds = %for.end
  %106 = load i32, i32* %y, align 4, !dbg !4925
  %inc107 = add nsw i32 %106, 1, !dbg !4925
  store i32 %inc107, i32* %y, align 4, !dbg !4925
  br label %for.cond, !dbg !4927, !llvm.loop !4928

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !4930
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_422p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !4931 {
entry:
  %retval.i190 = alloca i32, align 4
  %a.addr.i191 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i191, metadata !4652, metadata !94), !dbg !4932
  %p.addr.i192 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i192, metadata !4665, metadata !94), !dbg !4940
  %retval.i174 = alloca i32, align 4
  %a.addr.i175 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i175, metadata !4652, metadata !94), !dbg !4941
  %p.addr.i176 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i176, metadata !4665, metadata !94), !dbg !4943
  %retval.i158 = alloca i32, align 4
  %a.addr.i159 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i159, metadata !4652, metadata !94), !dbg !4944
  %p.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i160, metadata !4665, metadata !94), !dbg !4946
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !4947
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !4949
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !4950, metadata !94), !dbg !4951
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !4952, metadata !94), !dbg !4953
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !4954, metadata !94), !dbg !4955
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !4956, metadata !94), !dbg !4957
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !4958, metadata !94), !dbg !4959
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4960, metadata !94), !dbg !4961
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !4962, metadata !94), !dbg !4963
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !4964, metadata !94), !dbg !4965
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !4966, metadata !94), !dbg !4967
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !4968
  %1 = bitcast i8** %0 to i16**, !dbg !4969
  store i16** %1, i16*** %yuv, align 8, !dbg !4967
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !4970, metadata !94), !dbg !4971
  %2 = load i16**, i16*** %yuv, align 8, !dbg !4972
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !4972
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !4972
  store i16* %3, i16** %yuv0, align 8, !dbg !4971
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !4973, metadata !94), !dbg !4974
  %4 = load i16**, i16*** %yuv, align 8, !dbg !4975
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !4975
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !4975
  store i16* %5, i16** %yuv1, align 8, !dbg !4974
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !4976, metadata !94), !dbg !4977
  %6 = load i16**, i16*** %yuv, align 8, !dbg !4978
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !4978
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !4978
  store i16* %7, i16** %yuv2, align 8, !dbg !4977
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !4979, metadata !94), !dbg !4980
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !4981
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !4981
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !4981
  store i16* %9, i16** %rgb0, align 8, !dbg !4980
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !4982, metadata !94), !dbg !4983
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !4984
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !4984
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !4984
  store i16* %11, i16** %rgb1, align 8, !dbg !4983
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !4985, metadata !94), !dbg !4986
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !4987
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !4987
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !4987
  store i16* %13, i16** %rgb2, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4988, metadata !94), !dbg !4989
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4990, metadata !94), !dbg !4991
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !4992, metadata !94), !dbg !4993
  store i32 19, i32* %sh, align 4, !dbg !4993
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !4994, metadata !94), !dbg !4995
  store i32 262144, i32* %rnd, align 4, !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !4996, metadata !94), !dbg !4997
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !4998
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !4998
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !4998
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !4998
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !4998
  %conv = sext i16 %15 to i32, !dbg !4998
  store i32 %conv, i32* %cry, align 4, !dbg !4997
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !4999, metadata !94), !dbg !5000
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5001
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !5001
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !5001
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !5001
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !5001
  %conv12 = sext i16 %17 to i32, !dbg !5001
  store i32 %conv12, i32* %cgy, align 4, !dbg !5000
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !5002, metadata !94), !dbg !5003
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5004
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !5004
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !5004
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !5004
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !5004
  %conv16 = sext i16 %19 to i32, !dbg !5004
  store i32 %conv16, i32* %cby, align 4, !dbg !5003
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !5005, metadata !94), !dbg !5006
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5007
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !5007
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !5007
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !5007
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !5007
  %conv20 = sext i16 %21 to i32, !dbg !5007
  store i32 %conv20, i32* %cru, align 4, !dbg !5006
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !5008, metadata !94), !dbg !5009
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5010
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !5010
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !5010
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !5010
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !5010
  %conv24 = sext i16 %23 to i32, !dbg !5010
  store i32 %conv24, i32* %cgu, align 4, !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !5011, metadata !94), !dbg !5012
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5013
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !5013
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !5013
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !5013
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !5013
  %conv28 = sext i16 %25 to i32, !dbg !5013
  store i32 %conv28, i32* %cburv, align 4, !dbg !5012
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !5014, metadata !94), !dbg !5015
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5016
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !5016
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !5016
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !5016
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !5016
  %conv32 = sext i16 %27 to i32, !dbg !5016
  store i32 %conv32, i32* %cgv, align 4, !dbg !5015
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !5017, metadata !94), !dbg !5018
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5019
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !5019
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !5019
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !5019
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !5019
  %conv36 = sext i16 %29 to i32, !dbg !5019
  store i32 %conv36, i32* %cbv, align 4, !dbg !5018
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !5020, metadata !94), !dbg !5021
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5022
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !5022
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !5022
  %div = udiv i64 %31, 2, !dbg !5023
  store i64 %div, i64* %s0, align 8, !dbg !5021
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !5024, metadata !94), !dbg !5025
  store i32 512, i32* %uv_offset, align 4, !dbg !5025
  %32 = load i32, i32* %w.addr, align 4, !dbg !5026
  %add = add nsw i32 %32, 2, !dbg !5027
  %sub = sub nsw i32 %add, 1, !dbg !5028
  %shr = ashr i32 %sub, 1, !dbg !5029
  store i32 %shr, i32* %w.addr, align 4, !dbg !5030
  %33 = load i32, i32* %h.addr, align 4, !dbg !5031
  %add38 = add nsw i32 %33, 1, !dbg !5032
  %sub39 = sub nsw i32 %add38, 1, !dbg !5033
  %shr40 = ashr i32 %sub39, 0, !dbg !5034
  store i32 %shr40, i32* %h.addr, align 4, !dbg !5035
  store i32 0, i32* %y, align 4, !dbg !5036
  br label %for.cond, !dbg !5037

for.cond:                                         ; preds = %for.inc155, %entry
  %34 = load i32, i32* %y, align 4, !dbg !5038
  %35 = load i32, i32* %h.addr, align 4, !dbg !5040
  %cmp = icmp slt i32 %34, %35, !dbg !5041
  br i1 %cmp, label %for.body, label %for.end157, !dbg !5042

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !5043
  br label %for.cond42, !dbg !5044

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !5045
  %37 = load i32, i32* %w.addr, align 4, !dbg !5047
  %cmp43 = icmp slt i32 %36, %37, !dbg !5048
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !5049

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !5050, metadata !94), !dbg !5051
  %38 = load i32, i32* %x, align 4, !dbg !5052
  %shl = shl i32 %38, 1, !dbg !5053
  %idxprom = sext i32 %shl to i64, !dbg !5054
  %39 = load i16*, i16** %rgb0, align 8, !dbg !5054
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !5054
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !5054
  %conv47 = sext i16 %40 to i32, !dbg !5054
  store i32 %conv47, i32* %r00, align 4, !dbg !5051
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !5055, metadata !94), !dbg !5056
  %41 = load i32, i32* %x, align 4, !dbg !5057
  %shl48 = shl i32 %41, 1, !dbg !5058
  %idxprom49 = sext i32 %shl48 to i64, !dbg !5059
  %42 = load i16*, i16** %rgb1, align 8, !dbg !5059
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !5059
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !5059
  %conv51 = sext i16 %43 to i32, !dbg !5059
  store i32 %conv51, i32* %g00, align 4, !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !5060, metadata !94), !dbg !5061
  %44 = load i32, i32* %x, align 4, !dbg !5062
  %shl52 = shl i32 %44, 1, !dbg !5063
  %idxprom53 = sext i32 %shl52 to i64, !dbg !5064
  %45 = load i16*, i16** %rgb2, align 8, !dbg !5064
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !5064
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !5064
  %conv55 = sext i16 %46 to i32, !dbg !5064
  store i32 %conv55, i32* %b00, align 4, !dbg !5061
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !5065, metadata !94), !dbg !5066
  %47 = load i32, i32* %x, align 4, !dbg !5067
  %mul = mul nsw i32 %47, 2, !dbg !5068
  %add56 = add nsw i32 %mul, 1, !dbg !5069
  %idxprom57 = sext i32 %add56 to i64, !dbg !5070
  %48 = load i16*, i16** %rgb0, align 8, !dbg !5070
  %arrayidx58 = getelementptr inbounds i16, i16* %48, i64 %idxprom57, !dbg !5070
  %49 = load i16, i16* %arrayidx58, align 2, !dbg !5070
  %conv59 = sext i16 %49 to i32, !dbg !5070
  store i32 %conv59, i32* %r01, align 4, !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !5071, metadata !94), !dbg !5072
  %50 = load i32, i32* %x, align 4, !dbg !5073
  %mul60 = mul nsw i32 %50, 2, !dbg !5074
  %add61 = add nsw i32 %mul60, 1, !dbg !5075
  %idxprom62 = sext i32 %add61 to i64, !dbg !5076
  %51 = load i16*, i16** %rgb1, align 8, !dbg !5076
  %arrayidx63 = getelementptr inbounds i16, i16* %51, i64 %idxprom62, !dbg !5076
  %52 = load i16, i16* %arrayidx63, align 2, !dbg !5076
  %conv64 = sext i16 %52 to i32, !dbg !5076
  store i32 %conv64, i32* %g01, align 4, !dbg !5072
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !5077, metadata !94), !dbg !5078
  %53 = load i32, i32* %x, align 4, !dbg !5079
  %mul65 = mul nsw i32 %53, 2, !dbg !5080
  %add66 = add nsw i32 %mul65, 1, !dbg !5081
  %idxprom67 = sext i32 %add66 to i64, !dbg !5082
  %54 = load i16*, i16** %rgb2, align 8, !dbg !5082
  %arrayidx68 = getelementptr inbounds i16, i16* %54, i64 %idxprom67, !dbg !5082
  %55 = load i16, i16* %arrayidx68, align 2, !dbg !5082
  %conv69 = sext i16 %55 to i32, !dbg !5082
  store i32 %conv69, i32* %b01, align 4, !dbg !5078
  %56 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5083
  %arrayidx70 = getelementptr inbounds i16, i16* %56, i64 0, !dbg !5083
  %57 = load i16, i16* %arrayidx70, align 2, !dbg !5083
  %conv71 = sext i16 %57 to i32, !dbg !5083
  %58 = load i32, i32* %r00, align 4, !dbg !5084
  %59 = load i32, i32* %cry, align 4, !dbg !5085
  %mul72 = mul nsw i32 %58, %59, !dbg !5086
  %60 = load i32, i32* %g00, align 4, !dbg !5087
  %61 = load i32, i32* %cgy, align 4, !dbg !5088
  %mul73 = mul nsw i32 %60, %61, !dbg !5089
  %add74 = add nsw i32 %mul72, %mul73, !dbg !5090
  %62 = load i32, i32* %b00, align 4, !dbg !5091
  %63 = load i32, i32* %cby, align 4, !dbg !5092
  %mul75 = mul nsw i32 %62, %63, !dbg !5093
  %add76 = add nsw i32 %add74, %mul75, !dbg !5094
  %add77 = add nsw i32 %add76, 262144, !dbg !5095
  %shr78 = ashr i32 %add77, 19, !dbg !5096
  %add79 = add nsw i32 %conv71, %shr78, !dbg !5097
  store i32 %add79, i32* %a.addr.i, align 4, !dbg !5098
  store i32 10, i32* %p.addr.i, align 4, !dbg !5098
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !5099
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !5100
  %shl.i = shl i32 1, %65, !dbg !5101
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5102
  %neg.i = xor i32 %sub.i, -1, !dbg !5103
  %and.i = and i32 %64, %neg.i, !dbg !5104
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5104
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5105

if.then.i:                                        ; preds = %for.body45
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !5106
  %neg1.i = xor i32 %66, -1, !dbg !5107
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5108
  %67 = load i32, i32* %p.addr.i, align 4, !dbg !5109
  %shl2.i = shl i32 1, %67, !dbg !5110
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5111
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5112
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5113
  br label %av_clip_uintp2_c.exit, !dbg !5113

if.else.i:                                        ; preds = %for.body45
  %68 = load i32, i32* %a.addr.i, align 4, !dbg !5114
  store i32 %68, i32* %retval.i, align 4, !dbg !5115
  br label %av_clip_uintp2_c.exit, !dbg !5115

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %69 = load i32, i32* %retval.i, align 4, !dbg !5116
  %conv80 = trunc i32 %69 to i16, !dbg !5098
  %70 = load i32, i32* %x, align 4, !dbg !5117
  %shl81 = shl i32 %70, 1, !dbg !5118
  %idxprom82 = sext i32 %shl81 to i64, !dbg !5119
  %71 = load i16*, i16** %yuv0, align 8, !dbg !5119
  %arrayidx83 = getelementptr inbounds i16, i16* %71, i64 %idxprom82, !dbg !5119
  store i16 %conv80, i16* %arrayidx83, align 2, !dbg !5120
  %72 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5121
  %arrayidx84 = getelementptr inbounds i16, i16* %72, i64 0, !dbg !5121
  %73 = load i16, i16* %arrayidx84, align 2, !dbg !5121
  %conv85 = sext i16 %73 to i32, !dbg !5121
  %74 = load i32, i32* %r01, align 4, !dbg !5122
  %75 = load i32, i32* %cry, align 4, !dbg !5123
  %mul86 = mul nsw i32 %74, %75, !dbg !5124
  %76 = load i32, i32* %g01, align 4, !dbg !5125
  %77 = load i32, i32* %cgy, align 4, !dbg !5126
  %mul87 = mul nsw i32 %76, %77, !dbg !5127
  %add88 = add nsw i32 %mul86, %mul87, !dbg !5128
  %78 = load i32, i32* %b01, align 4, !dbg !5129
  %79 = load i32, i32* %cby, align 4, !dbg !5130
  %mul89 = mul nsw i32 %78, %79, !dbg !5131
  %add90 = add nsw i32 %add88, %mul89, !dbg !5132
  %add91 = add nsw i32 %add90, 262144, !dbg !5133
  %shr92 = ashr i32 %add91, 19, !dbg !5134
  %add93 = add nsw i32 %conv85, %shr92, !dbg !5135
  store i32 %add93, i32* %a.addr.i191, align 4, !dbg !5136
  store i32 10, i32* %p.addr.i192, align 4, !dbg !5136
  %80 = load i32, i32* %a.addr.i191, align 4, !dbg !5137
  %81 = load i32, i32* %p.addr.i192, align 4, !dbg !5138
  %shl.i193 = shl i32 1, %81, !dbg !5139
  %sub.i194 = sub nsw i32 %shl.i193, 1, !dbg !5140
  %neg.i195 = xor i32 %sub.i194, -1, !dbg !5141
  %and.i196 = and i32 %80, %neg.i195, !dbg !5142
  %tobool.i197 = icmp ne i32 %and.i196, 0, !dbg !5142
  br i1 %tobool.i197, label %if.then.i203, label %if.else.i204, !dbg !5143

if.then.i203:                                     ; preds = %av_clip_uintp2_c.exit
  %82 = load i32, i32* %a.addr.i191, align 4, !dbg !5144
  %neg1.i198 = xor i32 %82, -1, !dbg !5145
  %shr.i199 = ashr i32 %neg1.i198, 31, !dbg !5146
  %83 = load i32, i32* %p.addr.i192, align 4, !dbg !5147
  %shl2.i200 = shl i32 1, %83, !dbg !5148
  %sub3.i201 = sub nsw i32 %shl2.i200, 1, !dbg !5149
  %and4.i202 = and i32 %shr.i199, %sub3.i201, !dbg !5150
  store i32 %and4.i202, i32* %retval.i190, align 4, !dbg !5151
  br label %av_clip_uintp2_c.exit205, !dbg !5151

if.else.i204:                                     ; preds = %av_clip_uintp2_c.exit
  %84 = load i32, i32* %a.addr.i191, align 4, !dbg !5152
  store i32 %84, i32* %retval.i190, align 4, !dbg !5153
  br label %av_clip_uintp2_c.exit205, !dbg !5153

av_clip_uintp2_c.exit205:                         ; preds = %if.then.i203, %if.else.i204
  %85 = load i32, i32* %retval.i190, align 4, !dbg !5154
  %conv95 = trunc i32 %85 to i16, !dbg !5136
  %86 = load i32, i32* %x, align 4, !dbg !5155
  %mul96 = mul nsw i32 %86, 2, !dbg !5156
  %add97 = add nsw i32 %mul96, 1, !dbg !5157
  %idxprom98 = sext i32 %add97 to i64, !dbg !5158
  %87 = load i16*, i16** %yuv0, align 8, !dbg !5158
  %arrayidx99 = getelementptr inbounds i16, i16* %87, i64 %idxprom98, !dbg !5158
  store i16 %conv95, i16* %arrayidx99, align 2, !dbg !5159
  %88 = load i32, i32* %r00, align 4, !dbg !5160
  %89 = load i32, i32* %r01, align 4, !dbg !5161
  %add100 = add nsw i32 %88, %89, !dbg !5162
  %add101 = add nsw i32 %add100, 1, !dbg !5163
  %shr102 = ashr i32 %add101, 1, !dbg !5164
  %90 = load i32, i32* %cru, align 4, !dbg !5165
  %mul103 = mul nsw i32 %shr102, %90, !dbg !5166
  %91 = load i32, i32* %g00, align 4, !dbg !5167
  %92 = load i32, i32* %g01, align 4, !dbg !5168
  %add104 = add nsw i32 %91, %92, !dbg !5169
  %add105 = add nsw i32 %add104, 1, !dbg !5170
  %shr106 = ashr i32 %add105, 1, !dbg !5171
  %93 = load i32, i32* %cgu, align 4, !dbg !5172
  %mul107 = mul nsw i32 %shr106, %93, !dbg !5173
  %add108 = add nsw i32 %mul103, %mul107, !dbg !5174
  %94 = load i32, i32* %b00, align 4, !dbg !5175
  %95 = load i32, i32* %b01, align 4, !dbg !5176
  %add109 = add nsw i32 %94, %95, !dbg !5177
  %add110 = add nsw i32 %add109, 1, !dbg !5178
  %shr111 = ashr i32 %add110, 1, !dbg !5179
  %96 = load i32, i32* %cburv, align 4, !dbg !5180
  %mul112 = mul nsw i32 %shr111, %96, !dbg !5181
  %add113 = add nsw i32 %add108, %mul112, !dbg !5182
  %add114 = add nsw i32 %add113, 262144, !dbg !5183
  %shr115 = ashr i32 %add114, 19, !dbg !5184
  %add116 = add nsw i32 512, %shr115, !dbg !5185
  store i32 %add116, i32* %a.addr.i175, align 4, !dbg !5186
  store i32 10, i32* %p.addr.i176, align 4, !dbg !5186
  %97 = load i32, i32* %a.addr.i175, align 4, !dbg !5187
  %98 = load i32, i32* %p.addr.i176, align 4, !dbg !5188
  %shl.i177 = shl i32 1, %98, !dbg !5189
  %sub.i178 = sub nsw i32 %shl.i177, 1, !dbg !5190
  %neg.i179 = xor i32 %sub.i178, -1, !dbg !5191
  %and.i180 = and i32 %97, %neg.i179, !dbg !5192
  %tobool.i181 = icmp ne i32 %and.i180, 0, !dbg !5192
  br i1 %tobool.i181, label %if.then.i187, label %if.else.i188, !dbg !5193

if.then.i187:                                     ; preds = %av_clip_uintp2_c.exit205
  %99 = load i32, i32* %a.addr.i175, align 4, !dbg !5194
  %neg1.i182 = xor i32 %99, -1, !dbg !5195
  %shr.i183 = ashr i32 %neg1.i182, 31, !dbg !5196
  %100 = load i32, i32* %p.addr.i176, align 4, !dbg !5197
  %shl2.i184 = shl i32 1, %100, !dbg !5198
  %sub3.i185 = sub nsw i32 %shl2.i184, 1, !dbg !5199
  %and4.i186 = and i32 %shr.i183, %sub3.i185, !dbg !5200
  store i32 %and4.i186, i32* %retval.i174, align 4, !dbg !5201
  br label %av_clip_uintp2_c.exit189, !dbg !5201

if.else.i188:                                     ; preds = %av_clip_uintp2_c.exit205
  %101 = load i32, i32* %a.addr.i175, align 4, !dbg !5202
  store i32 %101, i32* %retval.i174, align 4, !dbg !5203
  br label %av_clip_uintp2_c.exit189, !dbg !5203

av_clip_uintp2_c.exit189:                         ; preds = %if.then.i187, %if.else.i188
  %102 = load i32, i32* %retval.i174, align 4, !dbg !5204
  %conv118 = trunc i32 %102 to i16, !dbg !5186
  %103 = load i32, i32* %x, align 4, !dbg !5205
  %idxprom119 = sext i32 %103 to i64, !dbg !5206
  %104 = load i16*, i16** %yuv1, align 8, !dbg !5206
  %arrayidx120 = getelementptr inbounds i16, i16* %104, i64 %idxprom119, !dbg !5206
  store i16 %conv118, i16* %arrayidx120, align 2, !dbg !5207
  %105 = load i32, i32* %r00, align 4, !dbg !5208
  %106 = load i32, i32* %r01, align 4, !dbg !5209
  %add121 = add nsw i32 %105, %106, !dbg !5210
  %add122 = add nsw i32 %add121, 1, !dbg !5211
  %shr123 = ashr i32 %add122, 1, !dbg !5212
  %107 = load i32, i32* %cburv, align 4, !dbg !5213
  %mul124 = mul nsw i32 %shr123, %107, !dbg !5214
  %108 = load i32, i32* %g00, align 4, !dbg !5215
  %109 = load i32, i32* %g01, align 4, !dbg !5216
  %add125 = add nsw i32 %108, %109, !dbg !5217
  %add126 = add nsw i32 %add125, 1, !dbg !5218
  %shr127 = ashr i32 %add126, 1, !dbg !5219
  %110 = load i32, i32* %cgv, align 4, !dbg !5220
  %mul128 = mul nsw i32 %shr127, %110, !dbg !5221
  %add129 = add nsw i32 %mul124, %mul128, !dbg !5222
  %111 = load i32, i32* %b00, align 4, !dbg !5223
  %112 = load i32, i32* %b01, align 4, !dbg !5224
  %add130 = add nsw i32 %111, %112, !dbg !5225
  %add131 = add nsw i32 %add130, 1, !dbg !5226
  %shr132 = ashr i32 %add131, 1, !dbg !5227
  %113 = load i32, i32* %cbv, align 4, !dbg !5228
  %mul133 = mul nsw i32 %shr132, %113, !dbg !5229
  %add134 = add nsw i32 %add129, %mul133, !dbg !5230
  %add135 = add nsw i32 %add134, 262144, !dbg !5231
  %shr136 = ashr i32 %add135, 19, !dbg !5232
  %add137 = add nsw i32 512, %shr136, !dbg !5233
  store i32 %add137, i32* %a.addr.i159, align 4, !dbg !5234
  store i32 10, i32* %p.addr.i160, align 4, !dbg !5234
  %114 = load i32, i32* %a.addr.i159, align 4, !dbg !5235
  %115 = load i32, i32* %p.addr.i160, align 4, !dbg !5236
  %shl.i161 = shl i32 1, %115, !dbg !5237
  %sub.i162 = sub nsw i32 %shl.i161, 1, !dbg !5238
  %neg.i163 = xor i32 %sub.i162, -1, !dbg !5239
  %and.i164 = and i32 %114, %neg.i163, !dbg !5240
  %tobool.i165 = icmp ne i32 %and.i164, 0, !dbg !5240
  br i1 %tobool.i165, label %if.then.i171, label %if.else.i172, !dbg !5241

if.then.i171:                                     ; preds = %av_clip_uintp2_c.exit189
  %116 = load i32, i32* %a.addr.i159, align 4, !dbg !5242
  %neg1.i166 = xor i32 %116, -1, !dbg !5243
  %shr.i167 = ashr i32 %neg1.i166, 31, !dbg !5244
  %117 = load i32, i32* %p.addr.i160, align 4, !dbg !5245
  %shl2.i168 = shl i32 1, %117, !dbg !5246
  %sub3.i169 = sub nsw i32 %shl2.i168, 1, !dbg !5247
  %and4.i170 = and i32 %shr.i167, %sub3.i169, !dbg !5248
  store i32 %and4.i170, i32* %retval.i158, align 4, !dbg !5249
  br label %av_clip_uintp2_c.exit173, !dbg !5249

if.else.i172:                                     ; preds = %av_clip_uintp2_c.exit189
  %118 = load i32, i32* %a.addr.i159, align 4, !dbg !5250
  store i32 %118, i32* %retval.i158, align 4, !dbg !5251
  br label %av_clip_uintp2_c.exit173, !dbg !5251

av_clip_uintp2_c.exit173:                         ; preds = %if.then.i171, %if.else.i172
  %119 = load i32, i32* %retval.i158, align 4, !dbg !5252
  %conv139 = trunc i32 %119 to i16, !dbg !5234
  %120 = load i32, i32* %x, align 4, !dbg !5253
  %idxprom140 = sext i32 %120 to i64, !dbg !5254
  %121 = load i16*, i16** %yuv2, align 8, !dbg !5254
  %arrayidx141 = getelementptr inbounds i16, i16* %121, i64 %idxprom140, !dbg !5254
  store i16 %conv139, i16* %arrayidx141, align 2, !dbg !5255
  br label %for.inc, !dbg !5256

for.inc:                                          ; preds = %av_clip_uintp2_c.exit173
  %122 = load i32, i32* %x, align 4, !dbg !5257
  %inc = add nsw i32 %122, 1, !dbg !5257
  store i32 %inc, i32* %x, align 4, !dbg !5257
  br label %for.cond42, !dbg !5259, !llvm.loop !5260

for.end:                                          ; preds = %for.cond42
  %123 = load i64, i64* %s0, align 8, !dbg !5262
  %mul142 = mul nsw i64 %123, 1, !dbg !5263
  %124 = load i16*, i16** %yuv0, align 8, !dbg !5264
  %add.ptr = getelementptr inbounds i16, i16* %124, i64 %mul142, !dbg !5264
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !5264
  %125 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5265
  %arrayidx143 = getelementptr inbounds i64, i64* %125, i64 1, !dbg !5265
  %126 = load i64, i64* %arrayidx143, align 8, !dbg !5265
  %div144 = udiv i64 %126, 2, !dbg !5266
  %127 = load i16*, i16** %yuv1, align 8, !dbg !5267
  %add.ptr145 = getelementptr inbounds i16, i16* %127, i64 %div144, !dbg !5267
  store i16* %add.ptr145, i16** %yuv1, align 8, !dbg !5267
  %128 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5268
  %arrayidx146 = getelementptr inbounds i64, i64* %128, i64 2, !dbg !5268
  %129 = load i64, i64* %arrayidx146, align 8, !dbg !5268
  %div147 = udiv i64 %129, 2, !dbg !5269
  %130 = load i16*, i16** %yuv2, align 8, !dbg !5270
  %add.ptr148 = getelementptr inbounds i16, i16* %130, i64 %div147, !dbg !5270
  store i16* %add.ptr148, i16** %yuv2, align 8, !dbg !5270
  %131 = load i64, i64* %s.addr, align 8, !dbg !5271
  %mul149 = mul nsw i64 %131, 1, !dbg !5272
  %132 = load i16*, i16** %rgb0, align 8, !dbg !5273
  %add.ptr150 = getelementptr inbounds i16, i16* %132, i64 %mul149, !dbg !5273
  store i16* %add.ptr150, i16** %rgb0, align 8, !dbg !5273
  %133 = load i64, i64* %s.addr, align 8, !dbg !5274
  %mul151 = mul nsw i64 %133, 1, !dbg !5275
  %134 = load i16*, i16** %rgb1, align 8, !dbg !5276
  %add.ptr152 = getelementptr inbounds i16, i16* %134, i64 %mul151, !dbg !5276
  store i16* %add.ptr152, i16** %rgb1, align 8, !dbg !5276
  %135 = load i64, i64* %s.addr, align 8, !dbg !5277
  %mul153 = mul nsw i64 %135, 1, !dbg !5278
  %136 = load i16*, i16** %rgb2, align 8, !dbg !5279
  %add.ptr154 = getelementptr inbounds i16, i16* %136, i64 %mul153, !dbg !5279
  store i16* %add.ptr154, i16** %rgb2, align 8, !dbg !5279
  br label %for.inc155, !dbg !5280

for.inc155:                                       ; preds = %for.end
  %137 = load i32, i32* %y, align 4, !dbg !5281
  %inc156 = add nsw i32 %137, 1, !dbg !5281
  store i32 %inc156, i32* %y, align 4, !dbg !5281
  br label %for.cond, !dbg !5283, !llvm.loop !5284

for.end157:                                       ; preds = %for.cond
  ret void, !dbg !5286
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_420p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !5287 {
entry:
  %retval.i304 = alloca i32, align 4
  %a.addr.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i305, metadata !4652, metadata !94), !dbg !5288
  %p.addr.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i306, metadata !4665, metadata !94), !dbg !5296
  %retval.i288 = alloca i32, align 4
  %a.addr.i289 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i289, metadata !4652, metadata !94), !dbg !5297
  %p.addr.i290 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i290, metadata !4665, metadata !94), !dbg !5299
  %retval.i272 = alloca i32, align 4
  %a.addr.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i273, metadata !4652, metadata !94), !dbg !5300
  %p.addr.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i274, metadata !4665, metadata !94), !dbg !5302
  %retval.i256 = alloca i32, align 4
  %a.addr.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i257, metadata !4652, metadata !94), !dbg !5303
  %p.addr.i258 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i258, metadata !4665, metadata !94), !dbg !5305
  %retval.i240 = alloca i32, align 4
  %a.addr.i241 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i241, metadata !4652, metadata !94), !dbg !5306
  %p.addr.i242 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i242, metadata !4665, metadata !94), !dbg !5308
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !5309
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !5311
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !5312, metadata !94), !dbg !5313
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !5314, metadata !94), !dbg !5315
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !5316, metadata !94), !dbg !5317
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5318, metadata !94), !dbg !5319
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5320, metadata !94), !dbg !5321
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5322, metadata !94), !dbg !5323
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !5324, metadata !94), !dbg !5325
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !5326, metadata !94), !dbg !5327
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !5328, metadata !94), !dbg !5329
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !5330
  %1 = bitcast i8** %0 to i16**, !dbg !5331
  store i16** %1, i16*** %yuv, align 8, !dbg !5329
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !5332, metadata !94), !dbg !5333
  %2 = load i16**, i16*** %yuv, align 8, !dbg !5334
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !5334
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !5334
  store i16* %3, i16** %yuv0, align 8, !dbg !5333
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !5335, metadata !94), !dbg !5336
  %4 = load i16**, i16*** %yuv, align 8, !dbg !5337
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !5337
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !5337
  store i16* %5, i16** %yuv1, align 8, !dbg !5336
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !5338, metadata !94), !dbg !5339
  %6 = load i16**, i16*** %yuv, align 8, !dbg !5340
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !5340
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !5340
  store i16* %7, i16** %yuv2, align 8, !dbg !5339
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !5341, metadata !94), !dbg !5342
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !5343
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !5343
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !5343
  store i16* %9, i16** %rgb0, align 8, !dbg !5342
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !5344, metadata !94), !dbg !5345
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !5346
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !5346
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !5346
  store i16* %11, i16** %rgb1, align 8, !dbg !5345
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !5347, metadata !94), !dbg !5348
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !5349
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !5349
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !5349
  store i16* %13, i16** %rgb2, align 8, !dbg !5348
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5350, metadata !94), !dbg !5351
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5352, metadata !94), !dbg !5353
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !5354, metadata !94), !dbg !5355
  store i32 19, i32* %sh, align 4, !dbg !5355
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !5356, metadata !94), !dbg !5357
  store i32 262144, i32* %rnd, align 4, !dbg !5357
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !5358, metadata !94), !dbg !5359
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5360
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !5360
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !5360
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !5360
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !5360
  %conv = sext i16 %15 to i32, !dbg !5360
  store i32 %conv, i32* %cry, align 4, !dbg !5359
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !5361, metadata !94), !dbg !5362
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5363
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !5363
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !5363
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !5363
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !5363
  %conv12 = sext i16 %17 to i32, !dbg !5363
  store i32 %conv12, i32* %cgy, align 4, !dbg !5362
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !5364, metadata !94), !dbg !5365
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5366
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !5366
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !5366
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !5366
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !5366
  %conv16 = sext i16 %19 to i32, !dbg !5366
  store i32 %conv16, i32* %cby, align 4, !dbg !5365
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !5367, metadata !94), !dbg !5368
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5369
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !5369
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !5369
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !5369
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !5369
  %conv20 = sext i16 %21 to i32, !dbg !5369
  store i32 %conv20, i32* %cru, align 4, !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !5370, metadata !94), !dbg !5371
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5372
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !5372
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !5372
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !5372
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !5372
  %conv24 = sext i16 %23 to i32, !dbg !5372
  store i32 %conv24, i32* %cgu, align 4, !dbg !5371
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !5373, metadata !94), !dbg !5374
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5375
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !5375
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !5375
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !5375
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !5375
  %conv28 = sext i16 %25 to i32, !dbg !5375
  store i32 %conv28, i32* %cburv, align 4, !dbg !5374
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !5376, metadata !94), !dbg !5377
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5378
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !5378
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !5378
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !5378
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !5378
  %conv32 = sext i16 %27 to i32, !dbg !5378
  store i32 %conv32, i32* %cgv, align 4, !dbg !5377
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !5379, metadata !94), !dbg !5380
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5381
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !5381
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !5381
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !5381
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !5381
  %conv36 = sext i16 %29 to i32, !dbg !5381
  store i32 %conv36, i32* %cbv, align 4, !dbg !5380
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !5382, metadata !94), !dbg !5383
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5384
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !5384
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !5384
  %div = udiv i64 %31, 2, !dbg !5385
  store i64 %div, i64* %s0, align 8, !dbg !5383
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !5386, metadata !94), !dbg !5387
  store i32 512, i32* %uv_offset, align 4, !dbg !5387
  %32 = load i32, i32* %w.addr, align 4, !dbg !5388
  %add = add nsw i32 %32, 2, !dbg !5389
  %sub = sub nsw i32 %add, 1, !dbg !5390
  %shr = ashr i32 %sub, 1, !dbg !5391
  store i32 %shr, i32* %w.addr, align 4, !dbg !5392
  %33 = load i32, i32* %h.addr, align 4, !dbg !5393
  %add38 = add nsw i32 %33, 2, !dbg !5394
  %sub39 = sub nsw i32 %add38, 1, !dbg !5395
  %shr40 = ashr i32 %sub39, 1, !dbg !5396
  store i32 %shr40, i32* %h.addr, align 4, !dbg !5397
  store i32 0, i32* %y, align 4, !dbg !5398
  br label %for.cond, !dbg !5399

for.cond:                                         ; preds = %for.inc237, %entry
  %34 = load i32, i32* %y, align 4, !dbg !5400
  %35 = load i32, i32* %h.addr, align 4, !dbg !5402
  %cmp = icmp slt i32 %34, %35, !dbg !5403
  br i1 %cmp, label %for.body, label %for.end239, !dbg !5404

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !5405
  br label %for.cond42, !dbg !5406

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !5407
  %37 = load i32, i32* %w.addr, align 4, !dbg !5409
  %cmp43 = icmp slt i32 %36, %37, !dbg !5410
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !5411

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !5412, metadata !94), !dbg !5413
  %38 = load i32, i32* %x, align 4, !dbg !5414
  %shl = shl i32 %38, 1, !dbg !5415
  %idxprom = sext i32 %shl to i64, !dbg !5416
  %39 = load i16*, i16** %rgb0, align 8, !dbg !5416
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !5416
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !5416
  %conv47 = sext i16 %40 to i32, !dbg !5416
  store i32 %conv47, i32* %r00, align 4, !dbg !5413
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !5417, metadata !94), !dbg !5418
  %41 = load i32, i32* %x, align 4, !dbg !5419
  %shl48 = shl i32 %41, 1, !dbg !5420
  %idxprom49 = sext i32 %shl48 to i64, !dbg !5421
  %42 = load i16*, i16** %rgb1, align 8, !dbg !5421
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !5421
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !5421
  %conv51 = sext i16 %43 to i32, !dbg !5421
  store i32 %conv51, i32* %g00, align 4, !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !5422, metadata !94), !dbg !5423
  %44 = load i32, i32* %x, align 4, !dbg !5424
  %shl52 = shl i32 %44, 1, !dbg !5425
  %idxprom53 = sext i32 %shl52 to i64, !dbg !5426
  %45 = load i16*, i16** %rgb2, align 8, !dbg !5426
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !5426
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !5426
  %conv55 = sext i16 %46 to i32, !dbg !5426
  store i32 %conv55, i32* %b00, align 4, !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !5427, metadata !94), !dbg !5428
  %47 = load i32, i32* %x, align 4, !dbg !5429
  %mul = mul nsw i32 %47, 2, !dbg !5430
  %add56 = add nsw i32 %mul, 1, !dbg !5431
  %idxprom57 = sext i32 %add56 to i64, !dbg !5432
  %48 = load i16*, i16** %rgb0, align 8, !dbg !5432
  %arrayidx58 = getelementptr inbounds i16, i16* %48, i64 %idxprom57, !dbg !5432
  %49 = load i16, i16* %arrayidx58, align 2, !dbg !5432
  %conv59 = sext i16 %49 to i32, !dbg !5432
  store i32 %conv59, i32* %r01, align 4, !dbg !5428
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !5433, metadata !94), !dbg !5434
  %50 = load i32, i32* %x, align 4, !dbg !5435
  %mul60 = mul nsw i32 %50, 2, !dbg !5436
  %add61 = add nsw i32 %mul60, 1, !dbg !5437
  %idxprom62 = sext i32 %add61 to i64, !dbg !5438
  %51 = load i16*, i16** %rgb1, align 8, !dbg !5438
  %arrayidx63 = getelementptr inbounds i16, i16* %51, i64 %idxprom62, !dbg !5438
  %52 = load i16, i16* %arrayidx63, align 2, !dbg !5438
  %conv64 = sext i16 %52 to i32, !dbg !5438
  store i32 %conv64, i32* %g01, align 4, !dbg !5434
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !5439, metadata !94), !dbg !5440
  %53 = load i32, i32* %x, align 4, !dbg !5441
  %mul65 = mul nsw i32 %53, 2, !dbg !5442
  %add66 = add nsw i32 %mul65, 1, !dbg !5443
  %idxprom67 = sext i32 %add66 to i64, !dbg !5444
  %54 = load i16*, i16** %rgb2, align 8, !dbg !5444
  %arrayidx68 = getelementptr inbounds i16, i16* %54, i64 %idxprom67, !dbg !5444
  %55 = load i16, i16* %arrayidx68, align 2, !dbg !5444
  %conv69 = sext i16 %55 to i32, !dbg !5444
  store i32 %conv69, i32* %b01, align 4, !dbg !5440
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !5445, metadata !94), !dbg !5446
  %56 = load i32, i32* %x, align 4, !dbg !5447
  %mul70 = mul nsw i32 %56, 2, !dbg !5448
  %add71 = add nsw i32 %mul70, 0, !dbg !5449
  %conv72 = sext i32 %add71 to i64, !dbg !5447
  %57 = load i64, i64* %s.addr, align 8, !dbg !5450
  %add73 = add nsw i64 %conv72, %57, !dbg !5451
  %58 = load i16*, i16** %rgb0, align 8, !dbg !5452
  %arrayidx74 = getelementptr inbounds i16, i16* %58, i64 %add73, !dbg !5452
  %59 = load i16, i16* %arrayidx74, align 2, !dbg !5452
  %conv75 = sext i16 %59 to i32, !dbg !5452
  store i32 %conv75, i32* %r10, align 4, !dbg !5446
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !5453, metadata !94), !dbg !5454
  %60 = load i32, i32* %x, align 4, !dbg !5455
  %mul76 = mul nsw i32 %60, 2, !dbg !5456
  %add77 = add nsw i32 %mul76, 0, !dbg !5457
  %conv78 = sext i32 %add77 to i64, !dbg !5455
  %61 = load i64, i64* %s.addr, align 8, !dbg !5458
  %add79 = add nsw i64 %conv78, %61, !dbg !5459
  %62 = load i16*, i16** %rgb1, align 8, !dbg !5460
  %arrayidx80 = getelementptr inbounds i16, i16* %62, i64 %add79, !dbg !5460
  %63 = load i16, i16* %arrayidx80, align 2, !dbg !5460
  %conv81 = sext i16 %63 to i32, !dbg !5460
  store i32 %conv81, i32* %g10, align 4, !dbg !5454
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !5461, metadata !94), !dbg !5462
  %64 = load i32, i32* %x, align 4, !dbg !5463
  %mul82 = mul nsw i32 %64, 2, !dbg !5464
  %add83 = add nsw i32 %mul82, 0, !dbg !5465
  %conv84 = sext i32 %add83 to i64, !dbg !5463
  %65 = load i64, i64* %s.addr, align 8, !dbg !5466
  %add85 = add nsw i64 %conv84, %65, !dbg !5467
  %66 = load i16*, i16** %rgb2, align 8, !dbg !5468
  %arrayidx86 = getelementptr inbounds i16, i16* %66, i64 %add85, !dbg !5468
  %67 = load i16, i16* %arrayidx86, align 2, !dbg !5468
  %conv87 = sext i16 %67 to i32, !dbg !5468
  store i32 %conv87, i32* %b10, align 4, !dbg !5462
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !5469, metadata !94), !dbg !5470
  %68 = load i32, i32* %x, align 4, !dbg !5471
  %mul88 = mul nsw i32 %68, 2, !dbg !5472
  %add89 = add nsw i32 %mul88, 1, !dbg !5473
  %conv90 = sext i32 %add89 to i64, !dbg !5471
  %69 = load i64, i64* %s.addr, align 8, !dbg !5474
  %add91 = add nsw i64 %conv90, %69, !dbg !5475
  %70 = load i16*, i16** %rgb0, align 8, !dbg !5476
  %arrayidx92 = getelementptr inbounds i16, i16* %70, i64 %add91, !dbg !5476
  %71 = load i16, i16* %arrayidx92, align 2, !dbg !5476
  %conv93 = sext i16 %71 to i32, !dbg !5476
  store i32 %conv93, i32* %r11, align 4, !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !5477, metadata !94), !dbg !5478
  %72 = load i32, i32* %x, align 4, !dbg !5479
  %mul94 = mul nsw i32 %72, 2, !dbg !5480
  %add95 = add nsw i32 %mul94, 1, !dbg !5481
  %conv96 = sext i32 %add95 to i64, !dbg !5479
  %73 = load i64, i64* %s.addr, align 8, !dbg !5482
  %add97 = add nsw i64 %conv96, %73, !dbg !5483
  %74 = load i16*, i16** %rgb1, align 8, !dbg !5484
  %arrayidx98 = getelementptr inbounds i16, i16* %74, i64 %add97, !dbg !5484
  %75 = load i16, i16* %arrayidx98, align 2, !dbg !5484
  %conv99 = sext i16 %75 to i32, !dbg !5484
  store i32 %conv99, i32* %g11, align 4, !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !5485, metadata !94), !dbg !5486
  %76 = load i32, i32* %x, align 4, !dbg !5487
  %mul100 = mul nsw i32 %76, 2, !dbg !5488
  %add101 = add nsw i32 %mul100, 1, !dbg !5489
  %conv102 = sext i32 %add101 to i64, !dbg !5487
  %77 = load i64, i64* %s.addr, align 8, !dbg !5490
  %add103 = add nsw i64 %conv102, %77, !dbg !5491
  %78 = load i16*, i16** %rgb2, align 8, !dbg !5492
  %arrayidx104 = getelementptr inbounds i16, i16* %78, i64 %add103, !dbg !5492
  %79 = load i16, i16* %arrayidx104, align 2, !dbg !5492
  %conv105 = sext i16 %79 to i32, !dbg !5492
  store i32 %conv105, i32* %b11, align 4, !dbg !5486
  %80 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5493
  %arrayidx106 = getelementptr inbounds i16, i16* %80, i64 0, !dbg !5493
  %81 = load i16, i16* %arrayidx106, align 2, !dbg !5493
  %conv107 = sext i16 %81 to i32, !dbg !5493
  %82 = load i32, i32* %r00, align 4, !dbg !5494
  %83 = load i32, i32* %cry, align 4, !dbg !5495
  %mul108 = mul nsw i32 %82, %83, !dbg !5496
  %84 = load i32, i32* %g00, align 4, !dbg !5497
  %85 = load i32, i32* %cgy, align 4, !dbg !5498
  %mul109 = mul nsw i32 %84, %85, !dbg !5499
  %add110 = add nsw i32 %mul108, %mul109, !dbg !5500
  %86 = load i32, i32* %b00, align 4, !dbg !5501
  %87 = load i32, i32* %cby, align 4, !dbg !5502
  %mul111 = mul nsw i32 %86, %87, !dbg !5503
  %add112 = add nsw i32 %add110, %mul111, !dbg !5504
  %add113 = add nsw i32 %add112, 262144, !dbg !5505
  %shr114 = ashr i32 %add113, 19, !dbg !5506
  %add115 = add nsw i32 %conv107, %shr114, !dbg !5507
  store i32 %add115, i32* %a.addr.i, align 4, !dbg !5508
  store i32 10, i32* %p.addr.i, align 4, !dbg !5508
  %88 = load i32, i32* %a.addr.i, align 4, !dbg !5509
  %89 = load i32, i32* %p.addr.i, align 4, !dbg !5510
  %shl.i = shl i32 1, %89, !dbg !5511
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5512
  %neg.i = xor i32 %sub.i, -1, !dbg !5513
  %and.i = and i32 %88, %neg.i, !dbg !5514
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5514
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5515

if.then.i:                                        ; preds = %for.body45
  %90 = load i32, i32* %a.addr.i, align 4, !dbg !5516
  %neg1.i = xor i32 %90, -1, !dbg !5517
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5518
  %91 = load i32, i32* %p.addr.i, align 4, !dbg !5519
  %shl2.i = shl i32 1, %91, !dbg !5520
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5521
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5522
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5523
  br label %av_clip_uintp2_c.exit, !dbg !5523

if.else.i:                                        ; preds = %for.body45
  %92 = load i32, i32* %a.addr.i, align 4, !dbg !5524
  store i32 %92, i32* %retval.i, align 4, !dbg !5525
  br label %av_clip_uintp2_c.exit, !dbg !5525

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %93 = load i32, i32* %retval.i, align 4, !dbg !5526
  %conv116 = trunc i32 %93 to i16, !dbg !5508
  %94 = load i32, i32* %x, align 4, !dbg !5527
  %shl117 = shl i32 %94, 1, !dbg !5528
  %idxprom118 = sext i32 %shl117 to i64, !dbg !5529
  %95 = load i16*, i16** %yuv0, align 8, !dbg !5529
  %arrayidx119 = getelementptr inbounds i16, i16* %95, i64 %idxprom118, !dbg !5529
  store i16 %conv116, i16* %arrayidx119, align 2, !dbg !5530
  %96 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5531
  %arrayidx120 = getelementptr inbounds i16, i16* %96, i64 0, !dbg !5531
  %97 = load i16, i16* %arrayidx120, align 2, !dbg !5531
  %conv121 = sext i16 %97 to i32, !dbg !5531
  %98 = load i32, i32* %r01, align 4, !dbg !5532
  %99 = load i32, i32* %cry, align 4, !dbg !5533
  %mul122 = mul nsw i32 %98, %99, !dbg !5534
  %100 = load i32, i32* %g01, align 4, !dbg !5535
  %101 = load i32, i32* %cgy, align 4, !dbg !5536
  %mul123 = mul nsw i32 %100, %101, !dbg !5537
  %add124 = add nsw i32 %mul122, %mul123, !dbg !5538
  %102 = load i32, i32* %b01, align 4, !dbg !5539
  %103 = load i32, i32* %cby, align 4, !dbg !5540
  %mul125 = mul nsw i32 %102, %103, !dbg !5541
  %add126 = add nsw i32 %add124, %mul125, !dbg !5542
  %add127 = add nsw i32 %add126, 262144, !dbg !5543
  %shr128 = ashr i32 %add127, 19, !dbg !5544
  %add129 = add nsw i32 %conv121, %shr128, !dbg !5545
  store i32 %add129, i32* %a.addr.i305, align 4, !dbg !5546
  store i32 10, i32* %p.addr.i306, align 4, !dbg !5546
  %104 = load i32, i32* %a.addr.i305, align 4, !dbg !5547
  %105 = load i32, i32* %p.addr.i306, align 4, !dbg !5548
  %shl.i307 = shl i32 1, %105, !dbg !5549
  %sub.i308 = sub nsw i32 %shl.i307, 1, !dbg !5550
  %neg.i309 = xor i32 %sub.i308, -1, !dbg !5551
  %and.i310 = and i32 %104, %neg.i309, !dbg !5552
  %tobool.i311 = icmp ne i32 %and.i310, 0, !dbg !5552
  br i1 %tobool.i311, label %if.then.i317, label %if.else.i318, !dbg !5553

if.then.i317:                                     ; preds = %av_clip_uintp2_c.exit
  %106 = load i32, i32* %a.addr.i305, align 4, !dbg !5554
  %neg1.i312 = xor i32 %106, -1, !dbg !5555
  %shr.i313 = ashr i32 %neg1.i312, 31, !dbg !5556
  %107 = load i32, i32* %p.addr.i306, align 4, !dbg !5557
  %shl2.i314 = shl i32 1, %107, !dbg !5558
  %sub3.i315 = sub nsw i32 %shl2.i314, 1, !dbg !5559
  %and4.i316 = and i32 %shr.i313, %sub3.i315, !dbg !5560
  store i32 %and4.i316, i32* %retval.i304, align 4, !dbg !5561
  br label %av_clip_uintp2_c.exit319, !dbg !5561

if.else.i318:                                     ; preds = %av_clip_uintp2_c.exit
  %108 = load i32, i32* %a.addr.i305, align 4, !dbg !5562
  store i32 %108, i32* %retval.i304, align 4, !dbg !5563
  br label %av_clip_uintp2_c.exit319, !dbg !5563

av_clip_uintp2_c.exit319:                         ; preds = %if.then.i317, %if.else.i318
  %109 = load i32, i32* %retval.i304, align 4, !dbg !5564
  %conv131 = trunc i32 %109 to i16, !dbg !5546
  %110 = load i32, i32* %x, align 4, !dbg !5565
  %mul132 = mul nsw i32 %110, 2, !dbg !5566
  %add133 = add nsw i32 %mul132, 1, !dbg !5567
  %idxprom134 = sext i32 %add133 to i64, !dbg !5568
  %111 = load i16*, i16** %yuv0, align 8, !dbg !5568
  %arrayidx135 = getelementptr inbounds i16, i16* %111, i64 %idxprom134, !dbg !5568
  store i16 %conv131, i16* %arrayidx135, align 2, !dbg !5569
  %112 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5570
  %arrayidx136 = getelementptr inbounds i16, i16* %112, i64 0, !dbg !5570
  %113 = load i16, i16* %arrayidx136, align 2, !dbg !5570
  %conv137 = sext i16 %113 to i32, !dbg !5570
  %114 = load i32, i32* %r10, align 4, !dbg !5571
  %115 = load i32, i32* %cry, align 4, !dbg !5572
  %mul138 = mul nsw i32 %114, %115, !dbg !5573
  %116 = load i32, i32* %g10, align 4, !dbg !5574
  %117 = load i32, i32* %cgy, align 4, !dbg !5575
  %mul139 = mul nsw i32 %116, %117, !dbg !5576
  %add140 = add nsw i32 %mul138, %mul139, !dbg !5577
  %118 = load i32, i32* %b10, align 4, !dbg !5578
  %119 = load i32, i32* %cby, align 4, !dbg !5579
  %mul141 = mul nsw i32 %118, %119, !dbg !5580
  %add142 = add nsw i32 %add140, %mul141, !dbg !5581
  %add143 = add nsw i32 %add142, 262144, !dbg !5582
  %shr144 = ashr i32 %add143, 19, !dbg !5583
  %add145 = add nsw i32 %conv137, %shr144, !dbg !5584
  store i32 %add145, i32* %a.addr.i289, align 4, !dbg !5585
  store i32 10, i32* %p.addr.i290, align 4, !dbg !5585
  %120 = load i32, i32* %a.addr.i289, align 4, !dbg !5586
  %121 = load i32, i32* %p.addr.i290, align 4, !dbg !5587
  %shl.i291 = shl i32 1, %121, !dbg !5588
  %sub.i292 = sub nsw i32 %shl.i291, 1, !dbg !5589
  %neg.i293 = xor i32 %sub.i292, -1, !dbg !5590
  %and.i294 = and i32 %120, %neg.i293, !dbg !5591
  %tobool.i295 = icmp ne i32 %and.i294, 0, !dbg !5591
  br i1 %tobool.i295, label %if.then.i301, label %if.else.i302, !dbg !5592

if.then.i301:                                     ; preds = %av_clip_uintp2_c.exit319
  %122 = load i32, i32* %a.addr.i289, align 4, !dbg !5593
  %neg1.i296 = xor i32 %122, -1, !dbg !5594
  %shr.i297 = ashr i32 %neg1.i296, 31, !dbg !5595
  %123 = load i32, i32* %p.addr.i290, align 4, !dbg !5596
  %shl2.i298 = shl i32 1, %123, !dbg !5597
  %sub3.i299 = sub nsw i32 %shl2.i298, 1, !dbg !5598
  %and4.i300 = and i32 %shr.i297, %sub3.i299, !dbg !5599
  store i32 %and4.i300, i32* %retval.i288, align 4, !dbg !5600
  br label %av_clip_uintp2_c.exit303, !dbg !5600

if.else.i302:                                     ; preds = %av_clip_uintp2_c.exit319
  %124 = load i32, i32* %a.addr.i289, align 4, !dbg !5601
  store i32 %124, i32* %retval.i288, align 4, !dbg !5602
  br label %av_clip_uintp2_c.exit303, !dbg !5602

av_clip_uintp2_c.exit303:                         ; preds = %if.then.i301, %if.else.i302
  %125 = load i32, i32* %retval.i288, align 4, !dbg !5603
  %conv147 = trunc i32 %125 to i16, !dbg !5585
  %126 = load i32, i32* %x, align 4, !dbg !5604
  %mul148 = mul nsw i32 %126, 2, !dbg !5605
  %add149 = add nsw i32 %mul148, 0, !dbg !5606
  %conv150 = sext i32 %add149 to i64, !dbg !5604
  %127 = load i64, i64* %s0, align 8, !dbg !5607
  %add151 = add nsw i64 %conv150, %127, !dbg !5608
  %128 = load i16*, i16** %yuv0, align 8, !dbg !5609
  %arrayidx152 = getelementptr inbounds i16, i16* %128, i64 %add151, !dbg !5609
  store i16 %conv147, i16* %arrayidx152, align 2, !dbg !5610
  %129 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5611
  %arrayidx153 = getelementptr inbounds i16, i16* %129, i64 0, !dbg !5611
  %130 = load i16, i16* %arrayidx153, align 2, !dbg !5611
  %conv154 = sext i16 %130 to i32, !dbg !5611
  %131 = load i32, i32* %r11, align 4, !dbg !5612
  %132 = load i32, i32* %cry, align 4, !dbg !5613
  %mul155 = mul nsw i32 %131, %132, !dbg !5614
  %133 = load i32, i32* %g11, align 4, !dbg !5615
  %134 = load i32, i32* %cgy, align 4, !dbg !5616
  %mul156 = mul nsw i32 %133, %134, !dbg !5617
  %add157 = add nsw i32 %mul155, %mul156, !dbg !5618
  %135 = load i32, i32* %b11, align 4, !dbg !5619
  %136 = load i32, i32* %cby, align 4, !dbg !5620
  %mul158 = mul nsw i32 %135, %136, !dbg !5621
  %add159 = add nsw i32 %add157, %mul158, !dbg !5622
  %add160 = add nsw i32 %add159, 262144, !dbg !5623
  %shr161 = ashr i32 %add160, 19, !dbg !5624
  %add162 = add nsw i32 %conv154, %shr161, !dbg !5625
  store i32 %add162, i32* %a.addr.i273, align 4, !dbg !5626
  store i32 10, i32* %p.addr.i274, align 4, !dbg !5626
  %137 = load i32, i32* %a.addr.i273, align 4, !dbg !5627
  %138 = load i32, i32* %p.addr.i274, align 4, !dbg !5628
  %shl.i275 = shl i32 1, %138, !dbg !5629
  %sub.i276 = sub nsw i32 %shl.i275, 1, !dbg !5630
  %neg.i277 = xor i32 %sub.i276, -1, !dbg !5631
  %and.i278 = and i32 %137, %neg.i277, !dbg !5632
  %tobool.i279 = icmp ne i32 %and.i278, 0, !dbg !5632
  br i1 %tobool.i279, label %if.then.i285, label %if.else.i286, !dbg !5633

if.then.i285:                                     ; preds = %av_clip_uintp2_c.exit303
  %139 = load i32, i32* %a.addr.i273, align 4, !dbg !5634
  %neg1.i280 = xor i32 %139, -1, !dbg !5635
  %shr.i281 = ashr i32 %neg1.i280, 31, !dbg !5636
  %140 = load i32, i32* %p.addr.i274, align 4, !dbg !5637
  %shl2.i282 = shl i32 1, %140, !dbg !5638
  %sub3.i283 = sub nsw i32 %shl2.i282, 1, !dbg !5639
  %and4.i284 = and i32 %shr.i281, %sub3.i283, !dbg !5640
  store i32 %and4.i284, i32* %retval.i272, align 4, !dbg !5641
  br label %av_clip_uintp2_c.exit287, !dbg !5641

if.else.i286:                                     ; preds = %av_clip_uintp2_c.exit303
  %141 = load i32, i32* %a.addr.i273, align 4, !dbg !5642
  store i32 %141, i32* %retval.i272, align 4, !dbg !5643
  br label %av_clip_uintp2_c.exit287, !dbg !5643

av_clip_uintp2_c.exit287:                         ; preds = %if.then.i285, %if.else.i286
  %142 = load i32, i32* %retval.i272, align 4, !dbg !5644
  %conv164 = trunc i32 %142 to i16, !dbg !5626
  %143 = load i32, i32* %x, align 4, !dbg !5645
  %mul165 = mul nsw i32 %143, 2, !dbg !5646
  %add166 = add nsw i32 %mul165, 1, !dbg !5647
  %conv167 = sext i32 %add166 to i64, !dbg !5645
  %144 = load i64, i64* %s0, align 8, !dbg !5648
  %add168 = add nsw i64 %conv167, %144, !dbg !5649
  %145 = load i16*, i16** %yuv0, align 8, !dbg !5650
  %arrayidx169 = getelementptr inbounds i16, i16* %145, i64 %add168, !dbg !5650
  store i16 %conv164, i16* %arrayidx169, align 2, !dbg !5651
  %146 = load i32, i32* %r00, align 4, !dbg !5652
  %147 = load i32, i32* %r01, align 4, !dbg !5653
  %add170 = add nsw i32 %146, %147, !dbg !5654
  %148 = load i32, i32* %r10, align 4, !dbg !5655
  %add171 = add nsw i32 %add170, %148, !dbg !5656
  %149 = load i32, i32* %r11, align 4, !dbg !5657
  %add172 = add nsw i32 %add171, %149, !dbg !5658
  %add173 = add nsw i32 %add172, 2, !dbg !5659
  %shr174 = ashr i32 %add173, 2, !dbg !5660
  %150 = load i32, i32* %cru, align 4, !dbg !5661
  %mul175 = mul nsw i32 %shr174, %150, !dbg !5662
  %151 = load i32, i32* %g00, align 4, !dbg !5663
  %152 = load i32, i32* %g01, align 4, !dbg !5664
  %add176 = add nsw i32 %151, %152, !dbg !5665
  %153 = load i32, i32* %g10, align 4, !dbg !5666
  %add177 = add nsw i32 %add176, %153, !dbg !5667
  %154 = load i32, i32* %g11, align 4, !dbg !5668
  %add178 = add nsw i32 %add177, %154, !dbg !5669
  %add179 = add nsw i32 %add178, 2, !dbg !5670
  %shr180 = ashr i32 %add179, 2, !dbg !5671
  %155 = load i32, i32* %cgu, align 4, !dbg !5672
  %mul181 = mul nsw i32 %shr180, %155, !dbg !5673
  %add182 = add nsw i32 %mul175, %mul181, !dbg !5674
  %156 = load i32, i32* %b00, align 4, !dbg !5675
  %157 = load i32, i32* %b01, align 4, !dbg !5676
  %add183 = add nsw i32 %156, %157, !dbg !5677
  %158 = load i32, i32* %b10, align 4, !dbg !5678
  %add184 = add nsw i32 %add183, %158, !dbg !5679
  %159 = load i32, i32* %b11, align 4, !dbg !5680
  %add185 = add nsw i32 %add184, %159, !dbg !5681
  %add186 = add nsw i32 %add185, 2, !dbg !5682
  %shr187 = ashr i32 %add186, 2, !dbg !5683
  %160 = load i32, i32* %cburv, align 4, !dbg !5684
  %mul188 = mul nsw i32 %shr187, %160, !dbg !5685
  %add189 = add nsw i32 %add182, %mul188, !dbg !5686
  %add190 = add nsw i32 %add189, 262144, !dbg !5687
  %shr191 = ashr i32 %add190, 19, !dbg !5688
  %add192 = add nsw i32 512, %shr191, !dbg !5689
  store i32 %add192, i32* %a.addr.i257, align 4, !dbg !5690
  store i32 10, i32* %p.addr.i258, align 4, !dbg !5690
  %161 = load i32, i32* %a.addr.i257, align 4, !dbg !5691
  %162 = load i32, i32* %p.addr.i258, align 4, !dbg !5692
  %shl.i259 = shl i32 1, %162, !dbg !5693
  %sub.i260 = sub nsw i32 %shl.i259, 1, !dbg !5694
  %neg.i261 = xor i32 %sub.i260, -1, !dbg !5695
  %and.i262 = and i32 %161, %neg.i261, !dbg !5696
  %tobool.i263 = icmp ne i32 %and.i262, 0, !dbg !5696
  br i1 %tobool.i263, label %if.then.i269, label %if.else.i270, !dbg !5697

if.then.i269:                                     ; preds = %av_clip_uintp2_c.exit287
  %163 = load i32, i32* %a.addr.i257, align 4, !dbg !5698
  %neg1.i264 = xor i32 %163, -1, !dbg !5699
  %shr.i265 = ashr i32 %neg1.i264, 31, !dbg !5700
  %164 = load i32, i32* %p.addr.i258, align 4, !dbg !5701
  %shl2.i266 = shl i32 1, %164, !dbg !5702
  %sub3.i267 = sub nsw i32 %shl2.i266, 1, !dbg !5703
  %and4.i268 = and i32 %shr.i265, %sub3.i267, !dbg !5704
  store i32 %and4.i268, i32* %retval.i256, align 4, !dbg !5705
  br label %av_clip_uintp2_c.exit271, !dbg !5705

if.else.i270:                                     ; preds = %av_clip_uintp2_c.exit287
  %165 = load i32, i32* %a.addr.i257, align 4, !dbg !5706
  store i32 %165, i32* %retval.i256, align 4, !dbg !5707
  br label %av_clip_uintp2_c.exit271, !dbg !5707

av_clip_uintp2_c.exit271:                         ; preds = %if.then.i269, %if.else.i270
  %166 = load i32, i32* %retval.i256, align 4, !dbg !5708
  %conv194 = trunc i32 %166 to i16, !dbg !5690
  %167 = load i32, i32* %x, align 4, !dbg !5709
  %idxprom195 = sext i32 %167 to i64, !dbg !5710
  %168 = load i16*, i16** %yuv1, align 8, !dbg !5710
  %arrayidx196 = getelementptr inbounds i16, i16* %168, i64 %idxprom195, !dbg !5710
  store i16 %conv194, i16* %arrayidx196, align 2, !dbg !5711
  %169 = load i32, i32* %r00, align 4, !dbg !5712
  %170 = load i32, i32* %r01, align 4, !dbg !5713
  %add197 = add nsw i32 %169, %170, !dbg !5714
  %171 = load i32, i32* %r10, align 4, !dbg !5715
  %add198 = add nsw i32 %add197, %171, !dbg !5716
  %172 = load i32, i32* %r11, align 4, !dbg !5717
  %add199 = add nsw i32 %add198, %172, !dbg !5718
  %add200 = add nsw i32 %add199, 2, !dbg !5719
  %shr201 = ashr i32 %add200, 2, !dbg !5720
  %173 = load i32, i32* %cburv, align 4, !dbg !5721
  %mul202 = mul nsw i32 %shr201, %173, !dbg !5722
  %174 = load i32, i32* %g00, align 4, !dbg !5723
  %175 = load i32, i32* %g01, align 4, !dbg !5724
  %add203 = add nsw i32 %174, %175, !dbg !5725
  %176 = load i32, i32* %g10, align 4, !dbg !5726
  %add204 = add nsw i32 %add203, %176, !dbg !5727
  %177 = load i32, i32* %g11, align 4, !dbg !5728
  %add205 = add nsw i32 %add204, %177, !dbg !5729
  %add206 = add nsw i32 %add205, 2, !dbg !5730
  %shr207 = ashr i32 %add206, 2, !dbg !5731
  %178 = load i32, i32* %cgv, align 4, !dbg !5732
  %mul208 = mul nsw i32 %shr207, %178, !dbg !5733
  %add209 = add nsw i32 %mul202, %mul208, !dbg !5734
  %179 = load i32, i32* %b00, align 4, !dbg !5735
  %180 = load i32, i32* %b01, align 4, !dbg !5736
  %add210 = add nsw i32 %179, %180, !dbg !5737
  %181 = load i32, i32* %b10, align 4, !dbg !5738
  %add211 = add nsw i32 %add210, %181, !dbg !5739
  %182 = load i32, i32* %b11, align 4, !dbg !5740
  %add212 = add nsw i32 %add211, %182, !dbg !5741
  %add213 = add nsw i32 %add212, 2, !dbg !5742
  %shr214 = ashr i32 %add213, 2, !dbg !5743
  %183 = load i32, i32* %cbv, align 4, !dbg !5744
  %mul215 = mul nsw i32 %shr214, %183, !dbg !5745
  %add216 = add nsw i32 %add209, %mul215, !dbg !5746
  %add217 = add nsw i32 %add216, 262144, !dbg !5747
  %shr218 = ashr i32 %add217, 19, !dbg !5748
  %add219 = add nsw i32 512, %shr218, !dbg !5749
  store i32 %add219, i32* %a.addr.i241, align 4, !dbg !5750
  store i32 10, i32* %p.addr.i242, align 4, !dbg !5750
  %184 = load i32, i32* %a.addr.i241, align 4, !dbg !5751
  %185 = load i32, i32* %p.addr.i242, align 4, !dbg !5752
  %shl.i243 = shl i32 1, %185, !dbg !5753
  %sub.i244 = sub nsw i32 %shl.i243, 1, !dbg !5754
  %neg.i245 = xor i32 %sub.i244, -1, !dbg !5755
  %and.i246 = and i32 %184, %neg.i245, !dbg !5756
  %tobool.i247 = icmp ne i32 %and.i246, 0, !dbg !5756
  br i1 %tobool.i247, label %if.then.i253, label %if.else.i254, !dbg !5757

if.then.i253:                                     ; preds = %av_clip_uintp2_c.exit271
  %186 = load i32, i32* %a.addr.i241, align 4, !dbg !5758
  %neg1.i248 = xor i32 %186, -1, !dbg !5759
  %shr.i249 = ashr i32 %neg1.i248, 31, !dbg !5760
  %187 = load i32, i32* %p.addr.i242, align 4, !dbg !5761
  %shl2.i250 = shl i32 1, %187, !dbg !5762
  %sub3.i251 = sub nsw i32 %shl2.i250, 1, !dbg !5763
  %and4.i252 = and i32 %shr.i249, %sub3.i251, !dbg !5764
  store i32 %and4.i252, i32* %retval.i240, align 4, !dbg !5765
  br label %av_clip_uintp2_c.exit255, !dbg !5765

if.else.i254:                                     ; preds = %av_clip_uintp2_c.exit271
  %188 = load i32, i32* %a.addr.i241, align 4, !dbg !5766
  store i32 %188, i32* %retval.i240, align 4, !dbg !5767
  br label %av_clip_uintp2_c.exit255, !dbg !5767

av_clip_uintp2_c.exit255:                         ; preds = %if.then.i253, %if.else.i254
  %189 = load i32, i32* %retval.i240, align 4, !dbg !5768
  %conv221 = trunc i32 %189 to i16, !dbg !5750
  %190 = load i32, i32* %x, align 4, !dbg !5769
  %idxprom222 = sext i32 %190 to i64, !dbg !5770
  %191 = load i16*, i16** %yuv2, align 8, !dbg !5770
  %arrayidx223 = getelementptr inbounds i16, i16* %191, i64 %idxprom222, !dbg !5770
  store i16 %conv221, i16* %arrayidx223, align 2, !dbg !5771
  br label %for.inc, !dbg !5772

for.inc:                                          ; preds = %av_clip_uintp2_c.exit255
  %192 = load i32, i32* %x, align 4, !dbg !5773
  %inc = add nsw i32 %192, 1, !dbg !5773
  store i32 %inc, i32* %x, align 4, !dbg !5773
  br label %for.cond42, !dbg !5775, !llvm.loop !5776

for.end:                                          ; preds = %for.cond42
  %193 = load i64, i64* %s0, align 8, !dbg !5778
  %mul224 = mul nsw i64 %193, 2, !dbg !5779
  %194 = load i16*, i16** %yuv0, align 8, !dbg !5780
  %add.ptr = getelementptr inbounds i16, i16* %194, i64 %mul224, !dbg !5780
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !5780
  %195 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5781
  %arrayidx225 = getelementptr inbounds i64, i64* %195, i64 1, !dbg !5781
  %196 = load i64, i64* %arrayidx225, align 8, !dbg !5781
  %div226 = udiv i64 %196, 2, !dbg !5782
  %197 = load i16*, i16** %yuv1, align 8, !dbg !5783
  %add.ptr227 = getelementptr inbounds i16, i16* %197, i64 %div226, !dbg !5783
  store i16* %add.ptr227, i16** %yuv1, align 8, !dbg !5783
  %198 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5784
  %arrayidx228 = getelementptr inbounds i64, i64* %198, i64 2, !dbg !5784
  %199 = load i64, i64* %arrayidx228, align 8, !dbg !5784
  %div229 = udiv i64 %199, 2, !dbg !5785
  %200 = load i16*, i16** %yuv2, align 8, !dbg !5786
  %add.ptr230 = getelementptr inbounds i16, i16* %200, i64 %div229, !dbg !5786
  store i16* %add.ptr230, i16** %yuv2, align 8, !dbg !5786
  %201 = load i64, i64* %s.addr, align 8, !dbg !5787
  %mul231 = mul nsw i64 %201, 2, !dbg !5788
  %202 = load i16*, i16** %rgb0, align 8, !dbg !5789
  %add.ptr232 = getelementptr inbounds i16, i16* %202, i64 %mul231, !dbg !5789
  store i16* %add.ptr232, i16** %rgb0, align 8, !dbg !5789
  %203 = load i64, i64* %s.addr, align 8, !dbg !5790
  %mul233 = mul nsw i64 %203, 2, !dbg !5791
  %204 = load i16*, i16** %rgb1, align 8, !dbg !5792
  %add.ptr234 = getelementptr inbounds i16, i16* %204, i64 %mul233, !dbg !5792
  store i16* %add.ptr234, i16** %rgb1, align 8, !dbg !5792
  %205 = load i64, i64* %s.addr, align 8, !dbg !5793
  %mul235 = mul nsw i64 %205, 2, !dbg !5794
  %206 = load i16*, i16** %rgb2, align 8, !dbg !5795
  %add.ptr236 = getelementptr inbounds i16, i16* %206, i64 %mul235, !dbg !5795
  store i16* %add.ptr236, i16** %rgb2, align 8, !dbg !5795
  br label %for.inc237, !dbg !5796

for.inc237:                                       ; preds = %for.end
  %207 = load i32, i32* %y, align 4, !dbg !5797
  %inc238 = add nsw i32 %207, 1, !dbg !5797
  store i32 %inc238, i32* %y, align 4, !dbg !5797
  br label %for.cond, !dbg !5799, !llvm.loop !5800

for.end239:                                       ; preds = %for.cond
  ret void, !dbg !5802
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_444p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !5803 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !5804
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !5812
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !5813
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !5815
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !5816
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !5818
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !5819, metadata !94), !dbg !5820
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !5821, metadata !94), !dbg !5822
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !5823, metadata !94), !dbg !5824
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5825, metadata !94), !dbg !5826
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5827, metadata !94), !dbg !5828
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5829, metadata !94), !dbg !5830
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !5831, metadata !94), !dbg !5832
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !5833, metadata !94), !dbg !5834
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !5835, metadata !94), !dbg !5836
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !5837
  %1 = bitcast i8** %0 to i16**, !dbg !5838
  store i16** %1, i16*** %yuv, align 8, !dbg !5836
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !5839, metadata !94), !dbg !5840
  %2 = load i16**, i16*** %yuv, align 8, !dbg !5841
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !5841
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !5841
  store i16* %3, i16** %yuv0, align 8, !dbg !5840
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !5842, metadata !94), !dbg !5843
  %4 = load i16**, i16*** %yuv, align 8, !dbg !5844
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !5844
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !5844
  store i16* %5, i16** %yuv1, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !5845, metadata !94), !dbg !5846
  %6 = load i16**, i16*** %yuv, align 8, !dbg !5847
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !5847
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !5847
  store i16* %7, i16** %yuv2, align 8, !dbg !5846
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !5848, metadata !94), !dbg !5849
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !5850
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !5850
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !5850
  store i16* %9, i16** %rgb0, align 8, !dbg !5849
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !5851, metadata !94), !dbg !5852
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !5853
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !5853
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !5853
  store i16* %11, i16** %rgb1, align 8, !dbg !5852
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !5854, metadata !94), !dbg !5855
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !5856
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !5856
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !5856
  store i16* %13, i16** %rgb2, align 8, !dbg !5855
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5857, metadata !94), !dbg !5858
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5859, metadata !94), !dbg !5860
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !5861, metadata !94), !dbg !5862
  store i32 17, i32* %sh, align 4, !dbg !5862
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !5863, metadata !94), !dbg !5864
  store i32 65536, i32* %rnd, align 4, !dbg !5864
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !5865, metadata !94), !dbg !5866
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5867
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !5867
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !5867
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !5867
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !5867
  %conv = sext i16 %15 to i32, !dbg !5867
  store i32 %conv, i32* %cry, align 4, !dbg !5866
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !5868, metadata !94), !dbg !5869
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5870
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !5870
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !5870
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !5870
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !5870
  %conv12 = sext i16 %17 to i32, !dbg !5870
  store i32 %conv12, i32* %cgy, align 4, !dbg !5869
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !5871, metadata !94), !dbg !5872
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5873
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !5873
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !5873
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !5873
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !5873
  %conv16 = sext i16 %19 to i32, !dbg !5873
  store i32 %conv16, i32* %cby, align 4, !dbg !5872
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !5874, metadata !94), !dbg !5875
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5876
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !5876
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !5876
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !5876
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !5876
  %conv20 = sext i16 %21 to i32, !dbg !5876
  store i32 %conv20, i32* %cru, align 4, !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !5877, metadata !94), !dbg !5878
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5879
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !5879
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !5879
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !5879
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !5879
  %conv24 = sext i16 %23 to i32, !dbg !5879
  store i32 %conv24, i32* %cgu, align 4, !dbg !5878
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !5880, metadata !94), !dbg !5881
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5882
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !5882
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !5882
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !5882
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !5882
  %conv28 = sext i16 %25 to i32, !dbg !5882
  store i32 %conv28, i32* %cburv, align 4, !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !5883, metadata !94), !dbg !5884
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5885
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !5885
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !5885
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !5885
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !5885
  %conv32 = sext i16 %27 to i32, !dbg !5885
  store i32 %conv32, i32* %cgv, align 4, !dbg !5884
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !5886, metadata !94), !dbg !5887
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !5888
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !5888
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !5888
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !5888
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !5888
  %conv36 = sext i16 %29 to i32, !dbg !5888
  store i32 %conv36, i32* %cbv, align 4, !dbg !5887
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !5889, metadata !94), !dbg !5890
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !5891
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !5891
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !5891
  %div = udiv i64 %31, 2, !dbg !5892
  store i64 %div, i64* %s0, align 8, !dbg !5890
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !5893, metadata !94), !dbg !5894
  store i32 2048, i32* %uv_offset, align 4, !dbg !5894
  %32 = load i32, i32* %w.addr, align 4, !dbg !5895
  %add = add nsw i32 %32, 1, !dbg !5896
  %sub = sub nsw i32 %add, 1, !dbg !5897
  %shr = ashr i32 %sub, 0, !dbg !5898
  store i32 %shr, i32* %w.addr, align 4, !dbg !5899
  %33 = load i32, i32* %h.addr, align 4, !dbg !5900
  %add38 = add nsw i32 %33, 1, !dbg !5901
  %sub39 = sub nsw i32 %add38, 1, !dbg !5902
  %shr40 = ashr i32 %sub39, 0, !dbg !5903
  store i32 %shr40, i32* %h.addr, align 4, !dbg !5904
  store i32 0, i32* %y, align 4, !dbg !5905
  br label %for.cond, !dbg !5906

for.cond:                                         ; preds = %for.inc106, %entry
  %34 = load i32, i32* %y, align 4, !dbg !5907
  %35 = load i32, i32* %h.addr, align 4, !dbg !5909
  %cmp = icmp slt i32 %34, %35, !dbg !5910
  br i1 %cmp, label %for.body, label %for.end108, !dbg !5911

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !5912
  br label %for.cond42, !dbg !5913

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !5914
  %37 = load i32, i32* %w.addr, align 4, !dbg !5916
  %cmp43 = icmp slt i32 %36, %37, !dbg !5917
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !5918

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !5919, metadata !94), !dbg !5920
  %38 = load i32, i32* %x, align 4, !dbg !5921
  %shl = shl i32 %38, 0, !dbg !5922
  %idxprom = sext i32 %shl to i64, !dbg !5923
  %39 = load i16*, i16** %rgb0, align 8, !dbg !5923
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !5923
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !5923
  %conv47 = sext i16 %40 to i32, !dbg !5923
  store i32 %conv47, i32* %r00, align 4, !dbg !5920
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !5924, metadata !94), !dbg !5925
  %41 = load i32, i32* %x, align 4, !dbg !5926
  %shl48 = shl i32 %41, 0, !dbg !5927
  %idxprom49 = sext i32 %shl48 to i64, !dbg !5928
  %42 = load i16*, i16** %rgb1, align 8, !dbg !5928
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !5928
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !5928
  %conv51 = sext i16 %43 to i32, !dbg !5928
  store i32 %conv51, i32* %g00, align 4, !dbg !5925
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !5929, metadata !94), !dbg !5930
  %44 = load i32, i32* %x, align 4, !dbg !5931
  %shl52 = shl i32 %44, 0, !dbg !5932
  %idxprom53 = sext i32 %shl52 to i64, !dbg !5933
  %45 = load i16*, i16** %rgb2, align 8, !dbg !5933
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !5933
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !5933
  %conv55 = sext i16 %46 to i32, !dbg !5933
  store i32 %conv55, i32* %b00, align 4, !dbg !5930
  %47 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !5934
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 0, !dbg !5934
  %48 = load i16, i16* %arrayidx56, align 2, !dbg !5934
  %conv57 = sext i16 %48 to i32, !dbg !5934
  %49 = load i32, i32* %r00, align 4, !dbg !5935
  %50 = load i32, i32* %cry, align 4, !dbg !5936
  %mul = mul nsw i32 %49, %50, !dbg !5937
  %51 = load i32, i32* %g00, align 4, !dbg !5938
  %52 = load i32, i32* %cgy, align 4, !dbg !5939
  %mul58 = mul nsw i32 %51, %52, !dbg !5940
  %add59 = add nsw i32 %mul, %mul58, !dbg !5941
  %53 = load i32, i32* %b00, align 4, !dbg !5942
  %54 = load i32, i32* %cby, align 4, !dbg !5943
  %mul60 = mul nsw i32 %53, %54, !dbg !5944
  %add61 = add nsw i32 %add59, %mul60, !dbg !5945
  %add62 = add nsw i32 %add61, 65536, !dbg !5946
  %shr63 = ashr i32 %add62, 17, !dbg !5947
  %add64 = add nsw i32 %conv57, %shr63, !dbg !5948
  store i32 %add64, i32* %a.addr.i, align 4, !dbg !5949
  store i32 12, i32* %p.addr.i, align 4, !dbg !5949
  %55 = load i32, i32* %a.addr.i, align 4, !dbg !5950
  %56 = load i32, i32* %p.addr.i, align 4, !dbg !5951
  %shl.i = shl i32 1, %56, !dbg !5952
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5953
  %neg.i = xor i32 %sub.i, -1, !dbg !5954
  %and.i = and i32 %55, %neg.i, !dbg !5955
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5955
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5956

if.then.i:                                        ; preds = %for.body45
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !5957
  %neg1.i = xor i32 %57, -1, !dbg !5958
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5959
  %58 = load i32, i32* %p.addr.i, align 4, !dbg !5960
  %shl2.i = shl i32 1, %58, !dbg !5961
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5962
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5963
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5964
  br label %av_clip_uintp2_c.exit, !dbg !5964

if.else.i:                                        ; preds = %for.body45
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !5965
  store i32 %59, i32* %retval.i, align 4, !dbg !5966
  br label %av_clip_uintp2_c.exit, !dbg !5966

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %60 = load i32, i32* %retval.i, align 4, !dbg !5967
  %conv65 = trunc i32 %60 to i16, !dbg !5949
  %61 = load i32, i32* %x, align 4, !dbg !5968
  %shl66 = shl i32 %61, 0, !dbg !5969
  %idxprom67 = sext i32 %shl66 to i64, !dbg !5970
  %62 = load i16*, i16** %yuv0, align 8, !dbg !5970
  %arrayidx68 = getelementptr inbounds i16, i16* %62, i64 %idxprom67, !dbg !5970
  store i16 %conv65, i16* %arrayidx68, align 2, !dbg !5971
  %63 = load i32, i32* %r00, align 4, !dbg !5972
  %64 = load i32, i32* %cru, align 4, !dbg !5973
  %mul69 = mul nsw i32 %63, %64, !dbg !5974
  %65 = load i32, i32* %g00, align 4, !dbg !5975
  %66 = load i32, i32* %cgu, align 4, !dbg !5976
  %mul70 = mul nsw i32 %65, %66, !dbg !5977
  %add71 = add nsw i32 %mul69, %mul70, !dbg !5978
  %67 = load i32, i32* %b00, align 4, !dbg !5979
  %68 = load i32, i32* %cburv, align 4, !dbg !5980
  %mul72 = mul nsw i32 %67, %68, !dbg !5981
  %add73 = add nsw i32 %add71, %mul72, !dbg !5982
  %add74 = add nsw i32 %add73, 65536, !dbg !5983
  %shr75 = ashr i32 %add74, 17, !dbg !5984
  %add76 = add nsw i32 2048, %shr75, !dbg !5985
  store i32 %add76, i32* %a.addr.i126, align 4, !dbg !5986
  store i32 12, i32* %p.addr.i127, align 4, !dbg !5986
  %69 = load i32, i32* %a.addr.i126, align 4, !dbg !5987
  %70 = load i32, i32* %p.addr.i127, align 4, !dbg !5988
  %shl.i128 = shl i32 1, %70, !dbg !5989
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !5990
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !5991
  %and.i131 = and i32 %69, %neg.i130, !dbg !5992
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !5992
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !5993

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %71 = load i32, i32* %a.addr.i126, align 4, !dbg !5994
  %neg1.i133 = xor i32 %71, -1, !dbg !5995
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !5996
  %72 = load i32, i32* %p.addr.i127, align 4, !dbg !5997
  %shl2.i135 = shl i32 1, %72, !dbg !5998
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !5999
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !6000
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !6001
  br label %av_clip_uintp2_c.exit140, !dbg !6001

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %73 = load i32, i32* %a.addr.i126, align 4, !dbg !6002
  store i32 %73, i32* %retval.i125, align 4, !dbg !6003
  br label %av_clip_uintp2_c.exit140, !dbg !6003

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %74 = load i32, i32* %retval.i125, align 4, !dbg !6004
  %conv78 = trunc i32 %74 to i16, !dbg !5986
  %75 = load i32, i32* %x, align 4, !dbg !6005
  %idxprom79 = sext i32 %75 to i64, !dbg !6006
  %76 = load i16*, i16** %yuv1, align 8, !dbg !6006
  %arrayidx80 = getelementptr inbounds i16, i16* %76, i64 %idxprom79, !dbg !6006
  store i16 %conv78, i16* %arrayidx80, align 2, !dbg !6007
  %77 = load i32, i32* %r00, align 4, !dbg !6008
  %78 = load i32, i32* %cburv, align 4, !dbg !6009
  %mul81 = mul nsw i32 %77, %78, !dbg !6010
  %79 = load i32, i32* %g00, align 4, !dbg !6011
  %80 = load i32, i32* %cgv, align 4, !dbg !6012
  %mul82 = mul nsw i32 %79, %80, !dbg !6013
  %add83 = add nsw i32 %mul81, %mul82, !dbg !6014
  %81 = load i32, i32* %b00, align 4, !dbg !6015
  %82 = load i32, i32* %cbv, align 4, !dbg !6016
  %mul84 = mul nsw i32 %81, %82, !dbg !6017
  %add85 = add nsw i32 %add83, %mul84, !dbg !6018
  %add86 = add nsw i32 %add85, 65536, !dbg !6019
  %shr87 = ashr i32 %add86, 17, !dbg !6020
  %add88 = add nsw i32 2048, %shr87, !dbg !6021
  store i32 %add88, i32* %a.addr.i110, align 4, !dbg !6022
  store i32 12, i32* %p.addr.i111, align 4, !dbg !6022
  %83 = load i32, i32* %a.addr.i110, align 4, !dbg !6023
  %84 = load i32, i32* %p.addr.i111, align 4, !dbg !6024
  %shl.i112 = shl i32 1, %84, !dbg !6025
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !6026
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !6027
  %and.i115 = and i32 %83, %neg.i114, !dbg !6028
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !6028
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !6029

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %85 = load i32, i32* %a.addr.i110, align 4, !dbg !6030
  %neg1.i117 = xor i32 %85, -1, !dbg !6031
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !6032
  %86 = load i32, i32* %p.addr.i111, align 4, !dbg !6033
  %shl2.i119 = shl i32 1, %86, !dbg !6034
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !6035
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !6036
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !6037
  br label %av_clip_uintp2_c.exit124, !dbg !6037

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %87 = load i32, i32* %a.addr.i110, align 4, !dbg !6038
  store i32 %87, i32* %retval.i109, align 4, !dbg !6039
  br label %av_clip_uintp2_c.exit124, !dbg !6039

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %88 = load i32, i32* %retval.i109, align 4, !dbg !6040
  %conv90 = trunc i32 %88 to i16, !dbg !6022
  %89 = load i32, i32* %x, align 4, !dbg !6041
  %idxprom91 = sext i32 %89 to i64, !dbg !6042
  %90 = load i16*, i16** %yuv2, align 8, !dbg !6042
  %arrayidx92 = getelementptr inbounds i16, i16* %90, i64 %idxprom91, !dbg !6042
  store i16 %conv90, i16* %arrayidx92, align 2, !dbg !6043
  br label %for.inc, !dbg !6044

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %91 = load i32, i32* %x, align 4, !dbg !6045
  %inc = add nsw i32 %91, 1, !dbg !6045
  store i32 %inc, i32* %x, align 4, !dbg !6045
  br label %for.cond42, !dbg !6047, !llvm.loop !6048

for.end:                                          ; preds = %for.cond42
  %92 = load i64, i64* %s0, align 8, !dbg !6050
  %mul93 = mul nsw i64 %92, 1, !dbg !6051
  %93 = load i16*, i16** %yuv0, align 8, !dbg !6052
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %mul93, !dbg !6052
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !6052
  %94 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6053
  %arrayidx94 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !6053
  %95 = load i64, i64* %arrayidx94, align 8, !dbg !6053
  %div95 = udiv i64 %95, 2, !dbg !6054
  %96 = load i16*, i16** %yuv1, align 8, !dbg !6055
  %add.ptr96 = getelementptr inbounds i16, i16* %96, i64 %div95, !dbg !6055
  store i16* %add.ptr96, i16** %yuv1, align 8, !dbg !6055
  %97 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6056
  %arrayidx97 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !6056
  %98 = load i64, i64* %arrayidx97, align 8, !dbg !6056
  %div98 = udiv i64 %98, 2, !dbg !6057
  %99 = load i16*, i16** %yuv2, align 8, !dbg !6058
  %add.ptr99 = getelementptr inbounds i16, i16* %99, i64 %div98, !dbg !6058
  store i16* %add.ptr99, i16** %yuv2, align 8, !dbg !6058
  %100 = load i64, i64* %s.addr, align 8, !dbg !6059
  %mul100 = mul nsw i64 %100, 1, !dbg !6060
  %101 = load i16*, i16** %rgb0, align 8, !dbg !6061
  %add.ptr101 = getelementptr inbounds i16, i16* %101, i64 %mul100, !dbg !6061
  store i16* %add.ptr101, i16** %rgb0, align 8, !dbg !6061
  %102 = load i64, i64* %s.addr, align 8, !dbg !6062
  %mul102 = mul nsw i64 %102, 1, !dbg !6063
  %103 = load i16*, i16** %rgb1, align 8, !dbg !6064
  %add.ptr103 = getelementptr inbounds i16, i16* %103, i64 %mul102, !dbg !6064
  store i16* %add.ptr103, i16** %rgb1, align 8, !dbg !6064
  %104 = load i64, i64* %s.addr, align 8, !dbg !6065
  %mul104 = mul nsw i64 %104, 1, !dbg !6066
  %105 = load i16*, i16** %rgb2, align 8, !dbg !6067
  %add.ptr105 = getelementptr inbounds i16, i16* %105, i64 %mul104, !dbg !6067
  store i16* %add.ptr105, i16** %rgb2, align 8, !dbg !6067
  br label %for.inc106, !dbg !6068

for.inc106:                                       ; preds = %for.end
  %106 = load i32, i32* %y, align 4, !dbg !6069
  %inc107 = add nsw i32 %106, 1, !dbg !6069
  store i32 %inc107, i32* %y, align 4, !dbg !6069
  br label %for.cond, !dbg !6071, !llvm.loop !6072

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !6074
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_422p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !6075 {
entry:
  %retval.i190 = alloca i32, align 4
  %a.addr.i191 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i191, metadata !4652, metadata !94), !dbg !6076
  %p.addr.i192 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i192, metadata !4665, metadata !94), !dbg !6084
  %retval.i174 = alloca i32, align 4
  %a.addr.i175 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i175, metadata !4652, metadata !94), !dbg !6085
  %p.addr.i176 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i176, metadata !4665, metadata !94), !dbg !6087
  %retval.i158 = alloca i32, align 4
  %a.addr.i159 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i159, metadata !4652, metadata !94), !dbg !6088
  %p.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i160, metadata !4665, metadata !94), !dbg !6090
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !6091
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !6093
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !6094, metadata !94), !dbg !6095
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !6096, metadata !94), !dbg !6097
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !6098, metadata !94), !dbg !6099
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !6100, metadata !94), !dbg !6101
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6102, metadata !94), !dbg !6103
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6104, metadata !94), !dbg !6105
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !6106, metadata !94), !dbg !6107
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !6108, metadata !94), !dbg !6109
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !6110, metadata !94), !dbg !6111
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !6112
  %1 = bitcast i8** %0 to i16**, !dbg !6113
  store i16** %1, i16*** %yuv, align 8, !dbg !6111
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !6114, metadata !94), !dbg !6115
  %2 = load i16**, i16*** %yuv, align 8, !dbg !6116
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !6116
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !6116
  store i16* %3, i16** %yuv0, align 8, !dbg !6115
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !6117, metadata !94), !dbg !6118
  %4 = load i16**, i16*** %yuv, align 8, !dbg !6119
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !6119
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !6119
  store i16* %5, i16** %yuv1, align 8, !dbg !6118
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !6120, metadata !94), !dbg !6121
  %6 = load i16**, i16*** %yuv, align 8, !dbg !6122
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !6122
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !6122
  store i16* %7, i16** %yuv2, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !6123, metadata !94), !dbg !6124
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !6125
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !6125
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !6125
  store i16* %9, i16** %rgb0, align 8, !dbg !6124
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !6126, metadata !94), !dbg !6127
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !6128
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !6128
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !6128
  store i16* %11, i16** %rgb1, align 8, !dbg !6127
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !6129, metadata !94), !dbg !6130
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !6131
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !6131
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !6131
  store i16* %13, i16** %rgb2, align 8, !dbg !6130
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6132, metadata !94), !dbg !6133
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6134, metadata !94), !dbg !6135
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !6136, metadata !94), !dbg !6137
  store i32 17, i32* %sh, align 4, !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !6138, metadata !94), !dbg !6139
  store i32 65536, i32* %rnd, align 4, !dbg !6139
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !6140, metadata !94), !dbg !6141
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6142
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !6142
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !6142
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !6142
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !6142
  %conv = sext i16 %15 to i32, !dbg !6142
  store i32 %conv, i32* %cry, align 4, !dbg !6141
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !6143, metadata !94), !dbg !6144
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6145
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !6145
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !6145
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !6145
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !6145
  %conv12 = sext i16 %17 to i32, !dbg !6145
  store i32 %conv12, i32* %cgy, align 4, !dbg !6144
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !6146, metadata !94), !dbg !6147
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6148
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !6148
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !6148
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !6148
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !6148
  %conv16 = sext i16 %19 to i32, !dbg !6148
  store i32 %conv16, i32* %cby, align 4, !dbg !6147
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !6149, metadata !94), !dbg !6150
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6151
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !6151
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !6151
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !6151
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !6151
  %conv20 = sext i16 %21 to i32, !dbg !6151
  store i32 %conv20, i32* %cru, align 4, !dbg !6150
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !6152, metadata !94), !dbg !6153
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6154
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !6154
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !6154
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !6154
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !6154
  %conv24 = sext i16 %23 to i32, !dbg !6154
  store i32 %conv24, i32* %cgu, align 4, !dbg !6153
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !6155, metadata !94), !dbg !6156
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6157
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !6157
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !6157
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !6157
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !6157
  %conv28 = sext i16 %25 to i32, !dbg !6157
  store i32 %conv28, i32* %cburv, align 4, !dbg !6156
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !6158, metadata !94), !dbg !6159
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6160
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !6160
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !6160
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !6160
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !6160
  %conv32 = sext i16 %27 to i32, !dbg !6160
  store i32 %conv32, i32* %cgv, align 4, !dbg !6159
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !6161, metadata !94), !dbg !6162
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6163
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !6163
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !6163
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !6163
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !6163
  %conv36 = sext i16 %29 to i32, !dbg !6163
  store i32 %conv36, i32* %cbv, align 4, !dbg !6162
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !6164, metadata !94), !dbg !6165
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6166
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !6166
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !6166
  %div = udiv i64 %31, 2, !dbg !6167
  store i64 %div, i64* %s0, align 8, !dbg !6165
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !6168, metadata !94), !dbg !6169
  store i32 2048, i32* %uv_offset, align 4, !dbg !6169
  %32 = load i32, i32* %w.addr, align 4, !dbg !6170
  %add = add nsw i32 %32, 2, !dbg !6171
  %sub = sub nsw i32 %add, 1, !dbg !6172
  %shr = ashr i32 %sub, 1, !dbg !6173
  store i32 %shr, i32* %w.addr, align 4, !dbg !6174
  %33 = load i32, i32* %h.addr, align 4, !dbg !6175
  %add38 = add nsw i32 %33, 1, !dbg !6176
  %sub39 = sub nsw i32 %add38, 1, !dbg !6177
  %shr40 = ashr i32 %sub39, 0, !dbg !6178
  store i32 %shr40, i32* %h.addr, align 4, !dbg !6179
  store i32 0, i32* %y, align 4, !dbg !6180
  br label %for.cond, !dbg !6181

for.cond:                                         ; preds = %for.inc155, %entry
  %34 = load i32, i32* %y, align 4, !dbg !6182
  %35 = load i32, i32* %h.addr, align 4, !dbg !6184
  %cmp = icmp slt i32 %34, %35, !dbg !6185
  br i1 %cmp, label %for.body, label %for.end157, !dbg !6186

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6187
  br label %for.cond42, !dbg !6188

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !6189
  %37 = load i32, i32* %w.addr, align 4, !dbg !6191
  %cmp43 = icmp slt i32 %36, %37, !dbg !6192
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !6193

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !6194, metadata !94), !dbg !6195
  %38 = load i32, i32* %x, align 4, !dbg !6196
  %shl = shl i32 %38, 1, !dbg !6197
  %idxprom = sext i32 %shl to i64, !dbg !6198
  %39 = load i16*, i16** %rgb0, align 8, !dbg !6198
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !6198
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !6198
  %conv47 = sext i16 %40 to i32, !dbg !6198
  store i32 %conv47, i32* %r00, align 4, !dbg !6195
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !6199, metadata !94), !dbg !6200
  %41 = load i32, i32* %x, align 4, !dbg !6201
  %shl48 = shl i32 %41, 1, !dbg !6202
  %idxprom49 = sext i32 %shl48 to i64, !dbg !6203
  %42 = load i16*, i16** %rgb1, align 8, !dbg !6203
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !6203
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !6203
  %conv51 = sext i16 %43 to i32, !dbg !6203
  store i32 %conv51, i32* %g00, align 4, !dbg !6200
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !6204, metadata !94), !dbg !6205
  %44 = load i32, i32* %x, align 4, !dbg !6206
  %shl52 = shl i32 %44, 1, !dbg !6207
  %idxprom53 = sext i32 %shl52 to i64, !dbg !6208
  %45 = load i16*, i16** %rgb2, align 8, !dbg !6208
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !6208
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !6208
  %conv55 = sext i16 %46 to i32, !dbg !6208
  store i32 %conv55, i32* %b00, align 4, !dbg !6205
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !6209, metadata !94), !dbg !6210
  %47 = load i32, i32* %x, align 4, !dbg !6211
  %mul = mul nsw i32 %47, 2, !dbg !6212
  %add56 = add nsw i32 %mul, 1, !dbg !6213
  %idxprom57 = sext i32 %add56 to i64, !dbg !6214
  %48 = load i16*, i16** %rgb0, align 8, !dbg !6214
  %arrayidx58 = getelementptr inbounds i16, i16* %48, i64 %idxprom57, !dbg !6214
  %49 = load i16, i16* %arrayidx58, align 2, !dbg !6214
  %conv59 = sext i16 %49 to i32, !dbg !6214
  store i32 %conv59, i32* %r01, align 4, !dbg !6210
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !6215, metadata !94), !dbg !6216
  %50 = load i32, i32* %x, align 4, !dbg !6217
  %mul60 = mul nsw i32 %50, 2, !dbg !6218
  %add61 = add nsw i32 %mul60, 1, !dbg !6219
  %idxprom62 = sext i32 %add61 to i64, !dbg !6220
  %51 = load i16*, i16** %rgb1, align 8, !dbg !6220
  %arrayidx63 = getelementptr inbounds i16, i16* %51, i64 %idxprom62, !dbg !6220
  %52 = load i16, i16* %arrayidx63, align 2, !dbg !6220
  %conv64 = sext i16 %52 to i32, !dbg !6220
  store i32 %conv64, i32* %g01, align 4, !dbg !6216
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !6221, metadata !94), !dbg !6222
  %53 = load i32, i32* %x, align 4, !dbg !6223
  %mul65 = mul nsw i32 %53, 2, !dbg !6224
  %add66 = add nsw i32 %mul65, 1, !dbg !6225
  %idxprom67 = sext i32 %add66 to i64, !dbg !6226
  %54 = load i16*, i16** %rgb2, align 8, !dbg !6226
  %arrayidx68 = getelementptr inbounds i16, i16* %54, i64 %idxprom67, !dbg !6226
  %55 = load i16, i16* %arrayidx68, align 2, !dbg !6226
  %conv69 = sext i16 %55 to i32, !dbg !6226
  store i32 %conv69, i32* %b01, align 4, !dbg !6222
  %56 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6227
  %arrayidx70 = getelementptr inbounds i16, i16* %56, i64 0, !dbg !6227
  %57 = load i16, i16* %arrayidx70, align 2, !dbg !6227
  %conv71 = sext i16 %57 to i32, !dbg !6227
  %58 = load i32, i32* %r00, align 4, !dbg !6228
  %59 = load i32, i32* %cry, align 4, !dbg !6229
  %mul72 = mul nsw i32 %58, %59, !dbg !6230
  %60 = load i32, i32* %g00, align 4, !dbg !6231
  %61 = load i32, i32* %cgy, align 4, !dbg !6232
  %mul73 = mul nsw i32 %60, %61, !dbg !6233
  %add74 = add nsw i32 %mul72, %mul73, !dbg !6234
  %62 = load i32, i32* %b00, align 4, !dbg !6235
  %63 = load i32, i32* %cby, align 4, !dbg !6236
  %mul75 = mul nsw i32 %62, %63, !dbg !6237
  %add76 = add nsw i32 %add74, %mul75, !dbg !6238
  %add77 = add nsw i32 %add76, 65536, !dbg !6239
  %shr78 = ashr i32 %add77, 17, !dbg !6240
  %add79 = add nsw i32 %conv71, %shr78, !dbg !6241
  store i32 %add79, i32* %a.addr.i, align 4, !dbg !6242
  store i32 12, i32* %p.addr.i, align 4, !dbg !6242
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !6243
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !6244
  %shl.i = shl i32 1, %65, !dbg !6245
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6246
  %neg.i = xor i32 %sub.i, -1, !dbg !6247
  %and.i = and i32 %64, %neg.i, !dbg !6248
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6248
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !6249

if.then.i:                                        ; preds = %for.body45
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !6250
  %neg1.i = xor i32 %66, -1, !dbg !6251
  %shr.i = ashr i32 %neg1.i, 31, !dbg !6252
  %67 = load i32, i32* %p.addr.i, align 4, !dbg !6253
  %shl2.i = shl i32 1, %67, !dbg !6254
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !6255
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !6256
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !6257
  br label %av_clip_uintp2_c.exit, !dbg !6257

if.else.i:                                        ; preds = %for.body45
  %68 = load i32, i32* %a.addr.i, align 4, !dbg !6258
  store i32 %68, i32* %retval.i, align 4, !dbg !6259
  br label %av_clip_uintp2_c.exit, !dbg !6259

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %69 = load i32, i32* %retval.i, align 4, !dbg !6260
  %conv80 = trunc i32 %69 to i16, !dbg !6242
  %70 = load i32, i32* %x, align 4, !dbg !6261
  %shl81 = shl i32 %70, 1, !dbg !6262
  %idxprom82 = sext i32 %shl81 to i64, !dbg !6263
  %71 = load i16*, i16** %yuv0, align 8, !dbg !6263
  %arrayidx83 = getelementptr inbounds i16, i16* %71, i64 %idxprom82, !dbg !6263
  store i16 %conv80, i16* %arrayidx83, align 2, !dbg !6264
  %72 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6265
  %arrayidx84 = getelementptr inbounds i16, i16* %72, i64 0, !dbg !6265
  %73 = load i16, i16* %arrayidx84, align 2, !dbg !6265
  %conv85 = sext i16 %73 to i32, !dbg !6265
  %74 = load i32, i32* %r01, align 4, !dbg !6266
  %75 = load i32, i32* %cry, align 4, !dbg !6267
  %mul86 = mul nsw i32 %74, %75, !dbg !6268
  %76 = load i32, i32* %g01, align 4, !dbg !6269
  %77 = load i32, i32* %cgy, align 4, !dbg !6270
  %mul87 = mul nsw i32 %76, %77, !dbg !6271
  %add88 = add nsw i32 %mul86, %mul87, !dbg !6272
  %78 = load i32, i32* %b01, align 4, !dbg !6273
  %79 = load i32, i32* %cby, align 4, !dbg !6274
  %mul89 = mul nsw i32 %78, %79, !dbg !6275
  %add90 = add nsw i32 %add88, %mul89, !dbg !6276
  %add91 = add nsw i32 %add90, 65536, !dbg !6277
  %shr92 = ashr i32 %add91, 17, !dbg !6278
  %add93 = add nsw i32 %conv85, %shr92, !dbg !6279
  store i32 %add93, i32* %a.addr.i191, align 4, !dbg !6280
  store i32 12, i32* %p.addr.i192, align 4, !dbg !6280
  %80 = load i32, i32* %a.addr.i191, align 4, !dbg !6281
  %81 = load i32, i32* %p.addr.i192, align 4, !dbg !6282
  %shl.i193 = shl i32 1, %81, !dbg !6283
  %sub.i194 = sub nsw i32 %shl.i193, 1, !dbg !6284
  %neg.i195 = xor i32 %sub.i194, -1, !dbg !6285
  %and.i196 = and i32 %80, %neg.i195, !dbg !6286
  %tobool.i197 = icmp ne i32 %and.i196, 0, !dbg !6286
  br i1 %tobool.i197, label %if.then.i203, label %if.else.i204, !dbg !6287

if.then.i203:                                     ; preds = %av_clip_uintp2_c.exit
  %82 = load i32, i32* %a.addr.i191, align 4, !dbg !6288
  %neg1.i198 = xor i32 %82, -1, !dbg !6289
  %shr.i199 = ashr i32 %neg1.i198, 31, !dbg !6290
  %83 = load i32, i32* %p.addr.i192, align 4, !dbg !6291
  %shl2.i200 = shl i32 1, %83, !dbg !6292
  %sub3.i201 = sub nsw i32 %shl2.i200, 1, !dbg !6293
  %and4.i202 = and i32 %shr.i199, %sub3.i201, !dbg !6294
  store i32 %and4.i202, i32* %retval.i190, align 4, !dbg !6295
  br label %av_clip_uintp2_c.exit205, !dbg !6295

if.else.i204:                                     ; preds = %av_clip_uintp2_c.exit
  %84 = load i32, i32* %a.addr.i191, align 4, !dbg !6296
  store i32 %84, i32* %retval.i190, align 4, !dbg !6297
  br label %av_clip_uintp2_c.exit205, !dbg !6297

av_clip_uintp2_c.exit205:                         ; preds = %if.then.i203, %if.else.i204
  %85 = load i32, i32* %retval.i190, align 4, !dbg !6298
  %conv95 = trunc i32 %85 to i16, !dbg !6280
  %86 = load i32, i32* %x, align 4, !dbg !6299
  %mul96 = mul nsw i32 %86, 2, !dbg !6300
  %add97 = add nsw i32 %mul96, 1, !dbg !6301
  %idxprom98 = sext i32 %add97 to i64, !dbg !6302
  %87 = load i16*, i16** %yuv0, align 8, !dbg !6302
  %arrayidx99 = getelementptr inbounds i16, i16* %87, i64 %idxprom98, !dbg !6302
  store i16 %conv95, i16* %arrayidx99, align 2, !dbg !6303
  %88 = load i32, i32* %r00, align 4, !dbg !6304
  %89 = load i32, i32* %r01, align 4, !dbg !6305
  %add100 = add nsw i32 %88, %89, !dbg !6306
  %add101 = add nsw i32 %add100, 1, !dbg !6307
  %shr102 = ashr i32 %add101, 1, !dbg !6308
  %90 = load i32, i32* %cru, align 4, !dbg !6309
  %mul103 = mul nsw i32 %shr102, %90, !dbg !6310
  %91 = load i32, i32* %g00, align 4, !dbg !6311
  %92 = load i32, i32* %g01, align 4, !dbg !6312
  %add104 = add nsw i32 %91, %92, !dbg !6313
  %add105 = add nsw i32 %add104, 1, !dbg !6314
  %shr106 = ashr i32 %add105, 1, !dbg !6315
  %93 = load i32, i32* %cgu, align 4, !dbg !6316
  %mul107 = mul nsw i32 %shr106, %93, !dbg !6317
  %add108 = add nsw i32 %mul103, %mul107, !dbg !6318
  %94 = load i32, i32* %b00, align 4, !dbg !6319
  %95 = load i32, i32* %b01, align 4, !dbg !6320
  %add109 = add nsw i32 %94, %95, !dbg !6321
  %add110 = add nsw i32 %add109, 1, !dbg !6322
  %shr111 = ashr i32 %add110, 1, !dbg !6323
  %96 = load i32, i32* %cburv, align 4, !dbg !6324
  %mul112 = mul nsw i32 %shr111, %96, !dbg !6325
  %add113 = add nsw i32 %add108, %mul112, !dbg !6326
  %add114 = add nsw i32 %add113, 65536, !dbg !6327
  %shr115 = ashr i32 %add114, 17, !dbg !6328
  %add116 = add nsw i32 2048, %shr115, !dbg !6329
  store i32 %add116, i32* %a.addr.i175, align 4, !dbg !6330
  store i32 12, i32* %p.addr.i176, align 4, !dbg !6330
  %97 = load i32, i32* %a.addr.i175, align 4, !dbg !6331
  %98 = load i32, i32* %p.addr.i176, align 4, !dbg !6332
  %shl.i177 = shl i32 1, %98, !dbg !6333
  %sub.i178 = sub nsw i32 %shl.i177, 1, !dbg !6334
  %neg.i179 = xor i32 %sub.i178, -1, !dbg !6335
  %and.i180 = and i32 %97, %neg.i179, !dbg !6336
  %tobool.i181 = icmp ne i32 %and.i180, 0, !dbg !6336
  br i1 %tobool.i181, label %if.then.i187, label %if.else.i188, !dbg !6337

if.then.i187:                                     ; preds = %av_clip_uintp2_c.exit205
  %99 = load i32, i32* %a.addr.i175, align 4, !dbg !6338
  %neg1.i182 = xor i32 %99, -1, !dbg !6339
  %shr.i183 = ashr i32 %neg1.i182, 31, !dbg !6340
  %100 = load i32, i32* %p.addr.i176, align 4, !dbg !6341
  %shl2.i184 = shl i32 1, %100, !dbg !6342
  %sub3.i185 = sub nsw i32 %shl2.i184, 1, !dbg !6343
  %and4.i186 = and i32 %shr.i183, %sub3.i185, !dbg !6344
  store i32 %and4.i186, i32* %retval.i174, align 4, !dbg !6345
  br label %av_clip_uintp2_c.exit189, !dbg !6345

if.else.i188:                                     ; preds = %av_clip_uintp2_c.exit205
  %101 = load i32, i32* %a.addr.i175, align 4, !dbg !6346
  store i32 %101, i32* %retval.i174, align 4, !dbg !6347
  br label %av_clip_uintp2_c.exit189, !dbg !6347

av_clip_uintp2_c.exit189:                         ; preds = %if.then.i187, %if.else.i188
  %102 = load i32, i32* %retval.i174, align 4, !dbg !6348
  %conv118 = trunc i32 %102 to i16, !dbg !6330
  %103 = load i32, i32* %x, align 4, !dbg !6349
  %idxprom119 = sext i32 %103 to i64, !dbg !6350
  %104 = load i16*, i16** %yuv1, align 8, !dbg !6350
  %arrayidx120 = getelementptr inbounds i16, i16* %104, i64 %idxprom119, !dbg !6350
  store i16 %conv118, i16* %arrayidx120, align 2, !dbg !6351
  %105 = load i32, i32* %r00, align 4, !dbg !6352
  %106 = load i32, i32* %r01, align 4, !dbg !6353
  %add121 = add nsw i32 %105, %106, !dbg !6354
  %add122 = add nsw i32 %add121, 1, !dbg !6355
  %shr123 = ashr i32 %add122, 1, !dbg !6356
  %107 = load i32, i32* %cburv, align 4, !dbg !6357
  %mul124 = mul nsw i32 %shr123, %107, !dbg !6358
  %108 = load i32, i32* %g00, align 4, !dbg !6359
  %109 = load i32, i32* %g01, align 4, !dbg !6360
  %add125 = add nsw i32 %108, %109, !dbg !6361
  %add126 = add nsw i32 %add125, 1, !dbg !6362
  %shr127 = ashr i32 %add126, 1, !dbg !6363
  %110 = load i32, i32* %cgv, align 4, !dbg !6364
  %mul128 = mul nsw i32 %shr127, %110, !dbg !6365
  %add129 = add nsw i32 %mul124, %mul128, !dbg !6366
  %111 = load i32, i32* %b00, align 4, !dbg !6367
  %112 = load i32, i32* %b01, align 4, !dbg !6368
  %add130 = add nsw i32 %111, %112, !dbg !6369
  %add131 = add nsw i32 %add130, 1, !dbg !6370
  %shr132 = ashr i32 %add131, 1, !dbg !6371
  %113 = load i32, i32* %cbv, align 4, !dbg !6372
  %mul133 = mul nsw i32 %shr132, %113, !dbg !6373
  %add134 = add nsw i32 %add129, %mul133, !dbg !6374
  %add135 = add nsw i32 %add134, 65536, !dbg !6375
  %shr136 = ashr i32 %add135, 17, !dbg !6376
  %add137 = add nsw i32 2048, %shr136, !dbg !6377
  store i32 %add137, i32* %a.addr.i159, align 4, !dbg !6378
  store i32 12, i32* %p.addr.i160, align 4, !dbg !6378
  %114 = load i32, i32* %a.addr.i159, align 4, !dbg !6379
  %115 = load i32, i32* %p.addr.i160, align 4, !dbg !6380
  %shl.i161 = shl i32 1, %115, !dbg !6381
  %sub.i162 = sub nsw i32 %shl.i161, 1, !dbg !6382
  %neg.i163 = xor i32 %sub.i162, -1, !dbg !6383
  %and.i164 = and i32 %114, %neg.i163, !dbg !6384
  %tobool.i165 = icmp ne i32 %and.i164, 0, !dbg !6384
  br i1 %tobool.i165, label %if.then.i171, label %if.else.i172, !dbg !6385

if.then.i171:                                     ; preds = %av_clip_uintp2_c.exit189
  %116 = load i32, i32* %a.addr.i159, align 4, !dbg !6386
  %neg1.i166 = xor i32 %116, -1, !dbg !6387
  %shr.i167 = ashr i32 %neg1.i166, 31, !dbg !6388
  %117 = load i32, i32* %p.addr.i160, align 4, !dbg !6389
  %shl2.i168 = shl i32 1, %117, !dbg !6390
  %sub3.i169 = sub nsw i32 %shl2.i168, 1, !dbg !6391
  %and4.i170 = and i32 %shr.i167, %sub3.i169, !dbg !6392
  store i32 %and4.i170, i32* %retval.i158, align 4, !dbg !6393
  br label %av_clip_uintp2_c.exit173, !dbg !6393

if.else.i172:                                     ; preds = %av_clip_uintp2_c.exit189
  %118 = load i32, i32* %a.addr.i159, align 4, !dbg !6394
  store i32 %118, i32* %retval.i158, align 4, !dbg !6395
  br label %av_clip_uintp2_c.exit173, !dbg !6395

av_clip_uintp2_c.exit173:                         ; preds = %if.then.i171, %if.else.i172
  %119 = load i32, i32* %retval.i158, align 4, !dbg !6396
  %conv139 = trunc i32 %119 to i16, !dbg !6378
  %120 = load i32, i32* %x, align 4, !dbg !6397
  %idxprom140 = sext i32 %120 to i64, !dbg !6398
  %121 = load i16*, i16** %yuv2, align 8, !dbg !6398
  %arrayidx141 = getelementptr inbounds i16, i16* %121, i64 %idxprom140, !dbg !6398
  store i16 %conv139, i16* %arrayidx141, align 2, !dbg !6399
  br label %for.inc, !dbg !6400

for.inc:                                          ; preds = %av_clip_uintp2_c.exit173
  %122 = load i32, i32* %x, align 4, !dbg !6401
  %inc = add nsw i32 %122, 1, !dbg !6401
  store i32 %inc, i32* %x, align 4, !dbg !6401
  br label %for.cond42, !dbg !6403, !llvm.loop !6404

for.end:                                          ; preds = %for.cond42
  %123 = load i64, i64* %s0, align 8, !dbg !6406
  %mul142 = mul nsw i64 %123, 1, !dbg !6407
  %124 = load i16*, i16** %yuv0, align 8, !dbg !6408
  %add.ptr = getelementptr inbounds i16, i16* %124, i64 %mul142, !dbg !6408
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !6408
  %125 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6409
  %arrayidx143 = getelementptr inbounds i64, i64* %125, i64 1, !dbg !6409
  %126 = load i64, i64* %arrayidx143, align 8, !dbg !6409
  %div144 = udiv i64 %126, 2, !dbg !6410
  %127 = load i16*, i16** %yuv1, align 8, !dbg !6411
  %add.ptr145 = getelementptr inbounds i16, i16* %127, i64 %div144, !dbg !6411
  store i16* %add.ptr145, i16** %yuv1, align 8, !dbg !6411
  %128 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6412
  %arrayidx146 = getelementptr inbounds i64, i64* %128, i64 2, !dbg !6412
  %129 = load i64, i64* %arrayidx146, align 8, !dbg !6412
  %div147 = udiv i64 %129, 2, !dbg !6413
  %130 = load i16*, i16** %yuv2, align 8, !dbg !6414
  %add.ptr148 = getelementptr inbounds i16, i16* %130, i64 %div147, !dbg !6414
  store i16* %add.ptr148, i16** %yuv2, align 8, !dbg !6414
  %131 = load i64, i64* %s.addr, align 8, !dbg !6415
  %mul149 = mul nsw i64 %131, 1, !dbg !6416
  %132 = load i16*, i16** %rgb0, align 8, !dbg !6417
  %add.ptr150 = getelementptr inbounds i16, i16* %132, i64 %mul149, !dbg !6417
  store i16* %add.ptr150, i16** %rgb0, align 8, !dbg !6417
  %133 = load i64, i64* %s.addr, align 8, !dbg !6418
  %mul151 = mul nsw i64 %133, 1, !dbg !6419
  %134 = load i16*, i16** %rgb1, align 8, !dbg !6420
  %add.ptr152 = getelementptr inbounds i16, i16* %134, i64 %mul151, !dbg !6420
  store i16* %add.ptr152, i16** %rgb1, align 8, !dbg !6420
  %135 = load i64, i64* %s.addr, align 8, !dbg !6421
  %mul153 = mul nsw i64 %135, 1, !dbg !6422
  %136 = load i16*, i16** %rgb2, align 8, !dbg !6423
  %add.ptr154 = getelementptr inbounds i16, i16* %136, i64 %mul153, !dbg !6423
  store i16* %add.ptr154, i16** %rgb2, align 8, !dbg !6423
  br label %for.inc155, !dbg !6424

for.inc155:                                       ; preds = %for.end
  %137 = load i32, i32* %y, align 4, !dbg !6425
  %inc156 = add nsw i32 %137, 1, !dbg !6425
  store i32 %inc156, i32* %y, align 4, !dbg !6425
  br label %for.cond, !dbg !6427, !llvm.loop !6428

for.end157:                                       ; preds = %for.cond
  ret void, !dbg !6430
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_420p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset) #0 !dbg !6431 {
entry:
  %retval.i304 = alloca i32, align 4
  %a.addr.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i305, metadata !4652, metadata !94), !dbg !6432
  %p.addr.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i306, metadata !4665, metadata !94), !dbg !6440
  %retval.i288 = alloca i32, align 4
  %a.addr.i289 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i289, metadata !4652, metadata !94), !dbg !6441
  %p.addr.i290 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i290, metadata !4665, metadata !94), !dbg !6443
  %retval.i272 = alloca i32, align 4
  %a.addr.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i273, metadata !4652, metadata !94), !dbg !6444
  %p.addr.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i274, metadata !4665, metadata !94), !dbg !6446
  %retval.i256 = alloca i32, align 4
  %a.addr.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i257, metadata !4652, metadata !94), !dbg !6447
  %p.addr.i258 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i258, metadata !4665, metadata !94), !dbg !6449
  %retval.i240 = alloca i32, align 4
  %a.addr.i241 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i241, metadata !4652, metadata !94), !dbg !6450
  %p.addr.i242 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i242, metadata !4665, metadata !94), !dbg !6452
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !6453
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !6455
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !6456, metadata !94), !dbg !6457
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !6458, metadata !94), !dbg !6459
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !6460, metadata !94), !dbg !6461
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !6462, metadata !94), !dbg !6463
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6464, metadata !94), !dbg !6465
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6466, metadata !94), !dbg !6467
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !6468, metadata !94), !dbg !6469
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !6470, metadata !94), !dbg !6471
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !6472, metadata !94), !dbg !6473
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !6474
  %1 = bitcast i8** %0 to i16**, !dbg !6475
  store i16** %1, i16*** %yuv, align 8, !dbg !6473
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !6476, metadata !94), !dbg !6477
  %2 = load i16**, i16*** %yuv, align 8, !dbg !6478
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !6478
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !6478
  store i16* %3, i16** %yuv0, align 8, !dbg !6477
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !6479, metadata !94), !dbg !6480
  %4 = load i16**, i16*** %yuv, align 8, !dbg !6481
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !6481
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !6481
  store i16* %5, i16** %yuv1, align 8, !dbg !6480
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !6482, metadata !94), !dbg !6483
  %6 = load i16**, i16*** %yuv, align 8, !dbg !6484
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !6484
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !6484
  store i16* %7, i16** %yuv2, align 8, !dbg !6483
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !6485, metadata !94), !dbg !6486
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !6487
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !6487
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !6487
  store i16* %9, i16** %rgb0, align 8, !dbg !6486
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !6488, metadata !94), !dbg !6489
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !6490
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !6490
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !6490
  store i16* %11, i16** %rgb1, align 8, !dbg !6489
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !6491, metadata !94), !dbg !6492
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !6493
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !6493
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !6493
  store i16* %13, i16** %rgb2, align 8, !dbg !6492
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6494, metadata !94), !dbg !6495
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6496, metadata !94), !dbg !6497
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !6498, metadata !94), !dbg !6499
  store i32 17, i32* %sh, align 4, !dbg !6499
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !6500, metadata !94), !dbg !6501
  store i32 65536, i32* %rnd, align 4, !dbg !6501
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !6502, metadata !94), !dbg !6503
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6504
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !6504
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !6504
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !6504
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !6504
  %conv = sext i16 %15 to i32, !dbg !6504
  store i32 %conv, i32* %cry, align 4, !dbg !6503
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !6505, metadata !94), !dbg !6506
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6507
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !6507
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !6507
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !6507
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !6507
  %conv12 = sext i16 %17 to i32, !dbg !6507
  store i32 %conv12, i32* %cgy, align 4, !dbg !6506
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !6508, metadata !94), !dbg !6509
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6510
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !6510
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !6510
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !6510
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !6510
  %conv16 = sext i16 %19 to i32, !dbg !6510
  store i32 %conv16, i32* %cby, align 4, !dbg !6509
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !6511, metadata !94), !dbg !6512
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6513
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !6513
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !6513
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !6513
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !6513
  %conv20 = sext i16 %21 to i32, !dbg !6513
  store i32 %conv20, i32* %cru, align 4, !dbg !6512
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !6514, metadata !94), !dbg !6515
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6516
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !6516
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !6516
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !6516
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !6516
  %conv24 = sext i16 %23 to i32, !dbg !6516
  store i32 %conv24, i32* %cgu, align 4, !dbg !6515
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !6517, metadata !94), !dbg !6518
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6519
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !6519
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !6519
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !6519
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !6519
  %conv28 = sext i16 %25 to i32, !dbg !6519
  store i32 %conv28, i32* %cburv, align 4, !dbg !6518
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !6520, metadata !94), !dbg !6521
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6522
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !6522
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !6522
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !6522
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !6522
  %conv32 = sext i16 %27 to i32, !dbg !6522
  store i32 %conv32, i32* %cgv, align 4, !dbg !6521
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !6523, metadata !94), !dbg !6524
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !6525
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !6525
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !6525
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !6525
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !6525
  %conv36 = sext i16 %29 to i32, !dbg !6525
  store i32 %conv36, i32* %cbv, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !6526, metadata !94), !dbg !6527
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6528
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !6528
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !6528
  %div = udiv i64 %31, 2, !dbg !6529
  store i64 %div, i64* %s0, align 8, !dbg !6527
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !6530, metadata !94), !dbg !6531
  store i32 2048, i32* %uv_offset, align 4, !dbg !6531
  %32 = load i32, i32* %w.addr, align 4, !dbg !6532
  %add = add nsw i32 %32, 2, !dbg !6533
  %sub = sub nsw i32 %add, 1, !dbg !6534
  %shr = ashr i32 %sub, 1, !dbg !6535
  store i32 %shr, i32* %w.addr, align 4, !dbg !6536
  %33 = load i32, i32* %h.addr, align 4, !dbg !6537
  %add38 = add nsw i32 %33, 2, !dbg !6538
  %sub39 = sub nsw i32 %add38, 1, !dbg !6539
  %shr40 = ashr i32 %sub39, 1, !dbg !6540
  store i32 %shr40, i32* %h.addr, align 4, !dbg !6541
  store i32 0, i32* %y, align 4, !dbg !6542
  br label %for.cond, !dbg !6543

for.cond:                                         ; preds = %for.inc237, %entry
  %34 = load i32, i32* %y, align 4, !dbg !6544
  %35 = load i32, i32* %h.addr, align 4, !dbg !6546
  %cmp = icmp slt i32 %34, %35, !dbg !6547
  br i1 %cmp, label %for.body, label %for.end239, !dbg !6548

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6549
  br label %for.cond42, !dbg !6550

for.cond42:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !6551
  %37 = load i32, i32* %w.addr, align 4, !dbg !6553
  %cmp43 = icmp slt i32 %36, %37, !dbg !6554
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !6555

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !6556, metadata !94), !dbg !6557
  %38 = load i32, i32* %x, align 4, !dbg !6558
  %shl = shl i32 %38, 1, !dbg !6559
  %idxprom = sext i32 %shl to i64, !dbg !6560
  %39 = load i16*, i16** %rgb0, align 8, !dbg !6560
  %arrayidx46 = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !6560
  %40 = load i16, i16* %arrayidx46, align 2, !dbg !6560
  %conv47 = sext i16 %40 to i32, !dbg !6560
  store i32 %conv47, i32* %r00, align 4, !dbg !6557
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !6561, metadata !94), !dbg !6562
  %41 = load i32, i32* %x, align 4, !dbg !6563
  %shl48 = shl i32 %41, 1, !dbg !6564
  %idxprom49 = sext i32 %shl48 to i64, !dbg !6565
  %42 = load i16*, i16** %rgb1, align 8, !dbg !6565
  %arrayidx50 = getelementptr inbounds i16, i16* %42, i64 %idxprom49, !dbg !6565
  %43 = load i16, i16* %arrayidx50, align 2, !dbg !6565
  %conv51 = sext i16 %43 to i32, !dbg !6565
  store i32 %conv51, i32* %g00, align 4, !dbg !6562
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !6566, metadata !94), !dbg !6567
  %44 = load i32, i32* %x, align 4, !dbg !6568
  %shl52 = shl i32 %44, 1, !dbg !6569
  %idxprom53 = sext i32 %shl52 to i64, !dbg !6570
  %45 = load i16*, i16** %rgb2, align 8, !dbg !6570
  %arrayidx54 = getelementptr inbounds i16, i16* %45, i64 %idxprom53, !dbg !6570
  %46 = load i16, i16* %arrayidx54, align 2, !dbg !6570
  %conv55 = sext i16 %46 to i32, !dbg !6570
  store i32 %conv55, i32* %b00, align 4, !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !6571, metadata !94), !dbg !6572
  %47 = load i32, i32* %x, align 4, !dbg !6573
  %mul = mul nsw i32 %47, 2, !dbg !6574
  %add56 = add nsw i32 %mul, 1, !dbg !6575
  %idxprom57 = sext i32 %add56 to i64, !dbg !6576
  %48 = load i16*, i16** %rgb0, align 8, !dbg !6576
  %arrayidx58 = getelementptr inbounds i16, i16* %48, i64 %idxprom57, !dbg !6576
  %49 = load i16, i16* %arrayidx58, align 2, !dbg !6576
  %conv59 = sext i16 %49 to i32, !dbg !6576
  store i32 %conv59, i32* %r01, align 4, !dbg !6572
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !6577, metadata !94), !dbg !6578
  %50 = load i32, i32* %x, align 4, !dbg !6579
  %mul60 = mul nsw i32 %50, 2, !dbg !6580
  %add61 = add nsw i32 %mul60, 1, !dbg !6581
  %idxprom62 = sext i32 %add61 to i64, !dbg !6582
  %51 = load i16*, i16** %rgb1, align 8, !dbg !6582
  %arrayidx63 = getelementptr inbounds i16, i16* %51, i64 %idxprom62, !dbg !6582
  %52 = load i16, i16* %arrayidx63, align 2, !dbg !6582
  %conv64 = sext i16 %52 to i32, !dbg !6582
  store i32 %conv64, i32* %g01, align 4, !dbg !6578
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !6583, metadata !94), !dbg !6584
  %53 = load i32, i32* %x, align 4, !dbg !6585
  %mul65 = mul nsw i32 %53, 2, !dbg !6586
  %add66 = add nsw i32 %mul65, 1, !dbg !6587
  %idxprom67 = sext i32 %add66 to i64, !dbg !6588
  %54 = load i16*, i16** %rgb2, align 8, !dbg !6588
  %arrayidx68 = getelementptr inbounds i16, i16* %54, i64 %idxprom67, !dbg !6588
  %55 = load i16, i16* %arrayidx68, align 2, !dbg !6588
  %conv69 = sext i16 %55 to i32, !dbg !6588
  store i32 %conv69, i32* %b01, align 4, !dbg !6584
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !6589, metadata !94), !dbg !6590
  %56 = load i32, i32* %x, align 4, !dbg !6591
  %mul70 = mul nsw i32 %56, 2, !dbg !6592
  %add71 = add nsw i32 %mul70, 0, !dbg !6593
  %conv72 = sext i32 %add71 to i64, !dbg !6591
  %57 = load i64, i64* %s.addr, align 8, !dbg !6594
  %add73 = add nsw i64 %conv72, %57, !dbg !6595
  %58 = load i16*, i16** %rgb0, align 8, !dbg !6596
  %arrayidx74 = getelementptr inbounds i16, i16* %58, i64 %add73, !dbg !6596
  %59 = load i16, i16* %arrayidx74, align 2, !dbg !6596
  %conv75 = sext i16 %59 to i32, !dbg !6596
  store i32 %conv75, i32* %r10, align 4, !dbg !6590
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !6597, metadata !94), !dbg !6598
  %60 = load i32, i32* %x, align 4, !dbg !6599
  %mul76 = mul nsw i32 %60, 2, !dbg !6600
  %add77 = add nsw i32 %mul76, 0, !dbg !6601
  %conv78 = sext i32 %add77 to i64, !dbg !6599
  %61 = load i64, i64* %s.addr, align 8, !dbg !6602
  %add79 = add nsw i64 %conv78, %61, !dbg !6603
  %62 = load i16*, i16** %rgb1, align 8, !dbg !6604
  %arrayidx80 = getelementptr inbounds i16, i16* %62, i64 %add79, !dbg !6604
  %63 = load i16, i16* %arrayidx80, align 2, !dbg !6604
  %conv81 = sext i16 %63 to i32, !dbg !6604
  store i32 %conv81, i32* %g10, align 4, !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !6605, metadata !94), !dbg !6606
  %64 = load i32, i32* %x, align 4, !dbg !6607
  %mul82 = mul nsw i32 %64, 2, !dbg !6608
  %add83 = add nsw i32 %mul82, 0, !dbg !6609
  %conv84 = sext i32 %add83 to i64, !dbg !6607
  %65 = load i64, i64* %s.addr, align 8, !dbg !6610
  %add85 = add nsw i64 %conv84, %65, !dbg !6611
  %66 = load i16*, i16** %rgb2, align 8, !dbg !6612
  %arrayidx86 = getelementptr inbounds i16, i16* %66, i64 %add85, !dbg !6612
  %67 = load i16, i16* %arrayidx86, align 2, !dbg !6612
  %conv87 = sext i16 %67 to i32, !dbg !6612
  store i32 %conv87, i32* %b10, align 4, !dbg !6606
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !6613, metadata !94), !dbg !6614
  %68 = load i32, i32* %x, align 4, !dbg !6615
  %mul88 = mul nsw i32 %68, 2, !dbg !6616
  %add89 = add nsw i32 %mul88, 1, !dbg !6617
  %conv90 = sext i32 %add89 to i64, !dbg !6615
  %69 = load i64, i64* %s.addr, align 8, !dbg !6618
  %add91 = add nsw i64 %conv90, %69, !dbg !6619
  %70 = load i16*, i16** %rgb0, align 8, !dbg !6620
  %arrayidx92 = getelementptr inbounds i16, i16* %70, i64 %add91, !dbg !6620
  %71 = load i16, i16* %arrayidx92, align 2, !dbg !6620
  %conv93 = sext i16 %71 to i32, !dbg !6620
  store i32 %conv93, i32* %r11, align 4, !dbg !6614
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !6621, metadata !94), !dbg !6622
  %72 = load i32, i32* %x, align 4, !dbg !6623
  %mul94 = mul nsw i32 %72, 2, !dbg !6624
  %add95 = add nsw i32 %mul94, 1, !dbg !6625
  %conv96 = sext i32 %add95 to i64, !dbg !6623
  %73 = load i64, i64* %s.addr, align 8, !dbg !6626
  %add97 = add nsw i64 %conv96, %73, !dbg !6627
  %74 = load i16*, i16** %rgb1, align 8, !dbg !6628
  %arrayidx98 = getelementptr inbounds i16, i16* %74, i64 %add97, !dbg !6628
  %75 = load i16, i16* %arrayidx98, align 2, !dbg !6628
  %conv99 = sext i16 %75 to i32, !dbg !6628
  store i32 %conv99, i32* %g11, align 4, !dbg !6622
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !6629, metadata !94), !dbg !6630
  %76 = load i32, i32* %x, align 4, !dbg !6631
  %mul100 = mul nsw i32 %76, 2, !dbg !6632
  %add101 = add nsw i32 %mul100, 1, !dbg !6633
  %conv102 = sext i32 %add101 to i64, !dbg !6631
  %77 = load i64, i64* %s.addr, align 8, !dbg !6634
  %add103 = add nsw i64 %conv102, %77, !dbg !6635
  %78 = load i16*, i16** %rgb2, align 8, !dbg !6636
  %arrayidx104 = getelementptr inbounds i16, i16* %78, i64 %add103, !dbg !6636
  %79 = load i16, i16* %arrayidx104, align 2, !dbg !6636
  %conv105 = sext i16 %79 to i32, !dbg !6636
  store i32 %conv105, i32* %b11, align 4, !dbg !6630
  %80 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6637
  %arrayidx106 = getelementptr inbounds i16, i16* %80, i64 0, !dbg !6637
  %81 = load i16, i16* %arrayidx106, align 2, !dbg !6637
  %conv107 = sext i16 %81 to i32, !dbg !6637
  %82 = load i32, i32* %r00, align 4, !dbg !6638
  %83 = load i32, i32* %cry, align 4, !dbg !6639
  %mul108 = mul nsw i32 %82, %83, !dbg !6640
  %84 = load i32, i32* %g00, align 4, !dbg !6641
  %85 = load i32, i32* %cgy, align 4, !dbg !6642
  %mul109 = mul nsw i32 %84, %85, !dbg !6643
  %add110 = add nsw i32 %mul108, %mul109, !dbg !6644
  %86 = load i32, i32* %b00, align 4, !dbg !6645
  %87 = load i32, i32* %cby, align 4, !dbg !6646
  %mul111 = mul nsw i32 %86, %87, !dbg !6647
  %add112 = add nsw i32 %add110, %mul111, !dbg !6648
  %add113 = add nsw i32 %add112, 65536, !dbg !6649
  %shr114 = ashr i32 %add113, 17, !dbg !6650
  %add115 = add nsw i32 %conv107, %shr114, !dbg !6651
  store i32 %add115, i32* %a.addr.i, align 4, !dbg !6652
  store i32 12, i32* %p.addr.i, align 4, !dbg !6652
  %88 = load i32, i32* %a.addr.i, align 4, !dbg !6653
  %89 = load i32, i32* %p.addr.i, align 4, !dbg !6654
  %shl.i = shl i32 1, %89, !dbg !6655
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6656
  %neg.i = xor i32 %sub.i, -1, !dbg !6657
  %and.i = and i32 %88, %neg.i, !dbg !6658
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6658
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !6659

if.then.i:                                        ; preds = %for.body45
  %90 = load i32, i32* %a.addr.i, align 4, !dbg !6660
  %neg1.i = xor i32 %90, -1, !dbg !6661
  %shr.i = ashr i32 %neg1.i, 31, !dbg !6662
  %91 = load i32, i32* %p.addr.i, align 4, !dbg !6663
  %shl2.i = shl i32 1, %91, !dbg !6664
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !6665
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !6666
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !6667
  br label %av_clip_uintp2_c.exit, !dbg !6667

if.else.i:                                        ; preds = %for.body45
  %92 = load i32, i32* %a.addr.i, align 4, !dbg !6668
  store i32 %92, i32* %retval.i, align 4, !dbg !6669
  br label %av_clip_uintp2_c.exit, !dbg !6669

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %93 = load i32, i32* %retval.i, align 4, !dbg !6670
  %conv116 = trunc i32 %93 to i16, !dbg !6652
  %94 = load i32, i32* %x, align 4, !dbg !6671
  %shl117 = shl i32 %94, 1, !dbg !6672
  %idxprom118 = sext i32 %shl117 to i64, !dbg !6673
  %95 = load i16*, i16** %yuv0, align 8, !dbg !6673
  %arrayidx119 = getelementptr inbounds i16, i16* %95, i64 %idxprom118, !dbg !6673
  store i16 %conv116, i16* %arrayidx119, align 2, !dbg !6674
  %96 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6675
  %arrayidx120 = getelementptr inbounds i16, i16* %96, i64 0, !dbg !6675
  %97 = load i16, i16* %arrayidx120, align 2, !dbg !6675
  %conv121 = sext i16 %97 to i32, !dbg !6675
  %98 = load i32, i32* %r01, align 4, !dbg !6676
  %99 = load i32, i32* %cry, align 4, !dbg !6677
  %mul122 = mul nsw i32 %98, %99, !dbg !6678
  %100 = load i32, i32* %g01, align 4, !dbg !6679
  %101 = load i32, i32* %cgy, align 4, !dbg !6680
  %mul123 = mul nsw i32 %100, %101, !dbg !6681
  %add124 = add nsw i32 %mul122, %mul123, !dbg !6682
  %102 = load i32, i32* %b01, align 4, !dbg !6683
  %103 = load i32, i32* %cby, align 4, !dbg !6684
  %mul125 = mul nsw i32 %102, %103, !dbg !6685
  %add126 = add nsw i32 %add124, %mul125, !dbg !6686
  %add127 = add nsw i32 %add126, 65536, !dbg !6687
  %shr128 = ashr i32 %add127, 17, !dbg !6688
  %add129 = add nsw i32 %conv121, %shr128, !dbg !6689
  store i32 %add129, i32* %a.addr.i305, align 4, !dbg !6690
  store i32 12, i32* %p.addr.i306, align 4, !dbg !6690
  %104 = load i32, i32* %a.addr.i305, align 4, !dbg !6691
  %105 = load i32, i32* %p.addr.i306, align 4, !dbg !6692
  %shl.i307 = shl i32 1, %105, !dbg !6693
  %sub.i308 = sub nsw i32 %shl.i307, 1, !dbg !6694
  %neg.i309 = xor i32 %sub.i308, -1, !dbg !6695
  %and.i310 = and i32 %104, %neg.i309, !dbg !6696
  %tobool.i311 = icmp ne i32 %and.i310, 0, !dbg !6696
  br i1 %tobool.i311, label %if.then.i317, label %if.else.i318, !dbg !6697

if.then.i317:                                     ; preds = %av_clip_uintp2_c.exit
  %106 = load i32, i32* %a.addr.i305, align 4, !dbg !6698
  %neg1.i312 = xor i32 %106, -1, !dbg !6699
  %shr.i313 = ashr i32 %neg1.i312, 31, !dbg !6700
  %107 = load i32, i32* %p.addr.i306, align 4, !dbg !6701
  %shl2.i314 = shl i32 1, %107, !dbg !6702
  %sub3.i315 = sub nsw i32 %shl2.i314, 1, !dbg !6703
  %and4.i316 = and i32 %shr.i313, %sub3.i315, !dbg !6704
  store i32 %and4.i316, i32* %retval.i304, align 4, !dbg !6705
  br label %av_clip_uintp2_c.exit319, !dbg !6705

if.else.i318:                                     ; preds = %av_clip_uintp2_c.exit
  %108 = load i32, i32* %a.addr.i305, align 4, !dbg !6706
  store i32 %108, i32* %retval.i304, align 4, !dbg !6707
  br label %av_clip_uintp2_c.exit319, !dbg !6707

av_clip_uintp2_c.exit319:                         ; preds = %if.then.i317, %if.else.i318
  %109 = load i32, i32* %retval.i304, align 4, !dbg !6708
  %conv131 = trunc i32 %109 to i16, !dbg !6690
  %110 = load i32, i32* %x, align 4, !dbg !6709
  %mul132 = mul nsw i32 %110, 2, !dbg !6710
  %add133 = add nsw i32 %mul132, 1, !dbg !6711
  %idxprom134 = sext i32 %add133 to i64, !dbg !6712
  %111 = load i16*, i16** %yuv0, align 8, !dbg !6712
  %arrayidx135 = getelementptr inbounds i16, i16* %111, i64 %idxprom134, !dbg !6712
  store i16 %conv131, i16* %arrayidx135, align 2, !dbg !6713
  %112 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6714
  %arrayidx136 = getelementptr inbounds i16, i16* %112, i64 0, !dbg !6714
  %113 = load i16, i16* %arrayidx136, align 2, !dbg !6714
  %conv137 = sext i16 %113 to i32, !dbg !6714
  %114 = load i32, i32* %r10, align 4, !dbg !6715
  %115 = load i32, i32* %cry, align 4, !dbg !6716
  %mul138 = mul nsw i32 %114, %115, !dbg !6717
  %116 = load i32, i32* %g10, align 4, !dbg !6718
  %117 = load i32, i32* %cgy, align 4, !dbg !6719
  %mul139 = mul nsw i32 %116, %117, !dbg !6720
  %add140 = add nsw i32 %mul138, %mul139, !dbg !6721
  %118 = load i32, i32* %b10, align 4, !dbg !6722
  %119 = load i32, i32* %cby, align 4, !dbg !6723
  %mul141 = mul nsw i32 %118, %119, !dbg !6724
  %add142 = add nsw i32 %add140, %mul141, !dbg !6725
  %add143 = add nsw i32 %add142, 65536, !dbg !6726
  %shr144 = ashr i32 %add143, 17, !dbg !6727
  %add145 = add nsw i32 %conv137, %shr144, !dbg !6728
  store i32 %add145, i32* %a.addr.i289, align 4, !dbg !6729
  store i32 12, i32* %p.addr.i290, align 4, !dbg !6729
  %120 = load i32, i32* %a.addr.i289, align 4, !dbg !6730
  %121 = load i32, i32* %p.addr.i290, align 4, !dbg !6731
  %shl.i291 = shl i32 1, %121, !dbg !6732
  %sub.i292 = sub nsw i32 %shl.i291, 1, !dbg !6733
  %neg.i293 = xor i32 %sub.i292, -1, !dbg !6734
  %and.i294 = and i32 %120, %neg.i293, !dbg !6735
  %tobool.i295 = icmp ne i32 %and.i294, 0, !dbg !6735
  br i1 %tobool.i295, label %if.then.i301, label %if.else.i302, !dbg !6736

if.then.i301:                                     ; preds = %av_clip_uintp2_c.exit319
  %122 = load i32, i32* %a.addr.i289, align 4, !dbg !6737
  %neg1.i296 = xor i32 %122, -1, !dbg !6738
  %shr.i297 = ashr i32 %neg1.i296, 31, !dbg !6739
  %123 = load i32, i32* %p.addr.i290, align 4, !dbg !6740
  %shl2.i298 = shl i32 1, %123, !dbg !6741
  %sub3.i299 = sub nsw i32 %shl2.i298, 1, !dbg !6742
  %and4.i300 = and i32 %shr.i297, %sub3.i299, !dbg !6743
  store i32 %and4.i300, i32* %retval.i288, align 4, !dbg !6744
  br label %av_clip_uintp2_c.exit303, !dbg !6744

if.else.i302:                                     ; preds = %av_clip_uintp2_c.exit319
  %124 = load i32, i32* %a.addr.i289, align 4, !dbg !6745
  store i32 %124, i32* %retval.i288, align 4, !dbg !6746
  br label %av_clip_uintp2_c.exit303, !dbg !6746

av_clip_uintp2_c.exit303:                         ; preds = %if.then.i301, %if.else.i302
  %125 = load i32, i32* %retval.i288, align 4, !dbg !6747
  %conv147 = trunc i32 %125 to i16, !dbg !6729
  %126 = load i32, i32* %x, align 4, !dbg !6748
  %mul148 = mul nsw i32 %126, 2, !dbg !6749
  %add149 = add nsw i32 %mul148, 0, !dbg !6750
  %conv150 = sext i32 %add149 to i64, !dbg !6748
  %127 = load i64, i64* %s0, align 8, !dbg !6751
  %add151 = add nsw i64 %conv150, %127, !dbg !6752
  %128 = load i16*, i16** %yuv0, align 8, !dbg !6753
  %arrayidx152 = getelementptr inbounds i16, i16* %128, i64 %add151, !dbg !6753
  store i16 %conv147, i16* %arrayidx152, align 2, !dbg !6754
  %129 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !6755
  %arrayidx153 = getelementptr inbounds i16, i16* %129, i64 0, !dbg !6755
  %130 = load i16, i16* %arrayidx153, align 2, !dbg !6755
  %conv154 = sext i16 %130 to i32, !dbg !6755
  %131 = load i32, i32* %r11, align 4, !dbg !6756
  %132 = load i32, i32* %cry, align 4, !dbg !6757
  %mul155 = mul nsw i32 %131, %132, !dbg !6758
  %133 = load i32, i32* %g11, align 4, !dbg !6759
  %134 = load i32, i32* %cgy, align 4, !dbg !6760
  %mul156 = mul nsw i32 %133, %134, !dbg !6761
  %add157 = add nsw i32 %mul155, %mul156, !dbg !6762
  %135 = load i32, i32* %b11, align 4, !dbg !6763
  %136 = load i32, i32* %cby, align 4, !dbg !6764
  %mul158 = mul nsw i32 %135, %136, !dbg !6765
  %add159 = add nsw i32 %add157, %mul158, !dbg !6766
  %add160 = add nsw i32 %add159, 65536, !dbg !6767
  %shr161 = ashr i32 %add160, 17, !dbg !6768
  %add162 = add nsw i32 %conv154, %shr161, !dbg !6769
  store i32 %add162, i32* %a.addr.i273, align 4, !dbg !6770
  store i32 12, i32* %p.addr.i274, align 4, !dbg !6770
  %137 = load i32, i32* %a.addr.i273, align 4, !dbg !6771
  %138 = load i32, i32* %p.addr.i274, align 4, !dbg !6772
  %shl.i275 = shl i32 1, %138, !dbg !6773
  %sub.i276 = sub nsw i32 %shl.i275, 1, !dbg !6774
  %neg.i277 = xor i32 %sub.i276, -1, !dbg !6775
  %and.i278 = and i32 %137, %neg.i277, !dbg !6776
  %tobool.i279 = icmp ne i32 %and.i278, 0, !dbg !6776
  br i1 %tobool.i279, label %if.then.i285, label %if.else.i286, !dbg !6777

if.then.i285:                                     ; preds = %av_clip_uintp2_c.exit303
  %139 = load i32, i32* %a.addr.i273, align 4, !dbg !6778
  %neg1.i280 = xor i32 %139, -1, !dbg !6779
  %shr.i281 = ashr i32 %neg1.i280, 31, !dbg !6780
  %140 = load i32, i32* %p.addr.i274, align 4, !dbg !6781
  %shl2.i282 = shl i32 1, %140, !dbg !6782
  %sub3.i283 = sub nsw i32 %shl2.i282, 1, !dbg !6783
  %and4.i284 = and i32 %shr.i281, %sub3.i283, !dbg !6784
  store i32 %and4.i284, i32* %retval.i272, align 4, !dbg !6785
  br label %av_clip_uintp2_c.exit287, !dbg !6785

if.else.i286:                                     ; preds = %av_clip_uintp2_c.exit303
  %141 = load i32, i32* %a.addr.i273, align 4, !dbg !6786
  store i32 %141, i32* %retval.i272, align 4, !dbg !6787
  br label %av_clip_uintp2_c.exit287, !dbg !6787

av_clip_uintp2_c.exit287:                         ; preds = %if.then.i285, %if.else.i286
  %142 = load i32, i32* %retval.i272, align 4, !dbg !6788
  %conv164 = trunc i32 %142 to i16, !dbg !6770
  %143 = load i32, i32* %x, align 4, !dbg !6789
  %mul165 = mul nsw i32 %143, 2, !dbg !6790
  %add166 = add nsw i32 %mul165, 1, !dbg !6791
  %conv167 = sext i32 %add166 to i64, !dbg !6789
  %144 = load i64, i64* %s0, align 8, !dbg !6792
  %add168 = add nsw i64 %conv167, %144, !dbg !6793
  %145 = load i16*, i16** %yuv0, align 8, !dbg !6794
  %arrayidx169 = getelementptr inbounds i16, i16* %145, i64 %add168, !dbg !6794
  store i16 %conv164, i16* %arrayidx169, align 2, !dbg !6795
  %146 = load i32, i32* %r00, align 4, !dbg !6796
  %147 = load i32, i32* %r01, align 4, !dbg !6797
  %add170 = add nsw i32 %146, %147, !dbg !6798
  %148 = load i32, i32* %r10, align 4, !dbg !6799
  %add171 = add nsw i32 %add170, %148, !dbg !6800
  %149 = load i32, i32* %r11, align 4, !dbg !6801
  %add172 = add nsw i32 %add171, %149, !dbg !6802
  %add173 = add nsw i32 %add172, 2, !dbg !6803
  %shr174 = ashr i32 %add173, 2, !dbg !6804
  %150 = load i32, i32* %cru, align 4, !dbg !6805
  %mul175 = mul nsw i32 %shr174, %150, !dbg !6806
  %151 = load i32, i32* %g00, align 4, !dbg !6807
  %152 = load i32, i32* %g01, align 4, !dbg !6808
  %add176 = add nsw i32 %151, %152, !dbg !6809
  %153 = load i32, i32* %g10, align 4, !dbg !6810
  %add177 = add nsw i32 %add176, %153, !dbg !6811
  %154 = load i32, i32* %g11, align 4, !dbg !6812
  %add178 = add nsw i32 %add177, %154, !dbg !6813
  %add179 = add nsw i32 %add178, 2, !dbg !6814
  %shr180 = ashr i32 %add179, 2, !dbg !6815
  %155 = load i32, i32* %cgu, align 4, !dbg !6816
  %mul181 = mul nsw i32 %shr180, %155, !dbg !6817
  %add182 = add nsw i32 %mul175, %mul181, !dbg !6818
  %156 = load i32, i32* %b00, align 4, !dbg !6819
  %157 = load i32, i32* %b01, align 4, !dbg !6820
  %add183 = add nsw i32 %156, %157, !dbg !6821
  %158 = load i32, i32* %b10, align 4, !dbg !6822
  %add184 = add nsw i32 %add183, %158, !dbg !6823
  %159 = load i32, i32* %b11, align 4, !dbg !6824
  %add185 = add nsw i32 %add184, %159, !dbg !6825
  %add186 = add nsw i32 %add185, 2, !dbg !6826
  %shr187 = ashr i32 %add186, 2, !dbg !6827
  %160 = load i32, i32* %cburv, align 4, !dbg !6828
  %mul188 = mul nsw i32 %shr187, %160, !dbg !6829
  %add189 = add nsw i32 %add182, %mul188, !dbg !6830
  %add190 = add nsw i32 %add189, 65536, !dbg !6831
  %shr191 = ashr i32 %add190, 17, !dbg !6832
  %add192 = add nsw i32 2048, %shr191, !dbg !6833
  store i32 %add192, i32* %a.addr.i257, align 4, !dbg !6834
  store i32 12, i32* %p.addr.i258, align 4, !dbg !6834
  %161 = load i32, i32* %a.addr.i257, align 4, !dbg !6835
  %162 = load i32, i32* %p.addr.i258, align 4, !dbg !6836
  %shl.i259 = shl i32 1, %162, !dbg !6837
  %sub.i260 = sub nsw i32 %shl.i259, 1, !dbg !6838
  %neg.i261 = xor i32 %sub.i260, -1, !dbg !6839
  %and.i262 = and i32 %161, %neg.i261, !dbg !6840
  %tobool.i263 = icmp ne i32 %and.i262, 0, !dbg !6840
  br i1 %tobool.i263, label %if.then.i269, label %if.else.i270, !dbg !6841

if.then.i269:                                     ; preds = %av_clip_uintp2_c.exit287
  %163 = load i32, i32* %a.addr.i257, align 4, !dbg !6842
  %neg1.i264 = xor i32 %163, -1, !dbg !6843
  %shr.i265 = ashr i32 %neg1.i264, 31, !dbg !6844
  %164 = load i32, i32* %p.addr.i258, align 4, !dbg !6845
  %shl2.i266 = shl i32 1, %164, !dbg !6846
  %sub3.i267 = sub nsw i32 %shl2.i266, 1, !dbg !6847
  %and4.i268 = and i32 %shr.i265, %sub3.i267, !dbg !6848
  store i32 %and4.i268, i32* %retval.i256, align 4, !dbg !6849
  br label %av_clip_uintp2_c.exit271, !dbg !6849

if.else.i270:                                     ; preds = %av_clip_uintp2_c.exit287
  %165 = load i32, i32* %a.addr.i257, align 4, !dbg !6850
  store i32 %165, i32* %retval.i256, align 4, !dbg !6851
  br label %av_clip_uintp2_c.exit271, !dbg !6851

av_clip_uintp2_c.exit271:                         ; preds = %if.then.i269, %if.else.i270
  %166 = load i32, i32* %retval.i256, align 4, !dbg !6852
  %conv194 = trunc i32 %166 to i16, !dbg !6834
  %167 = load i32, i32* %x, align 4, !dbg !6853
  %idxprom195 = sext i32 %167 to i64, !dbg !6854
  %168 = load i16*, i16** %yuv1, align 8, !dbg !6854
  %arrayidx196 = getelementptr inbounds i16, i16* %168, i64 %idxprom195, !dbg !6854
  store i16 %conv194, i16* %arrayidx196, align 2, !dbg !6855
  %169 = load i32, i32* %r00, align 4, !dbg !6856
  %170 = load i32, i32* %r01, align 4, !dbg !6857
  %add197 = add nsw i32 %169, %170, !dbg !6858
  %171 = load i32, i32* %r10, align 4, !dbg !6859
  %add198 = add nsw i32 %add197, %171, !dbg !6860
  %172 = load i32, i32* %r11, align 4, !dbg !6861
  %add199 = add nsw i32 %add198, %172, !dbg !6862
  %add200 = add nsw i32 %add199, 2, !dbg !6863
  %shr201 = ashr i32 %add200, 2, !dbg !6864
  %173 = load i32, i32* %cburv, align 4, !dbg !6865
  %mul202 = mul nsw i32 %shr201, %173, !dbg !6866
  %174 = load i32, i32* %g00, align 4, !dbg !6867
  %175 = load i32, i32* %g01, align 4, !dbg !6868
  %add203 = add nsw i32 %174, %175, !dbg !6869
  %176 = load i32, i32* %g10, align 4, !dbg !6870
  %add204 = add nsw i32 %add203, %176, !dbg !6871
  %177 = load i32, i32* %g11, align 4, !dbg !6872
  %add205 = add nsw i32 %add204, %177, !dbg !6873
  %add206 = add nsw i32 %add205, 2, !dbg !6874
  %shr207 = ashr i32 %add206, 2, !dbg !6875
  %178 = load i32, i32* %cgv, align 4, !dbg !6876
  %mul208 = mul nsw i32 %shr207, %178, !dbg !6877
  %add209 = add nsw i32 %mul202, %mul208, !dbg !6878
  %179 = load i32, i32* %b00, align 4, !dbg !6879
  %180 = load i32, i32* %b01, align 4, !dbg !6880
  %add210 = add nsw i32 %179, %180, !dbg !6881
  %181 = load i32, i32* %b10, align 4, !dbg !6882
  %add211 = add nsw i32 %add210, %181, !dbg !6883
  %182 = load i32, i32* %b11, align 4, !dbg !6884
  %add212 = add nsw i32 %add211, %182, !dbg !6885
  %add213 = add nsw i32 %add212, 2, !dbg !6886
  %shr214 = ashr i32 %add213, 2, !dbg !6887
  %183 = load i32, i32* %cbv, align 4, !dbg !6888
  %mul215 = mul nsw i32 %shr214, %183, !dbg !6889
  %add216 = add nsw i32 %add209, %mul215, !dbg !6890
  %add217 = add nsw i32 %add216, 65536, !dbg !6891
  %shr218 = ashr i32 %add217, 17, !dbg !6892
  %add219 = add nsw i32 2048, %shr218, !dbg !6893
  store i32 %add219, i32* %a.addr.i241, align 4, !dbg !6894
  store i32 12, i32* %p.addr.i242, align 4, !dbg !6894
  %184 = load i32, i32* %a.addr.i241, align 4, !dbg !6895
  %185 = load i32, i32* %p.addr.i242, align 4, !dbg !6896
  %shl.i243 = shl i32 1, %185, !dbg !6897
  %sub.i244 = sub nsw i32 %shl.i243, 1, !dbg !6898
  %neg.i245 = xor i32 %sub.i244, -1, !dbg !6899
  %and.i246 = and i32 %184, %neg.i245, !dbg !6900
  %tobool.i247 = icmp ne i32 %and.i246, 0, !dbg !6900
  br i1 %tobool.i247, label %if.then.i253, label %if.else.i254, !dbg !6901

if.then.i253:                                     ; preds = %av_clip_uintp2_c.exit271
  %186 = load i32, i32* %a.addr.i241, align 4, !dbg !6902
  %neg1.i248 = xor i32 %186, -1, !dbg !6903
  %shr.i249 = ashr i32 %neg1.i248, 31, !dbg !6904
  %187 = load i32, i32* %p.addr.i242, align 4, !dbg !6905
  %shl2.i250 = shl i32 1, %187, !dbg !6906
  %sub3.i251 = sub nsw i32 %shl2.i250, 1, !dbg !6907
  %and4.i252 = and i32 %shr.i249, %sub3.i251, !dbg !6908
  store i32 %and4.i252, i32* %retval.i240, align 4, !dbg !6909
  br label %av_clip_uintp2_c.exit255, !dbg !6909

if.else.i254:                                     ; preds = %av_clip_uintp2_c.exit271
  %188 = load i32, i32* %a.addr.i241, align 4, !dbg !6910
  store i32 %188, i32* %retval.i240, align 4, !dbg !6911
  br label %av_clip_uintp2_c.exit255, !dbg !6911

av_clip_uintp2_c.exit255:                         ; preds = %if.then.i253, %if.else.i254
  %189 = load i32, i32* %retval.i240, align 4, !dbg !6912
  %conv221 = trunc i32 %189 to i16, !dbg !6894
  %190 = load i32, i32* %x, align 4, !dbg !6913
  %idxprom222 = sext i32 %190 to i64, !dbg !6914
  %191 = load i16*, i16** %yuv2, align 8, !dbg !6914
  %arrayidx223 = getelementptr inbounds i16, i16* %191, i64 %idxprom222, !dbg !6914
  store i16 %conv221, i16* %arrayidx223, align 2, !dbg !6915
  br label %for.inc, !dbg !6916

for.inc:                                          ; preds = %av_clip_uintp2_c.exit255
  %192 = load i32, i32* %x, align 4, !dbg !6917
  %inc = add nsw i32 %192, 1, !dbg !6917
  store i32 %inc, i32* %x, align 4, !dbg !6917
  br label %for.cond42, !dbg !6919, !llvm.loop !6920

for.end:                                          ; preds = %for.cond42
  %193 = load i64, i64* %s0, align 8, !dbg !6922
  %mul224 = mul nsw i64 %193, 2, !dbg !6923
  %194 = load i16*, i16** %yuv0, align 8, !dbg !6924
  %add.ptr = getelementptr inbounds i16, i16* %194, i64 %mul224, !dbg !6924
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !6924
  %195 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6925
  %arrayidx225 = getelementptr inbounds i64, i64* %195, i64 1, !dbg !6925
  %196 = load i64, i64* %arrayidx225, align 8, !dbg !6925
  %div226 = udiv i64 %196, 2, !dbg !6926
  %197 = load i16*, i16** %yuv1, align 8, !dbg !6927
  %add.ptr227 = getelementptr inbounds i16, i16* %197, i64 %div226, !dbg !6927
  store i16* %add.ptr227, i16** %yuv1, align 8, !dbg !6927
  %198 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !6928
  %arrayidx228 = getelementptr inbounds i64, i64* %198, i64 2, !dbg !6928
  %199 = load i64, i64* %arrayidx228, align 8, !dbg !6928
  %div229 = udiv i64 %199, 2, !dbg !6929
  %200 = load i16*, i16** %yuv2, align 8, !dbg !6930
  %add.ptr230 = getelementptr inbounds i16, i16* %200, i64 %div229, !dbg !6930
  store i16* %add.ptr230, i16** %yuv2, align 8, !dbg !6930
  %201 = load i64, i64* %s.addr, align 8, !dbg !6931
  %mul231 = mul nsw i64 %201, 2, !dbg !6932
  %202 = load i16*, i16** %rgb0, align 8, !dbg !6933
  %add.ptr232 = getelementptr inbounds i16, i16* %202, i64 %mul231, !dbg !6933
  store i16* %add.ptr232, i16** %rgb0, align 8, !dbg !6933
  %203 = load i64, i64* %s.addr, align 8, !dbg !6934
  %mul233 = mul nsw i64 %203, 2, !dbg !6935
  %204 = load i16*, i16** %rgb1, align 8, !dbg !6936
  %add.ptr234 = getelementptr inbounds i16, i16* %204, i64 %mul233, !dbg !6936
  store i16* %add.ptr234, i16** %rgb1, align 8, !dbg !6936
  %205 = load i64, i64* %s.addr, align 8, !dbg !6937
  %mul235 = mul nsw i64 %205, 2, !dbg !6938
  %206 = load i16*, i16** %rgb2, align 8, !dbg !6939
  %add.ptr236 = getelementptr inbounds i16, i16* %206, i64 %mul235, !dbg !6939
  store i16* %add.ptr236, i16** %rgb2, align 8, !dbg !6939
  br label %for.inc237, !dbg !6940

for.inc237:                                       ; preds = %for.end
  %207 = load i32, i32* %y, align 4, !dbg !6941
  %inc238 = add nsw i32 %207, 1, !dbg !6941
  store i32 %inc238, i32* %y, align 4, !dbg !6941
  br label %for.cond, !dbg !6943, !llvm.loop !6944

for.end239:                                       ; preds = %for.cond
  ret void, !dbg !6946
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_444p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !6947 {
entry:
  %retval.i361 = alloca i8, align 1
  %a.addr.i362 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i362, metadata !3609, metadata !94), !dbg !6948
  %retval.i350 = alloca i8, align 1
  %a.addr.i351 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i351, metadata !3609, metadata !94), !dbg !6956
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !6958
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !6960, metadata !94), !dbg !6961
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !6962, metadata !94), !dbg !6963
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !6964, metadata !94), !dbg !6965
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !6966, metadata !94), !dbg !6967
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6968, metadata !94), !dbg !6969
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6970, metadata !94), !dbg !6971
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !6972, metadata !94), !dbg !6973
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !6974, metadata !94), !dbg !6975
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !6976, metadata !94), !dbg !6977
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !6978, metadata !94), !dbg !6979
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !6980
  store i8** %0, i8*** %yuv, align 8, !dbg !6979
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !6981, metadata !94), !dbg !6982
  %1 = load i8**, i8*** %yuv, align 8, !dbg !6983
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !6983
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !6983
  store i8* %2, i8** %yuv0, align 8, !dbg !6982
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !6984, metadata !94), !dbg !6985
  %3 = load i8**, i8*** %yuv, align 8, !dbg !6986
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !6986
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !6986
  store i8* %4, i8** %yuv1, align 8, !dbg !6985
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !6987, metadata !94), !dbg !6988
  %5 = load i8**, i8*** %yuv, align 8, !dbg !6989
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !6989
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !6989
  store i8* %6, i8** %yuv2, align 8, !dbg !6988
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !6990, metadata !94), !dbg !6991
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !6992
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !6992
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !6992
  store i16* %8, i16** %rgb0, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !6993, metadata !94), !dbg !6994
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !6995
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !6995
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !6995
  store i16* %10, i16** %rgb1, align 8, !dbg !6994
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !6996, metadata !94), !dbg !6997
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !6998
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !6998
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !6998
  store i16* %12, i16** %rgb2, align 8, !dbg !6997
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6999, metadata !94), !dbg !7000
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7001, metadata !94), !dbg !7002
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !7003, metadata !94), !dbg !7004
  store i32 21, i32* %sh, align 4, !dbg !7004
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !7005, metadata !94), !dbg !7006
  store i32 1048576, i32* %rnd, align 4, !dbg !7006
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !7007, metadata !94), !dbg !7008
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7009
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !7009
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !7009
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !7009
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !7009
  %conv = sext i16 %14 to i32, !dbg !7009
  store i32 %conv, i32* %cry, align 4, !dbg !7008
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !7010, metadata !94), !dbg !7011
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7012
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !7012
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !7012
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !7012
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !7012
  %conv12 = sext i16 %16 to i32, !dbg !7012
  store i32 %conv12, i32* %cgy, align 4, !dbg !7011
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !7013, metadata !94), !dbg !7014
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7015
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !7015
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !7015
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !7015
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !7015
  %conv16 = sext i16 %18 to i32, !dbg !7015
  store i32 %conv16, i32* %cby, align 4, !dbg !7014
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !7016, metadata !94), !dbg !7017
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7018
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !7018
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !7018
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !7018
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !7018
  %conv20 = sext i16 %20 to i32, !dbg !7018
  store i32 %conv20, i32* %cru, align 4, !dbg !7017
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !7019, metadata !94), !dbg !7020
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7021
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !7021
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !7021
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !7021
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !7021
  %conv24 = sext i16 %22 to i32, !dbg !7021
  store i32 %conv24, i32* %cgu, align 4, !dbg !7020
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !7022, metadata !94), !dbg !7023
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7024
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !7024
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !7024
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !7024
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !7024
  %conv28 = sext i16 %24 to i32, !dbg !7024
  store i32 %conv28, i32* %cburv, align 4, !dbg !7023
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !7025, metadata !94), !dbg !7026
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7027
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !7027
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !7027
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !7027
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !7027
  %conv32 = sext i16 %26 to i32, !dbg !7027
  store i32 %conv32, i32* %cgv, align 4, !dbg !7026
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !7028, metadata !94), !dbg !7029
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7030
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !7030
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !7030
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !7030
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !7030
  %conv36 = sext i16 %28 to i32, !dbg !7030
  store i32 %conv36, i32* %cbv, align 4, !dbg !7029
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !7031, metadata !94), !dbg !7032
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !7033
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !7033
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !7033
  %div = udiv i64 %30, 1, !dbg !7034
  store i64 %div, i64* %s0, align 8, !dbg !7032
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !7035, metadata !94), !dbg !7036
  store i32 128, i32* %uv_offset, align 4, !dbg !7036
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7037, metadata !94), !dbg !7038
  store i32 2097151, i32* %mask, align 4, !dbg !7038
  store i32 0, i32* %x, align 4, !dbg !7039
  br label %for.cond, !dbg !7041

for.cond:                                         ; preds = %for.inc, %entry
  %31 = load i32, i32* %x, align 4, !dbg !7042
  %32 = load i32, i32* %w.addr, align 4, !dbg !7045
  %cmp = icmp slt i32 %31, %32, !dbg !7046
  br i1 %cmp, label %for.body, label %for.end, !dbg !7047

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %x, align 4, !dbg !7048
  %idxprom = sext i32 %33 to i64, !dbg !7050
  %34 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7050
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %34, i64 0, !dbg !7050
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !7050
  %35 = load i32*, i32** %arrayidx40, align 8, !dbg !7050
  %arrayidx41 = getelementptr inbounds i32, i32* %35, i64 %idxprom, !dbg !7050
  store i32 1048576, i32* %arrayidx41, align 4, !dbg !7051
  %36 = load i32, i32* %x, align 4, !dbg !7052
  %idxprom42 = sext i32 %36 to i64, !dbg !7053
  %37 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7053
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %37, i64 0, !dbg !7053
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !7053
  %38 = load i32*, i32** %arrayidx44, align 8, !dbg !7053
  %arrayidx45 = getelementptr inbounds i32, i32* %38, i64 %idxprom42, !dbg !7053
  store i32 1048576, i32* %arrayidx45, align 4, !dbg !7054
  br label %for.inc, !dbg !7055

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %x, align 4, !dbg !7056
  %inc = add nsw i32 %39, 1, !dbg !7056
  store i32 %inc, i32* %x, align 4, !dbg !7056
  br label %for.cond, !dbg !7058, !llvm.loop !7059

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %w.addr, align 4, !dbg !7061
  %add = add nsw i32 %40, 1, !dbg !7062
  %sub = sub nsw i32 %add, 1, !dbg !7063
  %shr = ashr i32 %sub, 0, !dbg !7064
  store i32 %shr, i32* %w.addr, align 4, !dbg !7065
  %41 = load i32, i32* %h.addr, align 4, !dbg !7066
  %add46 = add nsw i32 %41, 1, !dbg !7067
  %sub47 = sub nsw i32 %add46, 1, !dbg !7068
  %shr48 = ashr i32 %sub47, 0, !dbg !7069
  store i32 %shr48, i32* %h.addr, align 4, !dbg !7070
  store i32 0, i32* %x, align 4, !dbg !7071
  br label %for.cond49, !dbg !7073

for.cond49:                                       ; preds = %for.inc69, %for.end
  %42 = load i32, i32* %x, align 4, !dbg !7074
  %43 = load i32, i32* %w.addr, align 4, !dbg !7077
  %cmp50 = icmp slt i32 %42, %43, !dbg !7078
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !7079

for.body52:                                       ; preds = %for.cond49
  %44 = load i32, i32* %x, align 4, !dbg !7080
  %idxprom53 = sext i32 %44 to i64, !dbg !7082
  %45 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7082
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %45, i64 2, !dbg !7082
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !7082
  %46 = load i32*, i32** %arrayidx55, align 8, !dbg !7082
  %arrayidx56 = getelementptr inbounds i32, i32* %46, i64 %idxprom53, !dbg !7082
  store i32 1048576, i32* %arrayidx56, align 4, !dbg !7083
  %47 = load i32, i32* %x, align 4, !dbg !7084
  %idxprom57 = sext i32 %47 to i64, !dbg !7085
  %48 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7085
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %48, i64 2, !dbg !7085
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !7085
  %49 = load i32*, i32** %arrayidx59, align 8, !dbg !7085
  %arrayidx60 = getelementptr inbounds i32, i32* %49, i64 %idxprom57, !dbg !7085
  store i32 1048576, i32* %arrayidx60, align 4, !dbg !7086
  %50 = load i32, i32* %x, align 4, !dbg !7087
  %idxprom61 = sext i32 %50 to i64, !dbg !7088
  %51 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7088
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %51, i64 1, !dbg !7088
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !7088
  %52 = load i32*, i32** %arrayidx63, align 8, !dbg !7088
  %arrayidx64 = getelementptr inbounds i32, i32* %52, i64 %idxprom61, !dbg !7088
  store i32 1048576, i32* %arrayidx64, align 4, !dbg !7089
  %53 = load i32, i32* %x, align 4, !dbg !7090
  %idxprom65 = sext i32 %53 to i64, !dbg !7091
  %54 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7091
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %54, i64 1, !dbg !7091
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !7091
  %55 = load i32*, i32** %arrayidx67, align 8, !dbg !7091
  %arrayidx68 = getelementptr inbounds i32, i32* %55, i64 %idxprom65, !dbg !7091
  store i32 1048576, i32* %arrayidx68, align 4, !dbg !7092
  br label %for.inc69, !dbg !7093

for.inc69:                                        ; preds = %for.body52
  %56 = load i32, i32* %x, align 4, !dbg !7094
  %inc70 = add nsw i32 %56, 1, !dbg !7094
  store i32 %inc70, i32* %x, align 4, !dbg !7094
  br label %for.cond49, !dbg !7096, !llvm.loop !7097

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !7099
  br label %for.cond72, !dbg !7100

for.cond72:                                       ; preds = %for.inc347, %for.end71
  %57 = load i32, i32* %y, align 4, !dbg !7101
  %58 = load i32, i32* %h.addr, align 4, !dbg !7103
  %cmp73 = icmp slt i32 %57, %58, !dbg !7104
  br i1 %cmp73, label %for.body75, label %for.end349, !dbg !7105

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !7106
  br label %for.cond76, !dbg !7107

for.cond76:                                       ; preds = %for.inc331, %for.body75
  %59 = load i32, i32* %x, align 4, !dbg !7108
  %60 = load i32, i32* %w.addr, align 4, !dbg !7110
  %cmp77 = icmp slt i32 %59, %60, !dbg !7111
  br i1 %cmp77, label %for.body79, label %for.end333, !dbg !7112

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !7113, metadata !94), !dbg !7114
  %61 = load i32, i32* %x, align 4, !dbg !7115
  %shl = shl i32 %61, 0, !dbg !7116
  %idxprom80 = sext i32 %shl to i64, !dbg !7117
  %62 = load i16*, i16** %rgb0, align 8, !dbg !7117
  %arrayidx81 = getelementptr inbounds i16, i16* %62, i64 %idxprom80, !dbg !7117
  %63 = load i16, i16* %arrayidx81, align 2, !dbg !7117
  %conv82 = sext i16 %63 to i32, !dbg !7117
  store i32 %conv82, i32* %r00, align 4, !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !7118, metadata !94), !dbg !7119
  %64 = load i32, i32* %x, align 4, !dbg !7120
  %shl83 = shl i32 %64, 0, !dbg !7121
  %idxprom84 = sext i32 %shl83 to i64, !dbg !7122
  %65 = load i16*, i16** %rgb1, align 8, !dbg !7122
  %arrayidx85 = getelementptr inbounds i16, i16* %65, i64 %idxprom84, !dbg !7122
  %66 = load i16, i16* %arrayidx85, align 2, !dbg !7122
  %conv86 = sext i16 %66 to i32, !dbg !7122
  store i32 %conv86, i32* %g00, align 4, !dbg !7119
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !7123, metadata !94), !dbg !7124
  %67 = load i32, i32* %x, align 4, !dbg !7125
  %shl87 = shl i32 %67, 0, !dbg !7126
  %idxprom88 = sext i32 %shl87 to i64, !dbg !7127
  %68 = load i16*, i16** %rgb2, align 8, !dbg !7127
  %arrayidx89 = getelementptr inbounds i16, i16* %68, i64 %idxprom88, !dbg !7127
  %69 = load i16, i16* %arrayidx89, align 2, !dbg !7127
  %conv90 = sext i16 %69 to i32, !dbg !7127
  store i32 %conv90, i32* %b00, align 4, !dbg !7124
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !7128, metadata !94), !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %u, metadata !7130, metadata !94), !dbg !7131
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7132, metadata !94), !dbg !7133
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7134, metadata !94), !dbg !7135
  %70 = load i32, i32* %r00, align 4, !dbg !7136
  %71 = load i32, i32* %cry, align 4, !dbg !7137
  %mul = mul nsw i32 %70, %71, !dbg !7138
  %72 = load i32, i32* %g00, align 4, !dbg !7139
  %73 = load i32, i32* %cgy, align 4, !dbg !7140
  %mul91 = mul nsw i32 %72, %73, !dbg !7141
  %add92 = add nsw i32 %mul, %mul91, !dbg !7142
  %74 = load i32, i32* %b00, align 4, !dbg !7143
  %75 = load i32, i32* %cby, align 4, !dbg !7144
  %mul93 = mul nsw i32 %74, %75, !dbg !7145
  %add94 = add nsw i32 %add92, %mul93, !dbg !7146
  %76 = load i32, i32* %x, align 4, !dbg !7147
  %shl95 = shl i32 %76, 0, !dbg !7148
  %idxprom96 = sext i32 %shl95 to i64, !dbg !7149
  %77 = load i32, i32* %y, align 4, !dbg !7150
  %and = and i32 %77, 1, !dbg !7151
  %idxprom97 = sext i32 %and to i64, !dbg !7149
  %78 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7149
  %arrayidx98 = getelementptr inbounds [2 x i32*], [2 x i32*]* %78, i64 0, !dbg !7149
  %arrayidx99 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx98, i64 0, i64 %idxprom97, !dbg !7149
  %79 = load i32*, i32** %arrayidx99, align 8, !dbg !7149
  %arrayidx100 = getelementptr inbounds i32, i32* %79, i64 %idxprom96, !dbg !7149
  %80 = load i32, i32* %arrayidx100, align 4, !dbg !7149
  %add101 = add nsw i32 %add94, %80, !dbg !7152
  store i32 %add101, i32* %y00, align 4, !dbg !7153
  %81 = load i32, i32* %y00, align 4, !dbg !7154
  %82 = load i32, i32* %mask, align 4, !dbg !7155
  %and102 = and i32 %81, %82, !dbg !7156
  %sub103 = sub i32 %and102, 1048576, !dbg !7157
  store i32 %sub103, i32* %diff, align 4, !dbg !7158
  %83 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !7159
  %arrayidx104 = getelementptr inbounds i16, i16* %83, i64 0, !dbg !7159
  %84 = load i16, i16* %arrayidx104, align 2, !dbg !7159
  %conv105 = sext i16 %84 to i32, !dbg !7159
  %85 = load i32, i32* %y00, align 4, !dbg !7160
  %shr106 = ashr i32 %85, 21, !dbg !7161
  %add107 = add nsw i32 %conv105, %shr106, !dbg !7162
  store i32 %add107, i32* %a.addr.i, align 4, !dbg !7163
  %86 = load i32, i32* %a.addr.i, align 4, !dbg !7164
  %and.i = and i32 %86, -256, !dbg !7165
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7165
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7166

if.then.i:                                        ; preds = %for.body79
  %87 = load i32, i32* %a.addr.i, align 4, !dbg !7167
  %neg.i = xor i32 %87, -1, !dbg !7168
  %shr.i = ashr i32 %neg.i, 31, !dbg !7169
  %conv.i = trunc i32 %shr.i to i8, !dbg !7170
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !7171
  br label %av_clip_uint8_c.exit, !dbg !7171

if.else.i:                                        ; preds = %for.body79
  %88 = load i32, i32* %a.addr.i, align 4, !dbg !7172
  %conv1.i = trunc i32 %88 to i8, !dbg !7172
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !7173
  br label %av_clip_uint8_c.exit, !dbg !7173

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %89 = load i8, i8* %retval.i, align 1, !dbg !7174
  %90 = load i32, i32* %x, align 4, !dbg !7175
  %shl108 = shl i32 %90, 0, !dbg !7176
  %idxprom109 = sext i32 %shl108 to i64, !dbg !7177
  %91 = load i8*, i8** %yuv0, align 8, !dbg !7177
  %arrayidx110 = getelementptr inbounds i8, i8* %91, i64 %idxprom109, !dbg !7177
  store i8 %89, i8* %arrayidx110, align 1, !dbg !7178
  %92 = load i32, i32* %diff, align 4, !dbg !7179
  %mul111 = mul nsw i32 %92, 7, !dbg !7180
  %add112 = add nsw i32 %mul111, 8, !dbg !7181
  %shr113 = ashr i32 %add112, 4, !dbg !7182
  %93 = load i32, i32* %x, align 4, !dbg !7183
  %shl114 = shl i32 %93, 0, !dbg !7184
  %add115 = add nsw i32 %shl114, 1, !dbg !7185
  %idxprom116 = sext i32 %add115 to i64, !dbg !7186
  %94 = load i32, i32* %y, align 4, !dbg !7187
  %and117 = and i32 %94, 1, !dbg !7188
  %idxprom118 = sext i32 %and117 to i64, !dbg !7186
  %95 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7186
  %arrayidx119 = getelementptr inbounds [2 x i32*], [2 x i32*]* %95, i64 0, !dbg !7186
  %arrayidx120 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx119, i64 0, i64 %idxprom118, !dbg !7186
  %96 = load i32*, i32** %arrayidx120, align 8, !dbg !7186
  %arrayidx121 = getelementptr inbounds i32, i32* %96, i64 %idxprom116, !dbg !7186
  %97 = load i32, i32* %arrayidx121, align 4, !dbg !7189
  %add122 = add nsw i32 %97, %shr113, !dbg !7189
  store i32 %add122, i32* %arrayidx121, align 4, !dbg !7189
  %98 = load i32, i32* %diff, align 4, !dbg !7190
  %mul123 = mul nsw i32 %98, 3, !dbg !7191
  %add124 = add nsw i32 %mul123, 8, !dbg !7192
  %shr125 = ashr i32 %add124, 4, !dbg !7193
  %99 = load i32, i32* %x, align 4, !dbg !7194
  %shl126 = shl i32 %99, 0, !dbg !7195
  %sub127 = sub nsw i32 %shl126, 1, !dbg !7196
  %idxprom128 = sext i32 %sub127 to i64, !dbg !7197
  %100 = load i32, i32* %y, align 4, !dbg !7198
  %and129 = and i32 %100, 1, !dbg !7199
  %tobool = icmp ne i32 %and129, 0, !dbg !7200
  %lnot = xor i1 %tobool, true, !dbg !7200
  %lnot.ext = zext i1 %lnot to i32, !dbg !7200
  %idxprom130 = sext i32 %lnot.ext to i64, !dbg !7197
  %101 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7197
  %arrayidx131 = getelementptr inbounds [2 x i32*], [2 x i32*]* %101, i64 0, !dbg !7197
  %arrayidx132 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx131, i64 0, i64 %idxprom130, !dbg !7197
  %102 = load i32*, i32** %arrayidx132, align 8, !dbg !7197
  %arrayidx133 = getelementptr inbounds i32, i32* %102, i64 %idxprom128, !dbg !7197
  %103 = load i32, i32* %arrayidx133, align 4, !dbg !7201
  %add134 = add nsw i32 %103, %shr125, !dbg !7201
  store i32 %add134, i32* %arrayidx133, align 4, !dbg !7201
  %104 = load i32, i32* %diff, align 4, !dbg !7202
  %mul135 = mul nsw i32 %104, 5, !dbg !7203
  %add136 = add nsw i32 %mul135, 8, !dbg !7204
  %shr137 = ashr i32 %add136, 4, !dbg !7205
  %105 = load i32, i32* %x, align 4, !dbg !7206
  %shl138 = shl i32 %105, 0, !dbg !7207
  %add139 = add nsw i32 %shl138, 0, !dbg !7208
  %idxprom140 = sext i32 %add139 to i64, !dbg !7209
  %106 = load i32, i32* %y, align 4, !dbg !7210
  %and141 = and i32 %106, 1, !dbg !7211
  %tobool142 = icmp ne i32 %and141, 0, !dbg !7212
  %lnot143 = xor i1 %tobool142, true, !dbg !7212
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !7212
  %idxprom145 = sext i32 %lnot.ext144 to i64, !dbg !7209
  %107 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7209
  %arrayidx146 = getelementptr inbounds [2 x i32*], [2 x i32*]* %107, i64 0, !dbg !7209
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx146, i64 0, i64 %idxprom145, !dbg !7209
  %108 = load i32*, i32** %arrayidx147, align 8, !dbg !7209
  %arrayidx148 = getelementptr inbounds i32, i32* %108, i64 %idxprom140, !dbg !7209
  %109 = load i32, i32* %arrayidx148, align 4, !dbg !7213
  %add149 = add nsw i32 %109, %shr137, !dbg !7213
  store i32 %add149, i32* %arrayidx148, align 4, !dbg !7213
  %110 = load i32, i32* %diff, align 4, !dbg !7214
  %mul150 = mul nsw i32 %110, 1, !dbg !7215
  %add151 = add nsw i32 %mul150, 8, !dbg !7216
  %shr152 = ashr i32 %add151, 4, !dbg !7217
  %111 = load i32, i32* %x, align 4, !dbg !7218
  %shl153 = shl i32 %111, 0, !dbg !7219
  %add154 = add nsw i32 %shl153, 1, !dbg !7220
  %idxprom155 = sext i32 %add154 to i64, !dbg !7221
  %112 = load i32, i32* %y, align 4, !dbg !7222
  %and156 = and i32 %112, 1, !dbg !7223
  %tobool157 = icmp ne i32 %and156, 0, !dbg !7224
  %lnot158 = xor i1 %tobool157, true, !dbg !7224
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !7224
  %idxprom160 = sext i32 %lnot.ext159 to i64, !dbg !7221
  %113 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7221
  %arrayidx161 = getelementptr inbounds [2 x i32*], [2 x i32*]* %113, i64 0, !dbg !7221
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx161, i64 0, i64 %idxprom160, !dbg !7221
  %114 = load i32*, i32** %arrayidx162, align 8, !dbg !7221
  %arrayidx163 = getelementptr inbounds i32, i32* %114, i64 %idxprom155, !dbg !7221
  %115 = load i32, i32* %arrayidx163, align 4, !dbg !7225
  %add164 = add nsw i32 %115, %shr152, !dbg !7225
  store i32 %add164, i32* %arrayidx163, align 4, !dbg !7225
  %116 = load i32, i32* %x, align 4, !dbg !7226
  %shl165 = shl i32 %116, 0, !dbg !7227
  %add166 = add nsw i32 %shl165, 0, !dbg !7228
  %idxprom167 = sext i32 %add166 to i64, !dbg !7229
  %117 = load i32, i32* %y, align 4, !dbg !7230
  %and168 = and i32 %117, 1, !dbg !7231
  %idxprom169 = sext i32 %and168 to i64, !dbg !7229
  %118 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7229
  %arrayidx170 = getelementptr inbounds [2 x i32*], [2 x i32*]* %118, i64 0, !dbg !7229
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx170, i64 0, i64 %idxprom169, !dbg !7229
  %119 = load i32*, i32** %arrayidx171, align 8, !dbg !7229
  %arrayidx172 = getelementptr inbounds i32, i32* %119, i64 %idxprom167, !dbg !7229
  store i32 1048576, i32* %arrayidx172, align 4, !dbg !7232
  %120 = load i32, i32* %r00, align 4, !dbg !7233
  %121 = load i32, i32* %cru, align 4, !dbg !7234
  %mul173 = mul nsw i32 %120, %121, !dbg !7235
  %122 = load i32, i32* %g00, align 4, !dbg !7236
  %123 = load i32, i32* %cgu, align 4, !dbg !7237
  %mul174 = mul nsw i32 %122, %123, !dbg !7238
  %add175 = add nsw i32 %mul173, %mul174, !dbg !7239
  %124 = load i32, i32* %b00, align 4, !dbg !7240
  %125 = load i32, i32* %cburv, align 4, !dbg !7241
  %mul176 = mul nsw i32 %124, %125, !dbg !7242
  %add177 = add nsw i32 %add175, %mul176, !dbg !7243
  %126 = load i32, i32* %x, align 4, !dbg !7244
  %idxprom178 = sext i32 %126 to i64, !dbg !7245
  %127 = load i32, i32* %y, align 4, !dbg !7246
  %and179 = and i32 %127, 1, !dbg !7247
  %idxprom180 = sext i32 %and179 to i64, !dbg !7245
  %128 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7245
  %arrayidx181 = getelementptr inbounds [2 x i32*], [2 x i32*]* %128, i64 1, !dbg !7245
  %arrayidx182 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx181, i64 0, i64 %idxprom180, !dbg !7245
  %129 = load i32*, i32** %arrayidx182, align 8, !dbg !7245
  %arrayidx183 = getelementptr inbounds i32, i32* %129, i64 %idxprom178, !dbg !7245
  %130 = load i32, i32* %arrayidx183, align 4, !dbg !7245
  %add184 = add nsw i32 %add177, %130, !dbg !7248
  store i32 %add184, i32* %u, align 4, !dbg !7249
  %131 = load i32, i32* %u, align 4, !dbg !7250
  %132 = load i32, i32* %mask, align 4, !dbg !7251
  %and185 = and i32 %131, %132, !dbg !7252
  %sub186 = sub i32 %and185, 1048576, !dbg !7253
  store i32 %sub186, i32* %diff, align 4, !dbg !7254
  %133 = load i32, i32* %u, align 4, !dbg !7255
  %shr187 = ashr i32 %133, 21, !dbg !7256
  %add188 = add nsw i32 128, %shr187, !dbg !7257
  store i32 %add188, i32* %a.addr.i362, align 4, !dbg !7258
  %134 = load i32, i32* %a.addr.i362, align 4, !dbg !7259
  %and.i363 = and i32 %134, -256, !dbg !7260
  %tobool.i364 = icmp ne i32 %and.i363, 0, !dbg !7260
  br i1 %tobool.i364, label %if.then.i368, label %if.else.i370, !dbg !7261

if.then.i368:                                     ; preds = %av_clip_uint8_c.exit
  %135 = load i32, i32* %a.addr.i362, align 4, !dbg !7262
  %neg.i365 = xor i32 %135, -1, !dbg !7263
  %shr.i366 = ashr i32 %neg.i365, 31, !dbg !7264
  %conv.i367 = trunc i32 %shr.i366 to i8, !dbg !7265
  store i8 %conv.i367, i8* %retval.i361, align 1, !dbg !7266
  br label %av_clip_uint8_c.exit371, !dbg !7266

if.else.i370:                                     ; preds = %av_clip_uint8_c.exit
  %136 = load i32, i32* %a.addr.i362, align 4, !dbg !7267
  %conv1.i369 = trunc i32 %136 to i8, !dbg !7267
  store i8 %conv1.i369, i8* %retval.i361, align 1, !dbg !7268
  br label %av_clip_uint8_c.exit371, !dbg !7268

av_clip_uint8_c.exit371:                          ; preds = %if.then.i368, %if.else.i370
  %137 = load i8, i8* %retval.i361, align 1, !dbg !7269
  %138 = load i32, i32* %x, align 4, !dbg !7270
  %idxprom190 = sext i32 %138 to i64, !dbg !7271
  %139 = load i8*, i8** %yuv1, align 8, !dbg !7271
  %arrayidx191 = getelementptr inbounds i8, i8* %139, i64 %idxprom190, !dbg !7271
  store i8 %137, i8* %arrayidx191, align 1, !dbg !7272
  %140 = load i32, i32* %diff, align 4, !dbg !7273
  %mul192 = mul nsw i32 %140, 7, !dbg !7274
  %add193 = add nsw i32 %mul192, 8, !dbg !7275
  %shr194 = ashr i32 %add193, 4, !dbg !7276
  %141 = load i32, i32* %x, align 4, !dbg !7277
  %add195 = add nsw i32 %141, 1, !dbg !7278
  %idxprom196 = sext i32 %add195 to i64, !dbg !7279
  %142 = load i32, i32* %y, align 4, !dbg !7280
  %and197 = and i32 %142, 1, !dbg !7281
  %idxprom198 = sext i32 %and197 to i64, !dbg !7279
  %143 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7279
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %143, i64 1, !dbg !7279
  %arrayidx200 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx199, i64 0, i64 %idxprom198, !dbg !7279
  %144 = load i32*, i32** %arrayidx200, align 8, !dbg !7279
  %arrayidx201 = getelementptr inbounds i32, i32* %144, i64 %idxprom196, !dbg !7279
  %145 = load i32, i32* %arrayidx201, align 4, !dbg !7282
  %add202 = add nsw i32 %145, %shr194, !dbg !7282
  store i32 %add202, i32* %arrayidx201, align 4, !dbg !7282
  %146 = load i32, i32* %diff, align 4, !dbg !7283
  %mul203 = mul nsw i32 %146, 3, !dbg !7284
  %add204 = add nsw i32 %mul203, 8, !dbg !7285
  %shr205 = ashr i32 %add204, 4, !dbg !7286
  %147 = load i32, i32* %x, align 4, !dbg !7287
  %sub206 = sub nsw i32 %147, 1, !dbg !7288
  %idxprom207 = sext i32 %sub206 to i64, !dbg !7289
  %148 = load i32, i32* %y, align 4, !dbg !7290
  %and208 = and i32 %148, 1, !dbg !7291
  %tobool209 = icmp ne i32 %and208, 0, !dbg !7292
  %lnot210 = xor i1 %tobool209, true, !dbg !7292
  %lnot.ext211 = zext i1 %lnot210 to i32, !dbg !7292
  %idxprom212 = sext i32 %lnot.ext211 to i64, !dbg !7289
  %149 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7289
  %arrayidx213 = getelementptr inbounds [2 x i32*], [2 x i32*]* %149, i64 1, !dbg !7289
  %arrayidx214 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx213, i64 0, i64 %idxprom212, !dbg !7289
  %150 = load i32*, i32** %arrayidx214, align 8, !dbg !7289
  %arrayidx215 = getelementptr inbounds i32, i32* %150, i64 %idxprom207, !dbg !7289
  %151 = load i32, i32* %arrayidx215, align 4, !dbg !7293
  %add216 = add nsw i32 %151, %shr205, !dbg !7293
  store i32 %add216, i32* %arrayidx215, align 4, !dbg !7293
  %152 = load i32, i32* %diff, align 4, !dbg !7294
  %mul217 = mul nsw i32 %152, 5, !dbg !7295
  %add218 = add nsw i32 %mul217, 8, !dbg !7296
  %shr219 = ashr i32 %add218, 4, !dbg !7297
  %153 = load i32, i32* %x, align 4, !dbg !7298
  %add220 = add nsw i32 %153, 0, !dbg !7299
  %idxprom221 = sext i32 %add220 to i64, !dbg !7300
  %154 = load i32, i32* %y, align 4, !dbg !7301
  %and222 = and i32 %154, 1, !dbg !7302
  %tobool223 = icmp ne i32 %and222, 0, !dbg !7303
  %lnot224 = xor i1 %tobool223, true, !dbg !7303
  %lnot.ext225 = zext i1 %lnot224 to i32, !dbg !7303
  %idxprom226 = sext i32 %lnot.ext225 to i64, !dbg !7300
  %155 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7300
  %arrayidx227 = getelementptr inbounds [2 x i32*], [2 x i32*]* %155, i64 1, !dbg !7300
  %arrayidx228 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx227, i64 0, i64 %idxprom226, !dbg !7300
  %156 = load i32*, i32** %arrayidx228, align 8, !dbg !7300
  %arrayidx229 = getelementptr inbounds i32, i32* %156, i64 %idxprom221, !dbg !7300
  %157 = load i32, i32* %arrayidx229, align 4, !dbg !7304
  %add230 = add nsw i32 %157, %shr219, !dbg !7304
  store i32 %add230, i32* %arrayidx229, align 4, !dbg !7304
  %158 = load i32, i32* %diff, align 4, !dbg !7305
  %mul231 = mul nsw i32 %158, 1, !dbg !7306
  %add232 = add nsw i32 %mul231, 8, !dbg !7307
  %shr233 = ashr i32 %add232, 4, !dbg !7308
  %159 = load i32, i32* %x, align 4, !dbg !7309
  %add234 = add nsw i32 %159, 1, !dbg !7310
  %idxprom235 = sext i32 %add234 to i64, !dbg !7311
  %160 = load i32, i32* %y, align 4, !dbg !7312
  %and236 = and i32 %160, 1, !dbg !7313
  %tobool237 = icmp ne i32 %and236, 0, !dbg !7314
  %lnot238 = xor i1 %tobool237, true, !dbg !7314
  %lnot.ext239 = zext i1 %lnot238 to i32, !dbg !7314
  %idxprom240 = sext i32 %lnot.ext239 to i64, !dbg !7311
  %161 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7311
  %arrayidx241 = getelementptr inbounds [2 x i32*], [2 x i32*]* %161, i64 1, !dbg !7311
  %arrayidx242 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx241, i64 0, i64 %idxprom240, !dbg !7311
  %162 = load i32*, i32** %arrayidx242, align 8, !dbg !7311
  %arrayidx243 = getelementptr inbounds i32, i32* %162, i64 %idxprom235, !dbg !7311
  %163 = load i32, i32* %arrayidx243, align 4, !dbg !7315
  %add244 = add nsw i32 %163, %shr233, !dbg !7315
  store i32 %add244, i32* %arrayidx243, align 4, !dbg !7315
  %164 = load i32, i32* %x, align 4, !dbg !7316
  %add245 = add nsw i32 %164, 0, !dbg !7317
  %idxprom246 = sext i32 %add245 to i64, !dbg !7318
  %165 = load i32, i32* %y, align 4, !dbg !7319
  %and247 = and i32 %165, 1, !dbg !7320
  %idxprom248 = sext i32 %and247 to i64, !dbg !7318
  %166 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7318
  %arrayidx249 = getelementptr inbounds [2 x i32*], [2 x i32*]* %166, i64 1, !dbg !7318
  %arrayidx250 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx249, i64 0, i64 %idxprom248, !dbg !7318
  %167 = load i32*, i32** %arrayidx250, align 8, !dbg !7318
  %arrayidx251 = getelementptr inbounds i32, i32* %167, i64 %idxprom246, !dbg !7318
  store i32 1048576, i32* %arrayidx251, align 4, !dbg !7321
  %168 = load i32, i32* %r00, align 4, !dbg !7322
  %169 = load i32, i32* %cburv, align 4, !dbg !7323
  %mul252 = mul nsw i32 %168, %169, !dbg !7324
  %170 = load i32, i32* %g00, align 4, !dbg !7325
  %171 = load i32, i32* %cgv, align 4, !dbg !7326
  %mul253 = mul nsw i32 %170, %171, !dbg !7327
  %add254 = add nsw i32 %mul252, %mul253, !dbg !7328
  %172 = load i32, i32* %b00, align 4, !dbg !7329
  %173 = load i32, i32* %cbv, align 4, !dbg !7330
  %mul255 = mul nsw i32 %172, %173, !dbg !7331
  %add256 = add nsw i32 %add254, %mul255, !dbg !7332
  %174 = load i32, i32* %x, align 4, !dbg !7333
  %idxprom257 = sext i32 %174 to i64, !dbg !7334
  %175 = load i32, i32* %y, align 4, !dbg !7335
  %and258 = and i32 %175, 1, !dbg !7336
  %idxprom259 = sext i32 %and258 to i64, !dbg !7334
  %176 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7334
  %arrayidx260 = getelementptr inbounds [2 x i32*], [2 x i32*]* %176, i64 2, !dbg !7334
  %arrayidx261 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx260, i64 0, i64 %idxprom259, !dbg !7334
  %177 = load i32*, i32** %arrayidx261, align 8, !dbg !7334
  %arrayidx262 = getelementptr inbounds i32, i32* %177, i64 %idxprom257, !dbg !7334
  %178 = load i32, i32* %arrayidx262, align 4, !dbg !7334
  %add263 = add nsw i32 %add256, %178, !dbg !7337
  store i32 %add263, i32* %v, align 4, !dbg !7338
  %179 = load i32, i32* %v, align 4, !dbg !7339
  %180 = load i32, i32* %mask, align 4, !dbg !7340
  %and264 = and i32 %179, %180, !dbg !7341
  %sub265 = sub i32 %and264, 1048576, !dbg !7342
  store i32 %sub265, i32* %diff, align 4, !dbg !7343
  %181 = load i32, i32* %v, align 4, !dbg !7344
  %shr266 = ashr i32 %181, 21, !dbg !7345
  %add267 = add nsw i32 128, %shr266, !dbg !7346
  store i32 %add267, i32* %a.addr.i351, align 4, !dbg !7347
  %182 = load i32, i32* %a.addr.i351, align 4, !dbg !7348
  %and.i352 = and i32 %182, -256, !dbg !7349
  %tobool.i353 = icmp ne i32 %and.i352, 0, !dbg !7349
  br i1 %tobool.i353, label %if.then.i357, label %if.else.i359, !dbg !7350

if.then.i357:                                     ; preds = %av_clip_uint8_c.exit371
  %183 = load i32, i32* %a.addr.i351, align 4, !dbg !7351
  %neg.i354 = xor i32 %183, -1, !dbg !7352
  %shr.i355 = ashr i32 %neg.i354, 31, !dbg !7353
  %conv.i356 = trunc i32 %shr.i355 to i8, !dbg !7354
  store i8 %conv.i356, i8* %retval.i350, align 1, !dbg !7355
  br label %av_clip_uint8_c.exit360, !dbg !7355

if.else.i359:                                     ; preds = %av_clip_uint8_c.exit371
  %184 = load i32, i32* %a.addr.i351, align 4, !dbg !7356
  %conv1.i358 = trunc i32 %184 to i8, !dbg !7356
  store i8 %conv1.i358, i8* %retval.i350, align 1, !dbg !7357
  br label %av_clip_uint8_c.exit360, !dbg !7357

av_clip_uint8_c.exit360:                          ; preds = %if.then.i357, %if.else.i359
  %185 = load i8, i8* %retval.i350, align 1, !dbg !7358
  %186 = load i32, i32* %x, align 4, !dbg !7359
  %idxprom269 = sext i32 %186 to i64, !dbg !7360
  %187 = load i8*, i8** %yuv2, align 8, !dbg !7360
  %arrayidx270 = getelementptr inbounds i8, i8* %187, i64 %idxprom269, !dbg !7360
  store i8 %185, i8* %arrayidx270, align 1, !dbg !7361
  %188 = load i32, i32* %diff, align 4, !dbg !7362
  %mul271 = mul nsw i32 %188, 7, !dbg !7363
  %add272 = add nsw i32 %mul271, 8, !dbg !7364
  %shr273 = ashr i32 %add272, 4, !dbg !7365
  %189 = load i32, i32* %x, align 4, !dbg !7366
  %add274 = add nsw i32 %189, 1, !dbg !7367
  %idxprom275 = sext i32 %add274 to i64, !dbg !7368
  %190 = load i32, i32* %y, align 4, !dbg !7369
  %and276 = and i32 %190, 1, !dbg !7370
  %idxprom277 = sext i32 %and276 to i64, !dbg !7368
  %191 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7368
  %arrayidx278 = getelementptr inbounds [2 x i32*], [2 x i32*]* %191, i64 2, !dbg !7368
  %arrayidx279 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx278, i64 0, i64 %idxprom277, !dbg !7368
  %192 = load i32*, i32** %arrayidx279, align 8, !dbg !7368
  %arrayidx280 = getelementptr inbounds i32, i32* %192, i64 %idxprom275, !dbg !7368
  %193 = load i32, i32* %arrayidx280, align 4, !dbg !7371
  %add281 = add nsw i32 %193, %shr273, !dbg !7371
  store i32 %add281, i32* %arrayidx280, align 4, !dbg !7371
  %194 = load i32, i32* %diff, align 4, !dbg !7372
  %mul282 = mul nsw i32 %194, 3, !dbg !7373
  %add283 = add nsw i32 %mul282, 8, !dbg !7374
  %shr284 = ashr i32 %add283, 4, !dbg !7375
  %195 = load i32, i32* %x, align 4, !dbg !7376
  %sub285 = sub nsw i32 %195, 1, !dbg !7377
  %idxprom286 = sext i32 %sub285 to i64, !dbg !7378
  %196 = load i32, i32* %y, align 4, !dbg !7379
  %and287 = and i32 %196, 1, !dbg !7380
  %tobool288 = icmp ne i32 %and287, 0, !dbg !7381
  %lnot289 = xor i1 %tobool288, true, !dbg !7381
  %lnot.ext290 = zext i1 %lnot289 to i32, !dbg !7381
  %idxprom291 = sext i32 %lnot.ext290 to i64, !dbg !7378
  %197 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7378
  %arrayidx292 = getelementptr inbounds [2 x i32*], [2 x i32*]* %197, i64 2, !dbg !7378
  %arrayidx293 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx292, i64 0, i64 %idxprom291, !dbg !7378
  %198 = load i32*, i32** %arrayidx293, align 8, !dbg !7378
  %arrayidx294 = getelementptr inbounds i32, i32* %198, i64 %idxprom286, !dbg !7378
  %199 = load i32, i32* %arrayidx294, align 4, !dbg !7382
  %add295 = add nsw i32 %199, %shr284, !dbg !7382
  store i32 %add295, i32* %arrayidx294, align 4, !dbg !7382
  %200 = load i32, i32* %diff, align 4, !dbg !7383
  %mul296 = mul nsw i32 %200, 5, !dbg !7384
  %add297 = add nsw i32 %mul296, 8, !dbg !7385
  %shr298 = ashr i32 %add297, 4, !dbg !7386
  %201 = load i32, i32* %x, align 4, !dbg !7387
  %add299 = add nsw i32 %201, 0, !dbg !7388
  %idxprom300 = sext i32 %add299 to i64, !dbg !7389
  %202 = load i32, i32* %y, align 4, !dbg !7390
  %and301 = and i32 %202, 1, !dbg !7391
  %tobool302 = icmp ne i32 %and301, 0, !dbg !7392
  %lnot303 = xor i1 %tobool302, true, !dbg !7392
  %lnot.ext304 = zext i1 %lnot303 to i32, !dbg !7392
  %idxprom305 = sext i32 %lnot.ext304 to i64, !dbg !7389
  %203 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7389
  %arrayidx306 = getelementptr inbounds [2 x i32*], [2 x i32*]* %203, i64 2, !dbg !7389
  %arrayidx307 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx306, i64 0, i64 %idxprom305, !dbg !7389
  %204 = load i32*, i32** %arrayidx307, align 8, !dbg !7389
  %arrayidx308 = getelementptr inbounds i32, i32* %204, i64 %idxprom300, !dbg !7389
  %205 = load i32, i32* %arrayidx308, align 4, !dbg !7393
  %add309 = add nsw i32 %205, %shr298, !dbg !7393
  store i32 %add309, i32* %arrayidx308, align 4, !dbg !7393
  %206 = load i32, i32* %diff, align 4, !dbg !7394
  %mul310 = mul nsw i32 %206, 1, !dbg !7395
  %add311 = add nsw i32 %mul310, 8, !dbg !7396
  %shr312 = ashr i32 %add311, 4, !dbg !7397
  %207 = load i32, i32* %x, align 4, !dbg !7398
  %add313 = add nsw i32 %207, 1, !dbg !7399
  %idxprom314 = sext i32 %add313 to i64, !dbg !7400
  %208 = load i32, i32* %y, align 4, !dbg !7401
  %and315 = and i32 %208, 1, !dbg !7402
  %tobool316 = icmp ne i32 %and315, 0, !dbg !7403
  %lnot317 = xor i1 %tobool316, true, !dbg !7403
  %lnot.ext318 = zext i1 %lnot317 to i32, !dbg !7403
  %idxprom319 = sext i32 %lnot.ext318 to i64, !dbg !7400
  %209 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7400
  %arrayidx320 = getelementptr inbounds [2 x i32*], [2 x i32*]* %209, i64 2, !dbg !7400
  %arrayidx321 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx320, i64 0, i64 %idxprom319, !dbg !7400
  %210 = load i32*, i32** %arrayidx321, align 8, !dbg !7400
  %arrayidx322 = getelementptr inbounds i32, i32* %210, i64 %idxprom314, !dbg !7400
  %211 = load i32, i32* %arrayidx322, align 4, !dbg !7404
  %add323 = add nsw i32 %211, %shr312, !dbg !7404
  store i32 %add323, i32* %arrayidx322, align 4, !dbg !7404
  %212 = load i32, i32* %x, align 4, !dbg !7405
  %add324 = add nsw i32 %212, 0, !dbg !7406
  %idxprom325 = sext i32 %add324 to i64, !dbg !7407
  %213 = load i32, i32* %y, align 4, !dbg !7408
  %and326 = and i32 %213, 1, !dbg !7409
  %idxprom327 = sext i32 %and326 to i64, !dbg !7407
  %214 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7407
  %arrayidx328 = getelementptr inbounds [2 x i32*], [2 x i32*]* %214, i64 2, !dbg !7407
  %arrayidx329 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx328, i64 0, i64 %idxprom327, !dbg !7407
  %215 = load i32*, i32** %arrayidx329, align 8, !dbg !7407
  %arrayidx330 = getelementptr inbounds i32, i32* %215, i64 %idxprom325, !dbg !7407
  store i32 1048576, i32* %arrayidx330, align 4, !dbg !7410
  br label %for.inc331, !dbg !7411

for.inc331:                                       ; preds = %av_clip_uint8_c.exit360
  %216 = load i32, i32* %x, align 4, !dbg !7412
  %inc332 = add nsw i32 %216, 1, !dbg !7412
  store i32 %inc332, i32* %x, align 4, !dbg !7412
  br label %for.cond76, !dbg !7414, !llvm.loop !7415

for.end333:                                       ; preds = %for.cond76
  %217 = load i64, i64* %s0, align 8, !dbg !7417
  %mul334 = mul nsw i64 %217, 1, !dbg !7418
  %218 = load i8*, i8** %yuv0, align 8, !dbg !7419
  %add.ptr = getelementptr inbounds i8, i8* %218, i64 %mul334, !dbg !7419
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !7419
  %219 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !7420
  %arrayidx335 = getelementptr inbounds i64, i64* %219, i64 1, !dbg !7420
  %220 = load i64, i64* %arrayidx335, align 8, !dbg !7420
  %div336 = udiv i64 %220, 1, !dbg !7421
  %221 = load i8*, i8** %yuv1, align 8, !dbg !7422
  %add.ptr337 = getelementptr inbounds i8, i8* %221, i64 %div336, !dbg !7422
  store i8* %add.ptr337, i8** %yuv1, align 8, !dbg !7422
  %222 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !7423
  %arrayidx338 = getelementptr inbounds i64, i64* %222, i64 2, !dbg !7423
  %223 = load i64, i64* %arrayidx338, align 8, !dbg !7423
  %div339 = udiv i64 %223, 1, !dbg !7424
  %224 = load i8*, i8** %yuv2, align 8, !dbg !7425
  %add.ptr340 = getelementptr inbounds i8, i8* %224, i64 %div339, !dbg !7425
  store i8* %add.ptr340, i8** %yuv2, align 8, !dbg !7425
  %225 = load i64, i64* %s.addr, align 8, !dbg !7426
  %mul341 = mul nsw i64 %225, 1, !dbg !7427
  %226 = load i16*, i16** %rgb0, align 8, !dbg !7428
  %add.ptr342 = getelementptr inbounds i16, i16* %226, i64 %mul341, !dbg !7428
  store i16* %add.ptr342, i16** %rgb0, align 8, !dbg !7428
  %227 = load i64, i64* %s.addr, align 8, !dbg !7429
  %mul343 = mul nsw i64 %227, 1, !dbg !7430
  %228 = load i16*, i16** %rgb1, align 8, !dbg !7431
  %add.ptr344 = getelementptr inbounds i16, i16* %228, i64 %mul343, !dbg !7431
  store i16* %add.ptr344, i16** %rgb1, align 8, !dbg !7431
  %229 = load i64, i64* %s.addr, align 8, !dbg !7432
  %mul345 = mul nsw i64 %229, 1, !dbg !7433
  %230 = load i16*, i16** %rgb2, align 8, !dbg !7434
  %add.ptr346 = getelementptr inbounds i16, i16* %230, i64 %mul345, !dbg !7434
  store i16* %add.ptr346, i16** %rgb2, align 8, !dbg !7434
  br label %for.inc347, !dbg !7435

for.inc347:                                       ; preds = %for.end333
  %231 = load i32, i32* %y, align 4, !dbg !7436
  %inc348 = add nsw i32 %231, 1, !dbg !7436
  store i32 %inc348, i32* %y, align 4, !dbg !7436
  br label %for.cond72, !dbg !7438, !llvm.loop !7439

for.end349:                                       ; preds = %for.cond72
  ret void, !dbg !7441
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_422p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !7442 {
entry:
  %retval.i495 = alloca i8, align 1
  %a.addr.i496 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i496, metadata !3609, metadata !94), !dbg !7443
  %retval.i484 = alloca i8, align 1
  %a.addr.i485 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i485, metadata !3609, metadata !94), !dbg !7451
  %retval.i473 = alloca i8, align 1
  %a.addr.i474 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i474, metadata !3609, metadata !94), !dbg !7453
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !7455
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !7457, metadata !94), !dbg !7458
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !7459, metadata !94), !dbg !7460
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !7461, metadata !94), !dbg !7462
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7463, metadata !94), !dbg !7464
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !7465, metadata !94), !dbg !7466
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7467, metadata !94), !dbg !7468
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !7469, metadata !94), !dbg !7470
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !7471, metadata !94), !dbg !7472
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !7473, metadata !94), !dbg !7474
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !7475, metadata !94), !dbg !7476
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !7477
  store i8** %0, i8*** %yuv, align 8, !dbg !7476
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !7478, metadata !94), !dbg !7479
  %1 = load i8**, i8*** %yuv, align 8, !dbg !7480
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !7480
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !7480
  store i8* %2, i8** %yuv0, align 8, !dbg !7479
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !7481, metadata !94), !dbg !7482
  %3 = load i8**, i8*** %yuv, align 8, !dbg !7483
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !7483
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !7483
  store i8* %4, i8** %yuv1, align 8, !dbg !7482
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !7484, metadata !94), !dbg !7485
  %5 = load i8**, i8*** %yuv, align 8, !dbg !7486
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !7486
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !7486
  store i8* %6, i8** %yuv2, align 8, !dbg !7485
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !7487, metadata !94), !dbg !7488
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !7489
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !7489
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !7489
  store i16* %8, i16** %rgb0, align 8, !dbg !7488
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !7490, metadata !94), !dbg !7491
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !7492
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !7492
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !7492
  store i16* %10, i16** %rgb1, align 8, !dbg !7491
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !7493, metadata !94), !dbg !7494
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !7495
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !7495
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !7495
  store i16* %12, i16** %rgb2, align 8, !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7496, metadata !94), !dbg !7497
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7498, metadata !94), !dbg !7499
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !7500, metadata !94), !dbg !7501
  store i32 21, i32* %sh, align 4, !dbg !7501
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !7502, metadata !94), !dbg !7503
  store i32 1048576, i32* %rnd, align 4, !dbg !7503
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !7504, metadata !94), !dbg !7505
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7506
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !7506
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !7506
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !7506
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !7506
  %conv = sext i16 %14 to i32, !dbg !7506
  store i32 %conv, i32* %cry, align 4, !dbg !7505
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !7507, metadata !94), !dbg !7508
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7509
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !7509
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !7509
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !7509
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !7509
  %conv12 = sext i16 %16 to i32, !dbg !7509
  store i32 %conv12, i32* %cgy, align 4, !dbg !7508
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !7510, metadata !94), !dbg !7511
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7512
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !7512
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !7512
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !7512
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !7512
  %conv16 = sext i16 %18 to i32, !dbg !7512
  store i32 %conv16, i32* %cby, align 4, !dbg !7511
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !7513, metadata !94), !dbg !7514
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7515
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !7515
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !7515
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !7515
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !7515
  %conv20 = sext i16 %20 to i32, !dbg !7515
  store i32 %conv20, i32* %cru, align 4, !dbg !7514
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !7516, metadata !94), !dbg !7517
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7518
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !7518
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !7518
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !7518
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !7518
  %conv24 = sext i16 %22 to i32, !dbg !7518
  store i32 %conv24, i32* %cgu, align 4, !dbg !7517
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !7519, metadata !94), !dbg !7520
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7521
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !7521
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !7521
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !7521
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !7521
  %conv28 = sext i16 %24 to i32, !dbg !7521
  store i32 %conv28, i32* %cburv, align 4, !dbg !7520
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !7522, metadata !94), !dbg !7523
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7524
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !7524
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !7524
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !7524
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !7524
  %conv32 = sext i16 %26 to i32, !dbg !7524
  store i32 %conv32, i32* %cgv, align 4, !dbg !7523
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !7525, metadata !94), !dbg !7526
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !7527
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !7527
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !7527
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !7527
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !7527
  %conv36 = sext i16 %28 to i32, !dbg !7527
  store i32 %conv36, i32* %cbv, align 4, !dbg !7526
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !7528, metadata !94), !dbg !7529
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !7530
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !7530
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !7530
  %div = udiv i64 %30, 1, !dbg !7531
  store i64 %div, i64* %s0, align 8, !dbg !7529
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !7532, metadata !94), !dbg !7533
  store i32 128, i32* %uv_offset, align 4, !dbg !7533
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7534, metadata !94), !dbg !7535
  store i32 2097151, i32* %mask, align 4, !dbg !7535
  store i32 0, i32* %x, align 4, !dbg !7536
  br label %for.cond, !dbg !7538

for.cond:                                         ; preds = %for.inc, %entry
  %31 = load i32, i32* %x, align 4, !dbg !7539
  %32 = load i32, i32* %w.addr, align 4, !dbg !7542
  %cmp = icmp slt i32 %31, %32, !dbg !7543
  br i1 %cmp, label %for.body, label %for.end, !dbg !7544

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %x, align 4, !dbg !7545
  %idxprom = sext i32 %33 to i64, !dbg !7547
  %34 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7547
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %34, i64 0, !dbg !7547
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !7547
  %35 = load i32*, i32** %arrayidx40, align 8, !dbg !7547
  %arrayidx41 = getelementptr inbounds i32, i32* %35, i64 %idxprom, !dbg !7547
  store i32 1048576, i32* %arrayidx41, align 4, !dbg !7548
  %36 = load i32, i32* %x, align 4, !dbg !7549
  %idxprom42 = sext i32 %36 to i64, !dbg !7550
  %37 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7550
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %37, i64 0, !dbg !7550
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !7550
  %38 = load i32*, i32** %arrayidx44, align 8, !dbg !7550
  %arrayidx45 = getelementptr inbounds i32, i32* %38, i64 %idxprom42, !dbg !7550
  store i32 1048576, i32* %arrayidx45, align 4, !dbg !7551
  br label %for.inc, !dbg !7552

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %x, align 4, !dbg !7553
  %inc = add nsw i32 %39, 1, !dbg !7553
  store i32 %inc, i32* %x, align 4, !dbg !7553
  br label %for.cond, !dbg !7555, !llvm.loop !7556

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %w.addr, align 4, !dbg !7558
  %add = add nsw i32 %40, 2, !dbg !7559
  %sub = sub nsw i32 %add, 1, !dbg !7560
  %shr = ashr i32 %sub, 1, !dbg !7561
  store i32 %shr, i32* %w.addr, align 4, !dbg !7562
  %41 = load i32, i32* %h.addr, align 4, !dbg !7563
  %add46 = add nsw i32 %41, 1, !dbg !7564
  %sub47 = sub nsw i32 %add46, 1, !dbg !7565
  %shr48 = ashr i32 %sub47, 0, !dbg !7566
  store i32 %shr48, i32* %h.addr, align 4, !dbg !7567
  store i32 0, i32* %x, align 4, !dbg !7568
  br label %for.cond49, !dbg !7570

for.cond49:                                       ; preds = %for.inc69, %for.end
  %42 = load i32, i32* %x, align 4, !dbg !7571
  %43 = load i32, i32* %w.addr, align 4, !dbg !7574
  %cmp50 = icmp slt i32 %42, %43, !dbg !7575
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !7576

for.body52:                                       ; preds = %for.cond49
  %44 = load i32, i32* %x, align 4, !dbg !7577
  %idxprom53 = sext i32 %44 to i64, !dbg !7579
  %45 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7579
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %45, i64 2, !dbg !7579
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !7579
  %46 = load i32*, i32** %arrayidx55, align 8, !dbg !7579
  %arrayidx56 = getelementptr inbounds i32, i32* %46, i64 %idxprom53, !dbg !7579
  store i32 1048576, i32* %arrayidx56, align 4, !dbg !7580
  %47 = load i32, i32* %x, align 4, !dbg !7581
  %idxprom57 = sext i32 %47 to i64, !dbg !7582
  %48 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7582
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %48, i64 2, !dbg !7582
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !7582
  %49 = load i32*, i32** %arrayidx59, align 8, !dbg !7582
  %arrayidx60 = getelementptr inbounds i32, i32* %49, i64 %idxprom57, !dbg !7582
  store i32 1048576, i32* %arrayidx60, align 4, !dbg !7583
  %50 = load i32, i32* %x, align 4, !dbg !7584
  %idxprom61 = sext i32 %50 to i64, !dbg !7585
  %51 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7585
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %51, i64 1, !dbg !7585
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !7585
  %52 = load i32*, i32** %arrayidx63, align 8, !dbg !7585
  %arrayidx64 = getelementptr inbounds i32, i32* %52, i64 %idxprom61, !dbg !7585
  store i32 1048576, i32* %arrayidx64, align 4, !dbg !7586
  %53 = load i32, i32* %x, align 4, !dbg !7587
  %idxprom65 = sext i32 %53 to i64, !dbg !7588
  %54 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7588
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %54, i64 1, !dbg !7588
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !7588
  %55 = load i32*, i32** %arrayidx67, align 8, !dbg !7588
  %arrayidx68 = getelementptr inbounds i32, i32* %55, i64 %idxprom65, !dbg !7588
  store i32 1048576, i32* %arrayidx68, align 4, !dbg !7589
  br label %for.inc69, !dbg !7590

for.inc69:                                        ; preds = %for.body52
  %56 = load i32, i32* %x, align 4, !dbg !7591
  %inc70 = add nsw i32 %56, 1, !dbg !7591
  store i32 %inc70, i32* %x, align 4, !dbg !7591
  br label %for.cond49, !dbg !7593, !llvm.loop !7594

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !7596
  br label %for.cond72, !dbg !7597

for.cond72:                                       ; preds = %for.inc470, %for.end71
  %57 = load i32, i32* %y, align 4, !dbg !7598
  %58 = load i32, i32* %h.addr, align 4, !dbg !7600
  %cmp73 = icmp slt i32 %57, %58, !dbg !7601
  br i1 %cmp73, label %for.body75, label %for.end472, !dbg !7602

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !7603
  br label %for.cond76, !dbg !7604

for.cond76:                                       ; preds = %for.inc454, %for.body75
  %59 = load i32, i32* %x, align 4, !dbg !7605
  %60 = load i32, i32* %w.addr, align 4, !dbg !7607
  %cmp77 = icmp slt i32 %59, %60, !dbg !7608
  br i1 %cmp77, label %for.body79, label %for.end456, !dbg !7609

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !7610, metadata !94), !dbg !7611
  %61 = load i32, i32* %x, align 4, !dbg !7612
  %shl = shl i32 %61, 1, !dbg !7613
  %idxprom80 = sext i32 %shl to i64, !dbg !7614
  %62 = load i16*, i16** %rgb0, align 8, !dbg !7614
  %arrayidx81 = getelementptr inbounds i16, i16* %62, i64 %idxprom80, !dbg !7614
  %63 = load i16, i16* %arrayidx81, align 2, !dbg !7614
  %conv82 = sext i16 %63 to i32, !dbg !7614
  store i32 %conv82, i32* %r00, align 4, !dbg !7611
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !7615, metadata !94), !dbg !7616
  %64 = load i32, i32* %x, align 4, !dbg !7617
  %shl83 = shl i32 %64, 1, !dbg !7618
  %idxprom84 = sext i32 %shl83 to i64, !dbg !7619
  %65 = load i16*, i16** %rgb1, align 8, !dbg !7619
  %arrayidx85 = getelementptr inbounds i16, i16* %65, i64 %idxprom84, !dbg !7619
  %66 = load i16, i16* %arrayidx85, align 2, !dbg !7619
  %conv86 = sext i16 %66 to i32, !dbg !7619
  store i32 %conv86, i32* %g00, align 4, !dbg !7616
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !7620, metadata !94), !dbg !7621
  %67 = load i32, i32* %x, align 4, !dbg !7622
  %shl87 = shl i32 %67, 1, !dbg !7623
  %idxprom88 = sext i32 %shl87 to i64, !dbg !7624
  %68 = load i16*, i16** %rgb2, align 8, !dbg !7624
  %arrayidx89 = getelementptr inbounds i16, i16* %68, i64 %idxprom88, !dbg !7624
  %69 = load i16, i16* %arrayidx89, align 2, !dbg !7624
  %conv90 = sext i16 %69 to i32, !dbg !7624
  store i32 %conv90, i32* %b00, align 4, !dbg !7621
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !7625, metadata !94), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !7627, metadata !94), !dbg !7628
  %70 = load i32, i32* %x, align 4, !dbg !7629
  %mul = mul nsw i32 %70, 2, !dbg !7630
  %add91 = add nsw i32 %mul, 1, !dbg !7631
  %idxprom92 = sext i32 %add91 to i64, !dbg !7632
  %71 = load i16*, i16** %rgb0, align 8, !dbg !7632
  %arrayidx93 = getelementptr inbounds i16, i16* %71, i64 %idxprom92, !dbg !7632
  %72 = load i16, i16* %arrayidx93, align 2, !dbg !7632
  %conv94 = sext i16 %72 to i32, !dbg !7632
  store i32 %conv94, i32* %r01, align 4, !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !7633, metadata !94), !dbg !7634
  %73 = load i32, i32* %x, align 4, !dbg !7635
  %mul95 = mul nsw i32 %73, 2, !dbg !7636
  %add96 = add nsw i32 %mul95, 1, !dbg !7637
  %idxprom97 = sext i32 %add96 to i64, !dbg !7638
  %74 = load i16*, i16** %rgb1, align 8, !dbg !7638
  %arrayidx98 = getelementptr inbounds i16, i16* %74, i64 %idxprom97, !dbg !7638
  %75 = load i16, i16* %arrayidx98, align 2, !dbg !7638
  %conv99 = sext i16 %75 to i32, !dbg !7638
  store i32 %conv99, i32* %g01, align 4, !dbg !7634
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !7639, metadata !94), !dbg !7640
  %76 = load i32, i32* %x, align 4, !dbg !7641
  %mul100 = mul nsw i32 %76, 2, !dbg !7642
  %add101 = add nsw i32 %mul100, 1, !dbg !7643
  %idxprom102 = sext i32 %add101 to i64, !dbg !7644
  %77 = load i16*, i16** %rgb2, align 8, !dbg !7644
  %arrayidx103 = getelementptr inbounds i16, i16* %77, i64 %idxprom102, !dbg !7644
  %78 = load i16, i16* %arrayidx103, align 2, !dbg !7644
  %conv104 = sext i16 %78 to i32, !dbg !7644
  store i32 %conv104, i32* %b01, align 4, !dbg !7640
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !7645, metadata !94), !dbg !7646
  call void @llvm.dbg.declare(metadata i32* %u, metadata !7647, metadata !94), !dbg !7648
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7649, metadata !94), !dbg !7650
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7651, metadata !94), !dbg !7652
  %79 = load i32, i32* %r00, align 4, !dbg !7653
  %80 = load i32, i32* %cry, align 4, !dbg !7654
  %mul105 = mul nsw i32 %79, %80, !dbg !7655
  %81 = load i32, i32* %g00, align 4, !dbg !7656
  %82 = load i32, i32* %cgy, align 4, !dbg !7657
  %mul106 = mul nsw i32 %81, %82, !dbg !7658
  %add107 = add nsw i32 %mul105, %mul106, !dbg !7659
  %83 = load i32, i32* %b00, align 4, !dbg !7660
  %84 = load i32, i32* %cby, align 4, !dbg !7661
  %mul108 = mul nsw i32 %83, %84, !dbg !7662
  %add109 = add nsw i32 %add107, %mul108, !dbg !7663
  %85 = load i32, i32* %x, align 4, !dbg !7664
  %shl110 = shl i32 %85, 1, !dbg !7665
  %idxprom111 = sext i32 %shl110 to i64, !dbg !7666
  %86 = load i32, i32* %y, align 4, !dbg !7667
  %and = and i32 %86, 1, !dbg !7668
  %idxprom112 = sext i32 %and to i64, !dbg !7666
  %87 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7666
  %arrayidx113 = getelementptr inbounds [2 x i32*], [2 x i32*]* %87, i64 0, !dbg !7666
  %arrayidx114 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx113, i64 0, i64 %idxprom112, !dbg !7666
  %88 = load i32*, i32** %arrayidx114, align 8, !dbg !7666
  %arrayidx115 = getelementptr inbounds i32, i32* %88, i64 %idxprom111, !dbg !7666
  %89 = load i32, i32* %arrayidx115, align 4, !dbg !7666
  %add116 = add nsw i32 %add109, %89, !dbg !7669
  store i32 %add116, i32* %y00, align 4, !dbg !7670
  %90 = load i32, i32* %y00, align 4, !dbg !7671
  %91 = load i32, i32* %mask, align 4, !dbg !7672
  %and117 = and i32 %90, %91, !dbg !7673
  %sub118 = sub i32 %and117, 1048576, !dbg !7674
  store i32 %sub118, i32* %diff, align 4, !dbg !7675
  %92 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !7676
  %arrayidx119 = getelementptr inbounds i16, i16* %92, i64 0, !dbg !7676
  %93 = load i16, i16* %arrayidx119, align 2, !dbg !7676
  %conv120 = sext i16 %93 to i32, !dbg !7676
  %94 = load i32, i32* %y00, align 4, !dbg !7677
  %shr121 = ashr i32 %94, 21, !dbg !7678
  %add122 = add nsw i32 %conv120, %shr121, !dbg !7679
  store i32 %add122, i32* %a.addr.i, align 4, !dbg !7680
  %95 = load i32, i32* %a.addr.i, align 4, !dbg !7681
  %and.i = and i32 %95, -256, !dbg !7682
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7682
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7683

if.then.i:                                        ; preds = %for.body79
  %96 = load i32, i32* %a.addr.i, align 4, !dbg !7684
  %neg.i = xor i32 %96, -1, !dbg !7685
  %shr.i = ashr i32 %neg.i, 31, !dbg !7686
  %conv.i = trunc i32 %shr.i to i8, !dbg !7687
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !7688
  br label %av_clip_uint8_c.exit, !dbg !7688

if.else.i:                                        ; preds = %for.body79
  %97 = load i32, i32* %a.addr.i, align 4, !dbg !7689
  %conv1.i = trunc i32 %97 to i8, !dbg !7689
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !7690
  br label %av_clip_uint8_c.exit, !dbg !7690

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %98 = load i8, i8* %retval.i, align 1, !dbg !7691
  %99 = load i32, i32* %x, align 4, !dbg !7692
  %shl123 = shl i32 %99, 1, !dbg !7693
  %idxprom124 = sext i32 %shl123 to i64, !dbg !7694
  %100 = load i8*, i8** %yuv0, align 8, !dbg !7694
  %arrayidx125 = getelementptr inbounds i8, i8* %100, i64 %idxprom124, !dbg !7694
  store i8 %98, i8* %arrayidx125, align 1, !dbg !7695
  %101 = load i32, i32* %diff, align 4, !dbg !7696
  %mul126 = mul nsw i32 %101, 7, !dbg !7697
  %add127 = add nsw i32 %mul126, 8, !dbg !7698
  %shr128 = ashr i32 %add127, 4, !dbg !7699
  %102 = load i32, i32* %x, align 4, !dbg !7700
  %shl129 = shl i32 %102, 1, !dbg !7701
  %add130 = add nsw i32 %shl129, 1, !dbg !7702
  %idxprom131 = sext i32 %add130 to i64, !dbg !7703
  %103 = load i32, i32* %y, align 4, !dbg !7704
  %and132 = and i32 %103, 1, !dbg !7705
  %idxprom133 = sext i32 %and132 to i64, !dbg !7703
  %104 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7703
  %arrayidx134 = getelementptr inbounds [2 x i32*], [2 x i32*]* %104, i64 0, !dbg !7703
  %arrayidx135 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx134, i64 0, i64 %idxprom133, !dbg !7703
  %105 = load i32*, i32** %arrayidx135, align 8, !dbg !7703
  %arrayidx136 = getelementptr inbounds i32, i32* %105, i64 %idxprom131, !dbg !7703
  %106 = load i32, i32* %arrayidx136, align 4, !dbg !7706
  %add137 = add nsw i32 %106, %shr128, !dbg !7706
  store i32 %add137, i32* %arrayidx136, align 4, !dbg !7706
  %107 = load i32, i32* %diff, align 4, !dbg !7707
  %mul138 = mul nsw i32 %107, 3, !dbg !7708
  %add139 = add nsw i32 %mul138, 8, !dbg !7709
  %shr140 = ashr i32 %add139, 4, !dbg !7710
  %108 = load i32, i32* %x, align 4, !dbg !7711
  %shl141 = shl i32 %108, 1, !dbg !7712
  %sub142 = sub nsw i32 %shl141, 1, !dbg !7713
  %idxprom143 = sext i32 %sub142 to i64, !dbg !7714
  %109 = load i32, i32* %y, align 4, !dbg !7715
  %and144 = and i32 %109, 1, !dbg !7716
  %tobool = icmp ne i32 %and144, 0, !dbg !7717
  %lnot = xor i1 %tobool, true, !dbg !7717
  %lnot.ext = zext i1 %lnot to i32, !dbg !7717
  %idxprom145 = sext i32 %lnot.ext to i64, !dbg !7714
  %110 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7714
  %arrayidx146 = getelementptr inbounds [2 x i32*], [2 x i32*]* %110, i64 0, !dbg !7714
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx146, i64 0, i64 %idxprom145, !dbg !7714
  %111 = load i32*, i32** %arrayidx147, align 8, !dbg !7714
  %arrayidx148 = getelementptr inbounds i32, i32* %111, i64 %idxprom143, !dbg !7714
  %112 = load i32, i32* %arrayidx148, align 4, !dbg !7718
  %add149 = add nsw i32 %112, %shr140, !dbg !7718
  store i32 %add149, i32* %arrayidx148, align 4, !dbg !7718
  %113 = load i32, i32* %diff, align 4, !dbg !7719
  %mul150 = mul nsw i32 %113, 5, !dbg !7720
  %add151 = add nsw i32 %mul150, 8, !dbg !7721
  %shr152 = ashr i32 %add151, 4, !dbg !7722
  %114 = load i32, i32* %x, align 4, !dbg !7723
  %shl153 = shl i32 %114, 1, !dbg !7724
  %add154 = add nsw i32 %shl153, 0, !dbg !7725
  %idxprom155 = sext i32 %add154 to i64, !dbg !7726
  %115 = load i32, i32* %y, align 4, !dbg !7727
  %and156 = and i32 %115, 1, !dbg !7728
  %tobool157 = icmp ne i32 %and156, 0, !dbg !7729
  %lnot158 = xor i1 %tobool157, true, !dbg !7729
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !7729
  %idxprom160 = sext i32 %lnot.ext159 to i64, !dbg !7726
  %116 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7726
  %arrayidx161 = getelementptr inbounds [2 x i32*], [2 x i32*]* %116, i64 0, !dbg !7726
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx161, i64 0, i64 %idxprom160, !dbg !7726
  %117 = load i32*, i32** %arrayidx162, align 8, !dbg !7726
  %arrayidx163 = getelementptr inbounds i32, i32* %117, i64 %idxprom155, !dbg !7726
  %118 = load i32, i32* %arrayidx163, align 4, !dbg !7730
  %add164 = add nsw i32 %118, %shr152, !dbg !7730
  store i32 %add164, i32* %arrayidx163, align 4, !dbg !7730
  %119 = load i32, i32* %diff, align 4, !dbg !7731
  %mul165 = mul nsw i32 %119, 1, !dbg !7732
  %add166 = add nsw i32 %mul165, 8, !dbg !7733
  %shr167 = ashr i32 %add166, 4, !dbg !7734
  %120 = load i32, i32* %x, align 4, !dbg !7735
  %shl168 = shl i32 %120, 1, !dbg !7736
  %add169 = add nsw i32 %shl168, 1, !dbg !7737
  %idxprom170 = sext i32 %add169 to i64, !dbg !7738
  %121 = load i32, i32* %y, align 4, !dbg !7739
  %and171 = and i32 %121, 1, !dbg !7740
  %tobool172 = icmp ne i32 %and171, 0, !dbg !7741
  %lnot173 = xor i1 %tobool172, true, !dbg !7741
  %lnot.ext174 = zext i1 %lnot173 to i32, !dbg !7741
  %idxprom175 = sext i32 %lnot.ext174 to i64, !dbg !7738
  %122 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7738
  %arrayidx176 = getelementptr inbounds [2 x i32*], [2 x i32*]* %122, i64 0, !dbg !7738
  %arrayidx177 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx176, i64 0, i64 %idxprom175, !dbg !7738
  %123 = load i32*, i32** %arrayidx177, align 8, !dbg !7738
  %arrayidx178 = getelementptr inbounds i32, i32* %123, i64 %idxprom170, !dbg !7738
  %124 = load i32, i32* %arrayidx178, align 4, !dbg !7742
  %add179 = add nsw i32 %124, %shr167, !dbg !7742
  store i32 %add179, i32* %arrayidx178, align 4, !dbg !7742
  %125 = load i32, i32* %x, align 4, !dbg !7743
  %shl180 = shl i32 %125, 1, !dbg !7744
  %add181 = add nsw i32 %shl180, 0, !dbg !7745
  %idxprom182 = sext i32 %add181 to i64, !dbg !7746
  %126 = load i32, i32* %y, align 4, !dbg !7747
  %and183 = and i32 %126, 1, !dbg !7748
  %idxprom184 = sext i32 %and183 to i64, !dbg !7746
  %127 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7746
  %arrayidx185 = getelementptr inbounds [2 x i32*], [2 x i32*]* %127, i64 0, !dbg !7746
  %arrayidx186 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx185, i64 0, i64 %idxprom184, !dbg !7746
  %128 = load i32*, i32** %arrayidx186, align 8, !dbg !7746
  %arrayidx187 = getelementptr inbounds i32, i32* %128, i64 %idxprom182, !dbg !7746
  store i32 1048576, i32* %arrayidx187, align 4, !dbg !7749
  %129 = load i32, i32* %r01, align 4, !dbg !7750
  %130 = load i32, i32* %cry, align 4, !dbg !7751
  %mul188 = mul nsw i32 %129, %130, !dbg !7752
  %131 = load i32, i32* %g01, align 4, !dbg !7753
  %132 = load i32, i32* %cgy, align 4, !dbg !7754
  %mul189 = mul nsw i32 %131, %132, !dbg !7755
  %add190 = add nsw i32 %mul188, %mul189, !dbg !7756
  %133 = load i32, i32* %b01, align 4, !dbg !7757
  %134 = load i32, i32* %cby, align 4, !dbg !7758
  %mul191 = mul nsw i32 %133, %134, !dbg !7759
  %add192 = add nsw i32 %add190, %mul191, !dbg !7760
  %135 = load i32, i32* %x, align 4, !dbg !7761
  %mul193 = mul nsw i32 %135, 2, !dbg !7762
  %add194 = add nsw i32 %mul193, 1, !dbg !7763
  %idxprom195 = sext i32 %add194 to i64, !dbg !7764
  %136 = load i32, i32* %y, align 4, !dbg !7765
  %and196 = and i32 %136, 1, !dbg !7766
  %idxprom197 = sext i32 %and196 to i64, !dbg !7764
  %137 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7764
  %arrayidx198 = getelementptr inbounds [2 x i32*], [2 x i32*]* %137, i64 0, !dbg !7764
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx198, i64 0, i64 %idxprom197, !dbg !7764
  %138 = load i32*, i32** %arrayidx199, align 8, !dbg !7764
  %arrayidx200 = getelementptr inbounds i32, i32* %138, i64 %idxprom195, !dbg !7764
  %139 = load i32, i32* %arrayidx200, align 4, !dbg !7764
  %add201 = add nsw i32 %add192, %139, !dbg !7767
  store i32 %add201, i32* %y01, align 4, !dbg !7768
  %140 = load i32, i32* %y01, align 4, !dbg !7769
  %141 = load i32, i32* %mask, align 4, !dbg !7770
  %and202 = and i32 %140, %141, !dbg !7771
  %sub203 = sub i32 %and202, 1048576, !dbg !7772
  store i32 %sub203, i32* %diff, align 4, !dbg !7773
  %142 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !7774
  %arrayidx204 = getelementptr inbounds i16, i16* %142, i64 0, !dbg !7774
  %143 = load i16, i16* %arrayidx204, align 2, !dbg !7774
  %conv205 = sext i16 %143 to i32, !dbg !7774
  %144 = load i32, i32* %y01, align 4, !dbg !7775
  %shr206 = ashr i32 %144, 21, !dbg !7776
  %add207 = add nsw i32 %conv205, %shr206, !dbg !7777
  store i32 %add207, i32* %a.addr.i496, align 4, !dbg !7778
  %145 = load i32, i32* %a.addr.i496, align 4, !dbg !7779
  %and.i497 = and i32 %145, -256, !dbg !7780
  %tobool.i498 = icmp ne i32 %and.i497, 0, !dbg !7780
  br i1 %tobool.i498, label %if.then.i502, label %if.else.i504, !dbg !7781

if.then.i502:                                     ; preds = %av_clip_uint8_c.exit
  %146 = load i32, i32* %a.addr.i496, align 4, !dbg !7782
  %neg.i499 = xor i32 %146, -1, !dbg !7783
  %shr.i500 = ashr i32 %neg.i499, 31, !dbg !7784
  %conv.i501 = trunc i32 %shr.i500 to i8, !dbg !7785
  store i8 %conv.i501, i8* %retval.i495, align 1, !dbg !7786
  br label %av_clip_uint8_c.exit505, !dbg !7786

if.else.i504:                                     ; preds = %av_clip_uint8_c.exit
  %147 = load i32, i32* %a.addr.i496, align 4, !dbg !7787
  %conv1.i503 = trunc i32 %147 to i8, !dbg !7787
  store i8 %conv1.i503, i8* %retval.i495, align 1, !dbg !7788
  br label %av_clip_uint8_c.exit505, !dbg !7788

av_clip_uint8_c.exit505:                          ; preds = %if.then.i502, %if.else.i504
  %148 = load i8, i8* %retval.i495, align 1, !dbg !7789
  %149 = load i32, i32* %x, align 4, !dbg !7790
  %mul209 = mul nsw i32 %149, 2, !dbg !7791
  %add210 = add nsw i32 %mul209, 1, !dbg !7792
  %idxprom211 = sext i32 %add210 to i64, !dbg !7793
  %150 = load i8*, i8** %yuv0, align 8, !dbg !7793
  %arrayidx212 = getelementptr inbounds i8, i8* %150, i64 %idxprom211, !dbg !7793
  store i8 %148, i8* %arrayidx212, align 1, !dbg !7794
  %151 = load i32, i32* %diff, align 4, !dbg !7795
  %mul213 = mul nsw i32 %151, 7, !dbg !7796
  %add214 = add nsw i32 %mul213, 8, !dbg !7797
  %shr215 = ashr i32 %add214, 4, !dbg !7798
  %152 = load i32, i32* %x, align 4, !dbg !7799
  %mul216 = mul nsw i32 %152, 2, !dbg !7800
  %add217 = add nsw i32 %mul216, 2, !dbg !7801
  %idxprom218 = sext i32 %add217 to i64, !dbg !7802
  %153 = load i32, i32* %y, align 4, !dbg !7803
  %and219 = and i32 %153, 1, !dbg !7804
  %idxprom220 = sext i32 %and219 to i64, !dbg !7802
  %154 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7802
  %arrayidx221 = getelementptr inbounds [2 x i32*], [2 x i32*]* %154, i64 0, !dbg !7802
  %arrayidx222 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx221, i64 0, i64 %idxprom220, !dbg !7802
  %155 = load i32*, i32** %arrayidx222, align 8, !dbg !7802
  %arrayidx223 = getelementptr inbounds i32, i32* %155, i64 %idxprom218, !dbg !7802
  %156 = load i32, i32* %arrayidx223, align 4, !dbg !7805
  %add224 = add nsw i32 %156, %shr215, !dbg !7805
  store i32 %add224, i32* %arrayidx223, align 4, !dbg !7805
  %157 = load i32, i32* %diff, align 4, !dbg !7806
  %mul225 = mul nsw i32 %157, 3, !dbg !7807
  %add226 = add nsw i32 %mul225, 8, !dbg !7808
  %shr227 = ashr i32 %add226, 4, !dbg !7809
  %158 = load i32, i32* %x, align 4, !dbg !7810
  %mul228 = mul nsw i32 %158, 2, !dbg !7811
  %add229 = add nsw i32 %mul228, 0, !dbg !7812
  %idxprom230 = sext i32 %add229 to i64, !dbg !7813
  %159 = load i32, i32* %y, align 4, !dbg !7814
  %and231 = and i32 %159, 1, !dbg !7815
  %tobool232 = icmp ne i32 %and231, 0, !dbg !7816
  %lnot233 = xor i1 %tobool232, true, !dbg !7816
  %lnot.ext234 = zext i1 %lnot233 to i32, !dbg !7816
  %idxprom235 = sext i32 %lnot.ext234 to i64, !dbg !7813
  %160 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7813
  %arrayidx236 = getelementptr inbounds [2 x i32*], [2 x i32*]* %160, i64 0, !dbg !7813
  %arrayidx237 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx236, i64 0, i64 %idxprom235, !dbg !7813
  %161 = load i32*, i32** %arrayidx237, align 8, !dbg !7813
  %arrayidx238 = getelementptr inbounds i32, i32* %161, i64 %idxprom230, !dbg !7813
  %162 = load i32, i32* %arrayidx238, align 4, !dbg !7817
  %add239 = add nsw i32 %162, %shr227, !dbg !7817
  store i32 %add239, i32* %arrayidx238, align 4, !dbg !7817
  %163 = load i32, i32* %diff, align 4, !dbg !7818
  %mul240 = mul nsw i32 %163, 5, !dbg !7819
  %add241 = add nsw i32 %mul240, 8, !dbg !7820
  %shr242 = ashr i32 %add241, 4, !dbg !7821
  %164 = load i32, i32* %x, align 4, !dbg !7822
  %mul243 = mul nsw i32 %164, 2, !dbg !7823
  %add244 = add nsw i32 %mul243, 1, !dbg !7824
  %idxprom245 = sext i32 %add244 to i64, !dbg !7825
  %165 = load i32, i32* %y, align 4, !dbg !7826
  %and246 = and i32 %165, 1, !dbg !7827
  %tobool247 = icmp ne i32 %and246, 0, !dbg !7828
  %lnot248 = xor i1 %tobool247, true, !dbg !7828
  %lnot.ext249 = zext i1 %lnot248 to i32, !dbg !7828
  %idxprom250 = sext i32 %lnot.ext249 to i64, !dbg !7825
  %166 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7825
  %arrayidx251 = getelementptr inbounds [2 x i32*], [2 x i32*]* %166, i64 0, !dbg !7825
  %arrayidx252 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx251, i64 0, i64 %idxprom250, !dbg !7825
  %167 = load i32*, i32** %arrayidx252, align 8, !dbg !7825
  %arrayidx253 = getelementptr inbounds i32, i32* %167, i64 %idxprom245, !dbg !7825
  %168 = load i32, i32* %arrayidx253, align 4, !dbg !7829
  %add254 = add nsw i32 %168, %shr242, !dbg !7829
  store i32 %add254, i32* %arrayidx253, align 4, !dbg !7829
  %169 = load i32, i32* %diff, align 4, !dbg !7830
  %mul255 = mul nsw i32 %169, 1, !dbg !7831
  %add256 = add nsw i32 %mul255, 8, !dbg !7832
  %shr257 = ashr i32 %add256, 4, !dbg !7833
  %170 = load i32, i32* %x, align 4, !dbg !7834
  %mul258 = mul nsw i32 %170, 2, !dbg !7835
  %add259 = add nsw i32 %mul258, 2, !dbg !7836
  %idxprom260 = sext i32 %add259 to i64, !dbg !7837
  %171 = load i32, i32* %y, align 4, !dbg !7838
  %and261 = and i32 %171, 1, !dbg !7839
  %tobool262 = icmp ne i32 %and261, 0, !dbg !7840
  %lnot263 = xor i1 %tobool262, true, !dbg !7840
  %lnot.ext264 = zext i1 %lnot263 to i32, !dbg !7840
  %idxprom265 = sext i32 %lnot.ext264 to i64, !dbg !7837
  %172 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7837
  %arrayidx266 = getelementptr inbounds [2 x i32*], [2 x i32*]* %172, i64 0, !dbg !7837
  %arrayidx267 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx266, i64 0, i64 %idxprom265, !dbg !7837
  %173 = load i32*, i32** %arrayidx267, align 8, !dbg !7837
  %arrayidx268 = getelementptr inbounds i32, i32* %173, i64 %idxprom260, !dbg !7837
  %174 = load i32, i32* %arrayidx268, align 4, !dbg !7841
  %add269 = add nsw i32 %174, %shr257, !dbg !7841
  store i32 %add269, i32* %arrayidx268, align 4, !dbg !7841
  %175 = load i32, i32* %x, align 4, !dbg !7842
  %mul270 = mul nsw i32 %175, 2, !dbg !7843
  %add271 = add nsw i32 %mul270, 1, !dbg !7844
  %idxprom272 = sext i32 %add271 to i64, !dbg !7845
  %176 = load i32, i32* %y, align 4, !dbg !7846
  %and273 = and i32 %176, 1, !dbg !7847
  %idxprom274 = sext i32 %and273 to i64, !dbg !7845
  %177 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7845
  %arrayidx275 = getelementptr inbounds [2 x i32*], [2 x i32*]* %177, i64 0, !dbg !7845
  %arrayidx276 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx275, i64 0, i64 %idxprom274, !dbg !7845
  %178 = load i32*, i32** %arrayidx276, align 8, !dbg !7845
  %arrayidx277 = getelementptr inbounds i32, i32* %178, i64 %idxprom272, !dbg !7845
  store i32 1048576, i32* %arrayidx277, align 4, !dbg !7848
  %179 = load i32, i32* %r00, align 4, !dbg !7849
  %180 = load i32, i32* %r01, align 4, !dbg !7850
  %add278 = add nsw i32 %179, %180, !dbg !7851
  %add279 = add nsw i32 %add278, 1, !dbg !7852
  %shr280 = ashr i32 %add279, 1, !dbg !7853
  %181 = load i32, i32* %cru, align 4, !dbg !7854
  %mul281 = mul nsw i32 %shr280, %181, !dbg !7855
  %182 = load i32, i32* %g00, align 4, !dbg !7856
  %183 = load i32, i32* %g01, align 4, !dbg !7857
  %add282 = add nsw i32 %182, %183, !dbg !7858
  %add283 = add nsw i32 %add282, 1, !dbg !7859
  %shr284 = ashr i32 %add283, 1, !dbg !7860
  %184 = load i32, i32* %cgu, align 4, !dbg !7861
  %mul285 = mul nsw i32 %shr284, %184, !dbg !7862
  %add286 = add nsw i32 %mul281, %mul285, !dbg !7863
  %185 = load i32, i32* %b00, align 4, !dbg !7864
  %186 = load i32, i32* %b01, align 4, !dbg !7865
  %add287 = add nsw i32 %185, %186, !dbg !7866
  %add288 = add nsw i32 %add287, 1, !dbg !7867
  %shr289 = ashr i32 %add288, 1, !dbg !7868
  %187 = load i32, i32* %cburv, align 4, !dbg !7869
  %mul290 = mul nsw i32 %shr289, %187, !dbg !7870
  %add291 = add nsw i32 %add286, %mul290, !dbg !7871
  %188 = load i32, i32* %x, align 4, !dbg !7872
  %idxprom292 = sext i32 %188 to i64, !dbg !7873
  %189 = load i32, i32* %y, align 4, !dbg !7874
  %and293 = and i32 %189, 1, !dbg !7875
  %idxprom294 = sext i32 %and293 to i64, !dbg !7873
  %190 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7873
  %arrayidx295 = getelementptr inbounds [2 x i32*], [2 x i32*]* %190, i64 1, !dbg !7873
  %arrayidx296 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx295, i64 0, i64 %idxprom294, !dbg !7873
  %191 = load i32*, i32** %arrayidx296, align 8, !dbg !7873
  %arrayidx297 = getelementptr inbounds i32, i32* %191, i64 %idxprom292, !dbg !7873
  %192 = load i32, i32* %arrayidx297, align 4, !dbg !7873
  %add298 = add nsw i32 %add291, %192, !dbg !7876
  store i32 %add298, i32* %u, align 4, !dbg !7877
  %193 = load i32, i32* %u, align 4, !dbg !7878
  %194 = load i32, i32* %mask, align 4, !dbg !7879
  %and299 = and i32 %193, %194, !dbg !7880
  %sub300 = sub i32 %and299, 1048576, !dbg !7881
  store i32 %sub300, i32* %diff, align 4, !dbg !7882
  %195 = load i32, i32* %u, align 4, !dbg !7883
  %shr301 = ashr i32 %195, 21, !dbg !7884
  %add302 = add nsw i32 128, %shr301, !dbg !7885
  store i32 %add302, i32* %a.addr.i485, align 4, !dbg !7886
  %196 = load i32, i32* %a.addr.i485, align 4, !dbg !7887
  %and.i486 = and i32 %196, -256, !dbg !7888
  %tobool.i487 = icmp ne i32 %and.i486, 0, !dbg !7888
  br i1 %tobool.i487, label %if.then.i491, label %if.else.i493, !dbg !7889

if.then.i491:                                     ; preds = %av_clip_uint8_c.exit505
  %197 = load i32, i32* %a.addr.i485, align 4, !dbg !7890
  %neg.i488 = xor i32 %197, -1, !dbg !7891
  %shr.i489 = ashr i32 %neg.i488, 31, !dbg !7892
  %conv.i490 = trunc i32 %shr.i489 to i8, !dbg !7893
  store i8 %conv.i490, i8* %retval.i484, align 1, !dbg !7894
  br label %av_clip_uint8_c.exit494, !dbg !7894

if.else.i493:                                     ; preds = %av_clip_uint8_c.exit505
  %198 = load i32, i32* %a.addr.i485, align 4, !dbg !7895
  %conv1.i492 = trunc i32 %198 to i8, !dbg !7895
  store i8 %conv1.i492, i8* %retval.i484, align 1, !dbg !7896
  br label %av_clip_uint8_c.exit494, !dbg !7896

av_clip_uint8_c.exit494:                          ; preds = %if.then.i491, %if.else.i493
  %199 = load i8, i8* %retval.i484, align 1, !dbg !7897
  %200 = load i32, i32* %x, align 4, !dbg !7898
  %idxprom304 = sext i32 %200 to i64, !dbg !7899
  %201 = load i8*, i8** %yuv1, align 8, !dbg !7899
  %arrayidx305 = getelementptr inbounds i8, i8* %201, i64 %idxprom304, !dbg !7899
  store i8 %199, i8* %arrayidx305, align 1, !dbg !7900
  %202 = load i32, i32* %diff, align 4, !dbg !7901
  %mul306 = mul nsw i32 %202, 7, !dbg !7902
  %add307 = add nsw i32 %mul306, 8, !dbg !7903
  %shr308 = ashr i32 %add307, 4, !dbg !7904
  %203 = load i32, i32* %x, align 4, !dbg !7905
  %add309 = add nsw i32 %203, 1, !dbg !7906
  %idxprom310 = sext i32 %add309 to i64, !dbg !7907
  %204 = load i32, i32* %y, align 4, !dbg !7908
  %and311 = and i32 %204, 1, !dbg !7909
  %idxprom312 = sext i32 %and311 to i64, !dbg !7907
  %205 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7907
  %arrayidx313 = getelementptr inbounds [2 x i32*], [2 x i32*]* %205, i64 1, !dbg !7907
  %arrayidx314 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx313, i64 0, i64 %idxprom312, !dbg !7907
  %206 = load i32*, i32** %arrayidx314, align 8, !dbg !7907
  %arrayidx315 = getelementptr inbounds i32, i32* %206, i64 %idxprom310, !dbg !7907
  %207 = load i32, i32* %arrayidx315, align 4, !dbg !7910
  %add316 = add nsw i32 %207, %shr308, !dbg !7910
  store i32 %add316, i32* %arrayidx315, align 4, !dbg !7910
  %208 = load i32, i32* %diff, align 4, !dbg !7911
  %mul317 = mul nsw i32 %208, 3, !dbg !7912
  %add318 = add nsw i32 %mul317, 8, !dbg !7913
  %shr319 = ashr i32 %add318, 4, !dbg !7914
  %209 = load i32, i32* %x, align 4, !dbg !7915
  %sub320 = sub nsw i32 %209, 1, !dbg !7916
  %idxprom321 = sext i32 %sub320 to i64, !dbg !7917
  %210 = load i32, i32* %y, align 4, !dbg !7918
  %and322 = and i32 %210, 1, !dbg !7919
  %tobool323 = icmp ne i32 %and322, 0, !dbg !7920
  %lnot324 = xor i1 %tobool323, true, !dbg !7920
  %lnot.ext325 = zext i1 %lnot324 to i32, !dbg !7920
  %idxprom326 = sext i32 %lnot.ext325 to i64, !dbg !7917
  %211 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7917
  %arrayidx327 = getelementptr inbounds [2 x i32*], [2 x i32*]* %211, i64 1, !dbg !7917
  %arrayidx328 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx327, i64 0, i64 %idxprom326, !dbg !7917
  %212 = load i32*, i32** %arrayidx328, align 8, !dbg !7917
  %arrayidx329 = getelementptr inbounds i32, i32* %212, i64 %idxprom321, !dbg !7917
  %213 = load i32, i32* %arrayidx329, align 4, !dbg !7921
  %add330 = add nsw i32 %213, %shr319, !dbg !7921
  store i32 %add330, i32* %arrayidx329, align 4, !dbg !7921
  %214 = load i32, i32* %diff, align 4, !dbg !7922
  %mul331 = mul nsw i32 %214, 5, !dbg !7923
  %add332 = add nsw i32 %mul331, 8, !dbg !7924
  %shr333 = ashr i32 %add332, 4, !dbg !7925
  %215 = load i32, i32* %x, align 4, !dbg !7926
  %add334 = add nsw i32 %215, 0, !dbg !7927
  %idxprom335 = sext i32 %add334 to i64, !dbg !7928
  %216 = load i32, i32* %y, align 4, !dbg !7929
  %and336 = and i32 %216, 1, !dbg !7930
  %tobool337 = icmp ne i32 %and336, 0, !dbg !7931
  %lnot338 = xor i1 %tobool337, true, !dbg !7931
  %lnot.ext339 = zext i1 %lnot338 to i32, !dbg !7931
  %idxprom340 = sext i32 %lnot.ext339 to i64, !dbg !7928
  %217 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7928
  %arrayidx341 = getelementptr inbounds [2 x i32*], [2 x i32*]* %217, i64 1, !dbg !7928
  %arrayidx342 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx341, i64 0, i64 %idxprom340, !dbg !7928
  %218 = load i32*, i32** %arrayidx342, align 8, !dbg !7928
  %arrayidx343 = getelementptr inbounds i32, i32* %218, i64 %idxprom335, !dbg !7928
  %219 = load i32, i32* %arrayidx343, align 4, !dbg !7932
  %add344 = add nsw i32 %219, %shr333, !dbg !7932
  store i32 %add344, i32* %arrayidx343, align 4, !dbg !7932
  %220 = load i32, i32* %diff, align 4, !dbg !7933
  %mul345 = mul nsw i32 %220, 1, !dbg !7934
  %add346 = add nsw i32 %mul345, 8, !dbg !7935
  %shr347 = ashr i32 %add346, 4, !dbg !7936
  %221 = load i32, i32* %x, align 4, !dbg !7937
  %add348 = add nsw i32 %221, 1, !dbg !7938
  %idxprom349 = sext i32 %add348 to i64, !dbg !7939
  %222 = load i32, i32* %y, align 4, !dbg !7940
  %and350 = and i32 %222, 1, !dbg !7941
  %tobool351 = icmp ne i32 %and350, 0, !dbg !7942
  %lnot352 = xor i1 %tobool351, true, !dbg !7942
  %lnot.ext353 = zext i1 %lnot352 to i32, !dbg !7942
  %idxprom354 = sext i32 %lnot.ext353 to i64, !dbg !7939
  %223 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7939
  %arrayidx355 = getelementptr inbounds [2 x i32*], [2 x i32*]* %223, i64 1, !dbg !7939
  %arrayidx356 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx355, i64 0, i64 %idxprom354, !dbg !7939
  %224 = load i32*, i32** %arrayidx356, align 8, !dbg !7939
  %arrayidx357 = getelementptr inbounds i32, i32* %224, i64 %idxprom349, !dbg !7939
  %225 = load i32, i32* %arrayidx357, align 4, !dbg !7943
  %add358 = add nsw i32 %225, %shr347, !dbg !7943
  store i32 %add358, i32* %arrayidx357, align 4, !dbg !7943
  %226 = load i32, i32* %x, align 4, !dbg !7944
  %add359 = add nsw i32 %226, 0, !dbg !7945
  %idxprom360 = sext i32 %add359 to i64, !dbg !7946
  %227 = load i32, i32* %y, align 4, !dbg !7947
  %and361 = and i32 %227, 1, !dbg !7948
  %idxprom362 = sext i32 %and361 to i64, !dbg !7946
  %228 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7946
  %arrayidx363 = getelementptr inbounds [2 x i32*], [2 x i32*]* %228, i64 1, !dbg !7946
  %arrayidx364 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx363, i64 0, i64 %idxprom362, !dbg !7946
  %229 = load i32*, i32** %arrayidx364, align 8, !dbg !7946
  %arrayidx365 = getelementptr inbounds i32, i32* %229, i64 %idxprom360, !dbg !7946
  store i32 1048576, i32* %arrayidx365, align 4, !dbg !7949
  %230 = load i32, i32* %r00, align 4, !dbg !7950
  %231 = load i32, i32* %r01, align 4, !dbg !7951
  %add366 = add nsw i32 %230, %231, !dbg !7952
  %add367 = add nsw i32 %add366, 1, !dbg !7953
  %shr368 = ashr i32 %add367, 1, !dbg !7954
  %232 = load i32, i32* %cburv, align 4, !dbg !7955
  %mul369 = mul nsw i32 %shr368, %232, !dbg !7956
  %233 = load i32, i32* %g00, align 4, !dbg !7957
  %234 = load i32, i32* %g01, align 4, !dbg !7958
  %add370 = add nsw i32 %233, %234, !dbg !7959
  %add371 = add nsw i32 %add370, 1, !dbg !7960
  %shr372 = ashr i32 %add371, 1, !dbg !7961
  %235 = load i32, i32* %cgv, align 4, !dbg !7962
  %mul373 = mul nsw i32 %shr372, %235, !dbg !7963
  %add374 = add nsw i32 %mul369, %mul373, !dbg !7964
  %236 = load i32, i32* %b00, align 4, !dbg !7965
  %237 = load i32, i32* %b01, align 4, !dbg !7966
  %add375 = add nsw i32 %236, %237, !dbg !7967
  %add376 = add nsw i32 %add375, 1, !dbg !7968
  %shr377 = ashr i32 %add376, 1, !dbg !7969
  %238 = load i32, i32* %cbv, align 4, !dbg !7970
  %mul378 = mul nsw i32 %shr377, %238, !dbg !7971
  %add379 = add nsw i32 %add374, %mul378, !dbg !7972
  %239 = load i32, i32* %x, align 4, !dbg !7973
  %idxprom380 = sext i32 %239 to i64, !dbg !7974
  %240 = load i32, i32* %y, align 4, !dbg !7975
  %and381 = and i32 %240, 1, !dbg !7976
  %idxprom382 = sext i32 %and381 to i64, !dbg !7974
  %241 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !7974
  %arrayidx383 = getelementptr inbounds [2 x i32*], [2 x i32*]* %241, i64 2, !dbg !7974
  %arrayidx384 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx383, i64 0, i64 %idxprom382, !dbg !7974
  %242 = load i32*, i32** %arrayidx384, align 8, !dbg !7974
  %arrayidx385 = getelementptr inbounds i32, i32* %242, i64 %idxprom380, !dbg !7974
  %243 = load i32, i32* %arrayidx385, align 4, !dbg !7974
  %add386 = add nsw i32 %add379, %243, !dbg !7977
  store i32 %add386, i32* %v, align 4, !dbg !7978
  %244 = load i32, i32* %v, align 4, !dbg !7979
  %245 = load i32, i32* %mask, align 4, !dbg !7980
  %and387 = and i32 %244, %245, !dbg !7981
  %sub388 = sub i32 %and387, 1048576, !dbg !7982
  store i32 %sub388, i32* %diff, align 4, !dbg !7983
  %246 = load i32, i32* %v, align 4, !dbg !7984
  %shr389 = ashr i32 %246, 21, !dbg !7985
  %add390 = add nsw i32 128, %shr389, !dbg !7986
  store i32 %add390, i32* %a.addr.i474, align 4, !dbg !7987
  %247 = load i32, i32* %a.addr.i474, align 4, !dbg !7988
  %and.i475 = and i32 %247, -256, !dbg !7989
  %tobool.i476 = icmp ne i32 %and.i475, 0, !dbg !7989
  br i1 %tobool.i476, label %if.then.i480, label %if.else.i482, !dbg !7990

if.then.i480:                                     ; preds = %av_clip_uint8_c.exit494
  %248 = load i32, i32* %a.addr.i474, align 4, !dbg !7991
  %neg.i477 = xor i32 %248, -1, !dbg !7992
  %shr.i478 = ashr i32 %neg.i477, 31, !dbg !7993
  %conv.i479 = trunc i32 %shr.i478 to i8, !dbg !7994
  store i8 %conv.i479, i8* %retval.i473, align 1, !dbg !7995
  br label %av_clip_uint8_c.exit483, !dbg !7995

if.else.i482:                                     ; preds = %av_clip_uint8_c.exit494
  %249 = load i32, i32* %a.addr.i474, align 4, !dbg !7996
  %conv1.i481 = trunc i32 %249 to i8, !dbg !7996
  store i8 %conv1.i481, i8* %retval.i473, align 1, !dbg !7997
  br label %av_clip_uint8_c.exit483, !dbg !7997

av_clip_uint8_c.exit483:                          ; preds = %if.then.i480, %if.else.i482
  %250 = load i8, i8* %retval.i473, align 1, !dbg !7998
  %251 = load i32, i32* %x, align 4, !dbg !7999
  %idxprom392 = sext i32 %251 to i64, !dbg !8000
  %252 = load i8*, i8** %yuv2, align 8, !dbg !8000
  %arrayidx393 = getelementptr inbounds i8, i8* %252, i64 %idxprom392, !dbg !8000
  store i8 %250, i8* %arrayidx393, align 1, !dbg !8001
  %253 = load i32, i32* %diff, align 4, !dbg !8002
  %mul394 = mul nsw i32 %253, 7, !dbg !8003
  %add395 = add nsw i32 %mul394, 8, !dbg !8004
  %shr396 = ashr i32 %add395, 4, !dbg !8005
  %254 = load i32, i32* %x, align 4, !dbg !8006
  %add397 = add nsw i32 %254, 1, !dbg !8007
  %idxprom398 = sext i32 %add397 to i64, !dbg !8008
  %255 = load i32, i32* %y, align 4, !dbg !8009
  %and399 = and i32 %255, 1, !dbg !8010
  %idxprom400 = sext i32 %and399 to i64, !dbg !8008
  %256 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8008
  %arrayidx401 = getelementptr inbounds [2 x i32*], [2 x i32*]* %256, i64 2, !dbg !8008
  %arrayidx402 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx401, i64 0, i64 %idxprom400, !dbg !8008
  %257 = load i32*, i32** %arrayidx402, align 8, !dbg !8008
  %arrayidx403 = getelementptr inbounds i32, i32* %257, i64 %idxprom398, !dbg !8008
  %258 = load i32, i32* %arrayidx403, align 4, !dbg !8011
  %add404 = add nsw i32 %258, %shr396, !dbg !8011
  store i32 %add404, i32* %arrayidx403, align 4, !dbg !8011
  %259 = load i32, i32* %diff, align 4, !dbg !8012
  %mul405 = mul nsw i32 %259, 3, !dbg !8013
  %add406 = add nsw i32 %mul405, 8, !dbg !8014
  %shr407 = ashr i32 %add406, 4, !dbg !8015
  %260 = load i32, i32* %x, align 4, !dbg !8016
  %sub408 = sub nsw i32 %260, 1, !dbg !8017
  %idxprom409 = sext i32 %sub408 to i64, !dbg !8018
  %261 = load i32, i32* %y, align 4, !dbg !8019
  %and410 = and i32 %261, 1, !dbg !8020
  %tobool411 = icmp ne i32 %and410, 0, !dbg !8021
  %lnot412 = xor i1 %tobool411, true, !dbg !8021
  %lnot.ext413 = zext i1 %lnot412 to i32, !dbg !8021
  %idxprom414 = sext i32 %lnot.ext413 to i64, !dbg !8018
  %262 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8018
  %arrayidx415 = getelementptr inbounds [2 x i32*], [2 x i32*]* %262, i64 2, !dbg !8018
  %arrayidx416 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx415, i64 0, i64 %idxprom414, !dbg !8018
  %263 = load i32*, i32** %arrayidx416, align 8, !dbg !8018
  %arrayidx417 = getelementptr inbounds i32, i32* %263, i64 %idxprom409, !dbg !8018
  %264 = load i32, i32* %arrayidx417, align 4, !dbg !8022
  %add418 = add nsw i32 %264, %shr407, !dbg !8022
  store i32 %add418, i32* %arrayidx417, align 4, !dbg !8022
  %265 = load i32, i32* %diff, align 4, !dbg !8023
  %mul419 = mul nsw i32 %265, 5, !dbg !8024
  %add420 = add nsw i32 %mul419, 8, !dbg !8025
  %shr421 = ashr i32 %add420, 4, !dbg !8026
  %266 = load i32, i32* %x, align 4, !dbg !8027
  %add422 = add nsw i32 %266, 0, !dbg !8028
  %idxprom423 = sext i32 %add422 to i64, !dbg !8029
  %267 = load i32, i32* %y, align 4, !dbg !8030
  %and424 = and i32 %267, 1, !dbg !8031
  %tobool425 = icmp ne i32 %and424, 0, !dbg !8032
  %lnot426 = xor i1 %tobool425, true, !dbg !8032
  %lnot.ext427 = zext i1 %lnot426 to i32, !dbg !8032
  %idxprom428 = sext i32 %lnot.ext427 to i64, !dbg !8029
  %268 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8029
  %arrayidx429 = getelementptr inbounds [2 x i32*], [2 x i32*]* %268, i64 2, !dbg !8029
  %arrayidx430 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx429, i64 0, i64 %idxprom428, !dbg !8029
  %269 = load i32*, i32** %arrayidx430, align 8, !dbg !8029
  %arrayidx431 = getelementptr inbounds i32, i32* %269, i64 %idxprom423, !dbg !8029
  %270 = load i32, i32* %arrayidx431, align 4, !dbg !8033
  %add432 = add nsw i32 %270, %shr421, !dbg !8033
  store i32 %add432, i32* %arrayidx431, align 4, !dbg !8033
  %271 = load i32, i32* %diff, align 4, !dbg !8034
  %mul433 = mul nsw i32 %271, 1, !dbg !8035
  %add434 = add nsw i32 %mul433, 8, !dbg !8036
  %shr435 = ashr i32 %add434, 4, !dbg !8037
  %272 = load i32, i32* %x, align 4, !dbg !8038
  %add436 = add nsw i32 %272, 1, !dbg !8039
  %idxprom437 = sext i32 %add436 to i64, !dbg !8040
  %273 = load i32, i32* %y, align 4, !dbg !8041
  %and438 = and i32 %273, 1, !dbg !8042
  %tobool439 = icmp ne i32 %and438, 0, !dbg !8043
  %lnot440 = xor i1 %tobool439, true, !dbg !8043
  %lnot.ext441 = zext i1 %lnot440 to i32, !dbg !8043
  %idxprom442 = sext i32 %lnot.ext441 to i64, !dbg !8040
  %274 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8040
  %arrayidx443 = getelementptr inbounds [2 x i32*], [2 x i32*]* %274, i64 2, !dbg !8040
  %arrayidx444 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx443, i64 0, i64 %idxprom442, !dbg !8040
  %275 = load i32*, i32** %arrayidx444, align 8, !dbg !8040
  %arrayidx445 = getelementptr inbounds i32, i32* %275, i64 %idxprom437, !dbg !8040
  %276 = load i32, i32* %arrayidx445, align 4, !dbg !8044
  %add446 = add nsw i32 %276, %shr435, !dbg !8044
  store i32 %add446, i32* %arrayidx445, align 4, !dbg !8044
  %277 = load i32, i32* %x, align 4, !dbg !8045
  %add447 = add nsw i32 %277, 0, !dbg !8046
  %idxprom448 = sext i32 %add447 to i64, !dbg !8047
  %278 = load i32, i32* %y, align 4, !dbg !8048
  %and449 = and i32 %278, 1, !dbg !8049
  %idxprom450 = sext i32 %and449 to i64, !dbg !8047
  %279 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8047
  %arrayidx451 = getelementptr inbounds [2 x i32*], [2 x i32*]* %279, i64 2, !dbg !8047
  %arrayidx452 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx451, i64 0, i64 %idxprom450, !dbg !8047
  %280 = load i32*, i32** %arrayidx452, align 8, !dbg !8047
  %arrayidx453 = getelementptr inbounds i32, i32* %280, i64 %idxprom448, !dbg !8047
  store i32 1048576, i32* %arrayidx453, align 4, !dbg !8050
  br label %for.inc454, !dbg !8051

for.inc454:                                       ; preds = %av_clip_uint8_c.exit483
  %281 = load i32, i32* %x, align 4, !dbg !8052
  %inc455 = add nsw i32 %281, 1, !dbg !8052
  store i32 %inc455, i32* %x, align 4, !dbg !8052
  br label %for.cond76, !dbg !8054, !llvm.loop !8055

for.end456:                                       ; preds = %for.cond76
  %282 = load i64, i64* %s0, align 8, !dbg !8057
  %mul457 = mul nsw i64 %282, 1, !dbg !8058
  %283 = load i8*, i8** %yuv0, align 8, !dbg !8059
  %add.ptr = getelementptr inbounds i8, i8* %283, i64 %mul457, !dbg !8059
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !8059
  %284 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !8060
  %arrayidx458 = getelementptr inbounds i64, i64* %284, i64 1, !dbg !8060
  %285 = load i64, i64* %arrayidx458, align 8, !dbg !8060
  %div459 = udiv i64 %285, 1, !dbg !8061
  %286 = load i8*, i8** %yuv1, align 8, !dbg !8062
  %add.ptr460 = getelementptr inbounds i8, i8* %286, i64 %div459, !dbg !8062
  store i8* %add.ptr460, i8** %yuv1, align 8, !dbg !8062
  %287 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !8063
  %arrayidx461 = getelementptr inbounds i64, i64* %287, i64 2, !dbg !8063
  %288 = load i64, i64* %arrayidx461, align 8, !dbg !8063
  %div462 = udiv i64 %288, 1, !dbg !8064
  %289 = load i8*, i8** %yuv2, align 8, !dbg !8065
  %add.ptr463 = getelementptr inbounds i8, i8* %289, i64 %div462, !dbg !8065
  store i8* %add.ptr463, i8** %yuv2, align 8, !dbg !8065
  %290 = load i64, i64* %s.addr, align 8, !dbg !8066
  %mul464 = mul nsw i64 %290, 1, !dbg !8067
  %291 = load i16*, i16** %rgb0, align 8, !dbg !8068
  %add.ptr465 = getelementptr inbounds i16, i16* %291, i64 %mul464, !dbg !8068
  store i16* %add.ptr465, i16** %rgb0, align 8, !dbg !8068
  %292 = load i64, i64* %s.addr, align 8, !dbg !8069
  %mul466 = mul nsw i64 %292, 1, !dbg !8070
  %293 = load i16*, i16** %rgb1, align 8, !dbg !8071
  %add.ptr467 = getelementptr inbounds i16, i16* %293, i64 %mul466, !dbg !8071
  store i16* %add.ptr467, i16** %rgb1, align 8, !dbg !8071
  %294 = load i64, i64* %s.addr, align 8, !dbg !8072
  %mul468 = mul nsw i64 %294, 1, !dbg !8073
  %295 = load i16*, i16** %rgb2, align 8, !dbg !8074
  %add.ptr469 = getelementptr inbounds i16, i16* %295, i64 %mul468, !dbg !8074
  store i16* %add.ptr469, i16** %rgb2, align 8, !dbg !8074
  br label %for.inc470, !dbg !8075

for.inc470:                                       ; preds = %for.end456
  %296 = load i32, i32* %y, align 4, !dbg !8076
  %inc471 = add nsw i32 %296, 1, !dbg !8076
  store i32 %inc471, i32* %y, align 4, !dbg !8076
  br label %for.cond72, !dbg !8078, !llvm.loop !8079

for.end472:                                       ; preds = %for.cond72
  ret void, !dbg !8081
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_420p8_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !8082 {
entry:
  %retval.i705 = alloca i8, align 1
  %a.addr.i706 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i706, metadata !3609, metadata !94), !dbg !8083
  %retval.i694 = alloca i8, align 1
  %a.addr.i695 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i695, metadata !3609, metadata !94), !dbg !8091
  %retval.i683 = alloca i8, align 1
  %a.addr.i684 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i684, metadata !3609, metadata !94), !dbg !8093
  %retval.i672 = alloca i8, align 1
  %a.addr.i673 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i673, metadata !3609, metadata !94), !dbg !8095
  %retval.i661 = alloca i8, align 1
  %a.addr.i662 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i662, metadata !3609, metadata !94), !dbg !8097
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !8099
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i8**, align 8
  %yuv0 = alloca i8*, align 8
  %yuv1 = alloca i8*, align 8
  %yuv2 = alloca i8*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !8101, metadata !94), !dbg !8102
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !8103, metadata !94), !dbg !8104
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !8105, metadata !94), !dbg !8106
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !8107, metadata !94), !dbg !8108
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8109, metadata !94), !dbg !8110
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8111, metadata !94), !dbg !8112
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !8113, metadata !94), !dbg !8114
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !8115, metadata !94), !dbg !8116
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !8117, metadata !94), !dbg !8118
  call void @llvm.dbg.declare(metadata i8*** %yuv, metadata !8119, metadata !94), !dbg !8120
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !8121
  store i8** %0, i8*** %yuv, align 8, !dbg !8120
  call void @llvm.dbg.declare(metadata i8** %yuv0, metadata !8122, metadata !94), !dbg !8123
  %1 = load i8**, i8*** %yuv, align 8, !dbg !8124
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !8124
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8124
  store i8* %2, i8** %yuv0, align 8, !dbg !8123
  call void @llvm.dbg.declare(metadata i8** %yuv1, metadata !8125, metadata !94), !dbg !8126
  %3 = load i8**, i8*** %yuv, align 8, !dbg !8127
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !8127
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !8127
  store i8* %4, i8** %yuv1, align 8, !dbg !8126
  call void @llvm.dbg.declare(metadata i8** %yuv2, metadata !8128, metadata !94), !dbg !8129
  %5 = load i8**, i8*** %yuv, align 8, !dbg !8130
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 2, !dbg !8130
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !8130
  store i8* %6, i8** %yuv2, align 8, !dbg !8129
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !8131, metadata !94), !dbg !8132
  %7 = load i16**, i16*** %rgb.addr, align 8, !dbg !8133
  %arrayidx3 = getelementptr inbounds i16*, i16** %7, i64 0, !dbg !8133
  %8 = load i16*, i16** %arrayidx3, align 8, !dbg !8133
  store i16* %8, i16** %rgb0, align 8, !dbg !8132
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !8134, metadata !94), !dbg !8135
  %9 = load i16**, i16*** %rgb.addr, align 8, !dbg !8136
  %arrayidx4 = getelementptr inbounds i16*, i16** %9, i64 1, !dbg !8136
  %10 = load i16*, i16** %arrayidx4, align 8, !dbg !8136
  store i16* %10, i16** %rgb1, align 8, !dbg !8135
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !8137, metadata !94), !dbg !8138
  %11 = load i16**, i16*** %rgb.addr, align 8, !dbg !8139
  %arrayidx5 = getelementptr inbounds i16*, i16** %11, i64 2, !dbg !8139
  %12 = load i16*, i16** %arrayidx5, align 8, !dbg !8139
  store i16* %12, i16** %rgb2, align 8, !dbg !8138
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8140, metadata !94), !dbg !8141
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8142, metadata !94), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !8144, metadata !94), !dbg !8145
  store i32 21, i32* %sh, align 4, !dbg !8145
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !8146, metadata !94), !dbg !8147
  store i32 1048576, i32* %rnd, align 4, !dbg !8147
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !8148, metadata !94), !dbg !8149
  %13 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8150
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %13, i64 0, !dbg !8150
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !8150
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !8150
  %14 = load i16, i16* %arrayidx8, align 2, !dbg !8150
  %conv = sext i16 %14 to i32, !dbg !8150
  store i32 %conv, i32* %cry, align 4, !dbg !8149
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !8151, metadata !94), !dbg !8152
  %15 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8153
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %15, i64 0, !dbg !8153
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !8153
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !8153
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !8153
  %conv12 = sext i16 %16 to i32, !dbg !8153
  store i32 %conv12, i32* %cgy, align 4, !dbg !8152
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !8154, metadata !94), !dbg !8155
  %17 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8156
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %17, i64 0, !dbg !8156
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !8156
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !8156
  %18 = load i16, i16* %arrayidx15, align 2, !dbg !8156
  %conv16 = sext i16 %18 to i32, !dbg !8156
  store i32 %conv16, i32* %cby, align 4, !dbg !8155
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !8157, metadata !94), !dbg !8158
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8159
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 1, !dbg !8159
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !8159
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !8159
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !8159
  %conv20 = sext i16 %20 to i32, !dbg !8159
  store i32 %conv20, i32* %cru, align 4, !dbg !8158
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !8160, metadata !94), !dbg !8161
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8162
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 1, !dbg !8162
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !8162
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !8162
  %22 = load i16, i16* %arrayidx23, align 2, !dbg !8162
  %conv24 = sext i16 %22 to i32, !dbg !8162
  store i32 %conv24, i32* %cgu, align 4, !dbg !8161
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !8163, metadata !94), !dbg !8164
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8165
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 1, !dbg !8165
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !8165
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !8165
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !8165
  %conv28 = sext i16 %24 to i32, !dbg !8165
  store i32 %conv28, i32* %cburv, align 4, !dbg !8164
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !8166, metadata !94), !dbg !8167
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8168
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 2, !dbg !8168
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !8168
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !8168
  %26 = load i16, i16* %arrayidx31, align 2, !dbg !8168
  %conv32 = sext i16 %26 to i32, !dbg !8168
  store i32 %conv32, i32* %cgv, align 4, !dbg !8167
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !8169, metadata !94), !dbg !8170
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !8171
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 2, !dbg !8171
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !8171
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !8171
  %28 = load i16, i16* %arrayidx35, align 2, !dbg !8171
  %conv36 = sext i16 %28 to i32, !dbg !8171
  store i32 %conv36, i32* %cbv, align 4, !dbg !8170
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !8172, metadata !94), !dbg !8173
  %29 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !8174
  %arrayidx37 = getelementptr inbounds i64, i64* %29, i64 0, !dbg !8174
  %30 = load i64, i64* %arrayidx37, align 8, !dbg !8174
  %div = udiv i64 %30, 1, !dbg !8175
  store i64 %div, i64* %s0, align 8, !dbg !8173
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !8176, metadata !94), !dbg !8177
  store i32 128, i32* %uv_offset, align 4, !dbg !8177
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8178, metadata !94), !dbg !8179
  store i32 2097151, i32* %mask, align 4, !dbg !8179
  store i32 0, i32* %x, align 4, !dbg !8180
  br label %for.cond, !dbg !8182

for.cond:                                         ; preds = %for.inc, %entry
  %31 = load i32, i32* %x, align 4, !dbg !8183
  %32 = load i32, i32* %w.addr, align 4, !dbg !8186
  %cmp = icmp slt i32 %31, %32, !dbg !8187
  br i1 %cmp, label %for.body, label %for.end, !dbg !8188

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %x, align 4, !dbg !8189
  %idxprom = sext i32 %33 to i64, !dbg !8191
  %34 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8191
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %34, i64 0, !dbg !8191
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !8191
  %35 = load i32*, i32** %arrayidx40, align 8, !dbg !8191
  %arrayidx41 = getelementptr inbounds i32, i32* %35, i64 %idxprom, !dbg !8191
  store i32 1048576, i32* %arrayidx41, align 4, !dbg !8192
  %36 = load i32, i32* %x, align 4, !dbg !8193
  %idxprom42 = sext i32 %36 to i64, !dbg !8194
  %37 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8194
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %37, i64 0, !dbg !8194
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !8194
  %38 = load i32*, i32** %arrayidx44, align 8, !dbg !8194
  %arrayidx45 = getelementptr inbounds i32, i32* %38, i64 %idxprom42, !dbg !8194
  store i32 1048576, i32* %arrayidx45, align 4, !dbg !8195
  br label %for.inc, !dbg !8196

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %x, align 4, !dbg !8197
  %inc = add nsw i32 %39, 1, !dbg !8197
  store i32 %inc, i32* %x, align 4, !dbg !8197
  br label %for.cond, !dbg !8199, !llvm.loop !8200

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %w.addr, align 4, !dbg !8202
  %add = add nsw i32 %40, 2, !dbg !8203
  %sub = sub nsw i32 %add, 1, !dbg !8204
  %shr = ashr i32 %sub, 1, !dbg !8205
  store i32 %shr, i32* %w.addr, align 4, !dbg !8206
  %41 = load i32, i32* %h.addr, align 4, !dbg !8207
  %add46 = add nsw i32 %41, 2, !dbg !8208
  %sub47 = sub nsw i32 %add46, 1, !dbg !8209
  %shr48 = ashr i32 %sub47, 1, !dbg !8210
  store i32 %shr48, i32* %h.addr, align 4, !dbg !8211
  store i32 0, i32* %x, align 4, !dbg !8212
  br label %for.cond49, !dbg !8214

for.cond49:                                       ; preds = %for.inc69, %for.end
  %42 = load i32, i32* %x, align 4, !dbg !8215
  %43 = load i32, i32* %w.addr, align 4, !dbg !8218
  %cmp50 = icmp slt i32 %42, %43, !dbg !8219
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !8220

for.body52:                                       ; preds = %for.cond49
  %44 = load i32, i32* %x, align 4, !dbg !8221
  %idxprom53 = sext i32 %44 to i64, !dbg !8223
  %45 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8223
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %45, i64 2, !dbg !8223
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !8223
  %46 = load i32*, i32** %arrayidx55, align 8, !dbg !8223
  %arrayidx56 = getelementptr inbounds i32, i32* %46, i64 %idxprom53, !dbg !8223
  store i32 1048576, i32* %arrayidx56, align 4, !dbg !8224
  %47 = load i32, i32* %x, align 4, !dbg !8225
  %idxprom57 = sext i32 %47 to i64, !dbg !8226
  %48 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8226
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %48, i64 2, !dbg !8226
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !8226
  %49 = load i32*, i32** %arrayidx59, align 8, !dbg !8226
  %arrayidx60 = getelementptr inbounds i32, i32* %49, i64 %idxprom57, !dbg !8226
  store i32 1048576, i32* %arrayidx60, align 4, !dbg !8227
  %50 = load i32, i32* %x, align 4, !dbg !8228
  %idxprom61 = sext i32 %50 to i64, !dbg !8229
  %51 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8229
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %51, i64 1, !dbg !8229
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !8229
  %52 = load i32*, i32** %arrayidx63, align 8, !dbg !8229
  %arrayidx64 = getelementptr inbounds i32, i32* %52, i64 %idxprom61, !dbg !8229
  store i32 1048576, i32* %arrayidx64, align 4, !dbg !8230
  %53 = load i32, i32* %x, align 4, !dbg !8231
  %idxprom65 = sext i32 %53 to i64, !dbg !8232
  %54 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8232
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %54, i64 1, !dbg !8232
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !8232
  %55 = load i32*, i32** %arrayidx67, align 8, !dbg !8232
  %arrayidx68 = getelementptr inbounds i32, i32* %55, i64 %idxprom65, !dbg !8232
  store i32 1048576, i32* %arrayidx68, align 4, !dbg !8233
  br label %for.inc69, !dbg !8234

for.inc69:                                        ; preds = %for.body52
  %56 = load i32, i32* %x, align 4, !dbg !8235
  %inc70 = add nsw i32 %56, 1, !dbg !8235
  store i32 %inc70, i32* %x, align 4, !dbg !8235
  br label %for.cond49, !dbg !8237, !llvm.loop !8238

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !8240
  br label %for.cond72, !dbg !8241

for.cond72:                                       ; preds = %for.inc658, %for.end71
  %57 = load i32, i32* %y, align 4, !dbg !8242
  %58 = load i32, i32* %h.addr, align 4, !dbg !8244
  %cmp73 = icmp slt i32 %57, %58, !dbg !8245
  br i1 %cmp73, label %for.body75, label %for.end660, !dbg !8246

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !8247
  br label %for.cond76, !dbg !8248

for.cond76:                                       ; preds = %for.inc642, %for.body75
  %59 = load i32, i32* %x, align 4, !dbg !8249
  %60 = load i32, i32* %w.addr, align 4, !dbg !8251
  %cmp77 = icmp slt i32 %59, %60, !dbg !8252
  br i1 %cmp77, label %for.body79, label %for.end644, !dbg !8253

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !8254, metadata !94), !dbg !8255
  %61 = load i32, i32* %x, align 4, !dbg !8256
  %shl = shl i32 %61, 1, !dbg !8257
  %idxprom80 = sext i32 %shl to i64, !dbg !8258
  %62 = load i16*, i16** %rgb0, align 8, !dbg !8258
  %arrayidx81 = getelementptr inbounds i16, i16* %62, i64 %idxprom80, !dbg !8258
  %63 = load i16, i16* %arrayidx81, align 2, !dbg !8258
  %conv82 = sext i16 %63 to i32, !dbg !8258
  store i32 %conv82, i32* %r00, align 4, !dbg !8255
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !8259, metadata !94), !dbg !8260
  %64 = load i32, i32* %x, align 4, !dbg !8261
  %shl83 = shl i32 %64, 1, !dbg !8262
  %idxprom84 = sext i32 %shl83 to i64, !dbg !8263
  %65 = load i16*, i16** %rgb1, align 8, !dbg !8263
  %arrayidx85 = getelementptr inbounds i16, i16* %65, i64 %idxprom84, !dbg !8263
  %66 = load i16, i16* %arrayidx85, align 2, !dbg !8263
  %conv86 = sext i16 %66 to i32, !dbg !8263
  store i32 %conv86, i32* %g00, align 4, !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !8264, metadata !94), !dbg !8265
  %67 = load i32, i32* %x, align 4, !dbg !8266
  %shl87 = shl i32 %67, 1, !dbg !8267
  %idxprom88 = sext i32 %shl87 to i64, !dbg !8268
  %68 = load i16*, i16** %rgb2, align 8, !dbg !8268
  %arrayidx89 = getelementptr inbounds i16, i16* %68, i64 %idxprom88, !dbg !8268
  %69 = load i16, i16* %arrayidx89, align 2, !dbg !8268
  %conv90 = sext i16 %69 to i32, !dbg !8268
  store i32 %conv90, i32* %b00, align 4, !dbg !8265
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !8269, metadata !94), !dbg !8270
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !8271, metadata !94), !dbg !8272
  %70 = load i32, i32* %x, align 4, !dbg !8273
  %mul = mul nsw i32 %70, 2, !dbg !8274
  %add91 = add nsw i32 %mul, 1, !dbg !8275
  %idxprom92 = sext i32 %add91 to i64, !dbg !8276
  %71 = load i16*, i16** %rgb0, align 8, !dbg !8276
  %arrayidx93 = getelementptr inbounds i16, i16* %71, i64 %idxprom92, !dbg !8276
  %72 = load i16, i16* %arrayidx93, align 2, !dbg !8276
  %conv94 = sext i16 %72 to i32, !dbg !8276
  store i32 %conv94, i32* %r01, align 4, !dbg !8272
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !8277, metadata !94), !dbg !8278
  %73 = load i32, i32* %x, align 4, !dbg !8279
  %mul95 = mul nsw i32 %73, 2, !dbg !8280
  %add96 = add nsw i32 %mul95, 1, !dbg !8281
  %idxprom97 = sext i32 %add96 to i64, !dbg !8282
  %74 = load i16*, i16** %rgb1, align 8, !dbg !8282
  %arrayidx98 = getelementptr inbounds i16, i16* %74, i64 %idxprom97, !dbg !8282
  %75 = load i16, i16* %arrayidx98, align 2, !dbg !8282
  %conv99 = sext i16 %75 to i32, !dbg !8282
  store i32 %conv99, i32* %g01, align 4, !dbg !8278
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !8283, metadata !94), !dbg !8284
  %76 = load i32, i32* %x, align 4, !dbg !8285
  %mul100 = mul nsw i32 %76, 2, !dbg !8286
  %add101 = add nsw i32 %mul100, 1, !dbg !8287
  %idxprom102 = sext i32 %add101 to i64, !dbg !8288
  %77 = load i16*, i16** %rgb2, align 8, !dbg !8288
  %arrayidx103 = getelementptr inbounds i16, i16* %77, i64 %idxprom102, !dbg !8288
  %78 = load i16, i16* %arrayidx103, align 2, !dbg !8288
  %conv104 = sext i16 %78 to i32, !dbg !8288
  store i32 %conv104, i32* %b01, align 4, !dbg !8284
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !8289, metadata !94), !dbg !8290
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !8291, metadata !94), !dbg !8292
  %79 = load i32, i32* %x, align 4, !dbg !8293
  %mul105 = mul nsw i32 %79, 2, !dbg !8294
  %add106 = add nsw i32 %mul105, 0, !dbg !8295
  %conv107 = sext i32 %add106 to i64, !dbg !8293
  %80 = load i64, i64* %s.addr, align 8, !dbg !8296
  %add108 = add nsw i64 %conv107, %80, !dbg !8297
  %81 = load i16*, i16** %rgb0, align 8, !dbg !8298
  %arrayidx109 = getelementptr inbounds i16, i16* %81, i64 %add108, !dbg !8298
  %82 = load i16, i16* %arrayidx109, align 2, !dbg !8298
  %conv110 = sext i16 %82 to i32, !dbg !8298
  store i32 %conv110, i32* %r10, align 4, !dbg !8292
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !8299, metadata !94), !dbg !8300
  %83 = load i32, i32* %x, align 4, !dbg !8301
  %mul111 = mul nsw i32 %83, 2, !dbg !8302
  %add112 = add nsw i32 %mul111, 0, !dbg !8303
  %conv113 = sext i32 %add112 to i64, !dbg !8301
  %84 = load i64, i64* %s.addr, align 8, !dbg !8304
  %add114 = add nsw i64 %conv113, %84, !dbg !8305
  %85 = load i16*, i16** %rgb1, align 8, !dbg !8306
  %arrayidx115 = getelementptr inbounds i16, i16* %85, i64 %add114, !dbg !8306
  %86 = load i16, i16* %arrayidx115, align 2, !dbg !8306
  %conv116 = sext i16 %86 to i32, !dbg !8306
  store i32 %conv116, i32* %g10, align 4, !dbg !8300
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !8307, metadata !94), !dbg !8308
  %87 = load i32, i32* %x, align 4, !dbg !8309
  %mul117 = mul nsw i32 %87, 2, !dbg !8310
  %add118 = add nsw i32 %mul117, 0, !dbg !8311
  %conv119 = sext i32 %add118 to i64, !dbg !8309
  %88 = load i64, i64* %s.addr, align 8, !dbg !8312
  %add120 = add nsw i64 %conv119, %88, !dbg !8313
  %89 = load i16*, i16** %rgb2, align 8, !dbg !8314
  %arrayidx121 = getelementptr inbounds i16, i16* %89, i64 %add120, !dbg !8314
  %90 = load i16, i16* %arrayidx121, align 2, !dbg !8314
  %conv122 = sext i16 %90 to i32, !dbg !8314
  store i32 %conv122, i32* %b10, align 4, !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !8315, metadata !94), !dbg !8316
  %91 = load i32, i32* %x, align 4, !dbg !8317
  %mul123 = mul nsw i32 %91, 2, !dbg !8318
  %add124 = add nsw i32 %mul123, 1, !dbg !8319
  %conv125 = sext i32 %add124 to i64, !dbg !8317
  %92 = load i64, i64* %s.addr, align 8, !dbg !8320
  %add126 = add nsw i64 %conv125, %92, !dbg !8321
  %93 = load i16*, i16** %rgb0, align 8, !dbg !8322
  %arrayidx127 = getelementptr inbounds i16, i16* %93, i64 %add126, !dbg !8322
  %94 = load i16, i16* %arrayidx127, align 2, !dbg !8322
  %conv128 = sext i16 %94 to i32, !dbg !8322
  store i32 %conv128, i32* %r11, align 4, !dbg !8316
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !8323, metadata !94), !dbg !8324
  %95 = load i32, i32* %x, align 4, !dbg !8325
  %mul129 = mul nsw i32 %95, 2, !dbg !8326
  %add130 = add nsw i32 %mul129, 1, !dbg !8327
  %conv131 = sext i32 %add130 to i64, !dbg !8325
  %96 = load i64, i64* %s.addr, align 8, !dbg !8328
  %add132 = add nsw i64 %conv131, %96, !dbg !8329
  %97 = load i16*, i16** %rgb1, align 8, !dbg !8330
  %arrayidx133 = getelementptr inbounds i16, i16* %97, i64 %add132, !dbg !8330
  %98 = load i16, i16* %arrayidx133, align 2, !dbg !8330
  %conv134 = sext i16 %98 to i32, !dbg !8330
  store i32 %conv134, i32* %g11, align 4, !dbg !8324
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !8331, metadata !94), !dbg !8332
  %99 = load i32, i32* %x, align 4, !dbg !8333
  %mul135 = mul nsw i32 %99, 2, !dbg !8334
  %add136 = add nsw i32 %mul135, 1, !dbg !8335
  %conv137 = sext i32 %add136 to i64, !dbg !8333
  %100 = load i64, i64* %s.addr, align 8, !dbg !8336
  %add138 = add nsw i64 %conv137, %100, !dbg !8337
  %101 = load i16*, i16** %rgb2, align 8, !dbg !8338
  %arrayidx139 = getelementptr inbounds i16, i16* %101, i64 %add138, !dbg !8338
  %102 = load i16, i16* %arrayidx139, align 2, !dbg !8338
  %conv140 = sext i16 %102 to i32, !dbg !8338
  store i32 %conv140, i32* %b11, align 4, !dbg !8332
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !8339, metadata !94), !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !8341, metadata !94), !dbg !8342
  call void @llvm.dbg.declare(metadata i32* %u, metadata !8343, metadata !94), !dbg !8344
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8345, metadata !94), !dbg !8346
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8347, metadata !94), !dbg !8348
  %103 = load i32, i32* %r00, align 4, !dbg !8349
  %104 = load i32, i32* %cry, align 4, !dbg !8350
  %mul141 = mul nsw i32 %103, %104, !dbg !8351
  %105 = load i32, i32* %g00, align 4, !dbg !8352
  %106 = load i32, i32* %cgy, align 4, !dbg !8353
  %mul142 = mul nsw i32 %105, %106, !dbg !8354
  %add143 = add nsw i32 %mul141, %mul142, !dbg !8355
  %107 = load i32, i32* %b00, align 4, !dbg !8356
  %108 = load i32, i32* %cby, align 4, !dbg !8357
  %mul144 = mul nsw i32 %107, %108, !dbg !8358
  %add145 = add nsw i32 %add143, %mul144, !dbg !8359
  %109 = load i32, i32* %x, align 4, !dbg !8360
  %shl146 = shl i32 %109, 1, !dbg !8361
  %idxprom147 = sext i32 %shl146 to i64, !dbg !8362
  %110 = load i32, i32* %y, align 4, !dbg !8363
  %and = and i32 %110, 0, !dbg !8364
  %idxprom148 = sext i32 %and to i64, !dbg !8362
  %111 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8362
  %arrayidx149 = getelementptr inbounds [2 x i32*], [2 x i32*]* %111, i64 0, !dbg !8362
  %arrayidx150 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx149, i64 0, i64 %idxprom148, !dbg !8362
  %112 = load i32*, i32** %arrayidx150, align 8, !dbg !8362
  %arrayidx151 = getelementptr inbounds i32, i32* %112, i64 %idxprom147, !dbg !8362
  %113 = load i32, i32* %arrayidx151, align 4, !dbg !8362
  %add152 = add nsw i32 %add145, %113, !dbg !8365
  store i32 %add152, i32* %y00, align 4, !dbg !8366
  %114 = load i32, i32* %y00, align 4, !dbg !8367
  %115 = load i32, i32* %mask, align 4, !dbg !8368
  %and153 = and i32 %114, %115, !dbg !8369
  %sub154 = sub i32 %and153, 1048576, !dbg !8370
  store i32 %sub154, i32* %diff, align 4, !dbg !8371
  %116 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !8372
  %arrayidx155 = getelementptr inbounds i16, i16* %116, i64 0, !dbg !8372
  %117 = load i16, i16* %arrayidx155, align 2, !dbg !8372
  %conv156 = sext i16 %117 to i32, !dbg !8372
  %118 = load i32, i32* %y00, align 4, !dbg !8373
  %shr157 = ashr i32 %118, 21, !dbg !8374
  %add158 = add nsw i32 %conv156, %shr157, !dbg !8375
  store i32 %add158, i32* %a.addr.i, align 4, !dbg !8376
  %119 = load i32, i32* %a.addr.i, align 4, !dbg !8377
  %and.i = and i32 %119, -256, !dbg !8378
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !8378
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !8379

if.then.i:                                        ; preds = %for.body79
  %120 = load i32, i32* %a.addr.i, align 4, !dbg !8380
  %neg.i = xor i32 %120, -1, !dbg !8381
  %shr.i = ashr i32 %neg.i, 31, !dbg !8382
  %conv.i = trunc i32 %shr.i to i8, !dbg !8383
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !8384
  br label %av_clip_uint8_c.exit, !dbg !8384

if.else.i:                                        ; preds = %for.body79
  %121 = load i32, i32* %a.addr.i, align 4, !dbg !8385
  %conv1.i = trunc i32 %121 to i8, !dbg !8385
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !8386
  br label %av_clip_uint8_c.exit, !dbg !8386

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %122 = load i8, i8* %retval.i, align 1, !dbg !8387
  %123 = load i32, i32* %x, align 4, !dbg !8388
  %shl159 = shl i32 %123, 1, !dbg !8389
  %idxprom160 = sext i32 %shl159 to i64, !dbg !8390
  %124 = load i8*, i8** %yuv0, align 8, !dbg !8390
  %arrayidx161 = getelementptr inbounds i8, i8* %124, i64 %idxprom160, !dbg !8390
  store i8 %122, i8* %arrayidx161, align 1, !dbg !8391
  %125 = load i32, i32* %diff, align 4, !dbg !8392
  %mul162 = mul nsw i32 %125, 7, !dbg !8393
  %add163 = add nsw i32 %mul162, 8, !dbg !8394
  %shr164 = ashr i32 %add163, 4, !dbg !8395
  %126 = load i32, i32* %x, align 4, !dbg !8396
  %shl165 = shl i32 %126, 1, !dbg !8397
  %add166 = add nsw i32 %shl165, 1, !dbg !8398
  %idxprom167 = sext i32 %add166 to i64, !dbg !8399
  %127 = load i32, i32* %y, align 4, !dbg !8400
  %and168 = and i32 %127, 0, !dbg !8401
  %idxprom169 = sext i32 %and168 to i64, !dbg !8399
  %128 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8399
  %arrayidx170 = getelementptr inbounds [2 x i32*], [2 x i32*]* %128, i64 0, !dbg !8399
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx170, i64 0, i64 %idxprom169, !dbg !8399
  %129 = load i32*, i32** %arrayidx171, align 8, !dbg !8399
  %arrayidx172 = getelementptr inbounds i32, i32* %129, i64 %idxprom167, !dbg !8399
  %130 = load i32, i32* %arrayidx172, align 4, !dbg !8402
  %add173 = add nsw i32 %130, %shr164, !dbg !8402
  store i32 %add173, i32* %arrayidx172, align 4, !dbg !8402
  %131 = load i32, i32* %diff, align 4, !dbg !8403
  %mul174 = mul nsw i32 %131, 3, !dbg !8404
  %add175 = add nsw i32 %mul174, 8, !dbg !8405
  %shr176 = ashr i32 %add175, 4, !dbg !8406
  %132 = load i32, i32* %x, align 4, !dbg !8407
  %shl177 = shl i32 %132, 1, !dbg !8408
  %sub178 = sub nsw i32 %shl177, 1, !dbg !8409
  %idxprom179 = sext i32 %sub178 to i64, !dbg !8410
  %133 = load i32, i32* %y, align 4, !dbg !8411
  %and180 = and i32 %133, 0, !dbg !8412
  %tobool = icmp ne i32 %and180, 0, !dbg !8413
  %lnot = xor i1 %tobool, true, !dbg !8413
  %lnot.ext = zext i1 %lnot to i32, !dbg !8413
  %idxprom181 = sext i32 %lnot.ext to i64, !dbg !8410
  %134 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8410
  %arrayidx182 = getelementptr inbounds [2 x i32*], [2 x i32*]* %134, i64 0, !dbg !8410
  %arrayidx183 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx182, i64 0, i64 %idxprom181, !dbg !8410
  %135 = load i32*, i32** %arrayidx183, align 8, !dbg !8410
  %arrayidx184 = getelementptr inbounds i32, i32* %135, i64 %idxprom179, !dbg !8410
  %136 = load i32, i32* %arrayidx184, align 4, !dbg !8414
  %add185 = add nsw i32 %136, %shr176, !dbg !8414
  store i32 %add185, i32* %arrayidx184, align 4, !dbg !8414
  %137 = load i32, i32* %diff, align 4, !dbg !8415
  %mul186 = mul nsw i32 %137, 5, !dbg !8416
  %add187 = add nsw i32 %mul186, 8, !dbg !8417
  %shr188 = ashr i32 %add187, 4, !dbg !8418
  %138 = load i32, i32* %x, align 4, !dbg !8419
  %shl189 = shl i32 %138, 1, !dbg !8420
  %add190 = add nsw i32 %shl189, 0, !dbg !8421
  %idxprom191 = sext i32 %add190 to i64, !dbg !8422
  %139 = load i32, i32* %y, align 4, !dbg !8423
  %and192 = and i32 %139, 0, !dbg !8424
  %tobool193 = icmp ne i32 %and192, 0, !dbg !8425
  %lnot194 = xor i1 %tobool193, true, !dbg !8425
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !8425
  %idxprom196 = sext i32 %lnot.ext195 to i64, !dbg !8422
  %140 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8422
  %arrayidx197 = getelementptr inbounds [2 x i32*], [2 x i32*]* %140, i64 0, !dbg !8422
  %arrayidx198 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx197, i64 0, i64 %idxprom196, !dbg !8422
  %141 = load i32*, i32** %arrayidx198, align 8, !dbg !8422
  %arrayidx199 = getelementptr inbounds i32, i32* %141, i64 %idxprom191, !dbg !8422
  %142 = load i32, i32* %arrayidx199, align 4, !dbg !8426
  %add200 = add nsw i32 %142, %shr188, !dbg !8426
  store i32 %add200, i32* %arrayidx199, align 4, !dbg !8426
  %143 = load i32, i32* %diff, align 4, !dbg !8427
  %mul201 = mul nsw i32 %143, 1, !dbg !8428
  %add202 = add nsw i32 %mul201, 8, !dbg !8429
  %shr203 = ashr i32 %add202, 4, !dbg !8430
  %144 = load i32, i32* %x, align 4, !dbg !8431
  %shl204 = shl i32 %144, 1, !dbg !8432
  %add205 = add nsw i32 %shl204, 1, !dbg !8433
  %idxprom206 = sext i32 %add205 to i64, !dbg !8434
  %145 = load i32, i32* %y, align 4, !dbg !8435
  %and207 = and i32 %145, 0, !dbg !8436
  %tobool208 = icmp ne i32 %and207, 0, !dbg !8437
  %lnot209 = xor i1 %tobool208, true, !dbg !8437
  %lnot.ext210 = zext i1 %lnot209 to i32, !dbg !8437
  %idxprom211 = sext i32 %lnot.ext210 to i64, !dbg !8434
  %146 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8434
  %arrayidx212 = getelementptr inbounds [2 x i32*], [2 x i32*]* %146, i64 0, !dbg !8434
  %arrayidx213 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx212, i64 0, i64 %idxprom211, !dbg !8434
  %147 = load i32*, i32** %arrayidx213, align 8, !dbg !8434
  %arrayidx214 = getelementptr inbounds i32, i32* %147, i64 %idxprom206, !dbg !8434
  %148 = load i32, i32* %arrayidx214, align 4, !dbg !8438
  %add215 = add nsw i32 %148, %shr203, !dbg !8438
  store i32 %add215, i32* %arrayidx214, align 4, !dbg !8438
  %149 = load i32, i32* %x, align 4, !dbg !8439
  %shl216 = shl i32 %149, 1, !dbg !8440
  %add217 = add nsw i32 %shl216, 0, !dbg !8441
  %idxprom218 = sext i32 %add217 to i64, !dbg !8442
  %150 = load i32, i32* %y, align 4, !dbg !8443
  %and219 = and i32 %150, 0, !dbg !8444
  %idxprom220 = sext i32 %and219 to i64, !dbg !8442
  %151 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8442
  %arrayidx221 = getelementptr inbounds [2 x i32*], [2 x i32*]* %151, i64 0, !dbg !8442
  %arrayidx222 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx221, i64 0, i64 %idxprom220, !dbg !8442
  %152 = load i32*, i32** %arrayidx222, align 8, !dbg !8442
  %arrayidx223 = getelementptr inbounds i32, i32* %152, i64 %idxprom218, !dbg !8442
  store i32 1048576, i32* %arrayidx223, align 4, !dbg !8445
  %153 = load i32, i32* %r01, align 4, !dbg !8446
  %154 = load i32, i32* %cry, align 4, !dbg !8447
  %mul224 = mul nsw i32 %153, %154, !dbg !8448
  %155 = load i32, i32* %g01, align 4, !dbg !8449
  %156 = load i32, i32* %cgy, align 4, !dbg !8450
  %mul225 = mul nsw i32 %155, %156, !dbg !8451
  %add226 = add nsw i32 %mul224, %mul225, !dbg !8452
  %157 = load i32, i32* %b01, align 4, !dbg !8453
  %158 = load i32, i32* %cby, align 4, !dbg !8454
  %mul227 = mul nsw i32 %157, %158, !dbg !8455
  %add228 = add nsw i32 %add226, %mul227, !dbg !8456
  %159 = load i32, i32* %x, align 4, !dbg !8457
  %mul229 = mul nsw i32 %159, 2, !dbg !8458
  %add230 = add nsw i32 %mul229, 1, !dbg !8459
  %idxprom231 = sext i32 %add230 to i64, !dbg !8460
  %160 = load i32, i32* %y, align 4, !dbg !8461
  %and232 = and i32 %160, 0, !dbg !8462
  %idxprom233 = sext i32 %and232 to i64, !dbg !8460
  %161 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8460
  %arrayidx234 = getelementptr inbounds [2 x i32*], [2 x i32*]* %161, i64 0, !dbg !8460
  %arrayidx235 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx234, i64 0, i64 %idxprom233, !dbg !8460
  %162 = load i32*, i32** %arrayidx235, align 8, !dbg !8460
  %arrayidx236 = getelementptr inbounds i32, i32* %162, i64 %idxprom231, !dbg !8460
  %163 = load i32, i32* %arrayidx236, align 4, !dbg !8460
  %add237 = add nsw i32 %add228, %163, !dbg !8463
  store i32 %add237, i32* %y01, align 4, !dbg !8464
  %164 = load i32, i32* %y01, align 4, !dbg !8465
  %165 = load i32, i32* %mask, align 4, !dbg !8466
  %and238 = and i32 %164, %165, !dbg !8467
  %sub239 = sub i32 %and238, 1048576, !dbg !8468
  store i32 %sub239, i32* %diff, align 4, !dbg !8469
  %166 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !8470
  %arrayidx240 = getelementptr inbounds i16, i16* %166, i64 0, !dbg !8470
  %167 = load i16, i16* %arrayidx240, align 2, !dbg !8470
  %conv241 = sext i16 %167 to i32, !dbg !8470
  %168 = load i32, i32* %y01, align 4, !dbg !8471
  %shr242 = ashr i32 %168, 21, !dbg !8472
  %add243 = add nsw i32 %conv241, %shr242, !dbg !8473
  store i32 %add243, i32* %a.addr.i706, align 4, !dbg !8474
  %169 = load i32, i32* %a.addr.i706, align 4, !dbg !8475
  %and.i707 = and i32 %169, -256, !dbg !8476
  %tobool.i708 = icmp ne i32 %and.i707, 0, !dbg !8476
  br i1 %tobool.i708, label %if.then.i712, label %if.else.i714, !dbg !8477

if.then.i712:                                     ; preds = %av_clip_uint8_c.exit
  %170 = load i32, i32* %a.addr.i706, align 4, !dbg !8478
  %neg.i709 = xor i32 %170, -1, !dbg !8479
  %shr.i710 = ashr i32 %neg.i709, 31, !dbg !8480
  %conv.i711 = trunc i32 %shr.i710 to i8, !dbg !8481
  store i8 %conv.i711, i8* %retval.i705, align 1, !dbg !8482
  br label %av_clip_uint8_c.exit715, !dbg !8482

if.else.i714:                                     ; preds = %av_clip_uint8_c.exit
  %171 = load i32, i32* %a.addr.i706, align 4, !dbg !8483
  %conv1.i713 = trunc i32 %171 to i8, !dbg !8483
  store i8 %conv1.i713, i8* %retval.i705, align 1, !dbg !8484
  br label %av_clip_uint8_c.exit715, !dbg !8484

av_clip_uint8_c.exit715:                          ; preds = %if.then.i712, %if.else.i714
  %172 = load i8, i8* %retval.i705, align 1, !dbg !8485
  %173 = load i32, i32* %x, align 4, !dbg !8486
  %mul245 = mul nsw i32 %173, 2, !dbg !8487
  %add246 = add nsw i32 %mul245, 1, !dbg !8488
  %idxprom247 = sext i32 %add246 to i64, !dbg !8489
  %174 = load i8*, i8** %yuv0, align 8, !dbg !8489
  %arrayidx248 = getelementptr inbounds i8, i8* %174, i64 %idxprom247, !dbg !8489
  store i8 %172, i8* %arrayidx248, align 1, !dbg !8490
  %175 = load i32, i32* %diff, align 4, !dbg !8491
  %mul249 = mul nsw i32 %175, 7, !dbg !8492
  %add250 = add nsw i32 %mul249, 8, !dbg !8493
  %shr251 = ashr i32 %add250, 4, !dbg !8494
  %176 = load i32, i32* %x, align 4, !dbg !8495
  %mul252 = mul nsw i32 %176, 2, !dbg !8496
  %add253 = add nsw i32 %mul252, 2, !dbg !8497
  %idxprom254 = sext i32 %add253 to i64, !dbg !8498
  %177 = load i32, i32* %y, align 4, !dbg !8499
  %and255 = and i32 %177, 0, !dbg !8500
  %idxprom256 = sext i32 %and255 to i64, !dbg !8498
  %178 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8498
  %arrayidx257 = getelementptr inbounds [2 x i32*], [2 x i32*]* %178, i64 0, !dbg !8498
  %arrayidx258 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx257, i64 0, i64 %idxprom256, !dbg !8498
  %179 = load i32*, i32** %arrayidx258, align 8, !dbg !8498
  %arrayidx259 = getelementptr inbounds i32, i32* %179, i64 %idxprom254, !dbg !8498
  %180 = load i32, i32* %arrayidx259, align 4, !dbg !8501
  %add260 = add nsw i32 %180, %shr251, !dbg !8501
  store i32 %add260, i32* %arrayidx259, align 4, !dbg !8501
  %181 = load i32, i32* %diff, align 4, !dbg !8502
  %mul261 = mul nsw i32 %181, 3, !dbg !8503
  %add262 = add nsw i32 %mul261, 8, !dbg !8504
  %shr263 = ashr i32 %add262, 4, !dbg !8505
  %182 = load i32, i32* %x, align 4, !dbg !8506
  %mul264 = mul nsw i32 %182, 2, !dbg !8507
  %add265 = add nsw i32 %mul264, 0, !dbg !8508
  %idxprom266 = sext i32 %add265 to i64, !dbg !8509
  %183 = load i32, i32* %y, align 4, !dbg !8510
  %and267 = and i32 %183, 0, !dbg !8511
  %tobool268 = icmp ne i32 %and267, 0, !dbg !8512
  %lnot269 = xor i1 %tobool268, true, !dbg !8512
  %lnot.ext270 = zext i1 %lnot269 to i32, !dbg !8512
  %idxprom271 = sext i32 %lnot.ext270 to i64, !dbg !8509
  %184 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8509
  %arrayidx272 = getelementptr inbounds [2 x i32*], [2 x i32*]* %184, i64 0, !dbg !8509
  %arrayidx273 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx272, i64 0, i64 %idxprom271, !dbg !8509
  %185 = load i32*, i32** %arrayidx273, align 8, !dbg !8509
  %arrayidx274 = getelementptr inbounds i32, i32* %185, i64 %idxprom266, !dbg !8509
  %186 = load i32, i32* %arrayidx274, align 4, !dbg !8513
  %add275 = add nsw i32 %186, %shr263, !dbg !8513
  store i32 %add275, i32* %arrayidx274, align 4, !dbg !8513
  %187 = load i32, i32* %diff, align 4, !dbg !8514
  %mul276 = mul nsw i32 %187, 5, !dbg !8515
  %add277 = add nsw i32 %mul276, 8, !dbg !8516
  %shr278 = ashr i32 %add277, 4, !dbg !8517
  %188 = load i32, i32* %x, align 4, !dbg !8518
  %mul279 = mul nsw i32 %188, 2, !dbg !8519
  %add280 = add nsw i32 %mul279, 1, !dbg !8520
  %idxprom281 = sext i32 %add280 to i64, !dbg !8521
  %189 = load i32, i32* %y, align 4, !dbg !8522
  %and282 = and i32 %189, 0, !dbg !8523
  %tobool283 = icmp ne i32 %and282, 0, !dbg !8524
  %lnot284 = xor i1 %tobool283, true, !dbg !8524
  %lnot.ext285 = zext i1 %lnot284 to i32, !dbg !8524
  %idxprom286 = sext i32 %lnot.ext285 to i64, !dbg !8521
  %190 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8521
  %arrayidx287 = getelementptr inbounds [2 x i32*], [2 x i32*]* %190, i64 0, !dbg !8521
  %arrayidx288 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx287, i64 0, i64 %idxprom286, !dbg !8521
  %191 = load i32*, i32** %arrayidx288, align 8, !dbg !8521
  %arrayidx289 = getelementptr inbounds i32, i32* %191, i64 %idxprom281, !dbg !8521
  %192 = load i32, i32* %arrayidx289, align 4, !dbg !8525
  %add290 = add nsw i32 %192, %shr278, !dbg !8525
  store i32 %add290, i32* %arrayidx289, align 4, !dbg !8525
  %193 = load i32, i32* %diff, align 4, !dbg !8526
  %mul291 = mul nsw i32 %193, 1, !dbg !8527
  %add292 = add nsw i32 %mul291, 8, !dbg !8528
  %shr293 = ashr i32 %add292, 4, !dbg !8529
  %194 = load i32, i32* %x, align 4, !dbg !8530
  %mul294 = mul nsw i32 %194, 2, !dbg !8531
  %add295 = add nsw i32 %mul294, 2, !dbg !8532
  %idxprom296 = sext i32 %add295 to i64, !dbg !8533
  %195 = load i32, i32* %y, align 4, !dbg !8534
  %and297 = and i32 %195, 0, !dbg !8535
  %tobool298 = icmp ne i32 %and297, 0, !dbg !8536
  %lnot299 = xor i1 %tobool298, true, !dbg !8536
  %lnot.ext300 = zext i1 %lnot299 to i32, !dbg !8536
  %idxprom301 = sext i32 %lnot.ext300 to i64, !dbg !8533
  %196 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8533
  %arrayidx302 = getelementptr inbounds [2 x i32*], [2 x i32*]* %196, i64 0, !dbg !8533
  %arrayidx303 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx302, i64 0, i64 %idxprom301, !dbg !8533
  %197 = load i32*, i32** %arrayidx303, align 8, !dbg !8533
  %arrayidx304 = getelementptr inbounds i32, i32* %197, i64 %idxprom296, !dbg !8533
  %198 = load i32, i32* %arrayidx304, align 4, !dbg !8537
  %add305 = add nsw i32 %198, %shr293, !dbg !8537
  store i32 %add305, i32* %arrayidx304, align 4, !dbg !8537
  %199 = load i32, i32* %x, align 4, !dbg !8538
  %mul306 = mul nsw i32 %199, 2, !dbg !8539
  %add307 = add nsw i32 %mul306, 1, !dbg !8540
  %idxprom308 = sext i32 %add307 to i64, !dbg !8541
  %200 = load i32, i32* %y, align 4, !dbg !8542
  %and309 = and i32 %200, 0, !dbg !8543
  %idxprom310 = sext i32 %and309 to i64, !dbg !8541
  %201 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8541
  %arrayidx311 = getelementptr inbounds [2 x i32*], [2 x i32*]* %201, i64 0, !dbg !8541
  %arrayidx312 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx311, i64 0, i64 %idxprom310, !dbg !8541
  %202 = load i32*, i32** %arrayidx312, align 8, !dbg !8541
  %arrayidx313 = getelementptr inbounds i32, i32* %202, i64 %idxprom308, !dbg !8541
  store i32 1048576, i32* %arrayidx313, align 4, !dbg !8544
  %203 = load i32, i32* %r10, align 4, !dbg !8545
  %204 = load i32, i32* %cry, align 4, !dbg !8546
  %mul314 = mul nsw i32 %203, %204, !dbg !8547
  %205 = load i32, i32* %g10, align 4, !dbg !8548
  %206 = load i32, i32* %cgy, align 4, !dbg !8549
  %mul315 = mul nsw i32 %205, %206, !dbg !8550
  %add316 = add nsw i32 %mul314, %mul315, !dbg !8551
  %207 = load i32, i32* %b10, align 4, !dbg !8552
  %208 = load i32, i32* %cby, align 4, !dbg !8553
  %mul317 = mul nsw i32 %207, %208, !dbg !8554
  %add318 = add nsw i32 %add316, %mul317, !dbg !8555
  %209 = load i32, i32* %x, align 4, !dbg !8556
  %mul319 = mul nsw i32 %209, 2, !dbg !8557
  %add320 = add nsw i32 %mul319, 0, !dbg !8558
  %idxprom321 = sext i32 %add320 to i64, !dbg !8559
  %210 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8559
  %arrayidx322 = getelementptr inbounds [2 x i32*], [2 x i32*]* %210, i64 0, !dbg !8559
  %arrayidx323 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx322, i64 0, i64 1, !dbg !8559
  %211 = load i32*, i32** %arrayidx323, align 8, !dbg !8559
  %arrayidx324 = getelementptr inbounds i32, i32* %211, i64 %idxprom321, !dbg !8559
  %212 = load i32, i32* %arrayidx324, align 4, !dbg !8559
  %add325 = add nsw i32 %add318, %212, !dbg !8560
  store i32 %add325, i32* %y10, align 4, !dbg !8561
  %213 = load i32, i32* %y10, align 4, !dbg !8562
  %214 = load i32, i32* %mask, align 4, !dbg !8563
  %and326 = and i32 %213, %214, !dbg !8564
  %sub327 = sub i32 %and326, 1048576, !dbg !8565
  store i32 %sub327, i32* %diff, align 4, !dbg !8566
  %215 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !8567
  %arrayidx328 = getelementptr inbounds i16, i16* %215, i64 0, !dbg !8567
  %216 = load i16, i16* %arrayidx328, align 2, !dbg !8567
  %conv329 = sext i16 %216 to i32, !dbg !8567
  %217 = load i32, i32* %y10, align 4, !dbg !8568
  %shr330 = ashr i32 %217, 21, !dbg !8569
  %add331 = add nsw i32 %conv329, %shr330, !dbg !8570
  store i32 %add331, i32* %a.addr.i695, align 4, !dbg !8571
  %218 = load i32, i32* %a.addr.i695, align 4, !dbg !8572
  %and.i696 = and i32 %218, -256, !dbg !8573
  %tobool.i697 = icmp ne i32 %and.i696, 0, !dbg !8573
  br i1 %tobool.i697, label %if.then.i701, label %if.else.i703, !dbg !8574

if.then.i701:                                     ; preds = %av_clip_uint8_c.exit715
  %219 = load i32, i32* %a.addr.i695, align 4, !dbg !8575
  %neg.i698 = xor i32 %219, -1, !dbg !8576
  %shr.i699 = ashr i32 %neg.i698, 31, !dbg !8577
  %conv.i700 = trunc i32 %shr.i699 to i8, !dbg !8578
  store i8 %conv.i700, i8* %retval.i694, align 1, !dbg !8579
  br label %av_clip_uint8_c.exit704, !dbg !8579

if.else.i703:                                     ; preds = %av_clip_uint8_c.exit715
  %220 = load i32, i32* %a.addr.i695, align 4, !dbg !8580
  %conv1.i702 = trunc i32 %220 to i8, !dbg !8580
  store i8 %conv1.i702, i8* %retval.i694, align 1, !dbg !8581
  br label %av_clip_uint8_c.exit704, !dbg !8581

av_clip_uint8_c.exit704:                          ; preds = %if.then.i701, %if.else.i703
  %221 = load i8, i8* %retval.i694, align 1, !dbg !8582
  %222 = load i32, i32* %x, align 4, !dbg !8583
  %mul333 = mul nsw i32 %222, 2, !dbg !8584
  %add334 = add nsw i32 %mul333, 0, !dbg !8585
  %conv335 = sext i32 %add334 to i64, !dbg !8583
  %223 = load i64, i64* %s0, align 8, !dbg !8586
  %add336 = add nsw i64 %conv335, %223, !dbg !8587
  %224 = load i8*, i8** %yuv0, align 8, !dbg !8588
  %arrayidx337 = getelementptr inbounds i8, i8* %224, i64 %add336, !dbg !8588
  store i8 %221, i8* %arrayidx337, align 1, !dbg !8589
  %225 = load i32, i32* %diff, align 4, !dbg !8590
  %mul338 = mul nsw i32 %225, 7, !dbg !8591
  %add339 = add nsw i32 %mul338, 8, !dbg !8592
  %shr340 = ashr i32 %add339, 4, !dbg !8593
  %226 = load i32, i32* %x, align 4, !dbg !8594
  %mul341 = mul nsw i32 %226, 2, !dbg !8595
  %add342 = add nsw i32 %mul341, 1, !dbg !8596
  %idxprom343 = sext i32 %add342 to i64, !dbg !8597
  %227 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8597
  %arrayidx344 = getelementptr inbounds [2 x i32*], [2 x i32*]* %227, i64 0, !dbg !8597
  %arrayidx345 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx344, i64 0, i64 1, !dbg !8597
  %228 = load i32*, i32** %arrayidx345, align 8, !dbg !8597
  %arrayidx346 = getelementptr inbounds i32, i32* %228, i64 %idxprom343, !dbg !8597
  %229 = load i32, i32* %arrayidx346, align 4, !dbg !8598
  %add347 = add nsw i32 %229, %shr340, !dbg !8598
  store i32 %add347, i32* %arrayidx346, align 4, !dbg !8598
  %230 = load i32, i32* %diff, align 4, !dbg !8599
  %mul348 = mul nsw i32 %230, 3, !dbg !8600
  %add349 = add nsw i32 %mul348, 8, !dbg !8601
  %shr350 = ashr i32 %add349, 4, !dbg !8602
  %231 = load i32, i32* %x, align 4, !dbg !8603
  %mul351 = mul nsw i32 %231, 2, !dbg !8604
  %sub352 = sub nsw i32 %mul351, 1, !dbg !8605
  %idxprom353 = sext i32 %sub352 to i64, !dbg !8606
  %232 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8606
  %arrayidx354 = getelementptr inbounds [2 x i32*], [2 x i32*]* %232, i64 0, !dbg !8606
  %arrayidx355 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx354, i64 0, i64 0, !dbg !8606
  %233 = load i32*, i32** %arrayidx355, align 8, !dbg !8606
  %arrayidx356 = getelementptr inbounds i32, i32* %233, i64 %idxprom353, !dbg !8606
  %234 = load i32, i32* %arrayidx356, align 4, !dbg !8607
  %add357 = add nsw i32 %234, %shr350, !dbg !8607
  store i32 %add357, i32* %arrayidx356, align 4, !dbg !8607
  %235 = load i32, i32* %diff, align 4, !dbg !8608
  %mul358 = mul nsw i32 %235, 5, !dbg !8609
  %add359 = add nsw i32 %mul358, 8, !dbg !8610
  %shr360 = ashr i32 %add359, 4, !dbg !8611
  %236 = load i32, i32* %x, align 4, !dbg !8612
  %mul361 = mul nsw i32 %236, 2, !dbg !8613
  %add362 = add nsw i32 %mul361, 0, !dbg !8614
  %idxprom363 = sext i32 %add362 to i64, !dbg !8615
  %237 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8615
  %arrayidx364 = getelementptr inbounds [2 x i32*], [2 x i32*]* %237, i64 0, !dbg !8615
  %arrayidx365 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx364, i64 0, i64 0, !dbg !8615
  %238 = load i32*, i32** %arrayidx365, align 8, !dbg !8615
  %arrayidx366 = getelementptr inbounds i32, i32* %238, i64 %idxprom363, !dbg !8615
  %239 = load i32, i32* %arrayidx366, align 4, !dbg !8616
  %add367 = add nsw i32 %239, %shr360, !dbg !8616
  store i32 %add367, i32* %arrayidx366, align 4, !dbg !8616
  %240 = load i32, i32* %diff, align 4, !dbg !8617
  %mul368 = mul nsw i32 %240, 1, !dbg !8618
  %add369 = add nsw i32 %mul368, 8, !dbg !8619
  %shr370 = ashr i32 %add369, 4, !dbg !8620
  %241 = load i32, i32* %x, align 4, !dbg !8621
  %mul371 = mul nsw i32 %241, 2, !dbg !8622
  %add372 = add nsw i32 %mul371, 1, !dbg !8623
  %idxprom373 = sext i32 %add372 to i64, !dbg !8624
  %242 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8624
  %arrayidx374 = getelementptr inbounds [2 x i32*], [2 x i32*]* %242, i64 0, !dbg !8624
  %arrayidx375 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx374, i64 0, i64 0, !dbg !8624
  %243 = load i32*, i32** %arrayidx375, align 8, !dbg !8624
  %arrayidx376 = getelementptr inbounds i32, i32* %243, i64 %idxprom373, !dbg !8624
  %244 = load i32, i32* %arrayidx376, align 4, !dbg !8625
  %add377 = add nsw i32 %244, %shr370, !dbg !8625
  store i32 %add377, i32* %arrayidx376, align 4, !dbg !8625
  %245 = load i32, i32* %x, align 4, !dbg !8626
  %mul378 = mul nsw i32 %245, 2, !dbg !8627
  %add379 = add nsw i32 %mul378, 0, !dbg !8628
  %idxprom380 = sext i32 %add379 to i64, !dbg !8629
  %246 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8629
  %arrayidx381 = getelementptr inbounds [2 x i32*], [2 x i32*]* %246, i64 0, !dbg !8629
  %arrayidx382 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx381, i64 0, i64 1, !dbg !8629
  %247 = load i32*, i32** %arrayidx382, align 8, !dbg !8629
  %arrayidx383 = getelementptr inbounds i32, i32* %247, i64 %idxprom380, !dbg !8629
  store i32 1048576, i32* %arrayidx383, align 4, !dbg !8630
  %248 = load i32, i32* %r11, align 4, !dbg !8631
  %249 = load i32, i32* %cry, align 4, !dbg !8632
  %mul384 = mul nsw i32 %248, %249, !dbg !8633
  %250 = load i32, i32* %g11, align 4, !dbg !8634
  %251 = load i32, i32* %cgy, align 4, !dbg !8635
  %mul385 = mul nsw i32 %250, %251, !dbg !8636
  %add386 = add nsw i32 %mul384, %mul385, !dbg !8637
  %252 = load i32, i32* %b11, align 4, !dbg !8638
  %253 = load i32, i32* %cby, align 4, !dbg !8639
  %mul387 = mul nsw i32 %252, %253, !dbg !8640
  %add388 = add nsw i32 %add386, %mul387, !dbg !8641
  %254 = load i32, i32* %x, align 4, !dbg !8642
  %mul389 = mul nsw i32 %254, 2, !dbg !8643
  %add390 = add nsw i32 %mul389, 1, !dbg !8644
  %idxprom391 = sext i32 %add390 to i64, !dbg !8645
  %255 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8645
  %arrayidx392 = getelementptr inbounds [2 x i32*], [2 x i32*]* %255, i64 0, !dbg !8645
  %arrayidx393 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx392, i64 0, i64 1, !dbg !8645
  %256 = load i32*, i32** %arrayidx393, align 8, !dbg !8645
  %arrayidx394 = getelementptr inbounds i32, i32* %256, i64 %idxprom391, !dbg !8645
  %257 = load i32, i32* %arrayidx394, align 4, !dbg !8645
  %add395 = add nsw i32 %add388, %257, !dbg !8646
  store i32 %add395, i32* %y11, align 4, !dbg !8647
  %258 = load i32, i32* %y11, align 4, !dbg !8648
  %259 = load i32, i32* %mask, align 4, !dbg !8649
  %and396 = and i32 %258, %259, !dbg !8650
  %sub397 = sub i32 %and396, 1048576, !dbg !8651
  store i32 %sub397, i32* %diff, align 4, !dbg !8652
  %260 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !8653
  %arrayidx398 = getelementptr inbounds i16, i16* %260, i64 0, !dbg !8653
  %261 = load i16, i16* %arrayidx398, align 2, !dbg !8653
  %conv399 = sext i16 %261 to i32, !dbg !8653
  %262 = load i32, i32* %y11, align 4, !dbg !8654
  %shr400 = ashr i32 %262, 21, !dbg !8655
  %add401 = add nsw i32 %conv399, %shr400, !dbg !8656
  store i32 %add401, i32* %a.addr.i684, align 4, !dbg !8657
  %263 = load i32, i32* %a.addr.i684, align 4, !dbg !8658
  %and.i685 = and i32 %263, -256, !dbg !8659
  %tobool.i686 = icmp ne i32 %and.i685, 0, !dbg !8659
  br i1 %tobool.i686, label %if.then.i690, label %if.else.i692, !dbg !8660

if.then.i690:                                     ; preds = %av_clip_uint8_c.exit704
  %264 = load i32, i32* %a.addr.i684, align 4, !dbg !8661
  %neg.i687 = xor i32 %264, -1, !dbg !8662
  %shr.i688 = ashr i32 %neg.i687, 31, !dbg !8663
  %conv.i689 = trunc i32 %shr.i688 to i8, !dbg !8664
  store i8 %conv.i689, i8* %retval.i683, align 1, !dbg !8665
  br label %av_clip_uint8_c.exit693, !dbg !8665

if.else.i692:                                     ; preds = %av_clip_uint8_c.exit704
  %265 = load i32, i32* %a.addr.i684, align 4, !dbg !8666
  %conv1.i691 = trunc i32 %265 to i8, !dbg !8666
  store i8 %conv1.i691, i8* %retval.i683, align 1, !dbg !8667
  br label %av_clip_uint8_c.exit693, !dbg !8667

av_clip_uint8_c.exit693:                          ; preds = %if.then.i690, %if.else.i692
  %266 = load i8, i8* %retval.i683, align 1, !dbg !8668
  %267 = load i32, i32* %x, align 4, !dbg !8669
  %mul403 = mul nsw i32 %267, 2, !dbg !8670
  %add404 = add nsw i32 %mul403, 1, !dbg !8671
  %conv405 = sext i32 %add404 to i64, !dbg !8669
  %268 = load i64, i64* %s0, align 8, !dbg !8672
  %add406 = add nsw i64 %conv405, %268, !dbg !8673
  %269 = load i8*, i8** %yuv0, align 8, !dbg !8674
  %arrayidx407 = getelementptr inbounds i8, i8* %269, i64 %add406, !dbg !8674
  store i8 %266, i8* %arrayidx407, align 1, !dbg !8675
  %270 = load i32, i32* %diff, align 4, !dbg !8676
  %mul408 = mul nsw i32 %270, 7, !dbg !8677
  %add409 = add nsw i32 %mul408, 8, !dbg !8678
  %shr410 = ashr i32 %add409, 4, !dbg !8679
  %271 = load i32, i32* %x, align 4, !dbg !8680
  %mul411 = mul nsw i32 %271, 2, !dbg !8681
  %add412 = add nsw i32 %mul411, 2, !dbg !8682
  %idxprom413 = sext i32 %add412 to i64, !dbg !8683
  %272 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8683
  %arrayidx414 = getelementptr inbounds [2 x i32*], [2 x i32*]* %272, i64 0, !dbg !8683
  %arrayidx415 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx414, i64 0, i64 1, !dbg !8683
  %273 = load i32*, i32** %arrayidx415, align 8, !dbg !8683
  %arrayidx416 = getelementptr inbounds i32, i32* %273, i64 %idxprom413, !dbg !8683
  %274 = load i32, i32* %arrayidx416, align 4, !dbg !8684
  %add417 = add nsw i32 %274, %shr410, !dbg !8684
  store i32 %add417, i32* %arrayidx416, align 4, !dbg !8684
  %275 = load i32, i32* %diff, align 4, !dbg !8685
  %mul418 = mul nsw i32 %275, 3, !dbg !8686
  %add419 = add nsw i32 %mul418, 8, !dbg !8687
  %shr420 = ashr i32 %add419, 4, !dbg !8688
  %276 = load i32, i32* %x, align 4, !dbg !8689
  %mul421 = mul nsw i32 %276, 2, !dbg !8690
  %add422 = add nsw i32 %mul421, 0, !dbg !8691
  %idxprom423 = sext i32 %add422 to i64, !dbg !8692
  %277 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8692
  %arrayidx424 = getelementptr inbounds [2 x i32*], [2 x i32*]* %277, i64 0, !dbg !8692
  %arrayidx425 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx424, i64 0, i64 0, !dbg !8692
  %278 = load i32*, i32** %arrayidx425, align 8, !dbg !8692
  %arrayidx426 = getelementptr inbounds i32, i32* %278, i64 %idxprom423, !dbg !8692
  %279 = load i32, i32* %arrayidx426, align 4, !dbg !8693
  %add427 = add nsw i32 %279, %shr420, !dbg !8693
  store i32 %add427, i32* %arrayidx426, align 4, !dbg !8693
  %280 = load i32, i32* %diff, align 4, !dbg !8694
  %mul428 = mul nsw i32 %280, 5, !dbg !8695
  %add429 = add nsw i32 %mul428, 8, !dbg !8696
  %shr430 = ashr i32 %add429, 4, !dbg !8697
  %281 = load i32, i32* %x, align 4, !dbg !8698
  %mul431 = mul nsw i32 %281, 2, !dbg !8699
  %add432 = add nsw i32 %mul431, 1, !dbg !8700
  %idxprom433 = sext i32 %add432 to i64, !dbg !8701
  %282 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8701
  %arrayidx434 = getelementptr inbounds [2 x i32*], [2 x i32*]* %282, i64 0, !dbg !8701
  %arrayidx435 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx434, i64 0, i64 0, !dbg !8701
  %283 = load i32*, i32** %arrayidx435, align 8, !dbg !8701
  %arrayidx436 = getelementptr inbounds i32, i32* %283, i64 %idxprom433, !dbg !8701
  %284 = load i32, i32* %arrayidx436, align 4, !dbg !8702
  %add437 = add nsw i32 %284, %shr430, !dbg !8702
  store i32 %add437, i32* %arrayidx436, align 4, !dbg !8702
  %285 = load i32, i32* %diff, align 4, !dbg !8703
  %mul438 = mul nsw i32 %285, 1, !dbg !8704
  %add439 = add nsw i32 %mul438, 8, !dbg !8705
  %shr440 = ashr i32 %add439, 4, !dbg !8706
  %286 = load i32, i32* %x, align 4, !dbg !8707
  %mul441 = mul nsw i32 %286, 2, !dbg !8708
  %add442 = add nsw i32 %mul441, 2, !dbg !8709
  %idxprom443 = sext i32 %add442 to i64, !dbg !8710
  %287 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8710
  %arrayidx444 = getelementptr inbounds [2 x i32*], [2 x i32*]* %287, i64 0, !dbg !8710
  %arrayidx445 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx444, i64 0, i64 0, !dbg !8710
  %288 = load i32*, i32** %arrayidx445, align 8, !dbg !8710
  %arrayidx446 = getelementptr inbounds i32, i32* %288, i64 %idxprom443, !dbg !8710
  %289 = load i32, i32* %arrayidx446, align 4, !dbg !8711
  %add447 = add nsw i32 %289, %shr440, !dbg !8711
  store i32 %add447, i32* %arrayidx446, align 4, !dbg !8711
  %290 = load i32, i32* %x, align 4, !dbg !8712
  %mul448 = mul nsw i32 %290, 2, !dbg !8713
  %add449 = add nsw i32 %mul448, 1, !dbg !8714
  %idxprom450 = sext i32 %add449 to i64, !dbg !8715
  %291 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8715
  %arrayidx451 = getelementptr inbounds [2 x i32*], [2 x i32*]* %291, i64 0, !dbg !8715
  %arrayidx452 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx451, i64 0, i64 1, !dbg !8715
  %292 = load i32*, i32** %arrayidx452, align 8, !dbg !8715
  %arrayidx453 = getelementptr inbounds i32, i32* %292, i64 %idxprom450, !dbg !8715
  store i32 1048576, i32* %arrayidx453, align 4, !dbg !8716
  %293 = load i32, i32* %r00, align 4, !dbg !8717
  %294 = load i32, i32* %r01, align 4, !dbg !8718
  %add454 = add nsw i32 %293, %294, !dbg !8719
  %295 = load i32, i32* %r10, align 4, !dbg !8720
  %add455 = add nsw i32 %add454, %295, !dbg !8721
  %296 = load i32, i32* %r11, align 4, !dbg !8722
  %add456 = add nsw i32 %add455, %296, !dbg !8723
  %add457 = add nsw i32 %add456, 2, !dbg !8724
  %shr458 = ashr i32 %add457, 2, !dbg !8725
  %297 = load i32, i32* %cru, align 4, !dbg !8726
  %mul459 = mul nsw i32 %shr458, %297, !dbg !8727
  %298 = load i32, i32* %g00, align 4, !dbg !8728
  %299 = load i32, i32* %g01, align 4, !dbg !8729
  %add460 = add nsw i32 %298, %299, !dbg !8730
  %300 = load i32, i32* %g10, align 4, !dbg !8731
  %add461 = add nsw i32 %add460, %300, !dbg !8732
  %301 = load i32, i32* %g11, align 4, !dbg !8733
  %add462 = add nsw i32 %add461, %301, !dbg !8734
  %add463 = add nsw i32 %add462, 2, !dbg !8735
  %shr464 = ashr i32 %add463, 2, !dbg !8736
  %302 = load i32, i32* %cgu, align 4, !dbg !8737
  %mul465 = mul nsw i32 %shr464, %302, !dbg !8738
  %add466 = add nsw i32 %mul459, %mul465, !dbg !8739
  %303 = load i32, i32* %b00, align 4, !dbg !8740
  %304 = load i32, i32* %b01, align 4, !dbg !8741
  %add467 = add nsw i32 %303, %304, !dbg !8742
  %305 = load i32, i32* %b10, align 4, !dbg !8743
  %add468 = add nsw i32 %add467, %305, !dbg !8744
  %306 = load i32, i32* %b11, align 4, !dbg !8745
  %add469 = add nsw i32 %add468, %306, !dbg !8746
  %add470 = add nsw i32 %add469, 2, !dbg !8747
  %shr471 = ashr i32 %add470, 2, !dbg !8748
  %307 = load i32, i32* %cburv, align 4, !dbg !8749
  %mul472 = mul nsw i32 %shr471, %307, !dbg !8750
  %add473 = add nsw i32 %add466, %mul472, !dbg !8751
  %308 = load i32, i32* %x, align 4, !dbg !8752
  %idxprom474 = sext i32 %308 to i64, !dbg !8753
  %309 = load i32, i32* %y, align 4, !dbg !8754
  %and475 = and i32 %309, 1, !dbg !8755
  %idxprom476 = sext i32 %and475 to i64, !dbg !8753
  %310 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8753
  %arrayidx477 = getelementptr inbounds [2 x i32*], [2 x i32*]* %310, i64 1, !dbg !8753
  %arrayidx478 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx477, i64 0, i64 %idxprom476, !dbg !8753
  %311 = load i32*, i32** %arrayidx478, align 8, !dbg !8753
  %arrayidx479 = getelementptr inbounds i32, i32* %311, i64 %idxprom474, !dbg !8753
  %312 = load i32, i32* %arrayidx479, align 4, !dbg !8753
  %add480 = add nsw i32 %add473, %312, !dbg !8756
  store i32 %add480, i32* %u, align 4, !dbg !8757
  %313 = load i32, i32* %u, align 4, !dbg !8758
  %314 = load i32, i32* %mask, align 4, !dbg !8759
  %and481 = and i32 %313, %314, !dbg !8760
  %sub482 = sub i32 %and481, 1048576, !dbg !8761
  store i32 %sub482, i32* %diff, align 4, !dbg !8762
  %315 = load i32, i32* %u, align 4, !dbg !8763
  %shr483 = ashr i32 %315, 21, !dbg !8764
  %add484 = add nsw i32 128, %shr483, !dbg !8765
  store i32 %add484, i32* %a.addr.i673, align 4, !dbg !8766
  %316 = load i32, i32* %a.addr.i673, align 4, !dbg !8767
  %and.i674 = and i32 %316, -256, !dbg !8768
  %tobool.i675 = icmp ne i32 %and.i674, 0, !dbg !8768
  br i1 %tobool.i675, label %if.then.i679, label %if.else.i681, !dbg !8769

if.then.i679:                                     ; preds = %av_clip_uint8_c.exit693
  %317 = load i32, i32* %a.addr.i673, align 4, !dbg !8770
  %neg.i676 = xor i32 %317, -1, !dbg !8771
  %shr.i677 = ashr i32 %neg.i676, 31, !dbg !8772
  %conv.i678 = trunc i32 %shr.i677 to i8, !dbg !8773
  store i8 %conv.i678, i8* %retval.i672, align 1, !dbg !8774
  br label %av_clip_uint8_c.exit682, !dbg !8774

if.else.i681:                                     ; preds = %av_clip_uint8_c.exit693
  %318 = load i32, i32* %a.addr.i673, align 4, !dbg !8775
  %conv1.i680 = trunc i32 %318 to i8, !dbg !8775
  store i8 %conv1.i680, i8* %retval.i672, align 1, !dbg !8776
  br label %av_clip_uint8_c.exit682, !dbg !8776

av_clip_uint8_c.exit682:                          ; preds = %if.then.i679, %if.else.i681
  %319 = load i8, i8* %retval.i672, align 1, !dbg !8777
  %320 = load i32, i32* %x, align 4, !dbg !8778
  %idxprom486 = sext i32 %320 to i64, !dbg !8779
  %321 = load i8*, i8** %yuv1, align 8, !dbg !8779
  %arrayidx487 = getelementptr inbounds i8, i8* %321, i64 %idxprom486, !dbg !8779
  store i8 %319, i8* %arrayidx487, align 1, !dbg !8780
  %322 = load i32, i32* %diff, align 4, !dbg !8781
  %mul488 = mul nsw i32 %322, 7, !dbg !8782
  %add489 = add nsw i32 %mul488, 8, !dbg !8783
  %shr490 = ashr i32 %add489, 4, !dbg !8784
  %323 = load i32, i32* %x, align 4, !dbg !8785
  %add491 = add nsw i32 %323, 1, !dbg !8786
  %idxprom492 = sext i32 %add491 to i64, !dbg !8787
  %324 = load i32, i32* %y, align 4, !dbg !8788
  %and493 = and i32 %324, 1, !dbg !8789
  %idxprom494 = sext i32 %and493 to i64, !dbg !8787
  %325 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8787
  %arrayidx495 = getelementptr inbounds [2 x i32*], [2 x i32*]* %325, i64 1, !dbg !8787
  %arrayidx496 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx495, i64 0, i64 %idxprom494, !dbg !8787
  %326 = load i32*, i32** %arrayidx496, align 8, !dbg !8787
  %arrayidx497 = getelementptr inbounds i32, i32* %326, i64 %idxprom492, !dbg !8787
  %327 = load i32, i32* %arrayidx497, align 4, !dbg !8790
  %add498 = add nsw i32 %327, %shr490, !dbg !8790
  store i32 %add498, i32* %arrayidx497, align 4, !dbg !8790
  %328 = load i32, i32* %diff, align 4, !dbg !8791
  %mul499 = mul nsw i32 %328, 3, !dbg !8792
  %add500 = add nsw i32 %mul499, 8, !dbg !8793
  %shr501 = ashr i32 %add500, 4, !dbg !8794
  %329 = load i32, i32* %x, align 4, !dbg !8795
  %sub502 = sub nsw i32 %329, 1, !dbg !8796
  %idxprom503 = sext i32 %sub502 to i64, !dbg !8797
  %330 = load i32, i32* %y, align 4, !dbg !8798
  %and504 = and i32 %330, 1, !dbg !8799
  %tobool505 = icmp ne i32 %and504, 0, !dbg !8800
  %lnot506 = xor i1 %tobool505, true, !dbg !8800
  %lnot.ext507 = zext i1 %lnot506 to i32, !dbg !8800
  %idxprom508 = sext i32 %lnot.ext507 to i64, !dbg !8797
  %331 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8797
  %arrayidx509 = getelementptr inbounds [2 x i32*], [2 x i32*]* %331, i64 1, !dbg !8797
  %arrayidx510 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx509, i64 0, i64 %idxprom508, !dbg !8797
  %332 = load i32*, i32** %arrayidx510, align 8, !dbg !8797
  %arrayidx511 = getelementptr inbounds i32, i32* %332, i64 %idxprom503, !dbg !8797
  %333 = load i32, i32* %arrayidx511, align 4, !dbg !8801
  %add512 = add nsw i32 %333, %shr501, !dbg !8801
  store i32 %add512, i32* %arrayidx511, align 4, !dbg !8801
  %334 = load i32, i32* %diff, align 4, !dbg !8802
  %mul513 = mul nsw i32 %334, 5, !dbg !8803
  %add514 = add nsw i32 %mul513, 8, !dbg !8804
  %shr515 = ashr i32 %add514, 4, !dbg !8805
  %335 = load i32, i32* %x, align 4, !dbg !8806
  %add516 = add nsw i32 %335, 0, !dbg !8807
  %idxprom517 = sext i32 %add516 to i64, !dbg !8808
  %336 = load i32, i32* %y, align 4, !dbg !8809
  %and518 = and i32 %336, 1, !dbg !8810
  %tobool519 = icmp ne i32 %and518, 0, !dbg !8811
  %lnot520 = xor i1 %tobool519, true, !dbg !8811
  %lnot.ext521 = zext i1 %lnot520 to i32, !dbg !8811
  %idxprom522 = sext i32 %lnot.ext521 to i64, !dbg !8808
  %337 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8808
  %arrayidx523 = getelementptr inbounds [2 x i32*], [2 x i32*]* %337, i64 1, !dbg !8808
  %arrayidx524 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx523, i64 0, i64 %idxprom522, !dbg !8808
  %338 = load i32*, i32** %arrayidx524, align 8, !dbg !8808
  %arrayidx525 = getelementptr inbounds i32, i32* %338, i64 %idxprom517, !dbg !8808
  %339 = load i32, i32* %arrayidx525, align 4, !dbg !8812
  %add526 = add nsw i32 %339, %shr515, !dbg !8812
  store i32 %add526, i32* %arrayidx525, align 4, !dbg !8812
  %340 = load i32, i32* %diff, align 4, !dbg !8813
  %mul527 = mul nsw i32 %340, 1, !dbg !8814
  %add528 = add nsw i32 %mul527, 8, !dbg !8815
  %shr529 = ashr i32 %add528, 4, !dbg !8816
  %341 = load i32, i32* %x, align 4, !dbg !8817
  %add530 = add nsw i32 %341, 1, !dbg !8818
  %idxprom531 = sext i32 %add530 to i64, !dbg !8819
  %342 = load i32, i32* %y, align 4, !dbg !8820
  %and532 = and i32 %342, 1, !dbg !8821
  %tobool533 = icmp ne i32 %and532, 0, !dbg !8822
  %lnot534 = xor i1 %tobool533, true, !dbg !8822
  %lnot.ext535 = zext i1 %lnot534 to i32, !dbg !8822
  %idxprom536 = sext i32 %lnot.ext535 to i64, !dbg !8819
  %343 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8819
  %arrayidx537 = getelementptr inbounds [2 x i32*], [2 x i32*]* %343, i64 1, !dbg !8819
  %arrayidx538 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx537, i64 0, i64 %idxprom536, !dbg !8819
  %344 = load i32*, i32** %arrayidx538, align 8, !dbg !8819
  %arrayidx539 = getelementptr inbounds i32, i32* %344, i64 %idxprom531, !dbg !8819
  %345 = load i32, i32* %arrayidx539, align 4, !dbg !8823
  %add540 = add nsw i32 %345, %shr529, !dbg !8823
  store i32 %add540, i32* %arrayidx539, align 4, !dbg !8823
  %346 = load i32, i32* %x, align 4, !dbg !8824
  %add541 = add nsw i32 %346, 0, !dbg !8825
  %idxprom542 = sext i32 %add541 to i64, !dbg !8826
  %347 = load i32, i32* %y, align 4, !dbg !8827
  %and543 = and i32 %347, 1, !dbg !8828
  %idxprom544 = sext i32 %and543 to i64, !dbg !8826
  %348 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8826
  %arrayidx545 = getelementptr inbounds [2 x i32*], [2 x i32*]* %348, i64 1, !dbg !8826
  %arrayidx546 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx545, i64 0, i64 %idxprom544, !dbg !8826
  %349 = load i32*, i32** %arrayidx546, align 8, !dbg !8826
  %arrayidx547 = getelementptr inbounds i32, i32* %349, i64 %idxprom542, !dbg !8826
  store i32 1048576, i32* %arrayidx547, align 4, !dbg !8829
  %350 = load i32, i32* %r00, align 4, !dbg !8830
  %351 = load i32, i32* %r01, align 4, !dbg !8831
  %add548 = add nsw i32 %350, %351, !dbg !8832
  %352 = load i32, i32* %r10, align 4, !dbg !8833
  %add549 = add nsw i32 %add548, %352, !dbg !8834
  %353 = load i32, i32* %r11, align 4, !dbg !8835
  %add550 = add nsw i32 %add549, %353, !dbg !8836
  %add551 = add nsw i32 %add550, 2, !dbg !8837
  %shr552 = ashr i32 %add551, 2, !dbg !8838
  %354 = load i32, i32* %cburv, align 4, !dbg !8839
  %mul553 = mul nsw i32 %shr552, %354, !dbg !8840
  %355 = load i32, i32* %g00, align 4, !dbg !8841
  %356 = load i32, i32* %g01, align 4, !dbg !8842
  %add554 = add nsw i32 %355, %356, !dbg !8843
  %357 = load i32, i32* %g10, align 4, !dbg !8844
  %add555 = add nsw i32 %add554, %357, !dbg !8845
  %358 = load i32, i32* %g11, align 4, !dbg !8846
  %add556 = add nsw i32 %add555, %358, !dbg !8847
  %add557 = add nsw i32 %add556, 2, !dbg !8848
  %shr558 = ashr i32 %add557, 2, !dbg !8849
  %359 = load i32, i32* %cgv, align 4, !dbg !8850
  %mul559 = mul nsw i32 %shr558, %359, !dbg !8851
  %add560 = add nsw i32 %mul553, %mul559, !dbg !8852
  %360 = load i32, i32* %b00, align 4, !dbg !8853
  %361 = load i32, i32* %b01, align 4, !dbg !8854
  %add561 = add nsw i32 %360, %361, !dbg !8855
  %362 = load i32, i32* %b10, align 4, !dbg !8856
  %add562 = add nsw i32 %add561, %362, !dbg !8857
  %363 = load i32, i32* %b11, align 4, !dbg !8858
  %add563 = add nsw i32 %add562, %363, !dbg !8859
  %add564 = add nsw i32 %add563, 2, !dbg !8860
  %shr565 = ashr i32 %add564, 2, !dbg !8861
  %364 = load i32, i32* %cbv, align 4, !dbg !8862
  %mul566 = mul nsw i32 %shr565, %364, !dbg !8863
  %add567 = add nsw i32 %add560, %mul566, !dbg !8864
  %365 = load i32, i32* %x, align 4, !dbg !8865
  %idxprom568 = sext i32 %365 to i64, !dbg !8866
  %366 = load i32, i32* %y, align 4, !dbg !8867
  %and569 = and i32 %366, 1, !dbg !8868
  %idxprom570 = sext i32 %and569 to i64, !dbg !8866
  %367 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8866
  %arrayidx571 = getelementptr inbounds [2 x i32*], [2 x i32*]* %367, i64 2, !dbg !8866
  %arrayidx572 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx571, i64 0, i64 %idxprom570, !dbg !8866
  %368 = load i32*, i32** %arrayidx572, align 8, !dbg !8866
  %arrayidx573 = getelementptr inbounds i32, i32* %368, i64 %idxprom568, !dbg !8866
  %369 = load i32, i32* %arrayidx573, align 4, !dbg !8866
  %add574 = add nsw i32 %add567, %369, !dbg !8869
  store i32 %add574, i32* %v, align 4, !dbg !8870
  %370 = load i32, i32* %v, align 4, !dbg !8871
  %371 = load i32, i32* %mask, align 4, !dbg !8872
  %and575 = and i32 %370, %371, !dbg !8873
  %sub576 = sub i32 %and575, 1048576, !dbg !8874
  store i32 %sub576, i32* %diff, align 4, !dbg !8875
  %372 = load i32, i32* %v, align 4, !dbg !8876
  %shr577 = ashr i32 %372, 21, !dbg !8877
  %add578 = add nsw i32 128, %shr577, !dbg !8878
  store i32 %add578, i32* %a.addr.i662, align 4, !dbg !8879
  %373 = load i32, i32* %a.addr.i662, align 4, !dbg !8880
  %and.i663 = and i32 %373, -256, !dbg !8881
  %tobool.i664 = icmp ne i32 %and.i663, 0, !dbg !8881
  br i1 %tobool.i664, label %if.then.i668, label %if.else.i670, !dbg !8882

if.then.i668:                                     ; preds = %av_clip_uint8_c.exit682
  %374 = load i32, i32* %a.addr.i662, align 4, !dbg !8883
  %neg.i665 = xor i32 %374, -1, !dbg !8884
  %shr.i666 = ashr i32 %neg.i665, 31, !dbg !8885
  %conv.i667 = trunc i32 %shr.i666 to i8, !dbg !8886
  store i8 %conv.i667, i8* %retval.i661, align 1, !dbg !8887
  br label %av_clip_uint8_c.exit671, !dbg !8887

if.else.i670:                                     ; preds = %av_clip_uint8_c.exit682
  %375 = load i32, i32* %a.addr.i662, align 4, !dbg !8888
  %conv1.i669 = trunc i32 %375 to i8, !dbg !8888
  store i8 %conv1.i669, i8* %retval.i661, align 1, !dbg !8889
  br label %av_clip_uint8_c.exit671, !dbg !8889

av_clip_uint8_c.exit671:                          ; preds = %if.then.i668, %if.else.i670
  %376 = load i8, i8* %retval.i661, align 1, !dbg !8890
  %377 = load i32, i32* %x, align 4, !dbg !8891
  %idxprom580 = sext i32 %377 to i64, !dbg !8892
  %378 = load i8*, i8** %yuv2, align 8, !dbg !8892
  %arrayidx581 = getelementptr inbounds i8, i8* %378, i64 %idxprom580, !dbg !8892
  store i8 %376, i8* %arrayidx581, align 1, !dbg !8893
  %379 = load i32, i32* %diff, align 4, !dbg !8894
  %mul582 = mul nsw i32 %379, 7, !dbg !8895
  %add583 = add nsw i32 %mul582, 8, !dbg !8896
  %shr584 = ashr i32 %add583, 4, !dbg !8897
  %380 = load i32, i32* %x, align 4, !dbg !8898
  %add585 = add nsw i32 %380, 1, !dbg !8899
  %idxprom586 = sext i32 %add585 to i64, !dbg !8900
  %381 = load i32, i32* %y, align 4, !dbg !8901
  %and587 = and i32 %381, 1, !dbg !8902
  %idxprom588 = sext i32 %and587 to i64, !dbg !8900
  %382 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8900
  %arrayidx589 = getelementptr inbounds [2 x i32*], [2 x i32*]* %382, i64 2, !dbg !8900
  %arrayidx590 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx589, i64 0, i64 %idxprom588, !dbg !8900
  %383 = load i32*, i32** %arrayidx590, align 8, !dbg !8900
  %arrayidx591 = getelementptr inbounds i32, i32* %383, i64 %idxprom586, !dbg !8900
  %384 = load i32, i32* %arrayidx591, align 4, !dbg !8903
  %add592 = add nsw i32 %384, %shr584, !dbg !8903
  store i32 %add592, i32* %arrayidx591, align 4, !dbg !8903
  %385 = load i32, i32* %diff, align 4, !dbg !8904
  %mul593 = mul nsw i32 %385, 3, !dbg !8905
  %add594 = add nsw i32 %mul593, 8, !dbg !8906
  %shr595 = ashr i32 %add594, 4, !dbg !8907
  %386 = load i32, i32* %x, align 4, !dbg !8908
  %sub596 = sub nsw i32 %386, 1, !dbg !8909
  %idxprom597 = sext i32 %sub596 to i64, !dbg !8910
  %387 = load i32, i32* %y, align 4, !dbg !8911
  %and598 = and i32 %387, 1, !dbg !8912
  %tobool599 = icmp ne i32 %and598, 0, !dbg !8913
  %lnot600 = xor i1 %tobool599, true, !dbg !8913
  %lnot.ext601 = zext i1 %lnot600 to i32, !dbg !8913
  %idxprom602 = sext i32 %lnot.ext601 to i64, !dbg !8910
  %388 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8910
  %arrayidx603 = getelementptr inbounds [2 x i32*], [2 x i32*]* %388, i64 2, !dbg !8910
  %arrayidx604 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx603, i64 0, i64 %idxprom602, !dbg !8910
  %389 = load i32*, i32** %arrayidx604, align 8, !dbg !8910
  %arrayidx605 = getelementptr inbounds i32, i32* %389, i64 %idxprom597, !dbg !8910
  %390 = load i32, i32* %arrayidx605, align 4, !dbg !8914
  %add606 = add nsw i32 %390, %shr595, !dbg !8914
  store i32 %add606, i32* %arrayidx605, align 4, !dbg !8914
  %391 = load i32, i32* %diff, align 4, !dbg !8915
  %mul607 = mul nsw i32 %391, 5, !dbg !8916
  %add608 = add nsw i32 %mul607, 8, !dbg !8917
  %shr609 = ashr i32 %add608, 4, !dbg !8918
  %392 = load i32, i32* %x, align 4, !dbg !8919
  %add610 = add nsw i32 %392, 0, !dbg !8920
  %idxprom611 = sext i32 %add610 to i64, !dbg !8921
  %393 = load i32, i32* %y, align 4, !dbg !8922
  %and612 = and i32 %393, 1, !dbg !8923
  %tobool613 = icmp ne i32 %and612, 0, !dbg !8924
  %lnot614 = xor i1 %tobool613, true, !dbg !8924
  %lnot.ext615 = zext i1 %lnot614 to i32, !dbg !8924
  %idxprom616 = sext i32 %lnot.ext615 to i64, !dbg !8921
  %394 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8921
  %arrayidx617 = getelementptr inbounds [2 x i32*], [2 x i32*]* %394, i64 2, !dbg !8921
  %arrayidx618 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx617, i64 0, i64 %idxprom616, !dbg !8921
  %395 = load i32*, i32** %arrayidx618, align 8, !dbg !8921
  %arrayidx619 = getelementptr inbounds i32, i32* %395, i64 %idxprom611, !dbg !8921
  %396 = load i32, i32* %arrayidx619, align 4, !dbg !8925
  %add620 = add nsw i32 %396, %shr609, !dbg !8925
  store i32 %add620, i32* %arrayidx619, align 4, !dbg !8925
  %397 = load i32, i32* %diff, align 4, !dbg !8926
  %mul621 = mul nsw i32 %397, 1, !dbg !8927
  %add622 = add nsw i32 %mul621, 8, !dbg !8928
  %shr623 = ashr i32 %add622, 4, !dbg !8929
  %398 = load i32, i32* %x, align 4, !dbg !8930
  %add624 = add nsw i32 %398, 1, !dbg !8931
  %idxprom625 = sext i32 %add624 to i64, !dbg !8932
  %399 = load i32, i32* %y, align 4, !dbg !8933
  %and626 = and i32 %399, 1, !dbg !8934
  %tobool627 = icmp ne i32 %and626, 0, !dbg !8935
  %lnot628 = xor i1 %tobool627, true, !dbg !8935
  %lnot.ext629 = zext i1 %lnot628 to i32, !dbg !8935
  %idxprom630 = sext i32 %lnot.ext629 to i64, !dbg !8932
  %400 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8932
  %arrayidx631 = getelementptr inbounds [2 x i32*], [2 x i32*]* %400, i64 2, !dbg !8932
  %arrayidx632 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx631, i64 0, i64 %idxprom630, !dbg !8932
  %401 = load i32*, i32** %arrayidx632, align 8, !dbg !8932
  %arrayidx633 = getelementptr inbounds i32, i32* %401, i64 %idxprom625, !dbg !8932
  %402 = load i32, i32* %arrayidx633, align 4, !dbg !8936
  %add634 = add nsw i32 %402, %shr623, !dbg !8936
  store i32 %add634, i32* %arrayidx633, align 4, !dbg !8936
  %403 = load i32, i32* %x, align 4, !dbg !8937
  %add635 = add nsw i32 %403, 0, !dbg !8938
  %idxprom636 = sext i32 %add635 to i64, !dbg !8939
  %404 = load i32, i32* %y, align 4, !dbg !8940
  %and637 = and i32 %404, 1, !dbg !8941
  %idxprom638 = sext i32 %and637 to i64, !dbg !8939
  %405 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !8939
  %arrayidx639 = getelementptr inbounds [2 x i32*], [2 x i32*]* %405, i64 2, !dbg !8939
  %arrayidx640 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx639, i64 0, i64 %idxprom638, !dbg !8939
  %406 = load i32*, i32** %arrayidx640, align 8, !dbg !8939
  %arrayidx641 = getelementptr inbounds i32, i32* %406, i64 %idxprom636, !dbg !8939
  store i32 1048576, i32* %arrayidx641, align 4, !dbg !8942
  br label %for.inc642, !dbg !8943

for.inc642:                                       ; preds = %av_clip_uint8_c.exit671
  %407 = load i32, i32* %x, align 4, !dbg !8944
  %inc643 = add nsw i32 %407, 1, !dbg !8944
  store i32 %inc643, i32* %x, align 4, !dbg !8944
  br label %for.cond76, !dbg !8946, !llvm.loop !8947

for.end644:                                       ; preds = %for.cond76
  %408 = load i64, i64* %s0, align 8, !dbg !8949
  %mul645 = mul nsw i64 %408, 2, !dbg !8950
  %409 = load i8*, i8** %yuv0, align 8, !dbg !8951
  %add.ptr = getelementptr inbounds i8, i8* %409, i64 %mul645, !dbg !8951
  store i8* %add.ptr, i8** %yuv0, align 8, !dbg !8951
  %410 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !8952
  %arrayidx646 = getelementptr inbounds i64, i64* %410, i64 1, !dbg !8952
  %411 = load i64, i64* %arrayidx646, align 8, !dbg !8952
  %div647 = udiv i64 %411, 1, !dbg !8953
  %412 = load i8*, i8** %yuv1, align 8, !dbg !8954
  %add.ptr648 = getelementptr inbounds i8, i8* %412, i64 %div647, !dbg !8954
  store i8* %add.ptr648, i8** %yuv1, align 8, !dbg !8954
  %413 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !8955
  %arrayidx649 = getelementptr inbounds i64, i64* %413, i64 2, !dbg !8955
  %414 = load i64, i64* %arrayidx649, align 8, !dbg !8955
  %div650 = udiv i64 %414, 1, !dbg !8956
  %415 = load i8*, i8** %yuv2, align 8, !dbg !8957
  %add.ptr651 = getelementptr inbounds i8, i8* %415, i64 %div650, !dbg !8957
  store i8* %add.ptr651, i8** %yuv2, align 8, !dbg !8957
  %416 = load i64, i64* %s.addr, align 8, !dbg !8958
  %mul652 = mul nsw i64 %416, 2, !dbg !8959
  %417 = load i16*, i16** %rgb0, align 8, !dbg !8960
  %add.ptr653 = getelementptr inbounds i16, i16* %417, i64 %mul652, !dbg !8960
  store i16* %add.ptr653, i16** %rgb0, align 8, !dbg !8960
  %418 = load i64, i64* %s.addr, align 8, !dbg !8961
  %mul654 = mul nsw i64 %418, 2, !dbg !8962
  %419 = load i16*, i16** %rgb1, align 8, !dbg !8963
  %add.ptr655 = getelementptr inbounds i16, i16* %419, i64 %mul654, !dbg !8963
  store i16* %add.ptr655, i16** %rgb1, align 8, !dbg !8963
  %420 = load i64, i64* %s.addr, align 8, !dbg !8964
  %mul656 = mul nsw i64 %420, 2, !dbg !8965
  %421 = load i16*, i16** %rgb2, align 8, !dbg !8966
  %add.ptr657 = getelementptr inbounds i16, i16* %421, i64 %mul656, !dbg !8966
  store i16* %add.ptr657, i16** %rgb2, align 8, !dbg !8966
  br label %for.inc658, !dbg !8967

for.inc658:                                       ; preds = %for.end644
  %422 = load i32, i32* %y, align 4, !dbg !8968
  %inc659 = add nsw i32 %422, 1, !dbg !8968
  store i32 %inc659, i32* %y, align 4, !dbg !8968
  br label %for.cond72, !dbg !8970, !llvm.loop !8971

for.end660:                                       ; preds = %for.cond72
  ret void, !dbg !8973
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_444p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !8974 {
entry:
  %retval.i369 = alloca i32, align 4
  %a.addr.i370 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i370, metadata !4652, metadata !94), !dbg !8975
  %p.addr.i371 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i371, metadata !4665, metadata !94), !dbg !8983
  %retval.i353 = alloca i32, align 4
  %a.addr.i354 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i354, metadata !4652, metadata !94), !dbg !8984
  %p.addr.i355 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i355, metadata !4665, metadata !94), !dbg !8986
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !8987
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !8989
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !8990, metadata !94), !dbg !8991
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !8992, metadata !94), !dbg !8993
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !8994, metadata !94), !dbg !8995
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !8996, metadata !94), !dbg !8997
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8998, metadata !94), !dbg !8999
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9000, metadata !94), !dbg !9001
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !9002, metadata !94), !dbg !9003
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !9004, metadata !94), !dbg !9005
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !9006, metadata !94), !dbg !9007
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !9008, metadata !94), !dbg !9009
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !9010
  %1 = bitcast i8** %0 to i16**, !dbg !9011
  store i16** %1, i16*** %yuv, align 8, !dbg !9009
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !9012, metadata !94), !dbg !9013
  %2 = load i16**, i16*** %yuv, align 8, !dbg !9014
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !9014
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !9014
  store i16* %3, i16** %yuv0, align 8, !dbg !9013
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !9015, metadata !94), !dbg !9016
  %4 = load i16**, i16*** %yuv, align 8, !dbg !9017
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !9017
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !9017
  store i16* %5, i16** %yuv1, align 8, !dbg !9016
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !9018, metadata !94), !dbg !9019
  %6 = load i16**, i16*** %yuv, align 8, !dbg !9020
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !9020
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !9020
  store i16* %7, i16** %yuv2, align 8, !dbg !9019
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !9021, metadata !94), !dbg !9022
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !9023
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !9023
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !9023
  store i16* %9, i16** %rgb0, align 8, !dbg !9022
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !9024, metadata !94), !dbg !9025
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !9026
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !9026
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !9026
  store i16* %11, i16** %rgb1, align 8, !dbg !9025
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !9027, metadata !94), !dbg !9028
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !9029
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !9029
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !9029
  store i16* %13, i16** %rgb2, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9030, metadata !94), !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9032, metadata !94), !dbg !9033
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !9034, metadata !94), !dbg !9035
  store i32 19, i32* %sh, align 4, !dbg !9035
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !9036, metadata !94), !dbg !9037
  store i32 262144, i32* %rnd, align 4, !dbg !9037
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !9038, metadata !94), !dbg !9039
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9040
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !9040
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !9040
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !9040
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !9040
  %conv = sext i16 %15 to i32, !dbg !9040
  store i32 %conv, i32* %cry, align 4, !dbg !9039
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !9041, metadata !94), !dbg !9042
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9043
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !9043
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !9043
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !9043
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !9043
  %conv12 = sext i16 %17 to i32, !dbg !9043
  store i32 %conv12, i32* %cgy, align 4, !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !9044, metadata !94), !dbg !9045
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9046
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !9046
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !9046
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !9046
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !9046
  %conv16 = sext i16 %19 to i32, !dbg !9046
  store i32 %conv16, i32* %cby, align 4, !dbg !9045
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !9047, metadata !94), !dbg !9048
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9049
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !9049
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !9049
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !9049
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !9049
  %conv20 = sext i16 %21 to i32, !dbg !9049
  store i32 %conv20, i32* %cru, align 4, !dbg !9048
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !9050, metadata !94), !dbg !9051
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9052
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !9052
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !9052
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !9052
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !9052
  %conv24 = sext i16 %23 to i32, !dbg !9052
  store i32 %conv24, i32* %cgu, align 4, !dbg !9051
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !9053, metadata !94), !dbg !9054
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9055
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !9055
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !9055
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !9055
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !9055
  %conv28 = sext i16 %25 to i32, !dbg !9055
  store i32 %conv28, i32* %cburv, align 4, !dbg !9054
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !9056, metadata !94), !dbg !9057
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9058
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !9058
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !9058
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !9058
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !9058
  %conv32 = sext i16 %27 to i32, !dbg !9058
  store i32 %conv32, i32* %cgv, align 4, !dbg !9057
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !9059, metadata !94), !dbg !9060
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9061
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !9061
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !9061
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !9061
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !9061
  %conv36 = sext i16 %29 to i32, !dbg !9061
  store i32 %conv36, i32* %cbv, align 4, !dbg !9060
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !9062, metadata !94), !dbg !9063
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !9064
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !9064
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !9064
  %div = udiv i64 %31, 2, !dbg !9065
  store i64 %div, i64* %s0, align 8, !dbg !9063
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !9066, metadata !94), !dbg !9067
  store i32 512, i32* %uv_offset, align 4, !dbg !9067
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9068, metadata !94), !dbg !9069
  store i32 524287, i32* %mask, align 4, !dbg !9069
  store i32 0, i32* %x, align 4, !dbg !9070
  br label %for.cond, !dbg !9072

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !9073
  %33 = load i32, i32* %w.addr, align 4, !dbg !9076
  %cmp = icmp slt i32 %32, %33, !dbg !9077
  br i1 %cmp, label %for.body, label %for.end, !dbg !9078

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !9079
  %idxprom = sext i32 %34 to i64, !dbg !9081
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9081
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !9081
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !9081
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !9081
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !9081
  store i32 262144, i32* %arrayidx41, align 4, !dbg !9082
  %37 = load i32, i32* %x, align 4, !dbg !9083
  %idxprom42 = sext i32 %37 to i64, !dbg !9084
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9084
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !9084
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !9084
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !9084
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !9084
  store i32 262144, i32* %arrayidx45, align 4, !dbg !9085
  br label %for.inc, !dbg !9086

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !9087
  %inc = add nsw i32 %40, 1, !dbg !9087
  store i32 %inc, i32* %x, align 4, !dbg !9087
  br label %for.cond, !dbg !9089, !llvm.loop !9090

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !9092
  %add = add nsw i32 %41, 1, !dbg !9093
  %sub = sub nsw i32 %add, 1, !dbg !9094
  %shr = ashr i32 %sub, 0, !dbg !9095
  store i32 %shr, i32* %w.addr, align 4, !dbg !9096
  %42 = load i32, i32* %h.addr, align 4, !dbg !9097
  %add46 = add nsw i32 %42, 1, !dbg !9098
  %sub47 = sub nsw i32 %add46, 1, !dbg !9099
  %shr48 = ashr i32 %sub47, 0, !dbg !9100
  store i32 %shr48, i32* %h.addr, align 4, !dbg !9101
  store i32 0, i32* %x, align 4, !dbg !9102
  br label %for.cond49, !dbg !9104

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !9105
  %44 = load i32, i32* %w.addr, align 4, !dbg !9108
  %cmp50 = icmp slt i32 %43, %44, !dbg !9109
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !9110

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !9111
  %idxprom53 = sext i32 %45 to i64, !dbg !9113
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9113
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !9113
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !9113
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !9113
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !9113
  store i32 262144, i32* %arrayidx56, align 4, !dbg !9114
  %48 = load i32, i32* %x, align 4, !dbg !9115
  %idxprom57 = sext i32 %48 to i64, !dbg !9116
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9116
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !9116
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !9116
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !9116
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !9116
  store i32 262144, i32* %arrayidx60, align 4, !dbg !9117
  %51 = load i32, i32* %x, align 4, !dbg !9118
  %idxprom61 = sext i32 %51 to i64, !dbg !9119
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9119
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !9119
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !9119
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !9119
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !9119
  store i32 262144, i32* %arrayidx64, align 4, !dbg !9120
  %54 = load i32, i32* %x, align 4, !dbg !9121
  %idxprom65 = sext i32 %54 to i64, !dbg !9122
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9122
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !9122
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !9122
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !9122
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !9122
  store i32 262144, i32* %arrayidx68, align 4, !dbg !9123
  br label %for.inc69, !dbg !9124

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !9125
  %inc70 = add nsw i32 %57, 1, !dbg !9125
  store i32 %inc70, i32* %x, align 4, !dbg !9125
  br label %for.cond49, !dbg !9127, !llvm.loop !9128

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !9130
  br label %for.cond72, !dbg !9131

for.cond72:                                       ; preds = %for.inc350, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !9132
  %59 = load i32, i32* %h.addr, align 4, !dbg !9134
  %cmp73 = icmp slt i32 %58, %59, !dbg !9135
  br i1 %cmp73, label %for.body75, label %for.end352, !dbg !9136

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !9137
  br label %for.cond76, !dbg !9138

for.cond76:                                       ; preds = %for.inc334, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !9139
  %61 = load i32, i32* %w.addr, align 4, !dbg !9141
  %cmp77 = icmp slt i32 %60, %61, !dbg !9142
  br i1 %cmp77, label %for.body79, label %for.end336, !dbg !9143

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !9144, metadata !94), !dbg !9145
  %62 = load i32, i32* %x, align 4, !dbg !9146
  %shl = shl i32 %62, 0, !dbg !9147
  %idxprom80 = sext i32 %shl to i64, !dbg !9148
  %63 = load i16*, i16** %rgb0, align 8, !dbg !9148
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !9148
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !9148
  %conv82 = sext i16 %64 to i32, !dbg !9148
  store i32 %conv82, i32* %r00, align 4, !dbg !9145
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !9149, metadata !94), !dbg !9150
  %65 = load i32, i32* %x, align 4, !dbg !9151
  %shl83 = shl i32 %65, 0, !dbg !9152
  %idxprom84 = sext i32 %shl83 to i64, !dbg !9153
  %66 = load i16*, i16** %rgb1, align 8, !dbg !9153
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !9153
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !9153
  %conv86 = sext i16 %67 to i32, !dbg !9153
  store i32 %conv86, i32* %g00, align 4, !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !9154, metadata !94), !dbg !9155
  %68 = load i32, i32* %x, align 4, !dbg !9156
  %shl87 = shl i32 %68, 0, !dbg !9157
  %idxprom88 = sext i32 %shl87 to i64, !dbg !9158
  %69 = load i16*, i16** %rgb2, align 8, !dbg !9158
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !9158
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !9158
  %conv90 = sext i16 %70 to i32, !dbg !9158
  store i32 %conv90, i32* %b00, align 4, !dbg !9155
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !9159, metadata !94), !dbg !9160
  call void @llvm.dbg.declare(metadata i32* %u, metadata !9161, metadata !94), !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9163, metadata !94), !dbg !9164
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !9165, metadata !94), !dbg !9166
  %71 = load i32, i32* %r00, align 4, !dbg !9167
  %72 = load i32, i32* %cry, align 4, !dbg !9168
  %mul = mul nsw i32 %71, %72, !dbg !9169
  %73 = load i32, i32* %g00, align 4, !dbg !9170
  %74 = load i32, i32* %cgy, align 4, !dbg !9171
  %mul91 = mul nsw i32 %73, %74, !dbg !9172
  %add92 = add nsw i32 %mul, %mul91, !dbg !9173
  %75 = load i32, i32* %b00, align 4, !dbg !9174
  %76 = load i32, i32* %cby, align 4, !dbg !9175
  %mul93 = mul nsw i32 %75, %76, !dbg !9176
  %add94 = add nsw i32 %add92, %mul93, !dbg !9177
  %77 = load i32, i32* %x, align 4, !dbg !9178
  %shl95 = shl i32 %77, 0, !dbg !9179
  %idxprom96 = sext i32 %shl95 to i64, !dbg !9180
  %78 = load i32, i32* %y, align 4, !dbg !9181
  %and = and i32 %78, 1, !dbg !9182
  %idxprom97 = sext i32 %and to i64, !dbg !9180
  %79 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9180
  %arrayidx98 = getelementptr inbounds [2 x i32*], [2 x i32*]* %79, i64 0, !dbg !9180
  %arrayidx99 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx98, i64 0, i64 %idxprom97, !dbg !9180
  %80 = load i32*, i32** %arrayidx99, align 8, !dbg !9180
  %arrayidx100 = getelementptr inbounds i32, i32* %80, i64 %idxprom96, !dbg !9180
  %81 = load i32, i32* %arrayidx100, align 4, !dbg !9180
  %add101 = add nsw i32 %add94, %81, !dbg !9183
  store i32 %add101, i32* %y00, align 4, !dbg !9184
  %82 = load i32, i32* %y00, align 4, !dbg !9185
  %83 = load i32, i32* %mask, align 4, !dbg !9186
  %and102 = and i32 %82, %83, !dbg !9187
  %sub103 = sub i32 %and102, 262144, !dbg !9188
  store i32 %sub103, i32* %diff, align 4, !dbg !9189
  %84 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !9190
  %arrayidx104 = getelementptr inbounds i16, i16* %84, i64 0, !dbg !9190
  %85 = load i16, i16* %arrayidx104, align 2, !dbg !9190
  %conv105 = sext i16 %85 to i32, !dbg !9190
  %86 = load i32, i32* %y00, align 4, !dbg !9191
  %shr106 = ashr i32 %86, 19, !dbg !9192
  %add107 = add nsw i32 %conv105, %shr106, !dbg !9193
  store i32 %add107, i32* %a.addr.i, align 4, !dbg !9194
  store i32 10, i32* %p.addr.i, align 4, !dbg !9194
  %87 = load i32, i32* %a.addr.i, align 4, !dbg !9195
  %88 = load i32, i32* %p.addr.i, align 4, !dbg !9196
  %shl.i = shl i32 1, %88, !dbg !9197
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9198
  %neg.i = xor i32 %sub.i, -1, !dbg !9199
  %and.i = and i32 %87, %neg.i, !dbg !9200
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9200
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9201

if.then.i:                                        ; preds = %for.body79
  %89 = load i32, i32* %a.addr.i, align 4, !dbg !9202
  %neg1.i = xor i32 %89, -1, !dbg !9203
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9204
  %90 = load i32, i32* %p.addr.i, align 4, !dbg !9205
  %shl2.i = shl i32 1, %90, !dbg !9206
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9207
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9208
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9209
  br label %av_clip_uintp2_c.exit, !dbg !9209

if.else.i:                                        ; preds = %for.body79
  %91 = load i32, i32* %a.addr.i, align 4, !dbg !9210
  store i32 %91, i32* %retval.i, align 4, !dbg !9211
  br label %av_clip_uintp2_c.exit, !dbg !9211

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %92 = load i32, i32* %retval.i, align 4, !dbg !9212
  %conv108 = trunc i32 %92 to i16, !dbg !9194
  %93 = load i32, i32* %x, align 4, !dbg !9213
  %shl109 = shl i32 %93, 0, !dbg !9214
  %idxprom110 = sext i32 %shl109 to i64, !dbg !9215
  %94 = load i16*, i16** %yuv0, align 8, !dbg !9215
  %arrayidx111 = getelementptr inbounds i16, i16* %94, i64 %idxprom110, !dbg !9215
  store i16 %conv108, i16* %arrayidx111, align 2, !dbg !9216
  %95 = load i32, i32* %diff, align 4, !dbg !9217
  %mul112 = mul nsw i32 %95, 7, !dbg !9218
  %add113 = add nsw i32 %mul112, 8, !dbg !9219
  %shr114 = ashr i32 %add113, 4, !dbg !9220
  %96 = load i32, i32* %x, align 4, !dbg !9221
  %shl115 = shl i32 %96, 0, !dbg !9222
  %add116 = add nsw i32 %shl115, 1, !dbg !9223
  %idxprom117 = sext i32 %add116 to i64, !dbg !9224
  %97 = load i32, i32* %y, align 4, !dbg !9225
  %and118 = and i32 %97, 1, !dbg !9226
  %idxprom119 = sext i32 %and118 to i64, !dbg !9224
  %98 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9224
  %arrayidx120 = getelementptr inbounds [2 x i32*], [2 x i32*]* %98, i64 0, !dbg !9224
  %arrayidx121 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx120, i64 0, i64 %idxprom119, !dbg !9224
  %99 = load i32*, i32** %arrayidx121, align 8, !dbg !9224
  %arrayidx122 = getelementptr inbounds i32, i32* %99, i64 %idxprom117, !dbg !9224
  %100 = load i32, i32* %arrayidx122, align 4, !dbg !9227
  %add123 = add nsw i32 %100, %shr114, !dbg !9227
  store i32 %add123, i32* %arrayidx122, align 4, !dbg !9227
  %101 = load i32, i32* %diff, align 4, !dbg !9228
  %mul124 = mul nsw i32 %101, 3, !dbg !9229
  %add125 = add nsw i32 %mul124, 8, !dbg !9230
  %shr126 = ashr i32 %add125, 4, !dbg !9231
  %102 = load i32, i32* %x, align 4, !dbg !9232
  %shl127 = shl i32 %102, 0, !dbg !9233
  %sub128 = sub nsw i32 %shl127, 1, !dbg !9234
  %idxprom129 = sext i32 %sub128 to i64, !dbg !9235
  %103 = load i32, i32* %y, align 4, !dbg !9236
  %and130 = and i32 %103, 1, !dbg !9237
  %tobool = icmp ne i32 %and130, 0, !dbg !9238
  %lnot = xor i1 %tobool, true, !dbg !9238
  %lnot.ext = zext i1 %lnot to i32, !dbg !9238
  %idxprom131 = sext i32 %lnot.ext to i64, !dbg !9235
  %104 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9235
  %arrayidx132 = getelementptr inbounds [2 x i32*], [2 x i32*]* %104, i64 0, !dbg !9235
  %arrayidx133 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx132, i64 0, i64 %idxprom131, !dbg !9235
  %105 = load i32*, i32** %arrayidx133, align 8, !dbg !9235
  %arrayidx134 = getelementptr inbounds i32, i32* %105, i64 %idxprom129, !dbg !9235
  %106 = load i32, i32* %arrayidx134, align 4, !dbg !9239
  %add135 = add nsw i32 %106, %shr126, !dbg !9239
  store i32 %add135, i32* %arrayidx134, align 4, !dbg !9239
  %107 = load i32, i32* %diff, align 4, !dbg !9240
  %mul136 = mul nsw i32 %107, 5, !dbg !9241
  %add137 = add nsw i32 %mul136, 8, !dbg !9242
  %shr138 = ashr i32 %add137, 4, !dbg !9243
  %108 = load i32, i32* %x, align 4, !dbg !9244
  %shl139 = shl i32 %108, 0, !dbg !9245
  %add140 = add nsw i32 %shl139, 0, !dbg !9246
  %idxprom141 = sext i32 %add140 to i64, !dbg !9247
  %109 = load i32, i32* %y, align 4, !dbg !9248
  %and142 = and i32 %109, 1, !dbg !9249
  %tobool143 = icmp ne i32 %and142, 0, !dbg !9250
  %lnot144 = xor i1 %tobool143, true, !dbg !9250
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !9250
  %idxprom146 = sext i32 %lnot.ext145 to i64, !dbg !9247
  %110 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9247
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %110, i64 0, !dbg !9247
  %arrayidx148 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx147, i64 0, i64 %idxprom146, !dbg !9247
  %111 = load i32*, i32** %arrayidx148, align 8, !dbg !9247
  %arrayidx149 = getelementptr inbounds i32, i32* %111, i64 %idxprom141, !dbg !9247
  %112 = load i32, i32* %arrayidx149, align 4, !dbg !9251
  %add150 = add nsw i32 %112, %shr138, !dbg !9251
  store i32 %add150, i32* %arrayidx149, align 4, !dbg !9251
  %113 = load i32, i32* %diff, align 4, !dbg !9252
  %mul151 = mul nsw i32 %113, 1, !dbg !9253
  %add152 = add nsw i32 %mul151, 8, !dbg !9254
  %shr153 = ashr i32 %add152, 4, !dbg !9255
  %114 = load i32, i32* %x, align 4, !dbg !9256
  %shl154 = shl i32 %114, 0, !dbg !9257
  %add155 = add nsw i32 %shl154, 1, !dbg !9258
  %idxprom156 = sext i32 %add155 to i64, !dbg !9259
  %115 = load i32, i32* %y, align 4, !dbg !9260
  %and157 = and i32 %115, 1, !dbg !9261
  %tobool158 = icmp ne i32 %and157, 0, !dbg !9262
  %lnot159 = xor i1 %tobool158, true, !dbg !9262
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !9262
  %idxprom161 = sext i32 %lnot.ext160 to i64, !dbg !9259
  %116 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9259
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %116, i64 0, !dbg !9259
  %arrayidx163 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx162, i64 0, i64 %idxprom161, !dbg !9259
  %117 = load i32*, i32** %arrayidx163, align 8, !dbg !9259
  %arrayidx164 = getelementptr inbounds i32, i32* %117, i64 %idxprom156, !dbg !9259
  %118 = load i32, i32* %arrayidx164, align 4, !dbg !9263
  %add165 = add nsw i32 %118, %shr153, !dbg !9263
  store i32 %add165, i32* %arrayidx164, align 4, !dbg !9263
  %119 = load i32, i32* %x, align 4, !dbg !9264
  %shl166 = shl i32 %119, 0, !dbg !9265
  %add167 = add nsw i32 %shl166, 0, !dbg !9266
  %idxprom168 = sext i32 %add167 to i64, !dbg !9267
  %120 = load i32, i32* %y, align 4, !dbg !9268
  %and169 = and i32 %120, 1, !dbg !9269
  %idxprom170 = sext i32 %and169 to i64, !dbg !9267
  %121 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9267
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %121, i64 0, !dbg !9267
  %arrayidx172 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx171, i64 0, i64 %idxprom170, !dbg !9267
  %122 = load i32*, i32** %arrayidx172, align 8, !dbg !9267
  %arrayidx173 = getelementptr inbounds i32, i32* %122, i64 %idxprom168, !dbg !9267
  store i32 262144, i32* %arrayidx173, align 4, !dbg !9270
  %123 = load i32, i32* %r00, align 4, !dbg !9271
  %124 = load i32, i32* %cru, align 4, !dbg !9272
  %mul174 = mul nsw i32 %123, %124, !dbg !9273
  %125 = load i32, i32* %g00, align 4, !dbg !9274
  %126 = load i32, i32* %cgu, align 4, !dbg !9275
  %mul175 = mul nsw i32 %125, %126, !dbg !9276
  %add176 = add nsw i32 %mul174, %mul175, !dbg !9277
  %127 = load i32, i32* %b00, align 4, !dbg !9278
  %128 = load i32, i32* %cburv, align 4, !dbg !9279
  %mul177 = mul nsw i32 %127, %128, !dbg !9280
  %add178 = add nsw i32 %add176, %mul177, !dbg !9281
  %129 = load i32, i32* %x, align 4, !dbg !9282
  %idxprom179 = sext i32 %129 to i64, !dbg !9283
  %130 = load i32, i32* %y, align 4, !dbg !9284
  %and180 = and i32 %130, 1, !dbg !9285
  %idxprom181 = sext i32 %and180 to i64, !dbg !9283
  %131 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9283
  %arrayidx182 = getelementptr inbounds [2 x i32*], [2 x i32*]* %131, i64 1, !dbg !9283
  %arrayidx183 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx182, i64 0, i64 %idxprom181, !dbg !9283
  %132 = load i32*, i32** %arrayidx183, align 8, !dbg !9283
  %arrayidx184 = getelementptr inbounds i32, i32* %132, i64 %idxprom179, !dbg !9283
  %133 = load i32, i32* %arrayidx184, align 4, !dbg !9283
  %add185 = add nsw i32 %add178, %133, !dbg !9286
  store i32 %add185, i32* %u, align 4, !dbg !9287
  %134 = load i32, i32* %u, align 4, !dbg !9288
  %135 = load i32, i32* %mask, align 4, !dbg !9289
  %and186 = and i32 %134, %135, !dbg !9290
  %sub187 = sub i32 %and186, 262144, !dbg !9291
  store i32 %sub187, i32* %diff, align 4, !dbg !9292
  %136 = load i32, i32* %u, align 4, !dbg !9293
  %shr188 = ashr i32 %136, 19, !dbg !9294
  %add189 = add nsw i32 512, %shr188, !dbg !9295
  store i32 %add189, i32* %a.addr.i370, align 4, !dbg !9296
  store i32 10, i32* %p.addr.i371, align 4, !dbg !9296
  %137 = load i32, i32* %a.addr.i370, align 4, !dbg !9297
  %138 = load i32, i32* %p.addr.i371, align 4, !dbg !9298
  %shl.i372 = shl i32 1, %138, !dbg !9299
  %sub.i373 = sub nsw i32 %shl.i372, 1, !dbg !9300
  %neg.i374 = xor i32 %sub.i373, -1, !dbg !9301
  %and.i375 = and i32 %137, %neg.i374, !dbg !9302
  %tobool.i376 = icmp ne i32 %and.i375, 0, !dbg !9302
  br i1 %tobool.i376, label %if.then.i382, label %if.else.i383, !dbg !9303

if.then.i382:                                     ; preds = %av_clip_uintp2_c.exit
  %139 = load i32, i32* %a.addr.i370, align 4, !dbg !9304
  %neg1.i377 = xor i32 %139, -1, !dbg !9305
  %shr.i378 = ashr i32 %neg1.i377, 31, !dbg !9306
  %140 = load i32, i32* %p.addr.i371, align 4, !dbg !9307
  %shl2.i379 = shl i32 1, %140, !dbg !9308
  %sub3.i380 = sub nsw i32 %shl2.i379, 1, !dbg !9309
  %and4.i381 = and i32 %shr.i378, %sub3.i380, !dbg !9310
  store i32 %and4.i381, i32* %retval.i369, align 4, !dbg !9311
  br label %av_clip_uintp2_c.exit384, !dbg !9311

if.else.i383:                                     ; preds = %av_clip_uintp2_c.exit
  %141 = load i32, i32* %a.addr.i370, align 4, !dbg !9312
  store i32 %141, i32* %retval.i369, align 4, !dbg !9313
  br label %av_clip_uintp2_c.exit384, !dbg !9313

av_clip_uintp2_c.exit384:                         ; preds = %if.then.i382, %if.else.i383
  %142 = load i32, i32* %retval.i369, align 4, !dbg !9314
  %conv191 = trunc i32 %142 to i16, !dbg !9296
  %143 = load i32, i32* %x, align 4, !dbg !9315
  %idxprom192 = sext i32 %143 to i64, !dbg !9316
  %144 = load i16*, i16** %yuv1, align 8, !dbg !9316
  %arrayidx193 = getelementptr inbounds i16, i16* %144, i64 %idxprom192, !dbg !9316
  store i16 %conv191, i16* %arrayidx193, align 2, !dbg !9317
  %145 = load i32, i32* %diff, align 4, !dbg !9318
  %mul194 = mul nsw i32 %145, 7, !dbg !9319
  %add195 = add nsw i32 %mul194, 8, !dbg !9320
  %shr196 = ashr i32 %add195, 4, !dbg !9321
  %146 = load i32, i32* %x, align 4, !dbg !9322
  %add197 = add nsw i32 %146, 1, !dbg !9323
  %idxprom198 = sext i32 %add197 to i64, !dbg !9324
  %147 = load i32, i32* %y, align 4, !dbg !9325
  %and199 = and i32 %147, 1, !dbg !9326
  %idxprom200 = sext i32 %and199 to i64, !dbg !9324
  %148 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9324
  %arrayidx201 = getelementptr inbounds [2 x i32*], [2 x i32*]* %148, i64 1, !dbg !9324
  %arrayidx202 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx201, i64 0, i64 %idxprom200, !dbg !9324
  %149 = load i32*, i32** %arrayidx202, align 8, !dbg !9324
  %arrayidx203 = getelementptr inbounds i32, i32* %149, i64 %idxprom198, !dbg !9324
  %150 = load i32, i32* %arrayidx203, align 4, !dbg !9327
  %add204 = add nsw i32 %150, %shr196, !dbg !9327
  store i32 %add204, i32* %arrayidx203, align 4, !dbg !9327
  %151 = load i32, i32* %diff, align 4, !dbg !9328
  %mul205 = mul nsw i32 %151, 3, !dbg !9329
  %add206 = add nsw i32 %mul205, 8, !dbg !9330
  %shr207 = ashr i32 %add206, 4, !dbg !9331
  %152 = load i32, i32* %x, align 4, !dbg !9332
  %sub208 = sub nsw i32 %152, 1, !dbg !9333
  %idxprom209 = sext i32 %sub208 to i64, !dbg !9334
  %153 = load i32, i32* %y, align 4, !dbg !9335
  %and210 = and i32 %153, 1, !dbg !9336
  %tobool211 = icmp ne i32 %and210, 0, !dbg !9337
  %lnot212 = xor i1 %tobool211, true, !dbg !9337
  %lnot.ext213 = zext i1 %lnot212 to i32, !dbg !9337
  %idxprom214 = sext i32 %lnot.ext213 to i64, !dbg !9334
  %154 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9334
  %arrayidx215 = getelementptr inbounds [2 x i32*], [2 x i32*]* %154, i64 1, !dbg !9334
  %arrayidx216 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx215, i64 0, i64 %idxprom214, !dbg !9334
  %155 = load i32*, i32** %arrayidx216, align 8, !dbg !9334
  %arrayidx217 = getelementptr inbounds i32, i32* %155, i64 %idxprom209, !dbg !9334
  %156 = load i32, i32* %arrayidx217, align 4, !dbg !9338
  %add218 = add nsw i32 %156, %shr207, !dbg !9338
  store i32 %add218, i32* %arrayidx217, align 4, !dbg !9338
  %157 = load i32, i32* %diff, align 4, !dbg !9339
  %mul219 = mul nsw i32 %157, 5, !dbg !9340
  %add220 = add nsw i32 %mul219, 8, !dbg !9341
  %shr221 = ashr i32 %add220, 4, !dbg !9342
  %158 = load i32, i32* %x, align 4, !dbg !9343
  %add222 = add nsw i32 %158, 0, !dbg !9344
  %idxprom223 = sext i32 %add222 to i64, !dbg !9345
  %159 = load i32, i32* %y, align 4, !dbg !9346
  %and224 = and i32 %159, 1, !dbg !9347
  %tobool225 = icmp ne i32 %and224, 0, !dbg !9348
  %lnot226 = xor i1 %tobool225, true, !dbg !9348
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !9348
  %idxprom228 = sext i32 %lnot.ext227 to i64, !dbg !9345
  %160 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9345
  %arrayidx229 = getelementptr inbounds [2 x i32*], [2 x i32*]* %160, i64 1, !dbg !9345
  %arrayidx230 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx229, i64 0, i64 %idxprom228, !dbg !9345
  %161 = load i32*, i32** %arrayidx230, align 8, !dbg !9345
  %arrayidx231 = getelementptr inbounds i32, i32* %161, i64 %idxprom223, !dbg !9345
  %162 = load i32, i32* %arrayidx231, align 4, !dbg !9349
  %add232 = add nsw i32 %162, %shr221, !dbg !9349
  store i32 %add232, i32* %arrayidx231, align 4, !dbg !9349
  %163 = load i32, i32* %diff, align 4, !dbg !9350
  %mul233 = mul nsw i32 %163, 1, !dbg !9351
  %add234 = add nsw i32 %mul233, 8, !dbg !9352
  %shr235 = ashr i32 %add234, 4, !dbg !9353
  %164 = load i32, i32* %x, align 4, !dbg !9354
  %add236 = add nsw i32 %164, 1, !dbg !9355
  %idxprom237 = sext i32 %add236 to i64, !dbg !9356
  %165 = load i32, i32* %y, align 4, !dbg !9357
  %and238 = and i32 %165, 1, !dbg !9358
  %tobool239 = icmp ne i32 %and238, 0, !dbg !9359
  %lnot240 = xor i1 %tobool239, true, !dbg !9359
  %lnot.ext241 = zext i1 %lnot240 to i32, !dbg !9359
  %idxprom242 = sext i32 %lnot.ext241 to i64, !dbg !9356
  %166 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9356
  %arrayidx243 = getelementptr inbounds [2 x i32*], [2 x i32*]* %166, i64 1, !dbg !9356
  %arrayidx244 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx243, i64 0, i64 %idxprom242, !dbg !9356
  %167 = load i32*, i32** %arrayidx244, align 8, !dbg !9356
  %arrayidx245 = getelementptr inbounds i32, i32* %167, i64 %idxprom237, !dbg !9356
  %168 = load i32, i32* %arrayidx245, align 4, !dbg !9360
  %add246 = add nsw i32 %168, %shr235, !dbg !9360
  store i32 %add246, i32* %arrayidx245, align 4, !dbg !9360
  %169 = load i32, i32* %x, align 4, !dbg !9361
  %add247 = add nsw i32 %169, 0, !dbg !9362
  %idxprom248 = sext i32 %add247 to i64, !dbg !9363
  %170 = load i32, i32* %y, align 4, !dbg !9364
  %and249 = and i32 %170, 1, !dbg !9365
  %idxprom250 = sext i32 %and249 to i64, !dbg !9363
  %171 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9363
  %arrayidx251 = getelementptr inbounds [2 x i32*], [2 x i32*]* %171, i64 1, !dbg !9363
  %arrayidx252 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx251, i64 0, i64 %idxprom250, !dbg !9363
  %172 = load i32*, i32** %arrayidx252, align 8, !dbg !9363
  %arrayidx253 = getelementptr inbounds i32, i32* %172, i64 %idxprom248, !dbg !9363
  store i32 262144, i32* %arrayidx253, align 4, !dbg !9366
  %173 = load i32, i32* %r00, align 4, !dbg !9367
  %174 = load i32, i32* %cburv, align 4, !dbg !9368
  %mul254 = mul nsw i32 %173, %174, !dbg !9369
  %175 = load i32, i32* %g00, align 4, !dbg !9370
  %176 = load i32, i32* %cgv, align 4, !dbg !9371
  %mul255 = mul nsw i32 %175, %176, !dbg !9372
  %add256 = add nsw i32 %mul254, %mul255, !dbg !9373
  %177 = load i32, i32* %b00, align 4, !dbg !9374
  %178 = load i32, i32* %cbv, align 4, !dbg !9375
  %mul257 = mul nsw i32 %177, %178, !dbg !9376
  %add258 = add nsw i32 %add256, %mul257, !dbg !9377
  %179 = load i32, i32* %x, align 4, !dbg !9378
  %idxprom259 = sext i32 %179 to i64, !dbg !9379
  %180 = load i32, i32* %y, align 4, !dbg !9380
  %and260 = and i32 %180, 1, !dbg !9381
  %idxprom261 = sext i32 %and260 to i64, !dbg !9379
  %181 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9379
  %arrayidx262 = getelementptr inbounds [2 x i32*], [2 x i32*]* %181, i64 2, !dbg !9379
  %arrayidx263 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx262, i64 0, i64 %idxprom261, !dbg !9379
  %182 = load i32*, i32** %arrayidx263, align 8, !dbg !9379
  %arrayidx264 = getelementptr inbounds i32, i32* %182, i64 %idxprom259, !dbg !9379
  %183 = load i32, i32* %arrayidx264, align 4, !dbg !9379
  %add265 = add nsw i32 %add258, %183, !dbg !9382
  store i32 %add265, i32* %v, align 4, !dbg !9383
  %184 = load i32, i32* %v, align 4, !dbg !9384
  %185 = load i32, i32* %mask, align 4, !dbg !9385
  %and266 = and i32 %184, %185, !dbg !9386
  %sub267 = sub i32 %and266, 262144, !dbg !9387
  store i32 %sub267, i32* %diff, align 4, !dbg !9388
  %186 = load i32, i32* %v, align 4, !dbg !9389
  %shr268 = ashr i32 %186, 19, !dbg !9390
  %add269 = add nsw i32 512, %shr268, !dbg !9391
  store i32 %add269, i32* %a.addr.i354, align 4, !dbg !9392
  store i32 10, i32* %p.addr.i355, align 4, !dbg !9392
  %187 = load i32, i32* %a.addr.i354, align 4, !dbg !9393
  %188 = load i32, i32* %p.addr.i355, align 4, !dbg !9394
  %shl.i356 = shl i32 1, %188, !dbg !9395
  %sub.i357 = sub nsw i32 %shl.i356, 1, !dbg !9396
  %neg.i358 = xor i32 %sub.i357, -1, !dbg !9397
  %and.i359 = and i32 %187, %neg.i358, !dbg !9398
  %tobool.i360 = icmp ne i32 %and.i359, 0, !dbg !9398
  br i1 %tobool.i360, label %if.then.i366, label %if.else.i367, !dbg !9399

if.then.i366:                                     ; preds = %av_clip_uintp2_c.exit384
  %189 = load i32, i32* %a.addr.i354, align 4, !dbg !9400
  %neg1.i361 = xor i32 %189, -1, !dbg !9401
  %shr.i362 = ashr i32 %neg1.i361, 31, !dbg !9402
  %190 = load i32, i32* %p.addr.i355, align 4, !dbg !9403
  %shl2.i363 = shl i32 1, %190, !dbg !9404
  %sub3.i364 = sub nsw i32 %shl2.i363, 1, !dbg !9405
  %and4.i365 = and i32 %shr.i362, %sub3.i364, !dbg !9406
  store i32 %and4.i365, i32* %retval.i353, align 4, !dbg !9407
  br label %av_clip_uintp2_c.exit368, !dbg !9407

if.else.i367:                                     ; preds = %av_clip_uintp2_c.exit384
  %191 = load i32, i32* %a.addr.i354, align 4, !dbg !9408
  store i32 %191, i32* %retval.i353, align 4, !dbg !9409
  br label %av_clip_uintp2_c.exit368, !dbg !9409

av_clip_uintp2_c.exit368:                         ; preds = %if.then.i366, %if.else.i367
  %192 = load i32, i32* %retval.i353, align 4, !dbg !9410
  %conv271 = trunc i32 %192 to i16, !dbg !9392
  %193 = load i32, i32* %x, align 4, !dbg !9411
  %idxprom272 = sext i32 %193 to i64, !dbg !9412
  %194 = load i16*, i16** %yuv2, align 8, !dbg !9412
  %arrayidx273 = getelementptr inbounds i16, i16* %194, i64 %idxprom272, !dbg !9412
  store i16 %conv271, i16* %arrayidx273, align 2, !dbg !9413
  %195 = load i32, i32* %diff, align 4, !dbg !9414
  %mul274 = mul nsw i32 %195, 7, !dbg !9415
  %add275 = add nsw i32 %mul274, 8, !dbg !9416
  %shr276 = ashr i32 %add275, 4, !dbg !9417
  %196 = load i32, i32* %x, align 4, !dbg !9418
  %add277 = add nsw i32 %196, 1, !dbg !9419
  %idxprom278 = sext i32 %add277 to i64, !dbg !9420
  %197 = load i32, i32* %y, align 4, !dbg !9421
  %and279 = and i32 %197, 1, !dbg !9422
  %idxprom280 = sext i32 %and279 to i64, !dbg !9420
  %198 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9420
  %arrayidx281 = getelementptr inbounds [2 x i32*], [2 x i32*]* %198, i64 2, !dbg !9420
  %arrayidx282 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx281, i64 0, i64 %idxprom280, !dbg !9420
  %199 = load i32*, i32** %arrayidx282, align 8, !dbg !9420
  %arrayidx283 = getelementptr inbounds i32, i32* %199, i64 %idxprom278, !dbg !9420
  %200 = load i32, i32* %arrayidx283, align 4, !dbg !9423
  %add284 = add nsw i32 %200, %shr276, !dbg !9423
  store i32 %add284, i32* %arrayidx283, align 4, !dbg !9423
  %201 = load i32, i32* %diff, align 4, !dbg !9424
  %mul285 = mul nsw i32 %201, 3, !dbg !9425
  %add286 = add nsw i32 %mul285, 8, !dbg !9426
  %shr287 = ashr i32 %add286, 4, !dbg !9427
  %202 = load i32, i32* %x, align 4, !dbg !9428
  %sub288 = sub nsw i32 %202, 1, !dbg !9429
  %idxprom289 = sext i32 %sub288 to i64, !dbg !9430
  %203 = load i32, i32* %y, align 4, !dbg !9431
  %and290 = and i32 %203, 1, !dbg !9432
  %tobool291 = icmp ne i32 %and290, 0, !dbg !9433
  %lnot292 = xor i1 %tobool291, true, !dbg !9433
  %lnot.ext293 = zext i1 %lnot292 to i32, !dbg !9433
  %idxprom294 = sext i32 %lnot.ext293 to i64, !dbg !9430
  %204 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9430
  %arrayidx295 = getelementptr inbounds [2 x i32*], [2 x i32*]* %204, i64 2, !dbg !9430
  %arrayidx296 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx295, i64 0, i64 %idxprom294, !dbg !9430
  %205 = load i32*, i32** %arrayidx296, align 8, !dbg !9430
  %arrayidx297 = getelementptr inbounds i32, i32* %205, i64 %idxprom289, !dbg !9430
  %206 = load i32, i32* %arrayidx297, align 4, !dbg !9434
  %add298 = add nsw i32 %206, %shr287, !dbg !9434
  store i32 %add298, i32* %arrayidx297, align 4, !dbg !9434
  %207 = load i32, i32* %diff, align 4, !dbg !9435
  %mul299 = mul nsw i32 %207, 5, !dbg !9436
  %add300 = add nsw i32 %mul299, 8, !dbg !9437
  %shr301 = ashr i32 %add300, 4, !dbg !9438
  %208 = load i32, i32* %x, align 4, !dbg !9439
  %add302 = add nsw i32 %208, 0, !dbg !9440
  %idxprom303 = sext i32 %add302 to i64, !dbg !9441
  %209 = load i32, i32* %y, align 4, !dbg !9442
  %and304 = and i32 %209, 1, !dbg !9443
  %tobool305 = icmp ne i32 %and304, 0, !dbg !9444
  %lnot306 = xor i1 %tobool305, true, !dbg !9444
  %lnot.ext307 = zext i1 %lnot306 to i32, !dbg !9444
  %idxprom308 = sext i32 %lnot.ext307 to i64, !dbg !9441
  %210 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9441
  %arrayidx309 = getelementptr inbounds [2 x i32*], [2 x i32*]* %210, i64 2, !dbg !9441
  %arrayidx310 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx309, i64 0, i64 %idxprom308, !dbg !9441
  %211 = load i32*, i32** %arrayidx310, align 8, !dbg !9441
  %arrayidx311 = getelementptr inbounds i32, i32* %211, i64 %idxprom303, !dbg !9441
  %212 = load i32, i32* %arrayidx311, align 4, !dbg !9445
  %add312 = add nsw i32 %212, %shr301, !dbg !9445
  store i32 %add312, i32* %arrayidx311, align 4, !dbg !9445
  %213 = load i32, i32* %diff, align 4, !dbg !9446
  %mul313 = mul nsw i32 %213, 1, !dbg !9447
  %add314 = add nsw i32 %mul313, 8, !dbg !9448
  %shr315 = ashr i32 %add314, 4, !dbg !9449
  %214 = load i32, i32* %x, align 4, !dbg !9450
  %add316 = add nsw i32 %214, 1, !dbg !9451
  %idxprom317 = sext i32 %add316 to i64, !dbg !9452
  %215 = load i32, i32* %y, align 4, !dbg !9453
  %and318 = and i32 %215, 1, !dbg !9454
  %tobool319 = icmp ne i32 %and318, 0, !dbg !9455
  %lnot320 = xor i1 %tobool319, true, !dbg !9455
  %lnot.ext321 = zext i1 %lnot320 to i32, !dbg !9455
  %idxprom322 = sext i32 %lnot.ext321 to i64, !dbg !9452
  %216 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9452
  %arrayidx323 = getelementptr inbounds [2 x i32*], [2 x i32*]* %216, i64 2, !dbg !9452
  %arrayidx324 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx323, i64 0, i64 %idxprom322, !dbg !9452
  %217 = load i32*, i32** %arrayidx324, align 8, !dbg !9452
  %arrayidx325 = getelementptr inbounds i32, i32* %217, i64 %idxprom317, !dbg !9452
  %218 = load i32, i32* %arrayidx325, align 4, !dbg !9456
  %add326 = add nsw i32 %218, %shr315, !dbg !9456
  store i32 %add326, i32* %arrayidx325, align 4, !dbg !9456
  %219 = load i32, i32* %x, align 4, !dbg !9457
  %add327 = add nsw i32 %219, 0, !dbg !9458
  %idxprom328 = sext i32 %add327 to i64, !dbg !9459
  %220 = load i32, i32* %y, align 4, !dbg !9460
  %and329 = and i32 %220, 1, !dbg !9461
  %idxprom330 = sext i32 %and329 to i64, !dbg !9459
  %221 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9459
  %arrayidx331 = getelementptr inbounds [2 x i32*], [2 x i32*]* %221, i64 2, !dbg !9459
  %arrayidx332 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx331, i64 0, i64 %idxprom330, !dbg !9459
  %222 = load i32*, i32** %arrayidx332, align 8, !dbg !9459
  %arrayidx333 = getelementptr inbounds i32, i32* %222, i64 %idxprom328, !dbg !9459
  store i32 262144, i32* %arrayidx333, align 4, !dbg !9462
  br label %for.inc334, !dbg !9463

for.inc334:                                       ; preds = %av_clip_uintp2_c.exit368
  %223 = load i32, i32* %x, align 4, !dbg !9464
  %inc335 = add nsw i32 %223, 1, !dbg !9464
  store i32 %inc335, i32* %x, align 4, !dbg !9464
  br label %for.cond76, !dbg !9466, !llvm.loop !9467

for.end336:                                       ; preds = %for.cond76
  %224 = load i64, i64* %s0, align 8, !dbg !9469
  %mul337 = mul nsw i64 %224, 1, !dbg !9470
  %225 = load i16*, i16** %yuv0, align 8, !dbg !9471
  %add.ptr = getelementptr inbounds i16, i16* %225, i64 %mul337, !dbg !9471
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !9471
  %226 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !9472
  %arrayidx338 = getelementptr inbounds i64, i64* %226, i64 1, !dbg !9472
  %227 = load i64, i64* %arrayidx338, align 8, !dbg !9472
  %div339 = udiv i64 %227, 2, !dbg !9473
  %228 = load i16*, i16** %yuv1, align 8, !dbg !9474
  %add.ptr340 = getelementptr inbounds i16, i16* %228, i64 %div339, !dbg !9474
  store i16* %add.ptr340, i16** %yuv1, align 8, !dbg !9474
  %229 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !9475
  %arrayidx341 = getelementptr inbounds i64, i64* %229, i64 2, !dbg !9475
  %230 = load i64, i64* %arrayidx341, align 8, !dbg !9475
  %div342 = udiv i64 %230, 2, !dbg !9476
  %231 = load i16*, i16** %yuv2, align 8, !dbg !9477
  %add.ptr343 = getelementptr inbounds i16, i16* %231, i64 %div342, !dbg !9477
  store i16* %add.ptr343, i16** %yuv2, align 8, !dbg !9477
  %232 = load i64, i64* %s.addr, align 8, !dbg !9478
  %mul344 = mul nsw i64 %232, 1, !dbg !9479
  %233 = load i16*, i16** %rgb0, align 8, !dbg !9480
  %add.ptr345 = getelementptr inbounds i16, i16* %233, i64 %mul344, !dbg !9480
  store i16* %add.ptr345, i16** %rgb0, align 8, !dbg !9480
  %234 = load i64, i64* %s.addr, align 8, !dbg !9481
  %mul346 = mul nsw i64 %234, 1, !dbg !9482
  %235 = load i16*, i16** %rgb1, align 8, !dbg !9483
  %add.ptr347 = getelementptr inbounds i16, i16* %235, i64 %mul346, !dbg !9483
  store i16* %add.ptr347, i16** %rgb1, align 8, !dbg !9483
  %236 = load i64, i64* %s.addr, align 8, !dbg !9484
  %mul348 = mul nsw i64 %236, 1, !dbg !9485
  %237 = load i16*, i16** %rgb2, align 8, !dbg !9486
  %add.ptr349 = getelementptr inbounds i16, i16* %237, i64 %mul348, !dbg !9486
  store i16* %add.ptr349, i16** %rgb2, align 8, !dbg !9486
  br label %for.inc350, !dbg !9487

for.inc350:                                       ; preds = %for.end336
  %238 = load i32, i32* %y, align 4, !dbg !9488
  %inc351 = add nsw i32 %238, 1, !dbg !9488
  store i32 %inc351, i32* %y, align 4, !dbg !9488
  br label %for.cond72, !dbg !9490, !llvm.loop !9491

for.end352:                                       ; preds = %for.cond72
  ret void, !dbg !9493
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_422p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !9494 {
entry:
  %retval.i509 = alloca i32, align 4
  %a.addr.i510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i510, metadata !4652, metadata !94), !dbg !9495
  %p.addr.i511 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i511, metadata !4665, metadata !94), !dbg !9503
  %retval.i493 = alloca i32, align 4
  %a.addr.i494 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i494, metadata !4652, metadata !94), !dbg !9504
  %p.addr.i495 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i495, metadata !4665, metadata !94), !dbg !9506
  %retval.i477 = alloca i32, align 4
  %a.addr.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i478, metadata !4652, metadata !94), !dbg !9507
  %p.addr.i479 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i479, metadata !4665, metadata !94), !dbg !9509
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !9510
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !9512
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !9513, metadata !94), !dbg !9514
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !9515, metadata !94), !dbg !9516
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !9517, metadata !94), !dbg !9518
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !9519, metadata !94), !dbg !9520
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !9521, metadata !94), !dbg !9522
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9523, metadata !94), !dbg !9524
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !9525, metadata !94), !dbg !9526
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !9527, metadata !94), !dbg !9528
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !9529, metadata !94), !dbg !9530
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !9531, metadata !94), !dbg !9532
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !9533
  %1 = bitcast i8** %0 to i16**, !dbg !9534
  store i16** %1, i16*** %yuv, align 8, !dbg !9532
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !9535, metadata !94), !dbg !9536
  %2 = load i16**, i16*** %yuv, align 8, !dbg !9537
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !9537
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !9537
  store i16* %3, i16** %yuv0, align 8, !dbg !9536
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !9538, metadata !94), !dbg !9539
  %4 = load i16**, i16*** %yuv, align 8, !dbg !9540
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !9540
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !9540
  store i16* %5, i16** %yuv1, align 8, !dbg !9539
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !9541, metadata !94), !dbg !9542
  %6 = load i16**, i16*** %yuv, align 8, !dbg !9543
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !9543
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !9543
  store i16* %7, i16** %yuv2, align 8, !dbg !9542
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !9544, metadata !94), !dbg !9545
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !9546
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !9546
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !9546
  store i16* %9, i16** %rgb0, align 8, !dbg !9545
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !9547, metadata !94), !dbg !9548
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !9549
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !9549
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !9549
  store i16* %11, i16** %rgb1, align 8, !dbg !9548
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !9550, metadata !94), !dbg !9551
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !9552
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !9552
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !9552
  store i16* %13, i16** %rgb2, align 8, !dbg !9551
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9553, metadata !94), !dbg !9554
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9555, metadata !94), !dbg !9556
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !9557, metadata !94), !dbg !9558
  store i32 19, i32* %sh, align 4, !dbg !9558
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !9559, metadata !94), !dbg !9560
  store i32 262144, i32* %rnd, align 4, !dbg !9560
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !9561, metadata !94), !dbg !9562
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9563
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !9563
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !9563
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !9563
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !9563
  %conv = sext i16 %15 to i32, !dbg !9563
  store i32 %conv, i32* %cry, align 4, !dbg !9562
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !9564, metadata !94), !dbg !9565
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9566
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !9566
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !9566
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !9566
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !9566
  %conv12 = sext i16 %17 to i32, !dbg !9566
  store i32 %conv12, i32* %cgy, align 4, !dbg !9565
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !9567, metadata !94), !dbg !9568
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9569
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !9569
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !9569
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !9569
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !9569
  %conv16 = sext i16 %19 to i32, !dbg !9569
  store i32 %conv16, i32* %cby, align 4, !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !9570, metadata !94), !dbg !9571
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9572
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !9572
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !9572
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !9572
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !9572
  %conv20 = sext i16 %21 to i32, !dbg !9572
  store i32 %conv20, i32* %cru, align 4, !dbg !9571
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !9573, metadata !94), !dbg !9574
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9575
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !9575
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !9575
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !9575
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !9575
  %conv24 = sext i16 %23 to i32, !dbg !9575
  store i32 %conv24, i32* %cgu, align 4, !dbg !9574
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !9576, metadata !94), !dbg !9577
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9578
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !9578
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !9578
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !9578
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !9578
  %conv28 = sext i16 %25 to i32, !dbg !9578
  store i32 %conv28, i32* %cburv, align 4, !dbg !9577
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !9579, metadata !94), !dbg !9580
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9581
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !9581
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !9581
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !9581
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !9581
  %conv32 = sext i16 %27 to i32, !dbg !9581
  store i32 %conv32, i32* %cgv, align 4, !dbg !9580
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !9582, metadata !94), !dbg !9583
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !9584
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !9584
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !9584
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !9584
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !9584
  %conv36 = sext i16 %29 to i32, !dbg !9584
  store i32 %conv36, i32* %cbv, align 4, !dbg !9583
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !9585, metadata !94), !dbg !9586
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !9587
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !9587
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !9587
  %div = udiv i64 %31, 2, !dbg !9588
  store i64 %div, i64* %s0, align 8, !dbg !9586
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !9589, metadata !94), !dbg !9590
  store i32 512, i32* %uv_offset, align 4, !dbg !9590
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9591, metadata !94), !dbg !9592
  store i32 524287, i32* %mask, align 4, !dbg !9592
  store i32 0, i32* %x, align 4, !dbg !9593
  br label %for.cond, !dbg !9595

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !9596
  %33 = load i32, i32* %w.addr, align 4, !dbg !9599
  %cmp = icmp slt i32 %32, %33, !dbg !9600
  br i1 %cmp, label %for.body, label %for.end, !dbg !9601

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !9602
  %idxprom = sext i32 %34 to i64, !dbg !9604
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9604
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !9604
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !9604
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !9604
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !9604
  store i32 262144, i32* %arrayidx41, align 4, !dbg !9605
  %37 = load i32, i32* %x, align 4, !dbg !9606
  %idxprom42 = sext i32 %37 to i64, !dbg !9607
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9607
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !9607
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !9607
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !9607
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !9607
  store i32 262144, i32* %arrayidx45, align 4, !dbg !9608
  br label %for.inc, !dbg !9609

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !9610
  %inc = add nsw i32 %40, 1, !dbg !9610
  store i32 %inc, i32* %x, align 4, !dbg !9610
  br label %for.cond, !dbg !9612, !llvm.loop !9613

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !9615
  %add = add nsw i32 %41, 2, !dbg !9616
  %sub = sub nsw i32 %add, 1, !dbg !9617
  %shr = ashr i32 %sub, 1, !dbg !9618
  store i32 %shr, i32* %w.addr, align 4, !dbg !9619
  %42 = load i32, i32* %h.addr, align 4, !dbg !9620
  %add46 = add nsw i32 %42, 1, !dbg !9621
  %sub47 = sub nsw i32 %add46, 1, !dbg !9622
  %shr48 = ashr i32 %sub47, 0, !dbg !9623
  store i32 %shr48, i32* %h.addr, align 4, !dbg !9624
  store i32 0, i32* %x, align 4, !dbg !9625
  br label %for.cond49, !dbg !9627

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !9628
  %44 = load i32, i32* %w.addr, align 4, !dbg !9631
  %cmp50 = icmp slt i32 %43, %44, !dbg !9632
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !9633

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !9634
  %idxprom53 = sext i32 %45 to i64, !dbg !9636
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9636
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !9636
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !9636
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !9636
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !9636
  store i32 262144, i32* %arrayidx56, align 4, !dbg !9637
  %48 = load i32, i32* %x, align 4, !dbg !9638
  %idxprom57 = sext i32 %48 to i64, !dbg !9639
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9639
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !9639
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !9639
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !9639
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !9639
  store i32 262144, i32* %arrayidx60, align 4, !dbg !9640
  %51 = load i32, i32* %x, align 4, !dbg !9641
  %idxprom61 = sext i32 %51 to i64, !dbg !9642
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9642
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !9642
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !9642
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !9642
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !9642
  store i32 262144, i32* %arrayidx64, align 4, !dbg !9643
  %54 = load i32, i32* %x, align 4, !dbg !9644
  %idxprom65 = sext i32 %54 to i64, !dbg !9645
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9645
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !9645
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !9645
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !9645
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !9645
  store i32 262144, i32* %arrayidx68, align 4, !dbg !9646
  br label %for.inc69, !dbg !9647

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !9648
  %inc70 = add nsw i32 %57, 1, !dbg !9648
  store i32 %inc70, i32* %x, align 4, !dbg !9648
  br label %for.cond49, !dbg !9650, !llvm.loop !9651

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !9653
  br label %for.cond72, !dbg !9654

for.cond72:                                       ; preds = %for.inc474, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !9655
  %59 = load i32, i32* %h.addr, align 4, !dbg !9657
  %cmp73 = icmp slt i32 %58, %59, !dbg !9658
  br i1 %cmp73, label %for.body75, label %for.end476, !dbg !9659

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !9660
  br label %for.cond76, !dbg !9661

for.cond76:                                       ; preds = %for.inc458, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !9662
  %61 = load i32, i32* %w.addr, align 4, !dbg !9664
  %cmp77 = icmp slt i32 %60, %61, !dbg !9665
  br i1 %cmp77, label %for.body79, label %for.end460, !dbg !9666

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !9667, metadata !94), !dbg !9668
  %62 = load i32, i32* %x, align 4, !dbg !9669
  %shl = shl i32 %62, 1, !dbg !9670
  %idxprom80 = sext i32 %shl to i64, !dbg !9671
  %63 = load i16*, i16** %rgb0, align 8, !dbg !9671
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !9671
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !9671
  %conv82 = sext i16 %64 to i32, !dbg !9671
  store i32 %conv82, i32* %r00, align 4, !dbg !9668
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !9672, metadata !94), !dbg !9673
  %65 = load i32, i32* %x, align 4, !dbg !9674
  %shl83 = shl i32 %65, 1, !dbg !9675
  %idxprom84 = sext i32 %shl83 to i64, !dbg !9676
  %66 = load i16*, i16** %rgb1, align 8, !dbg !9676
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !9676
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !9676
  %conv86 = sext i16 %67 to i32, !dbg !9676
  store i32 %conv86, i32* %g00, align 4, !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !9677, metadata !94), !dbg !9678
  %68 = load i32, i32* %x, align 4, !dbg !9679
  %shl87 = shl i32 %68, 1, !dbg !9680
  %idxprom88 = sext i32 %shl87 to i64, !dbg !9681
  %69 = load i16*, i16** %rgb2, align 8, !dbg !9681
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !9681
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !9681
  %conv90 = sext i16 %70 to i32, !dbg !9681
  store i32 %conv90, i32* %b00, align 4, !dbg !9678
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !9682, metadata !94), !dbg !9683
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !9684, metadata !94), !dbg !9685
  %71 = load i32, i32* %x, align 4, !dbg !9686
  %mul = mul nsw i32 %71, 2, !dbg !9687
  %add91 = add nsw i32 %mul, 1, !dbg !9688
  %idxprom92 = sext i32 %add91 to i64, !dbg !9689
  %72 = load i16*, i16** %rgb0, align 8, !dbg !9689
  %arrayidx93 = getelementptr inbounds i16, i16* %72, i64 %idxprom92, !dbg !9689
  %73 = load i16, i16* %arrayidx93, align 2, !dbg !9689
  %conv94 = sext i16 %73 to i32, !dbg !9689
  store i32 %conv94, i32* %r01, align 4, !dbg !9685
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !9690, metadata !94), !dbg !9691
  %74 = load i32, i32* %x, align 4, !dbg !9692
  %mul95 = mul nsw i32 %74, 2, !dbg !9693
  %add96 = add nsw i32 %mul95, 1, !dbg !9694
  %idxprom97 = sext i32 %add96 to i64, !dbg !9695
  %75 = load i16*, i16** %rgb1, align 8, !dbg !9695
  %arrayidx98 = getelementptr inbounds i16, i16* %75, i64 %idxprom97, !dbg !9695
  %76 = load i16, i16* %arrayidx98, align 2, !dbg !9695
  %conv99 = sext i16 %76 to i32, !dbg !9695
  store i32 %conv99, i32* %g01, align 4, !dbg !9691
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !9696, metadata !94), !dbg !9697
  %77 = load i32, i32* %x, align 4, !dbg !9698
  %mul100 = mul nsw i32 %77, 2, !dbg !9699
  %add101 = add nsw i32 %mul100, 1, !dbg !9700
  %idxprom102 = sext i32 %add101 to i64, !dbg !9701
  %78 = load i16*, i16** %rgb2, align 8, !dbg !9701
  %arrayidx103 = getelementptr inbounds i16, i16* %78, i64 %idxprom102, !dbg !9701
  %79 = load i16, i16* %arrayidx103, align 2, !dbg !9701
  %conv104 = sext i16 %79 to i32, !dbg !9701
  store i32 %conv104, i32* %b01, align 4, !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !9702, metadata !94), !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %u, metadata !9704, metadata !94), !dbg !9705
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9706, metadata !94), !dbg !9707
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !9708, metadata !94), !dbg !9709
  %80 = load i32, i32* %r00, align 4, !dbg !9710
  %81 = load i32, i32* %cry, align 4, !dbg !9711
  %mul105 = mul nsw i32 %80, %81, !dbg !9712
  %82 = load i32, i32* %g00, align 4, !dbg !9713
  %83 = load i32, i32* %cgy, align 4, !dbg !9714
  %mul106 = mul nsw i32 %82, %83, !dbg !9715
  %add107 = add nsw i32 %mul105, %mul106, !dbg !9716
  %84 = load i32, i32* %b00, align 4, !dbg !9717
  %85 = load i32, i32* %cby, align 4, !dbg !9718
  %mul108 = mul nsw i32 %84, %85, !dbg !9719
  %add109 = add nsw i32 %add107, %mul108, !dbg !9720
  %86 = load i32, i32* %x, align 4, !dbg !9721
  %shl110 = shl i32 %86, 1, !dbg !9722
  %idxprom111 = sext i32 %shl110 to i64, !dbg !9723
  %87 = load i32, i32* %y, align 4, !dbg !9724
  %and = and i32 %87, 1, !dbg !9725
  %idxprom112 = sext i32 %and to i64, !dbg !9723
  %88 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9723
  %arrayidx113 = getelementptr inbounds [2 x i32*], [2 x i32*]* %88, i64 0, !dbg !9723
  %arrayidx114 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx113, i64 0, i64 %idxprom112, !dbg !9723
  %89 = load i32*, i32** %arrayidx114, align 8, !dbg !9723
  %arrayidx115 = getelementptr inbounds i32, i32* %89, i64 %idxprom111, !dbg !9723
  %90 = load i32, i32* %arrayidx115, align 4, !dbg !9723
  %add116 = add nsw i32 %add109, %90, !dbg !9726
  store i32 %add116, i32* %y00, align 4, !dbg !9727
  %91 = load i32, i32* %y00, align 4, !dbg !9728
  %92 = load i32, i32* %mask, align 4, !dbg !9729
  %and117 = and i32 %91, %92, !dbg !9730
  %sub118 = sub i32 %and117, 262144, !dbg !9731
  store i32 %sub118, i32* %diff, align 4, !dbg !9732
  %93 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !9733
  %arrayidx119 = getelementptr inbounds i16, i16* %93, i64 0, !dbg !9733
  %94 = load i16, i16* %arrayidx119, align 2, !dbg !9733
  %conv120 = sext i16 %94 to i32, !dbg !9733
  %95 = load i32, i32* %y00, align 4, !dbg !9734
  %shr121 = ashr i32 %95, 19, !dbg !9735
  %add122 = add nsw i32 %conv120, %shr121, !dbg !9736
  store i32 %add122, i32* %a.addr.i, align 4, !dbg !9737
  store i32 10, i32* %p.addr.i, align 4, !dbg !9737
  %96 = load i32, i32* %a.addr.i, align 4, !dbg !9738
  %97 = load i32, i32* %p.addr.i, align 4, !dbg !9739
  %shl.i = shl i32 1, %97, !dbg !9740
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9741
  %neg.i = xor i32 %sub.i, -1, !dbg !9742
  %and.i = and i32 %96, %neg.i, !dbg !9743
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9743
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9744

if.then.i:                                        ; preds = %for.body79
  %98 = load i32, i32* %a.addr.i, align 4, !dbg !9745
  %neg1.i = xor i32 %98, -1, !dbg !9746
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9747
  %99 = load i32, i32* %p.addr.i, align 4, !dbg !9748
  %shl2.i = shl i32 1, %99, !dbg !9749
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9750
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9751
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9752
  br label %av_clip_uintp2_c.exit, !dbg !9752

if.else.i:                                        ; preds = %for.body79
  %100 = load i32, i32* %a.addr.i, align 4, !dbg !9753
  store i32 %100, i32* %retval.i, align 4, !dbg !9754
  br label %av_clip_uintp2_c.exit, !dbg !9754

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %101 = load i32, i32* %retval.i, align 4, !dbg !9755
  %conv123 = trunc i32 %101 to i16, !dbg !9737
  %102 = load i32, i32* %x, align 4, !dbg !9756
  %shl124 = shl i32 %102, 1, !dbg !9757
  %idxprom125 = sext i32 %shl124 to i64, !dbg !9758
  %103 = load i16*, i16** %yuv0, align 8, !dbg !9758
  %arrayidx126 = getelementptr inbounds i16, i16* %103, i64 %idxprom125, !dbg !9758
  store i16 %conv123, i16* %arrayidx126, align 2, !dbg !9759
  %104 = load i32, i32* %diff, align 4, !dbg !9760
  %mul127 = mul nsw i32 %104, 7, !dbg !9761
  %add128 = add nsw i32 %mul127, 8, !dbg !9762
  %shr129 = ashr i32 %add128, 4, !dbg !9763
  %105 = load i32, i32* %x, align 4, !dbg !9764
  %shl130 = shl i32 %105, 1, !dbg !9765
  %add131 = add nsw i32 %shl130, 1, !dbg !9766
  %idxprom132 = sext i32 %add131 to i64, !dbg !9767
  %106 = load i32, i32* %y, align 4, !dbg !9768
  %and133 = and i32 %106, 1, !dbg !9769
  %idxprom134 = sext i32 %and133 to i64, !dbg !9767
  %107 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9767
  %arrayidx135 = getelementptr inbounds [2 x i32*], [2 x i32*]* %107, i64 0, !dbg !9767
  %arrayidx136 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx135, i64 0, i64 %idxprom134, !dbg !9767
  %108 = load i32*, i32** %arrayidx136, align 8, !dbg !9767
  %arrayidx137 = getelementptr inbounds i32, i32* %108, i64 %idxprom132, !dbg !9767
  %109 = load i32, i32* %arrayidx137, align 4, !dbg !9770
  %add138 = add nsw i32 %109, %shr129, !dbg !9770
  store i32 %add138, i32* %arrayidx137, align 4, !dbg !9770
  %110 = load i32, i32* %diff, align 4, !dbg !9771
  %mul139 = mul nsw i32 %110, 3, !dbg !9772
  %add140 = add nsw i32 %mul139, 8, !dbg !9773
  %shr141 = ashr i32 %add140, 4, !dbg !9774
  %111 = load i32, i32* %x, align 4, !dbg !9775
  %shl142 = shl i32 %111, 1, !dbg !9776
  %sub143 = sub nsw i32 %shl142, 1, !dbg !9777
  %idxprom144 = sext i32 %sub143 to i64, !dbg !9778
  %112 = load i32, i32* %y, align 4, !dbg !9779
  %and145 = and i32 %112, 1, !dbg !9780
  %tobool = icmp ne i32 %and145, 0, !dbg !9781
  %lnot = xor i1 %tobool, true, !dbg !9781
  %lnot.ext = zext i1 %lnot to i32, !dbg !9781
  %idxprom146 = sext i32 %lnot.ext to i64, !dbg !9778
  %113 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9778
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %113, i64 0, !dbg !9778
  %arrayidx148 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx147, i64 0, i64 %idxprom146, !dbg !9778
  %114 = load i32*, i32** %arrayidx148, align 8, !dbg !9778
  %arrayidx149 = getelementptr inbounds i32, i32* %114, i64 %idxprom144, !dbg !9778
  %115 = load i32, i32* %arrayidx149, align 4, !dbg !9782
  %add150 = add nsw i32 %115, %shr141, !dbg !9782
  store i32 %add150, i32* %arrayidx149, align 4, !dbg !9782
  %116 = load i32, i32* %diff, align 4, !dbg !9783
  %mul151 = mul nsw i32 %116, 5, !dbg !9784
  %add152 = add nsw i32 %mul151, 8, !dbg !9785
  %shr153 = ashr i32 %add152, 4, !dbg !9786
  %117 = load i32, i32* %x, align 4, !dbg !9787
  %shl154 = shl i32 %117, 1, !dbg !9788
  %add155 = add nsw i32 %shl154, 0, !dbg !9789
  %idxprom156 = sext i32 %add155 to i64, !dbg !9790
  %118 = load i32, i32* %y, align 4, !dbg !9791
  %and157 = and i32 %118, 1, !dbg !9792
  %tobool158 = icmp ne i32 %and157, 0, !dbg !9793
  %lnot159 = xor i1 %tobool158, true, !dbg !9793
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !9793
  %idxprom161 = sext i32 %lnot.ext160 to i64, !dbg !9790
  %119 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9790
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %119, i64 0, !dbg !9790
  %arrayidx163 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx162, i64 0, i64 %idxprom161, !dbg !9790
  %120 = load i32*, i32** %arrayidx163, align 8, !dbg !9790
  %arrayidx164 = getelementptr inbounds i32, i32* %120, i64 %idxprom156, !dbg !9790
  %121 = load i32, i32* %arrayidx164, align 4, !dbg !9794
  %add165 = add nsw i32 %121, %shr153, !dbg !9794
  store i32 %add165, i32* %arrayidx164, align 4, !dbg !9794
  %122 = load i32, i32* %diff, align 4, !dbg !9795
  %mul166 = mul nsw i32 %122, 1, !dbg !9796
  %add167 = add nsw i32 %mul166, 8, !dbg !9797
  %shr168 = ashr i32 %add167, 4, !dbg !9798
  %123 = load i32, i32* %x, align 4, !dbg !9799
  %shl169 = shl i32 %123, 1, !dbg !9800
  %add170 = add nsw i32 %shl169, 1, !dbg !9801
  %idxprom171 = sext i32 %add170 to i64, !dbg !9802
  %124 = load i32, i32* %y, align 4, !dbg !9803
  %and172 = and i32 %124, 1, !dbg !9804
  %tobool173 = icmp ne i32 %and172, 0, !dbg !9805
  %lnot174 = xor i1 %tobool173, true, !dbg !9805
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !9805
  %idxprom176 = sext i32 %lnot.ext175 to i64, !dbg !9802
  %125 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9802
  %arrayidx177 = getelementptr inbounds [2 x i32*], [2 x i32*]* %125, i64 0, !dbg !9802
  %arrayidx178 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx177, i64 0, i64 %idxprom176, !dbg !9802
  %126 = load i32*, i32** %arrayidx178, align 8, !dbg !9802
  %arrayidx179 = getelementptr inbounds i32, i32* %126, i64 %idxprom171, !dbg !9802
  %127 = load i32, i32* %arrayidx179, align 4, !dbg !9806
  %add180 = add nsw i32 %127, %shr168, !dbg !9806
  store i32 %add180, i32* %arrayidx179, align 4, !dbg !9806
  %128 = load i32, i32* %x, align 4, !dbg !9807
  %shl181 = shl i32 %128, 1, !dbg !9808
  %add182 = add nsw i32 %shl181, 0, !dbg !9809
  %idxprom183 = sext i32 %add182 to i64, !dbg !9810
  %129 = load i32, i32* %y, align 4, !dbg !9811
  %and184 = and i32 %129, 1, !dbg !9812
  %idxprom185 = sext i32 %and184 to i64, !dbg !9810
  %130 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9810
  %arrayidx186 = getelementptr inbounds [2 x i32*], [2 x i32*]* %130, i64 0, !dbg !9810
  %arrayidx187 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx186, i64 0, i64 %idxprom185, !dbg !9810
  %131 = load i32*, i32** %arrayidx187, align 8, !dbg !9810
  %arrayidx188 = getelementptr inbounds i32, i32* %131, i64 %idxprom183, !dbg !9810
  store i32 262144, i32* %arrayidx188, align 4, !dbg !9813
  %132 = load i32, i32* %r01, align 4, !dbg !9814
  %133 = load i32, i32* %cry, align 4, !dbg !9815
  %mul189 = mul nsw i32 %132, %133, !dbg !9816
  %134 = load i32, i32* %g01, align 4, !dbg !9817
  %135 = load i32, i32* %cgy, align 4, !dbg !9818
  %mul190 = mul nsw i32 %134, %135, !dbg !9819
  %add191 = add nsw i32 %mul189, %mul190, !dbg !9820
  %136 = load i32, i32* %b01, align 4, !dbg !9821
  %137 = load i32, i32* %cby, align 4, !dbg !9822
  %mul192 = mul nsw i32 %136, %137, !dbg !9823
  %add193 = add nsw i32 %add191, %mul192, !dbg !9824
  %138 = load i32, i32* %x, align 4, !dbg !9825
  %mul194 = mul nsw i32 %138, 2, !dbg !9826
  %add195 = add nsw i32 %mul194, 1, !dbg !9827
  %idxprom196 = sext i32 %add195 to i64, !dbg !9828
  %139 = load i32, i32* %y, align 4, !dbg !9829
  %and197 = and i32 %139, 1, !dbg !9830
  %idxprom198 = sext i32 %and197 to i64, !dbg !9828
  %140 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9828
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %140, i64 0, !dbg !9828
  %arrayidx200 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx199, i64 0, i64 %idxprom198, !dbg !9828
  %141 = load i32*, i32** %arrayidx200, align 8, !dbg !9828
  %arrayidx201 = getelementptr inbounds i32, i32* %141, i64 %idxprom196, !dbg !9828
  %142 = load i32, i32* %arrayidx201, align 4, !dbg !9828
  %add202 = add nsw i32 %add193, %142, !dbg !9831
  store i32 %add202, i32* %y01, align 4, !dbg !9832
  %143 = load i32, i32* %y01, align 4, !dbg !9833
  %144 = load i32, i32* %mask, align 4, !dbg !9834
  %and203 = and i32 %143, %144, !dbg !9835
  %sub204 = sub i32 %and203, 262144, !dbg !9836
  store i32 %sub204, i32* %diff, align 4, !dbg !9837
  %145 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !9838
  %arrayidx205 = getelementptr inbounds i16, i16* %145, i64 0, !dbg !9838
  %146 = load i16, i16* %arrayidx205, align 2, !dbg !9838
  %conv206 = sext i16 %146 to i32, !dbg !9838
  %147 = load i32, i32* %y01, align 4, !dbg !9839
  %shr207 = ashr i32 %147, 19, !dbg !9840
  %add208 = add nsw i32 %conv206, %shr207, !dbg !9841
  store i32 %add208, i32* %a.addr.i510, align 4, !dbg !9842
  store i32 10, i32* %p.addr.i511, align 4, !dbg !9842
  %148 = load i32, i32* %a.addr.i510, align 4, !dbg !9843
  %149 = load i32, i32* %p.addr.i511, align 4, !dbg !9844
  %shl.i512 = shl i32 1, %149, !dbg !9845
  %sub.i513 = sub nsw i32 %shl.i512, 1, !dbg !9846
  %neg.i514 = xor i32 %sub.i513, -1, !dbg !9847
  %and.i515 = and i32 %148, %neg.i514, !dbg !9848
  %tobool.i516 = icmp ne i32 %and.i515, 0, !dbg !9848
  br i1 %tobool.i516, label %if.then.i522, label %if.else.i523, !dbg !9849

if.then.i522:                                     ; preds = %av_clip_uintp2_c.exit
  %150 = load i32, i32* %a.addr.i510, align 4, !dbg !9850
  %neg1.i517 = xor i32 %150, -1, !dbg !9851
  %shr.i518 = ashr i32 %neg1.i517, 31, !dbg !9852
  %151 = load i32, i32* %p.addr.i511, align 4, !dbg !9853
  %shl2.i519 = shl i32 1, %151, !dbg !9854
  %sub3.i520 = sub nsw i32 %shl2.i519, 1, !dbg !9855
  %and4.i521 = and i32 %shr.i518, %sub3.i520, !dbg !9856
  store i32 %and4.i521, i32* %retval.i509, align 4, !dbg !9857
  br label %av_clip_uintp2_c.exit524, !dbg !9857

if.else.i523:                                     ; preds = %av_clip_uintp2_c.exit
  %152 = load i32, i32* %a.addr.i510, align 4, !dbg !9858
  store i32 %152, i32* %retval.i509, align 4, !dbg !9859
  br label %av_clip_uintp2_c.exit524, !dbg !9859

av_clip_uintp2_c.exit524:                         ; preds = %if.then.i522, %if.else.i523
  %153 = load i32, i32* %retval.i509, align 4, !dbg !9860
  %conv210 = trunc i32 %153 to i16, !dbg !9842
  %154 = load i32, i32* %x, align 4, !dbg !9861
  %mul211 = mul nsw i32 %154, 2, !dbg !9862
  %add212 = add nsw i32 %mul211, 1, !dbg !9863
  %idxprom213 = sext i32 %add212 to i64, !dbg !9864
  %155 = load i16*, i16** %yuv0, align 8, !dbg !9864
  %arrayidx214 = getelementptr inbounds i16, i16* %155, i64 %idxprom213, !dbg !9864
  store i16 %conv210, i16* %arrayidx214, align 2, !dbg !9865
  %156 = load i32, i32* %diff, align 4, !dbg !9866
  %mul215 = mul nsw i32 %156, 7, !dbg !9867
  %add216 = add nsw i32 %mul215, 8, !dbg !9868
  %shr217 = ashr i32 %add216, 4, !dbg !9869
  %157 = load i32, i32* %x, align 4, !dbg !9870
  %mul218 = mul nsw i32 %157, 2, !dbg !9871
  %add219 = add nsw i32 %mul218, 2, !dbg !9872
  %idxprom220 = sext i32 %add219 to i64, !dbg !9873
  %158 = load i32, i32* %y, align 4, !dbg !9874
  %and221 = and i32 %158, 1, !dbg !9875
  %idxprom222 = sext i32 %and221 to i64, !dbg !9873
  %159 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9873
  %arrayidx223 = getelementptr inbounds [2 x i32*], [2 x i32*]* %159, i64 0, !dbg !9873
  %arrayidx224 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx223, i64 0, i64 %idxprom222, !dbg !9873
  %160 = load i32*, i32** %arrayidx224, align 8, !dbg !9873
  %arrayidx225 = getelementptr inbounds i32, i32* %160, i64 %idxprom220, !dbg !9873
  %161 = load i32, i32* %arrayidx225, align 4, !dbg !9876
  %add226 = add nsw i32 %161, %shr217, !dbg !9876
  store i32 %add226, i32* %arrayidx225, align 4, !dbg !9876
  %162 = load i32, i32* %diff, align 4, !dbg !9877
  %mul227 = mul nsw i32 %162, 3, !dbg !9878
  %add228 = add nsw i32 %mul227, 8, !dbg !9879
  %shr229 = ashr i32 %add228, 4, !dbg !9880
  %163 = load i32, i32* %x, align 4, !dbg !9881
  %mul230 = mul nsw i32 %163, 2, !dbg !9882
  %add231 = add nsw i32 %mul230, 0, !dbg !9883
  %idxprom232 = sext i32 %add231 to i64, !dbg !9884
  %164 = load i32, i32* %y, align 4, !dbg !9885
  %and233 = and i32 %164, 1, !dbg !9886
  %tobool234 = icmp ne i32 %and233, 0, !dbg !9887
  %lnot235 = xor i1 %tobool234, true, !dbg !9887
  %lnot.ext236 = zext i1 %lnot235 to i32, !dbg !9887
  %idxprom237 = sext i32 %lnot.ext236 to i64, !dbg !9884
  %165 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9884
  %arrayidx238 = getelementptr inbounds [2 x i32*], [2 x i32*]* %165, i64 0, !dbg !9884
  %arrayidx239 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx238, i64 0, i64 %idxprom237, !dbg !9884
  %166 = load i32*, i32** %arrayidx239, align 8, !dbg !9884
  %arrayidx240 = getelementptr inbounds i32, i32* %166, i64 %idxprom232, !dbg !9884
  %167 = load i32, i32* %arrayidx240, align 4, !dbg !9888
  %add241 = add nsw i32 %167, %shr229, !dbg !9888
  store i32 %add241, i32* %arrayidx240, align 4, !dbg !9888
  %168 = load i32, i32* %diff, align 4, !dbg !9889
  %mul242 = mul nsw i32 %168, 5, !dbg !9890
  %add243 = add nsw i32 %mul242, 8, !dbg !9891
  %shr244 = ashr i32 %add243, 4, !dbg !9892
  %169 = load i32, i32* %x, align 4, !dbg !9893
  %mul245 = mul nsw i32 %169, 2, !dbg !9894
  %add246 = add nsw i32 %mul245, 1, !dbg !9895
  %idxprom247 = sext i32 %add246 to i64, !dbg !9896
  %170 = load i32, i32* %y, align 4, !dbg !9897
  %and248 = and i32 %170, 1, !dbg !9898
  %tobool249 = icmp ne i32 %and248, 0, !dbg !9899
  %lnot250 = xor i1 %tobool249, true, !dbg !9899
  %lnot.ext251 = zext i1 %lnot250 to i32, !dbg !9899
  %idxprom252 = sext i32 %lnot.ext251 to i64, !dbg !9896
  %171 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9896
  %arrayidx253 = getelementptr inbounds [2 x i32*], [2 x i32*]* %171, i64 0, !dbg !9896
  %arrayidx254 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx253, i64 0, i64 %idxprom252, !dbg !9896
  %172 = load i32*, i32** %arrayidx254, align 8, !dbg !9896
  %arrayidx255 = getelementptr inbounds i32, i32* %172, i64 %idxprom247, !dbg !9896
  %173 = load i32, i32* %arrayidx255, align 4, !dbg !9900
  %add256 = add nsw i32 %173, %shr244, !dbg !9900
  store i32 %add256, i32* %arrayidx255, align 4, !dbg !9900
  %174 = load i32, i32* %diff, align 4, !dbg !9901
  %mul257 = mul nsw i32 %174, 1, !dbg !9902
  %add258 = add nsw i32 %mul257, 8, !dbg !9903
  %shr259 = ashr i32 %add258, 4, !dbg !9904
  %175 = load i32, i32* %x, align 4, !dbg !9905
  %mul260 = mul nsw i32 %175, 2, !dbg !9906
  %add261 = add nsw i32 %mul260, 2, !dbg !9907
  %idxprom262 = sext i32 %add261 to i64, !dbg !9908
  %176 = load i32, i32* %y, align 4, !dbg !9909
  %and263 = and i32 %176, 1, !dbg !9910
  %tobool264 = icmp ne i32 %and263, 0, !dbg !9911
  %lnot265 = xor i1 %tobool264, true, !dbg !9911
  %lnot.ext266 = zext i1 %lnot265 to i32, !dbg !9911
  %idxprom267 = sext i32 %lnot.ext266 to i64, !dbg !9908
  %177 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9908
  %arrayidx268 = getelementptr inbounds [2 x i32*], [2 x i32*]* %177, i64 0, !dbg !9908
  %arrayidx269 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx268, i64 0, i64 %idxprom267, !dbg !9908
  %178 = load i32*, i32** %arrayidx269, align 8, !dbg !9908
  %arrayidx270 = getelementptr inbounds i32, i32* %178, i64 %idxprom262, !dbg !9908
  %179 = load i32, i32* %arrayidx270, align 4, !dbg !9912
  %add271 = add nsw i32 %179, %shr259, !dbg !9912
  store i32 %add271, i32* %arrayidx270, align 4, !dbg !9912
  %180 = load i32, i32* %x, align 4, !dbg !9913
  %mul272 = mul nsw i32 %180, 2, !dbg !9914
  %add273 = add nsw i32 %mul272, 1, !dbg !9915
  %idxprom274 = sext i32 %add273 to i64, !dbg !9916
  %181 = load i32, i32* %y, align 4, !dbg !9917
  %and275 = and i32 %181, 1, !dbg !9918
  %idxprom276 = sext i32 %and275 to i64, !dbg !9916
  %182 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9916
  %arrayidx277 = getelementptr inbounds [2 x i32*], [2 x i32*]* %182, i64 0, !dbg !9916
  %arrayidx278 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx277, i64 0, i64 %idxprom276, !dbg !9916
  %183 = load i32*, i32** %arrayidx278, align 8, !dbg !9916
  %arrayidx279 = getelementptr inbounds i32, i32* %183, i64 %idxprom274, !dbg !9916
  store i32 262144, i32* %arrayidx279, align 4, !dbg !9919
  %184 = load i32, i32* %r00, align 4, !dbg !9920
  %185 = load i32, i32* %r01, align 4, !dbg !9921
  %add280 = add nsw i32 %184, %185, !dbg !9922
  %add281 = add nsw i32 %add280, 1, !dbg !9923
  %shr282 = ashr i32 %add281, 1, !dbg !9924
  %186 = load i32, i32* %cru, align 4, !dbg !9925
  %mul283 = mul nsw i32 %shr282, %186, !dbg !9926
  %187 = load i32, i32* %g00, align 4, !dbg !9927
  %188 = load i32, i32* %g01, align 4, !dbg !9928
  %add284 = add nsw i32 %187, %188, !dbg !9929
  %add285 = add nsw i32 %add284, 1, !dbg !9930
  %shr286 = ashr i32 %add285, 1, !dbg !9931
  %189 = load i32, i32* %cgu, align 4, !dbg !9932
  %mul287 = mul nsw i32 %shr286, %189, !dbg !9933
  %add288 = add nsw i32 %mul283, %mul287, !dbg !9934
  %190 = load i32, i32* %b00, align 4, !dbg !9935
  %191 = load i32, i32* %b01, align 4, !dbg !9936
  %add289 = add nsw i32 %190, %191, !dbg !9937
  %add290 = add nsw i32 %add289, 1, !dbg !9938
  %shr291 = ashr i32 %add290, 1, !dbg !9939
  %192 = load i32, i32* %cburv, align 4, !dbg !9940
  %mul292 = mul nsw i32 %shr291, %192, !dbg !9941
  %add293 = add nsw i32 %add288, %mul292, !dbg !9942
  %193 = load i32, i32* %x, align 4, !dbg !9943
  %idxprom294 = sext i32 %193 to i64, !dbg !9944
  %194 = load i32, i32* %y, align 4, !dbg !9945
  %and295 = and i32 %194, 1, !dbg !9946
  %idxprom296 = sext i32 %and295 to i64, !dbg !9944
  %195 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9944
  %arrayidx297 = getelementptr inbounds [2 x i32*], [2 x i32*]* %195, i64 1, !dbg !9944
  %arrayidx298 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx297, i64 0, i64 %idxprom296, !dbg !9944
  %196 = load i32*, i32** %arrayidx298, align 8, !dbg !9944
  %arrayidx299 = getelementptr inbounds i32, i32* %196, i64 %idxprom294, !dbg !9944
  %197 = load i32, i32* %arrayidx299, align 4, !dbg !9944
  %add300 = add nsw i32 %add293, %197, !dbg !9947
  store i32 %add300, i32* %u, align 4, !dbg !9948
  %198 = load i32, i32* %u, align 4, !dbg !9949
  %199 = load i32, i32* %mask, align 4, !dbg !9950
  %and301 = and i32 %198, %199, !dbg !9951
  %sub302 = sub i32 %and301, 262144, !dbg !9952
  store i32 %sub302, i32* %diff, align 4, !dbg !9953
  %200 = load i32, i32* %u, align 4, !dbg !9954
  %shr303 = ashr i32 %200, 19, !dbg !9955
  %add304 = add nsw i32 512, %shr303, !dbg !9956
  store i32 %add304, i32* %a.addr.i494, align 4, !dbg !9957
  store i32 10, i32* %p.addr.i495, align 4, !dbg !9957
  %201 = load i32, i32* %a.addr.i494, align 4, !dbg !9958
  %202 = load i32, i32* %p.addr.i495, align 4, !dbg !9959
  %shl.i496 = shl i32 1, %202, !dbg !9960
  %sub.i497 = sub nsw i32 %shl.i496, 1, !dbg !9961
  %neg.i498 = xor i32 %sub.i497, -1, !dbg !9962
  %and.i499 = and i32 %201, %neg.i498, !dbg !9963
  %tobool.i500 = icmp ne i32 %and.i499, 0, !dbg !9963
  br i1 %tobool.i500, label %if.then.i506, label %if.else.i507, !dbg !9964

if.then.i506:                                     ; preds = %av_clip_uintp2_c.exit524
  %203 = load i32, i32* %a.addr.i494, align 4, !dbg !9965
  %neg1.i501 = xor i32 %203, -1, !dbg !9966
  %shr.i502 = ashr i32 %neg1.i501, 31, !dbg !9967
  %204 = load i32, i32* %p.addr.i495, align 4, !dbg !9968
  %shl2.i503 = shl i32 1, %204, !dbg !9969
  %sub3.i504 = sub nsw i32 %shl2.i503, 1, !dbg !9970
  %and4.i505 = and i32 %shr.i502, %sub3.i504, !dbg !9971
  store i32 %and4.i505, i32* %retval.i493, align 4, !dbg !9972
  br label %av_clip_uintp2_c.exit508, !dbg !9972

if.else.i507:                                     ; preds = %av_clip_uintp2_c.exit524
  %205 = load i32, i32* %a.addr.i494, align 4, !dbg !9973
  store i32 %205, i32* %retval.i493, align 4, !dbg !9974
  br label %av_clip_uintp2_c.exit508, !dbg !9974

av_clip_uintp2_c.exit508:                         ; preds = %if.then.i506, %if.else.i507
  %206 = load i32, i32* %retval.i493, align 4, !dbg !9975
  %conv306 = trunc i32 %206 to i16, !dbg !9957
  %207 = load i32, i32* %x, align 4, !dbg !9976
  %idxprom307 = sext i32 %207 to i64, !dbg !9977
  %208 = load i16*, i16** %yuv1, align 8, !dbg !9977
  %arrayidx308 = getelementptr inbounds i16, i16* %208, i64 %idxprom307, !dbg !9977
  store i16 %conv306, i16* %arrayidx308, align 2, !dbg !9978
  %209 = load i32, i32* %diff, align 4, !dbg !9979
  %mul309 = mul nsw i32 %209, 7, !dbg !9980
  %add310 = add nsw i32 %mul309, 8, !dbg !9981
  %shr311 = ashr i32 %add310, 4, !dbg !9982
  %210 = load i32, i32* %x, align 4, !dbg !9983
  %add312 = add nsw i32 %210, 1, !dbg !9984
  %idxprom313 = sext i32 %add312 to i64, !dbg !9985
  %211 = load i32, i32* %y, align 4, !dbg !9986
  %and314 = and i32 %211, 1, !dbg !9987
  %idxprom315 = sext i32 %and314 to i64, !dbg !9985
  %212 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9985
  %arrayidx316 = getelementptr inbounds [2 x i32*], [2 x i32*]* %212, i64 1, !dbg !9985
  %arrayidx317 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx316, i64 0, i64 %idxprom315, !dbg !9985
  %213 = load i32*, i32** %arrayidx317, align 8, !dbg !9985
  %arrayidx318 = getelementptr inbounds i32, i32* %213, i64 %idxprom313, !dbg !9985
  %214 = load i32, i32* %arrayidx318, align 4, !dbg !9988
  %add319 = add nsw i32 %214, %shr311, !dbg !9988
  store i32 %add319, i32* %arrayidx318, align 4, !dbg !9988
  %215 = load i32, i32* %diff, align 4, !dbg !9989
  %mul320 = mul nsw i32 %215, 3, !dbg !9990
  %add321 = add nsw i32 %mul320, 8, !dbg !9991
  %shr322 = ashr i32 %add321, 4, !dbg !9992
  %216 = load i32, i32* %x, align 4, !dbg !9993
  %sub323 = sub nsw i32 %216, 1, !dbg !9994
  %idxprom324 = sext i32 %sub323 to i64, !dbg !9995
  %217 = load i32, i32* %y, align 4, !dbg !9996
  %and325 = and i32 %217, 1, !dbg !9997
  %tobool326 = icmp ne i32 %and325, 0, !dbg !9998
  %lnot327 = xor i1 %tobool326, true, !dbg !9998
  %lnot.ext328 = zext i1 %lnot327 to i32, !dbg !9998
  %idxprom329 = sext i32 %lnot.ext328 to i64, !dbg !9995
  %218 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !9995
  %arrayidx330 = getelementptr inbounds [2 x i32*], [2 x i32*]* %218, i64 1, !dbg !9995
  %arrayidx331 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx330, i64 0, i64 %idxprom329, !dbg !9995
  %219 = load i32*, i32** %arrayidx331, align 8, !dbg !9995
  %arrayidx332 = getelementptr inbounds i32, i32* %219, i64 %idxprom324, !dbg !9995
  %220 = load i32, i32* %arrayidx332, align 4, !dbg !9999
  %add333 = add nsw i32 %220, %shr322, !dbg !9999
  store i32 %add333, i32* %arrayidx332, align 4, !dbg !9999
  %221 = load i32, i32* %diff, align 4, !dbg !10000
  %mul334 = mul nsw i32 %221, 5, !dbg !10001
  %add335 = add nsw i32 %mul334, 8, !dbg !10002
  %shr336 = ashr i32 %add335, 4, !dbg !10003
  %222 = load i32, i32* %x, align 4, !dbg !10004
  %add337 = add nsw i32 %222, 0, !dbg !10005
  %idxprom338 = sext i32 %add337 to i64, !dbg !10006
  %223 = load i32, i32* %y, align 4, !dbg !10007
  %and339 = and i32 %223, 1, !dbg !10008
  %tobool340 = icmp ne i32 %and339, 0, !dbg !10009
  %lnot341 = xor i1 %tobool340, true, !dbg !10009
  %lnot.ext342 = zext i1 %lnot341 to i32, !dbg !10009
  %idxprom343 = sext i32 %lnot.ext342 to i64, !dbg !10006
  %224 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10006
  %arrayidx344 = getelementptr inbounds [2 x i32*], [2 x i32*]* %224, i64 1, !dbg !10006
  %arrayidx345 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx344, i64 0, i64 %idxprom343, !dbg !10006
  %225 = load i32*, i32** %arrayidx345, align 8, !dbg !10006
  %arrayidx346 = getelementptr inbounds i32, i32* %225, i64 %idxprom338, !dbg !10006
  %226 = load i32, i32* %arrayidx346, align 4, !dbg !10010
  %add347 = add nsw i32 %226, %shr336, !dbg !10010
  store i32 %add347, i32* %arrayidx346, align 4, !dbg !10010
  %227 = load i32, i32* %diff, align 4, !dbg !10011
  %mul348 = mul nsw i32 %227, 1, !dbg !10012
  %add349 = add nsw i32 %mul348, 8, !dbg !10013
  %shr350 = ashr i32 %add349, 4, !dbg !10014
  %228 = load i32, i32* %x, align 4, !dbg !10015
  %add351 = add nsw i32 %228, 1, !dbg !10016
  %idxprom352 = sext i32 %add351 to i64, !dbg !10017
  %229 = load i32, i32* %y, align 4, !dbg !10018
  %and353 = and i32 %229, 1, !dbg !10019
  %tobool354 = icmp ne i32 %and353, 0, !dbg !10020
  %lnot355 = xor i1 %tobool354, true, !dbg !10020
  %lnot.ext356 = zext i1 %lnot355 to i32, !dbg !10020
  %idxprom357 = sext i32 %lnot.ext356 to i64, !dbg !10017
  %230 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10017
  %arrayidx358 = getelementptr inbounds [2 x i32*], [2 x i32*]* %230, i64 1, !dbg !10017
  %arrayidx359 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx358, i64 0, i64 %idxprom357, !dbg !10017
  %231 = load i32*, i32** %arrayidx359, align 8, !dbg !10017
  %arrayidx360 = getelementptr inbounds i32, i32* %231, i64 %idxprom352, !dbg !10017
  %232 = load i32, i32* %arrayidx360, align 4, !dbg !10021
  %add361 = add nsw i32 %232, %shr350, !dbg !10021
  store i32 %add361, i32* %arrayidx360, align 4, !dbg !10021
  %233 = load i32, i32* %x, align 4, !dbg !10022
  %add362 = add nsw i32 %233, 0, !dbg !10023
  %idxprom363 = sext i32 %add362 to i64, !dbg !10024
  %234 = load i32, i32* %y, align 4, !dbg !10025
  %and364 = and i32 %234, 1, !dbg !10026
  %idxprom365 = sext i32 %and364 to i64, !dbg !10024
  %235 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10024
  %arrayidx366 = getelementptr inbounds [2 x i32*], [2 x i32*]* %235, i64 1, !dbg !10024
  %arrayidx367 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx366, i64 0, i64 %idxprom365, !dbg !10024
  %236 = load i32*, i32** %arrayidx367, align 8, !dbg !10024
  %arrayidx368 = getelementptr inbounds i32, i32* %236, i64 %idxprom363, !dbg !10024
  store i32 262144, i32* %arrayidx368, align 4, !dbg !10027
  %237 = load i32, i32* %r00, align 4, !dbg !10028
  %238 = load i32, i32* %r01, align 4, !dbg !10029
  %add369 = add nsw i32 %237, %238, !dbg !10030
  %add370 = add nsw i32 %add369, 1, !dbg !10031
  %shr371 = ashr i32 %add370, 1, !dbg !10032
  %239 = load i32, i32* %cburv, align 4, !dbg !10033
  %mul372 = mul nsw i32 %shr371, %239, !dbg !10034
  %240 = load i32, i32* %g00, align 4, !dbg !10035
  %241 = load i32, i32* %g01, align 4, !dbg !10036
  %add373 = add nsw i32 %240, %241, !dbg !10037
  %add374 = add nsw i32 %add373, 1, !dbg !10038
  %shr375 = ashr i32 %add374, 1, !dbg !10039
  %242 = load i32, i32* %cgv, align 4, !dbg !10040
  %mul376 = mul nsw i32 %shr375, %242, !dbg !10041
  %add377 = add nsw i32 %mul372, %mul376, !dbg !10042
  %243 = load i32, i32* %b00, align 4, !dbg !10043
  %244 = load i32, i32* %b01, align 4, !dbg !10044
  %add378 = add nsw i32 %243, %244, !dbg !10045
  %add379 = add nsw i32 %add378, 1, !dbg !10046
  %shr380 = ashr i32 %add379, 1, !dbg !10047
  %245 = load i32, i32* %cbv, align 4, !dbg !10048
  %mul381 = mul nsw i32 %shr380, %245, !dbg !10049
  %add382 = add nsw i32 %add377, %mul381, !dbg !10050
  %246 = load i32, i32* %x, align 4, !dbg !10051
  %idxprom383 = sext i32 %246 to i64, !dbg !10052
  %247 = load i32, i32* %y, align 4, !dbg !10053
  %and384 = and i32 %247, 1, !dbg !10054
  %idxprom385 = sext i32 %and384 to i64, !dbg !10052
  %248 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10052
  %arrayidx386 = getelementptr inbounds [2 x i32*], [2 x i32*]* %248, i64 2, !dbg !10052
  %arrayidx387 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx386, i64 0, i64 %idxprom385, !dbg !10052
  %249 = load i32*, i32** %arrayidx387, align 8, !dbg !10052
  %arrayidx388 = getelementptr inbounds i32, i32* %249, i64 %idxprom383, !dbg !10052
  %250 = load i32, i32* %arrayidx388, align 4, !dbg !10052
  %add389 = add nsw i32 %add382, %250, !dbg !10055
  store i32 %add389, i32* %v, align 4, !dbg !10056
  %251 = load i32, i32* %v, align 4, !dbg !10057
  %252 = load i32, i32* %mask, align 4, !dbg !10058
  %and390 = and i32 %251, %252, !dbg !10059
  %sub391 = sub i32 %and390, 262144, !dbg !10060
  store i32 %sub391, i32* %diff, align 4, !dbg !10061
  %253 = load i32, i32* %v, align 4, !dbg !10062
  %shr392 = ashr i32 %253, 19, !dbg !10063
  %add393 = add nsw i32 512, %shr392, !dbg !10064
  store i32 %add393, i32* %a.addr.i478, align 4, !dbg !10065
  store i32 10, i32* %p.addr.i479, align 4, !dbg !10065
  %254 = load i32, i32* %a.addr.i478, align 4, !dbg !10066
  %255 = load i32, i32* %p.addr.i479, align 4, !dbg !10067
  %shl.i480 = shl i32 1, %255, !dbg !10068
  %sub.i481 = sub nsw i32 %shl.i480, 1, !dbg !10069
  %neg.i482 = xor i32 %sub.i481, -1, !dbg !10070
  %and.i483 = and i32 %254, %neg.i482, !dbg !10071
  %tobool.i484 = icmp ne i32 %and.i483, 0, !dbg !10071
  br i1 %tobool.i484, label %if.then.i490, label %if.else.i491, !dbg !10072

if.then.i490:                                     ; preds = %av_clip_uintp2_c.exit508
  %256 = load i32, i32* %a.addr.i478, align 4, !dbg !10073
  %neg1.i485 = xor i32 %256, -1, !dbg !10074
  %shr.i486 = ashr i32 %neg1.i485, 31, !dbg !10075
  %257 = load i32, i32* %p.addr.i479, align 4, !dbg !10076
  %shl2.i487 = shl i32 1, %257, !dbg !10077
  %sub3.i488 = sub nsw i32 %shl2.i487, 1, !dbg !10078
  %and4.i489 = and i32 %shr.i486, %sub3.i488, !dbg !10079
  store i32 %and4.i489, i32* %retval.i477, align 4, !dbg !10080
  br label %av_clip_uintp2_c.exit492, !dbg !10080

if.else.i491:                                     ; preds = %av_clip_uintp2_c.exit508
  %258 = load i32, i32* %a.addr.i478, align 4, !dbg !10081
  store i32 %258, i32* %retval.i477, align 4, !dbg !10082
  br label %av_clip_uintp2_c.exit492, !dbg !10082

av_clip_uintp2_c.exit492:                         ; preds = %if.then.i490, %if.else.i491
  %259 = load i32, i32* %retval.i477, align 4, !dbg !10083
  %conv395 = trunc i32 %259 to i16, !dbg !10065
  %260 = load i32, i32* %x, align 4, !dbg !10084
  %idxprom396 = sext i32 %260 to i64, !dbg !10085
  %261 = load i16*, i16** %yuv2, align 8, !dbg !10085
  %arrayidx397 = getelementptr inbounds i16, i16* %261, i64 %idxprom396, !dbg !10085
  store i16 %conv395, i16* %arrayidx397, align 2, !dbg !10086
  %262 = load i32, i32* %diff, align 4, !dbg !10087
  %mul398 = mul nsw i32 %262, 7, !dbg !10088
  %add399 = add nsw i32 %mul398, 8, !dbg !10089
  %shr400 = ashr i32 %add399, 4, !dbg !10090
  %263 = load i32, i32* %x, align 4, !dbg !10091
  %add401 = add nsw i32 %263, 1, !dbg !10092
  %idxprom402 = sext i32 %add401 to i64, !dbg !10093
  %264 = load i32, i32* %y, align 4, !dbg !10094
  %and403 = and i32 %264, 1, !dbg !10095
  %idxprom404 = sext i32 %and403 to i64, !dbg !10093
  %265 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10093
  %arrayidx405 = getelementptr inbounds [2 x i32*], [2 x i32*]* %265, i64 2, !dbg !10093
  %arrayidx406 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx405, i64 0, i64 %idxprom404, !dbg !10093
  %266 = load i32*, i32** %arrayidx406, align 8, !dbg !10093
  %arrayidx407 = getelementptr inbounds i32, i32* %266, i64 %idxprom402, !dbg !10093
  %267 = load i32, i32* %arrayidx407, align 4, !dbg !10096
  %add408 = add nsw i32 %267, %shr400, !dbg !10096
  store i32 %add408, i32* %arrayidx407, align 4, !dbg !10096
  %268 = load i32, i32* %diff, align 4, !dbg !10097
  %mul409 = mul nsw i32 %268, 3, !dbg !10098
  %add410 = add nsw i32 %mul409, 8, !dbg !10099
  %shr411 = ashr i32 %add410, 4, !dbg !10100
  %269 = load i32, i32* %x, align 4, !dbg !10101
  %sub412 = sub nsw i32 %269, 1, !dbg !10102
  %idxprom413 = sext i32 %sub412 to i64, !dbg !10103
  %270 = load i32, i32* %y, align 4, !dbg !10104
  %and414 = and i32 %270, 1, !dbg !10105
  %tobool415 = icmp ne i32 %and414, 0, !dbg !10106
  %lnot416 = xor i1 %tobool415, true, !dbg !10106
  %lnot.ext417 = zext i1 %lnot416 to i32, !dbg !10106
  %idxprom418 = sext i32 %lnot.ext417 to i64, !dbg !10103
  %271 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10103
  %arrayidx419 = getelementptr inbounds [2 x i32*], [2 x i32*]* %271, i64 2, !dbg !10103
  %arrayidx420 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx419, i64 0, i64 %idxprom418, !dbg !10103
  %272 = load i32*, i32** %arrayidx420, align 8, !dbg !10103
  %arrayidx421 = getelementptr inbounds i32, i32* %272, i64 %idxprom413, !dbg !10103
  %273 = load i32, i32* %arrayidx421, align 4, !dbg !10107
  %add422 = add nsw i32 %273, %shr411, !dbg !10107
  store i32 %add422, i32* %arrayidx421, align 4, !dbg !10107
  %274 = load i32, i32* %diff, align 4, !dbg !10108
  %mul423 = mul nsw i32 %274, 5, !dbg !10109
  %add424 = add nsw i32 %mul423, 8, !dbg !10110
  %shr425 = ashr i32 %add424, 4, !dbg !10111
  %275 = load i32, i32* %x, align 4, !dbg !10112
  %add426 = add nsw i32 %275, 0, !dbg !10113
  %idxprom427 = sext i32 %add426 to i64, !dbg !10114
  %276 = load i32, i32* %y, align 4, !dbg !10115
  %and428 = and i32 %276, 1, !dbg !10116
  %tobool429 = icmp ne i32 %and428, 0, !dbg !10117
  %lnot430 = xor i1 %tobool429, true, !dbg !10117
  %lnot.ext431 = zext i1 %lnot430 to i32, !dbg !10117
  %idxprom432 = sext i32 %lnot.ext431 to i64, !dbg !10114
  %277 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10114
  %arrayidx433 = getelementptr inbounds [2 x i32*], [2 x i32*]* %277, i64 2, !dbg !10114
  %arrayidx434 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx433, i64 0, i64 %idxprom432, !dbg !10114
  %278 = load i32*, i32** %arrayidx434, align 8, !dbg !10114
  %arrayidx435 = getelementptr inbounds i32, i32* %278, i64 %idxprom427, !dbg !10114
  %279 = load i32, i32* %arrayidx435, align 4, !dbg !10118
  %add436 = add nsw i32 %279, %shr425, !dbg !10118
  store i32 %add436, i32* %arrayidx435, align 4, !dbg !10118
  %280 = load i32, i32* %diff, align 4, !dbg !10119
  %mul437 = mul nsw i32 %280, 1, !dbg !10120
  %add438 = add nsw i32 %mul437, 8, !dbg !10121
  %shr439 = ashr i32 %add438, 4, !dbg !10122
  %281 = load i32, i32* %x, align 4, !dbg !10123
  %add440 = add nsw i32 %281, 1, !dbg !10124
  %idxprom441 = sext i32 %add440 to i64, !dbg !10125
  %282 = load i32, i32* %y, align 4, !dbg !10126
  %and442 = and i32 %282, 1, !dbg !10127
  %tobool443 = icmp ne i32 %and442, 0, !dbg !10128
  %lnot444 = xor i1 %tobool443, true, !dbg !10128
  %lnot.ext445 = zext i1 %lnot444 to i32, !dbg !10128
  %idxprom446 = sext i32 %lnot.ext445 to i64, !dbg !10125
  %283 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10125
  %arrayidx447 = getelementptr inbounds [2 x i32*], [2 x i32*]* %283, i64 2, !dbg !10125
  %arrayidx448 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx447, i64 0, i64 %idxprom446, !dbg !10125
  %284 = load i32*, i32** %arrayidx448, align 8, !dbg !10125
  %arrayidx449 = getelementptr inbounds i32, i32* %284, i64 %idxprom441, !dbg !10125
  %285 = load i32, i32* %arrayidx449, align 4, !dbg !10129
  %add450 = add nsw i32 %285, %shr439, !dbg !10129
  store i32 %add450, i32* %arrayidx449, align 4, !dbg !10129
  %286 = load i32, i32* %x, align 4, !dbg !10130
  %add451 = add nsw i32 %286, 0, !dbg !10131
  %idxprom452 = sext i32 %add451 to i64, !dbg !10132
  %287 = load i32, i32* %y, align 4, !dbg !10133
  %and453 = and i32 %287, 1, !dbg !10134
  %idxprom454 = sext i32 %and453 to i64, !dbg !10132
  %288 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10132
  %arrayidx455 = getelementptr inbounds [2 x i32*], [2 x i32*]* %288, i64 2, !dbg !10132
  %arrayidx456 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx455, i64 0, i64 %idxprom454, !dbg !10132
  %289 = load i32*, i32** %arrayidx456, align 8, !dbg !10132
  %arrayidx457 = getelementptr inbounds i32, i32* %289, i64 %idxprom452, !dbg !10132
  store i32 262144, i32* %arrayidx457, align 4, !dbg !10135
  br label %for.inc458, !dbg !10136

for.inc458:                                       ; preds = %av_clip_uintp2_c.exit492
  %290 = load i32, i32* %x, align 4, !dbg !10137
  %inc459 = add nsw i32 %290, 1, !dbg !10137
  store i32 %inc459, i32* %x, align 4, !dbg !10137
  br label %for.cond76, !dbg !10139, !llvm.loop !10140

for.end460:                                       ; preds = %for.cond76
  %291 = load i64, i64* %s0, align 8, !dbg !10142
  %mul461 = mul nsw i64 %291, 1, !dbg !10143
  %292 = load i16*, i16** %yuv0, align 8, !dbg !10144
  %add.ptr = getelementptr inbounds i16, i16* %292, i64 %mul461, !dbg !10144
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !10144
  %293 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !10145
  %arrayidx462 = getelementptr inbounds i64, i64* %293, i64 1, !dbg !10145
  %294 = load i64, i64* %arrayidx462, align 8, !dbg !10145
  %div463 = udiv i64 %294, 2, !dbg !10146
  %295 = load i16*, i16** %yuv1, align 8, !dbg !10147
  %add.ptr464 = getelementptr inbounds i16, i16* %295, i64 %div463, !dbg !10147
  store i16* %add.ptr464, i16** %yuv1, align 8, !dbg !10147
  %296 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !10148
  %arrayidx465 = getelementptr inbounds i64, i64* %296, i64 2, !dbg !10148
  %297 = load i64, i64* %arrayidx465, align 8, !dbg !10148
  %div466 = udiv i64 %297, 2, !dbg !10149
  %298 = load i16*, i16** %yuv2, align 8, !dbg !10150
  %add.ptr467 = getelementptr inbounds i16, i16* %298, i64 %div466, !dbg !10150
  store i16* %add.ptr467, i16** %yuv2, align 8, !dbg !10150
  %299 = load i64, i64* %s.addr, align 8, !dbg !10151
  %mul468 = mul nsw i64 %299, 1, !dbg !10152
  %300 = load i16*, i16** %rgb0, align 8, !dbg !10153
  %add.ptr469 = getelementptr inbounds i16, i16* %300, i64 %mul468, !dbg !10153
  store i16* %add.ptr469, i16** %rgb0, align 8, !dbg !10153
  %301 = load i64, i64* %s.addr, align 8, !dbg !10154
  %mul470 = mul nsw i64 %301, 1, !dbg !10155
  %302 = load i16*, i16** %rgb1, align 8, !dbg !10156
  %add.ptr471 = getelementptr inbounds i16, i16* %302, i64 %mul470, !dbg !10156
  store i16* %add.ptr471, i16** %rgb1, align 8, !dbg !10156
  %303 = load i64, i64* %s.addr, align 8, !dbg !10157
  %mul472 = mul nsw i64 %303, 1, !dbg !10158
  %304 = load i16*, i16** %rgb2, align 8, !dbg !10159
  %add.ptr473 = getelementptr inbounds i16, i16* %304, i64 %mul472, !dbg !10159
  store i16* %add.ptr473, i16** %rgb2, align 8, !dbg !10159
  br label %for.inc474, !dbg !10160

for.inc474:                                       ; preds = %for.end460
  %305 = load i32, i32* %y, align 4, !dbg !10161
  %inc475 = add nsw i32 %305, 1, !dbg !10161
  store i32 %inc475, i32* %y, align 4, !dbg !10161
  br label %for.cond72, !dbg !10163, !llvm.loop !10164

for.end476:                                       ; preds = %for.cond72
  ret void, !dbg !10166
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_420p10_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !10167 {
entry:
  %retval.i731 = alloca i32, align 4
  %a.addr.i732 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i732, metadata !4652, metadata !94), !dbg !10168
  %p.addr.i733 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i733, metadata !4665, metadata !94), !dbg !10176
  %retval.i715 = alloca i32, align 4
  %a.addr.i716 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i716, metadata !4652, metadata !94), !dbg !10177
  %p.addr.i717 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i717, metadata !4665, metadata !94), !dbg !10179
  %retval.i699 = alloca i32, align 4
  %a.addr.i700 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i700, metadata !4652, metadata !94), !dbg !10180
  %p.addr.i701 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i701, metadata !4665, metadata !94), !dbg !10182
  %retval.i683 = alloca i32, align 4
  %a.addr.i684 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i684, metadata !4652, metadata !94), !dbg !10183
  %p.addr.i685 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i685, metadata !4665, metadata !94), !dbg !10185
  %retval.i667 = alloca i32, align 4
  %a.addr.i668 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i668, metadata !4652, metadata !94), !dbg !10186
  %p.addr.i669 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i669, metadata !4665, metadata !94), !dbg !10188
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !10189
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !10191
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !10192, metadata !94), !dbg !10193
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !10194, metadata !94), !dbg !10195
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !10196, metadata !94), !dbg !10197
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !10198, metadata !94), !dbg !10199
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !10200, metadata !94), !dbg !10201
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !10202, metadata !94), !dbg !10203
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !10204, metadata !94), !dbg !10205
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !10206, metadata !94), !dbg !10207
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !10208, metadata !94), !dbg !10209
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !10210, metadata !94), !dbg !10211
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !10212
  %1 = bitcast i8** %0 to i16**, !dbg !10213
  store i16** %1, i16*** %yuv, align 8, !dbg !10211
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !10214, metadata !94), !dbg !10215
  %2 = load i16**, i16*** %yuv, align 8, !dbg !10216
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !10216
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !10216
  store i16* %3, i16** %yuv0, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !10217, metadata !94), !dbg !10218
  %4 = load i16**, i16*** %yuv, align 8, !dbg !10219
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !10219
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !10219
  store i16* %5, i16** %yuv1, align 8, !dbg !10218
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !10220, metadata !94), !dbg !10221
  %6 = load i16**, i16*** %yuv, align 8, !dbg !10222
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !10222
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !10222
  store i16* %7, i16** %yuv2, align 8, !dbg !10221
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !10223, metadata !94), !dbg !10224
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !10225
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !10225
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !10225
  store i16* %9, i16** %rgb0, align 8, !dbg !10224
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !10226, metadata !94), !dbg !10227
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !10228
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !10228
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !10228
  store i16* %11, i16** %rgb1, align 8, !dbg !10227
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !10229, metadata !94), !dbg !10230
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !10231
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !10231
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !10231
  store i16* %13, i16** %rgb2, align 8, !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10232, metadata !94), !dbg !10233
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10234, metadata !94), !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !10236, metadata !94), !dbg !10237
  store i32 19, i32* %sh, align 4, !dbg !10237
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !10238, metadata !94), !dbg !10239
  store i32 262144, i32* %rnd, align 4, !dbg !10239
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !10240, metadata !94), !dbg !10241
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10242
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !10242
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !10242
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !10242
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !10242
  %conv = sext i16 %15 to i32, !dbg !10242
  store i32 %conv, i32* %cry, align 4, !dbg !10241
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !10243, metadata !94), !dbg !10244
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10245
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !10245
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !10245
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !10245
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !10245
  %conv12 = sext i16 %17 to i32, !dbg !10245
  store i32 %conv12, i32* %cgy, align 4, !dbg !10244
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !10246, metadata !94), !dbg !10247
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10248
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !10248
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !10248
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !10248
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !10248
  %conv16 = sext i16 %19 to i32, !dbg !10248
  store i32 %conv16, i32* %cby, align 4, !dbg !10247
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !10249, metadata !94), !dbg !10250
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10251
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !10251
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !10251
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !10251
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !10251
  %conv20 = sext i16 %21 to i32, !dbg !10251
  store i32 %conv20, i32* %cru, align 4, !dbg !10250
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !10252, metadata !94), !dbg !10253
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10254
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !10254
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !10254
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !10254
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !10254
  %conv24 = sext i16 %23 to i32, !dbg !10254
  store i32 %conv24, i32* %cgu, align 4, !dbg !10253
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !10255, metadata !94), !dbg !10256
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10257
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !10257
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !10257
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !10257
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !10257
  %conv28 = sext i16 %25 to i32, !dbg !10257
  store i32 %conv28, i32* %cburv, align 4, !dbg !10256
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !10258, metadata !94), !dbg !10259
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10260
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !10260
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !10260
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !10260
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !10260
  %conv32 = sext i16 %27 to i32, !dbg !10260
  store i32 %conv32, i32* %cgv, align 4, !dbg !10259
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !10261, metadata !94), !dbg !10262
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !10263
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !10263
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !10263
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !10263
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !10263
  %conv36 = sext i16 %29 to i32, !dbg !10263
  store i32 %conv36, i32* %cbv, align 4, !dbg !10262
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !10264, metadata !94), !dbg !10265
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !10266
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !10266
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !10266
  %div = udiv i64 %31, 2, !dbg !10267
  store i64 %div, i64* %s0, align 8, !dbg !10265
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !10268, metadata !94), !dbg !10269
  store i32 512, i32* %uv_offset, align 4, !dbg !10269
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !10270, metadata !94), !dbg !10271
  store i32 524287, i32* %mask, align 4, !dbg !10271
  store i32 0, i32* %x, align 4, !dbg !10272
  br label %for.cond, !dbg !10274

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !10275
  %33 = load i32, i32* %w.addr, align 4, !dbg !10278
  %cmp = icmp slt i32 %32, %33, !dbg !10279
  br i1 %cmp, label %for.body, label %for.end, !dbg !10280

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !10281
  %idxprom = sext i32 %34 to i64, !dbg !10283
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10283
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !10283
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !10283
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !10283
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !10283
  store i32 262144, i32* %arrayidx41, align 4, !dbg !10284
  %37 = load i32, i32* %x, align 4, !dbg !10285
  %idxprom42 = sext i32 %37 to i64, !dbg !10286
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10286
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !10286
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !10286
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !10286
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !10286
  store i32 262144, i32* %arrayidx45, align 4, !dbg !10287
  br label %for.inc, !dbg !10288

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !10289
  %inc = add nsw i32 %40, 1, !dbg !10289
  store i32 %inc, i32* %x, align 4, !dbg !10289
  br label %for.cond, !dbg !10291, !llvm.loop !10292

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !10294
  %add = add nsw i32 %41, 2, !dbg !10295
  %sub = sub nsw i32 %add, 1, !dbg !10296
  %shr = ashr i32 %sub, 1, !dbg !10297
  store i32 %shr, i32* %w.addr, align 4, !dbg !10298
  %42 = load i32, i32* %h.addr, align 4, !dbg !10299
  %add46 = add nsw i32 %42, 2, !dbg !10300
  %sub47 = sub nsw i32 %add46, 1, !dbg !10301
  %shr48 = ashr i32 %sub47, 1, !dbg !10302
  store i32 %shr48, i32* %h.addr, align 4, !dbg !10303
  store i32 0, i32* %x, align 4, !dbg !10304
  br label %for.cond49, !dbg !10306

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !10307
  %44 = load i32, i32* %w.addr, align 4, !dbg !10310
  %cmp50 = icmp slt i32 %43, %44, !dbg !10311
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !10312

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !10313
  %idxprom53 = sext i32 %45 to i64, !dbg !10315
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10315
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !10315
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !10315
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !10315
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !10315
  store i32 262144, i32* %arrayidx56, align 4, !dbg !10316
  %48 = load i32, i32* %x, align 4, !dbg !10317
  %idxprom57 = sext i32 %48 to i64, !dbg !10318
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10318
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !10318
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !10318
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !10318
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !10318
  store i32 262144, i32* %arrayidx60, align 4, !dbg !10319
  %51 = load i32, i32* %x, align 4, !dbg !10320
  %idxprom61 = sext i32 %51 to i64, !dbg !10321
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10321
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !10321
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !10321
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !10321
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !10321
  store i32 262144, i32* %arrayidx64, align 4, !dbg !10322
  %54 = load i32, i32* %x, align 4, !dbg !10323
  %idxprom65 = sext i32 %54 to i64, !dbg !10324
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10324
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !10324
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !10324
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !10324
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !10324
  store i32 262144, i32* %arrayidx68, align 4, !dbg !10325
  br label %for.inc69, !dbg !10326

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !10327
  %inc70 = add nsw i32 %57, 1, !dbg !10327
  store i32 %inc70, i32* %x, align 4, !dbg !10327
  br label %for.cond49, !dbg !10329, !llvm.loop !10330

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !10332
  br label %for.cond72, !dbg !10333

for.cond72:                                       ; preds = %for.inc664, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !10334
  %59 = load i32, i32* %h.addr, align 4, !dbg !10336
  %cmp73 = icmp slt i32 %58, %59, !dbg !10337
  br i1 %cmp73, label %for.body75, label %for.end666, !dbg !10338

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !10339
  br label %for.cond76, !dbg !10340

for.cond76:                                       ; preds = %for.inc648, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !10341
  %61 = load i32, i32* %w.addr, align 4, !dbg !10343
  %cmp77 = icmp slt i32 %60, %61, !dbg !10344
  br i1 %cmp77, label %for.body79, label %for.end650, !dbg !10345

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !10346, metadata !94), !dbg !10347
  %62 = load i32, i32* %x, align 4, !dbg !10348
  %shl = shl i32 %62, 1, !dbg !10349
  %idxprom80 = sext i32 %shl to i64, !dbg !10350
  %63 = load i16*, i16** %rgb0, align 8, !dbg !10350
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !10350
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !10350
  %conv82 = sext i16 %64 to i32, !dbg !10350
  store i32 %conv82, i32* %r00, align 4, !dbg !10347
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !10351, metadata !94), !dbg !10352
  %65 = load i32, i32* %x, align 4, !dbg !10353
  %shl83 = shl i32 %65, 1, !dbg !10354
  %idxprom84 = sext i32 %shl83 to i64, !dbg !10355
  %66 = load i16*, i16** %rgb1, align 8, !dbg !10355
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !10355
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !10355
  %conv86 = sext i16 %67 to i32, !dbg !10355
  store i32 %conv86, i32* %g00, align 4, !dbg !10352
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !10356, metadata !94), !dbg !10357
  %68 = load i32, i32* %x, align 4, !dbg !10358
  %shl87 = shl i32 %68, 1, !dbg !10359
  %idxprom88 = sext i32 %shl87 to i64, !dbg !10360
  %69 = load i16*, i16** %rgb2, align 8, !dbg !10360
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !10360
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !10360
  %conv90 = sext i16 %70 to i32, !dbg !10360
  store i32 %conv90, i32* %b00, align 4, !dbg !10357
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !10361, metadata !94), !dbg !10362
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !10363, metadata !94), !dbg !10364
  %71 = load i32, i32* %x, align 4, !dbg !10365
  %mul = mul nsw i32 %71, 2, !dbg !10366
  %add91 = add nsw i32 %mul, 1, !dbg !10367
  %idxprom92 = sext i32 %add91 to i64, !dbg !10368
  %72 = load i16*, i16** %rgb0, align 8, !dbg !10368
  %arrayidx93 = getelementptr inbounds i16, i16* %72, i64 %idxprom92, !dbg !10368
  %73 = load i16, i16* %arrayidx93, align 2, !dbg !10368
  %conv94 = sext i16 %73 to i32, !dbg !10368
  store i32 %conv94, i32* %r01, align 4, !dbg !10364
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !10369, metadata !94), !dbg !10370
  %74 = load i32, i32* %x, align 4, !dbg !10371
  %mul95 = mul nsw i32 %74, 2, !dbg !10372
  %add96 = add nsw i32 %mul95, 1, !dbg !10373
  %idxprom97 = sext i32 %add96 to i64, !dbg !10374
  %75 = load i16*, i16** %rgb1, align 8, !dbg !10374
  %arrayidx98 = getelementptr inbounds i16, i16* %75, i64 %idxprom97, !dbg !10374
  %76 = load i16, i16* %arrayidx98, align 2, !dbg !10374
  %conv99 = sext i16 %76 to i32, !dbg !10374
  store i32 %conv99, i32* %g01, align 4, !dbg !10370
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !10375, metadata !94), !dbg !10376
  %77 = load i32, i32* %x, align 4, !dbg !10377
  %mul100 = mul nsw i32 %77, 2, !dbg !10378
  %add101 = add nsw i32 %mul100, 1, !dbg !10379
  %idxprom102 = sext i32 %add101 to i64, !dbg !10380
  %78 = load i16*, i16** %rgb2, align 8, !dbg !10380
  %arrayidx103 = getelementptr inbounds i16, i16* %78, i64 %idxprom102, !dbg !10380
  %79 = load i16, i16* %arrayidx103, align 2, !dbg !10380
  %conv104 = sext i16 %79 to i32, !dbg !10380
  store i32 %conv104, i32* %b01, align 4, !dbg !10376
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !10381, metadata !94), !dbg !10382
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !10383, metadata !94), !dbg !10384
  %80 = load i32, i32* %x, align 4, !dbg !10385
  %mul105 = mul nsw i32 %80, 2, !dbg !10386
  %add106 = add nsw i32 %mul105, 0, !dbg !10387
  %conv107 = sext i32 %add106 to i64, !dbg !10385
  %81 = load i64, i64* %s.addr, align 8, !dbg !10388
  %add108 = add nsw i64 %conv107, %81, !dbg !10389
  %82 = load i16*, i16** %rgb0, align 8, !dbg !10390
  %arrayidx109 = getelementptr inbounds i16, i16* %82, i64 %add108, !dbg !10390
  %83 = load i16, i16* %arrayidx109, align 2, !dbg !10390
  %conv110 = sext i16 %83 to i32, !dbg !10390
  store i32 %conv110, i32* %r10, align 4, !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !10391, metadata !94), !dbg !10392
  %84 = load i32, i32* %x, align 4, !dbg !10393
  %mul111 = mul nsw i32 %84, 2, !dbg !10394
  %add112 = add nsw i32 %mul111, 0, !dbg !10395
  %conv113 = sext i32 %add112 to i64, !dbg !10393
  %85 = load i64, i64* %s.addr, align 8, !dbg !10396
  %add114 = add nsw i64 %conv113, %85, !dbg !10397
  %86 = load i16*, i16** %rgb1, align 8, !dbg !10398
  %arrayidx115 = getelementptr inbounds i16, i16* %86, i64 %add114, !dbg !10398
  %87 = load i16, i16* %arrayidx115, align 2, !dbg !10398
  %conv116 = sext i16 %87 to i32, !dbg !10398
  store i32 %conv116, i32* %g10, align 4, !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !10399, metadata !94), !dbg !10400
  %88 = load i32, i32* %x, align 4, !dbg !10401
  %mul117 = mul nsw i32 %88, 2, !dbg !10402
  %add118 = add nsw i32 %mul117, 0, !dbg !10403
  %conv119 = sext i32 %add118 to i64, !dbg !10401
  %89 = load i64, i64* %s.addr, align 8, !dbg !10404
  %add120 = add nsw i64 %conv119, %89, !dbg !10405
  %90 = load i16*, i16** %rgb2, align 8, !dbg !10406
  %arrayidx121 = getelementptr inbounds i16, i16* %90, i64 %add120, !dbg !10406
  %91 = load i16, i16* %arrayidx121, align 2, !dbg !10406
  %conv122 = sext i16 %91 to i32, !dbg !10406
  store i32 %conv122, i32* %b10, align 4, !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !10407, metadata !94), !dbg !10408
  %92 = load i32, i32* %x, align 4, !dbg !10409
  %mul123 = mul nsw i32 %92, 2, !dbg !10410
  %add124 = add nsw i32 %mul123, 1, !dbg !10411
  %conv125 = sext i32 %add124 to i64, !dbg !10409
  %93 = load i64, i64* %s.addr, align 8, !dbg !10412
  %add126 = add nsw i64 %conv125, %93, !dbg !10413
  %94 = load i16*, i16** %rgb0, align 8, !dbg !10414
  %arrayidx127 = getelementptr inbounds i16, i16* %94, i64 %add126, !dbg !10414
  %95 = load i16, i16* %arrayidx127, align 2, !dbg !10414
  %conv128 = sext i16 %95 to i32, !dbg !10414
  store i32 %conv128, i32* %r11, align 4, !dbg !10408
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !10415, metadata !94), !dbg !10416
  %96 = load i32, i32* %x, align 4, !dbg !10417
  %mul129 = mul nsw i32 %96, 2, !dbg !10418
  %add130 = add nsw i32 %mul129, 1, !dbg !10419
  %conv131 = sext i32 %add130 to i64, !dbg !10417
  %97 = load i64, i64* %s.addr, align 8, !dbg !10420
  %add132 = add nsw i64 %conv131, %97, !dbg !10421
  %98 = load i16*, i16** %rgb1, align 8, !dbg !10422
  %arrayidx133 = getelementptr inbounds i16, i16* %98, i64 %add132, !dbg !10422
  %99 = load i16, i16* %arrayidx133, align 2, !dbg !10422
  %conv134 = sext i16 %99 to i32, !dbg !10422
  store i32 %conv134, i32* %g11, align 4, !dbg !10416
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !10423, metadata !94), !dbg !10424
  %100 = load i32, i32* %x, align 4, !dbg !10425
  %mul135 = mul nsw i32 %100, 2, !dbg !10426
  %add136 = add nsw i32 %mul135, 1, !dbg !10427
  %conv137 = sext i32 %add136 to i64, !dbg !10425
  %101 = load i64, i64* %s.addr, align 8, !dbg !10428
  %add138 = add nsw i64 %conv137, %101, !dbg !10429
  %102 = load i16*, i16** %rgb2, align 8, !dbg !10430
  %arrayidx139 = getelementptr inbounds i16, i16* %102, i64 %add138, !dbg !10430
  %103 = load i16, i16* %arrayidx139, align 2, !dbg !10430
  %conv140 = sext i16 %103 to i32, !dbg !10430
  store i32 %conv140, i32* %b11, align 4, !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !10431, metadata !94), !dbg !10432
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !10433, metadata !94), !dbg !10434
  call void @llvm.dbg.declare(metadata i32* %u, metadata !10435, metadata !94), !dbg !10436
  call void @llvm.dbg.declare(metadata i32* %v, metadata !10437, metadata !94), !dbg !10438
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !10439, metadata !94), !dbg !10440
  %104 = load i32, i32* %r00, align 4, !dbg !10441
  %105 = load i32, i32* %cry, align 4, !dbg !10442
  %mul141 = mul nsw i32 %104, %105, !dbg !10443
  %106 = load i32, i32* %g00, align 4, !dbg !10444
  %107 = load i32, i32* %cgy, align 4, !dbg !10445
  %mul142 = mul nsw i32 %106, %107, !dbg !10446
  %add143 = add nsw i32 %mul141, %mul142, !dbg !10447
  %108 = load i32, i32* %b00, align 4, !dbg !10448
  %109 = load i32, i32* %cby, align 4, !dbg !10449
  %mul144 = mul nsw i32 %108, %109, !dbg !10450
  %add145 = add nsw i32 %add143, %mul144, !dbg !10451
  %110 = load i32, i32* %x, align 4, !dbg !10452
  %shl146 = shl i32 %110, 1, !dbg !10453
  %idxprom147 = sext i32 %shl146 to i64, !dbg !10454
  %111 = load i32, i32* %y, align 4, !dbg !10455
  %and = and i32 %111, 0, !dbg !10456
  %idxprom148 = sext i32 %and to i64, !dbg !10454
  %112 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10454
  %arrayidx149 = getelementptr inbounds [2 x i32*], [2 x i32*]* %112, i64 0, !dbg !10454
  %arrayidx150 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx149, i64 0, i64 %idxprom148, !dbg !10454
  %113 = load i32*, i32** %arrayidx150, align 8, !dbg !10454
  %arrayidx151 = getelementptr inbounds i32, i32* %113, i64 %idxprom147, !dbg !10454
  %114 = load i32, i32* %arrayidx151, align 4, !dbg !10454
  %add152 = add nsw i32 %add145, %114, !dbg !10457
  store i32 %add152, i32* %y00, align 4, !dbg !10458
  %115 = load i32, i32* %y00, align 4, !dbg !10459
  %116 = load i32, i32* %mask, align 4, !dbg !10460
  %and153 = and i32 %115, %116, !dbg !10461
  %sub154 = sub i32 %and153, 262144, !dbg !10462
  store i32 %sub154, i32* %diff, align 4, !dbg !10463
  %117 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !10464
  %arrayidx155 = getelementptr inbounds i16, i16* %117, i64 0, !dbg !10464
  %118 = load i16, i16* %arrayidx155, align 2, !dbg !10464
  %conv156 = sext i16 %118 to i32, !dbg !10464
  %119 = load i32, i32* %y00, align 4, !dbg !10465
  %shr157 = ashr i32 %119, 19, !dbg !10466
  %add158 = add nsw i32 %conv156, %shr157, !dbg !10467
  store i32 %add158, i32* %a.addr.i, align 4, !dbg !10468
  store i32 10, i32* %p.addr.i, align 4, !dbg !10468
  %120 = load i32, i32* %a.addr.i, align 4, !dbg !10469
  %121 = load i32, i32* %p.addr.i, align 4, !dbg !10470
  %shl.i = shl i32 1, %121, !dbg !10471
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !10472
  %neg.i = xor i32 %sub.i, -1, !dbg !10473
  %and.i = and i32 %120, %neg.i, !dbg !10474
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !10474
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !10475

if.then.i:                                        ; preds = %for.body79
  %122 = load i32, i32* %a.addr.i, align 4, !dbg !10476
  %neg1.i = xor i32 %122, -1, !dbg !10477
  %shr.i = ashr i32 %neg1.i, 31, !dbg !10478
  %123 = load i32, i32* %p.addr.i, align 4, !dbg !10479
  %shl2.i = shl i32 1, %123, !dbg !10480
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !10481
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !10482
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !10483
  br label %av_clip_uintp2_c.exit, !dbg !10483

if.else.i:                                        ; preds = %for.body79
  %124 = load i32, i32* %a.addr.i, align 4, !dbg !10484
  store i32 %124, i32* %retval.i, align 4, !dbg !10485
  br label %av_clip_uintp2_c.exit, !dbg !10485

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %125 = load i32, i32* %retval.i, align 4, !dbg !10486
  %conv159 = trunc i32 %125 to i16, !dbg !10468
  %126 = load i32, i32* %x, align 4, !dbg !10487
  %shl160 = shl i32 %126, 1, !dbg !10488
  %idxprom161 = sext i32 %shl160 to i64, !dbg !10489
  %127 = load i16*, i16** %yuv0, align 8, !dbg !10489
  %arrayidx162 = getelementptr inbounds i16, i16* %127, i64 %idxprom161, !dbg !10489
  store i16 %conv159, i16* %arrayidx162, align 2, !dbg !10490
  %128 = load i32, i32* %diff, align 4, !dbg !10491
  %mul163 = mul nsw i32 %128, 7, !dbg !10492
  %add164 = add nsw i32 %mul163, 8, !dbg !10493
  %shr165 = ashr i32 %add164, 4, !dbg !10494
  %129 = load i32, i32* %x, align 4, !dbg !10495
  %shl166 = shl i32 %129, 1, !dbg !10496
  %add167 = add nsw i32 %shl166, 1, !dbg !10497
  %idxprom168 = sext i32 %add167 to i64, !dbg !10498
  %130 = load i32, i32* %y, align 4, !dbg !10499
  %and169 = and i32 %130, 0, !dbg !10500
  %idxprom170 = sext i32 %and169 to i64, !dbg !10498
  %131 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10498
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %131, i64 0, !dbg !10498
  %arrayidx172 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx171, i64 0, i64 %idxprom170, !dbg !10498
  %132 = load i32*, i32** %arrayidx172, align 8, !dbg !10498
  %arrayidx173 = getelementptr inbounds i32, i32* %132, i64 %idxprom168, !dbg !10498
  %133 = load i32, i32* %arrayidx173, align 4, !dbg !10501
  %add174 = add nsw i32 %133, %shr165, !dbg !10501
  store i32 %add174, i32* %arrayidx173, align 4, !dbg !10501
  %134 = load i32, i32* %diff, align 4, !dbg !10502
  %mul175 = mul nsw i32 %134, 3, !dbg !10503
  %add176 = add nsw i32 %mul175, 8, !dbg !10504
  %shr177 = ashr i32 %add176, 4, !dbg !10505
  %135 = load i32, i32* %x, align 4, !dbg !10506
  %shl178 = shl i32 %135, 1, !dbg !10507
  %sub179 = sub nsw i32 %shl178, 1, !dbg !10508
  %idxprom180 = sext i32 %sub179 to i64, !dbg !10509
  %136 = load i32, i32* %y, align 4, !dbg !10510
  %and181 = and i32 %136, 0, !dbg !10511
  %tobool = icmp ne i32 %and181, 0, !dbg !10512
  %lnot = xor i1 %tobool, true, !dbg !10512
  %lnot.ext = zext i1 %lnot to i32, !dbg !10512
  %idxprom182 = sext i32 %lnot.ext to i64, !dbg !10509
  %137 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10509
  %arrayidx183 = getelementptr inbounds [2 x i32*], [2 x i32*]* %137, i64 0, !dbg !10509
  %arrayidx184 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx183, i64 0, i64 %idxprom182, !dbg !10509
  %138 = load i32*, i32** %arrayidx184, align 8, !dbg !10509
  %arrayidx185 = getelementptr inbounds i32, i32* %138, i64 %idxprom180, !dbg !10509
  %139 = load i32, i32* %arrayidx185, align 4, !dbg !10513
  %add186 = add nsw i32 %139, %shr177, !dbg !10513
  store i32 %add186, i32* %arrayidx185, align 4, !dbg !10513
  %140 = load i32, i32* %diff, align 4, !dbg !10514
  %mul187 = mul nsw i32 %140, 5, !dbg !10515
  %add188 = add nsw i32 %mul187, 8, !dbg !10516
  %shr189 = ashr i32 %add188, 4, !dbg !10517
  %141 = load i32, i32* %x, align 4, !dbg !10518
  %shl190 = shl i32 %141, 1, !dbg !10519
  %add191 = add nsw i32 %shl190, 0, !dbg !10520
  %idxprom192 = sext i32 %add191 to i64, !dbg !10521
  %142 = load i32, i32* %y, align 4, !dbg !10522
  %and193 = and i32 %142, 0, !dbg !10523
  %tobool194 = icmp ne i32 %and193, 0, !dbg !10524
  %lnot195 = xor i1 %tobool194, true, !dbg !10524
  %lnot.ext196 = zext i1 %lnot195 to i32, !dbg !10524
  %idxprom197 = sext i32 %lnot.ext196 to i64, !dbg !10521
  %143 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10521
  %arrayidx198 = getelementptr inbounds [2 x i32*], [2 x i32*]* %143, i64 0, !dbg !10521
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx198, i64 0, i64 %idxprom197, !dbg !10521
  %144 = load i32*, i32** %arrayidx199, align 8, !dbg !10521
  %arrayidx200 = getelementptr inbounds i32, i32* %144, i64 %idxprom192, !dbg !10521
  %145 = load i32, i32* %arrayidx200, align 4, !dbg !10525
  %add201 = add nsw i32 %145, %shr189, !dbg !10525
  store i32 %add201, i32* %arrayidx200, align 4, !dbg !10525
  %146 = load i32, i32* %diff, align 4, !dbg !10526
  %mul202 = mul nsw i32 %146, 1, !dbg !10527
  %add203 = add nsw i32 %mul202, 8, !dbg !10528
  %shr204 = ashr i32 %add203, 4, !dbg !10529
  %147 = load i32, i32* %x, align 4, !dbg !10530
  %shl205 = shl i32 %147, 1, !dbg !10531
  %add206 = add nsw i32 %shl205, 1, !dbg !10532
  %idxprom207 = sext i32 %add206 to i64, !dbg !10533
  %148 = load i32, i32* %y, align 4, !dbg !10534
  %and208 = and i32 %148, 0, !dbg !10535
  %tobool209 = icmp ne i32 %and208, 0, !dbg !10536
  %lnot210 = xor i1 %tobool209, true, !dbg !10536
  %lnot.ext211 = zext i1 %lnot210 to i32, !dbg !10536
  %idxprom212 = sext i32 %lnot.ext211 to i64, !dbg !10533
  %149 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10533
  %arrayidx213 = getelementptr inbounds [2 x i32*], [2 x i32*]* %149, i64 0, !dbg !10533
  %arrayidx214 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx213, i64 0, i64 %idxprom212, !dbg !10533
  %150 = load i32*, i32** %arrayidx214, align 8, !dbg !10533
  %arrayidx215 = getelementptr inbounds i32, i32* %150, i64 %idxprom207, !dbg !10533
  %151 = load i32, i32* %arrayidx215, align 4, !dbg !10537
  %add216 = add nsw i32 %151, %shr204, !dbg !10537
  store i32 %add216, i32* %arrayidx215, align 4, !dbg !10537
  %152 = load i32, i32* %x, align 4, !dbg !10538
  %shl217 = shl i32 %152, 1, !dbg !10539
  %add218 = add nsw i32 %shl217, 0, !dbg !10540
  %idxprom219 = sext i32 %add218 to i64, !dbg !10541
  %153 = load i32, i32* %y, align 4, !dbg !10542
  %and220 = and i32 %153, 0, !dbg !10543
  %idxprom221 = sext i32 %and220 to i64, !dbg !10541
  %154 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10541
  %arrayidx222 = getelementptr inbounds [2 x i32*], [2 x i32*]* %154, i64 0, !dbg !10541
  %arrayidx223 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx222, i64 0, i64 %idxprom221, !dbg !10541
  %155 = load i32*, i32** %arrayidx223, align 8, !dbg !10541
  %arrayidx224 = getelementptr inbounds i32, i32* %155, i64 %idxprom219, !dbg !10541
  store i32 262144, i32* %arrayidx224, align 4, !dbg !10544
  %156 = load i32, i32* %r01, align 4, !dbg !10545
  %157 = load i32, i32* %cry, align 4, !dbg !10546
  %mul225 = mul nsw i32 %156, %157, !dbg !10547
  %158 = load i32, i32* %g01, align 4, !dbg !10548
  %159 = load i32, i32* %cgy, align 4, !dbg !10549
  %mul226 = mul nsw i32 %158, %159, !dbg !10550
  %add227 = add nsw i32 %mul225, %mul226, !dbg !10551
  %160 = load i32, i32* %b01, align 4, !dbg !10552
  %161 = load i32, i32* %cby, align 4, !dbg !10553
  %mul228 = mul nsw i32 %160, %161, !dbg !10554
  %add229 = add nsw i32 %add227, %mul228, !dbg !10555
  %162 = load i32, i32* %x, align 4, !dbg !10556
  %mul230 = mul nsw i32 %162, 2, !dbg !10557
  %add231 = add nsw i32 %mul230, 1, !dbg !10558
  %idxprom232 = sext i32 %add231 to i64, !dbg !10559
  %163 = load i32, i32* %y, align 4, !dbg !10560
  %and233 = and i32 %163, 0, !dbg !10561
  %idxprom234 = sext i32 %and233 to i64, !dbg !10559
  %164 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10559
  %arrayidx235 = getelementptr inbounds [2 x i32*], [2 x i32*]* %164, i64 0, !dbg !10559
  %arrayidx236 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx235, i64 0, i64 %idxprom234, !dbg !10559
  %165 = load i32*, i32** %arrayidx236, align 8, !dbg !10559
  %arrayidx237 = getelementptr inbounds i32, i32* %165, i64 %idxprom232, !dbg !10559
  %166 = load i32, i32* %arrayidx237, align 4, !dbg !10559
  %add238 = add nsw i32 %add229, %166, !dbg !10562
  store i32 %add238, i32* %y01, align 4, !dbg !10563
  %167 = load i32, i32* %y01, align 4, !dbg !10564
  %168 = load i32, i32* %mask, align 4, !dbg !10565
  %and239 = and i32 %167, %168, !dbg !10566
  %sub240 = sub i32 %and239, 262144, !dbg !10567
  store i32 %sub240, i32* %diff, align 4, !dbg !10568
  %169 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !10569
  %arrayidx241 = getelementptr inbounds i16, i16* %169, i64 0, !dbg !10569
  %170 = load i16, i16* %arrayidx241, align 2, !dbg !10569
  %conv242 = sext i16 %170 to i32, !dbg !10569
  %171 = load i32, i32* %y01, align 4, !dbg !10570
  %shr243 = ashr i32 %171, 19, !dbg !10571
  %add244 = add nsw i32 %conv242, %shr243, !dbg !10572
  store i32 %add244, i32* %a.addr.i732, align 4, !dbg !10573
  store i32 10, i32* %p.addr.i733, align 4, !dbg !10573
  %172 = load i32, i32* %a.addr.i732, align 4, !dbg !10574
  %173 = load i32, i32* %p.addr.i733, align 4, !dbg !10575
  %shl.i734 = shl i32 1, %173, !dbg !10576
  %sub.i735 = sub nsw i32 %shl.i734, 1, !dbg !10577
  %neg.i736 = xor i32 %sub.i735, -1, !dbg !10578
  %and.i737 = and i32 %172, %neg.i736, !dbg !10579
  %tobool.i738 = icmp ne i32 %and.i737, 0, !dbg !10579
  br i1 %tobool.i738, label %if.then.i744, label %if.else.i745, !dbg !10580

if.then.i744:                                     ; preds = %av_clip_uintp2_c.exit
  %174 = load i32, i32* %a.addr.i732, align 4, !dbg !10581
  %neg1.i739 = xor i32 %174, -1, !dbg !10582
  %shr.i740 = ashr i32 %neg1.i739, 31, !dbg !10583
  %175 = load i32, i32* %p.addr.i733, align 4, !dbg !10584
  %shl2.i741 = shl i32 1, %175, !dbg !10585
  %sub3.i742 = sub nsw i32 %shl2.i741, 1, !dbg !10586
  %and4.i743 = and i32 %shr.i740, %sub3.i742, !dbg !10587
  store i32 %and4.i743, i32* %retval.i731, align 4, !dbg !10588
  br label %av_clip_uintp2_c.exit746, !dbg !10588

if.else.i745:                                     ; preds = %av_clip_uintp2_c.exit
  %176 = load i32, i32* %a.addr.i732, align 4, !dbg !10589
  store i32 %176, i32* %retval.i731, align 4, !dbg !10590
  br label %av_clip_uintp2_c.exit746, !dbg !10590

av_clip_uintp2_c.exit746:                         ; preds = %if.then.i744, %if.else.i745
  %177 = load i32, i32* %retval.i731, align 4, !dbg !10591
  %conv246 = trunc i32 %177 to i16, !dbg !10573
  %178 = load i32, i32* %x, align 4, !dbg !10592
  %mul247 = mul nsw i32 %178, 2, !dbg !10593
  %add248 = add nsw i32 %mul247, 1, !dbg !10594
  %idxprom249 = sext i32 %add248 to i64, !dbg !10595
  %179 = load i16*, i16** %yuv0, align 8, !dbg !10595
  %arrayidx250 = getelementptr inbounds i16, i16* %179, i64 %idxprom249, !dbg !10595
  store i16 %conv246, i16* %arrayidx250, align 2, !dbg !10596
  %180 = load i32, i32* %diff, align 4, !dbg !10597
  %mul251 = mul nsw i32 %180, 7, !dbg !10598
  %add252 = add nsw i32 %mul251, 8, !dbg !10599
  %shr253 = ashr i32 %add252, 4, !dbg !10600
  %181 = load i32, i32* %x, align 4, !dbg !10601
  %mul254 = mul nsw i32 %181, 2, !dbg !10602
  %add255 = add nsw i32 %mul254, 2, !dbg !10603
  %idxprom256 = sext i32 %add255 to i64, !dbg !10604
  %182 = load i32, i32* %y, align 4, !dbg !10605
  %and257 = and i32 %182, 0, !dbg !10606
  %idxprom258 = sext i32 %and257 to i64, !dbg !10604
  %183 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10604
  %arrayidx259 = getelementptr inbounds [2 x i32*], [2 x i32*]* %183, i64 0, !dbg !10604
  %arrayidx260 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx259, i64 0, i64 %idxprom258, !dbg !10604
  %184 = load i32*, i32** %arrayidx260, align 8, !dbg !10604
  %arrayidx261 = getelementptr inbounds i32, i32* %184, i64 %idxprom256, !dbg !10604
  %185 = load i32, i32* %arrayidx261, align 4, !dbg !10607
  %add262 = add nsw i32 %185, %shr253, !dbg !10607
  store i32 %add262, i32* %arrayidx261, align 4, !dbg !10607
  %186 = load i32, i32* %diff, align 4, !dbg !10608
  %mul263 = mul nsw i32 %186, 3, !dbg !10609
  %add264 = add nsw i32 %mul263, 8, !dbg !10610
  %shr265 = ashr i32 %add264, 4, !dbg !10611
  %187 = load i32, i32* %x, align 4, !dbg !10612
  %mul266 = mul nsw i32 %187, 2, !dbg !10613
  %add267 = add nsw i32 %mul266, 0, !dbg !10614
  %idxprom268 = sext i32 %add267 to i64, !dbg !10615
  %188 = load i32, i32* %y, align 4, !dbg !10616
  %and269 = and i32 %188, 0, !dbg !10617
  %tobool270 = icmp ne i32 %and269, 0, !dbg !10618
  %lnot271 = xor i1 %tobool270, true, !dbg !10618
  %lnot.ext272 = zext i1 %lnot271 to i32, !dbg !10618
  %idxprom273 = sext i32 %lnot.ext272 to i64, !dbg !10615
  %189 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10615
  %arrayidx274 = getelementptr inbounds [2 x i32*], [2 x i32*]* %189, i64 0, !dbg !10615
  %arrayidx275 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx274, i64 0, i64 %idxprom273, !dbg !10615
  %190 = load i32*, i32** %arrayidx275, align 8, !dbg !10615
  %arrayidx276 = getelementptr inbounds i32, i32* %190, i64 %idxprom268, !dbg !10615
  %191 = load i32, i32* %arrayidx276, align 4, !dbg !10619
  %add277 = add nsw i32 %191, %shr265, !dbg !10619
  store i32 %add277, i32* %arrayidx276, align 4, !dbg !10619
  %192 = load i32, i32* %diff, align 4, !dbg !10620
  %mul278 = mul nsw i32 %192, 5, !dbg !10621
  %add279 = add nsw i32 %mul278, 8, !dbg !10622
  %shr280 = ashr i32 %add279, 4, !dbg !10623
  %193 = load i32, i32* %x, align 4, !dbg !10624
  %mul281 = mul nsw i32 %193, 2, !dbg !10625
  %add282 = add nsw i32 %mul281, 1, !dbg !10626
  %idxprom283 = sext i32 %add282 to i64, !dbg !10627
  %194 = load i32, i32* %y, align 4, !dbg !10628
  %and284 = and i32 %194, 0, !dbg !10629
  %tobool285 = icmp ne i32 %and284, 0, !dbg !10630
  %lnot286 = xor i1 %tobool285, true, !dbg !10630
  %lnot.ext287 = zext i1 %lnot286 to i32, !dbg !10630
  %idxprom288 = sext i32 %lnot.ext287 to i64, !dbg !10627
  %195 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10627
  %arrayidx289 = getelementptr inbounds [2 x i32*], [2 x i32*]* %195, i64 0, !dbg !10627
  %arrayidx290 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx289, i64 0, i64 %idxprom288, !dbg !10627
  %196 = load i32*, i32** %arrayidx290, align 8, !dbg !10627
  %arrayidx291 = getelementptr inbounds i32, i32* %196, i64 %idxprom283, !dbg !10627
  %197 = load i32, i32* %arrayidx291, align 4, !dbg !10631
  %add292 = add nsw i32 %197, %shr280, !dbg !10631
  store i32 %add292, i32* %arrayidx291, align 4, !dbg !10631
  %198 = load i32, i32* %diff, align 4, !dbg !10632
  %mul293 = mul nsw i32 %198, 1, !dbg !10633
  %add294 = add nsw i32 %mul293, 8, !dbg !10634
  %shr295 = ashr i32 %add294, 4, !dbg !10635
  %199 = load i32, i32* %x, align 4, !dbg !10636
  %mul296 = mul nsw i32 %199, 2, !dbg !10637
  %add297 = add nsw i32 %mul296, 2, !dbg !10638
  %idxprom298 = sext i32 %add297 to i64, !dbg !10639
  %200 = load i32, i32* %y, align 4, !dbg !10640
  %and299 = and i32 %200, 0, !dbg !10641
  %tobool300 = icmp ne i32 %and299, 0, !dbg !10642
  %lnot301 = xor i1 %tobool300, true, !dbg !10642
  %lnot.ext302 = zext i1 %lnot301 to i32, !dbg !10642
  %idxprom303 = sext i32 %lnot.ext302 to i64, !dbg !10639
  %201 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10639
  %arrayidx304 = getelementptr inbounds [2 x i32*], [2 x i32*]* %201, i64 0, !dbg !10639
  %arrayidx305 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx304, i64 0, i64 %idxprom303, !dbg !10639
  %202 = load i32*, i32** %arrayidx305, align 8, !dbg !10639
  %arrayidx306 = getelementptr inbounds i32, i32* %202, i64 %idxprom298, !dbg !10639
  %203 = load i32, i32* %arrayidx306, align 4, !dbg !10643
  %add307 = add nsw i32 %203, %shr295, !dbg !10643
  store i32 %add307, i32* %arrayidx306, align 4, !dbg !10643
  %204 = load i32, i32* %x, align 4, !dbg !10644
  %mul308 = mul nsw i32 %204, 2, !dbg !10645
  %add309 = add nsw i32 %mul308, 1, !dbg !10646
  %idxprom310 = sext i32 %add309 to i64, !dbg !10647
  %205 = load i32, i32* %y, align 4, !dbg !10648
  %and311 = and i32 %205, 0, !dbg !10649
  %idxprom312 = sext i32 %and311 to i64, !dbg !10647
  %206 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10647
  %arrayidx313 = getelementptr inbounds [2 x i32*], [2 x i32*]* %206, i64 0, !dbg !10647
  %arrayidx314 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx313, i64 0, i64 %idxprom312, !dbg !10647
  %207 = load i32*, i32** %arrayidx314, align 8, !dbg !10647
  %arrayidx315 = getelementptr inbounds i32, i32* %207, i64 %idxprom310, !dbg !10647
  store i32 262144, i32* %arrayidx315, align 4, !dbg !10650
  %208 = load i32, i32* %r10, align 4, !dbg !10651
  %209 = load i32, i32* %cry, align 4, !dbg !10652
  %mul316 = mul nsw i32 %208, %209, !dbg !10653
  %210 = load i32, i32* %g10, align 4, !dbg !10654
  %211 = load i32, i32* %cgy, align 4, !dbg !10655
  %mul317 = mul nsw i32 %210, %211, !dbg !10656
  %add318 = add nsw i32 %mul316, %mul317, !dbg !10657
  %212 = load i32, i32* %b10, align 4, !dbg !10658
  %213 = load i32, i32* %cby, align 4, !dbg !10659
  %mul319 = mul nsw i32 %212, %213, !dbg !10660
  %add320 = add nsw i32 %add318, %mul319, !dbg !10661
  %214 = load i32, i32* %x, align 4, !dbg !10662
  %mul321 = mul nsw i32 %214, 2, !dbg !10663
  %add322 = add nsw i32 %mul321, 0, !dbg !10664
  %idxprom323 = sext i32 %add322 to i64, !dbg !10665
  %215 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10665
  %arrayidx324 = getelementptr inbounds [2 x i32*], [2 x i32*]* %215, i64 0, !dbg !10665
  %arrayidx325 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx324, i64 0, i64 1, !dbg !10665
  %216 = load i32*, i32** %arrayidx325, align 8, !dbg !10665
  %arrayidx326 = getelementptr inbounds i32, i32* %216, i64 %idxprom323, !dbg !10665
  %217 = load i32, i32* %arrayidx326, align 4, !dbg !10665
  %add327 = add nsw i32 %add320, %217, !dbg !10666
  store i32 %add327, i32* %y10, align 4, !dbg !10667
  %218 = load i32, i32* %y10, align 4, !dbg !10668
  %219 = load i32, i32* %mask, align 4, !dbg !10669
  %and328 = and i32 %218, %219, !dbg !10670
  %sub329 = sub i32 %and328, 262144, !dbg !10671
  store i32 %sub329, i32* %diff, align 4, !dbg !10672
  %220 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !10673
  %arrayidx330 = getelementptr inbounds i16, i16* %220, i64 0, !dbg !10673
  %221 = load i16, i16* %arrayidx330, align 2, !dbg !10673
  %conv331 = sext i16 %221 to i32, !dbg !10673
  %222 = load i32, i32* %y10, align 4, !dbg !10674
  %shr332 = ashr i32 %222, 19, !dbg !10675
  %add333 = add nsw i32 %conv331, %shr332, !dbg !10676
  store i32 %add333, i32* %a.addr.i716, align 4, !dbg !10677
  store i32 10, i32* %p.addr.i717, align 4, !dbg !10677
  %223 = load i32, i32* %a.addr.i716, align 4, !dbg !10678
  %224 = load i32, i32* %p.addr.i717, align 4, !dbg !10679
  %shl.i718 = shl i32 1, %224, !dbg !10680
  %sub.i719 = sub nsw i32 %shl.i718, 1, !dbg !10681
  %neg.i720 = xor i32 %sub.i719, -1, !dbg !10682
  %and.i721 = and i32 %223, %neg.i720, !dbg !10683
  %tobool.i722 = icmp ne i32 %and.i721, 0, !dbg !10683
  br i1 %tobool.i722, label %if.then.i728, label %if.else.i729, !dbg !10684

if.then.i728:                                     ; preds = %av_clip_uintp2_c.exit746
  %225 = load i32, i32* %a.addr.i716, align 4, !dbg !10685
  %neg1.i723 = xor i32 %225, -1, !dbg !10686
  %shr.i724 = ashr i32 %neg1.i723, 31, !dbg !10687
  %226 = load i32, i32* %p.addr.i717, align 4, !dbg !10688
  %shl2.i725 = shl i32 1, %226, !dbg !10689
  %sub3.i726 = sub nsw i32 %shl2.i725, 1, !dbg !10690
  %and4.i727 = and i32 %shr.i724, %sub3.i726, !dbg !10691
  store i32 %and4.i727, i32* %retval.i715, align 4, !dbg !10692
  br label %av_clip_uintp2_c.exit730, !dbg !10692

if.else.i729:                                     ; preds = %av_clip_uintp2_c.exit746
  %227 = load i32, i32* %a.addr.i716, align 4, !dbg !10693
  store i32 %227, i32* %retval.i715, align 4, !dbg !10694
  br label %av_clip_uintp2_c.exit730, !dbg !10694

av_clip_uintp2_c.exit730:                         ; preds = %if.then.i728, %if.else.i729
  %228 = load i32, i32* %retval.i715, align 4, !dbg !10695
  %conv335 = trunc i32 %228 to i16, !dbg !10677
  %229 = load i32, i32* %x, align 4, !dbg !10696
  %mul336 = mul nsw i32 %229, 2, !dbg !10697
  %add337 = add nsw i32 %mul336, 0, !dbg !10698
  %conv338 = sext i32 %add337 to i64, !dbg !10696
  %230 = load i64, i64* %s0, align 8, !dbg !10699
  %add339 = add nsw i64 %conv338, %230, !dbg !10700
  %231 = load i16*, i16** %yuv0, align 8, !dbg !10701
  %arrayidx340 = getelementptr inbounds i16, i16* %231, i64 %add339, !dbg !10701
  store i16 %conv335, i16* %arrayidx340, align 2, !dbg !10702
  %232 = load i32, i32* %diff, align 4, !dbg !10703
  %mul341 = mul nsw i32 %232, 7, !dbg !10704
  %add342 = add nsw i32 %mul341, 8, !dbg !10705
  %shr343 = ashr i32 %add342, 4, !dbg !10706
  %233 = load i32, i32* %x, align 4, !dbg !10707
  %mul344 = mul nsw i32 %233, 2, !dbg !10708
  %add345 = add nsw i32 %mul344, 1, !dbg !10709
  %idxprom346 = sext i32 %add345 to i64, !dbg !10710
  %234 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10710
  %arrayidx347 = getelementptr inbounds [2 x i32*], [2 x i32*]* %234, i64 0, !dbg !10710
  %arrayidx348 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx347, i64 0, i64 1, !dbg !10710
  %235 = load i32*, i32** %arrayidx348, align 8, !dbg !10710
  %arrayidx349 = getelementptr inbounds i32, i32* %235, i64 %idxprom346, !dbg !10710
  %236 = load i32, i32* %arrayidx349, align 4, !dbg !10711
  %add350 = add nsw i32 %236, %shr343, !dbg !10711
  store i32 %add350, i32* %arrayidx349, align 4, !dbg !10711
  %237 = load i32, i32* %diff, align 4, !dbg !10712
  %mul351 = mul nsw i32 %237, 3, !dbg !10713
  %add352 = add nsw i32 %mul351, 8, !dbg !10714
  %shr353 = ashr i32 %add352, 4, !dbg !10715
  %238 = load i32, i32* %x, align 4, !dbg !10716
  %mul354 = mul nsw i32 %238, 2, !dbg !10717
  %sub355 = sub nsw i32 %mul354, 1, !dbg !10718
  %idxprom356 = sext i32 %sub355 to i64, !dbg !10719
  %239 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10719
  %arrayidx357 = getelementptr inbounds [2 x i32*], [2 x i32*]* %239, i64 0, !dbg !10719
  %arrayidx358 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx357, i64 0, i64 0, !dbg !10719
  %240 = load i32*, i32** %arrayidx358, align 8, !dbg !10719
  %arrayidx359 = getelementptr inbounds i32, i32* %240, i64 %idxprom356, !dbg !10719
  %241 = load i32, i32* %arrayidx359, align 4, !dbg !10720
  %add360 = add nsw i32 %241, %shr353, !dbg !10720
  store i32 %add360, i32* %arrayidx359, align 4, !dbg !10720
  %242 = load i32, i32* %diff, align 4, !dbg !10721
  %mul361 = mul nsw i32 %242, 5, !dbg !10722
  %add362 = add nsw i32 %mul361, 8, !dbg !10723
  %shr363 = ashr i32 %add362, 4, !dbg !10724
  %243 = load i32, i32* %x, align 4, !dbg !10725
  %mul364 = mul nsw i32 %243, 2, !dbg !10726
  %add365 = add nsw i32 %mul364, 0, !dbg !10727
  %idxprom366 = sext i32 %add365 to i64, !dbg !10728
  %244 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10728
  %arrayidx367 = getelementptr inbounds [2 x i32*], [2 x i32*]* %244, i64 0, !dbg !10728
  %arrayidx368 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx367, i64 0, i64 0, !dbg !10728
  %245 = load i32*, i32** %arrayidx368, align 8, !dbg !10728
  %arrayidx369 = getelementptr inbounds i32, i32* %245, i64 %idxprom366, !dbg !10728
  %246 = load i32, i32* %arrayidx369, align 4, !dbg !10729
  %add370 = add nsw i32 %246, %shr363, !dbg !10729
  store i32 %add370, i32* %arrayidx369, align 4, !dbg !10729
  %247 = load i32, i32* %diff, align 4, !dbg !10730
  %mul371 = mul nsw i32 %247, 1, !dbg !10731
  %add372 = add nsw i32 %mul371, 8, !dbg !10732
  %shr373 = ashr i32 %add372, 4, !dbg !10733
  %248 = load i32, i32* %x, align 4, !dbg !10734
  %mul374 = mul nsw i32 %248, 2, !dbg !10735
  %add375 = add nsw i32 %mul374, 1, !dbg !10736
  %idxprom376 = sext i32 %add375 to i64, !dbg !10737
  %249 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10737
  %arrayidx377 = getelementptr inbounds [2 x i32*], [2 x i32*]* %249, i64 0, !dbg !10737
  %arrayidx378 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx377, i64 0, i64 0, !dbg !10737
  %250 = load i32*, i32** %arrayidx378, align 8, !dbg !10737
  %arrayidx379 = getelementptr inbounds i32, i32* %250, i64 %idxprom376, !dbg !10737
  %251 = load i32, i32* %arrayidx379, align 4, !dbg !10738
  %add380 = add nsw i32 %251, %shr373, !dbg !10738
  store i32 %add380, i32* %arrayidx379, align 4, !dbg !10738
  %252 = load i32, i32* %x, align 4, !dbg !10739
  %mul381 = mul nsw i32 %252, 2, !dbg !10740
  %add382 = add nsw i32 %mul381, 0, !dbg !10741
  %idxprom383 = sext i32 %add382 to i64, !dbg !10742
  %253 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10742
  %arrayidx384 = getelementptr inbounds [2 x i32*], [2 x i32*]* %253, i64 0, !dbg !10742
  %arrayidx385 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx384, i64 0, i64 1, !dbg !10742
  %254 = load i32*, i32** %arrayidx385, align 8, !dbg !10742
  %arrayidx386 = getelementptr inbounds i32, i32* %254, i64 %idxprom383, !dbg !10742
  store i32 262144, i32* %arrayidx386, align 4, !dbg !10743
  %255 = load i32, i32* %r11, align 4, !dbg !10744
  %256 = load i32, i32* %cry, align 4, !dbg !10745
  %mul387 = mul nsw i32 %255, %256, !dbg !10746
  %257 = load i32, i32* %g11, align 4, !dbg !10747
  %258 = load i32, i32* %cgy, align 4, !dbg !10748
  %mul388 = mul nsw i32 %257, %258, !dbg !10749
  %add389 = add nsw i32 %mul387, %mul388, !dbg !10750
  %259 = load i32, i32* %b11, align 4, !dbg !10751
  %260 = load i32, i32* %cby, align 4, !dbg !10752
  %mul390 = mul nsw i32 %259, %260, !dbg !10753
  %add391 = add nsw i32 %add389, %mul390, !dbg !10754
  %261 = load i32, i32* %x, align 4, !dbg !10755
  %mul392 = mul nsw i32 %261, 2, !dbg !10756
  %add393 = add nsw i32 %mul392, 1, !dbg !10757
  %idxprom394 = sext i32 %add393 to i64, !dbg !10758
  %262 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10758
  %arrayidx395 = getelementptr inbounds [2 x i32*], [2 x i32*]* %262, i64 0, !dbg !10758
  %arrayidx396 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx395, i64 0, i64 1, !dbg !10758
  %263 = load i32*, i32** %arrayidx396, align 8, !dbg !10758
  %arrayidx397 = getelementptr inbounds i32, i32* %263, i64 %idxprom394, !dbg !10758
  %264 = load i32, i32* %arrayidx397, align 4, !dbg !10758
  %add398 = add nsw i32 %add391, %264, !dbg !10759
  store i32 %add398, i32* %y11, align 4, !dbg !10760
  %265 = load i32, i32* %y11, align 4, !dbg !10761
  %266 = load i32, i32* %mask, align 4, !dbg !10762
  %and399 = and i32 %265, %266, !dbg !10763
  %sub400 = sub i32 %and399, 262144, !dbg !10764
  store i32 %sub400, i32* %diff, align 4, !dbg !10765
  %267 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !10766
  %arrayidx401 = getelementptr inbounds i16, i16* %267, i64 0, !dbg !10766
  %268 = load i16, i16* %arrayidx401, align 2, !dbg !10766
  %conv402 = sext i16 %268 to i32, !dbg !10766
  %269 = load i32, i32* %y11, align 4, !dbg !10767
  %shr403 = ashr i32 %269, 19, !dbg !10768
  %add404 = add nsw i32 %conv402, %shr403, !dbg !10769
  store i32 %add404, i32* %a.addr.i700, align 4, !dbg !10770
  store i32 10, i32* %p.addr.i701, align 4, !dbg !10770
  %270 = load i32, i32* %a.addr.i700, align 4, !dbg !10771
  %271 = load i32, i32* %p.addr.i701, align 4, !dbg !10772
  %shl.i702 = shl i32 1, %271, !dbg !10773
  %sub.i703 = sub nsw i32 %shl.i702, 1, !dbg !10774
  %neg.i704 = xor i32 %sub.i703, -1, !dbg !10775
  %and.i705 = and i32 %270, %neg.i704, !dbg !10776
  %tobool.i706 = icmp ne i32 %and.i705, 0, !dbg !10776
  br i1 %tobool.i706, label %if.then.i712, label %if.else.i713, !dbg !10777

if.then.i712:                                     ; preds = %av_clip_uintp2_c.exit730
  %272 = load i32, i32* %a.addr.i700, align 4, !dbg !10778
  %neg1.i707 = xor i32 %272, -1, !dbg !10779
  %shr.i708 = ashr i32 %neg1.i707, 31, !dbg !10780
  %273 = load i32, i32* %p.addr.i701, align 4, !dbg !10781
  %shl2.i709 = shl i32 1, %273, !dbg !10782
  %sub3.i710 = sub nsw i32 %shl2.i709, 1, !dbg !10783
  %and4.i711 = and i32 %shr.i708, %sub3.i710, !dbg !10784
  store i32 %and4.i711, i32* %retval.i699, align 4, !dbg !10785
  br label %av_clip_uintp2_c.exit714, !dbg !10785

if.else.i713:                                     ; preds = %av_clip_uintp2_c.exit730
  %274 = load i32, i32* %a.addr.i700, align 4, !dbg !10786
  store i32 %274, i32* %retval.i699, align 4, !dbg !10787
  br label %av_clip_uintp2_c.exit714, !dbg !10787

av_clip_uintp2_c.exit714:                         ; preds = %if.then.i712, %if.else.i713
  %275 = load i32, i32* %retval.i699, align 4, !dbg !10788
  %conv406 = trunc i32 %275 to i16, !dbg !10770
  %276 = load i32, i32* %x, align 4, !dbg !10789
  %mul407 = mul nsw i32 %276, 2, !dbg !10790
  %add408 = add nsw i32 %mul407, 1, !dbg !10791
  %conv409 = sext i32 %add408 to i64, !dbg !10789
  %277 = load i64, i64* %s0, align 8, !dbg !10792
  %add410 = add nsw i64 %conv409, %277, !dbg !10793
  %278 = load i16*, i16** %yuv0, align 8, !dbg !10794
  %arrayidx411 = getelementptr inbounds i16, i16* %278, i64 %add410, !dbg !10794
  store i16 %conv406, i16* %arrayidx411, align 2, !dbg !10795
  %279 = load i32, i32* %diff, align 4, !dbg !10796
  %mul412 = mul nsw i32 %279, 7, !dbg !10797
  %add413 = add nsw i32 %mul412, 8, !dbg !10798
  %shr414 = ashr i32 %add413, 4, !dbg !10799
  %280 = load i32, i32* %x, align 4, !dbg !10800
  %mul415 = mul nsw i32 %280, 2, !dbg !10801
  %add416 = add nsw i32 %mul415, 2, !dbg !10802
  %idxprom417 = sext i32 %add416 to i64, !dbg !10803
  %281 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10803
  %arrayidx418 = getelementptr inbounds [2 x i32*], [2 x i32*]* %281, i64 0, !dbg !10803
  %arrayidx419 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx418, i64 0, i64 1, !dbg !10803
  %282 = load i32*, i32** %arrayidx419, align 8, !dbg !10803
  %arrayidx420 = getelementptr inbounds i32, i32* %282, i64 %idxprom417, !dbg !10803
  %283 = load i32, i32* %arrayidx420, align 4, !dbg !10804
  %add421 = add nsw i32 %283, %shr414, !dbg !10804
  store i32 %add421, i32* %arrayidx420, align 4, !dbg !10804
  %284 = load i32, i32* %diff, align 4, !dbg !10805
  %mul422 = mul nsw i32 %284, 3, !dbg !10806
  %add423 = add nsw i32 %mul422, 8, !dbg !10807
  %shr424 = ashr i32 %add423, 4, !dbg !10808
  %285 = load i32, i32* %x, align 4, !dbg !10809
  %mul425 = mul nsw i32 %285, 2, !dbg !10810
  %add426 = add nsw i32 %mul425, 0, !dbg !10811
  %idxprom427 = sext i32 %add426 to i64, !dbg !10812
  %286 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10812
  %arrayidx428 = getelementptr inbounds [2 x i32*], [2 x i32*]* %286, i64 0, !dbg !10812
  %arrayidx429 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx428, i64 0, i64 0, !dbg !10812
  %287 = load i32*, i32** %arrayidx429, align 8, !dbg !10812
  %arrayidx430 = getelementptr inbounds i32, i32* %287, i64 %idxprom427, !dbg !10812
  %288 = load i32, i32* %arrayidx430, align 4, !dbg !10813
  %add431 = add nsw i32 %288, %shr424, !dbg !10813
  store i32 %add431, i32* %arrayidx430, align 4, !dbg !10813
  %289 = load i32, i32* %diff, align 4, !dbg !10814
  %mul432 = mul nsw i32 %289, 5, !dbg !10815
  %add433 = add nsw i32 %mul432, 8, !dbg !10816
  %shr434 = ashr i32 %add433, 4, !dbg !10817
  %290 = load i32, i32* %x, align 4, !dbg !10818
  %mul435 = mul nsw i32 %290, 2, !dbg !10819
  %add436 = add nsw i32 %mul435, 1, !dbg !10820
  %idxprom437 = sext i32 %add436 to i64, !dbg !10821
  %291 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10821
  %arrayidx438 = getelementptr inbounds [2 x i32*], [2 x i32*]* %291, i64 0, !dbg !10821
  %arrayidx439 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx438, i64 0, i64 0, !dbg !10821
  %292 = load i32*, i32** %arrayidx439, align 8, !dbg !10821
  %arrayidx440 = getelementptr inbounds i32, i32* %292, i64 %idxprom437, !dbg !10821
  %293 = load i32, i32* %arrayidx440, align 4, !dbg !10822
  %add441 = add nsw i32 %293, %shr434, !dbg !10822
  store i32 %add441, i32* %arrayidx440, align 4, !dbg !10822
  %294 = load i32, i32* %diff, align 4, !dbg !10823
  %mul442 = mul nsw i32 %294, 1, !dbg !10824
  %add443 = add nsw i32 %mul442, 8, !dbg !10825
  %shr444 = ashr i32 %add443, 4, !dbg !10826
  %295 = load i32, i32* %x, align 4, !dbg !10827
  %mul445 = mul nsw i32 %295, 2, !dbg !10828
  %add446 = add nsw i32 %mul445, 2, !dbg !10829
  %idxprom447 = sext i32 %add446 to i64, !dbg !10830
  %296 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10830
  %arrayidx448 = getelementptr inbounds [2 x i32*], [2 x i32*]* %296, i64 0, !dbg !10830
  %arrayidx449 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx448, i64 0, i64 0, !dbg !10830
  %297 = load i32*, i32** %arrayidx449, align 8, !dbg !10830
  %arrayidx450 = getelementptr inbounds i32, i32* %297, i64 %idxprom447, !dbg !10830
  %298 = load i32, i32* %arrayidx450, align 4, !dbg !10831
  %add451 = add nsw i32 %298, %shr444, !dbg !10831
  store i32 %add451, i32* %arrayidx450, align 4, !dbg !10831
  %299 = load i32, i32* %x, align 4, !dbg !10832
  %mul452 = mul nsw i32 %299, 2, !dbg !10833
  %add453 = add nsw i32 %mul452, 1, !dbg !10834
  %idxprom454 = sext i32 %add453 to i64, !dbg !10835
  %300 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10835
  %arrayidx455 = getelementptr inbounds [2 x i32*], [2 x i32*]* %300, i64 0, !dbg !10835
  %arrayidx456 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx455, i64 0, i64 1, !dbg !10835
  %301 = load i32*, i32** %arrayidx456, align 8, !dbg !10835
  %arrayidx457 = getelementptr inbounds i32, i32* %301, i64 %idxprom454, !dbg !10835
  store i32 262144, i32* %arrayidx457, align 4, !dbg !10836
  %302 = load i32, i32* %r00, align 4, !dbg !10837
  %303 = load i32, i32* %r01, align 4, !dbg !10838
  %add458 = add nsw i32 %302, %303, !dbg !10839
  %304 = load i32, i32* %r10, align 4, !dbg !10840
  %add459 = add nsw i32 %add458, %304, !dbg !10841
  %305 = load i32, i32* %r11, align 4, !dbg !10842
  %add460 = add nsw i32 %add459, %305, !dbg !10843
  %add461 = add nsw i32 %add460, 2, !dbg !10844
  %shr462 = ashr i32 %add461, 2, !dbg !10845
  %306 = load i32, i32* %cru, align 4, !dbg !10846
  %mul463 = mul nsw i32 %shr462, %306, !dbg !10847
  %307 = load i32, i32* %g00, align 4, !dbg !10848
  %308 = load i32, i32* %g01, align 4, !dbg !10849
  %add464 = add nsw i32 %307, %308, !dbg !10850
  %309 = load i32, i32* %g10, align 4, !dbg !10851
  %add465 = add nsw i32 %add464, %309, !dbg !10852
  %310 = load i32, i32* %g11, align 4, !dbg !10853
  %add466 = add nsw i32 %add465, %310, !dbg !10854
  %add467 = add nsw i32 %add466, 2, !dbg !10855
  %shr468 = ashr i32 %add467, 2, !dbg !10856
  %311 = load i32, i32* %cgu, align 4, !dbg !10857
  %mul469 = mul nsw i32 %shr468, %311, !dbg !10858
  %add470 = add nsw i32 %mul463, %mul469, !dbg !10859
  %312 = load i32, i32* %b00, align 4, !dbg !10860
  %313 = load i32, i32* %b01, align 4, !dbg !10861
  %add471 = add nsw i32 %312, %313, !dbg !10862
  %314 = load i32, i32* %b10, align 4, !dbg !10863
  %add472 = add nsw i32 %add471, %314, !dbg !10864
  %315 = load i32, i32* %b11, align 4, !dbg !10865
  %add473 = add nsw i32 %add472, %315, !dbg !10866
  %add474 = add nsw i32 %add473, 2, !dbg !10867
  %shr475 = ashr i32 %add474, 2, !dbg !10868
  %316 = load i32, i32* %cburv, align 4, !dbg !10869
  %mul476 = mul nsw i32 %shr475, %316, !dbg !10870
  %add477 = add nsw i32 %add470, %mul476, !dbg !10871
  %317 = load i32, i32* %x, align 4, !dbg !10872
  %idxprom478 = sext i32 %317 to i64, !dbg !10873
  %318 = load i32, i32* %y, align 4, !dbg !10874
  %and479 = and i32 %318, 1, !dbg !10875
  %idxprom480 = sext i32 %and479 to i64, !dbg !10873
  %319 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10873
  %arrayidx481 = getelementptr inbounds [2 x i32*], [2 x i32*]* %319, i64 1, !dbg !10873
  %arrayidx482 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx481, i64 0, i64 %idxprom480, !dbg !10873
  %320 = load i32*, i32** %arrayidx482, align 8, !dbg !10873
  %arrayidx483 = getelementptr inbounds i32, i32* %320, i64 %idxprom478, !dbg !10873
  %321 = load i32, i32* %arrayidx483, align 4, !dbg !10873
  %add484 = add nsw i32 %add477, %321, !dbg !10876
  store i32 %add484, i32* %u, align 4, !dbg !10877
  %322 = load i32, i32* %u, align 4, !dbg !10878
  %323 = load i32, i32* %mask, align 4, !dbg !10879
  %and485 = and i32 %322, %323, !dbg !10880
  %sub486 = sub i32 %and485, 262144, !dbg !10881
  store i32 %sub486, i32* %diff, align 4, !dbg !10882
  %324 = load i32, i32* %u, align 4, !dbg !10883
  %shr487 = ashr i32 %324, 19, !dbg !10884
  %add488 = add nsw i32 512, %shr487, !dbg !10885
  store i32 %add488, i32* %a.addr.i684, align 4, !dbg !10886
  store i32 10, i32* %p.addr.i685, align 4, !dbg !10886
  %325 = load i32, i32* %a.addr.i684, align 4, !dbg !10887
  %326 = load i32, i32* %p.addr.i685, align 4, !dbg !10888
  %shl.i686 = shl i32 1, %326, !dbg !10889
  %sub.i687 = sub nsw i32 %shl.i686, 1, !dbg !10890
  %neg.i688 = xor i32 %sub.i687, -1, !dbg !10891
  %and.i689 = and i32 %325, %neg.i688, !dbg !10892
  %tobool.i690 = icmp ne i32 %and.i689, 0, !dbg !10892
  br i1 %tobool.i690, label %if.then.i696, label %if.else.i697, !dbg !10893

if.then.i696:                                     ; preds = %av_clip_uintp2_c.exit714
  %327 = load i32, i32* %a.addr.i684, align 4, !dbg !10894
  %neg1.i691 = xor i32 %327, -1, !dbg !10895
  %shr.i692 = ashr i32 %neg1.i691, 31, !dbg !10896
  %328 = load i32, i32* %p.addr.i685, align 4, !dbg !10897
  %shl2.i693 = shl i32 1, %328, !dbg !10898
  %sub3.i694 = sub nsw i32 %shl2.i693, 1, !dbg !10899
  %and4.i695 = and i32 %shr.i692, %sub3.i694, !dbg !10900
  store i32 %and4.i695, i32* %retval.i683, align 4, !dbg !10901
  br label %av_clip_uintp2_c.exit698, !dbg !10901

if.else.i697:                                     ; preds = %av_clip_uintp2_c.exit714
  %329 = load i32, i32* %a.addr.i684, align 4, !dbg !10902
  store i32 %329, i32* %retval.i683, align 4, !dbg !10903
  br label %av_clip_uintp2_c.exit698, !dbg !10903

av_clip_uintp2_c.exit698:                         ; preds = %if.then.i696, %if.else.i697
  %330 = load i32, i32* %retval.i683, align 4, !dbg !10904
  %conv490 = trunc i32 %330 to i16, !dbg !10886
  %331 = load i32, i32* %x, align 4, !dbg !10905
  %idxprom491 = sext i32 %331 to i64, !dbg !10906
  %332 = load i16*, i16** %yuv1, align 8, !dbg !10906
  %arrayidx492 = getelementptr inbounds i16, i16* %332, i64 %idxprom491, !dbg !10906
  store i16 %conv490, i16* %arrayidx492, align 2, !dbg !10907
  %333 = load i32, i32* %diff, align 4, !dbg !10908
  %mul493 = mul nsw i32 %333, 7, !dbg !10909
  %add494 = add nsw i32 %mul493, 8, !dbg !10910
  %shr495 = ashr i32 %add494, 4, !dbg !10911
  %334 = load i32, i32* %x, align 4, !dbg !10912
  %add496 = add nsw i32 %334, 1, !dbg !10913
  %idxprom497 = sext i32 %add496 to i64, !dbg !10914
  %335 = load i32, i32* %y, align 4, !dbg !10915
  %and498 = and i32 %335, 1, !dbg !10916
  %idxprom499 = sext i32 %and498 to i64, !dbg !10914
  %336 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10914
  %arrayidx500 = getelementptr inbounds [2 x i32*], [2 x i32*]* %336, i64 1, !dbg !10914
  %arrayidx501 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx500, i64 0, i64 %idxprom499, !dbg !10914
  %337 = load i32*, i32** %arrayidx501, align 8, !dbg !10914
  %arrayidx502 = getelementptr inbounds i32, i32* %337, i64 %idxprom497, !dbg !10914
  %338 = load i32, i32* %arrayidx502, align 4, !dbg !10917
  %add503 = add nsw i32 %338, %shr495, !dbg !10917
  store i32 %add503, i32* %arrayidx502, align 4, !dbg !10917
  %339 = load i32, i32* %diff, align 4, !dbg !10918
  %mul504 = mul nsw i32 %339, 3, !dbg !10919
  %add505 = add nsw i32 %mul504, 8, !dbg !10920
  %shr506 = ashr i32 %add505, 4, !dbg !10921
  %340 = load i32, i32* %x, align 4, !dbg !10922
  %sub507 = sub nsw i32 %340, 1, !dbg !10923
  %idxprom508 = sext i32 %sub507 to i64, !dbg !10924
  %341 = load i32, i32* %y, align 4, !dbg !10925
  %and509 = and i32 %341, 1, !dbg !10926
  %tobool510 = icmp ne i32 %and509, 0, !dbg !10927
  %lnot511 = xor i1 %tobool510, true, !dbg !10927
  %lnot.ext512 = zext i1 %lnot511 to i32, !dbg !10927
  %idxprom513 = sext i32 %lnot.ext512 to i64, !dbg !10924
  %342 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10924
  %arrayidx514 = getelementptr inbounds [2 x i32*], [2 x i32*]* %342, i64 1, !dbg !10924
  %arrayidx515 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx514, i64 0, i64 %idxprom513, !dbg !10924
  %343 = load i32*, i32** %arrayidx515, align 8, !dbg !10924
  %arrayidx516 = getelementptr inbounds i32, i32* %343, i64 %idxprom508, !dbg !10924
  %344 = load i32, i32* %arrayidx516, align 4, !dbg !10928
  %add517 = add nsw i32 %344, %shr506, !dbg !10928
  store i32 %add517, i32* %arrayidx516, align 4, !dbg !10928
  %345 = load i32, i32* %diff, align 4, !dbg !10929
  %mul518 = mul nsw i32 %345, 5, !dbg !10930
  %add519 = add nsw i32 %mul518, 8, !dbg !10931
  %shr520 = ashr i32 %add519, 4, !dbg !10932
  %346 = load i32, i32* %x, align 4, !dbg !10933
  %add521 = add nsw i32 %346, 0, !dbg !10934
  %idxprom522 = sext i32 %add521 to i64, !dbg !10935
  %347 = load i32, i32* %y, align 4, !dbg !10936
  %and523 = and i32 %347, 1, !dbg !10937
  %tobool524 = icmp ne i32 %and523, 0, !dbg !10938
  %lnot525 = xor i1 %tobool524, true, !dbg !10938
  %lnot.ext526 = zext i1 %lnot525 to i32, !dbg !10938
  %idxprom527 = sext i32 %lnot.ext526 to i64, !dbg !10935
  %348 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10935
  %arrayidx528 = getelementptr inbounds [2 x i32*], [2 x i32*]* %348, i64 1, !dbg !10935
  %arrayidx529 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx528, i64 0, i64 %idxprom527, !dbg !10935
  %349 = load i32*, i32** %arrayidx529, align 8, !dbg !10935
  %arrayidx530 = getelementptr inbounds i32, i32* %349, i64 %idxprom522, !dbg !10935
  %350 = load i32, i32* %arrayidx530, align 4, !dbg !10939
  %add531 = add nsw i32 %350, %shr520, !dbg !10939
  store i32 %add531, i32* %arrayidx530, align 4, !dbg !10939
  %351 = load i32, i32* %diff, align 4, !dbg !10940
  %mul532 = mul nsw i32 %351, 1, !dbg !10941
  %add533 = add nsw i32 %mul532, 8, !dbg !10942
  %shr534 = ashr i32 %add533, 4, !dbg !10943
  %352 = load i32, i32* %x, align 4, !dbg !10944
  %add535 = add nsw i32 %352, 1, !dbg !10945
  %idxprom536 = sext i32 %add535 to i64, !dbg !10946
  %353 = load i32, i32* %y, align 4, !dbg !10947
  %and537 = and i32 %353, 1, !dbg !10948
  %tobool538 = icmp ne i32 %and537, 0, !dbg !10949
  %lnot539 = xor i1 %tobool538, true, !dbg !10949
  %lnot.ext540 = zext i1 %lnot539 to i32, !dbg !10949
  %idxprom541 = sext i32 %lnot.ext540 to i64, !dbg !10946
  %354 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10946
  %arrayidx542 = getelementptr inbounds [2 x i32*], [2 x i32*]* %354, i64 1, !dbg !10946
  %arrayidx543 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx542, i64 0, i64 %idxprom541, !dbg !10946
  %355 = load i32*, i32** %arrayidx543, align 8, !dbg !10946
  %arrayidx544 = getelementptr inbounds i32, i32* %355, i64 %idxprom536, !dbg !10946
  %356 = load i32, i32* %arrayidx544, align 4, !dbg !10950
  %add545 = add nsw i32 %356, %shr534, !dbg !10950
  store i32 %add545, i32* %arrayidx544, align 4, !dbg !10950
  %357 = load i32, i32* %x, align 4, !dbg !10951
  %add546 = add nsw i32 %357, 0, !dbg !10952
  %idxprom547 = sext i32 %add546 to i64, !dbg !10953
  %358 = load i32, i32* %y, align 4, !dbg !10954
  %and548 = and i32 %358, 1, !dbg !10955
  %idxprom549 = sext i32 %and548 to i64, !dbg !10953
  %359 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10953
  %arrayidx550 = getelementptr inbounds [2 x i32*], [2 x i32*]* %359, i64 1, !dbg !10953
  %arrayidx551 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx550, i64 0, i64 %idxprom549, !dbg !10953
  %360 = load i32*, i32** %arrayidx551, align 8, !dbg !10953
  %arrayidx552 = getelementptr inbounds i32, i32* %360, i64 %idxprom547, !dbg !10953
  store i32 262144, i32* %arrayidx552, align 4, !dbg !10956
  %361 = load i32, i32* %r00, align 4, !dbg !10957
  %362 = load i32, i32* %r01, align 4, !dbg !10958
  %add553 = add nsw i32 %361, %362, !dbg !10959
  %363 = load i32, i32* %r10, align 4, !dbg !10960
  %add554 = add nsw i32 %add553, %363, !dbg !10961
  %364 = load i32, i32* %r11, align 4, !dbg !10962
  %add555 = add nsw i32 %add554, %364, !dbg !10963
  %add556 = add nsw i32 %add555, 2, !dbg !10964
  %shr557 = ashr i32 %add556, 2, !dbg !10965
  %365 = load i32, i32* %cburv, align 4, !dbg !10966
  %mul558 = mul nsw i32 %shr557, %365, !dbg !10967
  %366 = load i32, i32* %g00, align 4, !dbg !10968
  %367 = load i32, i32* %g01, align 4, !dbg !10969
  %add559 = add nsw i32 %366, %367, !dbg !10970
  %368 = load i32, i32* %g10, align 4, !dbg !10971
  %add560 = add nsw i32 %add559, %368, !dbg !10972
  %369 = load i32, i32* %g11, align 4, !dbg !10973
  %add561 = add nsw i32 %add560, %369, !dbg !10974
  %add562 = add nsw i32 %add561, 2, !dbg !10975
  %shr563 = ashr i32 %add562, 2, !dbg !10976
  %370 = load i32, i32* %cgv, align 4, !dbg !10977
  %mul564 = mul nsw i32 %shr563, %370, !dbg !10978
  %add565 = add nsw i32 %mul558, %mul564, !dbg !10979
  %371 = load i32, i32* %b00, align 4, !dbg !10980
  %372 = load i32, i32* %b01, align 4, !dbg !10981
  %add566 = add nsw i32 %371, %372, !dbg !10982
  %373 = load i32, i32* %b10, align 4, !dbg !10983
  %add567 = add nsw i32 %add566, %373, !dbg !10984
  %374 = load i32, i32* %b11, align 4, !dbg !10985
  %add568 = add nsw i32 %add567, %374, !dbg !10986
  %add569 = add nsw i32 %add568, 2, !dbg !10987
  %shr570 = ashr i32 %add569, 2, !dbg !10988
  %375 = load i32, i32* %cbv, align 4, !dbg !10989
  %mul571 = mul nsw i32 %shr570, %375, !dbg !10990
  %add572 = add nsw i32 %add565, %mul571, !dbg !10991
  %376 = load i32, i32* %x, align 4, !dbg !10992
  %idxprom573 = sext i32 %376 to i64, !dbg !10993
  %377 = load i32, i32* %y, align 4, !dbg !10994
  %and574 = and i32 %377, 1, !dbg !10995
  %idxprom575 = sext i32 %and574 to i64, !dbg !10993
  %378 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !10993
  %arrayidx576 = getelementptr inbounds [2 x i32*], [2 x i32*]* %378, i64 2, !dbg !10993
  %arrayidx577 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx576, i64 0, i64 %idxprom575, !dbg !10993
  %379 = load i32*, i32** %arrayidx577, align 8, !dbg !10993
  %arrayidx578 = getelementptr inbounds i32, i32* %379, i64 %idxprom573, !dbg !10993
  %380 = load i32, i32* %arrayidx578, align 4, !dbg !10993
  %add579 = add nsw i32 %add572, %380, !dbg !10996
  store i32 %add579, i32* %v, align 4, !dbg !10997
  %381 = load i32, i32* %v, align 4, !dbg !10998
  %382 = load i32, i32* %mask, align 4, !dbg !10999
  %and580 = and i32 %381, %382, !dbg !11000
  %sub581 = sub i32 %and580, 262144, !dbg !11001
  store i32 %sub581, i32* %diff, align 4, !dbg !11002
  %383 = load i32, i32* %v, align 4, !dbg !11003
  %shr582 = ashr i32 %383, 19, !dbg !11004
  %add583 = add nsw i32 512, %shr582, !dbg !11005
  store i32 %add583, i32* %a.addr.i668, align 4, !dbg !11006
  store i32 10, i32* %p.addr.i669, align 4, !dbg !11006
  %384 = load i32, i32* %a.addr.i668, align 4, !dbg !11007
  %385 = load i32, i32* %p.addr.i669, align 4, !dbg !11008
  %shl.i670 = shl i32 1, %385, !dbg !11009
  %sub.i671 = sub nsw i32 %shl.i670, 1, !dbg !11010
  %neg.i672 = xor i32 %sub.i671, -1, !dbg !11011
  %and.i673 = and i32 %384, %neg.i672, !dbg !11012
  %tobool.i674 = icmp ne i32 %and.i673, 0, !dbg !11012
  br i1 %tobool.i674, label %if.then.i680, label %if.else.i681, !dbg !11013

if.then.i680:                                     ; preds = %av_clip_uintp2_c.exit698
  %386 = load i32, i32* %a.addr.i668, align 4, !dbg !11014
  %neg1.i675 = xor i32 %386, -1, !dbg !11015
  %shr.i676 = ashr i32 %neg1.i675, 31, !dbg !11016
  %387 = load i32, i32* %p.addr.i669, align 4, !dbg !11017
  %shl2.i677 = shl i32 1, %387, !dbg !11018
  %sub3.i678 = sub nsw i32 %shl2.i677, 1, !dbg !11019
  %and4.i679 = and i32 %shr.i676, %sub3.i678, !dbg !11020
  store i32 %and4.i679, i32* %retval.i667, align 4, !dbg !11021
  br label %av_clip_uintp2_c.exit682, !dbg !11021

if.else.i681:                                     ; preds = %av_clip_uintp2_c.exit698
  %388 = load i32, i32* %a.addr.i668, align 4, !dbg !11022
  store i32 %388, i32* %retval.i667, align 4, !dbg !11023
  br label %av_clip_uintp2_c.exit682, !dbg !11023

av_clip_uintp2_c.exit682:                         ; preds = %if.then.i680, %if.else.i681
  %389 = load i32, i32* %retval.i667, align 4, !dbg !11024
  %conv585 = trunc i32 %389 to i16, !dbg !11006
  %390 = load i32, i32* %x, align 4, !dbg !11025
  %idxprom586 = sext i32 %390 to i64, !dbg !11026
  %391 = load i16*, i16** %yuv2, align 8, !dbg !11026
  %arrayidx587 = getelementptr inbounds i16, i16* %391, i64 %idxprom586, !dbg !11026
  store i16 %conv585, i16* %arrayidx587, align 2, !dbg !11027
  %392 = load i32, i32* %diff, align 4, !dbg !11028
  %mul588 = mul nsw i32 %392, 7, !dbg !11029
  %add589 = add nsw i32 %mul588, 8, !dbg !11030
  %shr590 = ashr i32 %add589, 4, !dbg !11031
  %393 = load i32, i32* %x, align 4, !dbg !11032
  %add591 = add nsw i32 %393, 1, !dbg !11033
  %idxprom592 = sext i32 %add591 to i64, !dbg !11034
  %394 = load i32, i32* %y, align 4, !dbg !11035
  %and593 = and i32 %394, 1, !dbg !11036
  %idxprom594 = sext i32 %and593 to i64, !dbg !11034
  %395 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11034
  %arrayidx595 = getelementptr inbounds [2 x i32*], [2 x i32*]* %395, i64 2, !dbg !11034
  %arrayidx596 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx595, i64 0, i64 %idxprom594, !dbg !11034
  %396 = load i32*, i32** %arrayidx596, align 8, !dbg !11034
  %arrayidx597 = getelementptr inbounds i32, i32* %396, i64 %idxprom592, !dbg !11034
  %397 = load i32, i32* %arrayidx597, align 4, !dbg !11037
  %add598 = add nsw i32 %397, %shr590, !dbg !11037
  store i32 %add598, i32* %arrayidx597, align 4, !dbg !11037
  %398 = load i32, i32* %diff, align 4, !dbg !11038
  %mul599 = mul nsw i32 %398, 3, !dbg !11039
  %add600 = add nsw i32 %mul599, 8, !dbg !11040
  %shr601 = ashr i32 %add600, 4, !dbg !11041
  %399 = load i32, i32* %x, align 4, !dbg !11042
  %sub602 = sub nsw i32 %399, 1, !dbg !11043
  %idxprom603 = sext i32 %sub602 to i64, !dbg !11044
  %400 = load i32, i32* %y, align 4, !dbg !11045
  %and604 = and i32 %400, 1, !dbg !11046
  %tobool605 = icmp ne i32 %and604, 0, !dbg !11047
  %lnot606 = xor i1 %tobool605, true, !dbg !11047
  %lnot.ext607 = zext i1 %lnot606 to i32, !dbg !11047
  %idxprom608 = sext i32 %lnot.ext607 to i64, !dbg !11044
  %401 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11044
  %arrayidx609 = getelementptr inbounds [2 x i32*], [2 x i32*]* %401, i64 2, !dbg !11044
  %arrayidx610 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx609, i64 0, i64 %idxprom608, !dbg !11044
  %402 = load i32*, i32** %arrayidx610, align 8, !dbg !11044
  %arrayidx611 = getelementptr inbounds i32, i32* %402, i64 %idxprom603, !dbg !11044
  %403 = load i32, i32* %arrayidx611, align 4, !dbg !11048
  %add612 = add nsw i32 %403, %shr601, !dbg !11048
  store i32 %add612, i32* %arrayidx611, align 4, !dbg !11048
  %404 = load i32, i32* %diff, align 4, !dbg !11049
  %mul613 = mul nsw i32 %404, 5, !dbg !11050
  %add614 = add nsw i32 %mul613, 8, !dbg !11051
  %shr615 = ashr i32 %add614, 4, !dbg !11052
  %405 = load i32, i32* %x, align 4, !dbg !11053
  %add616 = add nsw i32 %405, 0, !dbg !11054
  %idxprom617 = sext i32 %add616 to i64, !dbg !11055
  %406 = load i32, i32* %y, align 4, !dbg !11056
  %and618 = and i32 %406, 1, !dbg !11057
  %tobool619 = icmp ne i32 %and618, 0, !dbg !11058
  %lnot620 = xor i1 %tobool619, true, !dbg !11058
  %lnot.ext621 = zext i1 %lnot620 to i32, !dbg !11058
  %idxprom622 = sext i32 %lnot.ext621 to i64, !dbg !11055
  %407 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11055
  %arrayidx623 = getelementptr inbounds [2 x i32*], [2 x i32*]* %407, i64 2, !dbg !11055
  %arrayidx624 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx623, i64 0, i64 %idxprom622, !dbg !11055
  %408 = load i32*, i32** %arrayidx624, align 8, !dbg !11055
  %arrayidx625 = getelementptr inbounds i32, i32* %408, i64 %idxprom617, !dbg !11055
  %409 = load i32, i32* %arrayidx625, align 4, !dbg !11059
  %add626 = add nsw i32 %409, %shr615, !dbg !11059
  store i32 %add626, i32* %arrayidx625, align 4, !dbg !11059
  %410 = load i32, i32* %diff, align 4, !dbg !11060
  %mul627 = mul nsw i32 %410, 1, !dbg !11061
  %add628 = add nsw i32 %mul627, 8, !dbg !11062
  %shr629 = ashr i32 %add628, 4, !dbg !11063
  %411 = load i32, i32* %x, align 4, !dbg !11064
  %add630 = add nsw i32 %411, 1, !dbg !11065
  %idxprom631 = sext i32 %add630 to i64, !dbg !11066
  %412 = load i32, i32* %y, align 4, !dbg !11067
  %and632 = and i32 %412, 1, !dbg !11068
  %tobool633 = icmp ne i32 %and632, 0, !dbg !11069
  %lnot634 = xor i1 %tobool633, true, !dbg !11069
  %lnot.ext635 = zext i1 %lnot634 to i32, !dbg !11069
  %idxprom636 = sext i32 %lnot.ext635 to i64, !dbg !11066
  %413 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11066
  %arrayidx637 = getelementptr inbounds [2 x i32*], [2 x i32*]* %413, i64 2, !dbg !11066
  %arrayidx638 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx637, i64 0, i64 %idxprom636, !dbg !11066
  %414 = load i32*, i32** %arrayidx638, align 8, !dbg !11066
  %arrayidx639 = getelementptr inbounds i32, i32* %414, i64 %idxprom631, !dbg !11066
  %415 = load i32, i32* %arrayidx639, align 4, !dbg !11070
  %add640 = add nsw i32 %415, %shr629, !dbg !11070
  store i32 %add640, i32* %arrayidx639, align 4, !dbg !11070
  %416 = load i32, i32* %x, align 4, !dbg !11071
  %add641 = add nsw i32 %416, 0, !dbg !11072
  %idxprom642 = sext i32 %add641 to i64, !dbg !11073
  %417 = load i32, i32* %y, align 4, !dbg !11074
  %and643 = and i32 %417, 1, !dbg !11075
  %idxprom644 = sext i32 %and643 to i64, !dbg !11073
  %418 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11073
  %arrayidx645 = getelementptr inbounds [2 x i32*], [2 x i32*]* %418, i64 2, !dbg !11073
  %arrayidx646 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx645, i64 0, i64 %idxprom644, !dbg !11073
  %419 = load i32*, i32** %arrayidx646, align 8, !dbg !11073
  %arrayidx647 = getelementptr inbounds i32, i32* %419, i64 %idxprom642, !dbg !11073
  store i32 262144, i32* %arrayidx647, align 4, !dbg !11076
  br label %for.inc648, !dbg !11077

for.inc648:                                       ; preds = %av_clip_uintp2_c.exit682
  %420 = load i32, i32* %x, align 4, !dbg !11078
  %inc649 = add nsw i32 %420, 1, !dbg !11078
  store i32 %inc649, i32* %x, align 4, !dbg !11078
  br label %for.cond76, !dbg !11080, !llvm.loop !11081

for.end650:                                       ; preds = %for.cond76
  %421 = load i64, i64* %s0, align 8, !dbg !11083
  %mul651 = mul nsw i64 %421, 2, !dbg !11084
  %422 = load i16*, i16** %yuv0, align 8, !dbg !11085
  %add.ptr = getelementptr inbounds i16, i16* %422, i64 %mul651, !dbg !11085
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !11085
  %423 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11086
  %arrayidx652 = getelementptr inbounds i64, i64* %423, i64 1, !dbg !11086
  %424 = load i64, i64* %arrayidx652, align 8, !dbg !11086
  %div653 = udiv i64 %424, 2, !dbg !11087
  %425 = load i16*, i16** %yuv1, align 8, !dbg !11088
  %add.ptr654 = getelementptr inbounds i16, i16* %425, i64 %div653, !dbg !11088
  store i16* %add.ptr654, i16** %yuv1, align 8, !dbg !11088
  %426 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11089
  %arrayidx655 = getelementptr inbounds i64, i64* %426, i64 2, !dbg !11089
  %427 = load i64, i64* %arrayidx655, align 8, !dbg !11089
  %div656 = udiv i64 %427, 2, !dbg !11090
  %428 = load i16*, i16** %yuv2, align 8, !dbg !11091
  %add.ptr657 = getelementptr inbounds i16, i16* %428, i64 %div656, !dbg !11091
  store i16* %add.ptr657, i16** %yuv2, align 8, !dbg !11091
  %429 = load i64, i64* %s.addr, align 8, !dbg !11092
  %mul658 = mul nsw i64 %429, 2, !dbg !11093
  %430 = load i16*, i16** %rgb0, align 8, !dbg !11094
  %add.ptr659 = getelementptr inbounds i16, i16* %430, i64 %mul658, !dbg !11094
  store i16* %add.ptr659, i16** %rgb0, align 8, !dbg !11094
  %431 = load i64, i64* %s.addr, align 8, !dbg !11095
  %mul660 = mul nsw i64 %431, 2, !dbg !11096
  %432 = load i16*, i16** %rgb1, align 8, !dbg !11097
  %add.ptr661 = getelementptr inbounds i16, i16* %432, i64 %mul660, !dbg !11097
  store i16* %add.ptr661, i16** %rgb1, align 8, !dbg !11097
  %433 = load i64, i64* %s.addr, align 8, !dbg !11098
  %mul662 = mul nsw i64 %433, 2, !dbg !11099
  %434 = load i16*, i16** %rgb2, align 8, !dbg !11100
  %add.ptr663 = getelementptr inbounds i16, i16* %434, i64 %mul662, !dbg !11100
  store i16* %add.ptr663, i16** %rgb2, align 8, !dbg !11100
  br label %for.inc664, !dbg !11101

for.inc664:                                       ; preds = %for.end650
  %435 = load i32, i32* %y, align 4, !dbg !11102
  %inc665 = add nsw i32 %435, 1, !dbg !11102
  store i32 %inc665, i32* %y, align 4, !dbg !11102
  br label %for.cond72, !dbg !11104, !llvm.loop !11105

for.end666:                                       ; preds = %for.cond72
  ret void, !dbg !11107
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_444p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !11108 {
entry:
  %retval.i369 = alloca i32, align 4
  %a.addr.i370 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i370, metadata !4652, metadata !94), !dbg !11109
  %p.addr.i371 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i371, metadata !4665, metadata !94), !dbg !11117
  %retval.i353 = alloca i32, align 4
  %a.addr.i354 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i354, metadata !4652, metadata !94), !dbg !11118
  %p.addr.i355 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i355, metadata !4665, metadata !94), !dbg !11120
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !11121
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !11123
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !11124, metadata !94), !dbg !11125
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !11126, metadata !94), !dbg !11127
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !11128, metadata !94), !dbg !11129
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !11130, metadata !94), !dbg !11131
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !11132, metadata !94), !dbg !11133
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !11134, metadata !94), !dbg !11135
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !11136, metadata !94), !dbg !11137
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !11138, metadata !94), !dbg !11139
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !11140, metadata !94), !dbg !11141
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !11142, metadata !94), !dbg !11143
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !11144
  %1 = bitcast i8** %0 to i16**, !dbg !11145
  store i16** %1, i16*** %yuv, align 8, !dbg !11143
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !11146, metadata !94), !dbg !11147
  %2 = load i16**, i16*** %yuv, align 8, !dbg !11148
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !11148
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !11148
  store i16* %3, i16** %yuv0, align 8, !dbg !11147
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !11149, metadata !94), !dbg !11150
  %4 = load i16**, i16*** %yuv, align 8, !dbg !11151
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !11151
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !11151
  store i16* %5, i16** %yuv1, align 8, !dbg !11150
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !11152, metadata !94), !dbg !11153
  %6 = load i16**, i16*** %yuv, align 8, !dbg !11154
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !11154
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !11154
  store i16* %7, i16** %yuv2, align 8, !dbg !11153
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !11155, metadata !94), !dbg !11156
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !11157
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !11157
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !11157
  store i16* %9, i16** %rgb0, align 8, !dbg !11156
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !11158, metadata !94), !dbg !11159
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !11160
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !11160
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !11160
  store i16* %11, i16** %rgb1, align 8, !dbg !11159
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !11161, metadata !94), !dbg !11162
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !11163
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !11163
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !11163
  store i16* %13, i16** %rgb2, align 8, !dbg !11162
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11164, metadata !94), !dbg !11165
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11166, metadata !94), !dbg !11167
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !11168, metadata !94), !dbg !11169
  store i32 17, i32* %sh, align 4, !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !11170, metadata !94), !dbg !11171
  store i32 65536, i32* %rnd, align 4, !dbg !11171
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !11172, metadata !94), !dbg !11173
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11174
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !11174
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !11174
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !11174
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !11174
  %conv = sext i16 %15 to i32, !dbg !11174
  store i32 %conv, i32* %cry, align 4, !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !11175, metadata !94), !dbg !11176
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11177
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !11177
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !11177
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !11177
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !11177
  %conv12 = sext i16 %17 to i32, !dbg !11177
  store i32 %conv12, i32* %cgy, align 4, !dbg !11176
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !11178, metadata !94), !dbg !11179
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11180
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !11180
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !11180
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !11180
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !11180
  %conv16 = sext i16 %19 to i32, !dbg !11180
  store i32 %conv16, i32* %cby, align 4, !dbg !11179
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !11181, metadata !94), !dbg !11182
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11183
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !11183
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !11183
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !11183
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !11183
  %conv20 = sext i16 %21 to i32, !dbg !11183
  store i32 %conv20, i32* %cru, align 4, !dbg !11182
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !11184, metadata !94), !dbg !11185
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11186
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !11186
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !11186
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !11186
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !11186
  %conv24 = sext i16 %23 to i32, !dbg !11186
  store i32 %conv24, i32* %cgu, align 4, !dbg !11185
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !11187, metadata !94), !dbg !11188
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11189
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !11189
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !11189
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !11189
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !11189
  %conv28 = sext i16 %25 to i32, !dbg !11189
  store i32 %conv28, i32* %cburv, align 4, !dbg !11188
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !11190, metadata !94), !dbg !11191
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11192
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !11192
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !11192
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !11192
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !11192
  %conv32 = sext i16 %27 to i32, !dbg !11192
  store i32 %conv32, i32* %cgv, align 4, !dbg !11191
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !11193, metadata !94), !dbg !11194
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11195
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !11195
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !11195
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !11195
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !11195
  %conv36 = sext i16 %29 to i32, !dbg !11195
  store i32 %conv36, i32* %cbv, align 4, !dbg !11194
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !11196, metadata !94), !dbg !11197
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11198
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !11198
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !11198
  %div = udiv i64 %31, 2, !dbg !11199
  store i64 %div, i64* %s0, align 8, !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !11200, metadata !94), !dbg !11201
  store i32 2048, i32* %uv_offset, align 4, !dbg !11201
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11202, metadata !94), !dbg !11203
  store i32 131071, i32* %mask, align 4, !dbg !11203
  store i32 0, i32* %x, align 4, !dbg !11204
  br label %for.cond, !dbg !11206

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !11207
  %33 = load i32, i32* %w.addr, align 4, !dbg !11210
  %cmp = icmp slt i32 %32, %33, !dbg !11211
  br i1 %cmp, label %for.body, label %for.end, !dbg !11212

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !11213
  %idxprom = sext i32 %34 to i64, !dbg !11215
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11215
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !11215
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !11215
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !11215
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !11215
  store i32 65536, i32* %arrayidx41, align 4, !dbg !11216
  %37 = load i32, i32* %x, align 4, !dbg !11217
  %idxprom42 = sext i32 %37 to i64, !dbg !11218
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11218
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !11218
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !11218
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !11218
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !11218
  store i32 65536, i32* %arrayidx45, align 4, !dbg !11219
  br label %for.inc, !dbg !11220

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !11221
  %inc = add nsw i32 %40, 1, !dbg !11221
  store i32 %inc, i32* %x, align 4, !dbg !11221
  br label %for.cond, !dbg !11223, !llvm.loop !11224

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !11226
  %add = add nsw i32 %41, 1, !dbg !11227
  %sub = sub nsw i32 %add, 1, !dbg !11228
  %shr = ashr i32 %sub, 0, !dbg !11229
  store i32 %shr, i32* %w.addr, align 4, !dbg !11230
  %42 = load i32, i32* %h.addr, align 4, !dbg !11231
  %add46 = add nsw i32 %42, 1, !dbg !11232
  %sub47 = sub nsw i32 %add46, 1, !dbg !11233
  %shr48 = ashr i32 %sub47, 0, !dbg !11234
  store i32 %shr48, i32* %h.addr, align 4, !dbg !11235
  store i32 0, i32* %x, align 4, !dbg !11236
  br label %for.cond49, !dbg !11238

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !11239
  %44 = load i32, i32* %w.addr, align 4, !dbg !11242
  %cmp50 = icmp slt i32 %43, %44, !dbg !11243
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !11244

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !11245
  %idxprom53 = sext i32 %45 to i64, !dbg !11247
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11247
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !11247
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !11247
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !11247
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !11247
  store i32 65536, i32* %arrayidx56, align 4, !dbg !11248
  %48 = load i32, i32* %x, align 4, !dbg !11249
  %idxprom57 = sext i32 %48 to i64, !dbg !11250
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11250
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !11250
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !11250
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !11250
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !11250
  store i32 65536, i32* %arrayidx60, align 4, !dbg !11251
  %51 = load i32, i32* %x, align 4, !dbg !11252
  %idxprom61 = sext i32 %51 to i64, !dbg !11253
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11253
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !11253
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !11253
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !11253
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !11253
  store i32 65536, i32* %arrayidx64, align 4, !dbg !11254
  %54 = load i32, i32* %x, align 4, !dbg !11255
  %idxprom65 = sext i32 %54 to i64, !dbg !11256
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11256
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !11256
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !11256
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !11256
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !11256
  store i32 65536, i32* %arrayidx68, align 4, !dbg !11257
  br label %for.inc69, !dbg !11258

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !11259
  %inc70 = add nsw i32 %57, 1, !dbg !11259
  store i32 %inc70, i32* %x, align 4, !dbg !11259
  br label %for.cond49, !dbg !11261, !llvm.loop !11262

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !11264
  br label %for.cond72, !dbg !11265

for.cond72:                                       ; preds = %for.inc350, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !11266
  %59 = load i32, i32* %h.addr, align 4, !dbg !11268
  %cmp73 = icmp slt i32 %58, %59, !dbg !11269
  br i1 %cmp73, label %for.body75, label %for.end352, !dbg !11270

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !11271
  br label %for.cond76, !dbg !11272

for.cond76:                                       ; preds = %for.inc334, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !11273
  %61 = load i32, i32* %w.addr, align 4, !dbg !11275
  %cmp77 = icmp slt i32 %60, %61, !dbg !11276
  br i1 %cmp77, label %for.body79, label %for.end336, !dbg !11277

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !11278, metadata !94), !dbg !11279
  %62 = load i32, i32* %x, align 4, !dbg !11280
  %shl = shl i32 %62, 0, !dbg !11281
  %idxprom80 = sext i32 %shl to i64, !dbg !11282
  %63 = load i16*, i16** %rgb0, align 8, !dbg !11282
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !11282
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !11282
  %conv82 = sext i16 %64 to i32, !dbg !11282
  store i32 %conv82, i32* %r00, align 4, !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !11283, metadata !94), !dbg !11284
  %65 = load i32, i32* %x, align 4, !dbg !11285
  %shl83 = shl i32 %65, 0, !dbg !11286
  %idxprom84 = sext i32 %shl83 to i64, !dbg !11287
  %66 = load i16*, i16** %rgb1, align 8, !dbg !11287
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !11287
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !11287
  %conv86 = sext i16 %67 to i32, !dbg !11287
  store i32 %conv86, i32* %g00, align 4, !dbg !11284
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !11288, metadata !94), !dbg !11289
  %68 = load i32, i32* %x, align 4, !dbg !11290
  %shl87 = shl i32 %68, 0, !dbg !11291
  %idxprom88 = sext i32 %shl87 to i64, !dbg !11292
  %69 = load i16*, i16** %rgb2, align 8, !dbg !11292
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !11292
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !11292
  %conv90 = sext i16 %70 to i32, !dbg !11292
  store i32 %conv90, i32* %b00, align 4, !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !11293, metadata !94), !dbg !11294
  call void @llvm.dbg.declare(metadata i32* %u, metadata !11295, metadata !94), !dbg !11296
  call void @llvm.dbg.declare(metadata i32* %v, metadata !11297, metadata !94), !dbg !11298
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !11299, metadata !94), !dbg !11300
  %71 = load i32, i32* %r00, align 4, !dbg !11301
  %72 = load i32, i32* %cry, align 4, !dbg !11302
  %mul = mul nsw i32 %71, %72, !dbg !11303
  %73 = load i32, i32* %g00, align 4, !dbg !11304
  %74 = load i32, i32* %cgy, align 4, !dbg !11305
  %mul91 = mul nsw i32 %73, %74, !dbg !11306
  %add92 = add nsw i32 %mul, %mul91, !dbg !11307
  %75 = load i32, i32* %b00, align 4, !dbg !11308
  %76 = load i32, i32* %cby, align 4, !dbg !11309
  %mul93 = mul nsw i32 %75, %76, !dbg !11310
  %add94 = add nsw i32 %add92, %mul93, !dbg !11311
  %77 = load i32, i32* %x, align 4, !dbg !11312
  %shl95 = shl i32 %77, 0, !dbg !11313
  %idxprom96 = sext i32 %shl95 to i64, !dbg !11314
  %78 = load i32, i32* %y, align 4, !dbg !11315
  %and = and i32 %78, 1, !dbg !11316
  %idxprom97 = sext i32 %and to i64, !dbg !11314
  %79 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11314
  %arrayidx98 = getelementptr inbounds [2 x i32*], [2 x i32*]* %79, i64 0, !dbg !11314
  %arrayidx99 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx98, i64 0, i64 %idxprom97, !dbg !11314
  %80 = load i32*, i32** %arrayidx99, align 8, !dbg !11314
  %arrayidx100 = getelementptr inbounds i32, i32* %80, i64 %idxprom96, !dbg !11314
  %81 = load i32, i32* %arrayidx100, align 4, !dbg !11314
  %add101 = add nsw i32 %add94, %81, !dbg !11317
  store i32 %add101, i32* %y00, align 4, !dbg !11318
  %82 = load i32, i32* %y00, align 4, !dbg !11319
  %83 = load i32, i32* %mask, align 4, !dbg !11320
  %and102 = and i32 %82, %83, !dbg !11321
  %sub103 = sub i32 %and102, 65536, !dbg !11322
  store i32 %sub103, i32* %diff, align 4, !dbg !11323
  %84 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !11324
  %arrayidx104 = getelementptr inbounds i16, i16* %84, i64 0, !dbg !11324
  %85 = load i16, i16* %arrayidx104, align 2, !dbg !11324
  %conv105 = sext i16 %85 to i32, !dbg !11324
  %86 = load i32, i32* %y00, align 4, !dbg !11325
  %shr106 = ashr i32 %86, 17, !dbg !11326
  %add107 = add nsw i32 %conv105, %shr106, !dbg !11327
  store i32 %add107, i32* %a.addr.i, align 4, !dbg !11328
  store i32 12, i32* %p.addr.i, align 4, !dbg !11328
  %87 = load i32, i32* %a.addr.i, align 4, !dbg !11329
  %88 = load i32, i32* %p.addr.i, align 4, !dbg !11330
  %shl.i = shl i32 1, %88, !dbg !11331
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !11332
  %neg.i = xor i32 %sub.i, -1, !dbg !11333
  %and.i = and i32 %87, %neg.i, !dbg !11334
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !11334
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !11335

if.then.i:                                        ; preds = %for.body79
  %89 = load i32, i32* %a.addr.i, align 4, !dbg !11336
  %neg1.i = xor i32 %89, -1, !dbg !11337
  %shr.i = ashr i32 %neg1.i, 31, !dbg !11338
  %90 = load i32, i32* %p.addr.i, align 4, !dbg !11339
  %shl2.i = shl i32 1, %90, !dbg !11340
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !11341
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !11342
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !11343
  br label %av_clip_uintp2_c.exit, !dbg !11343

if.else.i:                                        ; preds = %for.body79
  %91 = load i32, i32* %a.addr.i, align 4, !dbg !11344
  store i32 %91, i32* %retval.i, align 4, !dbg !11345
  br label %av_clip_uintp2_c.exit, !dbg !11345

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %92 = load i32, i32* %retval.i, align 4, !dbg !11346
  %conv108 = trunc i32 %92 to i16, !dbg !11328
  %93 = load i32, i32* %x, align 4, !dbg !11347
  %shl109 = shl i32 %93, 0, !dbg !11348
  %idxprom110 = sext i32 %shl109 to i64, !dbg !11349
  %94 = load i16*, i16** %yuv0, align 8, !dbg !11349
  %arrayidx111 = getelementptr inbounds i16, i16* %94, i64 %idxprom110, !dbg !11349
  store i16 %conv108, i16* %arrayidx111, align 2, !dbg !11350
  %95 = load i32, i32* %diff, align 4, !dbg !11351
  %mul112 = mul nsw i32 %95, 7, !dbg !11352
  %add113 = add nsw i32 %mul112, 8, !dbg !11353
  %shr114 = ashr i32 %add113, 4, !dbg !11354
  %96 = load i32, i32* %x, align 4, !dbg !11355
  %shl115 = shl i32 %96, 0, !dbg !11356
  %add116 = add nsw i32 %shl115, 1, !dbg !11357
  %idxprom117 = sext i32 %add116 to i64, !dbg !11358
  %97 = load i32, i32* %y, align 4, !dbg !11359
  %and118 = and i32 %97, 1, !dbg !11360
  %idxprom119 = sext i32 %and118 to i64, !dbg !11358
  %98 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11358
  %arrayidx120 = getelementptr inbounds [2 x i32*], [2 x i32*]* %98, i64 0, !dbg !11358
  %arrayidx121 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx120, i64 0, i64 %idxprom119, !dbg !11358
  %99 = load i32*, i32** %arrayidx121, align 8, !dbg !11358
  %arrayidx122 = getelementptr inbounds i32, i32* %99, i64 %idxprom117, !dbg !11358
  %100 = load i32, i32* %arrayidx122, align 4, !dbg !11361
  %add123 = add nsw i32 %100, %shr114, !dbg !11361
  store i32 %add123, i32* %arrayidx122, align 4, !dbg !11361
  %101 = load i32, i32* %diff, align 4, !dbg !11362
  %mul124 = mul nsw i32 %101, 3, !dbg !11363
  %add125 = add nsw i32 %mul124, 8, !dbg !11364
  %shr126 = ashr i32 %add125, 4, !dbg !11365
  %102 = load i32, i32* %x, align 4, !dbg !11366
  %shl127 = shl i32 %102, 0, !dbg !11367
  %sub128 = sub nsw i32 %shl127, 1, !dbg !11368
  %idxprom129 = sext i32 %sub128 to i64, !dbg !11369
  %103 = load i32, i32* %y, align 4, !dbg !11370
  %and130 = and i32 %103, 1, !dbg !11371
  %tobool = icmp ne i32 %and130, 0, !dbg !11372
  %lnot = xor i1 %tobool, true, !dbg !11372
  %lnot.ext = zext i1 %lnot to i32, !dbg !11372
  %idxprom131 = sext i32 %lnot.ext to i64, !dbg !11369
  %104 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11369
  %arrayidx132 = getelementptr inbounds [2 x i32*], [2 x i32*]* %104, i64 0, !dbg !11369
  %arrayidx133 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx132, i64 0, i64 %idxprom131, !dbg !11369
  %105 = load i32*, i32** %arrayidx133, align 8, !dbg !11369
  %arrayidx134 = getelementptr inbounds i32, i32* %105, i64 %idxprom129, !dbg !11369
  %106 = load i32, i32* %arrayidx134, align 4, !dbg !11373
  %add135 = add nsw i32 %106, %shr126, !dbg !11373
  store i32 %add135, i32* %arrayidx134, align 4, !dbg !11373
  %107 = load i32, i32* %diff, align 4, !dbg !11374
  %mul136 = mul nsw i32 %107, 5, !dbg !11375
  %add137 = add nsw i32 %mul136, 8, !dbg !11376
  %shr138 = ashr i32 %add137, 4, !dbg !11377
  %108 = load i32, i32* %x, align 4, !dbg !11378
  %shl139 = shl i32 %108, 0, !dbg !11379
  %add140 = add nsw i32 %shl139, 0, !dbg !11380
  %idxprom141 = sext i32 %add140 to i64, !dbg !11381
  %109 = load i32, i32* %y, align 4, !dbg !11382
  %and142 = and i32 %109, 1, !dbg !11383
  %tobool143 = icmp ne i32 %and142, 0, !dbg !11384
  %lnot144 = xor i1 %tobool143, true, !dbg !11384
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !11384
  %idxprom146 = sext i32 %lnot.ext145 to i64, !dbg !11381
  %110 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11381
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %110, i64 0, !dbg !11381
  %arrayidx148 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx147, i64 0, i64 %idxprom146, !dbg !11381
  %111 = load i32*, i32** %arrayidx148, align 8, !dbg !11381
  %arrayidx149 = getelementptr inbounds i32, i32* %111, i64 %idxprom141, !dbg !11381
  %112 = load i32, i32* %arrayidx149, align 4, !dbg !11385
  %add150 = add nsw i32 %112, %shr138, !dbg !11385
  store i32 %add150, i32* %arrayidx149, align 4, !dbg !11385
  %113 = load i32, i32* %diff, align 4, !dbg !11386
  %mul151 = mul nsw i32 %113, 1, !dbg !11387
  %add152 = add nsw i32 %mul151, 8, !dbg !11388
  %shr153 = ashr i32 %add152, 4, !dbg !11389
  %114 = load i32, i32* %x, align 4, !dbg !11390
  %shl154 = shl i32 %114, 0, !dbg !11391
  %add155 = add nsw i32 %shl154, 1, !dbg !11392
  %idxprom156 = sext i32 %add155 to i64, !dbg !11393
  %115 = load i32, i32* %y, align 4, !dbg !11394
  %and157 = and i32 %115, 1, !dbg !11395
  %tobool158 = icmp ne i32 %and157, 0, !dbg !11396
  %lnot159 = xor i1 %tobool158, true, !dbg !11396
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !11396
  %idxprom161 = sext i32 %lnot.ext160 to i64, !dbg !11393
  %116 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11393
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %116, i64 0, !dbg !11393
  %arrayidx163 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx162, i64 0, i64 %idxprom161, !dbg !11393
  %117 = load i32*, i32** %arrayidx163, align 8, !dbg !11393
  %arrayidx164 = getelementptr inbounds i32, i32* %117, i64 %idxprom156, !dbg !11393
  %118 = load i32, i32* %arrayidx164, align 4, !dbg !11397
  %add165 = add nsw i32 %118, %shr153, !dbg !11397
  store i32 %add165, i32* %arrayidx164, align 4, !dbg !11397
  %119 = load i32, i32* %x, align 4, !dbg !11398
  %shl166 = shl i32 %119, 0, !dbg !11399
  %add167 = add nsw i32 %shl166, 0, !dbg !11400
  %idxprom168 = sext i32 %add167 to i64, !dbg !11401
  %120 = load i32, i32* %y, align 4, !dbg !11402
  %and169 = and i32 %120, 1, !dbg !11403
  %idxprom170 = sext i32 %and169 to i64, !dbg !11401
  %121 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11401
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %121, i64 0, !dbg !11401
  %arrayidx172 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx171, i64 0, i64 %idxprom170, !dbg !11401
  %122 = load i32*, i32** %arrayidx172, align 8, !dbg !11401
  %arrayidx173 = getelementptr inbounds i32, i32* %122, i64 %idxprom168, !dbg !11401
  store i32 65536, i32* %arrayidx173, align 4, !dbg !11404
  %123 = load i32, i32* %r00, align 4, !dbg !11405
  %124 = load i32, i32* %cru, align 4, !dbg !11406
  %mul174 = mul nsw i32 %123, %124, !dbg !11407
  %125 = load i32, i32* %g00, align 4, !dbg !11408
  %126 = load i32, i32* %cgu, align 4, !dbg !11409
  %mul175 = mul nsw i32 %125, %126, !dbg !11410
  %add176 = add nsw i32 %mul174, %mul175, !dbg !11411
  %127 = load i32, i32* %b00, align 4, !dbg !11412
  %128 = load i32, i32* %cburv, align 4, !dbg !11413
  %mul177 = mul nsw i32 %127, %128, !dbg !11414
  %add178 = add nsw i32 %add176, %mul177, !dbg !11415
  %129 = load i32, i32* %x, align 4, !dbg !11416
  %idxprom179 = sext i32 %129 to i64, !dbg !11417
  %130 = load i32, i32* %y, align 4, !dbg !11418
  %and180 = and i32 %130, 1, !dbg !11419
  %idxprom181 = sext i32 %and180 to i64, !dbg !11417
  %131 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11417
  %arrayidx182 = getelementptr inbounds [2 x i32*], [2 x i32*]* %131, i64 1, !dbg !11417
  %arrayidx183 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx182, i64 0, i64 %idxprom181, !dbg !11417
  %132 = load i32*, i32** %arrayidx183, align 8, !dbg !11417
  %arrayidx184 = getelementptr inbounds i32, i32* %132, i64 %idxprom179, !dbg !11417
  %133 = load i32, i32* %arrayidx184, align 4, !dbg !11417
  %add185 = add nsw i32 %add178, %133, !dbg !11420
  store i32 %add185, i32* %u, align 4, !dbg !11421
  %134 = load i32, i32* %u, align 4, !dbg !11422
  %135 = load i32, i32* %mask, align 4, !dbg !11423
  %and186 = and i32 %134, %135, !dbg !11424
  %sub187 = sub i32 %and186, 65536, !dbg !11425
  store i32 %sub187, i32* %diff, align 4, !dbg !11426
  %136 = load i32, i32* %u, align 4, !dbg !11427
  %shr188 = ashr i32 %136, 17, !dbg !11428
  %add189 = add nsw i32 2048, %shr188, !dbg !11429
  store i32 %add189, i32* %a.addr.i370, align 4, !dbg !11430
  store i32 12, i32* %p.addr.i371, align 4, !dbg !11430
  %137 = load i32, i32* %a.addr.i370, align 4, !dbg !11431
  %138 = load i32, i32* %p.addr.i371, align 4, !dbg !11432
  %shl.i372 = shl i32 1, %138, !dbg !11433
  %sub.i373 = sub nsw i32 %shl.i372, 1, !dbg !11434
  %neg.i374 = xor i32 %sub.i373, -1, !dbg !11435
  %and.i375 = and i32 %137, %neg.i374, !dbg !11436
  %tobool.i376 = icmp ne i32 %and.i375, 0, !dbg !11436
  br i1 %tobool.i376, label %if.then.i382, label %if.else.i383, !dbg !11437

if.then.i382:                                     ; preds = %av_clip_uintp2_c.exit
  %139 = load i32, i32* %a.addr.i370, align 4, !dbg !11438
  %neg1.i377 = xor i32 %139, -1, !dbg !11439
  %shr.i378 = ashr i32 %neg1.i377, 31, !dbg !11440
  %140 = load i32, i32* %p.addr.i371, align 4, !dbg !11441
  %shl2.i379 = shl i32 1, %140, !dbg !11442
  %sub3.i380 = sub nsw i32 %shl2.i379, 1, !dbg !11443
  %and4.i381 = and i32 %shr.i378, %sub3.i380, !dbg !11444
  store i32 %and4.i381, i32* %retval.i369, align 4, !dbg !11445
  br label %av_clip_uintp2_c.exit384, !dbg !11445

if.else.i383:                                     ; preds = %av_clip_uintp2_c.exit
  %141 = load i32, i32* %a.addr.i370, align 4, !dbg !11446
  store i32 %141, i32* %retval.i369, align 4, !dbg !11447
  br label %av_clip_uintp2_c.exit384, !dbg !11447

av_clip_uintp2_c.exit384:                         ; preds = %if.then.i382, %if.else.i383
  %142 = load i32, i32* %retval.i369, align 4, !dbg !11448
  %conv191 = trunc i32 %142 to i16, !dbg !11430
  %143 = load i32, i32* %x, align 4, !dbg !11449
  %idxprom192 = sext i32 %143 to i64, !dbg !11450
  %144 = load i16*, i16** %yuv1, align 8, !dbg !11450
  %arrayidx193 = getelementptr inbounds i16, i16* %144, i64 %idxprom192, !dbg !11450
  store i16 %conv191, i16* %arrayidx193, align 2, !dbg !11451
  %145 = load i32, i32* %diff, align 4, !dbg !11452
  %mul194 = mul nsw i32 %145, 7, !dbg !11453
  %add195 = add nsw i32 %mul194, 8, !dbg !11454
  %shr196 = ashr i32 %add195, 4, !dbg !11455
  %146 = load i32, i32* %x, align 4, !dbg !11456
  %add197 = add nsw i32 %146, 1, !dbg !11457
  %idxprom198 = sext i32 %add197 to i64, !dbg !11458
  %147 = load i32, i32* %y, align 4, !dbg !11459
  %and199 = and i32 %147, 1, !dbg !11460
  %idxprom200 = sext i32 %and199 to i64, !dbg !11458
  %148 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11458
  %arrayidx201 = getelementptr inbounds [2 x i32*], [2 x i32*]* %148, i64 1, !dbg !11458
  %arrayidx202 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx201, i64 0, i64 %idxprom200, !dbg !11458
  %149 = load i32*, i32** %arrayidx202, align 8, !dbg !11458
  %arrayidx203 = getelementptr inbounds i32, i32* %149, i64 %idxprom198, !dbg !11458
  %150 = load i32, i32* %arrayidx203, align 4, !dbg !11461
  %add204 = add nsw i32 %150, %shr196, !dbg !11461
  store i32 %add204, i32* %arrayidx203, align 4, !dbg !11461
  %151 = load i32, i32* %diff, align 4, !dbg !11462
  %mul205 = mul nsw i32 %151, 3, !dbg !11463
  %add206 = add nsw i32 %mul205, 8, !dbg !11464
  %shr207 = ashr i32 %add206, 4, !dbg !11465
  %152 = load i32, i32* %x, align 4, !dbg !11466
  %sub208 = sub nsw i32 %152, 1, !dbg !11467
  %idxprom209 = sext i32 %sub208 to i64, !dbg !11468
  %153 = load i32, i32* %y, align 4, !dbg !11469
  %and210 = and i32 %153, 1, !dbg !11470
  %tobool211 = icmp ne i32 %and210, 0, !dbg !11471
  %lnot212 = xor i1 %tobool211, true, !dbg !11471
  %lnot.ext213 = zext i1 %lnot212 to i32, !dbg !11471
  %idxprom214 = sext i32 %lnot.ext213 to i64, !dbg !11468
  %154 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11468
  %arrayidx215 = getelementptr inbounds [2 x i32*], [2 x i32*]* %154, i64 1, !dbg !11468
  %arrayidx216 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx215, i64 0, i64 %idxprom214, !dbg !11468
  %155 = load i32*, i32** %arrayidx216, align 8, !dbg !11468
  %arrayidx217 = getelementptr inbounds i32, i32* %155, i64 %idxprom209, !dbg !11468
  %156 = load i32, i32* %arrayidx217, align 4, !dbg !11472
  %add218 = add nsw i32 %156, %shr207, !dbg !11472
  store i32 %add218, i32* %arrayidx217, align 4, !dbg !11472
  %157 = load i32, i32* %diff, align 4, !dbg !11473
  %mul219 = mul nsw i32 %157, 5, !dbg !11474
  %add220 = add nsw i32 %mul219, 8, !dbg !11475
  %shr221 = ashr i32 %add220, 4, !dbg !11476
  %158 = load i32, i32* %x, align 4, !dbg !11477
  %add222 = add nsw i32 %158, 0, !dbg !11478
  %idxprom223 = sext i32 %add222 to i64, !dbg !11479
  %159 = load i32, i32* %y, align 4, !dbg !11480
  %and224 = and i32 %159, 1, !dbg !11481
  %tobool225 = icmp ne i32 %and224, 0, !dbg !11482
  %lnot226 = xor i1 %tobool225, true, !dbg !11482
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !11482
  %idxprom228 = sext i32 %lnot.ext227 to i64, !dbg !11479
  %160 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11479
  %arrayidx229 = getelementptr inbounds [2 x i32*], [2 x i32*]* %160, i64 1, !dbg !11479
  %arrayidx230 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx229, i64 0, i64 %idxprom228, !dbg !11479
  %161 = load i32*, i32** %arrayidx230, align 8, !dbg !11479
  %arrayidx231 = getelementptr inbounds i32, i32* %161, i64 %idxprom223, !dbg !11479
  %162 = load i32, i32* %arrayidx231, align 4, !dbg !11483
  %add232 = add nsw i32 %162, %shr221, !dbg !11483
  store i32 %add232, i32* %arrayidx231, align 4, !dbg !11483
  %163 = load i32, i32* %diff, align 4, !dbg !11484
  %mul233 = mul nsw i32 %163, 1, !dbg !11485
  %add234 = add nsw i32 %mul233, 8, !dbg !11486
  %shr235 = ashr i32 %add234, 4, !dbg !11487
  %164 = load i32, i32* %x, align 4, !dbg !11488
  %add236 = add nsw i32 %164, 1, !dbg !11489
  %idxprom237 = sext i32 %add236 to i64, !dbg !11490
  %165 = load i32, i32* %y, align 4, !dbg !11491
  %and238 = and i32 %165, 1, !dbg !11492
  %tobool239 = icmp ne i32 %and238, 0, !dbg !11493
  %lnot240 = xor i1 %tobool239, true, !dbg !11493
  %lnot.ext241 = zext i1 %lnot240 to i32, !dbg !11493
  %idxprom242 = sext i32 %lnot.ext241 to i64, !dbg !11490
  %166 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11490
  %arrayidx243 = getelementptr inbounds [2 x i32*], [2 x i32*]* %166, i64 1, !dbg !11490
  %arrayidx244 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx243, i64 0, i64 %idxprom242, !dbg !11490
  %167 = load i32*, i32** %arrayidx244, align 8, !dbg !11490
  %arrayidx245 = getelementptr inbounds i32, i32* %167, i64 %idxprom237, !dbg !11490
  %168 = load i32, i32* %arrayidx245, align 4, !dbg !11494
  %add246 = add nsw i32 %168, %shr235, !dbg !11494
  store i32 %add246, i32* %arrayidx245, align 4, !dbg !11494
  %169 = load i32, i32* %x, align 4, !dbg !11495
  %add247 = add nsw i32 %169, 0, !dbg !11496
  %idxprom248 = sext i32 %add247 to i64, !dbg !11497
  %170 = load i32, i32* %y, align 4, !dbg !11498
  %and249 = and i32 %170, 1, !dbg !11499
  %idxprom250 = sext i32 %and249 to i64, !dbg !11497
  %171 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11497
  %arrayidx251 = getelementptr inbounds [2 x i32*], [2 x i32*]* %171, i64 1, !dbg !11497
  %arrayidx252 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx251, i64 0, i64 %idxprom250, !dbg !11497
  %172 = load i32*, i32** %arrayidx252, align 8, !dbg !11497
  %arrayidx253 = getelementptr inbounds i32, i32* %172, i64 %idxprom248, !dbg !11497
  store i32 65536, i32* %arrayidx253, align 4, !dbg !11500
  %173 = load i32, i32* %r00, align 4, !dbg !11501
  %174 = load i32, i32* %cburv, align 4, !dbg !11502
  %mul254 = mul nsw i32 %173, %174, !dbg !11503
  %175 = load i32, i32* %g00, align 4, !dbg !11504
  %176 = load i32, i32* %cgv, align 4, !dbg !11505
  %mul255 = mul nsw i32 %175, %176, !dbg !11506
  %add256 = add nsw i32 %mul254, %mul255, !dbg !11507
  %177 = load i32, i32* %b00, align 4, !dbg !11508
  %178 = load i32, i32* %cbv, align 4, !dbg !11509
  %mul257 = mul nsw i32 %177, %178, !dbg !11510
  %add258 = add nsw i32 %add256, %mul257, !dbg !11511
  %179 = load i32, i32* %x, align 4, !dbg !11512
  %idxprom259 = sext i32 %179 to i64, !dbg !11513
  %180 = load i32, i32* %y, align 4, !dbg !11514
  %and260 = and i32 %180, 1, !dbg !11515
  %idxprom261 = sext i32 %and260 to i64, !dbg !11513
  %181 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11513
  %arrayidx262 = getelementptr inbounds [2 x i32*], [2 x i32*]* %181, i64 2, !dbg !11513
  %arrayidx263 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx262, i64 0, i64 %idxprom261, !dbg !11513
  %182 = load i32*, i32** %arrayidx263, align 8, !dbg !11513
  %arrayidx264 = getelementptr inbounds i32, i32* %182, i64 %idxprom259, !dbg !11513
  %183 = load i32, i32* %arrayidx264, align 4, !dbg !11513
  %add265 = add nsw i32 %add258, %183, !dbg !11516
  store i32 %add265, i32* %v, align 4, !dbg !11517
  %184 = load i32, i32* %v, align 4, !dbg !11518
  %185 = load i32, i32* %mask, align 4, !dbg !11519
  %and266 = and i32 %184, %185, !dbg !11520
  %sub267 = sub i32 %and266, 65536, !dbg !11521
  store i32 %sub267, i32* %diff, align 4, !dbg !11522
  %186 = load i32, i32* %v, align 4, !dbg !11523
  %shr268 = ashr i32 %186, 17, !dbg !11524
  %add269 = add nsw i32 2048, %shr268, !dbg !11525
  store i32 %add269, i32* %a.addr.i354, align 4, !dbg !11526
  store i32 12, i32* %p.addr.i355, align 4, !dbg !11526
  %187 = load i32, i32* %a.addr.i354, align 4, !dbg !11527
  %188 = load i32, i32* %p.addr.i355, align 4, !dbg !11528
  %shl.i356 = shl i32 1, %188, !dbg !11529
  %sub.i357 = sub nsw i32 %shl.i356, 1, !dbg !11530
  %neg.i358 = xor i32 %sub.i357, -1, !dbg !11531
  %and.i359 = and i32 %187, %neg.i358, !dbg !11532
  %tobool.i360 = icmp ne i32 %and.i359, 0, !dbg !11532
  br i1 %tobool.i360, label %if.then.i366, label %if.else.i367, !dbg !11533

if.then.i366:                                     ; preds = %av_clip_uintp2_c.exit384
  %189 = load i32, i32* %a.addr.i354, align 4, !dbg !11534
  %neg1.i361 = xor i32 %189, -1, !dbg !11535
  %shr.i362 = ashr i32 %neg1.i361, 31, !dbg !11536
  %190 = load i32, i32* %p.addr.i355, align 4, !dbg !11537
  %shl2.i363 = shl i32 1, %190, !dbg !11538
  %sub3.i364 = sub nsw i32 %shl2.i363, 1, !dbg !11539
  %and4.i365 = and i32 %shr.i362, %sub3.i364, !dbg !11540
  store i32 %and4.i365, i32* %retval.i353, align 4, !dbg !11541
  br label %av_clip_uintp2_c.exit368, !dbg !11541

if.else.i367:                                     ; preds = %av_clip_uintp2_c.exit384
  %191 = load i32, i32* %a.addr.i354, align 4, !dbg !11542
  store i32 %191, i32* %retval.i353, align 4, !dbg !11543
  br label %av_clip_uintp2_c.exit368, !dbg !11543

av_clip_uintp2_c.exit368:                         ; preds = %if.then.i366, %if.else.i367
  %192 = load i32, i32* %retval.i353, align 4, !dbg !11544
  %conv271 = trunc i32 %192 to i16, !dbg !11526
  %193 = load i32, i32* %x, align 4, !dbg !11545
  %idxprom272 = sext i32 %193 to i64, !dbg !11546
  %194 = load i16*, i16** %yuv2, align 8, !dbg !11546
  %arrayidx273 = getelementptr inbounds i16, i16* %194, i64 %idxprom272, !dbg !11546
  store i16 %conv271, i16* %arrayidx273, align 2, !dbg !11547
  %195 = load i32, i32* %diff, align 4, !dbg !11548
  %mul274 = mul nsw i32 %195, 7, !dbg !11549
  %add275 = add nsw i32 %mul274, 8, !dbg !11550
  %shr276 = ashr i32 %add275, 4, !dbg !11551
  %196 = load i32, i32* %x, align 4, !dbg !11552
  %add277 = add nsw i32 %196, 1, !dbg !11553
  %idxprom278 = sext i32 %add277 to i64, !dbg !11554
  %197 = load i32, i32* %y, align 4, !dbg !11555
  %and279 = and i32 %197, 1, !dbg !11556
  %idxprom280 = sext i32 %and279 to i64, !dbg !11554
  %198 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11554
  %arrayidx281 = getelementptr inbounds [2 x i32*], [2 x i32*]* %198, i64 2, !dbg !11554
  %arrayidx282 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx281, i64 0, i64 %idxprom280, !dbg !11554
  %199 = load i32*, i32** %arrayidx282, align 8, !dbg !11554
  %arrayidx283 = getelementptr inbounds i32, i32* %199, i64 %idxprom278, !dbg !11554
  %200 = load i32, i32* %arrayidx283, align 4, !dbg !11557
  %add284 = add nsw i32 %200, %shr276, !dbg !11557
  store i32 %add284, i32* %arrayidx283, align 4, !dbg !11557
  %201 = load i32, i32* %diff, align 4, !dbg !11558
  %mul285 = mul nsw i32 %201, 3, !dbg !11559
  %add286 = add nsw i32 %mul285, 8, !dbg !11560
  %shr287 = ashr i32 %add286, 4, !dbg !11561
  %202 = load i32, i32* %x, align 4, !dbg !11562
  %sub288 = sub nsw i32 %202, 1, !dbg !11563
  %idxprom289 = sext i32 %sub288 to i64, !dbg !11564
  %203 = load i32, i32* %y, align 4, !dbg !11565
  %and290 = and i32 %203, 1, !dbg !11566
  %tobool291 = icmp ne i32 %and290, 0, !dbg !11567
  %lnot292 = xor i1 %tobool291, true, !dbg !11567
  %lnot.ext293 = zext i1 %lnot292 to i32, !dbg !11567
  %idxprom294 = sext i32 %lnot.ext293 to i64, !dbg !11564
  %204 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11564
  %arrayidx295 = getelementptr inbounds [2 x i32*], [2 x i32*]* %204, i64 2, !dbg !11564
  %arrayidx296 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx295, i64 0, i64 %idxprom294, !dbg !11564
  %205 = load i32*, i32** %arrayidx296, align 8, !dbg !11564
  %arrayidx297 = getelementptr inbounds i32, i32* %205, i64 %idxprom289, !dbg !11564
  %206 = load i32, i32* %arrayidx297, align 4, !dbg !11568
  %add298 = add nsw i32 %206, %shr287, !dbg !11568
  store i32 %add298, i32* %arrayidx297, align 4, !dbg !11568
  %207 = load i32, i32* %diff, align 4, !dbg !11569
  %mul299 = mul nsw i32 %207, 5, !dbg !11570
  %add300 = add nsw i32 %mul299, 8, !dbg !11571
  %shr301 = ashr i32 %add300, 4, !dbg !11572
  %208 = load i32, i32* %x, align 4, !dbg !11573
  %add302 = add nsw i32 %208, 0, !dbg !11574
  %idxprom303 = sext i32 %add302 to i64, !dbg !11575
  %209 = load i32, i32* %y, align 4, !dbg !11576
  %and304 = and i32 %209, 1, !dbg !11577
  %tobool305 = icmp ne i32 %and304, 0, !dbg !11578
  %lnot306 = xor i1 %tobool305, true, !dbg !11578
  %lnot.ext307 = zext i1 %lnot306 to i32, !dbg !11578
  %idxprom308 = sext i32 %lnot.ext307 to i64, !dbg !11575
  %210 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11575
  %arrayidx309 = getelementptr inbounds [2 x i32*], [2 x i32*]* %210, i64 2, !dbg !11575
  %arrayidx310 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx309, i64 0, i64 %idxprom308, !dbg !11575
  %211 = load i32*, i32** %arrayidx310, align 8, !dbg !11575
  %arrayidx311 = getelementptr inbounds i32, i32* %211, i64 %idxprom303, !dbg !11575
  %212 = load i32, i32* %arrayidx311, align 4, !dbg !11579
  %add312 = add nsw i32 %212, %shr301, !dbg !11579
  store i32 %add312, i32* %arrayidx311, align 4, !dbg !11579
  %213 = load i32, i32* %diff, align 4, !dbg !11580
  %mul313 = mul nsw i32 %213, 1, !dbg !11581
  %add314 = add nsw i32 %mul313, 8, !dbg !11582
  %shr315 = ashr i32 %add314, 4, !dbg !11583
  %214 = load i32, i32* %x, align 4, !dbg !11584
  %add316 = add nsw i32 %214, 1, !dbg !11585
  %idxprom317 = sext i32 %add316 to i64, !dbg !11586
  %215 = load i32, i32* %y, align 4, !dbg !11587
  %and318 = and i32 %215, 1, !dbg !11588
  %tobool319 = icmp ne i32 %and318, 0, !dbg !11589
  %lnot320 = xor i1 %tobool319, true, !dbg !11589
  %lnot.ext321 = zext i1 %lnot320 to i32, !dbg !11589
  %idxprom322 = sext i32 %lnot.ext321 to i64, !dbg !11586
  %216 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11586
  %arrayidx323 = getelementptr inbounds [2 x i32*], [2 x i32*]* %216, i64 2, !dbg !11586
  %arrayidx324 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx323, i64 0, i64 %idxprom322, !dbg !11586
  %217 = load i32*, i32** %arrayidx324, align 8, !dbg !11586
  %arrayidx325 = getelementptr inbounds i32, i32* %217, i64 %idxprom317, !dbg !11586
  %218 = load i32, i32* %arrayidx325, align 4, !dbg !11590
  %add326 = add nsw i32 %218, %shr315, !dbg !11590
  store i32 %add326, i32* %arrayidx325, align 4, !dbg !11590
  %219 = load i32, i32* %x, align 4, !dbg !11591
  %add327 = add nsw i32 %219, 0, !dbg !11592
  %idxprom328 = sext i32 %add327 to i64, !dbg !11593
  %220 = load i32, i32* %y, align 4, !dbg !11594
  %and329 = and i32 %220, 1, !dbg !11595
  %idxprom330 = sext i32 %and329 to i64, !dbg !11593
  %221 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11593
  %arrayidx331 = getelementptr inbounds [2 x i32*], [2 x i32*]* %221, i64 2, !dbg !11593
  %arrayidx332 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx331, i64 0, i64 %idxprom330, !dbg !11593
  %222 = load i32*, i32** %arrayidx332, align 8, !dbg !11593
  %arrayidx333 = getelementptr inbounds i32, i32* %222, i64 %idxprom328, !dbg !11593
  store i32 65536, i32* %arrayidx333, align 4, !dbg !11596
  br label %for.inc334, !dbg !11597

for.inc334:                                       ; preds = %av_clip_uintp2_c.exit368
  %223 = load i32, i32* %x, align 4, !dbg !11598
  %inc335 = add nsw i32 %223, 1, !dbg !11598
  store i32 %inc335, i32* %x, align 4, !dbg !11598
  br label %for.cond76, !dbg !11600, !llvm.loop !11601

for.end336:                                       ; preds = %for.cond76
  %224 = load i64, i64* %s0, align 8, !dbg !11603
  %mul337 = mul nsw i64 %224, 1, !dbg !11604
  %225 = load i16*, i16** %yuv0, align 8, !dbg !11605
  %add.ptr = getelementptr inbounds i16, i16* %225, i64 %mul337, !dbg !11605
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !11605
  %226 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11606
  %arrayidx338 = getelementptr inbounds i64, i64* %226, i64 1, !dbg !11606
  %227 = load i64, i64* %arrayidx338, align 8, !dbg !11606
  %div339 = udiv i64 %227, 2, !dbg !11607
  %228 = load i16*, i16** %yuv1, align 8, !dbg !11608
  %add.ptr340 = getelementptr inbounds i16, i16* %228, i64 %div339, !dbg !11608
  store i16* %add.ptr340, i16** %yuv1, align 8, !dbg !11608
  %229 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11609
  %arrayidx341 = getelementptr inbounds i64, i64* %229, i64 2, !dbg !11609
  %230 = load i64, i64* %arrayidx341, align 8, !dbg !11609
  %div342 = udiv i64 %230, 2, !dbg !11610
  %231 = load i16*, i16** %yuv2, align 8, !dbg !11611
  %add.ptr343 = getelementptr inbounds i16, i16* %231, i64 %div342, !dbg !11611
  store i16* %add.ptr343, i16** %yuv2, align 8, !dbg !11611
  %232 = load i64, i64* %s.addr, align 8, !dbg !11612
  %mul344 = mul nsw i64 %232, 1, !dbg !11613
  %233 = load i16*, i16** %rgb0, align 8, !dbg !11614
  %add.ptr345 = getelementptr inbounds i16, i16* %233, i64 %mul344, !dbg !11614
  store i16* %add.ptr345, i16** %rgb0, align 8, !dbg !11614
  %234 = load i64, i64* %s.addr, align 8, !dbg !11615
  %mul346 = mul nsw i64 %234, 1, !dbg !11616
  %235 = load i16*, i16** %rgb1, align 8, !dbg !11617
  %add.ptr347 = getelementptr inbounds i16, i16* %235, i64 %mul346, !dbg !11617
  store i16* %add.ptr347, i16** %rgb1, align 8, !dbg !11617
  %236 = load i64, i64* %s.addr, align 8, !dbg !11618
  %mul348 = mul nsw i64 %236, 1, !dbg !11619
  %237 = load i16*, i16** %rgb2, align 8, !dbg !11620
  %add.ptr349 = getelementptr inbounds i16, i16* %237, i64 %mul348, !dbg !11620
  store i16* %add.ptr349, i16** %rgb2, align 8, !dbg !11620
  br label %for.inc350, !dbg !11621

for.inc350:                                       ; preds = %for.end336
  %238 = load i32, i32* %y, align 4, !dbg !11622
  %inc351 = add nsw i32 %238, 1, !dbg !11622
  store i32 %inc351, i32* %y, align 4, !dbg !11622
  br label %for.cond72, !dbg !11624, !llvm.loop !11625

for.end352:                                       ; preds = %for.cond72
  ret void, !dbg !11627
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_422p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !11628 {
entry:
  %retval.i509 = alloca i32, align 4
  %a.addr.i510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i510, metadata !4652, metadata !94), !dbg !11629
  %p.addr.i511 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i511, metadata !4665, metadata !94), !dbg !11637
  %retval.i493 = alloca i32, align 4
  %a.addr.i494 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i494, metadata !4652, metadata !94), !dbg !11638
  %p.addr.i495 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i495, metadata !4665, metadata !94), !dbg !11640
  %retval.i477 = alloca i32, align 4
  %a.addr.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i478, metadata !4652, metadata !94), !dbg !11641
  %p.addr.i479 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i479, metadata !4665, metadata !94), !dbg !11643
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !11644
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !11646
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !11647, metadata !94), !dbg !11648
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !11649, metadata !94), !dbg !11650
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !11651, metadata !94), !dbg !11652
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !11653, metadata !94), !dbg !11654
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !11655, metadata !94), !dbg !11656
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !11657, metadata !94), !dbg !11658
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !11659, metadata !94), !dbg !11660
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !11661, metadata !94), !dbg !11662
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !11663, metadata !94), !dbg !11664
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !11665, metadata !94), !dbg !11666
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !11667
  %1 = bitcast i8** %0 to i16**, !dbg !11668
  store i16** %1, i16*** %yuv, align 8, !dbg !11666
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !11669, metadata !94), !dbg !11670
  %2 = load i16**, i16*** %yuv, align 8, !dbg !11671
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !11671
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !11671
  store i16* %3, i16** %yuv0, align 8, !dbg !11670
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !11672, metadata !94), !dbg !11673
  %4 = load i16**, i16*** %yuv, align 8, !dbg !11674
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !11674
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !11674
  store i16* %5, i16** %yuv1, align 8, !dbg !11673
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !11675, metadata !94), !dbg !11676
  %6 = load i16**, i16*** %yuv, align 8, !dbg !11677
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !11677
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !11677
  store i16* %7, i16** %yuv2, align 8, !dbg !11676
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !11678, metadata !94), !dbg !11679
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !11680
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !11680
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !11680
  store i16* %9, i16** %rgb0, align 8, !dbg !11679
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !11681, metadata !94), !dbg !11682
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !11683
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !11683
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !11683
  store i16* %11, i16** %rgb1, align 8, !dbg !11682
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !11684, metadata !94), !dbg !11685
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !11686
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !11686
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !11686
  store i16* %13, i16** %rgb2, align 8, !dbg !11685
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11687, metadata !94), !dbg !11688
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11689, metadata !94), !dbg !11690
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !11691, metadata !94), !dbg !11692
  store i32 17, i32* %sh, align 4, !dbg !11692
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !11693, metadata !94), !dbg !11694
  store i32 65536, i32* %rnd, align 4, !dbg !11694
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !11695, metadata !94), !dbg !11696
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11697
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !11697
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !11697
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !11697
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !11697
  %conv = sext i16 %15 to i32, !dbg !11697
  store i32 %conv, i32* %cry, align 4, !dbg !11696
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !11698, metadata !94), !dbg !11699
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11700
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !11700
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !11700
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !11700
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !11700
  %conv12 = sext i16 %17 to i32, !dbg !11700
  store i32 %conv12, i32* %cgy, align 4, !dbg !11699
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !11701, metadata !94), !dbg !11702
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11703
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !11703
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !11703
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !11703
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !11703
  %conv16 = sext i16 %19 to i32, !dbg !11703
  store i32 %conv16, i32* %cby, align 4, !dbg !11702
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !11704, metadata !94), !dbg !11705
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11706
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !11706
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !11706
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !11706
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !11706
  %conv20 = sext i16 %21 to i32, !dbg !11706
  store i32 %conv20, i32* %cru, align 4, !dbg !11705
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !11707, metadata !94), !dbg !11708
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11709
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !11709
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !11709
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !11709
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !11709
  %conv24 = sext i16 %23 to i32, !dbg !11709
  store i32 %conv24, i32* %cgu, align 4, !dbg !11708
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !11710, metadata !94), !dbg !11711
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11712
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !11712
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !11712
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !11712
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !11712
  %conv28 = sext i16 %25 to i32, !dbg !11712
  store i32 %conv28, i32* %cburv, align 4, !dbg !11711
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !11713, metadata !94), !dbg !11714
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11715
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !11715
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !11715
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !11715
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !11715
  %conv32 = sext i16 %27 to i32, !dbg !11715
  store i32 %conv32, i32* %cgv, align 4, !dbg !11714
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !11716, metadata !94), !dbg !11717
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !11718
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !11718
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !11718
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !11718
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !11718
  %conv36 = sext i16 %29 to i32, !dbg !11718
  store i32 %conv36, i32* %cbv, align 4, !dbg !11717
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !11719, metadata !94), !dbg !11720
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !11721
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !11721
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !11721
  %div = udiv i64 %31, 2, !dbg !11722
  store i64 %div, i64* %s0, align 8, !dbg !11720
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !11723, metadata !94), !dbg !11724
  store i32 2048, i32* %uv_offset, align 4, !dbg !11724
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11725, metadata !94), !dbg !11726
  store i32 131071, i32* %mask, align 4, !dbg !11726
  store i32 0, i32* %x, align 4, !dbg !11727
  br label %for.cond, !dbg !11729

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !11730
  %33 = load i32, i32* %w.addr, align 4, !dbg !11733
  %cmp = icmp slt i32 %32, %33, !dbg !11734
  br i1 %cmp, label %for.body, label %for.end, !dbg !11735

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !11736
  %idxprom = sext i32 %34 to i64, !dbg !11738
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11738
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !11738
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !11738
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !11738
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !11738
  store i32 65536, i32* %arrayidx41, align 4, !dbg !11739
  %37 = load i32, i32* %x, align 4, !dbg !11740
  %idxprom42 = sext i32 %37 to i64, !dbg !11741
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11741
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !11741
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !11741
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !11741
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !11741
  store i32 65536, i32* %arrayidx45, align 4, !dbg !11742
  br label %for.inc, !dbg !11743

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !11744
  %inc = add nsw i32 %40, 1, !dbg !11744
  store i32 %inc, i32* %x, align 4, !dbg !11744
  br label %for.cond, !dbg !11746, !llvm.loop !11747

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !11749
  %add = add nsw i32 %41, 2, !dbg !11750
  %sub = sub nsw i32 %add, 1, !dbg !11751
  %shr = ashr i32 %sub, 1, !dbg !11752
  store i32 %shr, i32* %w.addr, align 4, !dbg !11753
  %42 = load i32, i32* %h.addr, align 4, !dbg !11754
  %add46 = add nsw i32 %42, 1, !dbg !11755
  %sub47 = sub nsw i32 %add46, 1, !dbg !11756
  %shr48 = ashr i32 %sub47, 0, !dbg !11757
  store i32 %shr48, i32* %h.addr, align 4, !dbg !11758
  store i32 0, i32* %x, align 4, !dbg !11759
  br label %for.cond49, !dbg !11761

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !11762
  %44 = load i32, i32* %w.addr, align 4, !dbg !11765
  %cmp50 = icmp slt i32 %43, %44, !dbg !11766
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !11767

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !11768
  %idxprom53 = sext i32 %45 to i64, !dbg !11770
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11770
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !11770
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !11770
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !11770
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !11770
  store i32 65536, i32* %arrayidx56, align 4, !dbg !11771
  %48 = load i32, i32* %x, align 4, !dbg !11772
  %idxprom57 = sext i32 %48 to i64, !dbg !11773
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11773
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !11773
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !11773
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !11773
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !11773
  store i32 65536, i32* %arrayidx60, align 4, !dbg !11774
  %51 = load i32, i32* %x, align 4, !dbg !11775
  %idxprom61 = sext i32 %51 to i64, !dbg !11776
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11776
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !11776
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !11776
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !11776
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !11776
  store i32 65536, i32* %arrayidx64, align 4, !dbg !11777
  %54 = load i32, i32* %x, align 4, !dbg !11778
  %idxprom65 = sext i32 %54 to i64, !dbg !11779
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11779
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !11779
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !11779
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !11779
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !11779
  store i32 65536, i32* %arrayidx68, align 4, !dbg !11780
  br label %for.inc69, !dbg !11781

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !11782
  %inc70 = add nsw i32 %57, 1, !dbg !11782
  store i32 %inc70, i32* %x, align 4, !dbg !11782
  br label %for.cond49, !dbg !11784, !llvm.loop !11785

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !11787
  br label %for.cond72, !dbg !11788

for.cond72:                                       ; preds = %for.inc474, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !11789
  %59 = load i32, i32* %h.addr, align 4, !dbg !11791
  %cmp73 = icmp slt i32 %58, %59, !dbg !11792
  br i1 %cmp73, label %for.body75, label %for.end476, !dbg !11793

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !11794
  br label %for.cond76, !dbg !11795

for.cond76:                                       ; preds = %for.inc458, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !11796
  %61 = load i32, i32* %w.addr, align 4, !dbg !11798
  %cmp77 = icmp slt i32 %60, %61, !dbg !11799
  br i1 %cmp77, label %for.body79, label %for.end460, !dbg !11800

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !11801, metadata !94), !dbg !11802
  %62 = load i32, i32* %x, align 4, !dbg !11803
  %shl = shl i32 %62, 1, !dbg !11804
  %idxprom80 = sext i32 %shl to i64, !dbg !11805
  %63 = load i16*, i16** %rgb0, align 8, !dbg !11805
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !11805
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !11805
  %conv82 = sext i16 %64 to i32, !dbg !11805
  store i32 %conv82, i32* %r00, align 4, !dbg !11802
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !11806, metadata !94), !dbg !11807
  %65 = load i32, i32* %x, align 4, !dbg !11808
  %shl83 = shl i32 %65, 1, !dbg !11809
  %idxprom84 = sext i32 %shl83 to i64, !dbg !11810
  %66 = load i16*, i16** %rgb1, align 8, !dbg !11810
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !11810
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !11810
  %conv86 = sext i16 %67 to i32, !dbg !11810
  store i32 %conv86, i32* %g00, align 4, !dbg !11807
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !11811, metadata !94), !dbg !11812
  %68 = load i32, i32* %x, align 4, !dbg !11813
  %shl87 = shl i32 %68, 1, !dbg !11814
  %idxprom88 = sext i32 %shl87 to i64, !dbg !11815
  %69 = load i16*, i16** %rgb2, align 8, !dbg !11815
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !11815
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !11815
  %conv90 = sext i16 %70 to i32, !dbg !11815
  store i32 %conv90, i32* %b00, align 4, !dbg !11812
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !11816, metadata !94), !dbg !11817
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !11818, metadata !94), !dbg !11819
  %71 = load i32, i32* %x, align 4, !dbg !11820
  %mul = mul nsw i32 %71, 2, !dbg !11821
  %add91 = add nsw i32 %mul, 1, !dbg !11822
  %idxprom92 = sext i32 %add91 to i64, !dbg !11823
  %72 = load i16*, i16** %rgb0, align 8, !dbg !11823
  %arrayidx93 = getelementptr inbounds i16, i16* %72, i64 %idxprom92, !dbg !11823
  %73 = load i16, i16* %arrayidx93, align 2, !dbg !11823
  %conv94 = sext i16 %73 to i32, !dbg !11823
  store i32 %conv94, i32* %r01, align 4, !dbg !11819
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !11824, metadata !94), !dbg !11825
  %74 = load i32, i32* %x, align 4, !dbg !11826
  %mul95 = mul nsw i32 %74, 2, !dbg !11827
  %add96 = add nsw i32 %mul95, 1, !dbg !11828
  %idxprom97 = sext i32 %add96 to i64, !dbg !11829
  %75 = load i16*, i16** %rgb1, align 8, !dbg !11829
  %arrayidx98 = getelementptr inbounds i16, i16* %75, i64 %idxprom97, !dbg !11829
  %76 = load i16, i16* %arrayidx98, align 2, !dbg !11829
  %conv99 = sext i16 %76 to i32, !dbg !11829
  store i32 %conv99, i32* %g01, align 4, !dbg !11825
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !11830, metadata !94), !dbg !11831
  %77 = load i32, i32* %x, align 4, !dbg !11832
  %mul100 = mul nsw i32 %77, 2, !dbg !11833
  %add101 = add nsw i32 %mul100, 1, !dbg !11834
  %idxprom102 = sext i32 %add101 to i64, !dbg !11835
  %78 = load i16*, i16** %rgb2, align 8, !dbg !11835
  %arrayidx103 = getelementptr inbounds i16, i16* %78, i64 %idxprom102, !dbg !11835
  %79 = load i16, i16* %arrayidx103, align 2, !dbg !11835
  %conv104 = sext i16 %79 to i32, !dbg !11835
  store i32 %conv104, i32* %b01, align 4, !dbg !11831
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !11836, metadata !94), !dbg !11837
  call void @llvm.dbg.declare(metadata i32* %u, metadata !11838, metadata !94), !dbg !11839
  call void @llvm.dbg.declare(metadata i32* %v, metadata !11840, metadata !94), !dbg !11841
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !11842, metadata !94), !dbg !11843
  %80 = load i32, i32* %r00, align 4, !dbg !11844
  %81 = load i32, i32* %cry, align 4, !dbg !11845
  %mul105 = mul nsw i32 %80, %81, !dbg !11846
  %82 = load i32, i32* %g00, align 4, !dbg !11847
  %83 = load i32, i32* %cgy, align 4, !dbg !11848
  %mul106 = mul nsw i32 %82, %83, !dbg !11849
  %add107 = add nsw i32 %mul105, %mul106, !dbg !11850
  %84 = load i32, i32* %b00, align 4, !dbg !11851
  %85 = load i32, i32* %cby, align 4, !dbg !11852
  %mul108 = mul nsw i32 %84, %85, !dbg !11853
  %add109 = add nsw i32 %add107, %mul108, !dbg !11854
  %86 = load i32, i32* %x, align 4, !dbg !11855
  %shl110 = shl i32 %86, 1, !dbg !11856
  %idxprom111 = sext i32 %shl110 to i64, !dbg !11857
  %87 = load i32, i32* %y, align 4, !dbg !11858
  %and = and i32 %87, 1, !dbg !11859
  %idxprom112 = sext i32 %and to i64, !dbg !11857
  %88 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11857
  %arrayidx113 = getelementptr inbounds [2 x i32*], [2 x i32*]* %88, i64 0, !dbg !11857
  %arrayidx114 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx113, i64 0, i64 %idxprom112, !dbg !11857
  %89 = load i32*, i32** %arrayidx114, align 8, !dbg !11857
  %arrayidx115 = getelementptr inbounds i32, i32* %89, i64 %idxprom111, !dbg !11857
  %90 = load i32, i32* %arrayidx115, align 4, !dbg !11857
  %add116 = add nsw i32 %add109, %90, !dbg !11860
  store i32 %add116, i32* %y00, align 4, !dbg !11861
  %91 = load i32, i32* %y00, align 4, !dbg !11862
  %92 = load i32, i32* %mask, align 4, !dbg !11863
  %and117 = and i32 %91, %92, !dbg !11864
  %sub118 = sub i32 %and117, 65536, !dbg !11865
  store i32 %sub118, i32* %diff, align 4, !dbg !11866
  %93 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !11867
  %arrayidx119 = getelementptr inbounds i16, i16* %93, i64 0, !dbg !11867
  %94 = load i16, i16* %arrayidx119, align 2, !dbg !11867
  %conv120 = sext i16 %94 to i32, !dbg !11867
  %95 = load i32, i32* %y00, align 4, !dbg !11868
  %shr121 = ashr i32 %95, 17, !dbg !11869
  %add122 = add nsw i32 %conv120, %shr121, !dbg !11870
  store i32 %add122, i32* %a.addr.i, align 4, !dbg !11871
  store i32 12, i32* %p.addr.i, align 4, !dbg !11871
  %96 = load i32, i32* %a.addr.i, align 4, !dbg !11872
  %97 = load i32, i32* %p.addr.i, align 4, !dbg !11873
  %shl.i = shl i32 1, %97, !dbg !11874
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !11875
  %neg.i = xor i32 %sub.i, -1, !dbg !11876
  %and.i = and i32 %96, %neg.i, !dbg !11877
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !11877
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !11878

if.then.i:                                        ; preds = %for.body79
  %98 = load i32, i32* %a.addr.i, align 4, !dbg !11879
  %neg1.i = xor i32 %98, -1, !dbg !11880
  %shr.i = ashr i32 %neg1.i, 31, !dbg !11881
  %99 = load i32, i32* %p.addr.i, align 4, !dbg !11882
  %shl2.i = shl i32 1, %99, !dbg !11883
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !11884
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !11885
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !11886
  br label %av_clip_uintp2_c.exit, !dbg !11886

if.else.i:                                        ; preds = %for.body79
  %100 = load i32, i32* %a.addr.i, align 4, !dbg !11887
  store i32 %100, i32* %retval.i, align 4, !dbg !11888
  br label %av_clip_uintp2_c.exit, !dbg !11888

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %101 = load i32, i32* %retval.i, align 4, !dbg !11889
  %conv123 = trunc i32 %101 to i16, !dbg !11871
  %102 = load i32, i32* %x, align 4, !dbg !11890
  %shl124 = shl i32 %102, 1, !dbg !11891
  %idxprom125 = sext i32 %shl124 to i64, !dbg !11892
  %103 = load i16*, i16** %yuv0, align 8, !dbg !11892
  %arrayidx126 = getelementptr inbounds i16, i16* %103, i64 %idxprom125, !dbg !11892
  store i16 %conv123, i16* %arrayidx126, align 2, !dbg !11893
  %104 = load i32, i32* %diff, align 4, !dbg !11894
  %mul127 = mul nsw i32 %104, 7, !dbg !11895
  %add128 = add nsw i32 %mul127, 8, !dbg !11896
  %shr129 = ashr i32 %add128, 4, !dbg !11897
  %105 = load i32, i32* %x, align 4, !dbg !11898
  %shl130 = shl i32 %105, 1, !dbg !11899
  %add131 = add nsw i32 %shl130, 1, !dbg !11900
  %idxprom132 = sext i32 %add131 to i64, !dbg !11901
  %106 = load i32, i32* %y, align 4, !dbg !11902
  %and133 = and i32 %106, 1, !dbg !11903
  %idxprom134 = sext i32 %and133 to i64, !dbg !11901
  %107 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11901
  %arrayidx135 = getelementptr inbounds [2 x i32*], [2 x i32*]* %107, i64 0, !dbg !11901
  %arrayidx136 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx135, i64 0, i64 %idxprom134, !dbg !11901
  %108 = load i32*, i32** %arrayidx136, align 8, !dbg !11901
  %arrayidx137 = getelementptr inbounds i32, i32* %108, i64 %idxprom132, !dbg !11901
  %109 = load i32, i32* %arrayidx137, align 4, !dbg !11904
  %add138 = add nsw i32 %109, %shr129, !dbg !11904
  store i32 %add138, i32* %arrayidx137, align 4, !dbg !11904
  %110 = load i32, i32* %diff, align 4, !dbg !11905
  %mul139 = mul nsw i32 %110, 3, !dbg !11906
  %add140 = add nsw i32 %mul139, 8, !dbg !11907
  %shr141 = ashr i32 %add140, 4, !dbg !11908
  %111 = load i32, i32* %x, align 4, !dbg !11909
  %shl142 = shl i32 %111, 1, !dbg !11910
  %sub143 = sub nsw i32 %shl142, 1, !dbg !11911
  %idxprom144 = sext i32 %sub143 to i64, !dbg !11912
  %112 = load i32, i32* %y, align 4, !dbg !11913
  %and145 = and i32 %112, 1, !dbg !11914
  %tobool = icmp ne i32 %and145, 0, !dbg !11915
  %lnot = xor i1 %tobool, true, !dbg !11915
  %lnot.ext = zext i1 %lnot to i32, !dbg !11915
  %idxprom146 = sext i32 %lnot.ext to i64, !dbg !11912
  %113 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11912
  %arrayidx147 = getelementptr inbounds [2 x i32*], [2 x i32*]* %113, i64 0, !dbg !11912
  %arrayidx148 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx147, i64 0, i64 %idxprom146, !dbg !11912
  %114 = load i32*, i32** %arrayidx148, align 8, !dbg !11912
  %arrayidx149 = getelementptr inbounds i32, i32* %114, i64 %idxprom144, !dbg !11912
  %115 = load i32, i32* %arrayidx149, align 4, !dbg !11916
  %add150 = add nsw i32 %115, %shr141, !dbg !11916
  store i32 %add150, i32* %arrayidx149, align 4, !dbg !11916
  %116 = load i32, i32* %diff, align 4, !dbg !11917
  %mul151 = mul nsw i32 %116, 5, !dbg !11918
  %add152 = add nsw i32 %mul151, 8, !dbg !11919
  %shr153 = ashr i32 %add152, 4, !dbg !11920
  %117 = load i32, i32* %x, align 4, !dbg !11921
  %shl154 = shl i32 %117, 1, !dbg !11922
  %add155 = add nsw i32 %shl154, 0, !dbg !11923
  %idxprom156 = sext i32 %add155 to i64, !dbg !11924
  %118 = load i32, i32* %y, align 4, !dbg !11925
  %and157 = and i32 %118, 1, !dbg !11926
  %tobool158 = icmp ne i32 %and157, 0, !dbg !11927
  %lnot159 = xor i1 %tobool158, true, !dbg !11927
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !11927
  %idxprom161 = sext i32 %lnot.ext160 to i64, !dbg !11924
  %119 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11924
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %119, i64 0, !dbg !11924
  %arrayidx163 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx162, i64 0, i64 %idxprom161, !dbg !11924
  %120 = load i32*, i32** %arrayidx163, align 8, !dbg !11924
  %arrayidx164 = getelementptr inbounds i32, i32* %120, i64 %idxprom156, !dbg !11924
  %121 = load i32, i32* %arrayidx164, align 4, !dbg !11928
  %add165 = add nsw i32 %121, %shr153, !dbg !11928
  store i32 %add165, i32* %arrayidx164, align 4, !dbg !11928
  %122 = load i32, i32* %diff, align 4, !dbg !11929
  %mul166 = mul nsw i32 %122, 1, !dbg !11930
  %add167 = add nsw i32 %mul166, 8, !dbg !11931
  %shr168 = ashr i32 %add167, 4, !dbg !11932
  %123 = load i32, i32* %x, align 4, !dbg !11933
  %shl169 = shl i32 %123, 1, !dbg !11934
  %add170 = add nsw i32 %shl169, 1, !dbg !11935
  %idxprom171 = sext i32 %add170 to i64, !dbg !11936
  %124 = load i32, i32* %y, align 4, !dbg !11937
  %and172 = and i32 %124, 1, !dbg !11938
  %tobool173 = icmp ne i32 %and172, 0, !dbg !11939
  %lnot174 = xor i1 %tobool173, true, !dbg !11939
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !11939
  %idxprom176 = sext i32 %lnot.ext175 to i64, !dbg !11936
  %125 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11936
  %arrayidx177 = getelementptr inbounds [2 x i32*], [2 x i32*]* %125, i64 0, !dbg !11936
  %arrayidx178 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx177, i64 0, i64 %idxprom176, !dbg !11936
  %126 = load i32*, i32** %arrayidx178, align 8, !dbg !11936
  %arrayidx179 = getelementptr inbounds i32, i32* %126, i64 %idxprom171, !dbg !11936
  %127 = load i32, i32* %arrayidx179, align 4, !dbg !11940
  %add180 = add nsw i32 %127, %shr168, !dbg !11940
  store i32 %add180, i32* %arrayidx179, align 4, !dbg !11940
  %128 = load i32, i32* %x, align 4, !dbg !11941
  %shl181 = shl i32 %128, 1, !dbg !11942
  %add182 = add nsw i32 %shl181, 0, !dbg !11943
  %idxprom183 = sext i32 %add182 to i64, !dbg !11944
  %129 = load i32, i32* %y, align 4, !dbg !11945
  %and184 = and i32 %129, 1, !dbg !11946
  %idxprom185 = sext i32 %and184 to i64, !dbg !11944
  %130 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11944
  %arrayidx186 = getelementptr inbounds [2 x i32*], [2 x i32*]* %130, i64 0, !dbg !11944
  %arrayidx187 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx186, i64 0, i64 %idxprom185, !dbg !11944
  %131 = load i32*, i32** %arrayidx187, align 8, !dbg !11944
  %arrayidx188 = getelementptr inbounds i32, i32* %131, i64 %idxprom183, !dbg !11944
  store i32 65536, i32* %arrayidx188, align 4, !dbg !11947
  %132 = load i32, i32* %r01, align 4, !dbg !11948
  %133 = load i32, i32* %cry, align 4, !dbg !11949
  %mul189 = mul nsw i32 %132, %133, !dbg !11950
  %134 = load i32, i32* %g01, align 4, !dbg !11951
  %135 = load i32, i32* %cgy, align 4, !dbg !11952
  %mul190 = mul nsw i32 %134, %135, !dbg !11953
  %add191 = add nsw i32 %mul189, %mul190, !dbg !11954
  %136 = load i32, i32* %b01, align 4, !dbg !11955
  %137 = load i32, i32* %cby, align 4, !dbg !11956
  %mul192 = mul nsw i32 %136, %137, !dbg !11957
  %add193 = add nsw i32 %add191, %mul192, !dbg !11958
  %138 = load i32, i32* %x, align 4, !dbg !11959
  %mul194 = mul nsw i32 %138, 2, !dbg !11960
  %add195 = add nsw i32 %mul194, 1, !dbg !11961
  %idxprom196 = sext i32 %add195 to i64, !dbg !11962
  %139 = load i32, i32* %y, align 4, !dbg !11963
  %and197 = and i32 %139, 1, !dbg !11964
  %idxprom198 = sext i32 %and197 to i64, !dbg !11962
  %140 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !11962
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %140, i64 0, !dbg !11962
  %arrayidx200 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx199, i64 0, i64 %idxprom198, !dbg !11962
  %141 = load i32*, i32** %arrayidx200, align 8, !dbg !11962
  %arrayidx201 = getelementptr inbounds i32, i32* %141, i64 %idxprom196, !dbg !11962
  %142 = load i32, i32* %arrayidx201, align 4, !dbg !11962
  %add202 = add nsw i32 %add193, %142, !dbg !11965
  store i32 %add202, i32* %y01, align 4, !dbg !11966
  %143 = load i32, i32* %y01, align 4, !dbg !11967
  %144 = load i32, i32* %mask, align 4, !dbg !11968
  %and203 = and i32 %143, %144, !dbg !11969
  %sub204 = sub i32 %and203, 65536, !dbg !11970
  store i32 %sub204, i32* %diff, align 4, !dbg !11971
  %145 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !11972
  %arrayidx205 = getelementptr inbounds i16, i16* %145, i64 0, !dbg !11972
  %146 = load i16, i16* %arrayidx205, align 2, !dbg !11972
  %conv206 = sext i16 %146 to i32, !dbg !11972
  %147 = load i32, i32* %y01, align 4, !dbg !11973
  %shr207 = ashr i32 %147, 17, !dbg !11974
  %add208 = add nsw i32 %conv206, %shr207, !dbg !11975
  store i32 %add208, i32* %a.addr.i510, align 4, !dbg !11976
  store i32 12, i32* %p.addr.i511, align 4, !dbg !11976
  %148 = load i32, i32* %a.addr.i510, align 4, !dbg !11977
  %149 = load i32, i32* %p.addr.i511, align 4, !dbg !11978
  %shl.i512 = shl i32 1, %149, !dbg !11979
  %sub.i513 = sub nsw i32 %shl.i512, 1, !dbg !11980
  %neg.i514 = xor i32 %sub.i513, -1, !dbg !11981
  %and.i515 = and i32 %148, %neg.i514, !dbg !11982
  %tobool.i516 = icmp ne i32 %and.i515, 0, !dbg !11982
  br i1 %tobool.i516, label %if.then.i522, label %if.else.i523, !dbg !11983

if.then.i522:                                     ; preds = %av_clip_uintp2_c.exit
  %150 = load i32, i32* %a.addr.i510, align 4, !dbg !11984
  %neg1.i517 = xor i32 %150, -1, !dbg !11985
  %shr.i518 = ashr i32 %neg1.i517, 31, !dbg !11986
  %151 = load i32, i32* %p.addr.i511, align 4, !dbg !11987
  %shl2.i519 = shl i32 1, %151, !dbg !11988
  %sub3.i520 = sub nsw i32 %shl2.i519, 1, !dbg !11989
  %and4.i521 = and i32 %shr.i518, %sub3.i520, !dbg !11990
  store i32 %and4.i521, i32* %retval.i509, align 4, !dbg !11991
  br label %av_clip_uintp2_c.exit524, !dbg !11991

if.else.i523:                                     ; preds = %av_clip_uintp2_c.exit
  %152 = load i32, i32* %a.addr.i510, align 4, !dbg !11992
  store i32 %152, i32* %retval.i509, align 4, !dbg !11993
  br label %av_clip_uintp2_c.exit524, !dbg !11993

av_clip_uintp2_c.exit524:                         ; preds = %if.then.i522, %if.else.i523
  %153 = load i32, i32* %retval.i509, align 4, !dbg !11994
  %conv210 = trunc i32 %153 to i16, !dbg !11976
  %154 = load i32, i32* %x, align 4, !dbg !11995
  %mul211 = mul nsw i32 %154, 2, !dbg !11996
  %add212 = add nsw i32 %mul211, 1, !dbg !11997
  %idxprom213 = sext i32 %add212 to i64, !dbg !11998
  %155 = load i16*, i16** %yuv0, align 8, !dbg !11998
  %arrayidx214 = getelementptr inbounds i16, i16* %155, i64 %idxprom213, !dbg !11998
  store i16 %conv210, i16* %arrayidx214, align 2, !dbg !11999
  %156 = load i32, i32* %diff, align 4, !dbg !12000
  %mul215 = mul nsw i32 %156, 7, !dbg !12001
  %add216 = add nsw i32 %mul215, 8, !dbg !12002
  %shr217 = ashr i32 %add216, 4, !dbg !12003
  %157 = load i32, i32* %x, align 4, !dbg !12004
  %mul218 = mul nsw i32 %157, 2, !dbg !12005
  %add219 = add nsw i32 %mul218, 2, !dbg !12006
  %idxprom220 = sext i32 %add219 to i64, !dbg !12007
  %158 = load i32, i32* %y, align 4, !dbg !12008
  %and221 = and i32 %158, 1, !dbg !12009
  %idxprom222 = sext i32 %and221 to i64, !dbg !12007
  %159 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12007
  %arrayidx223 = getelementptr inbounds [2 x i32*], [2 x i32*]* %159, i64 0, !dbg !12007
  %arrayidx224 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx223, i64 0, i64 %idxprom222, !dbg !12007
  %160 = load i32*, i32** %arrayidx224, align 8, !dbg !12007
  %arrayidx225 = getelementptr inbounds i32, i32* %160, i64 %idxprom220, !dbg !12007
  %161 = load i32, i32* %arrayidx225, align 4, !dbg !12010
  %add226 = add nsw i32 %161, %shr217, !dbg !12010
  store i32 %add226, i32* %arrayidx225, align 4, !dbg !12010
  %162 = load i32, i32* %diff, align 4, !dbg !12011
  %mul227 = mul nsw i32 %162, 3, !dbg !12012
  %add228 = add nsw i32 %mul227, 8, !dbg !12013
  %shr229 = ashr i32 %add228, 4, !dbg !12014
  %163 = load i32, i32* %x, align 4, !dbg !12015
  %mul230 = mul nsw i32 %163, 2, !dbg !12016
  %add231 = add nsw i32 %mul230, 0, !dbg !12017
  %idxprom232 = sext i32 %add231 to i64, !dbg !12018
  %164 = load i32, i32* %y, align 4, !dbg !12019
  %and233 = and i32 %164, 1, !dbg !12020
  %tobool234 = icmp ne i32 %and233, 0, !dbg !12021
  %lnot235 = xor i1 %tobool234, true, !dbg !12021
  %lnot.ext236 = zext i1 %lnot235 to i32, !dbg !12021
  %idxprom237 = sext i32 %lnot.ext236 to i64, !dbg !12018
  %165 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12018
  %arrayidx238 = getelementptr inbounds [2 x i32*], [2 x i32*]* %165, i64 0, !dbg !12018
  %arrayidx239 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx238, i64 0, i64 %idxprom237, !dbg !12018
  %166 = load i32*, i32** %arrayidx239, align 8, !dbg !12018
  %arrayidx240 = getelementptr inbounds i32, i32* %166, i64 %idxprom232, !dbg !12018
  %167 = load i32, i32* %arrayidx240, align 4, !dbg !12022
  %add241 = add nsw i32 %167, %shr229, !dbg !12022
  store i32 %add241, i32* %arrayidx240, align 4, !dbg !12022
  %168 = load i32, i32* %diff, align 4, !dbg !12023
  %mul242 = mul nsw i32 %168, 5, !dbg !12024
  %add243 = add nsw i32 %mul242, 8, !dbg !12025
  %shr244 = ashr i32 %add243, 4, !dbg !12026
  %169 = load i32, i32* %x, align 4, !dbg !12027
  %mul245 = mul nsw i32 %169, 2, !dbg !12028
  %add246 = add nsw i32 %mul245, 1, !dbg !12029
  %idxprom247 = sext i32 %add246 to i64, !dbg !12030
  %170 = load i32, i32* %y, align 4, !dbg !12031
  %and248 = and i32 %170, 1, !dbg !12032
  %tobool249 = icmp ne i32 %and248, 0, !dbg !12033
  %lnot250 = xor i1 %tobool249, true, !dbg !12033
  %lnot.ext251 = zext i1 %lnot250 to i32, !dbg !12033
  %idxprom252 = sext i32 %lnot.ext251 to i64, !dbg !12030
  %171 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12030
  %arrayidx253 = getelementptr inbounds [2 x i32*], [2 x i32*]* %171, i64 0, !dbg !12030
  %arrayidx254 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx253, i64 0, i64 %idxprom252, !dbg !12030
  %172 = load i32*, i32** %arrayidx254, align 8, !dbg !12030
  %arrayidx255 = getelementptr inbounds i32, i32* %172, i64 %idxprom247, !dbg !12030
  %173 = load i32, i32* %arrayidx255, align 4, !dbg !12034
  %add256 = add nsw i32 %173, %shr244, !dbg !12034
  store i32 %add256, i32* %arrayidx255, align 4, !dbg !12034
  %174 = load i32, i32* %diff, align 4, !dbg !12035
  %mul257 = mul nsw i32 %174, 1, !dbg !12036
  %add258 = add nsw i32 %mul257, 8, !dbg !12037
  %shr259 = ashr i32 %add258, 4, !dbg !12038
  %175 = load i32, i32* %x, align 4, !dbg !12039
  %mul260 = mul nsw i32 %175, 2, !dbg !12040
  %add261 = add nsw i32 %mul260, 2, !dbg !12041
  %idxprom262 = sext i32 %add261 to i64, !dbg !12042
  %176 = load i32, i32* %y, align 4, !dbg !12043
  %and263 = and i32 %176, 1, !dbg !12044
  %tobool264 = icmp ne i32 %and263, 0, !dbg !12045
  %lnot265 = xor i1 %tobool264, true, !dbg !12045
  %lnot.ext266 = zext i1 %lnot265 to i32, !dbg !12045
  %idxprom267 = sext i32 %lnot.ext266 to i64, !dbg !12042
  %177 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12042
  %arrayidx268 = getelementptr inbounds [2 x i32*], [2 x i32*]* %177, i64 0, !dbg !12042
  %arrayidx269 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx268, i64 0, i64 %idxprom267, !dbg !12042
  %178 = load i32*, i32** %arrayidx269, align 8, !dbg !12042
  %arrayidx270 = getelementptr inbounds i32, i32* %178, i64 %idxprom262, !dbg !12042
  %179 = load i32, i32* %arrayidx270, align 4, !dbg !12046
  %add271 = add nsw i32 %179, %shr259, !dbg !12046
  store i32 %add271, i32* %arrayidx270, align 4, !dbg !12046
  %180 = load i32, i32* %x, align 4, !dbg !12047
  %mul272 = mul nsw i32 %180, 2, !dbg !12048
  %add273 = add nsw i32 %mul272, 1, !dbg !12049
  %idxprom274 = sext i32 %add273 to i64, !dbg !12050
  %181 = load i32, i32* %y, align 4, !dbg !12051
  %and275 = and i32 %181, 1, !dbg !12052
  %idxprom276 = sext i32 %and275 to i64, !dbg !12050
  %182 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12050
  %arrayidx277 = getelementptr inbounds [2 x i32*], [2 x i32*]* %182, i64 0, !dbg !12050
  %arrayidx278 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx277, i64 0, i64 %idxprom276, !dbg !12050
  %183 = load i32*, i32** %arrayidx278, align 8, !dbg !12050
  %arrayidx279 = getelementptr inbounds i32, i32* %183, i64 %idxprom274, !dbg !12050
  store i32 65536, i32* %arrayidx279, align 4, !dbg !12053
  %184 = load i32, i32* %r00, align 4, !dbg !12054
  %185 = load i32, i32* %r01, align 4, !dbg !12055
  %add280 = add nsw i32 %184, %185, !dbg !12056
  %add281 = add nsw i32 %add280, 1, !dbg !12057
  %shr282 = ashr i32 %add281, 1, !dbg !12058
  %186 = load i32, i32* %cru, align 4, !dbg !12059
  %mul283 = mul nsw i32 %shr282, %186, !dbg !12060
  %187 = load i32, i32* %g00, align 4, !dbg !12061
  %188 = load i32, i32* %g01, align 4, !dbg !12062
  %add284 = add nsw i32 %187, %188, !dbg !12063
  %add285 = add nsw i32 %add284, 1, !dbg !12064
  %shr286 = ashr i32 %add285, 1, !dbg !12065
  %189 = load i32, i32* %cgu, align 4, !dbg !12066
  %mul287 = mul nsw i32 %shr286, %189, !dbg !12067
  %add288 = add nsw i32 %mul283, %mul287, !dbg !12068
  %190 = load i32, i32* %b00, align 4, !dbg !12069
  %191 = load i32, i32* %b01, align 4, !dbg !12070
  %add289 = add nsw i32 %190, %191, !dbg !12071
  %add290 = add nsw i32 %add289, 1, !dbg !12072
  %shr291 = ashr i32 %add290, 1, !dbg !12073
  %192 = load i32, i32* %cburv, align 4, !dbg !12074
  %mul292 = mul nsw i32 %shr291, %192, !dbg !12075
  %add293 = add nsw i32 %add288, %mul292, !dbg !12076
  %193 = load i32, i32* %x, align 4, !dbg !12077
  %idxprom294 = sext i32 %193 to i64, !dbg !12078
  %194 = load i32, i32* %y, align 4, !dbg !12079
  %and295 = and i32 %194, 1, !dbg !12080
  %idxprom296 = sext i32 %and295 to i64, !dbg !12078
  %195 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12078
  %arrayidx297 = getelementptr inbounds [2 x i32*], [2 x i32*]* %195, i64 1, !dbg !12078
  %arrayidx298 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx297, i64 0, i64 %idxprom296, !dbg !12078
  %196 = load i32*, i32** %arrayidx298, align 8, !dbg !12078
  %arrayidx299 = getelementptr inbounds i32, i32* %196, i64 %idxprom294, !dbg !12078
  %197 = load i32, i32* %arrayidx299, align 4, !dbg !12078
  %add300 = add nsw i32 %add293, %197, !dbg !12081
  store i32 %add300, i32* %u, align 4, !dbg !12082
  %198 = load i32, i32* %u, align 4, !dbg !12083
  %199 = load i32, i32* %mask, align 4, !dbg !12084
  %and301 = and i32 %198, %199, !dbg !12085
  %sub302 = sub i32 %and301, 65536, !dbg !12086
  store i32 %sub302, i32* %diff, align 4, !dbg !12087
  %200 = load i32, i32* %u, align 4, !dbg !12088
  %shr303 = ashr i32 %200, 17, !dbg !12089
  %add304 = add nsw i32 2048, %shr303, !dbg !12090
  store i32 %add304, i32* %a.addr.i494, align 4, !dbg !12091
  store i32 12, i32* %p.addr.i495, align 4, !dbg !12091
  %201 = load i32, i32* %a.addr.i494, align 4, !dbg !12092
  %202 = load i32, i32* %p.addr.i495, align 4, !dbg !12093
  %shl.i496 = shl i32 1, %202, !dbg !12094
  %sub.i497 = sub nsw i32 %shl.i496, 1, !dbg !12095
  %neg.i498 = xor i32 %sub.i497, -1, !dbg !12096
  %and.i499 = and i32 %201, %neg.i498, !dbg !12097
  %tobool.i500 = icmp ne i32 %and.i499, 0, !dbg !12097
  br i1 %tobool.i500, label %if.then.i506, label %if.else.i507, !dbg !12098

if.then.i506:                                     ; preds = %av_clip_uintp2_c.exit524
  %203 = load i32, i32* %a.addr.i494, align 4, !dbg !12099
  %neg1.i501 = xor i32 %203, -1, !dbg !12100
  %shr.i502 = ashr i32 %neg1.i501, 31, !dbg !12101
  %204 = load i32, i32* %p.addr.i495, align 4, !dbg !12102
  %shl2.i503 = shl i32 1, %204, !dbg !12103
  %sub3.i504 = sub nsw i32 %shl2.i503, 1, !dbg !12104
  %and4.i505 = and i32 %shr.i502, %sub3.i504, !dbg !12105
  store i32 %and4.i505, i32* %retval.i493, align 4, !dbg !12106
  br label %av_clip_uintp2_c.exit508, !dbg !12106

if.else.i507:                                     ; preds = %av_clip_uintp2_c.exit524
  %205 = load i32, i32* %a.addr.i494, align 4, !dbg !12107
  store i32 %205, i32* %retval.i493, align 4, !dbg !12108
  br label %av_clip_uintp2_c.exit508, !dbg !12108

av_clip_uintp2_c.exit508:                         ; preds = %if.then.i506, %if.else.i507
  %206 = load i32, i32* %retval.i493, align 4, !dbg !12109
  %conv306 = trunc i32 %206 to i16, !dbg !12091
  %207 = load i32, i32* %x, align 4, !dbg !12110
  %idxprom307 = sext i32 %207 to i64, !dbg !12111
  %208 = load i16*, i16** %yuv1, align 8, !dbg !12111
  %arrayidx308 = getelementptr inbounds i16, i16* %208, i64 %idxprom307, !dbg !12111
  store i16 %conv306, i16* %arrayidx308, align 2, !dbg !12112
  %209 = load i32, i32* %diff, align 4, !dbg !12113
  %mul309 = mul nsw i32 %209, 7, !dbg !12114
  %add310 = add nsw i32 %mul309, 8, !dbg !12115
  %shr311 = ashr i32 %add310, 4, !dbg !12116
  %210 = load i32, i32* %x, align 4, !dbg !12117
  %add312 = add nsw i32 %210, 1, !dbg !12118
  %idxprom313 = sext i32 %add312 to i64, !dbg !12119
  %211 = load i32, i32* %y, align 4, !dbg !12120
  %and314 = and i32 %211, 1, !dbg !12121
  %idxprom315 = sext i32 %and314 to i64, !dbg !12119
  %212 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12119
  %arrayidx316 = getelementptr inbounds [2 x i32*], [2 x i32*]* %212, i64 1, !dbg !12119
  %arrayidx317 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx316, i64 0, i64 %idxprom315, !dbg !12119
  %213 = load i32*, i32** %arrayidx317, align 8, !dbg !12119
  %arrayidx318 = getelementptr inbounds i32, i32* %213, i64 %idxprom313, !dbg !12119
  %214 = load i32, i32* %arrayidx318, align 4, !dbg !12122
  %add319 = add nsw i32 %214, %shr311, !dbg !12122
  store i32 %add319, i32* %arrayidx318, align 4, !dbg !12122
  %215 = load i32, i32* %diff, align 4, !dbg !12123
  %mul320 = mul nsw i32 %215, 3, !dbg !12124
  %add321 = add nsw i32 %mul320, 8, !dbg !12125
  %shr322 = ashr i32 %add321, 4, !dbg !12126
  %216 = load i32, i32* %x, align 4, !dbg !12127
  %sub323 = sub nsw i32 %216, 1, !dbg !12128
  %idxprom324 = sext i32 %sub323 to i64, !dbg !12129
  %217 = load i32, i32* %y, align 4, !dbg !12130
  %and325 = and i32 %217, 1, !dbg !12131
  %tobool326 = icmp ne i32 %and325, 0, !dbg !12132
  %lnot327 = xor i1 %tobool326, true, !dbg !12132
  %lnot.ext328 = zext i1 %lnot327 to i32, !dbg !12132
  %idxprom329 = sext i32 %lnot.ext328 to i64, !dbg !12129
  %218 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12129
  %arrayidx330 = getelementptr inbounds [2 x i32*], [2 x i32*]* %218, i64 1, !dbg !12129
  %arrayidx331 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx330, i64 0, i64 %idxprom329, !dbg !12129
  %219 = load i32*, i32** %arrayidx331, align 8, !dbg !12129
  %arrayidx332 = getelementptr inbounds i32, i32* %219, i64 %idxprom324, !dbg !12129
  %220 = load i32, i32* %arrayidx332, align 4, !dbg !12133
  %add333 = add nsw i32 %220, %shr322, !dbg !12133
  store i32 %add333, i32* %arrayidx332, align 4, !dbg !12133
  %221 = load i32, i32* %diff, align 4, !dbg !12134
  %mul334 = mul nsw i32 %221, 5, !dbg !12135
  %add335 = add nsw i32 %mul334, 8, !dbg !12136
  %shr336 = ashr i32 %add335, 4, !dbg !12137
  %222 = load i32, i32* %x, align 4, !dbg !12138
  %add337 = add nsw i32 %222, 0, !dbg !12139
  %idxprom338 = sext i32 %add337 to i64, !dbg !12140
  %223 = load i32, i32* %y, align 4, !dbg !12141
  %and339 = and i32 %223, 1, !dbg !12142
  %tobool340 = icmp ne i32 %and339, 0, !dbg !12143
  %lnot341 = xor i1 %tobool340, true, !dbg !12143
  %lnot.ext342 = zext i1 %lnot341 to i32, !dbg !12143
  %idxprom343 = sext i32 %lnot.ext342 to i64, !dbg !12140
  %224 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12140
  %arrayidx344 = getelementptr inbounds [2 x i32*], [2 x i32*]* %224, i64 1, !dbg !12140
  %arrayidx345 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx344, i64 0, i64 %idxprom343, !dbg !12140
  %225 = load i32*, i32** %arrayidx345, align 8, !dbg !12140
  %arrayidx346 = getelementptr inbounds i32, i32* %225, i64 %idxprom338, !dbg !12140
  %226 = load i32, i32* %arrayidx346, align 4, !dbg !12144
  %add347 = add nsw i32 %226, %shr336, !dbg !12144
  store i32 %add347, i32* %arrayidx346, align 4, !dbg !12144
  %227 = load i32, i32* %diff, align 4, !dbg !12145
  %mul348 = mul nsw i32 %227, 1, !dbg !12146
  %add349 = add nsw i32 %mul348, 8, !dbg !12147
  %shr350 = ashr i32 %add349, 4, !dbg !12148
  %228 = load i32, i32* %x, align 4, !dbg !12149
  %add351 = add nsw i32 %228, 1, !dbg !12150
  %idxprom352 = sext i32 %add351 to i64, !dbg !12151
  %229 = load i32, i32* %y, align 4, !dbg !12152
  %and353 = and i32 %229, 1, !dbg !12153
  %tobool354 = icmp ne i32 %and353, 0, !dbg !12154
  %lnot355 = xor i1 %tobool354, true, !dbg !12154
  %lnot.ext356 = zext i1 %lnot355 to i32, !dbg !12154
  %idxprom357 = sext i32 %lnot.ext356 to i64, !dbg !12151
  %230 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12151
  %arrayidx358 = getelementptr inbounds [2 x i32*], [2 x i32*]* %230, i64 1, !dbg !12151
  %arrayidx359 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx358, i64 0, i64 %idxprom357, !dbg !12151
  %231 = load i32*, i32** %arrayidx359, align 8, !dbg !12151
  %arrayidx360 = getelementptr inbounds i32, i32* %231, i64 %idxprom352, !dbg !12151
  %232 = load i32, i32* %arrayidx360, align 4, !dbg !12155
  %add361 = add nsw i32 %232, %shr350, !dbg !12155
  store i32 %add361, i32* %arrayidx360, align 4, !dbg !12155
  %233 = load i32, i32* %x, align 4, !dbg !12156
  %add362 = add nsw i32 %233, 0, !dbg !12157
  %idxprom363 = sext i32 %add362 to i64, !dbg !12158
  %234 = load i32, i32* %y, align 4, !dbg !12159
  %and364 = and i32 %234, 1, !dbg !12160
  %idxprom365 = sext i32 %and364 to i64, !dbg !12158
  %235 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12158
  %arrayidx366 = getelementptr inbounds [2 x i32*], [2 x i32*]* %235, i64 1, !dbg !12158
  %arrayidx367 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx366, i64 0, i64 %idxprom365, !dbg !12158
  %236 = load i32*, i32** %arrayidx367, align 8, !dbg !12158
  %arrayidx368 = getelementptr inbounds i32, i32* %236, i64 %idxprom363, !dbg !12158
  store i32 65536, i32* %arrayidx368, align 4, !dbg !12161
  %237 = load i32, i32* %r00, align 4, !dbg !12162
  %238 = load i32, i32* %r01, align 4, !dbg !12163
  %add369 = add nsw i32 %237, %238, !dbg !12164
  %add370 = add nsw i32 %add369, 1, !dbg !12165
  %shr371 = ashr i32 %add370, 1, !dbg !12166
  %239 = load i32, i32* %cburv, align 4, !dbg !12167
  %mul372 = mul nsw i32 %shr371, %239, !dbg !12168
  %240 = load i32, i32* %g00, align 4, !dbg !12169
  %241 = load i32, i32* %g01, align 4, !dbg !12170
  %add373 = add nsw i32 %240, %241, !dbg !12171
  %add374 = add nsw i32 %add373, 1, !dbg !12172
  %shr375 = ashr i32 %add374, 1, !dbg !12173
  %242 = load i32, i32* %cgv, align 4, !dbg !12174
  %mul376 = mul nsw i32 %shr375, %242, !dbg !12175
  %add377 = add nsw i32 %mul372, %mul376, !dbg !12176
  %243 = load i32, i32* %b00, align 4, !dbg !12177
  %244 = load i32, i32* %b01, align 4, !dbg !12178
  %add378 = add nsw i32 %243, %244, !dbg !12179
  %add379 = add nsw i32 %add378, 1, !dbg !12180
  %shr380 = ashr i32 %add379, 1, !dbg !12181
  %245 = load i32, i32* %cbv, align 4, !dbg !12182
  %mul381 = mul nsw i32 %shr380, %245, !dbg !12183
  %add382 = add nsw i32 %add377, %mul381, !dbg !12184
  %246 = load i32, i32* %x, align 4, !dbg !12185
  %idxprom383 = sext i32 %246 to i64, !dbg !12186
  %247 = load i32, i32* %y, align 4, !dbg !12187
  %and384 = and i32 %247, 1, !dbg !12188
  %idxprom385 = sext i32 %and384 to i64, !dbg !12186
  %248 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12186
  %arrayidx386 = getelementptr inbounds [2 x i32*], [2 x i32*]* %248, i64 2, !dbg !12186
  %arrayidx387 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx386, i64 0, i64 %idxprom385, !dbg !12186
  %249 = load i32*, i32** %arrayidx387, align 8, !dbg !12186
  %arrayidx388 = getelementptr inbounds i32, i32* %249, i64 %idxprom383, !dbg !12186
  %250 = load i32, i32* %arrayidx388, align 4, !dbg !12186
  %add389 = add nsw i32 %add382, %250, !dbg !12189
  store i32 %add389, i32* %v, align 4, !dbg !12190
  %251 = load i32, i32* %v, align 4, !dbg !12191
  %252 = load i32, i32* %mask, align 4, !dbg !12192
  %and390 = and i32 %251, %252, !dbg !12193
  %sub391 = sub i32 %and390, 65536, !dbg !12194
  store i32 %sub391, i32* %diff, align 4, !dbg !12195
  %253 = load i32, i32* %v, align 4, !dbg !12196
  %shr392 = ashr i32 %253, 17, !dbg !12197
  %add393 = add nsw i32 2048, %shr392, !dbg !12198
  store i32 %add393, i32* %a.addr.i478, align 4, !dbg !12199
  store i32 12, i32* %p.addr.i479, align 4, !dbg !12199
  %254 = load i32, i32* %a.addr.i478, align 4, !dbg !12200
  %255 = load i32, i32* %p.addr.i479, align 4, !dbg !12201
  %shl.i480 = shl i32 1, %255, !dbg !12202
  %sub.i481 = sub nsw i32 %shl.i480, 1, !dbg !12203
  %neg.i482 = xor i32 %sub.i481, -1, !dbg !12204
  %and.i483 = and i32 %254, %neg.i482, !dbg !12205
  %tobool.i484 = icmp ne i32 %and.i483, 0, !dbg !12205
  br i1 %tobool.i484, label %if.then.i490, label %if.else.i491, !dbg !12206

if.then.i490:                                     ; preds = %av_clip_uintp2_c.exit508
  %256 = load i32, i32* %a.addr.i478, align 4, !dbg !12207
  %neg1.i485 = xor i32 %256, -1, !dbg !12208
  %shr.i486 = ashr i32 %neg1.i485, 31, !dbg !12209
  %257 = load i32, i32* %p.addr.i479, align 4, !dbg !12210
  %shl2.i487 = shl i32 1, %257, !dbg !12211
  %sub3.i488 = sub nsw i32 %shl2.i487, 1, !dbg !12212
  %and4.i489 = and i32 %shr.i486, %sub3.i488, !dbg !12213
  store i32 %and4.i489, i32* %retval.i477, align 4, !dbg !12214
  br label %av_clip_uintp2_c.exit492, !dbg !12214

if.else.i491:                                     ; preds = %av_clip_uintp2_c.exit508
  %258 = load i32, i32* %a.addr.i478, align 4, !dbg !12215
  store i32 %258, i32* %retval.i477, align 4, !dbg !12216
  br label %av_clip_uintp2_c.exit492, !dbg !12216

av_clip_uintp2_c.exit492:                         ; preds = %if.then.i490, %if.else.i491
  %259 = load i32, i32* %retval.i477, align 4, !dbg !12217
  %conv395 = trunc i32 %259 to i16, !dbg !12199
  %260 = load i32, i32* %x, align 4, !dbg !12218
  %idxprom396 = sext i32 %260 to i64, !dbg !12219
  %261 = load i16*, i16** %yuv2, align 8, !dbg !12219
  %arrayidx397 = getelementptr inbounds i16, i16* %261, i64 %idxprom396, !dbg !12219
  store i16 %conv395, i16* %arrayidx397, align 2, !dbg !12220
  %262 = load i32, i32* %diff, align 4, !dbg !12221
  %mul398 = mul nsw i32 %262, 7, !dbg !12222
  %add399 = add nsw i32 %mul398, 8, !dbg !12223
  %shr400 = ashr i32 %add399, 4, !dbg !12224
  %263 = load i32, i32* %x, align 4, !dbg !12225
  %add401 = add nsw i32 %263, 1, !dbg !12226
  %idxprom402 = sext i32 %add401 to i64, !dbg !12227
  %264 = load i32, i32* %y, align 4, !dbg !12228
  %and403 = and i32 %264, 1, !dbg !12229
  %idxprom404 = sext i32 %and403 to i64, !dbg !12227
  %265 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12227
  %arrayidx405 = getelementptr inbounds [2 x i32*], [2 x i32*]* %265, i64 2, !dbg !12227
  %arrayidx406 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx405, i64 0, i64 %idxprom404, !dbg !12227
  %266 = load i32*, i32** %arrayidx406, align 8, !dbg !12227
  %arrayidx407 = getelementptr inbounds i32, i32* %266, i64 %idxprom402, !dbg !12227
  %267 = load i32, i32* %arrayidx407, align 4, !dbg !12230
  %add408 = add nsw i32 %267, %shr400, !dbg !12230
  store i32 %add408, i32* %arrayidx407, align 4, !dbg !12230
  %268 = load i32, i32* %diff, align 4, !dbg !12231
  %mul409 = mul nsw i32 %268, 3, !dbg !12232
  %add410 = add nsw i32 %mul409, 8, !dbg !12233
  %shr411 = ashr i32 %add410, 4, !dbg !12234
  %269 = load i32, i32* %x, align 4, !dbg !12235
  %sub412 = sub nsw i32 %269, 1, !dbg !12236
  %idxprom413 = sext i32 %sub412 to i64, !dbg !12237
  %270 = load i32, i32* %y, align 4, !dbg !12238
  %and414 = and i32 %270, 1, !dbg !12239
  %tobool415 = icmp ne i32 %and414, 0, !dbg !12240
  %lnot416 = xor i1 %tobool415, true, !dbg !12240
  %lnot.ext417 = zext i1 %lnot416 to i32, !dbg !12240
  %idxprom418 = sext i32 %lnot.ext417 to i64, !dbg !12237
  %271 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12237
  %arrayidx419 = getelementptr inbounds [2 x i32*], [2 x i32*]* %271, i64 2, !dbg !12237
  %arrayidx420 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx419, i64 0, i64 %idxprom418, !dbg !12237
  %272 = load i32*, i32** %arrayidx420, align 8, !dbg !12237
  %arrayidx421 = getelementptr inbounds i32, i32* %272, i64 %idxprom413, !dbg !12237
  %273 = load i32, i32* %arrayidx421, align 4, !dbg !12241
  %add422 = add nsw i32 %273, %shr411, !dbg !12241
  store i32 %add422, i32* %arrayidx421, align 4, !dbg !12241
  %274 = load i32, i32* %diff, align 4, !dbg !12242
  %mul423 = mul nsw i32 %274, 5, !dbg !12243
  %add424 = add nsw i32 %mul423, 8, !dbg !12244
  %shr425 = ashr i32 %add424, 4, !dbg !12245
  %275 = load i32, i32* %x, align 4, !dbg !12246
  %add426 = add nsw i32 %275, 0, !dbg !12247
  %idxprom427 = sext i32 %add426 to i64, !dbg !12248
  %276 = load i32, i32* %y, align 4, !dbg !12249
  %and428 = and i32 %276, 1, !dbg !12250
  %tobool429 = icmp ne i32 %and428, 0, !dbg !12251
  %lnot430 = xor i1 %tobool429, true, !dbg !12251
  %lnot.ext431 = zext i1 %lnot430 to i32, !dbg !12251
  %idxprom432 = sext i32 %lnot.ext431 to i64, !dbg !12248
  %277 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12248
  %arrayidx433 = getelementptr inbounds [2 x i32*], [2 x i32*]* %277, i64 2, !dbg !12248
  %arrayidx434 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx433, i64 0, i64 %idxprom432, !dbg !12248
  %278 = load i32*, i32** %arrayidx434, align 8, !dbg !12248
  %arrayidx435 = getelementptr inbounds i32, i32* %278, i64 %idxprom427, !dbg !12248
  %279 = load i32, i32* %arrayidx435, align 4, !dbg !12252
  %add436 = add nsw i32 %279, %shr425, !dbg !12252
  store i32 %add436, i32* %arrayidx435, align 4, !dbg !12252
  %280 = load i32, i32* %diff, align 4, !dbg !12253
  %mul437 = mul nsw i32 %280, 1, !dbg !12254
  %add438 = add nsw i32 %mul437, 8, !dbg !12255
  %shr439 = ashr i32 %add438, 4, !dbg !12256
  %281 = load i32, i32* %x, align 4, !dbg !12257
  %add440 = add nsw i32 %281, 1, !dbg !12258
  %idxprom441 = sext i32 %add440 to i64, !dbg !12259
  %282 = load i32, i32* %y, align 4, !dbg !12260
  %and442 = and i32 %282, 1, !dbg !12261
  %tobool443 = icmp ne i32 %and442, 0, !dbg !12262
  %lnot444 = xor i1 %tobool443, true, !dbg !12262
  %lnot.ext445 = zext i1 %lnot444 to i32, !dbg !12262
  %idxprom446 = sext i32 %lnot.ext445 to i64, !dbg !12259
  %283 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12259
  %arrayidx447 = getelementptr inbounds [2 x i32*], [2 x i32*]* %283, i64 2, !dbg !12259
  %arrayidx448 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx447, i64 0, i64 %idxprom446, !dbg !12259
  %284 = load i32*, i32** %arrayidx448, align 8, !dbg !12259
  %arrayidx449 = getelementptr inbounds i32, i32* %284, i64 %idxprom441, !dbg !12259
  %285 = load i32, i32* %arrayidx449, align 4, !dbg !12263
  %add450 = add nsw i32 %285, %shr439, !dbg !12263
  store i32 %add450, i32* %arrayidx449, align 4, !dbg !12263
  %286 = load i32, i32* %x, align 4, !dbg !12264
  %add451 = add nsw i32 %286, 0, !dbg !12265
  %idxprom452 = sext i32 %add451 to i64, !dbg !12266
  %287 = load i32, i32* %y, align 4, !dbg !12267
  %and453 = and i32 %287, 1, !dbg !12268
  %idxprom454 = sext i32 %and453 to i64, !dbg !12266
  %288 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12266
  %arrayidx455 = getelementptr inbounds [2 x i32*], [2 x i32*]* %288, i64 2, !dbg !12266
  %arrayidx456 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx455, i64 0, i64 %idxprom454, !dbg !12266
  %289 = load i32*, i32** %arrayidx456, align 8, !dbg !12266
  %arrayidx457 = getelementptr inbounds i32, i32* %289, i64 %idxprom452, !dbg !12266
  store i32 65536, i32* %arrayidx457, align 4, !dbg !12269
  br label %for.inc458, !dbg !12270

for.inc458:                                       ; preds = %av_clip_uintp2_c.exit492
  %290 = load i32, i32* %x, align 4, !dbg !12271
  %inc459 = add nsw i32 %290, 1, !dbg !12271
  store i32 %inc459, i32* %x, align 4, !dbg !12271
  br label %for.cond76, !dbg !12273, !llvm.loop !12274

for.end460:                                       ; preds = %for.cond76
  %291 = load i64, i64* %s0, align 8, !dbg !12276
  %mul461 = mul nsw i64 %291, 1, !dbg !12277
  %292 = load i16*, i16** %yuv0, align 8, !dbg !12278
  %add.ptr = getelementptr inbounds i16, i16* %292, i64 %mul461, !dbg !12278
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !12278
  %293 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !12279
  %arrayidx462 = getelementptr inbounds i64, i64* %293, i64 1, !dbg !12279
  %294 = load i64, i64* %arrayidx462, align 8, !dbg !12279
  %div463 = udiv i64 %294, 2, !dbg !12280
  %295 = load i16*, i16** %yuv1, align 8, !dbg !12281
  %add.ptr464 = getelementptr inbounds i16, i16* %295, i64 %div463, !dbg !12281
  store i16* %add.ptr464, i16** %yuv1, align 8, !dbg !12281
  %296 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !12282
  %arrayidx465 = getelementptr inbounds i64, i64* %296, i64 2, !dbg !12282
  %297 = load i64, i64* %arrayidx465, align 8, !dbg !12282
  %div466 = udiv i64 %297, 2, !dbg !12283
  %298 = load i16*, i16** %yuv2, align 8, !dbg !12284
  %add.ptr467 = getelementptr inbounds i16, i16* %298, i64 %div466, !dbg !12284
  store i16* %add.ptr467, i16** %yuv2, align 8, !dbg !12284
  %299 = load i64, i64* %s.addr, align 8, !dbg !12285
  %mul468 = mul nsw i64 %299, 1, !dbg !12286
  %300 = load i16*, i16** %rgb0, align 8, !dbg !12287
  %add.ptr469 = getelementptr inbounds i16, i16* %300, i64 %mul468, !dbg !12287
  store i16* %add.ptr469, i16** %rgb0, align 8, !dbg !12287
  %301 = load i64, i64* %s.addr, align 8, !dbg !12288
  %mul470 = mul nsw i64 %301, 1, !dbg !12289
  %302 = load i16*, i16** %rgb1, align 8, !dbg !12290
  %add.ptr471 = getelementptr inbounds i16, i16* %302, i64 %mul470, !dbg !12290
  store i16* %add.ptr471, i16** %rgb1, align 8, !dbg !12290
  %303 = load i64, i64* %s.addr, align 8, !dbg !12291
  %mul472 = mul nsw i64 %303, 1, !dbg !12292
  %304 = load i16*, i16** %rgb2, align 8, !dbg !12293
  %add.ptr473 = getelementptr inbounds i16, i16* %304, i64 %mul472, !dbg !12293
  store i16* %add.ptr473, i16** %rgb2, align 8, !dbg !12293
  br label %for.inc474, !dbg !12294

for.inc474:                                       ; preds = %for.end460
  %305 = load i32, i32* %y, align 4, !dbg !12295
  %inc475 = add nsw i32 %305, 1, !dbg !12295
  store i32 %inc475, i32* %y, align 4, !dbg !12295
  br label %for.cond72, !dbg !12297, !llvm.loop !12298

for.end476:                                       ; preds = %for.cond72
  ret void, !dbg !12300
}

; Function Attrs: nounwind uwtable
define internal void @rgb2yuv_fsb_420p12_c(i8** %_yuv, i64* %yuv_stride, i16** %rgb, i64 %s, i32 %w, i32 %h, [3 x [8 x i16]]* %rgb2yuv_coeffs, i16* %yuv_offset, [2 x i32*]* %rnd_scratch) #0 !dbg !12301 {
entry:
  %retval.i731 = alloca i32, align 4
  %a.addr.i732 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i732, metadata !4652, metadata !94), !dbg !12302
  %p.addr.i733 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i733, metadata !4665, metadata !94), !dbg !12310
  %retval.i715 = alloca i32, align 4
  %a.addr.i716 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i716, metadata !4652, metadata !94), !dbg !12311
  %p.addr.i717 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i717, metadata !4665, metadata !94), !dbg !12313
  %retval.i699 = alloca i32, align 4
  %a.addr.i700 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i700, metadata !4652, metadata !94), !dbg !12314
  %p.addr.i701 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i701, metadata !4665, metadata !94), !dbg !12316
  %retval.i683 = alloca i32, align 4
  %a.addr.i684 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i684, metadata !4652, metadata !94), !dbg !12317
  %p.addr.i685 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i685, metadata !4665, metadata !94), !dbg !12319
  %retval.i667 = alloca i32, align 4
  %a.addr.i668 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i668, metadata !4652, metadata !94), !dbg !12320
  %p.addr.i669 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i669, metadata !4665, metadata !94), !dbg !12322
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !12323
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !12325
  %_yuv.addr = alloca i8**, align 8
  %yuv_stride.addr = alloca i64*, align 8
  %rgb.addr = alloca i16**, align 8
  %s.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %rgb2yuv_coeffs.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca i16*, align 8
  %rnd_scratch.addr = alloca [2 x i32*]*, align 8
  %yuv = alloca i16**, align 8
  %yuv0 = alloca i16*, align 8
  %yuv1 = alloca i16*, align 8
  %yuv2 = alloca i16*, align 8
  %rgb0 = alloca i16*, align 8
  %rgb1 = alloca i16*, align 8
  %rgb2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %cry = alloca i32, align 4
  %cgy = alloca i32, align 4
  %cby = alloca i32, align 4
  %cru = alloca i32, align 4
  %cgu = alloca i32, align 4
  %cburv = alloca i32, align 4
  %cgv = alloca i32, align 4
  %cbv = alloca i32, align 4
  %s0 = alloca i64, align 8
  %uv_offset = alloca i32, align 4
  %mask = alloca i32, align 4
  %r00 = alloca i32, align 4
  %g00 = alloca i32, align 4
  %b00 = alloca i32, align 4
  %y00 = alloca i32, align 4
  %r01 = alloca i32, align 4
  %g01 = alloca i32, align 4
  %b01 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %r10 = alloca i32, align 4
  %g10 = alloca i32, align 4
  %b10 = alloca i32, align 4
  %r11 = alloca i32, align 4
  %g11 = alloca i32, align 4
  %b11 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8** %_yuv, i8*** %_yuv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_yuv.addr, metadata !12326, metadata !94), !dbg !12327
  store i64* %yuv_stride, i64** %yuv_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %yuv_stride.addr, metadata !12328, metadata !94), !dbg !12329
  store i16** %rgb, i16*** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %rgb.addr, metadata !12330, metadata !94), !dbg !12331
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !12332, metadata !94), !dbg !12333
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !12334, metadata !94), !dbg !12335
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !12336, metadata !94), !dbg !12337
  store [3 x [8 x i16]]* %rgb2yuv_coeffs, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, metadata !12338, metadata !94), !dbg !12339
  store i16* %yuv_offset, i16** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %yuv_offset.addr, metadata !12340, metadata !94), !dbg !12341
  store [2 x i32*]* %rnd_scratch, [2 x i32*]** %rnd_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32*]** %rnd_scratch.addr, metadata !12342, metadata !94), !dbg !12343
  call void @llvm.dbg.declare(metadata i16*** %yuv, metadata !12344, metadata !94), !dbg !12345
  %0 = load i8**, i8*** %_yuv.addr, align 8, !dbg !12346
  %1 = bitcast i8** %0 to i16**, !dbg !12347
  store i16** %1, i16*** %yuv, align 8, !dbg !12345
  call void @llvm.dbg.declare(metadata i16** %yuv0, metadata !12348, metadata !94), !dbg !12349
  %2 = load i16**, i16*** %yuv, align 8, !dbg !12350
  %arrayidx = getelementptr inbounds i16*, i16** %2, i64 0, !dbg !12350
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !12350
  store i16* %3, i16** %yuv0, align 8, !dbg !12349
  call void @llvm.dbg.declare(metadata i16** %yuv1, metadata !12351, metadata !94), !dbg !12352
  %4 = load i16**, i16*** %yuv, align 8, !dbg !12353
  %arrayidx1 = getelementptr inbounds i16*, i16** %4, i64 1, !dbg !12353
  %5 = load i16*, i16** %arrayidx1, align 8, !dbg !12353
  store i16* %5, i16** %yuv1, align 8, !dbg !12352
  call void @llvm.dbg.declare(metadata i16** %yuv2, metadata !12354, metadata !94), !dbg !12355
  %6 = load i16**, i16*** %yuv, align 8, !dbg !12356
  %arrayidx2 = getelementptr inbounds i16*, i16** %6, i64 2, !dbg !12356
  %7 = load i16*, i16** %arrayidx2, align 8, !dbg !12356
  store i16* %7, i16** %yuv2, align 8, !dbg !12355
  call void @llvm.dbg.declare(metadata i16** %rgb0, metadata !12357, metadata !94), !dbg !12358
  %8 = load i16**, i16*** %rgb.addr, align 8, !dbg !12359
  %arrayidx3 = getelementptr inbounds i16*, i16** %8, i64 0, !dbg !12359
  %9 = load i16*, i16** %arrayidx3, align 8, !dbg !12359
  store i16* %9, i16** %rgb0, align 8, !dbg !12358
  call void @llvm.dbg.declare(metadata i16** %rgb1, metadata !12360, metadata !94), !dbg !12361
  %10 = load i16**, i16*** %rgb.addr, align 8, !dbg !12362
  %arrayidx4 = getelementptr inbounds i16*, i16** %10, i64 1, !dbg !12362
  %11 = load i16*, i16** %arrayidx4, align 8, !dbg !12362
  store i16* %11, i16** %rgb1, align 8, !dbg !12361
  call void @llvm.dbg.declare(metadata i16** %rgb2, metadata !12363, metadata !94), !dbg !12364
  %12 = load i16**, i16*** %rgb.addr, align 8, !dbg !12365
  %arrayidx5 = getelementptr inbounds i16*, i16** %12, i64 2, !dbg !12365
  %13 = load i16*, i16** %arrayidx5, align 8, !dbg !12365
  store i16* %13, i16** %rgb2, align 8, !dbg !12364
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12366, metadata !94), !dbg !12367
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12368, metadata !94), !dbg !12369
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !12370, metadata !94), !dbg !12371
  store i32 17, i32* %sh, align 4, !dbg !12371
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !12372, metadata !94), !dbg !12373
  store i32 65536, i32* %rnd, align 4, !dbg !12373
  call void @llvm.dbg.declare(metadata i32* %cry, metadata !12374, metadata !94), !dbg !12375
  %14 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12376
  %arrayidx6 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %14, i64 0, !dbg !12376
  %arrayidx7 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx6, i64 0, i64 0, !dbg !12376
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx7, i64 0, i64 0, !dbg !12376
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !12376
  %conv = sext i16 %15 to i32, !dbg !12376
  store i32 %conv, i32* %cry, align 4, !dbg !12375
  call void @llvm.dbg.declare(metadata i32* %cgy, metadata !12377, metadata !94), !dbg !12378
  %16 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12379
  %arrayidx9 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %16, i64 0, !dbg !12379
  %arrayidx10 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx9, i64 0, i64 1, !dbg !12379
  %arrayidx11 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx10, i64 0, i64 0, !dbg !12379
  %17 = load i16, i16* %arrayidx11, align 2, !dbg !12379
  %conv12 = sext i16 %17 to i32, !dbg !12379
  store i32 %conv12, i32* %cgy, align 4, !dbg !12378
  call void @llvm.dbg.declare(metadata i32* %cby, metadata !12380, metadata !94), !dbg !12381
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12382
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !12382
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 2, !dbg !12382
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !12382
  %19 = load i16, i16* %arrayidx15, align 2, !dbg !12382
  %conv16 = sext i16 %19 to i32, !dbg !12382
  store i32 %conv16, i32* %cby, align 4, !dbg !12381
  call void @llvm.dbg.declare(metadata i32* %cru, metadata !12383, metadata !94), !dbg !12384
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12385
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 1, !dbg !12385
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 0, !dbg !12385
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !12385
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !12385
  %conv20 = sext i16 %21 to i32, !dbg !12385
  store i32 %conv20, i32* %cru, align 4, !dbg !12384
  call void @llvm.dbg.declare(metadata i32* %cgu, metadata !12386, metadata !94), !dbg !12387
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12388
  %arrayidx21 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 1, !dbg !12388
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx21, i64 0, i64 1, !dbg !12388
  %arrayidx23 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx22, i64 0, i64 0, !dbg !12388
  %23 = load i16, i16* %arrayidx23, align 2, !dbg !12388
  %conv24 = sext i16 %23 to i32, !dbg !12388
  store i32 %conv24, i32* %cgu, align 4, !dbg !12387
  call void @llvm.dbg.declare(metadata i32* %cburv, metadata !12389, metadata !94), !dbg !12390
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12391
  %arrayidx25 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !12391
  %arrayidx26 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !12391
  %arrayidx27 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx26, i64 0, i64 0, !dbg !12391
  %25 = load i16, i16* %arrayidx27, align 2, !dbg !12391
  %conv28 = sext i16 %25 to i32, !dbg !12391
  store i32 %conv28, i32* %cburv, align 4, !dbg !12390
  call void @llvm.dbg.declare(metadata i32* %cgv, metadata !12392, metadata !94), !dbg !12393
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12394
  %arrayidx29 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 2, !dbg !12394
  %arrayidx30 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx29, i64 0, i64 1, !dbg !12394
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx30, i64 0, i64 0, !dbg !12394
  %27 = load i16, i16* %arrayidx31, align 2, !dbg !12394
  %conv32 = sext i16 %27 to i32, !dbg !12394
  store i32 %conv32, i32* %cgv, align 4, !dbg !12393
  call void @llvm.dbg.declare(metadata i32* %cbv, metadata !12395, metadata !94), !dbg !12396
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %rgb2yuv_coeffs.addr, align 8, !dbg !12397
  %arrayidx33 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !12397
  %arrayidx34 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx33, i64 0, i64 2, !dbg !12397
  %arrayidx35 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx34, i64 0, i64 0, !dbg !12397
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !12397
  %conv36 = sext i16 %29 to i32, !dbg !12397
  store i32 %conv36, i32* %cbv, align 4, !dbg !12396
  call void @llvm.dbg.declare(metadata i64* %s0, metadata !12398, metadata !94), !dbg !12399
  %30 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !12400
  %arrayidx37 = getelementptr inbounds i64, i64* %30, i64 0, !dbg !12400
  %31 = load i64, i64* %arrayidx37, align 8, !dbg !12400
  %div = udiv i64 %31, 2, !dbg !12401
  store i64 %div, i64* %s0, align 8, !dbg !12399
  call void @llvm.dbg.declare(metadata i32* %uv_offset, metadata !12402, metadata !94), !dbg !12403
  store i32 2048, i32* %uv_offset, align 4, !dbg !12403
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !12404, metadata !94), !dbg !12405
  store i32 131071, i32* %mask, align 4, !dbg !12405
  store i32 0, i32* %x, align 4, !dbg !12406
  br label %for.cond, !dbg !12408

for.cond:                                         ; preds = %for.inc, %entry
  %32 = load i32, i32* %x, align 4, !dbg !12409
  %33 = load i32, i32* %w.addr, align 4, !dbg !12412
  %cmp = icmp slt i32 %32, %33, !dbg !12413
  br i1 %cmp, label %for.body, label %for.end, !dbg !12414

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %x, align 4, !dbg !12415
  %idxprom = sext i32 %34 to i64, !dbg !12417
  %35 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12417
  %arrayidx39 = getelementptr inbounds [2 x i32*], [2 x i32*]* %35, i64 0, !dbg !12417
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 1, !dbg !12417
  %36 = load i32*, i32** %arrayidx40, align 8, !dbg !12417
  %arrayidx41 = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !12417
  store i32 65536, i32* %arrayidx41, align 4, !dbg !12418
  %37 = load i32, i32* %x, align 4, !dbg !12419
  %idxprom42 = sext i32 %37 to i64, !dbg !12420
  %38 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12420
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %38, i64 0, !dbg !12420
  %arrayidx44 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx43, i64 0, i64 0, !dbg !12420
  %39 = load i32*, i32** %arrayidx44, align 8, !dbg !12420
  %arrayidx45 = getelementptr inbounds i32, i32* %39, i64 %idxprom42, !dbg !12420
  store i32 65536, i32* %arrayidx45, align 4, !dbg !12421
  br label %for.inc, !dbg !12422

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !12423
  %inc = add nsw i32 %40, 1, !dbg !12423
  store i32 %inc, i32* %x, align 4, !dbg !12423
  br label %for.cond, !dbg !12425, !llvm.loop !12426

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %w.addr, align 4, !dbg !12428
  %add = add nsw i32 %41, 2, !dbg !12429
  %sub = sub nsw i32 %add, 1, !dbg !12430
  %shr = ashr i32 %sub, 1, !dbg !12431
  store i32 %shr, i32* %w.addr, align 4, !dbg !12432
  %42 = load i32, i32* %h.addr, align 4, !dbg !12433
  %add46 = add nsw i32 %42, 2, !dbg !12434
  %sub47 = sub nsw i32 %add46, 1, !dbg !12435
  %shr48 = ashr i32 %sub47, 1, !dbg !12436
  store i32 %shr48, i32* %h.addr, align 4, !dbg !12437
  store i32 0, i32* %x, align 4, !dbg !12438
  br label %for.cond49, !dbg !12440

for.cond49:                                       ; preds = %for.inc69, %for.end
  %43 = load i32, i32* %x, align 4, !dbg !12441
  %44 = load i32, i32* %w.addr, align 4, !dbg !12444
  %cmp50 = icmp slt i32 %43, %44, !dbg !12445
  br i1 %cmp50, label %for.body52, label %for.end71, !dbg !12446

for.body52:                                       ; preds = %for.cond49
  %45 = load i32, i32* %x, align 4, !dbg !12447
  %idxprom53 = sext i32 %45 to i64, !dbg !12449
  %46 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12449
  %arrayidx54 = getelementptr inbounds [2 x i32*], [2 x i32*]* %46, i64 2, !dbg !12449
  %arrayidx55 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx54, i64 0, i64 1, !dbg !12449
  %47 = load i32*, i32** %arrayidx55, align 8, !dbg !12449
  %arrayidx56 = getelementptr inbounds i32, i32* %47, i64 %idxprom53, !dbg !12449
  store i32 65536, i32* %arrayidx56, align 4, !dbg !12450
  %48 = load i32, i32* %x, align 4, !dbg !12451
  %idxprom57 = sext i32 %48 to i64, !dbg !12452
  %49 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12452
  %arrayidx58 = getelementptr inbounds [2 x i32*], [2 x i32*]* %49, i64 2, !dbg !12452
  %arrayidx59 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx58, i64 0, i64 0, !dbg !12452
  %50 = load i32*, i32** %arrayidx59, align 8, !dbg !12452
  %arrayidx60 = getelementptr inbounds i32, i32* %50, i64 %idxprom57, !dbg !12452
  store i32 65536, i32* %arrayidx60, align 4, !dbg !12453
  %51 = load i32, i32* %x, align 4, !dbg !12454
  %idxprom61 = sext i32 %51 to i64, !dbg !12455
  %52 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12455
  %arrayidx62 = getelementptr inbounds [2 x i32*], [2 x i32*]* %52, i64 1, !dbg !12455
  %arrayidx63 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx62, i64 0, i64 1, !dbg !12455
  %53 = load i32*, i32** %arrayidx63, align 8, !dbg !12455
  %arrayidx64 = getelementptr inbounds i32, i32* %53, i64 %idxprom61, !dbg !12455
  store i32 65536, i32* %arrayidx64, align 4, !dbg !12456
  %54 = load i32, i32* %x, align 4, !dbg !12457
  %idxprom65 = sext i32 %54 to i64, !dbg !12458
  %55 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12458
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %55, i64 1, !dbg !12458
  %arrayidx67 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx66, i64 0, i64 0, !dbg !12458
  %56 = load i32*, i32** %arrayidx67, align 8, !dbg !12458
  %arrayidx68 = getelementptr inbounds i32, i32* %56, i64 %idxprom65, !dbg !12458
  store i32 65536, i32* %arrayidx68, align 4, !dbg !12459
  br label %for.inc69, !dbg !12460

for.inc69:                                        ; preds = %for.body52
  %57 = load i32, i32* %x, align 4, !dbg !12461
  %inc70 = add nsw i32 %57, 1, !dbg !12461
  store i32 %inc70, i32* %x, align 4, !dbg !12461
  br label %for.cond49, !dbg !12463, !llvm.loop !12464

for.end71:                                        ; preds = %for.cond49
  store i32 0, i32* %y, align 4, !dbg !12466
  br label %for.cond72, !dbg !12467

for.cond72:                                       ; preds = %for.inc664, %for.end71
  %58 = load i32, i32* %y, align 4, !dbg !12468
  %59 = load i32, i32* %h.addr, align 4, !dbg !12470
  %cmp73 = icmp slt i32 %58, %59, !dbg !12471
  br i1 %cmp73, label %for.body75, label %for.end666, !dbg !12472

for.body75:                                       ; preds = %for.cond72
  store i32 0, i32* %x, align 4, !dbg !12473
  br label %for.cond76, !dbg !12474

for.cond76:                                       ; preds = %for.inc648, %for.body75
  %60 = load i32, i32* %x, align 4, !dbg !12475
  %61 = load i32, i32* %w.addr, align 4, !dbg !12477
  %cmp77 = icmp slt i32 %60, %61, !dbg !12478
  br i1 %cmp77, label %for.body79, label %for.end650, !dbg !12479

for.body79:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %r00, metadata !12480, metadata !94), !dbg !12481
  %62 = load i32, i32* %x, align 4, !dbg !12482
  %shl = shl i32 %62, 1, !dbg !12483
  %idxprom80 = sext i32 %shl to i64, !dbg !12484
  %63 = load i16*, i16** %rgb0, align 8, !dbg !12484
  %arrayidx81 = getelementptr inbounds i16, i16* %63, i64 %idxprom80, !dbg !12484
  %64 = load i16, i16* %arrayidx81, align 2, !dbg !12484
  %conv82 = sext i16 %64 to i32, !dbg !12484
  store i32 %conv82, i32* %r00, align 4, !dbg !12481
  call void @llvm.dbg.declare(metadata i32* %g00, metadata !12485, metadata !94), !dbg !12486
  %65 = load i32, i32* %x, align 4, !dbg !12487
  %shl83 = shl i32 %65, 1, !dbg !12488
  %idxprom84 = sext i32 %shl83 to i64, !dbg !12489
  %66 = load i16*, i16** %rgb1, align 8, !dbg !12489
  %arrayidx85 = getelementptr inbounds i16, i16* %66, i64 %idxprom84, !dbg !12489
  %67 = load i16, i16* %arrayidx85, align 2, !dbg !12489
  %conv86 = sext i16 %67 to i32, !dbg !12489
  store i32 %conv86, i32* %g00, align 4, !dbg !12486
  call void @llvm.dbg.declare(metadata i32* %b00, metadata !12490, metadata !94), !dbg !12491
  %68 = load i32, i32* %x, align 4, !dbg !12492
  %shl87 = shl i32 %68, 1, !dbg !12493
  %idxprom88 = sext i32 %shl87 to i64, !dbg !12494
  %69 = load i16*, i16** %rgb2, align 8, !dbg !12494
  %arrayidx89 = getelementptr inbounds i16, i16* %69, i64 %idxprom88, !dbg !12494
  %70 = load i16, i16* %arrayidx89, align 2, !dbg !12494
  %conv90 = sext i16 %70 to i32, !dbg !12494
  store i32 %conv90, i32* %b00, align 4, !dbg !12491
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !12495, metadata !94), !dbg !12496
  call void @llvm.dbg.declare(metadata i32* %r01, metadata !12497, metadata !94), !dbg !12498
  %71 = load i32, i32* %x, align 4, !dbg !12499
  %mul = mul nsw i32 %71, 2, !dbg !12500
  %add91 = add nsw i32 %mul, 1, !dbg !12501
  %idxprom92 = sext i32 %add91 to i64, !dbg !12502
  %72 = load i16*, i16** %rgb0, align 8, !dbg !12502
  %arrayidx93 = getelementptr inbounds i16, i16* %72, i64 %idxprom92, !dbg !12502
  %73 = load i16, i16* %arrayidx93, align 2, !dbg !12502
  %conv94 = sext i16 %73 to i32, !dbg !12502
  store i32 %conv94, i32* %r01, align 4, !dbg !12498
  call void @llvm.dbg.declare(metadata i32* %g01, metadata !12503, metadata !94), !dbg !12504
  %74 = load i32, i32* %x, align 4, !dbg !12505
  %mul95 = mul nsw i32 %74, 2, !dbg !12506
  %add96 = add nsw i32 %mul95, 1, !dbg !12507
  %idxprom97 = sext i32 %add96 to i64, !dbg !12508
  %75 = load i16*, i16** %rgb1, align 8, !dbg !12508
  %arrayidx98 = getelementptr inbounds i16, i16* %75, i64 %idxprom97, !dbg !12508
  %76 = load i16, i16* %arrayidx98, align 2, !dbg !12508
  %conv99 = sext i16 %76 to i32, !dbg !12508
  store i32 %conv99, i32* %g01, align 4, !dbg !12504
  call void @llvm.dbg.declare(metadata i32* %b01, metadata !12509, metadata !94), !dbg !12510
  %77 = load i32, i32* %x, align 4, !dbg !12511
  %mul100 = mul nsw i32 %77, 2, !dbg !12512
  %add101 = add nsw i32 %mul100, 1, !dbg !12513
  %idxprom102 = sext i32 %add101 to i64, !dbg !12514
  %78 = load i16*, i16** %rgb2, align 8, !dbg !12514
  %arrayidx103 = getelementptr inbounds i16, i16* %78, i64 %idxprom102, !dbg !12514
  %79 = load i16, i16* %arrayidx103, align 2, !dbg !12514
  %conv104 = sext i16 %79 to i32, !dbg !12514
  store i32 %conv104, i32* %b01, align 4, !dbg !12510
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !12515, metadata !94), !dbg !12516
  call void @llvm.dbg.declare(metadata i32* %r10, metadata !12517, metadata !94), !dbg !12518
  %80 = load i32, i32* %x, align 4, !dbg !12519
  %mul105 = mul nsw i32 %80, 2, !dbg !12520
  %add106 = add nsw i32 %mul105, 0, !dbg !12521
  %conv107 = sext i32 %add106 to i64, !dbg !12519
  %81 = load i64, i64* %s.addr, align 8, !dbg !12522
  %add108 = add nsw i64 %conv107, %81, !dbg !12523
  %82 = load i16*, i16** %rgb0, align 8, !dbg !12524
  %arrayidx109 = getelementptr inbounds i16, i16* %82, i64 %add108, !dbg !12524
  %83 = load i16, i16* %arrayidx109, align 2, !dbg !12524
  %conv110 = sext i16 %83 to i32, !dbg !12524
  store i32 %conv110, i32* %r10, align 4, !dbg !12518
  call void @llvm.dbg.declare(metadata i32* %g10, metadata !12525, metadata !94), !dbg !12526
  %84 = load i32, i32* %x, align 4, !dbg !12527
  %mul111 = mul nsw i32 %84, 2, !dbg !12528
  %add112 = add nsw i32 %mul111, 0, !dbg !12529
  %conv113 = sext i32 %add112 to i64, !dbg !12527
  %85 = load i64, i64* %s.addr, align 8, !dbg !12530
  %add114 = add nsw i64 %conv113, %85, !dbg !12531
  %86 = load i16*, i16** %rgb1, align 8, !dbg !12532
  %arrayidx115 = getelementptr inbounds i16, i16* %86, i64 %add114, !dbg !12532
  %87 = load i16, i16* %arrayidx115, align 2, !dbg !12532
  %conv116 = sext i16 %87 to i32, !dbg !12532
  store i32 %conv116, i32* %g10, align 4, !dbg !12526
  call void @llvm.dbg.declare(metadata i32* %b10, metadata !12533, metadata !94), !dbg !12534
  %88 = load i32, i32* %x, align 4, !dbg !12535
  %mul117 = mul nsw i32 %88, 2, !dbg !12536
  %add118 = add nsw i32 %mul117, 0, !dbg !12537
  %conv119 = sext i32 %add118 to i64, !dbg !12535
  %89 = load i64, i64* %s.addr, align 8, !dbg !12538
  %add120 = add nsw i64 %conv119, %89, !dbg !12539
  %90 = load i16*, i16** %rgb2, align 8, !dbg !12540
  %arrayidx121 = getelementptr inbounds i16, i16* %90, i64 %add120, !dbg !12540
  %91 = load i16, i16* %arrayidx121, align 2, !dbg !12540
  %conv122 = sext i16 %91 to i32, !dbg !12540
  store i32 %conv122, i32* %b10, align 4, !dbg !12534
  call void @llvm.dbg.declare(metadata i32* %r11, metadata !12541, metadata !94), !dbg !12542
  %92 = load i32, i32* %x, align 4, !dbg !12543
  %mul123 = mul nsw i32 %92, 2, !dbg !12544
  %add124 = add nsw i32 %mul123, 1, !dbg !12545
  %conv125 = sext i32 %add124 to i64, !dbg !12543
  %93 = load i64, i64* %s.addr, align 8, !dbg !12546
  %add126 = add nsw i64 %conv125, %93, !dbg !12547
  %94 = load i16*, i16** %rgb0, align 8, !dbg !12548
  %arrayidx127 = getelementptr inbounds i16, i16* %94, i64 %add126, !dbg !12548
  %95 = load i16, i16* %arrayidx127, align 2, !dbg !12548
  %conv128 = sext i16 %95 to i32, !dbg !12548
  store i32 %conv128, i32* %r11, align 4, !dbg !12542
  call void @llvm.dbg.declare(metadata i32* %g11, metadata !12549, metadata !94), !dbg !12550
  %96 = load i32, i32* %x, align 4, !dbg !12551
  %mul129 = mul nsw i32 %96, 2, !dbg !12552
  %add130 = add nsw i32 %mul129, 1, !dbg !12553
  %conv131 = sext i32 %add130 to i64, !dbg !12551
  %97 = load i64, i64* %s.addr, align 8, !dbg !12554
  %add132 = add nsw i64 %conv131, %97, !dbg !12555
  %98 = load i16*, i16** %rgb1, align 8, !dbg !12556
  %arrayidx133 = getelementptr inbounds i16, i16* %98, i64 %add132, !dbg !12556
  %99 = load i16, i16* %arrayidx133, align 2, !dbg !12556
  %conv134 = sext i16 %99 to i32, !dbg !12556
  store i32 %conv134, i32* %g11, align 4, !dbg !12550
  call void @llvm.dbg.declare(metadata i32* %b11, metadata !12557, metadata !94), !dbg !12558
  %100 = load i32, i32* %x, align 4, !dbg !12559
  %mul135 = mul nsw i32 %100, 2, !dbg !12560
  %add136 = add nsw i32 %mul135, 1, !dbg !12561
  %conv137 = sext i32 %add136 to i64, !dbg !12559
  %101 = load i64, i64* %s.addr, align 8, !dbg !12562
  %add138 = add nsw i64 %conv137, %101, !dbg !12563
  %102 = load i16*, i16** %rgb2, align 8, !dbg !12564
  %arrayidx139 = getelementptr inbounds i16, i16* %102, i64 %add138, !dbg !12564
  %103 = load i16, i16* %arrayidx139, align 2, !dbg !12564
  %conv140 = sext i16 %103 to i32, !dbg !12564
  store i32 %conv140, i32* %b11, align 4, !dbg !12558
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !12565, metadata !94), !dbg !12566
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !12567, metadata !94), !dbg !12568
  call void @llvm.dbg.declare(metadata i32* %u, metadata !12569, metadata !94), !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12571, metadata !94), !dbg !12572
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !12573, metadata !94), !dbg !12574
  %104 = load i32, i32* %r00, align 4, !dbg !12575
  %105 = load i32, i32* %cry, align 4, !dbg !12576
  %mul141 = mul nsw i32 %104, %105, !dbg !12577
  %106 = load i32, i32* %g00, align 4, !dbg !12578
  %107 = load i32, i32* %cgy, align 4, !dbg !12579
  %mul142 = mul nsw i32 %106, %107, !dbg !12580
  %add143 = add nsw i32 %mul141, %mul142, !dbg !12581
  %108 = load i32, i32* %b00, align 4, !dbg !12582
  %109 = load i32, i32* %cby, align 4, !dbg !12583
  %mul144 = mul nsw i32 %108, %109, !dbg !12584
  %add145 = add nsw i32 %add143, %mul144, !dbg !12585
  %110 = load i32, i32* %x, align 4, !dbg !12586
  %shl146 = shl i32 %110, 1, !dbg !12587
  %idxprom147 = sext i32 %shl146 to i64, !dbg !12588
  %111 = load i32, i32* %y, align 4, !dbg !12589
  %and = and i32 %111, 0, !dbg !12590
  %idxprom148 = sext i32 %and to i64, !dbg !12588
  %112 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12588
  %arrayidx149 = getelementptr inbounds [2 x i32*], [2 x i32*]* %112, i64 0, !dbg !12588
  %arrayidx150 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx149, i64 0, i64 %idxprom148, !dbg !12588
  %113 = load i32*, i32** %arrayidx150, align 8, !dbg !12588
  %arrayidx151 = getelementptr inbounds i32, i32* %113, i64 %idxprom147, !dbg !12588
  %114 = load i32, i32* %arrayidx151, align 4, !dbg !12588
  %add152 = add nsw i32 %add145, %114, !dbg !12591
  store i32 %add152, i32* %y00, align 4, !dbg !12592
  %115 = load i32, i32* %y00, align 4, !dbg !12593
  %116 = load i32, i32* %mask, align 4, !dbg !12594
  %and153 = and i32 %115, %116, !dbg !12595
  %sub154 = sub i32 %and153, 65536, !dbg !12596
  store i32 %sub154, i32* %diff, align 4, !dbg !12597
  %117 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !12598
  %arrayidx155 = getelementptr inbounds i16, i16* %117, i64 0, !dbg !12598
  %118 = load i16, i16* %arrayidx155, align 2, !dbg !12598
  %conv156 = sext i16 %118 to i32, !dbg !12598
  %119 = load i32, i32* %y00, align 4, !dbg !12599
  %shr157 = ashr i32 %119, 17, !dbg !12600
  %add158 = add nsw i32 %conv156, %shr157, !dbg !12601
  store i32 %add158, i32* %a.addr.i, align 4, !dbg !12602
  store i32 12, i32* %p.addr.i, align 4, !dbg !12602
  %120 = load i32, i32* %a.addr.i, align 4, !dbg !12603
  %121 = load i32, i32* %p.addr.i, align 4, !dbg !12604
  %shl.i = shl i32 1, %121, !dbg !12605
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !12606
  %neg.i = xor i32 %sub.i, -1, !dbg !12607
  %and.i = and i32 %120, %neg.i, !dbg !12608
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !12608
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !12609

if.then.i:                                        ; preds = %for.body79
  %122 = load i32, i32* %a.addr.i, align 4, !dbg !12610
  %neg1.i = xor i32 %122, -1, !dbg !12611
  %shr.i = ashr i32 %neg1.i, 31, !dbg !12612
  %123 = load i32, i32* %p.addr.i, align 4, !dbg !12613
  %shl2.i = shl i32 1, %123, !dbg !12614
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !12615
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !12616
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !12617
  br label %av_clip_uintp2_c.exit, !dbg !12617

if.else.i:                                        ; preds = %for.body79
  %124 = load i32, i32* %a.addr.i, align 4, !dbg !12618
  store i32 %124, i32* %retval.i, align 4, !dbg !12619
  br label %av_clip_uintp2_c.exit, !dbg !12619

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %125 = load i32, i32* %retval.i, align 4, !dbg !12620
  %conv159 = trunc i32 %125 to i16, !dbg !12602
  %126 = load i32, i32* %x, align 4, !dbg !12621
  %shl160 = shl i32 %126, 1, !dbg !12622
  %idxprom161 = sext i32 %shl160 to i64, !dbg !12623
  %127 = load i16*, i16** %yuv0, align 8, !dbg !12623
  %arrayidx162 = getelementptr inbounds i16, i16* %127, i64 %idxprom161, !dbg !12623
  store i16 %conv159, i16* %arrayidx162, align 2, !dbg !12624
  %128 = load i32, i32* %diff, align 4, !dbg !12625
  %mul163 = mul nsw i32 %128, 7, !dbg !12626
  %add164 = add nsw i32 %mul163, 8, !dbg !12627
  %shr165 = ashr i32 %add164, 4, !dbg !12628
  %129 = load i32, i32* %x, align 4, !dbg !12629
  %shl166 = shl i32 %129, 1, !dbg !12630
  %add167 = add nsw i32 %shl166, 1, !dbg !12631
  %idxprom168 = sext i32 %add167 to i64, !dbg !12632
  %130 = load i32, i32* %y, align 4, !dbg !12633
  %and169 = and i32 %130, 0, !dbg !12634
  %idxprom170 = sext i32 %and169 to i64, !dbg !12632
  %131 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12632
  %arrayidx171 = getelementptr inbounds [2 x i32*], [2 x i32*]* %131, i64 0, !dbg !12632
  %arrayidx172 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx171, i64 0, i64 %idxprom170, !dbg !12632
  %132 = load i32*, i32** %arrayidx172, align 8, !dbg !12632
  %arrayidx173 = getelementptr inbounds i32, i32* %132, i64 %idxprom168, !dbg !12632
  %133 = load i32, i32* %arrayidx173, align 4, !dbg !12635
  %add174 = add nsw i32 %133, %shr165, !dbg !12635
  store i32 %add174, i32* %arrayidx173, align 4, !dbg !12635
  %134 = load i32, i32* %diff, align 4, !dbg !12636
  %mul175 = mul nsw i32 %134, 3, !dbg !12637
  %add176 = add nsw i32 %mul175, 8, !dbg !12638
  %shr177 = ashr i32 %add176, 4, !dbg !12639
  %135 = load i32, i32* %x, align 4, !dbg !12640
  %shl178 = shl i32 %135, 1, !dbg !12641
  %sub179 = sub nsw i32 %shl178, 1, !dbg !12642
  %idxprom180 = sext i32 %sub179 to i64, !dbg !12643
  %136 = load i32, i32* %y, align 4, !dbg !12644
  %and181 = and i32 %136, 0, !dbg !12645
  %tobool = icmp ne i32 %and181, 0, !dbg !12646
  %lnot = xor i1 %tobool, true, !dbg !12646
  %lnot.ext = zext i1 %lnot to i32, !dbg !12646
  %idxprom182 = sext i32 %lnot.ext to i64, !dbg !12643
  %137 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12643
  %arrayidx183 = getelementptr inbounds [2 x i32*], [2 x i32*]* %137, i64 0, !dbg !12643
  %arrayidx184 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx183, i64 0, i64 %idxprom182, !dbg !12643
  %138 = load i32*, i32** %arrayidx184, align 8, !dbg !12643
  %arrayidx185 = getelementptr inbounds i32, i32* %138, i64 %idxprom180, !dbg !12643
  %139 = load i32, i32* %arrayidx185, align 4, !dbg !12647
  %add186 = add nsw i32 %139, %shr177, !dbg !12647
  store i32 %add186, i32* %arrayidx185, align 4, !dbg !12647
  %140 = load i32, i32* %diff, align 4, !dbg !12648
  %mul187 = mul nsw i32 %140, 5, !dbg !12649
  %add188 = add nsw i32 %mul187, 8, !dbg !12650
  %shr189 = ashr i32 %add188, 4, !dbg !12651
  %141 = load i32, i32* %x, align 4, !dbg !12652
  %shl190 = shl i32 %141, 1, !dbg !12653
  %add191 = add nsw i32 %shl190, 0, !dbg !12654
  %idxprom192 = sext i32 %add191 to i64, !dbg !12655
  %142 = load i32, i32* %y, align 4, !dbg !12656
  %and193 = and i32 %142, 0, !dbg !12657
  %tobool194 = icmp ne i32 %and193, 0, !dbg !12658
  %lnot195 = xor i1 %tobool194, true, !dbg !12658
  %lnot.ext196 = zext i1 %lnot195 to i32, !dbg !12658
  %idxprom197 = sext i32 %lnot.ext196 to i64, !dbg !12655
  %143 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12655
  %arrayidx198 = getelementptr inbounds [2 x i32*], [2 x i32*]* %143, i64 0, !dbg !12655
  %arrayidx199 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx198, i64 0, i64 %idxprom197, !dbg !12655
  %144 = load i32*, i32** %arrayidx199, align 8, !dbg !12655
  %arrayidx200 = getelementptr inbounds i32, i32* %144, i64 %idxprom192, !dbg !12655
  %145 = load i32, i32* %arrayidx200, align 4, !dbg !12659
  %add201 = add nsw i32 %145, %shr189, !dbg !12659
  store i32 %add201, i32* %arrayidx200, align 4, !dbg !12659
  %146 = load i32, i32* %diff, align 4, !dbg !12660
  %mul202 = mul nsw i32 %146, 1, !dbg !12661
  %add203 = add nsw i32 %mul202, 8, !dbg !12662
  %shr204 = ashr i32 %add203, 4, !dbg !12663
  %147 = load i32, i32* %x, align 4, !dbg !12664
  %shl205 = shl i32 %147, 1, !dbg !12665
  %add206 = add nsw i32 %shl205, 1, !dbg !12666
  %idxprom207 = sext i32 %add206 to i64, !dbg !12667
  %148 = load i32, i32* %y, align 4, !dbg !12668
  %and208 = and i32 %148, 0, !dbg !12669
  %tobool209 = icmp ne i32 %and208, 0, !dbg !12670
  %lnot210 = xor i1 %tobool209, true, !dbg !12670
  %lnot.ext211 = zext i1 %lnot210 to i32, !dbg !12670
  %idxprom212 = sext i32 %lnot.ext211 to i64, !dbg !12667
  %149 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12667
  %arrayidx213 = getelementptr inbounds [2 x i32*], [2 x i32*]* %149, i64 0, !dbg !12667
  %arrayidx214 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx213, i64 0, i64 %idxprom212, !dbg !12667
  %150 = load i32*, i32** %arrayidx214, align 8, !dbg !12667
  %arrayidx215 = getelementptr inbounds i32, i32* %150, i64 %idxprom207, !dbg !12667
  %151 = load i32, i32* %arrayidx215, align 4, !dbg !12671
  %add216 = add nsw i32 %151, %shr204, !dbg !12671
  store i32 %add216, i32* %arrayidx215, align 4, !dbg !12671
  %152 = load i32, i32* %x, align 4, !dbg !12672
  %shl217 = shl i32 %152, 1, !dbg !12673
  %add218 = add nsw i32 %shl217, 0, !dbg !12674
  %idxprom219 = sext i32 %add218 to i64, !dbg !12675
  %153 = load i32, i32* %y, align 4, !dbg !12676
  %and220 = and i32 %153, 0, !dbg !12677
  %idxprom221 = sext i32 %and220 to i64, !dbg !12675
  %154 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12675
  %arrayidx222 = getelementptr inbounds [2 x i32*], [2 x i32*]* %154, i64 0, !dbg !12675
  %arrayidx223 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx222, i64 0, i64 %idxprom221, !dbg !12675
  %155 = load i32*, i32** %arrayidx223, align 8, !dbg !12675
  %arrayidx224 = getelementptr inbounds i32, i32* %155, i64 %idxprom219, !dbg !12675
  store i32 65536, i32* %arrayidx224, align 4, !dbg !12678
  %156 = load i32, i32* %r01, align 4, !dbg !12679
  %157 = load i32, i32* %cry, align 4, !dbg !12680
  %mul225 = mul nsw i32 %156, %157, !dbg !12681
  %158 = load i32, i32* %g01, align 4, !dbg !12682
  %159 = load i32, i32* %cgy, align 4, !dbg !12683
  %mul226 = mul nsw i32 %158, %159, !dbg !12684
  %add227 = add nsw i32 %mul225, %mul226, !dbg !12685
  %160 = load i32, i32* %b01, align 4, !dbg !12686
  %161 = load i32, i32* %cby, align 4, !dbg !12687
  %mul228 = mul nsw i32 %160, %161, !dbg !12688
  %add229 = add nsw i32 %add227, %mul228, !dbg !12689
  %162 = load i32, i32* %x, align 4, !dbg !12690
  %mul230 = mul nsw i32 %162, 2, !dbg !12691
  %add231 = add nsw i32 %mul230, 1, !dbg !12692
  %idxprom232 = sext i32 %add231 to i64, !dbg !12693
  %163 = load i32, i32* %y, align 4, !dbg !12694
  %and233 = and i32 %163, 0, !dbg !12695
  %idxprom234 = sext i32 %and233 to i64, !dbg !12693
  %164 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12693
  %arrayidx235 = getelementptr inbounds [2 x i32*], [2 x i32*]* %164, i64 0, !dbg !12693
  %arrayidx236 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx235, i64 0, i64 %idxprom234, !dbg !12693
  %165 = load i32*, i32** %arrayidx236, align 8, !dbg !12693
  %arrayidx237 = getelementptr inbounds i32, i32* %165, i64 %idxprom232, !dbg !12693
  %166 = load i32, i32* %arrayidx237, align 4, !dbg !12693
  %add238 = add nsw i32 %add229, %166, !dbg !12696
  store i32 %add238, i32* %y01, align 4, !dbg !12697
  %167 = load i32, i32* %y01, align 4, !dbg !12698
  %168 = load i32, i32* %mask, align 4, !dbg !12699
  %and239 = and i32 %167, %168, !dbg !12700
  %sub240 = sub i32 %and239, 65536, !dbg !12701
  store i32 %sub240, i32* %diff, align 4, !dbg !12702
  %169 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !12703
  %arrayidx241 = getelementptr inbounds i16, i16* %169, i64 0, !dbg !12703
  %170 = load i16, i16* %arrayidx241, align 2, !dbg !12703
  %conv242 = sext i16 %170 to i32, !dbg !12703
  %171 = load i32, i32* %y01, align 4, !dbg !12704
  %shr243 = ashr i32 %171, 17, !dbg !12705
  %add244 = add nsw i32 %conv242, %shr243, !dbg !12706
  store i32 %add244, i32* %a.addr.i732, align 4, !dbg !12707
  store i32 12, i32* %p.addr.i733, align 4, !dbg !12707
  %172 = load i32, i32* %a.addr.i732, align 4, !dbg !12708
  %173 = load i32, i32* %p.addr.i733, align 4, !dbg !12709
  %shl.i734 = shl i32 1, %173, !dbg !12710
  %sub.i735 = sub nsw i32 %shl.i734, 1, !dbg !12711
  %neg.i736 = xor i32 %sub.i735, -1, !dbg !12712
  %and.i737 = and i32 %172, %neg.i736, !dbg !12713
  %tobool.i738 = icmp ne i32 %and.i737, 0, !dbg !12713
  br i1 %tobool.i738, label %if.then.i744, label %if.else.i745, !dbg !12714

if.then.i744:                                     ; preds = %av_clip_uintp2_c.exit
  %174 = load i32, i32* %a.addr.i732, align 4, !dbg !12715
  %neg1.i739 = xor i32 %174, -1, !dbg !12716
  %shr.i740 = ashr i32 %neg1.i739, 31, !dbg !12717
  %175 = load i32, i32* %p.addr.i733, align 4, !dbg !12718
  %shl2.i741 = shl i32 1, %175, !dbg !12719
  %sub3.i742 = sub nsw i32 %shl2.i741, 1, !dbg !12720
  %and4.i743 = and i32 %shr.i740, %sub3.i742, !dbg !12721
  store i32 %and4.i743, i32* %retval.i731, align 4, !dbg !12722
  br label %av_clip_uintp2_c.exit746, !dbg !12722

if.else.i745:                                     ; preds = %av_clip_uintp2_c.exit
  %176 = load i32, i32* %a.addr.i732, align 4, !dbg !12723
  store i32 %176, i32* %retval.i731, align 4, !dbg !12724
  br label %av_clip_uintp2_c.exit746, !dbg !12724

av_clip_uintp2_c.exit746:                         ; preds = %if.then.i744, %if.else.i745
  %177 = load i32, i32* %retval.i731, align 4, !dbg !12725
  %conv246 = trunc i32 %177 to i16, !dbg !12707
  %178 = load i32, i32* %x, align 4, !dbg !12726
  %mul247 = mul nsw i32 %178, 2, !dbg !12727
  %add248 = add nsw i32 %mul247, 1, !dbg !12728
  %idxprom249 = sext i32 %add248 to i64, !dbg !12729
  %179 = load i16*, i16** %yuv0, align 8, !dbg !12729
  %arrayidx250 = getelementptr inbounds i16, i16* %179, i64 %idxprom249, !dbg !12729
  store i16 %conv246, i16* %arrayidx250, align 2, !dbg !12730
  %180 = load i32, i32* %diff, align 4, !dbg !12731
  %mul251 = mul nsw i32 %180, 7, !dbg !12732
  %add252 = add nsw i32 %mul251, 8, !dbg !12733
  %shr253 = ashr i32 %add252, 4, !dbg !12734
  %181 = load i32, i32* %x, align 4, !dbg !12735
  %mul254 = mul nsw i32 %181, 2, !dbg !12736
  %add255 = add nsw i32 %mul254, 2, !dbg !12737
  %idxprom256 = sext i32 %add255 to i64, !dbg !12738
  %182 = load i32, i32* %y, align 4, !dbg !12739
  %and257 = and i32 %182, 0, !dbg !12740
  %idxprom258 = sext i32 %and257 to i64, !dbg !12738
  %183 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12738
  %arrayidx259 = getelementptr inbounds [2 x i32*], [2 x i32*]* %183, i64 0, !dbg !12738
  %arrayidx260 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx259, i64 0, i64 %idxprom258, !dbg !12738
  %184 = load i32*, i32** %arrayidx260, align 8, !dbg !12738
  %arrayidx261 = getelementptr inbounds i32, i32* %184, i64 %idxprom256, !dbg !12738
  %185 = load i32, i32* %arrayidx261, align 4, !dbg !12741
  %add262 = add nsw i32 %185, %shr253, !dbg !12741
  store i32 %add262, i32* %arrayidx261, align 4, !dbg !12741
  %186 = load i32, i32* %diff, align 4, !dbg !12742
  %mul263 = mul nsw i32 %186, 3, !dbg !12743
  %add264 = add nsw i32 %mul263, 8, !dbg !12744
  %shr265 = ashr i32 %add264, 4, !dbg !12745
  %187 = load i32, i32* %x, align 4, !dbg !12746
  %mul266 = mul nsw i32 %187, 2, !dbg !12747
  %add267 = add nsw i32 %mul266, 0, !dbg !12748
  %idxprom268 = sext i32 %add267 to i64, !dbg !12749
  %188 = load i32, i32* %y, align 4, !dbg !12750
  %and269 = and i32 %188, 0, !dbg !12751
  %tobool270 = icmp ne i32 %and269, 0, !dbg !12752
  %lnot271 = xor i1 %tobool270, true, !dbg !12752
  %lnot.ext272 = zext i1 %lnot271 to i32, !dbg !12752
  %idxprom273 = sext i32 %lnot.ext272 to i64, !dbg !12749
  %189 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12749
  %arrayidx274 = getelementptr inbounds [2 x i32*], [2 x i32*]* %189, i64 0, !dbg !12749
  %arrayidx275 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx274, i64 0, i64 %idxprom273, !dbg !12749
  %190 = load i32*, i32** %arrayidx275, align 8, !dbg !12749
  %arrayidx276 = getelementptr inbounds i32, i32* %190, i64 %idxprom268, !dbg !12749
  %191 = load i32, i32* %arrayidx276, align 4, !dbg !12753
  %add277 = add nsw i32 %191, %shr265, !dbg !12753
  store i32 %add277, i32* %arrayidx276, align 4, !dbg !12753
  %192 = load i32, i32* %diff, align 4, !dbg !12754
  %mul278 = mul nsw i32 %192, 5, !dbg !12755
  %add279 = add nsw i32 %mul278, 8, !dbg !12756
  %shr280 = ashr i32 %add279, 4, !dbg !12757
  %193 = load i32, i32* %x, align 4, !dbg !12758
  %mul281 = mul nsw i32 %193, 2, !dbg !12759
  %add282 = add nsw i32 %mul281, 1, !dbg !12760
  %idxprom283 = sext i32 %add282 to i64, !dbg !12761
  %194 = load i32, i32* %y, align 4, !dbg !12762
  %and284 = and i32 %194, 0, !dbg !12763
  %tobool285 = icmp ne i32 %and284, 0, !dbg !12764
  %lnot286 = xor i1 %tobool285, true, !dbg !12764
  %lnot.ext287 = zext i1 %lnot286 to i32, !dbg !12764
  %idxprom288 = sext i32 %lnot.ext287 to i64, !dbg !12761
  %195 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12761
  %arrayidx289 = getelementptr inbounds [2 x i32*], [2 x i32*]* %195, i64 0, !dbg !12761
  %arrayidx290 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx289, i64 0, i64 %idxprom288, !dbg !12761
  %196 = load i32*, i32** %arrayidx290, align 8, !dbg !12761
  %arrayidx291 = getelementptr inbounds i32, i32* %196, i64 %idxprom283, !dbg !12761
  %197 = load i32, i32* %arrayidx291, align 4, !dbg !12765
  %add292 = add nsw i32 %197, %shr280, !dbg !12765
  store i32 %add292, i32* %arrayidx291, align 4, !dbg !12765
  %198 = load i32, i32* %diff, align 4, !dbg !12766
  %mul293 = mul nsw i32 %198, 1, !dbg !12767
  %add294 = add nsw i32 %mul293, 8, !dbg !12768
  %shr295 = ashr i32 %add294, 4, !dbg !12769
  %199 = load i32, i32* %x, align 4, !dbg !12770
  %mul296 = mul nsw i32 %199, 2, !dbg !12771
  %add297 = add nsw i32 %mul296, 2, !dbg !12772
  %idxprom298 = sext i32 %add297 to i64, !dbg !12773
  %200 = load i32, i32* %y, align 4, !dbg !12774
  %and299 = and i32 %200, 0, !dbg !12775
  %tobool300 = icmp ne i32 %and299, 0, !dbg !12776
  %lnot301 = xor i1 %tobool300, true, !dbg !12776
  %lnot.ext302 = zext i1 %lnot301 to i32, !dbg !12776
  %idxprom303 = sext i32 %lnot.ext302 to i64, !dbg !12773
  %201 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12773
  %arrayidx304 = getelementptr inbounds [2 x i32*], [2 x i32*]* %201, i64 0, !dbg !12773
  %arrayidx305 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx304, i64 0, i64 %idxprom303, !dbg !12773
  %202 = load i32*, i32** %arrayidx305, align 8, !dbg !12773
  %arrayidx306 = getelementptr inbounds i32, i32* %202, i64 %idxprom298, !dbg !12773
  %203 = load i32, i32* %arrayidx306, align 4, !dbg !12777
  %add307 = add nsw i32 %203, %shr295, !dbg !12777
  store i32 %add307, i32* %arrayidx306, align 4, !dbg !12777
  %204 = load i32, i32* %x, align 4, !dbg !12778
  %mul308 = mul nsw i32 %204, 2, !dbg !12779
  %add309 = add nsw i32 %mul308, 1, !dbg !12780
  %idxprom310 = sext i32 %add309 to i64, !dbg !12781
  %205 = load i32, i32* %y, align 4, !dbg !12782
  %and311 = and i32 %205, 0, !dbg !12783
  %idxprom312 = sext i32 %and311 to i64, !dbg !12781
  %206 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12781
  %arrayidx313 = getelementptr inbounds [2 x i32*], [2 x i32*]* %206, i64 0, !dbg !12781
  %arrayidx314 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx313, i64 0, i64 %idxprom312, !dbg !12781
  %207 = load i32*, i32** %arrayidx314, align 8, !dbg !12781
  %arrayidx315 = getelementptr inbounds i32, i32* %207, i64 %idxprom310, !dbg !12781
  store i32 65536, i32* %arrayidx315, align 4, !dbg !12784
  %208 = load i32, i32* %r10, align 4, !dbg !12785
  %209 = load i32, i32* %cry, align 4, !dbg !12786
  %mul316 = mul nsw i32 %208, %209, !dbg !12787
  %210 = load i32, i32* %g10, align 4, !dbg !12788
  %211 = load i32, i32* %cgy, align 4, !dbg !12789
  %mul317 = mul nsw i32 %210, %211, !dbg !12790
  %add318 = add nsw i32 %mul316, %mul317, !dbg !12791
  %212 = load i32, i32* %b10, align 4, !dbg !12792
  %213 = load i32, i32* %cby, align 4, !dbg !12793
  %mul319 = mul nsw i32 %212, %213, !dbg !12794
  %add320 = add nsw i32 %add318, %mul319, !dbg !12795
  %214 = load i32, i32* %x, align 4, !dbg !12796
  %mul321 = mul nsw i32 %214, 2, !dbg !12797
  %add322 = add nsw i32 %mul321, 0, !dbg !12798
  %idxprom323 = sext i32 %add322 to i64, !dbg !12799
  %215 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12799
  %arrayidx324 = getelementptr inbounds [2 x i32*], [2 x i32*]* %215, i64 0, !dbg !12799
  %arrayidx325 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx324, i64 0, i64 1, !dbg !12799
  %216 = load i32*, i32** %arrayidx325, align 8, !dbg !12799
  %arrayidx326 = getelementptr inbounds i32, i32* %216, i64 %idxprom323, !dbg !12799
  %217 = load i32, i32* %arrayidx326, align 4, !dbg !12799
  %add327 = add nsw i32 %add320, %217, !dbg !12800
  store i32 %add327, i32* %y10, align 4, !dbg !12801
  %218 = load i32, i32* %y10, align 4, !dbg !12802
  %219 = load i32, i32* %mask, align 4, !dbg !12803
  %and328 = and i32 %218, %219, !dbg !12804
  %sub329 = sub i32 %and328, 65536, !dbg !12805
  store i32 %sub329, i32* %diff, align 4, !dbg !12806
  %220 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !12807
  %arrayidx330 = getelementptr inbounds i16, i16* %220, i64 0, !dbg !12807
  %221 = load i16, i16* %arrayidx330, align 2, !dbg !12807
  %conv331 = sext i16 %221 to i32, !dbg !12807
  %222 = load i32, i32* %y10, align 4, !dbg !12808
  %shr332 = ashr i32 %222, 17, !dbg !12809
  %add333 = add nsw i32 %conv331, %shr332, !dbg !12810
  store i32 %add333, i32* %a.addr.i716, align 4, !dbg !12811
  store i32 12, i32* %p.addr.i717, align 4, !dbg !12811
  %223 = load i32, i32* %a.addr.i716, align 4, !dbg !12812
  %224 = load i32, i32* %p.addr.i717, align 4, !dbg !12813
  %shl.i718 = shl i32 1, %224, !dbg !12814
  %sub.i719 = sub nsw i32 %shl.i718, 1, !dbg !12815
  %neg.i720 = xor i32 %sub.i719, -1, !dbg !12816
  %and.i721 = and i32 %223, %neg.i720, !dbg !12817
  %tobool.i722 = icmp ne i32 %and.i721, 0, !dbg !12817
  br i1 %tobool.i722, label %if.then.i728, label %if.else.i729, !dbg !12818

if.then.i728:                                     ; preds = %av_clip_uintp2_c.exit746
  %225 = load i32, i32* %a.addr.i716, align 4, !dbg !12819
  %neg1.i723 = xor i32 %225, -1, !dbg !12820
  %shr.i724 = ashr i32 %neg1.i723, 31, !dbg !12821
  %226 = load i32, i32* %p.addr.i717, align 4, !dbg !12822
  %shl2.i725 = shl i32 1, %226, !dbg !12823
  %sub3.i726 = sub nsw i32 %shl2.i725, 1, !dbg !12824
  %and4.i727 = and i32 %shr.i724, %sub3.i726, !dbg !12825
  store i32 %and4.i727, i32* %retval.i715, align 4, !dbg !12826
  br label %av_clip_uintp2_c.exit730, !dbg !12826

if.else.i729:                                     ; preds = %av_clip_uintp2_c.exit746
  %227 = load i32, i32* %a.addr.i716, align 4, !dbg !12827
  store i32 %227, i32* %retval.i715, align 4, !dbg !12828
  br label %av_clip_uintp2_c.exit730, !dbg !12828

av_clip_uintp2_c.exit730:                         ; preds = %if.then.i728, %if.else.i729
  %228 = load i32, i32* %retval.i715, align 4, !dbg !12829
  %conv335 = trunc i32 %228 to i16, !dbg !12811
  %229 = load i32, i32* %x, align 4, !dbg !12830
  %mul336 = mul nsw i32 %229, 2, !dbg !12831
  %add337 = add nsw i32 %mul336, 0, !dbg !12832
  %conv338 = sext i32 %add337 to i64, !dbg !12830
  %230 = load i64, i64* %s0, align 8, !dbg !12833
  %add339 = add nsw i64 %conv338, %230, !dbg !12834
  %231 = load i16*, i16** %yuv0, align 8, !dbg !12835
  %arrayidx340 = getelementptr inbounds i16, i16* %231, i64 %add339, !dbg !12835
  store i16 %conv335, i16* %arrayidx340, align 2, !dbg !12836
  %232 = load i32, i32* %diff, align 4, !dbg !12837
  %mul341 = mul nsw i32 %232, 7, !dbg !12838
  %add342 = add nsw i32 %mul341, 8, !dbg !12839
  %shr343 = ashr i32 %add342, 4, !dbg !12840
  %233 = load i32, i32* %x, align 4, !dbg !12841
  %mul344 = mul nsw i32 %233, 2, !dbg !12842
  %add345 = add nsw i32 %mul344, 1, !dbg !12843
  %idxprom346 = sext i32 %add345 to i64, !dbg !12844
  %234 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12844
  %arrayidx347 = getelementptr inbounds [2 x i32*], [2 x i32*]* %234, i64 0, !dbg !12844
  %arrayidx348 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx347, i64 0, i64 1, !dbg !12844
  %235 = load i32*, i32** %arrayidx348, align 8, !dbg !12844
  %arrayidx349 = getelementptr inbounds i32, i32* %235, i64 %idxprom346, !dbg !12844
  %236 = load i32, i32* %arrayidx349, align 4, !dbg !12845
  %add350 = add nsw i32 %236, %shr343, !dbg !12845
  store i32 %add350, i32* %arrayidx349, align 4, !dbg !12845
  %237 = load i32, i32* %diff, align 4, !dbg !12846
  %mul351 = mul nsw i32 %237, 3, !dbg !12847
  %add352 = add nsw i32 %mul351, 8, !dbg !12848
  %shr353 = ashr i32 %add352, 4, !dbg !12849
  %238 = load i32, i32* %x, align 4, !dbg !12850
  %mul354 = mul nsw i32 %238, 2, !dbg !12851
  %sub355 = sub nsw i32 %mul354, 1, !dbg !12852
  %idxprom356 = sext i32 %sub355 to i64, !dbg !12853
  %239 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12853
  %arrayidx357 = getelementptr inbounds [2 x i32*], [2 x i32*]* %239, i64 0, !dbg !12853
  %arrayidx358 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx357, i64 0, i64 0, !dbg !12853
  %240 = load i32*, i32** %arrayidx358, align 8, !dbg !12853
  %arrayidx359 = getelementptr inbounds i32, i32* %240, i64 %idxprom356, !dbg !12853
  %241 = load i32, i32* %arrayidx359, align 4, !dbg !12854
  %add360 = add nsw i32 %241, %shr353, !dbg !12854
  store i32 %add360, i32* %arrayidx359, align 4, !dbg !12854
  %242 = load i32, i32* %diff, align 4, !dbg !12855
  %mul361 = mul nsw i32 %242, 5, !dbg !12856
  %add362 = add nsw i32 %mul361, 8, !dbg !12857
  %shr363 = ashr i32 %add362, 4, !dbg !12858
  %243 = load i32, i32* %x, align 4, !dbg !12859
  %mul364 = mul nsw i32 %243, 2, !dbg !12860
  %add365 = add nsw i32 %mul364, 0, !dbg !12861
  %idxprom366 = sext i32 %add365 to i64, !dbg !12862
  %244 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12862
  %arrayidx367 = getelementptr inbounds [2 x i32*], [2 x i32*]* %244, i64 0, !dbg !12862
  %arrayidx368 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx367, i64 0, i64 0, !dbg !12862
  %245 = load i32*, i32** %arrayidx368, align 8, !dbg !12862
  %arrayidx369 = getelementptr inbounds i32, i32* %245, i64 %idxprom366, !dbg !12862
  %246 = load i32, i32* %arrayidx369, align 4, !dbg !12863
  %add370 = add nsw i32 %246, %shr363, !dbg !12863
  store i32 %add370, i32* %arrayidx369, align 4, !dbg !12863
  %247 = load i32, i32* %diff, align 4, !dbg !12864
  %mul371 = mul nsw i32 %247, 1, !dbg !12865
  %add372 = add nsw i32 %mul371, 8, !dbg !12866
  %shr373 = ashr i32 %add372, 4, !dbg !12867
  %248 = load i32, i32* %x, align 4, !dbg !12868
  %mul374 = mul nsw i32 %248, 2, !dbg !12869
  %add375 = add nsw i32 %mul374, 1, !dbg !12870
  %idxprom376 = sext i32 %add375 to i64, !dbg !12871
  %249 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12871
  %arrayidx377 = getelementptr inbounds [2 x i32*], [2 x i32*]* %249, i64 0, !dbg !12871
  %arrayidx378 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx377, i64 0, i64 0, !dbg !12871
  %250 = load i32*, i32** %arrayidx378, align 8, !dbg !12871
  %arrayidx379 = getelementptr inbounds i32, i32* %250, i64 %idxprom376, !dbg !12871
  %251 = load i32, i32* %arrayidx379, align 4, !dbg !12872
  %add380 = add nsw i32 %251, %shr373, !dbg !12872
  store i32 %add380, i32* %arrayidx379, align 4, !dbg !12872
  %252 = load i32, i32* %x, align 4, !dbg !12873
  %mul381 = mul nsw i32 %252, 2, !dbg !12874
  %add382 = add nsw i32 %mul381, 0, !dbg !12875
  %idxprom383 = sext i32 %add382 to i64, !dbg !12876
  %253 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12876
  %arrayidx384 = getelementptr inbounds [2 x i32*], [2 x i32*]* %253, i64 0, !dbg !12876
  %arrayidx385 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx384, i64 0, i64 1, !dbg !12876
  %254 = load i32*, i32** %arrayidx385, align 8, !dbg !12876
  %arrayidx386 = getelementptr inbounds i32, i32* %254, i64 %idxprom383, !dbg !12876
  store i32 65536, i32* %arrayidx386, align 4, !dbg !12877
  %255 = load i32, i32* %r11, align 4, !dbg !12878
  %256 = load i32, i32* %cry, align 4, !dbg !12879
  %mul387 = mul nsw i32 %255, %256, !dbg !12880
  %257 = load i32, i32* %g11, align 4, !dbg !12881
  %258 = load i32, i32* %cgy, align 4, !dbg !12882
  %mul388 = mul nsw i32 %257, %258, !dbg !12883
  %add389 = add nsw i32 %mul387, %mul388, !dbg !12884
  %259 = load i32, i32* %b11, align 4, !dbg !12885
  %260 = load i32, i32* %cby, align 4, !dbg !12886
  %mul390 = mul nsw i32 %259, %260, !dbg !12887
  %add391 = add nsw i32 %add389, %mul390, !dbg !12888
  %261 = load i32, i32* %x, align 4, !dbg !12889
  %mul392 = mul nsw i32 %261, 2, !dbg !12890
  %add393 = add nsw i32 %mul392, 1, !dbg !12891
  %idxprom394 = sext i32 %add393 to i64, !dbg !12892
  %262 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12892
  %arrayidx395 = getelementptr inbounds [2 x i32*], [2 x i32*]* %262, i64 0, !dbg !12892
  %arrayidx396 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx395, i64 0, i64 1, !dbg !12892
  %263 = load i32*, i32** %arrayidx396, align 8, !dbg !12892
  %arrayidx397 = getelementptr inbounds i32, i32* %263, i64 %idxprom394, !dbg !12892
  %264 = load i32, i32* %arrayidx397, align 4, !dbg !12892
  %add398 = add nsw i32 %add391, %264, !dbg !12893
  store i32 %add398, i32* %y11, align 4, !dbg !12894
  %265 = load i32, i32* %y11, align 4, !dbg !12895
  %266 = load i32, i32* %mask, align 4, !dbg !12896
  %and399 = and i32 %265, %266, !dbg !12897
  %sub400 = sub i32 %and399, 65536, !dbg !12898
  store i32 %sub400, i32* %diff, align 4, !dbg !12899
  %267 = load i16*, i16** %yuv_offset.addr, align 8, !dbg !12900
  %arrayidx401 = getelementptr inbounds i16, i16* %267, i64 0, !dbg !12900
  %268 = load i16, i16* %arrayidx401, align 2, !dbg !12900
  %conv402 = sext i16 %268 to i32, !dbg !12900
  %269 = load i32, i32* %y11, align 4, !dbg !12901
  %shr403 = ashr i32 %269, 17, !dbg !12902
  %add404 = add nsw i32 %conv402, %shr403, !dbg !12903
  store i32 %add404, i32* %a.addr.i700, align 4, !dbg !12904
  store i32 12, i32* %p.addr.i701, align 4, !dbg !12904
  %270 = load i32, i32* %a.addr.i700, align 4, !dbg !12905
  %271 = load i32, i32* %p.addr.i701, align 4, !dbg !12906
  %shl.i702 = shl i32 1, %271, !dbg !12907
  %sub.i703 = sub nsw i32 %shl.i702, 1, !dbg !12908
  %neg.i704 = xor i32 %sub.i703, -1, !dbg !12909
  %and.i705 = and i32 %270, %neg.i704, !dbg !12910
  %tobool.i706 = icmp ne i32 %and.i705, 0, !dbg !12910
  br i1 %tobool.i706, label %if.then.i712, label %if.else.i713, !dbg !12911

if.then.i712:                                     ; preds = %av_clip_uintp2_c.exit730
  %272 = load i32, i32* %a.addr.i700, align 4, !dbg !12912
  %neg1.i707 = xor i32 %272, -1, !dbg !12913
  %shr.i708 = ashr i32 %neg1.i707, 31, !dbg !12914
  %273 = load i32, i32* %p.addr.i701, align 4, !dbg !12915
  %shl2.i709 = shl i32 1, %273, !dbg !12916
  %sub3.i710 = sub nsw i32 %shl2.i709, 1, !dbg !12917
  %and4.i711 = and i32 %shr.i708, %sub3.i710, !dbg !12918
  store i32 %and4.i711, i32* %retval.i699, align 4, !dbg !12919
  br label %av_clip_uintp2_c.exit714, !dbg !12919

if.else.i713:                                     ; preds = %av_clip_uintp2_c.exit730
  %274 = load i32, i32* %a.addr.i700, align 4, !dbg !12920
  store i32 %274, i32* %retval.i699, align 4, !dbg !12921
  br label %av_clip_uintp2_c.exit714, !dbg !12921

av_clip_uintp2_c.exit714:                         ; preds = %if.then.i712, %if.else.i713
  %275 = load i32, i32* %retval.i699, align 4, !dbg !12922
  %conv406 = trunc i32 %275 to i16, !dbg !12904
  %276 = load i32, i32* %x, align 4, !dbg !12923
  %mul407 = mul nsw i32 %276, 2, !dbg !12924
  %add408 = add nsw i32 %mul407, 1, !dbg !12925
  %conv409 = sext i32 %add408 to i64, !dbg !12923
  %277 = load i64, i64* %s0, align 8, !dbg !12926
  %add410 = add nsw i64 %conv409, %277, !dbg !12927
  %278 = load i16*, i16** %yuv0, align 8, !dbg !12928
  %arrayidx411 = getelementptr inbounds i16, i16* %278, i64 %add410, !dbg !12928
  store i16 %conv406, i16* %arrayidx411, align 2, !dbg !12929
  %279 = load i32, i32* %diff, align 4, !dbg !12930
  %mul412 = mul nsw i32 %279, 7, !dbg !12931
  %add413 = add nsw i32 %mul412, 8, !dbg !12932
  %shr414 = ashr i32 %add413, 4, !dbg !12933
  %280 = load i32, i32* %x, align 4, !dbg !12934
  %mul415 = mul nsw i32 %280, 2, !dbg !12935
  %add416 = add nsw i32 %mul415, 2, !dbg !12936
  %idxprom417 = sext i32 %add416 to i64, !dbg !12937
  %281 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12937
  %arrayidx418 = getelementptr inbounds [2 x i32*], [2 x i32*]* %281, i64 0, !dbg !12937
  %arrayidx419 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx418, i64 0, i64 1, !dbg !12937
  %282 = load i32*, i32** %arrayidx419, align 8, !dbg !12937
  %arrayidx420 = getelementptr inbounds i32, i32* %282, i64 %idxprom417, !dbg !12937
  %283 = load i32, i32* %arrayidx420, align 4, !dbg !12938
  %add421 = add nsw i32 %283, %shr414, !dbg !12938
  store i32 %add421, i32* %arrayidx420, align 4, !dbg !12938
  %284 = load i32, i32* %diff, align 4, !dbg !12939
  %mul422 = mul nsw i32 %284, 3, !dbg !12940
  %add423 = add nsw i32 %mul422, 8, !dbg !12941
  %shr424 = ashr i32 %add423, 4, !dbg !12942
  %285 = load i32, i32* %x, align 4, !dbg !12943
  %mul425 = mul nsw i32 %285, 2, !dbg !12944
  %add426 = add nsw i32 %mul425, 0, !dbg !12945
  %idxprom427 = sext i32 %add426 to i64, !dbg !12946
  %286 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12946
  %arrayidx428 = getelementptr inbounds [2 x i32*], [2 x i32*]* %286, i64 0, !dbg !12946
  %arrayidx429 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx428, i64 0, i64 0, !dbg !12946
  %287 = load i32*, i32** %arrayidx429, align 8, !dbg !12946
  %arrayidx430 = getelementptr inbounds i32, i32* %287, i64 %idxprom427, !dbg !12946
  %288 = load i32, i32* %arrayidx430, align 4, !dbg !12947
  %add431 = add nsw i32 %288, %shr424, !dbg !12947
  store i32 %add431, i32* %arrayidx430, align 4, !dbg !12947
  %289 = load i32, i32* %diff, align 4, !dbg !12948
  %mul432 = mul nsw i32 %289, 5, !dbg !12949
  %add433 = add nsw i32 %mul432, 8, !dbg !12950
  %shr434 = ashr i32 %add433, 4, !dbg !12951
  %290 = load i32, i32* %x, align 4, !dbg !12952
  %mul435 = mul nsw i32 %290, 2, !dbg !12953
  %add436 = add nsw i32 %mul435, 1, !dbg !12954
  %idxprom437 = sext i32 %add436 to i64, !dbg !12955
  %291 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12955
  %arrayidx438 = getelementptr inbounds [2 x i32*], [2 x i32*]* %291, i64 0, !dbg !12955
  %arrayidx439 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx438, i64 0, i64 0, !dbg !12955
  %292 = load i32*, i32** %arrayidx439, align 8, !dbg !12955
  %arrayidx440 = getelementptr inbounds i32, i32* %292, i64 %idxprom437, !dbg !12955
  %293 = load i32, i32* %arrayidx440, align 4, !dbg !12956
  %add441 = add nsw i32 %293, %shr434, !dbg !12956
  store i32 %add441, i32* %arrayidx440, align 4, !dbg !12956
  %294 = load i32, i32* %diff, align 4, !dbg !12957
  %mul442 = mul nsw i32 %294, 1, !dbg !12958
  %add443 = add nsw i32 %mul442, 8, !dbg !12959
  %shr444 = ashr i32 %add443, 4, !dbg !12960
  %295 = load i32, i32* %x, align 4, !dbg !12961
  %mul445 = mul nsw i32 %295, 2, !dbg !12962
  %add446 = add nsw i32 %mul445, 2, !dbg !12963
  %idxprom447 = sext i32 %add446 to i64, !dbg !12964
  %296 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12964
  %arrayidx448 = getelementptr inbounds [2 x i32*], [2 x i32*]* %296, i64 0, !dbg !12964
  %arrayidx449 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx448, i64 0, i64 0, !dbg !12964
  %297 = load i32*, i32** %arrayidx449, align 8, !dbg !12964
  %arrayidx450 = getelementptr inbounds i32, i32* %297, i64 %idxprom447, !dbg !12964
  %298 = load i32, i32* %arrayidx450, align 4, !dbg !12965
  %add451 = add nsw i32 %298, %shr444, !dbg !12965
  store i32 %add451, i32* %arrayidx450, align 4, !dbg !12965
  %299 = load i32, i32* %x, align 4, !dbg !12966
  %mul452 = mul nsw i32 %299, 2, !dbg !12967
  %add453 = add nsw i32 %mul452, 1, !dbg !12968
  %idxprom454 = sext i32 %add453 to i64, !dbg !12969
  %300 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !12969
  %arrayidx455 = getelementptr inbounds [2 x i32*], [2 x i32*]* %300, i64 0, !dbg !12969
  %arrayidx456 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx455, i64 0, i64 1, !dbg !12969
  %301 = load i32*, i32** %arrayidx456, align 8, !dbg !12969
  %arrayidx457 = getelementptr inbounds i32, i32* %301, i64 %idxprom454, !dbg !12969
  store i32 65536, i32* %arrayidx457, align 4, !dbg !12970
  %302 = load i32, i32* %r00, align 4, !dbg !12971
  %303 = load i32, i32* %r01, align 4, !dbg !12972
  %add458 = add nsw i32 %302, %303, !dbg !12973
  %304 = load i32, i32* %r10, align 4, !dbg !12974
  %add459 = add nsw i32 %add458, %304, !dbg !12975
  %305 = load i32, i32* %r11, align 4, !dbg !12976
  %add460 = add nsw i32 %add459, %305, !dbg !12977
  %add461 = add nsw i32 %add460, 2, !dbg !12978
  %shr462 = ashr i32 %add461, 2, !dbg !12979
  %306 = load i32, i32* %cru, align 4, !dbg !12980
  %mul463 = mul nsw i32 %shr462, %306, !dbg !12981
  %307 = load i32, i32* %g00, align 4, !dbg !12982
  %308 = load i32, i32* %g01, align 4, !dbg !12983
  %add464 = add nsw i32 %307, %308, !dbg !12984
  %309 = load i32, i32* %g10, align 4, !dbg !12985
  %add465 = add nsw i32 %add464, %309, !dbg !12986
  %310 = load i32, i32* %g11, align 4, !dbg !12987
  %add466 = add nsw i32 %add465, %310, !dbg !12988
  %add467 = add nsw i32 %add466, 2, !dbg !12989
  %shr468 = ashr i32 %add467, 2, !dbg !12990
  %311 = load i32, i32* %cgu, align 4, !dbg !12991
  %mul469 = mul nsw i32 %shr468, %311, !dbg !12992
  %add470 = add nsw i32 %mul463, %mul469, !dbg !12993
  %312 = load i32, i32* %b00, align 4, !dbg !12994
  %313 = load i32, i32* %b01, align 4, !dbg !12995
  %add471 = add nsw i32 %312, %313, !dbg !12996
  %314 = load i32, i32* %b10, align 4, !dbg !12997
  %add472 = add nsw i32 %add471, %314, !dbg !12998
  %315 = load i32, i32* %b11, align 4, !dbg !12999
  %add473 = add nsw i32 %add472, %315, !dbg !13000
  %add474 = add nsw i32 %add473, 2, !dbg !13001
  %shr475 = ashr i32 %add474, 2, !dbg !13002
  %316 = load i32, i32* %cburv, align 4, !dbg !13003
  %mul476 = mul nsw i32 %shr475, %316, !dbg !13004
  %add477 = add nsw i32 %add470, %mul476, !dbg !13005
  %317 = load i32, i32* %x, align 4, !dbg !13006
  %idxprom478 = sext i32 %317 to i64, !dbg !13007
  %318 = load i32, i32* %y, align 4, !dbg !13008
  %and479 = and i32 %318, 1, !dbg !13009
  %idxprom480 = sext i32 %and479 to i64, !dbg !13007
  %319 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13007
  %arrayidx481 = getelementptr inbounds [2 x i32*], [2 x i32*]* %319, i64 1, !dbg !13007
  %arrayidx482 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx481, i64 0, i64 %idxprom480, !dbg !13007
  %320 = load i32*, i32** %arrayidx482, align 8, !dbg !13007
  %arrayidx483 = getelementptr inbounds i32, i32* %320, i64 %idxprom478, !dbg !13007
  %321 = load i32, i32* %arrayidx483, align 4, !dbg !13007
  %add484 = add nsw i32 %add477, %321, !dbg !13010
  store i32 %add484, i32* %u, align 4, !dbg !13011
  %322 = load i32, i32* %u, align 4, !dbg !13012
  %323 = load i32, i32* %mask, align 4, !dbg !13013
  %and485 = and i32 %322, %323, !dbg !13014
  %sub486 = sub i32 %and485, 65536, !dbg !13015
  store i32 %sub486, i32* %diff, align 4, !dbg !13016
  %324 = load i32, i32* %u, align 4, !dbg !13017
  %shr487 = ashr i32 %324, 17, !dbg !13018
  %add488 = add nsw i32 2048, %shr487, !dbg !13019
  store i32 %add488, i32* %a.addr.i684, align 4, !dbg !13020
  store i32 12, i32* %p.addr.i685, align 4, !dbg !13020
  %325 = load i32, i32* %a.addr.i684, align 4, !dbg !13021
  %326 = load i32, i32* %p.addr.i685, align 4, !dbg !13022
  %shl.i686 = shl i32 1, %326, !dbg !13023
  %sub.i687 = sub nsw i32 %shl.i686, 1, !dbg !13024
  %neg.i688 = xor i32 %sub.i687, -1, !dbg !13025
  %and.i689 = and i32 %325, %neg.i688, !dbg !13026
  %tobool.i690 = icmp ne i32 %and.i689, 0, !dbg !13026
  br i1 %tobool.i690, label %if.then.i696, label %if.else.i697, !dbg !13027

if.then.i696:                                     ; preds = %av_clip_uintp2_c.exit714
  %327 = load i32, i32* %a.addr.i684, align 4, !dbg !13028
  %neg1.i691 = xor i32 %327, -1, !dbg !13029
  %shr.i692 = ashr i32 %neg1.i691, 31, !dbg !13030
  %328 = load i32, i32* %p.addr.i685, align 4, !dbg !13031
  %shl2.i693 = shl i32 1, %328, !dbg !13032
  %sub3.i694 = sub nsw i32 %shl2.i693, 1, !dbg !13033
  %and4.i695 = and i32 %shr.i692, %sub3.i694, !dbg !13034
  store i32 %and4.i695, i32* %retval.i683, align 4, !dbg !13035
  br label %av_clip_uintp2_c.exit698, !dbg !13035

if.else.i697:                                     ; preds = %av_clip_uintp2_c.exit714
  %329 = load i32, i32* %a.addr.i684, align 4, !dbg !13036
  store i32 %329, i32* %retval.i683, align 4, !dbg !13037
  br label %av_clip_uintp2_c.exit698, !dbg !13037

av_clip_uintp2_c.exit698:                         ; preds = %if.then.i696, %if.else.i697
  %330 = load i32, i32* %retval.i683, align 4, !dbg !13038
  %conv490 = trunc i32 %330 to i16, !dbg !13020
  %331 = load i32, i32* %x, align 4, !dbg !13039
  %idxprom491 = sext i32 %331 to i64, !dbg !13040
  %332 = load i16*, i16** %yuv1, align 8, !dbg !13040
  %arrayidx492 = getelementptr inbounds i16, i16* %332, i64 %idxprom491, !dbg !13040
  store i16 %conv490, i16* %arrayidx492, align 2, !dbg !13041
  %333 = load i32, i32* %diff, align 4, !dbg !13042
  %mul493 = mul nsw i32 %333, 7, !dbg !13043
  %add494 = add nsw i32 %mul493, 8, !dbg !13044
  %shr495 = ashr i32 %add494, 4, !dbg !13045
  %334 = load i32, i32* %x, align 4, !dbg !13046
  %add496 = add nsw i32 %334, 1, !dbg !13047
  %idxprom497 = sext i32 %add496 to i64, !dbg !13048
  %335 = load i32, i32* %y, align 4, !dbg !13049
  %and498 = and i32 %335, 1, !dbg !13050
  %idxprom499 = sext i32 %and498 to i64, !dbg !13048
  %336 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13048
  %arrayidx500 = getelementptr inbounds [2 x i32*], [2 x i32*]* %336, i64 1, !dbg !13048
  %arrayidx501 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx500, i64 0, i64 %idxprom499, !dbg !13048
  %337 = load i32*, i32** %arrayidx501, align 8, !dbg !13048
  %arrayidx502 = getelementptr inbounds i32, i32* %337, i64 %idxprom497, !dbg !13048
  %338 = load i32, i32* %arrayidx502, align 4, !dbg !13051
  %add503 = add nsw i32 %338, %shr495, !dbg !13051
  store i32 %add503, i32* %arrayidx502, align 4, !dbg !13051
  %339 = load i32, i32* %diff, align 4, !dbg !13052
  %mul504 = mul nsw i32 %339, 3, !dbg !13053
  %add505 = add nsw i32 %mul504, 8, !dbg !13054
  %shr506 = ashr i32 %add505, 4, !dbg !13055
  %340 = load i32, i32* %x, align 4, !dbg !13056
  %sub507 = sub nsw i32 %340, 1, !dbg !13057
  %idxprom508 = sext i32 %sub507 to i64, !dbg !13058
  %341 = load i32, i32* %y, align 4, !dbg !13059
  %and509 = and i32 %341, 1, !dbg !13060
  %tobool510 = icmp ne i32 %and509, 0, !dbg !13061
  %lnot511 = xor i1 %tobool510, true, !dbg !13061
  %lnot.ext512 = zext i1 %lnot511 to i32, !dbg !13061
  %idxprom513 = sext i32 %lnot.ext512 to i64, !dbg !13058
  %342 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13058
  %arrayidx514 = getelementptr inbounds [2 x i32*], [2 x i32*]* %342, i64 1, !dbg !13058
  %arrayidx515 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx514, i64 0, i64 %idxprom513, !dbg !13058
  %343 = load i32*, i32** %arrayidx515, align 8, !dbg !13058
  %arrayidx516 = getelementptr inbounds i32, i32* %343, i64 %idxprom508, !dbg !13058
  %344 = load i32, i32* %arrayidx516, align 4, !dbg !13062
  %add517 = add nsw i32 %344, %shr506, !dbg !13062
  store i32 %add517, i32* %arrayidx516, align 4, !dbg !13062
  %345 = load i32, i32* %diff, align 4, !dbg !13063
  %mul518 = mul nsw i32 %345, 5, !dbg !13064
  %add519 = add nsw i32 %mul518, 8, !dbg !13065
  %shr520 = ashr i32 %add519, 4, !dbg !13066
  %346 = load i32, i32* %x, align 4, !dbg !13067
  %add521 = add nsw i32 %346, 0, !dbg !13068
  %idxprom522 = sext i32 %add521 to i64, !dbg !13069
  %347 = load i32, i32* %y, align 4, !dbg !13070
  %and523 = and i32 %347, 1, !dbg !13071
  %tobool524 = icmp ne i32 %and523, 0, !dbg !13072
  %lnot525 = xor i1 %tobool524, true, !dbg !13072
  %lnot.ext526 = zext i1 %lnot525 to i32, !dbg !13072
  %idxprom527 = sext i32 %lnot.ext526 to i64, !dbg !13069
  %348 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13069
  %arrayidx528 = getelementptr inbounds [2 x i32*], [2 x i32*]* %348, i64 1, !dbg !13069
  %arrayidx529 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx528, i64 0, i64 %idxprom527, !dbg !13069
  %349 = load i32*, i32** %arrayidx529, align 8, !dbg !13069
  %arrayidx530 = getelementptr inbounds i32, i32* %349, i64 %idxprom522, !dbg !13069
  %350 = load i32, i32* %arrayidx530, align 4, !dbg !13073
  %add531 = add nsw i32 %350, %shr520, !dbg !13073
  store i32 %add531, i32* %arrayidx530, align 4, !dbg !13073
  %351 = load i32, i32* %diff, align 4, !dbg !13074
  %mul532 = mul nsw i32 %351, 1, !dbg !13075
  %add533 = add nsw i32 %mul532, 8, !dbg !13076
  %shr534 = ashr i32 %add533, 4, !dbg !13077
  %352 = load i32, i32* %x, align 4, !dbg !13078
  %add535 = add nsw i32 %352, 1, !dbg !13079
  %idxprom536 = sext i32 %add535 to i64, !dbg !13080
  %353 = load i32, i32* %y, align 4, !dbg !13081
  %and537 = and i32 %353, 1, !dbg !13082
  %tobool538 = icmp ne i32 %and537, 0, !dbg !13083
  %lnot539 = xor i1 %tobool538, true, !dbg !13083
  %lnot.ext540 = zext i1 %lnot539 to i32, !dbg !13083
  %idxprom541 = sext i32 %lnot.ext540 to i64, !dbg !13080
  %354 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13080
  %arrayidx542 = getelementptr inbounds [2 x i32*], [2 x i32*]* %354, i64 1, !dbg !13080
  %arrayidx543 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx542, i64 0, i64 %idxprom541, !dbg !13080
  %355 = load i32*, i32** %arrayidx543, align 8, !dbg !13080
  %arrayidx544 = getelementptr inbounds i32, i32* %355, i64 %idxprom536, !dbg !13080
  %356 = load i32, i32* %arrayidx544, align 4, !dbg !13084
  %add545 = add nsw i32 %356, %shr534, !dbg !13084
  store i32 %add545, i32* %arrayidx544, align 4, !dbg !13084
  %357 = load i32, i32* %x, align 4, !dbg !13085
  %add546 = add nsw i32 %357, 0, !dbg !13086
  %idxprom547 = sext i32 %add546 to i64, !dbg !13087
  %358 = load i32, i32* %y, align 4, !dbg !13088
  %and548 = and i32 %358, 1, !dbg !13089
  %idxprom549 = sext i32 %and548 to i64, !dbg !13087
  %359 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13087
  %arrayidx550 = getelementptr inbounds [2 x i32*], [2 x i32*]* %359, i64 1, !dbg !13087
  %arrayidx551 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx550, i64 0, i64 %idxprom549, !dbg !13087
  %360 = load i32*, i32** %arrayidx551, align 8, !dbg !13087
  %arrayidx552 = getelementptr inbounds i32, i32* %360, i64 %idxprom547, !dbg !13087
  store i32 65536, i32* %arrayidx552, align 4, !dbg !13090
  %361 = load i32, i32* %r00, align 4, !dbg !13091
  %362 = load i32, i32* %r01, align 4, !dbg !13092
  %add553 = add nsw i32 %361, %362, !dbg !13093
  %363 = load i32, i32* %r10, align 4, !dbg !13094
  %add554 = add nsw i32 %add553, %363, !dbg !13095
  %364 = load i32, i32* %r11, align 4, !dbg !13096
  %add555 = add nsw i32 %add554, %364, !dbg !13097
  %add556 = add nsw i32 %add555, 2, !dbg !13098
  %shr557 = ashr i32 %add556, 2, !dbg !13099
  %365 = load i32, i32* %cburv, align 4, !dbg !13100
  %mul558 = mul nsw i32 %shr557, %365, !dbg !13101
  %366 = load i32, i32* %g00, align 4, !dbg !13102
  %367 = load i32, i32* %g01, align 4, !dbg !13103
  %add559 = add nsw i32 %366, %367, !dbg !13104
  %368 = load i32, i32* %g10, align 4, !dbg !13105
  %add560 = add nsw i32 %add559, %368, !dbg !13106
  %369 = load i32, i32* %g11, align 4, !dbg !13107
  %add561 = add nsw i32 %add560, %369, !dbg !13108
  %add562 = add nsw i32 %add561, 2, !dbg !13109
  %shr563 = ashr i32 %add562, 2, !dbg !13110
  %370 = load i32, i32* %cgv, align 4, !dbg !13111
  %mul564 = mul nsw i32 %shr563, %370, !dbg !13112
  %add565 = add nsw i32 %mul558, %mul564, !dbg !13113
  %371 = load i32, i32* %b00, align 4, !dbg !13114
  %372 = load i32, i32* %b01, align 4, !dbg !13115
  %add566 = add nsw i32 %371, %372, !dbg !13116
  %373 = load i32, i32* %b10, align 4, !dbg !13117
  %add567 = add nsw i32 %add566, %373, !dbg !13118
  %374 = load i32, i32* %b11, align 4, !dbg !13119
  %add568 = add nsw i32 %add567, %374, !dbg !13120
  %add569 = add nsw i32 %add568, 2, !dbg !13121
  %shr570 = ashr i32 %add569, 2, !dbg !13122
  %375 = load i32, i32* %cbv, align 4, !dbg !13123
  %mul571 = mul nsw i32 %shr570, %375, !dbg !13124
  %add572 = add nsw i32 %add565, %mul571, !dbg !13125
  %376 = load i32, i32* %x, align 4, !dbg !13126
  %idxprom573 = sext i32 %376 to i64, !dbg !13127
  %377 = load i32, i32* %y, align 4, !dbg !13128
  %and574 = and i32 %377, 1, !dbg !13129
  %idxprom575 = sext i32 %and574 to i64, !dbg !13127
  %378 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13127
  %arrayidx576 = getelementptr inbounds [2 x i32*], [2 x i32*]* %378, i64 2, !dbg !13127
  %arrayidx577 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx576, i64 0, i64 %idxprom575, !dbg !13127
  %379 = load i32*, i32** %arrayidx577, align 8, !dbg !13127
  %arrayidx578 = getelementptr inbounds i32, i32* %379, i64 %idxprom573, !dbg !13127
  %380 = load i32, i32* %arrayidx578, align 4, !dbg !13127
  %add579 = add nsw i32 %add572, %380, !dbg !13130
  store i32 %add579, i32* %v, align 4, !dbg !13131
  %381 = load i32, i32* %v, align 4, !dbg !13132
  %382 = load i32, i32* %mask, align 4, !dbg !13133
  %and580 = and i32 %381, %382, !dbg !13134
  %sub581 = sub i32 %and580, 65536, !dbg !13135
  store i32 %sub581, i32* %diff, align 4, !dbg !13136
  %383 = load i32, i32* %v, align 4, !dbg !13137
  %shr582 = ashr i32 %383, 17, !dbg !13138
  %add583 = add nsw i32 2048, %shr582, !dbg !13139
  store i32 %add583, i32* %a.addr.i668, align 4, !dbg !13140
  store i32 12, i32* %p.addr.i669, align 4, !dbg !13140
  %384 = load i32, i32* %a.addr.i668, align 4, !dbg !13141
  %385 = load i32, i32* %p.addr.i669, align 4, !dbg !13142
  %shl.i670 = shl i32 1, %385, !dbg !13143
  %sub.i671 = sub nsw i32 %shl.i670, 1, !dbg !13144
  %neg.i672 = xor i32 %sub.i671, -1, !dbg !13145
  %and.i673 = and i32 %384, %neg.i672, !dbg !13146
  %tobool.i674 = icmp ne i32 %and.i673, 0, !dbg !13146
  br i1 %tobool.i674, label %if.then.i680, label %if.else.i681, !dbg !13147

if.then.i680:                                     ; preds = %av_clip_uintp2_c.exit698
  %386 = load i32, i32* %a.addr.i668, align 4, !dbg !13148
  %neg1.i675 = xor i32 %386, -1, !dbg !13149
  %shr.i676 = ashr i32 %neg1.i675, 31, !dbg !13150
  %387 = load i32, i32* %p.addr.i669, align 4, !dbg !13151
  %shl2.i677 = shl i32 1, %387, !dbg !13152
  %sub3.i678 = sub nsw i32 %shl2.i677, 1, !dbg !13153
  %and4.i679 = and i32 %shr.i676, %sub3.i678, !dbg !13154
  store i32 %and4.i679, i32* %retval.i667, align 4, !dbg !13155
  br label %av_clip_uintp2_c.exit682, !dbg !13155

if.else.i681:                                     ; preds = %av_clip_uintp2_c.exit698
  %388 = load i32, i32* %a.addr.i668, align 4, !dbg !13156
  store i32 %388, i32* %retval.i667, align 4, !dbg !13157
  br label %av_clip_uintp2_c.exit682, !dbg !13157

av_clip_uintp2_c.exit682:                         ; preds = %if.then.i680, %if.else.i681
  %389 = load i32, i32* %retval.i667, align 4, !dbg !13158
  %conv585 = trunc i32 %389 to i16, !dbg !13140
  %390 = load i32, i32* %x, align 4, !dbg !13159
  %idxprom586 = sext i32 %390 to i64, !dbg !13160
  %391 = load i16*, i16** %yuv2, align 8, !dbg !13160
  %arrayidx587 = getelementptr inbounds i16, i16* %391, i64 %idxprom586, !dbg !13160
  store i16 %conv585, i16* %arrayidx587, align 2, !dbg !13161
  %392 = load i32, i32* %diff, align 4, !dbg !13162
  %mul588 = mul nsw i32 %392, 7, !dbg !13163
  %add589 = add nsw i32 %mul588, 8, !dbg !13164
  %shr590 = ashr i32 %add589, 4, !dbg !13165
  %393 = load i32, i32* %x, align 4, !dbg !13166
  %add591 = add nsw i32 %393, 1, !dbg !13167
  %idxprom592 = sext i32 %add591 to i64, !dbg !13168
  %394 = load i32, i32* %y, align 4, !dbg !13169
  %and593 = and i32 %394, 1, !dbg !13170
  %idxprom594 = sext i32 %and593 to i64, !dbg !13168
  %395 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13168
  %arrayidx595 = getelementptr inbounds [2 x i32*], [2 x i32*]* %395, i64 2, !dbg !13168
  %arrayidx596 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx595, i64 0, i64 %idxprom594, !dbg !13168
  %396 = load i32*, i32** %arrayidx596, align 8, !dbg !13168
  %arrayidx597 = getelementptr inbounds i32, i32* %396, i64 %idxprom592, !dbg !13168
  %397 = load i32, i32* %arrayidx597, align 4, !dbg !13171
  %add598 = add nsw i32 %397, %shr590, !dbg !13171
  store i32 %add598, i32* %arrayidx597, align 4, !dbg !13171
  %398 = load i32, i32* %diff, align 4, !dbg !13172
  %mul599 = mul nsw i32 %398, 3, !dbg !13173
  %add600 = add nsw i32 %mul599, 8, !dbg !13174
  %shr601 = ashr i32 %add600, 4, !dbg !13175
  %399 = load i32, i32* %x, align 4, !dbg !13176
  %sub602 = sub nsw i32 %399, 1, !dbg !13177
  %idxprom603 = sext i32 %sub602 to i64, !dbg !13178
  %400 = load i32, i32* %y, align 4, !dbg !13179
  %and604 = and i32 %400, 1, !dbg !13180
  %tobool605 = icmp ne i32 %and604, 0, !dbg !13181
  %lnot606 = xor i1 %tobool605, true, !dbg !13181
  %lnot.ext607 = zext i1 %lnot606 to i32, !dbg !13181
  %idxprom608 = sext i32 %lnot.ext607 to i64, !dbg !13178
  %401 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13178
  %arrayidx609 = getelementptr inbounds [2 x i32*], [2 x i32*]* %401, i64 2, !dbg !13178
  %arrayidx610 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx609, i64 0, i64 %idxprom608, !dbg !13178
  %402 = load i32*, i32** %arrayidx610, align 8, !dbg !13178
  %arrayidx611 = getelementptr inbounds i32, i32* %402, i64 %idxprom603, !dbg !13178
  %403 = load i32, i32* %arrayidx611, align 4, !dbg !13182
  %add612 = add nsw i32 %403, %shr601, !dbg !13182
  store i32 %add612, i32* %arrayidx611, align 4, !dbg !13182
  %404 = load i32, i32* %diff, align 4, !dbg !13183
  %mul613 = mul nsw i32 %404, 5, !dbg !13184
  %add614 = add nsw i32 %mul613, 8, !dbg !13185
  %shr615 = ashr i32 %add614, 4, !dbg !13186
  %405 = load i32, i32* %x, align 4, !dbg !13187
  %add616 = add nsw i32 %405, 0, !dbg !13188
  %idxprom617 = sext i32 %add616 to i64, !dbg !13189
  %406 = load i32, i32* %y, align 4, !dbg !13190
  %and618 = and i32 %406, 1, !dbg !13191
  %tobool619 = icmp ne i32 %and618, 0, !dbg !13192
  %lnot620 = xor i1 %tobool619, true, !dbg !13192
  %lnot.ext621 = zext i1 %lnot620 to i32, !dbg !13192
  %idxprom622 = sext i32 %lnot.ext621 to i64, !dbg !13189
  %407 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13189
  %arrayidx623 = getelementptr inbounds [2 x i32*], [2 x i32*]* %407, i64 2, !dbg !13189
  %arrayidx624 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx623, i64 0, i64 %idxprom622, !dbg !13189
  %408 = load i32*, i32** %arrayidx624, align 8, !dbg !13189
  %arrayidx625 = getelementptr inbounds i32, i32* %408, i64 %idxprom617, !dbg !13189
  %409 = load i32, i32* %arrayidx625, align 4, !dbg !13193
  %add626 = add nsw i32 %409, %shr615, !dbg !13193
  store i32 %add626, i32* %arrayidx625, align 4, !dbg !13193
  %410 = load i32, i32* %diff, align 4, !dbg !13194
  %mul627 = mul nsw i32 %410, 1, !dbg !13195
  %add628 = add nsw i32 %mul627, 8, !dbg !13196
  %shr629 = ashr i32 %add628, 4, !dbg !13197
  %411 = load i32, i32* %x, align 4, !dbg !13198
  %add630 = add nsw i32 %411, 1, !dbg !13199
  %idxprom631 = sext i32 %add630 to i64, !dbg !13200
  %412 = load i32, i32* %y, align 4, !dbg !13201
  %and632 = and i32 %412, 1, !dbg !13202
  %tobool633 = icmp ne i32 %and632, 0, !dbg !13203
  %lnot634 = xor i1 %tobool633, true, !dbg !13203
  %lnot.ext635 = zext i1 %lnot634 to i32, !dbg !13203
  %idxprom636 = sext i32 %lnot.ext635 to i64, !dbg !13200
  %413 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13200
  %arrayidx637 = getelementptr inbounds [2 x i32*], [2 x i32*]* %413, i64 2, !dbg !13200
  %arrayidx638 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx637, i64 0, i64 %idxprom636, !dbg !13200
  %414 = load i32*, i32** %arrayidx638, align 8, !dbg !13200
  %arrayidx639 = getelementptr inbounds i32, i32* %414, i64 %idxprom631, !dbg !13200
  %415 = load i32, i32* %arrayidx639, align 4, !dbg !13204
  %add640 = add nsw i32 %415, %shr629, !dbg !13204
  store i32 %add640, i32* %arrayidx639, align 4, !dbg !13204
  %416 = load i32, i32* %x, align 4, !dbg !13205
  %add641 = add nsw i32 %416, 0, !dbg !13206
  %idxprom642 = sext i32 %add641 to i64, !dbg !13207
  %417 = load i32, i32* %y, align 4, !dbg !13208
  %and643 = and i32 %417, 1, !dbg !13209
  %idxprom644 = sext i32 %and643 to i64, !dbg !13207
  %418 = load [2 x i32*]*, [2 x i32*]** %rnd_scratch.addr, align 8, !dbg !13207
  %arrayidx645 = getelementptr inbounds [2 x i32*], [2 x i32*]* %418, i64 2, !dbg !13207
  %arrayidx646 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx645, i64 0, i64 %idxprom644, !dbg !13207
  %419 = load i32*, i32** %arrayidx646, align 8, !dbg !13207
  %arrayidx647 = getelementptr inbounds i32, i32* %419, i64 %idxprom642, !dbg !13207
  store i32 65536, i32* %arrayidx647, align 4, !dbg !13210
  br label %for.inc648, !dbg !13211

for.inc648:                                       ; preds = %av_clip_uintp2_c.exit682
  %420 = load i32, i32* %x, align 4, !dbg !13212
  %inc649 = add nsw i32 %420, 1, !dbg !13212
  store i32 %inc649, i32* %x, align 4, !dbg !13212
  br label %for.cond76, !dbg !13214, !llvm.loop !13215

for.end650:                                       ; preds = %for.cond76
  %421 = load i64, i64* %s0, align 8, !dbg !13217
  %mul651 = mul nsw i64 %421, 2, !dbg !13218
  %422 = load i16*, i16** %yuv0, align 8, !dbg !13219
  %add.ptr = getelementptr inbounds i16, i16* %422, i64 %mul651, !dbg !13219
  store i16* %add.ptr, i16** %yuv0, align 8, !dbg !13219
  %423 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !13220
  %arrayidx652 = getelementptr inbounds i64, i64* %423, i64 1, !dbg !13220
  %424 = load i64, i64* %arrayidx652, align 8, !dbg !13220
  %div653 = udiv i64 %424, 2, !dbg !13221
  %425 = load i16*, i16** %yuv1, align 8, !dbg !13222
  %add.ptr654 = getelementptr inbounds i16, i16* %425, i64 %div653, !dbg !13222
  store i16* %add.ptr654, i16** %yuv1, align 8, !dbg !13222
  %426 = load i64*, i64** %yuv_stride.addr, align 8, !dbg !13223
  %arrayidx655 = getelementptr inbounds i64, i64* %426, i64 2, !dbg !13223
  %427 = load i64, i64* %arrayidx655, align 8, !dbg !13223
  %div656 = udiv i64 %427, 2, !dbg !13224
  %428 = load i16*, i16** %yuv2, align 8, !dbg !13225
  %add.ptr657 = getelementptr inbounds i16, i16* %428, i64 %div656, !dbg !13225
  store i16* %add.ptr657, i16** %yuv2, align 8, !dbg !13225
  %429 = load i64, i64* %s.addr, align 8, !dbg !13226
  %mul658 = mul nsw i64 %429, 2, !dbg !13227
  %430 = load i16*, i16** %rgb0, align 8, !dbg !13228
  %add.ptr659 = getelementptr inbounds i16, i16* %430, i64 %mul658, !dbg !13228
  store i16* %add.ptr659, i16** %rgb0, align 8, !dbg !13228
  %431 = load i64, i64* %s.addr, align 8, !dbg !13229
  %mul660 = mul nsw i64 %431, 2, !dbg !13230
  %432 = load i16*, i16** %rgb1, align 8, !dbg !13231
  %add.ptr661 = getelementptr inbounds i16, i16* %432, i64 %mul660, !dbg !13231
  store i16* %add.ptr661, i16** %rgb1, align 8, !dbg !13231
  %433 = load i64, i64* %s.addr, align 8, !dbg !13232
  %mul662 = mul nsw i64 %433, 2, !dbg !13233
  %434 = load i16*, i16** %rgb2, align 8, !dbg !13234
  %add.ptr663 = getelementptr inbounds i16, i16* %434, i64 %mul662, !dbg !13234
  store i16* %add.ptr663, i16** %rgb2, align 8, !dbg !13234
  br label %for.inc664, !dbg !13235

for.inc664:                                       ; preds = %for.end650
  %435 = load i32, i32* %y, align 4, !dbg !13236
  %inc665 = add nsw i32 %435, 1, !dbg !13236
  store i32 %inc665, i32* %y, align 4, !dbg !13236
  br label %for.cond72, !dbg !13238, !llvm.loop !13239

for.end666:                                       ; preds = %for.cond72
  ret void, !dbg !13241
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p8to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !13242 {
entry:
  %retval.i117 = alloca i8, align 1
  %a.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i118, metadata !3609, metadata !94), !dbg !13244
  %retval.i106 = alloca i8, align 1
  %a.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i107, metadata !3609, metadata !94), !dbg !13252
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !13254
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !13256, metadata !94), !dbg !13257
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !13258, metadata !94), !dbg !13259
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !13260, metadata !94), !dbg !13261
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !13262, metadata !94), !dbg !13263
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !13264, metadata !94), !dbg !13265
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !13266, metadata !94), !dbg !13267
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !13268, metadata !94), !dbg !13269
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !13270, metadata !94), !dbg !13271
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !13272, metadata !94), !dbg !13273
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !13274
  store i8** %0, i8*** %dst, align 8, !dbg !13273
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !13275, metadata !94), !dbg !13276
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !13277
  store i8** %1, i8*** %src, align 8, !dbg !13276
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !13278, metadata !94), !dbg !13279
  %2 = load i8**, i8*** %src, align 8, !dbg !13280
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !13280
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !13280
  store i8* %3, i8** %src0, align 8, !dbg !13279
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !13281, metadata !94), !dbg !13282
  %4 = load i8**, i8*** %src, align 8, !dbg !13283
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !13283
  %5 = load i8*, i8** %arrayidx1, align 8, !dbg !13283
  store i8* %5, i8** %src1, align 8, !dbg !13282
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !13284, metadata !94), !dbg !13285
  %6 = load i8**, i8*** %src, align 8, !dbg !13286
  %arrayidx2 = getelementptr inbounds i8*, i8** %6, i64 2, !dbg !13286
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !13286
  store i8* %7, i8** %src2, align 8, !dbg !13285
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !13287, metadata !94), !dbg !13288
  %8 = load i8**, i8*** %dst, align 8, !dbg !13289
  %arrayidx3 = getelementptr inbounds i8*, i8** %8, i64 0, !dbg !13289
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !13289
  store i8* %9, i8** %dst0, align 8, !dbg !13288
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !13290, metadata !94), !dbg !13291
  %10 = load i8**, i8*** %dst, align 8, !dbg !13292
  %arrayidx4 = getelementptr inbounds i8*, i8** %10, i64 1, !dbg !13292
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !13292
  store i8* %11, i8** %dst1, align 8, !dbg !13291
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !13293, metadata !94), !dbg !13294
  %12 = load i8**, i8*** %dst, align 8, !dbg !13295
  %arrayidx5 = getelementptr inbounds i8*, i8** %12, i64 2, !dbg !13295
  %13 = load i8*, i8** %arrayidx5, align 8, !dbg !13295
  store i8* %13, i8** %dst2, align 8, !dbg !13294
  call void @llvm.dbg.declare(metadata i32* %y, metadata !13296, metadata !94), !dbg !13297
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13298, metadata !94), !dbg !13299
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !13300, metadata !94), !dbg !13301
  store i32 14, i32* %sh, align 4, !dbg !13301
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !13302, metadata !94), !dbg !13303
  store i32 8192, i32* %rnd, align 4, !dbg !13303
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !13304, metadata !94), !dbg !13305
  %14 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13306
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %14, i64 0, !dbg !13306
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !13306
  %15 = load i16, i16* %arrayidx7, align 2, !dbg !13306
  %conv = sext i16 %15 to i32, !dbg !13306
  store i32 %conv, i32* %y_off_in, align 4, !dbg !13305
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !13307, metadata !94), !dbg !13308
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13309
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 1, !dbg !13309
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !13309
  %17 = load i16, i16* %arrayidx9, align 2, !dbg !13309
  %conv10 = sext i16 %17 to i32, !dbg !13309
  %shl = shl i32 %conv10, 14, !dbg !13310
  store i32 %shl, i32* %y_off_out, align 4, !dbg !13308
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !13311, metadata !94), !dbg !13312
  store i32 128, i32* %uv_off_in, align 4, !dbg !13312
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !13313, metadata !94), !dbg !13314
  store i32 2105344, i32* %uv_off_out, align 4, !dbg !13314
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !13315, metadata !94), !dbg !13316
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13317
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !13317
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !13317
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !13317
  %19 = load i16, i16* %arrayidx13, align 2, !dbg !13317
  %conv14 = sext i16 %19 to i32, !dbg !13317
  store i32 %conv14, i32* %cyy, align 4, !dbg !13316
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !13318, metadata !94), !dbg !13319
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13320
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !13320
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !13320
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !13320
  %21 = load i16, i16* %arrayidx17, align 2, !dbg !13320
  %conv18 = sext i16 %21 to i32, !dbg !13320
  store i32 %conv18, i32* %cyu, align 4, !dbg !13319
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !13321, metadata !94), !dbg !13322
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13323
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !13323
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !13323
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !13323
  %23 = load i16, i16* %arrayidx21, align 2, !dbg !13323
  %conv22 = sext i16 %23 to i32, !dbg !13323
  store i32 %conv22, i32* %cyv, align 4, !dbg !13322
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !13324, metadata !94), !dbg !13325
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13326
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !13326
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !13326
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !13326
  %25 = load i16, i16* %arrayidx25, align 2, !dbg !13326
  %conv26 = sext i16 %25 to i32, !dbg !13326
  store i32 %conv26, i32* %cuu, align 4, !dbg !13325
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !13327, metadata !94), !dbg !13328
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13329
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !13329
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !13329
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !13329
  %27 = load i16, i16* %arrayidx29, align 2, !dbg !13329
  %conv30 = sext i16 %27 to i32, !dbg !13329
  store i32 %conv30, i32* %cuv, align 4, !dbg !13328
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !13330, metadata !94), !dbg !13331
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13332
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !13332
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !13332
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !13332
  %29 = load i16, i16* %arrayidx33, align 2, !dbg !13332
  %conv34 = sext i16 %29 to i32, !dbg !13332
  store i32 %conv34, i32* %cvu, align 4, !dbg !13331
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !13333, metadata !94), !dbg !13334
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13335
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !13335
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !13335
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !13335
  %31 = load i16, i16* %arrayidx37, align 2, !dbg !13335
  %conv38 = sext i16 %31 to i32, !dbg !13335
  store i32 %conv38, i32* %cvv, align 4, !dbg !13334
  %32 = load i32, i32* %w.addr, align 4, !dbg !13336
  %add = add nsw i32 %32, 1, !dbg !13337
  %sub = sub nsw i32 %add, 1, !dbg !13338
  %shr = ashr i32 %sub, 0, !dbg !13339
  store i32 %shr, i32* %w.addr, align 4, !dbg !13340
  %33 = load i32, i32* %h.addr, align 4, !dbg !13341
  %add39 = add nsw i32 %33, 1, !dbg !13342
  %sub40 = sub nsw i32 %add39, 1, !dbg !13343
  %shr41 = ashr i32 %sub40, 0, !dbg !13344
  store i32 %shr41, i32* %h.addr, align 4, !dbg !13345
  store i32 0, i32* %y, align 4, !dbg !13346
  br label %for.cond, !dbg !13347

for.cond:                                         ; preds = %for.inc103, %entry
  %34 = load i32, i32* %y, align 4, !dbg !13348
  %35 = load i32, i32* %h.addr, align 4, !dbg !13350
  %cmp = icmp slt i32 %34, %35, !dbg !13351
  br i1 %cmp, label %for.body, label %for.end105, !dbg !13352

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !13353
  br label %for.cond43, !dbg !13354

for.cond43:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !13355
  %37 = load i32, i32* %w.addr, align 4, !dbg !13357
  %cmp44 = icmp slt i32 %36, %37, !dbg !13358
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !13359

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !13360, metadata !94), !dbg !13361
  %38 = load i32, i32* %x, align 4, !dbg !13362
  %shl47 = shl i32 %38, 0, !dbg !13363
  %idxprom = sext i32 %shl47 to i64, !dbg !13364
  %39 = load i8*, i8** %src0, align 8, !dbg !13364
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 %idxprom, !dbg !13364
  %40 = load i8, i8* %arrayidx48, align 1, !dbg !13364
  %conv49 = zext i8 %40 to i32, !dbg !13364
  %41 = load i32, i32* %y_off_in, align 4, !dbg !13365
  %sub50 = sub nsw i32 %conv49, %41, !dbg !13366
  store i32 %sub50, i32* %y00, align 4, !dbg !13361
  call void @llvm.dbg.declare(metadata i32* %u, metadata !13367, metadata !94), !dbg !13368
  %42 = load i32, i32* %x, align 4, !dbg !13369
  %idxprom51 = sext i32 %42 to i64, !dbg !13370
  %43 = load i8*, i8** %src1, align 8, !dbg !13370
  %arrayidx52 = getelementptr inbounds i8, i8* %43, i64 %idxprom51, !dbg !13370
  %44 = load i8, i8* %arrayidx52, align 1, !dbg !13370
  %conv53 = zext i8 %44 to i32, !dbg !13370
  %sub54 = sub nsw i32 %conv53, 128, !dbg !13371
  store i32 %sub54, i32* %u, align 4, !dbg !13368
  call void @llvm.dbg.declare(metadata i32* %v, metadata !13372, metadata !94), !dbg !13373
  %45 = load i32, i32* %x, align 4, !dbg !13374
  %idxprom55 = sext i32 %45 to i64, !dbg !13375
  %46 = load i8*, i8** %src2, align 8, !dbg !13375
  %arrayidx56 = getelementptr inbounds i8, i8* %46, i64 %idxprom55, !dbg !13375
  %47 = load i8, i8* %arrayidx56, align 1, !dbg !13375
  %conv57 = zext i8 %47 to i32, !dbg !13375
  %sub58 = sub nsw i32 %conv57, 128, !dbg !13376
  store i32 %sub58, i32* %v, align 4, !dbg !13373
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !13377, metadata !94), !dbg !13378
  %48 = load i32, i32* %cyu, align 4, !dbg !13379
  %49 = load i32, i32* %u, align 4, !dbg !13380
  %mul = mul nsw i32 %48, %49, !dbg !13381
  %50 = load i32, i32* %cyv, align 4, !dbg !13382
  %51 = load i32, i32* %v, align 4, !dbg !13383
  %mul59 = mul nsw i32 %50, %51, !dbg !13384
  %add60 = add nsw i32 %mul, %mul59, !dbg !13385
  %add61 = add nsw i32 %add60, 8192, !dbg !13386
  %52 = load i32, i32* %y_off_out, align 4, !dbg !13387
  %add62 = add nsw i32 %add61, %52, !dbg !13388
  store i32 %add62, i32* %uv_val, align 4, !dbg !13378
  %53 = load i32, i32* %cyy, align 4, !dbg !13389
  %54 = load i32, i32* %y00, align 4, !dbg !13390
  %mul63 = mul nsw i32 %53, %54, !dbg !13391
  %55 = load i32, i32* %uv_val, align 4, !dbg !13392
  %add64 = add nsw i32 %mul63, %55, !dbg !13393
  %shr65 = ashr i32 %add64, 14, !dbg !13394
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !13395
  %56 = load i32, i32* %a.addr.i, align 4, !dbg !13396
  %and.i = and i32 %56, -256, !dbg !13397
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !13397
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !13398

if.then.i:                                        ; preds = %for.body46
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !13399
  %neg.i = xor i32 %57, -1, !dbg !13400
  %shr.i = ashr i32 %neg.i, 31, !dbg !13401
  %conv.i = trunc i32 %shr.i to i8, !dbg !13402
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !13403
  br label %av_clip_uint8_c.exit, !dbg !13403

if.else.i:                                        ; preds = %for.body46
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !13404
  %conv1.i = trunc i32 %58 to i8, !dbg !13404
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !13405
  br label %av_clip_uint8_c.exit, !dbg !13405

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %59 = load i8, i8* %retval.i, align 1, !dbg !13406
  %60 = load i32, i32* %x, align 4, !dbg !13407
  %shl66 = shl i32 %60, 0, !dbg !13408
  %idxprom67 = sext i32 %shl66 to i64, !dbg !13409
  %61 = load i8*, i8** %dst0, align 8, !dbg !13409
  %arrayidx68 = getelementptr inbounds i8, i8* %61, i64 %idxprom67, !dbg !13409
  store i8 %59, i8* %arrayidx68, align 1, !dbg !13410
  %62 = load i32, i32* %u, align 4, !dbg !13411
  %63 = load i32, i32* %cuu, align 4, !dbg !13412
  %mul69 = mul nsw i32 %62, %63, !dbg !13413
  %64 = load i32, i32* %v, align 4, !dbg !13414
  %65 = load i32, i32* %cuv, align 4, !dbg !13415
  %mul70 = mul nsw i32 %64, %65, !dbg !13416
  %add71 = add nsw i32 %mul69, %mul70, !dbg !13417
  %add72 = add nsw i32 %add71, 2105344, !dbg !13418
  %shr73 = ashr i32 %add72, 14, !dbg !13419
  store i32 %shr73, i32* %a.addr.i118, align 4, !dbg !13420
  %66 = load i32, i32* %a.addr.i118, align 4, !dbg !13421
  %and.i119 = and i32 %66, -256, !dbg !13422
  %tobool.i120 = icmp ne i32 %and.i119, 0, !dbg !13422
  br i1 %tobool.i120, label %if.then.i124, label %if.else.i126, !dbg !13423

if.then.i124:                                     ; preds = %av_clip_uint8_c.exit
  %67 = load i32, i32* %a.addr.i118, align 4, !dbg !13424
  %neg.i121 = xor i32 %67, -1, !dbg !13425
  %shr.i122 = ashr i32 %neg.i121, 31, !dbg !13426
  %conv.i123 = trunc i32 %shr.i122 to i8, !dbg !13427
  store i8 %conv.i123, i8* %retval.i117, align 1, !dbg !13428
  br label %av_clip_uint8_c.exit127, !dbg !13428

if.else.i126:                                     ; preds = %av_clip_uint8_c.exit
  %68 = load i32, i32* %a.addr.i118, align 4, !dbg !13429
  %conv1.i125 = trunc i32 %68 to i8, !dbg !13429
  store i8 %conv1.i125, i8* %retval.i117, align 1, !dbg !13430
  br label %av_clip_uint8_c.exit127, !dbg !13430

av_clip_uint8_c.exit127:                          ; preds = %if.then.i124, %if.else.i126
  %69 = load i8, i8* %retval.i117, align 1, !dbg !13431
  %70 = load i32, i32* %x, align 4, !dbg !13432
  %idxprom75 = sext i32 %70 to i64, !dbg !13433
  %71 = load i8*, i8** %dst1, align 8, !dbg !13433
  %arrayidx76 = getelementptr inbounds i8, i8* %71, i64 %idxprom75, !dbg !13433
  store i8 %69, i8* %arrayidx76, align 1, !dbg !13434
  %72 = load i32, i32* %u, align 4, !dbg !13435
  %73 = load i32, i32* %cvu, align 4, !dbg !13436
  %mul77 = mul nsw i32 %72, %73, !dbg !13437
  %74 = load i32, i32* %v, align 4, !dbg !13438
  %75 = load i32, i32* %cvv, align 4, !dbg !13439
  %mul78 = mul nsw i32 %74, %75, !dbg !13440
  %add79 = add nsw i32 %mul77, %mul78, !dbg !13441
  %add80 = add nsw i32 %add79, 2105344, !dbg !13442
  %shr81 = ashr i32 %add80, 14, !dbg !13443
  store i32 %shr81, i32* %a.addr.i107, align 4, !dbg !13444
  %76 = load i32, i32* %a.addr.i107, align 4, !dbg !13445
  %and.i108 = and i32 %76, -256, !dbg !13446
  %tobool.i109 = icmp ne i32 %and.i108, 0, !dbg !13446
  br i1 %tobool.i109, label %if.then.i113, label %if.else.i115, !dbg !13447

if.then.i113:                                     ; preds = %av_clip_uint8_c.exit127
  %77 = load i32, i32* %a.addr.i107, align 4, !dbg !13448
  %neg.i110 = xor i32 %77, -1, !dbg !13449
  %shr.i111 = ashr i32 %neg.i110, 31, !dbg !13450
  %conv.i112 = trunc i32 %shr.i111 to i8, !dbg !13451
  store i8 %conv.i112, i8* %retval.i106, align 1, !dbg !13452
  br label %av_clip_uint8_c.exit116, !dbg !13452

if.else.i115:                                     ; preds = %av_clip_uint8_c.exit127
  %78 = load i32, i32* %a.addr.i107, align 4, !dbg !13453
  %conv1.i114 = trunc i32 %78 to i8, !dbg !13453
  store i8 %conv1.i114, i8* %retval.i106, align 1, !dbg !13454
  br label %av_clip_uint8_c.exit116, !dbg !13454

av_clip_uint8_c.exit116:                          ; preds = %if.then.i113, %if.else.i115
  %79 = load i8, i8* %retval.i106, align 1, !dbg !13455
  %80 = load i32, i32* %x, align 4, !dbg !13456
  %idxprom83 = sext i32 %80 to i64, !dbg !13457
  %81 = load i8*, i8** %dst2, align 8, !dbg !13457
  %arrayidx84 = getelementptr inbounds i8, i8* %81, i64 %idxprom83, !dbg !13457
  store i8 %79, i8* %arrayidx84, align 1, !dbg !13458
  br label %for.inc, !dbg !13459

for.inc:                                          ; preds = %av_clip_uint8_c.exit116
  %82 = load i32, i32* %x, align 4, !dbg !13460
  %inc = add nsw i32 %82, 1, !dbg !13460
  store i32 %inc, i32* %x, align 4, !dbg !13460
  br label %for.cond43, !dbg !13462, !llvm.loop !13463

for.end:                                          ; preds = %for.cond43
  %83 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13465
  %arrayidx85 = getelementptr inbounds i64, i64* %83, i64 0, !dbg !13465
  %84 = load i64, i64* %arrayidx85, align 8, !dbg !13465
  %mul86 = mul nsw i64 %84, 1, !dbg !13466
  %div = udiv i64 %mul86, 1, !dbg !13467
  %85 = load i8*, i8** %dst0, align 8, !dbg !13468
  %add.ptr = getelementptr inbounds i8, i8* %85, i64 %div, !dbg !13468
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !13468
  %86 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13469
  %arrayidx87 = getelementptr inbounds i64, i64* %86, i64 1, !dbg !13469
  %87 = load i64, i64* %arrayidx87, align 8, !dbg !13469
  %div88 = udiv i64 %87, 1, !dbg !13470
  %88 = load i8*, i8** %dst1, align 8, !dbg !13471
  %add.ptr89 = getelementptr inbounds i8, i8* %88, i64 %div88, !dbg !13471
  store i8* %add.ptr89, i8** %dst1, align 8, !dbg !13471
  %89 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13472
  %arrayidx90 = getelementptr inbounds i64, i64* %89, i64 2, !dbg !13472
  %90 = load i64, i64* %arrayidx90, align 8, !dbg !13472
  %div91 = udiv i64 %90, 1, !dbg !13473
  %91 = load i8*, i8** %dst2, align 8, !dbg !13474
  %add.ptr92 = getelementptr inbounds i8, i8* %91, i64 %div91, !dbg !13474
  store i8* %add.ptr92, i8** %dst2, align 8, !dbg !13474
  %92 = load i64*, i64** %src_stride.addr, align 8, !dbg !13475
  %arrayidx93 = getelementptr inbounds i64, i64* %92, i64 0, !dbg !13475
  %93 = load i64, i64* %arrayidx93, align 8, !dbg !13475
  %mul94 = mul nsw i64 %93, 1, !dbg !13476
  %div95 = udiv i64 %mul94, 1, !dbg !13477
  %94 = load i8*, i8** %src0, align 8, !dbg !13478
  %add.ptr96 = getelementptr inbounds i8, i8* %94, i64 %div95, !dbg !13478
  store i8* %add.ptr96, i8** %src0, align 8, !dbg !13478
  %95 = load i64*, i64** %src_stride.addr, align 8, !dbg !13479
  %arrayidx97 = getelementptr inbounds i64, i64* %95, i64 1, !dbg !13479
  %96 = load i64, i64* %arrayidx97, align 8, !dbg !13479
  %div98 = udiv i64 %96, 1, !dbg !13480
  %97 = load i8*, i8** %src1, align 8, !dbg !13481
  %add.ptr99 = getelementptr inbounds i8, i8* %97, i64 %div98, !dbg !13481
  store i8* %add.ptr99, i8** %src1, align 8, !dbg !13481
  %98 = load i64*, i64** %src_stride.addr, align 8, !dbg !13482
  %arrayidx100 = getelementptr inbounds i64, i64* %98, i64 2, !dbg !13482
  %99 = load i64, i64* %arrayidx100, align 8, !dbg !13482
  %div101 = udiv i64 %99, 1, !dbg !13483
  %100 = load i8*, i8** %src2, align 8, !dbg !13484
  %add.ptr102 = getelementptr inbounds i8, i8* %100, i64 %div101, !dbg !13484
  store i8* %add.ptr102, i8** %src2, align 8, !dbg !13484
  br label %for.inc103, !dbg !13485

for.inc103:                                       ; preds = %for.end
  %101 = load i32, i32* %y, align 4, !dbg !13486
  %inc104 = add nsw i32 %101, 1, !dbg !13486
  store i32 %inc104, i32* %y, align 4, !dbg !13486
  br label %for.cond, !dbg !13488, !llvm.loop !13489

for.end105:                                       ; preds = %for.cond
  ret void, !dbg !13491
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p8to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !13492 {
entry:
  %retval.i142 = alloca i8, align 1
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !3609, metadata !94), !dbg !13493
  %retval.i131 = alloca i8, align 1
  %a.addr.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i132, metadata !3609, metadata !94), !dbg !13501
  %retval.i120 = alloca i8, align 1
  %a.addr.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i121, metadata !3609, metadata !94), !dbg !13503
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !13505
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !13507, metadata !94), !dbg !13508
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !13509, metadata !94), !dbg !13510
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !13511, metadata !94), !dbg !13512
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !13513, metadata !94), !dbg !13514
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !13515, metadata !94), !dbg !13516
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !13517, metadata !94), !dbg !13518
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !13519, metadata !94), !dbg !13520
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !13521, metadata !94), !dbg !13522
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !13523, metadata !94), !dbg !13524
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !13525
  store i8** %0, i8*** %dst, align 8, !dbg !13524
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !13526, metadata !94), !dbg !13527
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !13528
  store i8** %1, i8*** %src, align 8, !dbg !13527
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !13529, metadata !94), !dbg !13530
  %2 = load i8**, i8*** %src, align 8, !dbg !13531
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !13531
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !13531
  store i8* %3, i8** %src0, align 8, !dbg !13530
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !13532, metadata !94), !dbg !13533
  %4 = load i8**, i8*** %src, align 8, !dbg !13534
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !13534
  %5 = load i8*, i8** %arrayidx1, align 8, !dbg !13534
  store i8* %5, i8** %src1, align 8, !dbg !13533
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !13535, metadata !94), !dbg !13536
  %6 = load i8**, i8*** %src, align 8, !dbg !13537
  %arrayidx2 = getelementptr inbounds i8*, i8** %6, i64 2, !dbg !13537
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !13537
  store i8* %7, i8** %src2, align 8, !dbg !13536
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !13538, metadata !94), !dbg !13539
  %8 = load i8**, i8*** %dst, align 8, !dbg !13540
  %arrayidx3 = getelementptr inbounds i8*, i8** %8, i64 0, !dbg !13540
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !13540
  store i8* %9, i8** %dst0, align 8, !dbg !13539
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !13541, metadata !94), !dbg !13542
  %10 = load i8**, i8*** %dst, align 8, !dbg !13543
  %arrayidx4 = getelementptr inbounds i8*, i8** %10, i64 1, !dbg !13543
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !13543
  store i8* %11, i8** %dst1, align 8, !dbg !13542
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !13544, metadata !94), !dbg !13545
  %12 = load i8**, i8*** %dst, align 8, !dbg !13546
  %arrayidx5 = getelementptr inbounds i8*, i8** %12, i64 2, !dbg !13546
  %13 = load i8*, i8** %arrayidx5, align 8, !dbg !13546
  store i8* %13, i8** %dst2, align 8, !dbg !13545
  call void @llvm.dbg.declare(metadata i32* %y, metadata !13547, metadata !94), !dbg !13548
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13549, metadata !94), !dbg !13550
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !13551, metadata !94), !dbg !13552
  store i32 14, i32* %sh, align 4, !dbg !13552
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !13553, metadata !94), !dbg !13554
  store i32 8192, i32* %rnd, align 4, !dbg !13554
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !13555, metadata !94), !dbg !13556
  %14 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13557
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %14, i64 0, !dbg !13557
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !13557
  %15 = load i16, i16* %arrayidx7, align 2, !dbg !13557
  %conv = sext i16 %15 to i32, !dbg !13557
  store i32 %conv, i32* %y_off_in, align 4, !dbg !13556
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !13558, metadata !94), !dbg !13559
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13560
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 1, !dbg !13560
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !13560
  %17 = load i16, i16* %arrayidx9, align 2, !dbg !13560
  %conv10 = sext i16 %17 to i32, !dbg !13560
  %shl = shl i32 %conv10, 14, !dbg !13561
  store i32 %shl, i32* %y_off_out, align 4, !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !13562, metadata !94), !dbg !13563
  store i32 128, i32* %uv_off_in, align 4, !dbg !13563
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !13564, metadata !94), !dbg !13565
  store i32 2105344, i32* %uv_off_out, align 4, !dbg !13565
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !13566, metadata !94), !dbg !13567
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13568
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !13568
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !13568
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !13568
  %19 = load i16, i16* %arrayidx13, align 2, !dbg !13568
  %conv14 = sext i16 %19 to i32, !dbg !13568
  store i32 %conv14, i32* %cyy, align 4, !dbg !13567
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !13569, metadata !94), !dbg !13570
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13571
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !13571
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !13571
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !13571
  %21 = load i16, i16* %arrayidx17, align 2, !dbg !13571
  %conv18 = sext i16 %21 to i32, !dbg !13571
  store i32 %conv18, i32* %cyu, align 4, !dbg !13570
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !13572, metadata !94), !dbg !13573
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13574
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !13574
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !13574
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !13574
  %23 = load i16, i16* %arrayidx21, align 2, !dbg !13574
  %conv22 = sext i16 %23 to i32, !dbg !13574
  store i32 %conv22, i32* %cyv, align 4, !dbg !13573
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !13575, metadata !94), !dbg !13576
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13577
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !13577
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !13577
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !13577
  %25 = load i16, i16* %arrayidx25, align 2, !dbg !13577
  %conv26 = sext i16 %25 to i32, !dbg !13577
  store i32 %conv26, i32* %cuu, align 4, !dbg !13576
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !13578, metadata !94), !dbg !13579
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13580
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !13580
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !13580
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !13580
  %27 = load i16, i16* %arrayidx29, align 2, !dbg !13580
  %conv30 = sext i16 %27 to i32, !dbg !13580
  store i32 %conv30, i32* %cuv, align 4, !dbg !13579
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !13581, metadata !94), !dbg !13582
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13583
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !13583
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !13583
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !13583
  %29 = load i16, i16* %arrayidx33, align 2, !dbg !13583
  %conv34 = sext i16 %29 to i32, !dbg !13583
  store i32 %conv34, i32* %cvu, align 4, !dbg !13582
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !13584, metadata !94), !dbg !13585
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13586
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !13586
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !13586
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !13586
  %31 = load i16, i16* %arrayidx37, align 2, !dbg !13586
  %conv38 = sext i16 %31 to i32, !dbg !13586
  store i32 %conv38, i32* %cvv, align 4, !dbg !13585
  %32 = load i32, i32* %w.addr, align 4, !dbg !13587
  %add = add nsw i32 %32, 2, !dbg !13588
  %sub = sub nsw i32 %add, 1, !dbg !13589
  %shr = ashr i32 %sub, 1, !dbg !13590
  store i32 %shr, i32* %w.addr, align 4, !dbg !13591
  %33 = load i32, i32* %h.addr, align 4, !dbg !13592
  %add39 = add nsw i32 %33, 1, !dbg !13593
  %sub40 = sub nsw i32 %add39, 1, !dbg !13594
  %shr41 = ashr i32 %sub40, 0, !dbg !13595
  store i32 %shr41, i32* %h.addr, align 4, !dbg !13596
  store i32 0, i32* %y, align 4, !dbg !13597
  br label %for.cond, !dbg !13598

for.cond:                                         ; preds = %for.inc117, %entry
  %34 = load i32, i32* %y, align 4, !dbg !13599
  %35 = load i32, i32* %h.addr, align 4, !dbg !13601
  %cmp = icmp slt i32 %34, %35, !dbg !13602
  br i1 %cmp, label %for.body, label %for.end119, !dbg !13603

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !13604
  br label %for.cond43, !dbg !13605

for.cond43:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !13606
  %37 = load i32, i32* %w.addr, align 4, !dbg !13608
  %cmp44 = icmp slt i32 %36, %37, !dbg !13609
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !13610

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !13611, metadata !94), !dbg !13612
  %38 = load i32, i32* %x, align 4, !dbg !13613
  %shl47 = shl i32 %38, 1, !dbg !13614
  %idxprom = sext i32 %shl47 to i64, !dbg !13615
  %39 = load i8*, i8** %src0, align 8, !dbg !13615
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 %idxprom, !dbg !13615
  %40 = load i8, i8* %arrayidx48, align 1, !dbg !13615
  %conv49 = zext i8 %40 to i32, !dbg !13615
  %41 = load i32, i32* %y_off_in, align 4, !dbg !13616
  %sub50 = sub nsw i32 %conv49, %41, !dbg !13617
  store i32 %sub50, i32* %y00, align 4, !dbg !13612
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !13618, metadata !94), !dbg !13619
  %42 = load i32, i32* %x, align 4, !dbg !13620
  %mul = mul nsw i32 2, %42, !dbg !13621
  %add51 = add nsw i32 %mul, 1, !dbg !13622
  %idxprom52 = sext i32 %add51 to i64, !dbg !13623
  %43 = load i8*, i8** %src0, align 8, !dbg !13623
  %arrayidx53 = getelementptr inbounds i8, i8* %43, i64 %idxprom52, !dbg !13623
  %44 = load i8, i8* %arrayidx53, align 1, !dbg !13623
  %conv54 = zext i8 %44 to i32, !dbg !13623
  %45 = load i32, i32* %y_off_in, align 4, !dbg !13624
  %sub55 = sub nsw i32 %conv54, %45, !dbg !13625
  store i32 %sub55, i32* %y01, align 4, !dbg !13619
  call void @llvm.dbg.declare(metadata i32* %u, metadata !13626, metadata !94), !dbg !13627
  %46 = load i32, i32* %x, align 4, !dbg !13628
  %idxprom56 = sext i32 %46 to i64, !dbg !13629
  %47 = load i8*, i8** %src1, align 8, !dbg !13629
  %arrayidx57 = getelementptr inbounds i8, i8* %47, i64 %idxprom56, !dbg !13629
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !13629
  %conv58 = zext i8 %48 to i32, !dbg !13629
  %sub59 = sub nsw i32 %conv58, 128, !dbg !13630
  store i32 %sub59, i32* %u, align 4, !dbg !13627
  call void @llvm.dbg.declare(metadata i32* %v, metadata !13631, metadata !94), !dbg !13632
  %49 = load i32, i32* %x, align 4, !dbg !13633
  %idxprom60 = sext i32 %49 to i64, !dbg !13634
  %50 = load i8*, i8** %src2, align 8, !dbg !13634
  %arrayidx61 = getelementptr inbounds i8, i8* %50, i64 %idxprom60, !dbg !13634
  %51 = load i8, i8* %arrayidx61, align 1, !dbg !13634
  %conv62 = zext i8 %51 to i32, !dbg !13634
  %sub63 = sub nsw i32 %conv62, 128, !dbg !13635
  store i32 %sub63, i32* %v, align 4, !dbg !13632
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !13636, metadata !94), !dbg !13637
  %52 = load i32, i32* %cyu, align 4, !dbg !13638
  %53 = load i32, i32* %u, align 4, !dbg !13639
  %mul64 = mul nsw i32 %52, %53, !dbg !13640
  %54 = load i32, i32* %cyv, align 4, !dbg !13641
  %55 = load i32, i32* %v, align 4, !dbg !13642
  %mul65 = mul nsw i32 %54, %55, !dbg !13643
  %add66 = add nsw i32 %mul64, %mul65, !dbg !13644
  %add67 = add nsw i32 %add66, 8192, !dbg !13645
  %56 = load i32, i32* %y_off_out, align 4, !dbg !13646
  %add68 = add nsw i32 %add67, %56, !dbg !13647
  store i32 %add68, i32* %uv_val, align 4, !dbg !13637
  %57 = load i32, i32* %cyy, align 4, !dbg !13648
  %58 = load i32, i32* %y00, align 4, !dbg !13649
  %mul69 = mul nsw i32 %57, %58, !dbg !13650
  %59 = load i32, i32* %uv_val, align 4, !dbg !13651
  %add70 = add nsw i32 %mul69, %59, !dbg !13652
  %shr71 = ashr i32 %add70, 14, !dbg !13653
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !13654
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !13655
  %and.i = and i32 %60, -256, !dbg !13656
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !13656
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !13657

if.then.i:                                        ; preds = %for.body46
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !13658
  %neg.i = xor i32 %61, -1, !dbg !13659
  %shr.i = ashr i32 %neg.i, 31, !dbg !13660
  %conv.i = trunc i32 %shr.i to i8, !dbg !13661
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !13662
  br label %av_clip_uint8_c.exit, !dbg !13662

if.else.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !13663
  %conv1.i = trunc i32 %62 to i8, !dbg !13663
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !13664
  br label %av_clip_uint8_c.exit, !dbg !13664

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %63 = load i8, i8* %retval.i, align 1, !dbg !13665
  %64 = load i32, i32* %x, align 4, !dbg !13666
  %shl72 = shl i32 %64, 1, !dbg !13667
  %idxprom73 = sext i32 %shl72 to i64, !dbg !13668
  %65 = load i8*, i8** %dst0, align 8, !dbg !13668
  %arrayidx74 = getelementptr inbounds i8, i8* %65, i64 %idxprom73, !dbg !13668
  store i8 %63, i8* %arrayidx74, align 1, !dbg !13669
  %66 = load i32, i32* %cyy, align 4, !dbg !13670
  %67 = load i32, i32* %y01, align 4, !dbg !13671
  %mul75 = mul nsw i32 %66, %67, !dbg !13672
  %68 = load i32, i32* %uv_val, align 4, !dbg !13673
  %add76 = add nsw i32 %mul75, %68, !dbg !13674
  %shr77 = ashr i32 %add76, 14, !dbg !13675
  store i32 %shr77, i32* %a.addr.i143, align 4, !dbg !13676
  %69 = load i32, i32* %a.addr.i143, align 4, !dbg !13677
  %and.i144 = and i32 %69, -256, !dbg !13678
  %tobool.i145 = icmp ne i32 %and.i144, 0, !dbg !13678
  br i1 %tobool.i145, label %if.then.i149, label %if.else.i151, !dbg !13679

if.then.i149:                                     ; preds = %av_clip_uint8_c.exit
  %70 = load i32, i32* %a.addr.i143, align 4, !dbg !13680
  %neg.i146 = xor i32 %70, -1, !dbg !13681
  %shr.i147 = ashr i32 %neg.i146, 31, !dbg !13682
  %conv.i148 = trunc i32 %shr.i147 to i8, !dbg !13683
  store i8 %conv.i148, i8* %retval.i142, align 1, !dbg !13684
  br label %av_clip_uint8_c.exit152, !dbg !13684

if.else.i151:                                     ; preds = %av_clip_uint8_c.exit
  %71 = load i32, i32* %a.addr.i143, align 4, !dbg !13685
  %conv1.i150 = trunc i32 %71 to i8, !dbg !13685
  store i8 %conv1.i150, i8* %retval.i142, align 1, !dbg !13686
  br label %av_clip_uint8_c.exit152, !dbg !13686

av_clip_uint8_c.exit152:                          ; preds = %if.then.i149, %if.else.i151
  %72 = load i8, i8* %retval.i142, align 1, !dbg !13687
  %73 = load i32, i32* %x, align 4, !dbg !13688
  %mul79 = mul nsw i32 %73, 2, !dbg !13689
  %add80 = add nsw i32 %mul79, 1, !dbg !13690
  %idxprom81 = sext i32 %add80 to i64, !dbg !13691
  %74 = load i8*, i8** %dst0, align 8, !dbg !13691
  %arrayidx82 = getelementptr inbounds i8, i8* %74, i64 %idxprom81, !dbg !13691
  store i8 %72, i8* %arrayidx82, align 1, !dbg !13692
  %75 = load i32, i32* %u, align 4, !dbg !13693
  %76 = load i32, i32* %cuu, align 4, !dbg !13694
  %mul83 = mul nsw i32 %75, %76, !dbg !13695
  %77 = load i32, i32* %v, align 4, !dbg !13696
  %78 = load i32, i32* %cuv, align 4, !dbg !13697
  %mul84 = mul nsw i32 %77, %78, !dbg !13698
  %add85 = add nsw i32 %mul83, %mul84, !dbg !13699
  %add86 = add nsw i32 %add85, 2105344, !dbg !13700
  %shr87 = ashr i32 %add86, 14, !dbg !13701
  store i32 %shr87, i32* %a.addr.i132, align 4, !dbg !13702
  %79 = load i32, i32* %a.addr.i132, align 4, !dbg !13703
  %and.i133 = and i32 %79, -256, !dbg !13704
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !13704
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !13705

if.then.i138:                                     ; preds = %av_clip_uint8_c.exit152
  %80 = load i32, i32* %a.addr.i132, align 4, !dbg !13706
  %neg.i135 = xor i32 %80, -1, !dbg !13707
  %shr.i136 = ashr i32 %neg.i135, 31, !dbg !13708
  %conv.i137 = trunc i32 %shr.i136 to i8, !dbg !13709
  store i8 %conv.i137, i8* %retval.i131, align 1, !dbg !13710
  br label %av_clip_uint8_c.exit141, !dbg !13710

if.else.i140:                                     ; preds = %av_clip_uint8_c.exit152
  %81 = load i32, i32* %a.addr.i132, align 4, !dbg !13711
  %conv1.i139 = trunc i32 %81 to i8, !dbg !13711
  store i8 %conv1.i139, i8* %retval.i131, align 1, !dbg !13712
  br label %av_clip_uint8_c.exit141, !dbg !13712

av_clip_uint8_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %82 = load i8, i8* %retval.i131, align 1, !dbg !13713
  %83 = load i32, i32* %x, align 4, !dbg !13714
  %idxprom89 = sext i32 %83 to i64, !dbg !13715
  %84 = load i8*, i8** %dst1, align 8, !dbg !13715
  %arrayidx90 = getelementptr inbounds i8, i8* %84, i64 %idxprom89, !dbg !13715
  store i8 %82, i8* %arrayidx90, align 1, !dbg !13716
  %85 = load i32, i32* %u, align 4, !dbg !13717
  %86 = load i32, i32* %cvu, align 4, !dbg !13718
  %mul91 = mul nsw i32 %85, %86, !dbg !13719
  %87 = load i32, i32* %v, align 4, !dbg !13720
  %88 = load i32, i32* %cvv, align 4, !dbg !13721
  %mul92 = mul nsw i32 %87, %88, !dbg !13722
  %add93 = add nsw i32 %mul91, %mul92, !dbg !13723
  %add94 = add nsw i32 %add93, 2105344, !dbg !13724
  %shr95 = ashr i32 %add94, 14, !dbg !13725
  store i32 %shr95, i32* %a.addr.i121, align 4, !dbg !13726
  %89 = load i32, i32* %a.addr.i121, align 4, !dbg !13727
  %and.i122 = and i32 %89, -256, !dbg !13728
  %tobool.i123 = icmp ne i32 %and.i122, 0, !dbg !13728
  br i1 %tobool.i123, label %if.then.i127, label %if.else.i129, !dbg !13729

if.then.i127:                                     ; preds = %av_clip_uint8_c.exit141
  %90 = load i32, i32* %a.addr.i121, align 4, !dbg !13730
  %neg.i124 = xor i32 %90, -1, !dbg !13731
  %shr.i125 = ashr i32 %neg.i124, 31, !dbg !13732
  %conv.i126 = trunc i32 %shr.i125 to i8, !dbg !13733
  store i8 %conv.i126, i8* %retval.i120, align 1, !dbg !13734
  br label %av_clip_uint8_c.exit130, !dbg !13734

if.else.i129:                                     ; preds = %av_clip_uint8_c.exit141
  %91 = load i32, i32* %a.addr.i121, align 4, !dbg !13735
  %conv1.i128 = trunc i32 %91 to i8, !dbg !13735
  store i8 %conv1.i128, i8* %retval.i120, align 1, !dbg !13736
  br label %av_clip_uint8_c.exit130, !dbg !13736

av_clip_uint8_c.exit130:                          ; preds = %if.then.i127, %if.else.i129
  %92 = load i8, i8* %retval.i120, align 1, !dbg !13737
  %93 = load i32, i32* %x, align 4, !dbg !13738
  %idxprom97 = sext i32 %93 to i64, !dbg !13739
  %94 = load i8*, i8** %dst2, align 8, !dbg !13739
  %arrayidx98 = getelementptr inbounds i8, i8* %94, i64 %idxprom97, !dbg !13739
  store i8 %92, i8* %arrayidx98, align 1, !dbg !13740
  br label %for.inc, !dbg !13741

for.inc:                                          ; preds = %av_clip_uint8_c.exit130
  %95 = load i32, i32* %x, align 4, !dbg !13742
  %inc = add nsw i32 %95, 1, !dbg !13742
  store i32 %inc, i32* %x, align 4, !dbg !13742
  br label %for.cond43, !dbg !13744, !llvm.loop !13745

for.end:                                          ; preds = %for.cond43
  %96 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13747
  %arrayidx99 = getelementptr inbounds i64, i64* %96, i64 0, !dbg !13747
  %97 = load i64, i64* %arrayidx99, align 8, !dbg !13747
  %mul100 = mul nsw i64 %97, 1, !dbg !13748
  %div = udiv i64 %mul100, 1, !dbg !13749
  %98 = load i8*, i8** %dst0, align 8, !dbg !13750
  %add.ptr = getelementptr inbounds i8, i8* %98, i64 %div, !dbg !13750
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !13750
  %99 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13751
  %arrayidx101 = getelementptr inbounds i64, i64* %99, i64 1, !dbg !13751
  %100 = load i64, i64* %arrayidx101, align 8, !dbg !13751
  %div102 = udiv i64 %100, 1, !dbg !13752
  %101 = load i8*, i8** %dst1, align 8, !dbg !13753
  %add.ptr103 = getelementptr inbounds i8, i8* %101, i64 %div102, !dbg !13753
  store i8* %add.ptr103, i8** %dst1, align 8, !dbg !13753
  %102 = load i64*, i64** %dst_stride.addr, align 8, !dbg !13754
  %arrayidx104 = getelementptr inbounds i64, i64* %102, i64 2, !dbg !13754
  %103 = load i64, i64* %arrayidx104, align 8, !dbg !13754
  %div105 = udiv i64 %103, 1, !dbg !13755
  %104 = load i8*, i8** %dst2, align 8, !dbg !13756
  %add.ptr106 = getelementptr inbounds i8, i8* %104, i64 %div105, !dbg !13756
  store i8* %add.ptr106, i8** %dst2, align 8, !dbg !13756
  %105 = load i64*, i64** %src_stride.addr, align 8, !dbg !13757
  %arrayidx107 = getelementptr inbounds i64, i64* %105, i64 0, !dbg !13757
  %106 = load i64, i64* %arrayidx107, align 8, !dbg !13757
  %mul108 = mul nsw i64 %106, 1, !dbg !13758
  %div109 = udiv i64 %mul108, 1, !dbg !13759
  %107 = load i8*, i8** %src0, align 8, !dbg !13760
  %add.ptr110 = getelementptr inbounds i8, i8* %107, i64 %div109, !dbg !13760
  store i8* %add.ptr110, i8** %src0, align 8, !dbg !13760
  %108 = load i64*, i64** %src_stride.addr, align 8, !dbg !13761
  %arrayidx111 = getelementptr inbounds i64, i64* %108, i64 1, !dbg !13761
  %109 = load i64, i64* %arrayidx111, align 8, !dbg !13761
  %div112 = udiv i64 %109, 1, !dbg !13762
  %110 = load i8*, i8** %src1, align 8, !dbg !13763
  %add.ptr113 = getelementptr inbounds i8, i8* %110, i64 %div112, !dbg !13763
  store i8* %add.ptr113, i8** %src1, align 8, !dbg !13763
  %111 = load i64*, i64** %src_stride.addr, align 8, !dbg !13764
  %arrayidx114 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !13764
  %112 = load i64, i64* %arrayidx114, align 8, !dbg !13764
  %div115 = udiv i64 %112, 1, !dbg !13765
  %113 = load i8*, i8** %src2, align 8, !dbg !13766
  %add.ptr116 = getelementptr inbounds i8, i8* %113, i64 %div115, !dbg !13766
  store i8* %add.ptr116, i8** %src2, align 8, !dbg !13766
  br label %for.inc117, !dbg !13767

for.inc117:                                       ; preds = %for.end
  %114 = load i32, i32* %y, align 4, !dbg !13768
  %inc118 = add nsw i32 %114, 1, !dbg !13768
  store i32 %inc118, i32* %y, align 4, !dbg !13768
  br label %for.cond, !dbg !13770, !llvm.loop !13771

for.end119:                                       ; preds = %for.cond
  ret void, !dbg !13773
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p8to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !13774 {
entry:
  %retval.i203 = alloca i8, align 1
  %a.addr.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i204, metadata !3609, metadata !94), !dbg !13775
  %retval.i192 = alloca i8, align 1
  %a.addr.i193 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i193, metadata !3609, metadata !94), !dbg !13783
  %retval.i181 = alloca i8, align 1
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !3609, metadata !94), !dbg !13785
  %retval.i170 = alloca i8, align 1
  %a.addr.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i171, metadata !3609, metadata !94), !dbg !13787
  %retval.i159 = alloca i8, align 1
  %a.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i160, metadata !3609, metadata !94), !dbg !13789
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !13791
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !13793, metadata !94), !dbg !13794
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !13795, metadata !94), !dbg !13796
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !13797, metadata !94), !dbg !13798
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !13799, metadata !94), !dbg !13800
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !13801, metadata !94), !dbg !13802
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !13803, metadata !94), !dbg !13804
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !13805, metadata !94), !dbg !13806
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !13807, metadata !94), !dbg !13808
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !13809, metadata !94), !dbg !13810
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !13811
  store i8** %0, i8*** %dst, align 8, !dbg !13810
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !13812, metadata !94), !dbg !13813
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !13814
  store i8** %1, i8*** %src, align 8, !dbg !13813
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !13815, metadata !94), !dbg !13816
  %2 = load i8**, i8*** %src, align 8, !dbg !13817
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !13817
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !13817
  store i8* %3, i8** %src0, align 8, !dbg !13816
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !13818, metadata !94), !dbg !13819
  %4 = load i8**, i8*** %src, align 8, !dbg !13820
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !13820
  %5 = load i8*, i8** %arrayidx1, align 8, !dbg !13820
  store i8* %5, i8** %src1, align 8, !dbg !13819
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !13821, metadata !94), !dbg !13822
  %6 = load i8**, i8*** %src, align 8, !dbg !13823
  %arrayidx2 = getelementptr inbounds i8*, i8** %6, i64 2, !dbg !13823
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !13823
  store i8* %7, i8** %src2, align 8, !dbg !13822
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !13824, metadata !94), !dbg !13825
  %8 = load i8**, i8*** %dst, align 8, !dbg !13826
  %arrayidx3 = getelementptr inbounds i8*, i8** %8, i64 0, !dbg !13826
  %9 = load i8*, i8** %arrayidx3, align 8, !dbg !13826
  store i8* %9, i8** %dst0, align 8, !dbg !13825
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !13827, metadata !94), !dbg !13828
  %10 = load i8**, i8*** %dst, align 8, !dbg !13829
  %arrayidx4 = getelementptr inbounds i8*, i8** %10, i64 1, !dbg !13829
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !13829
  store i8* %11, i8** %dst1, align 8, !dbg !13828
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !13830, metadata !94), !dbg !13831
  %12 = load i8**, i8*** %dst, align 8, !dbg !13832
  %arrayidx5 = getelementptr inbounds i8*, i8** %12, i64 2, !dbg !13832
  %13 = load i8*, i8** %arrayidx5, align 8, !dbg !13832
  store i8* %13, i8** %dst2, align 8, !dbg !13831
  call void @llvm.dbg.declare(metadata i32* %y, metadata !13833, metadata !94), !dbg !13834
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13835, metadata !94), !dbg !13836
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !13837, metadata !94), !dbg !13838
  store i32 14, i32* %sh, align 4, !dbg !13838
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !13839, metadata !94), !dbg !13840
  store i32 8192, i32* %rnd, align 4, !dbg !13840
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !13841, metadata !94), !dbg !13842
  %14 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13843
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %14, i64 0, !dbg !13843
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !13843
  %15 = load i16, i16* %arrayidx7, align 2, !dbg !13843
  %conv = sext i16 %15 to i32, !dbg !13843
  store i32 %conv, i32* %y_off_in, align 4, !dbg !13842
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !13844, metadata !94), !dbg !13845
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !13846
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 1, !dbg !13846
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !13846
  %17 = load i16, i16* %arrayidx9, align 2, !dbg !13846
  %conv10 = sext i16 %17 to i32, !dbg !13846
  %shl = shl i32 %conv10, 14, !dbg !13847
  store i32 %shl, i32* %y_off_out, align 4, !dbg !13845
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !13848, metadata !94), !dbg !13849
  store i32 128, i32* %uv_off_in, align 4, !dbg !13849
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !13850, metadata !94), !dbg !13851
  store i32 2105344, i32* %uv_off_out, align 4, !dbg !13851
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !13852, metadata !94), !dbg !13853
  %18 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13854
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %18, i64 0, !dbg !13854
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !13854
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !13854
  %19 = load i16, i16* %arrayidx13, align 2, !dbg !13854
  %conv14 = sext i16 %19 to i32, !dbg !13854
  store i32 %conv14, i32* %cyy, align 4, !dbg !13853
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !13855, metadata !94), !dbg !13856
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13857
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !13857
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !13857
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !13857
  %21 = load i16, i16* %arrayidx17, align 2, !dbg !13857
  %conv18 = sext i16 %21 to i32, !dbg !13857
  store i32 %conv18, i32* %cyu, align 4, !dbg !13856
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !13858, metadata !94), !dbg !13859
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13860
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !13860
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !13860
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !13860
  %23 = load i16, i16* %arrayidx21, align 2, !dbg !13860
  %conv22 = sext i16 %23 to i32, !dbg !13860
  store i32 %conv22, i32* %cyv, align 4, !dbg !13859
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !13861, metadata !94), !dbg !13862
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13863
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 1, !dbg !13863
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !13863
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !13863
  %25 = load i16, i16* %arrayidx25, align 2, !dbg !13863
  %conv26 = sext i16 %25 to i32, !dbg !13863
  store i32 %conv26, i32* %cuu, align 4, !dbg !13862
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !13864, metadata !94), !dbg !13865
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13866
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !13866
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !13866
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !13866
  %27 = load i16, i16* %arrayidx29, align 2, !dbg !13866
  %conv30 = sext i16 %27 to i32, !dbg !13866
  store i32 %conv30, i32* %cuv, align 4, !dbg !13865
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !13867, metadata !94), !dbg !13868
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13869
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 2, !dbg !13869
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !13869
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !13869
  %29 = load i16, i16* %arrayidx33, align 2, !dbg !13869
  %conv34 = sext i16 %29 to i32, !dbg !13869
  store i32 %conv34, i32* %cvu, align 4, !dbg !13868
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !13870, metadata !94), !dbg !13871
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !13872
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !13872
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !13872
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !13872
  %31 = load i16, i16* %arrayidx37, align 2, !dbg !13872
  %conv38 = sext i16 %31 to i32, !dbg !13872
  store i32 %conv38, i32* %cvv, align 4, !dbg !13871
  %32 = load i32, i32* %w.addr, align 4, !dbg !13873
  %add = add nsw i32 %32, 2, !dbg !13874
  %sub = sub nsw i32 %add, 1, !dbg !13875
  %shr = ashr i32 %sub, 1, !dbg !13876
  store i32 %shr, i32* %w.addr, align 4, !dbg !13877
  %33 = load i32, i32* %h.addr, align 4, !dbg !13878
  %add39 = add nsw i32 %33, 2, !dbg !13879
  %sub40 = sub nsw i32 %add39, 1, !dbg !13880
  %shr41 = ashr i32 %sub40, 1, !dbg !13881
  store i32 %shr41, i32* %h.addr, align 4, !dbg !13882
  store i32 0, i32* %y, align 4, !dbg !13883
  br label %for.cond, !dbg !13884

for.cond:                                         ; preds = %for.inc156, %entry
  %34 = load i32, i32* %y, align 4, !dbg !13885
  %35 = load i32, i32* %h.addr, align 4, !dbg !13887
  %cmp = icmp slt i32 %34, %35, !dbg !13888
  br i1 %cmp, label %for.body, label %for.end158, !dbg !13889

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !13890
  br label %for.cond43, !dbg !13891

for.cond43:                                       ; preds = %for.inc, %for.body
  %36 = load i32, i32* %x, align 4, !dbg !13892
  %37 = load i32, i32* %w.addr, align 4, !dbg !13894
  %cmp44 = icmp slt i32 %36, %37, !dbg !13895
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !13896

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !13897, metadata !94), !dbg !13898
  %38 = load i32, i32* %x, align 4, !dbg !13899
  %shl47 = shl i32 %38, 1, !dbg !13900
  %idxprom = sext i32 %shl47 to i64, !dbg !13901
  %39 = load i8*, i8** %src0, align 8, !dbg !13901
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 %idxprom, !dbg !13901
  %40 = load i8, i8* %arrayidx48, align 1, !dbg !13901
  %conv49 = zext i8 %40 to i32, !dbg !13901
  %41 = load i32, i32* %y_off_in, align 4, !dbg !13902
  %sub50 = sub nsw i32 %conv49, %41, !dbg !13903
  store i32 %sub50, i32* %y00, align 4, !dbg !13898
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !13904, metadata !94), !dbg !13905
  %42 = load i32, i32* %x, align 4, !dbg !13906
  %mul = mul nsw i32 2, %42, !dbg !13907
  %add51 = add nsw i32 %mul, 1, !dbg !13908
  %idxprom52 = sext i32 %add51 to i64, !dbg !13909
  %43 = load i8*, i8** %src0, align 8, !dbg !13909
  %arrayidx53 = getelementptr inbounds i8, i8* %43, i64 %idxprom52, !dbg !13909
  %44 = load i8, i8* %arrayidx53, align 1, !dbg !13909
  %conv54 = zext i8 %44 to i32, !dbg !13909
  %45 = load i32, i32* %y_off_in, align 4, !dbg !13910
  %sub55 = sub nsw i32 %conv54, %45, !dbg !13911
  store i32 %sub55, i32* %y01, align 4, !dbg !13905
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !13912, metadata !94), !dbg !13913
  %46 = load i64*, i64** %src_stride.addr, align 8, !dbg !13914
  %arrayidx56 = getelementptr inbounds i64, i64* %46, i64 0, !dbg !13914
  %47 = load i64, i64* %arrayidx56, align 8, !dbg !13914
  %div = udiv i64 %47, 1, !dbg !13915
  %48 = load i32, i32* %x, align 4, !dbg !13916
  %mul57 = mul nsw i32 2, %48, !dbg !13917
  %conv58 = sext i32 %mul57 to i64, !dbg !13918
  %add59 = add i64 %div, %conv58, !dbg !13919
  %49 = load i8*, i8** %src0, align 8, !dbg !13920
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !13920
  %50 = load i8, i8* %arrayidx60, align 1, !dbg !13920
  %conv61 = zext i8 %50 to i32, !dbg !13920
  %51 = load i32, i32* %y_off_in, align 4, !dbg !13921
  %sub62 = sub nsw i32 %conv61, %51, !dbg !13922
  store i32 %sub62, i32* %y10, align 4, !dbg !13913
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !13923, metadata !94), !dbg !13924
  %52 = load i64*, i64** %src_stride.addr, align 8, !dbg !13925
  %arrayidx63 = getelementptr inbounds i64, i64* %52, i64 0, !dbg !13925
  %53 = load i64, i64* %arrayidx63, align 8, !dbg !13925
  %div64 = udiv i64 %53, 1, !dbg !13926
  %54 = load i32, i32* %x, align 4, !dbg !13927
  %mul65 = mul nsw i32 2, %54, !dbg !13928
  %conv66 = sext i32 %mul65 to i64, !dbg !13929
  %add67 = add i64 %div64, %conv66, !dbg !13930
  %add68 = add i64 %add67, 1, !dbg !13931
  %55 = load i8*, i8** %src0, align 8, !dbg !13932
  %arrayidx69 = getelementptr inbounds i8, i8* %55, i64 %add68, !dbg !13932
  %56 = load i8, i8* %arrayidx69, align 1, !dbg !13932
  %conv70 = zext i8 %56 to i32, !dbg !13932
  %57 = load i32, i32* %y_off_in, align 4, !dbg !13933
  %sub71 = sub nsw i32 %conv70, %57, !dbg !13934
  store i32 %sub71, i32* %y11, align 4, !dbg !13924
  call void @llvm.dbg.declare(metadata i32* %u, metadata !13935, metadata !94), !dbg !13936
  %58 = load i32, i32* %x, align 4, !dbg !13937
  %idxprom72 = sext i32 %58 to i64, !dbg !13938
  %59 = load i8*, i8** %src1, align 8, !dbg !13938
  %arrayidx73 = getelementptr inbounds i8, i8* %59, i64 %idxprom72, !dbg !13938
  %60 = load i8, i8* %arrayidx73, align 1, !dbg !13938
  %conv74 = zext i8 %60 to i32, !dbg !13938
  %sub75 = sub nsw i32 %conv74, 128, !dbg !13939
  store i32 %sub75, i32* %u, align 4, !dbg !13936
  call void @llvm.dbg.declare(metadata i32* %v, metadata !13940, metadata !94), !dbg !13941
  %61 = load i32, i32* %x, align 4, !dbg !13942
  %idxprom76 = sext i32 %61 to i64, !dbg !13943
  %62 = load i8*, i8** %src2, align 8, !dbg !13943
  %arrayidx77 = getelementptr inbounds i8, i8* %62, i64 %idxprom76, !dbg !13943
  %63 = load i8, i8* %arrayidx77, align 1, !dbg !13943
  %conv78 = zext i8 %63 to i32, !dbg !13943
  %sub79 = sub nsw i32 %conv78, 128, !dbg !13944
  store i32 %sub79, i32* %v, align 4, !dbg !13941
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !13945, metadata !94), !dbg !13946
  %64 = load i32, i32* %cyu, align 4, !dbg !13947
  %65 = load i32, i32* %u, align 4, !dbg !13948
  %mul80 = mul nsw i32 %64, %65, !dbg !13949
  %66 = load i32, i32* %cyv, align 4, !dbg !13950
  %67 = load i32, i32* %v, align 4, !dbg !13951
  %mul81 = mul nsw i32 %66, %67, !dbg !13952
  %add82 = add nsw i32 %mul80, %mul81, !dbg !13953
  %add83 = add nsw i32 %add82, 8192, !dbg !13954
  %68 = load i32, i32* %y_off_out, align 4, !dbg !13955
  %add84 = add nsw i32 %add83, %68, !dbg !13956
  store i32 %add84, i32* %uv_val, align 4, !dbg !13946
  %69 = load i32, i32* %cyy, align 4, !dbg !13957
  %70 = load i32, i32* %y00, align 4, !dbg !13958
  %mul85 = mul nsw i32 %69, %70, !dbg !13959
  %71 = load i32, i32* %uv_val, align 4, !dbg !13960
  %add86 = add nsw i32 %mul85, %71, !dbg !13961
  %shr87 = ashr i32 %add86, 14, !dbg !13962
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !13963
  %72 = load i32, i32* %a.addr.i, align 4, !dbg !13964
  %and.i = and i32 %72, -256, !dbg !13965
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !13965
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !13966

if.then.i:                                        ; preds = %for.body46
  %73 = load i32, i32* %a.addr.i, align 4, !dbg !13967
  %neg.i = xor i32 %73, -1, !dbg !13968
  %shr.i = ashr i32 %neg.i, 31, !dbg !13969
  %conv.i = trunc i32 %shr.i to i8, !dbg !13970
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !13971
  br label %av_clip_uint8_c.exit, !dbg !13971

if.else.i:                                        ; preds = %for.body46
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !13972
  %conv1.i = trunc i32 %74 to i8, !dbg !13972
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !13973
  br label %av_clip_uint8_c.exit, !dbg !13973

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %75 = load i8, i8* %retval.i, align 1, !dbg !13974
  %76 = load i32, i32* %x, align 4, !dbg !13975
  %shl88 = shl i32 %76, 1, !dbg !13976
  %idxprom89 = sext i32 %shl88 to i64, !dbg !13977
  %77 = load i8*, i8** %dst0, align 8, !dbg !13977
  %arrayidx90 = getelementptr inbounds i8, i8* %77, i64 %idxprom89, !dbg !13977
  store i8 %75, i8* %arrayidx90, align 1, !dbg !13978
  %78 = load i32, i32* %cyy, align 4, !dbg !13979
  %79 = load i32, i32* %y01, align 4, !dbg !13980
  %mul91 = mul nsw i32 %78, %79, !dbg !13981
  %80 = load i32, i32* %uv_val, align 4, !dbg !13982
  %add92 = add nsw i32 %mul91, %80, !dbg !13983
  %shr93 = ashr i32 %add92, 14, !dbg !13984
  store i32 %shr93, i32* %a.addr.i204, align 4, !dbg !13985
  %81 = load i32, i32* %a.addr.i204, align 4, !dbg !13986
  %and.i205 = and i32 %81, -256, !dbg !13987
  %tobool.i206 = icmp ne i32 %and.i205, 0, !dbg !13987
  br i1 %tobool.i206, label %if.then.i210, label %if.else.i212, !dbg !13988

if.then.i210:                                     ; preds = %av_clip_uint8_c.exit
  %82 = load i32, i32* %a.addr.i204, align 4, !dbg !13989
  %neg.i207 = xor i32 %82, -1, !dbg !13990
  %shr.i208 = ashr i32 %neg.i207, 31, !dbg !13991
  %conv.i209 = trunc i32 %shr.i208 to i8, !dbg !13992
  store i8 %conv.i209, i8* %retval.i203, align 1, !dbg !13993
  br label %av_clip_uint8_c.exit213, !dbg !13993

if.else.i212:                                     ; preds = %av_clip_uint8_c.exit
  %83 = load i32, i32* %a.addr.i204, align 4, !dbg !13994
  %conv1.i211 = trunc i32 %83 to i8, !dbg !13994
  store i8 %conv1.i211, i8* %retval.i203, align 1, !dbg !13995
  br label %av_clip_uint8_c.exit213, !dbg !13995

av_clip_uint8_c.exit213:                          ; preds = %if.then.i210, %if.else.i212
  %84 = load i8, i8* %retval.i203, align 1, !dbg !13996
  %85 = load i32, i32* %x, align 4, !dbg !13997
  %mul95 = mul nsw i32 %85, 2, !dbg !13998
  %add96 = add nsw i32 %mul95, 1, !dbg !13999
  %idxprom97 = sext i32 %add96 to i64, !dbg !14000
  %86 = load i8*, i8** %dst0, align 8, !dbg !14000
  %arrayidx98 = getelementptr inbounds i8, i8* %86, i64 %idxprom97, !dbg !14000
  store i8 %84, i8* %arrayidx98, align 1, !dbg !14001
  %87 = load i32, i32* %cyy, align 4, !dbg !14002
  %88 = load i32, i32* %y10, align 4, !dbg !14003
  %mul99 = mul nsw i32 %87, %88, !dbg !14004
  %89 = load i32, i32* %uv_val, align 4, !dbg !14005
  %add100 = add nsw i32 %mul99, %89, !dbg !14006
  %shr101 = ashr i32 %add100, 14, !dbg !14007
  store i32 %shr101, i32* %a.addr.i193, align 4, !dbg !14008
  %90 = load i32, i32* %a.addr.i193, align 4, !dbg !14009
  %and.i194 = and i32 %90, -256, !dbg !14010
  %tobool.i195 = icmp ne i32 %and.i194, 0, !dbg !14010
  br i1 %tobool.i195, label %if.then.i199, label %if.else.i201, !dbg !14011

if.then.i199:                                     ; preds = %av_clip_uint8_c.exit213
  %91 = load i32, i32* %a.addr.i193, align 4, !dbg !14012
  %neg.i196 = xor i32 %91, -1, !dbg !14013
  %shr.i197 = ashr i32 %neg.i196, 31, !dbg !14014
  %conv.i198 = trunc i32 %shr.i197 to i8, !dbg !14015
  store i8 %conv.i198, i8* %retval.i192, align 1, !dbg !14016
  br label %av_clip_uint8_c.exit202, !dbg !14016

if.else.i201:                                     ; preds = %av_clip_uint8_c.exit213
  %92 = load i32, i32* %a.addr.i193, align 4, !dbg !14017
  %conv1.i200 = trunc i32 %92 to i8, !dbg !14017
  store i8 %conv1.i200, i8* %retval.i192, align 1, !dbg !14018
  br label %av_clip_uint8_c.exit202, !dbg !14018

av_clip_uint8_c.exit202:                          ; preds = %if.then.i199, %if.else.i201
  %93 = load i8, i8* %retval.i192, align 1, !dbg !14019
  %94 = load i32, i32* %x, align 4, !dbg !14020
  %mul103 = mul nsw i32 %94, 2, !dbg !14021
  %add104 = add nsw i32 %mul103, 0, !dbg !14022
  %conv105 = sext i32 %add104 to i64, !dbg !14020
  %95 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14023
  %arrayidx106 = getelementptr inbounds i64, i64* %95, i64 0, !dbg !14023
  %96 = load i64, i64* %arrayidx106, align 8, !dbg !14023
  %div107 = udiv i64 %96, 1, !dbg !14024
  %add108 = add i64 %conv105, %div107, !dbg !14025
  %97 = load i8*, i8** %dst0, align 8, !dbg !14026
  %arrayidx109 = getelementptr inbounds i8, i8* %97, i64 %add108, !dbg !14026
  store i8 %93, i8* %arrayidx109, align 1, !dbg !14027
  %98 = load i32, i32* %cyy, align 4, !dbg !14028
  %99 = load i32, i32* %y11, align 4, !dbg !14029
  %mul110 = mul nsw i32 %98, %99, !dbg !14030
  %100 = load i32, i32* %uv_val, align 4, !dbg !14031
  %add111 = add nsw i32 %mul110, %100, !dbg !14032
  %shr112 = ashr i32 %add111, 14, !dbg !14033
  store i32 %shr112, i32* %a.addr.i182, align 4, !dbg !14034
  %101 = load i32, i32* %a.addr.i182, align 4, !dbg !14035
  %and.i183 = and i32 %101, -256, !dbg !14036
  %tobool.i184 = icmp ne i32 %and.i183, 0, !dbg !14036
  br i1 %tobool.i184, label %if.then.i188, label %if.else.i190, !dbg !14037

if.then.i188:                                     ; preds = %av_clip_uint8_c.exit202
  %102 = load i32, i32* %a.addr.i182, align 4, !dbg !14038
  %neg.i185 = xor i32 %102, -1, !dbg !14039
  %shr.i186 = ashr i32 %neg.i185, 31, !dbg !14040
  %conv.i187 = trunc i32 %shr.i186 to i8, !dbg !14041
  store i8 %conv.i187, i8* %retval.i181, align 1, !dbg !14042
  br label %av_clip_uint8_c.exit191, !dbg !14042

if.else.i190:                                     ; preds = %av_clip_uint8_c.exit202
  %103 = load i32, i32* %a.addr.i182, align 4, !dbg !14043
  %conv1.i189 = trunc i32 %103 to i8, !dbg !14043
  store i8 %conv1.i189, i8* %retval.i181, align 1, !dbg !14044
  br label %av_clip_uint8_c.exit191, !dbg !14044

av_clip_uint8_c.exit191:                          ; preds = %if.then.i188, %if.else.i190
  %104 = load i8, i8* %retval.i181, align 1, !dbg !14045
  %105 = load i32, i32* %x, align 4, !dbg !14046
  %mul114 = mul nsw i32 %105, 2, !dbg !14047
  %add115 = add nsw i32 %mul114, 1, !dbg !14048
  %conv116 = sext i32 %add115 to i64, !dbg !14046
  %106 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14049
  %arrayidx117 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !14049
  %107 = load i64, i64* %arrayidx117, align 8, !dbg !14049
  %div118 = udiv i64 %107, 1, !dbg !14050
  %add119 = add i64 %conv116, %div118, !dbg !14051
  %108 = load i8*, i8** %dst0, align 8, !dbg !14052
  %arrayidx120 = getelementptr inbounds i8, i8* %108, i64 %add119, !dbg !14052
  store i8 %104, i8* %arrayidx120, align 1, !dbg !14053
  %109 = load i32, i32* %u, align 4, !dbg !14054
  %110 = load i32, i32* %cuu, align 4, !dbg !14055
  %mul121 = mul nsw i32 %109, %110, !dbg !14056
  %111 = load i32, i32* %v, align 4, !dbg !14057
  %112 = load i32, i32* %cuv, align 4, !dbg !14058
  %mul122 = mul nsw i32 %111, %112, !dbg !14059
  %add123 = add nsw i32 %mul121, %mul122, !dbg !14060
  %add124 = add nsw i32 %add123, 2105344, !dbg !14061
  %shr125 = ashr i32 %add124, 14, !dbg !14062
  store i32 %shr125, i32* %a.addr.i171, align 4, !dbg !14063
  %113 = load i32, i32* %a.addr.i171, align 4, !dbg !14064
  %and.i172 = and i32 %113, -256, !dbg !14065
  %tobool.i173 = icmp ne i32 %and.i172, 0, !dbg !14065
  br i1 %tobool.i173, label %if.then.i177, label %if.else.i179, !dbg !14066

if.then.i177:                                     ; preds = %av_clip_uint8_c.exit191
  %114 = load i32, i32* %a.addr.i171, align 4, !dbg !14067
  %neg.i174 = xor i32 %114, -1, !dbg !14068
  %shr.i175 = ashr i32 %neg.i174, 31, !dbg !14069
  %conv.i176 = trunc i32 %shr.i175 to i8, !dbg !14070
  store i8 %conv.i176, i8* %retval.i170, align 1, !dbg !14071
  br label %av_clip_uint8_c.exit180, !dbg !14071

if.else.i179:                                     ; preds = %av_clip_uint8_c.exit191
  %115 = load i32, i32* %a.addr.i171, align 4, !dbg !14072
  %conv1.i178 = trunc i32 %115 to i8, !dbg !14072
  store i8 %conv1.i178, i8* %retval.i170, align 1, !dbg !14073
  br label %av_clip_uint8_c.exit180, !dbg !14073

av_clip_uint8_c.exit180:                          ; preds = %if.then.i177, %if.else.i179
  %116 = load i8, i8* %retval.i170, align 1, !dbg !14074
  %117 = load i32, i32* %x, align 4, !dbg !14075
  %idxprom127 = sext i32 %117 to i64, !dbg !14076
  %118 = load i8*, i8** %dst1, align 8, !dbg !14076
  %arrayidx128 = getelementptr inbounds i8, i8* %118, i64 %idxprom127, !dbg !14076
  store i8 %116, i8* %arrayidx128, align 1, !dbg !14077
  %119 = load i32, i32* %u, align 4, !dbg !14078
  %120 = load i32, i32* %cvu, align 4, !dbg !14079
  %mul129 = mul nsw i32 %119, %120, !dbg !14080
  %121 = load i32, i32* %v, align 4, !dbg !14081
  %122 = load i32, i32* %cvv, align 4, !dbg !14082
  %mul130 = mul nsw i32 %121, %122, !dbg !14083
  %add131 = add nsw i32 %mul129, %mul130, !dbg !14084
  %add132 = add nsw i32 %add131, 2105344, !dbg !14085
  %shr133 = ashr i32 %add132, 14, !dbg !14086
  store i32 %shr133, i32* %a.addr.i160, align 4, !dbg !14087
  %123 = load i32, i32* %a.addr.i160, align 4, !dbg !14088
  %and.i161 = and i32 %123, -256, !dbg !14089
  %tobool.i162 = icmp ne i32 %and.i161, 0, !dbg !14089
  br i1 %tobool.i162, label %if.then.i166, label %if.else.i168, !dbg !14090

if.then.i166:                                     ; preds = %av_clip_uint8_c.exit180
  %124 = load i32, i32* %a.addr.i160, align 4, !dbg !14091
  %neg.i163 = xor i32 %124, -1, !dbg !14092
  %shr.i164 = ashr i32 %neg.i163, 31, !dbg !14093
  %conv.i165 = trunc i32 %shr.i164 to i8, !dbg !14094
  store i8 %conv.i165, i8* %retval.i159, align 1, !dbg !14095
  br label %av_clip_uint8_c.exit169, !dbg !14095

if.else.i168:                                     ; preds = %av_clip_uint8_c.exit180
  %125 = load i32, i32* %a.addr.i160, align 4, !dbg !14096
  %conv1.i167 = trunc i32 %125 to i8, !dbg !14096
  store i8 %conv1.i167, i8* %retval.i159, align 1, !dbg !14097
  br label %av_clip_uint8_c.exit169, !dbg !14097

av_clip_uint8_c.exit169:                          ; preds = %if.then.i166, %if.else.i168
  %126 = load i8, i8* %retval.i159, align 1, !dbg !14098
  %127 = load i32, i32* %x, align 4, !dbg !14099
  %idxprom135 = sext i32 %127 to i64, !dbg !14100
  %128 = load i8*, i8** %dst2, align 8, !dbg !14100
  %arrayidx136 = getelementptr inbounds i8, i8* %128, i64 %idxprom135, !dbg !14100
  store i8 %126, i8* %arrayidx136, align 1, !dbg !14101
  br label %for.inc, !dbg !14102

for.inc:                                          ; preds = %av_clip_uint8_c.exit169
  %129 = load i32, i32* %x, align 4, !dbg !14103
  %inc = add nsw i32 %129, 1, !dbg !14103
  store i32 %inc, i32* %x, align 4, !dbg !14103
  br label %for.cond43, !dbg !14105, !llvm.loop !14106

for.end:                                          ; preds = %for.cond43
  %130 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14108
  %arrayidx137 = getelementptr inbounds i64, i64* %130, i64 0, !dbg !14108
  %131 = load i64, i64* %arrayidx137, align 8, !dbg !14108
  %mul138 = mul nsw i64 %131, 2, !dbg !14109
  %div139 = udiv i64 %mul138, 1, !dbg !14110
  %132 = load i8*, i8** %dst0, align 8, !dbg !14111
  %add.ptr = getelementptr inbounds i8, i8* %132, i64 %div139, !dbg !14111
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !14111
  %133 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14112
  %arrayidx140 = getelementptr inbounds i64, i64* %133, i64 1, !dbg !14112
  %134 = load i64, i64* %arrayidx140, align 8, !dbg !14112
  %div141 = udiv i64 %134, 1, !dbg !14113
  %135 = load i8*, i8** %dst1, align 8, !dbg !14114
  %add.ptr142 = getelementptr inbounds i8, i8* %135, i64 %div141, !dbg !14114
  store i8* %add.ptr142, i8** %dst1, align 8, !dbg !14114
  %136 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14115
  %arrayidx143 = getelementptr inbounds i64, i64* %136, i64 2, !dbg !14115
  %137 = load i64, i64* %arrayidx143, align 8, !dbg !14115
  %div144 = udiv i64 %137, 1, !dbg !14116
  %138 = load i8*, i8** %dst2, align 8, !dbg !14117
  %add.ptr145 = getelementptr inbounds i8, i8* %138, i64 %div144, !dbg !14117
  store i8* %add.ptr145, i8** %dst2, align 8, !dbg !14117
  %139 = load i64*, i64** %src_stride.addr, align 8, !dbg !14118
  %arrayidx146 = getelementptr inbounds i64, i64* %139, i64 0, !dbg !14118
  %140 = load i64, i64* %arrayidx146, align 8, !dbg !14118
  %mul147 = mul nsw i64 %140, 2, !dbg !14119
  %div148 = udiv i64 %mul147, 1, !dbg !14120
  %141 = load i8*, i8** %src0, align 8, !dbg !14121
  %add.ptr149 = getelementptr inbounds i8, i8* %141, i64 %div148, !dbg !14121
  store i8* %add.ptr149, i8** %src0, align 8, !dbg !14121
  %142 = load i64*, i64** %src_stride.addr, align 8, !dbg !14122
  %arrayidx150 = getelementptr inbounds i64, i64* %142, i64 1, !dbg !14122
  %143 = load i64, i64* %arrayidx150, align 8, !dbg !14122
  %div151 = udiv i64 %143, 1, !dbg !14123
  %144 = load i8*, i8** %src1, align 8, !dbg !14124
  %add.ptr152 = getelementptr inbounds i8, i8* %144, i64 %div151, !dbg !14124
  store i8* %add.ptr152, i8** %src1, align 8, !dbg !14124
  %145 = load i64*, i64** %src_stride.addr, align 8, !dbg !14125
  %arrayidx153 = getelementptr inbounds i64, i64* %145, i64 2, !dbg !14125
  %146 = load i64, i64* %arrayidx153, align 8, !dbg !14125
  %div154 = udiv i64 %146, 1, !dbg !14126
  %147 = load i8*, i8** %src2, align 8, !dbg !14127
  %add.ptr155 = getelementptr inbounds i8, i8* %147, i64 %div154, !dbg !14127
  store i8* %add.ptr155, i8** %src2, align 8, !dbg !14127
  br label %for.inc156, !dbg !14128

for.inc156:                                       ; preds = %for.end
  %148 = load i32, i32* %y, align 4, !dbg !14129
  %inc157 = add nsw i32 %148, 1, !dbg !14129
  store i32 %inc157, i32* %y, align 4, !dbg !14129
  br label %for.cond, !dbg !14131, !llvm.loop !14132

for.end158:                                       ; preds = %for.cond
  ret void, !dbg !14134
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p8to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !14135 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !14136
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !14144
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !14145
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !14147
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !14148
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !14150
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !14151, metadata !94), !dbg !14152
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !14153, metadata !94), !dbg !14154
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !14155, metadata !94), !dbg !14156
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !14157, metadata !94), !dbg !14158
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !14159, metadata !94), !dbg !14160
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !14161, metadata !94), !dbg !14162
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !14163, metadata !94), !dbg !14164
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !14165, metadata !94), !dbg !14166
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !14167, metadata !94), !dbg !14168
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !14169
  %1 = bitcast i8** %0 to i16**, !dbg !14170
  store i16** %1, i16*** %dst, align 8, !dbg !14168
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !14171, metadata !94), !dbg !14172
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !14173
  store i8** %2, i8*** %src, align 8, !dbg !14172
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !14174, metadata !94), !dbg !14175
  %3 = load i8**, i8*** %src, align 8, !dbg !14176
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !14176
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !14176
  store i8* %4, i8** %src0, align 8, !dbg !14175
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !14177, metadata !94), !dbg !14178
  %5 = load i8**, i8*** %src, align 8, !dbg !14179
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !14179
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !14179
  store i8* %6, i8** %src1, align 8, !dbg !14178
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !14180, metadata !94), !dbg !14181
  %7 = load i8**, i8*** %src, align 8, !dbg !14182
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !14182
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !14182
  store i8* %8, i8** %src2, align 8, !dbg !14181
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !14183, metadata !94), !dbg !14184
  %9 = load i16**, i16*** %dst, align 8, !dbg !14185
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !14185
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !14185
  store i16* %10, i16** %dst0, align 8, !dbg !14184
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !14186, metadata !94), !dbg !14187
  %11 = load i16**, i16*** %dst, align 8, !dbg !14188
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !14188
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !14188
  store i16* %12, i16** %dst1, align 8, !dbg !14187
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !14189, metadata !94), !dbg !14190
  %13 = load i16**, i16*** %dst, align 8, !dbg !14191
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !14191
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !14191
  store i16* %14, i16** %dst2, align 8, !dbg !14190
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14192, metadata !94), !dbg !14193
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14194, metadata !94), !dbg !14195
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !14196, metadata !94), !dbg !14197
  store i32 12, i32* %sh, align 4, !dbg !14197
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !14198, metadata !94), !dbg !14199
  store i32 2048, i32* %rnd, align 4, !dbg !14199
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !14200, metadata !94), !dbg !14201
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14202
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !14202
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !14202
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !14202
  %conv = sext i16 %16 to i32, !dbg !14202
  store i32 %conv, i32* %y_off_in, align 4, !dbg !14201
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !14203, metadata !94), !dbg !14204
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14205
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !14205
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !14205
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !14205
  %conv10 = sext i16 %18 to i32, !dbg !14205
  %shl = shl i32 %conv10, 12, !dbg !14206
  store i32 %shl, i32* %y_off_out, align 4, !dbg !14204
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !14207, metadata !94), !dbg !14208
  store i32 128, i32* %uv_off_in, align 4, !dbg !14208
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !14209, metadata !94), !dbg !14210
  store i32 2099200, i32* %uv_off_out, align 4, !dbg !14210
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !14211, metadata !94), !dbg !14212
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14213
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !14213
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !14213
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !14213
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14213
  %conv14 = sext i16 %20 to i32, !dbg !14213
  store i32 %conv14, i32* %cyy, align 4, !dbg !14212
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !14214, metadata !94), !dbg !14215
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14216
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !14216
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !14216
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !14216
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !14216
  %conv18 = sext i16 %22 to i32, !dbg !14216
  store i32 %conv18, i32* %cyu, align 4, !dbg !14215
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !14217, metadata !94), !dbg !14218
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14219
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !14219
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !14219
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !14219
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !14219
  %conv22 = sext i16 %24 to i32, !dbg !14219
  store i32 %conv22, i32* %cyv, align 4, !dbg !14218
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !14220, metadata !94), !dbg !14221
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14222
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !14222
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !14222
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !14222
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !14222
  %conv26 = sext i16 %26 to i32, !dbg !14222
  store i32 %conv26, i32* %cuu, align 4, !dbg !14221
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !14223, metadata !94), !dbg !14224
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14225
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !14225
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !14225
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !14225
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !14225
  %conv30 = sext i16 %28 to i32, !dbg !14225
  store i32 %conv30, i32* %cuv, align 4, !dbg !14224
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !14226, metadata !94), !dbg !14227
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14228
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !14228
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !14228
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !14228
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !14228
  %conv34 = sext i16 %30 to i32, !dbg !14228
  store i32 %conv34, i32* %cvu, align 4, !dbg !14227
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !14229, metadata !94), !dbg !14230
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14231
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !14231
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !14231
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !14231
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !14231
  %conv38 = sext i16 %32 to i32, !dbg !14231
  store i32 %conv38, i32* %cvv, align 4, !dbg !14230
  %33 = load i32, i32* %w.addr, align 4, !dbg !14232
  %add = add nsw i32 %33, 1, !dbg !14233
  %sub = sub nsw i32 %add, 1, !dbg !14234
  %shr = ashr i32 %sub, 0, !dbg !14235
  store i32 %shr, i32* %w.addr, align 4, !dbg !14236
  %34 = load i32, i32* %h.addr, align 4, !dbg !14237
  %add39 = add nsw i32 %34, 1, !dbg !14238
  %sub40 = sub nsw i32 %add39, 1, !dbg !14239
  %shr41 = ashr i32 %sub40, 0, !dbg !14240
  store i32 %shr41, i32* %h.addr, align 4, !dbg !14241
  store i32 0, i32* %y, align 4, !dbg !14242
  br label %for.cond, !dbg !14243

for.cond:                                         ; preds = %for.inc106, %entry
  %35 = load i32, i32* %y, align 4, !dbg !14244
  %36 = load i32, i32* %h.addr, align 4, !dbg !14246
  %cmp = icmp slt i32 %35, %36, !dbg !14247
  br i1 %cmp, label %for.body, label %for.end108, !dbg !14248

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !14249
  br label %for.cond43, !dbg !14250

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !14251
  %38 = load i32, i32* %w.addr, align 4, !dbg !14253
  %cmp44 = icmp slt i32 %37, %38, !dbg !14254
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !14255

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !14256, metadata !94), !dbg !14257
  %39 = load i32, i32* %x, align 4, !dbg !14258
  %shl47 = shl i32 %39, 0, !dbg !14259
  %idxprom = sext i32 %shl47 to i64, !dbg !14260
  %40 = load i8*, i8** %src0, align 8, !dbg !14260
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !14260
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !14260
  %conv49 = zext i8 %41 to i32, !dbg !14260
  %42 = load i32, i32* %y_off_in, align 4, !dbg !14261
  %sub50 = sub nsw i32 %conv49, %42, !dbg !14262
  store i32 %sub50, i32* %y00, align 4, !dbg !14257
  call void @llvm.dbg.declare(metadata i32* %u, metadata !14263, metadata !94), !dbg !14264
  %43 = load i32, i32* %x, align 4, !dbg !14265
  %idxprom51 = sext i32 %43 to i64, !dbg !14266
  %44 = load i8*, i8** %src1, align 8, !dbg !14266
  %arrayidx52 = getelementptr inbounds i8, i8* %44, i64 %idxprom51, !dbg !14266
  %45 = load i8, i8* %arrayidx52, align 1, !dbg !14266
  %conv53 = zext i8 %45 to i32, !dbg !14266
  %sub54 = sub nsw i32 %conv53, 128, !dbg !14267
  store i32 %sub54, i32* %u, align 4, !dbg !14264
  call void @llvm.dbg.declare(metadata i32* %v, metadata !14268, metadata !94), !dbg !14269
  %46 = load i32, i32* %x, align 4, !dbg !14270
  %idxprom55 = sext i32 %46 to i64, !dbg !14271
  %47 = load i8*, i8** %src2, align 8, !dbg !14271
  %arrayidx56 = getelementptr inbounds i8, i8* %47, i64 %idxprom55, !dbg !14271
  %48 = load i8, i8* %arrayidx56, align 1, !dbg !14271
  %conv57 = zext i8 %48 to i32, !dbg !14271
  %sub58 = sub nsw i32 %conv57, 128, !dbg !14272
  store i32 %sub58, i32* %v, align 4, !dbg !14269
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !14273, metadata !94), !dbg !14274
  %49 = load i32, i32* %cyu, align 4, !dbg !14275
  %50 = load i32, i32* %u, align 4, !dbg !14276
  %mul = mul nsw i32 %49, %50, !dbg !14277
  %51 = load i32, i32* %cyv, align 4, !dbg !14278
  %52 = load i32, i32* %v, align 4, !dbg !14279
  %mul59 = mul nsw i32 %51, %52, !dbg !14280
  %add60 = add nsw i32 %mul, %mul59, !dbg !14281
  %add61 = add nsw i32 %add60, 2048, !dbg !14282
  %53 = load i32, i32* %y_off_out, align 4, !dbg !14283
  %add62 = add nsw i32 %add61, %53, !dbg !14284
  store i32 %add62, i32* %uv_val, align 4, !dbg !14274
  %54 = load i32, i32* %cyy, align 4, !dbg !14285
  %55 = load i32, i32* %y00, align 4, !dbg !14286
  %mul63 = mul nsw i32 %54, %55, !dbg !14287
  %56 = load i32, i32* %uv_val, align 4, !dbg !14288
  %add64 = add nsw i32 %mul63, %56, !dbg !14289
  %shr65 = ashr i32 %add64, 12, !dbg !14290
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !14291
  store i32 10, i32* %p.addr.i, align 4, !dbg !14291
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !14292
  %58 = load i32, i32* %p.addr.i, align 4, !dbg !14293
  %shl.i = shl i32 1, %58, !dbg !14294
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !14295
  %neg.i = xor i32 %sub.i, -1, !dbg !14296
  %and.i = and i32 %57, %neg.i, !dbg !14297
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14297
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14298

if.then.i:                                        ; preds = %for.body46
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !14299
  %neg1.i = xor i32 %59, -1, !dbg !14300
  %shr.i = ashr i32 %neg1.i, 31, !dbg !14301
  %60 = load i32, i32* %p.addr.i, align 4, !dbg !14302
  %shl2.i = shl i32 1, %60, !dbg !14303
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !14304
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !14305
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !14306
  br label %av_clip_uintp2_c.exit, !dbg !14306

if.else.i:                                        ; preds = %for.body46
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !14307
  store i32 %61, i32* %retval.i, align 4, !dbg !14308
  br label %av_clip_uintp2_c.exit, !dbg !14308

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %62 = load i32, i32* %retval.i, align 4, !dbg !14309
  %conv66 = trunc i32 %62 to i16, !dbg !14291
  %63 = load i32, i32* %x, align 4, !dbg !14310
  %shl67 = shl i32 %63, 0, !dbg !14311
  %idxprom68 = sext i32 %shl67 to i64, !dbg !14312
  %64 = load i16*, i16** %dst0, align 8, !dbg !14312
  %arrayidx69 = getelementptr inbounds i16, i16* %64, i64 %idxprom68, !dbg !14312
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !14313
  %65 = load i32, i32* %u, align 4, !dbg !14314
  %66 = load i32, i32* %cuu, align 4, !dbg !14315
  %mul70 = mul nsw i32 %65, %66, !dbg !14316
  %67 = load i32, i32* %v, align 4, !dbg !14317
  %68 = load i32, i32* %cuv, align 4, !dbg !14318
  %mul71 = mul nsw i32 %67, %68, !dbg !14319
  %add72 = add nsw i32 %mul70, %mul71, !dbg !14320
  %add73 = add nsw i32 %add72, 2099200, !dbg !14321
  %shr74 = ashr i32 %add73, 12, !dbg !14322
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !14323
  store i32 10, i32* %p.addr.i127, align 4, !dbg !14323
  %69 = load i32, i32* %a.addr.i126, align 4, !dbg !14324
  %70 = load i32, i32* %p.addr.i127, align 4, !dbg !14325
  %shl.i128 = shl i32 1, %70, !dbg !14326
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !14327
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !14328
  %and.i131 = and i32 %69, %neg.i130, !dbg !14329
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !14329
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !14330

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %71 = load i32, i32* %a.addr.i126, align 4, !dbg !14331
  %neg1.i133 = xor i32 %71, -1, !dbg !14332
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !14333
  %72 = load i32, i32* %p.addr.i127, align 4, !dbg !14334
  %shl2.i135 = shl i32 1, %72, !dbg !14335
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !14336
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !14337
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !14338
  br label %av_clip_uintp2_c.exit140, !dbg !14338

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %73 = load i32, i32* %a.addr.i126, align 4, !dbg !14339
  store i32 %73, i32* %retval.i125, align 4, !dbg !14340
  br label %av_clip_uintp2_c.exit140, !dbg !14340

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %74 = load i32, i32* %retval.i125, align 4, !dbg !14341
  %conv76 = trunc i32 %74 to i16, !dbg !14323
  %75 = load i32, i32* %x, align 4, !dbg !14342
  %idxprom77 = sext i32 %75 to i64, !dbg !14343
  %76 = load i16*, i16** %dst1, align 8, !dbg !14343
  %arrayidx78 = getelementptr inbounds i16, i16* %76, i64 %idxprom77, !dbg !14343
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !14344
  %77 = load i32, i32* %u, align 4, !dbg !14345
  %78 = load i32, i32* %cvu, align 4, !dbg !14346
  %mul79 = mul nsw i32 %77, %78, !dbg !14347
  %79 = load i32, i32* %v, align 4, !dbg !14348
  %80 = load i32, i32* %cvv, align 4, !dbg !14349
  %mul80 = mul nsw i32 %79, %80, !dbg !14350
  %add81 = add nsw i32 %mul79, %mul80, !dbg !14351
  %add82 = add nsw i32 %add81, 2099200, !dbg !14352
  %shr83 = ashr i32 %add82, 12, !dbg !14353
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !14354
  store i32 10, i32* %p.addr.i111, align 4, !dbg !14354
  %81 = load i32, i32* %a.addr.i110, align 4, !dbg !14355
  %82 = load i32, i32* %p.addr.i111, align 4, !dbg !14356
  %shl.i112 = shl i32 1, %82, !dbg !14357
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !14358
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !14359
  %and.i115 = and i32 %81, %neg.i114, !dbg !14360
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !14360
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !14361

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %83 = load i32, i32* %a.addr.i110, align 4, !dbg !14362
  %neg1.i117 = xor i32 %83, -1, !dbg !14363
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !14364
  %84 = load i32, i32* %p.addr.i111, align 4, !dbg !14365
  %shl2.i119 = shl i32 1, %84, !dbg !14366
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !14367
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !14368
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !14369
  br label %av_clip_uintp2_c.exit124, !dbg !14369

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %85 = load i32, i32* %a.addr.i110, align 4, !dbg !14370
  store i32 %85, i32* %retval.i109, align 4, !dbg !14371
  br label %av_clip_uintp2_c.exit124, !dbg !14371

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %86 = load i32, i32* %retval.i109, align 4, !dbg !14372
  %conv85 = trunc i32 %86 to i16, !dbg !14354
  %87 = load i32, i32* %x, align 4, !dbg !14373
  %idxprom86 = sext i32 %87 to i64, !dbg !14374
  %88 = load i16*, i16** %dst2, align 8, !dbg !14374
  %arrayidx87 = getelementptr inbounds i16, i16* %88, i64 %idxprom86, !dbg !14374
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !14375
  br label %for.inc, !dbg !14376

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %89 = load i32, i32* %x, align 4, !dbg !14377
  %inc = add nsw i32 %89, 1, !dbg !14377
  store i32 %inc, i32* %x, align 4, !dbg !14377
  br label %for.cond43, !dbg !14379, !llvm.loop !14380

for.end:                                          ; preds = %for.cond43
  %90 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14382
  %arrayidx88 = getelementptr inbounds i64, i64* %90, i64 0, !dbg !14382
  %91 = load i64, i64* %arrayidx88, align 8, !dbg !14382
  %mul89 = mul nsw i64 %91, 1, !dbg !14383
  %div = udiv i64 %mul89, 2, !dbg !14384
  %92 = load i16*, i16** %dst0, align 8, !dbg !14385
  %add.ptr = getelementptr inbounds i16, i16* %92, i64 %div, !dbg !14385
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !14385
  %93 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14386
  %arrayidx90 = getelementptr inbounds i64, i64* %93, i64 1, !dbg !14386
  %94 = load i64, i64* %arrayidx90, align 8, !dbg !14386
  %div91 = udiv i64 %94, 2, !dbg !14387
  %95 = load i16*, i16** %dst1, align 8, !dbg !14388
  %add.ptr92 = getelementptr inbounds i16, i16* %95, i64 %div91, !dbg !14388
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !14388
  %96 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14389
  %arrayidx93 = getelementptr inbounds i64, i64* %96, i64 2, !dbg !14389
  %97 = load i64, i64* %arrayidx93, align 8, !dbg !14389
  %div94 = udiv i64 %97, 2, !dbg !14390
  %98 = load i16*, i16** %dst2, align 8, !dbg !14391
  %add.ptr95 = getelementptr inbounds i16, i16* %98, i64 %div94, !dbg !14391
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !14391
  %99 = load i64*, i64** %src_stride.addr, align 8, !dbg !14392
  %arrayidx96 = getelementptr inbounds i64, i64* %99, i64 0, !dbg !14392
  %100 = load i64, i64* %arrayidx96, align 8, !dbg !14392
  %mul97 = mul nsw i64 %100, 1, !dbg !14393
  %div98 = udiv i64 %mul97, 1, !dbg !14394
  %101 = load i8*, i8** %src0, align 8, !dbg !14395
  %add.ptr99 = getelementptr inbounds i8, i8* %101, i64 %div98, !dbg !14395
  store i8* %add.ptr99, i8** %src0, align 8, !dbg !14395
  %102 = load i64*, i64** %src_stride.addr, align 8, !dbg !14396
  %arrayidx100 = getelementptr inbounds i64, i64* %102, i64 1, !dbg !14396
  %103 = load i64, i64* %arrayidx100, align 8, !dbg !14396
  %div101 = udiv i64 %103, 1, !dbg !14397
  %104 = load i8*, i8** %src1, align 8, !dbg !14398
  %add.ptr102 = getelementptr inbounds i8, i8* %104, i64 %div101, !dbg !14398
  store i8* %add.ptr102, i8** %src1, align 8, !dbg !14398
  %105 = load i64*, i64** %src_stride.addr, align 8, !dbg !14399
  %arrayidx103 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !14399
  %106 = load i64, i64* %arrayidx103, align 8, !dbg !14399
  %div104 = udiv i64 %106, 1, !dbg !14400
  %107 = load i8*, i8** %src2, align 8, !dbg !14401
  %add.ptr105 = getelementptr inbounds i8, i8* %107, i64 %div104, !dbg !14401
  store i8* %add.ptr105, i8** %src2, align 8, !dbg !14401
  br label %for.inc106, !dbg !14402

for.inc106:                                       ; preds = %for.end
  %108 = load i32, i32* %y, align 4, !dbg !14403
  %inc107 = add nsw i32 %108, 1, !dbg !14403
  store i32 %inc107, i32* %y, align 4, !dbg !14403
  br label %for.cond, !dbg !14405, !llvm.loop !14406

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !14408
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p8to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !14409 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !14410
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !14418
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !14419
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !14421
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !14422
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !14424
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !14425
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !14427
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !14428, metadata !94), !dbg !14429
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !14430, metadata !94), !dbg !14431
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !14432, metadata !94), !dbg !14433
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !14434, metadata !94), !dbg !14435
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !14436, metadata !94), !dbg !14437
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !14438, metadata !94), !dbg !14439
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !14440, metadata !94), !dbg !14441
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !14442, metadata !94), !dbg !14443
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !14444, metadata !94), !dbg !14445
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !14446
  %1 = bitcast i8** %0 to i16**, !dbg !14447
  store i16** %1, i16*** %dst, align 8, !dbg !14445
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !14448, metadata !94), !dbg !14449
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !14450
  store i8** %2, i8*** %src, align 8, !dbg !14449
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !14451, metadata !94), !dbg !14452
  %3 = load i8**, i8*** %src, align 8, !dbg !14453
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !14453
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !14453
  store i8* %4, i8** %src0, align 8, !dbg !14452
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !14454, metadata !94), !dbg !14455
  %5 = load i8**, i8*** %src, align 8, !dbg !14456
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !14456
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !14456
  store i8* %6, i8** %src1, align 8, !dbg !14455
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !14457, metadata !94), !dbg !14458
  %7 = load i8**, i8*** %src, align 8, !dbg !14459
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !14459
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !14459
  store i8* %8, i8** %src2, align 8, !dbg !14458
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !14460, metadata !94), !dbg !14461
  %9 = load i16**, i16*** %dst, align 8, !dbg !14462
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !14462
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !14462
  store i16* %10, i16** %dst0, align 8, !dbg !14461
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !14463, metadata !94), !dbg !14464
  %11 = load i16**, i16*** %dst, align 8, !dbg !14465
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !14465
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !14465
  store i16* %12, i16** %dst1, align 8, !dbg !14464
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !14466, metadata !94), !dbg !14467
  %13 = load i16**, i16*** %dst, align 8, !dbg !14468
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !14468
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !14468
  store i16* %14, i16** %dst2, align 8, !dbg !14467
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14469, metadata !94), !dbg !14470
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14471, metadata !94), !dbg !14472
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !14473, metadata !94), !dbg !14474
  store i32 12, i32* %sh, align 4, !dbg !14474
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !14475, metadata !94), !dbg !14476
  store i32 2048, i32* %rnd, align 4, !dbg !14476
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !14477, metadata !94), !dbg !14478
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14479
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !14479
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !14479
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !14479
  %conv = sext i16 %16 to i32, !dbg !14479
  store i32 %conv, i32* %y_off_in, align 4, !dbg !14478
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !14480, metadata !94), !dbg !14481
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14482
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !14482
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !14482
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !14482
  %conv10 = sext i16 %18 to i32, !dbg !14482
  %shl = shl i32 %conv10, 12, !dbg !14483
  store i32 %shl, i32* %y_off_out, align 4, !dbg !14481
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !14484, metadata !94), !dbg !14485
  store i32 128, i32* %uv_off_in, align 4, !dbg !14485
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !14486, metadata !94), !dbg !14487
  store i32 2099200, i32* %uv_off_out, align 4, !dbg !14487
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !14488, metadata !94), !dbg !14489
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14490
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !14490
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !14490
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !14490
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14490
  %conv14 = sext i16 %20 to i32, !dbg !14490
  store i32 %conv14, i32* %cyy, align 4, !dbg !14489
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !14491, metadata !94), !dbg !14492
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14493
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !14493
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !14493
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !14493
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !14493
  %conv18 = sext i16 %22 to i32, !dbg !14493
  store i32 %conv18, i32* %cyu, align 4, !dbg !14492
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !14494, metadata !94), !dbg !14495
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14496
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !14496
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !14496
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !14496
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !14496
  %conv22 = sext i16 %24 to i32, !dbg !14496
  store i32 %conv22, i32* %cyv, align 4, !dbg !14495
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !14497, metadata !94), !dbg !14498
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14499
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !14499
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !14499
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !14499
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !14499
  %conv26 = sext i16 %26 to i32, !dbg !14499
  store i32 %conv26, i32* %cuu, align 4, !dbg !14498
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !14500, metadata !94), !dbg !14501
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14502
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !14502
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !14502
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !14502
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !14502
  %conv30 = sext i16 %28 to i32, !dbg !14502
  store i32 %conv30, i32* %cuv, align 4, !dbg !14501
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !14503, metadata !94), !dbg !14504
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14505
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !14505
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !14505
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !14505
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !14505
  %conv34 = sext i16 %30 to i32, !dbg !14505
  store i32 %conv34, i32* %cvu, align 4, !dbg !14504
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !14506, metadata !94), !dbg !14507
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14508
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !14508
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !14508
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !14508
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !14508
  %conv38 = sext i16 %32 to i32, !dbg !14508
  store i32 %conv38, i32* %cvv, align 4, !dbg !14507
  %33 = load i32, i32* %w.addr, align 4, !dbg !14509
  %add = add nsw i32 %33, 2, !dbg !14510
  %sub = sub nsw i32 %add, 1, !dbg !14511
  %shr = ashr i32 %sub, 1, !dbg !14512
  store i32 %shr, i32* %w.addr, align 4, !dbg !14513
  %34 = load i32, i32* %h.addr, align 4, !dbg !14514
  %add39 = add nsw i32 %34, 1, !dbg !14515
  %sub40 = sub nsw i32 %add39, 1, !dbg !14516
  %shr41 = ashr i32 %sub40, 0, !dbg !14517
  store i32 %shr41, i32* %h.addr, align 4, !dbg !14518
  store i32 0, i32* %y, align 4, !dbg !14519
  br label %for.cond, !dbg !14520

for.cond:                                         ; preds = %for.inc121, %entry
  %35 = load i32, i32* %y, align 4, !dbg !14521
  %36 = load i32, i32* %h.addr, align 4, !dbg !14523
  %cmp = icmp slt i32 %35, %36, !dbg !14524
  br i1 %cmp, label %for.body, label %for.end123, !dbg !14525

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !14526
  br label %for.cond43, !dbg !14527

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !14528
  %38 = load i32, i32* %w.addr, align 4, !dbg !14530
  %cmp44 = icmp slt i32 %37, %38, !dbg !14531
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !14532

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !14533, metadata !94), !dbg !14534
  %39 = load i32, i32* %x, align 4, !dbg !14535
  %shl47 = shl i32 %39, 1, !dbg !14536
  %idxprom = sext i32 %shl47 to i64, !dbg !14537
  %40 = load i8*, i8** %src0, align 8, !dbg !14537
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !14537
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !14537
  %conv49 = zext i8 %41 to i32, !dbg !14537
  %42 = load i32, i32* %y_off_in, align 4, !dbg !14538
  %sub50 = sub nsw i32 %conv49, %42, !dbg !14539
  store i32 %sub50, i32* %y00, align 4, !dbg !14534
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !14540, metadata !94), !dbg !14541
  %43 = load i32, i32* %x, align 4, !dbg !14542
  %mul = mul nsw i32 2, %43, !dbg !14543
  %add51 = add nsw i32 %mul, 1, !dbg !14544
  %idxprom52 = sext i32 %add51 to i64, !dbg !14545
  %44 = load i8*, i8** %src0, align 8, !dbg !14545
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 %idxprom52, !dbg !14545
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !14545
  %conv54 = zext i8 %45 to i32, !dbg !14545
  %46 = load i32, i32* %y_off_in, align 4, !dbg !14546
  %sub55 = sub nsw i32 %conv54, %46, !dbg !14547
  store i32 %sub55, i32* %y01, align 4, !dbg !14541
  call void @llvm.dbg.declare(metadata i32* %u, metadata !14548, metadata !94), !dbg !14549
  %47 = load i32, i32* %x, align 4, !dbg !14550
  %idxprom56 = sext i32 %47 to i64, !dbg !14551
  %48 = load i8*, i8** %src1, align 8, !dbg !14551
  %arrayidx57 = getelementptr inbounds i8, i8* %48, i64 %idxprom56, !dbg !14551
  %49 = load i8, i8* %arrayidx57, align 1, !dbg !14551
  %conv58 = zext i8 %49 to i32, !dbg !14551
  %sub59 = sub nsw i32 %conv58, 128, !dbg !14552
  store i32 %sub59, i32* %u, align 4, !dbg !14549
  call void @llvm.dbg.declare(metadata i32* %v, metadata !14553, metadata !94), !dbg !14554
  %50 = load i32, i32* %x, align 4, !dbg !14555
  %idxprom60 = sext i32 %50 to i64, !dbg !14556
  %51 = load i8*, i8** %src2, align 8, !dbg !14556
  %arrayidx61 = getelementptr inbounds i8, i8* %51, i64 %idxprom60, !dbg !14556
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !14556
  %conv62 = zext i8 %52 to i32, !dbg !14556
  %sub63 = sub nsw i32 %conv62, 128, !dbg !14557
  store i32 %sub63, i32* %v, align 4, !dbg !14554
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !14558, metadata !94), !dbg !14559
  %53 = load i32, i32* %cyu, align 4, !dbg !14560
  %54 = load i32, i32* %u, align 4, !dbg !14561
  %mul64 = mul nsw i32 %53, %54, !dbg !14562
  %55 = load i32, i32* %cyv, align 4, !dbg !14563
  %56 = load i32, i32* %v, align 4, !dbg !14564
  %mul65 = mul nsw i32 %55, %56, !dbg !14565
  %add66 = add nsw i32 %mul64, %mul65, !dbg !14566
  %add67 = add nsw i32 %add66, 2048, !dbg !14567
  %57 = load i32, i32* %y_off_out, align 4, !dbg !14568
  %add68 = add nsw i32 %add67, %57, !dbg !14569
  store i32 %add68, i32* %uv_val, align 4, !dbg !14559
  %58 = load i32, i32* %cyy, align 4, !dbg !14570
  %59 = load i32, i32* %y00, align 4, !dbg !14571
  %mul69 = mul nsw i32 %58, %59, !dbg !14572
  %60 = load i32, i32* %uv_val, align 4, !dbg !14573
  %add70 = add nsw i32 %mul69, %60, !dbg !14574
  %shr71 = ashr i32 %add70, 12, !dbg !14575
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !14576
  store i32 10, i32* %p.addr.i, align 4, !dbg !14576
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !14577
  %62 = load i32, i32* %p.addr.i, align 4, !dbg !14578
  %shl.i = shl i32 1, %62, !dbg !14579
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !14580
  %neg.i = xor i32 %sub.i, -1, !dbg !14581
  %and.i = and i32 %61, %neg.i, !dbg !14582
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14582
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14583

if.then.i:                                        ; preds = %for.body46
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !14584
  %neg1.i = xor i32 %63, -1, !dbg !14585
  %shr.i = ashr i32 %neg1.i, 31, !dbg !14586
  %64 = load i32, i32* %p.addr.i, align 4, !dbg !14587
  %shl2.i = shl i32 1, %64, !dbg !14588
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !14589
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !14590
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !14591
  br label %av_clip_uintp2_c.exit, !dbg !14591

if.else.i:                                        ; preds = %for.body46
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !14592
  store i32 %65, i32* %retval.i, align 4, !dbg !14593
  br label %av_clip_uintp2_c.exit, !dbg !14593

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %66 = load i32, i32* %retval.i, align 4, !dbg !14594
  %conv72 = trunc i32 %66 to i16, !dbg !14576
  %67 = load i32, i32* %x, align 4, !dbg !14595
  %shl73 = shl i32 %67, 1, !dbg !14596
  %idxprom74 = sext i32 %shl73 to i64, !dbg !14597
  %68 = load i16*, i16** %dst0, align 8, !dbg !14597
  %arrayidx75 = getelementptr inbounds i16, i16* %68, i64 %idxprom74, !dbg !14597
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !14598
  %69 = load i32, i32* %cyy, align 4, !dbg !14599
  %70 = load i32, i32* %y01, align 4, !dbg !14600
  %mul76 = mul nsw i32 %69, %70, !dbg !14601
  %71 = load i32, i32* %uv_val, align 4, !dbg !14602
  %add77 = add nsw i32 %mul76, %71, !dbg !14603
  %shr78 = ashr i32 %add77, 12, !dbg !14604
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !14605
  store i32 10, i32* %p.addr.i158, align 4, !dbg !14605
  %72 = load i32, i32* %a.addr.i157, align 4, !dbg !14606
  %73 = load i32, i32* %p.addr.i158, align 4, !dbg !14607
  %shl.i159 = shl i32 1, %73, !dbg !14608
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !14609
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !14610
  %and.i162 = and i32 %72, %neg.i161, !dbg !14611
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !14611
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !14612

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i157, align 4, !dbg !14613
  %neg1.i164 = xor i32 %74, -1, !dbg !14614
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !14615
  %75 = load i32, i32* %p.addr.i158, align 4, !dbg !14616
  %shl2.i166 = shl i32 1, %75, !dbg !14617
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !14618
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !14619
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !14620
  br label %av_clip_uintp2_c.exit171, !dbg !14620

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %76 = load i32, i32* %a.addr.i157, align 4, !dbg !14621
  store i32 %76, i32* %retval.i156, align 4, !dbg !14622
  br label %av_clip_uintp2_c.exit171, !dbg !14622

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %77 = load i32, i32* %retval.i156, align 4, !dbg !14623
  %conv80 = trunc i32 %77 to i16, !dbg !14605
  %78 = load i32, i32* %x, align 4, !dbg !14624
  %mul81 = mul nsw i32 %78, 2, !dbg !14625
  %add82 = add nsw i32 %mul81, 1, !dbg !14626
  %idxprom83 = sext i32 %add82 to i64, !dbg !14627
  %79 = load i16*, i16** %dst0, align 8, !dbg !14627
  %arrayidx84 = getelementptr inbounds i16, i16* %79, i64 %idxprom83, !dbg !14627
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !14628
  %80 = load i32, i32* %u, align 4, !dbg !14629
  %81 = load i32, i32* %cuu, align 4, !dbg !14630
  %mul85 = mul nsw i32 %80, %81, !dbg !14631
  %82 = load i32, i32* %v, align 4, !dbg !14632
  %83 = load i32, i32* %cuv, align 4, !dbg !14633
  %mul86 = mul nsw i32 %82, %83, !dbg !14634
  %add87 = add nsw i32 %mul85, %mul86, !dbg !14635
  %add88 = add nsw i32 %add87, 2099200, !dbg !14636
  %shr89 = ashr i32 %add88, 12, !dbg !14637
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !14638
  store i32 10, i32* %p.addr.i142, align 4, !dbg !14638
  %84 = load i32, i32* %a.addr.i141, align 4, !dbg !14639
  %85 = load i32, i32* %p.addr.i142, align 4, !dbg !14640
  %shl.i143 = shl i32 1, %85, !dbg !14641
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !14642
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !14643
  %and.i146 = and i32 %84, %neg.i145, !dbg !14644
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !14644
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !14645

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %86 = load i32, i32* %a.addr.i141, align 4, !dbg !14646
  %neg1.i148 = xor i32 %86, -1, !dbg !14647
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !14648
  %87 = load i32, i32* %p.addr.i142, align 4, !dbg !14649
  %shl2.i150 = shl i32 1, %87, !dbg !14650
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !14651
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !14652
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !14653
  br label %av_clip_uintp2_c.exit155, !dbg !14653

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %88 = load i32, i32* %a.addr.i141, align 4, !dbg !14654
  store i32 %88, i32* %retval.i140, align 4, !dbg !14655
  br label %av_clip_uintp2_c.exit155, !dbg !14655

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %89 = load i32, i32* %retval.i140, align 4, !dbg !14656
  %conv91 = trunc i32 %89 to i16, !dbg !14638
  %90 = load i32, i32* %x, align 4, !dbg !14657
  %idxprom92 = sext i32 %90 to i64, !dbg !14658
  %91 = load i16*, i16** %dst1, align 8, !dbg !14658
  %arrayidx93 = getelementptr inbounds i16, i16* %91, i64 %idxprom92, !dbg !14658
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !14659
  %92 = load i32, i32* %u, align 4, !dbg !14660
  %93 = load i32, i32* %cvu, align 4, !dbg !14661
  %mul94 = mul nsw i32 %92, %93, !dbg !14662
  %94 = load i32, i32* %v, align 4, !dbg !14663
  %95 = load i32, i32* %cvv, align 4, !dbg !14664
  %mul95 = mul nsw i32 %94, %95, !dbg !14665
  %add96 = add nsw i32 %mul94, %mul95, !dbg !14666
  %add97 = add nsw i32 %add96, 2099200, !dbg !14667
  %shr98 = ashr i32 %add97, 12, !dbg !14668
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !14669
  store i32 10, i32* %p.addr.i126, align 4, !dbg !14669
  %96 = load i32, i32* %a.addr.i125, align 4, !dbg !14670
  %97 = load i32, i32* %p.addr.i126, align 4, !dbg !14671
  %shl.i127 = shl i32 1, %97, !dbg !14672
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !14673
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !14674
  %and.i130 = and i32 %96, %neg.i129, !dbg !14675
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !14675
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !14676

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %98 = load i32, i32* %a.addr.i125, align 4, !dbg !14677
  %neg1.i132 = xor i32 %98, -1, !dbg !14678
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !14679
  %99 = load i32, i32* %p.addr.i126, align 4, !dbg !14680
  %shl2.i134 = shl i32 1, %99, !dbg !14681
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !14682
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !14683
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !14684
  br label %av_clip_uintp2_c.exit139, !dbg !14684

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %100 = load i32, i32* %a.addr.i125, align 4, !dbg !14685
  store i32 %100, i32* %retval.i124, align 4, !dbg !14686
  br label %av_clip_uintp2_c.exit139, !dbg !14686

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %101 = load i32, i32* %retval.i124, align 4, !dbg !14687
  %conv100 = trunc i32 %101 to i16, !dbg !14669
  %102 = load i32, i32* %x, align 4, !dbg !14688
  %idxprom101 = sext i32 %102 to i64, !dbg !14689
  %103 = load i16*, i16** %dst2, align 8, !dbg !14689
  %arrayidx102 = getelementptr inbounds i16, i16* %103, i64 %idxprom101, !dbg !14689
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !14690
  br label %for.inc, !dbg !14691

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %104 = load i32, i32* %x, align 4, !dbg !14692
  %inc = add nsw i32 %104, 1, !dbg !14692
  store i32 %inc, i32* %x, align 4, !dbg !14692
  br label %for.cond43, !dbg !14694, !llvm.loop !14695

for.end:                                          ; preds = %for.cond43
  %105 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14697
  %arrayidx103 = getelementptr inbounds i64, i64* %105, i64 0, !dbg !14697
  %106 = load i64, i64* %arrayidx103, align 8, !dbg !14697
  %mul104 = mul nsw i64 %106, 1, !dbg !14698
  %div = udiv i64 %mul104, 2, !dbg !14699
  %107 = load i16*, i16** %dst0, align 8, !dbg !14700
  %add.ptr = getelementptr inbounds i16, i16* %107, i64 %div, !dbg !14700
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !14700
  %108 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14701
  %arrayidx105 = getelementptr inbounds i64, i64* %108, i64 1, !dbg !14701
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !14701
  %div106 = udiv i64 %109, 2, !dbg !14702
  %110 = load i16*, i16** %dst1, align 8, !dbg !14703
  %add.ptr107 = getelementptr inbounds i16, i16* %110, i64 %div106, !dbg !14703
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !14703
  %111 = load i64*, i64** %dst_stride.addr, align 8, !dbg !14704
  %arrayidx108 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !14704
  %112 = load i64, i64* %arrayidx108, align 8, !dbg !14704
  %div109 = udiv i64 %112, 2, !dbg !14705
  %113 = load i16*, i16** %dst2, align 8, !dbg !14706
  %add.ptr110 = getelementptr inbounds i16, i16* %113, i64 %div109, !dbg !14706
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !14706
  %114 = load i64*, i64** %src_stride.addr, align 8, !dbg !14707
  %arrayidx111 = getelementptr inbounds i64, i64* %114, i64 0, !dbg !14707
  %115 = load i64, i64* %arrayidx111, align 8, !dbg !14707
  %mul112 = mul nsw i64 %115, 1, !dbg !14708
  %div113 = udiv i64 %mul112, 1, !dbg !14709
  %116 = load i8*, i8** %src0, align 8, !dbg !14710
  %add.ptr114 = getelementptr inbounds i8, i8* %116, i64 %div113, !dbg !14710
  store i8* %add.ptr114, i8** %src0, align 8, !dbg !14710
  %117 = load i64*, i64** %src_stride.addr, align 8, !dbg !14711
  %arrayidx115 = getelementptr inbounds i64, i64* %117, i64 1, !dbg !14711
  %118 = load i64, i64* %arrayidx115, align 8, !dbg !14711
  %div116 = udiv i64 %118, 1, !dbg !14712
  %119 = load i8*, i8** %src1, align 8, !dbg !14713
  %add.ptr117 = getelementptr inbounds i8, i8* %119, i64 %div116, !dbg !14713
  store i8* %add.ptr117, i8** %src1, align 8, !dbg !14713
  %120 = load i64*, i64** %src_stride.addr, align 8, !dbg !14714
  %arrayidx118 = getelementptr inbounds i64, i64* %120, i64 2, !dbg !14714
  %121 = load i64, i64* %arrayidx118, align 8, !dbg !14714
  %div119 = udiv i64 %121, 1, !dbg !14715
  %122 = load i8*, i8** %src2, align 8, !dbg !14716
  %add.ptr120 = getelementptr inbounds i8, i8* %122, i64 %div119, !dbg !14716
  store i8* %add.ptr120, i8** %src2, align 8, !dbg !14716
  br label %for.inc121, !dbg !14717

for.inc121:                                       ; preds = %for.end
  %123 = load i32, i32* %y, align 4, !dbg !14718
  %inc122 = add nsw i32 %123, 1, !dbg !14718
  store i32 %inc122, i32* %y, align 4, !dbg !14718
  br label %for.cond, !dbg !14720, !llvm.loop !14721

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !14723
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p8to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !14724 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !14725
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !14733
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !14734
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !14736
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !14737
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !14739
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !14740
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !14742
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !14743
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !14745
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !14746
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !14748
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !14749, metadata !94), !dbg !14750
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !14751, metadata !94), !dbg !14752
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !14753, metadata !94), !dbg !14754
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !14755, metadata !94), !dbg !14756
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !14757, metadata !94), !dbg !14758
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !14759, metadata !94), !dbg !14760
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !14761, metadata !94), !dbg !14762
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !14763, metadata !94), !dbg !14764
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !14765, metadata !94), !dbg !14766
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !14767
  %1 = bitcast i8** %0 to i16**, !dbg !14768
  store i16** %1, i16*** %dst, align 8, !dbg !14766
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !14769, metadata !94), !dbg !14770
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !14771
  store i8** %2, i8*** %src, align 8, !dbg !14770
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !14772, metadata !94), !dbg !14773
  %3 = load i8**, i8*** %src, align 8, !dbg !14774
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !14774
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !14774
  store i8* %4, i8** %src0, align 8, !dbg !14773
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !14775, metadata !94), !dbg !14776
  %5 = load i8**, i8*** %src, align 8, !dbg !14777
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !14777
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !14777
  store i8* %6, i8** %src1, align 8, !dbg !14776
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !14778, metadata !94), !dbg !14779
  %7 = load i8**, i8*** %src, align 8, !dbg !14780
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !14780
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !14780
  store i8* %8, i8** %src2, align 8, !dbg !14779
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !14781, metadata !94), !dbg !14782
  %9 = load i16**, i16*** %dst, align 8, !dbg !14783
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !14783
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !14783
  store i16* %10, i16** %dst0, align 8, !dbg !14782
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !14784, metadata !94), !dbg !14785
  %11 = load i16**, i16*** %dst, align 8, !dbg !14786
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !14786
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !14786
  store i16* %12, i16** %dst1, align 8, !dbg !14785
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !14787, metadata !94), !dbg !14788
  %13 = load i16**, i16*** %dst, align 8, !dbg !14789
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !14789
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !14789
  store i16* %14, i16** %dst2, align 8, !dbg !14788
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14790, metadata !94), !dbg !14791
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14792, metadata !94), !dbg !14793
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !14794, metadata !94), !dbg !14795
  store i32 12, i32* %sh, align 4, !dbg !14795
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !14796, metadata !94), !dbg !14797
  store i32 2048, i32* %rnd, align 4, !dbg !14797
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !14798, metadata !94), !dbg !14799
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14800
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !14800
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !14800
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !14800
  %conv = sext i16 %16 to i32, !dbg !14800
  store i32 %conv, i32* %y_off_in, align 4, !dbg !14799
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !14801, metadata !94), !dbg !14802
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !14803
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !14803
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !14803
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !14803
  %conv10 = sext i16 %18 to i32, !dbg !14803
  %shl = shl i32 %conv10, 12, !dbg !14804
  store i32 %shl, i32* %y_off_out, align 4, !dbg !14802
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !14805, metadata !94), !dbg !14806
  store i32 128, i32* %uv_off_in, align 4, !dbg !14806
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !14807, metadata !94), !dbg !14808
  store i32 2099200, i32* %uv_off_out, align 4, !dbg !14808
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !14809, metadata !94), !dbg !14810
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14811
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !14811
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !14811
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !14811
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14811
  %conv14 = sext i16 %20 to i32, !dbg !14811
  store i32 %conv14, i32* %cyy, align 4, !dbg !14810
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !14812, metadata !94), !dbg !14813
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14814
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !14814
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !14814
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !14814
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !14814
  %conv18 = sext i16 %22 to i32, !dbg !14814
  store i32 %conv18, i32* %cyu, align 4, !dbg !14813
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !14815, metadata !94), !dbg !14816
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14817
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !14817
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !14817
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !14817
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !14817
  %conv22 = sext i16 %24 to i32, !dbg !14817
  store i32 %conv22, i32* %cyv, align 4, !dbg !14816
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !14818, metadata !94), !dbg !14819
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14820
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !14820
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !14820
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !14820
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !14820
  %conv26 = sext i16 %26 to i32, !dbg !14820
  store i32 %conv26, i32* %cuu, align 4, !dbg !14819
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !14821, metadata !94), !dbg !14822
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14823
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !14823
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !14823
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !14823
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !14823
  %conv30 = sext i16 %28 to i32, !dbg !14823
  store i32 %conv30, i32* %cuv, align 4, !dbg !14822
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !14824, metadata !94), !dbg !14825
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14826
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !14826
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !14826
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !14826
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !14826
  %conv34 = sext i16 %30 to i32, !dbg !14826
  store i32 %conv34, i32* %cvu, align 4, !dbg !14825
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !14827, metadata !94), !dbg !14828
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !14829
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !14829
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !14829
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !14829
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !14829
  %conv38 = sext i16 %32 to i32, !dbg !14829
  store i32 %conv38, i32* %cvv, align 4, !dbg !14828
  %33 = load i32, i32* %w.addr, align 4, !dbg !14830
  %add = add nsw i32 %33, 2, !dbg !14831
  %sub = sub nsw i32 %add, 1, !dbg !14832
  %shr = ashr i32 %sub, 1, !dbg !14833
  store i32 %shr, i32* %w.addr, align 4, !dbg !14834
  %34 = load i32, i32* %h.addr, align 4, !dbg !14835
  %add39 = add nsw i32 %34, 2, !dbg !14836
  %sub40 = sub nsw i32 %add39, 1, !dbg !14837
  %shr41 = ashr i32 %sub40, 1, !dbg !14838
  store i32 %shr41, i32* %h.addr, align 4, !dbg !14839
  store i32 0, i32* %y, align 4, !dbg !14840
  br label %for.cond, !dbg !14841

for.cond:                                         ; preds = %for.inc162, %entry
  %35 = load i32, i32* %y, align 4, !dbg !14842
  %36 = load i32, i32* %h.addr, align 4, !dbg !14844
  %cmp = icmp slt i32 %35, %36, !dbg !14845
  br i1 %cmp, label %for.body, label %for.end164, !dbg !14846

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !14847
  br label %for.cond43, !dbg !14848

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !14849
  %38 = load i32, i32* %w.addr, align 4, !dbg !14851
  %cmp44 = icmp slt i32 %37, %38, !dbg !14852
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !14853

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !14854, metadata !94), !dbg !14855
  %39 = load i32, i32* %x, align 4, !dbg !14856
  %shl47 = shl i32 %39, 1, !dbg !14857
  %idxprom = sext i32 %shl47 to i64, !dbg !14858
  %40 = load i8*, i8** %src0, align 8, !dbg !14858
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !14858
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !14858
  %conv49 = zext i8 %41 to i32, !dbg !14858
  %42 = load i32, i32* %y_off_in, align 4, !dbg !14859
  %sub50 = sub nsw i32 %conv49, %42, !dbg !14860
  store i32 %sub50, i32* %y00, align 4, !dbg !14855
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !14861, metadata !94), !dbg !14862
  %43 = load i32, i32* %x, align 4, !dbg !14863
  %mul = mul nsw i32 2, %43, !dbg !14864
  %add51 = add nsw i32 %mul, 1, !dbg !14865
  %idxprom52 = sext i32 %add51 to i64, !dbg !14866
  %44 = load i8*, i8** %src0, align 8, !dbg !14866
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 %idxprom52, !dbg !14866
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !14866
  %conv54 = zext i8 %45 to i32, !dbg !14866
  %46 = load i32, i32* %y_off_in, align 4, !dbg !14867
  %sub55 = sub nsw i32 %conv54, %46, !dbg !14868
  store i32 %sub55, i32* %y01, align 4, !dbg !14862
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !14869, metadata !94), !dbg !14870
  %47 = load i64*, i64** %src_stride.addr, align 8, !dbg !14871
  %arrayidx56 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !14871
  %48 = load i64, i64* %arrayidx56, align 8, !dbg !14871
  %div = udiv i64 %48, 1, !dbg !14872
  %49 = load i32, i32* %x, align 4, !dbg !14873
  %mul57 = mul nsw i32 2, %49, !dbg !14874
  %conv58 = sext i32 %mul57 to i64, !dbg !14875
  %add59 = add i64 %div, %conv58, !dbg !14876
  %50 = load i8*, i8** %src0, align 8, !dbg !14877
  %arrayidx60 = getelementptr inbounds i8, i8* %50, i64 %add59, !dbg !14877
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !14877
  %conv61 = zext i8 %51 to i32, !dbg !14877
  %52 = load i32, i32* %y_off_in, align 4, !dbg !14878
  %sub62 = sub nsw i32 %conv61, %52, !dbg !14879
  store i32 %sub62, i32* %y10, align 4, !dbg !14870
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !14880, metadata !94), !dbg !14881
  %53 = load i64*, i64** %src_stride.addr, align 8, !dbg !14882
  %arrayidx63 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !14882
  %54 = load i64, i64* %arrayidx63, align 8, !dbg !14882
  %div64 = udiv i64 %54, 1, !dbg !14883
  %55 = load i32, i32* %x, align 4, !dbg !14884
  %mul65 = mul nsw i32 2, %55, !dbg !14885
  %conv66 = sext i32 %mul65 to i64, !dbg !14886
  %add67 = add i64 %div64, %conv66, !dbg !14887
  %add68 = add i64 %add67, 1, !dbg !14888
  %56 = load i8*, i8** %src0, align 8, !dbg !14889
  %arrayidx69 = getelementptr inbounds i8, i8* %56, i64 %add68, !dbg !14889
  %57 = load i8, i8* %arrayidx69, align 1, !dbg !14889
  %conv70 = zext i8 %57 to i32, !dbg !14889
  %58 = load i32, i32* %y_off_in, align 4, !dbg !14890
  %sub71 = sub nsw i32 %conv70, %58, !dbg !14891
  store i32 %sub71, i32* %y11, align 4, !dbg !14881
  call void @llvm.dbg.declare(metadata i32* %u, metadata !14892, metadata !94), !dbg !14893
  %59 = load i32, i32* %x, align 4, !dbg !14894
  %idxprom72 = sext i32 %59 to i64, !dbg !14895
  %60 = load i8*, i8** %src1, align 8, !dbg !14895
  %arrayidx73 = getelementptr inbounds i8, i8* %60, i64 %idxprom72, !dbg !14895
  %61 = load i8, i8* %arrayidx73, align 1, !dbg !14895
  %conv74 = zext i8 %61 to i32, !dbg !14895
  %sub75 = sub nsw i32 %conv74, 128, !dbg !14896
  store i32 %sub75, i32* %u, align 4, !dbg !14893
  call void @llvm.dbg.declare(metadata i32* %v, metadata !14897, metadata !94), !dbg !14898
  %62 = load i32, i32* %x, align 4, !dbg !14899
  %idxprom76 = sext i32 %62 to i64, !dbg !14900
  %63 = load i8*, i8** %src2, align 8, !dbg !14900
  %arrayidx77 = getelementptr inbounds i8, i8* %63, i64 %idxprom76, !dbg !14900
  %64 = load i8, i8* %arrayidx77, align 1, !dbg !14900
  %conv78 = zext i8 %64 to i32, !dbg !14900
  %sub79 = sub nsw i32 %conv78, 128, !dbg !14901
  store i32 %sub79, i32* %v, align 4, !dbg !14898
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !14902, metadata !94), !dbg !14903
  %65 = load i32, i32* %cyu, align 4, !dbg !14904
  %66 = load i32, i32* %u, align 4, !dbg !14905
  %mul80 = mul nsw i32 %65, %66, !dbg !14906
  %67 = load i32, i32* %cyv, align 4, !dbg !14907
  %68 = load i32, i32* %v, align 4, !dbg !14908
  %mul81 = mul nsw i32 %67, %68, !dbg !14909
  %add82 = add nsw i32 %mul80, %mul81, !dbg !14910
  %add83 = add nsw i32 %add82, 2048, !dbg !14911
  %69 = load i32, i32* %y_off_out, align 4, !dbg !14912
  %add84 = add nsw i32 %add83, %69, !dbg !14913
  store i32 %add84, i32* %uv_val, align 4, !dbg !14903
  %70 = load i32, i32* %cyy, align 4, !dbg !14914
  %71 = load i32, i32* %y00, align 4, !dbg !14915
  %mul85 = mul nsw i32 %70, %71, !dbg !14916
  %72 = load i32, i32* %uv_val, align 4, !dbg !14917
  %add86 = add nsw i32 %mul85, %72, !dbg !14918
  %shr87 = ashr i32 %add86, 12, !dbg !14919
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !14920
  store i32 10, i32* %p.addr.i, align 4, !dbg !14920
  %73 = load i32, i32* %a.addr.i, align 4, !dbg !14921
  %74 = load i32, i32* %p.addr.i, align 4, !dbg !14922
  %shl.i = shl i32 1, %74, !dbg !14923
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !14924
  %neg.i = xor i32 %sub.i, -1, !dbg !14925
  %and.i = and i32 %73, %neg.i, !dbg !14926
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14926
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14927

if.then.i:                                        ; preds = %for.body46
  %75 = load i32, i32* %a.addr.i, align 4, !dbg !14928
  %neg1.i = xor i32 %75, -1, !dbg !14929
  %shr.i = ashr i32 %neg1.i, 31, !dbg !14930
  %76 = load i32, i32* %p.addr.i, align 4, !dbg !14931
  %shl2.i = shl i32 1, %76, !dbg !14932
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !14933
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !14934
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !14935
  br label %av_clip_uintp2_c.exit, !dbg !14935

if.else.i:                                        ; preds = %for.body46
  %77 = load i32, i32* %a.addr.i, align 4, !dbg !14936
  store i32 %77, i32* %retval.i, align 4, !dbg !14937
  br label %av_clip_uintp2_c.exit, !dbg !14937

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %78 = load i32, i32* %retval.i, align 4, !dbg !14938
  %conv88 = trunc i32 %78 to i16, !dbg !14920
  %79 = load i32, i32* %x, align 4, !dbg !14939
  %shl89 = shl i32 %79, 1, !dbg !14940
  %idxprom90 = sext i32 %shl89 to i64, !dbg !14941
  %80 = load i16*, i16** %dst0, align 8, !dbg !14941
  %arrayidx91 = getelementptr inbounds i16, i16* %80, i64 %idxprom90, !dbg !14941
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !14942
  %81 = load i32, i32* %cyy, align 4, !dbg !14943
  %82 = load i32, i32* %y01, align 4, !dbg !14944
  %mul92 = mul nsw i32 %81, %82, !dbg !14945
  %83 = load i32, i32* %uv_val, align 4, !dbg !14946
  %add93 = add nsw i32 %mul92, %83, !dbg !14947
  %shr94 = ashr i32 %add93, 12, !dbg !14948
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !14949
  store i32 10, i32* %p.addr.i231, align 4, !dbg !14949
  %84 = load i32, i32* %a.addr.i230, align 4, !dbg !14950
  %85 = load i32, i32* %p.addr.i231, align 4, !dbg !14951
  %shl.i232 = shl i32 1, %85, !dbg !14952
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !14953
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !14954
  %and.i235 = and i32 %84, %neg.i234, !dbg !14955
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !14955
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !14956

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %86 = load i32, i32* %a.addr.i230, align 4, !dbg !14957
  %neg1.i237 = xor i32 %86, -1, !dbg !14958
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !14959
  %87 = load i32, i32* %p.addr.i231, align 4, !dbg !14960
  %shl2.i239 = shl i32 1, %87, !dbg !14961
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !14962
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !14963
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !14964
  br label %av_clip_uintp2_c.exit244, !dbg !14964

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %88 = load i32, i32* %a.addr.i230, align 4, !dbg !14965
  store i32 %88, i32* %retval.i229, align 4, !dbg !14966
  br label %av_clip_uintp2_c.exit244, !dbg !14966

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %89 = load i32, i32* %retval.i229, align 4, !dbg !14967
  %conv96 = trunc i32 %89 to i16, !dbg !14949
  %90 = load i32, i32* %x, align 4, !dbg !14968
  %mul97 = mul nsw i32 %90, 2, !dbg !14969
  %add98 = add nsw i32 %mul97, 1, !dbg !14970
  %idxprom99 = sext i32 %add98 to i64, !dbg !14971
  %91 = load i16*, i16** %dst0, align 8, !dbg !14971
  %arrayidx100 = getelementptr inbounds i16, i16* %91, i64 %idxprom99, !dbg !14971
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !14972
  %92 = load i32, i32* %cyy, align 4, !dbg !14973
  %93 = load i32, i32* %y10, align 4, !dbg !14974
  %mul101 = mul nsw i32 %92, %93, !dbg !14975
  %94 = load i32, i32* %uv_val, align 4, !dbg !14976
  %add102 = add nsw i32 %mul101, %94, !dbg !14977
  %shr103 = ashr i32 %add102, 12, !dbg !14978
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !14979
  store i32 10, i32* %p.addr.i215, align 4, !dbg !14979
  %95 = load i32, i32* %a.addr.i214, align 4, !dbg !14980
  %96 = load i32, i32* %p.addr.i215, align 4, !dbg !14981
  %shl.i216 = shl i32 1, %96, !dbg !14982
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !14983
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !14984
  %and.i219 = and i32 %95, %neg.i218, !dbg !14985
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !14985
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !14986

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %97 = load i32, i32* %a.addr.i214, align 4, !dbg !14987
  %neg1.i221 = xor i32 %97, -1, !dbg !14988
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !14989
  %98 = load i32, i32* %p.addr.i215, align 4, !dbg !14990
  %shl2.i223 = shl i32 1, %98, !dbg !14991
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !14992
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !14993
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !14994
  br label %av_clip_uintp2_c.exit228, !dbg !14994

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %99 = load i32, i32* %a.addr.i214, align 4, !dbg !14995
  store i32 %99, i32* %retval.i213, align 4, !dbg !14996
  br label %av_clip_uintp2_c.exit228, !dbg !14996

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %100 = load i32, i32* %retval.i213, align 4, !dbg !14997
  %conv105 = trunc i32 %100 to i16, !dbg !14979
  %101 = load i32, i32* %x, align 4, !dbg !14998
  %mul106 = mul nsw i32 %101, 2, !dbg !14999
  %add107 = add nsw i32 %mul106, 0, !dbg !15000
  %conv108 = sext i32 %add107 to i64, !dbg !14998
  %102 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15001
  %arrayidx109 = getelementptr inbounds i64, i64* %102, i64 0, !dbg !15001
  %103 = load i64, i64* %arrayidx109, align 8, !dbg !15001
  %div110 = udiv i64 %103, 2, !dbg !15002
  %add111 = add i64 %conv108, %div110, !dbg !15003
  %104 = load i16*, i16** %dst0, align 8, !dbg !15004
  %arrayidx112 = getelementptr inbounds i16, i16* %104, i64 %add111, !dbg !15004
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !15005
  %105 = load i32, i32* %cyy, align 4, !dbg !15006
  %106 = load i32, i32* %y11, align 4, !dbg !15007
  %mul113 = mul nsw i32 %105, %106, !dbg !15008
  %107 = load i32, i32* %uv_val, align 4, !dbg !15009
  %add114 = add nsw i32 %mul113, %107, !dbg !15010
  %shr115 = ashr i32 %add114, 12, !dbg !15011
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !15012
  store i32 10, i32* %p.addr.i199, align 4, !dbg !15012
  %108 = load i32, i32* %a.addr.i198, align 4, !dbg !15013
  %109 = load i32, i32* %p.addr.i199, align 4, !dbg !15014
  %shl.i200 = shl i32 1, %109, !dbg !15015
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !15016
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !15017
  %and.i203 = and i32 %108, %neg.i202, !dbg !15018
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !15018
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !15019

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %110 = load i32, i32* %a.addr.i198, align 4, !dbg !15020
  %neg1.i205 = xor i32 %110, -1, !dbg !15021
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !15022
  %111 = load i32, i32* %p.addr.i199, align 4, !dbg !15023
  %shl2.i207 = shl i32 1, %111, !dbg !15024
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !15025
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !15026
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !15027
  br label %av_clip_uintp2_c.exit212, !dbg !15027

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %112 = load i32, i32* %a.addr.i198, align 4, !dbg !15028
  store i32 %112, i32* %retval.i197, align 4, !dbg !15029
  br label %av_clip_uintp2_c.exit212, !dbg !15029

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %113 = load i32, i32* %retval.i197, align 4, !dbg !15030
  %conv117 = trunc i32 %113 to i16, !dbg !15012
  %114 = load i32, i32* %x, align 4, !dbg !15031
  %mul118 = mul nsw i32 %114, 2, !dbg !15032
  %add119 = add nsw i32 %mul118, 1, !dbg !15033
  %conv120 = sext i32 %add119 to i64, !dbg !15031
  %115 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15034
  %arrayidx121 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !15034
  %116 = load i64, i64* %arrayidx121, align 8, !dbg !15034
  %div122 = udiv i64 %116, 2, !dbg !15035
  %add123 = add i64 %conv120, %div122, !dbg !15036
  %117 = load i16*, i16** %dst0, align 8, !dbg !15037
  %arrayidx124 = getelementptr inbounds i16, i16* %117, i64 %add123, !dbg !15037
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !15038
  %118 = load i32, i32* %u, align 4, !dbg !15039
  %119 = load i32, i32* %cuu, align 4, !dbg !15040
  %mul125 = mul nsw i32 %118, %119, !dbg !15041
  %120 = load i32, i32* %v, align 4, !dbg !15042
  %121 = load i32, i32* %cuv, align 4, !dbg !15043
  %mul126 = mul nsw i32 %120, %121, !dbg !15044
  %add127 = add nsw i32 %mul125, %mul126, !dbg !15045
  %add128 = add nsw i32 %add127, 2099200, !dbg !15046
  %shr129 = ashr i32 %add128, 12, !dbg !15047
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !15048
  store i32 10, i32* %p.addr.i183, align 4, !dbg !15048
  %122 = load i32, i32* %a.addr.i182, align 4, !dbg !15049
  %123 = load i32, i32* %p.addr.i183, align 4, !dbg !15050
  %shl.i184 = shl i32 1, %123, !dbg !15051
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !15052
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !15053
  %and.i187 = and i32 %122, %neg.i186, !dbg !15054
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !15054
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !15055

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %124 = load i32, i32* %a.addr.i182, align 4, !dbg !15056
  %neg1.i189 = xor i32 %124, -1, !dbg !15057
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !15058
  %125 = load i32, i32* %p.addr.i183, align 4, !dbg !15059
  %shl2.i191 = shl i32 1, %125, !dbg !15060
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !15061
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !15062
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !15063
  br label %av_clip_uintp2_c.exit196, !dbg !15063

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %126 = load i32, i32* %a.addr.i182, align 4, !dbg !15064
  store i32 %126, i32* %retval.i181, align 4, !dbg !15065
  br label %av_clip_uintp2_c.exit196, !dbg !15065

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %127 = load i32, i32* %retval.i181, align 4, !dbg !15066
  %conv131 = trunc i32 %127 to i16, !dbg !15048
  %128 = load i32, i32* %x, align 4, !dbg !15067
  %idxprom132 = sext i32 %128 to i64, !dbg !15068
  %129 = load i16*, i16** %dst1, align 8, !dbg !15068
  %arrayidx133 = getelementptr inbounds i16, i16* %129, i64 %idxprom132, !dbg !15068
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !15069
  %130 = load i32, i32* %u, align 4, !dbg !15070
  %131 = load i32, i32* %cvu, align 4, !dbg !15071
  %mul134 = mul nsw i32 %130, %131, !dbg !15072
  %132 = load i32, i32* %v, align 4, !dbg !15073
  %133 = load i32, i32* %cvv, align 4, !dbg !15074
  %mul135 = mul nsw i32 %132, %133, !dbg !15075
  %add136 = add nsw i32 %mul134, %mul135, !dbg !15076
  %add137 = add nsw i32 %add136, 2099200, !dbg !15077
  %shr138 = ashr i32 %add137, 12, !dbg !15078
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !15079
  store i32 10, i32* %p.addr.i167, align 4, !dbg !15079
  %134 = load i32, i32* %a.addr.i166, align 4, !dbg !15080
  %135 = load i32, i32* %p.addr.i167, align 4, !dbg !15081
  %shl.i168 = shl i32 1, %135, !dbg !15082
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !15083
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !15084
  %and.i171 = and i32 %134, %neg.i170, !dbg !15085
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !15085
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !15086

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %136 = load i32, i32* %a.addr.i166, align 4, !dbg !15087
  %neg1.i173 = xor i32 %136, -1, !dbg !15088
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !15089
  %137 = load i32, i32* %p.addr.i167, align 4, !dbg !15090
  %shl2.i175 = shl i32 1, %137, !dbg !15091
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !15092
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !15093
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !15094
  br label %av_clip_uintp2_c.exit180, !dbg !15094

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %138 = load i32, i32* %a.addr.i166, align 4, !dbg !15095
  store i32 %138, i32* %retval.i165, align 4, !dbg !15096
  br label %av_clip_uintp2_c.exit180, !dbg !15096

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %139 = load i32, i32* %retval.i165, align 4, !dbg !15097
  %conv140 = trunc i32 %139 to i16, !dbg !15079
  %140 = load i32, i32* %x, align 4, !dbg !15098
  %idxprom141 = sext i32 %140 to i64, !dbg !15099
  %141 = load i16*, i16** %dst2, align 8, !dbg !15099
  %arrayidx142 = getelementptr inbounds i16, i16* %141, i64 %idxprom141, !dbg !15099
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !15100
  br label %for.inc, !dbg !15101

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %142 = load i32, i32* %x, align 4, !dbg !15102
  %inc = add nsw i32 %142, 1, !dbg !15102
  store i32 %inc, i32* %x, align 4, !dbg !15102
  br label %for.cond43, !dbg !15104, !llvm.loop !15105

for.end:                                          ; preds = %for.cond43
  %143 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15107
  %arrayidx143 = getelementptr inbounds i64, i64* %143, i64 0, !dbg !15107
  %144 = load i64, i64* %arrayidx143, align 8, !dbg !15107
  %mul144 = mul nsw i64 %144, 2, !dbg !15108
  %div145 = udiv i64 %mul144, 2, !dbg !15109
  %145 = load i16*, i16** %dst0, align 8, !dbg !15110
  %add.ptr = getelementptr inbounds i16, i16* %145, i64 %div145, !dbg !15110
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !15110
  %146 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15111
  %arrayidx146 = getelementptr inbounds i64, i64* %146, i64 1, !dbg !15111
  %147 = load i64, i64* %arrayidx146, align 8, !dbg !15111
  %div147 = udiv i64 %147, 2, !dbg !15112
  %148 = load i16*, i16** %dst1, align 8, !dbg !15113
  %add.ptr148 = getelementptr inbounds i16, i16* %148, i64 %div147, !dbg !15113
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !15113
  %149 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15114
  %arrayidx149 = getelementptr inbounds i64, i64* %149, i64 2, !dbg !15114
  %150 = load i64, i64* %arrayidx149, align 8, !dbg !15114
  %div150 = udiv i64 %150, 2, !dbg !15115
  %151 = load i16*, i16** %dst2, align 8, !dbg !15116
  %add.ptr151 = getelementptr inbounds i16, i16* %151, i64 %div150, !dbg !15116
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !15116
  %152 = load i64*, i64** %src_stride.addr, align 8, !dbg !15117
  %arrayidx152 = getelementptr inbounds i64, i64* %152, i64 0, !dbg !15117
  %153 = load i64, i64* %arrayidx152, align 8, !dbg !15117
  %mul153 = mul nsw i64 %153, 2, !dbg !15118
  %div154 = udiv i64 %mul153, 1, !dbg !15119
  %154 = load i8*, i8** %src0, align 8, !dbg !15120
  %add.ptr155 = getelementptr inbounds i8, i8* %154, i64 %div154, !dbg !15120
  store i8* %add.ptr155, i8** %src0, align 8, !dbg !15120
  %155 = load i64*, i64** %src_stride.addr, align 8, !dbg !15121
  %arrayidx156 = getelementptr inbounds i64, i64* %155, i64 1, !dbg !15121
  %156 = load i64, i64* %arrayidx156, align 8, !dbg !15121
  %div157 = udiv i64 %156, 1, !dbg !15122
  %157 = load i8*, i8** %src1, align 8, !dbg !15123
  %add.ptr158 = getelementptr inbounds i8, i8* %157, i64 %div157, !dbg !15123
  store i8* %add.ptr158, i8** %src1, align 8, !dbg !15123
  %158 = load i64*, i64** %src_stride.addr, align 8, !dbg !15124
  %arrayidx159 = getelementptr inbounds i64, i64* %158, i64 2, !dbg !15124
  %159 = load i64, i64* %arrayidx159, align 8, !dbg !15124
  %div160 = udiv i64 %159, 1, !dbg !15125
  %160 = load i8*, i8** %src2, align 8, !dbg !15126
  %add.ptr161 = getelementptr inbounds i8, i8* %160, i64 %div160, !dbg !15126
  store i8* %add.ptr161, i8** %src2, align 8, !dbg !15126
  br label %for.inc162, !dbg !15127

for.inc162:                                       ; preds = %for.end
  %161 = load i32, i32* %y, align 4, !dbg !15128
  %inc163 = add nsw i32 %161, 1, !dbg !15128
  store i32 %inc163, i32* %y, align 4, !dbg !15128
  br label %for.cond, !dbg !15130, !llvm.loop !15131

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !15133
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p8to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !15134 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !15135
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !15143
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !15144
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !15146
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !15147
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !15149
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !15150, metadata !94), !dbg !15151
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !15152, metadata !94), !dbg !15153
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !15154, metadata !94), !dbg !15155
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !15156, metadata !94), !dbg !15157
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !15158, metadata !94), !dbg !15159
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !15160, metadata !94), !dbg !15161
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !15162, metadata !94), !dbg !15163
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !15164, metadata !94), !dbg !15165
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !15166, metadata !94), !dbg !15167
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !15168
  %1 = bitcast i8** %0 to i16**, !dbg !15169
  store i16** %1, i16*** %dst, align 8, !dbg !15167
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !15170, metadata !94), !dbg !15171
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !15172
  store i8** %2, i8*** %src, align 8, !dbg !15171
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !15173, metadata !94), !dbg !15174
  %3 = load i8**, i8*** %src, align 8, !dbg !15175
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !15175
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !15175
  store i8* %4, i8** %src0, align 8, !dbg !15174
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !15176, metadata !94), !dbg !15177
  %5 = load i8**, i8*** %src, align 8, !dbg !15178
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !15178
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !15178
  store i8* %6, i8** %src1, align 8, !dbg !15177
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !15179, metadata !94), !dbg !15180
  %7 = load i8**, i8*** %src, align 8, !dbg !15181
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !15181
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !15181
  store i8* %8, i8** %src2, align 8, !dbg !15180
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !15182, metadata !94), !dbg !15183
  %9 = load i16**, i16*** %dst, align 8, !dbg !15184
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !15184
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !15184
  store i16* %10, i16** %dst0, align 8, !dbg !15183
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !15185, metadata !94), !dbg !15186
  %11 = load i16**, i16*** %dst, align 8, !dbg !15187
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !15187
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !15187
  store i16* %12, i16** %dst1, align 8, !dbg !15186
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !15188, metadata !94), !dbg !15189
  %13 = load i16**, i16*** %dst, align 8, !dbg !15190
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !15190
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !15190
  store i16* %14, i16** %dst2, align 8, !dbg !15189
  call void @llvm.dbg.declare(metadata i32* %y, metadata !15191, metadata !94), !dbg !15192
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15193, metadata !94), !dbg !15194
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !15195, metadata !94), !dbg !15196
  store i32 10, i32* %sh, align 4, !dbg !15196
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !15197, metadata !94), !dbg !15198
  store i32 512, i32* %rnd, align 4, !dbg !15198
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !15199, metadata !94), !dbg !15200
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15201
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !15201
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !15201
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !15201
  %conv = sext i16 %16 to i32, !dbg !15201
  store i32 %conv, i32* %y_off_in, align 4, !dbg !15200
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !15202, metadata !94), !dbg !15203
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15204
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !15204
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !15204
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !15204
  %conv10 = sext i16 %18 to i32, !dbg !15204
  %shl = shl i32 %conv10, 10, !dbg !15205
  store i32 %shl, i32* %y_off_out, align 4, !dbg !15203
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !15206, metadata !94), !dbg !15207
  store i32 128, i32* %uv_off_in, align 4, !dbg !15207
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !15208, metadata !94), !dbg !15209
  store i32 2097664, i32* %uv_off_out, align 4, !dbg !15209
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !15210, metadata !94), !dbg !15211
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15212
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !15212
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !15212
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !15212
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15212
  %conv14 = sext i16 %20 to i32, !dbg !15212
  store i32 %conv14, i32* %cyy, align 4, !dbg !15211
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !15213, metadata !94), !dbg !15214
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15215
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !15215
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !15215
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !15215
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !15215
  %conv18 = sext i16 %22 to i32, !dbg !15215
  store i32 %conv18, i32* %cyu, align 4, !dbg !15214
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !15216, metadata !94), !dbg !15217
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15218
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !15218
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !15218
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !15218
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !15218
  %conv22 = sext i16 %24 to i32, !dbg !15218
  store i32 %conv22, i32* %cyv, align 4, !dbg !15217
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !15219, metadata !94), !dbg !15220
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15221
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !15221
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !15221
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !15221
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !15221
  %conv26 = sext i16 %26 to i32, !dbg !15221
  store i32 %conv26, i32* %cuu, align 4, !dbg !15220
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !15222, metadata !94), !dbg !15223
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15224
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !15224
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !15224
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !15224
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !15224
  %conv30 = sext i16 %28 to i32, !dbg !15224
  store i32 %conv30, i32* %cuv, align 4, !dbg !15223
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !15225, metadata !94), !dbg !15226
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15227
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !15227
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !15227
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !15227
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !15227
  %conv34 = sext i16 %30 to i32, !dbg !15227
  store i32 %conv34, i32* %cvu, align 4, !dbg !15226
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !15228, metadata !94), !dbg !15229
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15230
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !15230
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !15230
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !15230
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !15230
  %conv38 = sext i16 %32 to i32, !dbg !15230
  store i32 %conv38, i32* %cvv, align 4, !dbg !15229
  %33 = load i32, i32* %w.addr, align 4, !dbg !15231
  %add = add nsw i32 %33, 1, !dbg !15232
  %sub = sub nsw i32 %add, 1, !dbg !15233
  %shr = ashr i32 %sub, 0, !dbg !15234
  store i32 %shr, i32* %w.addr, align 4, !dbg !15235
  %34 = load i32, i32* %h.addr, align 4, !dbg !15236
  %add39 = add nsw i32 %34, 1, !dbg !15237
  %sub40 = sub nsw i32 %add39, 1, !dbg !15238
  %shr41 = ashr i32 %sub40, 0, !dbg !15239
  store i32 %shr41, i32* %h.addr, align 4, !dbg !15240
  store i32 0, i32* %y, align 4, !dbg !15241
  br label %for.cond, !dbg !15242

for.cond:                                         ; preds = %for.inc106, %entry
  %35 = load i32, i32* %y, align 4, !dbg !15243
  %36 = load i32, i32* %h.addr, align 4, !dbg !15245
  %cmp = icmp slt i32 %35, %36, !dbg !15246
  br i1 %cmp, label %for.body, label %for.end108, !dbg !15247

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !15248
  br label %for.cond43, !dbg !15249

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !15250
  %38 = load i32, i32* %w.addr, align 4, !dbg !15252
  %cmp44 = icmp slt i32 %37, %38, !dbg !15253
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !15254

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !15255, metadata !94), !dbg !15256
  %39 = load i32, i32* %x, align 4, !dbg !15257
  %shl47 = shl i32 %39, 0, !dbg !15258
  %idxprom = sext i32 %shl47 to i64, !dbg !15259
  %40 = load i8*, i8** %src0, align 8, !dbg !15259
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !15259
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !15259
  %conv49 = zext i8 %41 to i32, !dbg !15259
  %42 = load i32, i32* %y_off_in, align 4, !dbg !15260
  %sub50 = sub nsw i32 %conv49, %42, !dbg !15261
  store i32 %sub50, i32* %y00, align 4, !dbg !15256
  call void @llvm.dbg.declare(metadata i32* %u, metadata !15262, metadata !94), !dbg !15263
  %43 = load i32, i32* %x, align 4, !dbg !15264
  %idxprom51 = sext i32 %43 to i64, !dbg !15265
  %44 = load i8*, i8** %src1, align 8, !dbg !15265
  %arrayidx52 = getelementptr inbounds i8, i8* %44, i64 %idxprom51, !dbg !15265
  %45 = load i8, i8* %arrayidx52, align 1, !dbg !15265
  %conv53 = zext i8 %45 to i32, !dbg !15265
  %sub54 = sub nsw i32 %conv53, 128, !dbg !15266
  store i32 %sub54, i32* %u, align 4, !dbg !15263
  call void @llvm.dbg.declare(metadata i32* %v, metadata !15267, metadata !94), !dbg !15268
  %46 = load i32, i32* %x, align 4, !dbg !15269
  %idxprom55 = sext i32 %46 to i64, !dbg !15270
  %47 = load i8*, i8** %src2, align 8, !dbg !15270
  %arrayidx56 = getelementptr inbounds i8, i8* %47, i64 %idxprom55, !dbg !15270
  %48 = load i8, i8* %arrayidx56, align 1, !dbg !15270
  %conv57 = zext i8 %48 to i32, !dbg !15270
  %sub58 = sub nsw i32 %conv57, 128, !dbg !15271
  store i32 %sub58, i32* %v, align 4, !dbg !15268
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !15272, metadata !94), !dbg !15273
  %49 = load i32, i32* %cyu, align 4, !dbg !15274
  %50 = load i32, i32* %u, align 4, !dbg !15275
  %mul = mul nsw i32 %49, %50, !dbg !15276
  %51 = load i32, i32* %cyv, align 4, !dbg !15277
  %52 = load i32, i32* %v, align 4, !dbg !15278
  %mul59 = mul nsw i32 %51, %52, !dbg !15279
  %add60 = add nsw i32 %mul, %mul59, !dbg !15280
  %add61 = add nsw i32 %add60, 512, !dbg !15281
  %53 = load i32, i32* %y_off_out, align 4, !dbg !15282
  %add62 = add nsw i32 %add61, %53, !dbg !15283
  store i32 %add62, i32* %uv_val, align 4, !dbg !15273
  %54 = load i32, i32* %cyy, align 4, !dbg !15284
  %55 = load i32, i32* %y00, align 4, !dbg !15285
  %mul63 = mul nsw i32 %54, %55, !dbg !15286
  %56 = load i32, i32* %uv_val, align 4, !dbg !15287
  %add64 = add nsw i32 %mul63, %56, !dbg !15288
  %shr65 = ashr i32 %add64, 10, !dbg !15289
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !15290
  store i32 12, i32* %p.addr.i, align 4, !dbg !15290
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !15291
  %58 = load i32, i32* %p.addr.i, align 4, !dbg !15292
  %shl.i = shl i32 1, %58, !dbg !15293
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !15294
  %neg.i = xor i32 %sub.i, -1, !dbg !15295
  %and.i = and i32 %57, %neg.i, !dbg !15296
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !15296
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !15297

if.then.i:                                        ; preds = %for.body46
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !15298
  %neg1.i = xor i32 %59, -1, !dbg !15299
  %shr.i = ashr i32 %neg1.i, 31, !dbg !15300
  %60 = load i32, i32* %p.addr.i, align 4, !dbg !15301
  %shl2.i = shl i32 1, %60, !dbg !15302
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !15303
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !15304
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !15305
  br label %av_clip_uintp2_c.exit, !dbg !15305

if.else.i:                                        ; preds = %for.body46
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !15306
  store i32 %61, i32* %retval.i, align 4, !dbg !15307
  br label %av_clip_uintp2_c.exit, !dbg !15307

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %62 = load i32, i32* %retval.i, align 4, !dbg !15308
  %conv66 = trunc i32 %62 to i16, !dbg !15290
  %63 = load i32, i32* %x, align 4, !dbg !15309
  %shl67 = shl i32 %63, 0, !dbg !15310
  %idxprom68 = sext i32 %shl67 to i64, !dbg !15311
  %64 = load i16*, i16** %dst0, align 8, !dbg !15311
  %arrayidx69 = getelementptr inbounds i16, i16* %64, i64 %idxprom68, !dbg !15311
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !15312
  %65 = load i32, i32* %u, align 4, !dbg !15313
  %66 = load i32, i32* %cuu, align 4, !dbg !15314
  %mul70 = mul nsw i32 %65, %66, !dbg !15315
  %67 = load i32, i32* %v, align 4, !dbg !15316
  %68 = load i32, i32* %cuv, align 4, !dbg !15317
  %mul71 = mul nsw i32 %67, %68, !dbg !15318
  %add72 = add nsw i32 %mul70, %mul71, !dbg !15319
  %add73 = add nsw i32 %add72, 2097664, !dbg !15320
  %shr74 = ashr i32 %add73, 10, !dbg !15321
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !15322
  store i32 12, i32* %p.addr.i127, align 4, !dbg !15322
  %69 = load i32, i32* %a.addr.i126, align 4, !dbg !15323
  %70 = load i32, i32* %p.addr.i127, align 4, !dbg !15324
  %shl.i128 = shl i32 1, %70, !dbg !15325
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !15326
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !15327
  %and.i131 = and i32 %69, %neg.i130, !dbg !15328
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !15328
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !15329

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %71 = load i32, i32* %a.addr.i126, align 4, !dbg !15330
  %neg1.i133 = xor i32 %71, -1, !dbg !15331
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !15332
  %72 = load i32, i32* %p.addr.i127, align 4, !dbg !15333
  %shl2.i135 = shl i32 1, %72, !dbg !15334
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !15335
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !15336
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !15337
  br label %av_clip_uintp2_c.exit140, !dbg !15337

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %73 = load i32, i32* %a.addr.i126, align 4, !dbg !15338
  store i32 %73, i32* %retval.i125, align 4, !dbg !15339
  br label %av_clip_uintp2_c.exit140, !dbg !15339

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %74 = load i32, i32* %retval.i125, align 4, !dbg !15340
  %conv76 = trunc i32 %74 to i16, !dbg !15322
  %75 = load i32, i32* %x, align 4, !dbg !15341
  %idxprom77 = sext i32 %75 to i64, !dbg !15342
  %76 = load i16*, i16** %dst1, align 8, !dbg !15342
  %arrayidx78 = getelementptr inbounds i16, i16* %76, i64 %idxprom77, !dbg !15342
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !15343
  %77 = load i32, i32* %u, align 4, !dbg !15344
  %78 = load i32, i32* %cvu, align 4, !dbg !15345
  %mul79 = mul nsw i32 %77, %78, !dbg !15346
  %79 = load i32, i32* %v, align 4, !dbg !15347
  %80 = load i32, i32* %cvv, align 4, !dbg !15348
  %mul80 = mul nsw i32 %79, %80, !dbg !15349
  %add81 = add nsw i32 %mul79, %mul80, !dbg !15350
  %add82 = add nsw i32 %add81, 2097664, !dbg !15351
  %shr83 = ashr i32 %add82, 10, !dbg !15352
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !15353
  store i32 12, i32* %p.addr.i111, align 4, !dbg !15353
  %81 = load i32, i32* %a.addr.i110, align 4, !dbg !15354
  %82 = load i32, i32* %p.addr.i111, align 4, !dbg !15355
  %shl.i112 = shl i32 1, %82, !dbg !15356
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !15357
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !15358
  %and.i115 = and i32 %81, %neg.i114, !dbg !15359
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !15359
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !15360

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %83 = load i32, i32* %a.addr.i110, align 4, !dbg !15361
  %neg1.i117 = xor i32 %83, -1, !dbg !15362
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !15363
  %84 = load i32, i32* %p.addr.i111, align 4, !dbg !15364
  %shl2.i119 = shl i32 1, %84, !dbg !15365
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !15366
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !15367
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !15368
  br label %av_clip_uintp2_c.exit124, !dbg !15368

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %85 = load i32, i32* %a.addr.i110, align 4, !dbg !15369
  store i32 %85, i32* %retval.i109, align 4, !dbg !15370
  br label %av_clip_uintp2_c.exit124, !dbg !15370

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %86 = load i32, i32* %retval.i109, align 4, !dbg !15371
  %conv85 = trunc i32 %86 to i16, !dbg !15353
  %87 = load i32, i32* %x, align 4, !dbg !15372
  %idxprom86 = sext i32 %87 to i64, !dbg !15373
  %88 = load i16*, i16** %dst2, align 8, !dbg !15373
  %arrayidx87 = getelementptr inbounds i16, i16* %88, i64 %idxprom86, !dbg !15373
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !15374
  br label %for.inc, !dbg !15375

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %89 = load i32, i32* %x, align 4, !dbg !15376
  %inc = add nsw i32 %89, 1, !dbg !15376
  store i32 %inc, i32* %x, align 4, !dbg !15376
  br label %for.cond43, !dbg !15378, !llvm.loop !15379

for.end:                                          ; preds = %for.cond43
  %90 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15381
  %arrayidx88 = getelementptr inbounds i64, i64* %90, i64 0, !dbg !15381
  %91 = load i64, i64* %arrayidx88, align 8, !dbg !15381
  %mul89 = mul nsw i64 %91, 1, !dbg !15382
  %div = udiv i64 %mul89, 2, !dbg !15383
  %92 = load i16*, i16** %dst0, align 8, !dbg !15384
  %add.ptr = getelementptr inbounds i16, i16* %92, i64 %div, !dbg !15384
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !15384
  %93 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15385
  %arrayidx90 = getelementptr inbounds i64, i64* %93, i64 1, !dbg !15385
  %94 = load i64, i64* %arrayidx90, align 8, !dbg !15385
  %div91 = udiv i64 %94, 2, !dbg !15386
  %95 = load i16*, i16** %dst1, align 8, !dbg !15387
  %add.ptr92 = getelementptr inbounds i16, i16* %95, i64 %div91, !dbg !15387
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !15387
  %96 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15388
  %arrayidx93 = getelementptr inbounds i64, i64* %96, i64 2, !dbg !15388
  %97 = load i64, i64* %arrayidx93, align 8, !dbg !15388
  %div94 = udiv i64 %97, 2, !dbg !15389
  %98 = load i16*, i16** %dst2, align 8, !dbg !15390
  %add.ptr95 = getelementptr inbounds i16, i16* %98, i64 %div94, !dbg !15390
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !15390
  %99 = load i64*, i64** %src_stride.addr, align 8, !dbg !15391
  %arrayidx96 = getelementptr inbounds i64, i64* %99, i64 0, !dbg !15391
  %100 = load i64, i64* %arrayidx96, align 8, !dbg !15391
  %mul97 = mul nsw i64 %100, 1, !dbg !15392
  %div98 = udiv i64 %mul97, 1, !dbg !15393
  %101 = load i8*, i8** %src0, align 8, !dbg !15394
  %add.ptr99 = getelementptr inbounds i8, i8* %101, i64 %div98, !dbg !15394
  store i8* %add.ptr99, i8** %src0, align 8, !dbg !15394
  %102 = load i64*, i64** %src_stride.addr, align 8, !dbg !15395
  %arrayidx100 = getelementptr inbounds i64, i64* %102, i64 1, !dbg !15395
  %103 = load i64, i64* %arrayidx100, align 8, !dbg !15395
  %div101 = udiv i64 %103, 1, !dbg !15396
  %104 = load i8*, i8** %src1, align 8, !dbg !15397
  %add.ptr102 = getelementptr inbounds i8, i8* %104, i64 %div101, !dbg !15397
  store i8* %add.ptr102, i8** %src1, align 8, !dbg !15397
  %105 = load i64*, i64** %src_stride.addr, align 8, !dbg !15398
  %arrayidx103 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !15398
  %106 = load i64, i64* %arrayidx103, align 8, !dbg !15398
  %div104 = udiv i64 %106, 1, !dbg !15399
  %107 = load i8*, i8** %src2, align 8, !dbg !15400
  %add.ptr105 = getelementptr inbounds i8, i8* %107, i64 %div104, !dbg !15400
  store i8* %add.ptr105, i8** %src2, align 8, !dbg !15400
  br label %for.inc106, !dbg !15401

for.inc106:                                       ; preds = %for.end
  %108 = load i32, i32* %y, align 4, !dbg !15402
  %inc107 = add nsw i32 %108, 1, !dbg !15402
  store i32 %inc107, i32* %y, align 4, !dbg !15402
  br label %for.cond, !dbg !15404, !llvm.loop !15405

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !15407
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p8to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !15408 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !15409
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !15417
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !15418
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !15420
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !15421
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !15423
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !15424
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !15426
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !15427, metadata !94), !dbg !15428
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !15429, metadata !94), !dbg !15430
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !15431, metadata !94), !dbg !15432
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !15433, metadata !94), !dbg !15434
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !15435, metadata !94), !dbg !15436
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !15437, metadata !94), !dbg !15438
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !15439, metadata !94), !dbg !15440
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !15441, metadata !94), !dbg !15442
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !15443, metadata !94), !dbg !15444
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !15445
  %1 = bitcast i8** %0 to i16**, !dbg !15446
  store i16** %1, i16*** %dst, align 8, !dbg !15444
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !15447, metadata !94), !dbg !15448
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !15449
  store i8** %2, i8*** %src, align 8, !dbg !15448
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !15450, metadata !94), !dbg !15451
  %3 = load i8**, i8*** %src, align 8, !dbg !15452
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !15452
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !15452
  store i8* %4, i8** %src0, align 8, !dbg !15451
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !15453, metadata !94), !dbg !15454
  %5 = load i8**, i8*** %src, align 8, !dbg !15455
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !15455
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !15455
  store i8* %6, i8** %src1, align 8, !dbg !15454
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !15456, metadata !94), !dbg !15457
  %7 = load i8**, i8*** %src, align 8, !dbg !15458
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !15458
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !15458
  store i8* %8, i8** %src2, align 8, !dbg !15457
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !15459, metadata !94), !dbg !15460
  %9 = load i16**, i16*** %dst, align 8, !dbg !15461
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !15461
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !15461
  store i16* %10, i16** %dst0, align 8, !dbg !15460
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !15462, metadata !94), !dbg !15463
  %11 = load i16**, i16*** %dst, align 8, !dbg !15464
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !15464
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !15464
  store i16* %12, i16** %dst1, align 8, !dbg !15463
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !15465, metadata !94), !dbg !15466
  %13 = load i16**, i16*** %dst, align 8, !dbg !15467
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !15467
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !15467
  store i16* %14, i16** %dst2, align 8, !dbg !15466
  call void @llvm.dbg.declare(metadata i32* %y, metadata !15468, metadata !94), !dbg !15469
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15470, metadata !94), !dbg !15471
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !15472, metadata !94), !dbg !15473
  store i32 10, i32* %sh, align 4, !dbg !15473
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !15474, metadata !94), !dbg !15475
  store i32 512, i32* %rnd, align 4, !dbg !15475
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !15476, metadata !94), !dbg !15477
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15478
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !15478
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !15478
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !15478
  %conv = sext i16 %16 to i32, !dbg !15478
  store i32 %conv, i32* %y_off_in, align 4, !dbg !15477
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !15479, metadata !94), !dbg !15480
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15481
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !15481
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !15481
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !15481
  %conv10 = sext i16 %18 to i32, !dbg !15481
  %shl = shl i32 %conv10, 10, !dbg !15482
  store i32 %shl, i32* %y_off_out, align 4, !dbg !15480
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !15483, metadata !94), !dbg !15484
  store i32 128, i32* %uv_off_in, align 4, !dbg !15484
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !15485, metadata !94), !dbg !15486
  store i32 2097664, i32* %uv_off_out, align 4, !dbg !15486
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !15487, metadata !94), !dbg !15488
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15489
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !15489
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !15489
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !15489
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15489
  %conv14 = sext i16 %20 to i32, !dbg !15489
  store i32 %conv14, i32* %cyy, align 4, !dbg !15488
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !15490, metadata !94), !dbg !15491
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15492
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !15492
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !15492
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !15492
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !15492
  %conv18 = sext i16 %22 to i32, !dbg !15492
  store i32 %conv18, i32* %cyu, align 4, !dbg !15491
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !15493, metadata !94), !dbg !15494
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15495
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !15495
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !15495
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !15495
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !15495
  %conv22 = sext i16 %24 to i32, !dbg !15495
  store i32 %conv22, i32* %cyv, align 4, !dbg !15494
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !15496, metadata !94), !dbg !15497
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15498
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !15498
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !15498
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !15498
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !15498
  %conv26 = sext i16 %26 to i32, !dbg !15498
  store i32 %conv26, i32* %cuu, align 4, !dbg !15497
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !15499, metadata !94), !dbg !15500
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15501
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !15501
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !15501
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !15501
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !15501
  %conv30 = sext i16 %28 to i32, !dbg !15501
  store i32 %conv30, i32* %cuv, align 4, !dbg !15500
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !15502, metadata !94), !dbg !15503
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15504
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !15504
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !15504
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !15504
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !15504
  %conv34 = sext i16 %30 to i32, !dbg !15504
  store i32 %conv34, i32* %cvu, align 4, !dbg !15503
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !15505, metadata !94), !dbg !15506
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15507
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !15507
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !15507
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !15507
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !15507
  %conv38 = sext i16 %32 to i32, !dbg !15507
  store i32 %conv38, i32* %cvv, align 4, !dbg !15506
  %33 = load i32, i32* %w.addr, align 4, !dbg !15508
  %add = add nsw i32 %33, 2, !dbg !15509
  %sub = sub nsw i32 %add, 1, !dbg !15510
  %shr = ashr i32 %sub, 1, !dbg !15511
  store i32 %shr, i32* %w.addr, align 4, !dbg !15512
  %34 = load i32, i32* %h.addr, align 4, !dbg !15513
  %add39 = add nsw i32 %34, 1, !dbg !15514
  %sub40 = sub nsw i32 %add39, 1, !dbg !15515
  %shr41 = ashr i32 %sub40, 0, !dbg !15516
  store i32 %shr41, i32* %h.addr, align 4, !dbg !15517
  store i32 0, i32* %y, align 4, !dbg !15518
  br label %for.cond, !dbg !15519

for.cond:                                         ; preds = %for.inc121, %entry
  %35 = load i32, i32* %y, align 4, !dbg !15520
  %36 = load i32, i32* %h.addr, align 4, !dbg !15522
  %cmp = icmp slt i32 %35, %36, !dbg !15523
  br i1 %cmp, label %for.body, label %for.end123, !dbg !15524

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !15525
  br label %for.cond43, !dbg !15526

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !15527
  %38 = load i32, i32* %w.addr, align 4, !dbg !15529
  %cmp44 = icmp slt i32 %37, %38, !dbg !15530
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !15531

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !15532, metadata !94), !dbg !15533
  %39 = load i32, i32* %x, align 4, !dbg !15534
  %shl47 = shl i32 %39, 1, !dbg !15535
  %idxprom = sext i32 %shl47 to i64, !dbg !15536
  %40 = load i8*, i8** %src0, align 8, !dbg !15536
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !15536
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !15536
  %conv49 = zext i8 %41 to i32, !dbg !15536
  %42 = load i32, i32* %y_off_in, align 4, !dbg !15537
  %sub50 = sub nsw i32 %conv49, %42, !dbg !15538
  store i32 %sub50, i32* %y00, align 4, !dbg !15533
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !15539, metadata !94), !dbg !15540
  %43 = load i32, i32* %x, align 4, !dbg !15541
  %mul = mul nsw i32 2, %43, !dbg !15542
  %add51 = add nsw i32 %mul, 1, !dbg !15543
  %idxprom52 = sext i32 %add51 to i64, !dbg !15544
  %44 = load i8*, i8** %src0, align 8, !dbg !15544
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 %idxprom52, !dbg !15544
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !15544
  %conv54 = zext i8 %45 to i32, !dbg !15544
  %46 = load i32, i32* %y_off_in, align 4, !dbg !15545
  %sub55 = sub nsw i32 %conv54, %46, !dbg !15546
  store i32 %sub55, i32* %y01, align 4, !dbg !15540
  call void @llvm.dbg.declare(metadata i32* %u, metadata !15547, metadata !94), !dbg !15548
  %47 = load i32, i32* %x, align 4, !dbg !15549
  %idxprom56 = sext i32 %47 to i64, !dbg !15550
  %48 = load i8*, i8** %src1, align 8, !dbg !15550
  %arrayidx57 = getelementptr inbounds i8, i8* %48, i64 %idxprom56, !dbg !15550
  %49 = load i8, i8* %arrayidx57, align 1, !dbg !15550
  %conv58 = zext i8 %49 to i32, !dbg !15550
  %sub59 = sub nsw i32 %conv58, 128, !dbg !15551
  store i32 %sub59, i32* %u, align 4, !dbg !15548
  call void @llvm.dbg.declare(metadata i32* %v, metadata !15552, metadata !94), !dbg !15553
  %50 = load i32, i32* %x, align 4, !dbg !15554
  %idxprom60 = sext i32 %50 to i64, !dbg !15555
  %51 = load i8*, i8** %src2, align 8, !dbg !15555
  %arrayidx61 = getelementptr inbounds i8, i8* %51, i64 %idxprom60, !dbg !15555
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !15555
  %conv62 = zext i8 %52 to i32, !dbg !15555
  %sub63 = sub nsw i32 %conv62, 128, !dbg !15556
  store i32 %sub63, i32* %v, align 4, !dbg !15553
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !15557, metadata !94), !dbg !15558
  %53 = load i32, i32* %cyu, align 4, !dbg !15559
  %54 = load i32, i32* %u, align 4, !dbg !15560
  %mul64 = mul nsw i32 %53, %54, !dbg !15561
  %55 = load i32, i32* %cyv, align 4, !dbg !15562
  %56 = load i32, i32* %v, align 4, !dbg !15563
  %mul65 = mul nsw i32 %55, %56, !dbg !15564
  %add66 = add nsw i32 %mul64, %mul65, !dbg !15565
  %add67 = add nsw i32 %add66, 512, !dbg !15566
  %57 = load i32, i32* %y_off_out, align 4, !dbg !15567
  %add68 = add nsw i32 %add67, %57, !dbg !15568
  store i32 %add68, i32* %uv_val, align 4, !dbg !15558
  %58 = load i32, i32* %cyy, align 4, !dbg !15569
  %59 = load i32, i32* %y00, align 4, !dbg !15570
  %mul69 = mul nsw i32 %58, %59, !dbg !15571
  %60 = load i32, i32* %uv_val, align 4, !dbg !15572
  %add70 = add nsw i32 %mul69, %60, !dbg !15573
  %shr71 = ashr i32 %add70, 10, !dbg !15574
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !15575
  store i32 12, i32* %p.addr.i, align 4, !dbg !15575
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !15576
  %62 = load i32, i32* %p.addr.i, align 4, !dbg !15577
  %shl.i = shl i32 1, %62, !dbg !15578
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !15579
  %neg.i = xor i32 %sub.i, -1, !dbg !15580
  %and.i = and i32 %61, %neg.i, !dbg !15581
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !15581
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !15582

if.then.i:                                        ; preds = %for.body46
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !15583
  %neg1.i = xor i32 %63, -1, !dbg !15584
  %shr.i = ashr i32 %neg1.i, 31, !dbg !15585
  %64 = load i32, i32* %p.addr.i, align 4, !dbg !15586
  %shl2.i = shl i32 1, %64, !dbg !15587
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !15588
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !15589
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !15590
  br label %av_clip_uintp2_c.exit, !dbg !15590

if.else.i:                                        ; preds = %for.body46
  %65 = load i32, i32* %a.addr.i, align 4, !dbg !15591
  store i32 %65, i32* %retval.i, align 4, !dbg !15592
  br label %av_clip_uintp2_c.exit, !dbg !15592

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %66 = load i32, i32* %retval.i, align 4, !dbg !15593
  %conv72 = trunc i32 %66 to i16, !dbg !15575
  %67 = load i32, i32* %x, align 4, !dbg !15594
  %shl73 = shl i32 %67, 1, !dbg !15595
  %idxprom74 = sext i32 %shl73 to i64, !dbg !15596
  %68 = load i16*, i16** %dst0, align 8, !dbg !15596
  %arrayidx75 = getelementptr inbounds i16, i16* %68, i64 %idxprom74, !dbg !15596
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !15597
  %69 = load i32, i32* %cyy, align 4, !dbg !15598
  %70 = load i32, i32* %y01, align 4, !dbg !15599
  %mul76 = mul nsw i32 %69, %70, !dbg !15600
  %71 = load i32, i32* %uv_val, align 4, !dbg !15601
  %add77 = add nsw i32 %mul76, %71, !dbg !15602
  %shr78 = ashr i32 %add77, 10, !dbg !15603
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !15604
  store i32 12, i32* %p.addr.i158, align 4, !dbg !15604
  %72 = load i32, i32* %a.addr.i157, align 4, !dbg !15605
  %73 = load i32, i32* %p.addr.i158, align 4, !dbg !15606
  %shl.i159 = shl i32 1, %73, !dbg !15607
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !15608
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !15609
  %and.i162 = and i32 %72, %neg.i161, !dbg !15610
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !15610
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !15611

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i157, align 4, !dbg !15612
  %neg1.i164 = xor i32 %74, -1, !dbg !15613
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !15614
  %75 = load i32, i32* %p.addr.i158, align 4, !dbg !15615
  %shl2.i166 = shl i32 1, %75, !dbg !15616
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !15617
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !15618
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !15619
  br label %av_clip_uintp2_c.exit171, !dbg !15619

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %76 = load i32, i32* %a.addr.i157, align 4, !dbg !15620
  store i32 %76, i32* %retval.i156, align 4, !dbg !15621
  br label %av_clip_uintp2_c.exit171, !dbg !15621

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %77 = load i32, i32* %retval.i156, align 4, !dbg !15622
  %conv80 = trunc i32 %77 to i16, !dbg !15604
  %78 = load i32, i32* %x, align 4, !dbg !15623
  %mul81 = mul nsw i32 %78, 2, !dbg !15624
  %add82 = add nsw i32 %mul81, 1, !dbg !15625
  %idxprom83 = sext i32 %add82 to i64, !dbg !15626
  %79 = load i16*, i16** %dst0, align 8, !dbg !15626
  %arrayidx84 = getelementptr inbounds i16, i16* %79, i64 %idxprom83, !dbg !15626
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !15627
  %80 = load i32, i32* %u, align 4, !dbg !15628
  %81 = load i32, i32* %cuu, align 4, !dbg !15629
  %mul85 = mul nsw i32 %80, %81, !dbg !15630
  %82 = load i32, i32* %v, align 4, !dbg !15631
  %83 = load i32, i32* %cuv, align 4, !dbg !15632
  %mul86 = mul nsw i32 %82, %83, !dbg !15633
  %add87 = add nsw i32 %mul85, %mul86, !dbg !15634
  %add88 = add nsw i32 %add87, 2097664, !dbg !15635
  %shr89 = ashr i32 %add88, 10, !dbg !15636
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !15637
  store i32 12, i32* %p.addr.i142, align 4, !dbg !15637
  %84 = load i32, i32* %a.addr.i141, align 4, !dbg !15638
  %85 = load i32, i32* %p.addr.i142, align 4, !dbg !15639
  %shl.i143 = shl i32 1, %85, !dbg !15640
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !15641
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !15642
  %and.i146 = and i32 %84, %neg.i145, !dbg !15643
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !15643
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !15644

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %86 = load i32, i32* %a.addr.i141, align 4, !dbg !15645
  %neg1.i148 = xor i32 %86, -1, !dbg !15646
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !15647
  %87 = load i32, i32* %p.addr.i142, align 4, !dbg !15648
  %shl2.i150 = shl i32 1, %87, !dbg !15649
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !15650
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !15651
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !15652
  br label %av_clip_uintp2_c.exit155, !dbg !15652

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %88 = load i32, i32* %a.addr.i141, align 4, !dbg !15653
  store i32 %88, i32* %retval.i140, align 4, !dbg !15654
  br label %av_clip_uintp2_c.exit155, !dbg !15654

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %89 = load i32, i32* %retval.i140, align 4, !dbg !15655
  %conv91 = trunc i32 %89 to i16, !dbg !15637
  %90 = load i32, i32* %x, align 4, !dbg !15656
  %idxprom92 = sext i32 %90 to i64, !dbg !15657
  %91 = load i16*, i16** %dst1, align 8, !dbg !15657
  %arrayidx93 = getelementptr inbounds i16, i16* %91, i64 %idxprom92, !dbg !15657
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !15658
  %92 = load i32, i32* %u, align 4, !dbg !15659
  %93 = load i32, i32* %cvu, align 4, !dbg !15660
  %mul94 = mul nsw i32 %92, %93, !dbg !15661
  %94 = load i32, i32* %v, align 4, !dbg !15662
  %95 = load i32, i32* %cvv, align 4, !dbg !15663
  %mul95 = mul nsw i32 %94, %95, !dbg !15664
  %add96 = add nsw i32 %mul94, %mul95, !dbg !15665
  %add97 = add nsw i32 %add96, 2097664, !dbg !15666
  %shr98 = ashr i32 %add97, 10, !dbg !15667
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !15668
  store i32 12, i32* %p.addr.i126, align 4, !dbg !15668
  %96 = load i32, i32* %a.addr.i125, align 4, !dbg !15669
  %97 = load i32, i32* %p.addr.i126, align 4, !dbg !15670
  %shl.i127 = shl i32 1, %97, !dbg !15671
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !15672
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !15673
  %and.i130 = and i32 %96, %neg.i129, !dbg !15674
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !15674
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !15675

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %98 = load i32, i32* %a.addr.i125, align 4, !dbg !15676
  %neg1.i132 = xor i32 %98, -1, !dbg !15677
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !15678
  %99 = load i32, i32* %p.addr.i126, align 4, !dbg !15679
  %shl2.i134 = shl i32 1, %99, !dbg !15680
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !15681
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !15682
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !15683
  br label %av_clip_uintp2_c.exit139, !dbg !15683

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %100 = load i32, i32* %a.addr.i125, align 4, !dbg !15684
  store i32 %100, i32* %retval.i124, align 4, !dbg !15685
  br label %av_clip_uintp2_c.exit139, !dbg !15685

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %101 = load i32, i32* %retval.i124, align 4, !dbg !15686
  %conv100 = trunc i32 %101 to i16, !dbg !15668
  %102 = load i32, i32* %x, align 4, !dbg !15687
  %idxprom101 = sext i32 %102 to i64, !dbg !15688
  %103 = load i16*, i16** %dst2, align 8, !dbg !15688
  %arrayidx102 = getelementptr inbounds i16, i16* %103, i64 %idxprom101, !dbg !15688
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !15689
  br label %for.inc, !dbg !15690

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %104 = load i32, i32* %x, align 4, !dbg !15691
  %inc = add nsw i32 %104, 1, !dbg !15691
  store i32 %inc, i32* %x, align 4, !dbg !15691
  br label %for.cond43, !dbg !15693, !llvm.loop !15694

for.end:                                          ; preds = %for.cond43
  %105 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15696
  %arrayidx103 = getelementptr inbounds i64, i64* %105, i64 0, !dbg !15696
  %106 = load i64, i64* %arrayidx103, align 8, !dbg !15696
  %mul104 = mul nsw i64 %106, 1, !dbg !15697
  %div = udiv i64 %mul104, 2, !dbg !15698
  %107 = load i16*, i16** %dst0, align 8, !dbg !15699
  %add.ptr = getelementptr inbounds i16, i16* %107, i64 %div, !dbg !15699
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !15699
  %108 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15700
  %arrayidx105 = getelementptr inbounds i64, i64* %108, i64 1, !dbg !15700
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !15700
  %div106 = udiv i64 %109, 2, !dbg !15701
  %110 = load i16*, i16** %dst1, align 8, !dbg !15702
  %add.ptr107 = getelementptr inbounds i16, i16* %110, i64 %div106, !dbg !15702
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !15702
  %111 = load i64*, i64** %dst_stride.addr, align 8, !dbg !15703
  %arrayidx108 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !15703
  %112 = load i64, i64* %arrayidx108, align 8, !dbg !15703
  %div109 = udiv i64 %112, 2, !dbg !15704
  %113 = load i16*, i16** %dst2, align 8, !dbg !15705
  %add.ptr110 = getelementptr inbounds i16, i16* %113, i64 %div109, !dbg !15705
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !15705
  %114 = load i64*, i64** %src_stride.addr, align 8, !dbg !15706
  %arrayidx111 = getelementptr inbounds i64, i64* %114, i64 0, !dbg !15706
  %115 = load i64, i64* %arrayidx111, align 8, !dbg !15706
  %mul112 = mul nsw i64 %115, 1, !dbg !15707
  %div113 = udiv i64 %mul112, 1, !dbg !15708
  %116 = load i8*, i8** %src0, align 8, !dbg !15709
  %add.ptr114 = getelementptr inbounds i8, i8* %116, i64 %div113, !dbg !15709
  store i8* %add.ptr114, i8** %src0, align 8, !dbg !15709
  %117 = load i64*, i64** %src_stride.addr, align 8, !dbg !15710
  %arrayidx115 = getelementptr inbounds i64, i64* %117, i64 1, !dbg !15710
  %118 = load i64, i64* %arrayidx115, align 8, !dbg !15710
  %div116 = udiv i64 %118, 1, !dbg !15711
  %119 = load i8*, i8** %src1, align 8, !dbg !15712
  %add.ptr117 = getelementptr inbounds i8, i8* %119, i64 %div116, !dbg !15712
  store i8* %add.ptr117, i8** %src1, align 8, !dbg !15712
  %120 = load i64*, i64** %src_stride.addr, align 8, !dbg !15713
  %arrayidx118 = getelementptr inbounds i64, i64* %120, i64 2, !dbg !15713
  %121 = load i64, i64* %arrayidx118, align 8, !dbg !15713
  %div119 = udiv i64 %121, 1, !dbg !15714
  %122 = load i8*, i8** %src2, align 8, !dbg !15715
  %add.ptr120 = getelementptr inbounds i8, i8* %122, i64 %div119, !dbg !15715
  store i8* %add.ptr120, i8** %src2, align 8, !dbg !15715
  br label %for.inc121, !dbg !15716

for.inc121:                                       ; preds = %for.end
  %123 = load i32, i32* %y, align 4, !dbg !15717
  %inc122 = add nsw i32 %123, 1, !dbg !15717
  store i32 %inc122, i32* %y, align 4, !dbg !15717
  br label %for.cond, !dbg !15719, !llvm.loop !15720

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !15722
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p8to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !15723 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !15724
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !15732
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !15733
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !15735
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !15736
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !15738
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !15739
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !15741
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !15742
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !15744
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !15745
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !15747
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i8**, align 8
  %src0 = alloca i8*, align 8
  %src1 = alloca i8*, align 8
  %src2 = alloca i8*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !15748, metadata !94), !dbg !15749
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !15750, metadata !94), !dbg !15751
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !15752, metadata !94), !dbg !15753
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !15754, metadata !94), !dbg !15755
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !15756, metadata !94), !dbg !15757
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !15758, metadata !94), !dbg !15759
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !15760, metadata !94), !dbg !15761
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !15762, metadata !94), !dbg !15763
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !15764, metadata !94), !dbg !15765
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !15766
  %1 = bitcast i8** %0 to i16**, !dbg !15767
  store i16** %1, i16*** %dst, align 8, !dbg !15765
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !15768, metadata !94), !dbg !15769
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !15770
  store i8** %2, i8*** %src, align 8, !dbg !15769
  call void @llvm.dbg.declare(metadata i8** %src0, metadata !15771, metadata !94), !dbg !15772
  %3 = load i8**, i8*** %src, align 8, !dbg !15773
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 0, !dbg !15773
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !15773
  store i8* %4, i8** %src0, align 8, !dbg !15772
  call void @llvm.dbg.declare(metadata i8** %src1, metadata !15774, metadata !94), !dbg !15775
  %5 = load i8**, i8*** %src, align 8, !dbg !15776
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !15776
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !15776
  store i8* %6, i8** %src1, align 8, !dbg !15775
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !15777, metadata !94), !dbg !15778
  %7 = load i8**, i8*** %src, align 8, !dbg !15779
  %arrayidx2 = getelementptr inbounds i8*, i8** %7, i64 2, !dbg !15779
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !15779
  store i8* %8, i8** %src2, align 8, !dbg !15778
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !15780, metadata !94), !dbg !15781
  %9 = load i16**, i16*** %dst, align 8, !dbg !15782
  %arrayidx3 = getelementptr inbounds i16*, i16** %9, i64 0, !dbg !15782
  %10 = load i16*, i16** %arrayidx3, align 8, !dbg !15782
  store i16* %10, i16** %dst0, align 8, !dbg !15781
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !15783, metadata !94), !dbg !15784
  %11 = load i16**, i16*** %dst, align 8, !dbg !15785
  %arrayidx4 = getelementptr inbounds i16*, i16** %11, i64 1, !dbg !15785
  %12 = load i16*, i16** %arrayidx4, align 8, !dbg !15785
  store i16* %12, i16** %dst1, align 8, !dbg !15784
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !15786, metadata !94), !dbg !15787
  %13 = load i16**, i16*** %dst, align 8, !dbg !15788
  %arrayidx5 = getelementptr inbounds i16*, i16** %13, i64 2, !dbg !15788
  %14 = load i16*, i16** %arrayidx5, align 8, !dbg !15788
  store i16* %14, i16** %dst2, align 8, !dbg !15787
  call void @llvm.dbg.declare(metadata i32* %y, metadata !15789, metadata !94), !dbg !15790
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15791, metadata !94), !dbg !15792
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !15793, metadata !94), !dbg !15794
  store i32 10, i32* %sh, align 4, !dbg !15794
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !15795, metadata !94), !dbg !15796
  store i32 512, i32* %rnd, align 4, !dbg !15796
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !15797, metadata !94), !dbg !15798
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15799
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !15799
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !15799
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !15799
  %conv = sext i16 %16 to i32, !dbg !15799
  store i32 %conv, i32* %y_off_in, align 4, !dbg !15798
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !15800, metadata !94), !dbg !15801
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !15802
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !15802
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !15802
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !15802
  %conv10 = sext i16 %18 to i32, !dbg !15802
  %shl = shl i32 %conv10, 10, !dbg !15803
  store i32 %shl, i32* %y_off_out, align 4, !dbg !15801
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !15804, metadata !94), !dbg !15805
  store i32 128, i32* %uv_off_in, align 4, !dbg !15805
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !15806, metadata !94), !dbg !15807
  store i32 2097664, i32* %uv_off_out, align 4, !dbg !15807
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !15808, metadata !94), !dbg !15809
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15810
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !15810
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !15810
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !15810
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15810
  %conv14 = sext i16 %20 to i32, !dbg !15810
  store i32 %conv14, i32* %cyy, align 4, !dbg !15809
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !15811, metadata !94), !dbg !15812
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15813
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !15813
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !15813
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !15813
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !15813
  %conv18 = sext i16 %22 to i32, !dbg !15813
  store i32 %conv18, i32* %cyu, align 4, !dbg !15812
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !15814, metadata !94), !dbg !15815
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15816
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !15816
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !15816
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !15816
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !15816
  %conv22 = sext i16 %24 to i32, !dbg !15816
  store i32 %conv22, i32* %cyv, align 4, !dbg !15815
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !15817, metadata !94), !dbg !15818
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15819
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !15819
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !15819
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !15819
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !15819
  %conv26 = sext i16 %26 to i32, !dbg !15819
  store i32 %conv26, i32* %cuu, align 4, !dbg !15818
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !15820, metadata !94), !dbg !15821
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15822
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !15822
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !15822
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !15822
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !15822
  %conv30 = sext i16 %28 to i32, !dbg !15822
  store i32 %conv30, i32* %cuv, align 4, !dbg !15821
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !15823, metadata !94), !dbg !15824
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15825
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !15825
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !15825
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !15825
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !15825
  %conv34 = sext i16 %30 to i32, !dbg !15825
  store i32 %conv34, i32* %cvu, align 4, !dbg !15824
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !15826, metadata !94), !dbg !15827
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !15828
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !15828
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !15828
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !15828
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !15828
  %conv38 = sext i16 %32 to i32, !dbg !15828
  store i32 %conv38, i32* %cvv, align 4, !dbg !15827
  %33 = load i32, i32* %w.addr, align 4, !dbg !15829
  %add = add nsw i32 %33, 2, !dbg !15830
  %sub = sub nsw i32 %add, 1, !dbg !15831
  %shr = ashr i32 %sub, 1, !dbg !15832
  store i32 %shr, i32* %w.addr, align 4, !dbg !15833
  %34 = load i32, i32* %h.addr, align 4, !dbg !15834
  %add39 = add nsw i32 %34, 2, !dbg !15835
  %sub40 = sub nsw i32 %add39, 1, !dbg !15836
  %shr41 = ashr i32 %sub40, 1, !dbg !15837
  store i32 %shr41, i32* %h.addr, align 4, !dbg !15838
  store i32 0, i32* %y, align 4, !dbg !15839
  br label %for.cond, !dbg !15840

for.cond:                                         ; preds = %for.inc162, %entry
  %35 = load i32, i32* %y, align 4, !dbg !15841
  %36 = load i32, i32* %h.addr, align 4, !dbg !15843
  %cmp = icmp slt i32 %35, %36, !dbg !15844
  br i1 %cmp, label %for.body, label %for.end164, !dbg !15845

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !15846
  br label %for.cond43, !dbg !15847

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !15848
  %38 = load i32, i32* %w.addr, align 4, !dbg !15850
  %cmp44 = icmp slt i32 %37, %38, !dbg !15851
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !15852

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !15853, metadata !94), !dbg !15854
  %39 = load i32, i32* %x, align 4, !dbg !15855
  %shl47 = shl i32 %39, 1, !dbg !15856
  %idxprom = sext i32 %shl47 to i64, !dbg !15857
  %40 = load i8*, i8** %src0, align 8, !dbg !15857
  %arrayidx48 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !15857
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !15857
  %conv49 = zext i8 %41 to i32, !dbg !15857
  %42 = load i32, i32* %y_off_in, align 4, !dbg !15858
  %sub50 = sub nsw i32 %conv49, %42, !dbg !15859
  store i32 %sub50, i32* %y00, align 4, !dbg !15854
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !15860, metadata !94), !dbg !15861
  %43 = load i32, i32* %x, align 4, !dbg !15862
  %mul = mul nsw i32 2, %43, !dbg !15863
  %add51 = add nsw i32 %mul, 1, !dbg !15864
  %idxprom52 = sext i32 %add51 to i64, !dbg !15865
  %44 = load i8*, i8** %src0, align 8, !dbg !15865
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 %idxprom52, !dbg !15865
  %45 = load i8, i8* %arrayidx53, align 1, !dbg !15865
  %conv54 = zext i8 %45 to i32, !dbg !15865
  %46 = load i32, i32* %y_off_in, align 4, !dbg !15866
  %sub55 = sub nsw i32 %conv54, %46, !dbg !15867
  store i32 %sub55, i32* %y01, align 4, !dbg !15861
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !15868, metadata !94), !dbg !15869
  %47 = load i64*, i64** %src_stride.addr, align 8, !dbg !15870
  %arrayidx56 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !15870
  %48 = load i64, i64* %arrayidx56, align 8, !dbg !15870
  %div = udiv i64 %48, 1, !dbg !15871
  %49 = load i32, i32* %x, align 4, !dbg !15872
  %mul57 = mul nsw i32 2, %49, !dbg !15873
  %conv58 = sext i32 %mul57 to i64, !dbg !15874
  %add59 = add i64 %div, %conv58, !dbg !15875
  %50 = load i8*, i8** %src0, align 8, !dbg !15876
  %arrayidx60 = getelementptr inbounds i8, i8* %50, i64 %add59, !dbg !15876
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !15876
  %conv61 = zext i8 %51 to i32, !dbg !15876
  %52 = load i32, i32* %y_off_in, align 4, !dbg !15877
  %sub62 = sub nsw i32 %conv61, %52, !dbg !15878
  store i32 %sub62, i32* %y10, align 4, !dbg !15869
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !15879, metadata !94), !dbg !15880
  %53 = load i64*, i64** %src_stride.addr, align 8, !dbg !15881
  %arrayidx63 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !15881
  %54 = load i64, i64* %arrayidx63, align 8, !dbg !15881
  %div64 = udiv i64 %54, 1, !dbg !15882
  %55 = load i32, i32* %x, align 4, !dbg !15883
  %mul65 = mul nsw i32 2, %55, !dbg !15884
  %conv66 = sext i32 %mul65 to i64, !dbg !15885
  %add67 = add i64 %div64, %conv66, !dbg !15886
  %add68 = add i64 %add67, 1, !dbg !15887
  %56 = load i8*, i8** %src0, align 8, !dbg !15888
  %arrayidx69 = getelementptr inbounds i8, i8* %56, i64 %add68, !dbg !15888
  %57 = load i8, i8* %arrayidx69, align 1, !dbg !15888
  %conv70 = zext i8 %57 to i32, !dbg !15888
  %58 = load i32, i32* %y_off_in, align 4, !dbg !15889
  %sub71 = sub nsw i32 %conv70, %58, !dbg !15890
  store i32 %sub71, i32* %y11, align 4, !dbg !15880
  call void @llvm.dbg.declare(metadata i32* %u, metadata !15891, metadata !94), !dbg !15892
  %59 = load i32, i32* %x, align 4, !dbg !15893
  %idxprom72 = sext i32 %59 to i64, !dbg !15894
  %60 = load i8*, i8** %src1, align 8, !dbg !15894
  %arrayidx73 = getelementptr inbounds i8, i8* %60, i64 %idxprom72, !dbg !15894
  %61 = load i8, i8* %arrayidx73, align 1, !dbg !15894
  %conv74 = zext i8 %61 to i32, !dbg !15894
  %sub75 = sub nsw i32 %conv74, 128, !dbg !15895
  store i32 %sub75, i32* %u, align 4, !dbg !15892
  call void @llvm.dbg.declare(metadata i32* %v, metadata !15896, metadata !94), !dbg !15897
  %62 = load i32, i32* %x, align 4, !dbg !15898
  %idxprom76 = sext i32 %62 to i64, !dbg !15899
  %63 = load i8*, i8** %src2, align 8, !dbg !15899
  %arrayidx77 = getelementptr inbounds i8, i8* %63, i64 %idxprom76, !dbg !15899
  %64 = load i8, i8* %arrayidx77, align 1, !dbg !15899
  %conv78 = zext i8 %64 to i32, !dbg !15899
  %sub79 = sub nsw i32 %conv78, 128, !dbg !15900
  store i32 %sub79, i32* %v, align 4, !dbg !15897
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !15901, metadata !94), !dbg !15902
  %65 = load i32, i32* %cyu, align 4, !dbg !15903
  %66 = load i32, i32* %u, align 4, !dbg !15904
  %mul80 = mul nsw i32 %65, %66, !dbg !15905
  %67 = load i32, i32* %cyv, align 4, !dbg !15906
  %68 = load i32, i32* %v, align 4, !dbg !15907
  %mul81 = mul nsw i32 %67, %68, !dbg !15908
  %add82 = add nsw i32 %mul80, %mul81, !dbg !15909
  %add83 = add nsw i32 %add82, 512, !dbg !15910
  %69 = load i32, i32* %y_off_out, align 4, !dbg !15911
  %add84 = add nsw i32 %add83, %69, !dbg !15912
  store i32 %add84, i32* %uv_val, align 4, !dbg !15902
  %70 = load i32, i32* %cyy, align 4, !dbg !15913
  %71 = load i32, i32* %y00, align 4, !dbg !15914
  %mul85 = mul nsw i32 %70, %71, !dbg !15915
  %72 = load i32, i32* %uv_val, align 4, !dbg !15916
  %add86 = add nsw i32 %mul85, %72, !dbg !15917
  %shr87 = ashr i32 %add86, 10, !dbg !15918
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !15919
  store i32 12, i32* %p.addr.i, align 4, !dbg !15919
  %73 = load i32, i32* %a.addr.i, align 4, !dbg !15920
  %74 = load i32, i32* %p.addr.i, align 4, !dbg !15921
  %shl.i = shl i32 1, %74, !dbg !15922
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !15923
  %neg.i = xor i32 %sub.i, -1, !dbg !15924
  %and.i = and i32 %73, %neg.i, !dbg !15925
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !15925
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !15926

if.then.i:                                        ; preds = %for.body46
  %75 = load i32, i32* %a.addr.i, align 4, !dbg !15927
  %neg1.i = xor i32 %75, -1, !dbg !15928
  %shr.i = ashr i32 %neg1.i, 31, !dbg !15929
  %76 = load i32, i32* %p.addr.i, align 4, !dbg !15930
  %shl2.i = shl i32 1, %76, !dbg !15931
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !15932
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !15933
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !15934
  br label %av_clip_uintp2_c.exit, !dbg !15934

if.else.i:                                        ; preds = %for.body46
  %77 = load i32, i32* %a.addr.i, align 4, !dbg !15935
  store i32 %77, i32* %retval.i, align 4, !dbg !15936
  br label %av_clip_uintp2_c.exit, !dbg !15936

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %78 = load i32, i32* %retval.i, align 4, !dbg !15937
  %conv88 = trunc i32 %78 to i16, !dbg !15919
  %79 = load i32, i32* %x, align 4, !dbg !15938
  %shl89 = shl i32 %79, 1, !dbg !15939
  %idxprom90 = sext i32 %shl89 to i64, !dbg !15940
  %80 = load i16*, i16** %dst0, align 8, !dbg !15940
  %arrayidx91 = getelementptr inbounds i16, i16* %80, i64 %idxprom90, !dbg !15940
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !15941
  %81 = load i32, i32* %cyy, align 4, !dbg !15942
  %82 = load i32, i32* %y01, align 4, !dbg !15943
  %mul92 = mul nsw i32 %81, %82, !dbg !15944
  %83 = load i32, i32* %uv_val, align 4, !dbg !15945
  %add93 = add nsw i32 %mul92, %83, !dbg !15946
  %shr94 = ashr i32 %add93, 10, !dbg !15947
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !15948
  store i32 12, i32* %p.addr.i231, align 4, !dbg !15948
  %84 = load i32, i32* %a.addr.i230, align 4, !dbg !15949
  %85 = load i32, i32* %p.addr.i231, align 4, !dbg !15950
  %shl.i232 = shl i32 1, %85, !dbg !15951
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !15952
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !15953
  %and.i235 = and i32 %84, %neg.i234, !dbg !15954
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !15954
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !15955

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %86 = load i32, i32* %a.addr.i230, align 4, !dbg !15956
  %neg1.i237 = xor i32 %86, -1, !dbg !15957
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !15958
  %87 = load i32, i32* %p.addr.i231, align 4, !dbg !15959
  %shl2.i239 = shl i32 1, %87, !dbg !15960
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !15961
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !15962
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !15963
  br label %av_clip_uintp2_c.exit244, !dbg !15963

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %88 = load i32, i32* %a.addr.i230, align 4, !dbg !15964
  store i32 %88, i32* %retval.i229, align 4, !dbg !15965
  br label %av_clip_uintp2_c.exit244, !dbg !15965

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %89 = load i32, i32* %retval.i229, align 4, !dbg !15966
  %conv96 = trunc i32 %89 to i16, !dbg !15948
  %90 = load i32, i32* %x, align 4, !dbg !15967
  %mul97 = mul nsw i32 %90, 2, !dbg !15968
  %add98 = add nsw i32 %mul97, 1, !dbg !15969
  %idxprom99 = sext i32 %add98 to i64, !dbg !15970
  %91 = load i16*, i16** %dst0, align 8, !dbg !15970
  %arrayidx100 = getelementptr inbounds i16, i16* %91, i64 %idxprom99, !dbg !15970
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !15971
  %92 = load i32, i32* %cyy, align 4, !dbg !15972
  %93 = load i32, i32* %y10, align 4, !dbg !15973
  %mul101 = mul nsw i32 %92, %93, !dbg !15974
  %94 = load i32, i32* %uv_val, align 4, !dbg !15975
  %add102 = add nsw i32 %mul101, %94, !dbg !15976
  %shr103 = ashr i32 %add102, 10, !dbg !15977
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !15978
  store i32 12, i32* %p.addr.i215, align 4, !dbg !15978
  %95 = load i32, i32* %a.addr.i214, align 4, !dbg !15979
  %96 = load i32, i32* %p.addr.i215, align 4, !dbg !15980
  %shl.i216 = shl i32 1, %96, !dbg !15981
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !15982
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !15983
  %and.i219 = and i32 %95, %neg.i218, !dbg !15984
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !15984
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !15985

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %97 = load i32, i32* %a.addr.i214, align 4, !dbg !15986
  %neg1.i221 = xor i32 %97, -1, !dbg !15987
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !15988
  %98 = load i32, i32* %p.addr.i215, align 4, !dbg !15989
  %shl2.i223 = shl i32 1, %98, !dbg !15990
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !15991
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !15992
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !15993
  br label %av_clip_uintp2_c.exit228, !dbg !15993

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %99 = load i32, i32* %a.addr.i214, align 4, !dbg !15994
  store i32 %99, i32* %retval.i213, align 4, !dbg !15995
  br label %av_clip_uintp2_c.exit228, !dbg !15995

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %100 = load i32, i32* %retval.i213, align 4, !dbg !15996
  %conv105 = trunc i32 %100 to i16, !dbg !15978
  %101 = load i32, i32* %x, align 4, !dbg !15997
  %mul106 = mul nsw i32 %101, 2, !dbg !15998
  %add107 = add nsw i32 %mul106, 0, !dbg !15999
  %conv108 = sext i32 %add107 to i64, !dbg !15997
  %102 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16000
  %arrayidx109 = getelementptr inbounds i64, i64* %102, i64 0, !dbg !16000
  %103 = load i64, i64* %arrayidx109, align 8, !dbg !16000
  %div110 = udiv i64 %103, 2, !dbg !16001
  %add111 = add i64 %conv108, %div110, !dbg !16002
  %104 = load i16*, i16** %dst0, align 8, !dbg !16003
  %arrayidx112 = getelementptr inbounds i16, i16* %104, i64 %add111, !dbg !16003
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !16004
  %105 = load i32, i32* %cyy, align 4, !dbg !16005
  %106 = load i32, i32* %y11, align 4, !dbg !16006
  %mul113 = mul nsw i32 %105, %106, !dbg !16007
  %107 = load i32, i32* %uv_val, align 4, !dbg !16008
  %add114 = add nsw i32 %mul113, %107, !dbg !16009
  %shr115 = ashr i32 %add114, 10, !dbg !16010
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !16011
  store i32 12, i32* %p.addr.i199, align 4, !dbg !16011
  %108 = load i32, i32* %a.addr.i198, align 4, !dbg !16012
  %109 = load i32, i32* %p.addr.i199, align 4, !dbg !16013
  %shl.i200 = shl i32 1, %109, !dbg !16014
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !16015
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !16016
  %and.i203 = and i32 %108, %neg.i202, !dbg !16017
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !16017
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !16018

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %110 = load i32, i32* %a.addr.i198, align 4, !dbg !16019
  %neg1.i205 = xor i32 %110, -1, !dbg !16020
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !16021
  %111 = load i32, i32* %p.addr.i199, align 4, !dbg !16022
  %shl2.i207 = shl i32 1, %111, !dbg !16023
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !16024
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !16025
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !16026
  br label %av_clip_uintp2_c.exit212, !dbg !16026

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %112 = load i32, i32* %a.addr.i198, align 4, !dbg !16027
  store i32 %112, i32* %retval.i197, align 4, !dbg !16028
  br label %av_clip_uintp2_c.exit212, !dbg !16028

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %113 = load i32, i32* %retval.i197, align 4, !dbg !16029
  %conv117 = trunc i32 %113 to i16, !dbg !16011
  %114 = load i32, i32* %x, align 4, !dbg !16030
  %mul118 = mul nsw i32 %114, 2, !dbg !16031
  %add119 = add nsw i32 %mul118, 1, !dbg !16032
  %conv120 = sext i32 %add119 to i64, !dbg !16030
  %115 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16033
  %arrayidx121 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !16033
  %116 = load i64, i64* %arrayidx121, align 8, !dbg !16033
  %div122 = udiv i64 %116, 2, !dbg !16034
  %add123 = add i64 %conv120, %div122, !dbg !16035
  %117 = load i16*, i16** %dst0, align 8, !dbg !16036
  %arrayidx124 = getelementptr inbounds i16, i16* %117, i64 %add123, !dbg !16036
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !16037
  %118 = load i32, i32* %u, align 4, !dbg !16038
  %119 = load i32, i32* %cuu, align 4, !dbg !16039
  %mul125 = mul nsw i32 %118, %119, !dbg !16040
  %120 = load i32, i32* %v, align 4, !dbg !16041
  %121 = load i32, i32* %cuv, align 4, !dbg !16042
  %mul126 = mul nsw i32 %120, %121, !dbg !16043
  %add127 = add nsw i32 %mul125, %mul126, !dbg !16044
  %add128 = add nsw i32 %add127, 2097664, !dbg !16045
  %shr129 = ashr i32 %add128, 10, !dbg !16046
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !16047
  store i32 12, i32* %p.addr.i183, align 4, !dbg !16047
  %122 = load i32, i32* %a.addr.i182, align 4, !dbg !16048
  %123 = load i32, i32* %p.addr.i183, align 4, !dbg !16049
  %shl.i184 = shl i32 1, %123, !dbg !16050
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !16051
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !16052
  %and.i187 = and i32 %122, %neg.i186, !dbg !16053
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !16053
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !16054

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %124 = load i32, i32* %a.addr.i182, align 4, !dbg !16055
  %neg1.i189 = xor i32 %124, -1, !dbg !16056
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !16057
  %125 = load i32, i32* %p.addr.i183, align 4, !dbg !16058
  %shl2.i191 = shl i32 1, %125, !dbg !16059
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !16060
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !16061
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !16062
  br label %av_clip_uintp2_c.exit196, !dbg !16062

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %126 = load i32, i32* %a.addr.i182, align 4, !dbg !16063
  store i32 %126, i32* %retval.i181, align 4, !dbg !16064
  br label %av_clip_uintp2_c.exit196, !dbg !16064

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %127 = load i32, i32* %retval.i181, align 4, !dbg !16065
  %conv131 = trunc i32 %127 to i16, !dbg !16047
  %128 = load i32, i32* %x, align 4, !dbg !16066
  %idxprom132 = sext i32 %128 to i64, !dbg !16067
  %129 = load i16*, i16** %dst1, align 8, !dbg !16067
  %arrayidx133 = getelementptr inbounds i16, i16* %129, i64 %idxprom132, !dbg !16067
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !16068
  %130 = load i32, i32* %u, align 4, !dbg !16069
  %131 = load i32, i32* %cvu, align 4, !dbg !16070
  %mul134 = mul nsw i32 %130, %131, !dbg !16071
  %132 = load i32, i32* %v, align 4, !dbg !16072
  %133 = load i32, i32* %cvv, align 4, !dbg !16073
  %mul135 = mul nsw i32 %132, %133, !dbg !16074
  %add136 = add nsw i32 %mul134, %mul135, !dbg !16075
  %add137 = add nsw i32 %add136, 2097664, !dbg !16076
  %shr138 = ashr i32 %add137, 10, !dbg !16077
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !16078
  store i32 12, i32* %p.addr.i167, align 4, !dbg !16078
  %134 = load i32, i32* %a.addr.i166, align 4, !dbg !16079
  %135 = load i32, i32* %p.addr.i167, align 4, !dbg !16080
  %shl.i168 = shl i32 1, %135, !dbg !16081
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !16082
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !16083
  %and.i171 = and i32 %134, %neg.i170, !dbg !16084
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !16084
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !16085

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %136 = load i32, i32* %a.addr.i166, align 4, !dbg !16086
  %neg1.i173 = xor i32 %136, -1, !dbg !16087
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !16088
  %137 = load i32, i32* %p.addr.i167, align 4, !dbg !16089
  %shl2.i175 = shl i32 1, %137, !dbg !16090
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !16091
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !16092
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !16093
  br label %av_clip_uintp2_c.exit180, !dbg !16093

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %138 = load i32, i32* %a.addr.i166, align 4, !dbg !16094
  store i32 %138, i32* %retval.i165, align 4, !dbg !16095
  br label %av_clip_uintp2_c.exit180, !dbg !16095

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %139 = load i32, i32* %retval.i165, align 4, !dbg !16096
  %conv140 = trunc i32 %139 to i16, !dbg !16078
  %140 = load i32, i32* %x, align 4, !dbg !16097
  %idxprom141 = sext i32 %140 to i64, !dbg !16098
  %141 = load i16*, i16** %dst2, align 8, !dbg !16098
  %arrayidx142 = getelementptr inbounds i16, i16* %141, i64 %idxprom141, !dbg !16098
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !16099
  br label %for.inc, !dbg !16100

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %142 = load i32, i32* %x, align 4, !dbg !16101
  %inc = add nsw i32 %142, 1, !dbg !16101
  store i32 %inc, i32* %x, align 4, !dbg !16101
  br label %for.cond43, !dbg !16103, !llvm.loop !16104

for.end:                                          ; preds = %for.cond43
  %143 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16106
  %arrayidx143 = getelementptr inbounds i64, i64* %143, i64 0, !dbg !16106
  %144 = load i64, i64* %arrayidx143, align 8, !dbg !16106
  %mul144 = mul nsw i64 %144, 2, !dbg !16107
  %div145 = udiv i64 %mul144, 2, !dbg !16108
  %145 = load i16*, i16** %dst0, align 8, !dbg !16109
  %add.ptr = getelementptr inbounds i16, i16* %145, i64 %div145, !dbg !16109
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !16109
  %146 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16110
  %arrayidx146 = getelementptr inbounds i64, i64* %146, i64 1, !dbg !16110
  %147 = load i64, i64* %arrayidx146, align 8, !dbg !16110
  %div147 = udiv i64 %147, 2, !dbg !16111
  %148 = load i16*, i16** %dst1, align 8, !dbg !16112
  %add.ptr148 = getelementptr inbounds i16, i16* %148, i64 %div147, !dbg !16112
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !16112
  %149 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16113
  %arrayidx149 = getelementptr inbounds i64, i64* %149, i64 2, !dbg !16113
  %150 = load i64, i64* %arrayidx149, align 8, !dbg !16113
  %div150 = udiv i64 %150, 2, !dbg !16114
  %151 = load i16*, i16** %dst2, align 8, !dbg !16115
  %add.ptr151 = getelementptr inbounds i16, i16* %151, i64 %div150, !dbg !16115
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !16115
  %152 = load i64*, i64** %src_stride.addr, align 8, !dbg !16116
  %arrayidx152 = getelementptr inbounds i64, i64* %152, i64 0, !dbg !16116
  %153 = load i64, i64* %arrayidx152, align 8, !dbg !16116
  %mul153 = mul nsw i64 %153, 2, !dbg !16117
  %div154 = udiv i64 %mul153, 1, !dbg !16118
  %154 = load i8*, i8** %src0, align 8, !dbg !16119
  %add.ptr155 = getelementptr inbounds i8, i8* %154, i64 %div154, !dbg !16119
  store i8* %add.ptr155, i8** %src0, align 8, !dbg !16119
  %155 = load i64*, i64** %src_stride.addr, align 8, !dbg !16120
  %arrayidx156 = getelementptr inbounds i64, i64* %155, i64 1, !dbg !16120
  %156 = load i64, i64* %arrayidx156, align 8, !dbg !16120
  %div157 = udiv i64 %156, 1, !dbg !16121
  %157 = load i8*, i8** %src1, align 8, !dbg !16122
  %add.ptr158 = getelementptr inbounds i8, i8* %157, i64 %div157, !dbg !16122
  store i8* %add.ptr158, i8** %src1, align 8, !dbg !16122
  %158 = load i64*, i64** %src_stride.addr, align 8, !dbg !16123
  %arrayidx159 = getelementptr inbounds i64, i64* %158, i64 2, !dbg !16123
  %159 = load i64, i64* %arrayidx159, align 8, !dbg !16123
  %div160 = udiv i64 %159, 1, !dbg !16124
  %160 = load i8*, i8** %src2, align 8, !dbg !16125
  %add.ptr161 = getelementptr inbounds i8, i8* %160, i64 %div160, !dbg !16125
  store i8* %add.ptr161, i8** %src2, align 8, !dbg !16125
  br label %for.inc162, !dbg !16126

for.inc162:                                       ; preds = %for.end
  %161 = load i32, i32* %y, align 4, !dbg !16127
  %inc163 = add nsw i32 %161, 1, !dbg !16127
  store i32 %inc163, i32* %y, align 4, !dbg !16127
  br label %for.cond, !dbg !16129, !llvm.loop !16130

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !16132
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p10to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !16133 {
entry:
  %retval.i117 = alloca i8, align 1
  %a.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i118, metadata !3609, metadata !94), !dbg !16134
  %retval.i106 = alloca i8, align 1
  %a.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i107, metadata !3609, metadata !94), !dbg !16142
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !16144
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !16146, metadata !94), !dbg !16147
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !16148, metadata !94), !dbg !16149
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !16150, metadata !94), !dbg !16151
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !16152, metadata !94), !dbg !16153
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !16154, metadata !94), !dbg !16155
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !16156, metadata !94), !dbg !16157
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !16158, metadata !94), !dbg !16159
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !16160, metadata !94), !dbg !16161
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !16162, metadata !94), !dbg !16163
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !16164
  store i8** %0, i8*** %dst, align 8, !dbg !16163
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !16165, metadata !94), !dbg !16166
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !16167
  %2 = bitcast i8** %1 to i16**, !dbg !16168
  store i16** %2, i16*** %src, align 8, !dbg !16166
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !16169, metadata !94), !dbg !16170
  %3 = load i16**, i16*** %src, align 8, !dbg !16171
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !16171
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !16171
  store i16* %4, i16** %src0, align 8, !dbg !16170
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !16172, metadata !94), !dbg !16173
  %5 = load i16**, i16*** %src, align 8, !dbg !16174
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !16174
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !16174
  store i16* %6, i16** %src1, align 8, !dbg !16173
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !16175, metadata !94), !dbg !16176
  %7 = load i16**, i16*** %src, align 8, !dbg !16177
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !16177
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !16177
  store i16* %8, i16** %src2, align 8, !dbg !16176
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !16178, metadata !94), !dbg !16179
  %9 = load i8**, i8*** %dst, align 8, !dbg !16180
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !16180
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !16180
  store i8* %10, i8** %dst0, align 8, !dbg !16179
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !16181, metadata !94), !dbg !16182
  %11 = load i8**, i8*** %dst, align 8, !dbg !16183
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !16183
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !16183
  store i8* %12, i8** %dst1, align 8, !dbg !16182
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !16184, metadata !94), !dbg !16185
  %13 = load i8**, i8*** %dst, align 8, !dbg !16186
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !16186
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !16186
  store i8* %14, i8** %dst2, align 8, !dbg !16185
  call void @llvm.dbg.declare(metadata i32* %y, metadata !16187, metadata !94), !dbg !16188
  call void @llvm.dbg.declare(metadata i32* %x, metadata !16189, metadata !94), !dbg !16190
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !16191, metadata !94), !dbg !16192
  store i32 16, i32* %sh, align 4, !dbg !16192
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !16193, metadata !94), !dbg !16194
  store i32 32768, i32* %rnd, align 4, !dbg !16194
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !16195, metadata !94), !dbg !16196
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16197
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !16197
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !16197
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !16197
  %conv = sext i16 %16 to i32, !dbg !16197
  store i32 %conv, i32* %y_off_in, align 4, !dbg !16196
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !16198, metadata !94), !dbg !16199
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16200
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !16200
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !16200
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !16200
  %conv10 = sext i16 %18 to i32, !dbg !16200
  %shl = shl i32 %conv10, 16, !dbg !16201
  store i32 %shl, i32* %y_off_out, align 4, !dbg !16199
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !16202, metadata !94), !dbg !16203
  store i32 512, i32* %uv_off_in, align 4, !dbg !16203
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !16204, metadata !94), !dbg !16205
  store i32 8421376, i32* %uv_off_out, align 4, !dbg !16205
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !16206, metadata !94), !dbg !16207
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16208
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !16208
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !16208
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !16208
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16208
  %conv14 = sext i16 %20 to i32, !dbg !16208
  store i32 %conv14, i32* %cyy, align 4, !dbg !16207
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !16209, metadata !94), !dbg !16210
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16211
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !16211
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !16211
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !16211
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !16211
  %conv18 = sext i16 %22 to i32, !dbg !16211
  store i32 %conv18, i32* %cyu, align 4, !dbg !16210
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !16212, metadata !94), !dbg !16213
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16214
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !16214
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !16214
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !16214
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !16214
  %conv22 = sext i16 %24 to i32, !dbg !16214
  store i32 %conv22, i32* %cyv, align 4, !dbg !16213
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !16215, metadata !94), !dbg !16216
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16217
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !16217
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !16217
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !16217
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !16217
  %conv26 = sext i16 %26 to i32, !dbg !16217
  store i32 %conv26, i32* %cuu, align 4, !dbg !16216
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !16218, metadata !94), !dbg !16219
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16220
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !16220
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !16220
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !16220
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !16220
  %conv30 = sext i16 %28 to i32, !dbg !16220
  store i32 %conv30, i32* %cuv, align 4, !dbg !16219
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !16221, metadata !94), !dbg !16222
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16223
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !16223
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !16223
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !16223
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !16223
  %conv34 = sext i16 %30 to i32, !dbg !16223
  store i32 %conv34, i32* %cvu, align 4, !dbg !16222
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !16224, metadata !94), !dbg !16225
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16226
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !16226
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !16226
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !16226
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !16226
  %conv38 = sext i16 %32 to i32, !dbg !16226
  store i32 %conv38, i32* %cvv, align 4, !dbg !16225
  %33 = load i32, i32* %w.addr, align 4, !dbg !16227
  %add = add nsw i32 %33, 1, !dbg !16228
  %sub = sub nsw i32 %add, 1, !dbg !16229
  %shr = ashr i32 %sub, 0, !dbg !16230
  store i32 %shr, i32* %w.addr, align 4, !dbg !16231
  %34 = load i32, i32* %h.addr, align 4, !dbg !16232
  %add39 = add nsw i32 %34, 1, !dbg !16233
  %sub40 = sub nsw i32 %add39, 1, !dbg !16234
  %shr41 = ashr i32 %sub40, 0, !dbg !16235
  store i32 %shr41, i32* %h.addr, align 4, !dbg !16236
  store i32 0, i32* %y, align 4, !dbg !16237
  br label %for.cond, !dbg !16238

for.cond:                                         ; preds = %for.inc103, %entry
  %35 = load i32, i32* %y, align 4, !dbg !16239
  %36 = load i32, i32* %h.addr, align 4, !dbg !16241
  %cmp = icmp slt i32 %35, %36, !dbg !16242
  br i1 %cmp, label %for.body, label %for.end105, !dbg !16243

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !16244
  br label %for.cond43, !dbg !16245

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !16246
  %38 = load i32, i32* %w.addr, align 4, !dbg !16248
  %cmp44 = icmp slt i32 %37, %38, !dbg !16249
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !16250

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !16251, metadata !94), !dbg !16252
  %39 = load i32, i32* %x, align 4, !dbg !16253
  %shl47 = shl i32 %39, 0, !dbg !16254
  %idxprom = sext i32 %shl47 to i64, !dbg !16255
  %40 = load i16*, i16** %src0, align 8, !dbg !16255
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !16255
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !16255
  %conv49 = zext i16 %41 to i32, !dbg !16255
  %42 = load i32, i32* %y_off_in, align 4, !dbg !16256
  %sub50 = sub nsw i32 %conv49, %42, !dbg !16257
  store i32 %sub50, i32* %y00, align 4, !dbg !16252
  call void @llvm.dbg.declare(metadata i32* %u, metadata !16258, metadata !94), !dbg !16259
  %43 = load i32, i32* %x, align 4, !dbg !16260
  %idxprom51 = sext i32 %43 to i64, !dbg !16261
  %44 = load i16*, i16** %src1, align 8, !dbg !16261
  %arrayidx52 = getelementptr inbounds i16, i16* %44, i64 %idxprom51, !dbg !16261
  %45 = load i16, i16* %arrayidx52, align 2, !dbg !16261
  %conv53 = zext i16 %45 to i32, !dbg !16261
  %sub54 = sub nsw i32 %conv53, 512, !dbg !16262
  store i32 %sub54, i32* %u, align 4, !dbg !16259
  call void @llvm.dbg.declare(metadata i32* %v, metadata !16263, metadata !94), !dbg !16264
  %46 = load i32, i32* %x, align 4, !dbg !16265
  %idxprom55 = sext i32 %46 to i64, !dbg !16266
  %47 = load i16*, i16** %src2, align 8, !dbg !16266
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !16266
  %48 = load i16, i16* %arrayidx56, align 2, !dbg !16266
  %conv57 = zext i16 %48 to i32, !dbg !16266
  %sub58 = sub nsw i32 %conv57, 512, !dbg !16267
  store i32 %sub58, i32* %v, align 4, !dbg !16264
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !16268, metadata !94), !dbg !16269
  %49 = load i32, i32* %cyu, align 4, !dbg !16270
  %50 = load i32, i32* %u, align 4, !dbg !16271
  %mul = mul nsw i32 %49, %50, !dbg !16272
  %51 = load i32, i32* %cyv, align 4, !dbg !16273
  %52 = load i32, i32* %v, align 4, !dbg !16274
  %mul59 = mul nsw i32 %51, %52, !dbg !16275
  %add60 = add nsw i32 %mul, %mul59, !dbg !16276
  %add61 = add nsw i32 %add60, 32768, !dbg !16277
  %53 = load i32, i32* %y_off_out, align 4, !dbg !16278
  %add62 = add nsw i32 %add61, %53, !dbg !16279
  store i32 %add62, i32* %uv_val, align 4, !dbg !16269
  %54 = load i32, i32* %cyy, align 4, !dbg !16280
  %55 = load i32, i32* %y00, align 4, !dbg !16281
  %mul63 = mul nsw i32 %54, %55, !dbg !16282
  %56 = load i32, i32* %uv_val, align 4, !dbg !16283
  %add64 = add nsw i32 %mul63, %56, !dbg !16284
  %shr65 = ashr i32 %add64, 16, !dbg !16285
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !16286
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !16287
  %and.i = and i32 %57, -256, !dbg !16288
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16288
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16289

if.then.i:                                        ; preds = %for.body46
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !16290
  %neg.i = xor i32 %58, -1, !dbg !16291
  %shr.i = ashr i32 %neg.i, 31, !dbg !16292
  %conv.i = trunc i32 %shr.i to i8, !dbg !16293
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !16294
  br label %av_clip_uint8_c.exit, !dbg !16294

if.else.i:                                        ; preds = %for.body46
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !16295
  %conv1.i = trunc i32 %59 to i8, !dbg !16295
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !16296
  br label %av_clip_uint8_c.exit, !dbg !16296

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %60 = load i8, i8* %retval.i, align 1, !dbg !16297
  %61 = load i32, i32* %x, align 4, !dbg !16298
  %shl66 = shl i32 %61, 0, !dbg !16299
  %idxprom67 = sext i32 %shl66 to i64, !dbg !16300
  %62 = load i8*, i8** %dst0, align 8, !dbg !16300
  %arrayidx68 = getelementptr inbounds i8, i8* %62, i64 %idxprom67, !dbg !16300
  store i8 %60, i8* %arrayidx68, align 1, !dbg !16301
  %63 = load i32, i32* %u, align 4, !dbg !16302
  %64 = load i32, i32* %cuu, align 4, !dbg !16303
  %mul69 = mul nsw i32 %63, %64, !dbg !16304
  %65 = load i32, i32* %v, align 4, !dbg !16305
  %66 = load i32, i32* %cuv, align 4, !dbg !16306
  %mul70 = mul nsw i32 %65, %66, !dbg !16307
  %add71 = add nsw i32 %mul69, %mul70, !dbg !16308
  %add72 = add nsw i32 %add71, 8421376, !dbg !16309
  %shr73 = ashr i32 %add72, 16, !dbg !16310
  store i32 %shr73, i32* %a.addr.i118, align 4, !dbg !16311
  %67 = load i32, i32* %a.addr.i118, align 4, !dbg !16312
  %and.i119 = and i32 %67, -256, !dbg !16313
  %tobool.i120 = icmp ne i32 %and.i119, 0, !dbg !16313
  br i1 %tobool.i120, label %if.then.i124, label %if.else.i126, !dbg !16314

if.then.i124:                                     ; preds = %av_clip_uint8_c.exit
  %68 = load i32, i32* %a.addr.i118, align 4, !dbg !16315
  %neg.i121 = xor i32 %68, -1, !dbg !16316
  %shr.i122 = ashr i32 %neg.i121, 31, !dbg !16317
  %conv.i123 = trunc i32 %shr.i122 to i8, !dbg !16318
  store i8 %conv.i123, i8* %retval.i117, align 1, !dbg !16319
  br label %av_clip_uint8_c.exit127, !dbg !16319

if.else.i126:                                     ; preds = %av_clip_uint8_c.exit
  %69 = load i32, i32* %a.addr.i118, align 4, !dbg !16320
  %conv1.i125 = trunc i32 %69 to i8, !dbg !16320
  store i8 %conv1.i125, i8* %retval.i117, align 1, !dbg !16321
  br label %av_clip_uint8_c.exit127, !dbg !16321

av_clip_uint8_c.exit127:                          ; preds = %if.then.i124, %if.else.i126
  %70 = load i8, i8* %retval.i117, align 1, !dbg !16322
  %71 = load i32, i32* %x, align 4, !dbg !16323
  %idxprom75 = sext i32 %71 to i64, !dbg !16324
  %72 = load i8*, i8** %dst1, align 8, !dbg !16324
  %arrayidx76 = getelementptr inbounds i8, i8* %72, i64 %idxprom75, !dbg !16324
  store i8 %70, i8* %arrayidx76, align 1, !dbg !16325
  %73 = load i32, i32* %u, align 4, !dbg !16326
  %74 = load i32, i32* %cvu, align 4, !dbg !16327
  %mul77 = mul nsw i32 %73, %74, !dbg !16328
  %75 = load i32, i32* %v, align 4, !dbg !16329
  %76 = load i32, i32* %cvv, align 4, !dbg !16330
  %mul78 = mul nsw i32 %75, %76, !dbg !16331
  %add79 = add nsw i32 %mul77, %mul78, !dbg !16332
  %add80 = add nsw i32 %add79, 8421376, !dbg !16333
  %shr81 = ashr i32 %add80, 16, !dbg !16334
  store i32 %shr81, i32* %a.addr.i107, align 4, !dbg !16335
  %77 = load i32, i32* %a.addr.i107, align 4, !dbg !16336
  %and.i108 = and i32 %77, -256, !dbg !16337
  %tobool.i109 = icmp ne i32 %and.i108, 0, !dbg !16337
  br i1 %tobool.i109, label %if.then.i113, label %if.else.i115, !dbg !16338

if.then.i113:                                     ; preds = %av_clip_uint8_c.exit127
  %78 = load i32, i32* %a.addr.i107, align 4, !dbg !16339
  %neg.i110 = xor i32 %78, -1, !dbg !16340
  %shr.i111 = ashr i32 %neg.i110, 31, !dbg !16341
  %conv.i112 = trunc i32 %shr.i111 to i8, !dbg !16342
  store i8 %conv.i112, i8* %retval.i106, align 1, !dbg !16343
  br label %av_clip_uint8_c.exit116, !dbg !16343

if.else.i115:                                     ; preds = %av_clip_uint8_c.exit127
  %79 = load i32, i32* %a.addr.i107, align 4, !dbg !16344
  %conv1.i114 = trunc i32 %79 to i8, !dbg !16344
  store i8 %conv1.i114, i8* %retval.i106, align 1, !dbg !16345
  br label %av_clip_uint8_c.exit116, !dbg !16345

av_clip_uint8_c.exit116:                          ; preds = %if.then.i113, %if.else.i115
  %80 = load i8, i8* %retval.i106, align 1, !dbg !16346
  %81 = load i32, i32* %x, align 4, !dbg !16347
  %idxprom83 = sext i32 %81 to i64, !dbg !16348
  %82 = load i8*, i8** %dst2, align 8, !dbg !16348
  %arrayidx84 = getelementptr inbounds i8, i8* %82, i64 %idxprom83, !dbg !16348
  store i8 %80, i8* %arrayidx84, align 1, !dbg !16349
  br label %for.inc, !dbg !16350

for.inc:                                          ; preds = %av_clip_uint8_c.exit116
  %83 = load i32, i32* %x, align 4, !dbg !16351
  %inc = add nsw i32 %83, 1, !dbg !16351
  store i32 %inc, i32* %x, align 4, !dbg !16351
  br label %for.cond43, !dbg !16353, !llvm.loop !16354

for.end:                                          ; preds = %for.cond43
  %84 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16356
  %arrayidx85 = getelementptr inbounds i64, i64* %84, i64 0, !dbg !16356
  %85 = load i64, i64* %arrayidx85, align 8, !dbg !16356
  %mul86 = mul nsw i64 %85, 1, !dbg !16357
  %div = udiv i64 %mul86, 1, !dbg !16358
  %86 = load i8*, i8** %dst0, align 8, !dbg !16359
  %add.ptr = getelementptr inbounds i8, i8* %86, i64 %div, !dbg !16359
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !16359
  %87 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16360
  %arrayidx87 = getelementptr inbounds i64, i64* %87, i64 1, !dbg !16360
  %88 = load i64, i64* %arrayidx87, align 8, !dbg !16360
  %div88 = udiv i64 %88, 1, !dbg !16361
  %89 = load i8*, i8** %dst1, align 8, !dbg !16362
  %add.ptr89 = getelementptr inbounds i8, i8* %89, i64 %div88, !dbg !16362
  store i8* %add.ptr89, i8** %dst1, align 8, !dbg !16362
  %90 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16363
  %arrayidx90 = getelementptr inbounds i64, i64* %90, i64 2, !dbg !16363
  %91 = load i64, i64* %arrayidx90, align 8, !dbg !16363
  %div91 = udiv i64 %91, 1, !dbg !16364
  %92 = load i8*, i8** %dst2, align 8, !dbg !16365
  %add.ptr92 = getelementptr inbounds i8, i8* %92, i64 %div91, !dbg !16365
  store i8* %add.ptr92, i8** %dst2, align 8, !dbg !16365
  %93 = load i64*, i64** %src_stride.addr, align 8, !dbg !16366
  %arrayidx93 = getelementptr inbounds i64, i64* %93, i64 0, !dbg !16366
  %94 = load i64, i64* %arrayidx93, align 8, !dbg !16366
  %mul94 = mul nsw i64 %94, 1, !dbg !16367
  %div95 = udiv i64 %mul94, 2, !dbg !16368
  %95 = load i16*, i16** %src0, align 8, !dbg !16369
  %add.ptr96 = getelementptr inbounds i16, i16* %95, i64 %div95, !dbg !16369
  store i16* %add.ptr96, i16** %src0, align 8, !dbg !16369
  %96 = load i64*, i64** %src_stride.addr, align 8, !dbg !16370
  %arrayidx97 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !16370
  %97 = load i64, i64* %arrayidx97, align 8, !dbg !16370
  %div98 = udiv i64 %97, 2, !dbg !16371
  %98 = load i16*, i16** %src1, align 8, !dbg !16372
  %add.ptr99 = getelementptr inbounds i16, i16* %98, i64 %div98, !dbg !16372
  store i16* %add.ptr99, i16** %src1, align 8, !dbg !16372
  %99 = load i64*, i64** %src_stride.addr, align 8, !dbg !16373
  %arrayidx100 = getelementptr inbounds i64, i64* %99, i64 2, !dbg !16373
  %100 = load i64, i64* %arrayidx100, align 8, !dbg !16373
  %div101 = udiv i64 %100, 2, !dbg !16374
  %101 = load i16*, i16** %src2, align 8, !dbg !16375
  %add.ptr102 = getelementptr inbounds i16, i16* %101, i64 %div101, !dbg !16375
  store i16* %add.ptr102, i16** %src2, align 8, !dbg !16375
  br label %for.inc103, !dbg !16376

for.inc103:                                       ; preds = %for.end
  %102 = load i32, i32* %y, align 4, !dbg !16377
  %inc104 = add nsw i32 %102, 1, !dbg !16377
  store i32 %inc104, i32* %y, align 4, !dbg !16377
  br label %for.cond, !dbg !16379, !llvm.loop !16380

for.end105:                                       ; preds = %for.cond
  ret void, !dbg !16382
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p10to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !16383 {
entry:
  %retval.i142 = alloca i8, align 1
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !3609, metadata !94), !dbg !16384
  %retval.i131 = alloca i8, align 1
  %a.addr.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i132, metadata !3609, metadata !94), !dbg !16392
  %retval.i120 = alloca i8, align 1
  %a.addr.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i121, metadata !3609, metadata !94), !dbg !16394
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !16396
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !16398, metadata !94), !dbg !16399
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !16400, metadata !94), !dbg !16401
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !16402, metadata !94), !dbg !16403
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !16404, metadata !94), !dbg !16405
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !16406, metadata !94), !dbg !16407
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !16408, metadata !94), !dbg !16409
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !16410, metadata !94), !dbg !16411
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !16412, metadata !94), !dbg !16413
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !16414, metadata !94), !dbg !16415
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !16416
  store i8** %0, i8*** %dst, align 8, !dbg !16415
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !16417, metadata !94), !dbg !16418
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !16419
  %2 = bitcast i8** %1 to i16**, !dbg !16420
  store i16** %2, i16*** %src, align 8, !dbg !16418
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !16421, metadata !94), !dbg !16422
  %3 = load i16**, i16*** %src, align 8, !dbg !16423
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !16423
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !16423
  store i16* %4, i16** %src0, align 8, !dbg !16422
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !16424, metadata !94), !dbg !16425
  %5 = load i16**, i16*** %src, align 8, !dbg !16426
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !16426
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !16426
  store i16* %6, i16** %src1, align 8, !dbg !16425
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !16427, metadata !94), !dbg !16428
  %7 = load i16**, i16*** %src, align 8, !dbg !16429
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !16429
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !16429
  store i16* %8, i16** %src2, align 8, !dbg !16428
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !16430, metadata !94), !dbg !16431
  %9 = load i8**, i8*** %dst, align 8, !dbg !16432
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !16432
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !16432
  store i8* %10, i8** %dst0, align 8, !dbg !16431
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !16433, metadata !94), !dbg !16434
  %11 = load i8**, i8*** %dst, align 8, !dbg !16435
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !16435
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !16435
  store i8* %12, i8** %dst1, align 8, !dbg !16434
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !16436, metadata !94), !dbg !16437
  %13 = load i8**, i8*** %dst, align 8, !dbg !16438
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !16438
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !16438
  store i8* %14, i8** %dst2, align 8, !dbg !16437
  call void @llvm.dbg.declare(metadata i32* %y, metadata !16439, metadata !94), !dbg !16440
  call void @llvm.dbg.declare(metadata i32* %x, metadata !16441, metadata !94), !dbg !16442
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !16443, metadata !94), !dbg !16444
  store i32 16, i32* %sh, align 4, !dbg !16444
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !16445, metadata !94), !dbg !16446
  store i32 32768, i32* %rnd, align 4, !dbg !16446
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !16447, metadata !94), !dbg !16448
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16449
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !16449
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !16449
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !16449
  %conv = sext i16 %16 to i32, !dbg !16449
  store i32 %conv, i32* %y_off_in, align 4, !dbg !16448
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !16450, metadata !94), !dbg !16451
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16452
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !16452
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !16452
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !16452
  %conv10 = sext i16 %18 to i32, !dbg !16452
  %shl = shl i32 %conv10, 16, !dbg !16453
  store i32 %shl, i32* %y_off_out, align 4, !dbg !16451
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !16454, metadata !94), !dbg !16455
  store i32 512, i32* %uv_off_in, align 4, !dbg !16455
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !16456, metadata !94), !dbg !16457
  store i32 8421376, i32* %uv_off_out, align 4, !dbg !16457
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !16458, metadata !94), !dbg !16459
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16460
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !16460
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !16460
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !16460
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16460
  %conv14 = sext i16 %20 to i32, !dbg !16460
  store i32 %conv14, i32* %cyy, align 4, !dbg !16459
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !16461, metadata !94), !dbg !16462
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16463
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !16463
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !16463
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !16463
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !16463
  %conv18 = sext i16 %22 to i32, !dbg !16463
  store i32 %conv18, i32* %cyu, align 4, !dbg !16462
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !16464, metadata !94), !dbg !16465
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16466
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !16466
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !16466
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !16466
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !16466
  %conv22 = sext i16 %24 to i32, !dbg !16466
  store i32 %conv22, i32* %cyv, align 4, !dbg !16465
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !16467, metadata !94), !dbg !16468
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16469
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !16469
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !16469
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !16469
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !16469
  %conv26 = sext i16 %26 to i32, !dbg !16469
  store i32 %conv26, i32* %cuu, align 4, !dbg !16468
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !16470, metadata !94), !dbg !16471
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16472
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !16472
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !16472
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !16472
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !16472
  %conv30 = sext i16 %28 to i32, !dbg !16472
  store i32 %conv30, i32* %cuv, align 4, !dbg !16471
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !16473, metadata !94), !dbg !16474
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16475
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !16475
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !16475
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !16475
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !16475
  %conv34 = sext i16 %30 to i32, !dbg !16475
  store i32 %conv34, i32* %cvu, align 4, !dbg !16474
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !16476, metadata !94), !dbg !16477
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16478
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !16478
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !16478
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !16478
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !16478
  %conv38 = sext i16 %32 to i32, !dbg !16478
  store i32 %conv38, i32* %cvv, align 4, !dbg !16477
  %33 = load i32, i32* %w.addr, align 4, !dbg !16479
  %add = add nsw i32 %33, 2, !dbg !16480
  %sub = sub nsw i32 %add, 1, !dbg !16481
  %shr = ashr i32 %sub, 1, !dbg !16482
  store i32 %shr, i32* %w.addr, align 4, !dbg !16483
  %34 = load i32, i32* %h.addr, align 4, !dbg !16484
  %add39 = add nsw i32 %34, 1, !dbg !16485
  %sub40 = sub nsw i32 %add39, 1, !dbg !16486
  %shr41 = ashr i32 %sub40, 0, !dbg !16487
  store i32 %shr41, i32* %h.addr, align 4, !dbg !16488
  store i32 0, i32* %y, align 4, !dbg !16489
  br label %for.cond, !dbg !16490

for.cond:                                         ; preds = %for.inc117, %entry
  %35 = load i32, i32* %y, align 4, !dbg !16491
  %36 = load i32, i32* %h.addr, align 4, !dbg !16493
  %cmp = icmp slt i32 %35, %36, !dbg !16494
  br i1 %cmp, label %for.body, label %for.end119, !dbg !16495

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !16496
  br label %for.cond43, !dbg !16497

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !16498
  %38 = load i32, i32* %w.addr, align 4, !dbg !16500
  %cmp44 = icmp slt i32 %37, %38, !dbg !16501
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !16502

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !16503, metadata !94), !dbg !16504
  %39 = load i32, i32* %x, align 4, !dbg !16505
  %shl47 = shl i32 %39, 1, !dbg !16506
  %idxprom = sext i32 %shl47 to i64, !dbg !16507
  %40 = load i16*, i16** %src0, align 8, !dbg !16507
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !16507
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !16507
  %conv49 = zext i16 %41 to i32, !dbg !16507
  %42 = load i32, i32* %y_off_in, align 4, !dbg !16508
  %sub50 = sub nsw i32 %conv49, %42, !dbg !16509
  store i32 %sub50, i32* %y00, align 4, !dbg !16504
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !16510, metadata !94), !dbg !16511
  %43 = load i32, i32* %x, align 4, !dbg !16512
  %mul = mul nsw i32 2, %43, !dbg !16513
  %add51 = add nsw i32 %mul, 1, !dbg !16514
  %idxprom52 = sext i32 %add51 to i64, !dbg !16515
  %44 = load i16*, i16** %src0, align 8, !dbg !16515
  %arrayidx53 = getelementptr inbounds i16, i16* %44, i64 %idxprom52, !dbg !16515
  %45 = load i16, i16* %arrayidx53, align 2, !dbg !16515
  %conv54 = zext i16 %45 to i32, !dbg !16515
  %46 = load i32, i32* %y_off_in, align 4, !dbg !16516
  %sub55 = sub nsw i32 %conv54, %46, !dbg !16517
  store i32 %sub55, i32* %y01, align 4, !dbg !16511
  call void @llvm.dbg.declare(metadata i32* %u, metadata !16518, metadata !94), !dbg !16519
  %47 = load i32, i32* %x, align 4, !dbg !16520
  %idxprom56 = sext i32 %47 to i64, !dbg !16521
  %48 = load i16*, i16** %src1, align 8, !dbg !16521
  %arrayidx57 = getelementptr inbounds i16, i16* %48, i64 %idxprom56, !dbg !16521
  %49 = load i16, i16* %arrayidx57, align 2, !dbg !16521
  %conv58 = zext i16 %49 to i32, !dbg !16521
  %sub59 = sub nsw i32 %conv58, 512, !dbg !16522
  store i32 %sub59, i32* %u, align 4, !dbg !16519
  call void @llvm.dbg.declare(metadata i32* %v, metadata !16523, metadata !94), !dbg !16524
  %50 = load i32, i32* %x, align 4, !dbg !16525
  %idxprom60 = sext i32 %50 to i64, !dbg !16526
  %51 = load i16*, i16** %src2, align 8, !dbg !16526
  %arrayidx61 = getelementptr inbounds i16, i16* %51, i64 %idxprom60, !dbg !16526
  %52 = load i16, i16* %arrayidx61, align 2, !dbg !16526
  %conv62 = zext i16 %52 to i32, !dbg !16526
  %sub63 = sub nsw i32 %conv62, 512, !dbg !16527
  store i32 %sub63, i32* %v, align 4, !dbg !16524
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !16528, metadata !94), !dbg !16529
  %53 = load i32, i32* %cyu, align 4, !dbg !16530
  %54 = load i32, i32* %u, align 4, !dbg !16531
  %mul64 = mul nsw i32 %53, %54, !dbg !16532
  %55 = load i32, i32* %cyv, align 4, !dbg !16533
  %56 = load i32, i32* %v, align 4, !dbg !16534
  %mul65 = mul nsw i32 %55, %56, !dbg !16535
  %add66 = add nsw i32 %mul64, %mul65, !dbg !16536
  %add67 = add nsw i32 %add66, 32768, !dbg !16537
  %57 = load i32, i32* %y_off_out, align 4, !dbg !16538
  %add68 = add nsw i32 %add67, %57, !dbg !16539
  store i32 %add68, i32* %uv_val, align 4, !dbg !16529
  %58 = load i32, i32* %cyy, align 4, !dbg !16540
  %59 = load i32, i32* %y00, align 4, !dbg !16541
  %mul69 = mul nsw i32 %58, %59, !dbg !16542
  %60 = load i32, i32* %uv_val, align 4, !dbg !16543
  %add70 = add nsw i32 %mul69, %60, !dbg !16544
  %shr71 = ashr i32 %add70, 16, !dbg !16545
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !16546
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !16547
  %and.i = and i32 %61, -256, !dbg !16548
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16548
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16549

if.then.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !16550
  %neg.i = xor i32 %62, -1, !dbg !16551
  %shr.i = ashr i32 %neg.i, 31, !dbg !16552
  %conv.i = trunc i32 %shr.i to i8, !dbg !16553
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !16554
  br label %av_clip_uint8_c.exit, !dbg !16554

if.else.i:                                        ; preds = %for.body46
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !16555
  %conv1.i = trunc i32 %63 to i8, !dbg !16555
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !16556
  br label %av_clip_uint8_c.exit, !dbg !16556

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %64 = load i8, i8* %retval.i, align 1, !dbg !16557
  %65 = load i32, i32* %x, align 4, !dbg !16558
  %shl72 = shl i32 %65, 1, !dbg !16559
  %idxprom73 = sext i32 %shl72 to i64, !dbg !16560
  %66 = load i8*, i8** %dst0, align 8, !dbg !16560
  %arrayidx74 = getelementptr inbounds i8, i8* %66, i64 %idxprom73, !dbg !16560
  store i8 %64, i8* %arrayidx74, align 1, !dbg !16561
  %67 = load i32, i32* %cyy, align 4, !dbg !16562
  %68 = load i32, i32* %y01, align 4, !dbg !16563
  %mul75 = mul nsw i32 %67, %68, !dbg !16564
  %69 = load i32, i32* %uv_val, align 4, !dbg !16565
  %add76 = add nsw i32 %mul75, %69, !dbg !16566
  %shr77 = ashr i32 %add76, 16, !dbg !16567
  store i32 %shr77, i32* %a.addr.i143, align 4, !dbg !16568
  %70 = load i32, i32* %a.addr.i143, align 4, !dbg !16569
  %and.i144 = and i32 %70, -256, !dbg !16570
  %tobool.i145 = icmp ne i32 %and.i144, 0, !dbg !16570
  br i1 %tobool.i145, label %if.then.i149, label %if.else.i151, !dbg !16571

if.then.i149:                                     ; preds = %av_clip_uint8_c.exit
  %71 = load i32, i32* %a.addr.i143, align 4, !dbg !16572
  %neg.i146 = xor i32 %71, -1, !dbg !16573
  %shr.i147 = ashr i32 %neg.i146, 31, !dbg !16574
  %conv.i148 = trunc i32 %shr.i147 to i8, !dbg !16575
  store i8 %conv.i148, i8* %retval.i142, align 1, !dbg !16576
  br label %av_clip_uint8_c.exit152, !dbg !16576

if.else.i151:                                     ; preds = %av_clip_uint8_c.exit
  %72 = load i32, i32* %a.addr.i143, align 4, !dbg !16577
  %conv1.i150 = trunc i32 %72 to i8, !dbg !16577
  store i8 %conv1.i150, i8* %retval.i142, align 1, !dbg !16578
  br label %av_clip_uint8_c.exit152, !dbg !16578

av_clip_uint8_c.exit152:                          ; preds = %if.then.i149, %if.else.i151
  %73 = load i8, i8* %retval.i142, align 1, !dbg !16579
  %74 = load i32, i32* %x, align 4, !dbg !16580
  %mul79 = mul nsw i32 %74, 2, !dbg !16581
  %add80 = add nsw i32 %mul79, 1, !dbg !16582
  %idxprom81 = sext i32 %add80 to i64, !dbg !16583
  %75 = load i8*, i8** %dst0, align 8, !dbg !16583
  %arrayidx82 = getelementptr inbounds i8, i8* %75, i64 %idxprom81, !dbg !16583
  store i8 %73, i8* %arrayidx82, align 1, !dbg !16584
  %76 = load i32, i32* %u, align 4, !dbg !16585
  %77 = load i32, i32* %cuu, align 4, !dbg !16586
  %mul83 = mul nsw i32 %76, %77, !dbg !16587
  %78 = load i32, i32* %v, align 4, !dbg !16588
  %79 = load i32, i32* %cuv, align 4, !dbg !16589
  %mul84 = mul nsw i32 %78, %79, !dbg !16590
  %add85 = add nsw i32 %mul83, %mul84, !dbg !16591
  %add86 = add nsw i32 %add85, 8421376, !dbg !16592
  %shr87 = ashr i32 %add86, 16, !dbg !16593
  store i32 %shr87, i32* %a.addr.i132, align 4, !dbg !16594
  %80 = load i32, i32* %a.addr.i132, align 4, !dbg !16595
  %and.i133 = and i32 %80, -256, !dbg !16596
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !16596
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !16597

if.then.i138:                                     ; preds = %av_clip_uint8_c.exit152
  %81 = load i32, i32* %a.addr.i132, align 4, !dbg !16598
  %neg.i135 = xor i32 %81, -1, !dbg !16599
  %shr.i136 = ashr i32 %neg.i135, 31, !dbg !16600
  %conv.i137 = trunc i32 %shr.i136 to i8, !dbg !16601
  store i8 %conv.i137, i8* %retval.i131, align 1, !dbg !16602
  br label %av_clip_uint8_c.exit141, !dbg !16602

if.else.i140:                                     ; preds = %av_clip_uint8_c.exit152
  %82 = load i32, i32* %a.addr.i132, align 4, !dbg !16603
  %conv1.i139 = trunc i32 %82 to i8, !dbg !16603
  store i8 %conv1.i139, i8* %retval.i131, align 1, !dbg !16604
  br label %av_clip_uint8_c.exit141, !dbg !16604

av_clip_uint8_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %83 = load i8, i8* %retval.i131, align 1, !dbg !16605
  %84 = load i32, i32* %x, align 4, !dbg !16606
  %idxprom89 = sext i32 %84 to i64, !dbg !16607
  %85 = load i8*, i8** %dst1, align 8, !dbg !16607
  %arrayidx90 = getelementptr inbounds i8, i8* %85, i64 %idxprom89, !dbg !16607
  store i8 %83, i8* %arrayidx90, align 1, !dbg !16608
  %86 = load i32, i32* %u, align 4, !dbg !16609
  %87 = load i32, i32* %cvu, align 4, !dbg !16610
  %mul91 = mul nsw i32 %86, %87, !dbg !16611
  %88 = load i32, i32* %v, align 4, !dbg !16612
  %89 = load i32, i32* %cvv, align 4, !dbg !16613
  %mul92 = mul nsw i32 %88, %89, !dbg !16614
  %add93 = add nsw i32 %mul91, %mul92, !dbg !16615
  %add94 = add nsw i32 %add93, 8421376, !dbg !16616
  %shr95 = ashr i32 %add94, 16, !dbg !16617
  store i32 %shr95, i32* %a.addr.i121, align 4, !dbg !16618
  %90 = load i32, i32* %a.addr.i121, align 4, !dbg !16619
  %and.i122 = and i32 %90, -256, !dbg !16620
  %tobool.i123 = icmp ne i32 %and.i122, 0, !dbg !16620
  br i1 %tobool.i123, label %if.then.i127, label %if.else.i129, !dbg !16621

if.then.i127:                                     ; preds = %av_clip_uint8_c.exit141
  %91 = load i32, i32* %a.addr.i121, align 4, !dbg !16622
  %neg.i124 = xor i32 %91, -1, !dbg !16623
  %shr.i125 = ashr i32 %neg.i124, 31, !dbg !16624
  %conv.i126 = trunc i32 %shr.i125 to i8, !dbg !16625
  store i8 %conv.i126, i8* %retval.i120, align 1, !dbg !16626
  br label %av_clip_uint8_c.exit130, !dbg !16626

if.else.i129:                                     ; preds = %av_clip_uint8_c.exit141
  %92 = load i32, i32* %a.addr.i121, align 4, !dbg !16627
  %conv1.i128 = trunc i32 %92 to i8, !dbg !16627
  store i8 %conv1.i128, i8* %retval.i120, align 1, !dbg !16628
  br label %av_clip_uint8_c.exit130, !dbg !16628

av_clip_uint8_c.exit130:                          ; preds = %if.then.i127, %if.else.i129
  %93 = load i8, i8* %retval.i120, align 1, !dbg !16629
  %94 = load i32, i32* %x, align 4, !dbg !16630
  %idxprom97 = sext i32 %94 to i64, !dbg !16631
  %95 = load i8*, i8** %dst2, align 8, !dbg !16631
  %arrayidx98 = getelementptr inbounds i8, i8* %95, i64 %idxprom97, !dbg !16631
  store i8 %93, i8* %arrayidx98, align 1, !dbg !16632
  br label %for.inc, !dbg !16633

for.inc:                                          ; preds = %av_clip_uint8_c.exit130
  %96 = load i32, i32* %x, align 4, !dbg !16634
  %inc = add nsw i32 %96, 1, !dbg !16634
  store i32 %inc, i32* %x, align 4, !dbg !16634
  br label %for.cond43, !dbg !16636, !llvm.loop !16637

for.end:                                          ; preds = %for.cond43
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16639
  %arrayidx99 = getelementptr inbounds i64, i64* %97, i64 0, !dbg !16639
  %98 = load i64, i64* %arrayidx99, align 8, !dbg !16639
  %mul100 = mul nsw i64 %98, 1, !dbg !16640
  %div = udiv i64 %mul100, 1, !dbg !16641
  %99 = load i8*, i8** %dst0, align 8, !dbg !16642
  %add.ptr = getelementptr inbounds i8, i8* %99, i64 %div, !dbg !16642
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !16642
  %100 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16643
  %arrayidx101 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !16643
  %101 = load i64, i64* %arrayidx101, align 8, !dbg !16643
  %div102 = udiv i64 %101, 1, !dbg !16644
  %102 = load i8*, i8** %dst1, align 8, !dbg !16645
  %add.ptr103 = getelementptr inbounds i8, i8* %102, i64 %div102, !dbg !16645
  store i8* %add.ptr103, i8** %dst1, align 8, !dbg !16645
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16646
  %arrayidx104 = getelementptr inbounds i64, i64* %103, i64 2, !dbg !16646
  %104 = load i64, i64* %arrayidx104, align 8, !dbg !16646
  %div105 = udiv i64 %104, 1, !dbg !16647
  %105 = load i8*, i8** %dst2, align 8, !dbg !16648
  %add.ptr106 = getelementptr inbounds i8, i8* %105, i64 %div105, !dbg !16648
  store i8* %add.ptr106, i8** %dst2, align 8, !dbg !16648
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !16649
  %arrayidx107 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !16649
  %107 = load i64, i64* %arrayidx107, align 8, !dbg !16649
  %mul108 = mul nsw i64 %107, 1, !dbg !16650
  %div109 = udiv i64 %mul108, 2, !dbg !16651
  %108 = load i16*, i16** %src0, align 8, !dbg !16652
  %add.ptr110 = getelementptr inbounds i16, i16* %108, i64 %div109, !dbg !16652
  store i16* %add.ptr110, i16** %src0, align 8, !dbg !16652
  %109 = load i64*, i64** %src_stride.addr, align 8, !dbg !16653
  %arrayidx111 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !16653
  %110 = load i64, i64* %arrayidx111, align 8, !dbg !16653
  %div112 = udiv i64 %110, 2, !dbg !16654
  %111 = load i16*, i16** %src1, align 8, !dbg !16655
  %add.ptr113 = getelementptr inbounds i16, i16* %111, i64 %div112, !dbg !16655
  store i16* %add.ptr113, i16** %src1, align 8, !dbg !16655
  %112 = load i64*, i64** %src_stride.addr, align 8, !dbg !16656
  %arrayidx114 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !16656
  %113 = load i64, i64* %arrayidx114, align 8, !dbg !16656
  %div115 = udiv i64 %113, 2, !dbg !16657
  %114 = load i16*, i16** %src2, align 8, !dbg !16658
  %add.ptr116 = getelementptr inbounds i16, i16* %114, i64 %div115, !dbg !16658
  store i16* %add.ptr116, i16** %src2, align 8, !dbg !16658
  br label %for.inc117, !dbg !16659

for.inc117:                                       ; preds = %for.end
  %115 = load i32, i32* %y, align 4, !dbg !16660
  %inc118 = add nsw i32 %115, 1, !dbg !16660
  store i32 %inc118, i32* %y, align 4, !dbg !16660
  br label %for.cond, !dbg !16662, !llvm.loop !16663

for.end119:                                       ; preds = %for.cond
  ret void, !dbg !16665
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p10to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !16666 {
entry:
  %retval.i203 = alloca i8, align 1
  %a.addr.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i204, metadata !3609, metadata !94), !dbg !16667
  %retval.i192 = alloca i8, align 1
  %a.addr.i193 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i193, metadata !3609, metadata !94), !dbg !16675
  %retval.i181 = alloca i8, align 1
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !3609, metadata !94), !dbg !16677
  %retval.i170 = alloca i8, align 1
  %a.addr.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i171, metadata !3609, metadata !94), !dbg !16679
  %retval.i159 = alloca i8, align 1
  %a.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i160, metadata !3609, metadata !94), !dbg !16681
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !16683
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !16685, metadata !94), !dbg !16686
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !16687, metadata !94), !dbg !16688
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !16689, metadata !94), !dbg !16690
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !16691, metadata !94), !dbg !16692
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !16693, metadata !94), !dbg !16694
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !16695, metadata !94), !dbg !16696
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !16697, metadata !94), !dbg !16698
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !16699, metadata !94), !dbg !16700
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !16701, metadata !94), !dbg !16702
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !16703
  store i8** %0, i8*** %dst, align 8, !dbg !16702
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !16704, metadata !94), !dbg !16705
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !16706
  %2 = bitcast i8** %1 to i16**, !dbg !16707
  store i16** %2, i16*** %src, align 8, !dbg !16705
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !16708, metadata !94), !dbg !16709
  %3 = load i16**, i16*** %src, align 8, !dbg !16710
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !16710
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !16710
  store i16* %4, i16** %src0, align 8, !dbg !16709
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !16711, metadata !94), !dbg !16712
  %5 = load i16**, i16*** %src, align 8, !dbg !16713
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !16713
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !16713
  store i16* %6, i16** %src1, align 8, !dbg !16712
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !16714, metadata !94), !dbg !16715
  %7 = load i16**, i16*** %src, align 8, !dbg !16716
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !16716
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !16716
  store i16* %8, i16** %src2, align 8, !dbg !16715
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !16717, metadata !94), !dbg !16718
  %9 = load i8**, i8*** %dst, align 8, !dbg !16719
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !16719
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !16719
  store i8* %10, i8** %dst0, align 8, !dbg !16718
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !16720, metadata !94), !dbg !16721
  %11 = load i8**, i8*** %dst, align 8, !dbg !16722
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !16722
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !16722
  store i8* %12, i8** %dst1, align 8, !dbg !16721
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !16723, metadata !94), !dbg !16724
  %13 = load i8**, i8*** %dst, align 8, !dbg !16725
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !16725
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !16725
  store i8* %14, i8** %dst2, align 8, !dbg !16724
  call void @llvm.dbg.declare(metadata i32* %y, metadata !16726, metadata !94), !dbg !16727
  call void @llvm.dbg.declare(metadata i32* %x, metadata !16728, metadata !94), !dbg !16729
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !16730, metadata !94), !dbg !16731
  store i32 16, i32* %sh, align 4, !dbg !16731
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !16732, metadata !94), !dbg !16733
  store i32 32768, i32* %rnd, align 4, !dbg !16733
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !16734, metadata !94), !dbg !16735
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16736
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !16736
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !16736
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !16736
  %conv = sext i16 %16 to i32, !dbg !16736
  store i32 %conv, i32* %y_off_in, align 4, !dbg !16735
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !16737, metadata !94), !dbg !16738
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !16739
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !16739
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !16739
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !16739
  %conv10 = sext i16 %18 to i32, !dbg !16739
  %shl = shl i32 %conv10, 16, !dbg !16740
  store i32 %shl, i32* %y_off_out, align 4, !dbg !16738
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !16741, metadata !94), !dbg !16742
  store i32 512, i32* %uv_off_in, align 4, !dbg !16742
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !16743, metadata !94), !dbg !16744
  store i32 8421376, i32* %uv_off_out, align 4, !dbg !16744
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !16745, metadata !94), !dbg !16746
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16747
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !16747
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !16747
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !16747
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16747
  %conv14 = sext i16 %20 to i32, !dbg !16747
  store i32 %conv14, i32* %cyy, align 4, !dbg !16746
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !16748, metadata !94), !dbg !16749
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16750
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !16750
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !16750
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !16750
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !16750
  %conv18 = sext i16 %22 to i32, !dbg !16750
  store i32 %conv18, i32* %cyu, align 4, !dbg !16749
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !16751, metadata !94), !dbg !16752
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16753
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !16753
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !16753
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !16753
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !16753
  %conv22 = sext i16 %24 to i32, !dbg !16753
  store i32 %conv22, i32* %cyv, align 4, !dbg !16752
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !16754, metadata !94), !dbg !16755
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16756
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !16756
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !16756
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !16756
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !16756
  %conv26 = sext i16 %26 to i32, !dbg !16756
  store i32 %conv26, i32* %cuu, align 4, !dbg !16755
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !16757, metadata !94), !dbg !16758
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16759
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !16759
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !16759
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !16759
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !16759
  %conv30 = sext i16 %28 to i32, !dbg !16759
  store i32 %conv30, i32* %cuv, align 4, !dbg !16758
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !16760, metadata !94), !dbg !16761
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16762
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !16762
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !16762
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !16762
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !16762
  %conv34 = sext i16 %30 to i32, !dbg !16762
  store i32 %conv34, i32* %cvu, align 4, !dbg !16761
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !16763, metadata !94), !dbg !16764
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !16765
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !16765
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !16765
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !16765
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !16765
  %conv38 = sext i16 %32 to i32, !dbg !16765
  store i32 %conv38, i32* %cvv, align 4, !dbg !16764
  %33 = load i32, i32* %w.addr, align 4, !dbg !16766
  %add = add nsw i32 %33, 2, !dbg !16767
  %sub = sub nsw i32 %add, 1, !dbg !16768
  %shr = ashr i32 %sub, 1, !dbg !16769
  store i32 %shr, i32* %w.addr, align 4, !dbg !16770
  %34 = load i32, i32* %h.addr, align 4, !dbg !16771
  %add39 = add nsw i32 %34, 2, !dbg !16772
  %sub40 = sub nsw i32 %add39, 1, !dbg !16773
  %shr41 = ashr i32 %sub40, 1, !dbg !16774
  store i32 %shr41, i32* %h.addr, align 4, !dbg !16775
  store i32 0, i32* %y, align 4, !dbg !16776
  br label %for.cond, !dbg !16777

for.cond:                                         ; preds = %for.inc156, %entry
  %35 = load i32, i32* %y, align 4, !dbg !16778
  %36 = load i32, i32* %h.addr, align 4, !dbg !16780
  %cmp = icmp slt i32 %35, %36, !dbg !16781
  br i1 %cmp, label %for.body, label %for.end158, !dbg !16782

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !16783
  br label %for.cond43, !dbg !16784

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !16785
  %38 = load i32, i32* %w.addr, align 4, !dbg !16787
  %cmp44 = icmp slt i32 %37, %38, !dbg !16788
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !16789

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !16790, metadata !94), !dbg !16791
  %39 = load i32, i32* %x, align 4, !dbg !16792
  %shl47 = shl i32 %39, 1, !dbg !16793
  %idxprom = sext i32 %shl47 to i64, !dbg !16794
  %40 = load i16*, i16** %src0, align 8, !dbg !16794
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !16794
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !16794
  %conv49 = zext i16 %41 to i32, !dbg !16794
  %42 = load i32, i32* %y_off_in, align 4, !dbg !16795
  %sub50 = sub nsw i32 %conv49, %42, !dbg !16796
  store i32 %sub50, i32* %y00, align 4, !dbg !16791
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !16797, metadata !94), !dbg !16798
  %43 = load i32, i32* %x, align 4, !dbg !16799
  %mul = mul nsw i32 2, %43, !dbg !16800
  %add51 = add nsw i32 %mul, 1, !dbg !16801
  %idxprom52 = sext i32 %add51 to i64, !dbg !16802
  %44 = load i16*, i16** %src0, align 8, !dbg !16802
  %arrayidx53 = getelementptr inbounds i16, i16* %44, i64 %idxprom52, !dbg !16802
  %45 = load i16, i16* %arrayidx53, align 2, !dbg !16802
  %conv54 = zext i16 %45 to i32, !dbg !16802
  %46 = load i32, i32* %y_off_in, align 4, !dbg !16803
  %sub55 = sub nsw i32 %conv54, %46, !dbg !16804
  store i32 %sub55, i32* %y01, align 4, !dbg !16798
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !16805, metadata !94), !dbg !16806
  %47 = load i64*, i64** %src_stride.addr, align 8, !dbg !16807
  %arrayidx56 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !16807
  %48 = load i64, i64* %arrayidx56, align 8, !dbg !16807
  %div = udiv i64 %48, 2, !dbg !16808
  %49 = load i32, i32* %x, align 4, !dbg !16809
  %mul57 = mul nsw i32 2, %49, !dbg !16810
  %conv58 = sext i32 %mul57 to i64, !dbg !16811
  %add59 = add i64 %div, %conv58, !dbg !16812
  %50 = load i16*, i16** %src0, align 8, !dbg !16813
  %arrayidx60 = getelementptr inbounds i16, i16* %50, i64 %add59, !dbg !16813
  %51 = load i16, i16* %arrayidx60, align 2, !dbg !16813
  %conv61 = zext i16 %51 to i32, !dbg !16813
  %52 = load i32, i32* %y_off_in, align 4, !dbg !16814
  %sub62 = sub nsw i32 %conv61, %52, !dbg !16815
  store i32 %sub62, i32* %y10, align 4, !dbg !16806
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !16816, metadata !94), !dbg !16817
  %53 = load i64*, i64** %src_stride.addr, align 8, !dbg !16818
  %arrayidx63 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !16818
  %54 = load i64, i64* %arrayidx63, align 8, !dbg !16818
  %div64 = udiv i64 %54, 2, !dbg !16819
  %55 = load i32, i32* %x, align 4, !dbg !16820
  %mul65 = mul nsw i32 2, %55, !dbg !16821
  %conv66 = sext i32 %mul65 to i64, !dbg !16822
  %add67 = add i64 %div64, %conv66, !dbg !16823
  %add68 = add i64 %add67, 1, !dbg !16824
  %56 = load i16*, i16** %src0, align 8, !dbg !16825
  %arrayidx69 = getelementptr inbounds i16, i16* %56, i64 %add68, !dbg !16825
  %57 = load i16, i16* %arrayidx69, align 2, !dbg !16825
  %conv70 = zext i16 %57 to i32, !dbg !16825
  %58 = load i32, i32* %y_off_in, align 4, !dbg !16826
  %sub71 = sub nsw i32 %conv70, %58, !dbg !16827
  store i32 %sub71, i32* %y11, align 4, !dbg !16817
  call void @llvm.dbg.declare(metadata i32* %u, metadata !16828, metadata !94), !dbg !16829
  %59 = load i32, i32* %x, align 4, !dbg !16830
  %idxprom72 = sext i32 %59 to i64, !dbg !16831
  %60 = load i16*, i16** %src1, align 8, !dbg !16831
  %arrayidx73 = getelementptr inbounds i16, i16* %60, i64 %idxprom72, !dbg !16831
  %61 = load i16, i16* %arrayidx73, align 2, !dbg !16831
  %conv74 = zext i16 %61 to i32, !dbg !16831
  %sub75 = sub nsw i32 %conv74, 512, !dbg !16832
  store i32 %sub75, i32* %u, align 4, !dbg !16829
  call void @llvm.dbg.declare(metadata i32* %v, metadata !16833, metadata !94), !dbg !16834
  %62 = load i32, i32* %x, align 4, !dbg !16835
  %idxprom76 = sext i32 %62 to i64, !dbg !16836
  %63 = load i16*, i16** %src2, align 8, !dbg !16836
  %arrayidx77 = getelementptr inbounds i16, i16* %63, i64 %idxprom76, !dbg !16836
  %64 = load i16, i16* %arrayidx77, align 2, !dbg !16836
  %conv78 = zext i16 %64 to i32, !dbg !16836
  %sub79 = sub nsw i32 %conv78, 512, !dbg !16837
  store i32 %sub79, i32* %v, align 4, !dbg !16834
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !16838, metadata !94), !dbg !16839
  %65 = load i32, i32* %cyu, align 4, !dbg !16840
  %66 = load i32, i32* %u, align 4, !dbg !16841
  %mul80 = mul nsw i32 %65, %66, !dbg !16842
  %67 = load i32, i32* %cyv, align 4, !dbg !16843
  %68 = load i32, i32* %v, align 4, !dbg !16844
  %mul81 = mul nsw i32 %67, %68, !dbg !16845
  %add82 = add nsw i32 %mul80, %mul81, !dbg !16846
  %add83 = add nsw i32 %add82, 32768, !dbg !16847
  %69 = load i32, i32* %y_off_out, align 4, !dbg !16848
  %add84 = add nsw i32 %add83, %69, !dbg !16849
  store i32 %add84, i32* %uv_val, align 4, !dbg !16839
  %70 = load i32, i32* %cyy, align 4, !dbg !16850
  %71 = load i32, i32* %y00, align 4, !dbg !16851
  %mul85 = mul nsw i32 %70, %71, !dbg !16852
  %72 = load i32, i32* %uv_val, align 4, !dbg !16853
  %add86 = add nsw i32 %mul85, %72, !dbg !16854
  %shr87 = ashr i32 %add86, 16, !dbg !16855
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !16856
  %73 = load i32, i32* %a.addr.i, align 4, !dbg !16857
  %and.i = and i32 %73, -256, !dbg !16858
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16858
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16859

if.then.i:                                        ; preds = %for.body46
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !16860
  %neg.i = xor i32 %74, -1, !dbg !16861
  %shr.i = ashr i32 %neg.i, 31, !dbg !16862
  %conv.i = trunc i32 %shr.i to i8, !dbg !16863
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !16864
  br label %av_clip_uint8_c.exit, !dbg !16864

if.else.i:                                        ; preds = %for.body46
  %75 = load i32, i32* %a.addr.i, align 4, !dbg !16865
  %conv1.i = trunc i32 %75 to i8, !dbg !16865
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !16866
  br label %av_clip_uint8_c.exit, !dbg !16866

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %76 = load i8, i8* %retval.i, align 1, !dbg !16867
  %77 = load i32, i32* %x, align 4, !dbg !16868
  %shl88 = shl i32 %77, 1, !dbg !16869
  %idxprom89 = sext i32 %shl88 to i64, !dbg !16870
  %78 = load i8*, i8** %dst0, align 8, !dbg !16870
  %arrayidx90 = getelementptr inbounds i8, i8* %78, i64 %idxprom89, !dbg !16870
  store i8 %76, i8* %arrayidx90, align 1, !dbg !16871
  %79 = load i32, i32* %cyy, align 4, !dbg !16872
  %80 = load i32, i32* %y01, align 4, !dbg !16873
  %mul91 = mul nsw i32 %79, %80, !dbg !16874
  %81 = load i32, i32* %uv_val, align 4, !dbg !16875
  %add92 = add nsw i32 %mul91, %81, !dbg !16876
  %shr93 = ashr i32 %add92, 16, !dbg !16877
  store i32 %shr93, i32* %a.addr.i204, align 4, !dbg !16878
  %82 = load i32, i32* %a.addr.i204, align 4, !dbg !16879
  %and.i205 = and i32 %82, -256, !dbg !16880
  %tobool.i206 = icmp ne i32 %and.i205, 0, !dbg !16880
  br i1 %tobool.i206, label %if.then.i210, label %if.else.i212, !dbg !16881

if.then.i210:                                     ; preds = %av_clip_uint8_c.exit
  %83 = load i32, i32* %a.addr.i204, align 4, !dbg !16882
  %neg.i207 = xor i32 %83, -1, !dbg !16883
  %shr.i208 = ashr i32 %neg.i207, 31, !dbg !16884
  %conv.i209 = trunc i32 %shr.i208 to i8, !dbg !16885
  store i8 %conv.i209, i8* %retval.i203, align 1, !dbg !16886
  br label %av_clip_uint8_c.exit213, !dbg !16886

if.else.i212:                                     ; preds = %av_clip_uint8_c.exit
  %84 = load i32, i32* %a.addr.i204, align 4, !dbg !16887
  %conv1.i211 = trunc i32 %84 to i8, !dbg !16887
  store i8 %conv1.i211, i8* %retval.i203, align 1, !dbg !16888
  br label %av_clip_uint8_c.exit213, !dbg !16888

av_clip_uint8_c.exit213:                          ; preds = %if.then.i210, %if.else.i212
  %85 = load i8, i8* %retval.i203, align 1, !dbg !16889
  %86 = load i32, i32* %x, align 4, !dbg !16890
  %mul95 = mul nsw i32 %86, 2, !dbg !16891
  %add96 = add nsw i32 %mul95, 1, !dbg !16892
  %idxprom97 = sext i32 %add96 to i64, !dbg !16893
  %87 = load i8*, i8** %dst0, align 8, !dbg !16893
  %arrayidx98 = getelementptr inbounds i8, i8* %87, i64 %idxprom97, !dbg !16893
  store i8 %85, i8* %arrayidx98, align 1, !dbg !16894
  %88 = load i32, i32* %cyy, align 4, !dbg !16895
  %89 = load i32, i32* %y10, align 4, !dbg !16896
  %mul99 = mul nsw i32 %88, %89, !dbg !16897
  %90 = load i32, i32* %uv_val, align 4, !dbg !16898
  %add100 = add nsw i32 %mul99, %90, !dbg !16899
  %shr101 = ashr i32 %add100, 16, !dbg !16900
  store i32 %shr101, i32* %a.addr.i193, align 4, !dbg !16901
  %91 = load i32, i32* %a.addr.i193, align 4, !dbg !16902
  %and.i194 = and i32 %91, -256, !dbg !16903
  %tobool.i195 = icmp ne i32 %and.i194, 0, !dbg !16903
  br i1 %tobool.i195, label %if.then.i199, label %if.else.i201, !dbg !16904

if.then.i199:                                     ; preds = %av_clip_uint8_c.exit213
  %92 = load i32, i32* %a.addr.i193, align 4, !dbg !16905
  %neg.i196 = xor i32 %92, -1, !dbg !16906
  %shr.i197 = ashr i32 %neg.i196, 31, !dbg !16907
  %conv.i198 = trunc i32 %shr.i197 to i8, !dbg !16908
  store i8 %conv.i198, i8* %retval.i192, align 1, !dbg !16909
  br label %av_clip_uint8_c.exit202, !dbg !16909

if.else.i201:                                     ; preds = %av_clip_uint8_c.exit213
  %93 = load i32, i32* %a.addr.i193, align 4, !dbg !16910
  %conv1.i200 = trunc i32 %93 to i8, !dbg !16910
  store i8 %conv1.i200, i8* %retval.i192, align 1, !dbg !16911
  br label %av_clip_uint8_c.exit202, !dbg !16911

av_clip_uint8_c.exit202:                          ; preds = %if.then.i199, %if.else.i201
  %94 = load i8, i8* %retval.i192, align 1, !dbg !16912
  %95 = load i32, i32* %x, align 4, !dbg !16913
  %mul103 = mul nsw i32 %95, 2, !dbg !16914
  %add104 = add nsw i32 %mul103, 0, !dbg !16915
  %conv105 = sext i32 %add104 to i64, !dbg !16913
  %96 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16916
  %arrayidx106 = getelementptr inbounds i64, i64* %96, i64 0, !dbg !16916
  %97 = load i64, i64* %arrayidx106, align 8, !dbg !16916
  %div107 = udiv i64 %97, 1, !dbg !16917
  %add108 = add i64 %conv105, %div107, !dbg !16918
  %98 = load i8*, i8** %dst0, align 8, !dbg !16919
  %arrayidx109 = getelementptr inbounds i8, i8* %98, i64 %add108, !dbg !16919
  store i8 %94, i8* %arrayidx109, align 1, !dbg !16920
  %99 = load i32, i32* %cyy, align 4, !dbg !16921
  %100 = load i32, i32* %y11, align 4, !dbg !16922
  %mul110 = mul nsw i32 %99, %100, !dbg !16923
  %101 = load i32, i32* %uv_val, align 4, !dbg !16924
  %add111 = add nsw i32 %mul110, %101, !dbg !16925
  %shr112 = ashr i32 %add111, 16, !dbg !16926
  store i32 %shr112, i32* %a.addr.i182, align 4, !dbg !16927
  %102 = load i32, i32* %a.addr.i182, align 4, !dbg !16928
  %and.i183 = and i32 %102, -256, !dbg !16929
  %tobool.i184 = icmp ne i32 %and.i183, 0, !dbg !16929
  br i1 %tobool.i184, label %if.then.i188, label %if.else.i190, !dbg !16930

if.then.i188:                                     ; preds = %av_clip_uint8_c.exit202
  %103 = load i32, i32* %a.addr.i182, align 4, !dbg !16931
  %neg.i185 = xor i32 %103, -1, !dbg !16932
  %shr.i186 = ashr i32 %neg.i185, 31, !dbg !16933
  %conv.i187 = trunc i32 %shr.i186 to i8, !dbg !16934
  store i8 %conv.i187, i8* %retval.i181, align 1, !dbg !16935
  br label %av_clip_uint8_c.exit191, !dbg !16935

if.else.i190:                                     ; preds = %av_clip_uint8_c.exit202
  %104 = load i32, i32* %a.addr.i182, align 4, !dbg !16936
  %conv1.i189 = trunc i32 %104 to i8, !dbg !16936
  store i8 %conv1.i189, i8* %retval.i181, align 1, !dbg !16937
  br label %av_clip_uint8_c.exit191, !dbg !16937

av_clip_uint8_c.exit191:                          ; preds = %if.then.i188, %if.else.i190
  %105 = load i8, i8* %retval.i181, align 1, !dbg !16938
  %106 = load i32, i32* %x, align 4, !dbg !16939
  %mul114 = mul nsw i32 %106, 2, !dbg !16940
  %add115 = add nsw i32 %mul114, 1, !dbg !16941
  %conv116 = sext i32 %add115 to i64, !dbg !16939
  %107 = load i64*, i64** %dst_stride.addr, align 8, !dbg !16942
  %arrayidx117 = getelementptr inbounds i64, i64* %107, i64 0, !dbg !16942
  %108 = load i64, i64* %arrayidx117, align 8, !dbg !16942
  %div118 = udiv i64 %108, 1, !dbg !16943
  %add119 = add i64 %conv116, %div118, !dbg !16944
  %109 = load i8*, i8** %dst0, align 8, !dbg !16945
  %arrayidx120 = getelementptr inbounds i8, i8* %109, i64 %add119, !dbg !16945
  store i8 %105, i8* %arrayidx120, align 1, !dbg !16946
  %110 = load i32, i32* %u, align 4, !dbg !16947
  %111 = load i32, i32* %cuu, align 4, !dbg !16948
  %mul121 = mul nsw i32 %110, %111, !dbg !16949
  %112 = load i32, i32* %v, align 4, !dbg !16950
  %113 = load i32, i32* %cuv, align 4, !dbg !16951
  %mul122 = mul nsw i32 %112, %113, !dbg !16952
  %add123 = add nsw i32 %mul121, %mul122, !dbg !16953
  %add124 = add nsw i32 %add123, 8421376, !dbg !16954
  %shr125 = ashr i32 %add124, 16, !dbg !16955
  store i32 %shr125, i32* %a.addr.i171, align 4, !dbg !16956
  %114 = load i32, i32* %a.addr.i171, align 4, !dbg !16957
  %and.i172 = and i32 %114, -256, !dbg !16958
  %tobool.i173 = icmp ne i32 %and.i172, 0, !dbg !16958
  br i1 %tobool.i173, label %if.then.i177, label %if.else.i179, !dbg !16959

if.then.i177:                                     ; preds = %av_clip_uint8_c.exit191
  %115 = load i32, i32* %a.addr.i171, align 4, !dbg !16960
  %neg.i174 = xor i32 %115, -1, !dbg !16961
  %shr.i175 = ashr i32 %neg.i174, 31, !dbg !16962
  %conv.i176 = trunc i32 %shr.i175 to i8, !dbg !16963
  store i8 %conv.i176, i8* %retval.i170, align 1, !dbg !16964
  br label %av_clip_uint8_c.exit180, !dbg !16964

if.else.i179:                                     ; preds = %av_clip_uint8_c.exit191
  %116 = load i32, i32* %a.addr.i171, align 4, !dbg !16965
  %conv1.i178 = trunc i32 %116 to i8, !dbg !16965
  store i8 %conv1.i178, i8* %retval.i170, align 1, !dbg !16966
  br label %av_clip_uint8_c.exit180, !dbg !16966

av_clip_uint8_c.exit180:                          ; preds = %if.then.i177, %if.else.i179
  %117 = load i8, i8* %retval.i170, align 1, !dbg !16967
  %118 = load i32, i32* %x, align 4, !dbg !16968
  %idxprom127 = sext i32 %118 to i64, !dbg !16969
  %119 = load i8*, i8** %dst1, align 8, !dbg !16969
  %arrayidx128 = getelementptr inbounds i8, i8* %119, i64 %idxprom127, !dbg !16969
  store i8 %117, i8* %arrayidx128, align 1, !dbg !16970
  %120 = load i32, i32* %u, align 4, !dbg !16971
  %121 = load i32, i32* %cvu, align 4, !dbg !16972
  %mul129 = mul nsw i32 %120, %121, !dbg !16973
  %122 = load i32, i32* %v, align 4, !dbg !16974
  %123 = load i32, i32* %cvv, align 4, !dbg !16975
  %mul130 = mul nsw i32 %122, %123, !dbg !16976
  %add131 = add nsw i32 %mul129, %mul130, !dbg !16977
  %add132 = add nsw i32 %add131, 8421376, !dbg !16978
  %shr133 = ashr i32 %add132, 16, !dbg !16979
  store i32 %shr133, i32* %a.addr.i160, align 4, !dbg !16980
  %124 = load i32, i32* %a.addr.i160, align 4, !dbg !16981
  %and.i161 = and i32 %124, -256, !dbg !16982
  %tobool.i162 = icmp ne i32 %and.i161, 0, !dbg !16982
  br i1 %tobool.i162, label %if.then.i166, label %if.else.i168, !dbg !16983

if.then.i166:                                     ; preds = %av_clip_uint8_c.exit180
  %125 = load i32, i32* %a.addr.i160, align 4, !dbg !16984
  %neg.i163 = xor i32 %125, -1, !dbg !16985
  %shr.i164 = ashr i32 %neg.i163, 31, !dbg !16986
  %conv.i165 = trunc i32 %shr.i164 to i8, !dbg !16987
  store i8 %conv.i165, i8* %retval.i159, align 1, !dbg !16988
  br label %av_clip_uint8_c.exit169, !dbg !16988

if.else.i168:                                     ; preds = %av_clip_uint8_c.exit180
  %126 = load i32, i32* %a.addr.i160, align 4, !dbg !16989
  %conv1.i167 = trunc i32 %126 to i8, !dbg !16989
  store i8 %conv1.i167, i8* %retval.i159, align 1, !dbg !16990
  br label %av_clip_uint8_c.exit169, !dbg !16990

av_clip_uint8_c.exit169:                          ; preds = %if.then.i166, %if.else.i168
  %127 = load i8, i8* %retval.i159, align 1, !dbg !16991
  %128 = load i32, i32* %x, align 4, !dbg !16992
  %idxprom135 = sext i32 %128 to i64, !dbg !16993
  %129 = load i8*, i8** %dst2, align 8, !dbg !16993
  %arrayidx136 = getelementptr inbounds i8, i8* %129, i64 %idxprom135, !dbg !16993
  store i8 %127, i8* %arrayidx136, align 1, !dbg !16994
  br label %for.inc, !dbg !16995

for.inc:                                          ; preds = %av_clip_uint8_c.exit169
  %130 = load i32, i32* %x, align 4, !dbg !16996
  %inc = add nsw i32 %130, 1, !dbg !16996
  store i32 %inc, i32* %x, align 4, !dbg !16996
  br label %for.cond43, !dbg !16998, !llvm.loop !16999

for.end:                                          ; preds = %for.cond43
  %131 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17001
  %arrayidx137 = getelementptr inbounds i64, i64* %131, i64 0, !dbg !17001
  %132 = load i64, i64* %arrayidx137, align 8, !dbg !17001
  %mul138 = mul nsw i64 %132, 2, !dbg !17002
  %div139 = udiv i64 %mul138, 1, !dbg !17003
  %133 = load i8*, i8** %dst0, align 8, !dbg !17004
  %add.ptr = getelementptr inbounds i8, i8* %133, i64 %div139, !dbg !17004
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !17004
  %134 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17005
  %arrayidx140 = getelementptr inbounds i64, i64* %134, i64 1, !dbg !17005
  %135 = load i64, i64* %arrayidx140, align 8, !dbg !17005
  %div141 = udiv i64 %135, 1, !dbg !17006
  %136 = load i8*, i8** %dst1, align 8, !dbg !17007
  %add.ptr142 = getelementptr inbounds i8, i8* %136, i64 %div141, !dbg !17007
  store i8* %add.ptr142, i8** %dst1, align 8, !dbg !17007
  %137 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17008
  %arrayidx143 = getelementptr inbounds i64, i64* %137, i64 2, !dbg !17008
  %138 = load i64, i64* %arrayidx143, align 8, !dbg !17008
  %div144 = udiv i64 %138, 1, !dbg !17009
  %139 = load i8*, i8** %dst2, align 8, !dbg !17010
  %add.ptr145 = getelementptr inbounds i8, i8* %139, i64 %div144, !dbg !17010
  store i8* %add.ptr145, i8** %dst2, align 8, !dbg !17010
  %140 = load i64*, i64** %src_stride.addr, align 8, !dbg !17011
  %arrayidx146 = getelementptr inbounds i64, i64* %140, i64 0, !dbg !17011
  %141 = load i64, i64* %arrayidx146, align 8, !dbg !17011
  %mul147 = mul nsw i64 %141, 2, !dbg !17012
  %div148 = udiv i64 %mul147, 2, !dbg !17013
  %142 = load i16*, i16** %src0, align 8, !dbg !17014
  %add.ptr149 = getelementptr inbounds i16, i16* %142, i64 %div148, !dbg !17014
  store i16* %add.ptr149, i16** %src0, align 8, !dbg !17014
  %143 = load i64*, i64** %src_stride.addr, align 8, !dbg !17015
  %arrayidx150 = getelementptr inbounds i64, i64* %143, i64 1, !dbg !17015
  %144 = load i64, i64* %arrayidx150, align 8, !dbg !17015
  %div151 = udiv i64 %144, 2, !dbg !17016
  %145 = load i16*, i16** %src1, align 8, !dbg !17017
  %add.ptr152 = getelementptr inbounds i16, i16* %145, i64 %div151, !dbg !17017
  store i16* %add.ptr152, i16** %src1, align 8, !dbg !17017
  %146 = load i64*, i64** %src_stride.addr, align 8, !dbg !17018
  %arrayidx153 = getelementptr inbounds i64, i64* %146, i64 2, !dbg !17018
  %147 = load i64, i64* %arrayidx153, align 8, !dbg !17018
  %div154 = udiv i64 %147, 2, !dbg !17019
  %148 = load i16*, i16** %src2, align 8, !dbg !17020
  %add.ptr155 = getelementptr inbounds i16, i16* %148, i64 %div154, !dbg !17020
  store i16* %add.ptr155, i16** %src2, align 8, !dbg !17020
  br label %for.inc156, !dbg !17021

for.inc156:                                       ; preds = %for.end
  %149 = load i32, i32* %y, align 4, !dbg !17022
  %inc157 = add nsw i32 %149, 1, !dbg !17022
  store i32 %inc157, i32* %y, align 4, !dbg !17022
  br label %for.cond, !dbg !17024, !llvm.loop !17025

for.end158:                                       ; preds = %for.cond
  ret void, !dbg !17027
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p10to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !17028 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !17029
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !17037
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !17038
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !17040
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !17041
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !17043
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !17044, metadata !94), !dbg !17045
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !17046, metadata !94), !dbg !17047
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !17048, metadata !94), !dbg !17049
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !17050, metadata !94), !dbg !17051
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !17052, metadata !94), !dbg !17053
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !17054, metadata !94), !dbg !17055
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !17056, metadata !94), !dbg !17057
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !17058, metadata !94), !dbg !17059
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !17060, metadata !94), !dbg !17061
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !17062
  %1 = bitcast i8** %0 to i16**, !dbg !17063
  store i16** %1, i16*** %dst, align 8, !dbg !17061
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !17064, metadata !94), !dbg !17065
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !17066
  %3 = bitcast i8** %2 to i16**, !dbg !17067
  store i16** %3, i16*** %src, align 8, !dbg !17065
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !17068, metadata !94), !dbg !17069
  %4 = load i16**, i16*** %src, align 8, !dbg !17070
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !17070
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !17070
  store i16* %5, i16** %src0, align 8, !dbg !17069
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !17071, metadata !94), !dbg !17072
  %6 = load i16**, i16*** %src, align 8, !dbg !17073
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !17073
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !17073
  store i16* %7, i16** %src1, align 8, !dbg !17072
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !17074, metadata !94), !dbg !17075
  %8 = load i16**, i16*** %src, align 8, !dbg !17076
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !17076
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !17076
  store i16* %9, i16** %src2, align 8, !dbg !17075
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !17077, metadata !94), !dbg !17078
  %10 = load i16**, i16*** %dst, align 8, !dbg !17079
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !17079
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !17079
  store i16* %11, i16** %dst0, align 8, !dbg !17078
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !17080, metadata !94), !dbg !17081
  %12 = load i16**, i16*** %dst, align 8, !dbg !17082
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !17082
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !17082
  store i16* %13, i16** %dst1, align 8, !dbg !17081
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !17083, metadata !94), !dbg !17084
  %14 = load i16**, i16*** %dst, align 8, !dbg !17085
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !17085
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !17085
  store i16* %15, i16** %dst2, align 8, !dbg !17084
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17086, metadata !94), !dbg !17087
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17088, metadata !94), !dbg !17089
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !17090, metadata !94), !dbg !17091
  store i32 14, i32* %sh, align 4, !dbg !17091
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !17092, metadata !94), !dbg !17093
  store i32 8192, i32* %rnd, align 4, !dbg !17093
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !17094, metadata !94), !dbg !17095
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17096
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !17096
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !17096
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !17096
  %conv = sext i16 %17 to i32, !dbg !17096
  store i32 %conv, i32* %y_off_in, align 4, !dbg !17095
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !17097, metadata !94), !dbg !17098
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17099
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !17099
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !17099
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !17099
  %conv10 = sext i16 %19 to i32, !dbg !17099
  %shl = shl i32 %conv10, 14, !dbg !17100
  store i32 %shl, i32* %y_off_out, align 4, !dbg !17098
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !17101, metadata !94), !dbg !17102
  store i32 512, i32* %uv_off_in, align 4, !dbg !17102
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !17103, metadata !94), !dbg !17104
  store i32 8396800, i32* %uv_off_out, align 4, !dbg !17104
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !17105, metadata !94), !dbg !17106
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17107
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !17107
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !17107
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !17107
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !17107
  %conv14 = sext i16 %21 to i32, !dbg !17107
  store i32 %conv14, i32* %cyy, align 4, !dbg !17106
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !17108, metadata !94), !dbg !17109
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17110
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !17110
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !17110
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !17110
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !17110
  %conv18 = sext i16 %23 to i32, !dbg !17110
  store i32 %conv18, i32* %cyu, align 4, !dbg !17109
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !17111, metadata !94), !dbg !17112
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17113
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !17113
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !17113
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !17113
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !17113
  %conv22 = sext i16 %25 to i32, !dbg !17113
  store i32 %conv22, i32* %cyv, align 4, !dbg !17112
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !17114, metadata !94), !dbg !17115
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17116
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !17116
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !17116
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !17116
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !17116
  %conv26 = sext i16 %27 to i32, !dbg !17116
  store i32 %conv26, i32* %cuu, align 4, !dbg !17115
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !17117, metadata !94), !dbg !17118
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17119
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !17119
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !17119
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !17119
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !17119
  %conv30 = sext i16 %29 to i32, !dbg !17119
  store i32 %conv30, i32* %cuv, align 4, !dbg !17118
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !17120, metadata !94), !dbg !17121
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17122
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !17122
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !17122
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !17122
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !17122
  %conv34 = sext i16 %31 to i32, !dbg !17122
  store i32 %conv34, i32* %cvu, align 4, !dbg !17121
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !17123, metadata !94), !dbg !17124
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17125
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !17125
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !17125
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !17125
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !17125
  %conv38 = sext i16 %33 to i32, !dbg !17125
  store i32 %conv38, i32* %cvv, align 4, !dbg !17124
  %34 = load i32, i32* %w.addr, align 4, !dbg !17126
  %add = add nsw i32 %34, 1, !dbg !17127
  %sub = sub nsw i32 %add, 1, !dbg !17128
  %shr = ashr i32 %sub, 0, !dbg !17129
  store i32 %shr, i32* %w.addr, align 4, !dbg !17130
  %35 = load i32, i32* %h.addr, align 4, !dbg !17131
  %add39 = add nsw i32 %35, 1, !dbg !17132
  %sub40 = sub nsw i32 %add39, 1, !dbg !17133
  %shr41 = ashr i32 %sub40, 0, !dbg !17134
  store i32 %shr41, i32* %h.addr, align 4, !dbg !17135
  store i32 0, i32* %y, align 4, !dbg !17136
  br label %for.cond, !dbg !17137

for.cond:                                         ; preds = %for.inc106, %entry
  %36 = load i32, i32* %y, align 4, !dbg !17138
  %37 = load i32, i32* %h.addr, align 4, !dbg !17140
  %cmp = icmp slt i32 %36, %37, !dbg !17141
  br i1 %cmp, label %for.body, label %for.end108, !dbg !17142

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !17143
  br label %for.cond43, !dbg !17144

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !17145
  %39 = load i32, i32* %w.addr, align 4, !dbg !17147
  %cmp44 = icmp slt i32 %38, %39, !dbg !17148
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !17149

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !17150, metadata !94), !dbg !17151
  %40 = load i32, i32* %x, align 4, !dbg !17152
  %shl47 = shl i32 %40, 0, !dbg !17153
  %idxprom = sext i32 %shl47 to i64, !dbg !17154
  %41 = load i16*, i16** %src0, align 8, !dbg !17154
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !17154
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !17154
  %conv49 = zext i16 %42 to i32, !dbg !17154
  %43 = load i32, i32* %y_off_in, align 4, !dbg !17155
  %sub50 = sub nsw i32 %conv49, %43, !dbg !17156
  store i32 %sub50, i32* %y00, align 4, !dbg !17151
  call void @llvm.dbg.declare(metadata i32* %u, metadata !17157, metadata !94), !dbg !17158
  %44 = load i32, i32* %x, align 4, !dbg !17159
  %idxprom51 = sext i32 %44 to i64, !dbg !17160
  %45 = load i16*, i16** %src1, align 8, !dbg !17160
  %arrayidx52 = getelementptr inbounds i16, i16* %45, i64 %idxprom51, !dbg !17160
  %46 = load i16, i16* %arrayidx52, align 2, !dbg !17160
  %conv53 = zext i16 %46 to i32, !dbg !17160
  %sub54 = sub nsw i32 %conv53, 512, !dbg !17161
  store i32 %sub54, i32* %u, align 4, !dbg !17158
  call void @llvm.dbg.declare(metadata i32* %v, metadata !17162, metadata !94), !dbg !17163
  %47 = load i32, i32* %x, align 4, !dbg !17164
  %idxprom55 = sext i32 %47 to i64, !dbg !17165
  %48 = load i16*, i16** %src2, align 8, !dbg !17165
  %arrayidx56 = getelementptr inbounds i16, i16* %48, i64 %idxprom55, !dbg !17165
  %49 = load i16, i16* %arrayidx56, align 2, !dbg !17165
  %conv57 = zext i16 %49 to i32, !dbg !17165
  %sub58 = sub nsw i32 %conv57, 512, !dbg !17166
  store i32 %sub58, i32* %v, align 4, !dbg !17163
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !17167, metadata !94), !dbg !17168
  %50 = load i32, i32* %cyu, align 4, !dbg !17169
  %51 = load i32, i32* %u, align 4, !dbg !17170
  %mul = mul nsw i32 %50, %51, !dbg !17171
  %52 = load i32, i32* %cyv, align 4, !dbg !17172
  %53 = load i32, i32* %v, align 4, !dbg !17173
  %mul59 = mul nsw i32 %52, %53, !dbg !17174
  %add60 = add nsw i32 %mul, %mul59, !dbg !17175
  %add61 = add nsw i32 %add60, 8192, !dbg !17176
  %54 = load i32, i32* %y_off_out, align 4, !dbg !17177
  %add62 = add nsw i32 %add61, %54, !dbg !17178
  store i32 %add62, i32* %uv_val, align 4, !dbg !17168
  %55 = load i32, i32* %cyy, align 4, !dbg !17179
  %56 = load i32, i32* %y00, align 4, !dbg !17180
  %mul63 = mul nsw i32 %55, %56, !dbg !17181
  %57 = load i32, i32* %uv_val, align 4, !dbg !17182
  %add64 = add nsw i32 %mul63, %57, !dbg !17183
  %shr65 = ashr i32 %add64, 14, !dbg !17184
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !17185
  store i32 10, i32* %p.addr.i, align 4, !dbg !17185
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !17186
  %59 = load i32, i32* %p.addr.i, align 4, !dbg !17187
  %shl.i = shl i32 1, %59, !dbg !17188
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !17189
  %neg.i = xor i32 %sub.i, -1, !dbg !17190
  %and.i = and i32 %58, %neg.i, !dbg !17191
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !17191
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !17192

if.then.i:                                        ; preds = %for.body46
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !17193
  %neg1.i = xor i32 %60, -1, !dbg !17194
  %shr.i = ashr i32 %neg1.i, 31, !dbg !17195
  %61 = load i32, i32* %p.addr.i, align 4, !dbg !17196
  %shl2.i = shl i32 1, %61, !dbg !17197
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !17198
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !17199
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !17200
  br label %av_clip_uintp2_c.exit, !dbg !17200

if.else.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !17201
  store i32 %62, i32* %retval.i, align 4, !dbg !17202
  br label %av_clip_uintp2_c.exit, !dbg !17202

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %63 = load i32, i32* %retval.i, align 4, !dbg !17203
  %conv66 = trunc i32 %63 to i16, !dbg !17185
  %64 = load i32, i32* %x, align 4, !dbg !17204
  %shl67 = shl i32 %64, 0, !dbg !17205
  %idxprom68 = sext i32 %shl67 to i64, !dbg !17206
  %65 = load i16*, i16** %dst0, align 8, !dbg !17206
  %arrayidx69 = getelementptr inbounds i16, i16* %65, i64 %idxprom68, !dbg !17206
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !17207
  %66 = load i32, i32* %u, align 4, !dbg !17208
  %67 = load i32, i32* %cuu, align 4, !dbg !17209
  %mul70 = mul nsw i32 %66, %67, !dbg !17210
  %68 = load i32, i32* %v, align 4, !dbg !17211
  %69 = load i32, i32* %cuv, align 4, !dbg !17212
  %mul71 = mul nsw i32 %68, %69, !dbg !17213
  %add72 = add nsw i32 %mul70, %mul71, !dbg !17214
  %add73 = add nsw i32 %add72, 8396800, !dbg !17215
  %shr74 = ashr i32 %add73, 14, !dbg !17216
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !17217
  store i32 10, i32* %p.addr.i127, align 4, !dbg !17217
  %70 = load i32, i32* %a.addr.i126, align 4, !dbg !17218
  %71 = load i32, i32* %p.addr.i127, align 4, !dbg !17219
  %shl.i128 = shl i32 1, %71, !dbg !17220
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !17221
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !17222
  %and.i131 = and i32 %70, %neg.i130, !dbg !17223
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !17223
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !17224

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %72 = load i32, i32* %a.addr.i126, align 4, !dbg !17225
  %neg1.i133 = xor i32 %72, -1, !dbg !17226
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !17227
  %73 = load i32, i32* %p.addr.i127, align 4, !dbg !17228
  %shl2.i135 = shl i32 1, %73, !dbg !17229
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !17230
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !17231
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !17232
  br label %av_clip_uintp2_c.exit140, !dbg !17232

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i126, align 4, !dbg !17233
  store i32 %74, i32* %retval.i125, align 4, !dbg !17234
  br label %av_clip_uintp2_c.exit140, !dbg !17234

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %75 = load i32, i32* %retval.i125, align 4, !dbg !17235
  %conv76 = trunc i32 %75 to i16, !dbg !17217
  %76 = load i32, i32* %x, align 4, !dbg !17236
  %idxprom77 = sext i32 %76 to i64, !dbg !17237
  %77 = load i16*, i16** %dst1, align 8, !dbg !17237
  %arrayidx78 = getelementptr inbounds i16, i16* %77, i64 %idxprom77, !dbg !17237
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !17238
  %78 = load i32, i32* %u, align 4, !dbg !17239
  %79 = load i32, i32* %cvu, align 4, !dbg !17240
  %mul79 = mul nsw i32 %78, %79, !dbg !17241
  %80 = load i32, i32* %v, align 4, !dbg !17242
  %81 = load i32, i32* %cvv, align 4, !dbg !17243
  %mul80 = mul nsw i32 %80, %81, !dbg !17244
  %add81 = add nsw i32 %mul79, %mul80, !dbg !17245
  %add82 = add nsw i32 %add81, 8396800, !dbg !17246
  %shr83 = ashr i32 %add82, 14, !dbg !17247
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !17248
  store i32 10, i32* %p.addr.i111, align 4, !dbg !17248
  %82 = load i32, i32* %a.addr.i110, align 4, !dbg !17249
  %83 = load i32, i32* %p.addr.i111, align 4, !dbg !17250
  %shl.i112 = shl i32 1, %83, !dbg !17251
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !17252
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !17253
  %and.i115 = and i32 %82, %neg.i114, !dbg !17254
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !17254
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !17255

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %84 = load i32, i32* %a.addr.i110, align 4, !dbg !17256
  %neg1.i117 = xor i32 %84, -1, !dbg !17257
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !17258
  %85 = load i32, i32* %p.addr.i111, align 4, !dbg !17259
  %shl2.i119 = shl i32 1, %85, !dbg !17260
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !17261
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !17262
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !17263
  br label %av_clip_uintp2_c.exit124, !dbg !17263

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %86 = load i32, i32* %a.addr.i110, align 4, !dbg !17264
  store i32 %86, i32* %retval.i109, align 4, !dbg !17265
  br label %av_clip_uintp2_c.exit124, !dbg !17265

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %87 = load i32, i32* %retval.i109, align 4, !dbg !17266
  %conv85 = trunc i32 %87 to i16, !dbg !17248
  %88 = load i32, i32* %x, align 4, !dbg !17267
  %idxprom86 = sext i32 %88 to i64, !dbg !17268
  %89 = load i16*, i16** %dst2, align 8, !dbg !17268
  %arrayidx87 = getelementptr inbounds i16, i16* %89, i64 %idxprom86, !dbg !17268
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !17269
  br label %for.inc, !dbg !17270

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %90 = load i32, i32* %x, align 4, !dbg !17271
  %inc = add nsw i32 %90, 1, !dbg !17271
  store i32 %inc, i32* %x, align 4, !dbg !17271
  br label %for.cond43, !dbg !17273, !llvm.loop !17274

for.end:                                          ; preds = %for.cond43
  %91 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17276
  %arrayidx88 = getelementptr inbounds i64, i64* %91, i64 0, !dbg !17276
  %92 = load i64, i64* %arrayidx88, align 8, !dbg !17276
  %mul89 = mul nsw i64 %92, 1, !dbg !17277
  %div = udiv i64 %mul89, 2, !dbg !17278
  %93 = load i16*, i16** %dst0, align 8, !dbg !17279
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %div, !dbg !17279
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !17279
  %94 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17280
  %arrayidx90 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !17280
  %95 = load i64, i64* %arrayidx90, align 8, !dbg !17280
  %div91 = udiv i64 %95, 2, !dbg !17281
  %96 = load i16*, i16** %dst1, align 8, !dbg !17282
  %add.ptr92 = getelementptr inbounds i16, i16* %96, i64 %div91, !dbg !17282
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !17282
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17283
  %arrayidx93 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !17283
  %98 = load i64, i64* %arrayidx93, align 8, !dbg !17283
  %div94 = udiv i64 %98, 2, !dbg !17284
  %99 = load i16*, i16** %dst2, align 8, !dbg !17285
  %add.ptr95 = getelementptr inbounds i16, i16* %99, i64 %div94, !dbg !17285
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !17285
  %100 = load i64*, i64** %src_stride.addr, align 8, !dbg !17286
  %arrayidx96 = getelementptr inbounds i64, i64* %100, i64 0, !dbg !17286
  %101 = load i64, i64* %arrayidx96, align 8, !dbg !17286
  %mul97 = mul nsw i64 %101, 1, !dbg !17287
  %div98 = udiv i64 %mul97, 2, !dbg !17288
  %102 = load i16*, i16** %src0, align 8, !dbg !17289
  %add.ptr99 = getelementptr inbounds i16, i16* %102, i64 %div98, !dbg !17289
  store i16* %add.ptr99, i16** %src0, align 8, !dbg !17289
  %103 = load i64*, i64** %src_stride.addr, align 8, !dbg !17290
  %arrayidx100 = getelementptr inbounds i64, i64* %103, i64 1, !dbg !17290
  %104 = load i64, i64* %arrayidx100, align 8, !dbg !17290
  %div101 = udiv i64 %104, 2, !dbg !17291
  %105 = load i16*, i16** %src1, align 8, !dbg !17292
  %add.ptr102 = getelementptr inbounds i16, i16* %105, i64 %div101, !dbg !17292
  store i16* %add.ptr102, i16** %src1, align 8, !dbg !17292
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !17293
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 2, !dbg !17293
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !17293
  %div104 = udiv i64 %107, 2, !dbg !17294
  %108 = load i16*, i16** %src2, align 8, !dbg !17295
  %add.ptr105 = getelementptr inbounds i16, i16* %108, i64 %div104, !dbg !17295
  store i16* %add.ptr105, i16** %src2, align 8, !dbg !17295
  br label %for.inc106, !dbg !17296

for.inc106:                                       ; preds = %for.end
  %109 = load i32, i32* %y, align 4, !dbg !17297
  %inc107 = add nsw i32 %109, 1, !dbg !17297
  store i32 %inc107, i32* %y, align 4, !dbg !17297
  br label %for.cond, !dbg !17299, !llvm.loop !17300

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !17302
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p10to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !17303 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !17304
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !17312
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !17313
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !17315
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !17316
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !17318
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !17319
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !17321
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !17322, metadata !94), !dbg !17323
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !17324, metadata !94), !dbg !17325
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !17326, metadata !94), !dbg !17327
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !17328, metadata !94), !dbg !17329
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !17330, metadata !94), !dbg !17331
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !17332, metadata !94), !dbg !17333
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !17334, metadata !94), !dbg !17335
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !17336, metadata !94), !dbg !17337
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !17338, metadata !94), !dbg !17339
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !17340
  %1 = bitcast i8** %0 to i16**, !dbg !17341
  store i16** %1, i16*** %dst, align 8, !dbg !17339
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !17342, metadata !94), !dbg !17343
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !17344
  %3 = bitcast i8** %2 to i16**, !dbg !17345
  store i16** %3, i16*** %src, align 8, !dbg !17343
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !17346, metadata !94), !dbg !17347
  %4 = load i16**, i16*** %src, align 8, !dbg !17348
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !17348
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !17348
  store i16* %5, i16** %src0, align 8, !dbg !17347
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !17349, metadata !94), !dbg !17350
  %6 = load i16**, i16*** %src, align 8, !dbg !17351
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !17351
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !17351
  store i16* %7, i16** %src1, align 8, !dbg !17350
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !17352, metadata !94), !dbg !17353
  %8 = load i16**, i16*** %src, align 8, !dbg !17354
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !17354
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !17354
  store i16* %9, i16** %src2, align 8, !dbg !17353
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !17355, metadata !94), !dbg !17356
  %10 = load i16**, i16*** %dst, align 8, !dbg !17357
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !17357
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !17357
  store i16* %11, i16** %dst0, align 8, !dbg !17356
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !17358, metadata !94), !dbg !17359
  %12 = load i16**, i16*** %dst, align 8, !dbg !17360
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !17360
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !17360
  store i16* %13, i16** %dst1, align 8, !dbg !17359
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !17361, metadata !94), !dbg !17362
  %14 = load i16**, i16*** %dst, align 8, !dbg !17363
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !17363
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !17363
  store i16* %15, i16** %dst2, align 8, !dbg !17362
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17364, metadata !94), !dbg !17365
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17366, metadata !94), !dbg !17367
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !17368, metadata !94), !dbg !17369
  store i32 14, i32* %sh, align 4, !dbg !17369
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !17370, metadata !94), !dbg !17371
  store i32 8192, i32* %rnd, align 4, !dbg !17371
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !17372, metadata !94), !dbg !17373
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17374
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !17374
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !17374
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !17374
  %conv = sext i16 %17 to i32, !dbg !17374
  store i32 %conv, i32* %y_off_in, align 4, !dbg !17373
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !17375, metadata !94), !dbg !17376
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17377
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !17377
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !17377
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !17377
  %conv10 = sext i16 %19 to i32, !dbg !17377
  %shl = shl i32 %conv10, 14, !dbg !17378
  store i32 %shl, i32* %y_off_out, align 4, !dbg !17376
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !17379, metadata !94), !dbg !17380
  store i32 512, i32* %uv_off_in, align 4, !dbg !17380
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !17381, metadata !94), !dbg !17382
  store i32 8396800, i32* %uv_off_out, align 4, !dbg !17382
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !17383, metadata !94), !dbg !17384
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17385
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !17385
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !17385
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !17385
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !17385
  %conv14 = sext i16 %21 to i32, !dbg !17385
  store i32 %conv14, i32* %cyy, align 4, !dbg !17384
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !17386, metadata !94), !dbg !17387
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17388
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !17388
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !17388
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !17388
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !17388
  %conv18 = sext i16 %23 to i32, !dbg !17388
  store i32 %conv18, i32* %cyu, align 4, !dbg !17387
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !17389, metadata !94), !dbg !17390
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17391
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !17391
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !17391
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !17391
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !17391
  %conv22 = sext i16 %25 to i32, !dbg !17391
  store i32 %conv22, i32* %cyv, align 4, !dbg !17390
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !17392, metadata !94), !dbg !17393
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17394
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !17394
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !17394
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !17394
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !17394
  %conv26 = sext i16 %27 to i32, !dbg !17394
  store i32 %conv26, i32* %cuu, align 4, !dbg !17393
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !17395, metadata !94), !dbg !17396
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17397
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !17397
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !17397
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !17397
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !17397
  %conv30 = sext i16 %29 to i32, !dbg !17397
  store i32 %conv30, i32* %cuv, align 4, !dbg !17396
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !17398, metadata !94), !dbg !17399
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17400
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !17400
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !17400
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !17400
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !17400
  %conv34 = sext i16 %31 to i32, !dbg !17400
  store i32 %conv34, i32* %cvu, align 4, !dbg !17399
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !17401, metadata !94), !dbg !17402
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17403
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !17403
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !17403
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !17403
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !17403
  %conv38 = sext i16 %33 to i32, !dbg !17403
  store i32 %conv38, i32* %cvv, align 4, !dbg !17402
  %34 = load i32, i32* %w.addr, align 4, !dbg !17404
  %add = add nsw i32 %34, 2, !dbg !17405
  %sub = sub nsw i32 %add, 1, !dbg !17406
  %shr = ashr i32 %sub, 1, !dbg !17407
  store i32 %shr, i32* %w.addr, align 4, !dbg !17408
  %35 = load i32, i32* %h.addr, align 4, !dbg !17409
  %add39 = add nsw i32 %35, 1, !dbg !17410
  %sub40 = sub nsw i32 %add39, 1, !dbg !17411
  %shr41 = ashr i32 %sub40, 0, !dbg !17412
  store i32 %shr41, i32* %h.addr, align 4, !dbg !17413
  store i32 0, i32* %y, align 4, !dbg !17414
  br label %for.cond, !dbg !17415

for.cond:                                         ; preds = %for.inc121, %entry
  %36 = load i32, i32* %y, align 4, !dbg !17416
  %37 = load i32, i32* %h.addr, align 4, !dbg !17418
  %cmp = icmp slt i32 %36, %37, !dbg !17419
  br i1 %cmp, label %for.body, label %for.end123, !dbg !17420

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !17421
  br label %for.cond43, !dbg !17422

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !17423
  %39 = load i32, i32* %w.addr, align 4, !dbg !17425
  %cmp44 = icmp slt i32 %38, %39, !dbg !17426
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !17427

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !17428, metadata !94), !dbg !17429
  %40 = load i32, i32* %x, align 4, !dbg !17430
  %shl47 = shl i32 %40, 1, !dbg !17431
  %idxprom = sext i32 %shl47 to i64, !dbg !17432
  %41 = load i16*, i16** %src0, align 8, !dbg !17432
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !17432
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !17432
  %conv49 = zext i16 %42 to i32, !dbg !17432
  %43 = load i32, i32* %y_off_in, align 4, !dbg !17433
  %sub50 = sub nsw i32 %conv49, %43, !dbg !17434
  store i32 %sub50, i32* %y00, align 4, !dbg !17429
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !17435, metadata !94), !dbg !17436
  %44 = load i32, i32* %x, align 4, !dbg !17437
  %mul = mul nsw i32 2, %44, !dbg !17438
  %add51 = add nsw i32 %mul, 1, !dbg !17439
  %idxprom52 = sext i32 %add51 to i64, !dbg !17440
  %45 = load i16*, i16** %src0, align 8, !dbg !17440
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !17440
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !17440
  %conv54 = zext i16 %46 to i32, !dbg !17440
  %47 = load i32, i32* %y_off_in, align 4, !dbg !17441
  %sub55 = sub nsw i32 %conv54, %47, !dbg !17442
  store i32 %sub55, i32* %y01, align 4, !dbg !17436
  call void @llvm.dbg.declare(metadata i32* %u, metadata !17443, metadata !94), !dbg !17444
  %48 = load i32, i32* %x, align 4, !dbg !17445
  %idxprom56 = sext i32 %48 to i64, !dbg !17446
  %49 = load i16*, i16** %src1, align 8, !dbg !17446
  %arrayidx57 = getelementptr inbounds i16, i16* %49, i64 %idxprom56, !dbg !17446
  %50 = load i16, i16* %arrayidx57, align 2, !dbg !17446
  %conv58 = zext i16 %50 to i32, !dbg !17446
  %sub59 = sub nsw i32 %conv58, 512, !dbg !17447
  store i32 %sub59, i32* %u, align 4, !dbg !17444
  call void @llvm.dbg.declare(metadata i32* %v, metadata !17448, metadata !94), !dbg !17449
  %51 = load i32, i32* %x, align 4, !dbg !17450
  %idxprom60 = sext i32 %51 to i64, !dbg !17451
  %52 = load i16*, i16** %src2, align 8, !dbg !17451
  %arrayidx61 = getelementptr inbounds i16, i16* %52, i64 %idxprom60, !dbg !17451
  %53 = load i16, i16* %arrayidx61, align 2, !dbg !17451
  %conv62 = zext i16 %53 to i32, !dbg !17451
  %sub63 = sub nsw i32 %conv62, 512, !dbg !17452
  store i32 %sub63, i32* %v, align 4, !dbg !17449
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !17453, metadata !94), !dbg !17454
  %54 = load i32, i32* %cyu, align 4, !dbg !17455
  %55 = load i32, i32* %u, align 4, !dbg !17456
  %mul64 = mul nsw i32 %54, %55, !dbg !17457
  %56 = load i32, i32* %cyv, align 4, !dbg !17458
  %57 = load i32, i32* %v, align 4, !dbg !17459
  %mul65 = mul nsw i32 %56, %57, !dbg !17460
  %add66 = add nsw i32 %mul64, %mul65, !dbg !17461
  %add67 = add nsw i32 %add66, 8192, !dbg !17462
  %58 = load i32, i32* %y_off_out, align 4, !dbg !17463
  %add68 = add nsw i32 %add67, %58, !dbg !17464
  store i32 %add68, i32* %uv_val, align 4, !dbg !17454
  %59 = load i32, i32* %cyy, align 4, !dbg !17465
  %60 = load i32, i32* %y00, align 4, !dbg !17466
  %mul69 = mul nsw i32 %59, %60, !dbg !17467
  %61 = load i32, i32* %uv_val, align 4, !dbg !17468
  %add70 = add nsw i32 %mul69, %61, !dbg !17469
  %shr71 = ashr i32 %add70, 14, !dbg !17470
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !17471
  store i32 10, i32* %p.addr.i, align 4, !dbg !17471
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !17472
  %63 = load i32, i32* %p.addr.i, align 4, !dbg !17473
  %shl.i = shl i32 1, %63, !dbg !17474
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !17475
  %neg.i = xor i32 %sub.i, -1, !dbg !17476
  %and.i = and i32 %62, %neg.i, !dbg !17477
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !17477
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !17478

if.then.i:                                        ; preds = %for.body46
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !17479
  %neg1.i = xor i32 %64, -1, !dbg !17480
  %shr.i = ashr i32 %neg1.i, 31, !dbg !17481
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !17482
  %shl2.i = shl i32 1, %65, !dbg !17483
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !17484
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !17485
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !17486
  br label %av_clip_uintp2_c.exit, !dbg !17486

if.else.i:                                        ; preds = %for.body46
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !17487
  store i32 %66, i32* %retval.i, align 4, !dbg !17488
  br label %av_clip_uintp2_c.exit, !dbg !17488

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %67 = load i32, i32* %retval.i, align 4, !dbg !17489
  %conv72 = trunc i32 %67 to i16, !dbg !17471
  %68 = load i32, i32* %x, align 4, !dbg !17490
  %shl73 = shl i32 %68, 1, !dbg !17491
  %idxprom74 = sext i32 %shl73 to i64, !dbg !17492
  %69 = load i16*, i16** %dst0, align 8, !dbg !17492
  %arrayidx75 = getelementptr inbounds i16, i16* %69, i64 %idxprom74, !dbg !17492
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !17493
  %70 = load i32, i32* %cyy, align 4, !dbg !17494
  %71 = load i32, i32* %y01, align 4, !dbg !17495
  %mul76 = mul nsw i32 %70, %71, !dbg !17496
  %72 = load i32, i32* %uv_val, align 4, !dbg !17497
  %add77 = add nsw i32 %mul76, %72, !dbg !17498
  %shr78 = ashr i32 %add77, 14, !dbg !17499
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !17500
  store i32 10, i32* %p.addr.i158, align 4, !dbg !17500
  %73 = load i32, i32* %a.addr.i157, align 4, !dbg !17501
  %74 = load i32, i32* %p.addr.i158, align 4, !dbg !17502
  %shl.i159 = shl i32 1, %74, !dbg !17503
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !17504
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !17505
  %and.i162 = and i32 %73, %neg.i161, !dbg !17506
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !17506
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !17507

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %75 = load i32, i32* %a.addr.i157, align 4, !dbg !17508
  %neg1.i164 = xor i32 %75, -1, !dbg !17509
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !17510
  %76 = load i32, i32* %p.addr.i158, align 4, !dbg !17511
  %shl2.i166 = shl i32 1, %76, !dbg !17512
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !17513
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !17514
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !17515
  br label %av_clip_uintp2_c.exit171, !dbg !17515

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %77 = load i32, i32* %a.addr.i157, align 4, !dbg !17516
  store i32 %77, i32* %retval.i156, align 4, !dbg !17517
  br label %av_clip_uintp2_c.exit171, !dbg !17517

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %78 = load i32, i32* %retval.i156, align 4, !dbg !17518
  %conv80 = trunc i32 %78 to i16, !dbg !17500
  %79 = load i32, i32* %x, align 4, !dbg !17519
  %mul81 = mul nsw i32 %79, 2, !dbg !17520
  %add82 = add nsw i32 %mul81, 1, !dbg !17521
  %idxprom83 = sext i32 %add82 to i64, !dbg !17522
  %80 = load i16*, i16** %dst0, align 8, !dbg !17522
  %arrayidx84 = getelementptr inbounds i16, i16* %80, i64 %idxprom83, !dbg !17522
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !17523
  %81 = load i32, i32* %u, align 4, !dbg !17524
  %82 = load i32, i32* %cuu, align 4, !dbg !17525
  %mul85 = mul nsw i32 %81, %82, !dbg !17526
  %83 = load i32, i32* %v, align 4, !dbg !17527
  %84 = load i32, i32* %cuv, align 4, !dbg !17528
  %mul86 = mul nsw i32 %83, %84, !dbg !17529
  %add87 = add nsw i32 %mul85, %mul86, !dbg !17530
  %add88 = add nsw i32 %add87, 8396800, !dbg !17531
  %shr89 = ashr i32 %add88, 14, !dbg !17532
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !17533
  store i32 10, i32* %p.addr.i142, align 4, !dbg !17533
  %85 = load i32, i32* %a.addr.i141, align 4, !dbg !17534
  %86 = load i32, i32* %p.addr.i142, align 4, !dbg !17535
  %shl.i143 = shl i32 1, %86, !dbg !17536
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !17537
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !17538
  %and.i146 = and i32 %85, %neg.i145, !dbg !17539
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !17539
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !17540

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %87 = load i32, i32* %a.addr.i141, align 4, !dbg !17541
  %neg1.i148 = xor i32 %87, -1, !dbg !17542
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !17543
  %88 = load i32, i32* %p.addr.i142, align 4, !dbg !17544
  %shl2.i150 = shl i32 1, %88, !dbg !17545
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !17546
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !17547
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !17548
  br label %av_clip_uintp2_c.exit155, !dbg !17548

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %89 = load i32, i32* %a.addr.i141, align 4, !dbg !17549
  store i32 %89, i32* %retval.i140, align 4, !dbg !17550
  br label %av_clip_uintp2_c.exit155, !dbg !17550

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %90 = load i32, i32* %retval.i140, align 4, !dbg !17551
  %conv91 = trunc i32 %90 to i16, !dbg !17533
  %91 = load i32, i32* %x, align 4, !dbg !17552
  %idxprom92 = sext i32 %91 to i64, !dbg !17553
  %92 = load i16*, i16** %dst1, align 8, !dbg !17553
  %arrayidx93 = getelementptr inbounds i16, i16* %92, i64 %idxprom92, !dbg !17553
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !17554
  %93 = load i32, i32* %u, align 4, !dbg !17555
  %94 = load i32, i32* %cvu, align 4, !dbg !17556
  %mul94 = mul nsw i32 %93, %94, !dbg !17557
  %95 = load i32, i32* %v, align 4, !dbg !17558
  %96 = load i32, i32* %cvv, align 4, !dbg !17559
  %mul95 = mul nsw i32 %95, %96, !dbg !17560
  %add96 = add nsw i32 %mul94, %mul95, !dbg !17561
  %add97 = add nsw i32 %add96, 8396800, !dbg !17562
  %shr98 = ashr i32 %add97, 14, !dbg !17563
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !17564
  store i32 10, i32* %p.addr.i126, align 4, !dbg !17564
  %97 = load i32, i32* %a.addr.i125, align 4, !dbg !17565
  %98 = load i32, i32* %p.addr.i126, align 4, !dbg !17566
  %shl.i127 = shl i32 1, %98, !dbg !17567
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !17568
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !17569
  %and.i130 = and i32 %97, %neg.i129, !dbg !17570
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !17570
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !17571

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %99 = load i32, i32* %a.addr.i125, align 4, !dbg !17572
  %neg1.i132 = xor i32 %99, -1, !dbg !17573
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !17574
  %100 = load i32, i32* %p.addr.i126, align 4, !dbg !17575
  %shl2.i134 = shl i32 1, %100, !dbg !17576
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !17577
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !17578
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !17579
  br label %av_clip_uintp2_c.exit139, !dbg !17579

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %101 = load i32, i32* %a.addr.i125, align 4, !dbg !17580
  store i32 %101, i32* %retval.i124, align 4, !dbg !17581
  br label %av_clip_uintp2_c.exit139, !dbg !17581

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %102 = load i32, i32* %retval.i124, align 4, !dbg !17582
  %conv100 = trunc i32 %102 to i16, !dbg !17564
  %103 = load i32, i32* %x, align 4, !dbg !17583
  %idxprom101 = sext i32 %103 to i64, !dbg !17584
  %104 = load i16*, i16** %dst2, align 8, !dbg !17584
  %arrayidx102 = getelementptr inbounds i16, i16* %104, i64 %idxprom101, !dbg !17584
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !17585
  br label %for.inc, !dbg !17586

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %105 = load i32, i32* %x, align 4, !dbg !17587
  %inc = add nsw i32 %105, 1, !dbg !17587
  store i32 %inc, i32* %x, align 4, !dbg !17587
  br label %for.cond43, !dbg !17589, !llvm.loop !17590

for.end:                                          ; preds = %for.cond43
  %106 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17592
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !17592
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !17592
  %mul104 = mul nsw i64 %107, 1, !dbg !17593
  %div = udiv i64 %mul104, 2, !dbg !17594
  %108 = load i16*, i16** %dst0, align 8, !dbg !17595
  %add.ptr = getelementptr inbounds i16, i16* %108, i64 %div, !dbg !17595
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !17595
  %109 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17596
  %arrayidx105 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !17596
  %110 = load i64, i64* %arrayidx105, align 8, !dbg !17596
  %div106 = udiv i64 %110, 2, !dbg !17597
  %111 = load i16*, i16** %dst1, align 8, !dbg !17598
  %add.ptr107 = getelementptr inbounds i16, i16* %111, i64 %div106, !dbg !17598
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !17598
  %112 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17599
  %arrayidx108 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !17599
  %113 = load i64, i64* %arrayidx108, align 8, !dbg !17599
  %div109 = udiv i64 %113, 2, !dbg !17600
  %114 = load i16*, i16** %dst2, align 8, !dbg !17601
  %add.ptr110 = getelementptr inbounds i16, i16* %114, i64 %div109, !dbg !17601
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !17601
  %115 = load i64*, i64** %src_stride.addr, align 8, !dbg !17602
  %arrayidx111 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !17602
  %116 = load i64, i64* %arrayidx111, align 8, !dbg !17602
  %mul112 = mul nsw i64 %116, 1, !dbg !17603
  %div113 = udiv i64 %mul112, 2, !dbg !17604
  %117 = load i16*, i16** %src0, align 8, !dbg !17605
  %add.ptr114 = getelementptr inbounds i16, i16* %117, i64 %div113, !dbg !17605
  store i16* %add.ptr114, i16** %src0, align 8, !dbg !17605
  %118 = load i64*, i64** %src_stride.addr, align 8, !dbg !17606
  %arrayidx115 = getelementptr inbounds i64, i64* %118, i64 1, !dbg !17606
  %119 = load i64, i64* %arrayidx115, align 8, !dbg !17606
  %div116 = udiv i64 %119, 2, !dbg !17607
  %120 = load i16*, i16** %src1, align 8, !dbg !17608
  %add.ptr117 = getelementptr inbounds i16, i16* %120, i64 %div116, !dbg !17608
  store i16* %add.ptr117, i16** %src1, align 8, !dbg !17608
  %121 = load i64*, i64** %src_stride.addr, align 8, !dbg !17609
  %arrayidx118 = getelementptr inbounds i64, i64* %121, i64 2, !dbg !17609
  %122 = load i64, i64* %arrayidx118, align 8, !dbg !17609
  %div119 = udiv i64 %122, 2, !dbg !17610
  %123 = load i16*, i16** %src2, align 8, !dbg !17611
  %add.ptr120 = getelementptr inbounds i16, i16* %123, i64 %div119, !dbg !17611
  store i16* %add.ptr120, i16** %src2, align 8, !dbg !17611
  br label %for.inc121, !dbg !17612

for.inc121:                                       ; preds = %for.end
  %124 = load i32, i32* %y, align 4, !dbg !17613
  %inc122 = add nsw i32 %124, 1, !dbg !17613
  store i32 %inc122, i32* %y, align 4, !dbg !17613
  br label %for.cond, !dbg !17615, !llvm.loop !17616

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !17618
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p10to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !17619 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !17620
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !17628
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !17629
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !17631
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !17632
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !17634
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !17635
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !17637
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !17638
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !17640
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !17641
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !17643
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !17644, metadata !94), !dbg !17645
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !17646, metadata !94), !dbg !17647
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !17648, metadata !94), !dbg !17649
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !17650, metadata !94), !dbg !17651
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !17652, metadata !94), !dbg !17653
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !17654, metadata !94), !dbg !17655
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !17656, metadata !94), !dbg !17657
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !17658, metadata !94), !dbg !17659
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !17660, metadata !94), !dbg !17661
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !17662
  %1 = bitcast i8** %0 to i16**, !dbg !17663
  store i16** %1, i16*** %dst, align 8, !dbg !17661
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !17664, metadata !94), !dbg !17665
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !17666
  %3 = bitcast i8** %2 to i16**, !dbg !17667
  store i16** %3, i16*** %src, align 8, !dbg !17665
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !17668, metadata !94), !dbg !17669
  %4 = load i16**, i16*** %src, align 8, !dbg !17670
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !17670
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !17670
  store i16* %5, i16** %src0, align 8, !dbg !17669
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !17671, metadata !94), !dbg !17672
  %6 = load i16**, i16*** %src, align 8, !dbg !17673
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !17673
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !17673
  store i16* %7, i16** %src1, align 8, !dbg !17672
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !17674, metadata !94), !dbg !17675
  %8 = load i16**, i16*** %src, align 8, !dbg !17676
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !17676
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !17676
  store i16* %9, i16** %src2, align 8, !dbg !17675
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !17677, metadata !94), !dbg !17678
  %10 = load i16**, i16*** %dst, align 8, !dbg !17679
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !17679
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !17679
  store i16* %11, i16** %dst0, align 8, !dbg !17678
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !17680, metadata !94), !dbg !17681
  %12 = load i16**, i16*** %dst, align 8, !dbg !17682
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !17682
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !17682
  store i16* %13, i16** %dst1, align 8, !dbg !17681
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !17683, metadata !94), !dbg !17684
  %14 = load i16**, i16*** %dst, align 8, !dbg !17685
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !17685
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !17685
  store i16* %15, i16** %dst2, align 8, !dbg !17684
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17686, metadata !94), !dbg !17687
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17688, metadata !94), !dbg !17689
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !17690, metadata !94), !dbg !17691
  store i32 14, i32* %sh, align 4, !dbg !17691
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !17692, metadata !94), !dbg !17693
  store i32 8192, i32* %rnd, align 4, !dbg !17693
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !17694, metadata !94), !dbg !17695
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17696
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !17696
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !17696
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !17696
  %conv = sext i16 %17 to i32, !dbg !17696
  store i32 %conv, i32* %y_off_in, align 4, !dbg !17695
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !17697, metadata !94), !dbg !17698
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !17699
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !17699
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !17699
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !17699
  %conv10 = sext i16 %19 to i32, !dbg !17699
  %shl = shl i32 %conv10, 14, !dbg !17700
  store i32 %shl, i32* %y_off_out, align 4, !dbg !17698
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !17701, metadata !94), !dbg !17702
  store i32 512, i32* %uv_off_in, align 4, !dbg !17702
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !17703, metadata !94), !dbg !17704
  store i32 8396800, i32* %uv_off_out, align 4, !dbg !17704
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !17705, metadata !94), !dbg !17706
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17707
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !17707
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !17707
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !17707
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !17707
  %conv14 = sext i16 %21 to i32, !dbg !17707
  store i32 %conv14, i32* %cyy, align 4, !dbg !17706
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !17708, metadata !94), !dbg !17709
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17710
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !17710
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !17710
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !17710
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !17710
  %conv18 = sext i16 %23 to i32, !dbg !17710
  store i32 %conv18, i32* %cyu, align 4, !dbg !17709
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !17711, metadata !94), !dbg !17712
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17713
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !17713
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !17713
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !17713
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !17713
  %conv22 = sext i16 %25 to i32, !dbg !17713
  store i32 %conv22, i32* %cyv, align 4, !dbg !17712
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !17714, metadata !94), !dbg !17715
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17716
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !17716
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !17716
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !17716
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !17716
  %conv26 = sext i16 %27 to i32, !dbg !17716
  store i32 %conv26, i32* %cuu, align 4, !dbg !17715
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !17717, metadata !94), !dbg !17718
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17719
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !17719
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !17719
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !17719
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !17719
  %conv30 = sext i16 %29 to i32, !dbg !17719
  store i32 %conv30, i32* %cuv, align 4, !dbg !17718
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !17720, metadata !94), !dbg !17721
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17722
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !17722
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !17722
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !17722
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !17722
  %conv34 = sext i16 %31 to i32, !dbg !17722
  store i32 %conv34, i32* %cvu, align 4, !dbg !17721
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !17723, metadata !94), !dbg !17724
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !17725
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !17725
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !17725
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !17725
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !17725
  %conv38 = sext i16 %33 to i32, !dbg !17725
  store i32 %conv38, i32* %cvv, align 4, !dbg !17724
  %34 = load i32, i32* %w.addr, align 4, !dbg !17726
  %add = add nsw i32 %34, 2, !dbg !17727
  %sub = sub nsw i32 %add, 1, !dbg !17728
  %shr = ashr i32 %sub, 1, !dbg !17729
  store i32 %shr, i32* %w.addr, align 4, !dbg !17730
  %35 = load i32, i32* %h.addr, align 4, !dbg !17731
  %add39 = add nsw i32 %35, 2, !dbg !17732
  %sub40 = sub nsw i32 %add39, 1, !dbg !17733
  %shr41 = ashr i32 %sub40, 1, !dbg !17734
  store i32 %shr41, i32* %h.addr, align 4, !dbg !17735
  store i32 0, i32* %y, align 4, !dbg !17736
  br label %for.cond, !dbg !17737

for.cond:                                         ; preds = %for.inc162, %entry
  %36 = load i32, i32* %y, align 4, !dbg !17738
  %37 = load i32, i32* %h.addr, align 4, !dbg !17740
  %cmp = icmp slt i32 %36, %37, !dbg !17741
  br i1 %cmp, label %for.body, label %for.end164, !dbg !17742

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !17743
  br label %for.cond43, !dbg !17744

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !17745
  %39 = load i32, i32* %w.addr, align 4, !dbg !17747
  %cmp44 = icmp slt i32 %38, %39, !dbg !17748
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !17749

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !17750, metadata !94), !dbg !17751
  %40 = load i32, i32* %x, align 4, !dbg !17752
  %shl47 = shl i32 %40, 1, !dbg !17753
  %idxprom = sext i32 %shl47 to i64, !dbg !17754
  %41 = load i16*, i16** %src0, align 8, !dbg !17754
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !17754
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !17754
  %conv49 = zext i16 %42 to i32, !dbg !17754
  %43 = load i32, i32* %y_off_in, align 4, !dbg !17755
  %sub50 = sub nsw i32 %conv49, %43, !dbg !17756
  store i32 %sub50, i32* %y00, align 4, !dbg !17751
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !17757, metadata !94), !dbg !17758
  %44 = load i32, i32* %x, align 4, !dbg !17759
  %mul = mul nsw i32 2, %44, !dbg !17760
  %add51 = add nsw i32 %mul, 1, !dbg !17761
  %idxprom52 = sext i32 %add51 to i64, !dbg !17762
  %45 = load i16*, i16** %src0, align 8, !dbg !17762
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !17762
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !17762
  %conv54 = zext i16 %46 to i32, !dbg !17762
  %47 = load i32, i32* %y_off_in, align 4, !dbg !17763
  %sub55 = sub nsw i32 %conv54, %47, !dbg !17764
  store i32 %sub55, i32* %y01, align 4, !dbg !17758
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !17765, metadata !94), !dbg !17766
  %48 = load i64*, i64** %src_stride.addr, align 8, !dbg !17767
  %arrayidx56 = getelementptr inbounds i64, i64* %48, i64 0, !dbg !17767
  %49 = load i64, i64* %arrayidx56, align 8, !dbg !17767
  %div = udiv i64 %49, 2, !dbg !17768
  %50 = load i32, i32* %x, align 4, !dbg !17769
  %mul57 = mul nsw i32 2, %50, !dbg !17770
  %conv58 = sext i32 %mul57 to i64, !dbg !17771
  %add59 = add i64 %div, %conv58, !dbg !17772
  %51 = load i16*, i16** %src0, align 8, !dbg !17773
  %arrayidx60 = getelementptr inbounds i16, i16* %51, i64 %add59, !dbg !17773
  %52 = load i16, i16* %arrayidx60, align 2, !dbg !17773
  %conv61 = zext i16 %52 to i32, !dbg !17773
  %53 = load i32, i32* %y_off_in, align 4, !dbg !17774
  %sub62 = sub nsw i32 %conv61, %53, !dbg !17775
  store i32 %sub62, i32* %y10, align 4, !dbg !17766
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !17776, metadata !94), !dbg !17777
  %54 = load i64*, i64** %src_stride.addr, align 8, !dbg !17778
  %arrayidx63 = getelementptr inbounds i64, i64* %54, i64 0, !dbg !17778
  %55 = load i64, i64* %arrayidx63, align 8, !dbg !17778
  %div64 = udiv i64 %55, 2, !dbg !17779
  %56 = load i32, i32* %x, align 4, !dbg !17780
  %mul65 = mul nsw i32 2, %56, !dbg !17781
  %conv66 = sext i32 %mul65 to i64, !dbg !17782
  %add67 = add i64 %div64, %conv66, !dbg !17783
  %add68 = add i64 %add67, 1, !dbg !17784
  %57 = load i16*, i16** %src0, align 8, !dbg !17785
  %arrayidx69 = getelementptr inbounds i16, i16* %57, i64 %add68, !dbg !17785
  %58 = load i16, i16* %arrayidx69, align 2, !dbg !17785
  %conv70 = zext i16 %58 to i32, !dbg !17785
  %59 = load i32, i32* %y_off_in, align 4, !dbg !17786
  %sub71 = sub nsw i32 %conv70, %59, !dbg !17787
  store i32 %sub71, i32* %y11, align 4, !dbg !17777
  call void @llvm.dbg.declare(metadata i32* %u, metadata !17788, metadata !94), !dbg !17789
  %60 = load i32, i32* %x, align 4, !dbg !17790
  %idxprom72 = sext i32 %60 to i64, !dbg !17791
  %61 = load i16*, i16** %src1, align 8, !dbg !17791
  %arrayidx73 = getelementptr inbounds i16, i16* %61, i64 %idxprom72, !dbg !17791
  %62 = load i16, i16* %arrayidx73, align 2, !dbg !17791
  %conv74 = zext i16 %62 to i32, !dbg !17791
  %sub75 = sub nsw i32 %conv74, 512, !dbg !17792
  store i32 %sub75, i32* %u, align 4, !dbg !17789
  call void @llvm.dbg.declare(metadata i32* %v, metadata !17793, metadata !94), !dbg !17794
  %63 = load i32, i32* %x, align 4, !dbg !17795
  %idxprom76 = sext i32 %63 to i64, !dbg !17796
  %64 = load i16*, i16** %src2, align 8, !dbg !17796
  %arrayidx77 = getelementptr inbounds i16, i16* %64, i64 %idxprom76, !dbg !17796
  %65 = load i16, i16* %arrayidx77, align 2, !dbg !17796
  %conv78 = zext i16 %65 to i32, !dbg !17796
  %sub79 = sub nsw i32 %conv78, 512, !dbg !17797
  store i32 %sub79, i32* %v, align 4, !dbg !17794
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !17798, metadata !94), !dbg !17799
  %66 = load i32, i32* %cyu, align 4, !dbg !17800
  %67 = load i32, i32* %u, align 4, !dbg !17801
  %mul80 = mul nsw i32 %66, %67, !dbg !17802
  %68 = load i32, i32* %cyv, align 4, !dbg !17803
  %69 = load i32, i32* %v, align 4, !dbg !17804
  %mul81 = mul nsw i32 %68, %69, !dbg !17805
  %add82 = add nsw i32 %mul80, %mul81, !dbg !17806
  %add83 = add nsw i32 %add82, 8192, !dbg !17807
  %70 = load i32, i32* %y_off_out, align 4, !dbg !17808
  %add84 = add nsw i32 %add83, %70, !dbg !17809
  store i32 %add84, i32* %uv_val, align 4, !dbg !17799
  %71 = load i32, i32* %cyy, align 4, !dbg !17810
  %72 = load i32, i32* %y00, align 4, !dbg !17811
  %mul85 = mul nsw i32 %71, %72, !dbg !17812
  %73 = load i32, i32* %uv_val, align 4, !dbg !17813
  %add86 = add nsw i32 %mul85, %73, !dbg !17814
  %shr87 = ashr i32 %add86, 14, !dbg !17815
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !17816
  store i32 10, i32* %p.addr.i, align 4, !dbg !17816
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !17817
  %75 = load i32, i32* %p.addr.i, align 4, !dbg !17818
  %shl.i = shl i32 1, %75, !dbg !17819
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !17820
  %neg.i = xor i32 %sub.i, -1, !dbg !17821
  %and.i = and i32 %74, %neg.i, !dbg !17822
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !17822
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !17823

if.then.i:                                        ; preds = %for.body46
  %76 = load i32, i32* %a.addr.i, align 4, !dbg !17824
  %neg1.i = xor i32 %76, -1, !dbg !17825
  %shr.i = ashr i32 %neg1.i, 31, !dbg !17826
  %77 = load i32, i32* %p.addr.i, align 4, !dbg !17827
  %shl2.i = shl i32 1, %77, !dbg !17828
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !17829
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !17830
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !17831
  br label %av_clip_uintp2_c.exit, !dbg !17831

if.else.i:                                        ; preds = %for.body46
  %78 = load i32, i32* %a.addr.i, align 4, !dbg !17832
  store i32 %78, i32* %retval.i, align 4, !dbg !17833
  br label %av_clip_uintp2_c.exit, !dbg !17833

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %79 = load i32, i32* %retval.i, align 4, !dbg !17834
  %conv88 = trunc i32 %79 to i16, !dbg !17816
  %80 = load i32, i32* %x, align 4, !dbg !17835
  %shl89 = shl i32 %80, 1, !dbg !17836
  %idxprom90 = sext i32 %shl89 to i64, !dbg !17837
  %81 = load i16*, i16** %dst0, align 8, !dbg !17837
  %arrayidx91 = getelementptr inbounds i16, i16* %81, i64 %idxprom90, !dbg !17837
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !17838
  %82 = load i32, i32* %cyy, align 4, !dbg !17839
  %83 = load i32, i32* %y01, align 4, !dbg !17840
  %mul92 = mul nsw i32 %82, %83, !dbg !17841
  %84 = load i32, i32* %uv_val, align 4, !dbg !17842
  %add93 = add nsw i32 %mul92, %84, !dbg !17843
  %shr94 = ashr i32 %add93, 14, !dbg !17844
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !17845
  store i32 10, i32* %p.addr.i231, align 4, !dbg !17845
  %85 = load i32, i32* %a.addr.i230, align 4, !dbg !17846
  %86 = load i32, i32* %p.addr.i231, align 4, !dbg !17847
  %shl.i232 = shl i32 1, %86, !dbg !17848
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !17849
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !17850
  %and.i235 = and i32 %85, %neg.i234, !dbg !17851
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !17851
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !17852

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %87 = load i32, i32* %a.addr.i230, align 4, !dbg !17853
  %neg1.i237 = xor i32 %87, -1, !dbg !17854
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !17855
  %88 = load i32, i32* %p.addr.i231, align 4, !dbg !17856
  %shl2.i239 = shl i32 1, %88, !dbg !17857
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !17858
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !17859
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !17860
  br label %av_clip_uintp2_c.exit244, !dbg !17860

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %89 = load i32, i32* %a.addr.i230, align 4, !dbg !17861
  store i32 %89, i32* %retval.i229, align 4, !dbg !17862
  br label %av_clip_uintp2_c.exit244, !dbg !17862

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %90 = load i32, i32* %retval.i229, align 4, !dbg !17863
  %conv96 = trunc i32 %90 to i16, !dbg !17845
  %91 = load i32, i32* %x, align 4, !dbg !17864
  %mul97 = mul nsw i32 %91, 2, !dbg !17865
  %add98 = add nsw i32 %mul97, 1, !dbg !17866
  %idxprom99 = sext i32 %add98 to i64, !dbg !17867
  %92 = load i16*, i16** %dst0, align 8, !dbg !17867
  %arrayidx100 = getelementptr inbounds i16, i16* %92, i64 %idxprom99, !dbg !17867
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !17868
  %93 = load i32, i32* %cyy, align 4, !dbg !17869
  %94 = load i32, i32* %y10, align 4, !dbg !17870
  %mul101 = mul nsw i32 %93, %94, !dbg !17871
  %95 = load i32, i32* %uv_val, align 4, !dbg !17872
  %add102 = add nsw i32 %mul101, %95, !dbg !17873
  %shr103 = ashr i32 %add102, 14, !dbg !17874
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !17875
  store i32 10, i32* %p.addr.i215, align 4, !dbg !17875
  %96 = load i32, i32* %a.addr.i214, align 4, !dbg !17876
  %97 = load i32, i32* %p.addr.i215, align 4, !dbg !17877
  %shl.i216 = shl i32 1, %97, !dbg !17878
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !17879
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !17880
  %and.i219 = and i32 %96, %neg.i218, !dbg !17881
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !17881
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !17882

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %98 = load i32, i32* %a.addr.i214, align 4, !dbg !17883
  %neg1.i221 = xor i32 %98, -1, !dbg !17884
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !17885
  %99 = load i32, i32* %p.addr.i215, align 4, !dbg !17886
  %shl2.i223 = shl i32 1, %99, !dbg !17887
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !17888
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !17889
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !17890
  br label %av_clip_uintp2_c.exit228, !dbg !17890

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %100 = load i32, i32* %a.addr.i214, align 4, !dbg !17891
  store i32 %100, i32* %retval.i213, align 4, !dbg !17892
  br label %av_clip_uintp2_c.exit228, !dbg !17892

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %101 = load i32, i32* %retval.i213, align 4, !dbg !17893
  %conv105 = trunc i32 %101 to i16, !dbg !17875
  %102 = load i32, i32* %x, align 4, !dbg !17894
  %mul106 = mul nsw i32 %102, 2, !dbg !17895
  %add107 = add nsw i32 %mul106, 0, !dbg !17896
  %conv108 = sext i32 %add107 to i64, !dbg !17894
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17897
  %arrayidx109 = getelementptr inbounds i64, i64* %103, i64 0, !dbg !17897
  %104 = load i64, i64* %arrayidx109, align 8, !dbg !17897
  %div110 = udiv i64 %104, 2, !dbg !17898
  %add111 = add i64 %conv108, %div110, !dbg !17899
  %105 = load i16*, i16** %dst0, align 8, !dbg !17900
  %arrayidx112 = getelementptr inbounds i16, i16* %105, i64 %add111, !dbg !17900
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !17901
  %106 = load i32, i32* %cyy, align 4, !dbg !17902
  %107 = load i32, i32* %y11, align 4, !dbg !17903
  %mul113 = mul nsw i32 %106, %107, !dbg !17904
  %108 = load i32, i32* %uv_val, align 4, !dbg !17905
  %add114 = add nsw i32 %mul113, %108, !dbg !17906
  %shr115 = ashr i32 %add114, 14, !dbg !17907
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !17908
  store i32 10, i32* %p.addr.i199, align 4, !dbg !17908
  %109 = load i32, i32* %a.addr.i198, align 4, !dbg !17909
  %110 = load i32, i32* %p.addr.i199, align 4, !dbg !17910
  %shl.i200 = shl i32 1, %110, !dbg !17911
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !17912
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !17913
  %and.i203 = and i32 %109, %neg.i202, !dbg !17914
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !17914
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !17915

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %111 = load i32, i32* %a.addr.i198, align 4, !dbg !17916
  %neg1.i205 = xor i32 %111, -1, !dbg !17917
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !17918
  %112 = load i32, i32* %p.addr.i199, align 4, !dbg !17919
  %shl2.i207 = shl i32 1, %112, !dbg !17920
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !17921
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !17922
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !17923
  br label %av_clip_uintp2_c.exit212, !dbg !17923

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %113 = load i32, i32* %a.addr.i198, align 4, !dbg !17924
  store i32 %113, i32* %retval.i197, align 4, !dbg !17925
  br label %av_clip_uintp2_c.exit212, !dbg !17925

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %114 = load i32, i32* %retval.i197, align 4, !dbg !17926
  %conv117 = trunc i32 %114 to i16, !dbg !17908
  %115 = load i32, i32* %x, align 4, !dbg !17927
  %mul118 = mul nsw i32 %115, 2, !dbg !17928
  %add119 = add nsw i32 %mul118, 1, !dbg !17929
  %conv120 = sext i32 %add119 to i64, !dbg !17927
  %116 = load i64*, i64** %dst_stride.addr, align 8, !dbg !17930
  %arrayidx121 = getelementptr inbounds i64, i64* %116, i64 0, !dbg !17930
  %117 = load i64, i64* %arrayidx121, align 8, !dbg !17930
  %div122 = udiv i64 %117, 2, !dbg !17931
  %add123 = add i64 %conv120, %div122, !dbg !17932
  %118 = load i16*, i16** %dst0, align 8, !dbg !17933
  %arrayidx124 = getelementptr inbounds i16, i16* %118, i64 %add123, !dbg !17933
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !17934
  %119 = load i32, i32* %u, align 4, !dbg !17935
  %120 = load i32, i32* %cuu, align 4, !dbg !17936
  %mul125 = mul nsw i32 %119, %120, !dbg !17937
  %121 = load i32, i32* %v, align 4, !dbg !17938
  %122 = load i32, i32* %cuv, align 4, !dbg !17939
  %mul126 = mul nsw i32 %121, %122, !dbg !17940
  %add127 = add nsw i32 %mul125, %mul126, !dbg !17941
  %add128 = add nsw i32 %add127, 8396800, !dbg !17942
  %shr129 = ashr i32 %add128, 14, !dbg !17943
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !17944
  store i32 10, i32* %p.addr.i183, align 4, !dbg !17944
  %123 = load i32, i32* %a.addr.i182, align 4, !dbg !17945
  %124 = load i32, i32* %p.addr.i183, align 4, !dbg !17946
  %shl.i184 = shl i32 1, %124, !dbg !17947
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !17948
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !17949
  %and.i187 = and i32 %123, %neg.i186, !dbg !17950
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !17950
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !17951

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %125 = load i32, i32* %a.addr.i182, align 4, !dbg !17952
  %neg1.i189 = xor i32 %125, -1, !dbg !17953
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !17954
  %126 = load i32, i32* %p.addr.i183, align 4, !dbg !17955
  %shl2.i191 = shl i32 1, %126, !dbg !17956
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !17957
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !17958
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !17959
  br label %av_clip_uintp2_c.exit196, !dbg !17959

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %127 = load i32, i32* %a.addr.i182, align 4, !dbg !17960
  store i32 %127, i32* %retval.i181, align 4, !dbg !17961
  br label %av_clip_uintp2_c.exit196, !dbg !17961

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %128 = load i32, i32* %retval.i181, align 4, !dbg !17962
  %conv131 = trunc i32 %128 to i16, !dbg !17944
  %129 = load i32, i32* %x, align 4, !dbg !17963
  %idxprom132 = sext i32 %129 to i64, !dbg !17964
  %130 = load i16*, i16** %dst1, align 8, !dbg !17964
  %arrayidx133 = getelementptr inbounds i16, i16* %130, i64 %idxprom132, !dbg !17964
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !17965
  %131 = load i32, i32* %u, align 4, !dbg !17966
  %132 = load i32, i32* %cvu, align 4, !dbg !17967
  %mul134 = mul nsw i32 %131, %132, !dbg !17968
  %133 = load i32, i32* %v, align 4, !dbg !17969
  %134 = load i32, i32* %cvv, align 4, !dbg !17970
  %mul135 = mul nsw i32 %133, %134, !dbg !17971
  %add136 = add nsw i32 %mul134, %mul135, !dbg !17972
  %add137 = add nsw i32 %add136, 8396800, !dbg !17973
  %shr138 = ashr i32 %add137, 14, !dbg !17974
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !17975
  store i32 10, i32* %p.addr.i167, align 4, !dbg !17975
  %135 = load i32, i32* %a.addr.i166, align 4, !dbg !17976
  %136 = load i32, i32* %p.addr.i167, align 4, !dbg !17977
  %shl.i168 = shl i32 1, %136, !dbg !17978
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !17979
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !17980
  %and.i171 = and i32 %135, %neg.i170, !dbg !17981
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !17981
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !17982

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %137 = load i32, i32* %a.addr.i166, align 4, !dbg !17983
  %neg1.i173 = xor i32 %137, -1, !dbg !17984
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !17985
  %138 = load i32, i32* %p.addr.i167, align 4, !dbg !17986
  %shl2.i175 = shl i32 1, %138, !dbg !17987
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !17988
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !17989
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !17990
  br label %av_clip_uintp2_c.exit180, !dbg !17990

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %139 = load i32, i32* %a.addr.i166, align 4, !dbg !17991
  store i32 %139, i32* %retval.i165, align 4, !dbg !17992
  br label %av_clip_uintp2_c.exit180, !dbg !17992

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %140 = load i32, i32* %retval.i165, align 4, !dbg !17993
  %conv140 = trunc i32 %140 to i16, !dbg !17975
  %141 = load i32, i32* %x, align 4, !dbg !17994
  %idxprom141 = sext i32 %141 to i64, !dbg !17995
  %142 = load i16*, i16** %dst2, align 8, !dbg !17995
  %arrayidx142 = getelementptr inbounds i16, i16* %142, i64 %idxprom141, !dbg !17995
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !17996
  br label %for.inc, !dbg !17997

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %143 = load i32, i32* %x, align 4, !dbg !17998
  %inc = add nsw i32 %143, 1, !dbg !17998
  store i32 %inc, i32* %x, align 4, !dbg !17998
  br label %for.cond43, !dbg !18000, !llvm.loop !18001

for.end:                                          ; preds = %for.cond43
  %144 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18003
  %arrayidx143 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !18003
  %145 = load i64, i64* %arrayidx143, align 8, !dbg !18003
  %mul144 = mul nsw i64 %145, 2, !dbg !18004
  %div145 = udiv i64 %mul144, 2, !dbg !18005
  %146 = load i16*, i16** %dst0, align 8, !dbg !18006
  %add.ptr = getelementptr inbounds i16, i16* %146, i64 %div145, !dbg !18006
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !18006
  %147 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18007
  %arrayidx146 = getelementptr inbounds i64, i64* %147, i64 1, !dbg !18007
  %148 = load i64, i64* %arrayidx146, align 8, !dbg !18007
  %div147 = udiv i64 %148, 2, !dbg !18008
  %149 = load i16*, i16** %dst1, align 8, !dbg !18009
  %add.ptr148 = getelementptr inbounds i16, i16* %149, i64 %div147, !dbg !18009
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !18009
  %150 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18010
  %arrayidx149 = getelementptr inbounds i64, i64* %150, i64 2, !dbg !18010
  %151 = load i64, i64* %arrayidx149, align 8, !dbg !18010
  %div150 = udiv i64 %151, 2, !dbg !18011
  %152 = load i16*, i16** %dst2, align 8, !dbg !18012
  %add.ptr151 = getelementptr inbounds i16, i16* %152, i64 %div150, !dbg !18012
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !18012
  %153 = load i64*, i64** %src_stride.addr, align 8, !dbg !18013
  %arrayidx152 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !18013
  %154 = load i64, i64* %arrayidx152, align 8, !dbg !18013
  %mul153 = mul nsw i64 %154, 2, !dbg !18014
  %div154 = udiv i64 %mul153, 2, !dbg !18015
  %155 = load i16*, i16** %src0, align 8, !dbg !18016
  %add.ptr155 = getelementptr inbounds i16, i16* %155, i64 %div154, !dbg !18016
  store i16* %add.ptr155, i16** %src0, align 8, !dbg !18016
  %156 = load i64*, i64** %src_stride.addr, align 8, !dbg !18017
  %arrayidx156 = getelementptr inbounds i64, i64* %156, i64 1, !dbg !18017
  %157 = load i64, i64* %arrayidx156, align 8, !dbg !18017
  %div157 = udiv i64 %157, 2, !dbg !18018
  %158 = load i16*, i16** %src1, align 8, !dbg !18019
  %add.ptr158 = getelementptr inbounds i16, i16* %158, i64 %div157, !dbg !18019
  store i16* %add.ptr158, i16** %src1, align 8, !dbg !18019
  %159 = load i64*, i64** %src_stride.addr, align 8, !dbg !18020
  %arrayidx159 = getelementptr inbounds i64, i64* %159, i64 2, !dbg !18020
  %160 = load i64, i64* %arrayidx159, align 8, !dbg !18020
  %div160 = udiv i64 %160, 2, !dbg !18021
  %161 = load i16*, i16** %src2, align 8, !dbg !18022
  %add.ptr161 = getelementptr inbounds i16, i16* %161, i64 %div160, !dbg !18022
  store i16* %add.ptr161, i16** %src2, align 8, !dbg !18022
  br label %for.inc162, !dbg !18023

for.inc162:                                       ; preds = %for.end
  %162 = load i32, i32* %y, align 4, !dbg !18024
  %inc163 = add nsw i32 %162, 1, !dbg !18024
  store i32 %inc163, i32* %y, align 4, !dbg !18024
  br label %for.cond, !dbg !18026, !llvm.loop !18027

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !18029
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p10to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !18030 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !18031
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !18039
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !18040
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !18042
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !18043
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !18045
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !18046, metadata !94), !dbg !18047
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !18048, metadata !94), !dbg !18049
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !18050, metadata !94), !dbg !18051
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !18052, metadata !94), !dbg !18053
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !18054, metadata !94), !dbg !18055
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !18056, metadata !94), !dbg !18057
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !18058, metadata !94), !dbg !18059
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !18060, metadata !94), !dbg !18061
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !18062, metadata !94), !dbg !18063
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !18064
  %1 = bitcast i8** %0 to i16**, !dbg !18065
  store i16** %1, i16*** %dst, align 8, !dbg !18063
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !18066, metadata !94), !dbg !18067
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !18068
  %3 = bitcast i8** %2 to i16**, !dbg !18069
  store i16** %3, i16*** %src, align 8, !dbg !18067
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !18070, metadata !94), !dbg !18071
  %4 = load i16**, i16*** %src, align 8, !dbg !18072
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !18072
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !18072
  store i16* %5, i16** %src0, align 8, !dbg !18071
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !18073, metadata !94), !dbg !18074
  %6 = load i16**, i16*** %src, align 8, !dbg !18075
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !18075
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !18075
  store i16* %7, i16** %src1, align 8, !dbg !18074
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !18076, metadata !94), !dbg !18077
  %8 = load i16**, i16*** %src, align 8, !dbg !18078
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !18078
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !18078
  store i16* %9, i16** %src2, align 8, !dbg !18077
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !18079, metadata !94), !dbg !18080
  %10 = load i16**, i16*** %dst, align 8, !dbg !18081
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !18081
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !18081
  store i16* %11, i16** %dst0, align 8, !dbg !18080
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !18082, metadata !94), !dbg !18083
  %12 = load i16**, i16*** %dst, align 8, !dbg !18084
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !18084
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !18084
  store i16* %13, i16** %dst1, align 8, !dbg !18083
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !18085, metadata !94), !dbg !18086
  %14 = load i16**, i16*** %dst, align 8, !dbg !18087
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !18087
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !18087
  store i16* %15, i16** %dst2, align 8, !dbg !18086
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18088, metadata !94), !dbg !18089
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18090, metadata !94), !dbg !18091
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !18092, metadata !94), !dbg !18093
  store i32 12, i32* %sh, align 4, !dbg !18093
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !18094, metadata !94), !dbg !18095
  store i32 2048, i32* %rnd, align 4, !dbg !18095
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !18096, metadata !94), !dbg !18097
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18098
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !18098
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !18098
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !18098
  %conv = sext i16 %17 to i32, !dbg !18098
  store i32 %conv, i32* %y_off_in, align 4, !dbg !18097
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !18099, metadata !94), !dbg !18100
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18101
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !18101
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !18101
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !18101
  %conv10 = sext i16 %19 to i32, !dbg !18101
  %shl = shl i32 %conv10, 12, !dbg !18102
  store i32 %shl, i32* %y_off_out, align 4, !dbg !18100
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !18103, metadata !94), !dbg !18104
  store i32 512, i32* %uv_off_in, align 4, !dbg !18104
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !18105, metadata !94), !dbg !18106
  store i32 8390656, i32* %uv_off_out, align 4, !dbg !18106
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !18107, metadata !94), !dbg !18108
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18109
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !18109
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !18109
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !18109
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !18109
  %conv14 = sext i16 %21 to i32, !dbg !18109
  store i32 %conv14, i32* %cyy, align 4, !dbg !18108
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !18110, metadata !94), !dbg !18111
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18112
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !18112
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !18112
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !18112
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !18112
  %conv18 = sext i16 %23 to i32, !dbg !18112
  store i32 %conv18, i32* %cyu, align 4, !dbg !18111
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !18113, metadata !94), !dbg !18114
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18115
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !18115
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !18115
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !18115
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !18115
  %conv22 = sext i16 %25 to i32, !dbg !18115
  store i32 %conv22, i32* %cyv, align 4, !dbg !18114
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !18116, metadata !94), !dbg !18117
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18118
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !18118
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !18118
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !18118
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !18118
  %conv26 = sext i16 %27 to i32, !dbg !18118
  store i32 %conv26, i32* %cuu, align 4, !dbg !18117
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !18119, metadata !94), !dbg !18120
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18121
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !18121
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !18121
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !18121
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !18121
  %conv30 = sext i16 %29 to i32, !dbg !18121
  store i32 %conv30, i32* %cuv, align 4, !dbg !18120
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !18122, metadata !94), !dbg !18123
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18124
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !18124
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !18124
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !18124
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !18124
  %conv34 = sext i16 %31 to i32, !dbg !18124
  store i32 %conv34, i32* %cvu, align 4, !dbg !18123
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !18125, metadata !94), !dbg !18126
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18127
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !18127
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !18127
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !18127
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !18127
  %conv38 = sext i16 %33 to i32, !dbg !18127
  store i32 %conv38, i32* %cvv, align 4, !dbg !18126
  %34 = load i32, i32* %w.addr, align 4, !dbg !18128
  %add = add nsw i32 %34, 1, !dbg !18129
  %sub = sub nsw i32 %add, 1, !dbg !18130
  %shr = ashr i32 %sub, 0, !dbg !18131
  store i32 %shr, i32* %w.addr, align 4, !dbg !18132
  %35 = load i32, i32* %h.addr, align 4, !dbg !18133
  %add39 = add nsw i32 %35, 1, !dbg !18134
  %sub40 = sub nsw i32 %add39, 1, !dbg !18135
  %shr41 = ashr i32 %sub40, 0, !dbg !18136
  store i32 %shr41, i32* %h.addr, align 4, !dbg !18137
  store i32 0, i32* %y, align 4, !dbg !18138
  br label %for.cond, !dbg !18139

for.cond:                                         ; preds = %for.inc106, %entry
  %36 = load i32, i32* %y, align 4, !dbg !18140
  %37 = load i32, i32* %h.addr, align 4, !dbg !18142
  %cmp = icmp slt i32 %36, %37, !dbg !18143
  br i1 %cmp, label %for.body, label %for.end108, !dbg !18144

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !18145
  br label %for.cond43, !dbg !18146

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !18147
  %39 = load i32, i32* %w.addr, align 4, !dbg !18149
  %cmp44 = icmp slt i32 %38, %39, !dbg !18150
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !18151

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !18152, metadata !94), !dbg !18153
  %40 = load i32, i32* %x, align 4, !dbg !18154
  %shl47 = shl i32 %40, 0, !dbg !18155
  %idxprom = sext i32 %shl47 to i64, !dbg !18156
  %41 = load i16*, i16** %src0, align 8, !dbg !18156
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !18156
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !18156
  %conv49 = zext i16 %42 to i32, !dbg !18156
  %43 = load i32, i32* %y_off_in, align 4, !dbg !18157
  %sub50 = sub nsw i32 %conv49, %43, !dbg !18158
  store i32 %sub50, i32* %y00, align 4, !dbg !18153
  call void @llvm.dbg.declare(metadata i32* %u, metadata !18159, metadata !94), !dbg !18160
  %44 = load i32, i32* %x, align 4, !dbg !18161
  %idxprom51 = sext i32 %44 to i64, !dbg !18162
  %45 = load i16*, i16** %src1, align 8, !dbg !18162
  %arrayidx52 = getelementptr inbounds i16, i16* %45, i64 %idxprom51, !dbg !18162
  %46 = load i16, i16* %arrayidx52, align 2, !dbg !18162
  %conv53 = zext i16 %46 to i32, !dbg !18162
  %sub54 = sub nsw i32 %conv53, 512, !dbg !18163
  store i32 %sub54, i32* %u, align 4, !dbg !18160
  call void @llvm.dbg.declare(metadata i32* %v, metadata !18164, metadata !94), !dbg !18165
  %47 = load i32, i32* %x, align 4, !dbg !18166
  %idxprom55 = sext i32 %47 to i64, !dbg !18167
  %48 = load i16*, i16** %src2, align 8, !dbg !18167
  %arrayidx56 = getelementptr inbounds i16, i16* %48, i64 %idxprom55, !dbg !18167
  %49 = load i16, i16* %arrayidx56, align 2, !dbg !18167
  %conv57 = zext i16 %49 to i32, !dbg !18167
  %sub58 = sub nsw i32 %conv57, 512, !dbg !18168
  store i32 %sub58, i32* %v, align 4, !dbg !18165
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !18169, metadata !94), !dbg !18170
  %50 = load i32, i32* %cyu, align 4, !dbg !18171
  %51 = load i32, i32* %u, align 4, !dbg !18172
  %mul = mul nsw i32 %50, %51, !dbg !18173
  %52 = load i32, i32* %cyv, align 4, !dbg !18174
  %53 = load i32, i32* %v, align 4, !dbg !18175
  %mul59 = mul nsw i32 %52, %53, !dbg !18176
  %add60 = add nsw i32 %mul, %mul59, !dbg !18177
  %add61 = add nsw i32 %add60, 2048, !dbg !18178
  %54 = load i32, i32* %y_off_out, align 4, !dbg !18179
  %add62 = add nsw i32 %add61, %54, !dbg !18180
  store i32 %add62, i32* %uv_val, align 4, !dbg !18170
  %55 = load i32, i32* %cyy, align 4, !dbg !18181
  %56 = load i32, i32* %y00, align 4, !dbg !18182
  %mul63 = mul nsw i32 %55, %56, !dbg !18183
  %57 = load i32, i32* %uv_val, align 4, !dbg !18184
  %add64 = add nsw i32 %mul63, %57, !dbg !18185
  %shr65 = ashr i32 %add64, 12, !dbg !18186
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !18187
  store i32 12, i32* %p.addr.i, align 4, !dbg !18187
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !18188
  %59 = load i32, i32* %p.addr.i, align 4, !dbg !18189
  %shl.i = shl i32 1, %59, !dbg !18190
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !18191
  %neg.i = xor i32 %sub.i, -1, !dbg !18192
  %and.i = and i32 %58, %neg.i, !dbg !18193
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !18193
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !18194

if.then.i:                                        ; preds = %for.body46
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !18195
  %neg1.i = xor i32 %60, -1, !dbg !18196
  %shr.i = ashr i32 %neg1.i, 31, !dbg !18197
  %61 = load i32, i32* %p.addr.i, align 4, !dbg !18198
  %shl2.i = shl i32 1, %61, !dbg !18199
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !18200
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !18201
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !18202
  br label %av_clip_uintp2_c.exit, !dbg !18202

if.else.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !18203
  store i32 %62, i32* %retval.i, align 4, !dbg !18204
  br label %av_clip_uintp2_c.exit, !dbg !18204

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %63 = load i32, i32* %retval.i, align 4, !dbg !18205
  %conv66 = trunc i32 %63 to i16, !dbg !18187
  %64 = load i32, i32* %x, align 4, !dbg !18206
  %shl67 = shl i32 %64, 0, !dbg !18207
  %idxprom68 = sext i32 %shl67 to i64, !dbg !18208
  %65 = load i16*, i16** %dst0, align 8, !dbg !18208
  %arrayidx69 = getelementptr inbounds i16, i16* %65, i64 %idxprom68, !dbg !18208
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !18209
  %66 = load i32, i32* %u, align 4, !dbg !18210
  %67 = load i32, i32* %cuu, align 4, !dbg !18211
  %mul70 = mul nsw i32 %66, %67, !dbg !18212
  %68 = load i32, i32* %v, align 4, !dbg !18213
  %69 = load i32, i32* %cuv, align 4, !dbg !18214
  %mul71 = mul nsw i32 %68, %69, !dbg !18215
  %add72 = add nsw i32 %mul70, %mul71, !dbg !18216
  %add73 = add nsw i32 %add72, 8390656, !dbg !18217
  %shr74 = ashr i32 %add73, 12, !dbg !18218
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !18219
  store i32 12, i32* %p.addr.i127, align 4, !dbg !18219
  %70 = load i32, i32* %a.addr.i126, align 4, !dbg !18220
  %71 = load i32, i32* %p.addr.i127, align 4, !dbg !18221
  %shl.i128 = shl i32 1, %71, !dbg !18222
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !18223
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !18224
  %and.i131 = and i32 %70, %neg.i130, !dbg !18225
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !18225
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !18226

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %72 = load i32, i32* %a.addr.i126, align 4, !dbg !18227
  %neg1.i133 = xor i32 %72, -1, !dbg !18228
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !18229
  %73 = load i32, i32* %p.addr.i127, align 4, !dbg !18230
  %shl2.i135 = shl i32 1, %73, !dbg !18231
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !18232
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !18233
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !18234
  br label %av_clip_uintp2_c.exit140, !dbg !18234

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i126, align 4, !dbg !18235
  store i32 %74, i32* %retval.i125, align 4, !dbg !18236
  br label %av_clip_uintp2_c.exit140, !dbg !18236

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %75 = load i32, i32* %retval.i125, align 4, !dbg !18237
  %conv76 = trunc i32 %75 to i16, !dbg !18219
  %76 = load i32, i32* %x, align 4, !dbg !18238
  %idxprom77 = sext i32 %76 to i64, !dbg !18239
  %77 = load i16*, i16** %dst1, align 8, !dbg !18239
  %arrayidx78 = getelementptr inbounds i16, i16* %77, i64 %idxprom77, !dbg !18239
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !18240
  %78 = load i32, i32* %u, align 4, !dbg !18241
  %79 = load i32, i32* %cvu, align 4, !dbg !18242
  %mul79 = mul nsw i32 %78, %79, !dbg !18243
  %80 = load i32, i32* %v, align 4, !dbg !18244
  %81 = load i32, i32* %cvv, align 4, !dbg !18245
  %mul80 = mul nsw i32 %80, %81, !dbg !18246
  %add81 = add nsw i32 %mul79, %mul80, !dbg !18247
  %add82 = add nsw i32 %add81, 8390656, !dbg !18248
  %shr83 = ashr i32 %add82, 12, !dbg !18249
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !18250
  store i32 12, i32* %p.addr.i111, align 4, !dbg !18250
  %82 = load i32, i32* %a.addr.i110, align 4, !dbg !18251
  %83 = load i32, i32* %p.addr.i111, align 4, !dbg !18252
  %shl.i112 = shl i32 1, %83, !dbg !18253
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !18254
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !18255
  %and.i115 = and i32 %82, %neg.i114, !dbg !18256
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !18256
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !18257

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %84 = load i32, i32* %a.addr.i110, align 4, !dbg !18258
  %neg1.i117 = xor i32 %84, -1, !dbg !18259
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !18260
  %85 = load i32, i32* %p.addr.i111, align 4, !dbg !18261
  %shl2.i119 = shl i32 1, %85, !dbg !18262
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !18263
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !18264
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !18265
  br label %av_clip_uintp2_c.exit124, !dbg !18265

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %86 = load i32, i32* %a.addr.i110, align 4, !dbg !18266
  store i32 %86, i32* %retval.i109, align 4, !dbg !18267
  br label %av_clip_uintp2_c.exit124, !dbg !18267

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %87 = load i32, i32* %retval.i109, align 4, !dbg !18268
  %conv85 = trunc i32 %87 to i16, !dbg !18250
  %88 = load i32, i32* %x, align 4, !dbg !18269
  %idxprom86 = sext i32 %88 to i64, !dbg !18270
  %89 = load i16*, i16** %dst2, align 8, !dbg !18270
  %arrayidx87 = getelementptr inbounds i16, i16* %89, i64 %idxprom86, !dbg !18270
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !18271
  br label %for.inc, !dbg !18272

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %90 = load i32, i32* %x, align 4, !dbg !18273
  %inc = add nsw i32 %90, 1, !dbg !18273
  store i32 %inc, i32* %x, align 4, !dbg !18273
  br label %for.cond43, !dbg !18275, !llvm.loop !18276

for.end:                                          ; preds = %for.cond43
  %91 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18278
  %arrayidx88 = getelementptr inbounds i64, i64* %91, i64 0, !dbg !18278
  %92 = load i64, i64* %arrayidx88, align 8, !dbg !18278
  %mul89 = mul nsw i64 %92, 1, !dbg !18279
  %div = udiv i64 %mul89, 2, !dbg !18280
  %93 = load i16*, i16** %dst0, align 8, !dbg !18281
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %div, !dbg !18281
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !18281
  %94 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18282
  %arrayidx90 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !18282
  %95 = load i64, i64* %arrayidx90, align 8, !dbg !18282
  %div91 = udiv i64 %95, 2, !dbg !18283
  %96 = load i16*, i16** %dst1, align 8, !dbg !18284
  %add.ptr92 = getelementptr inbounds i16, i16* %96, i64 %div91, !dbg !18284
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !18284
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18285
  %arrayidx93 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !18285
  %98 = load i64, i64* %arrayidx93, align 8, !dbg !18285
  %div94 = udiv i64 %98, 2, !dbg !18286
  %99 = load i16*, i16** %dst2, align 8, !dbg !18287
  %add.ptr95 = getelementptr inbounds i16, i16* %99, i64 %div94, !dbg !18287
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !18287
  %100 = load i64*, i64** %src_stride.addr, align 8, !dbg !18288
  %arrayidx96 = getelementptr inbounds i64, i64* %100, i64 0, !dbg !18288
  %101 = load i64, i64* %arrayidx96, align 8, !dbg !18288
  %mul97 = mul nsw i64 %101, 1, !dbg !18289
  %div98 = udiv i64 %mul97, 2, !dbg !18290
  %102 = load i16*, i16** %src0, align 8, !dbg !18291
  %add.ptr99 = getelementptr inbounds i16, i16* %102, i64 %div98, !dbg !18291
  store i16* %add.ptr99, i16** %src0, align 8, !dbg !18291
  %103 = load i64*, i64** %src_stride.addr, align 8, !dbg !18292
  %arrayidx100 = getelementptr inbounds i64, i64* %103, i64 1, !dbg !18292
  %104 = load i64, i64* %arrayidx100, align 8, !dbg !18292
  %div101 = udiv i64 %104, 2, !dbg !18293
  %105 = load i16*, i16** %src1, align 8, !dbg !18294
  %add.ptr102 = getelementptr inbounds i16, i16* %105, i64 %div101, !dbg !18294
  store i16* %add.ptr102, i16** %src1, align 8, !dbg !18294
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !18295
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 2, !dbg !18295
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !18295
  %div104 = udiv i64 %107, 2, !dbg !18296
  %108 = load i16*, i16** %src2, align 8, !dbg !18297
  %add.ptr105 = getelementptr inbounds i16, i16* %108, i64 %div104, !dbg !18297
  store i16* %add.ptr105, i16** %src2, align 8, !dbg !18297
  br label %for.inc106, !dbg !18298

for.inc106:                                       ; preds = %for.end
  %109 = load i32, i32* %y, align 4, !dbg !18299
  %inc107 = add nsw i32 %109, 1, !dbg !18299
  store i32 %inc107, i32* %y, align 4, !dbg !18299
  br label %for.cond, !dbg !18301, !llvm.loop !18302

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !18304
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p10to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !18305 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !18306
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !18314
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !18315
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !18317
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !18318
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !18320
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !18321
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !18323
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !18324, metadata !94), !dbg !18325
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !18326, metadata !94), !dbg !18327
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !18328, metadata !94), !dbg !18329
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !18330, metadata !94), !dbg !18331
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !18332, metadata !94), !dbg !18333
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !18334, metadata !94), !dbg !18335
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !18336, metadata !94), !dbg !18337
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !18338, metadata !94), !dbg !18339
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !18340, metadata !94), !dbg !18341
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !18342
  %1 = bitcast i8** %0 to i16**, !dbg !18343
  store i16** %1, i16*** %dst, align 8, !dbg !18341
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !18344, metadata !94), !dbg !18345
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !18346
  %3 = bitcast i8** %2 to i16**, !dbg !18347
  store i16** %3, i16*** %src, align 8, !dbg !18345
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !18348, metadata !94), !dbg !18349
  %4 = load i16**, i16*** %src, align 8, !dbg !18350
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !18350
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !18350
  store i16* %5, i16** %src0, align 8, !dbg !18349
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !18351, metadata !94), !dbg !18352
  %6 = load i16**, i16*** %src, align 8, !dbg !18353
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !18353
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !18353
  store i16* %7, i16** %src1, align 8, !dbg !18352
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !18354, metadata !94), !dbg !18355
  %8 = load i16**, i16*** %src, align 8, !dbg !18356
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !18356
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !18356
  store i16* %9, i16** %src2, align 8, !dbg !18355
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !18357, metadata !94), !dbg !18358
  %10 = load i16**, i16*** %dst, align 8, !dbg !18359
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !18359
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !18359
  store i16* %11, i16** %dst0, align 8, !dbg !18358
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !18360, metadata !94), !dbg !18361
  %12 = load i16**, i16*** %dst, align 8, !dbg !18362
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !18362
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !18362
  store i16* %13, i16** %dst1, align 8, !dbg !18361
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !18363, metadata !94), !dbg !18364
  %14 = load i16**, i16*** %dst, align 8, !dbg !18365
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !18365
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !18365
  store i16* %15, i16** %dst2, align 8, !dbg !18364
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18366, metadata !94), !dbg !18367
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18368, metadata !94), !dbg !18369
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !18370, metadata !94), !dbg !18371
  store i32 12, i32* %sh, align 4, !dbg !18371
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !18372, metadata !94), !dbg !18373
  store i32 2048, i32* %rnd, align 4, !dbg !18373
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !18374, metadata !94), !dbg !18375
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18376
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !18376
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !18376
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !18376
  %conv = sext i16 %17 to i32, !dbg !18376
  store i32 %conv, i32* %y_off_in, align 4, !dbg !18375
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !18377, metadata !94), !dbg !18378
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18379
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !18379
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !18379
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !18379
  %conv10 = sext i16 %19 to i32, !dbg !18379
  %shl = shl i32 %conv10, 12, !dbg !18380
  store i32 %shl, i32* %y_off_out, align 4, !dbg !18378
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !18381, metadata !94), !dbg !18382
  store i32 512, i32* %uv_off_in, align 4, !dbg !18382
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !18383, metadata !94), !dbg !18384
  store i32 8390656, i32* %uv_off_out, align 4, !dbg !18384
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !18385, metadata !94), !dbg !18386
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18387
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !18387
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !18387
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !18387
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !18387
  %conv14 = sext i16 %21 to i32, !dbg !18387
  store i32 %conv14, i32* %cyy, align 4, !dbg !18386
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !18388, metadata !94), !dbg !18389
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18390
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !18390
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !18390
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !18390
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !18390
  %conv18 = sext i16 %23 to i32, !dbg !18390
  store i32 %conv18, i32* %cyu, align 4, !dbg !18389
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !18391, metadata !94), !dbg !18392
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18393
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !18393
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !18393
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !18393
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !18393
  %conv22 = sext i16 %25 to i32, !dbg !18393
  store i32 %conv22, i32* %cyv, align 4, !dbg !18392
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !18394, metadata !94), !dbg !18395
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18396
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !18396
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !18396
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !18396
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !18396
  %conv26 = sext i16 %27 to i32, !dbg !18396
  store i32 %conv26, i32* %cuu, align 4, !dbg !18395
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !18397, metadata !94), !dbg !18398
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18399
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !18399
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !18399
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !18399
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !18399
  %conv30 = sext i16 %29 to i32, !dbg !18399
  store i32 %conv30, i32* %cuv, align 4, !dbg !18398
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !18400, metadata !94), !dbg !18401
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18402
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !18402
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !18402
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !18402
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !18402
  %conv34 = sext i16 %31 to i32, !dbg !18402
  store i32 %conv34, i32* %cvu, align 4, !dbg !18401
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !18403, metadata !94), !dbg !18404
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18405
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !18405
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !18405
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !18405
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !18405
  %conv38 = sext i16 %33 to i32, !dbg !18405
  store i32 %conv38, i32* %cvv, align 4, !dbg !18404
  %34 = load i32, i32* %w.addr, align 4, !dbg !18406
  %add = add nsw i32 %34, 2, !dbg !18407
  %sub = sub nsw i32 %add, 1, !dbg !18408
  %shr = ashr i32 %sub, 1, !dbg !18409
  store i32 %shr, i32* %w.addr, align 4, !dbg !18410
  %35 = load i32, i32* %h.addr, align 4, !dbg !18411
  %add39 = add nsw i32 %35, 1, !dbg !18412
  %sub40 = sub nsw i32 %add39, 1, !dbg !18413
  %shr41 = ashr i32 %sub40, 0, !dbg !18414
  store i32 %shr41, i32* %h.addr, align 4, !dbg !18415
  store i32 0, i32* %y, align 4, !dbg !18416
  br label %for.cond, !dbg !18417

for.cond:                                         ; preds = %for.inc121, %entry
  %36 = load i32, i32* %y, align 4, !dbg !18418
  %37 = load i32, i32* %h.addr, align 4, !dbg !18420
  %cmp = icmp slt i32 %36, %37, !dbg !18421
  br i1 %cmp, label %for.body, label %for.end123, !dbg !18422

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !18423
  br label %for.cond43, !dbg !18424

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !18425
  %39 = load i32, i32* %w.addr, align 4, !dbg !18427
  %cmp44 = icmp slt i32 %38, %39, !dbg !18428
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !18429

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !18430, metadata !94), !dbg !18431
  %40 = load i32, i32* %x, align 4, !dbg !18432
  %shl47 = shl i32 %40, 1, !dbg !18433
  %idxprom = sext i32 %shl47 to i64, !dbg !18434
  %41 = load i16*, i16** %src0, align 8, !dbg !18434
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !18434
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !18434
  %conv49 = zext i16 %42 to i32, !dbg !18434
  %43 = load i32, i32* %y_off_in, align 4, !dbg !18435
  %sub50 = sub nsw i32 %conv49, %43, !dbg !18436
  store i32 %sub50, i32* %y00, align 4, !dbg !18431
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !18437, metadata !94), !dbg !18438
  %44 = load i32, i32* %x, align 4, !dbg !18439
  %mul = mul nsw i32 2, %44, !dbg !18440
  %add51 = add nsw i32 %mul, 1, !dbg !18441
  %idxprom52 = sext i32 %add51 to i64, !dbg !18442
  %45 = load i16*, i16** %src0, align 8, !dbg !18442
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !18442
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !18442
  %conv54 = zext i16 %46 to i32, !dbg !18442
  %47 = load i32, i32* %y_off_in, align 4, !dbg !18443
  %sub55 = sub nsw i32 %conv54, %47, !dbg !18444
  store i32 %sub55, i32* %y01, align 4, !dbg !18438
  call void @llvm.dbg.declare(metadata i32* %u, metadata !18445, metadata !94), !dbg !18446
  %48 = load i32, i32* %x, align 4, !dbg !18447
  %idxprom56 = sext i32 %48 to i64, !dbg !18448
  %49 = load i16*, i16** %src1, align 8, !dbg !18448
  %arrayidx57 = getelementptr inbounds i16, i16* %49, i64 %idxprom56, !dbg !18448
  %50 = load i16, i16* %arrayidx57, align 2, !dbg !18448
  %conv58 = zext i16 %50 to i32, !dbg !18448
  %sub59 = sub nsw i32 %conv58, 512, !dbg !18449
  store i32 %sub59, i32* %u, align 4, !dbg !18446
  call void @llvm.dbg.declare(metadata i32* %v, metadata !18450, metadata !94), !dbg !18451
  %51 = load i32, i32* %x, align 4, !dbg !18452
  %idxprom60 = sext i32 %51 to i64, !dbg !18453
  %52 = load i16*, i16** %src2, align 8, !dbg !18453
  %arrayidx61 = getelementptr inbounds i16, i16* %52, i64 %idxprom60, !dbg !18453
  %53 = load i16, i16* %arrayidx61, align 2, !dbg !18453
  %conv62 = zext i16 %53 to i32, !dbg !18453
  %sub63 = sub nsw i32 %conv62, 512, !dbg !18454
  store i32 %sub63, i32* %v, align 4, !dbg !18451
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !18455, metadata !94), !dbg !18456
  %54 = load i32, i32* %cyu, align 4, !dbg !18457
  %55 = load i32, i32* %u, align 4, !dbg !18458
  %mul64 = mul nsw i32 %54, %55, !dbg !18459
  %56 = load i32, i32* %cyv, align 4, !dbg !18460
  %57 = load i32, i32* %v, align 4, !dbg !18461
  %mul65 = mul nsw i32 %56, %57, !dbg !18462
  %add66 = add nsw i32 %mul64, %mul65, !dbg !18463
  %add67 = add nsw i32 %add66, 2048, !dbg !18464
  %58 = load i32, i32* %y_off_out, align 4, !dbg !18465
  %add68 = add nsw i32 %add67, %58, !dbg !18466
  store i32 %add68, i32* %uv_val, align 4, !dbg !18456
  %59 = load i32, i32* %cyy, align 4, !dbg !18467
  %60 = load i32, i32* %y00, align 4, !dbg !18468
  %mul69 = mul nsw i32 %59, %60, !dbg !18469
  %61 = load i32, i32* %uv_val, align 4, !dbg !18470
  %add70 = add nsw i32 %mul69, %61, !dbg !18471
  %shr71 = ashr i32 %add70, 12, !dbg !18472
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !18473
  store i32 12, i32* %p.addr.i, align 4, !dbg !18473
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !18474
  %63 = load i32, i32* %p.addr.i, align 4, !dbg !18475
  %shl.i = shl i32 1, %63, !dbg !18476
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !18477
  %neg.i = xor i32 %sub.i, -1, !dbg !18478
  %and.i = and i32 %62, %neg.i, !dbg !18479
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !18479
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !18480

if.then.i:                                        ; preds = %for.body46
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !18481
  %neg1.i = xor i32 %64, -1, !dbg !18482
  %shr.i = ashr i32 %neg1.i, 31, !dbg !18483
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !18484
  %shl2.i = shl i32 1, %65, !dbg !18485
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !18486
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !18487
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !18488
  br label %av_clip_uintp2_c.exit, !dbg !18488

if.else.i:                                        ; preds = %for.body46
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !18489
  store i32 %66, i32* %retval.i, align 4, !dbg !18490
  br label %av_clip_uintp2_c.exit, !dbg !18490

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %67 = load i32, i32* %retval.i, align 4, !dbg !18491
  %conv72 = trunc i32 %67 to i16, !dbg !18473
  %68 = load i32, i32* %x, align 4, !dbg !18492
  %shl73 = shl i32 %68, 1, !dbg !18493
  %idxprom74 = sext i32 %shl73 to i64, !dbg !18494
  %69 = load i16*, i16** %dst0, align 8, !dbg !18494
  %arrayidx75 = getelementptr inbounds i16, i16* %69, i64 %idxprom74, !dbg !18494
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !18495
  %70 = load i32, i32* %cyy, align 4, !dbg !18496
  %71 = load i32, i32* %y01, align 4, !dbg !18497
  %mul76 = mul nsw i32 %70, %71, !dbg !18498
  %72 = load i32, i32* %uv_val, align 4, !dbg !18499
  %add77 = add nsw i32 %mul76, %72, !dbg !18500
  %shr78 = ashr i32 %add77, 12, !dbg !18501
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !18502
  store i32 12, i32* %p.addr.i158, align 4, !dbg !18502
  %73 = load i32, i32* %a.addr.i157, align 4, !dbg !18503
  %74 = load i32, i32* %p.addr.i158, align 4, !dbg !18504
  %shl.i159 = shl i32 1, %74, !dbg !18505
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !18506
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !18507
  %and.i162 = and i32 %73, %neg.i161, !dbg !18508
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !18508
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !18509

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %75 = load i32, i32* %a.addr.i157, align 4, !dbg !18510
  %neg1.i164 = xor i32 %75, -1, !dbg !18511
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !18512
  %76 = load i32, i32* %p.addr.i158, align 4, !dbg !18513
  %shl2.i166 = shl i32 1, %76, !dbg !18514
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !18515
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !18516
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !18517
  br label %av_clip_uintp2_c.exit171, !dbg !18517

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %77 = load i32, i32* %a.addr.i157, align 4, !dbg !18518
  store i32 %77, i32* %retval.i156, align 4, !dbg !18519
  br label %av_clip_uintp2_c.exit171, !dbg !18519

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %78 = load i32, i32* %retval.i156, align 4, !dbg !18520
  %conv80 = trunc i32 %78 to i16, !dbg !18502
  %79 = load i32, i32* %x, align 4, !dbg !18521
  %mul81 = mul nsw i32 %79, 2, !dbg !18522
  %add82 = add nsw i32 %mul81, 1, !dbg !18523
  %idxprom83 = sext i32 %add82 to i64, !dbg !18524
  %80 = load i16*, i16** %dst0, align 8, !dbg !18524
  %arrayidx84 = getelementptr inbounds i16, i16* %80, i64 %idxprom83, !dbg !18524
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !18525
  %81 = load i32, i32* %u, align 4, !dbg !18526
  %82 = load i32, i32* %cuu, align 4, !dbg !18527
  %mul85 = mul nsw i32 %81, %82, !dbg !18528
  %83 = load i32, i32* %v, align 4, !dbg !18529
  %84 = load i32, i32* %cuv, align 4, !dbg !18530
  %mul86 = mul nsw i32 %83, %84, !dbg !18531
  %add87 = add nsw i32 %mul85, %mul86, !dbg !18532
  %add88 = add nsw i32 %add87, 8390656, !dbg !18533
  %shr89 = ashr i32 %add88, 12, !dbg !18534
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !18535
  store i32 12, i32* %p.addr.i142, align 4, !dbg !18535
  %85 = load i32, i32* %a.addr.i141, align 4, !dbg !18536
  %86 = load i32, i32* %p.addr.i142, align 4, !dbg !18537
  %shl.i143 = shl i32 1, %86, !dbg !18538
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !18539
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !18540
  %and.i146 = and i32 %85, %neg.i145, !dbg !18541
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !18541
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !18542

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %87 = load i32, i32* %a.addr.i141, align 4, !dbg !18543
  %neg1.i148 = xor i32 %87, -1, !dbg !18544
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !18545
  %88 = load i32, i32* %p.addr.i142, align 4, !dbg !18546
  %shl2.i150 = shl i32 1, %88, !dbg !18547
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !18548
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !18549
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !18550
  br label %av_clip_uintp2_c.exit155, !dbg !18550

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %89 = load i32, i32* %a.addr.i141, align 4, !dbg !18551
  store i32 %89, i32* %retval.i140, align 4, !dbg !18552
  br label %av_clip_uintp2_c.exit155, !dbg !18552

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %90 = load i32, i32* %retval.i140, align 4, !dbg !18553
  %conv91 = trunc i32 %90 to i16, !dbg !18535
  %91 = load i32, i32* %x, align 4, !dbg !18554
  %idxprom92 = sext i32 %91 to i64, !dbg !18555
  %92 = load i16*, i16** %dst1, align 8, !dbg !18555
  %arrayidx93 = getelementptr inbounds i16, i16* %92, i64 %idxprom92, !dbg !18555
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !18556
  %93 = load i32, i32* %u, align 4, !dbg !18557
  %94 = load i32, i32* %cvu, align 4, !dbg !18558
  %mul94 = mul nsw i32 %93, %94, !dbg !18559
  %95 = load i32, i32* %v, align 4, !dbg !18560
  %96 = load i32, i32* %cvv, align 4, !dbg !18561
  %mul95 = mul nsw i32 %95, %96, !dbg !18562
  %add96 = add nsw i32 %mul94, %mul95, !dbg !18563
  %add97 = add nsw i32 %add96, 8390656, !dbg !18564
  %shr98 = ashr i32 %add97, 12, !dbg !18565
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !18566
  store i32 12, i32* %p.addr.i126, align 4, !dbg !18566
  %97 = load i32, i32* %a.addr.i125, align 4, !dbg !18567
  %98 = load i32, i32* %p.addr.i126, align 4, !dbg !18568
  %shl.i127 = shl i32 1, %98, !dbg !18569
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !18570
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !18571
  %and.i130 = and i32 %97, %neg.i129, !dbg !18572
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !18572
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !18573

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %99 = load i32, i32* %a.addr.i125, align 4, !dbg !18574
  %neg1.i132 = xor i32 %99, -1, !dbg !18575
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !18576
  %100 = load i32, i32* %p.addr.i126, align 4, !dbg !18577
  %shl2.i134 = shl i32 1, %100, !dbg !18578
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !18579
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !18580
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !18581
  br label %av_clip_uintp2_c.exit139, !dbg !18581

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %101 = load i32, i32* %a.addr.i125, align 4, !dbg !18582
  store i32 %101, i32* %retval.i124, align 4, !dbg !18583
  br label %av_clip_uintp2_c.exit139, !dbg !18583

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %102 = load i32, i32* %retval.i124, align 4, !dbg !18584
  %conv100 = trunc i32 %102 to i16, !dbg !18566
  %103 = load i32, i32* %x, align 4, !dbg !18585
  %idxprom101 = sext i32 %103 to i64, !dbg !18586
  %104 = load i16*, i16** %dst2, align 8, !dbg !18586
  %arrayidx102 = getelementptr inbounds i16, i16* %104, i64 %idxprom101, !dbg !18586
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !18587
  br label %for.inc, !dbg !18588

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %105 = load i32, i32* %x, align 4, !dbg !18589
  %inc = add nsw i32 %105, 1, !dbg !18589
  store i32 %inc, i32* %x, align 4, !dbg !18589
  br label %for.cond43, !dbg !18591, !llvm.loop !18592

for.end:                                          ; preds = %for.cond43
  %106 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18594
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !18594
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !18594
  %mul104 = mul nsw i64 %107, 1, !dbg !18595
  %div = udiv i64 %mul104, 2, !dbg !18596
  %108 = load i16*, i16** %dst0, align 8, !dbg !18597
  %add.ptr = getelementptr inbounds i16, i16* %108, i64 %div, !dbg !18597
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !18597
  %109 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18598
  %arrayidx105 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !18598
  %110 = load i64, i64* %arrayidx105, align 8, !dbg !18598
  %div106 = udiv i64 %110, 2, !dbg !18599
  %111 = load i16*, i16** %dst1, align 8, !dbg !18600
  %add.ptr107 = getelementptr inbounds i16, i16* %111, i64 %div106, !dbg !18600
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !18600
  %112 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18601
  %arrayidx108 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !18601
  %113 = load i64, i64* %arrayidx108, align 8, !dbg !18601
  %div109 = udiv i64 %113, 2, !dbg !18602
  %114 = load i16*, i16** %dst2, align 8, !dbg !18603
  %add.ptr110 = getelementptr inbounds i16, i16* %114, i64 %div109, !dbg !18603
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !18603
  %115 = load i64*, i64** %src_stride.addr, align 8, !dbg !18604
  %arrayidx111 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !18604
  %116 = load i64, i64* %arrayidx111, align 8, !dbg !18604
  %mul112 = mul nsw i64 %116, 1, !dbg !18605
  %div113 = udiv i64 %mul112, 2, !dbg !18606
  %117 = load i16*, i16** %src0, align 8, !dbg !18607
  %add.ptr114 = getelementptr inbounds i16, i16* %117, i64 %div113, !dbg !18607
  store i16* %add.ptr114, i16** %src0, align 8, !dbg !18607
  %118 = load i64*, i64** %src_stride.addr, align 8, !dbg !18608
  %arrayidx115 = getelementptr inbounds i64, i64* %118, i64 1, !dbg !18608
  %119 = load i64, i64* %arrayidx115, align 8, !dbg !18608
  %div116 = udiv i64 %119, 2, !dbg !18609
  %120 = load i16*, i16** %src1, align 8, !dbg !18610
  %add.ptr117 = getelementptr inbounds i16, i16* %120, i64 %div116, !dbg !18610
  store i16* %add.ptr117, i16** %src1, align 8, !dbg !18610
  %121 = load i64*, i64** %src_stride.addr, align 8, !dbg !18611
  %arrayidx118 = getelementptr inbounds i64, i64* %121, i64 2, !dbg !18611
  %122 = load i64, i64* %arrayidx118, align 8, !dbg !18611
  %div119 = udiv i64 %122, 2, !dbg !18612
  %123 = load i16*, i16** %src2, align 8, !dbg !18613
  %add.ptr120 = getelementptr inbounds i16, i16* %123, i64 %div119, !dbg !18613
  store i16* %add.ptr120, i16** %src2, align 8, !dbg !18613
  br label %for.inc121, !dbg !18614

for.inc121:                                       ; preds = %for.end
  %124 = load i32, i32* %y, align 4, !dbg !18615
  %inc122 = add nsw i32 %124, 1, !dbg !18615
  store i32 %inc122, i32* %y, align 4, !dbg !18615
  br label %for.cond, !dbg !18617, !llvm.loop !18618

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !18620
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p10to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !18621 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !18622
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !18630
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !18631
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !18633
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !18634
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !18636
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !18637
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !18639
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !18640
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !18642
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !18643
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !18645
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !18646, metadata !94), !dbg !18647
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !18648, metadata !94), !dbg !18649
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !18650, metadata !94), !dbg !18651
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !18652, metadata !94), !dbg !18653
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !18654, metadata !94), !dbg !18655
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !18656, metadata !94), !dbg !18657
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !18658, metadata !94), !dbg !18659
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !18660, metadata !94), !dbg !18661
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !18662, metadata !94), !dbg !18663
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !18664
  %1 = bitcast i8** %0 to i16**, !dbg !18665
  store i16** %1, i16*** %dst, align 8, !dbg !18663
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !18666, metadata !94), !dbg !18667
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !18668
  %3 = bitcast i8** %2 to i16**, !dbg !18669
  store i16** %3, i16*** %src, align 8, !dbg !18667
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !18670, metadata !94), !dbg !18671
  %4 = load i16**, i16*** %src, align 8, !dbg !18672
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !18672
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !18672
  store i16* %5, i16** %src0, align 8, !dbg !18671
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !18673, metadata !94), !dbg !18674
  %6 = load i16**, i16*** %src, align 8, !dbg !18675
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !18675
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !18675
  store i16* %7, i16** %src1, align 8, !dbg !18674
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !18676, metadata !94), !dbg !18677
  %8 = load i16**, i16*** %src, align 8, !dbg !18678
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !18678
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !18678
  store i16* %9, i16** %src2, align 8, !dbg !18677
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !18679, metadata !94), !dbg !18680
  %10 = load i16**, i16*** %dst, align 8, !dbg !18681
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !18681
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !18681
  store i16* %11, i16** %dst0, align 8, !dbg !18680
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !18682, metadata !94), !dbg !18683
  %12 = load i16**, i16*** %dst, align 8, !dbg !18684
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !18684
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !18684
  store i16* %13, i16** %dst1, align 8, !dbg !18683
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !18685, metadata !94), !dbg !18686
  %14 = load i16**, i16*** %dst, align 8, !dbg !18687
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !18687
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !18687
  store i16* %15, i16** %dst2, align 8, !dbg !18686
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18688, metadata !94), !dbg !18689
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18690, metadata !94), !dbg !18691
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !18692, metadata !94), !dbg !18693
  store i32 12, i32* %sh, align 4, !dbg !18693
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !18694, metadata !94), !dbg !18695
  store i32 2048, i32* %rnd, align 4, !dbg !18695
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !18696, metadata !94), !dbg !18697
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18698
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !18698
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !18698
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !18698
  %conv = sext i16 %17 to i32, !dbg !18698
  store i32 %conv, i32* %y_off_in, align 4, !dbg !18697
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !18699, metadata !94), !dbg !18700
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !18701
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !18701
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !18701
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !18701
  %conv10 = sext i16 %19 to i32, !dbg !18701
  %shl = shl i32 %conv10, 12, !dbg !18702
  store i32 %shl, i32* %y_off_out, align 4, !dbg !18700
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !18703, metadata !94), !dbg !18704
  store i32 512, i32* %uv_off_in, align 4, !dbg !18704
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !18705, metadata !94), !dbg !18706
  store i32 8390656, i32* %uv_off_out, align 4, !dbg !18706
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !18707, metadata !94), !dbg !18708
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18709
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !18709
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !18709
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !18709
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !18709
  %conv14 = sext i16 %21 to i32, !dbg !18709
  store i32 %conv14, i32* %cyy, align 4, !dbg !18708
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !18710, metadata !94), !dbg !18711
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18712
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !18712
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !18712
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !18712
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !18712
  %conv18 = sext i16 %23 to i32, !dbg !18712
  store i32 %conv18, i32* %cyu, align 4, !dbg !18711
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !18713, metadata !94), !dbg !18714
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18715
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !18715
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !18715
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !18715
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !18715
  %conv22 = sext i16 %25 to i32, !dbg !18715
  store i32 %conv22, i32* %cyv, align 4, !dbg !18714
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !18716, metadata !94), !dbg !18717
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18718
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !18718
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !18718
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !18718
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !18718
  %conv26 = sext i16 %27 to i32, !dbg !18718
  store i32 %conv26, i32* %cuu, align 4, !dbg !18717
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !18719, metadata !94), !dbg !18720
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18721
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !18721
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !18721
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !18721
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !18721
  %conv30 = sext i16 %29 to i32, !dbg !18721
  store i32 %conv30, i32* %cuv, align 4, !dbg !18720
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !18722, metadata !94), !dbg !18723
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18724
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !18724
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !18724
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !18724
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !18724
  %conv34 = sext i16 %31 to i32, !dbg !18724
  store i32 %conv34, i32* %cvu, align 4, !dbg !18723
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !18725, metadata !94), !dbg !18726
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !18727
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !18727
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !18727
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !18727
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !18727
  %conv38 = sext i16 %33 to i32, !dbg !18727
  store i32 %conv38, i32* %cvv, align 4, !dbg !18726
  %34 = load i32, i32* %w.addr, align 4, !dbg !18728
  %add = add nsw i32 %34, 2, !dbg !18729
  %sub = sub nsw i32 %add, 1, !dbg !18730
  %shr = ashr i32 %sub, 1, !dbg !18731
  store i32 %shr, i32* %w.addr, align 4, !dbg !18732
  %35 = load i32, i32* %h.addr, align 4, !dbg !18733
  %add39 = add nsw i32 %35, 2, !dbg !18734
  %sub40 = sub nsw i32 %add39, 1, !dbg !18735
  %shr41 = ashr i32 %sub40, 1, !dbg !18736
  store i32 %shr41, i32* %h.addr, align 4, !dbg !18737
  store i32 0, i32* %y, align 4, !dbg !18738
  br label %for.cond, !dbg !18739

for.cond:                                         ; preds = %for.inc162, %entry
  %36 = load i32, i32* %y, align 4, !dbg !18740
  %37 = load i32, i32* %h.addr, align 4, !dbg !18742
  %cmp = icmp slt i32 %36, %37, !dbg !18743
  br i1 %cmp, label %for.body, label %for.end164, !dbg !18744

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !18745
  br label %for.cond43, !dbg !18746

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !18747
  %39 = load i32, i32* %w.addr, align 4, !dbg !18749
  %cmp44 = icmp slt i32 %38, %39, !dbg !18750
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !18751

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !18752, metadata !94), !dbg !18753
  %40 = load i32, i32* %x, align 4, !dbg !18754
  %shl47 = shl i32 %40, 1, !dbg !18755
  %idxprom = sext i32 %shl47 to i64, !dbg !18756
  %41 = load i16*, i16** %src0, align 8, !dbg !18756
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !18756
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !18756
  %conv49 = zext i16 %42 to i32, !dbg !18756
  %43 = load i32, i32* %y_off_in, align 4, !dbg !18757
  %sub50 = sub nsw i32 %conv49, %43, !dbg !18758
  store i32 %sub50, i32* %y00, align 4, !dbg !18753
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !18759, metadata !94), !dbg !18760
  %44 = load i32, i32* %x, align 4, !dbg !18761
  %mul = mul nsw i32 2, %44, !dbg !18762
  %add51 = add nsw i32 %mul, 1, !dbg !18763
  %idxprom52 = sext i32 %add51 to i64, !dbg !18764
  %45 = load i16*, i16** %src0, align 8, !dbg !18764
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !18764
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !18764
  %conv54 = zext i16 %46 to i32, !dbg !18764
  %47 = load i32, i32* %y_off_in, align 4, !dbg !18765
  %sub55 = sub nsw i32 %conv54, %47, !dbg !18766
  store i32 %sub55, i32* %y01, align 4, !dbg !18760
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !18767, metadata !94), !dbg !18768
  %48 = load i64*, i64** %src_stride.addr, align 8, !dbg !18769
  %arrayidx56 = getelementptr inbounds i64, i64* %48, i64 0, !dbg !18769
  %49 = load i64, i64* %arrayidx56, align 8, !dbg !18769
  %div = udiv i64 %49, 2, !dbg !18770
  %50 = load i32, i32* %x, align 4, !dbg !18771
  %mul57 = mul nsw i32 2, %50, !dbg !18772
  %conv58 = sext i32 %mul57 to i64, !dbg !18773
  %add59 = add i64 %div, %conv58, !dbg !18774
  %51 = load i16*, i16** %src0, align 8, !dbg !18775
  %arrayidx60 = getelementptr inbounds i16, i16* %51, i64 %add59, !dbg !18775
  %52 = load i16, i16* %arrayidx60, align 2, !dbg !18775
  %conv61 = zext i16 %52 to i32, !dbg !18775
  %53 = load i32, i32* %y_off_in, align 4, !dbg !18776
  %sub62 = sub nsw i32 %conv61, %53, !dbg !18777
  store i32 %sub62, i32* %y10, align 4, !dbg !18768
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !18778, metadata !94), !dbg !18779
  %54 = load i64*, i64** %src_stride.addr, align 8, !dbg !18780
  %arrayidx63 = getelementptr inbounds i64, i64* %54, i64 0, !dbg !18780
  %55 = load i64, i64* %arrayidx63, align 8, !dbg !18780
  %div64 = udiv i64 %55, 2, !dbg !18781
  %56 = load i32, i32* %x, align 4, !dbg !18782
  %mul65 = mul nsw i32 2, %56, !dbg !18783
  %conv66 = sext i32 %mul65 to i64, !dbg !18784
  %add67 = add i64 %div64, %conv66, !dbg !18785
  %add68 = add i64 %add67, 1, !dbg !18786
  %57 = load i16*, i16** %src0, align 8, !dbg !18787
  %arrayidx69 = getelementptr inbounds i16, i16* %57, i64 %add68, !dbg !18787
  %58 = load i16, i16* %arrayidx69, align 2, !dbg !18787
  %conv70 = zext i16 %58 to i32, !dbg !18787
  %59 = load i32, i32* %y_off_in, align 4, !dbg !18788
  %sub71 = sub nsw i32 %conv70, %59, !dbg !18789
  store i32 %sub71, i32* %y11, align 4, !dbg !18779
  call void @llvm.dbg.declare(metadata i32* %u, metadata !18790, metadata !94), !dbg !18791
  %60 = load i32, i32* %x, align 4, !dbg !18792
  %idxprom72 = sext i32 %60 to i64, !dbg !18793
  %61 = load i16*, i16** %src1, align 8, !dbg !18793
  %arrayidx73 = getelementptr inbounds i16, i16* %61, i64 %idxprom72, !dbg !18793
  %62 = load i16, i16* %arrayidx73, align 2, !dbg !18793
  %conv74 = zext i16 %62 to i32, !dbg !18793
  %sub75 = sub nsw i32 %conv74, 512, !dbg !18794
  store i32 %sub75, i32* %u, align 4, !dbg !18791
  call void @llvm.dbg.declare(metadata i32* %v, metadata !18795, metadata !94), !dbg !18796
  %63 = load i32, i32* %x, align 4, !dbg !18797
  %idxprom76 = sext i32 %63 to i64, !dbg !18798
  %64 = load i16*, i16** %src2, align 8, !dbg !18798
  %arrayidx77 = getelementptr inbounds i16, i16* %64, i64 %idxprom76, !dbg !18798
  %65 = load i16, i16* %arrayidx77, align 2, !dbg !18798
  %conv78 = zext i16 %65 to i32, !dbg !18798
  %sub79 = sub nsw i32 %conv78, 512, !dbg !18799
  store i32 %sub79, i32* %v, align 4, !dbg !18796
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !18800, metadata !94), !dbg !18801
  %66 = load i32, i32* %cyu, align 4, !dbg !18802
  %67 = load i32, i32* %u, align 4, !dbg !18803
  %mul80 = mul nsw i32 %66, %67, !dbg !18804
  %68 = load i32, i32* %cyv, align 4, !dbg !18805
  %69 = load i32, i32* %v, align 4, !dbg !18806
  %mul81 = mul nsw i32 %68, %69, !dbg !18807
  %add82 = add nsw i32 %mul80, %mul81, !dbg !18808
  %add83 = add nsw i32 %add82, 2048, !dbg !18809
  %70 = load i32, i32* %y_off_out, align 4, !dbg !18810
  %add84 = add nsw i32 %add83, %70, !dbg !18811
  store i32 %add84, i32* %uv_val, align 4, !dbg !18801
  %71 = load i32, i32* %cyy, align 4, !dbg !18812
  %72 = load i32, i32* %y00, align 4, !dbg !18813
  %mul85 = mul nsw i32 %71, %72, !dbg !18814
  %73 = load i32, i32* %uv_val, align 4, !dbg !18815
  %add86 = add nsw i32 %mul85, %73, !dbg !18816
  %shr87 = ashr i32 %add86, 12, !dbg !18817
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !18818
  store i32 12, i32* %p.addr.i, align 4, !dbg !18818
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !18819
  %75 = load i32, i32* %p.addr.i, align 4, !dbg !18820
  %shl.i = shl i32 1, %75, !dbg !18821
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !18822
  %neg.i = xor i32 %sub.i, -1, !dbg !18823
  %and.i = and i32 %74, %neg.i, !dbg !18824
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !18824
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !18825

if.then.i:                                        ; preds = %for.body46
  %76 = load i32, i32* %a.addr.i, align 4, !dbg !18826
  %neg1.i = xor i32 %76, -1, !dbg !18827
  %shr.i = ashr i32 %neg1.i, 31, !dbg !18828
  %77 = load i32, i32* %p.addr.i, align 4, !dbg !18829
  %shl2.i = shl i32 1, %77, !dbg !18830
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !18831
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !18832
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !18833
  br label %av_clip_uintp2_c.exit, !dbg !18833

if.else.i:                                        ; preds = %for.body46
  %78 = load i32, i32* %a.addr.i, align 4, !dbg !18834
  store i32 %78, i32* %retval.i, align 4, !dbg !18835
  br label %av_clip_uintp2_c.exit, !dbg !18835

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %79 = load i32, i32* %retval.i, align 4, !dbg !18836
  %conv88 = trunc i32 %79 to i16, !dbg !18818
  %80 = load i32, i32* %x, align 4, !dbg !18837
  %shl89 = shl i32 %80, 1, !dbg !18838
  %idxprom90 = sext i32 %shl89 to i64, !dbg !18839
  %81 = load i16*, i16** %dst0, align 8, !dbg !18839
  %arrayidx91 = getelementptr inbounds i16, i16* %81, i64 %idxprom90, !dbg !18839
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !18840
  %82 = load i32, i32* %cyy, align 4, !dbg !18841
  %83 = load i32, i32* %y01, align 4, !dbg !18842
  %mul92 = mul nsw i32 %82, %83, !dbg !18843
  %84 = load i32, i32* %uv_val, align 4, !dbg !18844
  %add93 = add nsw i32 %mul92, %84, !dbg !18845
  %shr94 = ashr i32 %add93, 12, !dbg !18846
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !18847
  store i32 12, i32* %p.addr.i231, align 4, !dbg !18847
  %85 = load i32, i32* %a.addr.i230, align 4, !dbg !18848
  %86 = load i32, i32* %p.addr.i231, align 4, !dbg !18849
  %shl.i232 = shl i32 1, %86, !dbg !18850
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !18851
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !18852
  %and.i235 = and i32 %85, %neg.i234, !dbg !18853
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !18853
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !18854

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %87 = load i32, i32* %a.addr.i230, align 4, !dbg !18855
  %neg1.i237 = xor i32 %87, -1, !dbg !18856
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !18857
  %88 = load i32, i32* %p.addr.i231, align 4, !dbg !18858
  %shl2.i239 = shl i32 1, %88, !dbg !18859
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !18860
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !18861
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !18862
  br label %av_clip_uintp2_c.exit244, !dbg !18862

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %89 = load i32, i32* %a.addr.i230, align 4, !dbg !18863
  store i32 %89, i32* %retval.i229, align 4, !dbg !18864
  br label %av_clip_uintp2_c.exit244, !dbg !18864

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %90 = load i32, i32* %retval.i229, align 4, !dbg !18865
  %conv96 = trunc i32 %90 to i16, !dbg !18847
  %91 = load i32, i32* %x, align 4, !dbg !18866
  %mul97 = mul nsw i32 %91, 2, !dbg !18867
  %add98 = add nsw i32 %mul97, 1, !dbg !18868
  %idxprom99 = sext i32 %add98 to i64, !dbg !18869
  %92 = load i16*, i16** %dst0, align 8, !dbg !18869
  %arrayidx100 = getelementptr inbounds i16, i16* %92, i64 %idxprom99, !dbg !18869
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !18870
  %93 = load i32, i32* %cyy, align 4, !dbg !18871
  %94 = load i32, i32* %y10, align 4, !dbg !18872
  %mul101 = mul nsw i32 %93, %94, !dbg !18873
  %95 = load i32, i32* %uv_val, align 4, !dbg !18874
  %add102 = add nsw i32 %mul101, %95, !dbg !18875
  %shr103 = ashr i32 %add102, 12, !dbg !18876
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !18877
  store i32 12, i32* %p.addr.i215, align 4, !dbg !18877
  %96 = load i32, i32* %a.addr.i214, align 4, !dbg !18878
  %97 = load i32, i32* %p.addr.i215, align 4, !dbg !18879
  %shl.i216 = shl i32 1, %97, !dbg !18880
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !18881
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !18882
  %and.i219 = and i32 %96, %neg.i218, !dbg !18883
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !18883
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !18884

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %98 = load i32, i32* %a.addr.i214, align 4, !dbg !18885
  %neg1.i221 = xor i32 %98, -1, !dbg !18886
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !18887
  %99 = load i32, i32* %p.addr.i215, align 4, !dbg !18888
  %shl2.i223 = shl i32 1, %99, !dbg !18889
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !18890
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !18891
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !18892
  br label %av_clip_uintp2_c.exit228, !dbg !18892

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %100 = load i32, i32* %a.addr.i214, align 4, !dbg !18893
  store i32 %100, i32* %retval.i213, align 4, !dbg !18894
  br label %av_clip_uintp2_c.exit228, !dbg !18894

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %101 = load i32, i32* %retval.i213, align 4, !dbg !18895
  %conv105 = trunc i32 %101 to i16, !dbg !18877
  %102 = load i32, i32* %x, align 4, !dbg !18896
  %mul106 = mul nsw i32 %102, 2, !dbg !18897
  %add107 = add nsw i32 %mul106, 0, !dbg !18898
  %conv108 = sext i32 %add107 to i64, !dbg !18896
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18899
  %arrayidx109 = getelementptr inbounds i64, i64* %103, i64 0, !dbg !18899
  %104 = load i64, i64* %arrayidx109, align 8, !dbg !18899
  %div110 = udiv i64 %104, 2, !dbg !18900
  %add111 = add i64 %conv108, %div110, !dbg !18901
  %105 = load i16*, i16** %dst0, align 8, !dbg !18902
  %arrayidx112 = getelementptr inbounds i16, i16* %105, i64 %add111, !dbg !18902
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !18903
  %106 = load i32, i32* %cyy, align 4, !dbg !18904
  %107 = load i32, i32* %y11, align 4, !dbg !18905
  %mul113 = mul nsw i32 %106, %107, !dbg !18906
  %108 = load i32, i32* %uv_val, align 4, !dbg !18907
  %add114 = add nsw i32 %mul113, %108, !dbg !18908
  %shr115 = ashr i32 %add114, 12, !dbg !18909
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !18910
  store i32 12, i32* %p.addr.i199, align 4, !dbg !18910
  %109 = load i32, i32* %a.addr.i198, align 4, !dbg !18911
  %110 = load i32, i32* %p.addr.i199, align 4, !dbg !18912
  %shl.i200 = shl i32 1, %110, !dbg !18913
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !18914
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !18915
  %and.i203 = and i32 %109, %neg.i202, !dbg !18916
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !18916
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !18917

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %111 = load i32, i32* %a.addr.i198, align 4, !dbg !18918
  %neg1.i205 = xor i32 %111, -1, !dbg !18919
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !18920
  %112 = load i32, i32* %p.addr.i199, align 4, !dbg !18921
  %shl2.i207 = shl i32 1, %112, !dbg !18922
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !18923
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !18924
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !18925
  br label %av_clip_uintp2_c.exit212, !dbg !18925

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %113 = load i32, i32* %a.addr.i198, align 4, !dbg !18926
  store i32 %113, i32* %retval.i197, align 4, !dbg !18927
  br label %av_clip_uintp2_c.exit212, !dbg !18927

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %114 = load i32, i32* %retval.i197, align 4, !dbg !18928
  %conv117 = trunc i32 %114 to i16, !dbg !18910
  %115 = load i32, i32* %x, align 4, !dbg !18929
  %mul118 = mul nsw i32 %115, 2, !dbg !18930
  %add119 = add nsw i32 %mul118, 1, !dbg !18931
  %conv120 = sext i32 %add119 to i64, !dbg !18929
  %116 = load i64*, i64** %dst_stride.addr, align 8, !dbg !18932
  %arrayidx121 = getelementptr inbounds i64, i64* %116, i64 0, !dbg !18932
  %117 = load i64, i64* %arrayidx121, align 8, !dbg !18932
  %div122 = udiv i64 %117, 2, !dbg !18933
  %add123 = add i64 %conv120, %div122, !dbg !18934
  %118 = load i16*, i16** %dst0, align 8, !dbg !18935
  %arrayidx124 = getelementptr inbounds i16, i16* %118, i64 %add123, !dbg !18935
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !18936
  %119 = load i32, i32* %u, align 4, !dbg !18937
  %120 = load i32, i32* %cuu, align 4, !dbg !18938
  %mul125 = mul nsw i32 %119, %120, !dbg !18939
  %121 = load i32, i32* %v, align 4, !dbg !18940
  %122 = load i32, i32* %cuv, align 4, !dbg !18941
  %mul126 = mul nsw i32 %121, %122, !dbg !18942
  %add127 = add nsw i32 %mul125, %mul126, !dbg !18943
  %add128 = add nsw i32 %add127, 8390656, !dbg !18944
  %shr129 = ashr i32 %add128, 12, !dbg !18945
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !18946
  store i32 12, i32* %p.addr.i183, align 4, !dbg !18946
  %123 = load i32, i32* %a.addr.i182, align 4, !dbg !18947
  %124 = load i32, i32* %p.addr.i183, align 4, !dbg !18948
  %shl.i184 = shl i32 1, %124, !dbg !18949
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !18950
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !18951
  %and.i187 = and i32 %123, %neg.i186, !dbg !18952
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !18952
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !18953

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %125 = load i32, i32* %a.addr.i182, align 4, !dbg !18954
  %neg1.i189 = xor i32 %125, -1, !dbg !18955
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !18956
  %126 = load i32, i32* %p.addr.i183, align 4, !dbg !18957
  %shl2.i191 = shl i32 1, %126, !dbg !18958
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !18959
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !18960
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !18961
  br label %av_clip_uintp2_c.exit196, !dbg !18961

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %127 = load i32, i32* %a.addr.i182, align 4, !dbg !18962
  store i32 %127, i32* %retval.i181, align 4, !dbg !18963
  br label %av_clip_uintp2_c.exit196, !dbg !18963

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %128 = load i32, i32* %retval.i181, align 4, !dbg !18964
  %conv131 = trunc i32 %128 to i16, !dbg !18946
  %129 = load i32, i32* %x, align 4, !dbg !18965
  %idxprom132 = sext i32 %129 to i64, !dbg !18966
  %130 = load i16*, i16** %dst1, align 8, !dbg !18966
  %arrayidx133 = getelementptr inbounds i16, i16* %130, i64 %idxprom132, !dbg !18966
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !18967
  %131 = load i32, i32* %u, align 4, !dbg !18968
  %132 = load i32, i32* %cvu, align 4, !dbg !18969
  %mul134 = mul nsw i32 %131, %132, !dbg !18970
  %133 = load i32, i32* %v, align 4, !dbg !18971
  %134 = load i32, i32* %cvv, align 4, !dbg !18972
  %mul135 = mul nsw i32 %133, %134, !dbg !18973
  %add136 = add nsw i32 %mul134, %mul135, !dbg !18974
  %add137 = add nsw i32 %add136, 8390656, !dbg !18975
  %shr138 = ashr i32 %add137, 12, !dbg !18976
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !18977
  store i32 12, i32* %p.addr.i167, align 4, !dbg !18977
  %135 = load i32, i32* %a.addr.i166, align 4, !dbg !18978
  %136 = load i32, i32* %p.addr.i167, align 4, !dbg !18979
  %shl.i168 = shl i32 1, %136, !dbg !18980
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !18981
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !18982
  %and.i171 = and i32 %135, %neg.i170, !dbg !18983
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !18983
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !18984

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %137 = load i32, i32* %a.addr.i166, align 4, !dbg !18985
  %neg1.i173 = xor i32 %137, -1, !dbg !18986
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !18987
  %138 = load i32, i32* %p.addr.i167, align 4, !dbg !18988
  %shl2.i175 = shl i32 1, %138, !dbg !18989
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !18990
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !18991
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !18992
  br label %av_clip_uintp2_c.exit180, !dbg !18992

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %139 = load i32, i32* %a.addr.i166, align 4, !dbg !18993
  store i32 %139, i32* %retval.i165, align 4, !dbg !18994
  br label %av_clip_uintp2_c.exit180, !dbg !18994

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %140 = load i32, i32* %retval.i165, align 4, !dbg !18995
  %conv140 = trunc i32 %140 to i16, !dbg !18977
  %141 = load i32, i32* %x, align 4, !dbg !18996
  %idxprom141 = sext i32 %141 to i64, !dbg !18997
  %142 = load i16*, i16** %dst2, align 8, !dbg !18997
  %arrayidx142 = getelementptr inbounds i16, i16* %142, i64 %idxprom141, !dbg !18997
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !18998
  br label %for.inc, !dbg !18999

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %143 = load i32, i32* %x, align 4, !dbg !19000
  %inc = add nsw i32 %143, 1, !dbg !19000
  store i32 %inc, i32* %x, align 4, !dbg !19000
  br label %for.cond43, !dbg !19002, !llvm.loop !19003

for.end:                                          ; preds = %for.cond43
  %144 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19005
  %arrayidx143 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !19005
  %145 = load i64, i64* %arrayidx143, align 8, !dbg !19005
  %mul144 = mul nsw i64 %145, 2, !dbg !19006
  %div145 = udiv i64 %mul144, 2, !dbg !19007
  %146 = load i16*, i16** %dst0, align 8, !dbg !19008
  %add.ptr = getelementptr inbounds i16, i16* %146, i64 %div145, !dbg !19008
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !19008
  %147 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19009
  %arrayidx146 = getelementptr inbounds i64, i64* %147, i64 1, !dbg !19009
  %148 = load i64, i64* %arrayidx146, align 8, !dbg !19009
  %div147 = udiv i64 %148, 2, !dbg !19010
  %149 = load i16*, i16** %dst1, align 8, !dbg !19011
  %add.ptr148 = getelementptr inbounds i16, i16* %149, i64 %div147, !dbg !19011
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !19011
  %150 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19012
  %arrayidx149 = getelementptr inbounds i64, i64* %150, i64 2, !dbg !19012
  %151 = load i64, i64* %arrayidx149, align 8, !dbg !19012
  %div150 = udiv i64 %151, 2, !dbg !19013
  %152 = load i16*, i16** %dst2, align 8, !dbg !19014
  %add.ptr151 = getelementptr inbounds i16, i16* %152, i64 %div150, !dbg !19014
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !19014
  %153 = load i64*, i64** %src_stride.addr, align 8, !dbg !19015
  %arrayidx152 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !19015
  %154 = load i64, i64* %arrayidx152, align 8, !dbg !19015
  %mul153 = mul nsw i64 %154, 2, !dbg !19016
  %div154 = udiv i64 %mul153, 2, !dbg !19017
  %155 = load i16*, i16** %src0, align 8, !dbg !19018
  %add.ptr155 = getelementptr inbounds i16, i16* %155, i64 %div154, !dbg !19018
  store i16* %add.ptr155, i16** %src0, align 8, !dbg !19018
  %156 = load i64*, i64** %src_stride.addr, align 8, !dbg !19019
  %arrayidx156 = getelementptr inbounds i64, i64* %156, i64 1, !dbg !19019
  %157 = load i64, i64* %arrayidx156, align 8, !dbg !19019
  %div157 = udiv i64 %157, 2, !dbg !19020
  %158 = load i16*, i16** %src1, align 8, !dbg !19021
  %add.ptr158 = getelementptr inbounds i16, i16* %158, i64 %div157, !dbg !19021
  store i16* %add.ptr158, i16** %src1, align 8, !dbg !19021
  %159 = load i64*, i64** %src_stride.addr, align 8, !dbg !19022
  %arrayidx159 = getelementptr inbounds i64, i64* %159, i64 2, !dbg !19022
  %160 = load i64, i64* %arrayidx159, align 8, !dbg !19022
  %div160 = udiv i64 %160, 2, !dbg !19023
  %161 = load i16*, i16** %src2, align 8, !dbg !19024
  %add.ptr161 = getelementptr inbounds i16, i16* %161, i64 %div160, !dbg !19024
  store i16* %add.ptr161, i16** %src2, align 8, !dbg !19024
  br label %for.inc162, !dbg !19025

for.inc162:                                       ; preds = %for.end
  %162 = load i32, i32* %y, align 4, !dbg !19026
  %inc163 = add nsw i32 %162, 1, !dbg !19026
  store i32 %inc163, i32* %y, align 4, !dbg !19026
  br label %for.cond, !dbg !19028, !llvm.loop !19029

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !19031
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p12to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !19032 {
entry:
  %retval.i117 = alloca i8, align 1
  %a.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i118, metadata !3609, metadata !94), !dbg !19033
  %retval.i106 = alloca i8, align 1
  %a.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i107, metadata !3609, metadata !94), !dbg !19041
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !19043
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !19045, metadata !94), !dbg !19046
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !19047, metadata !94), !dbg !19048
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !19049, metadata !94), !dbg !19050
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !19051, metadata !94), !dbg !19052
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !19053, metadata !94), !dbg !19054
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !19055, metadata !94), !dbg !19056
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !19057, metadata !94), !dbg !19058
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !19059, metadata !94), !dbg !19060
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !19061, metadata !94), !dbg !19062
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !19063
  store i8** %0, i8*** %dst, align 8, !dbg !19062
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !19064, metadata !94), !dbg !19065
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !19066
  %2 = bitcast i8** %1 to i16**, !dbg !19067
  store i16** %2, i16*** %src, align 8, !dbg !19065
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !19068, metadata !94), !dbg !19069
  %3 = load i16**, i16*** %src, align 8, !dbg !19070
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !19070
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !19070
  store i16* %4, i16** %src0, align 8, !dbg !19069
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !19071, metadata !94), !dbg !19072
  %5 = load i16**, i16*** %src, align 8, !dbg !19073
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !19073
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !19073
  store i16* %6, i16** %src1, align 8, !dbg !19072
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !19074, metadata !94), !dbg !19075
  %7 = load i16**, i16*** %src, align 8, !dbg !19076
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !19076
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !19076
  store i16* %8, i16** %src2, align 8, !dbg !19075
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !19077, metadata !94), !dbg !19078
  %9 = load i8**, i8*** %dst, align 8, !dbg !19079
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !19079
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !19079
  store i8* %10, i8** %dst0, align 8, !dbg !19078
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !19080, metadata !94), !dbg !19081
  %11 = load i8**, i8*** %dst, align 8, !dbg !19082
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !19082
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !19082
  store i8* %12, i8** %dst1, align 8, !dbg !19081
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !19083, metadata !94), !dbg !19084
  %13 = load i8**, i8*** %dst, align 8, !dbg !19085
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !19085
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !19085
  store i8* %14, i8** %dst2, align 8, !dbg !19084
  call void @llvm.dbg.declare(metadata i32* %y, metadata !19086, metadata !94), !dbg !19087
  call void @llvm.dbg.declare(metadata i32* %x, metadata !19088, metadata !94), !dbg !19089
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !19090, metadata !94), !dbg !19091
  store i32 18, i32* %sh, align 4, !dbg !19091
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !19092, metadata !94), !dbg !19093
  store i32 131072, i32* %rnd, align 4, !dbg !19093
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !19094, metadata !94), !dbg !19095
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19096
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !19096
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !19096
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !19096
  %conv = sext i16 %16 to i32, !dbg !19096
  store i32 %conv, i32* %y_off_in, align 4, !dbg !19095
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !19097, metadata !94), !dbg !19098
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19099
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !19099
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !19099
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !19099
  %conv10 = sext i16 %18 to i32, !dbg !19099
  %shl = shl i32 %conv10, 18, !dbg !19100
  store i32 %shl, i32* %y_off_out, align 4, !dbg !19098
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !19101, metadata !94), !dbg !19102
  store i32 2048, i32* %uv_off_in, align 4, !dbg !19102
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !19103, metadata !94), !dbg !19104
  store i32 33685504, i32* %uv_off_out, align 4, !dbg !19104
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !19105, metadata !94), !dbg !19106
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19107
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !19107
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !19107
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !19107
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !19107
  %conv14 = sext i16 %20 to i32, !dbg !19107
  store i32 %conv14, i32* %cyy, align 4, !dbg !19106
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !19108, metadata !94), !dbg !19109
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19110
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !19110
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !19110
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !19110
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !19110
  %conv18 = sext i16 %22 to i32, !dbg !19110
  store i32 %conv18, i32* %cyu, align 4, !dbg !19109
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !19111, metadata !94), !dbg !19112
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19113
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !19113
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !19113
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !19113
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !19113
  %conv22 = sext i16 %24 to i32, !dbg !19113
  store i32 %conv22, i32* %cyv, align 4, !dbg !19112
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !19114, metadata !94), !dbg !19115
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19116
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !19116
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !19116
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !19116
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !19116
  %conv26 = sext i16 %26 to i32, !dbg !19116
  store i32 %conv26, i32* %cuu, align 4, !dbg !19115
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !19117, metadata !94), !dbg !19118
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19119
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !19119
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !19119
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !19119
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !19119
  %conv30 = sext i16 %28 to i32, !dbg !19119
  store i32 %conv30, i32* %cuv, align 4, !dbg !19118
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !19120, metadata !94), !dbg !19121
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19122
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !19122
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !19122
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !19122
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !19122
  %conv34 = sext i16 %30 to i32, !dbg !19122
  store i32 %conv34, i32* %cvu, align 4, !dbg !19121
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !19123, metadata !94), !dbg !19124
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19125
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !19125
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !19125
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !19125
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !19125
  %conv38 = sext i16 %32 to i32, !dbg !19125
  store i32 %conv38, i32* %cvv, align 4, !dbg !19124
  %33 = load i32, i32* %w.addr, align 4, !dbg !19126
  %add = add nsw i32 %33, 1, !dbg !19127
  %sub = sub nsw i32 %add, 1, !dbg !19128
  %shr = ashr i32 %sub, 0, !dbg !19129
  store i32 %shr, i32* %w.addr, align 4, !dbg !19130
  %34 = load i32, i32* %h.addr, align 4, !dbg !19131
  %add39 = add nsw i32 %34, 1, !dbg !19132
  %sub40 = sub nsw i32 %add39, 1, !dbg !19133
  %shr41 = ashr i32 %sub40, 0, !dbg !19134
  store i32 %shr41, i32* %h.addr, align 4, !dbg !19135
  store i32 0, i32* %y, align 4, !dbg !19136
  br label %for.cond, !dbg !19137

for.cond:                                         ; preds = %for.inc103, %entry
  %35 = load i32, i32* %y, align 4, !dbg !19138
  %36 = load i32, i32* %h.addr, align 4, !dbg !19140
  %cmp = icmp slt i32 %35, %36, !dbg !19141
  br i1 %cmp, label %for.body, label %for.end105, !dbg !19142

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !19143
  br label %for.cond43, !dbg !19144

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !19145
  %38 = load i32, i32* %w.addr, align 4, !dbg !19147
  %cmp44 = icmp slt i32 %37, %38, !dbg !19148
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !19149

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !19150, metadata !94), !dbg !19151
  %39 = load i32, i32* %x, align 4, !dbg !19152
  %shl47 = shl i32 %39, 0, !dbg !19153
  %idxprom = sext i32 %shl47 to i64, !dbg !19154
  %40 = load i16*, i16** %src0, align 8, !dbg !19154
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !19154
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !19154
  %conv49 = zext i16 %41 to i32, !dbg !19154
  %42 = load i32, i32* %y_off_in, align 4, !dbg !19155
  %sub50 = sub nsw i32 %conv49, %42, !dbg !19156
  store i32 %sub50, i32* %y00, align 4, !dbg !19151
  call void @llvm.dbg.declare(metadata i32* %u, metadata !19157, metadata !94), !dbg !19158
  %43 = load i32, i32* %x, align 4, !dbg !19159
  %idxprom51 = sext i32 %43 to i64, !dbg !19160
  %44 = load i16*, i16** %src1, align 8, !dbg !19160
  %arrayidx52 = getelementptr inbounds i16, i16* %44, i64 %idxprom51, !dbg !19160
  %45 = load i16, i16* %arrayidx52, align 2, !dbg !19160
  %conv53 = zext i16 %45 to i32, !dbg !19160
  %sub54 = sub nsw i32 %conv53, 2048, !dbg !19161
  store i32 %sub54, i32* %u, align 4, !dbg !19158
  call void @llvm.dbg.declare(metadata i32* %v, metadata !19162, metadata !94), !dbg !19163
  %46 = load i32, i32* %x, align 4, !dbg !19164
  %idxprom55 = sext i32 %46 to i64, !dbg !19165
  %47 = load i16*, i16** %src2, align 8, !dbg !19165
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !19165
  %48 = load i16, i16* %arrayidx56, align 2, !dbg !19165
  %conv57 = zext i16 %48 to i32, !dbg !19165
  %sub58 = sub nsw i32 %conv57, 2048, !dbg !19166
  store i32 %sub58, i32* %v, align 4, !dbg !19163
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !19167, metadata !94), !dbg !19168
  %49 = load i32, i32* %cyu, align 4, !dbg !19169
  %50 = load i32, i32* %u, align 4, !dbg !19170
  %mul = mul nsw i32 %49, %50, !dbg !19171
  %51 = load i32, i32* %cyv, align 4, !dbg !19172
  %52 = load i32, i32* %v, align 4, !dbg !19173
  %mul59 = mul nsw i32 %51, %52, !dbg !19174
  %add60 = add nsw i32 %mul, %mul59, !dbg !19175
  %add61 = add nsw i32 %add60, 131072, !dbg !19176
  %53 = load i32, i32* %y_off_out, align 4, !dbg !19177
  %add62 = add nsw i32 %add61, %53, !dbg !19178
  store i32 %add62, i32* %uv_val, align 4, !dbg !19168
  %54 = load i32, i32* %cyy, align 4, !dbg !19179
  %55 = load i32, i32* %y00, align 4, !dbg !19180
  %mul63 = mul nsw i32 %54, %55, !dbg !19181
  %56 = load i32, i32* %uv_val, align 4, !dbg !19182
  %add64 = add nsw i32 %mul63, %56, !dbg !19183
  %shr65 = ashr i32 %add64, 18, !dbg !19184
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !19185
  %57 = load i32, i32* %a.addr.i, align 4, !dbg !19186
  %and.i = and i32 %57, -256, !dbg !19187
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !19187
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !19188

if.then.i:                                        ; preds = %for.body46
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !19189
  %neg.i = xor i32 %58, -1, !dbg !19190
  %shr.i = ashr i32 %neg.i, 31, !dbg !19191
  %conv.i = trunc i32 %shr.i to i8, !dbg !19192
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !19193
  br label %av_clip_uint8_c.exit, !dbg !19193

if.else.i:                                        ; preds = %for.body46
  %59 = load i32, i32* %a.addr.i, align 4, !dbg !19194
  %conv1.i = trunc i32 %59 to i8, !dbg !19194
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !19195
  br label %av_clip_uint8_c.exit, !dbg !19195

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %60 = load i8, i8* %retval.i, align 1, !dbg !19196
  %61 = load i32, i32* %x, align 4, !dbg !19197
  %shl66 = shl i32 %61, 0, !dbg !19198
  %idxprom67 = sext i32 %shl66 to i64, !dbg !19199
  %62 = load i8*, i8** %dst0, align 8, !dbg !19199
  %arrayidx68 = getelementptr inbounds i8, i8* %62, i64 %idxprom67, !dbg !19199
  store i8 %60, i8* %arrayidx68, align 1, !dbg !19200
  %63 = load i32, i32* %u, align 4, !dbg !19201
  %64 = load i32, i32* %cuu, align 4, !dbg !19202
  %mul69 = mul nsw i32 %63, %64, !dbg !19203
  %65 = load i32, i32* %v, align 4, !dbg !19204
  %66 = load i32, i32* %cuv, align 4, !dbg !19205
  %mul70 = mul nsw i32 %65, %66, !dbg !19206
  %add71 = add nsw i32 %mul69, %mul70, !dbg !19207
  %add72 = add nsw i32 %add71, 33685504, !dbg !19208
  %shr73 = ashr i32 %add72, 18, !dbg !19209
  store i32 %shr73, i32* %a.addr.i118, align 4, !dbg !19210
  %67 = load i32, i32* %a.addr.i118, align 4, !dbg !19211
  %and.i119 = and i32 %67, -256, !dbg !19212
  %tobool.i120 = icmp ne i32 %and.i119, 0, !dbg !19212
  br i1 %tobool.i120, label %if.then.i124, label %if.else.i126, !dbg !19213

if.then.i124:                                     ; preds = %av_clip_uint8_c.exit
  %68 = load i32, i32* %a.addr.i118, align 4, !dbg !19214
  %neg.i121 = xor i32 %68, -1, !dbg !19215
  %shr.i122 = ashr i32 %neg.i121, 31, !dbg !19216
  %conv.i123 = trunc i32 %shr.i122 to i8, !dbg !19217
  store i8 %conv.i123, i8* %retval.i117, align 1, !dbg !19218
  br label %av_clip_uint8_c.exit127, !dbg !19218

if.else.i126:                                     ; preds = %av_clip_uint8_c.exit
  %69 = load i32, i32* %a.addr.i118, align 4, !dbg !19219
  %conv1.i125 = trunc i32 %69 to i8, !dbg !19219
  store i8 %conv1.i125, i8* %retval.i117, align 1, !dbg !19220
  br label %av_clip_uint8_c.exit127, !dbg !19220

av_clip_uint8_c.exit127:                          ; preds = %if.then.i124, %if.else.i126
  %70 = load i8, i8* %retval.i117, align 1, !dbg !19221
  %71 = load i32, i32* %x, align 4, !dbg !19222
  %idxprom75 = sext i32 %71 to i64, !dbg !19223
  %72 = load i8*, i8** %dst1, align 8, !dbg !19223
  %arrayidx76 = getelementptr inbounds i8, i8* %72, i64 %idxprom75, !dbg !19223
  store i8 %70, i8* %arrayidx76, align 1, !dbg !19224
  %73 = load i32, i32* %u, align 4, !dbg !19225
  %74 = load i32, i32* %cvu, align 4, !dbg !19226
  %mul77 = mul nsw i32 %73, %74, !dbg !19227
  %75 = load i32, i32* %v, align 4, !dbg !19228
  %76 = load i32, i32* %cvv, align 4, !dbg !19229
  %mul78 = mul nsw i32 %75, %76, !dbg !19230
  %add79 = add nsw i32 %mul77, %mul78, !dbg !19231
  %add80 = add nsw i32 %add79, 33685504, !dbg !19232
  %shr81 = ashr i32 %add80, 18, !dbg !19233
  store i32 %shr81, i32* %a.addr.i107, align 4, !dbg !19234
  %77 = load i32, i32* %a.addr.i107, align 4, !dbg !19235
  %and.i108 = and i32 %77, -256, !dbg !19236
  %tobool.i109 = icmp ne i32 %and.i108, 0, !dbg !19236
  br i1 %tobool.i109, label %if.then.i113, label %if.else.i115, !dbg !19237

if.then.i113:                                     ; preds = %av_clip_uint8_c.exit127
  %78 = load i32, i32* %a.addr.i107, align 4, !dbg !19238
  %neg.i110 = xor i32 %78, -1, !dbg !19239
  %shr.i111 = ashr i32 %neg.i110, 31, !dbg !19240
  %conv.i112 = trunc i32 %shr.i111 to i8, !dbg !19241
  store i8 %conv.i112, i8* %retval.i106, align 1, !dbg !19242
  br label %av_clip_uint8_c.exit116, !dbg !19242

if.else.i115:                                     ; preds = %av_clip_uint8_c.exit127
  %79 = load i32, i32* %a.addr.i107, align 4, !dbg !19243
  %conv1.i114 = trunc i32 %79 to i8, !dbg !19243
  store i8 %conv1.i114, i8* %retval.i106, align 1, !dbg !19244
  br label %av_clip_uint8_c.exit116, !dbg !19244

av_clip_uint8_c.exit116:                          ; preds = %if.then.i113, %if.else.i115
  %80 = load i8, i8* %retval.i106, align 1, !dbg !19245
  %81 = load i32, i32* %x, align 4, !dbg !19246
  %idxprom83 = sext i32 %81 to i64, !dbg !19247
  %82 = load i8*, i8** %dst2, align 8, !dbg !19247
  %arrayidx84 = getelementptr inbounds i8, i8* %82, i64 %idxprom83, !dbg !19247
  store i8 %80, i8* %arrayidx84, align 1, !dbg !19248
  br label %for.inc, !dbg !19249

for.inc:                                          ; preds = %av_clip_uint8_c.exit116
  %83 = load i32, i32* %x, align 4, !dbg !19250
  %inc = add nsw i32 %83, 1, !dbg !19250
  store i32 %inc, i32* %x, align 4, !dbg !19250
  br label %for.cond43, !dbg !19252, !llvm.loop !19253

for.end:                                          ; preds = %for.cond43
  %84 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19255
  %arrayidx85 = getelementptr inbounds i64, i64* %84, i64 0, !dbg !19255
  %85 = load i64, i64* %arrayidx85, align 8, !dbg !19255
  %mul86 = mul nsw i64 %85, 1, !dbg !19256
  %div = udiv i64 %mul86, 1, !dbg !19257
  %86 = load i8*, i8** %dst0, align 8, !dbg !19258
  %add.ptr = getelementptr inbounds i8, i8* %86, i64 %div, !dbg !19258
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !19258
  %87 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19259
  %arrayidx87 = getelementptr inbounds i64, i64* %87, i64 1, !dbg !19259
  %88 = load i64, i64* %arrayidx87, align 8, !dbg !19259
  %div88 = udiv i64 %88, 1, !dbg !19260
  %89 = load i8*, i8** %dst1, align 8, !dbg !19261
  %add.ptr89 = getelementptr inbounds i8, i8* %89, i64 %div88, !dbg !19261
  store i8* %add.ptr89, i8** %dst1, align 8, !dbg !19261
  %90 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19262
  %arrayidx90 = getelementptr inbounds i64, i64* %90, i64 2, !dbg !19262
  %91 = load i64, i64* %arrayidx90, align 8, !dbg !19262
  %div91 = udiv i64 %91, 1, !dbg !19263
  %92 = load i8*, i8** %dst2, align 8, !dbg !19264
  %add.ptr92 = getelementptr inbounds i8, i8* %92, i64 %div91, !dbg !19264
  store i8* %add.ptr92, i8** %dst2, align 8, !dbg !19264
  %93 = load i64*, i64** %src_stride.addr, align 8, !dbg !19265
  %arrayidx93 = getelementptr inbounds i64, i64* %93, i64 0, !dbg !19265
  %94 = load i64, i64* %arrayidx93, align 8, !dbg !19265
  %mul94 = mul nsw i64 %94, 1, !dbg !19266
  %div95 = udiv i64 %mul94, 2, !dbg !19267
  %95 = load i16*, i16** %src0, align 8, !dbg !19268
  %add.ptr96 = getelementptr inbounds i16, i16* %95, i64 %div95, !dbg !19268
  store i16* %add.ptr96, i16** %src0, align 8, !dbg !19268
  %96 = load i64*, i64** %src_stride.addr, align 8, !dbg !19269
  %arrayidx97 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !19269
  %97 = load i64, i64* %arrayidx97, align 8, !dbg !19269
  %div98 = udiv i64 %97, 2, !dbg !19270
  %98 = load i16*, i16** %src1, align 8, !dbg !19271
  %add.ptr99 = getelementptr inbounds i16, i16* %98, i64 %div98, !dbg !19271
  store i16* %add.ptr99, i16** %src1, align 8, !dbg !19271
  %99 = load i64*, i64** %src_stride.addr, align 8, !dbg !19272
  %arrayidx100 = getelementptr inbounds i64, i64* %99, i64 2, !dbg !19272
  %100 = load i64, i64* %arrayidx100, align 8, !dbg !19272
  %div101 = udiv i64 %100, 2, !dbg !19273
  %101 = load i16*, i16** %src2, align 8, !dbg !19274
  %add.ptr102 = getelementptr inbounds i16, i16* %101, i64 %div101, !dbg !19274
  store i16* %add.ptr102, i16** %src2, align 8, !dbg !19274
  br label %for.inc103, !dbg !19275

for.inc103:                                       ; preds = %for.end
  %102 = load i32, i32* %y, align 4, !dbg !19276
  %inc104 = add nsw i32 %102, 1, !dbg !19276
  store i32 %inc104, i32* %y, align 4, !dbg !19276
  br label %for.cond, !dbg !19278, !llvm.loop !19279

for.end105:                                       ; preds = %for.cond
  ret void, !dbg !19281
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p12to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !19282 {
entry:
  %retval.i142 = alloca i8, align 1
  %a.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i143, metadata !3609, metadata !94), !dbg !19283
  %retval.i131 = alloca i8, align 1
  %a.addr.i132 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i132, metadata !3609, metadata !94), !dbg !19291
  %retval.i120 = alloca i8, align 1
  %a.addr.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i121, metadata !3609, metadata !94), !dbg !19293
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !19295
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !19297, metadata !94), !dbg !19298
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !19299, metadata !94), !dbg !19300
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !19301, metadata !94), !dbg !19302
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !19303, metadata !94), !dbg !19304
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !19305, metadata !94), !dbg !19306
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !19307, metadata !94), !dbg !19308
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !19309, metadata !94), !dbg !19310
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !19311, metadata !94), !dbg !19312
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !19313, metadata !94), !dbg !19314
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !19315
  store i8** %0, i8*** %dst, align 8, !dbg !19314
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !19316, metadata !94), !dbg !19317
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !19318
  %2 = bitcast i8** %1 to i16**, !dbg !19319
  store i16** %2, i16*** %src, align 8, !dbg !19317
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !19320, metadata !94), !dbg !19321
  %3 = load i16**, i16*** %src, align 8, !dbg !19322
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !19322
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !19322
  store i16* %4, i16** %src0, align 8, !dbg !19321
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !19323, metadata !94), !dbg !19324
  %5 = load i16**, i16*** %src, align 8, !dbg !19325
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !19325
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !19325
  store i16* %6, i16** %src1, align 8, !dbg !19324
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !19326, metadata !94), !dbg !19327
  %7 = load i16**, i16*** %src, align 8, !dbg !19328
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !19328
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !19328
  store i16* %8, i16** %src2, align 8, !dbg !19327
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !19329, metadata !94), !dbg !19330
  %9 = load i8**, i8*** %dst, align 8, !dbg !19331
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !19331
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !19331
  store i8* %10, i8** %dst0, align 8, !dbg !19330
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !19332, metadata !94), !dbg !19333
  %11 = load i8**, i8*** %dst, align 8, !dbg !19334
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !19334
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !19334
  store i8* %12, i8** %dst1, align 8, !dbg !19333
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !19335, metadata !94), !dbg !19336
  %13 = load i8**, i8*** %dst, align 8, !dbg !19337
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !19337
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !19337
  store i8* %14, i8** %dst2, align 8, !dbg !19336
  call void @llvm.dbg.declare(metadata i32* %y, metadata !19338, metadata !94), !dbg !19339
  call void @llvm.dbg.declare(metadata i32* %x, metadata !19340, metadata !94), !dbg !19341
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !19342, metadata !94), !dbg !19343
  store i32 18, i32* %sh, align 4, !dbg !19343
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !19344, metadata !94), !dbg !19345
  store i32 131072, i32* %rnd, align 4, !dbg !19345
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !19346, metadata !94), !dbg !19347
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19348
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !19348
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !19348
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !19348
  %conv = sext i16 %16 to i32, !dbg !19348
  store i32 %conv, i32* %y_off_in, align 4, !dbg !19347
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !19349, metadata !94), !dbg !19350
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19351
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !19351
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !19351
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !19351
  %conv10 = sext i16 %18 to i32, !dbg !19351
  %shl = shl i32 %conv10, 18, !dbg !19352
  store i32 %shl, i32* %y_off_out, align 4, !dbg !19350
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !19353, metadata !94), !dbg !19354
  store i32 2048, i32* %uv_off_in, align 4, !dbg !19354
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !19355, metadata !94), !dbg !19356
  store i32 33685504, i32* %uv_off_out, align 4, !dbg !19356
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !19357, metadata !94), !dbg !19358
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19359
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !19359
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !19359
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !19359
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !19359
  %conv14 = sext i16 %20 to i32, !dbg !19359
  store i32 %conv14, i32* %cyy, align 4, !dbg !19358
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !19360, metadata !94), !dbg !19361
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19362
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !19362
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !19362
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !19362
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !19362
  %conv18 = sext i16 %22 to i32, !dbg !19362
  store i32 %conv18, i32* %cyu, align 4, !dbg !19361
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !19363, metadata !94), !dbg !19364
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19365
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !19365
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !19365
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !19365
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !19365
  %conv22 = sext i16 %24 to i32, !dbg !19365
  store i32 %conv22, i32* %cyv, align 4, !dbg !19364
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !19366, metadata !94), !dbg !19367
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19368
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !19368
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !19368
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !19368
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !19368
  %conv26 = sext i16 %26 to i32, !dbg !19368
  store i32 %conv26, i32* %cuu, align 4, !dbg !19367
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !19369, metadata !94), !dbg !19370
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19371
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !19371
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !19371
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !19371
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !19371
  %conv30 = sext i16 %28 to i32, !dbg !19371
  store i32 %conv30, i32* %cuv, align 4, !dbg !19370
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !19372, metadata !94), !dbg !19373
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19374
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !19374
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !19374
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !19374
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !19374
  %conv34 = sext i16 %30 to i32, !dbg !19374
  store i32 %conv34, i32* %cvu, align 4, !dbg !19373
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !19375, metadata !94), !dbg !19376
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19377
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !19377
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !19377
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !19377
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !19377
  %conv38 = sext i16 %32 to i32, !dbg !19377
  store i32 %conv38, i32* %cvv, align 4, !dbg !19376
  %33 = load i32, i32* %w.addr, align 4, !dbg !19378
  %add = add nsw i32 %33, 2, !dbg !19379
  %sub = sub nsw i32 %add, 1, !dbg !19380
  %shr = ashr i32 %sub, 1, !dbg !19381
  store i32 %shr, i32* %w.addr, align 4, !dbg !19382
  %34 = load i32, i32* %h.addr, align 4, !dbg !19383
  %add39 = add nsw i32 %34, 1, !dbg !19384
  %sub40 = sub nsw i32 %add39, 1, !dbg !19385
  %shr41 = ashr i32 %sub40, 0, !dbg !19386
  store i32 %shr41, i32* %h.addr, align 4, !dbg !19387
  store i32 0, i32* %y, align 4, !dbg !19388
  br label %for.cond, !dbg !19389

for.cond:                                         ; preds = %for.inc117, %entry
  %35 = load i32, i32* %y, align 4, !dbg !19390
  %36 = load i32, i32* %h.addr, align 4, !dbg !19392
  %cmp = icmp slt i32 %35, %36, !dbg !19393
  br i1 %cmp, label %for.body, label %for.end119, !dbg !19394

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !19395
  br label %for.cond43, !dbg !19396

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !19397
  %38 = load i32, i32* %w.addr, align 4, !dbg !19399
  %cmp44 = icmp slt i32 %37, %38, !dbg !19400
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !19401

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !19402, metadata !94), !dbg !19403
  %39 = load i32, i32* %x, align 4, !dbg !19404
  %shl47 = shl i32 %39, 1, !dbg !19405
  %idxprom = sext i32 %shl47 to i64, !dbg !19406
  %40 = load i16*, i16** %src0, align 8, !dbg !19406
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !19406
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !19406
  %conv49 = zext i16 %41 to i32, !dbg !19406
  %42 = load i32, i32* %y_off_in, align 4, !dbg !19407
  %sub50 = sub nsw i32 %conv49, %42, !dbg !19408
  store i32 %sub50, i32* %y00, align 4, !dbg !19403
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !19409, metadata !94), !dbg !19410
  %43 = load i32, i32* %x, align 4, !dbg !19411
  %mul = mul nsw i32 2, %43, !dbg !19412
  %add51 = add nsw i32 %mul, 1, !dbg !19413
  %idxprom52 = sext i32 %add51 to i64, !dbg !19414
  %44 = load i16*, i16** %src0, align 8, !dbg !19414
  %arrayidx53 = getelementptr inbounds i16, i16* %44, i64 %idxprom52, !dbg !19414
  %45 = load i16, i16* %arrayidx53, align 2, !dbg !19414
  %conv54 = zext i16 %45 to i32, !dbg !19414
  %46 = load i32, i32* %y_off_in, align 4, !dbg !19415
  %sub55 = sub nsw i32 %conv54, %46, !dbg !19416
  store i32 %sub55, i32* %y01, align 4, !dbg !19410
  call void @llvm.dbg.declare(metadata i32* %u, metadata !19417, metadata !94), !dbg !19418
  %47 = load i32, i32* %x, align 4, !dbg !19419
  %idxprom56 = sext i32 %47 to i64, !dbg !19420
  %48 = load i16*, i16** %src1, align 8, !dbg !19420
  %arrayidx57 = getelementptr inbounds i16, i16* %48, i64 %idxprom56, !dbg !19420
  %49 = load i16, i16* %arrayidx57, align 2, !dbg !19420
  %conv58 = zext i16 %49 to i32, !dbg !19420
  %sub59 = sub nsw i32 %conv58, 2048, !dbg !19421
  store i32 %sub59, i32* %u, align 4, !dbg !19418
  call void @llvm.dbg.declare(metadata i32* %v, metadata !19422, metadata !94), !dbg !19423
  %50 = load i32, i32* %x, align 4, !dbg !19424
  %idxprom60 = sext i32 %50 to i64, !dbg !19425
  %51 = load i16*, i16** %src2, align 8, !dbg !19425
  %arrayidx61 = getelementptr inbounds i16, i16* %51, i64 %idxprom60, !dbg !19425
  %52 = load i16, i16* %arrayidx61, align 2, !dbg !19425
  %conv62 = zext i16 %52 to i32, !dbg !19425
  %sub63 = sub nsw i32 %conv62, 2048, !dbg !19426
  store i32 %sub63, i32* %v, align 4, !dbg !19423
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !19427, metadata !94), !dbg !19428
  %53 = load i32, i32* %cyu, align 4, !dbg !19429
  %54 = load i32, i32* %u, align 4, !dbg !19430
  %mul64 = mul nsw i32 %53, %54, !dbg !19431
  %55 = load i32, i32* %cyv, align 4, !dbg !19432
  %56 = load i32, i32* %v, align 4, !dbg !19433
  %mul65 = mul nsw i32 %55, %56, !dbg !19434
  %add66 = add nsw i32 %mul64, %mul65, !dbg !19435
  %add67 = add nsw i32 %add66, 131072, !dbg !19436
  %57 = load i32, i32* %y_off_out, align 4, !dbg !19437
  %add68 = add nsw i32 %add67, %57, !dbg !19438
  store i32 %add68, i32* %uv_val, align 4, !dbg !19428
  %58 = load i32, i32* %cyy, align 4, !dbg !19439
  %59 = load i32, i32* %y00, align 4, !dbg !19440
  %mul69 = mul nsw i32 %58, %59, !dbg !19441
  %60 = load i32, i32* %uv_val, align 4, !dbg !19442
  %add70 = add nsw i32 %mul69, %60, !dbg !19443
  %shr71 = ashr i32 %add70, 18, !dbg !19444
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !19445
  %61 = load i32, i32* %a.addr.i, align 4, !dbg !19446
  %and.i = and i32 %61, -256, !dbg !19447
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !19447
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !19448

if.then.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !19449
  %neg.i = xor i32 %62, -1, !dbg !19450
  %shr.i = ashr i32 %neg.i, 31, !dbg !19451
  %conv.i = trunc i32 %shr.i to i8, !dbg !19452
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !19453
  br label %av_clip_uint8_c.exit, !dbg !19453

if.else.i:                                        ; preds = %for.body46
  %63 = load i32, i32* %a.addr.i, align 4, !dbg !19454
  %conv1.i = trunc i32 %63 to i8, !dbg !19454
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !19455
  br label %av_clip_uint8_c.exit, !dbg !19455

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %64 = load i8, i8* %retval.i, align 1, !dbg !19456
  %65 = load i32, i32* %x, align 4, !dbg !19457
  %shl72 = shl i32 %65, 1, !dbg !19458
  %idxprom73 = sext i32 %shl72 to i64, !dbg !19459
  %66 = load i8*, i8** %dst0, align 8, !dbg !19459
  %arrayidx74 = getelementptr inbounds i8, i8* %66, i64 %idxprom73, !dbg !19459
  store i8 %64, i8* %arrayidx74, align 1, !dbg !19460
  %67 = load i32, i32* %cyy, align 4, !dbg !19461
  %68 = load i32, i32* %y01, align 4, !dbg !19462
  %mul75 = mul nsw i32 %67, %68, !dbg !19463
  %69 = load i32, i32* %uv_val, align 4, !dbg !19464
  %add76 = add nsw i32 %mul75, %69, !dbg !19465
  %shr77 = ashr i32 %add76, 18, !dbg !19466
  store i32 %shr77, i32* %a.addr.i143, align 4, !dbg !19467
  %70 = load i32, i32* %a.addr.i143, align 4, !dbg !19468
  %and.i144 = and i32 %70, -256, !dbg !19469
  %tobool.i145 = icmp ne i32 %and.i144, 0, !dbg !19469
  br i1 %tobool.i145, label %if.then.i149, label %if.else.i151, !dbg !19470

if.then.i149:                                     ; preds = %av_clip_uint8_c.exit
  %71 = load i32, i32* %a.addr.i143, align 4, !dbg !19471
  %neg.i146 = xor i32 %71, -1, !dbg !19472
  %shr.i147 = ashr i32 %neg.i146, 31, !dbg !19473
  %conv.i148 = trunc i32 %shr.i147 to i8, !dbg !19474
  store i8 %conv.i148, i8* %retval.i142, align 1, !dbg !19475
  br label %av_clip_uint8_c.exit152, !dbg !19475

if.else.i151:                                     ; preds = %av_clip_uint8_c.exit
  %72 = load i32, i32* %a.addr.i143, align 4, !dbg !19476
  %conv1.i150 = trunc i32 %72 to i8, !dbg !19476
  store i8 %conv1.i150, i8* %retval.i142, align 1, !dbg !19477
  br label %av_clip_uint8_c.exit152, !dbg !19477

av_clip_uint8_c.exit152:                          ; preds = %if.then.i149, %if.else.i151
  %73 = load i8, i8* %retval.i142, align 1, !dbg !19478
  %74 = load i32, i32* %x, align 4, !dbg !19479
  %mul79 = mul nsw i32 %74, 2, !dbg !19480
  %add80 = add nsw i32 %mul79, 1, !dbg !19481
  %idxprom81 = sext i32 %add80 to i64, !dbg !19482
  %75 = load i8*, i8** %dst0, align 8, !dbg !19482
  %arrayidx82 = getelementptr inbounds i8, i8* %75, i64 %idxprom81, !dbg !19482
  store i8 %73, i8* %arrayidx82, align 1, !dbg !19483
  %76 = load i32, i32* %u, align 4, !dbg !19484
  %77 = load i32, i32* %cuu, align 4, !dbg !19485
  %mul83 = mul nsw i32 %76, %77, !dbg !19486
  %78 = load i32, i32* %v, align 4, !dbg !19487
  %79 = load i32, i32* %cuv, align 4, !dbg !19488
  %mul84 = mul nsw i32 %78, %79, !dbg !19489
  %add85 = add nsw i32 %mul83, %mul84, !dbg !19490
  %add86 = add nsw i32 %add85, 33685504, !dbg !19491
  %shr87 = ashr i32 %add86, 18, !dbg !19492
  store i32 %shr87, i32* %a.addr.i132, align 4, !dbg !19493
  %80 = load i32, i32* %a.addr.i132, align 4, !dbg !19494
  %and.i133 = and i32 %80, -256, !dbg !19495
  %tobool.i134 = icmp ne i32 %and.i133, 0, !dbg !19495
  br i1 %tobool.i134, label %if.then.i138, label %if.else.i140, !dbg !19496

if.then.i138:                                     ; preds = %av_clip_uint8_c.exit152
  %81 = load i32, i32* %a.addr.i132, align 4, !dbg !19497
  %neg.i135 = xor i32 %81, -1, !dbg !19498
  %shr.i136 = ashr i32 %neg.i135, 31, !dbg !19499
  %conv.i137 = trunc i32 %shr.i136 to i8, !dbg !19500
  store i8 %conv.i137, i8* %retval.i131, align 1, !dbg !19501
  br label %av_clip_uint8_c.exit141, !dbg !19501

if.else.i140:                                     ; preds = %av_clip_uint8_c.exit152
  %82 = load i32, i32* %a.addr.i132, align 4, !dbg !19502
  %conv1.i139 = trunc i32 %82 to i8, !dbg !19502
  store i8 %conv1.i139, i8* %retval.i131, align 1, !dbg !19503
  br label %av_clip_uint8_c.exit141, !dbg !19503

av_clip_uint8_c.exit141:                          ; preds = %if.then.i138, %if.else.i140
  %83 = load i8, i8* %retval.i131, align 1, !dbg !19504
  %84 = load i32, i32* %x, align 4, !dbg !19505
  %idxprom89 = sext i32 %84 to i64, !dbg !19506
  %85 = load i8*, i8** %dst1, align 8, !dbg !19506
  %arrayidx90 = getelementptr inbounds i8, i8* %85, i64 %idxprom89, !dbg !19506
  store i8 %83, i8* %arrayidx90, align 1, !dbg !19507
  %86 = load i32, i32* %u, align 4, !dbg !19508
  %87 = load i32, i32* %cvu, align 4, !dbg !19509
  %mul91 = mul nsw i32 %86, %87, !dbg !19510
  %88 = load i32, i32* %v, align 4, !dbg !19511
  %89 = load i32, i32* %cvv, align 4, !dbg !19512
  %mul92 = mul nsw i32 %88, %89, !dbg !19513
  %add93 = add nsw i32 %mul91, %mul92, !dbg !19514
  %add94 = add nsw i32 %add93, 33685504, !dbg !19515
  %shr95 = ashr i32 %add94, 18, !dbg !19516
  store i32 %shr95, i32* %a.addr.i121, align 4, !dbg !19517
  %90 = load i32, i32* %a.addr.i121, align 4, !dbg !19518
  %and.i122 = and i32 %90, -256, !dbg !19519
  %tobool.i123 = icmp ne i32 %and.i122, 0, !dbg !19519
  br i1 %tobool.i123, label %if.then.i127, label %if.else.i129, !dbg !19520

if.then.i127:                                     ; preds = %av_clip_uint8_c.exit141
  %91 = load i32, i32* %a.addr.i121, align 4, !dbg !19521
  %neg.i124 = xor i32 %91, -1, !dbg !19522
  %shr.i125 = ashr i32 %neg.i124, 31, !dbg !19523
  %conv.i126 = trunc i32 %shr.i125 to i8, !dbg !19524
  store i8 %conv.i126, i8* %retval.i120, align 1, !dbg !19525
  br label %av_clip_uint8_c.exit130, !dbg !19525

if.else.i129:                                     ; preds = %av_clip_uint8_c.exit141
  %92 = load i32, i32* %a.addr.i121, align 4, !dbg !19526
  %conv1.i128 = trunc i32 %92 to i8, !dbg !19526
  store i8 %conv1.i128, i8* %retval.i120, align 1, !dbg !19527
  br label %av_clip_uint8_c.exit130, !dbg !19527

av_clip_uint8_c.exit130:                          ; preds = %if.then.i127, %if.else.i129
  %93 = load i8, i8* %retval.i120, align 1, !dbg !19528
  %94 = load i32, i32* %x, align 4, !dbg !19529
  %idxprom97 = sext i32 %94 to i64, !dbg !19530
  %95 = load i8*, i8** %dst2, align 8, !dbg !19530
  %arrayidx98 = getelementptr inbounds i8, i8* %95, i64 %idxprom97, !dbg !19530
  store i8 %93, i8* %arrayidx98, align 1, !dbg !19531
  br label %for.inc, !dbg !19532

for.inc:                                          ; preds = %av_clip_uint8_c.exit130
  %96 = load i32, i32* %x, align 4, !dbg !19533
  %inc = add nsw i32 %96, 1, !dbg !19533
  store i32 %inc, i32* %x, align 4, !dbg !19533
  br label %for.cond43, !dbg !19535, !llvm.loop !19536

for.end:                                          ; preds = %for.cond43
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19538
  %arrayidx99 = getelementptr inbounds i64, i64* %97, i64 0, !dbg !19538
  %98 = load i64, i64* %arrayidx99, align 8, !dbg !19538
  %mul100 = mul nsw i64 %98, 1, !dbg !19539
  %div = udiv i64 %mul100, 1, !dbg !19540
  %99 = load i8*, i8** %dst0, align 8, !dbg !19541
  %add.ptr = getelementptr inbounds i8, i8* %99, i64 %div, !dbg !19541
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !19541
  %100 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19542
  %arrayidx101 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !19542
  %101 = load i64, i64* %arrayidx101, align 8, !dbg !19542
  %div102 = udiv i64 %101, 1, !dbg !19543
  %102 = load i8*, i8** %dst1, align 8, !dbg !19544
  %add.ptr103 = getelementptr inbounds i8, i8* %102, i64 %div102, !dbg !19544
  store i8* %add.ptr103, i8** %dst1, align 8, !dbg !19544
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19545
  %arrayidx104 = getelementptr inbounds i64, i64* %103, i64 2, !dbg !19545
  %104 = load i64, i64* %arrayidx104, align 8, !dbg !19545
  %div105 = udiv i64 %104, 1, !dbg !19546
  %105 = load i8*, i8** %dst2, align 8, !dbg !19547
  %add.ptr106 = getelementptr inbounds i8, i8* %105, i64 %div105, !dbg !19547
  store i8* %add.ptr106, i8** %dst2, align 8, !dbg !19547
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !19548
  %arrayidx107 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !19548
  %107 = load i64, i64* %arrayidx107, align 8, !dbg !19548
  %mul108 = mul nsw i64 %107, 1, !dbg !19549
  %div109 = udiv i64 %mul108, 2, !dbg !19550
  %108 = load i16*, i16** %src0, align 8, !dbg !19551
  %add.ptr110 = getelementptr inbounds i16, i16* %108, i64 %div109, !dbg !19551
  store i16* %add.ptr110, i16** %src0, align 8, !dbg !19551
  %109 = load i64*, i64** %src_stride.addr, align 8, !dbg !19552
  %arrayidx111 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !19552
  %110 = load i64, i64* %arrayidx111, align 8, !dbg !19552
  %div112 = udiv i64 %110, 2, !dbg !19553
  %111 = load i16*, i16** %src1, align 8, !dbg !19554
  %add.ptr113 = getelementptr inbounds i16, i16* %111, i64 %div112, !dbg !19554
  store i16* %add.ptr113, i16** %src1, align 8, !dbg !19554
  %112 = load i64*, i64** %src_stride.addr, align 8, !dbg !19555
  %arrayidx114 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !19555
  %113 = load i64, i64* %arrayidx114, align 8, !dbg !19555
  %div115 = udiv i64 %113, 2, !dbg !19556
  %114 = load i16*, i16** %src2, align 8, !dbg !19557
  %add.ptr116 = getelementptr inbounds i16, i16* %114, i64 %div115, !dbg !19557
  store i16* %add.ptr116, i16** %src2, align 8, !dbg !19557
  br label %for.inc117, !dbg !19558

for.inc117:                                       ; preds = %for.end
  %115 = load i32, i32* %y, align 4, !dbg !19559
  %inc118 = add nsw i32 %115, 1, !dbg !19559
  store i32 %inc118, i32* %y, align 4, !dbg !19559
  br label %for.cond, !dbg !19561, !llvm.loop !19562

for.end119:                                       ; preds = %for.cond
  ret void, !dbg !19564
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p12to8_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !19565 {
entry:
  %retval.i203 = alloca i8, align 1
  %a.addr.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i204, metadata !3609, metadata !94), !dbg !19566
  %retval.i192 = alloca i8, align 1
  %a.addr.i193 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i193, metadata !3609, metadata !94), !dbg !19574
  %retval.i181 = alloca i8, align 1
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !3609, metadata !94), !dbg !19576
  %retval.i170 = alloca i8, align 1
  %a.addr.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i171, metadata !3609, metadata !94), !dbg !19578
  %retval.i159 = alloca i8, align 1
  %a.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i160, metadata !3609, metadata !94), !dbg !19580
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3609, metadata !94), !dbg !19582
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i8**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i8*, align 8
  %dst1 = alloca i8*, align 8
  %dst2 = alloca i8*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !19584, metadata !94), !dbg !19585
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !19586, metadata !94), !dbg !19587
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !19588, metadata !94), !dbg !19589
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !19590, metadata !94), !dbg !19591
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !19592, metadata !94), !dbg !19593
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !19594, metadata !94), !dbg !19595
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !19596, metadata !94), !dbg !19597
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !19598, metadata !94), !dbg !19599
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !19600, metadata !94), !dbg !19601
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !19602
  store i8** %0, i8*** %dst, align 8, !dbg !19601
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !19603, metadata !94), !dbg !19604
  %1 = load i8**, i8*** %_src.addr, align 8, !dbg !19605
  %2 = bitcast i8** %1 to i16**, !dbg !19606
  store i16** %2, i16*** %src, align 8, !dbg !19604
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !19607, metadata !94), !dbg !19608
  %3 = load i16**, i16*** %src, align 8, !dbg !19609
  %arrayidx = getelementptr inbounds i16*, i16** %3, i64 0, !dbg !19609
  %4 = load i16*, i16** %arrayidx, align 8, !dbg !19609
  store i16* %4, i16** %src0, align 8, !dbg !19608
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !19610, metadata !94), !dbg !19611
  %5 = load i16**, i16*** %src, align 8, !dbg !19612
  %arrayidx1 = getelementptr inbounds i16*, i16** %5, i64 1, !dbg !19612
  %6 = load i16*, i16** %arrayidx1, align 8, !dbg !19612
  store i16* %6, i16** %src1, align 8, !dbg !19611
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !19613, metadata !94), !dbg !19614
  %7 = load i16**, i16*** %src, align 8, !dbg !19615
  %arrayidx2 = getelementptr inbounds i16*, i16** %7, i64 2, !dbg !19615
  %8 = load i16*, i16** %arrayidx2, align 8, !dbg !19615
  store i16* %8, i16** %src2, align 8, !dbg !19614
  call void @llvm.dbg.declare(metadata i8** %dst0, metadata !19616, metadata !94), !dbg !19617
  %9 = load i8**, i8*** %dst, align 8, !dbg !19618
  %arrayidx3 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !19618
  %10 = load i8*, i8** %arrayidx3, align 8, !dbg !19618
  store i8* %10, i8** %dst0, align 8, !dbg !19617
  call void @llvm.dbg.declare(metadata i8** %dst1, metadata !19619, metadata !94), !dbg !19620
  %11 = load i8**, i8*** %dst, align 8, !dbg !19621
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !19621
  %12 = load i8*, i8** %arrayidx4, align 8, !dbg !19621
  store i8* %12, i8** %dst1, align 8, !dbg !19620
  call void @llvm.dbg.declare(metadata i8** %dst2, metadata !19622, metadata !94), !dbg !19623
  %13 = load i8**, i8*** %dst, align 8, !dbg !19624
  %arrayidx5 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !19624
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !19624
  store i8* %14, i8** %dst2, align 8, !dbg !19623
  call void @llvm.dbg.declare(metadata i32* %y, metadata !19625, metadata !94), !dbg !19626
  call void @llvm.dbg.declare(metadata i32* %x, metadata !19627, metadata !94), !dbg !19628
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !19629, metadata !94), !dbg !19630
  store i32 18, i32* %sh, align 4, !dbg !19630
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !19631, metadata !94), !dbg !19632
  store i32 131072, i32* %rnd, align 4, !dbg !19632
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !19633, metadata !94), !dbg !19634
  %15 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19635
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %15, i64 0, !dbg !19635
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !19635
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !19635
  %conv = sext i16 %16 to i32, !dbg !19635
  store i32 %conv, i32* %y_off_in, align 4, !dbg !19634
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !19636, metadata !94), !dbg !19637
  %17 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19638
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %17, i64 1, !dbg !19638
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !19638
  %18 = load i16, i16* %arrayidx9, align 2, !dbg !19638
  %conv10 = sext i16 %18 to i32, !dbg !19638
  %shl = shl i32 %conv10, 18, !dbg !19639
  store i32 %shl, i32* %y_off_out, align 4, !dbg !19637
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !19640, metadata !94), !dbg !19641
  store i32 2048, i32* %uv_off_in, align 4, !dbg !19641
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !19642, metadata !94), !dbg !19643
  store i32 33685504, i32* %uv_off_out, align 4, !dbg !19643
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !19644, metadata !94), !dbg !19645
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19646
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !19646
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !19646
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !19646
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !19646
  %conv14 = sext i16 %20 to i32, !dbg !19646
  store i32 %conv14, i32* %cyy, align 4, !dbg !19645
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !19647, metadata !94), !dbg !19648
  %21 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19649
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %21, i64 0, !dbg !19649
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !19649
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !19649
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !19649
  %conv18 = sext i16 %22 to i32, !dbg !19649
  store i32 %conv18, i32* %cyu, align 4, !dbg !19648
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !19650, metadata !94), !dbg !19651
  %23 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19652
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %23, i64 0, !dbg !19652
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !19652
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !19652
  %24 = load i16, i16* %arrayidx21, align 2, !dbg !19652
  %conv22 = sext i16 %24 to i32, !dbg !19652
  store i32 %conv22, i32* %cyv, align 4, !dbg !19651
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !19653, metadata !94), !dbg !19654
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19655
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 1, !dbg !19655
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !19655
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !19655
  %26 = load i16, i16* %arrayidx25, align 2, !dbg !19655
  %conv26 = sext i16 %26 to i32, !dbg !19655
  store i32 %conv26, i32* %cuu, align 4, !dbg !19654
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !19656, metadata !94), !dbg !19657
  %27 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19658
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %27, i64 1, !dbg !19658
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !19658
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !19658
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !19658
  %conv30 = sext i16 %28 to i32, !dbg !19658
  store i32 %conv30, i32* %cuv, align 4, !dbg !19657
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !19659, metadata !94), !dbg !19660
  %29 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19661
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %29, i64 2, !dbg !19661
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !19661
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !19661
  %30 = load i16, i16* %arrayidx33, align 2, !dbg !19661
  %conv34 = sext i16 %30 to i32, !dbg !19661
  store i32 %conv34, i32* %cvu, align 4, !dbg !19660
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !19662, metadata !94), !dbg !19663
  %31 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !19664
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %31, i64 2, !dbg !19664
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !19664
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !19664
  %32 = load i16, i16* %arrayidx37, align 2, !dbg !19664
  %conv38 = sext i16 %32 to i32, !dbg !19664
  store i32 %conv38, i32* %cvv, align 4, !dbg !19663
  %33 = load i32, i32* %w.addr, align 4, !dbg !19665
  %add = add nsw i32 %33, 2, !dbg !19666
  %sub = sub nsw i32 %add, 1, !dbg !19667
  %shr = ashr i32 %sub, 1, !dbg !19668
  store i32 %shr, i32* %w.addr, align 4, !dbg !19669
  %34 = load i32, i32* %h.addr, align 4, !dbg !19670
  %add39 = add nsw i32 %34, 2, !dbg !19671
  %sub40 = sub nsw i32 %add39, 1, !dbg !19672
  %shr41 = ashr i32 %sub40, 1, !dbg !19673
  store i32 %shr41, i32* %h.addr, align 4, !dbg !19674
  store i32 0, i32* %y, align 4, !dbg !19675
  br label %for.cond, !dbg !19676

for.cond:                                         ; preds = %for.inc156, %entry
  %35 = load i32, i32* %y, align 4, !dbg !19677
  %36 = load i32, i32* %h.addr, align 4, !dbg !19679
  %cmp = icmp slt i32 %35, %36, !dbg !19680
  br i1 %cmp, label %for.body, label %for.end158, !dbg !19681

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !19682
  br label %for.cond43, !dbg !19683

for.cond43:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %x, align 4, !dbg !19684
  %38 = load i32, i32* %w.addr, align 4, !dbg !19686
  %cmp44 = icmp slt i32 %37, %38, !dbg !19687
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !19688

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !19689, metadata !94), !dbg !19690
  %39 = load i32, i32* %x, align 4, !dbg !19691
  %shl47 = shl i32 %39, 1, !dbg !19692
  %idxprom = sext i32 %shl47 to i64, !dbg !19693
  %40 = load i16*, i16** %src0, align 8, !dbg !19693
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom, !dbg !19693
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !19693
  %conv49 = zext i16 %41 to i32, !dbg !19693
  %42 = load i32, i32* %y_off_in, align 4, !dbg !19694
  %sub50 = sub nsw i32 %conv49, %42, !dbg !19695
  store i32 %sub50, i32* %y00, align 4, !dbg !19690
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !19696, metadata !94), !dbg !19697
  %43 = load i32, i32* %x, align 4, !dbg !19698
  %mul = mul nsw i32 2, %43, !dbg !19699
  %add51 = add nsw i32 %mul, 1, !dbg !19700
  %idxprom52 = sext i32 %add51 to i64, !dbg !19701
  %44 = load i16*, i16** %src0, align 8, !dbg !19701
  %arrayidx53 = getelementptr inbounds i16, i16* %44, i64 %idxprom52, !dbg !19701
  %45 = load i16, i16* %arrayidx53, align 2, !dbg !19701
  %conv54 = zext i16 %45 to i32, !dbg !19701
  %46 = load i32, i32* %y_off_in, align 4, !dbg !19702
  %sub55 = sub nsw i32 %conv54, %46, !dbg !19703
  store i32 %sub55, i32* %y01, align 4, !dbg !19697
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !19704, metadata !94), !dbg !19705
  %47 = load i64*, i64** %src_stride.addr, align 8, !dbg !19706
  %arrayidx56 = getelementptr inbounds i64, i64* %47, i64 0, !dbg !19706
  %48 = load i64, i64* %arrayidx56, align 8, !dbg !19706
  %div = udiv i64 %48, 2, !dbg !19707
  %49 = load i32, i32* %x, align 4, !dbg !19708
  %mul57 = mul nsw i32 2, %49, !dbg !19709
  %conv58 = sext i32 %mul57 to i64, !dbg !19710
  %add59 = add i64 %div, %conv58, !dbg !19711
  %50 = load i16*, i16** %src0, align 8, !dbg !19712
  %arrayidx60 = getelementptr inbounds i16, i16* %50, i64 %add59, !dbg !19712
  %51 = load i16, i16* %arrayidx60, align 2, !dbg !19712
  %conv61 = zext i16 %51 to i32, !dbg !19712
  %52 = load i32, i32* %y_off_in, align 4, !dbg !19713
  %sub62 = sub nsw i32 %conv61, %52, !dbg !19714
  store i32 %sub62, i32* %y10, align 4, !dbg !19705
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !19715, metadata !94), !dbg !19716
  %53 = load i64*, i64** %src_stride.addr, align 8, !dbg !19717
  %arrayidx63 = getelementptr inbounds i64, i64* %53, i64 0, !dbg !19717
  %54 = load i64, i64* %arrayidx63, align 8, !dbg !19717
  %div64 = udiv i64 %54, 2, !dbg !19718
  %55 = load i32, i32* %x, align 4, !dbg !19719
  %mul65 = mul nsw i32 2, %55, !dbg !19720
  %conv66 = sext i32 %mul65 to i64, !dbg !19721
  %add67 = add i64 %div64, %conv66, !dbg !19722
  %add68 = add i64 %add67, 1, !dbg !19723
  %56 = load i16*, i16** %src0, align 8, !dbg !19724
  %arrayidx69 = getelementptr inbounds i16, i16* %56, i64 %add68, !dbg !19724
  %57 = load i16, i16* %arrayidx69, align 2, !dbg !19724
  %conv70 = zext i16 %57 to i32, !dbg !19724
  %58 = load i32, i32* %y_off_in, align 4, !dbg !19725
  %sub71 = sub nsw i32 %conv70, %58, !dbg !19726
  store i32 %sub71, i32* %y11, align 4, !dbg !19716
  call void @llvm.dbg.declare(metadata i32* %u, metadata !19727, metadata !94), !dbg !19728
  %59 = load i32, i32* %x, align 4, !dbg !19729
  %idxprom72 = sext i32 %59 to i64, !dbg !19730
  %60 = load i16*, i16** %src1, align 8, !dbg !19730
  %arrayidx73 = getelementptr inbounds i16, i16* %60, i64 %idxprom72, !dbg !19730
  %61 = load i16, i16* %arrayidx73, align 2, !dbg !19730
  %conv74 = zext i16 %61 to i32, !dbg !19730
  %sub75 = sub nsw i32 %conv74, 2048, !dbg !19731
  store i32 %sub75, i32* %u, align 4, !dbg !19728
  call void @llvm.dbg.declare(metadata i32* %v, metadata !19732, metadata !94), !dbg !19733
  %62 = load i32, i32* %x, align 4, !dbg !19734
  %idxprom76 = sext i32 %62 to i64, !dbg !19735
  %63 = load i16*, i16** %src2, align 8, !dbg !19735
  %arrayidx77 = getelementptr inbounds i16, i16* %63, i64 %idxprom76, !dbg !19735
  %64 = load i16, i16* %arrayidx77, align 2, !dbg !19735
  %conv78 = zext i16 %64 to i32, !dbg !19735
  %sub79 = sub nsw i32 %conv78, 2048, !dbg !19736
  store i32 %sub79, i32* %v, align 4, !dbg !19733
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !19737, metadata !94), !dbg !19738
  %65 = load i32, i32* %cyu, align 4, !dbg !19739
  %66 = load i32, i32* %u, align 4, !dbg !19740
  %mul80 = mul nsw i32 %65, %66, !dbg !19741
  %67 = load i32, i32* %cyv, align 4, !dbg !19742
  %68 = load i32, i32* %v, align 4, !dbg !19743
  %mul81 = mul nsw i32 %67, %68, !dbg !19744
  %add82 = add nsw i32 %mul80, %mul81, !dbg !19745
  %add83 = add nsw i32 %add82, 131072, !dbg !19746
  %69 = load i32, i32* %y_off_out, align 4, !dbg !19747
  %add84 = add nsw i32 %add83, %69, !dbg !19748
  store i32 %add84, i32* %uv_val, align 4, !dbg !19738
  %70 = load i32, i32* %cyy, align 4, !dbg !19749
  %71 = load i32, i32* %y00, align 4, !dbg !19750
  %mul85 = mul nsw i32 %70, %71, !dbg !19751
  %72 = load i32, i32* %uv_val, align 4, !dbg !19752
  %add86 = add nsw i32 %mul85, %72, !dbg !19753
  %shr87 = ashr i32 %add86, 18, !dbg !19754
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !19755
  %73 = load i32, i32* %a.addr.i, align 4, !dbg !19756
  %and.i = and i32 %73, -256, !dbg !19757
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !19757
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !19758

if.then.i:                                        ; preds = %for.body46
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !19759
  %neg.i = xor i32 %74, -1, !dbg !19760
  %shr.i = ashr i32 %neg.i, 31, !dbg !19761
  %conv.i = trunc i32 %shr.i to i8, !dbg !19762
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !19763
  br label %av_clip_uint8_c.exit, !dbg !19763

if.else.i:                                        ; preds = %for.body46
  %75 = load i32, i32* %a.addr.i, align 4, !dbg !19764
  %conv1.i = trunc i32 %75 to i8, !dbg !19764
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !19765
  br label %av_clip_uint8_c.exit, !dbg !19765

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %76 = load i8, i8* %retval.i, align 1, !dbg !19766
  %77 = load i32, i32* %x, align 4, !dbg !19767
  %shl88 = shl i32 %77, 1, !dbg !19768
  %idxprom89 = sext i32 %shl88 to i64, !dbg !19769
  %78 = load i8*, i8** %dst0, align 8, !dbg !19769
  %arrayidx90 = getelementptr inbounds i8, i8* %78, i64 %idxprom89, !dbg !19769
  store i8 %76, i8* %arrayidx90, align 1, !dbg !19770
  %79 = load i32, i32* %cyy, align 4, !dbg !19771
  %80 = load i32, i32* %y01, align 4, !dbg !19772
  %mul91 = mul nsw i32 %79, %80, !dbg !19773
  %81 = load i32, i32* %uv_val, align 4, !dbg !19774
  %add92 = add nsw i32 %mul91, %81, !dbg !19775
  %shr93 = ashr i32 %add92, 18, !dbg !19776
  store i32 %shr93, i32* %a.addr.i204, align 4, !dbg !19777
  %82 = load i32, i32* %a.addr.i204, align 4, !dbg !19778
  %and.i205 = and i32 %82, -256, !dbg !19779
  %tobool.i206 = icmp ne i32 %and.i205, 0, !dbg !19779
  br i1 %tobool.i206, label %if.then.i210, label %if.else.i212, !dbg !19780

if.then.i210:                                     ; preds = %av_clip_uint8_c.exit
  %83 = load i32, i32* %a.addr.i204, align 4, !dbg !19781
  %neg.i207 = xor i32 %83, -1, !dbg !19782
  %shr.i208 = ashr i32 %neg.i207, 31, !dbg !19783
  %conv.i209 = trunc i32 %shr.i208 to i8, !dbg !19784
  store i8 %conv.i209, i8* %retval.i203, align 1, !dbg !19785
  br label %av_clip_uint8_c.exit213, !dbg !19785

if.else.i212:                                     ; preds = %av_clip_uint8_c.exit
  %84 = load i32, i32* %a.addr.i204, align 4, !dbg !19786
  %conv1.i211 = trunc i32 %84 to i8, !dbg !19786
  store i8 %conv1.i211, i8* %retval.i203, align 1, !dbg !19787
  br label %av_clip_uint8_c.exit213, !dbg !19787

av_clip_uint8_c.exit213:                          ; preds = %if.then.i210, %if.else.i212
  %85 = load i8, i8* %retval.i203, align 1, !dbg !19788
  %86 = load i32, i32* %x, align 4, !dbg !19789
  %mul95 = mul nsw i32 %86, 2, !dbg !19790
  %add96 = add nsw i32 %mul95, 1, !dbg !19791
  %idxprom97 = sext i32 %add96 to i64, !dbg !19792
  %87 = load i8*, i8** %dst0, align 8, !dbg !19792
  %arrayidx98 = getelementptr inbounds i8, i8* %87, i64 %idxprom97, !dbg !19792
  store i8 %85, i8* %arrayidx98, align 1, !dbg !19793
  %88 = load i32, i32* %cyy, align 4, !dbg !19794
  %89 = load i32, i32* %y10, align 4, !dbg !19795
  %mul99 = mul nsw i32 %88, %89, !dbg !19796
  %90 = load i32, i32* %uv_val, align 4, !dbg !19797
  %add100 = add nsw i32 %mul99, %90, !dbg !19798
  %shr101 = ashr i32 %add100, 18, !dbg !19799
  store i32 %shr101, i32* %a.addr.i193, align 4, !dbg !19800
  %91 = load i32, i32* %a.addr.i193, align 4, !dbg !19801
  %and.i194 = and i32 %91, -256, !dbg !19802
  %tobool.i195 = icmp ne i32 %and.i194, 0, !dbg !19802
  br i1 %tobool.i195, label %if.then.i199, label %if.else.i201, !dbg !19803

if.then.i199:                                     ; preds = %av_clip_uint8_c.exit213
  %92 = load i32, i32* %a.addr.i193, align 4, !dbg !19804
  %neg.i196 = xor i32 %92, -1, !dbg !19805
  %shr.i197 = ashr i32 %neg.i196, 31, !dbg !19806
  %conv.i198 = trunc i32 %shr.i197 to i8, !dbg !19807
  store i8 %conv.i198, i8* %retval.i192, align 1, !dbg !19808
  br label %av_clip_uint8_c.exit202, !dbg !19808

if.else.i201:                                     ; preds = %av_clip_uint8_c.exit213
  %93 = load i32, i32* %a.addr.i193, align 4, !dbg !19809
  %conv1.i200 = trunc i32 %93 to i8, !dbg !19809
  store i8 %conv1.i200, i8* %retval.i192, align 1, !dbg !19810
  br label %av_clip_uint8_c.exit202, !dbg !19810

av_clip_uint8_c.exit202:                          ; preds = %if.then.i199, %if.else.i201
  %94 = load i8, i8* %retval.i192, align 1, !dbg !19811
  %95 = load i32, i32* %x, align 4, !dbg !19812
  %mul103 = mul nsw i32 %95, 2, !dbg !19813
  %add104 = add nsw i32 %mul103, 0, !dbg !19814
  %conv105 = sext i32 %add104 to i64, !dbg !19812
  %96 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19815
  %arrayidx106 = getelementptr inbounds i64, i64* %96, i64 0, !dbg !19815
  %97 = load i64, i64* %arrayidx106, align 8, !dbg !19815
  %div107 = udiv i64 %97, 1, !dbg !19816
  %add108 = add i64 %conv105, %div107, !dbg !19817
  %98 = load i8*, i8** %dst0, align 8, !dbg !19818
  %arrayidx109 = getelementptr inbounds i8, i8* %98, i64 %add108, !dbg !19818
  store i8 %94, i8* %arrayidx109, align 1, !dbg !19819
  %99 = load i32, i32* %cyy, align 4, !dbg !19820
  %100 = load i32, i32* %y11, align 4, !dbg !19821
  %mul110 = mul nsw i32 %99, %100, !dbg !19822
  %101 = load i32, i32* %uv_val, align 4, !dbg !19823
  %add111 = add nsw i32 %mul110, %101, !dbg !19824
  %shr112 = ashr i32 %add111, 18, !dbg !19825
  store i32 %shr112, i32* %a.addr.i182, align 4, !dbg !19826
  %102 = load i32, i32* %a.addr.i182, align 4, !dbg !19827
  %and.i183 = and i32 %102, -256, !dbg !19828
  %tobool.i184 = icmp ne i32 %and.i183, 0, !dbg !19828
  br i1 %tobool.i184, label %if.then.i188, label %if.else.i190, !dbg !19829

if.then.i188:                                     ; preds = %av_clip_uint8_c.exit202
  %103 = load i32, i32* %a.addr.i182, align 4, !dbg !19830
  %neg.i185 = xor i32 %103, -1, !dbg !19831
  %shr.i186 = ashr i32 %neg.i185, 31, !dbg !19832
  %conv.i187 = trunc i32 %shr.i186 to i8, !dbg !19833
  store i8 %conv.i187, i8* %retval.i181, align 1, !dbg !19834
  br label %av_clip_uint8_c.exit191, !dbg !19834

if.else.i190:                                     ; preds = %av_clip_uint8_c.exit202
  %104 = load i32, i32* %a.addr.i182, align 4, !dbg !19835
  %conv1.i189 = trunc i32 %104 to i8, !dbg !19835
  store i8 %conv1.i189, i8* %retval.i181, align 1, !dbg !19836
  br label %av_clip_uint8_c.exit191, !dbg !19836

av_clip_uint8_c.exit191:                          ; preds = %if.then.i188, %if.else.i190
  %105 = load i8, i8* %retval.i181, align 1, !dbg !19837
  %106 = load i32, i32* %x, align 4, !dbg !19838
  %mul114 = mul nsw i32 %106, 2, !dbg !19839
  %add115 = add nsw i32 %mul114, 1, !dbg !19840
  %conv116 = sext i32 %add115 to i64, !dbg !19838
  %107 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19841
  %arrayidx117 = getelementptr inbounds i64, i64* %107, i64 0, !dbg !19841
  %108 = load i64, i64* %arrayidx117, align 8, !dbg !19841
  %div118 = udiv i64 %108, 1, !dbg !19842
  %add119 = add i64 %conv116, %div118, !dbg !19843
  %109 = load i8*, i8** %dst0, align 8, !dbg !19844
  %arrayidx120 = getelementptr inbounds i8, i8* %109, i64 %add119, !dbg !19844
  store i8 %105, i8* %arrayidx120, align 1, !dbg !19845
  %110 = load i32, i32* %u, align 4, !dbg !19846
  %111 = load i32, i32* %cuu, align 4, !dbg !19847
  %mul121 = mul nsw i32 %110, %111, !dbg !19848
  %112 = load i32, i32* %v, align 4, !dbg !19849
  %113 = load i32, i32* %cuv, align 4, !dbg !19850
  %mul122 = mul nsw i32 %112, %113, !dbg !19851
  %add123 = add nsw i32 %mul121, %mul122, !dbg !19852
  %add124 = add nsw i32 %add123, 33685504, !dbg !19853
  %shr125 = ashr i32 %add124, 18, !dbg !19854
  store i32 %shr125, i32* %a.addr.i171, align 4, !dbg !19855
  %114 = load i32, i32* %a.addr.i171, align 4, !dbg !19856
  %and.i172 = and i32 %114, -256, !dbg !19857
  %tobool.i173 = icmp ne i32 %and.i172, 0, !dbg !19857
  br i1 %tobool.i173, label %if.then.i177, label %if.else.i179, !dbg !19858

if.then.i177:                                     ; preds = %av_clip_uint8_c.exit191
  %115 = load i32, i32* %a.addr.i171, align 4, !dbg !19859
  %neg.i174 = xor i32 %115, -1, !dbg !19860
  %shr.i175 = ashr i32 %neg.i174, 31, !dbg !19861
  %conv.i176 = trunc i32 %shr.i175 to i8, !dbg !19862
  store i8 %conv.i176, i8* %retval.i170, align 1, !dbg !19863
  br label %av_clip_uint8_c.exit180, !dbg !19863

if.else.i179:                                     ; preds = %av_clip_uint8_c.exit191
  %116 = load i32, i32* %a.addr.i171, align 4, !dbg !19864
  %conv1.i178 = trunc i32 %116 to i8, !dbg !19864
  store i8 %conv1.i178, i8* %retval.i170, align 1, !dbg !19865
  br label %av_clip_uint8_c.exit180, !dbg !19865

av_clip_uint8_c.exit180:                          ; preds = %if.then.i177, %if.else.i179
  %117 = load i8, i8* %retval.i170, align 1, !dbg !19866
  %118 = load i32, i32* %x, align 4, !dbg !19867
  %idxprom127 = sext i32 %118 to i64, !dbg !19868
  %119 = load i8*, i8** %dst1, align 8, !dbg !19868
  %arrayidx128 = getelementptr inbounds i8, i8* %119, i64 %idxprom127, !dbg !19868
  store i8 %117, i8* %arrayidx128, align 1, !dbg !19869
  %120 = load i32, i32* %u, align 4, !dbg !19870
  %121 = load i32, i32* %cvu, align 4, !dbg !19871
  %mul129 = mul nsw i32 %120, %121, !dbg !19872
  %122 = load i32, i32* %v, align 4, !dbg !19873
  %123 = load i32, i32* %cvv, align 4, !dbg !19874
  %mul130 = mul nsw i32 %122, %123, !dbg !19875
  %add131 = add nsw i32 %mul129, %mul130, !dbg !19876
  %add132 = add nsw i32 %add131, 33685504, !dbg !19877
  %shr133 = ashr i32 %add132, 18, !dbg !19878
  store i32 %shr133, i32* %a.addr.i160, align 4, !dbg !19879
  %124 = load i32, i32* %a.addr.i160, align 4, !dbg !19880
  %and.i161 = and i32 %124, -256, !dbg !19881
  %tobool.i162 = icmp ne i32 %and.i161, 0, !dbg !19881
  br i1 %tobool.i162, label %if.then.i166, label %if.else.i168, !dbg !19882

if.then.i166:                                     ; preds = %av_clip_uint8_c.exit180
  %125 = load i32, i32* %a.addr.i160, align 4, !dbg !19883
  %neg.i163 = xor i32 %125, -1, !dbg !19884
  %shr.i164 = ashr i32 %neg.i163, 31, !dbg !19885
  %conv.i165 = trunc i32 %shr.i164 to i8, !dbg !19886
  store i8 %conv.i165, i8* %retval.i159, align 1, !dbg !19887
  br label %av_clip_uint8_c.exit169, !dbg !19887

if.else.i168:                                     ; preds = %av_clip_uint8_c.exit180
  %126 = load i32, i32* %a.addr.i160, align 4, !dbg !19888
  %conv1.i167 = trunc i32 %126 to i8, !dbg !19888
  store i8 %conv1.i167, i8* %retval.i159, align 1, !dbg !19889
  br label %av_clip_uint8_c.exit169, !dbg !19889

av_clip_uint8_c.exit169:                          ; preds = %if.then.i166, %if.else.i168
  %127 = load i8, i8* %retval.i159, align 1, !dbg !19890
  %128 = load i32, i32* %x, align 4, !dbg !19891
  %idxprom135 = sext i32 %128 to i64, !dbg !19892
  %129 = load i8*, i8** %dst2, align 8, !dbg !19892
  %arrayidx136 = getelementptr inbounds i8, i8* %129, i64 %idxprom135, !dbg !19892
  store i8 %127, i8* %arrayidx136, align 1, !dbg !19893
  br label %for.inc, !dbg !19894

for.inc:                                          ; preds = %av_clip_uint8_c.exit169
  %130 = load i32, i32* %x, align 4, !dbg !19895
  %inc = add nsw i32 %130, 1, !dbg !19895
  store i32 %inc, i32* %x, align 4, !dbg !19895
  br label %for.cond43, !dbg !19897, !llvm.loop !19898

for.end:                                          ; preds = %for.cond43
  %131 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19900
  %arrayidx137 = getelementptr inbounds i64, i64* %131, i64 0, !dbg !19900
  %132 = load i64, i64* %arrayidx137, align 8, !dbg !19900
  %mul138 = mul nsw i64 %132, 2, !dbg !19901
  %div139 = udiv i64 %mul138, 1, !dbg !19902
  %133 = load i8*, i8** %dst0, align 8, !dbg !19903
  %add.ptr = getelementptr inbounds i8, i8* %133, i64 %div139, !dbg !19903
  store i8* %add.ptr, i8** %dst0, align 8, !dbg !19903
  %134 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19904
  %arrayidx140 = getelementptr inbounds i64, i64* %134, i64 1, !dbg !19904
  %135 = load i64, i64* %arrayidx140, align 8, !dbg !19904
  %div141 = udiv i64 %135, 1, !dbg !19905
  %136 = load i8*, i8** %dst1, align 8, !dbg !19906
  %add.ptr142 = getelementptr inbounds i8, i8* %136, i64 %div141, !dbg !19906
  store i8* %add.ptr142, i8** %dst1, align 8, !dbg !19906
  %137 = load i64*, i64** %dst_stride.addr, align 8, !dbg !19907
  %arrayidx143 = getelementptr inbounds i64, i64* %137, i64 2, !dbg !19907
  %138 = load i64, i64* %arrayidx143, align 8, !dbg !19907
  %div144 = udiv i64 %138, 1, !dbg !19908
  %139 = load i8*, i8** %dst2, align 8, !dbg !19909
  %add.ptr145 = getelementptr inbounds i8, i8* %139, i64 %div144, !dbg !19909
  store i8* %add.ptr145, i8** %dst2, align 8, !dbg !19909
  %140 = load i64*, i64** %src_stride.addr, align 8, !dbg !19910
  %arrayidx146 = getelementptr inbounds i64, i64* %140, i64 0, !dbg !19910
  %141 = load i64, i64* %arrayidx146, align 8, !dbg !19910
  %mul147 = mul nsw i64 %141, 2, !dbg !19911
  %div148 = udiv i64 %mul147, 2, !dbg !19912
  %142 = load i16*, i16** %src0, align 8, !dbg !19913
  %add.ptr149 = getelementptr inbounds i16, i16* %142, i64 %div148, !dbg !19913
  store i16* %add.ptr149, i16** %src0, align 8, !dbg !19913
  %143 = load i64*, i64** %src_stride.addr, align 8, !dbg !19914
  %arrayidx150 = getelementptr inbounds i64, i64* %143, i64 1, !dbg !19914
  %144 = load i64, i64* %arrayidx150, align 8, !dbg !19914
  %div151 = udiv i64 %144, 2, !dbg !19915
  %145 = load i16*, i16** %src1, align 8, !dbg !19916
  %add.ptr152 = getelementptr inbounds i16, i16* %145, i64 %div151, !dbg !19916
  store i16* %add.ptr152, i16** %src1, align 8, !dbg !19916
  %146 = load i64*, i64** %src_stride.addr, align 8, !dbg !19917
  %arrayidx153 = getelementptr inbounds i64, i64* %146, i64 2, !dbg !19917
  %147 = load i64, i64* %arrayidx153, align 8, !dbg !19917
  %div154 = udiv i64 %147, 2, !dbg !19918
  %148 = load i16*, i16** %src2, align 8, !dbg !19919
  %add.ptr155 = getelementptr inbounds i16, i16* %148, i64 %div154, !dbg !19919
  store i16* %add.ptr155, i16** %src2, align 8, !dbg !19919
  br label %for.inc156, !dbg !19920

for.inc156:                                       ; preds = %for.end
  %149 = load i32, i32* %y, align 4, !dbg !19921
  %inc157 = add nsw i32 %149, 1, !dbg !19921
  store i32 %inc157, i32* %y, align 4, !dbg !19921
  br label %for.cond, !dbg !19923, !llvm.loop !19924

for.end158:                                       ; preds = %for.cond
  ret void, !dbg !19926
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p12to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !19927 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !19928
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !19936
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !19937
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !19939
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !19940
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !19942
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !19943, metadata !94), !dbg !19944
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !19945, metadata !94), !dbg !19946
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !19947, metadata !94), !dbg !19948
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !19949, metadata !94), !dbg !19950
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !19951, metadata !94), !dbg !19952
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !19953, metadata !94), !dbg !19954
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !19955, metadata !94), !dbg !19956
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !19957, metadata !94), !dbg !19958
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !19959, metadata !94), !dbg !19960
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !19961
  %1 = bitcast i8** %0 to i16**, !dbg !19962
  store i16** %1, i16*** %dst, align 8, !dbg !19960
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !19963, metadata !94), !dbg !19964
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !19965
  %3 = bitcast i8** %2 to i16**, !dbg !19966
  store i16** %3, i16*** %src, align 8, !dbg !19964
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !19967, metadata !94), !dbg !19968
  %4 = load i16**, i16*** %src, align 8, !dbg !19969
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !19969
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !19969
  store i16* %5, i16** %src0, align 8, !dbg !19968
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !19970, metadata !94), !dbg !19971
  %6 = load i16**, i16*** %src, align 8, !dbg !19972
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !19972
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !19972
  store i16* %7, i16** %src1, align 8, !dbg !19971
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !19973, metadata !94), !dbg !19974
  %8 = load i16**, i16*** %src, align 8, !dbg !19975
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !19975
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !19975
  store i16* %9, i16** %src2, align 8, !dbg !19974
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !19976, metadata !94), !dbg !19977
  %10 = load i16**, i16*** %dst, align 8, !dbg !19978
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !19978
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !19978
  store i16* %11, i16** %dst0, align 8, !dbg !19977
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !19979, metadata !94), !dbg !19980
  %12 = load i16**, i16*** %dst, align 8, !dbg !19981
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !19981
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !19981
  store i16* %13, i16** %dst1, align 8, !dbg !19980
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !19982, metadata !94), !dbg !19983
  %14 = load i16**, i16*** %dst, align 8, !dbg !19984
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !19984
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !19984
  store i16* %15, i16** %dst2, align 8, !dbg !19983
  call void @llvm.dbg.declare(metadata i32* %y, metadata !19985, metadata !94), !dbg !19986
  call void @llvm.dbg.declare(metadata i32* %x, metadata !19987, metadata !94), !dbg !19988
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !19989, metadata !94), !dbg !19990
  store i32 16, i32* %sh, align 4, !dbg !19990
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !19991, metadata !94), !dbg !19992
  store i32 32768, i32* %rnd, align 4, !dbg !19992
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !19993, metadata !94), !dbg !19994
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19995
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !19995
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !19995
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !19995
  %conv = sext i16 %17 to i32, !dbg !19995
  store i32 %conv, i32* %y_off_in, align 4, !dbg !19994
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !19996, metadata !94), !dbg !19997
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !19998
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !19998
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !19998
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !19998
  %conv10 = sext i16 %19 to i32, !dbg !19998
  %shl = shl i32 %conv10, 16, !dbg !19999
  store i32 %shl, i32* %y_off_out, align 4, !dbg !19997
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !20000, metadata !94), !dbg !20001
  store i32 2048, i32* %uv_off_in, align 4, !dbg !20001
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !20002, metadata !94), !dbg !20003
  store i32 33587200, i32* %uv_off_out, align 4, !dbg !20003
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !20004, metadata !94), !dbg !20005
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20006
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !20006
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !20006
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !20006
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !20006
  %conv14 = sext i16 %21 to i32, !dbg !20006
  store i32 %conv14, i32* %cyy, align 4, !dbg !20005
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !20007, metadata !94), !dbg !20008
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20009
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !20009
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !20009
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !20009
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !20009
  %conv18 = sext i16 %23 to i32, !dbg !20009
  store i32 %conv18, i32* %cyu, align 4, !dbg !20008
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !20010, metadata !94), !dbg !20011
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20012
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !20012
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !20012
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !20012
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !20012
  %conv22 = sext i16 %25 to i32, !dbg !20012
  store i32 %conv22, i32* %cyv, align 4, !dbg !20011
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !20013, metadata !94), !dbg !20014
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20015
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !20015
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !20015
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !20015
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !20015
  %conv26 = sext i16 %27 to i32, !dbg !20015
  store i32 %conv26, i32* %cuu, align 4, !dbg !20014
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !20016, metadata !94), !dbg !20017
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20018
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !20018
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !20018
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !20018
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !20018
  %conv30 = sext i16 %29 to i32, !dbg !20018
  store i32 %conv30, i32* %cuv, align 4, !dbg !20017
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !20019, metadata !94), !dbg !20020
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20021
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !20021
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !20021
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !20021
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !20021
  %conv34 = sext i16 %31 to i32, !dbg !20021
  store i32 %conv34, i32* %cvu, align 4, !dbg !20020
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !20022, metadata !94), !dbg !20023
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20024
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !20024
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !20024
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !20024
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !20024
  %conv38 = sext i16 %33 to i32, !dbg !20024
  store i32 %conv38, i32* %cvv, align 4, !dbg !20023
  %34 = load i32, i32* %w.addr, align 4, !dbg !20025
  %add = add nsw i32 %34, 1, !dbg !20026
  %sub = sub nsw i32 %add, 1, !dbg !20027
  %shr = ashr i32 %sub, 0, !dbg !20028
  store i32 %shr, i32* %w.addr, align 4, !dbg !20029
  %35 = load i32, i32* %h.addr, align 4, !dbg !20030
  %add39 = add nsw i32 %35, 1, !dbg !20031
  %sub40 = sub nsw i32 %add39, 1, !dbg !20032
  %shr41 = ashr i32 %sub40, 0, !dbg !20033
  store i32 %shr41, i32* %h.addr, align 4, !dbg !20034
  store i32 0, i32* %y, align 4, !dbg !20035
  br label %for.cond, !dbg !20036

for.cond:                                         ; preds = %for.inc106, %entry
  %36 = load i32, i32* %y, align 4, !dbg !20037
  %37 = load i32, i32* %h.addr, align 4, !dbg !20039
  %cmp = icmp slt i32 %36, %37, !dbg !20040
  br i1 %cmp, label %for.body, label %for.end108, !dbg !20041

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !20042
  br label %for.cond43, !dbg !20043

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !20044
  %39 = load i32, i32* %w.addr, align 4, !dbg !20046
  %cmp44 = icmp slt i32 %38, %39, !dbg !20047
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !20048

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !20049, metadata !94), !dbg !20050
  %40 = load i32, i32* %x, align 4, !dbg !20051
  %shl47 = shl i32 %40, 0, !dbg !20052
  %idxprom = sext i32 %shl47 to i64, !dbg !20053
  %41 = load i16*, i16** %src0, align 8, !dbg !20053
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !20053
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !20053
  %conv49 = zext i16 %42 to i32, !dbg !20053
  %43 = load i32, i32* %y_off_in, align 4, !dbg !20054
  %sub50 = sub nsw i32 %conv49, %43, !dbg !20055
  store i32 %sub50, i32* %y00, align 4, !dbg !20050
  call void @llvm.dbg.declare(metadata i32* %u, metadata !20056, metadata !94), !dbg !20057
  %44 = load i32, i32* %x, align 4, !dbg !20058
  %idxprom51 = sext i32 %44 to i64, !dbg !20059
  %45 = load i16*, i16** %src1, align 8, !dbg !20059
  %arrayidx52 = getelementptr inbounds i16, i16* %45, i64 %idxprom51, !dbg !20059
  %46 = load i16, i16* %arrayidx52, align 2, !dbg !20059
  %conv53 = zext i16 %46 to i32, !dbg !20059
  %sub54 = sub nsw i32 %conv53, 2048, !dbg !20060
  store i32 %sub54, i32* %u, align 4, !dbg !20057
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20061, metadata !94), !dbg !20062
  %47 = load i32, i32* %x, align 4, !dbg !20063
  %idxprom55 = sext i32 %47 to i64, !dbg !20064
  %48 = load i16*, i16** %src2, align 8, !dbg !20064
  %arrayidx56 = getelementptr inbounds i16, i16* %48, i64 %idxprom55, !dbg !20064
  %49 = load i16, i16* %arrayidx56, align 2, !dbg !20064
  %conv57 = zext i16 %49 to i32, !dbg !20064
  %sub58 = sub nsw i32 %conv57, 2048, !dbg !20065
  store i32 %sub58, i32* %v, align 4, !dbg !20062
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !20066, metadata !94), !dbg !20067
  %50 = load i32, i32* %cyu, align 4, !dbg !20068
  %51 = load i32, i32* %u, align 4, !dbg !20069
  %mul = mul nsw i32 %50, %51, !dbg !20070
  %52 = load i32, i32* %cyv, align 4, !dbg !20071
  %53 = load i32, i32* %v, align 4, !dbg !20072
  %mul59 = mul nsw i32 %52, %53, !dbg !20073
  %add60 = add nsw i32 %mul, %mul59, !dbg !20074
  %add61 = add nsw i32 %add60, 32768, !dbg !20075
  %54 = load i32, i32* %y_off_out, align 4, !dbg !20076
  %add62 = add nsw i32 %add61, %54, !dbg !20077
  store i32 %add62, i32* %uv_val, align 4, !dbg !20067
  %55 = load i32, i32* %cyy, align 4, !dbg !20078
  %56 = load i32, i32* %y00, align 4, !dbg !20079
  %mul63 = mul nsw i32 %55, %56, !dbg !20080
  %57 = load i32, i32* %uv_val, align 4, !dbg !20081
  %add64 = add nsw i32 %mul63, %57, !dbg !20082
  %shr65 = ashr i32 %add64, 16, !dbg !20083
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !20084
  store i32 10, i32* %p.addr.i, align 4, !dbg !20084
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !20085
  %59 = load i32, i32* %p.addr.i, align 4, !dbg !20086
  %shl.i = shl i32 1, %59, !dbg !20087
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !20088
  %neg.i = xor i32 %sub.i, -1, !dbg !20089
  %and.i = and i32 %58, %neg.i, !dbg !20090
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !20090
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !20091

if.then.i:                                        ; preds = %for.body46
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !20092
  %neg1.i = xor i32 %60, -1, !dbg !20093
  %shr.i = ashr i32 %neg1.i, 31, !dbg !20094
  %61 = load i32, i32* %p.addr.i, align 4, !dbg !20095
  %shl2.i = shl i32 1, %61, !dbg !20096
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !20097
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !20098
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !20099
  br label %av_clip_uintp2_c.exit, !dbg !20099

if.else.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !20100
  store i32 %62, i32* %retval.i, align 4, !dbg !20101
  br label %av_clip_uintp2_c.exit, !dbg !20101

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %63 = load i32, i32* %retval.i, align 4, !dbg !20102
  %conv66 = trunc i32 %63 to i16, !dbg !20084
  %64 = load i32, i32* %x, align 4, !dbg !20103
  %shl67 = shl i32 %64, 0, !dbg !20104
  %idxprom68 = sext i32 %shl67 to i64, !dbg !20105
  %65 = load i16*, i16** %dst0, align 8, !dbg !20105
  %arrayidx69 = getelementptr inbounds i16, i16* %65, i64 %idxprom68, !dbg !20105
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !20106
  %66 = load i32, i32* %u, align 4, !dbg !20107
  %67 = load i32, i32* %cuu, align 4, !dbg !20108
  %mul70 = mul nsw i32 %66, %67, !dbg !20109
  %68 = load i32, i32* %v, align 4, !dbg !20110
  %69 = load i32, i32* %cuv, align 4, !dbg !20111
  %mul71 = mul nsw i32 %68, %69, !dbg !20112
  %add72 = add nsw i32 %mul70, %mul71, !dbg !20113
  %add73 = add nsw i32 %add72, 33587200, !dbg !20114
  %shr74 = ashr i32 %add73, 16, !dbg !20115
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !20116
  store i32 10, i32* %p.addr.i127, align 4, !dbg !20116
  %70 = load i32, i32* %a.addr.i126, align 4, !dbg !20117
  %71 = load i32, i32* %p.addr.i127, align 4, !dbg !20118
  %shl.i128 = shl i32 1, %71, !dbg !20119
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !20120
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !20121
  %and.i131 = and i32 %70, %neg.i130, !dbg !20122
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !20122
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !20123

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %72 = load i32, i32* %a.addr.i126, align 4, !dbg !20124
  %neg1.i133 = xor i32 %72, -1, !dbg !20125
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !20126
  %73 = load i32, i32* %p.addr.i127, align 4, !dbg !20127
  %shl2.i135 = shl i32 1, %73, !dbg !20128
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !20129
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !20130
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !20131
  br label %av_clip_uintp2_c.exit140, !dbg !20131

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i126, align 4, !dbg !20132
  store i32 %74, i32* %retval.i125, align 4, !dbg !20133
  br label %av_clip_uintp2_c.exit140, !dbg !20133

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %75 = load i32, i32* %retval.i125, align 4, !dbg !20134
  %conv76 = trunc i32 %75 to i16, !dbg !20116
  %76 = load i32, i32* %x, align 4, !dbg !20135
  %idxprom77 = sext i32 %76 to i64, !dbg !20136
  %77 = load i16*, i16** %dst1, align 8, !dbg !20136
  %arrayidx78 = getelementptr inbounds i16, i16* %77, i64 %idxprom77, !dbg !20136
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !20137
  %78 = load i32, i32* %u, align 4, !dbg !20138
  %79 = load i32, i32* %cvu, align 4, !dbg !20139
  %mul79 = mul nsw i32 %78, %79, !dbg !20140
  %80 = load i32, i32* %v, align 4, !dbg !20141
  %81 = load i32, i32* %cvv, align 4, !dbg !20142
  %mul80 = mul nsw i32 %80, %81, !dbg !20143
  %add81 = add nsw i32 %mul79, %mul80, !dbg !20144
  %add82 = add nsw i32 %add81, 33587200, !dbg !20145
  %shr83 = ashr i32 %add82, 16, !dbg !20146
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !20147
  store i32 10, i32* %p.addr.i111, align 4, !dbg !20147
  %82 = load i32, i32* %a.addr.i110, align 4, !dbg !20148
  %83 = load i32, i32* %p.addr.i111, align 4, !dbg !20149
  %shl.i112 = shl i32 1, %83, !dbg !20150
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !20151
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !20152
  %and.i115 = and i32 %82, %neg.i114, !dbg !20153
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !20153
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !20154

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %84 = load i32, i32* %a.addr.i110, align 4, !dbg !20155
  %neg1.i117 = xor i32 %84, -1, !dbg !20156
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !20157
  %85 = load i32, i32* %p.addr.i111, align 4, !dbg !20158
  %shl2.i119 = shl i32 1, %85, !dbg !20159
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !20160
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !20161
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !20162
  br label %av_clip_uintp2_c.exit124, !dbg !20162

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %86 = load i32, i32* %a.addr.i110, align 4, !dbg !20163
  store i32 %86, i32* %retval.i109, align 4, !dbg !20164
  br label %av_clip_uintp2_c.exit124, !dbg !20164

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %87 = load i32, i32* %retval.i109, align 4, !dbg !20165
  %conv85 = trunc i32 %87 to i16, !dbg !20147
  %88 = load i32, i32* %x, align 4, !dbg !20166
  %idxprom86 = sext i32 %88 to i64, !dbg !20167
  %89 = load i16*, i16** %dst2, align 8, !dbg !20167
  %arrayidx87 = getelementptr inbounds i16, i16* %89, i64 %idxprom86, !dbg !20167
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !20168
  br label %for.inc, !dbg !20169

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %90 = load i32, i32* %x, align 4, !dbg !20170
  %inc = add nsw i32 %90, 1, !dbg !20170
  store i32 %inc, i32* %x, align 4, !dbg !20170
  br label %for.cond43, !dbg !20172, !llvm.loop !20173

for.end:                                          ; preds = %for.cond43
  %91 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20175
  %arrayidx88 = getelementptr inbounds i64, i64* %91, i64 0, !dbg !20175
  %92 = load i64, i64* %arrayidx88, align 8, !dbg !20175
  %mul89 = mul nsw i64 %92, 1, !dbg !20176
  %div = udiv i64 %mul89, 2, !dbg !20177
  %93 = load i16*, i16** %dst0, align 8, !dbg !20178
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %div, !dbg !20178
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !20178
  %94 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20179
  %arrayidx90 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !20179
  %95 = load i64, i64* %arrayidx90, align 8, !dbg !20179
  %div91 = udiv i64 %95, 2, !dbg !20180
  %96 = load i16*, i16** %dst1, align 8, !dbg !20181
  %add.ptr92 = getelementptr inbounds i16, i16* %96, i64 %div91, !dbg !20181
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !20181
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20182
  %arrayidx93 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !20182
  %98 = load i64, i64* %arrayidx93, align 8, !dbg !20182
  %div94 = udiv i64 %98, 2, !dbg !20183
  %99 = load i16*, i16** %dst2, align 8, !dbg !20184
  %add.ptr95 = getelementptr inbounds i16, i16* %99, i64 %div94, !dbg !20184
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !20184
  %100 = load i64*, i64** %src_stride.addr, align 8, !dbg !20185
  %arrayidx96 = getelementptr inbounds i64, i64* %100, i64 0, !dbg !20185
  %101 = load i64, i64* %arrayidx96, align 8, !dbg !20185
  %mul97 = mul nsw i64 %101, 1, !dbg !20186
  %div98 = udiv i64 %mul97, 2, !dbg !20187
  %102 = load i16*, i16** %src0, align 8, !dbg !20188
  %add.ptr99 = getelementptr inbounds i16, i16* %102, i64 %div98, !dbg !20188
  store i16* %add.ptr99, i16** %src0, align 8, !dbg !20188
  %103 = load i64*, i64** %src_stride.addr, align 8, !dbg !20189
  %arrayidx100 = getelementptr inbounds i64, i64* %103, i64 1, !dbg !20189
  %104 = load i64, i64* %arrayidx100, align 8, !dbg !20189
  %div101 = udiv i64 %104, 2, !dbg !20190
  %105 = load i16*, i16** %src1, align 8, !dbg !20191
  %add.ptr102 = getelementptr inbounds i16, i16* %105, i64 %div101, !dbg !20191
  store i16* %add.ptr102, i16** %src1, align 8, !dbg !20191
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !20192
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 2, !dbg !20192
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !20192
  %div104 = udiv i64 %107, 2, !dbg !20193
  %108 = load i16*, i16** %src2, align 8, !dbg !20194
  %add.ptr105 = getelementptr inbounds i16, i16* %108, i64 %div104, !dbg !20194
  store i16* %add.ptr105, i16** %src2, align 8, !dbg !20194
  br label %for.inc106, !dbg !20195

for.inc106:                                       ; preds = %for.end
  %109 = load i32, i32* %y, align 4, !dbg !20196
  %inc107 = add nsw i32 %109, 1, !dbg !20196
  store i32 %inc107, i32* %y, align 4, !dbg !20196
  br label %for.cond, !dbg !20198, !llvm.loop !20199

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !20201
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p12to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !20202 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !20203
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !20211
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !20212
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !20214
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !20215
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !20217
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !20218
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !20220
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !20221, metadata !94), !dbg !20222
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !20223, metadata !94), !dbg !20224
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !20225, metadata !94), !dbg !20226
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !20227, metadata !94), !dbg !20228
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !20229, metadata !94), !dbg !20230
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !20231, metadata !94), !dbg !20232
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !20233, metadata !94), !dbg !20234
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !20235, metadata !94), !dbg !20236
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !20237, metadata !94), !dbg !20238
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !20239
  %1 = bitcast i8** %0 to i16**, !dbg !20240
  store i16** %1, i16*** %dst, align 8, !dbg !20238
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !20241, metadata !94), !dbg !20242
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !20243
  %3 = bitcast i8** %2 to i16**, !dbg !20244
  store i16** %3, i16*** %src, align 8, !dbg !20242
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !20245, metadata !94), !dbg !20246
  %4 = load i16**, i16*** %src, align 8, !dbg !20247
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !20247
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !20247
  store i16* %5, i16** %src0, align 8, !dbg !20246
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !20248, metadata !94), !dbg !20249
  %6 = load i16**, i16*** %src, align 8, !dbg !20250
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !20250
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !20250
  store i16* %7, i16** %src1, align 8, !dbg !20249
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !20251, metadata !94), !dbg !20252
  %8 = load i16**, i16*** %src, align 8, !dbg !20253
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !20253
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !20253
  store i16* %9, i16** %src2, align 8, !dbg !20252
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !20254, metadata !94), !dbg !20255
  %10 = load i16**, i16*** %dst, align 8, !dbg !20256
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !20256
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !20256
  store i16* %11, i16** %dst0, align 8, !dbg !20255
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !20257, metadata !94), !dbg !20258
  %12 = load i16**, i16*** %dst, align 8, !dbg !20259
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !20259
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !20259
  store i16* %13, i16** %dst1, align 8, !dbg !20258
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !20260, metadata !94), !dbg !20261
  %14 = load i16**, i16*** %dst, align 8, !dbg !20262
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !20262
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !20262
  store i16* %15, i16** %dst2, align 8, !dbg !20261
  call void @llvm.dbg.declare(metadata i32* %y, metadata !20263, metadata !94), !dbg !20264
  call void @llvm.dbg.declare(metadata i32* %x, metadata !20265, metadata !94), !dbg !20266
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !20267, metadata !94), !dbg !20268
  store i32 16, i32* %sh, align 4, !dbg !20268
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !20269, metadata !94), !dbg !20270
  store i32 32768, i32* %rnd, align 4, !dbg !20270
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !20271, metadata !94), !dbg !20272
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !20273
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !20273
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !20273
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !20273
  %conv = sext i16 %17 to i32, !dbg !20273
  store i32 %conv, i32* %y_off_in, align 4, !dbg !20272
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !20274, metadata !94), !dbg !20275
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !20276
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !20276
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !20276
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !20276
  %conv10 = sext i16 %19 to i32, !dbg !20276
  %shl = shl i32 %conv10, 16, !dbg !20277
  store i32 %shl, i32* %y_off_out, align 4, !dbg !20275
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !20278, metadata !94), !dbg !20279
  store i32 2048, i32* %uv_off_in, align 4, !dbg !20279
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !20280, metadata !94), !dbg !20281
  store i32 33587200, i32* %uv_off_out, align 4, !dbg !20281
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !20282, metadata !94), !dbg !20283
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20284
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !20284
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !20284
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !20284
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !20284
  %conv14 = sext i16 %21 to i32, !dbg !20284
  store i32 %conv14, i32* %cyy, align 4, !dbg !20283
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !20285, metadata !94), !dbg !20286
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20287
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !20287
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !20287
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !20287
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !20287
  %conv18 = sext i16 %23 to i32, !dbg !20287
  store i32 %conv18, i32* %cyu, align 4, !dbg !20286
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !20288, metadata !94), !dbg !20289
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20290
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !20290
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !20290
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !20290
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !20290
  %conv22 = sext i16 %25 to i32, !dbg !20290
  store i32 %conv22, i32* %cyv, align 4, !dbg !20289
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !20291, metadata !94), !dbg !20292
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20293
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !20293
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !20293
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !20293
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !20293
  %conv26 = sext i16 %27 to i32, !dbg !20293
  store i32 %conv26, i32* %cuu, align 4, !dbg !20292
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !20294, metadata !94), !dbg !20295
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20296
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !20296
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !20296
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !20296
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !20296
  %conv30 = sext i16 %29 to i32, !dbg !20296
  store i32 %conv30, i32* %cuv, align 4, !dbg !20295
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !20297, metadata !94), !dbg !20298
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20299
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !20299
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !20299
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !20299
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !20299
  %conv34 = sext i16 %31 to i32, !dbg !20299
  store i32 %conv34, i32* %cvu, align 4, !dbg !20298
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !20300, metadata !94), !dbg !20301
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20302
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !20302
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !20302
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !20302
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !20302
  %conv38 = sext i16 %33 to i32, !dbg !20302
  store i32 %conv38, i32* %cvv, align 4, !dbg !20301
  %34 = load i32, i32* %w.addr, align 4, !dbg !20303
  %add = add nsw i32 %34, 2, !dbg !20304
  %sub = sub nsw i32 %add, 1, !dbg !20305
  %shr = ashr i32 %sub, 1, !dbg !20306
  store i32 %shr, i32* %w.addr, align 4, !dbg !20307
  %35 = load i32, i32* %h.addr, align 4, !dbg !20308
  %add39 = add nsw i32 %35, 1, !dbg !20309
  %sub40 = sub nsw i32 %add39, 1, !dbg !20310
  %shr41 = ashr i32 %sub40, 0, !dbg !20311
  store i32 %shr41, i32* %h.addr, align 4, !dbg !20312
  store i32 0, i32* %y, align 4, !dbg !20313
  br label %for.cond, !dbg !20314

for.cond:                                         ; preds = %for.inc121, %entry
  %36 = load i32, i32* %y, align 4, !dbg !20315
  %37 = load i32, i32* %h.addr, align 4, !dbg !20317
  %cmp = icmp slt i32 %36, %37, !dbg !20318
  br i1 %cmp, label %for.body, label %for.end123, !dbg !20319

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !20320
  br label %for.cond43, !dbg !20321

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !20322
  %39 = load i32, i32* %w.addr, align 4, !dbg !20324
  %cmp44 = icmp slt i32 %38, %39, !dbg !20325
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !20326

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !20327, metadata !94), !dbg !20328
  %40 = load i32, i32* %x, align 4, !dbg !20329
  %shl47 = shl i32 %40, 1, !dbg !20330
  %idxprom = sext i32 %shl47 to i64, !dbg !20331
  %41 = load i16*, i16** %src0, align 8, !dbg !20331
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !20331
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !20331
  %conv49 = zext i16 %42 to i32, !dbg !20331
  %43 = load i32, i32* %y_off_in, align 4, !dbg !20332
  %sub50 = sub nsw i32 %conv49, %43, !dbg !20333
  store i32 %sub50, i32* %y00, align 4, !dbg !20328
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !20334, metadata !94), !dbg !20335
  %44 = load i32, i32* %x, align 4, !dbg !20336
  %mul = mul nsw i32 2, %44, !dbg !20337
  %add51 = add nsw i32 %mul, 1, !dbg !20338
  %idxprom52 = sext i32 %add51 to i64, !dbg !20339
  %45 = load i16*, i16** %src0, align 8, !dbg !20339
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !20339
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !20339
  %conv54 = zext i16 %46 to i32, !dbg !20339
  %47 = load i32, i32* %y_off_in, align 4, !dbg !20340
  %sub55 = sub nsw i32 %conv54, %47, !dbg !20341
  store i32 %sub55, i32* %y01, align 4, !dbg !20335
  call void @llvm.dbg.declare(metadata i32* %u, metadata !20342, metadata !94), !dbg !20343
  %48 = load i32, i32* %x, align 4, !dbg !20344
  %idxprom56 = sext i32 %48 to i64, !dbg !20345
  %49 = load i16*, i16** %src1, align 8, !dbg !20345
  %arrayidx57 = getelementptr inbounds i16, i16* %49, i64 %idxprom56, !dbg !20345
  %50 = load i16, i16* %arrayidx57, align 2, !dbg !20345
  %conv58 = zext i16 %50 to i32, !dbg !20345
  %sub59 = sub nsw i32 %conv58, 2048, !dbg !20346
  store i32 %sub59, i32* %u, align 4, !dbg !20343
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20347, metadata !94), !dbg !20348
  %51 = load i32, i32* %x, align 4, !dbg !20349
  %idxprom60 = sext i32 %51 to i64, !dbg !20350
  %52 = load i16*, i16** %src2, align 8, !dbg !20350
  %arrayidx61 = getelementptr inbounds i16, i16* %52, i64 %idxprom60, !dbg !20350
  %53 = load i16, i16* %arrayidx61, align 2, !dbg !20350
  %conv62 = zext i16 %53 to i32, !dbg !20350
  %sub63 = sub nsw i32 %conv62, 2048, !dbg !20351
  store i32 %sub63, i32* %v, align 4, !dbg !20348
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !20352, metadata !94), !dbg !20353
  %54 = load i32, i32* %cyu, align 4, !dbg !20354
  %55 = load i32, i32* %u, align 4, !dbg !20355
  %mul64 = mul nsw i32 %54, %55, !dbg !20356
  %56 = load i32, i32* %cyv, align 4, !dbg !20357
  %57 = load i32, i32* %v, align 4, !dbg !20358
  %mul65 = mul nsw i32 %56, %57, !dbg !20359
  %add66 = add nsw i32 %mul64, %mul65, !dbg !20360
  %add67 = add nsw i32 %add66, 32768, !dbg !20361
  %58 = load i32, i32* %y_off_out, align 4, !dbg !20362
  %add68 = add nsw i32 %add67, %58, !dbg !20363
  store i32 %add68, i32* %uv_val, align 4, !dbg !20353
  %59 = load i32, i32* %cyy, align 4, !dbg !20364
  %60 = load i32, i32* %y00, align 4, !dbg !20365
  %mul69 = mul nsw i32 %59, %60, !dbg !20366
  %61 = load i32, i32* %uv_val, align 4, !dbg !20367
  %add70 = add nsw i32 %mul69, %61, !dbg !20368
  %shr71 = ashr i32 %add70, 16, !dbg !20369
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !20370
  store i32 10, i32* %p.addr.i, align 4, !dbg !20370
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !20371
  %63 = load i32, i32* %p.addr.i, align 4, !dbg !20372
  %shl.i = shl i32 1, %63, !dbg !20373
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !20374
  %neg.i = xor i32 %sub.i, -1, !dbg !20375
  %and.i = and i32 %62, %neg.i, !dbg !20376
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !20376
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !20377

if.then.i:                                        ; preds = %for.body46
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !20378
  %neg1.i = xor i32 %64, -1, !dbg !20379
  %shr.i = ashr i32 %neg1.i, 31, !dbg !20380
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !20381
  %shl2.i = shl i32 1, %65, !dbg !20382
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !20383
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !20384
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !20385
  br label %av_clip_uintp2_c.exit, !dbg !20385

if.else.i:                                        ; preds = %for.body46
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !20386
  store i32 %66, i32* %retval.i, align 4, !dbg !20387
  br label %av_clip_uintp2_c.exit, !dbg !20387

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %67 = load i32, i32* %retval.i, align 4, !dbg !20388
  %conv72 = trunc i32 %67 to i16, !dbg !20370
  %68 = load i32, i32* %x, align 4, !dbg !20389
  %shl73 = shl i32 %68, 1, !dbg !20390
  %idxprom74 = sext i32 %shl73 to i64, !dbg !20391
  %69 = load i16*, i16** %dst0, align 8, !dbg !20391
  %arrayidx75 = getelementptr inbounds i16, i16* %69, i64 %idxprom74, !dbg !20391
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !20392
  %70 = load i32, i32* %cyy, align 4, !dbg !20393
  %71 = load i32, i32* %y01, align 4, !dbg !20394
  %mul76 = mul nsw i32 %70, %71, !dbg !20395
  %72 = load i32, i32* %uv_val, align 4, !dbg !20396
  %add77 = add nsw i32 %mul76, %72, !dbg !20397
  %shr78 = ashr i32 %add77, 16, !dbg !20398
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !20399
  store i32 10, i32* %p.addr.i158, align 4, !dbg !20399
  %73 = load i32, i32* %a.addr.i157, align 4, !dbg !20400
  %74 = load i32, i32* %p.addr.i158, align 4, !dbg !20401
  %shl.i159 = shl i32 1, %74, !dbg !20402
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !20403
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !20404
  %and.i162 = and i32 %73, %neg.i161, !dbg !20405
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !20405
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !20406

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %75 = load i32, i32* %a.addr.i157, align 4, !dbg !20407
  %neg1.i164 = xor i32 %75, -1, !dbg !20408
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !20409
  %76 = load i32, i32* %p.addr.i158, align 4, !dbg !20410
  %shl2.i166 = shl i32 1, %76, !dbg !20411
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !20412
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !20413
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !20414
  br label %av_clip_uintp2_c.exit171, !dbg !20414

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %77 = load i32, i32* %a.addr.i157, align 4, !dbg !20415
  store i32 %77, i32* %retval.i156, align 4, !dbg !20416
  br label %av_clip_uintp2_c.exit171, !dbg !20416

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %78 = load i32, i32* %retval.i156, align 4, !dbg !20417
  %conv80 = trunc i32 %78 to i16, !dbg !20399
  %79 = load i32, i32* %x, align 4, !dbg !20418
  %mul81 = mul nsw i32 %79, 2, !dbg !20419
  %add82 = add nsw i32 %mul81, 1, !dbg !20420
  %idxprom83 = sext i32 %add82 to i64, !dbg !20421
  %80 = load i16*, i16** %dst0, align 8, !dbg !20421
  %arrayidx84 = getelementptr inbounds i16, i16* %80, i64 %idxprom83, !dbg !20421
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !20422
  %81 = load i32, i32* %u, align 4, !dbg !20423
  %82 = load i32, i32* %cuu, align 4, !dbg !20424
  %mul85 = mul nsw i32 %81, %82, !dbg !20425
  %83 = load i32, i32* %v, align 4, !dbg !20426
  %84 = load i32, i32* %cuv, align 4, !dbg !20427
  %mul86 = mul nsw i32 %83, %84, !dbg !20428
  %add87 = add nsw i32 %mul85, %mul86, !dbg !20429
  %add88 = add nsw i32 %add87, 33587200, !dbg !20430
  %shr89 = ashr i32 %add88, 16, !dbg !20431
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !20432
  store i32 10, i32* %p.addr.i142, align 4, !dbg !20432
  %85 = load i32, i32* %a.addr.i141, align 4, !dbg !20433
  %86 = load i32, i32* %p.addr.i142, align 4, !dbg !20434
  %shl.i143 = shl i32 1, %86, !dbg !20435
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !20436
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !20437
  %and.i146 = and i32 %85, %neg.i145, !dbg !20438
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !20438
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !20439

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %87 = load i32, i32* %a.addr.i141, align 4, !dbg !20440
  %neg1.i148 = xor i32 %87, -1, !dbg !20441
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !20442
  %88 = load i32, i32* %p.addr.i142, align 4, !dbg !20443
  %shl2.i150 = shl i32 1, %88, !dbg !20444
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !20445
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !20446
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !20447
  br label %av_clip_uintp2_c.exit155, !dbg !20447

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %89 = load i32, i32* %a.addr.i141, align 4, !dbg !20448
  store i32 %89, i32* %retval.i140, align 4, !dbg !20449
  br label %av_clip_uintp2_c.exit155, !dbg !20449

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %90 = load i32, i32* %retval.i140, align 4, !dbg !20450
  %conv91 = trunc i32 %90 to i16, !dbg !20432
  %91 = load i32, i32* %x, align 4, !dbg !20451
  %idxprom92 = sext i32 %91 to i64, !dbg !20452
  %92 = load i16*, i16** %dst1, align 8, !dbg !20452
  %arrayidx93 = getelementptr inbounds i16, i16* %92, i64 %idxprom92, !dbg !20452
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !20453
  %93 = load i32, i32* %u, align 4, !dbg !20454
  %94 = load i32, i32* %cvu, align 4, !dbg !20455
  %mul94 = mul nsw i32 %93, %94, !dbg !20456
  %95 = load i32, i32* %v, align 4, !dbg !20457
  %96 = load i32, i32* %cvv, align 4, !dbg !20458
  %mul95 = mul nsw i32 %95, %96, !dbg !20459
  %add96 = add nsw i32 %mul94, %mul95, !dbg !20460
  %add97 = add nsw i32 %add96, 33587200, !dbg !20461
  %shr98 = ashr i32 %add97, 16, !dbg !20462
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !20463
  store i32 10, i32* %p.addr.i126, align 4, !dbg !20463
  %97 = load i32, i32* %a.addr.i125, align 4, !dbg !20464
  %98 = load i32, i32* %p.addr.i126, align 4, !dbg !20465
  %shl.i127 = shl i32 1, %98, !dbg !20466
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !20467
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !20468
  %and.i130 = and i32 %97, %neg.i129, !dbg !20469
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !20469
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !20470

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %99 = load i32, i32* %a.addr.i125, align 4, !dbg !20471
  %neg1.i132 = xor i32 %99, -1, !dbg !20472
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !20473
  %100 = load i32, i32* %p.addr.i126, align 4, !dbg !20474
  %shl2.i134 = shl i32 1, %100, !dbg !20475
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !20476
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !20477
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !20478
  br label %av_clip_uintp2_c.exit139, !dbg !20478

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %101 = load i32, i32* %a.addr.i125, align 4, !dbg !20479
  store i32 %101, i32* %retval.i124, align 4, !dbg !20480
  br label %av_clip_uintp2_c.exit139, !dbg !20480

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %102 = load i32, i32* %retval.i124, align 4, !dbg !20481
  %conv100 = trunc i32 %102 to i16, !dbg !20463
  %103 = load i32, i32* %x, align 4, !dbg !20482
  %idxprom101 = sext i32 %103 to i64, !dbg !20483
  %104 = load i16*, i16** %dst2, align 8, !dbg !20483
  %arrayidx102 = getelementptr inbounds i16, i16* %104, i64 %idxprom101, !dbg !20483
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !20484
  br label %for.inc, !dbg !20485

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %105 = load i32, i32* %x, align 4, !dbg !20486
  %inc = add nsw i32 %105, 1, !dbg !20486
  store i32 %inc, i32* %x, align 4, !dbg !20486
  br label %for.cond43, !dbg !20488, !llvm.loop !20489

for.end:                                          ; preds = %for.cond43
  %106 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20491
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !20491
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !20491
  %mul104 = mul nsw i64 %107, 1, !dbg !20492
  %div = udiv i64 %mul104, 2, !dbg !20493
  %108 = load i16*, i16** %dst0, align 8, !dbg !20494
  %add.ptr = getelementptr inbounds i16, i16* %108, i64 %div, !dbg !20494
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !20494
  %109 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20495
  %arrayidx105 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !20495
  %110 = load i64, i64* %arrayidx105, align 8, !dbg !20495
  %div106 = udiv i64 %110, 2, !dbg !20496
  %111 = load i16*, i16** %dst1, align 8, !dbg !20497
  %add.ptr107 = getelementptr inbounds i16, i16* %111, i64 %div106, !dbg !20497
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !20497
  %112 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20498
  %arrayidx108 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !20498
  %113 = load i64, i64* %arrayidx108, align 8, !dbg !20498
  %div109 = udiv i64 %113, 2, !dbg !20499
  %114 = load i16*, i16** %dst2, align 8, !dbg !20500
  %add.ptr110 = getelementptr inbounds i16, i16* %114, i64 %div109, !dbg !20500
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !20500
  %115 = load i64*, i64** %src_stride.addr, align 8, !dbg !20501
  %arrayidx111 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !20501
  %116 = load i64, i64* %arrayidx111, align 8, !dbg !20501
  %mul112 = mul nsw i64 %116, 1, !dbg !20502
  %div113 = udiv i64 %mul112, 2, !dbg !20503
  %117 = load i16*, i16** %src0, align 8, !dbg !20504
  %add.ptr114 = getelementptr inbounds i16, i16* %117, i64 %div113, !dbg !20504
  store i16* %add.ptr114, i16** %src0, align 8, !dbg !20504
  %118 = load i64*, i64** %src_stride.addr, align 8, !dbg !20505
  %arrayidx115 = getelementptr inbounds i64, i64* %118, i64 1, !dbg !20505
  %119 = load i64, i64* %arrayidx115, align 8, !dbg !20505
  %div116 = udiv i64 %119, 2, !dbg !20506
  %120 = load i16*, i16** %src1, align 8, !dbg !20507
  %add.ptr117 = getelementptr inbounds i16, i16* %120, i64 %div116, !dbg !20507
  store i16* %add.ptr117, i16** %src1, align 8, !dbg !20507
  %121 = load i64*, i64** %src_stride.addr, align 8, !dbg !20508
  %arrayidx118 = getelementptr inbounds i64, i64* %121, i64 2, !dbg !20508
  %122 = load i64, i64* %arrayidx118, align 8, !dbg !20508
  %div119 = udiv i64 %122, 2, !dbg !20509
  %123 = load i16*, i16** %src2, align 8, !dbg !20510
  %add.ptr120 = getelementptr inbounds i16, i16* %123, i64 %div119, !dbg !20510
  store i16* %add.ptr120, i16** %src2, align 8, !dbg !20510
  br label %for.inc121, !dbg !20511

for.inc121:                                       ; preds = %for.end
  %124 = load i32, i32* %y, align 4, !dbg !20512
  %inc122 = add nsw i32 %124, 1, !dbg !20512
  store i32 %inc122, i32* %y, align 4, !dbg !20512
  br label %for.cond, !dbg !20514, !llvm.loop !20515

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !20517
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p12to10_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !20518 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !20519
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !20527
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !20528
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !20530
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !20531
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !20533
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !20534
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !20536
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !20537
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !20539
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !20540
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !20542
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !20543, metadata !94), !dbg !20544
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !20545, metadata !94), !dbg !20546
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !20547, metadata !94), !dbg !20548
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !20549, metadata !94), !dbg !20550
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !20551, metadata !94), !dbg !20552
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !20553, metadata !94), !dbg !20554
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !20555, metadata !94), !dbg !20556
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !20557, metadata !94), !dbg !20558
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !20559, metadata !94), !dbg !20560
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !20561
  %1 = bitcast i8** %0 to i16**, !dbg !20562
  store i16** %1, i16*** %dst, align 8, !dbg !20560
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !20563, metadata !94), !dbg !20564
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !20565
  %3 = bitcast i8** %2 to i16**, !dbg !20566
  store i16** %3, i16*** %src, align 8, !dbg !20564
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !20567, metadata !94), !dbg !20568
  %4 = load i16**, i16*** %src, align 8, !dbg !20569
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !20569
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !20569
  store i16* %5, i16** %src0, align 8, !dbg !20568
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !20570, metadata !94), !dbg !20571
  %6 = load i16**, i16*** %src, align 8, !dbg !20572
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !20572
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !20572
  store i16* %7, i16** %src1, align 8, !dbg !20571
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !20573, metadata !94), !dbg !20574
  %8 = load i16**, i16*** %src, align 8, !dbg !20575
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !20575
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !20575
  store i16* %9, i16** %src2, align 8, !dbg !20574
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !20576, metadata !94), !dbg !20577
  %10 = load i16**, i16*** %dst, align 8, !dbg !20578
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !20578
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !20578
  store i16* %11, i16** %dst0, align 8, !dbg !20577
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !20579, metadata !94), !dbg !20580
  %12 = load i16**, i16*** %dst, align 8, !dbg !20581
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !20581
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !20581
  store i16* %13, i16** %dst1, align 8, !dbg !20580
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !20582, metadata !94), !dbg !20583
  %14 = load i16**, i16*** %dst, align 8, !dbg !20584
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !20584
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !20584
  store i16* %15, i16** %dst2, align 8, !dbg !20583
  call void @llvm.dbg.declare(metadata i32* %y, metadata !20585, metadata !94), !dbg !20586
  call void @llvm.dbg.declare(metadata i32* %x, metadata !20587, metadata !94), !dbg !20588
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !20589, metadata !94), !dbg !20590
  store i32 16, i32* %sh, align 4, !dbg !20590
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !20591, metadata !94), !dbg !20592
  store i32 32768, i32* %rnd, align 4, !dbg !20592
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !20593, metadata !94), !dbg !20594
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !20595
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !20595
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !20595
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !20595
  %conv = sext i16 %17 to i32, !dbg !20595
  store i32 %conv, i32* %y_off_in, align 4, !dbg !20594
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !20596, metadata !94), !dbg !20597
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !20598
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !20598
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !20598
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !20598
  %conv10 = sext i16 %19 to i32, !dbg !20598
  %shl = shl i32 %conv10, 16, !dbg !20599
  store i32 %shl, i32* %y_off_out, align 4, !dbg !20597
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !20600, metadata !94), !dbg !20601
  store i32 2048, i32* %uv_off_in, align 4, !dbg !20601
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !20602, metadata !94), !dbg !20603
  store i32 33587200, i32* %uv_off_out, align 4, !dbg !20603
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !20604, metadata !94), !dbg !20605
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20606
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !20606
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !20606
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !20606
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !20606
  %conv14 = sext i16 %21 to i32, !dbg !20606
  store i32 %conv14, i32* %cyy, align 4, !dbg !20605
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !20607, metadata !94), !dbg !20608
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20609
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !20609
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !20609
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !20609
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !20609
  %conv18 = sext i16 %23 to i32, !dbg !20609
  store i32 %conv18, i32* %cyu, align 4, !dbg !20608
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !20610, metadata !94), !dbg !20611
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20612
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !20612
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !20612
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !20612
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !20612
  %conv22 = sext i16 %25 to i32, !dbg !20612
  store i32 %conv22, i32* %cyv, align 4, !dbg !20611
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !20613, metadata !94), !dbg !20614
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20615
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !20615
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !20615
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !20615
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !20615
  %conv26 = sext i16 %27 to i32, !dbg !20615
  store i32 %conv26, i32* %cuu, align 4, !dbg !20614
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !20616, metadata !94), !dbg !20617
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20618
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !20618
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !20618
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !20618
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !20618
  %conv30 = sext i16 %29 to i32, !dbg !20618
  store i32 %conv30, i32* %cuv, align 4, !dbg !20617
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !20619, metadata !94), !dbg !20620
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20621
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !20621
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !20621
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !20621
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !20621
  %conv34 = sext i16 %31 to i32, !dbg !20621
  store i32 %conv34, i32* %cvu, align 4, !dbg !20620
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !20622, metadata !94), !dbg !20623
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !20624
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !20624
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !20624
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !20624
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !20624
  %conv38 = sext i16 %33 to i32, !dbg !20624
  store i32 %conv38, i32* %cvv, align 4, !dbg !20623
  %34 = load i32, i32* %w.addr, align 4, !dbg !20625
  %add = add nsw i32 %34, 2, !dbg !20626
  %sub = sub nsw i32 %add, 1, !dbg !20627
  %shr = ashr i32 %sub, 1, !dbg !20628
  store i32 %shr, i32* %w.addr, align 4, !dbg !20629
  %35 = load i32, i32* %h.addr, align 4, !dbg !20630
  %add39 = add nsw i32 %35, 2, !dbg !20631
  %sub40 = sub nsw i32 %add39, 1, !dbg !20632
  %shr41 = ashr i32 %sub40, 1, !dbg !20633
  store i32 %shr41, i32* %h.addr, align 4, !dbg !20634
  store i32 0, i32* %y, align 4, !dbg !20635
  br label %for.cond, !dbg !20636

for.cond:                                         ; preds = %for.inc162, %entry
  %36 = load i32, i32* %y, align 4, !dbg !20637
  %37 = load i32, i32* %h.addr, align 4, !dbg !20639
  %cmp = icmp slt i32 %36, %37, !dbg !20640
  br i1 %cmp, label %for.body, label %for.end164, !dbg !20641

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !20642
  br label %for.cond43, !dbg !20643

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !20644
  %39 = load i32, i32* %w.addr, align 4, !dbg !20646
  %cmp44 = icmp slt i32 %38, %39, !dbg !20647
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !20648

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !20649, metadata !94), !dbg !20650
  %40 = load i32, i32* %x, align 4, !dbg !20651
  %shl47 = shl i32 %40, 1, !dbg !20652
  %idxprom = sext i32 %shl47 to i64, !dbg !20653
  %41 = load i16*, i16** %src0, align 8, !dbg !20653
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !20653
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !20653
  %conv49 = zext i16 %42 to i32, !dbg !20653
  %43 = load i32, i32* %y_off_in, align 4, !dbg !20654
  %sub50 = sub nsw i32 %conv49, %43, !dbg !20655
  store i32 %sub50, i32* %y00, align 4, !dbg !20650
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !20656, metadata !94), !dbg !20657
  %44 = load i32, i32* %x, align 4, !dbg !20658
  %mul = mul nsw i32 2, %44, !dbg !20659
  %add51 = add nsw i32 %mul, 1, !dbg !20660
  %idxprom52 = sext i32 %add51 to i64, !dbg !20661
  %45 = load i16*, i16** %src0, align 8, !dbg !20661
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !20661
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !20661
  %conv54 = zext i16 %46 to i32, !dbg !20661
  %47 = load i32, i32* %y_off_in, align 4, !dbg !20662
  %sub55 = sub nsw i32 %conv54, %47, !dbg !20663
  store i32 %sub55, i32* %y01, align 4, !dbg !20657
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !20664, metadata !94), !dbg !20665
  %48 = load i64*, i64** %src_stride.addr, align 8, !dbg !20666
  %arrayidx56 = getelementptr inbounds i64, i64* %48, i64 0, !dbg !20666
  %49 = load i64, i64* %arrayidx56, align 8, !dbg !20666
  %div = udiv i64 %49, 2, !dbg !20667
  %50 = load i32, i32* %x, align 4, !dbg !20668
  %mul57 = mul nsw i32 2, %50, !dbg !20669
  %conv58 = sext i32 %mul57 to i64, !dbg !20670
  %add59 = add i64 %div, %conv58, !dbg !20671
  %51 = load i16*, i16** %src0, align 8, !dbg !20672
  %arrayidx60 = getelementptr inbounds i16, i16* %51, i64 %add59, !dbg !20672
  %52 = load i16, i16* %arrayidx60, align 2, !dbg !20672
  %conv61 = zext i16 %52 to i32, !dbg !20672
  %53 = load i32, i32* %y_off_in, align 4, !dbg !20673
  %sub62 = sub nsw i32 %conv61, %53, !dbg !20674
  store i32 %sub62, i32* %y10, align 4, !dbg !20665
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !20675, metadata !94), !dbg !20676
  %54 = load i64*, i64** %src_stride.addr, align 8, !dbg !20677
  %arrayidx63 = getelementptr inbounds i64, i64* %54, i64 0, !dbg !20677
  %55 = load i64, i64* %arrayidx63, align 8, !dbg !20677
  %div64 = udiv i64 %55, 2, !dbg !20678
  %56 = load i32, i32* %x, align 4, !dbg !20679
  %mul65 = mul nsw i32 2, %56, !dbg !20680
  %conv66 = sext i32 %mul65 to i64, !dbg !20681
  %add67 = add i64 %div64, %conv66, !dbg !20682
  %add68 = add i64 %add67, 1, !dbg !20683
  %57 = load i16*, i16** %src0, align 8, !dbg !20684
  %arrayidx69 = getelementptr inbounds i16, i16* %57, i64 %add68, !dbg !20684
  %58 = load i16, i16* %arrayidx69, align 2, !dbg !20684
  %conv70 = zext i16 %58 to i32, !dbg !20684
  %59 = load i32, i32* %y_off_in, align 4, !dbg !20685
  %sub71 = sub nsw i32 %conv70, %59, !dbg !20686
  store i32 %sub71, i32* %y11, align 4, !dbg !20676
  call void @llvm.dbg.declare(metadata i32* %u, metadata !20687, metadata !94), !dbg !20688
  %60 = load i32, i32* %x, align 4, !dbg !20689
  %idxprom72 = sext i32 %60 to i64, !dbg !20690
  %61 = load i16*, i16** %src1, align 8, !dbg !20690
  %arrayidx73 = getelementptr inbounds i16, i16* %61, i64 %idxprom72, !dbg !20690
  %62 = load i16, i16* %arrayidx73, align 2, !dbg !20690
  %conv74 = zext i16 %62 to i32, !dbg !20690
  %sub75 = sub nsw i32 %conv74, 2048, !dbg !20691
  store i32 %sub75, i32* %u, align 4, !dbg !20688
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20692, metadata !94), !dbg !20693
  %63 = load i32, i32* %x, align 4, !dbg !20694
  %idxprom76 = sext i32 %63 to i64, !dbg !20695
  %64 = load i16*, i16** %src2, align 8, !dbg !20695
  %arrayidx77 = getelementptr inbounds i16, i16* %64, i64 %idxprom76, !dbg !20695
  %65 = load i16, i16* %arrayidx77, align 2, !dbg !20695
  %conv78 = zext i16 %65 to i32, !dbg !20695
  %sub79 = sub nsw i32 %conv78, 2048, !dbg !20696
  store i32 %sub79, i32* %v, align 4, !dbg !20693
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !20697, metadata !94), !dbg !20698
  %66 = load i32, i32* %cyu, align 4, !dbg !20699
  %67 = load i32, i32* %u, align 4, !dbg !20700
  %mul80 = mul nsw i32 %66, %67, !dbg !20701
  %68 = load i32, i32* %cyv, align 4, !dbg !20702
  %69 = load i32, i32* %v, align 4, !dbg !20703
  %mul81 = mul nsw i32 %68, %69, !dbg !20704
  %add82 = add nsw i32 %mul80, %mul81, !dbg !20705
  %add83 = add nsw i32 %add82, 32768, !dbg !20706
  %70 = load i32, i32* %y_off_out, align 4, !dbg !20707
  %add84 = add nsw i32 %add83, %70, !dbg !20708
  store i32 %add84, i32* %uv_val, align 4, !dbg !20698
  %71 = load i32, i32* %cyy, align 4, !dbg !20709
  %72 = load i32, i32* %y00, align 4, !dbg !20710
  %mul85 = mul nsw i32 %71, %72, !dbg !20711
  %73 = load i32, i32* %uv_val, align 4, !dbg !20712
  %add86 = add nsw i32 %mul85, %73, !dbg !20713
  %shr87 = ashr i32 %add86, 16, !dbg !20714
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !20715
  store i32 10, i32* %p.addr.i, align 4, !dbg !20715
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !20716
  %75 = load i32, i32* %p.addr.i, align 4, !dbg !20717
  %shl.i = shl i32 1, %75, !dbg !20718
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !20719
  %neg.i = xor i32 %sub.i, -1, !dbg !20720
  %and.i = and i32 %74, %neg.i, !dbg !20721
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !20721
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !20722

if.then.i:                                        ; preds = %for.body46
  %76 = load i32, i32* %a.addr.i, align 4, !dbg !20723
  %neg1.i = xor i32 %76, -1, !dbg !20724
  %shr.i = ashr i32 %neg1.i, 31, !dbg !20725
  %77 = load i32, i32* %p.addr.i, align 4, !dbg !20726
  %shl2.i = shl i32 1, %77, !dbg !20727
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !20728
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !20729
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !20730
  br label %av_clip_uintp2_c.exit, !dbg !20730

if.else.i:                                        ; preds = %for.body46
  %78 = load i32, i32* %a.addr.i, align 4, !dbg !20731
  store i32 %78, i32* %retval.i, align 4, !dbg !20732
  br label %av_clip_uintp2_c.exit, !dbg !20732

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %79 = load i32, i32* %retval.i, align 4, !dbg !20733
  %conv88 = trunc i32 %79 to i16, !dbg !20715
  %80 = load i32, i32* %x, align 4, !dbg !20734
  %shl89 = shl i32 %80, 1, !dbg !20735
  %idxprom90 = sext i32 %shl89 to i64, !dbg !20736
  %81 = load i16*, i16** %dst0, align 8, !dbg !20736
  %arrayidx91 = getelementptr inbounds i16, i16* %81, i64 %idxprom90, !dbg !20736
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !20737
  %82 = load i32, i32* %cyy, align 4, !dbg !20738
  %83 = load i32, i32* %y01, align 4, !dbg !20739
  %mul92 = mul nsw i32 %82, %83, !dbg !20740
  %84 = load i32, i32* %uv_val, align 4, !dbg !20741
  %add93 = add nsw i32 %mul92, %84, !dbg !20742
  %shr94 = ashr i32 %add93, 16, !dbg !20743
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !20744
  store i32 10, i32* %p.addr.i231, align 4, !dbg !20744
  %85 = load i32, i32* %a.addr.i230, align 4, !dbg !20745
  %86 = load i32, i32* %p.addr.i231, align 4, !dbg !20746
  %shl.i232 = shl i32 1, %86, !dbg !20747
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !20748
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !20749
  %and.i235 = and i32 %85, %neg.i234, !dbg !20750
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !20750
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !20751

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %87 = load i32, i32* %a.addr.i230, align 4, !dbg !20752
  %neg1.i237 = xor i32 %87, -1, !dbg !20753
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !20754
  %88 = load i32, i32* %p.addr.i231, align 4, !dbg !20755
  %shl2.i239 = shl i32 1, %88, !dbg !20756
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !20757
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !20758
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !20759
  br label %av_clip_uintp2_c.exit244, !dbg !20759

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %89 = load i32, i32* %a.addr.i230, align 4, !dbg !20760
  store i32 %89, i32* %retval.i229, align 4, !dbg !20761
  br label %av_clip_uintp2_c.exit244, !dbg !20761

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %90 = load i32, i32* %retval.i229, align 4, !dbg !20762
  %conv96 = trunc i32 %90 to i16, !dbg !20744
  %91 = load i32, i32* %x, align 4, !dbg !20763
  %mul97 = mul nsw i32 %91, 2, !dbg !20764
  %add98 = add nsw i32 %mul97, 1, !dbg !20765
  %idxprom99 = sext i32 %add98 to i64, !dbg !20766
  %92 = load i16*, i16** %dst0, align 8, !dbg !20766
  %arrayidx100 = getelementptr inbounds i16, i16* %92, i64 %idxprom99, !dbg !20766
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !20767
  %93 = load i32, i32* %cyy, align 4, !dbg !20768
  %94 = load i32, i32* %y10, align 4, !dbg !20769
  %mul101 = mul nsw i32 %93, %94, !dbg !20770
  %95 = load i32, i32* %uv_val, align 4, !dbg !20771
  %add102 = add nsw i32 %mul101, %95, !dbg !20772
  %shr103 = ashr i32 %add102, 16, !dbg !20773
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !20774
  store i32 10, i32* %p.addr.i215, align 4, !dbg !20774
  %96 = load i32, i32* %a.addr.i214, align 4, !dbg !20775
  %97 = load i32, i32* %p.addr.i215, align 4, !dbg !20776
  %shl.i216 = shl i32 1, %97, !dbg !20777
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !20778
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !20779
  %and.i219 = and i32 %96, %neg.i218, !dbg !20780
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !20780
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !20781

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %98 = load i32, i32* %a.addr.i214, align 4, !dbg !20782
  %neg1.i221 = xor i32 %98, -1, !dbg !20783
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !20784
  %99 = load i32, i32* %p.addr.i215, align 4, !dbg !20785
  %shl2.i223 = shl i32 1, %99, !dbg !20786
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !20787
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !20788
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !20789
  br label %av_clip_uintp2_c.exit228, !dbg !20789

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %100 = load i32, i32* %a.addr.i214, align 4, !dbg !20790
  store i32 %100, i32* %retval.i213, align 4, !dbg !20791
  br label %av_clip_uintp2_c.exit228, !dbg !20791

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %101 = load i32, i32* %retval.i213, align 4, !dbg !20792
  %conv105 = trunc i32 %101 to i16, !dbg !20774
  %102 = load i32, i32* %x, align 4, !dbg !20793
  %mul106 = mul nsw i32 %102, 2, !dbg !20794
  %add107 = add nsw i32 %mul106, 0, !dbg !20795
  %conv108 = sext i32 %add107 to i64, !dbg !20793
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20796
  %arrayidx109 = getelementptr inbounds i64, i64* %103, i64 0, !dbg !20796
  %104 = load i64, i64* %arrayidx109, align 8, !dbg !20796
  %div110 = udiv i64 %104, 2, !dbg !20797
  %add111 = add i64 %conv108, %div110, !dbg !20798
  %105 = load i16*, i16** %dst0, align 8, !dbg !20799
  %arrayidx112 = getelementptr inbounds i16, i16* %105, i64 %add111, !dbg !20799
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !20800
  %106 = load i32, i32* %cyy, align 4, !dbg !20801
  %107 = load i32, i32* %y11, align 4, !dbg !20802
  %mul113 = mul nsw i32 %106, %107, !dbg !20803
  %108 = load i32, i32* %uv_val, align 4, !dbg !20804
  %add114 = add nsw i32 %mul113, %108, !dbg !20805
  %shr115 = ashr i32 %add114, 16, !dbg !20806
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !20807
  store i32 10, i32* %p.addr.i199, align 4, !dbg !20807
  %109 = load i32, i32* %a.addr.i198, align 4, !dbg !20808
  %110 = load i32, i32* %p.addr.i199, align 4, !dbg !20809
  %shl.i200 = shl i32 1, %110, !dbg !20810
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !20811
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !20812
  %and.i203 = and i32 %109, %neg.i202, !dbg !20813
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !20813
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !20814

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %111 = load i32, i32* %a.addr.i198, align 4, !dbg !20815
  %neg1.i205 = xor i32 %111, -1, !dbg !20816
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !20817
  %112 = load i32, i32* %p.addr.i199, align 4, !dbg !20818
  %shl2.i207 = shl i32 1, %112, !dbg !20819
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !20820
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !20821
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !20822
  br label %av_clip_uintp2_c.exit212, !dbg !20822

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %113 = load i32, i32* %a.addr.i198, align 4, !dbg !20823
  store i32 %113, i32* %retval.i197, align 4, !dbg !20824
  br label %av_clip_uintp2_c.exit212, !dbg !20824

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %114 = load i32, i32* %retval.i197, align 4, !dbg !20825
  %conv117 = trunc i32 %114 to i16, !dbg !20807
  %115 = load i32, i32* %x, align 4, !dbg !20826
  %mul118 = mul nsw i32 %115, 2, !dbg !20827
  %add119 = add nsw i32 %mul118, 1, !dbg !20828
  %conv120 = sext i32 %add119 to i64, !dbg !20826
  %116 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20829
  %arrayidx121 = getelementptr inbounds i64, i64* %116, i64 0, !dbg !20829
  %117 = load i64, i64* %arrayidx121, align 8, !dbg !20829
  %div122 = udiv i64 %117, 2, !dbg !20830
  %add123 = add i64 %conv120, %div122, !dbg !20831
  %118 = load i16*, i16** %dst0, align 8, !dbg !20832
  %arrayidx124 = getelementptr inbounds i16, i16* %118, i64 %add123, !dbg !20832
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !20833
  %119 = load i32, i32* %u, align 4, !dbg !20834
  %120 = load i32, i32* %cuu, align 4, !dbg !20835
  %mul125 = mul nsw i32 %119, %120, !dbg !20836
  %121 = load i32, i32* %v, align 4, !dbg !20837
  %122 = load i32, i32* %cuv, align 4, !dbg !20838
  %mul126 = mul nsw i32 %121, %122, !dbg !20839
  %add127 = add nsw i32 %mul125, %mul126, !dbg !20840
  %add128 = add nsw i32 %add127, 33587200, !dbg !20841
  %shr129 = ashr i32 %add128, 16, !dbg !20842
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !20843
  store i32 10, i32* %p.addr.i183, align 4, !dbg !20843
  %123 = load i32, i32* %a.addr.i182, align 4, !dbg !20844
  %124 = load i32, i32* %p.addr.i183, align 4, !dbg !20845
  %shl.i184 = shl i32 1, %124, !dbg !20846
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !20847
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !20848
  %and.i187 = and i32 %123, %neg.i186, !dbg !20849
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !20849
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !20850

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %125 = load i32, i32* %a.addr.i182, align 4, !dbg !20851
  %neg1.i189 = xor i32 %125, -1, !dbg !20852
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !20853
  %126 = load i32, i32* %p.addr.i183, align 4, !dbg !20854
  %shl2.i191 = shl i32 1, %126, !dbg !20855
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !20856
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !20857
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !20858
  br label %av_clip_uintp2_c.exit196, !dbg !20858

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %127 = load i32, i32* %a.addr.i182, align 4, !dbg !20859
  store i32 %127, i32* %retval.i181, align 4, !dbg !20860
  br label %av_clip_uintp2_c.exit196, !dbg !20860

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %128 = load i32, i32* %retval.i181, align 4, !dbg !20861
  %conv131 = trunc i32 %128 to i16, !dbg !20843
  %129 = load i32, i32* %x, align 4, !dbg !20862
  %idxprom132 = sext i32 %129 to i64, !dbg !20863
  %130 = load i16*, i16** %dst1, align 8, !dbg !20863
  %arrayidx133 = getelementptr inbounds i16, i16* %130, i64 %idxprom132, !dbg !20863
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !20864
  %131 = load i32, i32* %u, align 4, !dbg !20865
  %132 = load i32, i32* %cvu, align 4, !dbg !20866
  %mul134 = mul nsw i32 %131, %132, !dbg !20867
  %133 = load i32, i32* %v, align 4, !dbg !20868
  %134 = load i32, i32* %cvv, align 4, !dbg !20869
  %mul135 = mul nsw i32 %133, %134, !dbg !20870
  %add136 = add nsw i32 %mul134, %mul135, !dbg !20871
  %add137 = add nsw i32 %add136, 33587200, !dbg !20872
  %shr138 = ashr i32 %add137, 16, !dbg !20873
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !20874
  store i32 10, i32* %p.addr.i167, align 4, !dbg !20874
  %135 = load i32, i32* %a.addr.i166, align 4, !dbg !20875
  %136 = load i32, i32* %p.addr.i167, align 4, !dbg !20876
  %shl.i168 = shl i32 1, %136, !dbg !20877
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !20878
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !20879
  %and.i171 = and i32 %135, %neg.i170, !dbg !20880
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !20880
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !20881

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %137 = load i32, i32* %a.addr.i166, align 4, !dbg !20882
  %neg1.i173 = xor i32 %137, -1, !dbg !20883
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !20884
  %138 = load i32, i32* %p.addr.i167, align 4, !dbg !20885
  %shl2.i175 = shl i32 1, %138, !dbg !20886
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !20887
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !20888
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !20889
  br label %av_clip_uintp2_c.exit180, !dbg !20889

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %139 = load i32, i32* %a.addr.i166, align 4, !dbg !20890
  store i32 %139, i32* %retval.i165, align 4, !dbg !20891
  br label %av_clip_uintp2_c.exit180, !dbg !20891

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %140 = load i32, i32* %retval.i165, align 4, !dbg !20892
  %conv140 = trunc i32 %140 to i16, !dbg !20874
  %141 = load i32, i32* %x, align 4, !dbg !20893
  %idxprom141 = sext i32 %141 to i64, !dbg !20894
  %142 = load i16*, i16** %dst2, align 8, !dbg !20894
  %arrayidx142 = getelementptr inbounds i16, i16* %142, i64 %idxprom141, !dbg !20894
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !20895
  br label %for.inc, !dbg !20896

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %143 = load i32, i32* %x, align 4, !dbg !20897
  %inc = add nsw i32 %143, 1, !dbg !20897
  store i32 %inc, i32* %x, align 4, !dbg !20897
  br label %for.cond43, !dbg !20899, !llvm.loop !20900

for.end:                                          ; preds = %for.cond43
  %144 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20902
  %arrayidx143 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !20902
  %145 = load i64, i64* %arrayidx143, align 8, !dbg !20902
  %mul144 = mul nsw i64 %145, 2, !dbg !20903
  %div145 = udiv i64 %mul144, 2, !dbg !20904
  %146 = load i16*, i16** %dst0, align 8, !dbg !20905
  %add.ptr = getelementptr inbounds i16, i16* %146, i64 %div145, !dbg !20905
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !20905
  %147 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20906
  %arrayidx146 = getelementptr inbounds i64, i64* %147, i64 1, !dbg !20906
  %148 = load i64, i64* %arrayidx146, align 8, !dbg !20906
  %div147 = udiv i64 %148, 2, !dbg !20907
  %149 = load i16*, i16** %dst1, align 8, !dbg !20908
  %add.ptr148 = getelementptr inbounds i16, i16* %149, i64 %div147, !dbg !20908
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !20908
  %150 = load i64*, i64** %dst_stride.addr, align 8, !dbg !20909
  %arrayidx149 = getelementptr inbounds i64, i64* %150, i64 2, !dbg !20909
  %151 = load i64, i64* %arrayidx149, align 8, !dbg !20909
  %div150 = udiv i64 %151, 2, !dbg !20910
  %152 = load i16*, i16** %dst2, align 8, !dbg !20911
  %add.ptr151 = getelementptr inbounds i16, i16* %152, i64 %div150, !dbg !20911
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !20911
  %153 = load i64*, i64** %src_stride.addr, align 8, !dbg !20912
  %arrayidx152 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !20912
  %154 = load i64, i64* %arrayidx152, align 8, !dbg !20912
  %mul153 = mul nsw i64 %154, 2, !dbg !20913
  %div154 = udiv i64 %mul153, 2, !dbg !20914
  %155 = load i16*, i16** %src0, align 8, !dbg !20915
  %add.ptr155 = getelementptr inbounds i16, i16* %155, i64 %div154, !dbg !20915
  store i16* %add.ptr155, i16** %src0, align 8, !dbg !20915
  %156 = load i64*, i64** %src_stride.addr, align 8, !dbg !20916
  %arrayidx156 = getelementptr inbounds i64, i64* %156, i64 1, !dbg !20916
  %157 = load i64, i64* %arrayidx156, align 8, !dbg !20916
  %div157 = udiv i64 %157, 2, !dbg !20917
  %158 = load i16*, i16** %src1, align 8, !dbg !20918
  %add.ptr158 = getelementptr inbounds i16, i16* %158, i64 %div157, !dbg !20918
  store i16* %add.ptr158, i16** %src1, align 8, !dbg !20918
  %159 = load i64*, i64** %src_stride.addr, align 8, !dbg !20919
  %arrayidx159 = getelementptr inbounds i64, i64* %159, i64 2, !dbg !20919
  %160 = load i64, i64* %arrayidx159, align 8, !dbg !20919
  %div160 = udiv i64 %160, 2, !dbg !20920
  %161 = load i16*, i16** %src2, align 8, !dbg !20921
  %add.ptr161 = getelementptr inbounds i16, i16* %161, i64 %div160, !dbg !20921
  store i16* %add.ptr161, i16** %src2, align 8, !dbg !20921
  br label %for.inc162, !dbg !20922

for.inc162:                                       ; preds = %for.end
  %162 = load i32, i32* %y, align 4, !dbg !20923
  %inc163 = add nsw i32 %162, 1, !dbg !20923
  store i32 %inc163, i32* %y, align 4, !dbg !20923
  br label %for.cond, !dbg !20925, !llvm.loop !20926

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !20928
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_444p12to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !20929 {
entry:
  %retval.i125 = alloca i32, align 4
  %a.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i126, metadata !4652, metadata !94), !dbg !20930
  %p.addr.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i127, metadata !4665, metadata !94), !dbg !20938
  %retval.i109 = alloca i32, align 4
  %a.addr.i110 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i110, metadata !4652, metadata !94), !dbg !20939
  %p.addr.i111 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i111, metadata !4665, metadata !94), !dbg !20941
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !20942
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !20944
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !20945, metadata !94), !dbg !20946
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !20947, metadata !94), !dbg !20948
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !20949, metadata !94), !dbg !20950
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !20951, metadata !94), !dbg !20952
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !20953, metadata !94), !dbg !20954
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !20955, metadata !94), !dbg !20956
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !20957, metadata !94), !dbg !20958
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !20959, metadata !94), !dbg !20960
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !20961, metadata !94), !dbg !20962
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !20963
  %1 = bitcast i8** %0 to i16**, !dbg !20964
  store i16** %1, i16*** %dst, align 8, !dbg !20962
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !20965, metadata !94), !dbg !20966
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !20967
  %3 = bitcast i8** %2 to i16**, !dbg !20968
  store i16** %3, i16*** %src, align 8, !dbg !20966
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !20969, metadata !94), !dbg !20970
  %4 = load i16**, i16*** %src, align 8, !dbg !20971
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !20971
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !20971
  store i16* %5, i16** %src0, align 8, !dbg !20970
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !20972, metadata !94), !dbg !20973
  %6 = load i16**, i16*** %src, align 8, !dbg !20974
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !20974
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !20974
  store i16* %7, i16** %src1, align 8, !dbg !20973
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !20975, metadata !94), !dbg !20976
  %8 = load i16**, i16*** %src, align 8, !dbg !20977
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !20977
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !20977
  store i16* %9, i16** %src2, align 8, !dbg !20976
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !20978, metadata !94), !dbg !20979
  %10 = load i16**, i16*** %dst, align 8, !dbg !20980
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !20980
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !20980
  store i16* %11, i16** %dst0, align 8, !dbg !20979
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !20981, metadata !94), !dbg !20982
  %12 = load i16**, i16*** %dst, align 8, !dbg !20983
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !20983
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !20983
  store i16* %13, i16** %dst1, align 8, !dbg !20982
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !20984, metadata !94), !dbg !20985
  %14 = load i16**, i16*** %dst, align 8, !dbg !20986
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !20986
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !20986
  store i16* %15, i16** %dst2, align 8, !dbg !20985
  call void @llvm.dbg.declare(metadata i32* %y, metadata !20987, metadata !94), !dbg !20988
  call void @llvm.dbg.declare(metadata i32* %x, metadata !20989, metadata !94), !dbg !20990
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !20991, metadata !94), !dbg !20992
  store i32 14, i32* %sh, align 4, !dbg !20992
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !20993, metadata !94), !dbg !20994
  store i32 8192, i32* %rnd, align 4, !dbg !20994
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !20995, metadata !94), !dbg !20996
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !20997
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !20997
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !20997
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !20997
  %conv = sext i16 %17 to i32, !dbg !20997
  store i32 %conv, i32* %y_off_in, align 4, !dbg !20996
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !20998, metadata !94), !dbg !20999
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !21000
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !21000
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !21000
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !21000
  %conv10 = sext i16 %19 to i32, !dbg !21000
  %shl = shl i32 %conv10, 14, !dbg !21001
  store i32 %shl, i32* %y_off_out, align 4, !dbg !20999
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !21002, metadata !94), !dbg !21003
  store i32 2048, i32* %uv_off_in, align 4, !dbg !21003
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !21004, metadata !94), !dbg !21005
  store i32 33562624, i32* %uv_off_out, align 4, !dbg !21005
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !21006, metadata !94), !dbg !21007
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21008
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !21008
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !21008
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !21008
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !21008
  %conv14 = sext i16 %21 to i32, !dbg !21008
  store i32 %conv14, i32* %cyy, align 4, !dbg !21007
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !21009, metadata !94), !dbg !21010
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21011
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !21011
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !21011
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !21011
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !21011
  %conv18 = sext i16 %23 to i32, !dbg !21011
  store i32 %conv18, i32* %cyu, align 4, !dbg !21010
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !21012, metadata !94), !dbg !21013
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21014
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !21014
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !21014
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !21014
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !21014
  %conv22 = sext i16 %25 to i32, !dbg !21014
  store i32 %conv22, i32* %cyv, align 4, !dbg !21013
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !21015, metadata !94), !dbg !21016
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21017
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !21017
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !21017
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !21017
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !21017
  %conv26 = sext i16 %27 to i32, !dbg !21017
  store i32 %conv26, i32* %cuu, align 4, !dbg !21016
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !21018, metadata !94), !dbg !21019
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21020
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !21020
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !21020
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !21020
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !21020
  %conv30 = sext i16 %29 to i32, !dbg !21020
  store i32 %conv30, i32* %cuv, align 4, !dbg !21019
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !21021, metadata !94), !dbg !21022
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21023
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !21023
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !21023
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !21023
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !21023
  %conv34 = sext i16 %31 to i32, !dbg !21023
  store i32 %conv34, i32* %cvu, align 4, !dbg !21022
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !21024, metadata !94), !dbg !21025
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21026
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !21026
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !21026
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !21026
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !21026
  %conv38 = sext i16 %33 to i32, !dbg !21026
  store i32 %conv38, i32* %cvv, align 4, !dbg !21025
  %34 = load i32, i32* %w.addr, align 4, !dbg !21027
  %add = add nsw i32 %34, 1, !dbg !21028
  %sub = sub nsw i32 %add, 1, !dbg !21029
  %shr = ashr i32 %sub, 0, !dbg !21030
  store i32 %shr, i32* %w.addr, align 4, !dbg !21031
  %35 = load i32, i32* %h.addr, align 4, !dbg !21032
  %add39 = add nsw i32 %35, 1, !dbg !21033
  %sub40 = sub nsw i32 %add39, 1, !dbg !21034
  %shr41 = ashr i32 %sub40, 0, !dbg !21035
  store i32 %shr41, i32* %h.addr, align 4, !dbg !21036
  store i32 0, i32* %y, align 4, !dbg !21037
  br label %for.cond, !dbg !21038

for.cond:                                         ; preds = %for.inc106, %entry
  %36 = load i32, i32* %y, align 4, !dbg !21039
  %37 = load i32, i32* %h.addr, align 4, !dbg !21041
  %cmp = icmp slt i32 %36, %37, !dbg !21042
  br i1 %cmp, label %for.body, label %for.end108, !dbg !21043

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !21044
  br label %for.cond43, !dbg !21045

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !21046
  %39 = load i32, i32* %w.addr, align 4, !dbg !21048
  %cmp44 = icmp slt i32 %38, %39, !dbg !21049
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !21050

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !21051, metadata !94), !dbg !21052
  %40 = load i32, i32* %x, align 4, !dbg !21053
  %shl47 = shl i32 %40, 0, !dbg !21054
  %idxprom = sext i32 %shl47 to i64, !dbg !21055
  %41 = load i16*, i16** %src0, align 8, !dbg !21055
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !21055
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !21055
  %conv49 = zext i16 %42 to i32, !dbg !21055
  %43 = load i32, i32* %y_off_in, align 4, !dbg !21056
  %sub50 = sub nsw i32 %conv49, %43, !dbg !21057
  store i32 %sub50, i32* %y00, align 4, !dbg !21052
  call void @llvm.dbg.declare(metadata i32* %u, metadata !21058, metadata !94), !dbg !21059
  %44 = load i32, i32* %x, align 4, !dbg !21060
  %idxprom51 = sext i32 %44 to i64, !dbg !21061
  %45 = load i16*, i16** %src1, align 8, !dbg !21061
  %arrayidx52 = getelementptr inbounds i16, i16* %45, i64 %idxprom51, !dbg !21061
  %46 = load i16, i16* %arrayidx52, align 2, !dbg !21061
  %conv53 = zext i16 %46 to i32, !dbg !21061
  %sub54 = sub nsw i32 %conv53, 2048, !dbg !21062
  store i32 %sub54, i32* %u, align 4, !dbg !21059
  call void @llvm.dbg.declare(metadata i32* %v, metadata !21063, metadata !94), !dbg !21064
  %47 = load i32, i32* %x, align 4, !dbg !21065
  %idxprom55 = sext i32 %47 to i64, !dbg !21066
  %48 = load i16*, i16** %src2, align 8, !dbg !21066
  %arrayidx56 = getelementptr inbounds i16, i16* %48, i64 %idxprom55, !dbg !21066
  %49 = load i16, i16* %arrayidx56, align 2, !dbg !21066
  %conv57 = zext i16 %49 to i32, !dbg !21066
  %sub58 = sub nsw i32 %conv57, 2048, !dbg !21067
  store i32 %sub58, i32* %v, align 4, !dbg !21064
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !21068, metadata !94), !dbg !21069
  %50 = load i32, i32* %cyu, align 4, !dbg !21070
  %51 = load i32, i32* %u, align 4, !dbg !21071
  %mul = mul nsw i32 %50, %51, !dbg !21072
  %52 = load i32, i32* %cyv, align 4, !dbg !21073
  %53 = load i32, i32* %v, align 4, !dbg !21074
  %mul59 = mul nsw i32 %52, %53, !dbg !21075
  %add60 = add nsw i32 %mul, %mul59, !dbg !21076
  %add61 = add nsw i32 %add60, 8192, !dbg !21077
  %54 = load i32, i32* %y_off_out, align 4, !dbg !21078
  %add62 = add nsw i32 %add61, %54, !dbg !21079
  store i32 %add62, i32* %uv_val, align 4, !dbg !21069
  %55 = load i32, i32* %cyy, align 4, !dbg !21080
  %56 = load i32, i32* %y00, align 4, !dbg !21081
  %mul63 = mul nsw i32 %55, %56, !dbg !21082
  %57 = load i32, i32* %uv_val, align 4, !dbg !21083
  %add64 = add nsw i32 %mul63, %57, !dbg !21084
  %shr65 = ashr i32 %add64, 14, !dbg !21085
  store i32 %shr65, i32* %a.addr.i, align 4, !dbg !21086
  store i32 12, i32* %p.addr.i, align 4, !dbg !21086
  %58 = load i32, i32* %a.addr.i, align 4, !dbg !21087
  %59 = load i32, i32* %p.addr.i, align 4, !dbg !21088
  %shl.i = shl i32 1, %59, !dbg !21089
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !21090
  %neg.i = xor i32 %sub.i, -1, !dbg !21091
  %and.i = and i32 %58, %neg.i, !dbg !21092
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !21092
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !21093

if.then.i:                                        ; preds = %for.body46
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !21094
  %neg1.i = xor i32 %60, -1, !dbg !21095
  %shr.i = ashr i32 %neg1.i, 31, !dbg !21096
  %61 = load i32, i32* %p.addr.i, align 4, !dbg !21097
  %shl2.i = shl i32 1, %61, !dbg !21098
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !21099
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !21100
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !21101
  br label %av_clip_uintp2_c.exit, !dbg !21101

if.else.i:                                        ; preds = %for.body46
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !21102
  store i32 %62, i32* %retval.i, align 4, !dbg !21103
  br label %av_clip_uintp2_c.exit, !dbg !21103

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %63 = load i32, i32* %retval.i, align 4, !dbg !21104
  %conv66 = trunc i32 %63 to i16, !dbg !21086
  %64 = load i32, i32* %x, align 4, !dbg !21105
  %shl67 = shl i32 %64, 0, !dbg !21106
  %idxprom68 = sext i32 %shl67 to i64, !dbg !21107
  %65 = load i16*, i16** %dst0, align 8, !dbg !21107
  %arrayidx69 = getelementptr inbounds i16, i16* %65, i64 %idxprom68, !dbg !21107
  store i16 %conv66, i16* %arrayidx69, align 2, !dbg !21108
  %66 = load i32, i32* %u, align 4, !dbg !21109
  %67 = load i32, i32* %cuu, align 4, !dbg !21110
  %mul70 = mul nsw i32 %66, %67, !dbg !21111
  %68 = load i32, i32* %v, align 4, !dbg !21112
  %69 = load i32, i32* %cuv, align 4, !dbg !21113
  %mul71 = mul nsw i32 %68, %69, !dbg !21114
  %add72 = add nsw i32 %mul70, %mul71, !dbg !21115
  %add73 = add nsw i32 %add72, 33562624, !dbg !21116
  %shr74 = ashr i32 %add73, 14, !dbg !21117
  store i32 %shr74, i32* %a.addr.i126, align 4, !dbg !21118
  store i32 12, i32* %p.addr.i127, align 4, !dbg !21118
  %70 = load i32, i32* %a.addr.i126, align 4, !dbg !21119
  %71 = load i32, i32* %p.addr.i127, align 4, !dbg !21120
  %shl.i128 = shl i32 1, %71, !dbg !21121
  %sub.i129 = sub nsw i32 %shl.i128, 1, !dbg !21122
  %neg.i130 = xor i32 %sub.i129, -1, !dbg !21123
  %and.i131 = and i32 %70, %neg.i130, !dbg !21124
  %tobool.i132 = icmp ne i32 %and.i131, 0, !dbg !21124
  br i1 %tobool.i132, label %if.then.i138, label %if.else.i139, !dbg !21125

if.then.i138:                                     ; preds = %av_clip_uintp2_c.exit
  %72 = load i32, i32* %a.addr.i126, align 4, !dbg !21126
  %neg1.i133 = xor i32 %72, -1, !dbg !21127
  %shr.i134 = ashr i32 %neg1.i133, 31, !dbg !21128
  %73 = load i32, i32* %p.addr.i127, align 4, !dbg !21129
  %shl2.i135 = shl i32 1, %73, !dbg !21130
  %sub3.i136 = sub nsw i32 %shl2.i135, 1, !dbg !21131
  %and4.i137 = and i32 %shr.i134, %sub3.i136, !dbg !21132
  store i32 %and4.i137, i32* %retval.i125, align 4, !dbg !21133
  br label %av_clip_uintp2_c.exit140, !dbg !21133

if.else.i139:                                     ; preds = %av_clip_uintp2_c.exit
  %74 = load i32, i32* %a.addr.i126, align 4, !dbg !21134
  store i32 %74, i32* %retval.i125, align 4, !dbg !21135
  br label %av_clip_uintp2_c.exit140, !dbg !21135

av_clip_uintp2_c.exit140:                         ; preds = %if.then.i138, %if.else.i139
  %75 = load i32, i32* %retval.i125, align 4, !dbg !21136
  %conv76 = trunc i32 %75 to i16, !dbg !21118
  %76 = load i32, i32* %x, align 4, !dbg !21137
  %idxprom77 = sext i32 %76 to i64, !dbg !21138
  %77 = load i16*, i16** %dst1, align 8, !dbg !21138
  %arrayidx78 = getelementptr inbounds i16, i16* %77, i64 %idxprom77, !dbg !21138
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !21139
  %78 = load i32, i32* %u, align 4, !dbg !21140
  %79 = load i32, i32* %cvu, align 4, !dbg !21141
  %mul79 = mul nsw i32 %78, %79, !dbg !21142
  %80 = load i32, i32* %v, align 4, !dbg !21143
  %81 = load i32, i32* %cvv, align 4, !dbg !21144
  %mul80 = mul nsw i32 %80, %81, !dbg !21145
  %add81 = add nsw i32 %mul79, %mul80, !dbg !21146
  %add82 = add nsw i32 %add81, 33562624, !dbg !21147
  %shr83 = ashr i32 %add82, 14, !dbg !21148
  store i32 %shr83, i32* %a.addr.i110, align 4, !dbg !21149
  store i32 12, i32* %p.addr.i111, align 4, !dbg !21149
  %82 = load i32, i32* %a.addr.i110, align 4, !dbg !21150
  %83 = load i32, i32* %p.addr.i111, align 4, !dbg !21151
  %shl.i112 = shl i32 1, %83, !dbg !21152
  %sub.i113 = sub nsw i32 %shl.i112, 1, !dbg !21153
  %neg.i114 = xor i32 %sub.i113, -1, !dbg !21154
  %and.i115 = and i32 %82, %neg.i114, !dbg !21155
  %tobool.i116 = icmp ne i32 %and.i115, 0, !dbg !21155
  br i1 %tobool.i116, label %if.then.i122, label %if.else.i123, !dbg !21156

if.then.i122:                                     ; preds = %av_clip_uintp2_c.exit140
  %84 = load i32, i32* %a.addr.i110, align 4, !dbg !21157
  %neg1.i117 = xor i32 %84, -1, !dbg !21158
  %shr.i118 = ashr i32 %neg1.i117, 31, !dbg !21159
  %85 = load i32, i32* %p.addr.i111, align 4, !dbg !21160
  %shl2.i119 = shl i32 1, %85, !dbg !21161
  %sub3.i120 = sub nsw i32 %shl2.i119, 1, !dbg !21162
  %and4.i121 = and i32 %shr.i118, %sub3.i120, !dbg !21163
  store i32 %and4.i121, i32* %retval.i109, align 4, !dbg !21164
  br label %av_clip_uintp2_c.exit124, !dbg !21164

if.else.i123:                                     ; preds = %av_clip_uintp2_c.exit140
  %86 = load i32, i32* %a.addr.i110, align 4, !dbg !21165
  store i32 %86, i32* %retval.i109, align 4, !dbg !21166
  br label %av_clip_uintp2_c.exit124, !dbg !21166

av_clip_uintp2_c.exit124:                         ; preds = %if.then.i122, %if.else.i123
  %87 = load i32, i32* %retval.i109, align 4, !dbg !21167
  %conv85 = trunc i32 %87 to i16, !dbg !21149
  %88 = load i32, i32* %x, align 4, !dbg !21168
  %idxprom86 = sext i32 %88 to i64, !dbg !21169
  %89 = load i16*, i16** %dst2, align 8, !dbg !21169
  %arrayidx87 = getelementptr inbounds i16, i16* %89, i64 %idxprom86, !dbg !21169
  store i16 %conv85, i16* %arrayidx87, align 2, !dbg !21170
  br label %for.inc, !dbg !21171

for.inc:                                          ; preds = %av_clip_uintp2_c.exit124
  %90 = load i32, i32* %x, align 4, !dbg !21172
  %inc = add nsw i32 %90, 1, !dbg !21172
  store i32 %inc, i32* %x, align 4, !dbg !21172
  br label %for.cond43, !dbg !21174, !llvm.loop !21175

for.end:                                          ; preds = %for.cond43
  %91 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21177
  %arrayidx88 = getelementptr inbounds i64, i64* %91, i64 0, !dbg !21177
  %92 = load i64, i64* %arrayidx88, align 8, !dbg !21177
  %mul89 = mul nsw i64 %92, 1, !dbg !21178
  %div = udiv i64 %mul89, 2, !dbg !21179
  %93 = load i16*, i16** %dst0, align 8, !dbg !21180
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %div, !dbg !21180
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !21180
  %94 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21181
  %arrayidx90 = getelementptr inbounds i64, i64* %94, i64 1, !dbg !21181
  %95 = load i64, i64* %arrayidx90, align 8, !dbg !21181
  %div91 = udiv i64 %95, 2, !dbg !21182
  %96 = load i16*, i16** %dst1, align 8, !dbg !21183
  %add.ptr92 = getelementptr inbounds i16, i16* %96, i64 %div91, !dbg !21183
  store i16* %add.ptr92, i16** %dst1, align 8, !dbg !21183
  %97 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21184
  %arrayidx93 = getelementptr inbounds i64, i64* %97, i64 2, !dbg !21184
  %98 = load i64, i64* %arrayidx93, align 8, !dbg !21184
  %div94 = udiv i64 %98, 2, !dbg !21185
  %99 = load i16*, i16** %dst2, align 8, !dbg !21186
  %add.ptr95 = getelementptr inbounds i16, i16* %99, i64 %div94, !dbg !21186
  store i16* %add.ptr95, i16** %dst2, align 8, !dbg !21186
  %100 = load i64*, i64** %src_stride.addr, align 8, !dbg !21187
  %arrayidx96 = getelementptr inbounds i64, i64* %100, i64 0, !dbg !21187
  %101 = load i64, i64* %arrayidx96, align 8, !dbg !21187
  %mul97 = mul nsw i64 %101, 1, !dbg !21188
  %div98 = udiv i64 %mul97, 2, !dbg !21189
  %102 = load i16*, i16** %src0, align 8, !dbg !21190
  %add.ptr99 = getelementptr inbounds i16, i16* %102, i64 %div98, !dbg !21190
  store i16* %add.ptr99, i16** %src0, align 8, !dbg !21190
  %103 = load i64*, i64** %src_stride.addr, align 8, !dbg !21191
  %arrayidx100 = getelementptr inbounds i64, i64* %103, i64 1, !dbg !21191
  %104 = load i64, i64* %arrayidx100, align 8, !dbg !21191
  %div101 = udiv i64 %104, 2, !dbg !21192
  %105 = load i16*, i16** %src1, align 8, !dbg !21193
  %add.ptr102 = getelementptr inbounds i16, i16* %105, i64 %div101, !dbg !21193
  store i16* %add.ptr102, i16** %src1, align 8, !dbg !21193
  %106 = load i64*, i64** %src_stride.addr, align 8, !dbg !21194
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 2, !dbg !21194
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !21194
  %div104 = udiv i64 %107, 2, !dbg !21195
  %108 = load i16*, i16** %src2, align 8, !dbg !21196
  %add.ptr105 = getelementptr inbounds i16, i16* %108, i64 %div104, !dbg !21196
  store i16* %add.ptr105, i16** %src2, align 8, !dbg !21196
  br label %for.inc106, !dbg !21197

for.inc106:                                       ; preds = %for.end
  %109 = load i32, i32* %y, align 4, !dbg !21198
  %inc107 = add nsw i32 %109, 1, !dbg !21198
  store i32 %inc107, i32* %y, align 4, !dbg !21198
  br label %for.cond, !dbg !21200, !llvm.loop !21201

for.end108:                                       ; preds = %for.cond
  ret void, !dbg !21203
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_422p12to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !21204 {
entry:
  %retval.i156 = alloca i32, align 4
  %a.addr.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i157, metadata !4652, metadata !94), !dbg !21205
  %p.addr.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i158, metadata !4665, metadata !94), !dbg !21213
  %retval.i140 = alloca i32, align 4
  %a.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i141, metadata !4652, metadata !94), !dbg !21214
  %p.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i142, metadata !4665, metadata !94), !dbg !21216
  %retval.i124 = alloca i32, align 4
  %a.addr.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i125, metadata !4652, metadata !94), !dbg !21217
  %p.addr.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i126, metadata !4665, metadata !94), !dbg !21219
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !21220
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !21222
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !21223, metadata !94), !dbg !21224
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !21225, metadata !94), !dbg !21226
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !21227, metadata !94), !dbg !21228
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !21229, metadata !94), !dbg !21230
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !21231, metadata !94), !dbg !21232
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !21233, metadata !94), !dbg !21234
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !21235, metadata !94), !dbg !21236
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !21237, metadata !94), !dbg !21238
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !21239, metadata !94), !dbg !21240
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !21241
  %1 = bitcast i8** %0 to i16**, !dbg !21242
  store i16** %1, i16*** %dst, align 8, !dbg !21240
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !21243, metadata !94), !dbg !21244
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !21245
  %3 = bitcast i8** %2 to i16**, !dbg !21246
  store i16** %3, i16*** %src, align 8, !dbg !21244
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !21247, metadata !94), !dbg !21248
  %4 = load i16**, i16*** %src, align 8, !dbg !21249
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !21249
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !21249
  store i16* %5, i16** %src0, align 8, !dbg !21248
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !21250, metadata !94), !dbg !21251
  %6 = load i16**, i16*** %src, align 8, !dbg !21252
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !21252
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !21252
  store i16* %7, i16** %src1, align 8, !dbg !21251
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !21253, metadata !94), !dbg !21254
  %8 = load i16**, i16*** %src, align 8, !dbg !21255
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !21255
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !21255
  store i16* %9, i16** %src2, align 8, !dbg !21254
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !21256, metadata !94), !dbg !21257
  %10 = load i16**, i16*** %dst, align 8, !dbg !21258
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !21258
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !21258
  store i16* %11, i16** %dst0, align 8, !dbg !21257
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !21259, metadata !94), !dbg !21260
  %12 = load i16**, i16*** %dst, align 8, !dbg !21261
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !21261
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !21261
  store i16* %13, i16** %dst1, align 8, !dbg !21260
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !21262, metadata !94), !dbg !21263
  %14 = load i16**, i16*** %dst, align 8, !dbg !21264
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !21264
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !21264
  store i16* %15, i16** %dst2, align 8, !dbg !21263
  call void @llvm.dbg.declare(metadata i32* %y, metadata !21265, metadata !94), !dbg !21266
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21267, metadata !94), !dbg !21268
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !21269, metadata !94), !dbg !21270
  store i32 14, i32* %sh, align 4, !dbg !21270
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !21271, metadata !94), !dbg !21272
  store i32 8192, i32* %rnd, align 4, !dbg !21272
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !21273, metadata !94), !dbg !21274
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !21275
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !21275
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !21275
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !21275
  %conv = sext i16 %17 to i32, !dbg !21275
  store i32 %conv, i32* %y_off_in, align 4, !dbg !21274
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !21276, metadata !94), !dbg !21277
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !21278
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !21278
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !21278
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !21278
  %conv10 = sext i16 %19 to i32, !dbg !21278
  %shl = shl i32 %conv10, 14, !dbg !21279
  store i32 %shl, i32* %y_off_out, align 4, !dbg !21277
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !21280, metadata !94), !dbg !21281
  store i32 2048, i32* %uv_off_in, align 4, !dbg !21281
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !21282, metadata !94), !dbg !21283
  store i32 33562624, i32* %uv_off_out, align 4, !dbg !21283
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !21284, metadata !94), !dbg !21285
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21286
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !21286
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !21286
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !21286
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !21286
  %conv14 = sext i16 %21 to i32, !dbg !21286
  store i32 %conv14, i32* %cyy, align 4, !dbg !21285
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !21287, metadata !94), !dbg !21288
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21289
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !21289
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !21289
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !21289
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !21289
  %conv18 = sext i16 %23 to i32, !dbg !21289
  store i32 %conv18, i32* %cyu, align 4, !dbg !21288
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !21290, metadata !94), !dbg !21291
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21292
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !21292
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !21292
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !21292
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !21292
  %conv22 = sext i16 %25 to i32, !dbg !21292
  store i32 %conv22, i32* %cyv, align 4, !dbg !21291
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !21293, metadata !94), !dbg !21294
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21295
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !21295
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !21295
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !21295
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !21295
  %conv26 = sext i16 %27 to i32, !dbg !21295
  store i32 %conv26, i32* %cuu, align 4, !dbg !21294
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !21296, metadata !94), !dbg !21297
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21298
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !21298
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !21298
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !21298
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !21298
  %conv30 = sext i16 %29 to i32, !dbg !21298
  store i32 %conv30, i32* %cuv, align 4, !dbg !21297
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !21299, metadata !94), !dbg !21300
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21301
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !21301
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !21301
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !21301
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !21301
  %conv34 = sext i16 %31 to i32, !dbg !21301
  store i32 %conv34, i32* %cvu, align 4, !dbg !21300
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !21302, metadata !94), !dbg !21303
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21304
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !21304
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !21304
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !21304
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !21304
  %conv38 = sext i16 %33 to i32, !dbg !21304
  store i32 %conv38, i32* %cvv, align 4, !dbg !21303
  %34 = load i32, i32* %w.addr, align 4, !dbg !21305
  %add = add nsw i32 %34, 2, !dbg !21306
  %sub = sub nsw i32 %add, 1, !dbg !21307
  %shr = ashr i32 %sub, 1, !dbg !21308
  store i32 %shr, i32* %w.addr, align 4, !dbg !21309
  %35 = load i32, i32* %h.addr, align 4, !dbg !21310
  %add39 = add nsw i32 %35, 1, !dbg !21311
  %sub40 = sub nsw i32 %add39, 1, !dbg !21312
  %shr41 = ashr i32 %sub40, 0, !dbg !21313
  store i32 %shr41, i32* %h.addr, align 4, !dbg !21314
  store i32 0, i32* %y, align 4, !dbg !21315
  br label %for.cond, !dbg !21316

for.cond:                                         ; preds = %for.inc121, %entry
  %36 = load i32, i32* %y, align 4, !dbg !21317
  %37 = load i32, i32* %h.addr, align 4, !dbg !21319
  %cmp = icmp slt i32 %36, %37, !dbg !21320
  br i1 %cmp, label %for.body, label %for.end123, !dbg !21321

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !21322
  br label %for.cond43, !dbg !21323

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !21324
  %39 = load i32, i32* %w.addr, align 4, !dbg !21326
  %cmp44 = icmp slt i32 %38, %39, !dbg !21327
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !21328

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !21329, metadata !94), !dbg !21330
  %40 = load i32, i32* %x, align 4, !dbg !21331
  %shl47 = shl i32 %40, 1, !dbg !21332
  %idxprom = sext i32 %shl47 to i64, !dbg !21333
  %41 = load i16*, i16** %src0, align 8, !dbg !21333
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !21333
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !21333
  %conv49 = zext i16 %42 to i32, !dbg !21333
  %43 = load i32, i32* %y_off_in, align 4, !dbg !21334
  %sub50 = sub nsw i32 %conv49, %43, !dbg !21335
  store i32 %sub50, i32* %y00, align 4, !dbg !21330
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !21336, metadata !94), !dbg !21337
  %44 = load i32, i32* %x, align 4, !dbg !21338
  %mul = mul nsw i32 2, %44, !dbg !21339
  %add51 = add nsw i32 %mul, 1, !dbg !21340
  %idxprom52 = sext i32 %add51 to i64, !dbg !21341
  %45 = load i16*, i16** %src0, align 8, !dbg !21341
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !21341
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !21341
  %conv54 = zext i16 %46 to i32, !dbg !21341
  %47 = load i32, i32* %y_off_in, align 4, !dbg !21342
  %sub55 = sub nsw i32 %conv54, %47, !dbg !21343
  store i32 %sub55, i32* %y01, align 4, !dbg !21337
  call void @llvm.dbg.declare(metadata i32* %u, metadata !21344, metadata !94), !dbg !21345
  %48 = load i32, i32* %x, align 4, !dbg !21346
  %idxprom56 = sext i32 %48 to i64, !dbg !21347
  %49 = load i16*, i16** %src1, align 8, !dbg !21347
  %arrayidx57 = getelementptr inbounds i16, i16* %49, i64 %idxprom56, !dbg !21347
  %50 = load i16, i16* %arrayidx57, align 2, !dbg !21347
  %conv58 = zext i16 %50 to i32, !dbg !21347
  %sub59 = sub nsw i32 %conv58, 2048, !dbg !21348
  store i32 %sub59, i32* %u, align 4, !dbg !21345
  call void @llvm.dbg.declare(metadata i32* %v, metadata !21349, metadata !94), !dbg !21350
  %51 = load i32, i32* %x, align 4, !dbg !21351
  %idxprom60 = sext i32 %51 to i64, !dbg !21352
  %52 = load i16*, i16** %src2, align 8, !dbg !21352
  %arrayidx61 = getelementptr inbounds i16, i16* %52, i64 %idxprom60, !dbg !21352
  %53 = load i16, i16* %arrayidx61, align 2, !dbg !21352
  %conv62 = zext i16 %53 to i32, !dbg !21352
  %sub63 = sub nsw i32 %conv62, 2048, !dbg !21353
  store i32 %sub63, i32* %v, align 4, !dbg !21350
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !21354, metadata !94), !dbg !21355
  %54 = load i32, i32* %cyu, align 4, !dbg !21356
  %55 = load i32, i32* %u, align 4, !dbg !21357
  %mul64 = mul nsw i32 %54, %55, !dbg !21358
  %56 = load i32, i32* %cyv, align 4, !dbg !21359
  %57 = load i32, i32* %v, align 4, !dbg !21360
  %mul65 = mul nsw i32 %56, %57, !dbg !21361
  %add66 = add nsw i32 %mul64, %mul65, !dbg !21362
  %add67 = add nsw i32 %add66, 8192, !dbg !21363
  %58 = load i32, i32* %y_off_out, align 4, !dbg !21364
  %add68 = add nsw i32 %add67, %58, !dbg !21365
  store i32 %add68, i32* %uv_val, align 4, !dbg !21355
  %59 = load i32, i32* %cyy, align 4, !dbg !21366
  %60 = load i32, i32* %y00, align 4, !dbg !21367
  %mul69 = mul nsw i32 %59, %60, !dbg !21368
  %61 = load i32, i32* %uv_val, align 4, !dbg !21369
  %add70 = add nsw i32 %mul69, %61, !dbg !21370
  %shr71 = ashr i32 %add70, 14, !dbg !21371
  store i32 %shr71, i32* %a.addr.i, align 4, !dbg !21372
  store i32 12, i32* %p.addr.i, align 4, !dbg !21372
  %62 = load i32, i32* %a.addr.i, align 4, !dbg !21373
  %63 = load i32, i32* %p.addr.i, align 4, !dbg !21374
  %shl.i = shl i32 1, %63, !dbg !21375
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !21376
  %neg.i = xor i32 %sub.i, -1, !dbg !21377
  %and.i = and i32 %62, %neg.i, !dbg !21378
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !21378
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !21379

if.then.i:                                        ; preds = %for.body46
  %64 = load i32, i32* %a.addr.i, align 4, !dbg !21380
  %neg1.i = xor i32 %64, -1, !dbg !21381
  %shr.i = ashr i32 %neg1.i, 31, !dbg !21382
  %65 = load i32, i32* %p.addr.i, align 4, !dbg !21383
  %shl2.i = shl i32 1, %65, !dbg !21384
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !21385
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !21386
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !21387
  br label %av_clip_uintp2_c.exit, !dbg !21387

if.else.i:                                        ; preds = %for.body46
  %66 = load i32, i32* %a.addr.i, align 4, !dbg !21388
  store i32 %66, i32* %retval.i, align 4, !dbg !21389
  br label %av_clip_uintp2_c.exit, !dbg !21389

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %67 = load i32, i32* %retval.i, align 4, !dbg !21390
  %conv72 = trunc i32 %67 to i16, !dbg !21372
  %68 = load i32, i32* %x, align 4, !dbg !21391
  %shl73 = shl i32 %68, 1, !dbg !21392
  %idxprom74 = sext i32 %shl73 to i64, !dbg !21393
  %69 = load i16*, i16** %dst0, align 8, !dbg !21393
  %arrayidx75 = getelementptr inbounds i16, i16* %69, i64 %idxprom74, !dbg !21393
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !21394
  %70 = load i32, i32* %cyy, align 4, !dbg !21395
  %71 = load i32, i32* %y01, align 4, !dbg !21396
  %mul76 = mul nsw i32 %70, %71, !dbg !21397
  %72 = load i32, i32* %uv_val, align 4, !dbg !21398
  %add77 = add nsw i32 %mul76, %72, !dbg !21399
  %shr78 = ashr i32 %add77, 14, !dbg !21400
  store i32 %shr78, i32* %a.addr.i157, align 4, !dbg !21401
  store i32 12, i32* %p.addr.i158, align 4, !dbg !21401
  %73 = load i32, i32* %a.addr.i157, align 4, !dbg !21402
  %74 = load i32, i32* %p.addr.i158, align 4, !dbg !21403
  %shl.i159 = shl i32 1, %74, !dbg !21404
  %sub.i160 = sub nsw i32 %shl.i159, 1, !dbg !21405
  %neg.i161 = xor i32 %sub.i160, -1, !dbg !21406
  %and.i162 = and i32 %73, %neg.i161, !dbg !21407
  %tobool.i163 = icmp ne i32 %and.i162, 0, !dbg !21407
  br i1 %tobool.i163, label %if.then.i169, label %if.else.i170, !dbg !21408

if.then.i169:                                     ; preds = %av_clip_uintp2_c.exit
  %75 = load i32, i32* %a.addr.i157, align 4, !dbg !21409
  %neg1.i164 = xor i32 %75, -1, !dbg !21410
  %shr.i165 = ashr i32 %neg1.i164, 31, !dbg !21411
  %76 = load i32, i32* %p.addr.i158, align 4, !dbg !21412
  %shl2.i166 = shl i32 1, %76, !dbg !21413
  %sub3.i167 = sub nsw i32 %shl2.i166, 1, !dbg !21414
  %and4.i168 = and i32 %shr.i165, %sub3.i167, !dbg !21415
  store i32 %and4.i168, i32* %retval.i156, align 4, !dbg !21416
  br label %av_clip_uintp2_c.exit171, !dbg !21416

if.else.i170:                                     ; preds = %av_clip_uintp2_c.exit
  %77 = load i32, i32* %a.addr.i157, align 4, !dbg !21417
  store i32 %77, i32* %retval.i156, align 4, !dbg !21418
  br label %av_clip_uintp2_c.exit171, !dbg !21418

av_clip_uintp2_c.exit171:                         ; preds = %if.then.i169, %if.else.i170
  %78 = load i32, i32* %retval.i156, align 4, !dbg !21419
  %conv80 = trunc i32 %78 to i16, !dbg !21401
  %79 = load i32, i32* %x, align 4, !dbg !21420
  %mul81 = mul nsw i32 %79, 2, !dbg !21421
  %add82 = add nsw i32 %mul81, 1, !dbg !21422
  %idxprom83 = sext i32 %add82 to i64, !dbg !21423
  %80 = load i16*, i16** %dst0, align 8, !dbg !21423
  %arrayidx84 = getelementptr inbounds i16, i16* %80, i64 %idxprom83, !dbg !21423
  store i16 %conv80, i16* %arrayidx84, align 2, !dbg !21424
  %81 = load i32, i32* %u, align 4, !dbg !21425
  %82 = load i32, i32* %cuu, align 4, !dbg !21426
  %mul85 = mul nsw i32 %81, %82, !dbg !21427
  %83 = load i32, i32* %v, align 4, !dbg !21428
  %84 = load i32, i32* %cuv, align 4, !dbg !21429
  %mul86 = mul nsw i32 %83, %84, !dbg !21430
  %add87 = add nsw i32 %mul85, %mul86, !dbg !21431
  %add88 = add nsw i32 %add87, 33562624, !dbg !21432
  %shr89 = ashr i32 %add88, 14, !dbg !21433
  store i32 %shr89, i32* %a.addr.i141, align 4, !dbg !21434
  store i32 12, i32* %p.addr.i142, align 4, !dbg !21434
  %85 = load i32, i32* %a.addr.i141, align 4, !dbg !21435
  %86 = load i32, i32* %p.addr.i142, align 4, !dbg !21436
  %shl.i143 = shl i32 1, %86, !dbg !21437
  %sub.i144 = sub nsw i32 %shl.i143, 1, !dbg !21438
  %neg.i145 = xor i32 %sub.i144, -1, !dbg !21439
  %and.i146 = and i32 %85, %neg.i145, !dbg !21440
  %tobool.i147 = icmp ne i32 %and.i146, 0, !dbg !21440
  br i1 %tobool.i147, label %if.then.i153, label %if.else.i154, !dbg !21441

if.then.i153:                                     ; preds = %av_clip_uintp2_c.exit171
  %87 = load i32, i32* %a.addr.i141, align 4, !dbg !21442
  %neg1.i148 = xor i32 %87, -1, !dbg !21443
  %shr.i149 = ashr i32 %neg1.i148, 31, !dbg !21444
  %88 = load i32, i32* %p.addr.i142, align 4, !dbg !21445
  %shl2.i150 = shl i32 1, %88, !dbg !21446
  %sub3.i151 = sub nsw i32 %shl2.i150, 1, !dbg !21447
  %and4.i152 = and i32 %shr.i149, %sub3.i151, !dbg !21448
  store i32 %and4.i152, i32* %retval.i140, align 4, !dbg !21449
  br label %av_clip_uintp2_c.exit155, !dbg !21449

if.else.i154:                                     ; preds = %av_clip_uintp2_c.exit171
  %89 = load i32, i32* %a.addr.i141, align 4, !dbg !21450
  store i32 %89, i32* %retval.i140, align 4, !dbg !21451
  br label %av_clip_uintp2_c.exit155, !dbg !21451

av_clip_uintp2_c.exit155:                         ; preds = %if.then.i153, %if.else.i154
  %90 = load i32, i32* %retval.i140, align 4, !dbg !21452
  %conv91 = trunc i32 %90 to i16, !dbg !21434
  %91 = load i32, i32* %x, align 4, !dbg !21453
  %idxprom92 = sext i32 %91 to i64, !dbg !21454
  %92 = load i16*, i16** %dst1, align 8, !dbg !21454
  %arrayidx93 = getelementptr inbounds i16, i16* %92, i64 %idxprom92, !dbg !21454
  store i16 %conv91, i16* %arrayidx93, align 2, !dbg !21455
  %93 = load i32, i32* %u, align 4, !dbg !21456
  %94 = load i32, i32* %cvu, align 4, !dbg !21457
  %mul94 = mul nsw i32 %93, %94, !dbg !21458
  %95 = load i32, i32* %v, align 4, !dbg !21459
  %96 = load i32, i32* %cvv, align 4, !dbg !21460
  %mul95 = mul nsw i32 %95, %96, !dbg !21461
  %add96 = add nsw i32 %mul94, %mul95, !dbg !21462
  %add97 = add nsw i32 %add96, 33562624, !dbg !21463
  %shr98 = ashr i32 %add97, 14, !dbg !21464
  store i32 %shr98, i32* %a.addr.i125, align 4, !dbg !21465
  store i32 12, i32* %p.addr.i126, align 4, !dbg !21465
  %97 = load i32, i32* %a.addr.i125, align 4, !dbg !21466
  %98 = load i32, i32* %p.addr.i126, align 4, !dbg !21467
  %shl.i127 = shl i32 1, %98, !dbg !21468
  %sub.i128 = sub nsw i32 %shl.i127, 1, !dbg !21469
  %neg.i129 = xor i32 %sub.i128, -1, !dbg !21470
  %and.i130 = and i32 %97, %neg.i129, !dbg !21471
  %tobool.i131 = icmp ne i32 %and.i130, 0, !dbg !21471
  br i1 %tobool.i131, label %if.then.i137, label %if.else.i138, !dbg !21472

if.then.i137:                                     ; preds = %av_clip_uintp2_c.exit155
  %99 = load i32, i32* %a.addr.i125, align 4, !dbg !21473
  %neg1.i132 = xor i32 %99, -1, !dbg !21474
  %shr.i133 = ashr i32 %neg1.i132, 31, !dbg !21475
  %100 = load i32, i32* %p.addr.i126, align 4, !dbg !21476
  %shl2.i134 = shl i32 1, %100, !dbg !21477
  %sub3.i135 = sub nsw i32 %shl2.i134, 1, !dbg !21478
  %and4.i136 = and i32 %shr.i133, %sub3.i135, !dbg !21479
  store i32 %and4.i136, i32* %retval.i124, align 4, !dbg !21480
  br label %av_clip_uintp2_c.exit139, !dbg !21480

if.else.i138:                                     ; preds = %av_clip_uintp2_c.exit155
  %101 = load i32, i32* %a.addr.i125, align 4, !dbg !21481
  store i32 %101, i32* %retval.i124, align 4, !dbg !21482
  br label %av_clip_uintp2_c.exit139, !dbg !21482

av_clip_uintp2_c.exit139:                         ; preds = %if.then.i137, %if.else.i138
  %102 = load i32, i32* %retval.i124, align 4, !dbg !21483
  %conv100 = trunc i32 %102 to i16, !dbg !21465
  %103 = load i32, i32* %x, align 4, !dbg !21484
  %idxprom101 = sext i32 %103 to i64, !dbg !21485
  %104 = load i16*, i16** %dst2, align 8, !dbg !21485
  %arrayidx102 = getelementptr inbounds i16, i16* %104, i64 %idxprom101, !dbg !21485
  store i16 %conv100, i16* %arrayidx102, align 2, !dbg !21486
  br label %for.inc, !dbg !21487

for.inc:                                          ; preds = %av_clip_uintp2_c.exit139
  %105 = load i32, i32* %x, align 4, !dbg !21488
  %inc = add nsw i32 %105, 1, !dbg !21488
  store i32 %inc, i32* %x, align 4, !dbg !21488
  br label %for.cond43, !dbg !21490, !llvm.loop !21491

for.end:                                          ; preds = %for.cond43
  %106 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21493
  %arrayidx103 = getelementptr inbounds i64, i64* %106, i64 0, !dbg !21493
  %107 = load i64, i64* %arrayidx103, align 8, !dbg !21493
  %mul104 = mul nsw i64 %107, 1, !dbg !21494
  %div = udiv i64 %mul104, 2, !dbg !21495
  %108 = load i16*, i16** %dst0, align 8, !dbg !21496
  %add.ptr = getelementptr inbounds i16, i16* %108, i64 %div, !dbg !21496
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !21496
  %109 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21497
  %arrayidx105 = getelementptr inbounds i64, i64* %109, i64 1, !dbg !21497
  %110 = load i64, i64* %arrayidx105, align 8, !dbg !21497
  %div106 = udiv i64 %110, 2, !dbg !21498
  %111 = load i16*, i16** %dst1, align 8, !dbg !21499
  %add.ptr107 = getelementptr inbounds i16, i16* %111, i64 %div106, !dbg !21499
  store i16* %add.ptr107, i16** %dst1, align 8, !dbg !21499
  %112 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21500
  %arrayidx108 = getelementptr inbounds i64, i64* %112, i64 2, !dbg !21500
  %113 = load i64, i64* %arrayidx108, align 8, !dbg !21500
  %div109 = udiv i64 %113, 2, !dbg !21501
  %114 = load i16*, i16** %dst2, align 8, !dbg !21502
  %add.ptr110 = getelementptr inbounds i16, i16* %114, i64 %div109, !dbg !21502
  store i16* %add.ptr110, i16** %dst2, align 8, !dbg !21502
  %115 = load i64*, i64** %src_stride.addr, align 8, !dbg !21503
  %arrayidx111 = getelementptr inbounds i64, i64* %115, i64 0, !dbg !21503
  %116 = load i64, i64* %arrayidx111, align 8, !dbg !21503
  %mul112 = mul nsw i64 %116, 1, !dbg !21504
  %div113 = udiv i64 %mul112, 2, !dbg !21505
  %117 = load i16*, i16** %src0, align 8, !dbg !21506
  %add.ptr114 = getelementptr inbounds i16, i16* %117, i64 %div113, !dbg !21506
  store i16* %add.ptr114, i16** %src0, align 8, !dbg !21506
  %118 = load i64*, i64** %src_stride.addr, align 8, !dbg !21507
  %arrayidx115 = getelementptr inbounds i64, i64* %118, i64 1, !dbg !21507
  %119 = load i64, i64* %arrayidx115, align 8, !dbg !21507
  %div116 = udiv i64 %119, 2, !dbg !21508
  %120 = load i16*, i16** %src1, align 8, !dbg !21509
  %add.ptr117 = getelementptr inbounds i16, i16* %120, i64 %div116, !dbg !21509
  store i16* %add.ptr117, i16** %src1, align 8, !dbg !21509
  %121 = load i64*, i64** %src_stride.addr, align 8, !dbg !21510
  %arrayidx118 = getelementptr inbounds i64, i64* %121, i64 2, !dbg !21510
  %122 = load i64, i64* %arrayidx118, align 8, !dbg !21510
  %div119 = udiv i64 %122, 2, !dbg !21511
  %123 = load i16*, i16** %src2, align 8, !dbg !21512
  %add.ptr120 = getelementptr inbounds i16, i16* %123, i64 %div119, !dbg !21512
  store i16* %add.ptr120, i16** %src2, align 8, !dbg !21512
  br label %for.inc121, !dbg !21513

for.inc121:                                       ; preds = %for.end
  %124 = load i32, i32* %y, align 4, !dbg !21514
  %inc122 = add nsw i32 %124, 1, !dbg !21514
  store i32 %inc122, i32* %y, align 4, !dbg !21514
  br label %for.cond, !dbg !21516, !llvm.loop !21517

for.end123:                                       ; preds = %for.cond
  ret void, !dbg !21519
}

; Function Attrs: nounwind uwtable
define internal void @yuv2yuv_420p12to12_c(i8** %_dst, i64* %dst_stride, i8** %_src, i64* %src_stride, i32 %w, i32 %h, [3 x [8 x i16]]* %c, [8 x i16]* %yuv_offset) #0 !dbg !21520 {
entry:
  %retval.i229 = alloca i32, align 4
  %a.addr.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i230, metadata !4652, metadata !94), !dbg !21521
  %p.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i231, metadata !4665, metadata !94), !dbg !21529
  %retval.i213 = alloca i32, align 4
  %a.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i214, metadata !4652, metadata !94), !dbg !21530
  %p.addr.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i215, metadata !4665, metadata !94), !dbg !21532
  %retval.i197 = alloca i32, align 4
  %a.addr.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i198, metadata !4652, metadata !94), !dbg !21533
  %p.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i199, metadata !4665, metadata !94), !dbg !21535
  %retval.i181 = alloca i32, align 4
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !4652, metadata !94), !dbg !21536
  %p.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i183, metadata !4665, metadata !94), !dbg !21538
  %retval.i165 = alloca i32, align 4
  %a.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i166, metadata !4652, metadata !94), !dbg !21539
  %p.addr.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i167, metadata !4665, metadata !94), !dbg !21541
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4652, metadata !94), !dbg !21542
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !4665, metadata !94), !dbg !21544
  %_dst.addr = alloca i8**, align 8
  %dst_stride.addr = alloca i64*, align 8
  %_src.addr = alloca i8**, align 8
  %src_stride.addr = alloca i64*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %c.addr = alloca [3 x [8 x i16]]*, align 8
  %yuv_offset.addr = alloca [8 x i16]*, align 8
  %dst = alloca i16**, align 8
  %src = alloca i16**, align 8
  %src0 = alloca i16*, align 8
  %src1 = alloca i16*, align 8
  %src2 = alloca i16*, align 8
  %dst0 = alloca i16*, align 8
  %dst1 = alloca i16*, align 8
  %dst2 = alloca i16*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %sh = alloca i32, align 4
  %rnd = alloca i32, align 4
  %y_off_in = alloca i32, align 4
  %y_off_out = alloca i32, align 4
  %uv_off_in = alloca i32, align 4
  %uv_off_out = alloca i32, align 4
  %cyy = alloca i32, align 4
  %cyu = alloca i32, align 4
  %cyv = alloca i32, align 4
  %cuu = alloca i32, align 4
  %cuv = alloca i32, align 4
  %cvu = alloca i32, align 4
  %cvv = alloca i32, align 4
  %y00 = alloca i32, align 4
  %y01 = alloca i32, align 4
  %y10 = alloca i32, align 4
  %y11 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %uv_val = alloca i32, align 4
  store i8** %_dst, i8*** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_dst.addr, metadata !21545, metadata !94), !dbg !21546
  store i64* %dst_stride, i64** %dst_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst_stride.addr, metadata !21547, metadata !94), !dbg !21548
  store i8** %_src, i8*** %_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_src.addr, metadata !21549, metadata !94), !dbg !21550
  store i64* %src_stride, i64** %src_stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src_stride.addr, metadata !21551, metadata !94), !dbg !21552
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !21553, metadata !94), !dbg !21554
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !21555, metadata !94), !dbg !21556
  store [3 x [8 x i16]]* %c, [3 x [8 x i16]]** %c.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %c.addr, metadata !21557, metadata !94), !dbg !21558
  store [8 x i16]* %yuv_offset, [8 x i16]** %yuv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata [8 x i16]** %yuv_offset.addr, metadata !21559, metadata !94), !dbg !21560
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !21561, metadata !94), !dbg !21562
  %0 = load i8**, i8*** %_dst.addr, align 8, !dbg !21563
  %1 = bitcast i8** %0 to i16**, !dbg !21564
  store i16** %1, i16*** %dst, align 8, !dbg !21562
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !21565, metadata !94), !dbg !21566
  %2 = load i8**, i8*** %_src.addr, align 8, !dbg !21567
  %3 = bitcast i8** %2 to i16**, !dbg !21568
  store i16** %3, i16*** %src, align 8, !dbg !21566
  call void @llvm.dbg.declare(metadata i16** %src0, metadata !21569, metadata !94), !dbg !21570
  %4 = load i16**, i16*** %src, align 8, !dbg !21571
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 0, !dbg !21571
  %5 = load i16*, i16** %arrayidx, align 8, !dbg !21571
  store i16* %5, i16** %src0, align 8, !dbg !21570
  call void @llvm.dbg.declare(metadata i16** %src1, metadata !21572, metadata !94), !dbg !21573
  %6 = load i16**, i16*** %src, align 8, !dbg !21574
  %arrayidx1 = getelementptr inbounds i16*, i16** %6, i64 1, !dbg !21574
  %7 = load i16*, i16** %arrayidx1, align 8, !dbg !21574
  store i16* %7, i16** %src1, align 8, !dbg !21573
  call void @llvm.dbg.declare(metadata i16** %src2, metadata !21575, metadata !94), !dbg !21576
  %8 = load i16**, i16*** %src, align 8, !dbg !21577
  %arrayidx2 = getelementptr inbounds i16*, i16** %8, i64 2, !dbg !21577
  %9 = load i16*, i16** %arrayidx2, align 8, !dbg !21577
  store i16* %9, i16** %src2, align 8, !dbg !21576
  call void @llvm.dbg.declare(metadata i16** %dst0, metadata !21578, metadata !94), !dbg !21579
  %10 = load i16**, i16*** %dst, align 8, !dbg !21580
  %arrayidx3 = getelementptr inbounds i16*, i16** %10, i64 0, !dbg !21580
  %11 = load i16*, i16** %arrayidx3, align 8, !dbg !21580
  store i16* %11, i16** %dst0, align 8, !dbg !21579
  call void @llvm.dbg.declare(metadata i16** %dst1, metadata !21581, metadata !94), !dbg !21582
  %12 = load i16**, i16*** %dst, align 8, !dbg !21583
  %arrayidx4 = getelementptr inbounds i16*, i16** %12, i64 1, !dbg !21583
  %13 = load i16*, i16** %arrayidx4, align 8, !dbg !21583
  store i16* %13, i16** %dst1, align 8, !dbg !21582
  call void @llvm.dbg.declare(metadata i16** %dst2, metadata !21584, metadata !94), !dbg !21585
  %14 = load i16**, i16*** %dst, align 8, !dbg !21586
  %arrayidx5 = getelementptr inbounds i16*, i16** %14, i64 2, !dbg !21586
  %15 = load i16*, i16** %arrayidx5, align 8, !dbg !21586
  store i16* %15, i16** %dst2, align 8, !dbg !21585
  call void @llvm.dbg.declare(metadata i32* %y, metadata !21587, metadata !94), !dbg !21588
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21589, metadata !94), !dbg !21590
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !21591, metadata !94), !dbg !21592
  store i32 14, i32* %sh, align 4, !dbg !21592
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !21593, metadata !94), !dbg !21594
  store i32 8192, i32* %rnd, align 4, !dbg !21594
  call void @llvm.dbg.declare(metadata i32* %y_off_in, metadata !21595, metadata !94), !dbg !21596
  %16 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !21597
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %16, i64 0, !dbg !21597
  %arrayidx7 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx6, i64 0, i64 0, !dbg !21597
  %17 = load i16, i16* %arrayidx7, align 2, !dbg !21597
  %conv = sext i16 %17 to i32, !dbg !21597
  store i32 %conv, i32* %y_off_in, align 4, !dbg !21596
  call void @llvm.dbg.declare(metadata i32* %y_off_out, metadata !21598, metadata !94), !dbg !21599
  %18 = load [8 x i16]*, [8 x i16]** %yuv_offset.addr, align 8, !dbg !21600
  %arrayidx8 = getelementptr inbounds [8 x i16], [8 x i16]* %18, i64 1, !dbg !21600
  %arrayidx9 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx8, i64 0, i64 0, !dbg !21600
  %19 = load i16, i16* %arrayidx9, align 2, !dbg !21600
  %conv10 = sext i16 %19 to i32, !dbg !21600
  %shl = shl i32 %conv10, 14, !dbg !21601
  store i32 %shl, i32* %y_off_out, align 4, !dbg !21599
  call void @llvm.dbg.declare(metadata i32* %uv_off_in, metadata !21602, metadata !94), !dbg !21603
  store i32 2048, i32* %uv_off_in, align 4, !dbg !21603
  call void @llvm.dbg.declare(metadata i32* %uv_off_out, metadata !21604, metadata !94), !dbg !21605
  store i32 33562624, i32* %uv_off_out, align 4, !dbg !21605
  call void @llvm.dbg.declare(metadata i32* %cyy, metadata !21606, metadata !94), !dbg !21607
  %20 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21608
  %arrayidx11 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %20, i64 0, !dbg !21608
  %arrayidx12 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx11, i64 0, i64 0, !dbg !21608
  %arrayidx13 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx12, i64 0, i64 0, !dbg !21608
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !21608
  %conv14 = sext i16 %21 to i32, !dbg !21608
  store i32 %conv14, i32* %cyy, align 4, !dbg !21607
  call void @llvm.dbg.declare(metadata i32* %cyu, metadata !21609, metadata !94), !dbg !21610
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21611
  %arrayidx15 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !21611
  %arrayidx16 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx15, i64 0, i64 1, !dbg !21611
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx16, i64 0, i64 0, !dbg !21611
  %23 = load i16, i16* %arrayidx17, align 2, !dbg !21611
  %conv18 = sext i16 %23 to i32, !dbg !21611
  store i32 %conv18, i32* %cyu, align 4, !dbg !21610
  call void @llvm.dbg.declare(metadata i32* %cyv, metadata !21612, metadata !94), !dbg !21613
  %24 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21614
  %arrayidx19 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %24, i64 0, !dbg !21614
  %arrayidx20 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx19, i64 0, i64 2, !dbg !21614
  %arrayidx21 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx20, i64 0, i64 0, !dbg !21614
  %25 = load i16, i16* %arrayidx21, align 2, !dbg !21614
  %conv22 = sext i16 %25 to i32, !dbg !21614
  store i32 %conv22, i32* %cyv, align 4, !dbg !21613
  call void @llvm.dbg.declare(metadata i32* %cuu, metadata !21615, metadata !94), !dbg !21616
  %26 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21617
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %26, i64 1, !dbg !21617
  %arrayidx24 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx23, i64 0, i64 1, !dbg !21617
  %arrayidx25 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx24, i64 0, i64 0, !dbg !21617
  %27 = load i16, i16* %arrayidx25, align 2, !dbg !21617
  %conv26 = sext i16 %27 to i32, !dbg !21617
  store i32 %conv26, i32* %cuu, align 4, !dbg !21616
  call void @llvm.dbg.declare(metadata i32* %cuv, metadata !21618, metadata !94), !dbg !21619
  %28 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21620
  %arrayidx27 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %28, i64 1, !dbg !21620
  %arrayidx28 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx27, i64 0, i64 2, !dbg !21620
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx28, i64 0, i64 0, !dbg !21620
  %29 = load i16, i16* %arrayidx29, align 2, !dbg !21620
  %conv30 = sext i16 %29 to i32, !dbg !21620
  store i32 %conv30, i32* %cuv, align 4, !dbg !21619
  call void @llvm.dbg.declare(metadata i32* %cvu, metadata !21621, metadata !94), !dbg !21622
  %30 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21623
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %30, i64 2, !dbg !21623
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 1, !dbg !21623
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !21623
  %31 = load i16, i16* %arrayidx33, align 2, !dbg !21623
  %conv34 = sext i16 %31 to i32, !dbg !21623
  store i32 %conv34, i32* %cvu, align 4, !dbg !21622
  call void @llvm.dbg.declare(metadata i32* %cvv, metadata !21624, metadata !94), !dbg !21625
  %32 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %c.addr, align 8, !dbg !21626
  %arrayidx35 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %32, i64 2, !dbg !21626
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx35, i64 0, i64 2, !dbg !21626
  %arrayidx37 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx36, i64 0, i64 0, !dbg !21626
  %33 = load i16, i16* %arrayidx37, align 2, !dbg !21626
  %conv38 = sext i16 %33 to i32, !dbg !21626
  store i32 %conv38, i32* %cvv, align 4, !dbg !21625
  %34 = load i32, i32* %w.addr, align 4, !dbg !21627
  %add = add nsw i32 %34, 2, !dbg !21628
  %sub = sub nsw i32 %add, 1, !dbg !21629
  %shr = ashr i32 %sub, 1, !dbg !21630
  store i32 %shr, i32* %w.addr, align 4, !dbg !21631
  %35 = load i32, i32* %h.addr, align 4, !dbg !21632
  %add39 = add nsw i32 %35, 2, !dbg !21633
  %sub40 = sub nsw i32 %add39, 1, !dbg !21634
  %shr41 = ashr i32 %sub40, 1, !dbg !21635
  store i32 %shr41, i32* %h.addr, align 4, !dbg !21636
  store i32 0, i32* %y, align 4, !dbg !21637
  br label %for.cond, !dbg !21638

for.cond:                                         ; preds = %for.inc162, %entry
  %36 = load i32, i32* %y, align 4, !dbg !21639
  %37 = load i32, i32* %h.addr, align 4, !dbg !21641
  %cmp = icmp slt i32 %36, %37, !dbg !21642
  br i1 %cmp, label %for.body, label %for.end164, !dbg !21643

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !21644
  br label %for.cond43, !dbg !21645

for.cond43:                                       ; preds = %for.inc, %for.body
  %38 = load i32, i32* %x, align 4, !dbg !21646
  %39 = load i32, i32* %w.addr, align 4, !dbg !21648
  %cmp44 = icmp slt i32 %38, %39, !dbg !21649
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !21650

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %y00, metadata !21651, metadata !94), !dbg !21652
  %40 = load i32, i32* %x, align 4, !dbg !21653
  %shl47 = shl i32 %40, 1, !dbg !21654
  %idxprom = sext i32 %shl47 to i64, !dbg !21655
  %41 = load i16*, i16** %src0, align 8, !dbg !21655
  %arrayidx48 = getelementptr inbounds i16, i16* %41, i64 %idxprom, !dbg !21655
  %42 = load i16, i16* %arrayidx48, align 2, !dbg !21655
  %conv49 = zext i16 %42 to i32, !dbg !21655
  %43 = load i32, i32* %y_off_in, align 4, !dbg !21656
  %sub50 = sub nsw i32 %conv49, %43, !dbg !21657
  store i32 %sub50, i32* %y00, align 4, !dbg !21652
  call void @llvm.dbg.declare(metadata i32* %y01, metadata !21658, metadata !94), !dbg !21659
  %44 = load i32, i32* %x, align 4, !dbg !21660
  %mul = mul nsw i32 2, %44, !dbg !21661
  %add51 = add nsw i32 %mul, 1, !dbg !21662
  %idxprom52 = sext i32 %add51 to i64, !dbg !21663
  %45 = load i16*, i16** %src0, align 8, !dbg !21663
  %arrayidx53 = getelementptr inbounds i16, i16* %45, i64 %idxprom52, !dbg !21663
  %46 = load i16, i16* %arrayidx53, align 2, !dbg !21663
  %conv54 = zext i16 %46 to i32, !dbg !21663
  %47 = load i32, i32* %y_off_in, align 4, !dbg !21664
  %sub55 = sub nsw i32 %conv54, %47, !dbg !21665
  store i32 %sub55, i32* %y01, align 4, !dbg !21659
  call void @llvm.dbg.declare(metadata i32* %y10, metadata !21666, metadata !94), !dbg !21667
  %48 = load i64*, i64** %src_stride.addr, align 8, !dbg !21668
  %arrayidx56 = getelementptr inbounds i64, i64* %48, i64 0, !dbg !21668
  %49 = load i64, i64* %arrayidx56, align 8, !dbg !21668
  %div = udiv i64 %49, 2, !dbg !21669
  %50 = load i32, i32* %x, align 4, !dbg !21670
  %mul57 = mul nsw i32 2, %50, !dbg !21671
  %conv58 = sext i32 %mul57 to i64, !dbg !21672
  %add59 = add i64 %div, %conv58, !dbg !21673
  %51 = load i16*, i16** %src0, align 8, !dbg !21674
  %arrayidx60 = getelementptr inbounds i16, i16* %51, i64 %add59, !dbg !21674
  %52 = load i16, i16* %arrayidx60, align 2, !dbg !21674
  %conv61 = zext i16 %52 to i32, !dbg !21674
  %53 = load i32, i32* %y_off_in, align 4, !dbg !21675
  %sub62 = sub nsw i32 %conv61, %53, !dbg !21676
  store i32 %sub62, i32* %y10, align 4, !dbg !21667
  call void @llvm.dbg.declare(metadata i32* %y11, metadata !21677, metadata !94), !dbg !21678
  %54 = load i64*, i64** %src_stride.addr, align 8, !dbg !21679
  %arrayidx63 = getelementptr inbounds i64, i64* %54, i64 0, !dbg !21679
  %55 = load i64, i64* %arrayidx63, align 8, !dbg !21679
  %div64 = udiv i64 %55, 2, !dbg !21680
  %56 = load i32, i32* %x, align 4, !dbg !21681
  %mul65 = mul nsw i32 2, %56, !dbg !21682
  %conv66 = sext i32 %mul65 to i64, !dbg !21683
  %add67 = add i64 %div64, %conv66, !dbg !21684
  %add68 = add i64 %add67, 1, !dbg !21685
  %57 = load i16*, i16** %src0, align 8, !dbg !21686
  %arrayidx69 = getelementptr inbounds i16, i16* %57, i64 %add68, !dbg !21686
  %58 = load i16, i16* %arrayidx69, align 2, !dbg !21686
  %conv70 = zext i16 %58 to i32, !dbg !21686
  %59 = load i32, i32* %y_off_in, align 4, !dbg !21687
  %sub71 = sub nsw i32 %conv70, %59, !dbg !21688
  store i32 %sub71, i32* %y11, align 4, !dbg !21678
  call void @llvm.dbg.declare(metadata i32* %u, metadata !21689, metadata !94), !dbg !21690
  %60 = load i32, i32* %x, align 4, !dbg !21691
  %idxprom72 = sext i32 %60 to i64, !dbg !21692
  %61 = load i16*, i16** %src1, align 8, !dbg !21692
  %arrayidx73 = getelementptr inbounds i16, i16* %61, i64 %idxprom72, !dbg !21692
  %62 = load i16, i16* %arrayidx73, align 2, !dbg !21692
  %conv74 = zext i16 %62 to i32, !dbg !21692
  %sub75 = sub nsw i32 %conv74, 2048, !dbg !21693
  store i32 %sub75, i32* %u, align 4, !dbg !21690
  call void @llvm.dbg.declare(metadata i32* %v, metadata !21694, metadata !94), !dbg !21695
  %63 = load i32, i32* %x, align 4, !dbg !21696
  %idxprom76 = sext i32 %63 to i64, !dbg !21697
  %64 = load i16*, i16** %src2, align 8, !dbg !21697
  %arrayidx77 = getelementptr inbounds i16, i16* %64, i64 %idxprom76, !dbg !21697
  %65 = load i16, i16* %arrayidx77, align 2, !dbg !21697
  %conv78 = zext i16 %65 to i32, !dbg !21697
  %sub79 = sub nsw i32 %conv78, 2048, !dbg !21698
  store i32 %sub79, i32* %v, align 4, !dbg !21695
  call void @llvm.dbg.declare(metadata i32* %uv_val, metadata !21699, metadata !94), !dbg !21700
  %66 = load i32, i32* %cyu, align 4, !dbg !21701
  %67 = load i32, i32* %u, align 4, !dbg !21702
  %mul80 = mul nsw i32 %66, %67, !dbg !21703
  %68 = load i32, i32* %cyv, align 4, !dbg !21704
  %69 = load i32, i32* %v, align 4, !dbg !21705
  %mul81 = mul nsw i32 %68, %69, !dbg !21706
  %add82 = add nsw i32 %mul80, %mul81, !dbg !21707
  %add83 = add nsw i32 %add82, 8192, !dbg !21708
  %70 = load i32, i32* %y_off_out, align 4, !dbg !21709
  %add84 = add nsw i32 %add83, %70, !dbg !21710
  store i32 %add84, i32* %uv_val, align 4, !dbg !21700
  %71 = load i32, i32* %cyy, align 4, !dbg !21711
  %72 = load i32, i32* %y00, align 4, !dbg !21712
  %mul85 = mul nsw i32 %71, %72, !dbg !21713
  %73 = load i32, i32* %uv_val, align 4, !dbg !21714
  %add86 = add nsw i32 %mul85, %73, !dbg !21715
  %shr87 = ashr i32 %add86, 14, !dbg !21716
  store i32 %shr87, i32* %a.addr.i, align 4, !dbg !21717
  store i32 12, i32* %p.addr.i, align 4, !dbg !21717
  %74 = load i32, i32* %a.addr.i, align 4, !dbg !21718
  %75 = load i32, i32* %p.addr.i, align 4, !dbg !21719
  %shl.i = shl i32 1, %75, !dbg !21720
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !21721
  %neg.i = xor i32 %sub.i, -1, !dbg !21722
  %and.i = and i32 %74, %neg.i, !dbg !21723
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !21723
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !21724

if.then.i:                                        ; preds = %for.body46
  %76 = load i32, i32* %a.addr.i, align 4, !dbg !21725
  %neg1.i = xor i32 %76, -1, !dbg !21726
  %shr.i = ashr i32 %neg1.i, 31, !dbg !21727
  %77 = load i32, i32* %p.addr.i, align 4, !dbg !21728
  %shl2.i = shl i32 1, %77, !dbg !21729
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !21730
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !21731
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !21732
  br label %av_clip_uintp2_c.exit, !dbg !21732

if.else.i:                                        ; preds = %for.body46
  %78 = load i32, i32* %a.addr.i, align 4, !dbg !21733
  store i32 %78, i32* %retval.i, align 4, !dbg !21734
  br label %av_clip_uintp2_c.exit, !dbg !21734

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %79 = load i32, i32* %retval.i, align 4, !dbg !21735
  %conv88 = trunc i32 %79 to i16, !dbg !21717
  %80 = load i32, i32* %x, align 4, !dbg !21736
  %shl89 = shl i32 %80, 1, !dbg !21737
  %idxprom90 = sext i32 %shl89 to i64, !dbg !21738
  %81 = load i16*, i16** %dst0, align 8, !dbg !21738
  %arrayidx91 = getelementptr inbounds i16, i16* %81, i64 %idxprom90, !dbg !21738
  store i16 %conv88, i16* %arrayidx91, align 2, !dbg !21739
  %82 = load i32, i32* %cyy, align 4, !dbg !21740
  %83 = load i32, i32* %y01, align 4, !dbg !21741
  %mul92 = mul nsw i32 %82, %83, !dbg !21742
  %84 = load i32, i32* %uv_val, align 4, !dbg !21743
  %add93 = add nsw i32 %mul92, %84, !dbg !21744
  %shr94 = ashr i32 %add93, 14, !dbg !21745
  store i32 %shr94, i32* %a.addr.i230, align 4, !dbg !21746
  store i32 12, i32* %p.addr.i231, align 4, !dbg !21746
  %85 = load i32, i32* %a.addr.i230, align 4, !dbg !21747
  %86 = load i32, i32* %p.addr.i231, align 4, !dbg !21748
  %shl.i232 = shl i32 1, %86, !dbg !21749
  %sub.i233 = sub nsw i32 %shl.i232, 1, !dbg !21750
  %neg.i234 = xor i32 %sub.i233, -1, !dbg !21751
  %and.i235 = and i32 %85, %neg.i234, !dbg !21752
  %tobool.i236 = icmp ne i32 %and.i235, 0, !dbg !21752
  br i1 %tobool.i236, label %if.then.i242, label %if.else.i243, !dbg !21753

if.then.i242:                                     ; preds = %av_clip_uintp2_c.exit
  %87 = load i32, i32* %a.addr.i230, align 4, !dbg !21754
  %neg1.i237 = xor i32 %87, -1, !dbg !21755
  %shr.i238 = ashr i32 %neg1.i237, 31, !dbg !21756
  %88 = load i32, i32* %p.addr.i231, align 4, !dbg !21757
  %shl2.i239 = shl i32 1, %88, !dbg !21758
  %sub3.i240 = sub nsw i32 %shl2.i239, 1, !dbg !21759
  %and4.i241 = and i32 %shr.i238, %sub3.i240, !dbg !21760
  store i32 %and4.i241, i32* %retval.i229, align 4, !dbg !21761
  br label %av_clip_uintp2_c.exit244, !dbg !21761

if.else.i243:                                     ; preds = %av_clip_uintp2_c.exit
  %89 = load i32, i32* %a.addr.i230, align 4, !dbg !21762
  store i32 %89, i32* %retval.i229, align 4, !dbg !21763
  br label %av_clip_uintp2_c.exit244, !dbg !21763

av_clip_uintp2_c.exit244:                         ; preds = %if.then.i242, %if.else.i243
  %90 = load i32, i32* %retval.i229, align 4, !dbg !21764
  %conv96 = trunc i32 %90 to i16, !dbg !21746
  %91 = load i32, i32* %x, align 4, !dbg !21765
  %mul97 = mul nsw i32 %91, 2, !dbg !21766
  %add98 = add nsw i32 %mul97, 1, !dbg !21767
  %idxprom99 = sext i32 %add98 to i64, !dbg !21768
  %92 = load i16*, i16** %dst0, align 8, !dbg !21768
  %arrayidx100 = getelementptr inbounds i16, i16* %92, i64 %idxprom99, !dbg !21768
  store i16 %conv96, i16* %arrayidx100, align 2, !dbg !21769
  %93 = load i32, i32* %cyy, align 4, !dbg !21770
  %94 = load i32, i32* %y10, align 4, !dbg !21771
  %mul101 = mul nsw i32 %93, %94, !dbg !21772
  %95 = load i32, i32* %uv_val, align 4, !dbg !21773
  %add102 = add nsw i32 %mul101, %95, !dbg !21774
  %shr103 = ashr i32 %add102, 14, !dbg !21775
  store i32 %shr103, i32* %a.addr.i214, align 4, !dbg !21776
  store i32 12, i32* %p.addr.i215, align 4, !dbg !21776
  %96 = load i32, i32* %a.addr.i214, align 4, !dbg !21777
  %97 = load i32, i32* %p.addr.i215, align 4, !dbg !21778
  %shl.i216 = shl i32 1, %97, !dbg !21779
  %sub.i217 = sub nsw i32 %shl.i216, 1, !dbg !21780
  %neg.i218 = xor i32 %sub.i217, -1, !dbg !21781
  %and.i219 = and i32 %96, %neg.i218, !dbg !21782
  %tobool.i220 = icmp ne i32 %and.i219, 0, !dbg !21782
  br i1 %tobool.i220, label %if.then.i226, label %if.else.i227, !dbg !21783

if.then.i226:                                     ; preds = %av_clip_uintp2_c.exit244
  %98 = load i32, i32* %a.addr.i214, align 4, !dbg !21784
  %neg1.i221 = xor i32 %98, -1, !dbg !21785
  %shr.i222 = ashr i32 %neg1.i221, 31, !dbg !21786
  %99 = load i32, i32* %p.addr.i215, align 4, !dbg !21787
  %shl2.i223 = shl i32 1, %99, !dbg !21788
  %sub3.i224 = sub nsw i32 %shl2.i223, 1, !dbg !21789
  %and4.i225 = and i32 %shr.i222, %sub3.i224, !dbg !21790
  store i32 %and4.i225, i32* %retval.i213, align 4, !dbg !21791
  br label %av_clip_uintp2_c.exit228, !dbg !21791

if.else.i227:                                     ; preds = %av_clip_uintp2_c.exit244
  %100 = load i32, i32* %a.addr.i214, align 4, !dbg !21792
  store i32 %100, i32* %retval.i213, align 4, !dbg !21793
  br label %av_clip_uintp2_c.exit228, !dbg !21793

av_clip_uintp2_c.exit228:                         ; preds = %if.then.i226, %if.else.i227
  %101 = load i32, i32* %retval.i213, align 4, !dbg !21794
  %conv105 = trunc i32 %101 to i16, !dbg !21776
  %102 = load i32, i32* %x, align 4, !dbg !21795
  %mul106 = mul nsw i32 %102, 2, !dbg !21796
  %add107 = add nsw i32 %mul106, 0, !dbg !21797
  %conv108 = sext i32 %add107 to i64, !dbg !21795
  %103 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21798
  %arrayidx109 = getelementptr inbounds i64, i64* %103, i64 0, !dbg !21798
  %104 = load i64, i64* %arrayidx109, align 8, !dbg !21798
  %div110 = udiv i64 %104, 2, !dbg !21799
  %add111 = add i64 %conv108, %div110, !dbg !21800
  %105 = load i16*, i16** %dst0, align 8, !dbg !21801
  %arrayidx112 = getelementptr inbounds i16, i16* %105, i64 %add111, !dbg !21801
  store i16 %conv105, i16* %arrayidx112, align 2, !dbg !21802
  %106 = load i32, i32* %cyy, align 4, !dbg !21803
  %107 = load i32, i32* %y11, align 4, !dbg !21804
  %mul113 = mul nsw i32 %106, %107, !dbg !21805
  %108 = load i32, i32* %uv_val, align 4, !dbg !21806
  %add114 = add nsw i32 %mul113, %108, !dbg !21807
  %shr115 = ashr i32 %add114, 14, !dbg !21808
  store i32 %shr115, i32* %a.addr.i198, align 4, !dbg !21809
  store i32 12, i32* %p.addr.i199, align 4, !dbg !21809
  %109 = load i32, i32* %a.addr.i198, align 4, !dbg !21810
  %110 = load i32, i32* %p.addr.i199, align 4, !dbg !21811
  %shl.i200 = shl i32 1, %110, !dbg !21812
  %sub.i201 = sub nsw i32 %shl.i200, 1, !dbg !21813
  %neg.i202 = xor i32 %sub.i201, -1, !dbg !21814
  %and.i203 = and i32 %109, %neg.i202, !dbg !21815
  %tobool.i204 = icmp ne i32 %and.i203, 0, !dbg !21815
  br i1 %tobool.i204, label %if.then.i210, label %if.else.i211, !dbg !21816

if.then.i210:                                     ; preds = %av_clip_uintp2_c.exit228
  %111 = load i32, i32* %a.addr.i198, align 4, !dbg !21817
  %neg1.i205 = xor i32 %111, -1, !dbg !21818
  %shr.i206 = ashr i32 %neg1.i205, 31, !dbg !21819
  %112 = load i32, i32* %p.addr.i199, align 4, !dbg !21820
  %shl2.i207 = shl i32 1, %112, !dbg !21821
  %sub3.i208 = sub nsw i32 %shl2.i207, 1, !dbg !21822
  %and4.i209 = and i32 %shr.i206, %sub3.i208, !dbg !21823
  store i32 %and4.i209, i32* %retval.i197, align 4, !dbg !21824
  br label %av_clip_uintp2_c.exit212, !dbg !21824

if.else.i211:                                     ; preds = %av_clip_uintp2_c.exit228
  %113 = load i32, i32* %a.addr.i198, align 4, !dbg !21825
  store i32 %113, i32* %retval.i197, align 4, !dbg !21826
  br label %av_clip_uintp2_c.exit212, !dbg !21826

av_clip_uintp2_c.exit212:                         ; preds = %if.then.i210, %if.else.i211
  %114 = load i32, i32* %retval.i197, align 4, !dbg !21827
  %conv117 = trunc i32 %114 to i16, !dbg !21809
  %115 = load i32, i32* %x, align 4, !dbg !21828
  %mul118 = mul nsw i32 %115, 2, !dbg !21829
  %add119 = add nsw i32 %mul118, 1, !dbg !21830
  %conv120 = sext i32 %add119 to i64, !dbg !21828
  %116 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21831
  %arrayidx121 = getelementptr inbounds i64, i64* %116, i64 0, !dbg !21831
  %117 = load i64, i64* %arrayidx121, align 8, !dbg !21831
  %div122 = udiv i64 %117, 2, !dbg !21832
  %add123 = add i64 %conv120, %div122, !dbg !21833
  %118 = load i16*, i16** %dst0, align 8, !dbg !21834
  %arrayidx124 = getelementptr inbounds i16, i16* %118, i64 %add123, !dbg !21834
  store i16 %conv117, i16* %arrayidx124, align 2, !dbg !21835
  %119 = load i32, i32* %u, align 4, !dbg !21836
  %120 = load i32, i32* %cuu, align 4, !dbg !21837
  %mul125 = mul nsw i32 %119, %120, !dbg !21838
  %121 = load i32, i32* %v, align 4, !dbg !21839
  %122 = load i32, i32* %cuv, align 4, !dbg !21840
  %mul126 = mul nsw i32 %121, %122, !dbg !21841
  %add127 = add nsw i32 %mul125, %mul126, !dbg !21842
  %add128 = add nsw i32 %add127, 33562624, !dbg !21843
  %shr129 = ashr i32 %add128, 14, !dbg !21844
  store i32 %shr129, i32* %a.addr.i182, align 4, !dbg !21845
  store i32 12, i32* %p.addr.i183, align 4, !dbg !21845
  %123 = load i32, i32* %a.addr.i182, align 4, !dbg !21846
  %124 = load i32, i32* %p.addr.i183, align 4, !dbg !21847
  %shl.i184 = shl i32 1, %124, !dbg !21848
  %sub.i185 = sub nsw i32 %shl.i184, 1, !dbg !21849
  %neg.i186 = xor i32 %sub.i185, -1, !dbg !21850
  %and.i187 = and i32 %123, %neg.i186, !dbg !21851
  %tobool.i188 = icmp ne i32 %and.i187, 0, !dbg !21851
  br i1 %tobool.i188, label %if.then.i194, label %if.else.i195, !dbg !21852

if.then.i194:                                     ; preds = %av_clip_uintp2_c.exit212
  %125 = load i32, i32* %a.addr.i182, align 4, !dbg !21853
  %neg1.i189 = xor i32 %125, -1, !dbg !21854
  %shr.i190 = ashr i32 %neg1.i189, 31, !dbg !21855
  %126 = load i32, i32* %p.addr.i183, align 4, !dbg !21856
  %shl2.i191 = shl i32 1, %126, !dbg !21857
  %sub3.i192 = sub nsw i32 %shl2.i191, 1, !dbg !21858
  %and4.i193 = and i32 %shr.i190, %sub3.i192, !dbg !21859
  store i32 %and4.i193, i32* %retval.i181, align 4, !dbg !21860
  br label %av_clip_uintp2_c.exit196, !dbg !21860

if.else.i195:                                     ; preds = %av_clip_uintp2_c.exit212
  %127 = load i32, i32* %a.addr.i182, align 4, !dbg !21861
  store i32 %127, i32* %retval.i181, align 4, !dbg !21862
  br label %av_clip_uintp2_c.exit196, !dbg !21862

av_clip_uintp2_c.exit196:                         ; preds = %if.then.i194, %if.else.i195
  %128 = load i32, i32* %retval.i181, align 4, !dbg !21863
  %conv131 = trunc i32 %128 to i16, !dbg !21845
  %129 = load i32, i32* %x, align 4, !dbg !21864
  %idxprom132 = sext i32 %129 to i64, !dbg !21865
  %130 = load i16*, i16** %dst1, align 8, !dbg !21865
  %arrayidx133 = getelementptr inbounds i16, i16* %130, i64 %idxprom132, !dbg !21865
  store i16 %conv131, i16* %arrayidx133, align 2, !dbg !21866
  %131 = load i32, i32* %u, align 4, !dbg !21867
  %132 = load i32, i32* %cvu, align 4, !dbg !21868
  %mul134 = mul nsw i32 %131, %132, !dbg !21869
  %133 = load i32, i32* %v, align 4, !dbg !21870
  %134 = load i32, i32* %cvv, align 4, !dbg !21871
  %mul135 = mul nsw i32 %133, %134, !dbg !21872
  %add136 = add nsw i32 %mul134, %mul135, !dbg !21873
  %add137 = add nsw i32 %add136, 33562624, !dbg !21874
  %shr138 = ashr i32 %add137, 14, !dbg !21875
  store i32 %shr138, i32* %a.addr.i166, align 4, !dbg !21876
  store i32 12, i32* %p.addr.i167, align 4, !dbg !21876
  %135 = load i32, i32* %a.addr.i166, align 4, !dbg !21877
  %136 = load i32, i32* %p.addr.i167, align 4, !dbg !21878
  %shl.i168 = shl i32 1, %136, !dbg !21879
  %sub.i169 = sub nsw i32 %shl.i168, 1, !dbg !21880
  %neg.i170 = xor i32 %sub.i169, -1, !dbg !21881
  %and.i171 = and i32 %135, %neg.i170, !dbg !21882
  %tobool.i172 = icmp ne i32 %and.i171, 0, !dbg !21882
  br i1 %tobool.i172, label %if.then.i178, label %if.else.i179, !dbg !21883

if.then.i178:                                     ; preds = %av_clip_uintp2_c.exit196
  %137 = load i32, i32* %a.addr.i166, align 4, !dbg !21884
  %neg1.i173 = xor i32 %137, -1, !dbg !21885
  %shr.i174 = ashr i32 %neg1.i173, 31, !dbg !21886
  %138 = load i32, i32* %p.addr.i167, align 4, !dbg !21887
  %shl2.i175 = shl i32 1, %138, !dbg !21888
  %sub3.i176 = sub nsw i32 %shl2.i175, 1, !dbg !21889
  %and4.i177 = and i32 %shr.i174, %sub3.i176, !dbg !21890
  store i32 %and4.i177, i32* %retval.i165, align 4, !dbg !21891
  br label %av_clip_uintp2_c.exit180, !dbg !21891

if.else.i179:                                     ; preds = %av_clip_uintp2_c.exit196
  %139 = load i32, i32* %a.addr.i166, align 4, !dbg !21892
  store i32 %139, i32* %retval.i165, align 4, !dbg !21893
  br label %av_clip_uintp2_c.exit180, !dbg !21893

av_clip_uintp2_c.exit180:                         ; preds = %if.then.i178, %if.else.i179
  %140 = load i32, i32* %retval.i165, align 4, !dbg !21894
  %conv140 = trunc i32 %140 to i16, !dbg !21876
  %141 = load i32, i32* %x, align 4, !dbg !21895
  %idxprom141 = sext i32 %141 to i64, !dbg !21896
  %142 = load i16*, i16** %dst2, align 8, !dbg !21896
  %arrayidx142 = getelementptr inbounds i16, i16* %142, i64 %idxprom141, !dbg !21896
  store i16 %conv140, i16* %arrayidx142, align 2, !dbg !21897
  br label %for.inc, !dbg !21898

for.inc:                                          ; preds = %av_clip_uintp2_c.exit180
  %143 = load i32, i32* %x, align 4, !dbg !21899
  %inc = add nsw i32 %143, 1, !dbg !21899
  store i32 %inc, i32* %x, align 4, !dbg !21899
  br label %for.cond43, !dbg !21901, !llvm.loop !21902

for.end:                                          ; preds = %for.cond43
  %144 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21904
  %arrayidx143 = getelementptr inbounds i64, i64* %144, i64 0, !dbg !21904
  %145 = load i64, i64* %arrayidx143, align 8, !dbg !21904
  %mul144 = mul nsw i64 %145, 2, !dbg !21905
  %div145 = udiv i64 %mul144, 2, !dbg !21906
  %146 = load i16*, i16** %dst0, align 8, !dbg !21907
  %add.ptr = getelementptr inbounds i16, i16* %146, i64 %div145, !dbg !21907
  store i16* %add.ptr, i16** %dst0, align 8, !dbg !21907
  %147 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21908
  %arrayidx146 = getelementptr inbounds i64, i64* %147, i64 1, !dbg !21908
  %148 = load i64, i64* %arrayidx146, align 8, !dbg !21908
  %div147 = udiv i64 %148, 2, !dbg !21909
  %149 = load i16*, i16** %dst1, align 8, !dbg !21910
  %add.ptr148 = getelementptr inbounds i16, i16* %149, i64 %div147, !dbg !21910
  store i16* %add.ptr148, i16** %dst1, align 8, !dbg !21910
  %150 = load i64*, i64** %dst_stride.addr, align 8, !dbg !21911
  %arrayidx149 = getelementptr inbounds i64, i64* %150, i64 2, !dbg !21911
  %151 = load i64, i64* %arrayidx149, align 8, !dbg !21911
  %div150 = udiv i64 %151, 2, !dbg !21912
  %152 = load i16*, i16** %dst2, align 8, !dbg !21913
  %add.ptr151 = getelementptr inbounds i16, i16* %152, i64 %div150, !dbg !21913
  store i16* %add.ptr151, i16** %dst2, align 8, !dbg !21913
  %153 = load i64*, i64** %src_stride.addr, align 8, !dbg !21914
  %arrayidx152 = getelementptr inbounds i64, i64* %153, i64 0, !dbg !21914
  %154 = load i64, i64* %arrayidx152, align 8, !dbg !21914
  %mul153 = mul nsw i64 %154, 2, !dbg !21915
  %div154 = udiv i64 %mul153, 2, !dbg !21916
  %155 = load i16*, i16** %src0, align 8, !dbg !21917
  %add.ptr155 = getelementptr inbounds i16, i16* %155, i64 %div154, !dbg !21917
  store i16* %add.ptr155, i16** %src0, align 8, !dbg !21917
  %156 = load i64*, i64** %src_stride.addr, align 8, !dbg !21918
  %arrayidx156 = getelementptr inbounds i64, i64* %156, i64 1, !dbg !21918
  %157 = load i64, i64* %arrayidx156, align 8, !dbg !21918
  %div157 = udiv i64 %157, 2, !dbg !21919
  %158 = load i16*, i16** %src1, align 8, !dbg !21920
  %add.ptr158 = getelementptr inbounds i16, i16* %158, i64 %div157, !dbg !21920
  store i16* %add.ptr158, i16** %src1, align 8, !dbg !21920
  %159 = load i64*, i64** %src_stride.addr, align 8, !dbg !21921
  %arrayidx159 = getelementptr inbounds i64, i64* %159, i64 2, !dbg !21921
  %160 = load i64, i64* %arrayidx159, align 8, !dbg !21921
  %div160 = udiv i64 %160, 2, !dbg !21922
  %161 = load i16*, i16** %src2, align 8, !dbg !21923
  %add.ptr161 = getelementptr inbounds i16, i16* %161, i64 %div160, !dbg !21923
  store i16* %add.ptr161, i16** %src2, align 8, !dbg !21923
  br label %for.inc162, !dbg !21924

for.inc162:                                       ; preds = %for.end
  %162 = load i32, i32* %y, align 4, !dbg !21925
  %inc163 = add nsw i32 %162, 1, !dbg !21925
  store i32 %inc163, i32* %y, align 4, !dbg !21925
  br label %for.cond, !dbg !21927, !llvm.loop !21928

for.end164:                                       ; preds = %for.cond
  ret void, !dbg !21930
}

; Function Attrs: nounwind uwtable
define internal void @multiply3x3_c(i16** %buf, i64 %stride, i32 %w, i32 %h, [3 x [8 x i16]]* %m) #0 !dbg !21931 {
entry:
  %retval.i92 = alloca i16, align 2
  %a.addr.i93 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i93, metadata !267, metadata !94), !dbg !21932
  %retval.i80 = alloca i16, align 2
  %a.addr.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i81, metadata !267, metadata !94), !dbg !21940
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !267, metadata !94), !dbg !21942
  %buf.addr = alloca i16**, align 8
  %stride.addr = alloca i64, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %m.addr = alloca [3 x [8 x i16]]*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %buf0 = alloca i16*, align 8
  %buf1 = alloca i16*, align 8
  %buf2 = alloca i16*, align 8
  %v0 = alloca i32, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  store i16** %buf, i16*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %buf.addr, metadata !21944, metadata !94), !dbg !21945
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !21946, metadata !94), !dbg !21947
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !21948, metadata !94), !dbg !21949
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !21950, metadata !94), !dbg !21951
  store [3 x [8 x i16]]* %m, [3 x [8 x i16]]** %m.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [8 x i16]]** %m.addr, metadata !21952, metadata !94), !dbg !21953
  call void @llvm.dbg.declare(metadata i32* %y, metadata !21954, metadata !94), !dbg !21955
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21956, metadata !94), !dbg !21957
  call void @llvm.dbg.declare(metadata i16** %buf0, metadata !21958, metadata !94), !dbg !21959
  %0 = load i16**, i16*** %buf.addr, align 8, !dbg !21960
  %arrayidx = getelementptr inbounds i16*, i16** %0, i64 0, !dbg !21960
  %1 = load i16*, i16** %arrayidx, align 8, !dbg !21960
  store i16* %1, i16** %buf0, align 8, !dbg !21959
  call void @llvm.dbg.declare(metadata i16** %buf1, metadata !21961, metadata !94), !dbg !21962
  %2 = load i16**, i16*** %buf.addr, align 8, !dbg !21963
  %arrayidx1 = getelementptr inbounds i16*, i16** %2, i64 1, !dbg !21963
  %3 = load i16*, i16** %arrayidx1, align 8, !dbg !21963
  store i16* %3, i16** %buf1, align 8, !dbg !21962
  call void @llvm.dbg.declare(metadata i16** %buf2, metadata !21964, metadata !94), !dbg !21965
  %4 = load i16**, i16*** %buf.addr, align 8, !dbg !21966
  %arrayidx2 = getelementptr inbounds i16*, i16** %4, i64 2, !dbg !21966
  %5 = load i16*, i16** %arrayidx2, align 8, !dbg !21966
  store i16* %5, i16** %buf2, align 8, !dbg !21965
  store i32 0, i32* %y, align 4, !dbg !21967
  br label %for.cond, !dbg !21968

for.cond:                                         ; preds = %for.inc77, %entry
  %6 = load i32, i32* %y, align 4, !dbg !21969
  %7 = load i32, i32* %h.addr, align 4, !dbg !21971
  %cmp = icmp slt i32 %6, %7, !dbg !21972
  br i1 %cmp, label %for.body, label %for.end79, !dbg !21973

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !21974
  br label %for.cond3, !dbg !21975

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %x, align 4, !dbg !21976
  %9 = load i32, i32* %w.addr, align 4, !dbg !21978
  %cmp4 = icmp slt i32 %8, %9, !dbg !21979
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !21980

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !21981, metadata !94), !dbg !21982
  %10 = load i32, i32* %x, align 4, !dbg !21983
  %idxprom = sext i32 %10 to i64, !dbg !21984
  %11 = load i16*, i16** %buf0, align 8, !dbg !21984
  %arrayidx6 = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !21984
  %12 = load i16, i16* %arrayidx6, align 2, !dbg !21984
  %conv = sext i16 %12 to i32, !dbg !21984
  store i32 %conv, i32* %v0, align 4, !dbg !21982
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !21985, metadata !94), !dbg !21986
  %13 = load i32, i32* %x, align 4, !dbg !21987
  %idxprom7 = sext i32 %13 to i64, !dbg !21988
  %14 = load i16*, i16** %buf1, align 8, !dbg !21988
  %arrayidx8 = getelementptr inbounds i16, i16* %14, i64 %idxprom7, !dbg !21988
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !21988
  %conv9 = sext i16 %15 to i32, !dbg !21988
  store i32 %conv9, i32* %v1, align 4, !dbg !21986
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !21989, metadata !94), !dbg !21990
  %16 = load i32, i32* %x, align 4, !dbg !21991
  %idxprom10 = sext i32 %16 to i64, !dbg !21992
  %17 = load i16*, i16** %buf2, align 8, !dbg !21992
  %arrayidx11 = getelementptr inbounds i16, i16* %17, i64 %idxprom10, !dbg !21992
  %18 = load i16, i16* %arrayidx11, align 2, !dbg !21992
  %conv12 = sext i16 %18 to i32, !dbg !21992
  store i32 %conv12, i32* %v2, align 4, !dbg !21990
  %19 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !21993
  %arrayidx13 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %19, i64 0, !dbg !21993
  %arrayidx14 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx13, i64 0, i64 0, !dbg !21993
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx14, i64 0, i64 0, !dbg !21993
  %20 = load i16, i16* %arrayidx15, align 2, !dbg !21993
  %conv16 = sext i16 %20 to i32, !dbg !21993
  %21 = load i32, i32* %v0, align 4, !dbg !21994
  %mul = mul nsw i32 %conv16, %21, !dbg !21995
  %22 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !21996
  %arrayidx17 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %22, i64 0, !dbg !21996
  %arrayidx18 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx17, i64 0, i64 1, !dbg !21996
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx18, i64 0, i64 0, !dbg !21996
  %23 = load i16, i16* %arrayidx19, align 2, !dbg !21996
  %conv20 = sext i16 %23 to i32, !dbg !21996
  %24 = load i32, i32* %v1, align 4, !dbg !21997
  %mul21 = mul nsw i32 %conv20, %24, !dbg !21998
  %add = add nsw i32 %mul, %mul21, !dbg !21999
  %25 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22000
  %arrayidx22 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %25, i64 0, !dbg !22000
  %arrayidx23 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx22, i64 0, i64 2, !dbg !22000
  %arrayidx24 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx23, i64 0, i64 0, !dbg !22000
  %26 = load i16, i16* %arrayidx24, align 2, !dbg !22000
  %conv25 = sext i16 %26 to i32, !dbg !22000
  %27 = load i32, i32* %v2, align 4, !dbg !22001
  %mul26 = mul nsw i32 %conv25, %27, !dbg !22002
  %add27 = add nsw i32 %add, %mul26, !dbg !22003
  %add28 = add nsw i32 %add27, 8192, !dbg !22004
  %shr = ashr i32 %add28, 14, !dbg !22005
  store i32 %shr, i32* %a.addr.i, align 4, !dbg !22006
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !22007
  %add.i = add i32 %28, 32768, !dbg !22008
  %and.i = and i32 %add.i, -65536, !dbg !22009
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !22009
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !22010

if.then.i:                                        ; preds = %for.body5
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !22011
  %shr.i = ashr i32 %29, 31, !dbg !22012
  %xor.i = xor i32 %shr.i, 32767, !dbg !22013
  %conv.i = trunc i32 %xor.i to i16, !dbg !22014
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !22015
  br label %av_clip_int16_c.exit, !dbg !22015

if.else.i:                                        ; preds = %for.body5
  %30 = load i32, i32* %a.addr.i, align 4, !dbg !22016
  %conv1.i = trunc i32 %30 to i16, !dbg !22016
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !22017
  br label %av_clip_int16_c.exit, !dbg !22017

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %31 = load i16, i16* %retval.i, align 2, !dbg !22018
  %32 = load i32, i32* %x, align 4, !dbg !22019
  %idxprom29 = sext i32 %32 to i64, !dbg !22020
  %33 = load i16*, i16** %buf0, align 8, !dbg !22020
  %arrayidx30 = getelementptr inbounds i16, i16* %33, i64 %idxprom29, !dbg !22020
  store i16 %31, i16* %arrayidx30, align 2, !dbg !22021
  %34 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22022
  %arrayidx31 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %34, i64 1, !dbg !22022
  %arrayidx32 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx31, i64 0, i64 0, !dbg !22022
  %arrayidx33 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx32, i64 0, i64 0, !dbg !22022
  %35 = load i16, i16* %arrayidx33, align 2, !dbg !22022
  %conv34 = sext i16 %35 to i32, !dbg !22022
  %36 = load i32, i32* %v0, align 4, !dbg !22023
  %mul35 = mul nsw i32 %conv34, %36, !dbg !22024
  %37 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22025
  %arrayidx36 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %37, i64 1, !dbg !22025
  %arrayidx37 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx36, i64 0, i64 1, !dbg !22025
  %arrayidx38 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx37, i64 0, i64 0, !dbg !22025
  %38 = load i16, i16* %arrayidx38, align 2, !dbg !22025
  %conv39 = sext i16 %38 to i32, !dbg !22025
  %39 = load i32, i32* %v1, align 4, !dbg !22026
  %mul40 = mul nsw i32 %conv39, %39, !dbg !22027
  %add41 = add nsw i32 %mul35, %mul40, !dbg !22028
  %40 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22029
  %arrayidx42 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %40, i64 1, !dbg !22029
  %arrayidx43 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx42, i64 0, i64 2, !dbg !22029
  %arrayidx44 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx43, i64 0, i64 0, !dbg !22029
  %41 = load i16, i16* %arrayidx44, align 2, !dbg !22029
  %conv45 = sext i16 %41 to i32, !dbg !22029
  %42 = load i32, i32* %v2, align 4, !dbg !22030
  %mul46 = mul nsw i32 %conv45, %42, !dbg !22031
  %add47 = add nsw i32 %add41, %mul46, !dbg !22032
  %add48 = add nsw i32 %add47, 8192, !dbg !22033
  %shr49 = ashr i32 %add48, 14, !dbg !22034
  store i32 %shr49, i32* %a.addr.i93, align 4, !dbg !22035
  %43 = load i32, i32* %a.addr.i93, align 4, !dbg !22036
  %add.i94 = add i32 %43, 32768, !dbg !22037
  %and.i95 = and i32 %add.i94, -65536, !dbg !22038
  %tobool.i96 = icmp ne i32 %and.i95, 0, !dbg !22038
  br i1 %tobool.i96, label %if.then.i100, label %if.else.i102, !dbg !22039

if.then.i100:                                     ; preds = %av_clip_int16_c.exit
  %44 = load i32, i32* %a.addr.i93, align 4, !dbg !22040
  %shr.i97 = ashr i32 %44, 31, !dbg !22041
  %xor.i98 = xor i32 %shr.i97, 32767, !dbg !22042
  %conv.i99 = trunc i32 %xor.i98 to i16, !dbg !22043
  store i16 %conv.i99, i16* %retval.i92, align 2, !dbg !22044
  br label %av_clip_int16_c.exit103, !dbg !22044

if.else.i102:                                     ; preds = %av_clip_int16_c.exit
  %45 = load i32, i32* %a.addr.i93, align 4, !dbg !22045
  %conv1.i101 = trunc i32 %45 to i16, !dbg !22045
  store i16 %conv1.i101, i16* %retval.i92, align 2, !dbg !22046
  br label %av_clip_int16_c.exit103, !dbg !22046

av_clip_int16_c.exit103:                          ; preds = %if.then.i100, %if.else.i102
  %46 = load i16, i16* %retval.i92, align 2, !dbg !22047
  %47 = load i32, i32* %x, align 4, !dbg !22048
  %idxprom51 = sext i32 %47 to i64, !dbg !22049
  %48 = load i16*, i16** %buf1, align 8, !dbg !22049
  %arrayidx52 = getelementptr inbounds i16, i16* %48, i64 %idxprom51, !dbg !22049
  store i16 %46, i16* %arrayidx52, align 2, !dbg !22050
  %49 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22051
  %arrayidx53 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %49, i64 2, !dbg !22051
  %arrayidx54 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx53, i64 0, i64 0, !dbg !22051
  %arrayidx55 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx54, i64 0, i64 0, !dbg !22051
  %50 = load i16, i16* %arrayidx55, align 2, !dbg !22051
  %conv56 = sext i16 %50 to i32, !dbg !22051
  %51 = load i32, i32* %v0, align 4, !dbg !22052
  %mul57 = mul nsw i32 %conv56, %51, !dbg !22053
  %52 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22054
  %arrayidx58 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %52, i64 2, !dbg !22054
  %arrayidx59 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx58, i64 0, i64 1, !dbg !22054
  %arrayidx60 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx59, i64 0, i64 0, !dbg !22054
  %53 = load i16, i16* %arrayidx60, align 2, !dbg !22054
  %conv61 = sext i16 %53 to i32, !dbg !22054
  %54 = load i32, i32* %v1, align 4, !dbg !22055
  %mul62 = mul nsw i32 %conv61, %54, !dbg !22056
  %add63 = add nsw i32 %mul57, %mul62, !dbg !22057
  %55 = load [3 x [8 x i16]]*, [3 x [8 x i16]]** %m.addr, align 8, !dbg !22058
  %arrayidx64 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %55, i64 2, !dbg !22058
  %arrayidx65 = getelementptr inbounds [3 x [8 x i16]], [3 x [8 x i16]]* %arrayidx64, i64 0, i64 2, !dbg !22058
  %arrayidx66 = getelementptr inbounds [8 x i16], [8 x i16]* %arrayidx65, i64 0, i64 0, !dbg !22058
  %56 = load i16, i16* %arrayidx66, align 2, !dbg !22058
  %conv67 = sext i16 %56 to i32, !dbg !22058
  %57 = load i32, i32* %v2, align 4, !dbg !22059
  %mul68 = mul nsw i32 %conv67, %57, !dbg !22060
  %add69 = add nsw i32 %add63, %mul68, !dbg !22061
  %add70 = add nsw i32 %add69, 8192, !dbg !22062
  %shr71 = ashr i32 %add70, 14, !dbg !22063
  store i32 %shr71, i32* %a.addr.i81, align 4, !dbg !22064
  %58 = load i32, i32* %a.addr.i81, align 4, !dbg !22065
  %add.i82 = add i32 %58, 32768, !dbg !22066
  %and.i83 = and i32 %add.i82, -65536, !dbg !22067
  %tobool.i84 = icmp ne i32 %and.i83, 0, !dbg !22067
  br i1 %tobool.i84, label %if.then.i88, label %if.else.i90, !dbg !22068

if.then.i88:                                      ; preds = %av_clip_int16_c.exit103
  %59 = load i32, i32* %a.addr.i81, align 4, !dbg !22069
  %shr.i85 = ashr i32 %59, 31, !dbg !22070
  %xor.i86 = xor i32 %shr.i85, 32767, !dbg !22071
  %conv.i87 = trunc i32 %xor.i86 to i16, !dbg !22072
  store i16 %conv.i87, i16* %retval.i80, align 2, !dbg !22073
  br label %av_clip_int16_c.exit91, !dbg !22073

if.else.i90:                                      ; preds = %av_clip_int16_c.exit103
  %60 = load i32, i32* %a.addr.i81, align 4, !dbg !22074
  %conv1.i89 = trunc i32 %60 to i16, !dbg !22074
  store i16 %conv1.i89, i16* %retval.i80, align 2, !dbg !22075
  br label %av_clip_int16_c.exit91, !dbg !22075

av_clip_int16_c.exit91:                           ; preds = %if.then.i88, %if.else.i90
  %61 = load i16, i16* %retval.i80, align 2, !dbg !22076
  %62 = load i32, i32* %x, align 4, !dbg !22077
  %idxprom73 = sext i32 %62 to i64, !dbg !22078
  %63 = load i16*, i16** %buf2, align 8, !dbg !22078
  %arrayidx74 = getelementptr inbounds i16, i16* %63, i64 %idxprom73, !dbg !22078
  store i16 %61, i16* %arrayidx74, align 2, !dbg !22079
  br label %for.inc, !dbg !22080

for.inc:                                          ; preds = %av_clip_int16_c.exit91
  %64 = load i32, i32* %x, align 4, !dbg !22081
  %inc = add nsw i32 %64, 1, !dbg !22081
  store i32 %inc, i32* %x, align 4, !dbg !22081
  br label %for.cond3, !dbg !22083, !llvm.loop !22084

for.end:                                          ; preds = %for.cond3
  %65 = load i64, i64* %stride.addr, align 8, !dbg !22086
  %66 = load i16*, i16** %buf0, align 8, !dbg !22087
  %add.ptr = getelementptr inbounds i16, i16* %66, i64 %65, !dbg !22087
  store i16* %add.ptr, i16** %buf0, align 8, !dbg !22087
  %67 = load i64, i64* %stride.addr, align 8, !dbg !22088
  %68 = load i16*, i16** %buf1, align 8, !dbg !22089
  %add.ptr75 = getelementptr inbounds i16, i16* %68, i64 %67, !dbg !22089
  store i16* %add.ptr75, i16** %buf1, align 8, !dbg !22089
  %69 = load i64, i64* %stride.addr, align 8, !dbg !22090
  %70 = load i16*, i16** %buf2, align 8, !dbg !22091
  %add.ptr76 = getelementptr inbounds i16, i16* %70, i64 %69, !dbg !22091
  store i16* %add.ptr76, i16** %buf2, align 8, !dbg !22091
  br label %for.inc77, !dbg !22092

for.inc77:                                        ; preds = %for.end
  %71 = load i32, i32* %y, align 4, !dbg !22093
  %inc78 = add nsw i32 %71, 1, !dbg !22093
  store i32 %inc78, i32* %y, align 4, !dbg !22093
  br label %for.cond, !dbg !22095, !llvm.loop !22096

for.end79:                                        ; preds = %for.cond
  ret void, !dbg !22098
}

declare void @ff_colorspacedsp_x86_init(%struct.ColorSpaceDSPContext*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!26, !27}
!llvm.ident = !{!28}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !16)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--colorspacedsp.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !10}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ChromaSubsamplingIndex", file: !4, line: 52, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "libavfilter/colorspacedsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "SS_444", value: 0)
!7 = !DIEnumerator(name: "SS_422", value: 1)
!8 = !DIEnumerator(name: "SS_420", value: 2)
!9 = !DIEnumerator(name: "NB_SS", value: 3)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BitDepthIndex", file: !4, line: 45, size: 32, align: 32, elements: !11)
!11 = !{!12, !13, !14, !15}
!12 = !DIEnumerator(name: "BPP_8", value: 0)
!13 = !DIEnumerator(name: "BPP_10", value: 1)
!14 = !DIEnumerator(name: "BPP_12", value: 2)
!15 = !DIEnumerator(name: "NB_BPP", value: 3)
!16 = !{!17, !22}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64, align: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !20, line: 48, baseType: !21)
!20 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!21 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !20, line: 49, baseType: !25)
!25 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!26 = !{i32 2, !"Dwarf Version", i32 4}
!27 = !{i32 2, !"Debug Info Version", i32 3}
!28 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!29 = distinct !DISubprogram(name: "ff_colorspacedsp_init", scope: !30, file: !30, line: 101, type: !31, isLocal: false, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!30 = !DIFile(filename: "libavfilter/colorspacedsp.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!31 = !DISubroutineType(types: !32)
!32 = !{null, !33}
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorSpaceDSPContext", file: !4, line: 76, baseType: !35)
!35 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpaceDSPContext", file: !4, line: 59, size: 3520, align: 64, elements: !36)
!36 = !{!37, !61, !67, !78, !88}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "yuv2rgb", scope: !35, file: !4, line: 62, baseType: !38, size: 576, align: 64)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 576, align: 64, elements: !60)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "yuv2rgb_fn", file: !4, line: 27, baseType: !40)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DISubroutineType(types: !42)
!42 = !{null, !43, !47, !17, !50, !52, !52, !53, !59}
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !20, line: 37, baseType: !46)
!46 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !48, line: 149, baseType: !49)
!48 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!49 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!52 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 384, align: 16, elements: !56)
!55 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!56 = !{!57, !58}
!57 = !DISubrange(count: 3)
!58 = !DISubrange(count: 8)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!60 = !{!57, !57}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "rgb2yuv", scope: !35, file: !4, line: 65, baseType: !62, size: 576, align: 64, offset: 576)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 576, align: 64, elements: !60)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "rgb2yuv_fn", file: !4, line: 31, baseType: !64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64, align: 64)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !17, !50, !43, !47, !52, !52, !53, !59}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "rgb2yuv_fsb", scope: !35, file: !4, line: 67, baseType: !68, size: 576, align: 64, offset: 1152)
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 576, align: 64, elements: !60)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "rgb2yuv_fsb_fn", file: !4, line: 35, baseType: !70)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64, align: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{null, !17, !50, !43, !47, !52, !52, !53, !59, !73}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DICompositeType(tag: DW_TAG_array_type, baseType: !75, size: 128, align: 64, elements: !76)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!76 = !{!77}
!77 = !DISubrange(count: 2)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "yuv2yuv", scope: !35, file: !4, line: 70, baseType: !79, size: 1728, align: 64, offset: 1728)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 1728, align: 64, elements: !87)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "yuv2yuv_fn", file: !4, line: 40, baseType: !81)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!82 = !DISubroutineType(types: !83)
!83 = !{null, !17, !50, !17, !50, !52, !52, !53, !84}
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 128, align: 16, elements: !86)
!86 = !{!58}
!87 = !{!57, !57, !57}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "multiply3x3", scope: !35, file: !4, line: 74, baseType: !89, size: 64, align: 64, offset: 3456)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, align: 64)
!90 = !DISubroutineType(types: !91)
!91 = !{null, !43, !47, !52, !52, !53}
!92 = !{}
!93 = !DILocalVariable(name: "dsp", arg: 1, scope: !29, file: !30, line: 101, type: !33)
!94 = !DIExpression()
!95 = !DILocation(line: 101, column: 50, scope: !29)
!96 = !DILocation(line: 108, column: 5, scope: !29)
!97 = !DILocation(line: 108, column: 10, scope: !29)
!98 = !DILocation(line: 108, column: 33, scope: !29)
!99 = !DILocation(line: 108, column: 52, scope: !29)
!100 = !DILocation(line: 108, column: 57, scope: !29)
!101 = !DILocation(line: 108, column: 80, scope: !29)
!102 = !DILocation(line: 108, column: 99, scope: !29)
!103 = !DILocation(line: 108, column: 104, scope: !29)
!104 = !DILocation(line: 108, column: 127, scope: !29)
!105 = !DILocation(line: 109, column: 5, scope: !29)
!106 = !DILocation(line: 109, column: 10, scope: !29)
!107 = !DILocation(line: 109, column: 34, scope: !29)
!108 = !DILocation(line: 109, column: 54, scope: !29)
!109 = !DILocation(line: 109, column: 59, scope: !29)
!110 = !DILocation(line: 109, column: 83, scope: !29)
!111 = !DILocation(line: 109, column: 103, scope: !29)
!112 = !DILocation(line: 109, column: 108, scope: !29)
!113 = !DILocation(line: 109, column: 132, scope: !29)
!114 = !DILocation(line: 110, column: 5, scope: !29)
!115 = !DILocation(line: 110, column: 10, scope: !29)
!116 = !DILocation(line: 110, column: 34, scope: !29)
!117 = !DILocation(line: 110, column: 54, scope: !29)
!118 = !DILocation(line: 110, column: 59, scope: !29)
!119 = !DILocation(line: 110, column: 83, scope: !29)
!120 = !DILocation(line: 110, column: 103, scope: !29)
!121 = !DILocation(line: 110, column: 108, scope: !29)
!122 = !DILocation(line: 110, column: 132, scope: !29)
!123 = !DILocation(line: 117, column: 5, scope: !29)
!124 = !DILocation(line: 117, column: 10, scope: !29)
!125 = !DILocation(line: 117, column: 33, scope: !29)
!126 = !DILocation(line: 117, column: 52, scope: !29)
!127 = !DILocation(line: 117, column: 57, scope: !29)
!128 = !DILocation(line: 117, column: 80, scope: !29)
!129 = !DILocation(line: 117, column: 99, scope: !29)
!130 = !DILocation(line: 117, column: 104, scope: !29)
!131 = !DILocation(line: 117, column: 127, scope: !29)
!132 = !DILocation(line: 118, column: 5, scope: !29)
!133 = !DILocation(line: 118, column: 10, scope: !29)
!134 = !DILocation(line: 118, column: 34, scope: !29)
!135 = !DILocation(line: 118, column: 54, scope: !29)
!136 = !DILocation(line: 118, column: 59, scope: !29)
!137 = !DILocation(line: 118, column: 83, scope: !29)
!138 = !DILocation(line: 118, column: 103, scope: !29)
!139 = !DILocation(line: 118, column: 108, scope: !29)
!140 = !DILocation(line: 118, column: 132, scope: !29)
!141 = !DILocation(line: 119, column: 5, scope: !29)
!142 = !DILocation(line: 119, column: 10, scope: !29)
!143 = !DILocation(line: 119, column: 34, scope: !29)
!144 = !DILocation(line: 119, column: 54, scope: !29)
!145 = !DILocation(line: 119, column: 59, scope: !29)
!146 = !DILocation(line: 119, column: 83, scope: !29)
!147 = !DILocation(line: 119, column: 103, scope: !29)
!148 = !DILocation(line: 119, column: 108, scope: !29)
!149 = !DILocation(line: 119, column: 132, scope: !29)
!150 = !DILocation(line: 126, column: 5, scope: !29)
!151 = !DILocation(line: 126, column: 10, scope: !29)
!152 = !DILocation(line: 126, column: 37, scope: !29)
!153 = !DILocation(line: 126, column: 60, scope: !29)
!154 = !DILocation(line: 126, column: 65, scope: !29)
!155 = !DILocation(line: 126, column: 92, scope: !29)
!156 = !DILocation(line: 126, column: 115, scope: !29)
!157 = !DILocation(line: 126, column: 120, scope: !29)
!158 = !DILocation(line: 126, column: 147, scope: !29)
!159 = !DILocation(line: 127, column: 5, scope: !29)
!160 = !DILocation(line: 127, column: 10, scope: !29)
!161 = !DILocation(line: 127, column: 38, scope: !29)
!162 = !DILocation(line: 127, column: 62, scope: !29)
!163 = !DILocation(line: 127, column: 67, scope: !29)
!164 = !DILocation(line: 127, column: 95, scope: !29)
!165 = !DILocation(line: 127, column: 119, scope: !29)
!166 = !DILocation(line: 127, column: 124, scope: !29)
!167 = !DILocation(line: 127, column: 152, scope: !29)
!168 = !DILocation(line: 128, column: 5, scope: !29)
!169 = !DILocation(line: 128, column: 10, scope: !29)
!170 = !DILocation(line: 128, column: 38, scope: !29)
!171 = !DILocation(line: 128, column: 62, scope: !29)
!172 = !DILocation(line: 128, column: 67, scope: !29)
!173 = !DILocation(line: 128, column: 95, scope: !29)
!174 = !DILocation(line: 128, column: 119, scope: !29)
!175 = !DILocation(line: 128, column: 124, scope: !29)
!176 = !DILocation(line: 128, column: 152, scope: !29)
!177 = !DILocation(line: 139, column: 5, scope: !29)
!178 = !DILocation(line: 139, column: 10, scope: !29)
!179 = !DILocation(line: 139, column: 40, scope: !29)
!180 = !DILocation(line: 139, column: 62, scope: !29)
!181 = !DILocation(line: 139, column: 67, scope: !29)
!182 = !DILocation(line: 139, column: 97, scope: !29)
!183 = !DILocation(line: 139, column: 119, scope: !29)
!184 = !DILocation(line: 139, column: 124, scope: !29)
!185 = !DILocation(line: 139, column: 154, scope: !29)
!186 = !DILocation(line: 139, column: 176, scope: !29)
!187 = !DILocation(line: 139, column: 181, scope: !29)
!188 = !DILocation(line: 139, column: 212, scope: !29)
!189 = !DILocation(line: 139, column: 235, scope: !29)
!190 = !DILocation(line: 139, column: 240, scope: !29)
!191 = !DILocation(line: 139, column: 271, scope: !29)
!192 = !DILocation(line: 139, column: 294, scope: !29)
!193 = !DILocation(line: 139, column: 299, scope: !29)
!194 = !DILocation(line: 139, column: 330, scope: !29)
!195 = !DILocation(line: 139, column: 353, scope: !29)
!196 = !DILocation(line: 139, column: 358, scope: !29)
!197 = !DILocation(line: 139, column: 389, scope: !29)
!198 = !DILocation(line: 139, column: 412, scope: !29)
!199 = !DILocation(line: 139, column: 417, scope: !29)
!200 = !DILocation(line: 139, column: 448, scope: !29)
!201 = !DILocation(line: 139, column: 471, scope: !29)
!202 = !DILocation(line: 139, column: 476, scope: !29)
!203 = !DILocation(line: 139, column: 507, scope: !29)
!204 = !DILocation(line: 140, column: 5, scope: !29)
!205 = !DILocation(line: 140, column: 10, scope: !29)
!206 = !DILocation(line: 140, column: 41, scope: !29)
!207 = !DILocation(line: 140, column: 64, scope: !29)
!208 = !DILocation(line: 140, column: 69, scope: !29)
!209 = !DILocation(line: 140, column: 100, scope: !29)
!210 = !DILocation(line: 140, column: 123, scope: !29)
!211 = !DILocation(line: 140, column: 128, scope: !29)
!212 = !DILocation(line: 140, column: 159, scope: !29)
!213 = !DILocation(line: 140, column: 182, scope: !29)
!214 = !DILocation(line: 140, column: 187, scope: !29)
!215 = !DILocation(line: 140, column: 219, scope: !29)
!216 = !DILocation(line: 140, column: 243, scope: !29)
!217 = !DILocation(line: 140, column: 248, scope: !29)
!218 = !DILocation(line: 140, column: 280, scope: !29)
!219 = !DILocation(line: 140, column: 304, scope: !29)
!220 = !DILocation(line: 140, column: 309, scope: !29)
!221 = !DILocation(line: 140, column: 341, scope: !29)
!222 = !DILocation(line: 140, column: 365, scope: !29)
!223 = !DILocation(line: 140, column: 370, scope: !29)
!224 = !DILocation(line: 140, column: 402, scope: !29)
!225 = !DILocation(line: 140, column: 426, scope: !29)
!226 = !DILocation(line: 140, column: 431, scope: !29)
!227 = !DILocation(line: 140, column: 463, scope: !29)
!228 = !DILocation(line: 140, column: 487, scope: !29)
!229 = !DILocation(line: 140, column: 492, scope: !29)
!230 = !DILocation(line: 140, column: 524, scope: !29)
!231 = !DILocation(line: 141, column: 5, scope: !29)
!232 = !DILocation(line: 141, column: 10, scope: !29)
!233 = !DILocation(line: 141, column: 41, scope: !29)
!234 = !DILocation(line: 141, column: 64, scope: !29)
!235 = !DILocation(line: 141, column: 69, scope: !29)
!236 = !DILocation(line: 141, column: 100, scope: !29)
!237 = !DILocation(line: 141, column: 123, scope: !29)
!238 = !DILocation(line: 141, column: 128, scope: !29)
!239 = !DILocation(line: 141, column: 159, scope: !29)
!240 = !DILocation(line: 141, column: 182, scope: !29)
!241 = !DILocation(line: 141, column: 187, scope: !29)
!242 = !DILocation(line: 141, column: 219, scope: !29)
!243 = !DILocation(line: 141, column: 243, scope: !29)
!244 = !DILocation(line: 141, column: 248, scope: !29)
!245 = !DILocation(line: 141, column: 280, scope: !29)
!246 = !DILocation(line: 141, column: 304, scope: !29)
!247 = !DILocation(line: 141, column: 309, scope: !29)
!248 = !DILocation(line: 141, column: 341, scope: !29)
!249 = !DILocation(line: 141, column: 365, scope: !29)
!250 = !DILocation(line: 141, column: 370, scope: !29)
!251 = !DILocation(line: 141, column: 402, scope: !29)
!252 = !DILocation(line: 141, column: 426, scope: !29)
!253 = !DILocation(line: 141, column: 431, scope: !29)
!254 = !DILocation(line: 141, column: 463, scope: !29)
!255 = !DILocation(line: 141, column: 487, scope: !29)
!256 = !DILocation(line: 141, column: 492, scope: !29)
!257 = !DILocation(line: 141, column: 524, scope: !29)
!258 = !DILocation(line: 143, column: 5, scope: !29)
!259 = !DILocation(line: 143, column: 10, scope: !29)
!260 = !DILocation(line: 143, column: 22, scope: !29)
!261 = !DILocation(line: 146, column: 35, scope: !262)
!262 = distinct !DILexicalBlock(scope: !29, file: !30, line: 145, column: 9)
!263 = !DILocation(line: 146, column: 9, scope: !262)
!264 = !DILocation(line: 147, column: 1, scope: !29)
!265 = distinct !DISubprogram(name: "yuv2rgb_444p8_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!266 = !DIFile(filename: "libavfilter/colorspacedsp_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!267 = !DILocalVariable(name: "a", arg: 1, scope: !268, file: !269, line: 192, type: !52)
!268 = distinct !DISubprogram(name: "av_clip_int16_c", scope: !269, file: !269, line: 192, type: !270, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!269 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!270 = !DISubroutineType(types: !271)
!271 = !{!45, !52}
!272 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !273)
!273 = distinct !DILocation(line: 98, column: 28, scope: !274)
!274 = distinct !DILexicalBlock(scope: !275, file: !266, line: 78, column: 33)
!275 = distinct !DILexicalBlock(scope: !276, file: !266, line: 78, column: 9)
!276 = distinct !DILexicalBlock(scope: !277, file: !266, line: 78, column: 9)
!277 = distinct !DILexicalBlock(scope: !278, file: !266, line: 77, column: 29)
!278 = distinct !DILexicalBlock(scope: !279, file: !266, line: 77, column: 5)
!279 = distinct !DILexicalBlock(scope: !265, file: !266, line: 77, column: 5)
!280 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !281)
!281 = distinct !DILocation(line: 111, column: 28, scope: !274)
!282 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !283)
!283 = distinct !DILocation(line: 89, column: 28, scope: !274)
!284 = !DILocalVariable(name: "rgb", arg: 1, scope: !265, file: !266, line: 54, type: !43)
!285 = !DILocation(line: 54, column: 38, scope: !265)
!286 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !265, file: !266, line: 54, type: !47)
!287 = !DILocation(line: 54, column: 56, scope: !265)
!288 = !DILocalVariable(name: "_yuv", arg: 3, scope: !265, file: !266, line: 55, type: !17)
!289 = !DILocation(line: 55, column: 34, scope: !265)
!290 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !265, file: !266, line: 55, type: !50)
!291 = !DILocation(line: 55, column: 59, scope: !265)
!292 = !DILocalVariable(name: "w", arg: 5, scope: !265, file: !266, line: 56, type: !52)
!293 = !DILocation(line: 56, column: 29, scope: !265)
!294 = !DILocalVariable(name: "h", arg: 6, scope: !265, file: !266, line: 56, type: !52)
!295 = !DILocation(line: 56, column: 36, scope: !265)
!296 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !265, file: !266, line: 56, type: !53)
!297 = !DILocation(line: 56, column: 53, scope: !265)
!298 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !265, file: !266, line: 57, type: !59)
!299 = !DILocation(line: 57, column: 39, scope: !265)
!300 = !DILocalVariable(name: "yuv", scope: !265, file: !266, line: 59, type: !17)
!301 = !DILocation(line: 59, column: 15, scope: !265)
!302 = !DILocation(line: 59, column: 34, scope: !265)
!303 = !DILocalVariable(name: "yuv0", scope: !265, file: !266, line: 60, type: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!306 = !DILocation(line: 60, column: 20, scope: !265)
!307 = !DILocation(line: 60, column: 27, scope: !265)
!308 = !DILocalVariable(name: "yuv1", scope: !265, file: !266, line: 60, type: !304)
!309 = !DILocation(line: 60, column: 36, scope: !265)
!310 = !DILocation(line: 60, column: 43, scope: !265)
!311 = !DILocalVariable(name: "yuv2", scope: !265, file: !266, line: 60, type: !304)
!312 = !DILocation(line: 60, column: 52, scope: !265)
!313 = !DILocation(line: 60, column: 59, scope: !265)
!314 = !DILocalVariable(name: "rgb0", scope: !265, file: !266, line: 61, type: !44)
!315 = !DILocation(line: 61, column: 14, scope: !265)
!316 = !DILocation(line: 61, column: 21, scope: !265)
!317 = !DILocalVariable(name: "rgb1", scope: !265, file: !266, line: 61, type: !44)
!318 = !DILocation(line: 61, column: 30, scope: !265)
!319 = !DILocation(line: 61, column: 37, scope: !265)
!320 = !DILocalVariable(name: "rgb2", scope: !265, file: !266, line: 61, type: !44)
!321 = !DILocation(line: 61, column: 46, scope: !265)
!322 = !DILocation(line: 61, column: 53, scope: !265)
!323 = !DILocalVariable(name: "y", scope: !265, file: !266, line: 62, type: !52)
!324 = !DILocation(line: 62, column: 9, scope: !265)
!325 = !DILocalVariable(name: "x", scope: !265, file: !266, line: 62, type: !52)
!326 = !DILocation(line: 62, column: 12, scope: !265)
!327 = !DILocalVariable(name: "cy", scope: !265, file: !266, line: 63, type: !52)
!328 = !DILocation(line: 63, column: 9, scope: !265)
!329 = !DILocation(line: 63, column: 14, scope: !265)
!330 = !DILocalVariable(name: "crv", scope: !265, file: !266, line: 64, type: !52)
!331 = !DILocation(line: 64, column: 9, scope: !265)
!332 = !DILocation(line: 64, column: 15, scope: !265)
!333 = !DILocalVariable(name: "cgu", scope: !265, file: !266, line: 65, type: !52)
!334 = !DILocation(line: 65, column: 9, scope: !265)
!335 = !DILocation(line: 65, column: 15, scope: !265)
!336 = !DILocalVariable(name: "cgv", scope: !265, file: !266, line: 66, type: !52)
!337 = !DILocation(line: 66, column: 9, scope: !265)
!338 = !DILocation(line: 66, column: 15, scope: !265)
!339 = !DILocalVariable(name: "cbu", scope: !265, file: !266, line: 67, type: !52)
!340 = !DILocation(line: 67, column: 9, scope: !265)
!341 = !DILocation(line: 67, column: 15, scope: !265)
!342 = !DILocalVariable(name: "sh", scope: !265, file: !266, line: 68, type: !343)
!343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!344 = !DILocation(line: 68, column: 15, scope: !265)
!345 = !DILocalVariable(name: "rnd", scope: !265, file: !266, line: 68, type: !343)
!346 = !DILocation(line: 68, column: 27, scope: !265)
!347 = !DILocalVariable(name: "uv_offset", scope: !265, file: !266, line: 69, type: !343)
!348 = !DILocation(line: 69, column: 15, scope: !265)
!349 = !DILocation(line: 75, column: 58, scope: !265)
!350 = !DILocation(line: 75, column: 61, scope: !265)
!351 = !DILocation(line: 75, column: 72, scope: !265)
!352 = !DILocation(line: 75, column: 77, scope: !265)
!353 = !DILocation(line: 75, column: 7, scope: !265)
!354 = !DILocation(line: 76, column: 58, scope: !265)
!355 = !DILocation(line: 76, column: 61, scope: !265)
!356 = !DILocation(line: 76, column: 72, scope: !265)
!357 = !DILocation(line: 76, column: 77, scope: !265)
!358 = !DILocation(line: 76, column: 7, scope: !265)
!359 = !DILocation(line: 77, column: 12, scope: !279)
!360 = !DILocation(line: 77, column: 10, scope: !279)
!361 = !DILocation(line: 77, column: 17, scope: !362)
!362 = !DILexicalBlockFile(scope: !278, file: !266, discriminator: 1)
!363 = !DILocation(line: 77, column: 21, scope: !362)
!364 = !DILocation(line: 77, column: 19, scope: !362)
!365 = !DILocation(line: 77, column: 5, scope: !362)
!366 = !DILocation(line: 78, column: 16, scope: !276)
!367 = !DILocation(line: 78, column: 14, scope: !276)
!368 = !DILocation(line: 78, column: 21, scope: !369)
!369 = !DILexicalBlockFile(scope: !275, file: !266, discriminator: 1)
!370 = !DILocation(line: 78, column: 25, scope: !369)
!371 = !DILocation(line: 78, column: 23, scope: !369)
!372 = !DILocation(line: 78, column: 9, scope: !369)
!373 = !DILocalVariable(name: "y00", scope: !274, file: !266, line: 79, type: !52)
!374 = !DILocation(line: 79, column: 17, scope: !274)
!375 = !DILocation(line: 79, column: 28, scope: !274)
!376 = !DILocation(line: 79, column: 30, scope: !274)
!377 = !DILocation(line: 79, column: 23, scope: !274)
!378 = !DILocation(line: 79, column: 38, scope: !274)
!379 = !DILocation(line: 79, column: 36, scope: !274)
!380 = !DILocalVariable(name: "u", scope: !274, file: !266, line: 87, type: !52)
!381 = !DILocation(line: 87, column: 17, scope: !274)
!382 = !DILocation(line: 87, column: 26, scope: !274)
!383 = !DILocation(line: 87, column: 21, scope: !274)
!384 = !DILocation(line: 87, column: 29, scope: !274)
!385 = !DILocalVariable(name: "v", scope: !274, file: !266, line: 87, type: !52)
!386 = !DILocation(line: 87, column: 42, scope: !274)
!387 = !DILocation(line: 87, column: 51, scope: !274)
!388 = !DILocation(line: 87, column: 46, scope: !274)
!389 = !DILocation(line: 87, column: 54, scope: !274)
!390 = !DILocation(line: 89, column: 45, scope: !274)
!391 = !DILocation(line: 89, column: 51, scope: !274)
!392 = !DILocation(line: 89, column: 49, scope: !274)
!393 = !DILocation(line: 89, column: 56, scope: !274)
!394 = !DILocation(line: 89, column: 62, scope: !274)
!395 = !DILocation(line: 89, column: 60, scope: !274)
!396 = !DILocation(line: 89, column: 54, scope: !274)
!397 = !DILocation(line: 89, column: 64, scope: !274)
!398 = !DILocation(line: 89, column: 71, scope: !274)
!399 = !DILocation(line: 89, column: 28, scope: !274)
!400 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !283)
!401 = distinct !DILexicalBlock(scope: !268, file: !269, line: 194, column: 9)
!402 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !283)
!403 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !283)
!404 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !283)
!405 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !283)
!406 = !DILexicalBlockFile(scope: !401, file: !269, discriminator: 1)
!407 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !283)
!408 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !283)
!409 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !283)
!410 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !283)
!411 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !283)
!412 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !283)
!413 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !283)
!414 = !DILocation(line: 89, column: 18, scope: !274)
!415 = !DILocation(line: 89, column: 20, scope: !274)
!416 = !DILocation(line: 89, column: 13, scope: !274)
!417 = !DILocation(line: 89, column: 26, scope: !274)
!418 = !DILocation(line: 98, column: 45, scope: !274)
!419 = !DILocation(line: 98, column: 51, scope: !274)
!420 = !DILocation(line: 98, column: 49, scope: !274)
!421 = !DILocation(line: 98, column: 56, scope: !274)
!422 = !DILocation(line: 98, column: 62, scope: !274)
!423 = !DILocation(line: 98, column: 60, scope: !274)
!424 = !DILocation(line: 98, column: 54, scope: !274)
!425 = !DILocation(line: 99, column: 59, scope: !274)
!426 = !DILocation(line: 99, column: 65, scope: !274)
!427 = !DILocation(line: 99, column: 63, scope: !274)
!428 = !DILocation(line: 98, column: 64, scope: !274)
!429 = !DILocation(line: 99, column: 67, scope: !274)
!430 = !DILocation(line: 99, column: 74, scope: !274)
!431 = !DILocation(line: 98, column: 28, scope: !274)
!432 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !273)
!433 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !273)
!434 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !273)
!435 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !273)
!436 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !273)
!437 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !273)
!438 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !273)
!439 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !273)
!440 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !273)
!441 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !273)
!442 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !273)
!443 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !273)
!444 = !DILocation(line: 98, column: 18, scope: !274)
!445 = !DILocation(line: 98, column: 20, scope: !274)
!446 = !DILocation(line: 98, column: 13, scope: !274)
!447 = !DILocation(line: 98, column: 26, scope: !274)
!448 = !DILocation(line: 111, column: 45, scope: !274)
!449 = !DILocation(line: 111, column: 51, scope: !274)
!450 = !DILocation(line: 111, column: 49, scope: !274)
!451 = !DILocation(line: 111, column: 56, scope: !274)
!452 = !DILocation(line: 111, column: 62, scope: !274)
!453 = !DILocation(line: 111, column: 60, scope: !274)
!454 = !DILocation(line: 111, column: 54, scope: !274)
!455 = !DILocation(line: 111, column: 64, scope: !274)
!456 = !DILocation(line: 111, column: 71, scope: !274)
!457 = !DILocation(line: 111, column: 28, scope: !274)
!458 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !281)
!459 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !281)
!460 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !281)
!461 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !281)
!462 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !281)
!463 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !281)
!464 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !281)
!465 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !281)
!466 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !281)
!467 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !281)
!468 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !281)
!469 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !281)
!470 = !DILocation(line: 111, column: 18, scope: !274)
!471 = !DILocation(line: 111, column: 20, scope: !274)
!472 = !DILocation(line: 111, column: 13, scope: !274)
!473 = !DILocation(line: 111, column: 26, scope: !274)
!474 = !DILocation(line: 119, column: 9, scope: !274)
!475 = !DILocation(line: 78, column: 29, scope: !476)
!476 = !DILexicalBlockFile(scope: !275, file: !266, discriminator: 2)
!477 = !DILocation(line: 78, column: 9, scope: !476)
!478 = distinct !{!478, !479}
!479 = !DILocation(line: 78, column: 9, scope: !277)
!480 = !DILocation(line: 121, column: 18, scope: !277)
!481 = !DILocation(line: 121, column: 32, scope: !277)
!482 = !DILocation(line: 121, column: 44, scope: !277)
!483 = !DILocation(line: 121, column: 14, scope: !277)
!484 = !DILocation(line: 122, column: 17, scope: !277)
!485 = !DILocation(line: 122, column: 31, scope: !277)
!486 = !DILocation(line: 122, column: 14, scope: !277)
!487 = !DILocation(line: 123, column: 17, scope: !277)
!488 = !DILocation(line: 123, column: 31, scope: !277)
!489 = !DILocation(line: 123, column: 14, scope: !277)
!490 = !DILocation(line: 124, column: 17, scope: !277)
!491 = !DILocation(line: 124, column: 28, scope: !277)
!492 = !DILocation(line: 124, column: 14, scope: !277)
!493 = !DILocation(line: 125, column: 17, scope: !277)
!494 = !DILocation(line: 125, column: 28, scope: !277)
!495 = !DILocation(line: 125, column: 14, scope: !277)
!496 = !DILocation(line: 126, column: 17, scope: !277)
!497 = !DILocation(line: 126, column: 28, scope: !277)
!498 = !DILocation(line: 126, column: 14, scope: !277)
!499 = !DILocation(line: 127, column: 5, scope: !277)
!500 = !DILocation(line: 77, column: 25, scope: !501)
!501 = !DILexicalBlockFile(scope: !278, file: !266, discriminator: 2)
!502 = !DILocation(line: 77, column: 5, scope: !501)
!503 = distinct !{!503, !504}
!504 = !DILocation(line: 77, column: 5, scope: !265)
!505 = !DILocation(line: 128, column: 1, scope: !265)
!506 = distinct !DISubprogram(name: "yuv2rgb_422p8_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!507 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !508)
!508 = distinct !DILocation(line: 91, column: 31, scope: !509)
!509 = distinct !DILexicalBlock(scope: !510, file: !266, line: 78, column: 33)
!510 = distinct !DILexicalBlock(scope: !511, file: !266, line: 78, column: 9)
!511 = distinct !DILexicalBlock(scope: !512, file: !266, line: 78, column: 9)
!512 = distinct !DILexicalBlock(scope: !513, file: !266, line: 77, column: 29)
!513 = distinct !DILexicalBlock(scope: !514, file: !266, line: 77, column: 5)
!514 = distinct !DILexicalBlock(scope: !506, file: !266, line: 77, column: 5)
!515 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !516)
!516 = distinct !DILocation(line: 98, column: 28, scope: !509)
!517 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !518)
!518 = distinct !DILocation(line: 101, column: 31, scope: !509)
!519 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !520)
!520 = distinct !DILocation(line: 111, column: 28, scope: !509)
!521 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !522)
!522 = distinct !DILocation(line: 113, column: 31, scope: !509)
!523 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !524)
!524 = distinct !DILocation(line: 89, column: 28, scope: !509)
!525 = !DILocalVariable(name: "rgb", arg: 1, scope: !506, file: !266, line: 54, type: !43)
!526 = !DILocation(line: 54, column: 38, scope: !506)
!527 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !506, file: !266, line: 54, type: !47)
!528 = !DILocation(line: 54, column: 56, scope: !506)
!529 = !DILocalVariable(name: "_yuv", arg: 3, scope: !506, file: !266, line: 55, type: !17)
!530 = !DILocation(line: 55, column: 34, scope: !506)
!531 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !506, file: !266, line: 55, type: !50)
!532 = !DILocation(line: 55, column: 59, scope: !506)
!533 = !DILocalVariable(name: "w", arg: 5, scope: !506, file: !266, line: 56, type: !52)
!534 = !DILocation(line: 56, column: 29, scope: !506)
!535 = !DILocalVariable(name: "h", arg: 6, scope: !506, file: !266, line: 56, type: !52)
!536 = !DILocation(line: 56, column: 36, scope: !506)
!537 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !506, file: !266, line: 56, type: !53)
!538 = !DILocation(line: 56, column: 53, scope: !506)
!539 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !506, file: !266, line: 57, type: !59)
!540 = !DILocation(line: 57, column: 39, scope: !506)
!541 = !DILocalVariable(name: "yuv", scope: !506, file: !266, line: 59, type: !17)
!542 = !DILocation(line: 59, column: 15, scope: !506)
!543 = !DILocation(line: 59, column: 34, scope: !506)
!544 = !DILocalVariable(name: "yuv0", scope: !506, file: !266, line: 60, type: !304)
!545 = !DILocation(line: 60, column: 20, scope: !506)
!546 = !DILocation(line: 60, column: 27, scope: !506)
!547 = !DILocalVariable(name: "yuv1", scope: !506, file: !266, line: 60, type: !304)
!548 = !DILocation(line: 60, column: 36, scope: !506)
!549 = !DILocation(line: 60, column: 43, scope: !506)
!550 = !DILocalVariable(name: "yuv2", scope: !506, file: !266, line: 60, type: !304)
!551 = !DILocation(line: 60, column: 52, scope: !506)
!552 = !DILocation(line: 60, column: 59, scope: !506)
!553 = !DILocalVariable(name: "rgb0", scope: !506, file: !266, line: 61, type: !44)
!554 = !DILocation(line: 61, column: 14, scope: !506)
!555 = !DILocation(line: 61, column: 21, scope: !506)
!556 = !DILocalVariable(name: "rgb1", scope: !506, file: !266, line: 61, type: !44)
!557 = !DILocation(line: 61, column: 30, scope: !506)
!558 = !DILocation(line: 61, column: 37, scope: !506)
!559 = !DILocalVariable(name: "rgb2", scope: !506, file: !266, line: 61, type: !44)
!560 = !DILocation(line: 61, column: 46, scope: !506)
!561 = !DILocation(line: 61, column: 53, scope: !506)
!562 = !DILocalVariable(name: "y", scope: !506, file: !266, line: 62, type: !52)
!563 = !DILocation(line: 62, column: 9, scope: !506)
!564 = !DILocalVariable(name: "x", scope: !506, file: !266, line: 62, type: !52)
!565 = !DILocation(line: 62, column: 12, scope: !506)
!566 = !DILocalVariable(name: "cy", scope: !506, file: !266, line: 63, type: !52)
!567 = !DILocation(line: 63, column: 9, scope: !506)
!568 = !DILocation(line: 63, column: 14, scope: !506)
!569 = !DILocalVariable(name: "crv", scope: !506, file: !266, line: 64, type: !52)
!570 = !DILocation(line: 64, column: 9, scope: !506)
!571 = !DILocation(line: 64, column: 15, scope: !506)
!572 = !DILocalVariable(name: "cgu", scope: !506, file: !266, line: 65, type: !52)
!573 = !DILocation(line: 65, column: 9, scope: !506)
!574 = !DILocation(line: 65, column: 15, scope: !506)
!575 = !DILocalVariable(name: "cgv", scope: !506, file: !266, line: 66, type: !52)
!576 = !DILocation(line: 66, column: 9, scope: !506)
!577 = !DILocation(line: 66, column: 15, scope: !506)
!578 = !DILocalVariable(name: "cbu", scope: !506, file: !266, line: 67, type: !52)
!579 = !DILocation(line: 67, column: 9, scope: !506)
!580 = !DILocation(line: 67, column: 15, scope: !506)
!581 = !DILocalVariable(name: "sh", scope: !506, file: !266, line: 68, type: !343)
!582 = !DILocation(line: 68, column: 15, scope: !506)
!583 = !DILocalVariable(name: "rnd", scope: !506, file: !266, line: 68, type: !343)
!584 = !DILocation(line: 68, column: 27, scope: !506)
!585 = !DILocalVariable(name: "uv_offset", scope: !506, file: !266, line: 69, type: !343)
!586 = !DILocation(line: 69, column: 15, scope: !506)
!587 = !DILocation(line: 75, column: 58, scope: !506)
!588 = !DILocation(line: 75, column: 61, scope: !506)
!589 = !DILocation(line: 75, column: 72, scope: !506)
!590 = !DILocation(line: 75, column: 77, scope: !506)
!591 = !DILocation(line: 75, column: 7, scope: !506)
!592 = !DILocation(line: 76, column: 58, scope: !506)
!593 = !DILocation(line: 76, column: 61, scope: !506)
!594 = !DILocation(line: 76, column: 72, scope: !506)
!595 = !DILocation(line: 76, column: 77, scope: !506)
!596 = !DILocation(line: 76, column: 7, scope: !506)
!597 = !DILocation(line: 77, column: 12, scope: !514)
!598 = !DILocation(line: 77, column: 10, scope: !514)
!599 = !DILocation(line: 77, column: 17, scope: !600)
!600 = !DILexicalBlockFile(scope: !513, file: !266, discriminator: 1)
!601 = !DILocation(line: 77, column: 21, scope: !600)
!602 = !DILocation(line: 77, column: 19, scope: !600)
!603 = !DILocation(line: 77, column: 5, scope: !600)
!604 = !DILocation(line: 78, column: 16, scope: !511)
!605 = !DILocation(line: 78, column: 14, scope: !511)
!606 = !DILocation(line: 78, column: 21, scope: !607)
!607 = !DILexicalBlockFile(scope: !510, file: !266, discriminator: 1)
!608 = !DILocation(line: 78, column: 25, scope: !607)
!609 = !DILocation(line: 78, column: 23, scope: !607)
!610 = !DILocation(line: 78, column: 9, scope: !607)
!611 = !DILocalVariable(name: "y00", scope: !509, file: !266, line: 79, type: !52)
!612 = !DILocation(line: 79, column: 17, scope: !509)
!613 = !DILocation(line: 79, column: 28, scope: !509)
!614 = !DILocation(line: 79, column: 30, scope: !509)
!615 = !DILocation(line: 79, column: 23, scope: !509)
!616 = !DILocation(line: 79, column: 38, scope: !509)
!617 = !DILocation(line: 79, column: 36, scope: !509)
!618 = !DILocalVariable(name: "y01", scope: !509, file: !266, line: 81, type: !52)
!619 = !DILocation(line: 81, column: 17, scope: !509)
!620 = !DILocation(line: 81, column: 32, scope: !509)
!621 = !DILocation(line: 81, column: 30, scope: !509)
!622 = !DILocation(line: 81, column: 34, scope: !509)
!623 = !DILocation(line: 81, column: 23, scope: !509)
!624 = !DILocation(line: 81, column: 41, scope: !509)
!625 = !DILocation(line: 81, column: 39, scope: !509)
!626 = !DILocalVariable(name: "u", scope: !509, file: !266, line: 87, type: !52)
!627 = !DILocation(line: 87, column: 17, scope: !509)
!628 = !DILocation(line: 87, column: 26, scope: !509)
!629 = !DILocation(line: 87, column: 21, scope: !509)
!630 = !DILocation(line: 87, column: 29, scope: !509)
!631 = !DILocalVariable(name: "v", scope: !509, file: !266, line: 87, type: !52)
!632 = !DILocation(line: 87, column: 42, scope: !509)
!633 = !DILocation(line: 87, column: 51, scope: !509)
!634 = !DILocation(line: 87, column: 46, scope: !509)
!635 = !DILocation(line: 87, column: 54, scope: !509)
!636 = !DILocation(line: 89, column: 45, scope: !509)
!637 = !DILocation(line: 89, column: 51, scope: !509)
!638 = !DILocation(line: 89, column: 49, scope: !509)
!639 = !DILocation(line: 89, column: 56, scope: !509)
!640 = !DILocation(line: 89, column: 62, scope: !509)
!641 = !DILocation(line: 89, column: 60, scope: !509)
!642 = !DILocation(line: 89, column: 54, scope: !509)
!643 = !DILocation(line: 89, column: 64, scope: !509)
!644 = !DILocation(line: 89, column: 71, scope: !509)
!645 = !DILocation(line: 89, column: 28, scope: !509)
!646 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !524)
!647 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !524)
!648 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !524)
!649 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !524)
!650 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !524)
!651 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !524)
!652 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !524)
!653 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !524)
!654 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !524)
!655 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !524)
!656 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !524)
!657 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !524)
!658 = !DILocation(line: 89, column: 18, scope: !509)
!659 = !DILocation(line: 89, column: 20, scope: !509)
!660 = !DILocation(line: 89, column: 13, scope: !509)
!661 = !DILocation(line: 89, column: 26, scope: !509)
!662 = !DILocation(line: 91, column: 48, scope: !509)
!663 = !DILocation(line: 91, column: 54, scope: !509)
!664 = !DILocation(line: 91, column: 52, scope: !509)
!665 = !DILocation(line: 91, column: 59, scope: !509)
!666 = !DILocation(line: 91, column: 65, scope: !509)
!667 = !DILocation(line: 91, column: 63, scope: !509)
!668 = !DILocation(line: 91, column: 57, scope: !509)
!669 = !DILocation(line: 91, column: 67, scope: !509)
!670 = !DILocation(line: 91, column: 74, scope: !509)
!671 = !DILocation(line: 91, column: 31, scope: !509)
!672 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !508)
!673 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !508)
!674 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !508)
!675 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !508)
!676 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !508)
!677 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !508)
!678 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !508)
!679 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !508)
!680 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !508)
!681 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !508)
!682 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !508)
!683 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !508)
!684 = !DILocation(line: 91, column: 22, scope: !509)
!685 = !DILocation(line: 91, column: 20, scope: !509)
!686 = !DILocation(line: 91, column: 24, scope: !509)
!687 = !DILocation(line: 91, column: 13, scope: !509)
!688 = !DILocation(line: 91, column: 29, scope: !509)
!689 = !DILocation(line: 98, column: 45, scope: !509)
!690 = !DILocation(line: 98, column: 51, scope: !509)
!691 = !DILocation(line: 98, column: 49, scope: !509)
!692 = !DILocation(line: 98, column: 56, scope: !509)
!693 = !DILocation(line: 98, column: 62, scope: !509)
!694 = !DILocation(line: 98, column: 60, scope: !509)
!695 = !DILocation(line: 98, column: 54, scope: !509)
!696 = !DILocation(line: 99, column: 59, scope: !509)
!697 = !DILocation(line: 99, column: 65, scope: !509)
!698 = !DILocation(line: 99, column: 63, scope: !509)
!699 = !DILocation(line: 98, column: 64, scope: !509)
!700 = !DILocation(line: 99, column: 67, scope: !509)
!701 = !DILocation(line: 99, column: 74, scope: !509)
!702 = !DILocation(line: 98, column: 28, scope: !509)
!703 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !516)
!704 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !516)
!705 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !516)
!706 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !516)
!707 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !516)
!708 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !516)
!709 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !516)
!710 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !516)
!711 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !516)
!712 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !516)
!713 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !516)
!714 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !516)
!715 = !DILocation(line: 98, column: 18, scope: !509)
!716 = !DILocation(line: 98, column: 20, scope: !509)
!717 = !DILocation(line: 98, column: 13, scope: !509)
!718 = !DILocation(line: 98, column: 26, scope: !509)
!719 = !DILocation(line: 101, column: 48, scope: !509)
!720 = !DILocation(line: 101, column: 54, scope: !509)
!721 = !DILocation(line: 101, column: 52, scope: !509)
!722 = !DILocation(line: 101, column: 59, scope: !509)
!723 = !DILocation(line: 101, column: 65, scope: !509)
!724 = !DILocation(line: 101, column: 63, scope: !509)
!725 = !DILocation(line: 101, column: 57, scope: !509)
!726 = !DILocation(line: 102, column: 59, scope: !509)
!727 = !DILocation(line: 102, column: 65, scope: !509)
!728 = !DILocation(line: 102, column: 63, scope: !509)
!729 = !DILocation(line: 101, column: 67, scope: !509)
!730 = !DILocation(line: 102, column: 67, scope: !509)
!731 = !DILocation(line: 102, column: 74, scope: !509)
!732 = !DILocation(line: 101, column: 31, scope: !509)
!733 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !518)
!734 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !518)
!735 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !518)
!736 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !518)
!737 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !518)
!738 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !518)
!739 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !518)
!740 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !518)
!741 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !518)
!742 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !518)
!743 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !518)
!744 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !518)
!745 = !DILocation(line: 101, column: 22, scope: !509)
!746 = !DILocation(line: 101, column: 20, scope: !509)
!747 = !DILocation(line: 101, column: 24, scope: !509)
!748 = !DILocation(line: 101, column: 13, scope: !509)
!749 = !DILocation(line: 101, column: 29, scope: !509)
!750 = !DILocation(line: 111, column: 45, scope: !509)
!751 = !DILocation(line: 111, column: 51, scope: !509)
!752 = !DILocation(line: 111, column: 49, scope: !509)
!753 = !DILocation(line: 111, column: 56, scope: !509)
!754 = !DILocation(line: 111, column: 62, scope: !509)
!755 = !DILocation(line: 111, column: 60, scope: !509)
!756 = !DILocation(line: 111, column: 54, scope: !509)
!757 = !DILocation(line: 111, column: 64, scope: !509)
!758 = !DILocation(line: 111, column: 71, scope: !509)
!759 = !DILocation(line: 111, column: 28, scope: !509)
!760 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !520)
!761 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !520)
!762 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !520)
!763 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !520)
!764 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !520)
!765 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !520)
!766 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !520)
!767 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !520)
!768 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !520)
!769 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !520)
!770 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !520)
!771 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !520)
!772 = !DILocation(line: 111, column: 18, scope: !509)
!773 = !DILocation(line: 111, column: 20, scope: !509)
!774 = !DILocation(line: 111, column: 13, scope: !509)
!775 = !DILocation(line: 111, column: 26, scope: !509)
!776 = !DILocation(line: 113, column: 48, scope: !509)
!777 = !DILocation(line: 113, column: 54, scope: !509)
!778 = !DILocation(line: 113, column: 52, scope: !509)
!779 = !DILocation(line: 113, column: 59, scope: !509)
!780 = !DILocation(line: 113, column: 65, scope: !509)
!781 = !DILocation(line: 113, column: 63, scope: !509)
!782 = !DILocation(line: 113, column: 57, scope: !509)
!783 = !DILocation(line: 113, column: 67, scope: !509)
!784 = !DILocation(line: 113, column: 74, scope: !509)
!785 = !DILocation(line: 113, column: 31, scope: !509)
!786 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !522)
!787 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !522)
!788 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !522)
!789 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !522)
!790 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !522)
!791 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !522)
!792 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !522)
!793 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !522)
!794 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !522)
!795 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !522)
!796 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !522)
!797 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !522)
!798 = !DILocation(line: 113, column: 22, scope: !509)
!799 = !DILocation(line: 113, column: 20, scope: !509)
!800 = !DILocation(line: 113, column: 24, scope: !509)
!801 = !DILocation(line: 113, column: 13, scope: !509)
!802 = !DILocation(line: 113, column: 29, scope: !509)
!803 = !DILocation(line: 119, column: 9, scope: !509)
!804 = !DILocation(line: 78, column: 29, scope: !805)
!805 = !DILexicalBlockFile(scope: !510, file: !266, discriminator: 2)
!806 = !DILocation(line: 78, column: 9, scope: !805)
!807 = distinct !{!807, !808}
!808 = !DILocation(line: 78, column: 9, scope: !512)
!809 = !DILocation(line: 121, column: 18, scope: !512)
!810 = !DILocation(line: 121, column: 32, scope: !512)
!811 = !DILocation(line: 121, column: 44, scope: !512)
!812 = !DILocation(line: 121, column: 14, scope: !512)
!813 = !DILocation(line: 122, column: 17, scope: !512)
!814 = !DILocation(line: 122, column: 31, scope: !512)
!815 = !DILocation(line: 122, column: 14, scope: !512)
!816 = !DILocation(line: 123, column: 17, scope: !512)
!817 = !DILocation(line: 123, column: 31, scope: !512)
!818 = !DILocation(line: 123, column: 14, scope: !512)
!819 = !DILocation(line: 124, column: 17, scope: !512)
!820 = !DILocation(line: 124, column: 28, scope: !512)
!821 = !DILocation(line: 124, column: 14, scope: !512)
!822 = !DILocation(line: 125, column: 17, scope: !512)
!823 = !DILocation(line: 125, column: 28, scope: !512)
!824 = !DILocation(line: 125, column: 14, scope: !512)
!825 = !DILocation(line: 126, column: 17, scope: !512)
!826 = !DILocation(line: 126, column: 28, scope: !512)
!827 = !DILocation(line: 126, column: 14, scope: !512)
!828 = !DILocation(line: 127, column: 5, scope: !512)
!829 = !DILocation(line: 77, column: 25, scope: !830)
!830 = !DILexicalBlockFile(scope: !513, file: !266, discriminator: 2)
!831 = !DILocation(line: 77, column: 5, scope: !830)
!832 = distinct !{!832, !833}
!833 = !DILocation(line: 77, column: 5, scope: !506)
!834 = !DILocation(line: 128, column: 1, scope: !506)
!835 = distinct !DISubprogram(name: "yuv2rgb_420p8_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!836 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !837)
!837 = distinct !DILocation(line: 91, column: 31, scope: !838)
!838 = distinct !DILexicalBlock(scope: !839, file: !266, line: 78, column: 33)
!839 = distinct !DILexicalBlock(scope: !840, file: !266, line: 78, column: 9)
!840 = distinct !DILexicalBlock(scope: !841, file: !266, line: 78, column: 9)
!841 = distinct !DILexicalBlock(scope: !842, file: !266, line: 77, column: 29)
!842 = distinct !DILexicalBlock(scope: !843, file: !266, line: 77, column: 5)
!843 = distinct !DILexicalBlock(scope: !835, file: !266, line: 77, column: 5)
!844 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !845)
!845 = distinct !DILocation(line: 93, column: 40, scope: !838)
!846 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !847)
!847 = distinct !DILocation(line: 94, column: 44, scope: !838)
!848 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !849)
!849 = distinct !DILocation(line: 98, column: 28, scope: !838)
!850 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !851)
!851 = distinct !DILocation(line: 101, column: 31, scope: !838)
!852 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !853)
!853 = distinct !DILocation(line: 104, column: 40, scope: !838)
!854 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !855)
!855 = distinct !DILocation(line: 106, column: 44, scope: !838)
!856 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !857)
!857 = distinct !DILocation(line: 111, column: 28, scope: !838)
!858 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !859)
!859 = distinct !DILocation(line: 113, column: 31, scope: !838)
!860 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !861)
!861 = distinct !DILocation(line: 115, column: 40, scope: !838)
!862 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !863)
!863 = distinct !DILocation(line: 116, column: 44, scope: !838)
!864 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !865)
!865 = distinct !DILocation(line: 89, column: 28, scope: !838)
!866 = !DILocalVariable(name: "rgb", arg: 1, scope: !835, file: !266, line: 54, type: !43)
!867 = !DILocation(line: 54, column: 38, scope: !835)
!868 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !835, file: !266, line: 54, type: !47)
!869 = !DILocation(line: 54, column: 56, scope: !835)
!870 = !DILocalVariable(name: "_yuv", arg: 3, scope: !835, file: !266, line: 55, type: !17)
!871 = !DILocation(line: 55, column: 34, scope: !835)
!872 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !835, file: !266, line: 55, type: !50)
!873 = !DILocation(line: 55, column: 59, scope: !835)
!874 = !DILocalVariable(name: "w", arg: 5, scope: !835, file: !266, line: 56, type: !52)
!875 = !DILocation(line: 56, column: 29, scope: !835)
!876 = !DILocalVariable(name: "h", arg: 6, scope: !835, file: !266, line: 56, type: !52)
!877 = !DILocation(line: 56, column: 36, scope: !835)
!878 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !835, file: !266, line: 56, type: !53)
!879 = !DILocation(line: 56, column: 53, scope: !835)
!880 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !835, file: !266, line: 57, type: !59)
!881 = !DILocation(line: 57, column: 39, scope: !835)
!882 = !DILocalVariable(name: "yuv", scope: !835, file: !266, line: 59, type: !17)
!883 = !DILocation(line: 59, column: 15, scope: !835)
!884 = !DILocation(line: 59, column: 34, scope: !835)
!885 = !DILocalVariable(name: "yuv0", scope: !835, file: !266, line: 60, type: !304)
!886 = !DILocation(line: 60, column: 20, scope: !835)
!887 = !DILocation(line: 60, column: 27, scope: !835)
!888 = !DILocalVariable(name: "yuv1", scope: !835, file: !266, line: 60, type: !304)
!889 = !DILocation(line: 60, column: 36, scope: !835)
!890 = !DILocation(line: 60, column: 43, scope: !835)
!891 = !DILocalVariable(name: "yuv2", scope: !835, file: !266, line: 60, type: !304)
!892 = !DILocation(line: 60, column: 52, scope: !835)
!893 = !DILocation(line: 60, column: 59, scope: !835)
!894 = !DILocalVariable(name: "rgb0", scope: !835, file: !266, line: 61, type: !44)
!895 = !DILocation(line: 61, column: 14, scope: !835)
!896 = !DILocation(line: 61, column: 21, scope: !835)
!897 = !DILocalVariable(name: "rgb1", scope: !835, file: !266, line: 61, type: !44)
!898 = !DILocation(line: 61, column: 30, scope: !835)
!899 = !DILocation(line: 61, column: 37, scope: !835)
!900 = !DILocalVariable(name: "rgb2", scope: !835, file: !266, line: 61, type: !44)
!901 = !DILocation(line: 61, column: 46, scope: !835)
!902 = !DILocation(line: 61, column: 53, scope: !835)
!903 = !DILocalVariable(name: "y", scope: !835, file: !266, line: 62, type: !52)
!904 = !DILocation(line: 62, column: 9, scope: !835)
!905 = !DILocalVariable(name: "x", scope: !835, file: !266, line: 62, type: !52)
!906 = !DILocation(line: 62, column: 12, scope: !835)
!907 = !DILocalVariable(name: "cy", scope: !835, file: !266, line: 63, type: !52)
!908 = !DILocation(line: 63, column: 9, scope: !835)
!909 = !DILocation(line: 63, column: 14, scope: !835)
!910 = !DILocalVariable(name: "crv", scope: !835, file: !266, line: 64, type: !52)
!911 = !DILocation(line: 64, column: 9, scope: !835)
!912 = !DILocation(line: 64, column: 15, scope: !835)
!913 = !DILocalVariable(name: "cgu", scope: !835, file: !266, line: 65, type: !52)
!914 = !DILocation(line: 65, column: 9, scope: !835)
!915 = !DILocation(line: 65, column: 15, scope: !835)
!916 = !DILocalVariable(name: "cgv", scope: !835, file: !266, line: 66, type: !52)
!917 = !DILocation(line: 66, column: 9, scope: !835)
!918 = !DILocation(line: 66, column: 15, scope: !835)
!919 = !DILocalVariable(name: "cbu", scope: !835, file: !266, line: 67, type: !52)
!920 = !DILocation(line: 67, column: 9, scope: !835)
!921 = !DILocation(line: 67, column: 15, scope: !835)
!922 = !DILocalVariable(name: "sh", scope: !835, file: !266, line: 68, type: !343)
!923 = !DILocation(line: 68, column: 15, scope: !835)
!924 = !DILocalVariable(name: "rnd", scope: !835, file: !266, line: 68, type: !343)
!925 = !DILocation(line: 68, column: 27, scope: !835)
!926 = !DILocalVariable(name: "uv_offset", scope: !835, file: !266, line: 69, type: !343)
!927 = !DILocation(line: 69, column: 15, scope: !835)
!928 = !DILocation(line: 75, column: 58, scope: !835)
!929 = !DILocation(line: 75, column: 61, scope: !835)
!930 = !DILocation(line: 75, column: 72, scope: !835)
!931 = !DILocation(line: 75, column: 77, scope: !835)
!932 = !DILocation(line: 75, column: 7, scope: !835)
!933 = !DILocation(line: 76, column: 58, scope: !835)
!934 = !DILocation(line: 76, column: 61, scope: !835)
!935 = !DILocation(line: 76, column: 72, scope: !835)
!936 = !DILocation(line: 76, column: 77, scope: !835)
!937 = !DILocation(line: 76, column: 7, scope: !835)
!938 = !DILocation(line: 77, column: 12, scope: !843)
!939 = !DILocation(line: 77, column: 10, scope: !843)
!940 = !DILocation(line: 77, column: 17, scope: !941)
!941 = !DILexicalBlockFile(scope: !842, file: !266, discriminator: 1)
!942 = !DILocation(line: 77, column: 21, scope: !941)
!943 = !DILocation(line: 77, column: 19, scope: !941)
!944 = !DILocation(line: 77, column: 5, scope: !941)
!945 = !DILocation(line: 78, column: 16, scope: !840)
!946 = !DILocation(line: 78, column: 14, scope: !840)
!947 = !DILocation(line: 78, column: 21, scope: !948)
!948 = !DILexicalBlockFile(scope: !839, file: !266, discriminator: 1)
!949 = !DILocation(line: 78, column: 25, scope: !948)
!950 = !DILocation(line: 78, column: 23, scope: !948)
!951 = !DILocation(line: 78, column: 9, scope: !948)
!952 = !DILocalVariable(name: "y00", scope: !838, file: !266, line: 79, type: !52)
!953 = !DILocation(line: 79, column: 17, scope: !838)
!954 = !DILocation(line: 79, column: 28, scope: !838)
!955 = !DILocation(line: 79, column: 30, scope: !838)
!956 = !DILocation(line: 79, column: 23, scope: !838)
!957 = !DILocation(line: 79, column: 38, scope: !838)
!958 = !DILocation(line: 79, column: 36, scope: !838)
!959 = !DILocalVariable(name: "y01", scope: !838, file: !266, line: 81, type: !52)
!960 = !DILocation(line: 81, column: 17, scope: !838)
!961 = !DILocation(line: 81, column: 32, scope: !838)
!962 = !DILocation(line: 81, column: 30, scope: !838)
!963 = !DILocation(line: 81, column: 34, scope: !838)
!964 = !DILocation(line: 81, column: 23, scope: !838)
!965 = !DILocation(line: 81, column: 41, scope: !838)
!966 = !DILocation(line: 81, column: 39, scope: !838)
!967 = !DILocalVariable(name: "y10", scope: !838, file: !266, line: 83, type: !52)
!968 = !DILocation(line: 83, column: 17, scope: !838)
!969 = !DILocation(line: 83, column: 28, scope: !838)
!970 = !DILocation(line: 83, column: 42, scope: !838)
!971 = !DILocation(line: 83, column: 66, scope: !838)
!972 = !DILocation(line: 83, column: 64, scope: !838)
!973 = !DILocation(line: 83, column: 62, scope: !838)
!974 = !DILocation(line: 83, column: 60, scope: !838)
!975 = !DILocation(line: 83, column: 23, scope: !838)
!976 = !DILocation(line: 83, column: 71, scope: !838)
!977 = !DILocation(line: 83, column: 69, scope: !838)
!978 = !DILocalVariable(name: "y11", scope: !838, file: !266, line: 84, type: !52)
!979 = !DILocation(line: 84, column: 17, scope: !838)
!980 = !DILocation(line: 84, column: 28, scope: !838)
!981 = !DILocation(line: 84, column: 42, scope: !838)
!982 = !DILocation(line: 84, column: 66, scope: !838)
!983 = !DILocation(line: 84, column: 64, scope: !838)
!984 = !DILocation(line: 84, column: 62, scope: !838)
!985 = !DILocation(line: 84, column: 60, scope: !838)
!986 = !DILocation(line: 84, column: 68, scope: !838)
!987 = !DILocation(line: 84, column: 23, scope: !838)
!988 = !DILocation(line: 84, column: 75, scope: !838)
!989 = !DILocation(line: 84, column: 73, scope: !838)
!990 = !DILocalVariable(name: "u", scope: !838, file: !266, line: 87, type: !52)
!991 = !DILocation(line: 87, column: 17, scope: !838)
!992 = !DILocation(line: 87, column: 26, scope: !838)
!993 = !DILocation(line: 87, column: 21, scope: !838)
!994 = !DILocation(line: 87, column: 29, scope: !838)
!995 = !DILocalVariable(name: "v", scope: !838, file: !266, line: 87, type: !52)
!996 = !DILocation(line: 87, column: 42, scope: !838)
!997 = !DILocation(line: 87, column: 51, scope: !838)
!998 = !DILocation(line: 87, column: 46, scope: !838)
!999 = !DILocation(line: 87, column: 54, scope: !838)
!1000 = !DILocation(line: 89, column: 45, scope: !838)
!1001 = !DILocation(line: 89, column: 51, scope: !838)
!1002 = !DILocation(line: 89, column: 49, scope: !838)
!1003 = !DILocation(line: 89, column: 56, scope: !838)
!1004 = !DILocation(line: 89, column: 62, scope: !838)
!1005 = !DILocation(line: 89, column: 60, scope: !838)
!1006 = !DILocation(line: 89, column: 54, scope: !838)
!1007 = !DILocation(line: 89, column: 64, scope: !838)
!1008 = !DILocation(line: 89, column: 71, scope: !838)
!1009 = !DILocation(line: 89, column: 28, scope: !838)
!1010 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !865)
!1011 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !865)
!1012 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !865)
!1013 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !865)
!1014 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !865)
!1015 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !865)
!1016 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !865)
!1017 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !865)
!1018 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !865)
!1019 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !865)
!1020 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !865)
!1021 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !865)
!1022 = !DILocation(line: 89, column: 18, scope: !838)
!1023 = !DILocation(line: 89, column: 20, scope: !838)
!1024 = !DILocation(line: 89, column: 13, scope: !838)
!1025 = !DILocation(line: 89, column: 26, scope: !838)
!1026 = !DILocation(line: 91, column: 48, scope: !838)
!1027 = !DILocation(line: 91, column: 54, scope: !838)
!1028 = !DILocation(line: 91, column: 52, scope: !838)
!1029 = !DILocation(line: 91, column: 59, scope: !838)
!1030 = !DILocation(line: 91, column: 65, scope: !838)
!1031 = !DILocation(line: 91, column: 63, scope: !838)
!1032 = !DILocation(line: 91, column: 57, scope: !838)
!1033 = !DILocation(line: 91, column: 67, scope: !838)
!1034 = !DILocation(line: 91, column: 74, scope: !838)
!1035 = !DILocation(line: 91, column: 31, scope: !838)
!1036 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !837)
!1037 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !837)
!1038 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !837)
!1039 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !837)
!1040 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !837)
!1041 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !837)
!1042 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !837)
!1043 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !837)
!1044 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !837)
!1045 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !837)
!1046 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !837)
!1047 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !837)
!1048 = !DILocation(line: 91, column: 22, scope: !838)
!1049 = !DILocation(line: 91, column: 20, scope: !838)
!1050 = !DILocation(line: 91, column: 24, scope: !838)
!1051 = !DILocation(line: 91, column: 13, scope: !838)
!1052 = !DILocation(line: 91, column: 29, scope: !838)
!1053 = !DILocation(line: 93, column: 57, scope: !838)
!1054 = !DILocation(line: 93, column: 63, scope: !838)
!1055 = !DILocation(line: 93, column: 61, scope: !838)
!1056 = !DILocation(line: 93, column: 68, scope: !838)
!1057 = !DILocation(line: 93, column: 74, scope: !838)
!1058 = !DILocation(line: 93, column: 72, scope: !838)
!1059 = !DILocation(line: 93, column: 66, scope: !838)
!1060 = !DILocation(line: 93, column: 76, scope: !838)
!1061 = !DILocation(line: 93, column: 83, scope: !838)
!1062 = !DILocation(line: 93, column: 40, scope: !838)
!1063 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !845)
!1064 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !845)
!1065 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !845)
!1066 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !845)
!1067 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !845)
!1068 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !845)
!1069 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !845)
!1070 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !845)
!1071 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !845)
!1072 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !845)
!1073 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !845)
!1074 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !845)
!1075 = !DILocation(line: 93, column: 22, scope: !838)
!1076 = !DILocation(line: 93, column: 20, scope: !838)
!1077 = !DILocation(line: 93, column: 18, scope: !838)
!1078 = !DILocation(line: 93, column: 26, scope: !838)
!1079 = !DILocation(line: 93, column: 24, scope: !838)
!1080 = !DILocation(line: 93, column: 13, scope: !838)
!1081 = !DILocation(line: 93, column: 38, scope: !838)
!1082 = !DILocation(line: 94, column: 61, scope: !838)
!1083 = !DILocation(line: 94, column: 67, scope: !838)
!1084 = !DILocation(line: 94, column: 65, scope: !838)
!1085 = !DILocation(line: 94, column: 72, scope: !838)
!1086 = !DILocation(line: 94, column: 78, scope: !838)
!1087 = !DILocation(line: 94, column: 76, scope: !838)
!1088 = !DILocation(line: 94, column: 70, scope: !838)
!1089 = !DILocation(line: 94, column: 80, scope: !838)
!1090 = !DILocation(line: 94, column: 87, scope: !838)
!1091 = !DILocation(line: 94, column: 44, scope: !838)
!1092 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !847)
!1093 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !847)
!1094 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !847)
!1095 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !847)
!1096 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !847)
!1097 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !847)
!1098 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !847)
!1099 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !847)
!1100 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !847)
!1101 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !847)
!1102 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !847)
!1103 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !847)
!1104 = !DILocation(line: 94, column: 22, scope: !838)
!1105 = !DILocation(line: 94, column: 20, scope: !838)
!1106 = !DILocation(line: 94, column: 18, scope: !838)
!1107 = !DILocation(line: 94, column: 26, scope: !838)
!1108 = !DILocation(line: 94, column: 24, scope: !838)
!1109 = !DILocation(line: 94, column: 37, scope: !838)
!1110 = !DILocation(line: 94, column: 13, scope: !838)
!1111 = !DILocation(line: 94, column: 42, scope: !838)
!1112 = !DILocation(line: 98, column: 45, scope: !838)
!1113 = !DILocation(line: 98, column: 51, scope: !838)
!1114 = !DILocation(line: 98, column: 49, scope: !838)
!1115 = !DILocation(line: 98, column: 56, scope: !838)
!1116 = !DILocation(line: 98, column: 62, scope: !838)
!1117 = !DILocation(line: 98, column: 60, scope: !838)
!1118 = !DILocation(line: 98, column: 54, scope: !838)
!1119 = !DILocation(line: 99, column: 59, scope: !838)
!1120 = !DILocation(line: 99, column: 65, scope: !838)
!1121 = !DILocation(line: 99, column: 63, scope: !838)
!1122 = !DILocation(line: 98, column: 64, scope: !838)
!1123 = !DILocation(line: 99, column: 67, scope: !838)
!1124 = !DILocation(line: 99, column: 74, scope: !838)
!1125 = !DILocation(line: 98, column: 28, scope: !838)
!1126 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !849)
!1127 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !849)
!1128 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !849)
!1129 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !849)
!1130 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !849)
!1131 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !849)
!1132 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !849)
!1133 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !849)
!1134 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !849)
!1135 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !849)
!1136 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !849)
!1137 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !849)
!1138 = !DILocation(line: 98, column: 18, scope: !838)
!1139 = !DILocation(line: 98, column: 20, scope: !838)
!1140 = !DILocation(line: 98, column: 13, scope: !838)
!1141 = !DILocation(line: 98, column: 26, scope: !838)
!1142 = !DILocation(line: 101, column: 48, scope: !838)
!1143 = !DILocation(line: 101, column: 54, scope: !838)
!1144 = !DILocation(line: 101, column: 52, scope: !838)
!1145 = !DILocation(line: 101, column: 59, scope: !838)
!1146 = !DILocation(line: 101, column: 65, scope: !838)
!1147 = !DILocation(line: 101, column: 63, scope: !838)
!1148 = !DILocation(line: 101, column: 57, scope: !838)
!1149 = !DILocation(line: 102, column: 59, scope: !838)
!1150 = !DILocation(line: 102, column: 65, scope: !838)
!1151 = !DILocation(line: 102, column: 63, scope: !838)
!1152 = !DILocation(line: 101, column: 67, scope: !838)
!1153 = !DILocation(line: 102, column: 67, scope: !838)
!1154 = !DILocation(line: 102, column: 74, scope: !838)
!1155 = !DILocation(line: 101, column: 31, scope: !838)
!1156 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !851)
!1157 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !851)
!1158 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !851)
!1159 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !851)
!1160 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !851)
!1161 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !851)
!1162 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !851)
!1163 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !851)
!1164 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !851)
!1165 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !851)
!1166 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !851)
!1167 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !851)
!1168 = !DILocation(line: 101, column: 22, scope: !838)
!1169 = !DILocation(line: 101, column: 20, scope: !838)
!1170 = !DILocation(line: 101, column: 24, scope: !838)
!1171 = !DILocation(line: 101, column: 13, scope: !838)
!1172 = !DILocation(line: 101, column: 29, scope: !838)
!1173 = !DILocation(line: 104, column: 57, scope: !838)
!1174 = !DILocation(line: 104, column: 63, scope: !838)
!1175 = !DILocation(line: 104, column: 61, scope: !838)
!1176 = !DILocation(line: 104, column: 68, scope: !838)
!1177 = !DILocation(line: 104, column: 74, scope: !838)
!1178 = !DILocation(line: 104, column: 72, scope: !838)
!1179 = !DILocation(line: 104, column: 66, scope: !838)
!1180 = !DILocation(line: 105, column: 59, scope: !838)
!1181 = !DILocation(line: 105, column: 65, scope: !838)
!1182 = !DILocation(line: 105, column: 63, scope: !838)
!1183 = !DILocation(line: 104, column: 76, scope: !838)
!1184 = !DILocation(line: 105, column: 67, scope: !838)
!1185 = !DILocation(line: 105, column: 74, scope: !838)
!1186 = !DILocation(line: 104, column: 40, scope: !838)
!1187 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !853)
!1188 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !853)
!1189 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !853)
!1190 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !853)
!1191 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !853)
!1192 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !853)
!1193 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !853)
!1194 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !853)
!1195 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !853)
!1196 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !853)
!1197 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !853)
!1198 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !853)
!1199 = !DILocation(line: 104, column: 22, scope: !838)
!1200 = !DILocation(line: 104, column: 20, scope: !838)
!1201 = !DILocation(line: 104, column: 18, scope: !838)
!1202 = !DILocation(line: 104, column: 26, scope: !838)
!1203 = !DILocation(line: 104, column: 24, scope: !838)
!1204 = !DILocation(line: 104, column: 13, scope: !838)
!1205 = !DILocation(line: 104, column: 38, scope: !838)
!1206 = !DILocation(line: 106, column: 61, scope: !838)
!1207 = !DILocation(line: 106, column: 67, scope: !838)
!1208 = !DILocation(line: 106, column: 65, scope: !838)
!1209 = !DILocation(line: 106, column: 72, scope: !838)
!1210 = !DILocation(line: 106, column: 78, scope: !838)
!1211 = !DILocation(line: 106, column: 76, scope: !838)
!1212 = !DILocation(line: 106, column: 70, scope: !838)
!1213 = !DILocation(line: 107, column: 59, scope: !838)
!1214 = !DILocation(line: 107, column: 65, scope: !838)
!1215 = !DILocation(line: 107, column: 63, scope: !838)
!1216 = !DILocation(line: 106, column: 80, scope: !838)
!1217 = !DILocation(line: 107, column: 67, scope: !838)
!1218 = !DILocation(line: 107, column: 74, scope: !838)
!1219 = !DILocation(line: 106, column: 44, scope: !838)
!1220 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !855)
!1221 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !855)
!1222 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !855)
!1223 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !855)
!1224 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !855)
!1225 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !855)
!1226 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !855)
!1227 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !855)
!1228 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !855)
!1229 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !855)
!1230 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !855)
!1231 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !855)
!1232 = !DILocation(line: 106, column: 22, scope: !838)
!1233 = !DILocation(line: 106, column: 20, scope: !838)
!1234 = !DILocation(line: 106, column: 18, scope: !838)
!1235 = !DILocation(line: 106, column: 26, scope: !838)
!1236 = !DILocation(line: 106, column: 24, scope: !838)
!1237 = !DILocation(line: 106, column: 37, scope: !838)
!1238 = !DILocation(line: 106, column: 13, scope: !838)
!1239 = !DILocation(line: 106, column: 42, scope: !838)
!1240 = !DILocation(line: 111, column: 45, scope: !838)
!1241 = !DILocation(line: 111, column: 51, scope: !838)
!1242 = !DILocation(line: 111, column: 49, scope: !838)
!1243 = !DILocation(line: 111, column: 56, scope: !838)
!1244 = !DILocation(line: 111, column: 62, scope: !838)
!1245 = !DILocation(line: 111, column: 60, scope: !838)
!1246 = !DILocation(line: 111, column: 54, scope: !838)
!1247 = !DILocation(line: 111, column: 64, scope: !838)
!1248 = !DILocation(line: 111, column: 71, scope: !838)
!1249 = !DILocation(line: 111, column: 28, scope: !838)
!1250 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !857)
!1251 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !857)
!1252 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !857)
!1253 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !857)
!1254 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !857)
!1255 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !857)
!1256 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !857)
!1257 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !857)
!1258 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !857)
!1259 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !857)
!1260 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !857)
!1261 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !857)
!1262 = !DILocation(line: 111, column: 18, scope: !838)
!1263 = !DILocation(line: 111, column: 20, scope: !838)
!1264 = !DILocation(line: 111, column: 13, scope: !838)
!1265 = !DILocation(line: 111, column: 26, scope: !838)
!1266 = !DILocation(line: 113, column: 48, scope: !838)
!1267 = !DILocation(line: 113, column: 54, scope: !838)
!1268 = !DILocation(line: 113, column: 52, scope: !838)
!1269 = !DILocation(line: 113, column: 59, scope: !838)
!1270 = !DILocation(line: 113, column: 65, scope: !838)
!1271 = !DILocation(line: 113, column: 63, scope: !838)
!1272 = !DILocation(line: 113, column: 57, scope: !838)
!1273 = !DILocation(line: 113, column: 67, scope: !838)
!1274 = !DILocation(line: 113, column: 74, scope: !838)
!1275 = !DILocation(line: 113, column: 31, scope: !838)
!1276 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !859)
!1277 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !859)
!1278 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !859)
!1279 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !859)
!1280 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !859)
!1281 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !859)
!1282 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !859)
!1283 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !859)
!1284 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !859)
!1285 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !859)
!1286 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !859)
!1287 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !859)
!1288 = !DILocation(line: 113, column: 22, scope: !838)
!1289 = !DILocation(line: 113, column: 20, scope: !838)
!1290 = !DILocation(line: 113, column: 24, scope: !838)
!1291 = !DILocation(line: 113, column: 13, scope: !838)
!1292 = !DILocation(line: 113, column: 29, scope: !838)
!1293 = !DILocation(line: 115, column: 57, scope: !838)
!1294 = !DILocation(line: 115, column: 63, scope: !838)
!1295 = !DILocation(line: 115, column: 61, scope: !838)
!1296 = !DILocation(line: 115, column: 68, scope: !838)
!1297 = !DILocation(line: 115, column: 74, scope: !838)
!1298 = !DILocation(line: 115, column: 72, scope: !838)
!1299 = !DILocation(line: 115, column: 66, scope: !838)
!1300 = !DILocation(line: 115, column: 76, scope: !838)
!1301 = !DILocation(line: 115, column: 83, scope: !838)
!1302 = !DILocation(line: 115, column: 40, scope: !838)
!1303 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !861)
!1304 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !861)
!1305 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !861)
!1306 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !861)
!1307 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !861)
!1308 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !861)
!1309 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !861)
!1310 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !861)
!1311 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !861)
!1312 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !861)
!1313 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !861)
!1314 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !861)
!1315 = !DILocation(line: 115, column: 22, scope: !838)
!1316 = !DILocation(line: 115, column: 20, scope: !838)
!1317 = !DILocation(line: 115, column: 18, scope: !838)
!1318 = !DILocation(line: 115, column: 26, scope: !838)
!1319 = !DILocation(line: 115, column: 24, scope: !838)
!1320 = !DILocation(line: 115, column: 13, scope: !838)
!1321 = !DILocation(line: 115, column: 38, scope: !838)
!1322 = !DILocation(line: 116, column: 61, scope: !838)
!1323 = !DILocation(line: 116, column: 67, scope: !838)
!1324 = !DILocation(line: 116, column: 65, scope: !838)
!1325 = !DILocation(line: 116, column: 72, scope: !838)
!1326 = !DILocation(line: 116, column: 78, scope: !838)
!1327 = !DILocation(line: 116, column: 76, scope: !838)
!1328 = !DILocation(line: 116, column: 70, scope: !838)
!1329 = !DILocation(line: 116, column: 80, scope: !838)
!1330 = !DILocation(line: 116, column: 87, scope: !838)
!1331 = !DILocation(line: 116, column: 44, scope: !838)
!1332 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !863)
!1333 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !863)
!1334 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !863)
!1335 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !863)
!1336 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !863)
!1337 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !863)
!1338 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !863)
!1339 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !863)
!1340 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !863)
!1341 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !863)
!1342 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !863)
!1343 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !863)
!1344 = !DILocation(line: 116, column: 22, scope: !838)
!1345 = !DILocation(line: 116, column: 20, scope: !838)
!1346 = !DILocation(line: 116, column: 18, scope: !838)
!1347 = !DILocation(line: 116, column: 26, scope: !838)
!1348 = !DILocation(line: 116, column: 24, scope: !838)
!1349 = !DILocation(line: 116, column: 37, scope: !838)
!1350 = !DILocation(line: 116, column: 13, scope: !838)
!1351 = !DILocation(line: 116, column: 42, scope: !838)
!1352 = !DILocation(line: 119, column: 9, scope: !838)
!1353 = !DILocation(line: 78, column: 29, scope: !1354)
!1354 = !DILexicalBlockFile(scope: !839, file: !266, discriminator: 2)
!1355 = !DILocation(line: 78, column: 9, scope: !1354)
!1356 = distinct !{!1356, !1357}
!1357 = !DILocation(line: 78, column: 9, scope: !841)
!1358 = !DILocation(line: 121, column: 18, scope: !841)
!1359 = !DILocation(line: 121, column: 32, scope: !841)
!1360 = !DILocation(line: 121, column: 44, scope: !841)
!1361 = !DILocation(line: 121, column: 14, scope: !841)
!1362 = !DILocation(line: 122, column: 17, scope: !841)
!1363 = !DILocation(line: 122, column: 31, scope: !841)
!1364 = !DILocation(line: 122, column: 14, scope: !841)
!1365 = !DILocation(line: 123, column: 17, scope: !841)
!1366 = !DILocation(line: 123, column: 31, scope: !841)
!1367 = !DILocation(line: 123, column: 14, scope: !841)
!1368 = !DILocation(line: 124, column: 17, scope: !841)
!1369 = !DILocation(line: 124, column: 28, scope: !841)
!1370 = !DILocation(line: 124, column: 14, scope: !841)
!1371 = !DILocation(line: 125, column: 17, scope: !841)
!1372 = !DILocation(line: 125, column: 28, scope: !841)
!1373 = !DILocation(line: 125, column: 14, scope: !841)
!1374 = !DILocation(line: 126, column: 17, scope: !841)
!1375 = !DILocation(line: 126, column: 28, scope: !841)
!1376 = !DILocation(line: 126, column: 14, scope: !841)
!1377 = !DILocation(line: 127, column: 5, scope: !841)
!1378 = !DILocation(line: 77, column: 25, scope: !1379)
!1379 = !DILexicalBlockFile(scope: !842, file: !266, discriminator: 2)
!1380 = !DILocation(line: 77, column: 5, scope: !1379)
!1381 = distinct !{!1381, !1382}
!1382 = !DILocation(line: 77, column: 5, scope: !835)
!1383 = !DILocation(line: 128, column: 1, scope: !835)
!1384 = distinct !DISubprogram(name: "yuv2rgb_444p10_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!1385 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1386)
!1386 = distinct !DILocation(line: 98, column: 28, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1388, file: !266, line: 78, column: 33)
!1388 = distinct !DILexicalBlock(scope: !1389, file: !266, line: 78, column: 9)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !266, line: 78, column: 9)
!1390 = distinct !DILexicalBlock(scope: !1391, file: !266, line: 77, column: 29)
!1391 = distinct !DILexicalBlock(scope: !1392, file: !266, line: 77, column: 5)
!1392 = distinct !DILexicalBlock(scope: !1384, file: !266, line: 77, column: 5)
!1393 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1394)
!1394 = distinct !DILocation(line: 111, column: 28, scope: !1387)
!1395 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1396)
!1396 = distinct !DILocation(line: 89, column: 28, scope: !1387)
!1397 = !DILocalVariable(name: "rgb", arg: 1, scope: !1384, file: !266, line: 54, type: !43)
!1398 = !DILocation(line: 54, column: 39, scope: !1384)
!1399 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !1384, file: !266, line: 54, type: !47)
!1400 = !DILocation(line: 54, column: 57, scope: !1384)
!1401 = !DILocalVariable(name: "_yuv", arg: 3, scope: !1384, file: !266, line: 55, type: !17)
!1402 = !DILocation(line: 55, column: 34, scope: !1384)
!1403 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !1384, file: !266, line: 55, type: !50)
!1404 = !DILocation(line: 55, column: 59, scope: !1384)
!1405 = !DILocalVariable(name: "w", arg: 5, scope: !1384, file: !266, line: 56, type: !52)
!1406 = !DILocation(line: 56, column: 29, scope: !1384)
!1407 = !DILocalVariable(name: "h", arg: 6, scope: !1384, file: !266, line: 56, type: !52)
!1408 = !DILocation(line: 56, column: 36, scope: !1384)
!1409 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !1384, file: !266, line: 56, type: !53)
!1410 = !DILocation(line: 56, column: 53, scope: !1384)
!1411 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !1384, file: !266, line: 57, type: !59)
!1412 = !DILocation(line: 57, column: 39, scope: !1384)
!1413 = !DILocalVariable(name: "yuv", scope: !1384, file: !266, line: 59, type: !22)
!1414 = !DILocation(line: 59, column: 16, scope: !1384)
!1415 = !DILocation(line: 59, column: 36, scope: !1384)
!1416 = !DILocation(line: 59, column: 22, scope: !1384)
!1417 = !DILocalVariable(name: "yuv0", scope: !1384, file: !266, line: 60, type: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!1420 = !DILocation(line: 60, column: 21, scope: !1384)
!1421 = !DILocation(line: 60, column: 28, scope: !1384)
!1422 = !DILocalVariable(name: "yuv1", scope: !1384, file: !266, line: 60, type: !1418)
!1423 = !DILocation(line: 60, column: 37, scope: !1384)
!1424 = !DILocation(line: 60, column: 44, scope: !1384)
!1425 = !DILocalVariable(name: "yuv2", scope: !1384, file: !266, line: 60, type: !1418)
!1426 = !DILocation(line: 60, column: 53, scope: !1384)
!1427 = !DILocation(line: 60, column: 60, scope: !1384)
!1428 = !DILocalVariable(name: "rgb0", scope: !1384, file: !266, line: 61, type: !44)
!1429 = !DILocation(line: 61, column: 14, scope: !1384)
!1430 = !DILocation(line: 61, column: 21, scope: !1384)
!1431 = !DILocalVariable(name: "rgb1", scope: !1384, file: !266, line: 61, type: !44)
!1432 = !DILocation(line: 61, column: 30, scope: !1384)
!1433 = !DILocation(line: 61, column: 37, scope: !1384)
!1434 = !DILocalVariable(name: "rgb2", scope: !1384, file: !266, line: 61, type: !44)
!1435 = !DILocation(line: 61, column: 46, scope: !1384)
!1436 = !DILocation(line: 61, column: 53, scope: !1384)
!1437 = !DILocalVariable(name: "y", scope: !1384, file: !266, line: 62, type: !52)
!1438 = !DILocation(line: 62, column: 9, scope: !1384)
!1439 = !DILocalVariable(name: "x", scope: !1384, file: !266, line: 62, type: !52)
!1440 = !DILocation(line: 62, column: 12, scope: !1384)
!1441 = !DILocalVariable(name: "cy", scope: !1384, file: !266, line: 63, type: !52)
!1442 = !DILocation(line: 63, column: 9, scope: !1384)
!1443 = !DILocation(line: 63, column: 14, scope: !1384)
!1444 = !DILocalVariable(name: "crv", scope: !1384, file: !266, line: 64, type: !52)
!1445 = !DILocation(line: 64, column: 9, scope: !1384)
!1446 = !DILocation(line: 64, column: 15, scope: !1384)
!1447 = !DILocalVariable(name: "cgu", scope: !1384, file: !266, line: 65, type: !52)
!1448 = !DILocation(line: 65, column: 9, scope: !1384)
!1449 = !DILocation(line: 65, column: 15, scope: !1384)
!1450 = !DILocalVariable(name: "cgv", scope: !1384, file: !266, line: 66, type: !52)
!1451 = !DILocation(line: 66, column: 9, scope: !1384)
!1452 = !DILocation(line: 66, column: 15, scope: !1384)
!1453 = !DILocalVariable(name: "cbu", scope: !1384, file: !266, line: 67, type: !52)
!1454 = !DILocation(line: 67, column: 9, scope: !1384)
!1455 = !DILocation(line: 67, column: 15, scope: !1384)
!1456 = !DILocalVariable(name: "sh", scope: !1384, file: !266, line: 68, type: !343)
!1457 = !DILocation(line: 68, column: 15, scope: !1384)
!1458 = !DILocalVariable(name: "rnd", scope: !1384, file: !266, line: 68, type: !343)
!1459 = !DILocation(line: 68, column: 28, scope: !1384)
!1460 = !DILocalVariable(name: "uv_offset", scope: !1384, file: !266, line: 69, type: !343)
!1461 = !DILocation(line: 69, column: 15, scope: !1384)
!1462 = !DILocation(line: 75, column: 58, scope: !1384)
!1463 = !DILocation(line: 75, column: 61, scope: !1384)
!1464 = !DILocation(line: 75, column: 72, scope: !1384)
!1465 = !DILocation(line: 75, column: 77, scope: !1384)
!1466 = !DILocation(line: 75, column: 7, scope: !1384)
!1467 = !DILocation(line: 76, column: 58, scope: !1384)
!1468 = !DILocation(line: 76, column: 61, scope: !1384)
!1469 = !DILocation(line: 76, column: 72, scope: !1384)
!1470 = !DILocation(line: 76, column: 77, scope: !1384)
!1471 = !DILocation(line: 76, column: 7, scope: !1384)
!1472 = !DILocation(line: 77, column: 12, scope: !1392)
!1473 = !DILocation(line: 77, column: 10, scope: !1392)
!1474 = !DILocation(line: 77, column: 17, scope: !1475)
!1475 = !DILexicalBlockFile(scope: !1391, file: !266, discriminator: 1)
!1476 = !DILocation(line: 77, column: 21, scope: !1475)
!1477 = !DILocation(line: 77, column: 19, scope: !1475)
!1478 = !DILocation(line: 77, column: 5, scope: !1475)
!1479 = !DILocation(line: 78, column: 16, scope: !1389)
!1480 = !DILocation(line: 78, column: 14, scope: !1389)
!1481 = !DILocation(line: 78, column: 21, scope: !1482)
!1482 = !DILexicalBlockFile(scope: !1388, file: !266, discriminator: 1)
!1483 = !DILocation(line: 78, column: 25, scope: !1482)
!1484 = !DILocation(line: 78, column: 23, scope: !1482)
!1485 = !DILocation(line: 78, column: 9, scope: !1482)
!1486 = !DILocalVariable(name: "y00", scope: !1387, file: !266, line: 79, type: !52)
!1487 = !DILocation(line: 79, column: 17, scope: !1387)
!1488 = !DILocation(line: 79, column: 28, scope: !1387)
!1489 = !DILocation(line: 79, column: 30, scope: !1387)
!1490 = !DILocation(line: 79, column: 23, scope: !1387)
!1491 = !DILocation(line: 79, column: 38, scope: !1387)
!1492 = !DILocation(line: 79, column: 36, scope: !1387)
!1493 = !DILocalVariable(name: "u", scope: !1387, file: !266, line: 87, type: !52)
!1494 = !DILocation(line: 87, column: 17, scope: !1387)
!1495 = !DILocation(line: 87, column: 26, scope: !1387)
!1496 = !DILocation(line: 87, column: 21, scope: !1387)
!1497 = !DILocation(line: 87, column: 29, scope: !1387)
!1498 = !DILocalVariable(name: "v", scope: !1387, file: !266, line: 87, type: !52)
!1499 = !DILocation(line: 87, column: 42, scope: !1387)
!1500 = !DILocation(line: 87, column: 51, scope: !1387)
!1501 = !DILocation(line: 87, column: 46, scope: !1387)
!1502 = !DILocation(line: 87, column: 54, scope: !1387)
!1503 = !DILocation(line: 89, column: 45, scope: !1387)
!1504 = !DILocation(line: 89, column: 51, scope: !1387)
!1505 = !DILocation(line: 89, column: 49, scope: !1387)
!1506 = !DILocation(line: 89, column: 56, scope: !1387)
!1507 = !DILocation(line: 89, column: 62, scope: !1387)
!1508 = !DILocation(line: 89, column: 60, scope: !1387)
!1509 = !DILocation(line: 89, column: 54, scope: !1387)
!1510 = !DILocation(line: 89, column: 64, scope: !1387)
!1511 = !DILocation(line: 89, column: 71, scope: !1387)
!1512 = !DILocation(line: 89, column: 28, scope: !1387)
!1513 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1396)
!1514 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1396)
!1515 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1396)
!1516 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1396)
!1517 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1396)
!1518 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1396)
!1519 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1396)
!1520 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1396)
!1521 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1396)
!1522 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1396)
!1523 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1396)
!1524 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1396)
!1525 = !DILocation(line: 89, column: 18, scope: !1387)
!1526 = !DILocation(line: 89, column: 20, scope: !1387)
!1527 = !DILocation(line: 89, column: 13, scope: !1387)
!1528 = !DILocation(line: 89, column: 26, scope: !1387)
!1529 = !DILocation(line: 98, column: 45, scope: !1387)
!1530 = !DILocation(line: 98, column: 51, scope: !1387)
!1531 = !DILocation(line: 98, column: 49, scope: !1387)
!1532 = !DILocation(line: 98, column: 56, scope: !1387)
!1533 = !DILocation(line: 98, column: 62, scope: !1387)
!1534 = !DILocation(line: 98, column: 60, scope: !1387)
!1535 = !DILocation(line: 98, column: 54, scope: !1387)
!1536 = !DILocation(line: 99, column: 59, scope: !1387)
!1537 = !DILocation(line: 99, column: 65, scope: !1387)
!1538 = !DILocation(line: 99, column: 63, scope: !1387)
!1539 = !DILocation(line: 98, column: 64, scope: !1387)
!1540 = !DILocation(line: 99, column: 67, scope: !1387)
!1541 = !DILocation(line: 99, column: 74, scope: !1387)
!1542 = !DILocation(line: 98, column: 28, scope: !1387)
!1543 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1386)
!1544 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1386)
!1545 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1386)
!1546 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1386)
!1547 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1386)
!1548 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1386)
!1549 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1386)
!1550 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1386)
!1551 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1386)
!1552 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1386)
!1553 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1386)
!1554 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1386)
!1555 = !DILocation(line: 98, column: 18, scope: !1387)
!1556 = !DILocation(line: 98, column: 20, scope: !1387)
!1557 = !DILocation(line: 98, column: 13, scope: !1387)
!1558 = !DILocation(line: 98, column: 26, scope: !1387)
!1559 = !DILocation(line: 111, column: 45, scope: !1387)
!1560 = !DILocation(line: 111, column: 51, scope: !1387)
!1561 = !DILocation(line: 111, column: 49, scope: !1387)
!1562 = !DILocation(line: 111, column: 56, scope: !1387)
!1563 = !DILocation(line: 111, column: 62, scope: !1387)
!1564 = !DILocation(line: 111, column: 60, scope: !1387)
!1565 = !DILocation(line: 111, column: 54, scope: !1387)
!1566 = !DILocation(line: 111, column: 64, scope: !1387)
!1567 = !DILocation(line: 111, column: 71, scope: !1387)
!1568 = !DILocation(line: 111, column: 28, scope: !1387)
!1569 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1394)
!1570 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1394)
!1571 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1394)
!1572 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1394)
!1573 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1394)
!1574 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1394)
!1575 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1394)
!1576 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1394)
!1577 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1394)
!1578 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1394)
!1579 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1394)
!1580 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1394)
!1581 = !DILocation(line: 111, column: 18, scope: !1387)
!1582 = !DILocation(line: 111, column: 20, scope: !1387)
!1583 = !DILocation(line: 111, column: 13, scope: !1387)
!1584 = !DILocation(line: 111, column: 26, scope: !1387)
!1585 = !DILocation(line: 119, column: 9, scope: !1387)
!1586 = !DILocation(line: 78, column: 29, scope: !1587)
!1587 = !DILexicalBlockFile(scope: !1388, file: !266, discriminator: 2)
!1588 = !DILocation(line: 78, column: 9, scope: !1587)
!1589 = distinct !{!1589, !1590}
!1590 = !DILocation(line: 78, column: 9, scope: !1390)
!1591 = !DILocation(line: 121, column: 18, scope: !1390)
!1592 = !DILocation(line: 121, column: 32, scope: !1390)
!1593 = !DILocation(line: 121, column: 44, scope: !1390)
!1594 = !DILocation(line: 121, column: 14, scope: !1390)
!1595 = !DILocation(line: 122, column: 17, scope: !1390)
!1596 = !DILocation(line: 122, column: 31, scope: !1390)
!1597 = !DILocation(line: 122, column: 14, scope: !1390)
!1598 = !DILocation(line: 123, column: 17, scope: !1390)
!1599 = !DILocation(line: 123, column: 31, scope: !1390)
!1600 = !DILocation(line: 123, column: 14, scope: !1390)
!1601 = !DILocation(line: 124, column: 17, scope: !1390)
!1602 = !DILocation(line: 124, column: 28, scope: !1390)
!1603 = !DILocation(line: 124, column: 14, scope: !1390)
!1604 = !DILocation(line: 125, column: 17, scope: !1390)
!1605 = !DILocation(line: 125, column: 28, scope: !1390)
!1606 = !DILocation(line: 125, column: 14, scope: !1390)
!1607 = !DILocation(line: 126, column: 17, scope: !1390)
!1608 = !DILocation(line: 126, column: 28, scope: !1390)
!1609 = !DILocation(line: 126, column: 14, scope: !1390)
!1610 = !DILocation(line: 127, column: 5, scope: !1390)
!1611 = !DILocation(line: 77, column: 25, scope: !1612)
!1612 = !DILexicalBlockFile(scope: !1391, file: !266, discriminator: 2)
!1613 = !DILocation(line: 77, column: 5, scope: !1612)
!1614 = distinct !{!1614, !1615}
!1615 = !DILocation(line: 77, column: 5, scope: !1384)
!1616 = !DILocation(line: 128, column: 1, scope: !1384)
!1617 = distinct !DISubprogram(name: "yuv2rgb_422p10_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!1618 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1619)
!1619 = distinct !DILocation(line: 91, column: 31, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !266, line: 78, column: 33)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !266, line: 78, column: 9)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !266, line: 78, column: 9)
!1623 = distinct !DILexicalBlock(scope: !1624, file: !266, line: 77, column: 29)
!1624 = distinct !DILexicalBlock(scope: !1625, file: !266, line: 77, column: 5)
!1625 = distinct !DILexicalBlock(scope: !1617, file: !266, line: 77, column: 5)
!1626 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1627)
!1627 = distinct !DILocation(line: 98, column: 28, scope: !1620)
!1628 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1629)
!1629 = distinct !DILocation(line: 101, column: 31, scope: !1620)
!1630 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1631)
!1631 = distinct !DILocation(line: 111, column: 28, scope: !1620)
!1632 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1633)
!1633 = distinct !DILocation(line: 113, column: 31, scope: !1620)
!1634 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1635)
!1635 = distinct !DILocation(line: 89, column: 28, scope: !1620)
!1636 = !DILocalVariable(name: "rgb", arg: 1, scope: !1617, file: !266, line: 54, type: !43)
!1637 = !DILocation(line: 54, column: 39, scope: !1617)
!1638 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !1617, file: !266, line: 54, type: !47)
!1639 = !DILocation(line: 54, column: 57, scope: !1617)
!1640 = !DILocalVariable(name: "_yuv", arg: 3, scope: !1617, file: !266, line: 55, type: !17)
!1641 = !DILocation(line: 55, column: 34, scope: !1617)
!1642 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !1617, file: !266, line: 55, type: !50)
!1643 = !DILocation(line: 55, column: 59, scope: !1617)
!1644 = !DILocalVariable(name: "w", arg: 5, scope: !1617, file: !266, line: 56, type: !52)
!1645 = !DILocation(line: 56, column: 29, scope: !1617)
!1646 = !DILocalVariable(name: "h", arg: 6, scope: !1617, file: !266, line: 56, type: !52)
!1647 = !DILocation(line: 56, column: 36, scope: !1617)
!1648 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !1617, file: !266, line: 56, type: !53)
!1649 = !DILocation(line: 56, column: 53, scope: !1617)
!1650 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !1617, file: !266, line: 57, type: !59)
!1651 = !DILocation(line: 57, column: 39, scope: !1617)
!1652 = !DILocalVariable(name: "yuv", scope: !1617, file: !266, line: 59, type: !22)
!1653 = !DILocation(line: 59, column: 16, scope: !1617)
!1654 = !DILocation(line: 59, column: 36, scope: !1617)
!1655 = !DILocation(line: 59, column: 22, scope: !1617)
!1656 = !DILocalVariable(name: "yuv0", scope: !1617, file: !266, line: 60, type: !1418)
!1657 = !DILocation(line: 60, column: 21, scope: !1617)
!1658 = !DILocation(line: 60, column: 28, scope: !1617)
!1659 = !DILocalVariable(name: "yuv1", scope: !1617, file: !266, line: 60, type: !1418)
!1660 = !DILocation(line: 60, column: 37, scope: !1617)
!1661 = !DILocation(line: 60, column: 44, scope: !1617)
!1662 = !DILocalVariable(name: "yuv2", scope: !1617, file: !266, line: 60, type: !1418)
!1663 = !DILocation(line: 60, column: 53, scope: !1617)
!1664 = !DILocation(line: 60, column: 60, scope: !1617)
!1665 = !DILocalVariable(name: "rgb0", scope: !1617, file: !266, line: 61, type: !44)
!1666 = !DILocation(line: 61, column: 14, scope: !1617)
!1667 = !DILocation(line: 61, column: 21, scope: !1617)
!1668 = !DILocalVariable(name: "rgb1", scope: !1617, file: !266, line: 61, type: !44)
!1669 = !DILocation(line: 61, column: 30, scope: !1617)
!1670 = !DILocation(line: 61, column: 37, scope: !1617)
!1671 = !DILocalVariable(name: "rgb2", scope: !1617, file: !266, line: 61, type: !44)
!1672 = !DILocation(line: 61, column: 46, scope: !1617)
!1673 = !DILocation(line: 61, column: 53, scope: !1617)
!1674 = !DILocalVariable(name: "y", scope: !1617, file: !266, line: 62, type: !52)
!1675 = !DILocation(line: 62, column: 9, scope: !1617)
!1676 = !DILocalVariable(name: "x", scope: !1617, file: !266, line: 62, type: !52)
!1677 = !DILocation(line: 62, column: 12, scope: !1617)
!1678 = !DILocalVariable(name: "cy", scope: !1617, file: !266, line: 63, type: !52)
!1679 = !DILocation(line: 63, column: 9, scope: !1617)
!1680 = !DILocation(line: 63, column: 14, scope: !1617)
!1681 = !DILocalVariable(name: "crv", scope: !1617, file: !266, line: 64, type: !52)
!1682 = !DILocation(line: 64, column: 9, scope: !1617)
!1683 = !DILocation(line: 64, column: 15, scope: !1617)
!1684 = !DILocalVariable(name: "cgu", scope: !1617, file: !266, line: 65, type: !52)
!1685 = !DILocation(line: 65, column: 9, scope: !1617)
!1686 = !DILocation(line: 65, column: 15, scope: !1617)
!1687 = !DILocalVariable(name: "cgv", scope: !1617, file: !266, line: 66, type: !52)
!1688 = !DILocation(line: 66, column: 9, scope: !1617)
!1689 = !DILocation(line: 66, column: 15, scope: !1617)
!1690 = !DILocalVariable(name: "cbu", scope: !1617, file: !266, line: 67, type: !52)
!1691 = !DILocation(line: 67, column: 9, scope: !1617)
!1692 = !DILocation(line: 67, column: 15, scope: !1617)
!1693 = !DILocalVariable(name: "sh", scope: !1617, file: !266, line: 68, type: !343)
!1694 = !DILocation(line: 68, column: 15, scope: !1617)
!1695 = !DILocalVariable(name: "rnd", scope: !1617, file: !266, line: 68, type: !343)
!1696 = !DILocation(line: 68, column: 28, scope: !1617)
!1697 = !DILocalVariable(name: "uv_offset", scope: !1617, file: !266, line: 69, type: !343)
!1698 = !DILocation(line: 69, column: 15, scope: !1617)
!1699 = !DILocation(line: 75, column: 58, scope: !1617)
!1700 = !DILocation(line: 75, column: 61, scope: !1617)
!1701 = !DILocation(line: 75, column: 72, scope: !1617)
!1702 = !DILocation(line: 75, column: 77, scope: !1617)
!1703 = !DILocation(line: 75, column: 7, scope: !1617)
!1704 = !DILocation(line: 76, column: 58, scope: !1617)
!1705 = !DILocation(line: 76, column: 61, scope: !1617)
!1706 = !DILocation(line: 76, column: 72, scope: !1617)
!1707 = !DILocation(line: 76, column: 77, scope: !1617)
!1708 = !DILocation(line: 76, column: 7, scope: !1617)
!1709 = !DILocation(line: 77, column: 12, scope: !1625)
!1710 = !DILocation(line: 77, column: 10, scope: !1625)
!1711 = !DILocation(line: 77, column: 17, scope: !1712)
!1712 = !DILexicalBlockFile(scope: !1624, file: !266, discriminator: 1)
!1713 = !DILocation(line: 77, column: 21, scope: !1712)
!1714 = !DILocation(line: 77, column: 19, scope: !1712)
!1715 = !DILocation(line: 77, column: 5, scope: !1712)
!1716 = !DILocation(line: 78, column: 16, scope: !1622)
!1717 = !DILocation(line: 78, column: 14, scope: !1622)
!1718 = !DILocation(line: 78, column: 21, scope: !1719)
!1719 = !DILexicalBlockFile(scope: !1621, file: !266, discriminator: 1)
!1720 = !DILocation(line: 78, column: 25, scope: !1719)
!1721 = !DILocation(line: 78, column: 23, scope: !1719)
!1722 = !DILocation(line: 78, column: 9, scope: !1719)
!1723 = !DILocalVariable(name: "y00", scope: !1620, file: !266, line: 79, type: !52)
!1724 = !DILocation(line: 79, column: 17, scope: !1620)
!1725 = !DILocation(line: 79, column: 28, scope: !1620)
!1726 = !DILocation(line: 79, column: 30, scope: !1620)
!1727 = !DILocation(line: 79, column: 23, scope: !1620)
!1728 = !DILocation(line: 79, column: 38, scope: !1620)
!1729 = !DILocation(line: 79, column: 36, scope: !1620)
!1730 = !DILocalVariable(name: "y01", scope: !1620, file: !266, line: 81, type: !52)
!1731 = !DILocation(line: 81, column: 17, scope: !1620)
!1732 = !DILocation(line: 81, column: 32, scope: !1620)
!1733 = !DILocation(line: 81, column: 30, scope: !1620)
!1734 = !DILocation(line: 81, column: 34, scope: !1620)
!1735 = !DILocation(line: 81, column: 23, scope: !1620)
!1736 = !DILocation(line: 81, column: 41, scope: !1620)
!1737 = !DILocation(line: 81, column: 39, scope: !1620)
!1738 = !DILocalVariable(name: "u", scope: !1620, file: !266, line: 87, type: !52)
!1739 = !DILocation(line: 87, column: 17, scope: !1620)
!1740 = !DILocation(line: 87, column: 26, scope: !1620)
!1741 = !DILocation(line: 87, column: 21, scope: !1620)
!1742 = !DILocation(line: 87, column: 29, scope: !1620)
!1743 = !DILocalVariable(name: "v", scope: !1620, file: !266, line: 87, type: !52)
!1744 = !DILocation(line: 87, column: 42, scope: !1620)
!1745 = !DILocation(line: 87, column: 51, scope: !1620)
!1746 = !DILocation(line: 87, column: 46, scope: !1620)
!1747 = !DILocation(line: 87, column: 54, scope: !1620)
!1748 = !DILocation(line: 89, column: 45, scope: !1620)
!1749 = !DILocation(line: 89, column: 51, scope: !1620)
!1750 = !DILocation(line: 89, column: 49, scope: !1620)
!1751 = !DILocation(line: 89, column: 56, scope: !1620)
!1752 = !DILocation(line: 89, column: 62, scope: !1620)
!1753 = !DILocation(line: 89, column: 60, scope: !1620)
!1754 = !DILocation(line: 89, column: 54, scope: !1620)
!1755 = !DILocation(line: 89, column: 64, scope: !1620)
!1756 = !DILocation(line: 89, column: 71, scope: !1620)
!1757 = !DILocation(line: 89, column: 28, scope: !1620)
!1758 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1635)
!1759 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1635)
!1760 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1635)
!1761 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1635)
!1762 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1635)
!1763 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1635)
!1764 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1635)
!1765 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1635)
!1766 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1635)
!1767 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1635)
!1768 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1635)
!1769 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1635)
!1770 = !DILocation(line: 89, column: 18, scope: !1620)
!1771 = !DILocation(line: 89, column: 20, scope: !1620)
!1772 = !DILocation(line: 89, column: 13, scope: !1620)
!1773 = !DILocation(line: 89, column: 26, scope: !1620)
!1774 = !DILocation(line: 91, column: 48, scope: !1620)
!1775 = !DILocation(line: 91, column: 54, scope: !1620)
!1776 = !DILocation(line: 91, column: 52, scope: !1620)
!1777 = !DILocation(line: 91, column: 59, scope: !1620)
!1778 = !DILocation(line: 91, column: 65, scope: !1620)
!1779 = !DILocation(line: 91, column: 63, scope: !1620)
!1780 = !DILocation(line: 91, column: 57, scope: !1620)
!1781 = !DILocation(line: 91, column: 67, scope: !1620)
!1782 = !DILocation(line: 91, column: 74, scope: !1620)
!1783 = !DILocation(line: 91, column: 31, scope: !1620)
!1784 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1619)
!1785 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1619)
!1786 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1619)
!1787 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1619)
!1788 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1619)
!1789 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1619)
!1790 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1619)
!1791 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1619)
!1792 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1619)
!1793 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1619)
!1794 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1619)
!1795 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1619)
!1796 = !DILocation(line: 91, column: 22, scope: !1620)
!1797 = !DILocation(line: 91, column: 20, scope: !1620)
!1798 = !DILocation(line: 91, column: 24, scope: !1620)
!1799 = !DILocation(line: 91, column: 13, scope: !1620)
!1800 = !DILocation(line: 91, column: 29, scope: !1620)
!1801 = !DILocation(line: 98, column: 45, scope: !1620)
!1802 = !DILocation(line: 98, column: 51, scope: !1620)
!1803 = !DILocation(line: 98, column: 49, scope: !1620)
!1804 = !DILocation(line: 98, column: 56, scope: !1620)
!1805 = !DILocation(line: 98, column: 62, scope: !1620)
!1806 = !DILocation(line: 98, column: 60, scope: !1620)
!1807 = !DILocation(line: 98, column: 54, scope: !1620)
!1808 = !DILocation(line: 99, column: 59, scope: !1620)
!1809 = !DILocation(line: 99, column: 65, scope: !1620)
!1810 = !DILocation(line: 99, column: 63, scope: !1620)
!1811 = !DILocation(line: 98, column: 64, scope: !1620)
!1812 = !DILocation(line: 99, column: 67, scope: !1620)
!1813 = !DILocation(line: 99, column: 74, scope: !1620)
!1814 = !DILocation(line: 98, column: 28, scope: !1620)
!1815 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1627)
!1816 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1627)
!1817 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1627)
!1818 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1627)
!1819 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1627)
!1820 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1627)
!1821 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1627)
!1822 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1627)
!1823 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1627)
!1824 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1627)
!1825 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1627)
!1826 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1627)
!1827 = !DILocation(line: 98, column: 18, scope: !1620)
!1828 = !DILocation(line: 98, column: 20, scope: !1620)
!1829 = !DILocation(line: 98, column: 13, scope: !1620)
!1830 = !DILocation(line: 98, column: 26, scope: !1620)
!1831 = !DILocation(line: 101, column: 48, scope: !1620)
!1832 = !DILocation(line: 101, column: 54, scope: !1620)
!1833 = !DILocation(line: 101, column: 52, scope: !1620)
!1834 = !DILocation(line: 101, column: 59, scope: !1620)
!1835 = !DILocation(line: 101, column: 65, scope: !1620)
!1836 = !DILocation(line: 101, column: 63, scope: !1620)
!1837 = !DILocation(line: 101, column: 57, scope: !1620)
!1838 = !DILocation(line: 102, column: 59, scope: !1620)
!1839 = !DILocation(line: 102, column: 65, scope: !1620)
!1840 = !DILocation(line: 102, column: 63, scope: !1620)
!1841 = !DILocation(line: 101, column: 67, scope: !1620)
!1842 = !DILocation(line: 102, column: 67, scope: !1620)
!1843 = !DILocation(line: 102, column: 74, scope: !1620)
!1844 = !DILocation(line: 101, column: 31, scope: !1620)
!1845 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1629)
!1846 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1629)
!1847 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1629)
!1848 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1629)
!1849 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1629)
!1850 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1629)
!1851 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1629)
!1852 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1629)
!1853 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1629)
!1854 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1629)
!1855 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1629)
!1856 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1629)
!1857 = !DILocation(line: 101, column: 22, scope: !1620)
!1858 = !DILocation(line: 101, column: 20, scope: !1620)
!1859 = !DILocation(line: 101, column: 24, scope: !1620)
!1860 = !DILocation(line: 101, column: 13, scope: !1620)
!1861 = !DILocation(line: 101, column: 29, scope: !1620)
!1862 = !DILocation(line: 111, column: 45, scope: !1620)
!1863 = !DILocation(line: 111, column: 51, scope: !1620)
!1864 = !DILocation(line: 111, column: 49, scope: !1620)
!1865 = !DILocation(line: 111, column: 56, scope: !1620)
!1866 = !DILocation(line: 111, column: 62, scope: !1620)
!1867 = !DILocation(line: 111, column: 60, scope: !1620)
!1868 = !DILocation(line: 111, column: 54, scope: !1620)
!1869 = !DILocation(line: 111, column: 64, scope: !1620)
!1870 = !DILocation(line: 111, column: 71, scope: !1620)
!1871 = !DILocation(line: 111, column: 28, scope: !1620)
!1872 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1631)
!1873 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1631)
!1874 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1631)
!1875 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1631)
!1876 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1631)
!1877 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1631)
!1878 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1631)
!1879 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1631)
!1880 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1631)
!1881 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1631)
!1882 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1631)
!1883 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1631)
!1884 = !DILocation(line: 111, column: 18, scope: !1620)
!1885 = !DILocation(line: 111, column: 20, scope: !1620)
!1886 = !DILocation(line: 111, column: 13, scope: !1620)
!1887 = !DILocation(line: 111, column: 26, scope: !1620)
!1888 = !DILocation(line: 113, column: 48, scope: !1620)
!1889 = !DILocation(line: 113, column: 54, scope: !1620)
!1890 = !DILocation(line: 113, column: 52, scope: !1620)
!1891 = !DILocation(line: 113, column: 59, scope: !1620)
!1892 = !DILocation(line: 113, column: 65, scope: !1620)
!1893 = !DILocation(line: 113, column: 63, scope: !1620)
!1894 = !DILocation(line: 113, column: 57, scope: !1620)
!1895 = !DILocation(line: 113, column: 67, scope: !1620)
!1896 = !DILocation(line: 113, column: 74, scope: !1620)
!1897 = !DILocation(line: 113, column: 31, scope: !1620)
!1898 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1633)
!1899 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1633)
!1900 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1633)
!1901 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1633)
!1902 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1633)
!1903 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1633)
!1904 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1633)
!1905 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1633)
!1906 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1633)
!1907 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1633)
!1908 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1633)
!1909 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1633)
!1910 = !DILocation(line: 113, column: 22, scope: !1620)
!1911 = !DILocation(line: 113, column: 20, scope: !1620)
!1912 = !DILocation(line: 113, column: 24, scope: !1620)
!1913 = !DILocation(line: 113, column: 13, scope: !1620)
!1914 = !DILocation(line: 113, column: 29, scope: !1620)
!1915 = !DILocation(line: 119, column: 9, scope: !1620)
!1916 = !DILocation(line: 78, column: 29, scope: !1917)
!1917 = !DILexicalBlockFile(scope: !1621, file: !266, discriminator: 2)
!1918 = !DILocation(line: 78, column: 9, scope: !1917)
!1919 = distinct !{!1919, !1920}
!1920 = !DILocation(line: 78, column: 9, scope: !1623)
!1921 = !DILocation(line: 121, column: 18, scope: !1623)
!1922 = !DILocation(line: 121, column: 32, scope: !1623)
!1923 = !DILocation(line: 121, column: 44, scope: !1623)
!1924 = !DILocation(line: 121, column: 14, scope: !1623)
!1925 = !DILocation(line: 122, column: 17, scope: !1623)
!1926 = !DILocation(line: 122, column: 31, scope: !1623)
!1927 = !DILocation(line: 122, column: 14, scope: !1623)
!1928 = !DILocation(line: 123, column: 17, scope: !1623)
!1929 = !DILocation(line: 123, column: 31, scope: !1623)
!1930 = !DILocation(line: 123, column: 14, scope: !1623)
!1931 = !DILocation(line: 124, column: 17, scope: !1623)
!1932 = !DILocation(line: 124, column: 28, scope: !1623)
!1933 = !DILocation(line: 124, column: 14, scope: !1623)
!1934 = !DILocation(line: 125, column: 17, scope: !1623)
!1935 = !DILocation(line: 125, column: 28, scope: !1623)
!1936 = !DILocation(line: 125, column: 14, scope: !1623)
!1937 = !DILocation(line: 126, column: 17, scope: !1623)
!1938 = !DILocation(line: 126, column: 28, scope: !1623)
!1939 = !DILocation(line: 126, column: 14, scope: !1623)
!1940 = !DILocation(line: 127, column: 5, scope: !1623)
!1941 = !DILocation(line: 77, column: 25, scope: !1942)
!1942 = !DILexicalBlockFile(scope: !1624, file: !266, discriminator: 2)
!1943 = !DILocation(line: 77, column: 5, scope: !1942)
!1944 = distinct !{!1944, !1945}
!1945 = !DILocation(line: 77, column: 5, scope: !1617)
!1946 = !DILocation(line: 128, column: 1, scope: !1617)
!1947 = distinct !DISubprogram(name: "yuv2rgb_420p10_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!1948 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1949)
!1949 = distinct !DILocation(line: 91, column: 31, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1951, file: !266, line: 78, column: 33)
!1951 = distinct !DILexicalBlock(scope: !1952, file: !266, line: 78, column: 9)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !266, line: 78, column: 9)
!1953 = distinct !DILexicalBlock(scope: !1954, file: !266, line: 77, column: 29)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !266, line: 77, column: 5)
!1955 = distinct !DILexicalBlock(scope: !1947, file: !266, line: 77, column: 5)
!1956 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1957)
!1957 = distinct !DILocation(line: 93, column: 40, scope: !1950)
!1958 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1959)
!1959 = distinct !DILocation(line: 94, column: 44, scope: !1950)
!1960 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1961)
!1961 = distinct !DILocation(line: 98, column: 28, scope: !1950)
!1962 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1963)
!1963 = distinct !DILocation(line: 101, column: 31, scope: !1950)
!1964 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1965)
!1965 = distinct !DILocation(line: 104, column: 40, scope: !1950)
!1966 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1967)
!1967 = distinct !DILocation(line: 106, column: 44, scope: !1950)
!1968 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1969)
!1969 = distinct !DILocation(line: 111, column: 28, scope: !1950)
!1970 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1971)
!1971 = distinct !DILocation(line: 113, column: 31, scope: !1950)
!1972 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1973)
!1973 = distinct !DILocation(line: 115, column: 40, scope: !1950)
!1974 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1975)
!1975 = distinct !DILocation(line: 116, column: 44, scope: !1950)
!1976 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !1977)
!1977 = distinct !DILocation(line: 89, column: 28, scope: !1950)
!1978 = !DILocalVariable(name: "rgb", arg: 1, scope: !1947, file: !266, line: 54, type: !43)
!1979 = !DILocation(line: 54, column: 39, scope: !1947)
!1980 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !1947, file: !266, line: 54, type: !47)
!1981 = !DILocation(line: 54, column: 57, scope: !1947)
!1982 = !DILocalVariable(name: "_yuv", arg: 3, scope: !1947, file: !266, line: 55, type: !17)
!1983 = !DILocation(line: 55, column: 34, scope: !1947)
!1984 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !1947, file: !266, line: 55, type: !50)
!1985 = !DILocation(line: 55, column: 59, scope: !1947)
!1986 = !DILocalVariable(name: "w", arg: 5, scope: !1947, file: !266, line: 56, type: !52)
!1987 = !DILocation(line: 56, column: 29, scope: !1947)
!1988 = !DILocalVariable(name: "h", arg: 6, scope: !1947, file: !266, line: 56, type: !52)
!1989 = !DILocation(line: 56, column: 36, scope: !1947)
!1990 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !1947, file: !266, line: 56, type: !53)
!1991 = !DILocation(line: 56, column: 53, scope: !1947)
!1992 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !1947, file: !266, line: 57, type: !59)
!1993 = !DILocation(line: 57, column: 39, scope: !1947)
!1994 = !DILocalVariable(name: "yuv", scope: !1947, file: !266, line: 59, type: !22)
!1995 = !DILocation(line: 59, column: 16, scope: !1947)
!1996 = !DILocation(line: 59, column: 36, scope: !1947)
!1997 = !DILocation(line: 59, column: 22, scope: !1947)
!1998 = !DILocalVariable(name: "yuv0", scope: !1947, file: !266, line: 60, type: !1418)
!1999 = !DILocation(line: 60, column: 21, scope: !1947)
!2000 = !DILocation(line: 60, column: 28, scope: !1947)
!2001 = !DILocalVariable(name: "yuv1", scope: !1947, file: !266, line: 60, type: !1418)
!2002 = !DILocation(line: 60, column: 37, scope: !1947)
!2003 = !DILocation(line: 60, column: 44, scope: !1947)
!2004 = !DILocalVariable(name: "yuv2", scope: !1947, file: !266, line: 60, type: !1418)
!2005 = !DILocation(line: 60, column: 53, scope: !1947)
!2006 = !DILocation(line: 60, column: 60, scope: !1947)
!2007 = !DILocalVariable(name: "rgb0", scope: !1947, file: !266, line: 61, type: !44)
!2008 = !DILocation(line: 61, column: 14, scope: !1947)
!2009 = !DILocation(line: 61, column: 21, scope: !1947)
!2010 = !DILocalVariable(name: "rgb1", scope: !1947, file: !266, line: 61, type: !44)
!2011 = !DILocation(line: 61, column: 30, scope: !1947)
!2012 = !DILocation(line: 61, column: 37, scope: !1947)
!2013 = !DILocalVariable(name: "rgb2", scope: !1947, file: !266, line: 61, type: !44)
!2014 = !DILocation(line: 61, column: 46, scope: !1947)
!2015 = !DILocation(line: 61, column: 53, scope: !1947)
!2016 = !DILocalVariable(name: "y", scope: !1947, file: !266, line: 62, type: !52)
!2017 = !DILocation(line: 62, column: 9, scope: !1947)
!2018 = !DILocalVariable(name: "x", scope: !1947, file: !266, line: 62, type: !52)
!2019 = !DILocation(line: 62, column: 12, scope: !1947)
!2020 = !DILocalVariable(name: "cy", scope: !1947, file: !266, line: 63, type: !52)
!2021 = !DILocation(line: 63, column: 9, scope: !1947)
!2022 = !DILocation(line: 63, column: 14, scope: !1947)
!2023 = !DILocalVariable(name: "crv", scope: !1947, file: !266, line: 64, type: !52)
!2024 = !DILocation(line: 64, column: 9, scope: !1947)
!2025 = !DILocation(line: 64, column: 15, scope: !1947)
!2026 = !DILocalVariable(name: "cgu", scope: !1947, file: !266, line: 65, type: !52)
!2027 = !DILocation(line: 65, column: 9, scope: !1947)
!2028 = !DILocation(line: 65, column: 15, scope: !1947)
!2029 = !DILocalVariable(name: "cgv", scope: !1947, file: !266, line: 66, type: !52)
!2030 = !DILocation(line: 66, column: 9, scope: !1947)
!2031 = !DILocation(line: 66, column: 15, scope: !1947)
!2032 = !DILocalVariable(name: "cbu", scope: !1947, file: !266, line: 67, type: !52)
!2033 = !DILocation(line: 67, column: 9, scope: !1947)
!2034 = !DILocation(line: 67, column: 15, scope: !1947)
!2035 = !DILocalVariable(name: "sh", scope: !1947, file: !266, line: 68, type: !343)
!2036 = !DILocation(line: 68, column: 15, scope: !1947)
!2037 = !DILocalVariable(name: "rnd", scope: !1947, file: !266, line: 68, type: !343)
!2038 = !DILocation(line: 68, column: 28, scope: !1947)
!2039 = !DILocalVariable(name: "uv_offset", scope: !1947, file: !266, line: 69, type: !343)
!2040 = !DILocation(line: 69, column: 15, scope: !1947)
!2041 = !DILocation(line: 75, column: 58, scope: !1947)
!2042 = !DILocation(line: 75, column: 61, scope: !1947)
!2043 = !DILocation(line: 75, column: 72, scope: !1947)
!2044 = !DILocation(line: 75, column: 77, scope: !1947)
!2045 = !DILocation(line: 75, column: 7, scope: !1947)
!2046 = !DILocation(line: 76, column: 58, scope: !1947)
!2047 = !DILocation(line: 76, column: 61, scope: !1947)
!2048 = !DILocation(line: 76, column: 72, scope: !1947)
!2049 = !DILocation(line: 76, column: 77, scope: !1947)
!2050 = !DILocation(line: 76, column: 7, scope: !1947)
!2051 = !DILocation(line: 77, column: 12, scope: !1955)
!2052 = !DILocation(line: 77, column: 10, scope: !1955)
!2053 = !DILocation(line: 77, column: 17, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !1954, file: !266, discriminator: 1)
!2055 = !DILocation(line: 77, column: 21, scope: !2054)
!2056 = !DILocation(line: 77, column: 19, scope: !2054)
!2057 = !DILocation(line: 77, column: 5, scope: !2054)
!2058 = !DILocation(line: 78, column: 16, scope: !1952)
!2059 = !DILocation(line: 78, column: 14, scope: !1952)
!2060 = !DILocation(line: 78, column: 21, scope: !2061)
!2061 = !DILexicalBlockFile(scope: !1951, file: !266, discriminator: 1)
!2062 = !DILocation(line: 78, column: 25, scope: !2061)
!2063 = !DILocation(line: 78, column: 23, scope: !2061)
!2064 = !DILocation(line: 78, column: 9, scope: !2061)
!2065 = !DILocalVariable(name: "y00", scope: !1950, file: !266, line: 79, type: !52)
!2066 = !DILocation(line: 79, column: 17, scope: !1950)
!2067 = !DILocation(line: 79, column: 28, scope: !1950)
!2068 = !DILocation(line: 79, column: 30, scope: !1950)
!2069 = !DILocation(line: 79, column: 23, scope: !1950)
!2070 = !DILocation(line: 79, column: 38, scope: !1950)
!2071 = !DILocation(line: 79, column: 36, scope: !1950)
!2072 = !DILocalVariable(name: "y01", scope: !1950, file: !266, line: 81, type: !52)
!2073 = !DILocation(line: 81, column: 17, scope: !1950)
!2074 = !DILocation(line: 81, column: 32, scope: !1950)
!2075 = !DILocation(line: 81, column: 30, scope: !1950)
!2076 = !DILocation(line: 81, column: 34, scope: !1950)
!2077 = !DILocation(line: 81, column: 23, scope: !1950)
!2078 = !DILocation(line: 81, column: 41, scope: !1950)
!2079 = !DILocation(line: 81, column: 39, scope: !1950)
!2080 = !DILocalVariable(name: "y10", scope: !1950, file: !266, line: 83, type: !52)
!2081 = !DILocation(line: 83, column: 17, scope: !1950)
!2082 = !DILocation(line: 83, column: 28, scope: !1950)
!2083 = !DILocation(line: 83, column: 42, scope: !1950)
!2084 = !DILocation(line: 83, column: 67, scope: !1950)
!2085 = !DILocation(line: 83, column: 65, scope: !1950)
!2086 = !DILocation(line: 83, column: 63, scope: !1950)
!2087 = !DILocation(line: 83, column: 61, scope: !1950)
!2088 = !DILocation(line: 83, column: 23, scope: !1950)
!2089 = !DILocation(line: 83, column: 72, scope: !1950)
!2090 = !DILocation(line: 83, column: 70, scope: !1950)
!2091 = !DILocalVariable(name: "y11", scope: !1950, file: !266, line: 84, type: !52)
!2092 = !DILocation(line: 84, column: 17, scope: !1950)
!2093 = !DILocation(line: 84, column: 28, scope: !1950)
!2094 = !DILocation(line: 84, column: 42, scope: !1950)
!2095 = !DILocation(line: 84, column: 67, scope: !1950)
!2096 = !DILocation(line: 84, column: 65, scope: !1950)
!2097 = !DILocation(line: 84, column: 63, scope: !1950)
!2098 = !DILocation(line: 84, column: 61, scope: !1950)
!2099 = !DILocation(line: 84, column: 69, scope: !1950)
!2100 = !DILocation(line: 84, column: 23, scope: !1950)
!2101 = !DILocation(line: 84, column: 76, scope: !1950)
!2102 = !DILocation(line: 84, column: 74, scope: !1950)
!2103 = !DILocalVariable(name: "u", scope: !1950, file: !266, line: 87, type: !52)
!2104 = !DILocation(line: 87, column: 17, scope: !1950)
!2105 = !DILocation(line: 87, column: 26, scope: !1950)
!2106 = !DILocation(line: 87, column: 21, scope: !1950)
!2107 = !DILocation(line: 87, column: 29, scope: !1950)
!2108 = !DILocalVariable(name: "v", scope: !1950, file: !266, line: 87, type: !52)
!2109 = !DILocation(line: 87, column: 42, scope: !1950)
!2110 = !DILocation(line: 87, column: 51, scope: !1950)
!2111 = !DILocation(line: 87, column: 46, scope: !1950)
!2112 = !DILocation(line: 87, column: 54, scope: !1950)
!2113 = !DILocation(line: 89, column: 45, scope: !1950)
!2114 = !DILocation(line: 89, column: 51, scope: !1950)
!2115 = !DILocation(line: 89, column: 49, scope: !1950)
!2116 = !DILocation(line: 89, column: 56, scope: !1950)
!2117 = !DILocation(line: 89, column: 62, scope: !1950)
!2118 = !DILocation(line: 89, column: 60, scope: !1950)
!2119 = !DILocation(line: 89, column: 54, scope: !1950)
!2120 = !DILocation(line: 89, column: 64, scope: !1950)
!2121 = !DILocation(line: 89, column: 71, scope: !1950)
!2122 = !DILocation(line: 89, column: 28, scope: !1950)
!2123 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1977)
!2124 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1977)
!2125 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1977)
!2126 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1977)
!2127 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1977)
!2128 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1977)
!2129 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1977)
!2130 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1977)
!2131 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1977)
!2132 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1977)
!2133 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1977)
!2134 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1977)
!2135 = !DILocation(line: 89, column: 18, scope: !1950)
!2136 = !DILocation(line: 89, column: 20, scope: !1950)
!2137 = !DILocation(line: 89, column: 13, scope: !1950)
!2138 = !DILocation(line: 89, column: 26, scope: !1950)
!2139 = !DILocation(line: 91, column: 48, scope: !1950)
!2140 = !DILocation(line: 91, column: 54, scope: !1950)
!2141 = !DILocation(line: 91, column: 52, scope: !1950)
!2142 = !DILocation(line: 91, column: 59, scope: !1950)
!2143 = !DILocation(line: 91, column: 65, scope: !1950)
!2144 = !DILocation(line: 91, column: 63, scope: !1950)
!2145 = !DILocation(line: 91, column: 57, scope: !1950)
!2146 = !DILocation(line: 91, column: 67, scope: !1950)
!2147 = !DILocation(line: 91, column: 74, scope: !1950)
!2148 = !DILocation(line: 91, column: 31, scope: !1950)
!2149 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1949)
!2150 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1949)
!2151 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1949)
!2152 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1949)
!2153 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1949)
!2154 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1949)
!2155 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1949)
!2156 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1949)
!2157 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1949)
!2158 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1949)
!2159 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1949)
!2160 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1949)
!2161 = !DILocation(line: 91, column: 22, scope: !1950)
!2162 = !DILocation(line: 91, column: 20, scope: !1950)
!2163 = !DILocation(line: 91, column: 24, scope: !1950)
!2164 = !DILocation(line: 91, column: 13, scope: !1950)
!2165 = !DILocation(line: 91, column: 29, scope: !1950)
!2166 = !DILocation(line: 93, column: 57, scope: !1950)
!2167 = !DILocation(line: 93, column: 63, scope: !1950)
!2168 = !DILocation(line: 93, column: 61, scope: !1950)
!2169 = !DILocation(line: 93, column: 68, scope: !1950)
!2170 = !DILocation(line: 93, column: 74, scope: !1950)
!2171 = !DILocation(line: 93, column: 72, scope: !1950)
!2172 = !DILocation(line: 93, column: 66, scope: !1950)
!2173 = !DILocation(line: 93, column: 76, scope: !1950)
!2174 = !DILocation(line: 93, column: 83, scope: !1950)
!2175 = !DILocation(line: 93, column: 40, scope: !1950)
!2176 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1957)
!2177 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1957)
!2178 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1957)
!2179 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1957)
!2180 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1957)
!2181 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1957)
!2182 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1957)
!2183 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1957)
!2184 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1957)
!2185 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1957)
!2186 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1957)
!2187 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1957)
!2188 = !DILocation(line: 93, column: 22, scope: !1950)
!2189 = !DILocation(line: 93, column: 20, scope: !1950)
!2190 = !DILocation(line: 93, column: 18, scope: !1950)
!2191 = !DILocation(line: 93, column: 26, scope: !1950)
!2192 = !DILocation(line: 93, column: 24, scope: !1950)
!2193 = !DILocation(line: 93, column: 13, scope: !1950)
!2194 = !DILocation(line: 93, column: 38, scope: !1950)
!2195 = !DILocation(line: 94, column: 61, scope: !1950)
!2196 = !DILocation(line: 94, column: 67, scope: !1950)
!2197 = !DILocation(line: 94, column: 65, scope: !1950)
!2198 = !DILocation(line: 94, column: 72, scope: !1950)
!2199 = !DILocation(line: 94, column: 78, scope: !1950)
!2200 = !DILocation(line: 94, column: 76, scope: !1950)
!2201 = !DILocation(line: 94, column: 70, scope: !1950)
!2202 = !DILocation(line: 94, column: 80, scope: !1950)
!2203 = !DILocation(line: 94, column: 87, scope: !1950)
!2204 = !DILocation(line: 94, column: 44, scope: !1950)
!2205 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1959)
!2206 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1959)
!2207 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1959)
!2208 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1959)
!2209 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1959)
!2210 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1959)
!2211 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1959)
!2212 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1959)
!2213 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1959)
!2214 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1959)
!2215 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1959)
!2216 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1959)
!2217 = !DILocation(line: 94, column: 22, scope: !1950)
!2218 = !DILocation(line: 94, column: 20, scope: !1950)
!2219 = !DILocation(line: 94, column: 18, scope: !1950)
!2220 = !DILocation(line: 94, column: 26, scope: !1950)
!2221 = !DILocation(line: 94, column: 24, scope: !1950)
!2222 = !DILocation(line: 94, column: 37, scope: !1950)
!2223 = !DILocation(line: 94, column: 13, scope: !1950)
!2224 = !DILocation(line: 94, column: 42, scope: !1950)
!2225 = !DILocation(line: 98, column: 45, scope: !1950)
!2226 = !DILocation(line: 98, column: 51, scope: !1950)
!2227 = !DILocation(line: 98, column: 49, scope: !1950)
!2228 = !DILocation(line: 98, column: 56, scope: !1950)
!2229 = !DILocation(line: 98, column: 62, scope: !1950)
!2230 = !DILocation(line: 98, column: 60, scope: !1950)
!2231 = !DILocation(line: 98, column: 54, scope: !1950)
!2232 = !DILocation(line: 99, column: 59, scope: !1950)
!2233 = !DILocation(line: 99, column: 65, scope: !1950)
!2234 = !DILocation(line: 99, column: 63, scope: !1950)
!2235 = !DILocation(line: 98, column: 64, scope: !1950)
!2236 = !DILocation(line: 99, column: 67, scope: !1950)
!2237 = !DILocation(line: 99, column: 74, scope: !1950)
!2238 = !DILocation(line: 98, column: 28, scope: !1950)
!2239 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1961)
!2240 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1961)
!2241 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1961)
!2242 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1961)
!2243 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1961)
!2244 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1961)
!2245 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1961)
!2246 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1961)
!2247 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1961)
!2248 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1961)
!2249 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1961)
!2250 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1961)
!2251 = !DILocation(line: 98, column: 18, scope: !1950)
!2252 = !DILocation(line: 98, column: 20, scope: !1950)
!2253 = !DILocation(line: 98, column: 13, scope: !1950)
!2254 = !DILocation(line: 98, column: 26, scope: !1950)
!2255 = !DILocation(line: 101, column: 48, scope: !1950)
!2256 = !DILocation(line: 101, column: 54, scope: !1950)
!2257 = !DILocation(line: 101, column: 52, scope: !1950)
!2258 = !DILocation(line: 101, column: 59, scope: !1950)
!2259 = !DILocation(line: 101, column: 65, scope: !1950)
!2260 = !DILocation(line: 101, column: 63, scope: !1950)
!2261 = !DILocation(line: 101, column: 57, scope: !1950)
!2262 = !DILocation(line: 102, column: 59, scope: !1950)
!2263 = !DILocation(line: 102, column: 65, scope: !1950)
!2264 = !DILocation(line: 102, column: 63, scope: !1950)
!2265 = !DILocation(line: 101, column: 67, scope: !1950)
!2266 = !DILocation(line: 102, column: 67, scope: !1950)
!2267 = !DILocation(line: 102, column: 74, scope: !1950)
!2268 = !DILocation(line: 101, column: 31, scope: !1950)
!2269 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1963)
!2270 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1963)
!2271 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1963)
!2272 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1963)
!2273 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1963)
!2274 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1963)
!2275 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1963)
!2276 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1963)
!2277 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1963)
!2278 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1963)
!2279 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1963)
!2280 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1963)
!2281 = !DILocation(line: 101, column: 22, scope: !1950)
!2282 = !DILocation(line: 101, column: 20, scope: !1950)
!2283 = !DILocation(line: 101, column: 24, scope: !1950)
!2284 = !DILocation(line: 101, column: 13, scope: !1950)
!2285 = !DILocation(line: 101, column: 29, scope: !1950)
!2286 = !DILocation(line: 104, column: 57, scope: !1950)
!2287 = !DILocation(line: 104, column: 63, scope: !1950)
!2288 = !DILocation(line: 104, column: 61, scope: !1950)
!2289 = !DILocation(line: 104, column: 68, scope: !1950)
!2290 = !DILocation(line: 104, column: 74, scope: !1950)
!2291 = !DILocation(line: 104, column: 72, scope: !1950)
!2292 = !DILocation(line: 104, column: 66, scope: !1950)
!2293 = !DILocation(line: 105, column: 59, scope: !1950)
!2294 = !DILocation(line: 105, column: 65, scope: !1950)
!2295 = !DILocation(line: 105, column: 63, scope: !1950)
!2296 = !DILocation(line: 104, column: 76, scope: !1950)
!2297 = !DILocation(line: 105, column: 67, scope: !1950)
!2298 = !DILocation(line: 105, column: 74, scope: !1950)
!2299 = !DILocation(line: 104, column: 40, scope: !1950)
!2300 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1965)
!2301 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1965)
!2302 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1965)
!2303 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1965)
!2304 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1965)
!2305 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1965)
!2306 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1965)
!2307 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1965)
!2308 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1965)
!2309 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1965)
!2310 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1965)
!2311 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1965)
!2312 = !DILocation(line: 104, column: 22, scope: !1950)
!2313 = !DILocation(line: 104, column: 20, scope: !1950)
!2314 = !DILocation(line: 104, column: 18, scope: !1950)
!2315 = !DILocation(line: 104, column: 26, scope: !1950)
!2316 = !DILocation(line: 104, column: 24, scope: !1950)
!2317 = !DILocation(line: 104, column: 13, scope: !1950)
!2318 = !DILocation(line: 104, column: 38, scope: !1950)
!2319 = !DILocation(line: 106, column: 61, scope: !1950)
!2320 = !DILocation(line: 106, column: 67, scope: !1950)
!2321 = !DILocation(line: 106, column: 65, scope: !1950)
!2322 = !DILocation(line: 106, column: 72, scope: !1950)
!2323 = !DILocation(line: 106, column: 78, scope: !1950)
!2324 = !DILocation(line: 106, column: 76, scope: !1950)
!2325 = !DILocation(line: 106, column: 70, scope: !1950)
!2326 = !DILocation(line: 107, column: 59, scope: !1950)
!2327 = !DILocation(line: 107, column: 65, scope: !1950)
!2328 = !DILocation(line: 107, column: 63, scope: !1950)
!2329 = !DILocation(line: 106, column: 80, scope: !1950)
!2330 = !DILocation(line: 107, column: 67, scope: !1950)
!2331 = !DILocation(line: 107, column: 74, scope: !1950)
!2332 = !DILocation(line: 106, column: 44, scope: !1950)
!2333 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1967)
!2334 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1967)
!2335 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1967)
!2336 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1967)
!2337 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1967)
!2338 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1967)
!2339 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1967)
!2340 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1967)
!2341 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1967)
!2342 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1967)
!2343 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1967)
!2344 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1967)
!2345 = !DILocation(line: 106, column: 22, scope: !1950)
!2346 = !DILocation(line: 106, column: 20, scope: !1950)
!2347 = !DILocation(line: 106, column: 18, scope: !1950)
!2348 = !DILocation(line: 106, column: 26, scope: !1950)
!2349 = !DILocation(line: 106, column: 24, scope: !1950)
!2350 = !DILocation(line: 106, column: 37, scope: !1950)
!2351 = !DILocation(line: 106, column: 13, scope: !1950)
!2352 = !DILocation(line: 106, column: 42, scope: !1950)
!2353 = !DILocation(line: 111, column: 45, scope: !1950)
!2354 = !DILocation(line: 111, column: 51, scope: !1950)
!2355 = !DILocation(line: 111, column: 49, scope: !1950)
!2356 = !DILocation(line: 111, column: 56, scope: !1950)
!2357 = !DILocation(line: 111, column: 62, scope: !1950)
!2358 = !DILocation(line: 111, column: 60, scope: !1950)
!2359 = !DILocation(line: 111, column: 54, scope: !1950)
!2360 = !DILocation(line: 111, column: 64, scope: !1950)
!2361 = !DILocation(line: 111, column: 71, scope: !1950)
!2362 = !DILocation(line: 111, column: 28, scope: !1950)
!2363 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1969)
!2364 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1969)
!2365 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1969)
!2366 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1969)
!2367 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1969)
!2368 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1969)
!2369 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1969)
!2370 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1969)
!2371 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1969)
!2372 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1969)
!2373 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1969)
!2374 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1969)
!2375 = !DILocation(line: 111, column: 18, scope: !1950)
!2376 = !DILocation(line: 111, column: 20, scope: !1950)
!2377 = !DILocation(line: 111, column: 13, scope: !1950)
!2378 = !DILocation(line: 111, column: 26, scope: !1950)
!2379 = !DILocation(line: 113, column: 48, scope: !1950)
!2380 = !DILocation(line: 113, column: 54, scope: !1950)
!2381 = !DILocation(line: 113, column: 52, scope: !1950)
!2382 = !DILocation(line: 113, column: 59, scope: !1950)
!2383 = !DILocation(line: 113, column: 65, scope: !1950)
!2384 = !DILocation(line: 113, column: 63, scope: !1950)
!2385 = !DILocation(line: 113, column: 57, scope: !1950)
!2386 = !DILocation(line: 113, column: 67, scope: !1950)
!2387 = !DILocation(line: 113, column: 74, scope: !1950)
!2388 = !DILocation(line: 113, column: 31, scope: !1950)
!2389 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1971)
!2390 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1971)
!2391 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1971)
!2392 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1971)
!2393 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1971)
!2394 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1971)
!2395 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1971)
!2396 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1971)
!2397 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1971)
!2398 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1971)
!2399 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1971)
!2400 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1971)
!2401 = !DILocation(line: 113, column: 22, scope: !1950)
!2402 = !DILocation(line: 113, column: 20, scope: !1950)
!2403 = !DILocation(line: 113, column: 24, scope: !1950)
!2404 = !DILocation(line: 113, column: 13, scope: !1950)
!2405 = !DILocation(line: 113, column: 29, scope: !1950)
!2406 = !DILocation(line: 115, column: 57, scope: !1950)
!2407 = !DILocation(line: 115, column: 63, scope: !1950)
!2408 = !DILocation(line: 115, column: 61, scope: !1950)
!2409 = !DILocation(line: 115, column: 68, scope: !1950)
!2410 = !DILocation(line: 115, column: 74, scope: !1950)
!2411 = !DILocation(line: 115, column: 72, scope: !1950)
!2412 = !DILocation(line: 115, column: 66, scope: !1950)
!2413 = !DILocation(line: 115, column: 76, scope: !1950)
!2414 = !DILocation(line: 115, column: 83, scope: !1950)
!2415 = !DILocation(line: 115, column: 40, scope: !1950)
!2416 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1973)
!2417 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1973)
!2418 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1973)
!2419 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1973)
!2420 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1973)
!2421 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1973)
!2422 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1973)
!2423 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1973)
!2424 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1973)
!2425 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1973)
!2426 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1973)
!2427 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1973)
!2428 = !DILocation(line: 115, column: 22, scope: !1950)
!2429 = !DILocation(line: 115, column: 20, scope: !1950)
!2430 = !DILocation(line: 115, column: 18, scope: !1950)
!2431 = !DILocation(line: 115, column: 26, scope: !1950)
!2432 = !DILocation(line: 115, column: 24, scope: !1950)
!2433 = !DILocation(line: 115, column: 13, scope: !1950)
!2434 = !DILocation(line: 115, column: 38, scope: !1950)
!2435 = !DILocation(line: 116, column: 61, scope: !1950)
!2436 = !DILocation(line: 116, column: 67, scope: !1950)
!2437 = !DILocation(line: 116, column: 65, scope: !1950)
!2438 = !DILocation(line: 116, column: 72, scope: !1950)
!2439 = !DILocation(line: 116, column: 78, scope: !1950)
!2440 = !DILocation(line: 116, column: 76, scope: !1950)
!2441 = !DILocation(line: 116, column: 70, scope: !1950)
!2442 = !DILocation(line: 116, column: 80, scope: !1950)
!2443 = !DILocation(line: 116, column: 87, scope: !1950)
!2444 = !DILocation(line: 116, column: 44, scope: !1950)
!2445 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !1975)
!2446 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !1975)
!2447 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !1975)
!2448 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !1975)
!2449 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !1975)
!2450 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !1975)
!2451 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !1975)
!2452 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !1975)
!2453 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !1975)
!2454 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !1975)
!2455 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !1975)
!2456 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !1975)
!2457 = !DILocation(line: 116, column: 22, scope: !1950)
!2458 = !DILocation(line: 116, column: 20, scope: !1950)
!2459 = !DILocation(line: 116, column: 18, scope: !1950)
!2460 = !DILocation(line: 116, column: 26, scope: !1950)
!2461 = !DILocation(line: 116, column: 24, scope: !1950)
!2462 = !DILocation(line: 116, column: 37, scope: !1950)
!2463 = !DILocation(line: 116, column: 13, scope: !1950)
!2464 = !DILocation(line: 116, column: 42, scope: !1950)
!2465 = !DILocation(line: 119, column: 9, scope: !1950)
!2466 = !DILocation(line: 78, column: 29, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !1951, file: !266, discriminator: 2)
!2468 = !DILocation(line: 78, column: 9, scope: !2467)
!2469 = distinct !{!2469, !2470}
!2470 = !DILocation(line: 78, column: 9, scope: !1953)
!2471 = !DILocation(line: 121, column: 18, scope: !1953)
!2472 = !DILocation(line: 121, column: 32, scope: !1953)
!2473 = !DILocation(line: 121, column: 44, scope: !1953)
!2474 = !DILocation(line: 121, column: 14, scope: !1953)
!2475 = !DILocation(line: 122, column: 17, scope: !1953)
!2476 = !DILocation(line: 122, column: 31, scope: !1953)
!2477 = !DILocation(line: 122, column: 14, scope: !1953)
!2478 = !DILocation(line: 123, column: 17, scope: !1953)
!2479 = !DILocation(line: 123, column: 31, scope: !1953)
!2480 = !DILocation(line: 123, column: 14, scope: !1953)
!2481 = !DILocation(line: 124, column: 17, scope: !1953)
!2482 = !DILocation(line: 124, column: 28, scope: !1953)
!2483 = !DILocation(line: 124, column: 14, scope: !1953)
!2484 = !DILocation(line: 125, column: 17, scope: !1953)
!2485 = !DILocation(line: 125, column: 28, scope: !1953)
!2486 = !DILocation(line: 125, column: 14, scope: !1953)
!2487 = !DILocation(line: 126, column: 17, scope: !1953)
!2488 = !DILocation(line: 126, column: 28, scope: !1953)
!2489 = !DILocation(line: 126, column: 14, scope: !1953)
!2490 = !DILocation(line: 127, column: 5, scope: !1953)
!2491 = !DILocation(line: 77, column: 25, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !1954, file: !266, discriminator: 2)
!2493 = !DILocation(line: 77, column: 5, scope: !2492)
!2494 = distinct !{!2494, !2495}
!2495 = !DILocation(line: 77, column: 5, scope: !1947)
!2496 = !DILocation(line: 128, column: 1, scope: !1947)
!2497 = distinct !DISubprogram(name: "yuv2rgb_444p12_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!2498 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2499)
!2499 = distinct !DILocation(line: 98, column: 28, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2501, file: !266, line: 78, column: 33)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !266, line: 78, column: 9)
!2502 = distinct !DILexicalBlock(scope: !2503, file: !266, line: 78, column: 9)
!2503 = distinct !DILexicalBlock(scope: !2504, file: !266, line: 77, column: 29)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !266, line: 77, column: 5)
!2505 = distinct !DILexicalBlock(scope: !2497, file: !266, line: 77, column: 5)
!2506 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2507)
!2507 = distinct !DILocation(line: 111, column: 28, scope: !2500)
!2508 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2509)
!2509 = distinct !DILocation(line: 89, column: 28, scope: !2500)
!2510 = !DILocalVariable(name: "rgb", arg: 1, scope: !2497, file: !266, line: 54, type: !43)
!2511 = !DILocation(line: 54, column: 39, scope: !2497)
!2512 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !2497, file: !266, line: 54, type: !47)
!2513 = !DILocation(line: 54, column: 57, scope: !2497)
!2514 = !DILocalVariable(name: "_yuv", arg: 3, scope: !2497, file: !266, line: 55, type: !17)
!2515 = !DILocation(line: 55, column: 34, scope: !2497)
!2516 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !2497, file: !266, line: 55, type: !50)
!2517 = !DILocation(line: 55, column: 59, scope: !2497)
!2518 = !DILocalVariable(name: "w", arg: 5, scope: !2497, file: !266, line: 56, type: !52)
!2519 = !DILocation(line: 56, column: 29, scope: !2497)
!2520 = !DILocalVariable(name: "h", arg: 6, scope: !2497, file: !266, line: 56, type: !52)
!2521 = !DILocation(line: 56, column: 36, scope: !2497)
!2522 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !2497, file: !266, line: 56, type: !53)
!2523 = !DILocation(line: 56, column: 53, scope: !2497)
!2524 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !2497, file: !266, line: 57, type: !59)
!2525 = !DILocation(line: 57, column: 39, scope: !2497)
!2526 = !DILocalVariable(name: "yuv", scope: !2497, file: !266, line: 59, type: !22)
!2527 = !DILocation(line: 59, column: 16, scope: !2497)
!2528 = !DILocation(line: 59, column: 36, scope: !2497)
!2529 = !DILocation(line: 59, column: 22, scope: !2497)
!2530 = !DILocalVariable(name: "yuv0", scope: !2497, file: !266, line: 60, type: !1418)
!2531 = !DILocation(line: 60, column: 21, scope: !2497)
!2532 = !DILocation(line: 60, column: 28, scope: !2497)
!2533 = !DILocalVariable(name: "yuv1", scope: !2497, file: !266, line: 60, type: !1418)
!2534 = !DILocation(line: 60, column: 37, scope: !2497)
!2535 = !DILocation(line: 60, column: 44, scope: !2497)
!2536 = !DILocalVariable(name: "yuv2", scope: !2497, file: !266, line: 60, type: !1418)
!2537 = !DILocation(line: 60, column: 53, scope: !2497)
!2538 = !DILocation(line: 60, column: 60, scope: !2497)
!2539 = !DILocalVariable(name: "rgb0", scope: !2497, file: !266, line: 61, type: !44)
!2540 = !DILocation(line: 61, column: 14, scope: !2497)
!2541 = !DILocation(line: 61, column: 21, scope: !2497)
!2542 = !DILocalVariable(name: "rgb1", scope: !2497, file: !266, line: 61, type: !44)
!2543 = !DILocation(line: 61, column: 30, scope: !2497)
!2544 = !DILocation(line: 61, column: 37, scope: !2497)
!2545 = !DILocalVariable(name: "rgb2", scope: !2497, file: !266, line: 61, type: !44)
!2546 = !DILocation(line: 61, column: 46, scope: !2497)
!2547 = !DILocation(line: 61, column: 53, scope: !2497)
!2548 = !DILocalVariable(name: "y", scope: !2497, file: !266, line: 62, type: !52)
!2549 = !DILocation(line: 62, column: 9, scope: !2497)
!2550 = !DILocalVariable(name: "x", scope: !2497, file: !266, line: 62, type: !52)
!2551 = !DILocation(line: 62, column: 12, scope: !2497)
!2552 = !DILocalVariable(name: "cy", scope: !2497, file: !266, line: 63, type: !52)
!2553 = !DILocation(line: 63, column: 9, scope: !2497)
!2554 = !DILocation(line: 63, column: 14, scope: !2497)
!2555 = !DILocalVariable(name: "crv", scope: !2497, file: !266, line: 64, type: !52)
!2556 = !DILocation(line: 64, column: 9, scope: !2497)
!2557 = !DILocation(line: 64, column: 15, scope: !2497)
!2558 = !DILocalVariable(name: "cgu", scope: !2497, file: !266, line: 65, type: !52)
!2559 = !DILocation(line: 65, column: 9, scope: !2497)
!2560 = !DILocation(line: 65, column: 15, scope: !2497)
!2561 = !DILocalVariable(name: "cgv", scope: !2497, file: !266, line: 66, type: !52)
!2562 = !DILocation(line: 66, column: 9, scope: !2497)
!2563 = !DILocation(line: 66, column: 15, scope: !2497)
!2564 = !DILocalVariable(name: "cbu", scope: !2497, file: !266, line: 67, type: !52)
!2565 = !DILocation(line: 67, column: 9, scope: !2497)
!2566 = !DILocation(line: 67, column: 15, scope: !2497)
!2567 = !DILocalVariable(name: "sh", scope: !2497, file: !266, line: 68, type: !343)
!2568 = !DILocation(line: 68, column: 15, scope: !2497)
!2569 = !DILocalVariable(name: "rnd", scope: !2497, file: !266, line: 68, type: !343)
!2570 = !DILocation(line: 68, column: 28, scope: !2497)
!2571 = !DILocalVariable(name: "uv_offset", scope: !2497, file: !266, line: 69, type: !343)
!2572 = !DILocation(line: 69, column: 15, scope: !2497)
!2573 = !DILocation(line: 75, column: 58, scope: !2497)
!2574 = !DILocation(line: 75, column: 61, scope: !2497)
!2575 = !DILocation(line: 75, column: 72, scope: !2497)
!2576 = !DILocation(line: 75, column: 77, scope: !2497)
!2577 = !DILocation(line: 75, column: 7, scope: !2497)
!2578 = !DILocation(line: 76, column: 58, scope: !2497)
!2579 = !DILocation(line: 76, column: 61, scope: !2497)
!2580 = !DILocation(line: 76, column: 72, scope: !2497)
!2581 = !DILocation(line: 76, column: 77, scope: !2497)
!2582 = !DILocation(line: 76, column: 7, scope: !2497)
!2583 = !DILocation(line: 77, column: 12, scope: !2505)
!2584 = !DILocation(line: 77, column: 10, scope: !2505)
!2585 = !DILocation(line: 77, column: 17, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !2504, file: !266, discriminator: 1)
!2587 = !DILocation(line: 77, column: 21, scope: !2586)
!2588 = !DILocation(line: 77, column: 19, scope: !2586)
!2589 = !DILocation(line: 77, column: 5, scope: !2586)
!2590 = !DILocation(line: 78, column: 16, scope: !2502)
!2591 = !DILocation(line: 78, column: 14, scope: !2502)
!2592 = !DILocation(line: 78, column: 21, scope: !2593)
!2593 = !DILexicalBlockFile(scope: !2501, file: !266, discriminator: 1)
!2594 = !DILocation(line: 78, column: 25, scope: !2593)
!2595 = !DILocation(line: 78, column: 23, scope: !2593)
!2596 = !DILocation(line: 78, column: 9, scope: !2593)
!2597 = !DILocalVariable(name: "y00", scope: !2500, file: !266, line: 79, type: !52)
!2598 = !DILocation(line: 79, column: 17, scope: !2500)
!2599 = !DILocation(line: 79, column: 28, scope: !2500)
!2600 = !DILocation(line: 79, column: 30, scope: !2500)
!2601 = !DILocation(line: 79, column: 23, scope: !2500)
!2602 = !DILocation(line: 79, column: 38, scope: !2500)
!2603 = !DILocation(line: 79, column: 36, scope: !2500)
!2604 = !DILocalVariable(name: "u", scope: !2500, file: !266, line: 87, type: !52)
!2605 = !DILocation(line: 87, column: 17, scope: !2500)
!2606 = !DILocation(line: 87, column: 26, scope: !2500)
!2607 = !DILocation(line: 87, column: 21, scope: !2500)
!2608 = !DILocation(line: 87, column: 29, scope: !2500)
!2609 = !DILocalVariable(name: "v", scope: !2500, file: !266, line: 87, type: !52)
!2610 = !DILocation(line: 87, column: 42, scope: !2500)
!2611 = !DILocation(line: 87, column: 51, scope: !2500)
!2612 = !DILocation(line: 87, column: 46, scope: !2500)
!2613 = !DILocation(line: 87, column: 54, scope: !2500)
!2614 = !DILocation(line: 89, column: 45, scope: !2500)
!2615 = !DILocation(line: 89, column: 51, scope: !2500)
!2616 = !DILocation(line: 89, column: 49, scope: !2500)
!2617 = !DILocation(line: 89, column: 56, scope: !2500)
!2618 = !DILocation(line: 89, column: 62, scope: !2500)
!2619 = !DILocation(line: 89, column: 60, scope: !2500)
!2620 = !DILocation(line: 89, column: 54, scope: !2500)
!2621 = !DILocation(line: 89, column: 64, scope: !2500)
!2622 = !DILocation(line: 89, column: 71, scope: !2500)
!2623 = !DILocation(line: 89, column: 28, scope: !2500)
!2624 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2509)
!2625 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2509)
!2626 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2509)
!2627 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2509)
!2628 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2509)
!2629 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2509)
!2630 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2509)
!2631 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2509)
!2632 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2509)
!2633 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2509)
!2634 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2509)
!2635 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2509)
!2636 = !DILocation(line: 89, column: 18, scope: !2500)
!2637 = !DILocation(line: 89, column: 20, scope: !2500)
!2638 = !DILocation(line: 89, column: 13, scope: !2500)
!2639 = !DILocation(line: 89, column: 26, scope: !2500)
!2640 = !DILocation(line: 98, column: 45, scope: !2500)
!2641 = !DILocation(line: 98, column: 51, scope: !2500)
!2642 = !DILocation(line: 98, column: 49, scope: !2500)
!2643 = !DILocation(line: 98, column: 56, scope: !2500)
!2644 = !DILocation(line: 98, column: 62, scope: !2500)
!2645 = !DILocation(line: 98, column: 60, scope: !2500)
!2646 = !DILocation(line: 98, column: 54, scope: !2500)
!2647 = !DILocation(line: 99, column: 59, scope: !2500)
!2648 = !DILocation(line: 99, column: 65, scope: !2500)
!2649 = !DILocation(line: 99, column: 63, scope: !2500)
!2650 = !DILocation(line: 98, column: 64, scope: !2500)
!2651 = !DILocation(line: 99, column: 67, scope: !2500)
!2652 = !DILocation(line: 99, column: 74, scope: !2500)
!2653 = !DILocation(line: 98, column: 28, scope: !2500)
!2654 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2499)
!2655 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2499)
!2656 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2499)
!2657 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2499)
!2658 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2499)
!2659 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2499)
!2660 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2499)
!2661 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2499)
!2662 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2499)
!2663 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2499)
!2664 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2499)
!2665 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2499)
!2666 = !DILocation(line: 98, column: 18, scope: !2500)
!2667 = !DILocation(line: 98, column: 20, scope: !2500)
!2668 = !DILocation(line: 98, column: 13, scope: !2500)
!2669 = !DILocation(line: 98, column: 26, scope: !2500)
!2670 = !DILocation(line: 111, column: 45, scope: !2500)
!2671 = !DILocation(line: 111, column: 51, scope: !2500)
!2672 = !DILocation(line: 111, column: 49, scope: !2500)
!2673 = !DILocation(line: 111, column: 56, scope: !2500)
!2674 = !DILocation(line: 111, column: 62, scope: !2500)
!2675 = !DILocation(line: 111, column: 60, scope: !2500)
!2676 = !DILocation(line: 111, column: 54, scope: !2500)
!2677 = !DILocation(line: 111, column: 64, scope: !2500)
!2678 = !DILocation(line: 111, column: 71, scope: !2500)
!2679 = !DILocation(line: 111, column: 28, scope: !2500)
!2680 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2507)
!2681 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2507)
!2682 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2507)
!2683 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2507)
!2684 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2507)
!2685 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2507)
!2686 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2507)
!2687 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2507)
!2688 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2507)
!2689 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2507)
!2690 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2507)
!2691 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2507)
!2692 = !DILocation(line: 111, column: 18, scope: !2500)
!2693 = !DILocation(line: 111, column: 20, scope: !2500)
!2694 = !DILocation(line: 111, column: 13, scope: !2500)
!2695 = !DILocation(line: 111, column: 26, scope: !2500)
!2696 = !DILocation(line: 119, column: 9, scope: !2500)
!2697 = !DILocation(line: 78, column: 29, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2501, file: !266, discriminator: 2)
!2699 = !DILocation(line: 78, column: 9, scope: !2698)
!2700 = distinct !{!2700, !2701}
!2701 = !DILocation(line: 78, column: 9, scope: !2503)
!2702 = !DILocation(line: 121, column: 18, scope: !2503)
!2703 = !DILocation(line: 121, column: 32, scope: !2503)
!2704 = !DILocation(line: 121, column: 44, scope: !2503)
!2705 = !DILocation(line: 121, column: 14, scope: !2503)
!2706 = !DILocation(line: 122, column: 17, scope: !2503)
!2707 = !DILocation(line: 122, column: 31, scope: !2503)
!2708 = !DILocation(line: 122, column: 14, scope: !2503)
!2709 = !DILocation(line: 123, column: 17, scope: !2503)
!2710 = !DILocation(line: 123, column: 31, scope: !2503)
!2711 = !DILocation(line: 123, column: 14, scope: !2503)
!2712 = !DILocation(line: 124, column: 17, scope: !2503)
!2713 = !DILocation(line: 124, column: 28, scope: !2503)
!2714 = !DILocation(line: 124, column: 14, scope: !2503)
!2715 = !DILocation(line: 125, column: 17, scope: !2503)
!2716 = !DILocation(line: 125, column: 28, scope: !2503)
!2717 = !DILocation(line: 125, column: 14, scope: !2503)
!2718 = !DILocation(line: 126, column: 17, scope: !2503)
!2719 = !DILocation(line: 126, column: 28, scope: !2503)
!2720 = !DILocation(line: 126, column: 14, scope: !2503)
!2721 = !DILocation(line: 127, column: 5, scope: !2503)
!2722 = !DILocation(line: 77, column: 25, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !2504, file: !266, discriminator: 2)
!2724 = !DILocation(line: 77, column: 5, scope: !2723)
!2725 = distinct !{!2725, !2726}
!2726 = !DILocation(line: 77, column: 5, scope: !2497)
!2727 = !DILocation(line: 128, column: 1, scope: !2497)
!2728 = distinct !DISubprogram(name: "yuv2rgb_422p12_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!2729 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2730)
!2730 = distinct !DILocation(line: 91, column: 31, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2732, file: !266, line: 78, column: 33)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !266, line: 78, column: 9)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !266, line: 78, column: 9)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !266, line: 77, column: 29)
!2735 = distinct !DILexicalBlock(scope: !2736, file: !266, line: 77, column: 5)
!2736 = distinct !DILexicalBlock(scope: !2728, file: !266, line: 77, column: 5)
!2737 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2738)
!2738 = distinct !DILocation(line: 98, column: 28, scope: !2731)
!2739 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2740)
!2740 = distinct !DILocation(line: 101, column: 31, scope: !2731)
!2741 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2742)
!2742 = distinct !DILocation(line: 111, column: 28, scope: !2731)
!2743 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2744)
!2744 = distinct !DILocation(line: 113, column: 31, scope: !2731)
!2745 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !2746)
!2746 = distinct !DILocation(line: 89, column: 28, scope: !2731)
!2747 = !DILocalVariable(name: "rgb", arg: 1, scope: !2728, file: !266, line: 54, type: !43)
!2748 = !DILocation(line: 54, column: 39, scope: !2728)
!2749 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !2728, file: !266, line: 54, type: !47)
!2750 = !DILocation(line: 54, column: 57, scope: !2728)
!2751 = !DILocalVariable(name: "_yuv", arg: 3, scope: !2728, file: !266, line: 55, type: !17)
!2752 = !DILocation(line: 55, column: 34, scope: !2728)
!2753 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !2728, file: !266, line: 55, type: !50)
!2754 = !DILocation(line: 55, column: 59, scope: !2728)
!2755 = !DILocalVariable(name: "w", arg: 5, scope: !2728, file: !266, line: 56, type: !52)
!2756 = !DILocation(line: 56, column: 29, scope: !2728)
!2757 = !DILocalVariable(name: "h", arg: 6, scope: !2728, file: !266, line: 56, type: !52)
!2758 = !DILocation(line: 56, column: 36, scope: !2728)
!2759 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !2728, file: !266, line: 56, type: !53)
!2760 = !DILocation(line: 56, column: 53, scope: !2728)
!2761 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !2728, file: !266, line: 57, type: !59)
!2762 = !DILocation(line: 57, column: 39, scope: !2728)
!2763 = !DILocalVariable(name: "yuv", scope: !2728, file: !266, line: 59, type: !22)
!2764 = !DILocation(line: 59, column: 16, scope: !2728)
!2765 = !DILocation(line: 59, column: 36, scope: !2728)
!2766 = !DILocation(line: 59, column: 22, scope: !2728)
!2767 = !DILocalVariable(name: "yuv0", scope: !2728, file: !266, line: 60, type: !1418)
!2768 = !DILocation(line: 60, column: 21, scope: !2728)
!2769 = !DILocation(line: 60, column: 28, scope: !2728)
!2770 = !DILocalVariable(name: "yuv1", scope: !2728, file: !266, line: 60, type: !1418)
!2771 = !DILocation(line: 60, column: 37, scope: !2728)
!2772 = !DILocation(line: 60, column: 44, scope: !2728)
!2773 = !DILocalVariable(name: "yuv2", scope: !2728, file: !266, line: 60, type: !1418)
!2774 = !DILocation(line: 60, column: 53, scope: !2728)
!2775 = !DILocation(line: 60, column: 60, scope: !2728)
!2776 = !DILocalVariable(name: "rgb0", scope: !2728, file: !266, line: 61, type: !44)
!2777 = !DILocation(line: 61, column: 14, scope: !2728)
!2778 = !DILocation(line: 61, column: 21, scope: !2728)
!2779 = !DILocalVariable(name: "rgb1", scope: !2728, file: !266, line: 61, type: !44)
!2780 = !DILocation(line: 61, column: 30, scope: !2728)
!2781 = !DILocation(line: 61, column: 37, scope: !2728)
!2782 = !DILocalVariable(name: "rgb2", scope: !2728, file: !266, line: 61, type: !44)
!2783 = !DILocation(line: 61, column: 46, scope: !2728)
!2784 = !DILocation(line: 61, column: 53, scope: !2728)
!2785 = !DILocalVariable(name: "y", scope: !2728, file: !266, line: 62, type: !52)
!2786 = !DILocation(line: 62, column: 9, scope: !2728)
!2787 = !DILocalVariable(name: "x", scope: !2728, file: !266, line: 62, type: !52)
!2788 = !DILocation(line: 62, column: 12, scope: !2728)
!2789 = !DILocalVariable(name: "cy", scope: !2728, file: !266, line: 63, type: !52)
!2790 = !DILocation(line: 63, column: 9, scope: !2728)
!2791 = !DILocation(line: 63, column: 14, scope: !2728)
!2792 = !DILocalVariable(name: "crv", scope: !2728, file: !266, line: 64, type: !52)
!2793 = !DILocation(line: 64, column: 9, scope: !2728)
!2794 = !DILocation(line: 64, column: 15, scope: !2728)
!2795 = !DILocalVariable(name: "cgu", scope: !2728, file: !266, line: 65, type: !52)
!2796 = !DILocation(line: 65, column: 9, scope: !2728)
!2797 = !DILocation(line: 65, column: 15, scope: !2728)
!2798 = !DILocalVariable(name: "cgv", scope: !2728, file: !266, line: 66, type: !52)
!2799 = !DILocation(line: 66, column: 9, scope: !2728)
!2800 = !DILocation(line: 66, column: 15, scope: !2728)
!2801 = !DILocalVariable(name: "cbu", scope: !2728, file: !266, line: 67, type: !52)
!2802 = !DILocation(line: 67, column: 9, scope: !2728)
!2803 = !DILocation(line: 67, column: 15, scope: !2728)
!2804 = !DILocalVariable(name: "sh", scope: !2728, file: !266, line: 68, type: !343)
!2805 = !DILocation(line: 68, column: 15, scope: !2728)
!2806 = !DILocalVariable(name: "rnd", scope: !2728, file: !266, line: 68, type: !343)
!2807 = !DILocation(line: 68, column: 28, scope: !2728)
!2808 = !DILocalVariable(name: "uv_offset", scope: !2728, file: !266, line: 69, type: !343)
!2809 = !DILocation(line: 69, column: 15, scope: !2728)
!2810 = !DILocation(line: 75, column: 58, scope: !2728)
!2811 = !DILocation(line: 75, column: 61, scope: !2728)
!2812 = !DILocation(line: 75, column: 72, scope: !2728)
!2813 = !DILocation(line: 75, column: 77, scope: !2728)
!2814 = !DILocation(line: 75, column: 7, scope: !2728)
!2815 = !DILocation(line: 76, column: 58, scope: !2728)
!2816 = !DILocation(line: 76, column: 61, scope: !2728)
!2817 = !DILocation(line: 76, column: 72, scope: !2728)
!2818 = !DILocation(line: 76, column: 77, scope: !2728)
!2819 = !DILocation(line: 76, column: 7, scope: !2728)
!2820 = !DILocation(line: 77, column: 12, scope: !2736)
!2821 = !DILocation(line: 77, column: 10, scope: !2736)
!2822 = !DILocation(line: 77, column: 17, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2735, file: !266, discriminator: 1)
!2824 = !DILocation(line: 77, column: 21, scope: !2823)
!2825 = !DILocation(line: 77, column: 19, scope: !2823)
!2826 = !DILocation(line: 77, column: 5, scope: !2823)
!2827 = !DILocation(line: 78, column: 16, scope: !2733)
!2828 = !DILocation(line: 78, column: 14, scope: !2733)
!2829 = !DILocation(line: 78, column: 21, scope: !2830)
!2830 = !DILexicalBlockFile(scope: !2732, file: !266, discriminator: 1)
!2831 = !DILocation(line: 78, column: 25, scope: !2830)
!2832 = !DILocation(line: 78, column: 23, scope: !2830)
!2833 = !DILocation(line: 78, column: 9, scope: !2830)
!2834 = !DILocalVariable(name: "y00", scope: !2731, file: !266, line: 79, type: !52)
!2835 = !DILocation(line: 79, column: 17, scope: !2731)
!2836 = !DILocation(line: 79, column: 28, scope: !2731)
!2837 = !DILocation(line: 79, column: 30, scope: !2731)
!2838 = !DILocation(line: 79, column: 23, scope: !2731)
!2839 = !DILocation(line: 79, column: 38, scope: !2731)
!2840 = !DILocation(line: 79, column: 36, scope: !2731)
!2841 = !DILocalVariable(name: "y01", scope: !2731, file: !266, line: 81, type: !52)
!2842 = !DILocation(line: 81, column: 17, scope: !2731)
!2843 = !DILocation(line: 81, column: 32, scope: !2731)
!2844 = !DILocation(line: 81, column: 30, scope: !2731)
!2845 = !DILocation(line: 81, column: 34, scope: !2731)
!2846 = !DILocation(line: 81, column: 23, scope: !2731)
!2847 = !DILocation(line: 81, column: 41, scope: !2731)
!2848 = !DILocation(line: 81, column: 39, scope: !2731)
!2849 = !DILocalVariable(name: "u", scope: !2731, file: !266, line: 87, type: !52)
!2850 = !DILocation(line: 87, column: 17, scope: !2731)
!2851 = !DILocation(line: 87, column: 26, scope: !2731)
!2852 = !DILocation(line: 87, column: 21, scope: !2731)
!2853 = !DILocation(line: 87, column: 29, scope: !2731)
!2854 = !DILocalVariable(name: "v", scope: !2731, file: !266, line: 87, type: !52)
!2855 = !DILocation(line: 87, column: 42, scope: !2731)
!2856 = !DILocation(line: 87, column: 51, scope: !2731)
!2857 = !DILocation(line: 87, column: 46, scope: !2731)
!2858 = !DILocation(line: 87, column: 54, scope: !2731)
!2859 = !DILocation(line: 89, column: 45, scope: !2731)
!2860 = !DILocation(line: 89, column: 51, scope: !2731)
!2861 = !DILocation(line: 89, column: 49, scope: !2731)
!2862 = !DILocation(line: 89, column: 56, scope: !2731)
!2863 = !DILocation(line: 89, column: 62, scope: !2731)
!2864 = !DILocation(line: 89, column: 60, scope: !2731)
!2865 = !DILocation(line: 89, column: 54, scope: !2731)
!2866 = !DILocation(line: 89, column: 64, scope: !2731)
!2867 = !DILocation(line: 89, column: 71, scope: !2731)
!2868 = !DILocation(line: 89, column: 28, scope: !2731)
!2869 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2746)
!2870 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2746)
!2871 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2746)
!2872 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2746)
!2873 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2746)
!2874 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2746)
!2875 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2746)
!2876 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2746)
!2877 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2746)
!2878 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2746)
!2879 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2746)
!2880 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2746)
!2881 = !DILocation(line: 89, column: 18, scope: !2731)
!2882 = !DILocation(line: 89, column: 20, scope: !2731)
!2883 = !DILocation(line: 89, column: 13, scope: !2731)
!2884 = !DILocation(line: 89, column: 26, scope: !2731)
!2885 = !DILocation(line: 91, column: 48, scope: !2731)
!2886 = !DILocation(line: 91, column: 54, scope: !2731)
!2887 = !DILocation(line: 91, column: 52, scope: !2731)
!2888 = !DILocation(line: 91, column: 59, scope: !2731)
!2889 = !DILocation(line: 91, column: 65, scope: !2731)
!2890 = !DILocation(line: 91, column: 63, scope: !2731)
!2891 = !DILocation(line: 91, column: 57, scope: !2731)
!2892 = !DILocation(line: 91, column: 67, scope: !2731)
!2893 = !DILocation(line: 91, column: 74, scope: !2731)
!2894 = !DILocation(line: 91, column: 31, scope: !2731)
!2895 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2730)
!2896 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2730)
!2897 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2730)
!2898 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2730)
!2899 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2730)
!2900 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2730)
!2901 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2730)
!2902 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2730)
!2903 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2730)
!2904 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2730)
!2905 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2730)
!2906 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2730)
!2907 = !DILocation(line: 91, column: 22, scope: !2731)
!2908 = !DILocation(line: 91, column: 20, scope: !2731)
!2909 = !DILocation(line: 91, column: 24, scope: !2731)
!2910 = !DILocation(line: 91, column: 13, scope: !2731)
!2911 = !DILocation(line: 91, column: 29, scope: !2731)
!2912 = !DILocation(line: 98, column: 45, scope: !2731)
!2913 = !DILocation(line: 98, column: 51, scope: !2731)
!2914 = !DILocation(line: 98, column: 49, scope: !2731)
!2915 = !DILocation(line: 98, column: 56, scope: !2731)
!2916 = !DILocation(line: 98, column: 62, scope: !2731)
!2917 = !DILocation(line: 98, column: 60, scope: !2731)
!2918 = !DILocation(line: 98, column: 54, scope: !2731)
!2919 = !DILocation(line: 99, column: 59, scope: !2731)
!2920 = !DILocation(line: 99, column: 65, scope: !2731)
!2921 = !DILocation(line: 99, column: 63, scope: !2731)
!2922 = !DILocation(line: 98, column: 64, scope: !2731)
!2923 = !DILocation(line: 99, column: 67, scope: !2731)
!2924 = !DILocation(line: 99, column: 74, scope: !2731)
!2925 = !DILocation(line: 98, column: 28, scope: !2731)
!2926 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2738)
!2927 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2738)
!2928 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2738)
!2929 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2738)
!2930 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2738)
!2931 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2738)
!2932 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2738)
!2933 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2738)
!2934 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2738)
!2935 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2738)
!2936 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2738)
!2937 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2738)
!2938 = !DILocation(line: 98, column: 18, scope: !2731)
!2939 = !DILocation(line: 98, column: 20, scope: !2731)
!2940 = !DILocation(line: 98, column: 13, scope: !2731)
!2941 = !DILocation(line: 98, column: 26, scope: !2731)
!2942 = !DILocation(line: 101, column: 48, scope: !2731)
!2943 = !DILocation(line: 101, column: 54, scope: !2731)
!2944 = !DILocation(line: 101, column: 52, scope: !2731)
!2945 = !DILocation(line: 101, column: 59, scope: !2731)
!2946 = !DILocation(line: 101, column: 65, scope: !2731)
!2947 = !DILocation(line: 101, column: 63, scope: !2731)
!2948 = !DILocation(line: 101, column: 57, scope: !2731)
!2949 = !DILocation(line: 102, column: 59, scope: !2731)
!2950 = !DILocation(line: 102, column: 65, scope: !2731)
!2951 = !DILocation(line: 102, column: 63, scope: !2731)
!2952 = !DILocation(line: 101, column: 67, scope: !2731)
!2953 = !DILocation(line: 102, column: 67, scope: !2731)
!2954 = !DILocation(line: 102, column: 74, scope: !2731)
!2955 = !DILocation(line: 101, column: 31, scope: !2731)
!2956 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2740)
!2957 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2740)
!2958 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2740)
!2959 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2740)
!2960 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2740)
!2961 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2740)
!2962 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2740)
!2963 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2740)
!2964 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2740)
!2965 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2740)
!2966 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2740)
!2967 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2740)
!2968 = !DILocation(line: 101, column: 22, scope: !2731)
!2969 = !DILocation(line: 101, column: 20, scope: !2731)
!2970 = !DILocation(line: 101, column: 24, scope: !2731)
!2971 = !DILocation(line: 101, column: 13, scope: !2731)
!2972 = !DILocation(line: 101, column: 29, scope: !2731)
!2973 = !DILocation(line: 111, column: 45, scope: !2731)
!2974 = !DILocation(line: 111, column: 51, scope: !2731)
!2975 = !DILocation(line: 111, column: 49, scope: !2731)
!2976 = !DILocation(line: 111, column: 56, scope: !2731)
!2977 = !DILocation(line: 111, column: 62, scope: !2731)
!2978 = !DILocation(line: 111, column: 60, scope: !2731)
!2979 = !DILocation(line: 111, column: 54, scope: !2731)
!2980 = !DILocation(line: 111, column: 64, scope: !2731)
!2981 = !DILocation(line: 111, column: 71, scope: !2731)
!2982 = !DILocation(line: 111, column: 28, scope: !2731)
!2983 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2742)
!2984 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2742)
!2985 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2742)
!2986 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2742)
!2987 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2742)
!2988 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2742)
!2989 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2742)
!2990 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2742)
!2991 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2742)
!2992 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2742)
!2993 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2742)
!2994 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2742)
!2995 = !DILocation(line: 111, column: 18, scope: !2731)
!2996 = !DILocation(line: 111, column: 20, scope: !2731)
!2997 = !DILocation(line: 111, column: 13, scope: !2731)
!2998 = !DILocation(line: 111, column: 26, scope: !2731)
!2999 = !DILocation(line: 113, column: 48, scope: !2731)
!3000 = !DILocation(line: 113, column: 54, scope: !2731)
!3001 = !DILocation(line: 113, column: 52, scope: !2731)
!3002 = !DILocation(line: 113, column: 59, scope: !2731)
!3003 = !DILocation(line: 113, column: 65, scope: !2731)
!3004 = !DILocation(line: 113, column: 63, scope: !2731)
!3005 = !DILocation(line: 113, column: 57, scope: !2731)
!3006 = !DILocation(line: 113, column: 67, scope: !2731)
!3007 = !DILocation(line: 113, column: 74, scope: !2731)
!3008 = !DILocation(line: 113, column: 31, scope: !2731)
!3009 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !2744)
!3010 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !2744)
!3011 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !2744)
!3012 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !2744)
!3013 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !2744)
!3014 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !2744)
!3015 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !2744)
!3016 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !2744)
!3017 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !2744)
!3018 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !2744)
!3019 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !2744)
!3020 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !2744)
!3021 = !DILocation(line: 113, column: 22, scope: !2731)
!3022 = !DILocation(line: 113, column: 20, scope: !2731)
!3023 = !DILocation(line: 113, column: 24, scope: !2731)
!3024 = !DILocation(line: 113, column: 13, scope: !2731)
!3025 = !DILocation(line: 113, column: 29, scope: !2731)
!3026 = !DILocation(line: 119, column: 9, scope: !2731)
!3027 = !DILocation(line: 78, column: 29, scope: !3028)
!3028 = !DILexicalBlockFile(scope: !2732, file: !266, discriminator: 2)
!3029 = !DILocation(line: 78, column: 9, scope: !3028)
!3030 = distinct !{!3030, !3031}
!3031 = !DILocation(line: 78, column: 9, scope: !2734)
!3032 = !DILocation(line: 121, column: 18, scope: !2734)
!3033 = !DILocation(line: 121, column: 32, scope: !2734)
!3034 = !DILocation(line: 121, column: 44, scope: !2734)
!3035 = !DILocation(line: 121, column: 14, scope: !2734)
!3036 = !DILocation(line: 122, column: 17, scope: !2734)
!3037 = !DILocation(line: 122, column: 31, scope: !2734)
!3038 = !DILocation(line: 122, column: 14, scope: !2734)
!3039 = !DILocation(line: 123, column: 17, scope: !2734)
!3040 = !DILocation(line: 123, column: 31, scope: !2734)
!3041 = !DILocation(line: 123, column: 14, scope: !2734)
!3042 = !DILocation(line: 124, column: 17, scope: !2734)
!3043 = !DILocation(line: 124, column: 28, scope: !2734)
!3044 = !DILocation(line: 124, column: 14, scope: !2734)
!3045 = !DILocation(line: 125, column: 17, scope: !2734)
!3046 = !DILocation(line: 125, column: 28, scope: !2734)
!3047 = !DILocation(line: 125, column: 14, scope: !2734)
!3048 = !DILocation(line: 126, column: 17, scope: !2734)
!3049 = !DILocation(line: 126, column: 28, scope: !2734)
!3050 = !DILocation(line: 126, column: 14, scope: !2734)
!3051 = !DILocation(line: 127, column: 5, scope: !2734)
!3052 = !DILocation(line: 77, column: 25, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !2735, file: !266, discriminator: 2)
!3054 = !DILocation(line: 77, column: 5, scope: !3053)
!3055 = distinct !{!3055, !3056}
!3056 = !DILocation(line: 77, column: 5, scope: !2728)
!3057 = !DILocation(line: 128, column: 1, scope: !2728)
!3058 = distinct !DISubprogram(name: "yuv2rgb_420p12_c", scope: !266, file: !266, line: 54, type: !41, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!3059 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3060)
!3060 = distinct !DILocation(line: 91, column: 31, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !266, line: 78, column: 33)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !266, line: 78, column: 9)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !266, line: 78, column: 9)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !266, line: 77, column: 29)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !266, line: 77, column: 5)
!3066 = distinct !DILexicalBlock(scope: !3058, file: !266, line: 77, column: 5)
!3067 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3068)
!3068 = distinct !DILocation(line: 93, column: 40, scope: !3061)
!3069 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3070)
!3070 = distinct !DILocation(line: 94, column: 44, scope: !3061)
!3071 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3072)
!3072 = distinct !DILocation(line: 98, column: 28, scope: !3061)
!3073 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3074)
!3074 = distinct !DILocation(line: 101, column: 31, scope: !3061)
!3075 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3076)
!3076 = distinct !DILocation(line: 104, column: 40, scope: !3061)
!3077 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3078)
!3078 = distinct !DILocation(line: 106, column: 44, scope: !3061)
!3079 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3080)
!3080 = distinct !DILocation(line: 111, column: 28, scope: !3061)
!3081 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3082)
!3082 = distinct !DILocation(line: 113, column: 31, scope: !3061)
!3083 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3084)
!3084 = distinct !DILocation(line: 115, column: 40, scope: !3061)
!3085 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3086)
!3086 = distinct !DILocation(line: 116, column: 44, scope: !3061)
!3087 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !3088)
!3088 = distinct !DILocation(line: 89, column: 28, scope: !3061)
!3089 = !DILocalVariable(name: "rgb", arg: 1, scope: !3058, file: !266, line: 54, type: !43)
!3090 = !DILocation(line: 54, column: 39, scope: !3058)
!3091 = !DILocalVariable(name: "rgb_stride", arg: 2, scope: !3058, file: !266, line: 54, type: !47)
!3092 = !DILocation(line: 54, column: 57, scope: !3058)
!3093 = !DILocalVariable(name: "_yuv", arg: 3, scope: !3058, file: !266, line: 55, type: !17)
!3094 = !DILocation(line: 55, column: 34, scope: !3058)
!3095 = !DILocalVariable(name: "yuv_stride", arg: 4, scope: !3058, file: !266, line: 55, type: !50)
!3096 = !DILocation(line: 55, column: 59, scope: !3058)
!3097 = !DILocalVariable(name: "w", arg: 5, scope: !3058, file: !266, line: 56, type: !52)
!3098 = !DILocation(line: 56, column: 29, scope: !3058)
!3099 = !DILocalVariable(name: "h", arg: 6, scope: !3058, file: !266, line: 56, type: !52)
!3100 = !DILocation(line: 56, column: 36, scope: !3058)
!3101 = !DILocalVariable(name: "yuv2rgb_coeffs", arg: 7, scope: !3058, file: !266, line: 56, type: !53)
!3102 = !DILocation(line: 56, column: 53, scope: !3058)
!3103 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !3058, file: !266, line: 57, type: !59)
!3104 = !DILocation(line: 57, column: 39, scope: !3058)
!3105 = !DILocalVariable(name: "yuv", scope: !3058, file: !266, line: 59, type: !22)
!3106 = !DILocation(line: 59, column: 16, scope: !3058)
!3107 = !DILocation(line: 59, column: 36, scope: !3058)
!3108 = !DILocation(line: 59, column: 22, scope: !3058)
!3109 = !DILocalVariable(name: "yuv0", scope: !3058, file: !266, line: 60, type: !1418)
!3110 = !DILocation(line: 60, column: 21, scope: !3058)
!3111 = !DILocation(line: 60, column: 28, scope: !3058)
!3112 = !DILocalVariable(name: "yuv1", scope: !3058, file: !266, line: 60, type: !1418)
!3113 = !DILocation(line: 60, column: 37, scope: !3058)
!3114 = !DILocation(line: 60, column: 44, scope: !3058)
!3115 = !DILocalVariable(name: "yuv2", scope: !3058, file: !266, line: 60, type: !1418)
!3116 = !DILocation(line: 60, column: 53, scope: !3058)
!3117 = !DILocation(line: 60, column: 60, scope: !3058)
!3118 = !DILocalVariable(name: "rgb0", scope: !3058, file: !266, line: 61, type: !44)
!3119 = !DILocation(line: 61, column: 14, scope: !3058)
!3120 = !DILocation(line: 61, column: 21, scope: !3058)
!3121 = !DILocalVariable(name: "rgb1", scope: !3058, file: !266, line: 61, type: !44)
!3122 = !DILocation(line: 61, column: 30, scope: !3058)
!3123 = !DILocation(line: 61, column: 37, scope: !3058)
!3124 = !DILocalVariable(name: "rgb2", scope: !3058, file: !266, line: 61, type: !44)
!3125 = !DILocation(line: 61, column: 46, scope: !3058)
!3126 = !DILocation(line: 61, column: 53, scope: !3058)
!3127 = !DILocalVariable(name: "y", scope: !3058, file: !266, line: 62, type: !52)
!3128 = !DILocation(line: 62, column: 9, scope: !3058)
!3129 = !DILocalVariable(name: "x", scope: !3058, file: !266, line: 62, type: !52)
!3130 = !DILocation(line: 62, column: 12, scope: !3058)
!3131 = !DILocalVariable(name: "cy", scope: !3058, file: !266, line: 63, type: !52)
!3132 = !DILocation(line: 63, column: 9, scope: !3058)
!3133 = !DILocation(line: 63, column: 14, scope: !3058)
!3134 = !DILocalVariable(name: "crv", scope: !3058, file: !266, line: 64, type: !52)
!3135 = !DILocation(line: 64, column: 9, scope: !3058)
!3136 = !DILocation(line: 64, column: 15, scope: !3058)
!3137 = !DILocalVariable(name: "cgu", scope: !3058, file: !266, line: 65, type: !52)
!3138 = !DILocation(line: 65, column: 9, scope: !3058)
!3139 = !DILocation(line: 65, column: 15, scope: !3058)
!3140 = !DILocalVariable(name: "cgv", scope: !3058, file: !266, line: 66, type: !52)
!3141 = !DILocation(line: 66, column: 9, scope: !3058)
!3142 = !DILocation(line: 66, column: 15, scope: !3058)
!3143 = !DILocalVariable(name: "cbu", scope: !3058, file: !266, line: 67, type: !52)
!3144 = !DILocation(line: 67, column: 9, scope: !3058)
!3145 = !DILocation(line: 67, column: 15, scope: !3058)
!3146 = !DILocalVariable(name: "sh", scope: !3058, file: !266, line: 68, type: !343)
!3147 = !DILocation(line: 68, column: 15, scope: !3058)
!3148 = !DILocalVariable(name: "rnd", scope: !3058, file: !266, line: 68, type: !343)
!3149 = !DILocation(line: 68, column: 28, scope: !3058)
!3150 = !DILocalVariable(name: "uv_offset", scope: !3058, file: !266, line: 69, type: !343)
!3151 = !DILocation(line: 69, column: 15, scope: !3058)
!3152 = !DILocation(line: 75, column: 58, scope: !3058)
!3153 = !DILocation(line: 75, column: 61, scope: !3058)
!3154 = !DILocation(line: 75, column: 72, scope: !3058)
!3155 = !DILocation(line: 75, column: 77, scope: !3058)
!3156 = !DILocation(line: 75, column: 7, scope: !3058)
!3157 = !DILocation(line: 76, column: 58, scope: !3058)
!3158 = !DILocation(line: 76, column: 61, scope: !3058)
!3159 = !DILocation(line: 76, column: 72, scope: !3058)
!3160 = !DILocation(line: 76, column: 77, scope: !3058)
!3161 = !DILocation(line: 76, column: 7, scope: !3058)
!3162 = !DILocation(line: 77, column: 12, scope: !3066)
!3163 = !DILocation(line: 77, column: 10, scope: !3066)
!3164 = !DILocation(line: 77, column: 17, scope: !3165)
!3165 = !DILexicalBlockFile(scope: !3065, file: !266, discriminator: 1)
!3166 = !DILocation(line: 77, column: 21, scope: !3165)
!3167 = !DILocation(line: 77, column: 19, scope: !3165)
!3168 = !DILocation(line: 77, column: 5, scope: !3165)
!3169 = !DILocation(line: 78, column: 16, scope: !3063)
!3170 = !DILocation(line: 78, column: 14, scope: !3063)
!3171 = !DILocation(line: 78, column: 21, scope: !3172)
!3172 = !DILexicalBlockFile(scope: !3062, file: !266, discriminator: 1)
!3173 = !DILocation(line: 78, column: 25, scope: !3172)
!3174 = !DILocation(line: 78, column: 23, scope: !3172)
!3175 = !DILocation(line: 78, column: 9, scope: !3172)
!3176 = !DILocalVariable(name: "y00", scope: !3061, file: !266, line: 79, type: !52)
!3177 = !DILocation(line: 79, column: 17, scope: !3061)
!3178 = !DILocation(line: 79, column: 28, scope: !3061)
!3179 = !DILocation(line: 79, column: 30, scope: !3061)
!3180 = !DILocation(line: 79, column: 23, scope: !3061)
!3181 = !DILocation(line: 79, column: 38, scope: !3061)
!3182 = !DILocation(line: 79, column: 36, scope: !3061)
!3183 = !DILocalVariable(name: "y01", scope: !3061, file: !266, line: 81, type: !52)
!3184 = !DILocation(line: 81, column: 17, scope: !3061)
!3185 = !DILocation(line: 81, column: 32, scope: !3061)
!3186 = !DILocation(line: 81, column: 30, scope: !3061)
!3187 = !DILocation(line: 81, column: 34, scope: !3061)
!3188 = !DILocation(line: 81, column: 23, scope: !3061)
!3189 = !DILocation(line: 81, column: 41, scope: !3061)
!3190 = !DILocation(line: 81, column: 39, scope: !3061)
!3191 = !DILocalVariable(name: "y10", scope: !3061, file: !266, line: 83, type: !52)
!3192 = !DILocation(line: 83, column: 17, scope: !3061)
!3193 = !DILocation(line: 83, column: 28, scope: !3061)
!3194 = !DILocation(line: 83, column: 42, scope: !3061)
!3195 = !DILocation(line: 83, column: 67, scope: !3061)
!3196 = !DILocation(line: 83, column: 65, scope: !3061)
!3197 = !DILocation(line: 83, column: 63, scope: !3061)
!3198 = !DILocation(line: 83, column: 61, scope: !3061)
!3199 = !DILocation(line: 83, column: 23, scope: !3061)
!3200 = !DILocation(line: 83, column: 72, scope: !3061)
!3201 = !DILocation(line: 83, column: 70, scope: !3061)
!3202 = !DILocalVariable(name: "y11", scope: !3061, file: !266, line: 84, type: !52)
!3203 = !DILocation(line: 84, column: 17, scope: !3061)
!3204 = !DILocation(line: 84, column: 28, scope: !3061)
!3205 = !DILocation(line: 84, column: 42, scope: !3061)
!3206 = !DILocation(line: 84, column: 67, scope: !3061)
!3207 = !DILocation(line: 84, column: 65, scope: !3061)
!3208 = !DILocation(line: 84, column: 63, scope: !3061)
!3209 = !DILocation(line: 84, column: 61, scope: !3061)
!3210 = !DILocation(line: 84, column: 69, scope: !3061)
!3211 = !DILocation(line: 84, column: 23, scope: !3061)
!3212 = !DILocation(line: 84, column: 76, scope: !3061)
!3213 = !DILocation(line: 84, column: 74, scope: !3061)
!3214 = !DILocalVariable(name: "u", scope: !3061, file: !266, line: 87, type: !52)
!3215 = !DILocation(line: 87, column: 17, scope: !3061)
!3216 = !DILocation(line: 87, column: 26, scope: !3061)
!3217 = !DILocation(line: 87, column: 21, scope: !3061)
!3218 = !DILocation(line: 87, column: 29, scope: !3061)
!3219 = !DILocalVariable(name: "v", scope: !3061, file: !266, line: 87, type: !52)
!3220 = !DILocation(line: 87, column: 42, scope: !3061)
!3221 = !DILocation(line: 87, column: 51, scope: !3061)
!3222 = !DILocation(line: 87, column: 46, scope: !3061)
!3223 = !DILocation(line: 87, column: 54, scope: !3061)
!3224 = !DILocation(line: 89, column: 45, scope: !3061)
!3225 = !DILocation(line: 89, column: 51, scope: !3061)
!3226 = !DILocation(line: 89, column: 49, scope: !3061)
!3227 = !DILocation(line: 89, column: 56, scope: !3061)
!3228 = !DILocation(line: 89, column: 62, scope: !3061)
!3229 = !DILocation(line: 89, column: 60, scope: !3061)
!3230 = !DILocation(line: 89, column: 54, scope: !3061)
!3231 = !DILocation(line: 89, column: 64, scope: !3061)
!3232 = !DILocation(line: 89, column: 71, scope: !3061)
!3233 = !DILocation(line: 89, column: 28, scope: !3061)
!3234 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3088)
!3235 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3088)
!3236 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3088)
!3237 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3088)
!3238 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3088)
!3239 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3088)
!3240 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3088)
!3241 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3088)
!3242 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3088)
!3243 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3088)
!3244 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3088)
!3245 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3088)
!3246 = !DILocation(line: 89, column: 18, scope: !3061)
!3247 = !DILocation(line: 89, column: 20, scope: !3061)
!3248 = !DILocation(line: 89, column: 13, scope: !3061)
!3249 = !DILocation(line: 89, column: 26, scope: !3061)
!3250 = !DILocation(line: 91, column: 48, scope: !3061)
!3251 = !DILocation(line: 91, column: 54, scope: !3061)
!3252 = !DILocation(line: 91, column: 52, scope: !3061)
!3253 = !DILocation(line: 91, column: 59, scope: !3061)
!3254 = !DILocation(line: 91, column: 65, scope: !3061)
!3255 = !DILocation(line: 91, column: 63, scope: !3061)
!3256 = !DILocation(line: 91, column: 57, scope: !3061)
!3257 = !DILocation(line: 91, column: 67, scope: !3061)
!3258 = !DILocation(line: 91, column: 74, scope: !3061)
!3259 = !DILocation(line: 91, column: 31, scope: !3061)
!3260 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3060)
!3261 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3060)
!3262 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3060)
!3263 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3060)
!3264 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3060)
!3265 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3060)
!3266 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3060)
!3267 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3060)
!3268 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3060)
!3269 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3060)
!3270 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3060)
!3271 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3060)
!3272 = !DILocation(line: 91, column: 22, scope: !3061)
!3273 = !DILocation(line: 91, column: 20, scope: !3061)
!3274 = !DILocation(line: 91, column: 24, scope: !3061)
!3275 = !DILocation(line: 91, column: 13, scope: !3061)
!3276 = !DILocation(line: 91, column: 29, scope: !3061)
!3277 = !DILocation(line: 93, column: 57, scope: !3061)
!3278 = !DILocation(line: 93, column: 63, scope: !3061)
!3279 = !DILocation(line: 93, column: 61, scope: !3061)
!3280 = !DILocation(line: 93, column: 68, scope: !3061)
!3281 = !DILocation(line: 93, column: 74, scope: !3061)
!3282 = !DILocation(line: 93, column: 72, scope: !3061)
!3283 = !DILocation(line: 93, column: 66, scope: !3061)
!3284 = !DILocation(line: 93, column: 76, scope: !3061)
!3285 = !DILocation(line: 93, column: 83, scope: !3061)
!3286 = !DILocation(line: 93, column: 40, scope: !3061)
!3287 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3068)
!3288 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3068)
!3289 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3068)
!3290 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3068)
!3291 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3068)
!3292 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3068)
!3293 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3068)
!3294 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3068)
!3295 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3068)
!3296 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3068)
!3297 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3068)
!3298 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3068)
!3299 = !DILocation(line: 93, column: 22, scope: !3061)
!3300 = !DILocation(line: 93, column: 20, scope: !3061)
!3301 = !DILocation(line: 93, column: 18, scope: !3061)
!3302 = !DILocation(line: 93, column: 26, scope: !3061)
!3303 = !DILocation(line: 93, column: 24, scope: !3061)
!3304 = !DILocation(line: 93, column: 13, scope: !3061)
!3305 = !DILocation(line: 93, column: 38, scope: !3061)
!3306 = !DILocation(line: 94, column: 61, scope: !3061)
!3307 = !DILocation(line: 94, column: 67, scope: !3061)
!3308 = !DILocation(line: 94, column: 65, scope: !3061)
!3309 = !DILocation(line: 94, column: 72, scope: !3061)
!3310 = !DILocation(line: 94, column: 78, scope: !3061)
!3311 = !DILocation(line: 94, column: 76, scope: !3061)
!3312 = !DILocation(line: 94, column: 70, scope: !3061)
!3313 = !DILocation(line: 94, column: 80, scope: !3061)
!3314 = !DILocation(line: 94, column: 87, scope: !3061)
!3315 = !DILocation(line: 94, column: 44, scope: !3061)
!3316 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3070)
!3317 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3070)
!3318 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3070)
!3319 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3070)
!3320 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3070)
!3321 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3070)
!3322 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3070)
!3323 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3070)
!3324 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3070)
!3325 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3070)
!3326 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3070)
!3327 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3070)
!3328 = !DILocation(line: 94, column: 22, scope: !3061)
!3329 = !DILocation(line: 94, column: 20, scope: !3061)
!3330 = !DILocation(line: 94, column: 18, scope: !3061)
!3331 = !DILocation(line: 94, column: 26, scope: !3061)
!3332 = !DILocation(line: 94, column: 24, scope: !3061)
!3333 = !DILocation(line: 94, column: 37, scope: !3061)
!3334 = !DILocation(line: 94, column: 13, scope: !3061)
!3335 = !DILocation(line: 94, column: 42, scope: !3061)
!3336 = !DILocation(line: 98, column: 45, scope: !3061)
!3337 = !DILocation(line: 98, column: 51, scope: !3061)
!3338 = !DILocation(line: 98, column: 49, scope: !3061)
!3339 = !DILocation(line: 98, column: 56, scope: !3061)
!3340 = !DILocation(line: 98, column: 62, scope: !3061)
!3341 = !DILocation(line: 98, column: 60, scope: !3061)
!3342 = !DILocation(line: 98, column: 54, scope: !3061)
!3343 = !DILocation(line: 99, column: 59, scope: !3061)
!3344 = !DILocation(line: 99, column: 65, scope: !3061)
!3345 = !DILocation(line: 99, column: 63, scope: !3061)
!3346 = !DILocation(line: 98, column: 64, scope: !3061)
!3347 = !DILocation(line: 99, column: 67, scope: !3061)
!3348 = !DILocation(line: 99, column: 74, scope: !3061)
!3349 = !DILocation(line: 98, column: 28, scope: !3061)
!3350 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3072)
!3351 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3072)
!3352 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3072)
!3353 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3072)
!3354 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3072)
!3355 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3072)
!3356 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3072)
!3357 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3072)
!3358 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3072)
!3359 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3072)
!3360 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3072)
!3361 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3072)
!3362 = !DILocation(line: 98, column: 18, scope: !3061)
!3363 = !DILocation(line: 98, column: 20, scope: !3061)
!3364 = !DILocation(line: 98, column: 13, scope: !3061)
!3365 = !DILocation(line: 98, column: 26, scope: !3061)
!3366 = !DILocation(line: 101, column: 48, scope: !3061)
!3367 = !DILocation(line: 101, column: 54, scope: !3061)
!3368 = !DILocation(line: 101, column: 52, scope: !3061)
!3369 = !DILocation(line: 101, column: 59, scope: !3061)
!3370 = !DILocation(line: 101, column: 65, scope: !3061)
!3371 = !DILocation(line: 101, column: 63, scope: !3061)
!3372 = !DILocation(line: 101, column: 57, scope: !3061)
!3373 = !DILocation(line: 102, column: 59, scope: !3061)
!3374 = !DILocation(line: 102, column: 65, scope: !3061)
!3375 = !DILocation(line: 102, column: 63, scope: !3061)
!3376 = !DILocation(line: 101, column: 67, scope: !3061)
!3377 = !DILocation(line: 102, column: 67, scope: !3061)
!3378 = !DILocation(line: 102, column: 74, scope: !3061)
!3379 = !DILocation(line: 101, column: 31, scope: !3061)
!3380 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3074)
!3381 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3074)
!3382 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3074)
!3383 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3074)
!3384 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3074)
!3385 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3074)
!3386 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3074)
!3387 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3074)
!3388 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3074)
!3389 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3074)
!3390 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3074)
!3391 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3074)
!3392 = !DILocation(line: 101, column: 22, scope: !3061)
!3393 = !DILocation(line: 101, column: 20, scope: !3061)
!3394 = !DILocation(line: 101, column: 24, scope: !3061)
!3395 = !DILocation(line: 101, column: 13, scope: !3061)
!3396 = !DILocation(line: 101, column: 29, scope: !3061)
!3397 = !DILocation(line: 104, column: 57, scope: !3061)
!3398 = !DILocation(line: 104, column: 63, scope: !3061)
!3399 = !DILocation(line: 104, column: 61, scope: !3061)
!3400 = !DILocation(line: 104, column: 68, scope: !3061)
!3401 = !DILocation(line: 104, column: 74, scope: !3061)
!3402 = !DILocation(line: 104, column: 72, scope: !3061)
!3403 = !DILocation(line: 104, column: 66, scope: !3061)
!3404 = !DILocation(line: 105, column: 59, scope: !3061)
!3405 = !DILocation(line: 105, column: 65, scope: !3061)
!3406 = !DILocation(line: 105, column: 63, scope: !3061)
!3407 = !DILocation(line: 104, column: 76, scope: !3061)
!3408 = !DILocation(line: 105, column: 67, scope: !3061)
!3409 = !DILocation(line: 105, column: 74, scope: !3061)
!3410 = !DILocation(line: 104, column: 40, scope: !3061)
!3411 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3076)
!3412 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3076)
!3413 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3076)
!3414 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3076)
!3415 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3076)
!3416 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3076)
!3417 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3076)
!3418 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3076)
!3419 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3076)
!3420 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3076)
!3421 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3076)
!3422 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3076)
!3423 = !DILocation(line: 104, column: 22, scope: !3061)
!3424 = !DILocation(line: 104, column: 20, scope: !3061)
!3425 = !DILocation(line: 104, column: 18, scope: !3061)
!3426 = !DILocation(line: 104, column: 26, scope: !3061)
!3427 = !DILocation(line: 104, column: 24, scope: !3061)
!3428 = !DILocation(line: 104, column: 13, scope: !3061)
!3429 = !DILocation(line: 104, column: 38, scope: !3061)
!3430 = !DILocation(line: 106, column: 61, scope: !3061)
!3431 = !DILocation(line: 106, column: 67, scope: !3061)
!3432 = !DILocation(line: 106, column: 65, scope: !3061)
!3433 = !DILocation(line: 106, column: 72, scope: !3061)
!3434 = !DILocation(line: 106, column: 78, scope: !3061)
!3435 = !DILocation(line: 106, column: 76, scope: !3061)
!3436 = !DILocation(line: 106, column: 70, scope: !3061)
!3437 = !DILocation(line: 107, column: 59, scope: !3061)
!3438 = !DILocation(line: 107, column: 65, scope: !3061)
!3439 = !DILocation(line: 107, column: 63, scope: !3061)
!3440 = !DILocation(line: 106, column: 80, scope: !3061)
!3441 = !DILocation(line: 107, column: 67, scope: !3061)
!3442 = !DILocation(line: 107, column: 74, scope: !3061)
!3443 = !DILocation(line: 106, column: 44, scope: !3061)
!3444 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3078)
!3445 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3078)
!3446 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3078)
!3447 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3078)
!3448 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3078)
!3449 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3078)
!3450 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3078)
!3451 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3078)
!3452 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3078)
!3453 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3078)
!3454 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3078)
!3455 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3078)
!3456 = !DILocation(line: 106, column: 22, scope: !3061)
!3457 = !DILocation(line: 106, column: 20, scope: !3061)
!3458 = !DILocation(line: 106, column: 18, scope: !3061)
!3459 = !DILocation(line: 106, column: 26, scope: !3061)
!3460 = !DILocation(line: 106, column: 24, scope: !3061)
!3461 = !DILocation(line: 106, column: 37, scope: !3061)
!3462 = !DILocation(line: 106, column: 13, scope: !3061)
!3463 = !DILocation(line: 106, column: 42, scope: !3061)
!3464 = !DILocation(line: 111, column: 45, scope: !3061)
!3465 = !DILocation(line: 111, column: 51, scope: !3061)
!3466 = !DILocation(line: 111, column: 49, scope: !3061)
!3467 = !DILocation(line: 111, column: 56, scope: !3061)
!3468 = !DILocation(line: 111, column: 62, scope: !3061)
!3469 = !DILocation(line: 111, column: 60, scope: !3061)
!3470 = !DILocation(line: 111, column: 54, scope: !3061)
!3471 = !DILocation(line: 111, column: 64, scope: !3061)
!3472 = !DILocation(line: 111, column: 71, scope: !3061)
!3473 = !DILocation(line: 111, column: 28, scope: !3061)
!3474 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3080)
!3475 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3080)
!3476 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3080)
!3477 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3080)
!3478 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3080)
!3479 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3080)
!3480 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3080)
!3481 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3080)
!3482 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3080)
!3483 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3080)
!3484 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3080)
!3485 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3080)
!3486 = !DILocation(line: 111, column: 18, scope: !3061)
!3487 = !DILocation(line: 111, column: 20, scope: !3061)
!3488 = !DILocation(line: 111, column: 13, scope: !3061)
!3489 = !DILocation(line: 111, column: 26, scope: !3061)
!3490 = !DILocation(line: 113, column: 48, scope: !3061)
!3491 = !DILocation(line: 113, column: 54, scope: !3061)
!3492 = !DILocation(line: 113, column: 52, scope: !3061)
!3493 = !DILocation(line: 113, column: 59, scope: !3061)
!3494 = !DILocation(line: 113, column: 65, scope: !3061)
!3495 = !DILocation(line: 113, column: 63, scope: !3061)
!3496 = !DILocation(line: 113, column: 57, scope: !3061)
!3497 = !DILocation(line: 113, column: 67, scope: !3061)
!3498 = !DILocation(line: 113, column: 74, scope: !3061)
!3499 = !DILocation(line: 113, column: 31, scope: !3061)
!3500 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3082)
!3501 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3082)
!3502 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3082)
!3503 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3082)
!3504 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3082)
!3505 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3082)
!3506 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3082)
!3507 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3082)
!3508 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3082)
!3509 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3082)
!3510 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3082)
!3511 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3082)
!3512 = !DILocation(line: 113, column: 22, scope: !3061)
!3513 = !DILocation(line: 113, column: 20, scope: !3061)
!3514 = !DILocation(line: 113, column: 24, scope: !3061)
!3515 = !DILocation(line: 113, column: 13, scope: !3061)
!3516 = !DILocation(line: 113, column: 29, scope: !3061)
!3517 = !DILocation(line: 115, column: 57, scope: !3061)
!3518 = !DILocation(line: 115, column: 63, scope: !3061)
!3519 = !DILocation(line: 115, column: 61, scope: !3061)
!3520 = !DILocation(line: 115, column: 68, scope: !3061)
!3521 = !DILocation(line: 115, column: 74, scope: !3061)
!3522 = !DILocation(line: 115, column: 72, scope: !3061)
!3523 = !DILocation(line: 115, column: 66, scope: !3061)
!3524 = !DILocation(line: 115, column: 76, scope: !3061)
!3525 = !DILocation(line: 115, column: 83, scope: !3061)
!3526 = !DILocation(line: 115, column: 40, scope: !3061)
!3527 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3084)
!3528 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3084)
!3529 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3084)
!3530 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3084)
!3531 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3084)
!3532 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3084)
!3533 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3084)
!3534 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3084)
!3535 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3084)
!3536 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3084)
!3537 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3084)
!3538 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3084)
!3539 = !DILocation(line: 115, column: 22, scope: !3061)
!3540 = !DILocation(line: 115, column: 20, scope: !3061)
!3541 = !DILocation(line: 115, column: 18, scope: !3061)
!3542 = !DILocation(line: 115, column: 26, scope: !3061)
!3543 = !DILocation(line: 115, column: 24, scope: !3061)
!3544 = !DILocation(line: 115, column: 13, scope: !3061)
!3545 = !DILocation(line: 115, column: 38, scope: !3061)
!3546 = !DILocation(line: 116, column: 61, scope: !3061)
!3547 = !DILocation(line: 116, column: 67, scope: !3061)
!3548 = !DILocation(line: 116, column: 65, scope: !3061)
!3549 = !DILocation(line: 116, column: 72, scope: !3061)
!3550 = !DILocation(line: 116, column: 78, scope: !3061)
!3551 = !DILocation(line: 116, column: 76, scope: !3061)
!3552 = !DILocation(line: 116, column: 70, scope: !3061)
!3553 = !DILocation(line: 116, column: 80, scope: !3061)
!3554 = !DILocation(line: 116, column: 87, scope: !3061)
!3555 = !DILocation(line: 116, column: 44, scope: !3061)
!3556 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !3086)
!3557 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !3086)
!3558 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !3086)
!3559 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !3086)
!3560 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !3086)
!3561 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !3086)
!3562 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !3086)
!3563 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !3086)
!3564 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !3086)
!3565 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !3086)
!3566 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !3086)
!3567 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !3086)
!3568 = !DILocation(line: 116, column: 22, scope: !3061)
!3569 = !DILocation(line: 116, column: 20, scope: !3061)
!3570 = !DILocation(line: 116, column: 18, scope: !3061)
!3571 = !DILocation(line: 116, column: 26, scope: !3061)
!3572 = !DILocation(line: 116, column: 24, scope: !3061)
!3573 = !DILocation(line: 116, column: 37, scope: !3061)
!3574 = !DILocation(line: 116, column: 13, scope: !3061)
!3575 = !DILocation(line: 116, column: 42, scope: !3061)
!3576 = !DILocation(line: 119, column: 9, scope: !3061)
!3577 = !DILocation(line: 78, column: 29, scope: !3578)
!3578 = !DILexicalBlockFile(scope: !3062, file: !266, discriminator: 2)
!3579 = !DILocation(line: 78, column: 9, scope: !3578)
!3580 = distinct !{!3580, !3581}
!3581 = !DILocation(line: 78, column: 9, scope: !3064)
!3582 = !DILocation(line: 121, column: 18, scope: !3064)
!3583 = !DILocation(line: 121, column: 32, scope: !3064)
!3584 = !DILocation(line: 121, column: 44, scope: !3064)
!3585 = !DILocation(line: 121, column: 14, scope: !3064)
!3586 = !DILocation(line: 122, column: 17, scope: !3064)
!3587 = !DILocation(line: 122, column: 31, scope: !3064)
!3588 = !DILocation(line: 122, column: 14, scope: !3064)
!3589 = !DILocation(line: 123, column: 17, scope: !3064)
!3590 = !DILocation(line: 123, column: 31, scope: !3064)
!3591 = !DILocation(line: 123, column: 14, scope: !3064)
!3592 = !DILocation(line: 124, column: 17, scope: !3064)
!3593 = !DILocation(line: 124, column: 28, scope: !3064)
!3594 = !DILocation(line: 124, column: 14, scope: !3064)
!3595 = !DILocation(line: 125, column: 17, scope: !3064)
!3596 = !DILocation(line: 125, column: 28, scope: !3064)
!3597 = !DILocation(line: 125, column: 14, scope: !3064)
!3598 = !DILocation(line: 126, column: 17, scope: !3064)
!3599 = !DILocation(line: 126, column: 28, scope: !3064)
!3600 = !DILocation(line: 126, column: 14, scope: !3064)
!3601 = !DILocation(line: 127, column: 5, scope: !3064)
!3602 = !DILocation(line: 77, column: 25, scope: !3603)
!3603 = !DILexicalBlockFile(scope: !3065, file: !266, discriminator: 2)
!3604 = !DILocation(line: 77, column: 5, scope: !3603)
!3605 = distinct !{!3605, !3606}
!3606 = !DILocation(line: 77, column: 5, scope: !3058)
!3607 = !DILocation(line: 128, column: 1, scope: !3058)
!3608 = distinct !DISubprogram(name: "rgb2yuv_444p8_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!3609 = !DILocalVariable(name: "a", arg: 1, scope: !3610, file: !269, line: 159, type: !52)
!3610 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !269, file: !269, line: 159, type: !3611, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!19, !52}
!3613 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3614)
!3614 = distinct !DILocation(line: 183, column: 23, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !266, line: 156, column: 33)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !266, line: 156, column: 9)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !266, line: 156, column: 9)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !266, line: 155, column: 29)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !266, line: 155, column: 5)
!3620 = distinct !DILexicalBlock(scope: !3608, file: !266, line: 155, column: 5)
!3621 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3622)
!3622 = distinct !DILocation(line: 187, column: 23, scope: !3615)
!3623 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3624)
!3624 = distinct !DILocation(line: 166, column: 28, scope: !3615)
!3625 = !DILocalVariable(name: "_yuv", arg: 1, scope: !3608, file: !266, line: 130, type: !17)
!3626 = !DILocation(line: 130, column: 38, scope: !3608)
!3627 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !3608, file: !266, line: 130, type: !50)
!3628 = !DILocation(line: 130, column: 63, scope: !3608)
!3629 = !DILocalVariable(name: "rgb", arg: 3, scope: !3608, file: !266, line: 131, type: !43)
!3630 = !DILocation(line: 131, column: 34, scope: !3608)
!3631 = !DILocalVariable(name: "s", arg: 4, scope: !3608, file: !266, line: 131, type: !47)
!3632 = !DILocation(line: 131, column: 52, scope: !3608)
!3633 = !DILocalVariable(name: "w", arg: 5, scope: !3608, file: !266, line: 132, type: !52)
!3634 = !DILocation(line: 132, column: 29, scope: !3608)
!3635 = !DILocalVariable(name: "h", arg: 6, scope: !3608, file: !266, line: 132, type: !52)
!3636 = !DILocation(line: 132, column: 36, scope: !3608)
!3637 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !3608, file: !266, line: 132, type: !53)
!3638 = !DILocation(line: 132, column: 53, scope: !3608)
!3639 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !3608, file: !266, line: 133, type: !59)
!3640 = !DILocation(line: 133, column: 39, scope: !3608)
!3641 = !DILocalVariable(name: "yuv", scope: !3608, file: !266, line: 135, type: !17)
!3642 = !DILocation(line: 135, column: 15, scope: !3608)
!3643 = !DILocation(line: 135, column: 34, scope: !3608)
!3644 = !DILocalVariable(name: "yuv0", scope: !3608, file: !266, line: 136, type: !18)
!3645 = !DILocation(line: 136, column: 14, scope: !3608)
!3646 = !DILocation(line: 136, column: 21, scope: !3608)
!3647 = !DILocalVariable(name: "yuv1", scope: !3608, file: !266, line: 136, type: !18)
!3648 = !DILocation(line: 136, column: 30, scope: !3608)
!3649 = !DILocation(line: 136, column: 37, scope: !3608)
!3650 = !DILocalVariable(name: "yuv2", scope: !3608, file: !266, line: 136, type: !18)
!3651 = !DILocation(line: 136, column: 46, scope: !3608)
!3652 = !DILocation(line: 136, column: 53, scope: !3608)
!3653 = !DILocalVariable(name: "rgb0", scope: !3608, file: !266, line: 137, type: !59)
!3654 = !DILocation(line: 137, column: 20, scope: !3608)
!3655 = !DILocation(line: 137, column: 27, scope: !3608)
!3656 = !DILocalVariable(name: "rgb1", scope: !3608, file: !266, line: 137, type: !59)
!3657 = !DILocation(line: 137, column: 36, scope: !3608)
!3658 = !DILocation(line: 137, column: 43, scope: !3608)
!3659 = !DILocalVariable(name: "rgb2", scope: !3608, file: !266, line: 137, type: !59)
!3660 = !DILocation(line: 137, column: 52, scope: !3608)
!3661 = !DILocation(line: 137, column: 59, scope: !3608)
!3662 = !DILocalVariable(name: "y", scope: !3608, file: !266, line: 138, type: !52)
!3663 = !DILocation(line: 138, column: 9, scope: !3608)
!3664 = !DILocalVariable(name: "x", scope: !3608, file: !266, line: 138, type: !52)
!3665 = !DILocation(line: 138, column: 12, scope: !3608)
!3666 = !DILocalVariable(name: "sh", scope: !3608, file: !266, line: 139, type: !343)
!3667 = !DILocation(line: 139, column: 15, scope: !3608)
!3668 = !DILocalVariable(name: "rnd", scope: !3608, file: !266, line: 140, type: !343)
!3669 = !DILocation(line: 140, column: 15, scope: !3608)
!3670 = !DILocalVariable(name: "cry", scope: !3608, file: !266, line: 141, type: !52)
!3671 = !DILocation(line: 141, column: 9, scope: !3608)
!3672 = !DILocation(line: 141, column: 15, scope: !3608)
!3673 = !DILocalVariable(name: "cgy", scope: !3608, file: !266, line: 142, type: !52)
!3674 = !DILocation(line: 142, column: 9, scope: !3608)
!3675 = !DILocation(line: 142, column: 15, scope: !3608)
!3676 = !DILocalVariable(name: "cby", scope: !3608, file: !266, line: 143, type: !52)
!3677 = !DILocation(line: 143, column: 9, scope: !3608)
!3678 = !DILocation(line: 143, column: 15, scope: !3608)
!3679 = !DILocalVariable(name: "cru", scope: !3608, file: !266, line: 144, type: !52)
!3680 = !DILocation(line: 144, column: 9, scope: !3608)
!3681 = !DILocation(line: 144, column: 15, scope: !3608)
!3682 = !DILocalVariable(name: "cgu", scope: !3608, file: !266, line: 145, type: !52)
!3683 = !DILocation(line: 145, column: 9, scope: !3608)
!3684 = !DILocation(line: 145, column: 15, scope: !3608)
!3685 = !DILocalVariable(name: "cburv", scope: !3608, file: !266, line: 146, type: !52)
!3686 = !DILocation(line: 146, column: 9, scope: !3608)
!3687 = !DILocation(line: 146, column: 17, scope: !3608)
!3688 = !DILocalVariable(name: "cgv", scope: !3608, file: !266, line: 147, type: !52)
!3689 = !DILocation(line: 147, column: 9, scope: !3608)
!3690 = !DILocation(line: 147, column: 15, scope: !3608)
!3691 = !DILocalVariable(name: "cbv", scope: !3608, file: !266, line: 148, type: !52)
!3692 = !DILocation(line: 148, column: 9, scope: !3608)
!3693 = !DILocation(line: 148, column: 15, scope: !3608)
!3694 = !DILocalVariable(name: "s0", scope: !3608, file: !266, line: 149, type: !47)
!3695 = !DILocation(line: 149, column: 15, scope: !3608)
!3696 = !DILocation(line: 149, column: 20, scope: !3608)
!3697 = !DILocation(line: 149, column: 34, scope: !3608)
!3698 = !DILocalVariable(name: "uv_offset", scope: !3608, file: !266, line: 150, type: !343)
!3699 = !DILocation(line: 150, column: 15, scope: !3608)
!3700 = !DILocation(line: 153, column: 58, scope: !3608)
!3701 = !DILocation(line: 153, column: 61, scope: !3608)
!3702 = !DILocation(line: 153, column: 72, scope: !3608)
!3703 = !DILocation(line: 153, column: 77, scope: !3608)
!3704 = !DILocation(line: 153, column: 7, scope: !3608)
!3705 = !DILocation(line: 154, column: 58, scope: !3608)
!3706 = !DILocation(line: 154, column: 61, scope: !3608)
!3707 = !DILocation(line: 154, column: 72, scope: !3608)
!3708 = !DILocation(line: 154, column: 77, scope: !3608)
!3709 = !DILocation(line: 154, column: 7, scope: !3608)
!3710 = !DILocation(line: 155, column: 12, scope: !3620)
!3711 = !DILocation(line: 155, column: 10, scope: !3620)
!3712 = !DILocation(line: 155, column: 17, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3619, file: !266, discriminator: 1)
!3714 = !DILocation(line: 155, column: 21, scope: !3713)
!3715 = !DILocation(line: 155, column: 19, scope: !3713)
!3716 = !DILocation(line: 155, column: 5, scope: !3713)
!3717 = !DILocation(line: 156, column: 16, scope: !3617)
!3718 = !DILocation(line: 156, column: 14, scope: !3617)
!3719 = !DILocation(line: 156, column: 21, scope: !3720)
!3720 = !DILexicalBlockFile(scope: !3616, file: !266, discriminator: 1)
!3721 = !DILocation(line: 156, column: 25, scope: !3720)
!3722 = !DILocation(line: 156, column: 23, scope: !3720)
!3723 = !DILocation(line: 156, column: 9, scope: !3720)
!3724 = !DILocalVariable(name: "r00", scope: !3615, file: !266, line: 157, type: !52)
!3725 = !DILocation(line: 157, column: 17, scope: !3615)
!3726 = !DILocation(line: 157, column: 28, scope: !3615)
!3727 = !DILocation(line: 157, column: 30, scope: !3615)
!3728 = !DILocation(line: 157, column: 23, scope: !3615)
!3729 = !DILocalVariable(name: "g00", scope: !3615, file: !266, line: 157, type: !52)
!3730 = !DILocation(line: 157, column: 37, scope: !3615)
!3731 = !DILocation(line: 157, column: 48, scope: !3615)
!3732 = !DILocation(line: 157, column: 50, scope: !3615)
!3733 = !DILocation(line: 157, column: 43, scope: !3615)
!3734 = !DILocalVariable(name: "b00", scope: !3615, file: !266, line: 157, type: !52)
!3735 = !DILocation(line: 157, column: 57, scope: !3615)
!3736 = !DILocation(line: 157, column: 68, scope: !3615)
!3737 = !DILocation(line: 157, column: 70, scope: !3615)
!3738 = !DILocation(line: 157, column: 63, scope: !3615)
!3739 = !DILocation(line: 166, column: 44, scope: !3615)
!3740 = !DILocation(line: 166, column: 62, scope: !3615)
!3741 = !DILocation(line: 166, column: 68, scope: !3615)
!3742 = !DILocation(line: 166, column: 66, scope: !3615)
!3743 = !DILocation(line: 166, column: 74, scope: !3615)
!3744 = !DILocation(line: 166, column: 80, scope: !3615)
!3745 = !DILocation(line: 166, column: 78, scope: !3615)
!3746 = !DILocation(line: 166, column: 72, scope: !3615)
!3747 = !DILocation(line: 166, column: 86, scope: !3615)
!3748 = !DILocation(line: 166, column: 92, scope: !3615)
!3749 = !DILocation(line: 166, column: 90, scope: !3615)
!3750 = !DILocation(line: 166, column: 84, scope: !3615)
!3751 = !DILocation(line: 166, column: 96, scope: !3615)
!3752 = !DILocation(line: 166, column: 103, scope: !3615)
!3753 = !DILocation(line: 166, column: 58, scope: !3615)
!3754 = !DILocation(line: 166, column: 28, scope: !3615)
!3755 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3624)
!3756 = distinct !DILexicalBlock(scope: !3610, file: !269, line: 161, column: 9)
!3757 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3624)
!3758 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3624)
!3759 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3624)
!3760 = !DILexicalBlockFile(scope: !3756, file: !269, discriminator: 1)
!3761 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3624)
!3762 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3624)
!3763 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3624)
!3764 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3624)
!3765 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3624)
!3766 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3624)
!3767 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3624)
!3768 = !DILocation(line: 166, column: 18, scope: !3615)
!3769 = !DILocation(line: 166, column: 20, scope: !3615)
!3770 = !DILocation(line: 166, column: 13, scope: !3615)
!3771 = !DILocation(line: 166, column: 26, scope: !3615)
!3772 = !DILocation(line: 183, column: 54, scope: !3615)
!3773 = !DILocation(line: 183, column: 61, scope: !3615)
!3774 = !DILocation(line: 183, column: 59, scope: !3615)
!3775 = !DILocation(line: 183, column: 68, scope: !3615)
!3776 = !DILocation(line: 183, column: 75, scope: !3615)
!3777 = !DILocation(line: 183, column: 73, scope: !3615)
!3778 = !DILocation(line: 183, column: 65, scope: !3615)
!3779 = !DILocation(line: 183, column: 82, scope: !3615)
!3780 = !DILocation(line: 183, column: 89, scope: !3615)
!3781 = !DILocation(line: 183, column: 87, scope: !3615)
!3782 = !DILocation(line: 183, column: 79, scope: !3615)
!3783 = !DILocation(line: 183, column: 95, scope: !3615)
!3784 = !DILocation(line: 183, column: 102, scope: !3615)
!3785 = !DILocation(line: 183, column: 49, scope: !3615)
!3786 = !DILocation(line: 183, column: 23, scope: !3615)
!3787 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3614)
!3788 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3614)
!3789 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3614)
!3790 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3614)
!3791 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3614)
!3792 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3614)
!3793 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3614)
!3794 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3614)
!3795 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3614)
!3796 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3614)
!3797 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3614)
!3798 = !DILocation(line: 183, column: 18, scope: !3615)
!3799 = !DILocation(line: 183, column: 13, scope: !3615)
!3800 = !DILocation(line: 183, column: 21, scope: !3615)
!3801 = !DILocation(line: 187, column: 54, scope: !3615)
!3802 = !DILocation(line: 187, column: 61, scope: !3615)
!3803 = !DILocation(line: 187, column: 59, scope: !3615)
!3804 = !DILocation(line: 187, column: 70, scope: !3615)
!3805 = !DILocation(line: 187, column: 77, scope: !3615)
!3806 = !DILocation(line: 187, column: 75, scope: !3615)
!3807 = !DILocation(line: 187, column: 67, scope: !3615)
!3808 = !DILocation(line: 187, column: 84, scope: !3615)
!3809 = !DILocation(line: 187, column: 91, scope: !3615)
!3810 = !DILocation(line: 187, column: 89, scope: !3615)
!3811 = !DILocation(line: 187, column: 81, scope: !3615)
!3812 = !DILocation(line: 187, column: 95, scope: !3615)
!3813 = !DILocation(line: 187, column: 102, scope: !3615)
!3814 = !DILocation(line: 187, column: 49, scope: !3615)
!3815 = !DILocation(line: 187, column: 23, scope: !3615)
!3816 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3622)
!3817 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3622)
!3818 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3622)
!3819 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3622)
!3820 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3622)
!3821 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3622)
!3822 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3622)
!3823 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3622)
!3824 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3622)
!3825 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3622)
!3826 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3622)
!3827 = !DILocation(line: 187, column: 18, scope: !3615)
!3828 = !DILocation(line: 187, column: 13, scope: !3615)
!3829 = !DILocation(line: 187, column: 21, scope: !3615)
!3830 = !DILocation(line: 191, column: 9, scope: !3615)
!3831 = !DILocation(line: 156, column: 29, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3616, file: !266, discriminator: 2)
!3833 = !DILocation(line: 156, column: 9, scope: !3832)
!3834 = distinct !{!3834, !3835}
!3835 = !DILocation(line: 156, column: 9, scope: !3618)
!3836 = !DILocation(line: 193, column: 17, scope: !3618)
!3837 = !DILocation(line: 193, column: 20, scope: !3618)
!3838 = !DILocation(line: 193, column: 14, scope: !3618)
!3839 = !DILocation(line: 194, column: 17, scope: !3618)
!3840 = !DILocation(line: 194, column: 31, scope: !3618)
!3841 = !DILocation(line: 194, column: 14, scope: !3618)
!3842 = !DILocation(line: 195, column: 17, scope: !3618)
!3843 = !DILocation(line: 195, column: 31, scope: !3618)
!3844 = !DILocation(line: 195, column: 14, scope: !3618)
!3845 = !DILocation(line: 196, column: 17, scope: !3618)
!3846 = !DILocation(line: 196, column: 19, scope: !3618)
!3847 = !DILocation(line: 196, column: 14, scope: !3618)
!3848 = !DILocation(line: 197, column: 17, scope: !3618)
!3849 = !DILocation(line: 197, column: 19, scope: !3618)
!3850 = !DILocation(line: 197, column: 14, scope: !3618)
!3851 = !DILocation(line: 198, column: 17, scope: !3618)
!3852 = !DILocation(line: 198, column: 19, scope: !3618)
!3853 = !DILocation(line: 198, column: 14, scope: !3618)
!3854 = !DILocation(line: 199, column: 5, scope: !3618)
!3855 = !DILocation(line: 155, column: 25, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3619, file: !266, discriminator: 2)
!3857 = !DILocation(line: 155, column: 5, scope: !3856)
!3858 = distinct !{!3858, !3859}
!3859 = !DILocation(line: 155, column: 5, scope: !3608)
!3860 = !DILocation(line: 200, column: 1, scope: !3608)
!3861 = distinct !DISubprogram(name: "rgb2yuv_422p8_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!3862 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3863)
!3863 = distinct !DILocation(line: 170, column: 31, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !266, line: 156, column: 33)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !266, line: 156, column: 9)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !266, line: 156, column: 9)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !266, line: 155, column: 29)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !266, line: 155, column: 5)
!3869 = distinct !DILexicalBlock(scope: !3861, file: !266, line: 155, column: 5)
!3870 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3871)
!3871 = distinct !DILocation(line: 183, column: 23, scope: !3864)
!3872 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3873)
!3873 = distinct !DILocation(line: 187, column: 23, scope: !3864)
!3874 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !3875)
!3875 = distinct !DILocation(line: 166, column: 28, scope: !3864)
!3876 = !DILocalVariable(name: "_yuv", arg: 1, scope: !3861, file: !266, line: 130, type: !17)
!3877 = !DILocation(line: 130, column: 38, scope: !3861)
!3878 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !3861, file: !266, line: 130, type: !50)
!3879 = !DILocation(line: 130, column: 63, scope: !3861)
!3880 = !DILocalVariable(name: "rgb", arg: 3, scope: !3861, file: !266, line: 131, type: !43)
!3881 = !DILocation(line: 131, column: 34, scope: !3861)
!3882 = !DILocalVariable(name: "s", arg: 4, scope: !3861, file: !266, line: 131, type: !47)
!3883 = !DILocation(line: 131, column: 52, scope: !3861)
!3884 = !DILocalVariable(name: "w", arg: 5, scope: !3861, file: !266, line: 132, type: !52)
!3885 = !DILocation(line: 132, column: 29, scope: !3861)
!3886 = !DILocalVariable(name: "h", arg: 6, scope: !3861, file: !266, line: 132, type: !52)
!3887 = !DILocation(line: 132, column: 36, scope: !3861)
!3888 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !3861, file: !266, line: 132, type: !53)
!3889 = !DILocation(line: 132, column: 53, scope: !3861)
!3890 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !3861, file: !266, line: 133, type: !59)
!3891 = !DILocation(line: 133, column: 39, scope: !3861)
!3892 = !DILocalVariable(name: "yuv", scope: !3861, file: !266, line: 135, type: !17)
!3893 = !DILocation(line: 135, column: 15, scope: !3861)
!3894 = !DILocation(line: 135, column: 34, scope: !3861)
!3895 = !DILocalVariable(name: "yuv0", scope: !3861, file: !266, line: 136, type: !18)
!3896 = !DILocation(line: 136, column: 14, scope: !3861)
!3897 = !DILocation(line: 136, column: 21, scope: !3861)
!3898 = !DILocalVariable(name: "yuv1", scope: !3861, file: !266, line: 136, type: !18)
!3899 = !DILocation(line: 136, column: 30, scope: !3861)
!3900 = !DILocation(line: 136, column: 37, scope: !3861)
!3901 = !DILocalVariable(name: "yuv2", scope: !3861, file: !266, line: 136, type: !18)
!3902 = !DILocation(line: 136, column: 46, scope: !3861)
!3903 = !DILocation(line: 136, column: 53, scope: !3861)
!3904 = !DILocalVariable(name: "rgb0", scope: !3861, file: !266, line: 137, type: !59)
!3905 = !DILocation(line: 137, column: 20, scope: !3861)
!3906 = !DILocation(line: 137, column: 27, scope: !3861)
!3907 = !DILocalVariable(name: "rgb1", scope: !3861, file: !266, line: 137, type: !59)
!3908 = !DILocation(line: 137, column: 36, scope: !3861)
!3909 = !DILocation(line: 137, column: 43, scope: !3861)
!3910 = !DILocalVariable(name: "rgb2", scope: !3861, file: !266, line: 137, type: !59)
!3911 = !DILocation(line: 137, column: 52, scope: !3861)
!3912 = !DILocation(line: 137, column: 59, scope: !3861)
!3913 = !DILocalVariable(name: "y", scope: !3861, file: !266, line: 138, type: !52)
!3914 = !DILocation(line: 138, column: 9, scope: !3861)
!3915 = !DILocalVariable(name: "x", scope: !3861, file: !266, line: 138, type: !52)
!3916 = !DILocation(line: 138, column: 12, scope: !3861)
!3917 = !DILocalVariable(name: "sh", scope: !3861, file: !266, line: 139, type: !343)
!3918 = !DILocation(line: 139, column: 15, scope: !3861)
!3919 = !DILocalVariable(name: "rnd", scope: !3861, file: !266, line: 140, type: !343)
!3920 = !DILocation(line: 140, column: 15, scope: !3861)
!3921 = !DILocalVariable(name: "cry", scope: !3861, file: !266, line: 141, type: !52)
!3922 = !DILocation(line: 141, column: 9, scope: !3861)
!3923 = !DILocation(line: 141, column: 15, scope: !3861)
!3924 = !DILocalVariable(name: "cgy", scope: !3861, file: !266, line: 142, type: !52)
!3925 = !DILocation(line: 142, column: 9, scope: !3861)
!3926 = !DILocation(line: 142, column: 15, scope: !3861)
!3927 = !DILocalVariable(name: "cby", scope: !3861, file: !266, line: 143, type: !52)
!3928 = !DILocation(line: 143, column: 9, scope: !3861)
!3929 = !DILocation(line: 143, column: 15, scope: !3861)
!3930 = !DILocalVariable(name: "cru", scope: !3861, file: !266, line: 144, type: !52)
!3931 = !DILocation(line: 144, column: 9, scope: !3861)
!3932 = !DILocation(line: 144, column: 15, scope: !3861)
!3933 = !DILocalVariable(name: "cgu", scope: !3861, file: !266, line: 145, type: !52)
!3934 = !DILocation(line: 145, column: 9, scope: !3861)
!3935 = !DILocation(line: 145, column: 15, scope: !3861)
!3936 = !DILocalVariable(name: "cburv", scope: !3861, file: !266, line: 146, type: !52)
!3937 = !DILocation(line: 146, column: 9, scope: !3861)
!3938 = !DILocation(line: 146, column: 17, scope: !3861)
!3939 = !DILocalVariable(name: "cgv", scope: !3861, file: !266, line: 147, type: !52)
!3940 = !DILocation(line: 147, column: 9, scope: !3861)
!3941 = !DILocation(line: 147, column: 15, scope: !3861)
!3942 = !DILocalVariable(name: "cbv", scope: !3861, file: !266, line: 148, type: !52)
!3943 = !DILocation(line: 148, column: 9, scope: !3861)
!3944 = !DILocation(line: 148, column: 15, scope: !3861)
!3945 = !DILocalVariable(name: "s0", scope: !3861, file: !266, line: 149, type: !47)
!3946 = !DILocation(line: 149, column: 15, scope: !3861)
!3947 = !DILocation(line: 149, column: 20, scope: !3861)
!3948 = !DILocation(line: 149, column: 34, scope: !3861)
!3949 = !DILocalVariable(name: "uv_offset", scope: !3861, file: !266, line: 150, type: !343)
!3950 = !DILocation(line: 150, column: 15, scope: !3861)
!3951 = !DILocation(line: 153, column: 58, scope: !3861)
!3952 = !DILocation(line: 153, column: 61, scope: !3861)
!3953 = !DILocation(line: 153, column: 72, scope: !3861)
!3954 = !DILocation(line: 153, column: 77, scope: !3861)
!3955 = !DILocation(line: 153, column: 7, scope: !3861)
!3956 = !DILocation(line: 154, column: 58, scope: !3861)
!3957 = !DILocation(line: 154, column: 61, scope: !3861)
!3958 = !DILocation(line: 154, column: 72, scope: !3861)
!3959 = !DILocation(line: 154, column: 77, scope: !3861)
!3960 = !DILocation(line: 154, column: 7, scope: !3861)
!3961 = !DILocation(line: 155, column: 12, scope: !3869)
!3962 = !DILocation(line: 155, column: 10, scope: !3869)
!3963 = !DILocation(line: 155, column: 17, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3868, file: !266, discriminator: 1)
!3965 = !DILocation(line: 155, column: 21, scope: !3964)
!3966 = !DILocation(line: 155, column: 19, scope: !3964)
!3967 = !DILocation(line: 155, column: 5, scope: !3964)
!3968 = !DILocation(line: 156, column: 16, scope: !3866)
!3969 = !DILocation(line: 156, column: 14, scope: !3866)
!3970 = !DILocation(line: 156, column: 21, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !3865, file: !266, discriminator: 1)
!3972 = !DILocation(line: 156, column: 25, scope: !3971)
!3973 = !DILocation(line: 156, column: 23, scope: !3971)
!3974 = !DILocation(line: 156, column: 9, scope: !3971)
!3975 = !DILocalVariable(name: "r00", scope: !3864, file: !266, line: 157, type: !52)
!3976 = !DILocation(line: 157, column: 17, scope: !3864)
!3977 = !DILocation(line: 157, column: 28, scope: !3864)
!3978 = !DILocation(line: 157, column: 30, scope: !3864)
!3979 = !DILocation(line: 157, column: 23, scope: !3864)
!3980 = !DILocalVariable(name: "g00", scope: !3864, file: !266, line: 157, type: !52)
!3981 = !DILocation(line: 157, column: 37, scope: !3864)
!3982 = !DILocation(line: 157, column: 48, scope: !3864)
!3983 = !DILocation(line: 157, column: 50, scope: !3864)
!3984 = !DILocation(line: 157, column: 43, scope: !3864)
!3985 = !DILocalVariable(name: "b00", scope: !3864, file: !266, line: 157, type: !52)
!3986 = !DILocation(line: 157, column: 57, scope: !3864)
!3987 = !DILocation(line: 157, column: 68, scope: !3864)
!3988 = !DILocation(line: 157, column: 70, scope: !3864)
!3989 = !DILocation(line: 157, column: 63, scope: !3864)
!3990 = !DILocalVariable(name: "r01", scope: !3864, file: !266, line: 159, type: !52)
!3991 = !DILocation(line: 159, column: 17, scope: !3864)
!3992 = !DILocation(line: 159, column: 28, scope: !3864)
!3993 = !DILocation(line: 159, column: 30, scope: !3864)
!3994 = !DILocation(line: 159, column: 34, scope: !3864)
!3995 = !DILocation(line: 159, column: 23, scope: !3864)
!3996 = !DILocalVariable(name: "g01", scope: !3864, file: !266, line: 159, type: !52)
!3997 = !DILocation(line: 159, column: 40, scope: !3864)
!3998 = !DILocation(line: 159, column: 51, scope: !3864)
!3999 = !DILocation(line: 159, column: 53, scope: !3864)
!4000 = !DILocation(line: 159, column: 57, scope: !3864)
!4001 = !DILocation(line: 159, column: 46, scope: !3864)
!4002 = !DILocalVariable(name: "b01", scope: !3864, file: !266, line: 159, type: !52)
!4003 = !DILocation(line: 159, column: 63, scope: !3864)
!4004 = !DILocation(line: 159, column: 74, scope: !3864)
!4005 = !DILocation(line: 159, column: 76, scope: !3864)
!4006 = !DILocation(line: 159, column: 80, scope: !3864)
!4007 = !DILocation(line: 159, column: 69, scope: !3864)
!4008 = !DILocation(line: 166, column: 44, scope: !3864)
!4009 = !DILocation(line: 166, column: 62, scope: !3864)
!4010 = !DILocation(line: 166, column: 68, scope: !3864)
!4011 = !DILocation(line: 166, column: 66, scope: !3864)
!4012 = !DILocation(line: 166, column: 74, scope: !3864)
!4013 = !DILocation(line: 166, column: 80, scope: !3864)
!4014 = !DILocation(line: 166, column: 78, scope: !3864)
!4015 = !DILocation(line: 166, column: 72, scope: !3864)
!4016 = !DILocation(line: 166, column: 86, scope: !3864)
!4017 = !DILocation(line: 166, column: 92, scope: !3864)
!4018 = !DILocation(line: 166, column: 90, scope: !3864)
!4019 = !DILocation(line: 166, column: 84, scope: !3864)
!4020 = !DILocation(line: 166, column: 96, scope: !3864)
!4021 = !DILocation(line: 166, column: 103, scope: !3864)
!4022 = !DILocation(line: 166, column: 58, scope: !3864)
!4023 = !DILocation(line: 166, column: 28, scope: !3864)
!4024 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3875)
!4025 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3875)
!4026 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3875)
!4027 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3875)
!4028 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3875)
!4029 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3875)
!4030 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3875)
!4031 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3875)
!4032 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3875)
!4033 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3875)
!4034 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3875)
!4035 = !DILocation(line: 166, column: 18, scope: !3864)
!4036 = !DILocation(line: 166, column: 20, scope: !3864)
!4037 = !DILocation(line: 166, column: 13, scope: !3864)
!4038 = !DILocation(line: 166, column: 26, scope: !3864)
!4039 = !DILocation(line: 170, column: 47, scope: !3864)
!4040 = !DILocation(line: 170, column: 65, scope: !3864)
!4041 = !DILocation(line: 170, column: 71, scope: !3864)
!4042 = !DILocation(line: 170, column: 69, scope: !3864)
!4043 = !DILocation(line: 170, column: 77, scope: !3864)
!4044 = !DILocation(line: 170, column: 83, scope: !3864)
!4045 = !DILocation(line: 170, column: 81, scope: !3864)
!4046 = !DILocation(line: 170, column: 75, scope: !3864)
!4047 = !DILocation(line: 170, column: 89, scope: !3864)
!4048 = !DILocation(line: 170, column: 95, scope: !3864)
!4049 = !DILocation(line: 170, column: 93, scope: !3864)
!4050 = !DILocation(line: 170, column: 87, scope: !3864)
!4051 = !DILocation(line: 170, column: 99, scope: !3864)
!4052 = !DILocation(line: 170, column: 106, scope: !3864)
!4053 = !DILocation(line: 170, column: 61, scope: !3864)
!4054 = !DILocation(line: 170, column: 31, scope: !3864)
!4055 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3863)
!4056 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3863)
!4057 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3863)
!4058 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3863)
!4059 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3863)
!4060 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3863)
!4061 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3863)
!4062 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3863)
!4063 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3863)
!4064 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3863)
!4065 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3863)
!4066 = !DILocation(line: 170, column: 18, scope: !3864)
!4067 = !DILocation(line: 170, column: 20, scope: !3864)
!4068 = !DILocation(line: 170, column: 24, scope: !3864)
!4069 = !DILocation(line: 170, column: 13, scope: !3864)
!4070 = !DILocation(line: 170, column: 29, scope: !3864)
!4071 = !DILocation(line: 183, column: 56, scope: !3864)
!4072 = !DILocation(line: 183, column: 64, scope: !3864)
!4073 = !DILocation(line: 183, column: 61, scope: !3864)
!4074 = !DILocation(line: 183, column: 69, scope: !3864)
!4075 = !DILocation(line: 183, column: 74, scope: !3864)
!4076 = !DILocation(line: 183, column: 82, scope: !3864)
!4077 = !DILocation(line: 183, column: 80, scope: !3864)
!4078 = !DILocation(line: 183, column: 91, scope: !3864)
!4079 = !DILocation(line: 183, column: 99, scope: !3864)
!4080 = !DILocation(line: 183, column: 96, scope: !3864)
!4081 = !DILocation(line: 183, column: 104, scope: !3864)
!4082 = !DILocation(line: 183, column: 109, scope: !3864)
!4083 = !DILocation(line: 183, column: 117, scope: !3864)
!4084 = !DILocation(line: 183, column: 115, scope: !3864)
!4085 = !DILocation(line: 183, column: 86, scope: !3864)
!4086 = !DILocation(line: 183, column: 126, scope: !3864)
!4087 = !DILocation(line: 183, column: 134, scope: !3864)
!4088 = !DILocation(line: 183, column: 131, scope: !3864)
!4089 = !DILocation(line: 183, column: 139, scope: !3864)
!4090 = !DILocation(line: 183, column: 144, scope: !3864)
!4091 = !DILocation(line: 183, column: 152, scope: !3864)
!4092 = !DILocation(line: 183, column: 150, scope: !3864)
!4093 = !DILocation(line: 183, column: 121, scope: !3864)
!4094 = !DILocation(line: 183, column: 158, scope: !3864)
!4095 = !DILocation(line: 183, column: 165, scope: !3864)
!4096 = !DILocation(line: 183, column: 49, scope: !3864)
!4097 = !DILocation(line: 183, column: 23, scope: !3864)
!4098 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3871)
!4099 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3871)
!4100 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3871)
!4101 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3871)
!4102 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3871)
!4103 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3871)
!4104 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3871)
!4105 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3871)
!4106 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3871)
!4107 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3871)
!4108 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3871)
!4109 = !DILocation(line: 183, column: 18, scope: !3864)
!4110 = !DILocation(line: 183, column: 13, scope: !3864)
!4111 = !DILocation(line: 183, column: 21, scope: !3864)
!4112 = !DILocation(line: 187, column: 56, scope: !3864)
!4113 = !DILocation(line: 187, column: 64, scope: !3864)
!4114 = !DILocation(line: 187, column: 61, scope: !3864)
!4115 = !DILocation(line: 187, column: 69, scope: !3864)
!4116 = !DILocation(line: 187, column: 74, scope: !3864)
!4117 = !DILocation(line: 187, column: 82, scope: !3864)
!4118 = !DILocation(line: 187, column: 80, scope: !3864)
!4119 = !DILocation(line: 187, column: 93, scope: !3864)
!4120 = !DILocation(line: 187, column: 101, scope: !3864)
!4121 = !DILocation(line: 187, column: 98, scope: !3864)
!4122 = !DILocation(line: 187, column: 106, scope: !3864)
!4123 = !DILocation(line: 187, column: 111, scope: !3864)
!4124 = !DILocation(line: 187, column: 119, scope: !3864)
!4125 = !DILocation(line: 187, column: 117, scope: !3864)
!4126 = !DILocation(line: 187, column: 88, scope: !3864)
!4127 = !DILocation(line: 187, column: 128, scope: !3864)
!4128 = !DILocation(line: 187, column: 136, scope: !3864)
!4129 = !DILocation(line: 187, column: 133, scope: !3864)
!4130 = !DILocation(line: 187, column: 141, scope: !3864)
!4131 = !DILocation(line: 187, column: 146, scope: !3864)
!4132 = !DILocation(line: 187, column: 154, scope: !3864)
!4133 = !DILocation(line: 187, column: 152, scope: !3864)
!4134 = !DILocation(line: 187, column: 123, scope: !3864)
!4135 = !DILocation(line: 187, column: 158, scope: !3864)
!4136 = !DILocation(line: 187, column: 165, scope: !3864)
!4137 = !DILocation(line: 187, column: 49, scope: !3864)
!4138 = !DILocation(line: 187, column: 23, scope: !3864)
!4139 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !3873)
!4140 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !3873)
!4141 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !3873)
!4142 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !3873)
!4143 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !3873)
!4144 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !3873)
!4145 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !3873)
!4146 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !3873)
!4147 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !3873)
!4148 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !3873)
!4149 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !3873)
!4150 = !DILocation(line: 187, column: 18, scope: !3864)
!4151 = !DILocation(line: 187, column: 13, scope: !3864)
!4152 = !DILocation(line: 187, column: 21, scope: !3864)
!4153 = !DILocation(line: 191, column: 9, scope: !3864)
!4154 = !DILocation(line: 156, column: 29, scope: !4155)
!4155 = !DILexicalBlockFile(scope: !3865, file: !266, discriminator: 2)
!4156 = !DILocation(line: 156, column: 9, scope: !4155)
!4157 = distinct !{!4157, !4158}
!4158 = !DILocation(line: 156, column: 9, scope: !3867)
!4159 = !DILocation(line: 193, column: 17, scope: !3867)
!4160 = !DILocation(line: 193, column: 20, scope: !3867)
!4161 = !DILocation(line: 193, column: 14, scope: !3867)
!4162 = !DILocation(line: 194, column: 17, scope: !3867)
!4163 = !DILocation(line: 194, column: 31, scope: !3867)
!4164 = !DILocation(line: 194, column: 14, scope: !3867)
!4165 = !DILocation(line: 195, column: 17, scope: !3867)
!4166 = !DILocation(line: 195, column: 31, scope: !3867)
!4167 = !DILocation(line: 195, column: 14, scope: !3867)
!4168 = !DILocation(line: 196, column: 17, scope: !3867)
!4169 = !DILocation(line: 196, column: 19, scope: !3867)
!4170 = !DILocation(line: 196, column: 14, scope: !3867)
!4171 = !DILocation(line: 197, column: 17, scope: !3867)
!4172 = !DILocation(line: 197, column: 19, scope: !3867)
!4173 = !DILocation(line: 197, column: 14, scope: !3867)
!4174 = !DILocation(line: 198, column: 17, scope: !3867)
!4175 = !DILocation(line: 198, column: 19, scope: !3867)
!4176 = !DILocation(line: 198, column: 14, scope: !3867)
!4177 = !DILocation(line: 199, column: 5, scope: !3867)
!4178 = !DILocation(line: 155, column: 25, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !3868, file: !266, discriminator: 2)
!4180 = !DILocation(line: 155, column: 5, scope: !4179)
!4181 = distinct !{!4181, !4182}
!4182 = !DILocation(line: 155, column: 5, scope: !3861)
!4183 = !DILocation(line: 200, column: 1, scope: !3861)
!4184 = distinct !DISubprogram(name: "rgb2yuv_420p8_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!4185 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4186)
!4186 = distinct !DILocation(line: 170, column: 31, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !266, line: 156, column: 33)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !266, line: 156, column: 9)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !266, line: 156, column: 9)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !266, line: 155, column: 29)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !266, line: 155, column: 5)
!4192 = distinct !DILexicalBlock(scope: !4184, file: !266, line: 155, column: 5)
!4193 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4194)
!4194 = distinct !DILocation(line: 174, column: 36, scope: !4187)
!4195 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4196)
!4196 = distinct !DILocation(line: 177, column: 36, scope: !4187)
!4197 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4198)
!4198 = distinct !DILocation(line: 183, column: 23, scope: !4187)
!4199 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4200)
!4200 = distinct !DILocation(line: 187, column: 23, scope: !4187)
!4201 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !4202)
!4202 = distinct !DILocation(line: 166, column: 28, scope: !4187)
!4203 = !DILocalVariable(name: "_yuv", arg: 1, scope: !4184, file: !266, line: 130, type: !17)
!4204 = !DILocation(line: 130, column: 38, scope: !4184)
!4205 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !4184, file: !266, line: 130, type: !50)
!4206 = !DILocation(line: 130, column: 63, scope: !4184)
!4207 = !DILocalVariable(name: "rgb", arg: 3, scope: !4184, file: !266, line: 131, type: !43)
!4208 = !DILocation(line: 131, column: 34, scope: !4184)
!4209 = !DILocalVariable(name: "s", arg: 4, scope: !4184, file: !266, line: 131, type: !47)
!4210 = !DILocation(line: 131, column: 52, scope: !4184)
!4211 = !DILocalVariable(name: "w", arg: 5, scope: !4184, file: !266, line: 132, type: !52)
!4212 = !DILocation(line: 132, column: 29, scope: !4184)
!4213 = !DILocalVariable(name: "h", arg: 6, scope: !4184, file: !266, line: 132, type: !52)
!4214 = !DILocation(line: 132, column: 36, scope: !4184)
!4215 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !4184, file: !266, line: 132, type: !53)
!4216 = !DILocation(line: 132, column: 53, scope: !4184)
!4217 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !4184, file: !266, line: 133, type: !59)
!4218 = !DILocation(line: 133, column: 39, scope: !4184)
!4219 = !DILocalVariable(name: "yuv", scope: !4184, file: !266, line: 135, type: !17)
!4220 = !DILocation(line: 135, column: 15, scope: !4184)
!4221 = !DILocation(line: 135, column: 34, scope: !4184)
!4222 = !DILocalVariable(name: "yuv0", scope: !4184, file: !266, line: 136, type: !18)
!4223 = !DILocation(line: 136, column: 14, scope: !4184)
!4224 = !DILocation(line: 136, column: 21, scope: !4184)
!4225 = !DILocalVariable(name: "yuv1", scope: !4184, file: !266, line: 136, type: !18)
!4226 = !DILocation(line: 136, column: 30, scope: !4184)
!4227 = !DILocation(line: 136, column: 37, scope: !4184)
!4228 = !DILocalVariable(name: "yuv2", scope: !4184, file: !266, line: 136, type: !18)
!4229 = !DILocation(line: 136, column: 46, scope: !4184)
!4230 = !DILocation(line: 136, column: 53, scope: !4184)
!4231 = !DILocalVariable(name: "rgb0", scope: !4184, file: !266, line: 137, type: !59)
!4232 = !DILocation(line: 137, column: 20, scope: !4184)
!4233 = !DILocation(line: 137, column: 27, scope: !4184)
!4234 = !DILocalVariable(name: "rgb1", scope: !4184, file: !266, line: 137, type: !59)
!4235 = !DILocation(line: 137, column: 36, scope: !4184)
!4236 = !DILocation(line: 137, column: 43, scope: !4184)
!4237 = !DILocalVariable(name: "rgb2", scope: !4184, file: !266, line: 137, type: !59)
!4238 = !DILocation(line: 137, column: 52, scope: !4184)
!4239 = !DILocation(line: 137, column: 59, scope: !4184)
!4240 = !DILocalVariable(name: "y", scope: !4184, file: !266, line: 138, type: !52)
!4241 = !DILocation(line: 138, column: 9, scope: !4184)
!4242 = !DILocalVariable(name: "x", scope: !4184, file: !266, line: 138, type: !52)
!4243 = !DILocation(line: 138, column: 12, scope: !4184)
!4244 = !DILocalVariable(name: "sh", scope: !4184, file: !266, line: 139, type: !343)
!4245 = !DILocation(line: 139, column: 15, scope: !4184)
!4246 = !DILocalVariable(name: "rnd", scope: !4184, file: !266, line: 140, type: !343)
!4247 = !DILocation(line: 140, column: 15, scope: !4184)
!4248 = !DILocalVariable(name: "cry", scope: !4184, file: !266, line: 141, type: !52)
!4249 = !DILocation(line: 141, column: 9, scope: !4184)
!4250 = !DILocation(line: 141, column: 15, scope: !4184)
!4251 = !DILocalVariable(name: "cgy", scope: !4184, file: !266, line: 142, type: !52)
!4252 = !DILocation(line: 142, column: 9, scope: !4184)
!4253 = !DILocation(line: 142, column: 15, scope: !4184)
!4254 = !DILocalVariable(name: "cby", scope: !4184, file: !266, line: 143, type: !52)
!4255 = !DILocation(line: 143, column: 9, scope: !4184)
!4256 = !DILocation(line: 143, column: 15, scope: !4184)
!4257 = !DILocalVariable(name: "cru", scope: !4184, file: !266, line: 144, type: !52)
!4258 = !DILocation(line: 144, column: 9, scope: !4184)
!4259 = !DILocation(line: 144, column: 15, scope: !4184)
!4260 = !DILocalVariable(name: "cgu", scope: !4184, file: !266, line: 145, type: !52)
!4261 = !DILocation(line: 145, column: 9, scope: !4184)
!4262 = !DILocation(line: 145, column: 15, scope: !4184)
!4263 = !DILocalVariable(name: "cburv", scope: !4184, file: !266, line: 146, type: !52)
!4264 = !DILocation(line: 146, column: 9, scope: !4184)
!4265 = !DILocation(line: 146, column: 17, scope: !4184)
!4266 = !DILocalVariable(name: "cgv", scope: !4184, file: !266, line: 147, type: !52)
!4267 = !DILocation(line: 147, column: 9, scope: !4184)
!4268 = !DILocation(line: 147, column: 15, scope: !4184)
!4269 = !DILocalVariable(name: "cbv", scope: !4184, file: !266, line: 148, type: !52)
!4270 = !DILocation(line: 148, column: 9, scope: !4184)
!4271 = !DILocation(line: 148, column: 15, scope: !4184)
!4272 = !DILocalVariable(name: "s0", scope: !4184, file: !266, line: 149, type: !47)
!4273 = !DILocation(line: 149, column: 15, scope: !4184)
!4274 = !DILocation(line: 149, column: 20, scope: !4184)
!4275 = !DILocation(line: 149, column: 34, scope: !4184)
!4276 = !DILocalVariable(name: "uv_offset", scope: !4184, file: !266, line: 150, type: !343)
!4277 = !DILocation(line: 150, column: 15, scope: !4184)
!4278 = !DILocation(line: 153, column: 58, scope: !4184)
!4279 = !DILocation(line: 153, column: 61, scope: !4184)
!4280 = !DILocation(line: 153, column: 72, scope: !4184)
!4281 = !DILocation(line: 153, column: 77, scope: !4184)
!4282 = !DILocation(line: 153, column: 7, scope: !4184)
!4283 = !DILocation(line: 154, column: 58, scope: !4184)
!4284 = !DILocation(line: 154, column: 61, scope: !4184)
!4285 = !DILocation(line: 154, column: 72, scope: !4184)
!4286 = !DILocation(line: 154, column: 77, scope: !4184)
!4287 = !DILocation(line: 154, column: 7, scope: !4184)
!4288 = !DILocation(line: 155, column: 12, scope: !4192)
!4289 = !DILocation(line: 155, column: 10, scope: !4192)
!4290 = !DILocation(line: 155, column: 17, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !4191, file: !266, discriminator: 1)
!4292 = !DILocation(line: 155, column: 21, scope: !4291)
!4293 = !DILocation(line: 155, column: 19, scope: !4291)
!4294 = !DILocation(line: 155, column: 5, scope: !4291)
!4295 = !DILocation(line: 156, column: 16, scope: !4189)
!4296 = !DILocation(line: 156, column: 14, scope: !4189)
!4297 = !DILocation(line: 156, column: 21, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !4188, file: !266, discriminator: 1)
!4299 = !DILocation(line: 156, column: 25, scope: !4298)
!4300 = !DILocation(line: 156, column: 23, scope: !4298)
!4301 = !DILocation(line: 156, column: 9, scope: !4298)
!4302 = !DILocalVariable(name: "r00", scope: !4187, file: !266, line: 157, type: !52)
!4303 = !DILocation(line: 157, column: 17, scope: !4187)
!4304 = !DILocation(line: 157, column: 28, scope: !4187)
!4305 = !DILocation(line: 157, column: 30, scope: !4187)
!4306 = !DILocation(line: 157, column: 23, scope: !4187)
!4307 = !DILocalVariable(name: "g00", scope: !4187, file: !266, line: 157, type: !52)
!4308 = !DILocation(line: 157, column: 37, scope: !4187)
!4309 = !DILocation(line: 157, column: 48, scope: !4187)
!4310 = !DILocation(line: 157, column: 50, scope: !4187)
!4311 = !DILocation(line: 157, column: 43, scope: !4187)
!4312 = !DILocalVariable(name: "b00", scope: !4187, file: !266, line: 157, type: !52)
!4313 = !DILocation(line: 157, column: 57, scope: !4187)
!4314 = !DILocation(line: 157, column: 68, scope: !4187)
!4315 = !DILocation(line: 157, column: 70, scope: !4187)
!4316 = !DILocation(line: 157, column: 63, scope: !4187)
!4317 = !DILocalVariable(name: "r01", scope: !4187, file: !266, line: 159, type: !52)
!4318 = !DILocation(line: 159, column: 17, scope: !4187)
!4319 = !DILocation(line: 159, column: 28, scope: !4187)
!4320 = !DILocation(line: 159, column: 30, scope: !4187)
!4321 = !DILocation(line: 159, column: 34, scope: !4187)
!4322 = !DILocation(line: 159, column: 23, scope: !4187)
!4323 = !DILocalVariable(name: "g01", scope: !4187, file: !266, line: 159, type: !52)
!4324 = !DILocation(line: 159, column: 40, scope: !4187)
!4325 = !DILocation(line: 159, column: 51, scope: !4187)
!4326 = !DILocation(line: 159, column: 53, scope: !4187)
!4327 = !DILocation(line: 159, column: 57, scope: !4187)
!4328 = !DILocation(line: 159, column: 46, scope: !4187)
!4329 = !DILocalVariable(name: "b01", scope: !4187, file: !266, line: 159, type: !52)
!4330 = !DILocation(line: 159, column: 63, scope: !4187)
!4331 = !DILocation(line: 159, column: 74, scope: !4187)
!4332 = !DILocation(line: 159, column: 76, scope: !4187)
!4333 = !DILocation(line: 159, column: 80, scope: !4187)
!4334 = !DILocation(line: 159, column: 69, scope: !4187)
!4335 = !DILocalVariable(name: "r10", scope: !4187, file: !266, line: 161, type: !52)
!4336 = !DILocation(line: 161, column: 17, scope: !4187)
!4337 = !DILocation(line: 161, column: 28, scope: !4187)
!4338 = !DILocation(line: 161, column: 30, scope: !4187)
!4339 = !DILocation(line: 161, column: 34, scope: !4187)
!4340 = !DILocation(line: 161, column: 40, scope: !4187)
!4341 = !DILocation(line: 161, column: 38, scope: !4187)
!4342 = !DILocation(line: 161, column: 23, scope: !4187)
!4343 = !DILocalVariable(name: "g10", scope: !4187, file: !266, line: 161, type: !52)
!4344 = !DILocation(line: 161, column: 44, scope: !4187)
!4345 = !DILocation(line: 161, column: 55, scope: !4187)
!4346 = !DILocation(line: 161, column: 57, scope: !4187)
!4347 = !DILocation(line: 161, column: 61, scope: !4187)
!4348 = !DILocation(line: 161, column: 67, scope: !4187)
!4349 = !DILocation(line: 161, column: 65, scope: !4187)
!4350 = !DILocation(line: 161, column: 50, scope: !4187)
!4351 = !DILocalVariable(name: "b10", scope: !4187, file: !266, line: 161, type: !52)
!4352 = !DILocation(line: 161, column: 71, scope: !4187)
!4353 = !DILocation(line: 161, column: 82, scope: !4187)
!4354 = !DILocation(line: 161, column: 84, scope: !4187)
!4355 = !DILocation(line: 161, column: 88, scope: !4187)
!4356 = !DILocation(line: 161, column: 94, scope: !4187)
!4357 = !DILocation(line: 161, column: 92, scope: !4187)
!4358 = !DILocation(line: 161, column: 77, scope: !4187)
!4359 = !DILocalVariable(name: "r11", scope: !4187, file: !266, line: 162, type: !52)
!4360 = !DILocation(line: 162, column: 17, scope: !4187)
!4361 = !DILocation(line: 162, column: 28, scope: !4187)
!4362 = !DILocation(line: 162, column: 30, scope: !4187)
!4363 = !DILocation(line: 162, column: 34, scope: !4187)
!4364 = !DILocation(line: 162, column: 40, scope: !4187)
!4365 = !DILocation(line: 162, column: 38, scope: !4187)
!4366 = !DILocation(line: 162, column: 23, scope: !4187)
!4367 = !DILocalVariable(name: "g11", scope: !4187, file: !266, line: 162, type: !52)
!4368 = !DILocation(line: 162, column: 44, scope: !4187)
!4369 = !DILocation(line: 162, column: 55, scope: !4187)
!4370 = !DILocation(line: 162, column: 57, scope: !4187)
!4371 = !DILocation(line: 162, column: 61, scope: !4187)
!4372 = !DILocation(line: 162, column: 67, scope: !4187)
!4373 = !DILocation(line: 162, column: 65, scope: !4187)
!4374 = !DILocation(line: 162, column: 50, scope: !4187)
!4375 = !DILocalVariable(name: "b11", scope: !4187, file: !266, line: 162, type: !52)
!4376 = !DILocation(line: 162, column: 71, scope: !4187)
!4377 = !DILocation(line: 162, column: 82, scope: !4187)
!4378 = !DILocation(line: 162, column: 84, scope: !4187)
!4379 = !DILocation(line: 162, column: 88, scope: !4187)
!4380 = !DILocation(line: 162, column: 94, scope: !4187)
!4381 = !DILocation(line: 162, column: 92, scope: !4187)
!4382 = !DILocation(line: 162, column: 77, scope: !4187)
!4383 = !DILocation(line: 166, column: 44, scope: !4187)
!4384 = !DILocation(line: 166, column: 62, scope: !4187)
!4385 = !DILocation(line: 166, column: 68, scope: !4187)
!4386 = !DILocation(line: 166, column: 66, scope: !4187)
!4387 = !DILocation(line: 166, column: 74, scope: !4187)
!4388 = !DILocation(line: 166, column: 80, scope: !4187)
!4389 = !DILocation(line: 166, column: 78, scope: !4187)
!4390 = !DILocation(line: 166, column: 72, scope: !4187)
!4391 = !DILocation(line: 166, column: 86, scope: !4187)
!4392 = !DILocation(line: 166, column: 92, scope: !4187)
!4393 = !DILocation(line: 166, column: 90, scope: !4187)
!4394 = !DILocation(line: 166, column: 84, scope: !4187)
!4395 = !DILocation(line: 166, column: 96, scope: !4187)
!4396 = !DILocation(line: 166, column: 103, scope: !4187)
!4397 = !DILocation(line: 166, column: 58, scope: !4187)
!4398 = !DILocation(line: 166, column: 28, scope: !4187)
!4399 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4202)
!4400 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4202)
!4401 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4202)
!4402 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4202)
!4403 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4202)
!4404 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4202)
!4405 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4202)
!4406 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4202)
!4407 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4202)
!4408 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4202)
!4409 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4202)
!4410 = !DILocation(line: 166, column: 18, scope: !4187)
!4411 = !DILocation(line: 166, column: 20, scope: !4187)
!4412 = !DILocation(line: 166, column: 13, scope: !4187)
!4413 = !DILocation(line: 166, column: 26, scope: !4187)
!4414 = !DILocation(line: 170, column: 47, scope: !4187)
!4415 = !DILocation(line: 170, column: 65, scope: !4187)
!4416 = !DILocation(line: 170, column: 71, scope: !4187)
!4417 = !DILocation(line: 170, column: 69, scope: !4187)
!4418 = !DILocation(line: 170, column: 77, scope: !4187)
!4419 = !DILocation(line: 170, column: 83, scope: !4187)
!4420 = !DILocation(line: 170, column: 81, scope: !4187)
!4421 = !DILocation(line: 170, column: 75, scope: !4187)
!4422 = !DILocation(line: 170, column: 89, scope: !4187)
!4423 = !DILocation(line: 170, column: 95, scope: !4187)
!4424 = !DILocation(line: 170, column: 93, scope: !4187)
!4425 = !DILocation(line: 170, column: 87, scope: !4187)
!4426 = !DILocation(line: 170, column: 99, scope: !4187)
!4427 = !DILocation(line: 170, column: 106, scope: !4187)
!4428 = !DILocation(line: 170, column: 61, scope: !4187)
!4429 = !DILocation(line: 170, column: 31, scope: !4187)
!4430 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4186)
!4431 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4186)
!4432 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4186)
!4433 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4186)
!4434 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4186)
!4435 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4186)
!4436 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4186)
!4437 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4186)
!4438 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4186)
!4439 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4186)
!4440 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4186)
!4441 = !DILocation(line: 170, column: 18, scope: !4187)
!4442 = !DILocation(line: 170, column: 20, scope: !4187)
!4443 = !DILocation(line: 170, column: 24, scope: !4187)
!4444 = !DILocation(line: 170, column: 13, scope: !4187)
!4445 = !DILocation(line: 170, column: 29, scope: !4187)
!4446 = !DILocation(line: 174, column: 52, scope: !4187)
!4447 = !DILocation(line: 174, column: 70, scope: !4187)
!4448 = !DILocation(line: 174, column: 76, scope: !4187)
!4449 = !DILocation(line: 174, column: 74, scope: !4187)
!4450 = !DILocation(line: 174, column: 82, scope: !4187)
!4451 = !DILocation(line: 174, column: 88, scope: !4187)
!4452 = !DILocation(line: 174, column: 86, scope: !4187)
!4453 = !DILocation(line: 174, column: 80, scope: !4187)
!4454 = !DILocation(line: 174, column: 94, scope: !4187)
!4455 = !DILocation(line: 174, column: 100, scope: !4187)
!4456 = !DILocation(line: 174, column: 98, scope: !4187)
!4457 = !DILocation(line: 174, column: 92, scope: !4187)
!4458 = !DILocation(line: 174, column: 104, scope: !4187)
!4459 = !DILocation(line: 174, column: 111, scope: !4187)
!4460 = !DILocation(line: 174, column: 66, scope: !4187)
!4461 = !DILocation(line: 174, column: 36, scope: !4187)
!4462 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4194)
!4463 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4194)
!4464 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4194)
!4465 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4194)
!4466 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4194)
!4467 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4194)
!4468 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4194)
!4469 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4194)
!4470 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4194)
!4471 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4194)
!4472 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4194)
!4473 = !DILocation(line: 174, column: 18, scope: !4187)
!4474 = !DILocation(line: 174, column: 20, scope: !4187)
!4475 = !DILocation(line: 174, column: 24, scope: !4187)
!4476 = !DILocation(line: 174, column: 30, scope: !4187)
!4477 = !DILocation(line: 174, column: 28, scope: !4187)
!4478 = !DILocation(line: 174, column: 13, scope: !4187)
!4479 = !DILocation(line: 174, column: 34, scope: !4187)
!4480 = !DILocation(line: 177, column: 52, scope: !4187)
!4481 = !DILocation(line: 177, column: 70, scope: !4187)
!4482 = !DILocation(line: 177, column: 76, scope: !4187)
!4483 = !DILocation(line: 177, column: 74, scope: !4187)
!4484 = !DILocation(line: 177, column: 82, scope: !4187)
!4485 = !DILocation(line: 177, column: 88, scope: !4187)
!4486 = !DILocation(line: 177, column: 86, scope: !4187)
!4487 = !DILocation(line: 177, column: 80, scope: !4187)
!4488 = !DILocation(line: 177, column: 94, scope: !4187)
!4489 = !DILocation(line: 177, column: 100, scope: !4187)
!4490 = !DILocation(line: 177, column: 98, scope: !4187)
!4491 = !DILocation(line: 177, column: 92, scope: !4187)
!4492 = !DILocation(line: 177, column: 104, scope: !4187)
!4493 = !DILocation(line: 177, column: 111, scope: !4187)
!4494 = !DILocation(line: 177, column: 66, scope: !4187)
!4495 = !DILocation(line: 177, column: 36, scope: !4187)
!4496 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4196)
!4497 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4196)
!4498 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4196)
!4499 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4196)
!4500 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4196)
!4501 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4196)
!4502 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4196)
!4503 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4196)
!4504 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4196)
!4505 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4196)
!4506 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4196)
!4507 = !DILocation(line: 177, column: 18, scope: !4187)
!4508 = !DILocation(line: 177, column: 20, scope: !4187)
!4509 = !DILocation(line: 177, column: 24, scope: !4187)
!4510 = !DILocation(line: 177, column: 30, scope: !4187)
!4511 = !DILocation(line: 177, column: 28, scope: !4187)
!4512 = !DILocation(line: 177, column: 13, scope: !4187)
!4513 = !DILocation(line: 177, column: 34, scope: !4187)
!4514 = !DILocation(line: 183, column: 56, scope: !4187)
!4515 = !DILocation(line: 183, column: 64, scope: !4187)
!4516 = !DILocation(line: 183, column: 61, scope: !4187)
!4517 = !DILocation(line: 183, column: 72, scope: !4187)
!4518 = !DILocation(line: 183, column: 69, scope: !4187)
!4519 = !DILocation(line: 183, column: 80, scope: !4187)
!4520 = !DILocation(line: 183, column: 77, scope: !4187)
!4521 = !DILocation(line: 183, column: 85, scope: !4187)
!4522 = !DILocation(line: 183, column: 90, scope: !4187)
!4523 = !DILocation(line: 183, column: 98, scope: !4187)
!4524 = !DILocation(line: 183, column: 96, scope: !4187)
!4525 = !DILocation(line: 183, column: 107, scope: !4187)
!4526 = !DILocation(line: 183, column: 115, scope: !4187)
!4527 = !DILocation(line: 183, column: 112, scope: !4187)
!4528 = !DILocation(line: 183, column: 123, scope: !4187)
!4529 = !DILocation(line: 183, column: 120, scope: !4187)
!4530 = !DILocation(line: 183, column: 131, scope: !4187)
!4531 = !DILocation(line: 183, column: 128, scope: !4187)
!4532 = !DILocation(line: 183, column: 136, scope: !4187)
!4533 = !DILocation(line: 183, column: 141, scope: !4187)
!4534 = !DILocation(line: 183, column: 149, scope: !4187)
!4535 = !DILocation(line: 183, column: 147, scope: !4187)
!4536 = !DILocation(line: 183, column: 102, scope: !4187)
!4537 = !DILocation(line: 183, column: 158, scope: !4187)
!4538 = !DILocation(line: 183, column: 166, scope: !4187)
!4539 = !DILocation(line: 183, column: 163, scope: !4187)
!4540 = !DILocation(line: 183, column: 174, scope: !4187)
!4541 = !DILocation(line: 183, column: 171, scope: !4187)
!4542 = !DILocation(line: 183, column: 182, scope: !4187)
!4543 = !DILocation(line: 183, column: 179, scope: !4187)
!4544 = !DILocation(line: 183, column: 187, scope: !4187)
!4545 = !DILocation(line: 183, column: 192, scope: !4187)
!4546 = !DILocation(line: 183, column: 200, scope: !4187)
!4547 = !DILocation(line: 183, column: 198, scope: !4187)
!4548 = !DILocation(line: 183, column: 153, scope: !4187)
!4549 = !DILocation(line: 183, column: 206, scope: !4187)
!4550 = !DILocation(line: 183, column: 213, scope: !4187)
!4551 = !DILocation(line: 183, column: 49, scope: !4187)
!4552 = !DILocation(line: 183, column: 23, scope: !4187)
!4553 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4198)
!4554 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4198)
!4555 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4198)
!4556 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4198)
!4557 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4198)
!4558 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4198)
!4559 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4198)
!4560 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4198)
!4561 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4198)
!4562 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4198)
!4563 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4198)
!4564 = !DILocation(line: 183, column: 18, scope: !4187)
!4565 = !DILocation(line: 183, column: 13, scope: !4187)
!4566 = !DILocation(line: 183, column: 21, scope: !4187)
!4567 = !DILocation(line: 187, column: 56, scope: !4187)
!4568 = !DILocation(line: 187, column: 64, scope: !4187)
!4569 = !DILocation(line: 187, column: 61, scope: !4187)
!4570 = !DILocation(line: 187, column: 72, scope: !4187)
!4571 = !DILocation(line: 187, column: 69, scope: !4187)
!4572 = !DILocation(line: 187, column: 80, scope: !4187)
!4573 = !DILocation(line: 187, column: 77, scope: !4187)
!4574 = !DILocation(line: 187, column: 85, scope: !4187)
!4575 = !DILocation(line: 187, column: 90, scope: !4187)
!4576 = !DILocation(line: 187, column: 98, scope: !4187)
!4577 = !DILocation(line: 187, column: 96, scope: !4187)
!4578 = !DILocation(line: 187, column: 109, scope: !4187)
!4579 = !DILocation(line: 187, column: 117, scope: !4187)
!4580 = !DILocation(line: 187, column: 114, scope: !4187)
!4581 = !DILocation(line: 187, column: 125, scope: !4187)
!4582 = !DILocation(line: 187, column: 122, scope: !4187)
!4583 = !DILocation(line: 187, column: 133, scope: !4187)
!4584 = !DILocation(line: 187, column: 130, scope: !4187)
!4585 = !DILocation(line: 187, column: 138, scope: !4187)
!4586 = !DILocation(line: 187, column: 143, scope: !4187)
!4587 = !DILocation(line: 187, column: 151, scope: !4187)
!4588 = !DILocation(line: 187, column: 149, scope: !4187)
!4589 = !DILocation(line: 187, column: 104, scope: !4187)
!4590 = !DILocation(line: 187, column: 160, scope: !4187)
!4591 = !DILocation(line: 187, column: 168, scope: !4187)
!4592 = !DILocation(line: 187, column: 165, scope: !4187)
!4593 = !DILocation(line: 187, column: 176, scope: !4187)
!4594 = !DILocation(line: 187, column: 173, scope: !4187)
!4595 = !DILocation(line: 187, column: 184, scope: !4187)
!4596 = !DILocation(line: 187, column: 181, scope: !4187)
!4597 = !DILocation(line: 187, column: 189, scope: !4187)
!4598 = !DILocation(line: 187, column: 194, scope: !4187)
!4599 = !DILocation(line: 187, column: 202, scope: !4187)
!4600 = !DILocation(line: 187, column: 200, scope: !4187)
!4601 = !DILocation(line: 187, column: 155, scope: !4187)
!4602 = !DILocation(line: 187, column: 206, scope: !4187)
!4603 = !DILocation(line: 187, column: 213, scope: !4187)
!4604 = !DILocation(line: 187, column: 49, scope: !4187)
!4605 = !DILocation(line: 187, column: 23, scope: !4187)
!4606 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !4200)
!4607 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !4200)
!4608 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !4200)
!4609 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !4200)
!4610 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !4200)
!4611 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !4200)
!4612 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !4200)
!4613 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !4200)
!4614 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !4200)
!4615 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !4200)
!4616 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !4200)
!4617 = !DILocation(line: 187, column: 18, scope: !4187)
!4618 = !DILocation(line: 187, column: 13, scope: !4187)
!4619 = !DILocation(line: 187, column: 21, scope: !4187)
!4620 = !DILocation(line: 191, column: 9, scope: !4187)
!4621 = !DILocation(line: 156, column: 29, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !4188, file: !266, discriminator: 2)
!4623 = !DILocation(line: 156, column: 9, scope: !4622)
!4624 = distinct !{!4624, !4625}
!4625 = !DILocation(line: 156, column: 9, scope: !4190)
!4626 = !DILocation(line: 193, column: 17, scope: !4190)
!4627 = !DILocation(line: 193, column: 20, scope: !4190)
!4628 = !DILocation(line: 193, column: 14, scope: !4190)
!4629 = !DILocation(line: 194, column: 17, scope: !4190)
!4630 = !DILocation(line: 194, column: 31, scope: !4190)
!4631 = !DILocation(line: 194, column: 14, scope: !4190)
!4632 = !DILocation(line: 195, column: 17, scope: !4190)
!4633 = !DILocation(line: 195, column: 31, scope: !4190)
!4634 = !DILocation(line: 195, column: 14, scope: !4190)
!4635 = !DILocation(line: 196, column: 17, scope: !4190)
!4636 = !DILocation(line: 196, column: 19, scope: !4190)
!4637 = !DILocation(line: 196, column: 14, scope: !4190)
!4638 = !DILocation(line: 197, column: 17, scope: !4190)
!4639 = !DILocation(line: 197, column: 19, scope: !4190)
!4640 = !DILocation(line: 197, column: 14, scope: !4190)
!4641 = !DILocation(line: 198, column: 17, scope: !4190)
!4642 = !DILocation(line: 198, column: 19, scope: !4190)
!4643 = !DILocation(line: 198, column: 14, scope: !4190)
!4644 = !DILocation(line: 199, column: 5, scope: !4190)
!4645 = !DILocation(line: 155, column: 25, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !4191, file: !266, discriminator: 2)
!4647 = !DILocation(line: 155, column: 5, scope: !4646)
!4648 = distinct !{!4648, !4649}
!4649 = !DILocation(line: 155, column: 5, scope: !4184)
!4650 = !DILocation(line: 200, column: 1, scope: !4184)
!4651 = distinct !DISubprogram(name: "rgb2yuv_444p10_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!4652 = !DILocalVariable(name: "a", arg: 1, scope: !4653, file: !269, line: 229, type: !52)
!4653 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !269, file: !269, line: 229, type: !4654, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!4656, !52, !52}
!4656 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!4657 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4658)
!4658 = distinct !DILocation(line: 183, column: 23, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !266, line: 156, column: 33)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !266, line: 156, column: 9)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !266, line: 156, column: 9)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !266, line: 155, column: 29)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !266, line: 155, column: 5)
!4664 = distinct !DILexicalBlock(scope: !4651, file: !266, line: 155, column: 5)
!4665 = !DILocalVariable(name: "p", arg: 2, scope: !4653, file: !269, line: 229, type: !52)
!4666 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4658)
!4667 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4668)
!4668 = distinct !DILocation(line: 187, column: 23, scope: !4659)
!4669 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4668)
!4670 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4671)
!4671 = distinct !DILocation(line: 166, column: 28, scope: !4659)
!4672 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4671)
!4673 = !DILocalVariable(name: "_yuv", arg: 1, scope: !4651, file: !266, line: 130, type: !17)
!4674 = !DILocation(line: 130, column: 39, scope: !4651)
!4675 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !4651, file: !266, line: 130, type: !50)
!4676 = !DILocation(line: 130, column: 64, scope: !4651)
!4677 = !DILocalVariable(name: "rgb", arg: 3, scope: !4651, file: !266, line: 131, type: !43)
!4678 = !DILocation(line: 131, column: 34, scope: !4651)
!4679 = !DILocalVariable(name: "s", arg: 4, scope: !4651, file: !266, line: 131, type: !47)
!4680 = !DILocation(line: 131, column: 52, scope: !4651)
!4681 = !DILocalVariable(name: "w", arg: 5, scope: !4651, file: !266, line: 132, type: !52)
!4682 = !DILocation(line: 132, column: 29, scope: !4651)
!4683 = !DILocalVariable(name: "h", arg: 6, scope: !4651, file: !266, line: 132, type: !52)
!4684 = !DILocation(line: 132, column: 36, scope: !4651)
!4685 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !4651, file: !266, line: 132, type: !53)
!4686 = !DILocation(line: 132, column: 53, scope: !4651)
!4687 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !4651, file: !266, line: 133, type: !59)
!4688 = !DILocation(line: 133, column: 39, scope: !4651)
!4689 = !DILocalVariable(name: "yuv", scope: !4651, file: !266, line: 135, type: !22)
!4690 = !DILocation(line: 135, column: 16, scope: !4651)
!4691 = !DILocation(line: 135, column: 36, scope: !4651)
!4692 = !DILocation(line: 135, column: 22, scope: !4651)
!4693 = !DILocalVariable(name: "yuv0", scope: !4651, file: !266, line: 136, type: !23)
!4694 = !DILocation(line: 136, column: 15, scope: !4651)
!4695 = !DILocation(line: 136, column: 22, scope: !4651)
!4696 = !DILocalVariable(name: "yuv1", scope: !4651, file: !266, line: 136, type: !23)
!4697 = !DILocation(line: 136, column: 31, scope: !4651)
!4698 = !DILocation(line: 136, column: 38, scope: !4651)
!4699 = !DILocalVariable(name: "yuv2", scope: !4651, file: !266, line: 136, type: !23)
!4700 = !DILocation(line: 136, column: 47, scope: !4651)
!4701 = !DILocation(line: 136, column: 54, scope: !4651)
!4702 = !DILocalVariable(name: "rgb0", scope: !4651, file: !266, line: 137, type: !59)
!4703 = !DILocation(line: 137, column: 20, scope: !4651)
!4704 = !DILocation(line: 137, column: 27, scope: !4651)
!4705 = !DILocalVariable(name: "rgb1", scope: !4651, file: !266, line: 137, type: !59)
!4706 = !DILocation(line: 137, column: 36, scope: !4651)
!4707 = !DILocation(line: 137, column: 43, scope: !4651)
!4708 = !DILocalVariable(name: "rgb2", scope: !4651, file: !266, line: 137, type: !59)
!4709 = !DILocation(line: 137, column: 52, scope: !4651)
!4710 = !DILocation(line: 137, column: 59, scope: !4651)
!4711 = !DILocalVariable(name: "y", scope: !4651, file: !266, line: 138, type: !52)
!4712 = !DILocation(line: 138, column: 9, scope: !4651)
!4713 = !DILocalVariable(name: "x", scope: !4651, file: !266, line: 138, type: !52)
!4714 = !DILocation(line: 138, column: 12, scope: !4651)
!4715 = !DILocalVariable(name: "sh", scope: !4651, file: !266, line: 139, type: !343)
!4716 = !DILocation(line: 139, column: 15, scope: !4651)
!4717 = !DILocalVariable(name: "rnd", scope: !4651, file: !266, line: 140, type: !343)
!4718 = !DILocation(line: 140, column: 15, scope: !4651)
!4719 = !DILocalVariable(name: "cry", scope: !4651, file: !266, line: 141, type: !52)
!4720 = !DILocation(line: 141, column: 9, scope: !4651)
!4721 = !DILocation(line: 141, column: 15, scope: !4651)
!4722 = !DILocalVariable(name: "cgy", scope: !4651, file: !266, line: 142, type: !52)
!4723 = !DILocation(line: 142, column: 9, scope: !4651)
!4724 = !DILocation(line: 142, column: 15, scope: !4651)
!4725 = !DILocalVariable(name: "cby", scope: !4651, file: !266, line: 143, type: !52)
!4726 = !DILocation(line: 143, column: 9, scope: !4651)
!4727 = !DILocation(line: 143, column: 15, scope: !4651)
!4728 = !DILocalVariable(name: "cru", scope: !4651, file: !266, line: 144, type: !52)
!4729 = !DILocation(line: 144, column: 9, scope: !4651)
!4730 = !DILocation(line: 144, column: 15, scope: !4651)
!4731 = !DILocalVariable(name: "cgu", scope: !4651, file: !266, line: 145, type: !52)
!4732 = !DILocation(line: 145, column: 9, scope: !4651)
!4733 = !DILocation(line: 145, column: 15, scope: !4651)
!4734 = !DILocalVariable(name: "cburv", scope: !4651, file: !266, line: 146, type: !52)
!4735 = !DILocation(line: 146, column: 9, scope: !4651)
!4736 = !DILocation(line: 146, column: 17, scope: !4651)
!4737 = !DILocalVariable(name: "cgv", scope: !4651, file: !266, line: 147, type: !52)
!4738 = !DILocation(line: 147, column: 9, scope: !4651)
!4739 = !DILocation(line: 147, column: 15, scope: !4651)
!4740 = !DILocalVariable(name: "cbv", scope: !4651, file: !266, line: 148, type: !52)
!4741 = !DILocation(line: 148, column: 9, scope: !4651)
!4742 = !DILocation(line: 148, column: 15, scope: !4651)
!4743 = !DILocalVariable(name: "s0", scope: !4651, file: !266, line: 149, type: !47)
!4744 = !DILocation(line: 149, column: 15, scope: !4651)
!4745 = !DILocation(line: 149, column: 20, scope: !4651)
!4746 = !DILocation(line: 149, column: 34, scope: !4651)
!4747 = !DILocalVariable(name: "uv_offset", scope: !4651, file: !266, line: 150, type: !343)
!4748 = !DILocation(line: 150, column: 15, scope: !4651)
!4749 = !DILocation(line: 153, column: 58, scope: !4651)
!4750 = !DILocation(line: 153, column: 61, scope: !4651)
!4751 = !DILocation(line: 153, column: 72, scope: !4651)
!4752 = !DILocation(line: 153, column: 77, scope: !4651)
!4753 = !DILocation(line: 153, column: 7, scope: !4651)
!4754 = !DILocation(line: 154, column: 58, scope: !4651)
!4755 = !DILocation(line: 154, column: 61, scope: !4651)
!4756 = !DILocation(line: 154, column: 72, scope: !4651)
!4757 = !DILocation(line: 154, column: 77, scope: !4651)
!4758 = !DILocation(line: 154, column: 7, scope: !4651)
!4759 = !DILocation(line: 155, column: 12, scope: !4664)
!4760 = !DILocation(line: 155, column: 10, scope: !4664)
!4761 = !DILocation(line: 155, column: 17, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4663, file: !266, discriminator: 1)
!4763 = !DILocation(line: 155, column: 21, scope: !4762)
!4764 = !DILocation(line: 155, column: 19, scope: !4762)
!4765 = !DILocation(line: 155, column: 5, scope: !4762)
!4766 = !DILocation(line: 156, column: 16, scope: !4661)
!4767 = !DILocation(line: 156, column: 14, scope: !4661)
!4768 = !DILocation(line: 156, column: 21, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4660, file: !266, discriminator: 1)
!4770 = !DILocation(line: 156, column: 25, scope: !4769)
!4771 = !DILocation(line: 156, column: 23, scope: !4769)
!4772 = !DILocation(line: 156, column: 9, scope: !4769)
!4773 = !DILocalVariable(name: "r00", scope: !4659, file: !266, line: 157, type: !52)
!4774 = !DILocation(line: 157, column: 17, scope: !4659)
!4775 = !DILocation(line: 157, column: 28, scope: !4659)
!4776 = !DILocation(line: 157, column: 30, scope: !4659)
!4777 = !DILocation(line: 157, column: 23, scope: !4659)
!4778 = !DILocalVariable(name: "g00", scope: !4659, file: !266, line: 157, type: !52)
!4779 = !DILocation(line: 157, column: 37, scope: !4659)
!4780 = !DILocation(line: 157, column: 48, scope: !4659)
!4781 = !DILocation(line: 157, column: 50, scope: !4659)
!4782 = !DILocation(line: 157, column: 43, scope: !4659)
!4783 = !DILocalVariable(name: "b00", scope: !4659, file: !266, line: 157, type: !52)
!4784 = !DILocation(line: 157, column: 57, scope: !4659)
!4785 = !DILocation(line: 157, column: 68, scope: !4659)
!4786 = !DILocation(line: 157, column: 70, scope: !4659)
!4787 = !DILocation(line: 157, column: 63, scope: !4659)
!4788 = !DILocation(line: 166, column: 45, scope: !4659)
!4789 = !DILocation(line: 166, column: 63, scope: !4659)
!4790 = !DILocation(line: 166, column: 69, scope: !4659)
!4791 = !DILocation(line: 166, column: 67, scope: !4659)
!4792 = !DILocation(line: 166, column: 75, scope: !4659)
!4793 = !DILocation(line: 166, column: 81, scope: !4659)
!4794 = !DILocation(line: 166, column: 79, scope: !4659)
!4795 = !DILocation(line: 166, column: 73, scope: !4659)
!4796 = !DILocation(line: 166, column: 87, scope: !4659)
!4797 = !DILocation(line: 166, column: 93, scope: !4659)
!4798 = !DILocation(line: 166, column: 91, scope: !4659)
!4799 = !DILocation(line: 166, column: 85, scope: !4659)
!4800 = !DILocation(line: 166, column: 97, scope: !4659)
!4801 = !DILocation(line: 166, column: 104, scope: !4659)
!4802 = !DILocation(line: 166, column: 59, scope: !4659)
!4803 = !DILocation(line: 166, column: 28, scope: !4659)
!4804 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4671)
!4805 = distinct !DILexicalBlock(scope: !4653, file: !269, line: 231, column: 9)
!4806 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4671)
!4807 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4671)
!4808 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4671)
!4809 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4671)
!4810 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4671)
!4811 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4671)
!4812 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4671)
!4813 = !DILexicalBlockFile(scope: !4805, file: !269, discriminator: 1)
!4814 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4671)
!4815 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4671)
!4816 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4671)
!4817 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4671)
!4818 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4671)
!4819 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4671)
!4820 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4671)
!4821 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4671)
!4822 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4671)
!4823 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4671)
!4824 = !DILocation(line: 166, column: 18, scope: !4659)
!4825 = !DILocation(line: 166, column: 20, scope: !4659)
!4826 = !DILocation(line: 166, column: 13, scope: !4659)
!4827 = !DILocation(line: 166, column: 26, scope: !4659)
!4828 = !DILocation(line: 183, column: 55, scope: !4659)
!4829 = !DILocation(line: 183, column: 62, scope: !4659)
!4830 = !DILocation(line: 183, column: 60, scope: !4659)
!4831 = !DILocation(line: 183, column: 69, scope: !4659)
!4832 = !DILocation(line: 183, column: 76, scope: !4659)
!4833 = !DILocation(line: 183, column: 74, scope: !4659)
!4834 = !DILocation(line: 183, column: 66, scope: !4659)
!4835 = !DILocation(line: 183, column: 83, scope: !4659)
!4836 = !DILocation(line: 183, column: 90, scope: !4659)
!4837 = !DILocation(line: 183, column: 88, scope: !4659)
!4838 = !DILocation(line: 183, column: 80, scope: !4659)
!4839 = !DILocation(line: 183, column: 96, scope: !4659)
!4840 = !DILocation(line: 183, column: 103, scope: !4659)
!4841 = !DILocation(line: 183, column: 50, scope: !4659)
!4842 = !DILocation(line: 183, column: 23, scope: !4659)
!4843 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4658)
!4844 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4658)
!4845 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4658)
!4846 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4658)
!4847 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4658)
!4848 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4658)
!4849 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4658)
!4850 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4658)
!4851 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4658)
!4852 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4658)
!4853 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4658)
!4854 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4658)
!4855 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4658)
!4856 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4658)
!4857 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4658)
!4858 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4658)
!4859 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4658)
!4860 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4658)
!4861 = !DILocation(line: 183, column: 18, scope: !4659)
!4862 = !DILocation(line: 183, column: 13, scope: !4659)
!4863 = !DILocation(line: 183, column: 21, scope: !4659)
!4864 = !DILocation(line: 187, column: 55, scope: !4659)
!4865 = !DILocation(line: 187, column: 62, scope: !4659)
!4866 = !DILocation(line: 187, column: 60, scope: !4659)
!4867 = !DILocation(line: 187, column: 71, scope: !4659)
!4868 = !DILocation(line: 187, column: 78, scope: !4659)
!4869 = !DILocation(line: 187, column: 76, scope: !4659)
!4870 = !DILocation(line: 187, column: 68, scope: !4659)
!4871 = !DILocation(line: 187, column: 85, scope: !4659)
!4872 = !DILocation(line: 187, column: 92, scope: !4659)
!4873 = !DILocation(line: 187, column: 90, scope: !4659)
!4874 = !DILocation(line: 187, column: 82, scope: !4659)
!4875 = !DILocation(line: 187, column: 96, scope: !4659)
!4876 = !DILocation(line: 187, column: 103, scope: !4659)
!4877 = !DILocation(line: 187, column: 50, scope: !4659)
!4878 = !DILocation(line: 187, column: 23, scope: !4659)
!4879 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4668)
!4880 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4668)
!4881 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4668)
!4882 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4668)
!4883 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4668)
!4884 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4668)
!4885 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4668)
!4886 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4668)
!4887 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4668)
!4888 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4668)
!4889 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4668)
!4890 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4668)
!4891 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4668)
!4892 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4668)
!4893 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4668)
!4894 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4668)
!4895 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4668)
!4896 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4668)
!4897 = !DILocation(line: 187, column: 18, scope: !4659)
!4898 = !DILocation(line: 187, column: 13, scope: !4659)
!4899 = !DILocation(line: 187, column: 21, scope: !4659)
!4900 = !DILocation(line: 191, column: 9, scope: !4659)
!4901 = !DILocation(line: 156, column: 29, scope: !4902)
!4902 = !DILexicalBlockFile(scope: !4660, file: !266, discriminator: 2)
!4903 = !DILocation(line: 156, column: 9, scope: !4902)
!4904 = distinct !{!4904, !4905}
!4905 = !DILocation(line: 156, column: 9, scope: !4662)
!4906 = !DILocation(line: 193, column: 17, scope: !4662)
!4907 = !DILocation(line: 193, column: 20, scope: !4662)
!4908 = !DILocation(line: 193, column: 14, scope: !4662)
!4909 = !DILocation(line: 194, column: 17, scope: !4662)
!4910 = !DILocation(line: 194, column: 31, scope: !4662)
!4911 = !DILocation(line: 194, column: 14, scope: !4662)
!4912 = !DILocation(line: 195, column: 17, scope: !4662)
!4913 = !DILocation(line: 195, column: 31, scope: !4662)
!4914 = !DILocation(line: 195, column: 14, scope: !4662)
!4915 = !DILocation(line: 196, column: 17, scope: !4662)
!4916 = !DILocation(line: 196, column: 19, scope: !4662)
!4917 = !DILocation(line: 196, column: 14, scope: !4662)
!4918 = !DILocation(line: 197, column: 17, scope: !4662)
!4919 = !DILocation(line: 197, column: 19, scope: !4662)
!4920 = !DILocation(line: 197, column: 14, scope: !4662)
!4921 = !DILocation(line: 198, column: 17, scope: !4662)
!4922 = !DILocation(line: 198, column: 19, scope: !4662)
!4923 = !DILocation(line: 198, column: 14, scope: !4662)
!4924 = !DILocation(line: 199, column: 5, scope: !4662)
!4925 = !DILocation(line: 155, column: 25, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4663, file: !266, discriminator: 2)
!4927 = !DILocation(line: 155, column: 5, scope: !4926)
!4928 = distinct !{!4928, !4929}
!4929 = !DILocation(line: 155, column: 5, scope: !4651)
!4930 = !DILocation(line: 200, column: 1, scope: !4651)
!4931 = distinct !DISubprogram(name: "rgb2yuv_422p10_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!4932 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4933)
!4933 = distinct !DILocation(line: 170, column: 31, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !266, line: 156, column: 33)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !266, line: 156, column: 9)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !266, line: 156, column: 9)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !266, line: 155, column: 29)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !266, line: 155, column: 5)
!4939 = distinct !DILexicalBlock(scope: !4931, file: !266, line: 155, column: 5)
!4940 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4933)
!4941 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4942)
!4942 = distinct !DILocation(line: 183, column: 23, scope: !4934)
!4943 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4942)
!4944 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4945)
!4945 = distinct !DILocation(line: 187, column: 23, scope: !4934)
!4946 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4945)
!4947 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !4948)
!4948 = distinct !DILocation(line: 166, column: 28, scope: !4934)
!4949 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !4948)
!4950 = !DILocalVariable(name: "_yuv", arg: 1, scope: !4931, file: !266, line: 130, type: !17)
!4951 = !DILocation(line: 130, column: 39, scope: !4931)
!4952 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !4931, file: !266, line: 130, type: !50)
!4953 = !DILocation(line: 130, column: 64, scope: !4931)
!4954 = !DILocalVariable(name: "rgb", arg: 3, scope: !4931, file: !266, line: 131, type: !43)
!4955 = !DILocation(line: 131, column: 34, scope: !4931)
!4956 = !DILocalVariable(name: "s", arg: 4, scope: !4931, file: !266, line: 131, type: !47)
!4957 = !DILocation(line: 131, column: 52, scope: !4931)
!4958 = !DILocalVariable(name: "w", arg: 5, scope: !4931, file: !266, line: 132, type: !52)
!4959 = !DILocation(line: 132, column: 29, scope: !4931)
!4960 = !DILocalVariable(name: "h", arg: 6, scope: !4931, file: !266, line: 132, type: !52)
!4961 = !DILocation(line: 132, column: 36, scope: !4931)
!4962 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !4931, file: !266, line: 132, type: !53)
!4963 = !DILocation(line: 132, column: 53, scope: !4931)
!4964 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !4931, file: !266, line: 133, type: !59)
!4965 = !DILocation(line: 133, column: 39, scope: !4931)
!4966 = !DILocalVariable(name: "yuv", scope: !4931, file: !266, line: 135, type: !22)
!4967 = !DILocation(line: 135, column: 16, scope: !4931)
!4968 = !DILocation(line: 135, column: 36, scope: !4931)
!4969 = !DILocation(line: 135, column: 22, scope: !4931)
!4970 = !DILocalVariable(name: "yuv0", scope: !4931, file: !266, line: 136, type: !23)
!4971 = !DILocation(line: 136, column: 15, scope: !4931)
!4972 = !DILocation(line: 136, column: 22, scope: !4931)
!4973 = !DILocalVariable(name: "yuv1", scope: !4931, file: !266, line: 136, type: !23)
!4974 = !DILocation(line: 136, column: 31, scope: !4931)
!4975 = !DILocation(line: 136, column: 38, scope: !4931)
!4976 = !DILocalVariable(name: "yuv2", scope: !4931, file: !266, line: 136, type: !23)
!4977 = !DILocation(line: 136, column: 47, scope: !4931)
!4978 = !DILocation(line: 136, column: 54, scope: !4931)
!4979 = !DILocalVariable(name: "rgb0", scope: !4931, file: !266, line: 137, type: !59)
!4980 = !DILocation(line: 137, column: 20, scope: !4931)
!4981 = !DILocation(line: 137, column: 27, scope: !4931)
!4982 = !DILocalVariable(name: "rgb1", scope: !4931, file: !266, line: 137, type: !59)
!4983 = !DILocation(line: 137, column: 36, scope: !4931)
!4984 = !DILocation(line: 137, column: 43, scope: !4931)
!4985 = !DILocalVariable(name: "rgb2", scope: !4931, file: !266, line: 137, type: !59)
!4986 = !DILocation(line: 137, column: 52, scope: !4931)
!4987 = !DILocation(line: 137, column: 59, scope: !4931)
!4988 = !DILocalVariable(name: "y", scope: !4931, file: !266, line: 138, type: !52)
!4989 = !DILocation(line: 138, column: 9, scope: !4931)
!4990 = !DILocalVariable(name: "x", scope: !4931, file: !266, line: 138, type: !52)
!4991 = !DILocation(line: 138, column: 12, scope: !4931)
!4992 = !DILocalVariable(name: "sh", scope: !4931, file: !266, line: 139, type: !343)
!4993 = !DILocation(line: 139, column: 15, scope: !4931)
!4994 = !DILocalVariable(name: "rnd", scope: !4931, file: !266, line: 140, type: !343)
!4995 = !DILocation(line: 140, column: 15, scope: !4931)
!4996 = !DILocalVariable(name: "cry", scope: !4931, file: !266, line: 141, type: !52)
!4997 = !DILocation(line: 141, column: 9, scope: !4931)
!4998 = !DILocation(line: 141, column: 15, scope: !4931)
!4999 = !DILocalVariable(name: "cgy", scope: !4931, file: !266, line: 142, type: !52)
!5000 = !DILocation(line: 142, column: 9, scope: !4931)
!5001 = !DILocation(line: 142, column: 15, scope: !4931)
!5002 = !DILocalVariable(name: "cby", scope: !4931, file: !266, line: 143, type: !52)
!5003 = !DILocation(line: 143, column: 9, scope: !4931)
!5004 = !DILocation(line: 143, column: 15, scope: !4931)
!5005 = !DILocalVariable(name: "cru", scope: !4931, file: !266, line: 144, type: !52)
!5006 = !DILocation(line: 144, column: 9, scope: !4931)
!5007 = !DILocation(line: 144, column: 15, scope: !4931)
!5008 = !DILocalVariable(name: "cgu", scope: !4931, file: !266, line: 145, type: !52)
!5009 = !DILocation(line: 145, column: 9, scope: !4931)
!5010 = !DILocation(line: 145, column: 15, scope: !4931)
!5011 = !DILocalVariable(name: "cburv", scope: !4931, file: !266, line: 146, type: !52)
!5012 = !DILocation(line: 146, column: 9, scope: !4931)
!5013 = !DILocation(line: 146, column: 17, scope: !4931)
!5014 = !DILocalVariable(name: "cgv", scope: !4931, file: !266, line: 147, type: !52)
!5015 = !DILocation(line: 147, column: 9, scope: !4931)
!5016 = !DILocation(line: 147, column: 15, scope: !4931)
!5017 = !DILocalVariable(name: "cbv", scope: !4931, file: !266, line: 148, type: !52)
!5018 = !DILocation(line: 148, column: 9, scope: !4931)
!5019 = !DILocation(line: 148, column: 15, scope: !4931)
!5020 = !DILocalVariable(name: "s0", scope: !4931, file: !266, line: 149, type: !47)
!5021 = !DILocation(line: 149, column: 15, scope: !4931)
!5022 = !DILocation(line: 149, column: 20, scope: !4931)
!5023 = !DILocation(line: 149, column: 34, scope: !4931)
!5024 = !DILocalVariable(name: "uv_offset", scope: !4931, file: !266, line: 150, type: !343)
!5025 = !DILocation(line: 150, column: 15, scope: !4931)
!5026 = !DILocation(line: 153, column: 58, scope: !4931)
!5027 = !DILocation(line: 153, column: 61, scope: !4931)
!5028 = !DILocation(line: 153, column: 72, scope: !4931)
!5029 = !DILocation(line: 153, column: 77, scope: !4931)
!5030 = !DILocation(line: 153, column: 7, scope: !4931)
!5031 = !DILocation(line: 154, column: 58, scope: !4931)
!5032 = !DILocation(line: 154, column: 61, scope: !4931)
!5033 = !DILocation(line: 154, column: 72, scope: !4931)
!5034 = !DILocation(line: 154, column: 77, scope: !4931)
!5035 = !DILocation(line: 154, column: 7, scope: !4931)
!5036 = !DILocation(line: 155, column: 12, scope: !4939)
!5037 = !DILocation(line: 155, column: 10, scope: !4939)
!5038 = !DILocation(line: 155, column: 17, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !4938, file: !266, discriminator: 1)
!5040 = !DILocation(line: 155, column: 21, scope: !5039)
!5041 = !DILocation(line: 155, column: 19, scope: !5039)
!5042 = !DILocation(line: 155, column: 5, scope: !5039)
!5043 = !DILocation(line: 156, column: 16, scope: !4936)
!5044 = !DILocation(line: 156, column: 14, scope: !4936)
!5045 = !DILocation(line: 156, column: 21, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !4935, file: !266, discriminator: 1)
!5047 = !DILocation(line: 156, column: 25, scope: !5046)
!5048 = !DILocation(line: 156, column: 23, scope: !5046)
!5049 = !DILocation(line: 156, column: 9, scope: !5046)
!5050 = !DILocalVariable(name: "r00", scope: !4934, file: !266, line: 157, type: !52)
!5051 = !DILocation(line: 157, column: 17, scope: !4934)
!5052 = !DILocation(line: 157, column: 28, scope: !4934)
!5053 = !DILocation(line: 157, column: 30, scope: !4934)
!5054 = !DILocation(line: 157, column: 23, scope: !4934)
!5055 = !DILocalVariable(name: "g00", scope: !4934, file: !266, line: 157, type: !52)
!5056 = !DILocation(line: 157, column: 37, scope: !4934)
!5057 = !DILocation(line: 157, column: 48, scope: !4934)
!5058 = !DILocation(line: 157, column: 50, scope: !4934)
!5059 = !DILocation(line: 157, column: 43, scope: !4934)
!5060 = !DILocalVariable(name: "b00", scope: !4934, file: !266, line: 157, type: !52)
!5061 = !DILocation(line: 157, column: 57, scope: !4934)
!5062 = !DILocation(line: 157, column: 68, scope: !4934)
!5063 = !DILocation(line: 157, column: 70, scope: !4934)
!5064 = !DILocation(line: 157, column: 63, scope: !4934)
!5065 = !DILocalVariable(name: "r01", scope: !4934, file: !266, line: 159, type: !52)
!5066 = !DILocation(line: 159, column: 17, scope: !4934)
!5067 = !DILocation(line: 159, column: 28, scope: !4934)
!5068 = !DILocation(line: 159, column: 30, scope: !4934)
!5069 = !DILocation(line: 159, column: 34, scope: !4934)
!5070 = !DILocation(line: 159, column: 23, scope: !4934)
!5071 = !DILocalVariable(name: "g01", scope: !4934, file: !266, line: 159, type: !52)
!5072 = !DILocation(line: 159, column: 40, scope: !4934)
!5073 = !DILocation(line: 159, column: 51, scope: !4934)
!5074 = !DILocation(line: 159, column: 53, scope: !4934)
!5075 = !DILocation(line: 159, column: 57, scope: !4934)
!5076 = !DILocation(line: 159, column: 46, scope: !4934)
!5077 = !DILocalVariable(name: "b01", scope: !4934, file: !266, line: 159, type: !52)
!5078 = !DILocation(line: 159, column: 63, scope: !4934)
!5079 = !DILocation(line: 159, column: 74, scope: !4934)
!5080 = !DILocation(line: 159, column: 76, scope: !4934)
!5081 = !DILocation(line: 159, column: 80, scope: !4934)
!5082 = !DILocation(line: 159, column: 69, scope: !4934)
!5083 = !DILocation(line: 166, column: 45, scope: !4934)
!5084 = !DILocation(line: 166, column: 63, scope: !4934)
!5085 = !DILocation(line: 166, column: 69, scope: !4934)
!5086 = !DILocation(line: 166, column: 67, scope: !4934)
!5087 = !DILocation(line: 166, column: 75, scope: !4934)
!5088 = !DILocation(line: 166, column: 81, scope: !4934)
!5089 = !DILocation(line: 166, column: 79, scope: !4934)
!5090 = !DILocation(line: 166, column: 73, scope: !4934)
!5091 = !DILocation(line: 166, column: 87, scope: !4934)
!5092 = !DILocation(line: 166, column: 93, scope: !4934)
!5093 = !DILocation(line: 166, column: 91, scope: !4934)
!5094 = !DILocation(line: 166, column: 85, scope: !4934)
!5095 = !DILocation(line: 166, column: 97, scope: !4934)
!5096 = !DILocation(line: 166, column: 104, scope: !4934)
!5097 = !DILocation(line: 166, column: 59, scope: !4934)
!5098 = !DILocation(line: 166, column: 28, scope: !4934)
!5099 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4948)
!5100 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4948)
!5101 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4948)
!5102 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4948)
!5103 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4948)
!5104 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4948)
!5105 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4948)
!5106 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4948)
!5107 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4948)
!5108 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4948)
!5109 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4948)
!5110 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4948)
!5111 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4948)
!5112 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4948)
!5113 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4948)
!5114 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4948)
!5115 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4948)
!5116 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4948)
!5117 = !DILocation(line: 166, column: 18, scope: !4934)
!5118 = !DILocation(line: 166, column: 20, scope: !4934)
!5119 = !DILocation(line: 166, column: 13, scope: !4934)
!5120 = !DILocation(line: 166, column: 26, scope: !4934)
!5121 = !DILocation(line: 170, column: 48, scope: !4934)
!5122 = !DILocation(line: 170, column: 66, scope: !4934)
!5123 = !DILocation(line: 170, column: 72, scope: !4934)
!5124 = !DILocation(line: 170, column: 70, scope: !4934)
!5125 = !DILocation(line: 170, column: 78, scope: !4934)
!5126 = !DILocation(line: 170, column: 84, scope: !4934)
!5127 = !DILocation(line: 170, column: 82, scope: !4934)
!5128 = !DILocation(line: 170, column: 76, scope: !4934)
!5129 = !DILocation(line: 170, column: 90, scope: !4934)
!5130 = !DILocation(line: 170, column: 96, scope: !4934)
!5131 = !DILocation(line: 170, column: 94, scope: !4934)
!5132 = !DILocation(line: 170, column: 88, scope: !4934)
!5133 = !DILocation(line: 170, column: 100, scope: !4934)
!5134 = !DILocation(line: 170, column: 107, scope: !4934)
!5135 = !DILocation(line: 170, column: 62, scope: !4934)
!5136 = !DILocation(line: 170, column: 31, scope: !4934)
!5137 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4933)
!5138 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4933)
!5139 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4933)
!5140 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4933)
!5141 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4933)
!5142 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4933)
!5143 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4933)
!5144 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4933)
!5145 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4933)
!5146 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4933)
!5147 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4933)
!5148 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4933)
!5149 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4933)
!5150 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4933)
!5151 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4933)
!5152 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4933)
!5153 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4933)
!5154 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4933)
!5155 = !DILocation(line: 170, column: 18, scope: !4934)
!5156 = !DILocation(line: 170, column: 20, scope: !4934)
!5157 = !DILocation(line: 170, column: 24, scope: !4934)
!5158 = !DILocation(line: 170, column: 13, scope: !4934)
!5159 = !DILocation(line: 170, column: 29, scope: !4934)
!5160 = !DILocation(line: 183, column: 57, scope: !4934)
!5161 = !DILocation(line: 183, column: 65, scope: !4934)
!5162 = !DILocation(line: 183, column: 62, scope: !4934)
!5163 = !DILocation(line: 183, column: 70, scope: !4934)
!5164 = !DILocation(line: 183, column: 75, scope: !4934)
!5165 = !DILocation(line: 183, column: 83, scope: !4934)
!5166 = !DILocation(line: 183, column: 81, scope: !4934)
!5167 = !DILocation(line: 183, column: 92, scope: !4934)
!5168 = !DILocation(line: 183, column: 100, scope: !4934)
!5169 = !DILocation(line: 183, column: 97, scope: !4934)
!5170 = !DILocation(line: 183, column: 105, scope: !4934)
!5171 = !DILocation(line: 183, column: 110, scope: !4934)
!5172 = !DILocation(line: 183, column: 118, scope: !4934)
!5173 = !DILocation(line: 183, column: 116, scope: !4934)
!5174 = !DILocation(line: 183, column: 87, scope: !4934)
!5175 = !DILocation(line: 183, column: 127, scope: !4934)
!5176 = !DILocation(line: 183, column: 135, scope: !4934)
!5177 = !DILocation(line: 183, column: 132, scope: !4934)
!5178 = !DILocation(line: 183, column: 140, scope: !4934)
!5179 = !DILocation(line: 183, column: 145, scope: !4934)
!5180 = !DILocation(line: 183, column: 153, scope: !4934)
!5181 = !DILocation(line: 183, column: 151, scope: !4934)
!5182 = !DILocation(line: 183, column: 122, scope: !4934)
!5183 = !DILocation(line: 183, column: 159, scope: !4934)
!5184 = !DILocation(line: 183, column: 166, scope: !4934)
!5185 = !DILocation(line: 183, column: 50, scope: !4934)
!5186 = !DILocation(line: 183, column: 23, scope: !4934)
!5187 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4942)
!5188 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4942)
!5189 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4942)
!5190 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4942)
!5191 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4942)
!5192 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4942)
!5193 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4942)
!5194 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4942)
!5195 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4942)
!5196 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4942)
!5197 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4942)
!5198 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4942)
!5199 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4942)
!5200 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4942)
!5201 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4942)
!5202 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4942)
!5203 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4942)
!5204 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4942)
!5205 = !DILocation(line: 183, column: 18, scope: !4934)
!5206 = !DILocation(line: 183, column: 13, scope: !4934)
!5207 = !DILocation(line: 183, column: 21, scope: !4934)
!5208 = !DILocation(line: 187, column: 57, scope: !4934)
!5209 = !DILocation(line: 187, column: 65, scope: !4934)
!5210 = !DILocation(line: 187, column: 62, scope: !4934)
!5211 = !DILocation(line: 187, column: 70, scope: !4934)
!5212 = !DILocation(line: 187, column: 75, scope: !4934)
!5213 = !DILocation(line: 187, column: 83, scope: !4934)
!5214 = !DILocation(line: 187, column: 81, scope: !4934)
!5215 = !DILocation(line: 187, column: 94, scope: !4934)
!5216 = !DILocation(line: 187, column: 102, scope: !4934)
!5217 = !DILocation(line: 187, column: 99, scope: !4934)
!5218 = !DILocation(line: 187, column: 107, scope: !4934)
!5219 = !DILocation(line: 187, column: 112, scope: !4934)
!5220 = !DILocation(line: 187, column: 120, scope: !4934)
!5221 = !DILocation(line: 187, column: 118, scope: !4934)
!5222 = !DILocation(line: 187, column: 89, scope: !4934)
!5223 = !DILocation(line: 187, column: 129, scope: !4934)
!5224 = !DILocation(line: 187, column: 137, scope: !4934)
!5225 = !DILocation(line: 187, column: 134, scope: !4934)
!5226 = !DILocation(line: 187, column: 142, scope: !4934)
!5227 = !DILocation(line: 187, column: 147, scope: !4934)
!5228 = !DILocation(line: 187, column: 155, scope: !4934)
!5229 = !DILocation(line: 187, column: 153, scope: !4934)
!5230 = !DILocation(line: 187, column: 124, scope: !4934)
!5231 = !DILocation(line: 187, column: 159, scope: !4934)
!5232 = !DILocation(line: 187, column: 166, scope: !4934)
!5233 = !DILocation(line: 187, column: 50, scope: !4934)
!5234 = !DILocation(line: 187, column: 23, scope: !4934)
!5235 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !4945)
!5236 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !4945)
!5237 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !4945)
!5238 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !4945)
!5239 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !4945)
!5240 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !4945)
!5241 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !4945)
!5242 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !4945)
!5243 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !4945)
!5244 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !4945)
!5245 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !4945)
!5246 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !4945)
!5247 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !4945)
!5248 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !4945)
!5249 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !4945)
!5250 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !4945)
!5251 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !4945)
!5252 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !4945)
!5253 = !DILocation(line: 187, column: 18, scope: !4934)
!5254 = !DILocation(line: 187, column: 13, scope: !4934)
!5255 = !DILocation(line: 187, column: 21, scope: !4934)
!5256 = !DILocation(line: 191, column: 9, scope: !4934)
!5257 = !DILocation(line: 156, column: 29, scope: !5258)
!5258 = !DILexicalBlockFile(scope: !4935, file: !266, discriminator: 2)
!5259 = !DILocation(line: 156, column: 9, scope: !5258)
!5260 = distinct !{!5260, !5261}
!5261 = !DILocation(line: 156, column: 9, scope: !4937)
!5262 = !DILocation(line: 193, column: 17, scope: !4937)
!5263 = !DILocation(line: 193, column: 20, scope: !4937)
!5264 = !DILocation(line: 193, column: 14, scope: !4937)
!5265 = !DILocation(line: 194, column: 17, scope: !4937)
!5266 = !DILocation(line: 194, column: 31, scope: !4937)
!5267 = !DILocation(line: 194, column: 14, scope: !4937)
!5268 = !DILocation(line: 195, column: 17, scope: !4937)
!5269 = !DILocation(line: 195, column: 31, scope: !4937)
!5270 = !DILocation(line: 195, column: 14, scope: !4937)
!5271 = !DILocation(line: 196, column: 17, scope: !4937)
!5272 = !DILocation(line: 196, column: 19, scope: !4937)
!5273 = !DILocation(line: 196, column: 14, scope: !4937)
!5274 = !DILocation(line: 197, column: 17, scope: !4937)
!5275 = !DILocation(line: 197, column: 19, scope: !4937)
!5276 = !DILocation(line: 197, column: 14, scope: !4937)
!5277 = !DILocation(line: 198, column: 17, scope: !4937)
!5278 = !DILocation(line: 198, column: 19, scope: !4937)
!5279 = !DILocation(line: 198, column: 14, scope: !4937)
!5280 = !DILocation(line: 199, column: 5, scope: !4937)
!5281 = !DILocation(line: 155, column: 25, scope: !5282)
!5282 = !DILexicalBlockFile(scope: !4938, file: !266, discriminator: 2)
!5283 = !DILocation(line: 155, column: 5, scope: !5282)
!5284 = distinct !{!5284, !5285}
!5285 = !DILocation(line: 155, column: 5, scope: !4931)
!5286 = !DILocation(line: 200, column: 1, scope: !4931)
!5287 = distinct !DISubprogram(name: "rgb2yuv_420p10_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!5288 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5289)
!5289 = distinct !DILocation(line: 170, column: 31, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !266, line: 156, column: 33)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !266, line: 156, column: 9)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !266, line: 156, column: 9)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !266, line: 155, column: 29)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !266, line: 155, column: 5)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !266, line: 155, column: 5)
!5296 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5289)
!5297 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5298)
!5298 = distinct !DILocation(line: 174, column: 36, scope: !5290)
!5299 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5298)
!5300 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5301)
!5301 = distinct !DILocation(line: 177, column: 36, scope: !5290)
!5302 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5301)
!5303 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5304)
!5304 = distinct !DILocation(line: 183, column: 23, scope: !5290)
!5305 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5304)
!5306 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5307)
!5307 = distinct !DILocation(line: 187, column: 23, scope: !5290)
!5308 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5307)
!5309 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5310)
!5310 = distinct !DILocation(line: 166, column: 28, scope: !5290)
!5311 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5310)
!5312 = !DILocalVariable(name: "_yuv", arg: 1, scope: !5287, file: !266, line: 130, type: !17)
!5313 = !DILocation(line: 130, column: 39, scope: !5287)
!5314 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !5287, file: !266, line: 130, type: !50)
!5315 = !DILocation(line: 130, column: 64, scope: !5287)
!5316 = !DILocalVariable(name: "rgb", arg: 3, scope: !5287, file: !266, line: 131, type: !43)
!5317 = !DILocation(line: 131, column: 34, scope: !5287)
!5318 = !DILocalVariable(name: "s", arg: 4, scope: !5287, file: !266, line: 131, type: !47)
!5319 = !DILocation(line: 131, column: 52, scope: !5287)
!5320 = !DILocalVariable(name: "w", arg: 5, scope: !5287, file: !266, line: 132, type: !52)
!5321 = !DILocation(line: 132, column: 29, scope: !5287)
!5322 = !DILocalVariable(name: "h", arg: 6, scope: !5287, file: !266, line: 132, type: !52)
!5323 = !DILocation(line: 132, column: 36, scope: !5287)
!5324 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !5287, file: !266, line: 132, type: !53)
!5325 = !DILocation(line: 132, column: 53, scope: !5287)
!5326 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !5287, file: !266, line: 133, type: !59)
!5327 = !DILocation(line: 133, column: 39, scope: !5287)
!5328 = !DILocalVariable(name: "yuv", scope: !5287, file: !266, line: 135, type: !22)
!5329 = !DILocation(line: 135, column: 16, scope: !5287)
!5330 = !DILocation(line: 135, column: 36, scope: !5287)
!5331 = !DILocation(line: 135, column: 22, scope: !5287)
!5332 = !DILocalVariable(name: "yuv0", scope: !5287, file: !266, line: 136, type: !23)
!5333 = !DILocation(line: 136, column: 15, scope: !5287)
!5334 = !DILocation(line: 136, column: 22, scope: !5287)
!5335 = !DILocalVariable(name: "yuv1", scope: !5287, file: !266, line: 136, type: !23)
!5336 = !DILocation(line: 136, column: 31, scope: !5287)
!5337 = !DILocation(line: 136, column: 38, scope: !5287)
!5338 = !DILocalVariable(name: "yuv2", scope: !5287, file: !266, line: 136, type: !23)
!5339 = !DILocation(line: 136, column: 47, scope: !5287)
!5340 = !DILocation(line: 136, column: 54, scope: !5287)
!5341 = !DILocalVariable(name: "rgb0", scope: !5287, file: !266, line: 137, type: !59)
!5342 = !DILocation(line: 137, column: 20, scope: !5287)
!5343 = !DILocation(line: 137, column: 27, scope: !5287)
!5344 = !DILocalVariable(name: "rgb1", scope: !5287, file: !266, line: 137, type: !59)
!5345 = !DILocation(line: 137, column: 36, scope: !5287)
!5346 = !DILocation(line: 137, column: 43, scope: !5287)
!5347 = !DILocalVariable(name: "rgb2", scope: !5287, file: !266, line: 137, type: !59)
!5348 = !DILocation(line: 137, column: 52, scope: !5287)
!5349 = !DILocation(line: 137, column: 59, scope: !5287)
!5350 = !DILocalVariable(name: "y", scope: !5287, file: !266, line: 138, type: !52)
!5351 = !DILocation(line: 138, column: 9, scope: !5287)
!5352 = !DILocalVariable(name: "x", scope: !5287, file: !266, line: 138, type: !52)
!5353 = !DILocation(line: 138, column: 12, scope: !5287)
!5354 = !DILocalVariable(name: "sh", scope: !5287, file: !266, line: 139, type: !343)
!5355 = !DILocation(line: 139, column: 15, scope: !5287)
!5356 = !DILocalVariable(name: "rnd", scope: !5287, file: !266, line: 140, type: !343)
!5357 = !DILocation(line: 140, column: 15, scope: !5287)
!5358 = !DILocalVariable(name: "cry", scope: !5287, file: !266, line: 141, type: !52)
!5359 = !DILocation(line: 141, column: 9, scope: !5287)
!5360 = !DILocation(line: 141, column: 15, scope: !5287)
!5361 = !DILocalVariable(name: "cgy", scope: !5287, file: !266, line: 142, type: !52)
!5362 = !DILocation(line: 142, column: 9, scope: !5287)
!5363 = !DILocation(line: 142, column: 15, scope: !5287)
!5364 = !DILocalVariable(name: "cby", scope: !5287, file: !266, line: 143, type: !52)
!5365 = !DILocation(line: 143, column: 9, scope: !5287)
!5366 = !DILocation(line: 143, column: 15, scope: !5287)
!5367 = !DILocalVariable(name: "cru", scope: !5287, file: !266, line: 144, type: !52)
!5368 = !DILocation(line: 144, column: 9, scope: !5287)
!5369 = !DILocation(line: 144, column: 15, scope: !5287)
!5370 = !DILocalVariable(name: "cgu", scope: !5287, file: !266, line: 145, type: !52)
!5371 = !DILocation(line: 145, column: 9, scope: !5287)
!5372 = !DILocation(line: 145, column: 15, scope: !5287)
!5373 = !DILocalVariable(name: "cburv", scope: !5287, file: !266, line: 146, type: !52)
!5374 = !DILocation(line: 146, column: 9, scope: !5287)
!5375 = !DILocation(line: 146, column: 17, scope: !5287)
!5376 = !DILocalVariable(name: "cgv", scope: !5287, file: !266, line: 147, type: !52)
!5377 = !DILocation(line: 147, column: 9, scope: !5287)
!5378 = !DILocation(line: 147, column: 15, scope: !5287)
!5379 = !DILocalVariable(name: "cbv", scope: !5287, file: !266, line: 148, type: !52)
!5380 = !DILocation(line: 148, column: 9, scope: !5287)
!5381 = !DILocation(line: 148, column: 15, scope: !5287)
!5382 = !DILocalVariable(name: "s0", scope: !5287, file: !266, line: 149, type: !47)
!5383 = !DILocation(line: 149, column: 15, scope: !5287)
!5384 = !DILocation(line: 149, column: 20, scope: !5287)
!5385 = !DILocation(line: 149, column: 34, scope: !5287)
!5386 = !DILocalVariable(name: "uv_offset", scope: !5287, file: !266, line: 150, type: !343)
!5387 = !DILocation(line: 150, column: 15, scope: !5287)
!5388 = !DILocation(line: 153, column: 58, scope: !5287)
!5389 = !DILocation(line: 153, column: 61, scope: !5287)
!5390 = !DILocation(line: 153, column: 72, scope: !5287)
!5391 = !DILocation(line: 153, column: 77, scope: !5287)
!5392 = !DILocation(line: 153, column: 7, scope: !5287)
!5393 = !DILocation(line: 154, column: 58, scope: !5287)
!5394 = !DILocation(line: 154, column: 61, scope: !5287)
!5395 = !DILocation(line: 154, column: 72, scope: !5287)
!5396 = !DILocation(line: 154, column: 77, scope: !5287)
!5397 = !DILocation(line: 154, column: 7, scope: !5287)
!5398 = !DILocation(line: 155, column: 12, scope: !5295)
!5399 = !DILocation(line: 155, column: 10, scope: !5295)
!5400 = !DILocation(line: 155, column: 17, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5294, file: !266, discriminator: 1)
!5402 = !DILocation(line: 155, column: 21, scope: !5401)
!5403 = !DILocation(line: 155, column: 19, scope: !5401)
!5404 = !DILocation(line: 155, column: 5, scope: !5401)
!5405 = !DILocation(line: 156, column: 16, scope: !5292)
!5406 = !DILocation(line: 156, column: 14, scope: !5292)
!5407 = !DILocation(line: 156, column: 21, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5291, file: !266, discriminator: 1)
!5409 = !DILocation(line: 156, column: 25, scope: !5408)
!5410 = !DILocation(line: 156, column: 23, scope: !5408)
!5411 = !DILocation(line: 156, column: 9, scope: !5408)
!5412 = !DILocalVariable(name: "r00", scope: !5290, file: !266, line: 157, type: !52)
!5413 = !DILocation(line: 157, column: 17, scope: !5290)
!5414 = !DILocation(line: 157, column: 28, scope: !5290)
!5415 = !DILocation(line: 157, column: 30, scope: !5290)
!5416 = !DILocation(line: 157, column: 23, scope: !5290)
!5417 = !DILocalVariable(name: "g00", scope: !5290, file: !266, line: 157, type: !52)
!5418 = !DILocation(line: 157, column: 37, scope: !5290)
!5419 = !DILocation(line: 157, column: 48, scope: !5290)
!5420 = !DILocation(line: 157, column: 50, scope: !5290)
!5421 = !DILocation(line: 157, column: 43, scope: !5290)
!5422 = !DILocalVariable(name: "b00", scope: !5290, file: !266, line: 157, type: !52)
!5423 = !DILocation(line: 157, column: 57, scope: !5290)
!5424 = !DILocation(line: 157, column: 68, scope: !5290)
!5425 = !DILocation(line: 157, column: 70, scope: !5290)
!5426 = !DILocation(line: 157, column: 63, scope: !5290)
!5427 = !DILocalVariable(name: "r01", scope: !5290, file: !266, line: 159, type: !52)
!5428 = !DILocation(line: 159, column: 17, scope: !5290)
!5429 = !DILocation(line: 159, column: 28, scope: !5290)
!5430 = !DILocation(line: 159, column: 30, scope: !5290)
!5431 = !DILocation(line: 159, column: 34, scope: !5290)
!5432 = !DILocation(line: 159, column: 23, scope: !5290)
!5433 = !DILocalVariable(name: "g01", scope: !5290, file: !266, line: 159, type: !52)
!5434 = !DILocation(line: 159, column: 40, scope: !5290)
!5435 = !DILocation(line: 159, column: 51, scope: !5290)
!5436 = !DILocation(line: 159, column: 53, scope: !5290)
!5437 = !DILocation(line: 159, column: 57, scope: !5290)
!5438 = !DILocation(line: 159, column: 46, scope: !5290)
!5439 = !DILocalVariable(name: "b01", scope: !5290, file: !266, line: 159, type: !52)
!5440 = !DILocation(line: 159, column: 63, scope: !5290)
!5441 = !DILocation(line: 159, column: 74, scope: !5290)
!5442 = !DILocation(line: 159, column: 76, scope: !5290)
!5443 = !DILocation(line: 159, column: 80, scope: !5290)
!5444 = !DILocation(line: 159, column: 69, scope: !5290)
!5445 = !DILocalVariable(name: "r10", scope: !5290, file: !266, line: 161, type: !52)
!5446 = !DILocation(line: 161, column: 17, scope: !5290)
!5447 = !DILocation(line: 161, column: 28, scope: !5290)
!5448 = !DILocation(line: 161, column: 30, scope: !5290)
!5449 = !DILocation(line: 161, column: 34, scope: !5290)
!5450 = !DILocation(line: 161, column: 40, scope: !5290)
!5451 = !DILocation(line: 161, column: 38, scope: !5290)
!5452 = !DILocation(line: 161, column: 23, scope: !5290)
!5453 = !DILocalVariable(name: "g10", scope: !5290, file: !266, line: 161, type: !52)
!5454 = !DILocation(line: 161, column: 44, scope: !5290)
!5455 = !DILocation(line: 161, column: 55, scope: !5290)
!5456 = !DILocation(line: 161, column: 57, scope: !5290)
!5457 = !DILocation(line: 161, column: 61, scope: !5290)
!5458 = !DILocation(line: 161, column: 67, scope: !5290)
!5459 = !DILocation(line: 161, column: 65, scope: !5290)
!5460 = !DILocation(line: 161, column: 50, scope: !5290)
!5461 = !DILocalVariable(name: "b10", scope: !5290, file: !266, line: 161, type: !52)
!5462 = !DILocation(line: 161, column: 71, scope: !5290)
!5463 = !DILocation(line: 161, column: 82, scope: !5290)
!5464 = !DILocation(line: 161, column: 84, scope: !5290)
!5465 = !DILocation(line: 161, column: 88, scope: !5290)
!5466 = !DILocation(line: 161, column: 94, scope: !5290)
!5467 = !DILocation(line: 161, column: 92, scope: !5290)
!5468 = !DILocation(line: 161, column: 77, scope: !5290)
!5469 = !DILocalVariable(name: "r11", scope: !5290, file: !266, line: 162, type: !52)
!5470 = !DILocation(line: 162, column: 17, scope: !5290)
!5471 = !DILocation(line: 162, column: 28, scope: !5290)
!5472 = !DILocation(line: 162, column: 30, scope: !5290)
!5473 = !DILocation(line: 162, column: 34, scope: !5290)
!5474 = !DILocation(line: 162, column: 40, scope: !5290)
!5475 = !DILocation(line: 162, column: 38, scope: !5290)
!5476 = !DILocation(line: 162, column: 23, scope: !5290)
!5477 = !DILocalVariable(name: "g11", scope: !5290, file: !266, line: 162, type: !52)
!5478 = !DILocation(line: 162, column: 44, scope: !5290)
!5479 = !DILocation(line: 162, column: 55, scope: !5290)
!5480 = !DILocation(line: 162, column: 57, scope: !5290)
!5481 = !DILocation(line: 162, column: 61, scope: !5290)
!5482 = !DILocation(line: 162, column: 67, scope: !5290)
!5483 = !DILocation(line: 162, column: 65, scope: !5290)
!5484 = !DILocation(line: 162, column: 50, scope: !5290)
!5485 = !DILocalVariable(name: "b11", scope: !5290, file: !266, line: 162, type: !52)
!5486 = !DILocation(line: 162, column: 71, scope: !5290)
!5487 = !DILocation(line: 162, column: 82, scope: !5290)
!5488 = !DILocation(line: 162, column: 84, scope: !5290)
!5489 = !DILocation(line: 162, column: 88, scope: !5290)
!5490 = !DILocation(line: 162, column: 94, scope: !5290)
!5491 = !DILocation(line: 162, column: 92, scope: !5290)
!5492 = !DILocation(line: 162, column: 77, scope: !5290)
!5493 = !DILocation(line: 166, column: 45, scope: !5290)
!5494 = !DILocation(line: 166, column: 63, scope: !5290)
!5495 = !DILocation(line: 166, column: 69, scope: !5290)
!5496 = !DILocation(line: 166, column: 67, scope: !5290)
!5497 = !DILocation(line: 166, column: 75, scope: !5290)
!5498 = !DILocation(line: 166, column: 81, scope: !5290)
!5499 = !DILocation(line: 166, column: 79, scope: !5290)
!5500 = !DILocation(line: 166, column: 73, scope: !5290)
!5501 = !DILocation(line: 166, column: 87, scope: !5290)
!5502 = !DILocation(line: 166, column: 93, scope: !5290)
!5503 = !DILocation(line: 166, column: 91, scope: !5290)
!5504 = !DILocation(line: 166, column: 85, scope: !5290)
!5505 = !DILocation(line: 166, column: 97, scope: !5290)
!5506 = !DILocation(line: 166, column: 104, scope: !5290)
!5507 = !DILocation(line: 166, column: 59, scope: !5290)
!5508 = !DILocation(line: 166, column: 28, scope: !5290)
!5509 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5310)
!5510 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5310)
!5511 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5310)
!5512 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5310)
!5513 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5310)
!5514 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5310)
!5515 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5310)
!5516 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5310)
!5517 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5310)
!5518 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5310)
!5519 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5310)
!5520 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5310)
!5521 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5310)
!5522 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5310)
!5523 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5310)
!5524 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5310)
!5525 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5310)
!5526 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5310)
!5527 = !DILocation(line: 166, column: 18, scope: !5290)
!5528 = !DILocation(line: 166, column: 20, scope: !5290)
!5529 = !DILocation(line: 166, column: 13, scope: !5290)
!5530 = !DILocation(line: 166, column: 26, scope: !5290)
!5531 = !DILocation(line: 170, column: 48, scope: !5290)
!5532 = !DILocation(line: 170, column: 66, scope: !5290)
!5533 = !DILocation(line: 170, column: 72, scope: !5290)
!5534 = !DILocation(line: 170, column: 70, scope: !5290)
!5535 = !DILocation(line: 170, column: 78, scope: !5290)
!5536 = !DILocation(line: 170, column: 84, scope: !5290)
!5537 = !DILocation(line: 170, column: 82, scope: !5290)
!5538 = !DILocation(line: 170, column: 76, scope: !5290)
!5539 = !DILocation(line: 170, column: 90, scope: !5290)
!5540 = !DILocation(line: 170, column: 96, scope: !5290)
!5541 = !DILocation(line: 170, column: 94, scope: !5290)
!5542 = !DILocation(line: 170, column: 88, scope: !5290)
!5543 = !DILocation(line: 170, column: 100, scope: !5290)
!5544 = !DILocation(line: 170, column: 107, scope: !5290)
!5545 = !DILocation(line: 170, column: 62, scope: !5290)
!5546 = !DILocation(line: 170, column: 31, scope: !5290)
!5547 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5289)
!5548 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5289)
!5549 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5289)
!5550 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5289)
!5551 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5289)
!5552 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5289)
!5553 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5289)
!5554 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5289)
!5555 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5289)
!5556 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5289)
!5557 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5289)
!5558 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5289)
!5559 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5289)
!5560 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5289)
!5561 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5289)
!5562 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5289)
!5563 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5289)
!5564 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5289)
!5565 = !DILocation(line: 170, column: 18, scope: !5290)
!5566 = !DILocation(line: 170, column: 20, scope: !5290)
!5567 = !DILocation(line: 170, column: 24, scope: !5290)
!5568 = !DILocation(line: 170, column: 13, scope: !5290)
!5569 = !DILocation(line: 170, column: 29, scope: !5290)
!5570 = !DILocation(line: 174, column: 53, scope: !5290)
!5571 = !DILocation(line: 174, column: 71, scope: !5290)
!5572 = !DILocation(line: 174, column: 77, scope: !5290)
!5573 = !DILocation(line: 174, column: 75, scope: !5290)
!5574 = !DILocation(line: 174, column: 83, scope: !5290)
!5575 = !DILocation(line: 174, column: 89, scope: !5290)
!5576 = !DILocation(line: 174, column: 87, scope: !5290)
!5577 = !DILocation(line: 174, column: 81, scope: !5290)
!5578 = !DILocation(line: 174, column: 95, scope: !5290)
!5579 = !DILocation(line: 174, column: 101, scope: !5290)
!5580 = !DILocation(line: 174, column: 99, scope: !5290)
!5581 = !DILocation(line: 174, column: 93, scope: !5290)
!5582 = !DILocation(line: 174, column: 105, scope: !5290)
!5583 = !DILocation(line: 174, column: 112, scope: !5290)
!5584 = !DILocation(line: 174, column: 67, scope: !5290)
!5585 = !DILocation(line: 174, column: 36, scope: !5290)
!5586 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5298)
!5587 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5298)
!5588 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5298)
!5589 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5298)
!5590 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5298)
!5591 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5298)
!5592 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5298)
!5593 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5298)
!5594 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5298)
!5595 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5298)
!5596 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5298)
!5597 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5298)
!5598 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5298)
!5599 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5298)
!5600 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5298)
!5601 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5298)
!5602 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5298)
!5603 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5298)
!5604 = !DILocation(line: 174, column: 18, scope: !5290)
!5605 = !DILocation(line: 174, column: 20, scope: !5290)
!5606 = !DILocation(line: 174, column: 24, scope: !5290)
!5607 = !DILocation(line: 174, column: 30, scope: !5290)
!5608 = !DILocation(line: 174, column: 28, scope: !5290)
!5609 = !DILocation(line: 174, column: 13, scope: !5290)
!5610 = !DILocation(line: 174, column: 34, scope: !5290)
!5611 = !DILocation(line: 177, column: 53, scope: !5290)
!5612 = !DILocation(line: 177, column: 71, scope: !5290)
!5613 = !DILocation(line: 177, column: 77, scope: !5290)
!5614 = !DILocation(line: 177, column: 75, scope: !5290)
!5615 = !DILocation(line: 177, column: 83, scope: !5290)
!5616 = !DILocation(line: 177, column: 89, scope: !5290)
!5617 = !DILocation(line: 177, column: 87, scope: !5290)
!5618 = !DILocation(line: 177, column: 81, scope: !5290)
!5619 = !DILocation(line: 177, column: 95, scope: !5290)
!5620 = !DILocation(line: 177, column: 101, scope: !5290)
!5621 = !DILocation(line: 177, column: 99, scope: !5290)
!5622 = !DILocation(line: 177, column: 93, scope: !5290)
!5623 = !DILocation(line: 177, column: 105, scope: !5290)
!5624 = !DILocation(line: 177, column: 112, scope: !5290)
!5625 = !DILocation(line: 177, column: 67, scope: !5290)
!5626 = !DILocation(line: 177, column: 36, scope: !5290)
!5627 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5301)
!5628 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5301)
!5629 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5301)
!5630 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5301)
!5631 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5301)
!5632 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5301)
!5633 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5301)
!5634 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5301)
!5635 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5301)
!5636 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5301)
!5637 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5301)
!5638 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5301)
!5639 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5301)
!5640 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5301)
!5641 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5301)
!5642 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5301)
!5643 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5301)
!5644 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5301)
!5645 = !DILocation(line: 177, column: 18, scope: !5290)
!5646 = !DILocation(line: 177, column: 20, scope: !5290)
!5647 = !DILocation(line: 177, column: 24, scope: !5290)
!5648 = !DILocation(line: 177, column: 30, scope: !5290)
!5649 = !DILocation(line: 177, column: 28, scope: !5290)
!5650 = !DILocation(line: 177, column: 13, scope: !5290)
!5651 = !DILocation(line: 177, column: 34, scope: !5290)
!5652 = !DILocation(line: 183, column: 57, scope: !5290)
!5653 = !DILocation(line: 183, column: 65, scope: !5290)
!5654 = !DILocation(line: 183, column: 62, scope: !5290)
!5655 = !DILocation(line: 183, column: 73, scope: !5290)
!5656 = !DILocation(line: 183, column: 70, scope: !5290)
!5657 = !DILocation(line: 183, column: 81, scope: !5290)
!5658 = !DILocation(line: 183, column: 78, scope: !5290)
!5659 = !DILocation(line: 183, column: 86, scope: !5290)
!5660 = !DILocation(line: 183, column: 91, scope: !5290)
!5661 = !DILocation(line: 183, column: 99, scope: !5290)
!5662 = !DILocation(line: 183, column: 97, scope: !5290)
!5663 = !DILocation(line: 183, column: 108, scope: !5290)
!5664 = !DILocation(line: 183, column: 116, scope: !5290)
!5665 = !DILocation(line: 183, column: 113, scope: !5290)
!5666 = !DILocation(line: 183, column: 124, scope: !5290)
!5667 = !DILocation(line: 183, column: 121, scope: !5290)
!5668 = !DILocation(line: 183, column: 132, scope: !5290)
!5669 = !DILocation(line: 183, column: 129, scope: !5290)
!5670 = !DILocation(line: 183, column: 137, scope: !5290)
!5671 = !DILocation(line: 183, column: 142, scope: !5290)
!5672 = !DILocation(line: 183, column: 150, scope: !5290)
!5673 = !DILocation(line: 183, column: 148, scope: !5290)
!5674 = !DILocation(line: 183, column: 103, scope: !5290)
!5675 = !DILocation(line: 183, column: 159, scope: !5290)
!5676 = !DILocation(line: 183, column: 167, scope: !5290)
!5677 = !DILocation(line: 183, column: 164, scope: !5290)
!5678 = !DILocation(line: 183, column: 175, scope: !5290)
!5679 = !DILocation(line: 183, column: 172, scope: !5290)
!5680 = !DILocation(line: 183, column: 183, scope: !5290)
!5681 = !DILocation(line: 183, column: 180, scope: !5290)
!5682 = !DILocation(line: 183, column: 188, scope: !5290)
!5683 = !DILocation(line: 183, column: 193, scope: !5290)
!5684 = !DILocation(line: 183, column: 201, scope: !5290)
!5685 = !DILocation(line: 183, column: 199, scope: !5290)
!5686 = !DILocation(line: 183, column: 154, scope: !5290)
!5687 = !DILocation(line: 183, column: 207, scope: !5290)
!5688 = !DILocation(line: 183, column: 214, scope: !5290)
!5689 = !DILocation(line: 183, column: 50, scope: !5290)
!5690 = !DILocation(line: 183, column: 23, scope: !5290)
!5691 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5304)
!5692 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5304)
!5693 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5304)
!5694 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5304)
!5695 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5304)
!5696 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5304)
!5697 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5304)
!5698 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5304)
!5699 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5304)
!5700 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5304)
!5701 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5304)
!5702 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5304)
!5703 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5304)
!5704 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5304)
!5705 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5304)
!5706 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5304)
!5707 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5304)
!5708 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5304)
!5709 = !DILocation(line: 183, column: 18, scope: !5290)
!5710 = !DILocation(line: 183, column: 13, scope: !5290)
!5711 = !DILocation(line: 183, column: 21, scope: !5290)
!5712 = !DILocation(line: 187, column: 57, scope: !5290)
!5713 = !DILocation(line: 187, column: 65, scope: !5290)
!5714 = !DILocation(line: 187, column: 62, scope: !5290)
!5715 = !DILocation(line: 187, column: 73, scope: !5290)
!5716 = !DILocation(line: 187, column: 70, scope: !5290)
!5717 = !DILocation(line: 187, column: 81, scope: !5290)
!5718 = !DILocation(line: 187, column: 78, scope: !5290)
!5719 = !DILocation(line: 187, column: 86, scope: !5290)
!5720 = !DILocation(line: 187, column: 91, scope: !5290)
!5721 = !DILocation(line: 187, column: 99, scope: !5290)
!5722 = !DILocation(line: 187, column: 97, scope: !5290)
!5723 = !DILocation(line: 187, column: 110, scope: !5290)
!5724 = !DILocation(line: 187, column: 118, scope: !5290)
!5725 = !DILocation(line: 187, column: 115, scope: !5290)
!5726 = !DILocation(line: 187, column: 126, scope: !5290)
!5727 = !DILocation(line: 187, column: 123, scope: !5290)
!5728 = !DILocation(line: 187, column: 134, scope: !5290)
!5729 = !DILocation(line: 187, column: 131, scope: !5290)
!5730 = !DILocation(line: 187, column: 139, scope: !5290)
!5731 = !DILocation(line: 187, column: 144, scope: !5290)
!5732 = !DILocation(line: 187, column: 152, scope: !5290)
!5733 = !DILocation(line: 187, column: 150, scope: !5290)
!5734 = !DILocation(line: 187, column: 105, scope: !5290)
!5735 = !DILocation(line: 187, column: 161, scope: !5290)
!5736 = !DILocation(line: 187, column: 169, scope: !5290)
!5737 = !DILocation(line: 187, column: 166, scope: !5290)
!5738 = !DILocation(line: 187, column: 177, scope: !5290)
!5739 = !DILocation(line: 187, column: 174, scope: !5290)
!5740 = !DILocation(line: 187, column: 185, scope: !5290)
!5741 = !DILocation(line: 187, column: 182, scope: !5290)
!5742 = !DILocation(line: 187, column: 190, scope: !5290)
!5743 = !DILocation(line: 187, column: 195, scope: !5290)
!5744 = !DILocation(line: 187, column: 203, scope: !5290)
!5745 = !DILocation(line: 187, column: 201, scope: !5290)
!5746 = !DILocation(line: 187, column: 156, scope: !5290)
!5747 = !DILocation(line: 187, column: 207, scope: !5290)
!5748 = !DILocation(line: 187, column: 214, scope: !5290)
!5749 = !DILocation(line: 187, column: 50, scope: !5290)
!5750 = !DILocation(line: 187, column: 23, scope: !5290)
!5751 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5307)
!5752 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5307)
!5753 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5307)
!5754 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5307)
!5755 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5307)
!5756 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5307)
!5757 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5307)
!5758 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5307)
!5759 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5307)
!5760 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5307)
!5761 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5307)
!5762 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5307)
!5763 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5307)
!5764 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5307)
!5765 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5307)
!5766 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5307)
!5767 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5307)
!5768 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5307)
!5769 = !DILocation(line: 187, column: 18, scope: !5290)
!5770 = !DILocation(line: 187, column: 13, scope: !5290)
!5771 = !DILocation(line: 187, column: 21, scope: !5290)
!5772 = !DILocation(line: 191, column: 9, scope: !5290)
!5773 = !DILocation(line: 156, column: 29, scope: !5774)
!5774 = !DILexicalBlockFile(scope: !5291, file: !266, discriminator: 2)
!5775 = !DILocation(line: 156, column: 9, scope: !5774)
!5776 = distinct !{!5776, !5777}
!5777 = !DILocation(line: 156, column: 9, scope: !5293)
!5778 = !DILocation(line: 193, column: 17, scope: !5293)
!5779 = !DILocation(line: 193, column: 20, scope: !5293)
!5780 = !DILocation(line: 193, column: 14, scope: !5293)
!5781 = !DILocation(line: 194, column: 17, scope: !5293)
!5782 = !DILocation(line: 194, column: 31, scope: !5293)
!5783 = !DILocation(line: 194, column: 14, scope: !5293)
!5784 = !DILocation(line: 195, column: 17, scope: !5293)
!5785 = !DILocation(line: 195, column: 31, scope: !5293)
!5786 = !DILocation(line: 195, column: 14, scope: !5293)
!5787 = !DILocation(line: 196, column: 17, scope: !5293)
!5788 = !DILocation(line: 196, column: 19, scope: !5293)
!5789 = !DILocation(line: 196, column: 14, scope: !5293)
!5790 = !DILocation(line: 197, column: 17, scope: !5293)
!5791 = !DILocation(line: 197, column: 19, scope: !5293)
!5792 = !DILocation(line: 197, column: 14, scope: !5293)
!5793 = !DILocation(line: 198, column: 17, scope: !5293)
!5794 = !DILocation(line: 198, column: 19, scope: !5293)
!5795 = !DILocation(line: 198, column: 14, scope: !5293)
!5796 = !DILocation(line: 199, column: 5, scope: !5293)
!5797 = !DILocation(line: 155, column: 25, scope: !5798)
!5798 = !DILexicalBlockFile(scope: !5294, file: !266, discriminator: 2)
!5799 = !DILocation(line: 155, column: 5, scope: !5798)
!5800 = distinct !{!5800, !5801}
!5801 = !DILocation(line: 155, column: 5, scope: !5287)
!5802 = !DILocation(line: 200, column: 1, scope: !5287)
!5803 = distinct !DISubprogram(name: "rgb2yuv_444p12_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!5804 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5805)
!5805 = distinct !DILocation(line: 183, column: 23, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !266, line: 156, column: 33)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !266, line: 156, column: 9)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !266, line: 156, column: 9)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !266, line: 155, column: 29)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !266, line: 155, column: 5)
!5811 = distinct !DILexicalBlock(scope: !5803, file: !266, line: 155, column: 5)
!5812 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5805)
!5813 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5814)
!5814 = distinct !DILocation(line: 187, column: 23, scope: !5806)
!5815 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5814)
!5816 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !5817)
!5817 = distinct !DILocation(line: 166, column: 28, scope: !5806)
!5818 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !5817)
!5819 = !DILocalVariable(name: "_yuv", arg: 1, scope: !5803, file: !266, line: 130, type: !17)
!5820 = !DILocation(line: 130, column: 39, scope: !5803)
!5821 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !5803, file: !266, line: 130, type: !50)
!5822 = !DILocation(line: 130, column: 64, scope: !5803)
!5823 = !DILocalVariable(name: "rgb", arg: 3, scope: !5803, file: !266, line: 131, type: !43)
!5824 = !DILocation(line: 131, column: 34, scope: !5803)
!5825 = !DILocalVariable(name: "s", arg: 4, scope: !5803, file: !266, line: 131, type: !47)
!5826 = !DILocation(line: 131, column: 52, scope: !5803)
!5827 = !DILocalVariable(name: "w", arg: 5, scope: !5803, file: !266, line: 132, type: !52)
!5828 = !DILocation(line: 132, column: 29, scope: !5803)
!5829 = !DILocalVariable(name: "h", arg: 6, scope: !5803, file: !266, line: 132, type: !52)
!5830 = !DILocation(line: 132, column: 36, scope: !5803)
!5831 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !5803, file: !266, line: 132, type: !53)
!5832 = !DILocation(line: 132, column: 53, scope: !5803)
!5833 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !5803, file: !266, line: 133, type: !59)
!5834 = !DILocation(line: 133, column: 39, scope: !5803)
!5835 = !DILocalVariable(name: "yuv", scope: !5803, file: !266, line: 135, type: !22)
!5836 = !DILocation(line: 135, column: 16, scope: !5803)
!5837 = !DILocation(line: 135, column: 36, scope: !5803)
!5838 = !DILocation(line: 135, column: 22, scope: !5803)
!5839 = !DILocalVariable(name: "yuv0", scope: !5803, file: !266, line: 136, type: !23)
!5840 = !DILocation(line: 136, column: 15, scope: !5803)
!5841 = !DILocation(line: 136, column: 22, scope: !5803)
!5842 = !DILocalVariable(name: "yuv1", scope: !5803, file: !266, line: 136, type: !23)
!5843 = !DILocation(line: 136, column: 31, scope: !5803)
!5844 = !DILocation(line: 136, column: 38, scope: !5803)
!5845 = !DILocalVariable(name: "yuv2", scope: !5803, file: !266, line: 136, type: !23)
!5846 = !DILocation(line: 136, column: 47, scope: !5803)
!5847 = !DILocation(line: 136, column: 54, scope: !5803)
!5848 = !DILocalVariable(name: "rgb0", scope: !5803, file: !266, line: 137, type: !59)
!5849 = !DILocation(line: 137, column: 20, scope: !5803)
!5850 = !DILocation(line: 137, column: 27, scope: !5803)
!5851 = !DILocalVariable(name: "rgb1", scope: !5803, file: !266, line: 137, type: !59)
!5852 = !DILocation(line: 137, column: 36, scope: !5803)
!5853 = !DILocation(line: 137, column: 43, scope: !5803)
!5854 = !DILocalVariable(name: "rgb2", scope: !5803, file: !266, line: 137, type: !59)
!5855 = !DILocation(line: 137, column: 52, scope: !5803)
!5856 = !DILocation(line: 137, column: 59, scope: !5803)
!5857 = !DILocalVariable(name: "y", scope: !5803, file: !266, line: 138, type: !52)
!5858 = !DILocation(line: 138, column: 9, scope: !5803)
!5859 = !DILocalVariable(name: "x", scope: !5803, file: !266, line: 138, type: !52)
!5860 = !DILocation(line: 138, column: 12, scope: !5803)
!5861 = !DILocalVariable(name: "sh", scope: !5803, file: !266, line: 139, type: !343)
!5862 = !DILocation(line: 139, column: 15, scope: !5803)
!5863 = !DILocalVariable(name: "rnd", scope: !5803, file: !266, line: 140, type: !343)
!5864 = !DILocation(line: 140, column: 15, scope: !5803)
!5865 = !DILocalVariable(name: "cry", scope: !5803, file: !266, line: 141, type: !52)
!5866 = !DILocation(line: 141, column: 9, scope: !5803)
!5867 = !DILocation(line: 141, column: 15, scope: !5803)
!5868 = !DILocalVariable(name: "cgy", scope: !5803, file: !266, line: 142, type: !52)
!5869 = !DILocation(line: 142, column: 9, scope: !5803)
!5870 = !DILocation(line: 142, column: 15, scope: !5803)
!5871 = !DILocalVariable(name: "cby", scope: !5803, file: !266, line: 143, type: !52)
!5872 = !DILocation(line: 143, column: 9, scope: !5803)
!5873 = !DILocation(line: 143, column: 15, scope: !5803)
!5874 = !DILocalVariable(name: "cru", scope: !5803, file: !266, line: 144, type: !52)
!5875 = !DILocation(line: 144, column: 9, scope: !5803)
!5876 = !DILocation(line: 144, column: 15, scope: !5803)
!5877 = !DILocalVariable(name: "cgu", scope: !5803, file: !266, line: 145, type: !52)
!5878 = !DILocation(line: 145, column: 9, scope: !5803)
!5879 = !DILocation(line: 145, column: 15, scope: !5803)
!5880 = !DILocalVariable(name: "cburv", scope: !5803, file: !266, line: 146, type: !52)
!5881 = !DILocation(line: 146, column: 9, scope: !5803)
!5882 = !DILocation(line: 146, column: 17, scope: !5803)
!5883 = !DILocalVariable(name: "cgv", scope: !5803, file: !266, line: 147, type: !52)
!5884 = !DILocation(line: 147, column: 9, scope: !5803)
!5885 = !DILocation(line: 147, column: 15, scope: !5803)
!5886 = !DILocalVariable(name: "cbv", scope: !5803, file: !266, line: 148, type: !52)
!5887 = !DILocation(line: 148, column: 9, scope: !5803)
!5888 = !DILocation(line: 148, column: 15, scope: !5803)
!5889 = !DILocalVariable(name: "s0", scope: !5803, file: !266, line: 149, type: !47)
!5890 = !DILocation(line: 149, column: 15, scope: !5803)
!5891 = !DILocation(line: 149, column: 20, scope: !5803)
!5892 = !DILocation(line: 149, column: 34, scope: !5803)
!5893 = !DILocalVariable(name: "uv_offset", scope: !5803, file: !266, line: 150, type: !343)
!5894 = !DILocation(line: 150, column: 15, scope: !5803)
!5895 = !DILocation(line: 153, column: 58, scope: !5803)
!5896 = !DILocation(line: 153, column: 61, scope: !5803)
!5897 = !DILocation(line: 153, column: 72, scope: !5803)
!5898 = !DILocation(line: 153, column: 77, scope: !5803)
!5899 = !DILocation(line: 153, column: 7, scope: !5803)
!5900 = !DILocation(line: 154, column: 58, scope: !5803)
!5901 = !DILocation(line: 154, column: 61, scope: !5803)
!5902 = !DILocation(line: 154, column: 72, scope: !5803)
!5903 = !DILocation(line: 154, column: 77, scope: !5803)
!5904 = !DILocation(line: 154, column: 7, scope: !5803)
!5905 = !DILocation(line: 155, column: 12, scope: !5811)
!5906 = !DILocation(line: 155, column: 10, scope: !5811)
!5907 = !DILocation(line: 155, column: 17, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !5810, file: !266, discriminator: 1)
!5909 = !DILocation(line: 155, column: 21, scope: !5908)
!5910 = !DILocation(line: 155, column: 19, scope: !5908)
!5911 = !DILocation(line: 155, column: 5, scope: !5908)
!5912 = !DILocation(line: 156, column: 16, scope: !5808)
!5913 = !DILocation(line: 156, column: 14, scope: !5808)
!5914 = !DILocation(line: 156, column: 21, scope: !5915)
!5915 = !DILexicalBlockFile(scope: !5807, file: !266, discriminator: 1)
!5916 = !DILocation(line: 156, column: 25, scope: !5915)
!5917 = !DILocation(line: 156, column: 23, scope: !5915)
!5918 = !DILocation(line: 156, column: 9, scope: !5915)
!5919 = !DILocalVariable(name: "r00", scope: !5806, file: !266, line: 157, type: !52)
!5920 = !DILocation(line: 157, column: 17, scope: !5806)
!5921 = !DILocation(line: 157, column: 28, scope: !5806)
!5922 = !DILocation(line: 157, column: 30, scope: !5806)
!5923 = !DILocation(line: 157, column: 23, scope: !5806)
!5924 = !DILocalVariable(name: "g00", scope: !5806, file: !266, line: 157, type: !52)
!5925 = !DILocation(line: 157, column: 37, scope: !5806)
!5926 = !DILocation(line: 157, column: 48, scope: !5806)
!5927 = !DILocation(line: 157, column: 50, scope: !5806)
!5928 = !DILocation(line: 157, column: 43, scope: !5806)
!5929 = !DILocalVariable(name: "b00", scope: !5806, file: !266, line: 157, type: !52)
!5930 = !DILocation(line: 157, column: 57, scope: !5806)
!5931 = !DILocation(line: 157, column: 68, scope: !5806)
!5932 = !DILocation(line: 157, column: 70, scope: !5806)
!5933 = !DILocation(line: 157, column: 63, scope: !5806)
!5934 = !DILocation(line: 166, column: 45, scope: !5806)
!5935 = !DILocation(line: 166, column: 63, scope: !5806)
!5936 = !DILocation(line: 166, column: 69, scope: !5806)
!5937 = !DILocation(line: 166, column: 67, scope: !5806)
!5938 = !DILocation(line: 166, column: 75, scope: !5806)
!5939 = !DILocation(line: 166, column: 81, scope: !5806)
!5940 = !DILocation(line: 166, column: 79, scope: !5806)
!5941 = !DILocation(line: 166, column: 73, scope: !5806)
!5942 = !DILocation(line: 166, column: 87, scope: !5806)
!5943 = !DILocation(line: 166, column: 93, scope: !5806)
!5944 = !DILocation(line: 166, column: 91, scope: !5806)
!5945 = !DILocation(line: 166, column: 85, scope: !5806)
!5946 = !DILocation(line: 166, column: 97, scope: !5806)
!5947 = !DILocation(line: 166, column: 104, scope: !5806)
!5948 = !DILocation(line: 166, column: 59, scope: !5806)
!5949 = !DILocation(line: 166, column: 28, scope: !5806)
!5950 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5817)
!5951 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5817)
!5952 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5817)
!5953 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5817)
!5954 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5817)
!5955 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5817)
!5956 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5817)
!5957 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5817)
!5958 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5817)
!5959 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5817)
!5960 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5817)
!5961 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5817)
!5962 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5817)
!5963 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5817)
!5964 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5817)
!5965 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5817)
!5966 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5817)
!5967 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5817)
!5968 = !DILocation(line: 166, column: 18, scope: !5806)
!5969 = !DILocation(line: 166, column: 20, scope: !5806)
!5970 = !DILocation(line: 166, column: 13, scope: !5806)
!5971 = !DILocation(line: 166, column: 26, scope: !5806)
!5972 = !DILocation(line: 183, column: 55, scope: !5806)
!5973 = !DILocation(line: 183, column: 62, scope: !5806)
!5974 = !DILocation(line: 183, column: 60, scope: !5806)
!5975 = !DILocation(line: 183, column: 69, scope: !5806)
!5976 = !DILocation(line: 183, column: 76, scope: !5806)
!5977 = !DILocation(line: 183, column: 74, scope: !5806)
!5978 = !DILocation(line: 183, column: 66, scope: !5806)
!5979 = !DILocation(line: 183, column: 83, scope: !5806)
!5980 = !DILocation(line: 183, column: 90, scope: !5806)
!5981 = !DILocation(line: 183, column: 88, scope: !5806)
!5982 = !DILocation(line: 183, column: 80, scope: !5806)
!5983 = !DILocation(line: 183, column: 96, scope: !5806)
!5984 = !DILocation(line: 183, column: 103, scope: !5806)
!5985 = !DILocation(line: 183, column: 50, scope: !5806)
!5986 = !DILocation(line: 183, column: 23, scope: !5806)
!5987 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5805)
!5988 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5805)
!5989 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5805)
!5990 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5805)
!5991 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5805)
!5992 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5805)
!5993 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5805)
!5994 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5805)
!5995 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5805)
!5996 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5805)
!5997 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5805)
!5998 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5805)
!5999 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5805)
!6000 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5805)
!6001 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5805)
!6002 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5805)
!6003 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5805)
!6004 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5805)
!6005 = !DILocation(line: 183, column: 18, scope: !5806)
!6006 = !DILocation(line: 183, column: 13, scope: !5806)
!6007 = !DILocation(line: 183, column: 21, scope: !5806)
!6008 = !DILocation(line: 187, column: 55, scope: !5806)
!6009 = !DILocation(line: 187, column: 62, scope: !5806)
!6010 = !DILocation(line: 187, column: 60, scope: !5806)
!6011 = !DILocation(line: 187, column: 71, scope: !5806)
!6012 = !DILocation(line: 187, column: 78, scope: !5806)
!6013 = !DILocation(line: 187, column: 76, scope: !5806)
!6014 = !DILocation(line: 187, column: 68, scope: !5806)
!6015 = !DILocation(line: 187, column: 85, scope: !5806)
!6016 = !DILocation(line: 187, column: 92, scope: !5806)
!6017 = !DILocation(line: 187, column: 90, scope: !5806)
!6018 = !DILocation(line: 187, column: 82, scope: !5806)
!6019 = !DILocation(line: 187, column: 96, scope: !5806)
!6020 = !DILocation(line: 187, column: 103, scope: !5806)
!6021 = !DILocation(line: 187, column: 50, scope: !5806)
!6022 = !DILocation(line: 187, column: 23, scope: !5806)
!6023 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !5814)
!6024 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !5814)
!6025 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !5814)
!6026 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !5814)
!6027 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !5814)
!6028 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !5814)
!6029 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !5814)
!6030 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !5814)
!6031 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !5814)
!6032 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !5814)
!6033 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !5814)
!6034 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !5814)
!6035 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !5814)
!6036 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !5814)
!6037 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !5814)
!6038 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !5814)
!6039 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !5814)
!6040 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !5814)
!6041 = !DILocation(line: 187, column: 18, scope: !5806)
!6042 = !DILocation(line: 187, column: 13, scope: !5806)
!6043 = !DILocation(line: 187, column: 21, scope: !5806)
!6044 = !DILocation(line: 191, column: 9, scope: !5806)
!6045 = !DILocation(line: 156, column: 29, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !5807, file: !266, discriminator: 2)
!6047 = !DILocation(line: 156, column: 9, scope: !6046)
!6048 = distinct !{!6048, !6049}
!6049 = !DILocation(line: 156, column: 9, scope: !5809)
!6050 = !DILocation(line: 193, column: 17, scope: !5809)
!6051 = !DILocation(line: 193, column: 20, scope: !5809)
!6052 = !DILocation(line: 193, column: 14, scope: !5809)
!6053 = !DILocation(line: 194, column: 17, scope: !5809)
!6054 = !DILocation(line: 194, column: 31, scope: !5809)
!6055 = !DILocation(line: 194, column: 14, scope: !5809)
!6056 = !DILocation(line: 195, column: 17, scope: !5809)
!6057 = !DILocation(line: 195, column: 31, scope: !5809)
!6058 = !DILocation(line: 195, column: 14, scope: !5809)
!6059 = !DILocation(line: 196, column: 17, scope: !5809)
!6060 = !DILocation(line: 196, column: 19, scope: !5809)
!6061 = !DILocation(line: 196, column: 14, scope: !5809)
!6062 = !DILocation(line: 197, column: 17, scope: !5809)
!6063 = !DILocation(line: 197, column: 19, scope: !5809)
!6064 = !DILocation(line: 197, column: 14, scope: !5809)
!6065 = !DILocation(line: 198, column: 17, scope: !5809)
!6066 = !DILocation(line: 198, column: 19, scope: !5809)
!6067 = !DILocation(line: 198, column: 14, scope: !5809)
!6068 = !DILocation(line: 199, column: 5, scope: !5809)
!6069 = !DILocation(line: 155, column: 25, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !5810, file: !266, discriminator: 2)
!6071 = !DILocation(line: 155, column: 5, scope: !6070)
!6072 = distinct !{!6072, !6073}
!6073 = !DILocation(line: 155, column: 5, scope: !5803)
!6074 = !DILocation(line: 200, column: 1, scope: !5803)
!6075 = distinct !DISubprogram(name: "rgb2yuv_422p12_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!6076 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6077)
!6077 = distinct !DILocation(line: 170, column: 31, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !266, line: 156, column: 33)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !266, line: 156, column: 9)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !266, line: 156, column: 9)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !266, line: 155, column: 29)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !266, line: 155, column: 5)
!6083 = distinct !DILexicalBlock(scope: !6075, file: !266, line: 155, column: 5)
!6084 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6077)
!6085 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6086)
!6086 = distinct !DILocation(line: 183, column: 23, scope: !6078)
!6087 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6086)
!6088 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6089)
!6089 = distinct !DILocation(line: 187, column: 23, scope: !6078)
!6090 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6089)
!6091 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6092)
!6092 = distinct !DILocation(line: 166, column: 28, scope: !6078)
!6093 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6092)
!6094 = !DILocalVariable(name: "_yuv", arg: 1, scope: !6075, file: !266, line: 130, type: !17)
!6095 = !DILocation(line: 130, column: 39, scope: !6075)
!6096 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !6075, file: !266, line: 130, type: !50)
!6097 = !DILocation(line: 130, column: 64, scope: !6075)
!6098 = !DILocalVariable(name: "rgb", arg: 3, scope: !6075, file: !266, line: 131, type: !43)
!6099 = !DILocation(line: 131, column: 34, scope: !6075)
!6100 = !DILocalVariable(name: "s", arg: 4, scope: !6075, file: !266, line: 131, type: !47)
!6101 = !DILocation(line: 131, column: 52, scope: !6075)
!6102 = !DILocalVariable(name: "w", arg: 5, scope: !6075, file: !266, line: 132, type: !52)
!6103 = !DILocation(line: 132, column: 29, scope: !6075)
!6104 = !DILocalVariable(name: "h", arg: 6, scope: !6075, file: !266, line: 132, type: !52)
!6105 = !DILocation(line: 132, column: 36, scope: !6075)
!6106 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !6075, file: !266, line: 132, type: !53)
!6107 = !DILocation(line: 132, column: 53, scope: !6075)
!6108 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !6075, file: !266, line: 133, type: !59)
!6109 = !DILocation(line: 133, column: 39, scope: !6075)
!6110 = !DILocalVariable(name: "yuv", scope: !6075, file: !266, line: 135, type: !22)
!6111 = !DILocation(line: 135, column: 16, scope: !6075)
!6112 = !DILocation(line: 135, column: 36, scope: !6075)
!6113 = !DILocation(line: 135, column: 22, scope: !6075)
!6114 = !DILocalVariable(name: "yuv0", scope: !6075, file: !266, line: 136, type: !23)
!6115 = !DILocation(line: 136, column: 15, scope: !6075)
!6116 = !DILocation(line: 136, column: 22, scope: !6075)
!6117 = !DILocalVariable(name: "yuv1", scope: !6075, file: !266, line: 136, type: !23)
!6118 = !DILocation(line: 136, column: 31, scope: !6075)
!6119 = !DILocation(line: 136, column: 38, scope: !6075)
!6120 = !DILocalVariable(name: "yuv2", scope: !6075, file: !266, line: 136, type: !23)
!6121 = !DILocation(line: 136, column: 47, scope: !6075)
!6122 = !DILocation(line: 136, column: 54, scope: !6075)
!6123 = !DILocalVariable(name: "rgb0", scope: !6075, file: !266, line: 137, type: !59)
!6124 = !DILocation(line: 137, column: 20, scope: !6075)
!6125 = !DILocation(line: 137, column: 27, scope: !6075)
!6126 = !DILocalVariable(name: "rgb1", scope: !6075, file: !266, line: 137, type: !59)
!6127 = !DILocation(line: 137, column: 36, scope: !6075)
!6128 = !DILocation(line: 137, column: 43, scope: !6075)
!6129 = !DILocalVariable(name: "rgb2", scope: !6075, file: !266, line: 137, type: !59)
!6130 = !DILocation(line: 137, column: 52, scope: !6075)
!6131 = !DILocation(line: 137, column: 59, scope: !6075)
!6132 = !DILocalVariable(name: "y", scope: !6075, file: !266, line: 138, type: !52)
!6133 = !DILocation(line: 138, column: 9, scope: !6075)
!6134 = !DILocalVariable(name: "x", scope: !6075, file: !266, line: 138, type: !52)
!6135 = !DILocation(line: 138, column: 12, scope: !6075)
!6136 = !DILocalVariable(name: "sh", scope: !6075, file: !266, line: 139, type: !343)
!6137 = !DILocation(line: 139, column: 15, scope: !6075)
!6138 = !DILocalVariable(name: "rnd", scope: !6075, file: !266, line: 140, type: !343)
!6139 = !DILocation(line: 140, column: 15, scope: !6075)
!6140 = !DILocalVariable(name: "cry", scope: !6075, file: !266, line: 141, type: !52)
!6141 = !DILocation(line: 141, column: 9, scope: !6075)
!6142 = !DILocation(line: 141, column: 15, scope: !6075)
!6143 = !DILocalVariable(name: "cgy", scope: !6075, file: !266, line: 142, type: !52)
!6144 = !DILocation(line: 142, column: 9, scope: !6075)
!6145 = !DILocation(line: 142, column: 15, scope: !6075)
!6146 = !DILocalVariable(name: "cby", scope: !6075, file: !266, line: 143, type: !52)
!6147 = !DILocation(line: 143, column: 9, scope: !6075)
!6148 = !DILocation(line: 143, column: 15, scope: !6075)
!6149 = !DILocalVariable(name: "cru", scope: !6075, file: !266, line: 144, type: !52)
!6150 = !DILocation(line: 144, column: 9, scope: !6075)
!6151 = !DILocation(line: 144, column: 15, scope: !6075)
!6152 = !DILocalVariable(name: "cgu", scope: !6075, file: !266, line: 145, type: !52)
!6153 = !DILocation(line: 145, column: 9, scope: !6075)
!6154 = !DILocation(line: 145, column: 15, scope: !6075)
!6155 = !DILocalVariable(name: "cburv", scope: !6075, file: !266, line: 146, type: !52)
!6156 = !DILocation(line: 146, column: 9, scope: !6075)
!6157 = !DILocation(line: 146, column: 17, scope: !6075)
!6158 = !DILocalVariable(name: "cgv", scope: !6075, file: !266, line: 147, type: !52)
!6159 = !DILocation(line: 147, column: 9, scope: !6075)
!6160 = !DILocation(line: 147, column: 15, scope: !6075)
!6161 = !DILocalVariable(name: "cbv", scope: !6075, file: !266, line: 148, type: !52)
!6162 = !DILocation(line: 148, column: 9, scope: !6075)
!6163 = !DILocation(line: 148, column: 15, scope: !6075)
!6164 = !DILocalVariable(name: "s0", scope: !6075, file: !266, line: 149, type: !47)
!6165 = !DILocation(line: 149, column: 15, scope: !6075)
!6166 = !DILocation(line: 149, column: 20, scope: !6075)
!6167 = !DILocation(line: 149, column: 34, scope: !6075)
!6168 = !DILocalVariable(name: "uv_offset", scope: !6075, file: !266, line: 150, type: !343)
!6169 = !DILocation(line: 150, column: 15, scope: !6075)
!6170 = !DILocation(line: 153, column: 58, scope: !6075)
!6171 = !DILocation(line: 153, column: 61, scope: !6075)
!6172 = !DILocation(line: 153, column: 72, scope: !6075)
!6173 = !DILocation(line: 153, column: 77, scope: !6075)
!6174 = !DILocation(line: 153, column: 7, scope: !6075)
!6175 = !DILocation(line: 154, column: 58, scope: !6075)
!6176 = !DILocation(line: 154, column: 61, scope: !6075)
!6177 = !DILocation(line: 154, column: 72, scope: !6075)
!6178 = !DILocation(line: 154, column: 77, scope: !6075)
!6179 = !DILocation(line: 154, column: 7, scope: !6075)
!6180 = !DILocation(line: 155, column: 12, scope: !6083)
!6181 = !DILocation(line: 155, column: 10, scope: !6083)
!6182 = !DILocation(line: 155, column: 17, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !6082, file: !266, discriminator: 1)
!6184 = !DILocation(line: 155, column: 21, scope: !6183)
!6185 = !DILocation(line: 155, column: 19, scope: !6183)
!6186 = !DILocation(line: 155, column: 5, scope: !6183)
!6187 = !DILocation(line: 156, column: 16, scope: !6080)
!6188 = !DILocation(line: 156, column: 14, scope: !6080)
!6189 = !DILocation(line: 156, column: 21, scope: !6190)
!6190 = !DILexicalBlockFile(scope: !6079, file: !266, discriminator: 1)
!6191 = !DILocation(line: 156, column: 25, scope: !6190)
!6192 = !DILocation(line: 156, column: 23, scope: !6190)
!6193 = !DILocation(line: 156, column: 9, scope: !6190)
!6194 = !DILocalVariable(name: "r00", scope: !6078, file: !266, line: 157, type: !52)
!6195 = !DILocation(line: 157, column: 17, scope: !6078)
!6196 = !DILocation(line: 157, column: 28, scope: !6078)
!6197 = !DILocation(line: 157, column: 30, scope: !6078)
!6198 = !DILocation(line: 157, column: 23, scope: !6078)
!6199 = !DILocalVariable(name: "g00", scope: !6078, file: !266, line: 157, type: !52)
!6200 = !DILocation(line: 157, column: 37, scope: !6078)
!6201 = !DILocation(line: 157, column: 48, scope: !6078)
!6202 = !DILocation(line: 157, column: 50, scope: !6078)
!6203 = !DILocation(line: 157, column: 43, scope: !6078)
!6204 = !DILocalVariable(name: "b00", scope: !6078, file: !266, line: 157, type: !52)
!6205 = !DILocation(line: 157, column: 57, scope: !6078)
!6206 = !DILocation(line: 157, column: 68, scope: !6078)
!6207 = !DILocation(line: 157, column: 70, scope: !6078)
!6208 = !DILocation(line: 157, column: 63, scope: !6078)
!6209 = !DILocalVariable(name: "r01", scope: !6078, file: !266, line: 159, type: !52)
!6210 = !DILocation(line: 159, column: 17, scope: !6078)
!6211 = !DILocation(line: 159, column: 28, scope: !6078)
!6212 = !DILocation(line: 159, column: 30, scope: !6078)
!6213 = !DILocation(line: 159, column: 34, scope: !6078)
!6214 = !DILocation(line: 159, column: 23, scope: !6078)
!6215 = !DILocalVariable(name: "g01", scope: !6078, file: !266, line: 159, type: !52)
!6216 = !DILocation(line: 159, column: 40, scope: !6078)
!6217 = !DILocation(line: 159, column: 51, scope: !6078)
!6218 = !DILocation(line: 159, column: 53, scope: !6078)
!6219 = !DILocation(line: 159, column: 57, scope: !6078)
!6220 = !DILocation(line: 159, column: 46, scope: !6078)
!6221 = !DILocalVariable(name: "b01", scope: !6078, file: !266, line: 159, type: !52)
!6222 = !DILocation(line: 159, column: 63, scope: !6078)
!6223 = !DILocation(line: 159, column: 74, scope: !6078)
!6224 = !DILocation(line: 159, column: 76, scope: !6078)
!6225 = !DILocation(line: 159, column: 80, scope: !6078)
!6226 = !DILocation(line: 159, column: 69, scope: !6078)
!6227 = !DILocation(line: 166, column: 45, scope: !6078)
!6228 = !DILocation(line: 166, column: 63, scope: !6078)
!6229 = !DILocation(line: 166, column: 69, scope: !6078)
!6230 = !DILocation(line: 166, column: 67, scope: !6078)
!6231 = !DILocation(line: 166, column: 75, scope: !6078)
!6232 = !DILocation(line: 166, column: 81, scope: !6078)
!6233 = !DILocation(line: 166, column: 79, scope: !6078)
!6234 = !DILocation(line: 166, column: 73, scope: !6078)
!6235 = !DILocation(line: 166, column: 87, scope: !6078)
!6236 = !DILocation(line: 166, column: 93, scope: !6078)
!6237 = !DILocation(line: 166, column: 91, scope: !6078)
!6238 = !DILocation(line: 166, column: 85, scope: !6078)
!6239 = !DILocation(line: 166, column: 97, scope: !6078)
!6240 = !DILocation(line: 166, column: 104, scope: !6078)
!6241 = !DILocation(line: 166, column: 59, scope: !6078)
!6242 = !DILocation(line: 166, column: 28, scope: !6078)
!6243 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6092)
!6244 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6092)
!6245 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6092)
!6246 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6092)
!6247 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6092)
!6248 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6092)
!6249 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6092)
!6250 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6092)
!6251 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6092)
!6252 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6092)
!6253 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6092)
!6254 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6092)
!6255 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6092)
!6256 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6092)
!6257 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6092)
!6258 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6092)
!6259 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6092)
!6260 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6092)
!6261 = !DILocation(line: 166, column: 18, scope: !6078)
!6262 = !DILocation(line: 166, column: 20, scope: !6078)
!6263 = !DILocation(line: 166, column: 13, scope: !6078)
!6264 = !DILocation(line: 166, column: 26, scope: !6078)
!6265 = !DILocation(line: 170, column: 48, scope: !6078)
!6266 = !DILocation(line: 170, column: 66, scope: !6078)
!6267 = !DILocation(line: 170, column: 72, scope: !6078)
!6268 = !DILocation(line: 170, column: 70, scope: !6078)
!6269 = !DILocation(line: 170, column: 78, scope: !6078)
!6270 = !DILocation(line: 170, column: 84, scope: !6078)
!6271 = !DILocation(line: 170, column: 82, scope: !6078)
!6272 = !DILocation(line: 170, column: 76, scope: !6078)
!6273 = !DILocation(line: 170, column: 90, scope: !6078)
!6274 = !DILocation(line: 170, column: 96, scope: !6078)
!6275 = !DILocation(line: 170, column: 94, scope: !6078)
!6276 = !DILocation(line: 170, column: 88, scope: !6078)
!6277 = !DILocation(line: 170, column: 100, scope: !6078)
!6278 = !DILocation(line: 170, column: 107, scope: !6078)
!6279 = !DILocation(line: 170, column: 62, scope: !6078)
!6280 = !DILocation(line: 170, column: 31, scope: !6078)
!6281 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6077)
!6282 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6077)
!6283 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6077)
!6284 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6077)
!6285 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6077)
!6286 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6077)
!6287 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6077)
!6288 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6077)
!6289 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6077)
!6290 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6077)
!6291 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6077)
!6292 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6077)
!6293 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6077)
!6294 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6077)
!6295 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6077)
!6296 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6077)
!6297 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6077)
!6298 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6077)
!6299 = !DILocation(line: 170, column: 18, scope: !6078)
!6300 = !DILocation(line: 170, column: 20, scope: !6078)
!6301 = !DILocation(line: 170, column: 24, scope: !6078)
!6302 = !DILocation(line: 170, column: 13, scope: !6078)
!6303 = !DILocation(line: 170, column: 29, scope: !6078)
!6304 = !DILocation(line: 183, column: 57, scope: !6078)
!6305 = !DILocation(line: 183, column: 65, scope: !6078)
!6306 = !DILocation(line: 183, column: 62, scope: !6078)
!6307 = !DILocation(line: 183, column: 70, scope: !6078)
!6308 = !DILocation(line: 183, column: 75, scope: !6078)
!6309 = !DILocation(line: 183, column: 83, scope: !6078)
!6310 = !DILocation(line: 183, column: 81, scope: !6078)
!6311 = !DILocation(line: 183, column: 92, scope: !6078)
!6312 = !DILocation(line: 183, column: 100, scope: !6078)
!6313 = !DILocation(line: 183, column: 97, scope: !6078)
!6314 = !DILocation(line: 183, column: 105, scope: !6078)
!6315 = !DILocation(line: 183, column: 110, scope: !6078)
!6316 = !DILocation(line: 183, column: 118, scope: !6078)
!6317 = !DILocation(line: 183, column: 116, scope: !6078)
!6318 = !DILocation(line: 183, column: 87, scope: !6078)
!6319 = !DILocation(line: 183, column: 127, scope: !6078)
!6320 = !DILocation(line: 183, column: 135, scope: !6078)
!6321 = !DILocation(line: 183, column: 132, scope: !6078)
!6322 = !DILocation(line: 183, column: 140, scope: !6078)
!6323 = !DILocation(line: 183, column: 145, scope: !6078)
!6324 = !DILocation(line: 183, column: 153, scope: !6078)
!6325 = !DILocation(line: 183, column: 151, scope: !6078)
!6326 = !DILocation(line: 183, column: 122, scope: !6078)
!6327 = !DILocation(line: 183, column: 159, scope: !6078)
!6328 = !DILocation(line: 183, column: 166, scope: !6078)
!6329 = !DILocation(line: 183, column: 50, scope: !6078)
!6330 = !DILocation(line: 183, column: 23, scope: !6078)
!6331 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6086)
!6332 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6086)
!6333 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6086)
!6334 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6086)
!6335 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6086)
!6336 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6086)
!6337 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6086)
!6338 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6086)
!6339 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6086)
!6340 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6086)
!6341 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6086)
!6342 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6086)
!6343 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6086)
!6344 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6086)
!6345 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6086)
!6346 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6086)
!6347 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6086)
!6348 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6086)
!6349 = !DILocation(line: 183, column: 18, scope: !6078)
!6350 = !DILocation(line: 183, column: 13, scope: !6078)
!6351 = !DILocation(line: 183, column: 21, scope: !6078)
!6352 = !DILocation(line: 187, column: 57, scope: !6078)
!6353 = !DILocation(line: 187, column: 65, scope: !6078)
!6354 = !DILocation(line: 187, column: 62, scope: !6078)
!6355 = !DILocation(line: 187, column: 70, scope: !6078)
!6356 = !DILocation(line: 187, column: 75, scope: !6078)
!6357 = !DILocation(line: 187, column: 83, scope: !6078)
!6358 = !DILocation(line: 187, column: 81, scope: !6078)
!6359 = !DILocation(line: 187, column: 94, scope: !6078)
!6360 = !DILocation(line: 187, column: 102, scope: !6078)
!6361 = !DILocation(line: 187, column: 99, scope: !6078)
!6362 = !DILocation(line: 187, column: 107, scope: !6078)
!6363 = !DILocation(line: 187, column: 112, scope: !6078)
!6364 = !DILocation(line: 187, column: 120, scope: !6078)
!6365 = !DILocation(line: 187, column: 118, scope: !6078)
!6366 = !DILocation(line: 187, column: 89, scope: !6078)
!6367 = !DILocation(line: 187, column: 129, scope: !6078)
!6368 = !DILocation(line: 187, column: 137, scope: !6078)
!6369 = !DILocation(line: 187, column: 134, scope: !6078)
!6370 = !DILocation(line: 187, column: 142, scope: !6078)
!6371 = !DILocation(line: 187, column: 147, scope: !6078)
!6372 = !DILocation(line: 187, column: 155, scope: !6078)
!6373 = !DILocation(line: 187, column: 153, scope: !6078)
!6374 = !DILocation(line: 187, column: 124, scope: !6078)
!6375 = !DILocation(line: 187, column: 159, scope: !6078)
!6376 = !DILocation(line: 187, column: 166, scope: !6078)
!6377 = !DILocation(line: 187, column: 50, scope: !6078)
!6378 = !DILocation(line: 187, column: 23, scope: !6078)
!6379 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6089)
!6380 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6089)
!6381 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6089)
!6382 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6089)
!6383 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6089)
!6384 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6089)
!6385 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6089)
!6386 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6089)
!6387 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6089)
!6388 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6089)
!6389 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6089)
!6390 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6089)
!6391 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6089)
!6392 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6089)
!6393 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6089)
!6394 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6089)
!6395 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6089)
!6396 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6089)
!6397 = !DILocation(line: 187, column: 18, scope: !6078)
!6398 = !DILocation(line: 187, column: 13, scope: !6078)
!6399 = !DILocation(line: 187, column: 21, scope: !6078)
!6400 = !DILocation(line: 191, column: 9, scope: !6078)
!6401 = !DILocation(line: 156, column: 29, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6079, file: !266, discriminator: 2)
!6403 = !DILocation(line: 156, column: 9, scope: !6402)
!6404 = distinct !{!6404, !6405}
!6405 = !DILocation(line: 156, column: 9, scope: !6081)
!6406 = !DILocation(line: 193, column: 17, scope: !6081)
!6407 = !DILocation(line: 193, column: 20, scope: !6081)
!6408 = !DILocation(line: 193, column: 14, scope: !6081)
!6409 = !DILocation(line: 194, column: 17, scope: !6081)
!6410 = !DILocation(line: 194, column: 31, scope: !6081)
!6411 = !DILocation(line: 194, column: 14, scope: !6081)
!6412 = !DILocation(line: 195, column: 17, scope: !6081)
!6413 = !DILocation(line: 195, column: 31, scope: !6081)
!6414 = !DILocation(line: 195, column: 14, scope: !6081)
!6415 = !DILocation(line: 196, column: 17, scope: !6081)
!6416 = !DILocation(line: 196, column: 19, scope: !6081)
!6417 = !DILocation(line: 196, column: 14, scope: !6081)
!6418 = !DILocation(line: 197, column: 17, scope: !6081)
!6419 = !DILocation(line: 197, column: 19, scope: !6081)
!6420 = !DILocation(line: 197, column: 14, scope: !6081)
!6421 = !DILocation(line: 198, column: 17, scope: !6081)
!6422 = !DILocation(line: 198, column: 19, scope: !6081)
!6423 = !DILocation(line: 198, column: 14, scope: !6081)
!6424 = !DILocation(line: 199, column: 5, scope: !6081)
!6425 = !DILocation(line: 155, column: 25, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !6082, file: !266, discriminator: 2)
!6427 = !DILocation(line: 155, column: 5, scope: !6426)
!6428 = distinct !{!6428, !6429}
!6429 = !DILocation(line: 155, column: 5, scope: !6075)
!6430 = !DILocation(line: 200, column: 1, scope: !6075)
!6431 = distinct !DISubprogram(name: "rgb2yuv_420p12_c", scope: !266, file: !266, line: 130, type: !65, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!6432 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6433)
!6433 = distinct !DILocation(line: 170, column: 31, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !266, line: 156, column: 33)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !266, line: 156, column: 9)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !266, line: 156, column: 9)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !266, line: 155, column: 29)
!6438 = distinct !DILexicalBlock(scope: !6439, file: !266, line: 155, column: 5)
!6439 = distinct !DILexicalBlock(scope: !6431, file: !266, line: 155, column: 5)
!6440 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6433)
!6441 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6442)
!6442 = distinct !DILocation(line: 174, column: 36, scope: !6434)
!6443 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6442)
!6444 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6445)
!6445 = distinct !DILocation(line: 177, column: 36, scope: !6434)
!6446 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6445)
!6447 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6448)
!6448 = distinct !DILocation(line: 183, column: 23, scope: !6434)
!6449 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6448)
!6450 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6451)
!6451 = distinct !DILocation(line: 187, column: 23, scope: !6434)
!6452 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6451)
!6453 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !6454)
!6454 = distinct !DILocation(line: 166, column: 28, scope: !6434)
!6455 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !6454)
!6456 = !DILocalVariable(name: "_yuv", arg: 1, scope: !6431, file: !266, line: 130, type: !17)
!6457 = !DILocation(line: 130, column: 39, scope: !6431)
!6458 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !6431, file: !266, line: 130, type: !50)
!6459 = !DILocation(line: 130, column: 64, scope: !6431)
!6460 = !DILocalVariable(name: "rgb", arg: 3, scope: !6431, file: !266, line: 131, type: !43)
!6461 = !DILocation(line: 131, column: 34, scope: !6431)
!6462 = !DILocalVariable(name: "s", arg: 4, scope: !6431, file: !266, line: 131, type: !47)
!6463 = !DILocation(line: 131, column: 52, scope: !6431)
!6464 = !DILocalVariable(name: "w", arg: 5, scope: !6431, file: !266, line: 132, type: !52)
!6465 = !DILocation(line: 132, column: 29, scope: !6431)
!6466 = !DILocalVariable(name: "h", arg: 6, scope: !6431, file: !266, line: 132, type: !52)
!6467 = !DILocation(line: 132, column: 36, scope: !6431)
!6468 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !6431, file: !266, line: 132, type: !53)
!6469 = !DILocation(line: 132, column: 53, scope: !6431)
!6470 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !6431, file: !266, line: 133, type: !59)
!6471 = !DILocation(line: 133, column: 39, scope: !6431)
!6472 = !DILocalVariable(name: "yuv", scope: !6431, file: !266, line: 135, type: !22)
!6473 = !DILocation(line: 135, column: 16, scope: !6431)
!6474 = !DILocation(line: 135, column: 36, scope: !6431)
!6475 = !DILocation(line: 135, column: 22, scope: !6431)
!6476 = !DILocalVariable(name: "yuv0", scope: !6431, file: !266, line: 136, type: !23)
!6477 = !DILocation(line: 136, column: 15, scope: !6431)
!6478 = !DILocation(line: 136, column: 22, scope: !6431)
!6479 = !DILocalVariable(name: "yuv1", scope: !6431, file: !266, line: 136, type: !23)
!6480 = !DILocation(line: 136, column: 31, scope: !6431)
!6481 = !DILocation(line: 136, column: 38, scope: !6431)
!6482 = !DILocalVariable(name: "yuv2", scope: !6431, file: !266, line: 136, type: !23)
!6483 = !DILocation(line: 136, column: 47, scope: !6431)
!6484 = !DILocation(line: 136, column: 54, scope: !6431)
!6485 = !DILocalVariable(name: "rgb0", scope: !6431, file: !266, line: 137, type: !59)
!6486 = !DILocation(line: 137, column: 20, scope: !6431)
!6487 = !DILocation(line: 137, column: 27, scope: !6431)
!6488 = !DILocalVariable(name: "rgb1", scope: !6431, file: !266, line: 137, type: !59)
!6489 = !DILocation(line: 137, column: 36, scope: !6431)
!6490 = !DILocation(line: 137, column: 43, scope: !6431)
!6491 = !DILocalVariable(name: "rgb2", scope: !6431, file: !266, line: 137, type: !59)
!6492 = !DILocation(line: 137, column: 52, scope: !6431)
!6493 = !DILocation(line: 137, column: 59, scope: !6431)
!6494 = !DILocalVariable(name: "y", scope: !6431, file: !266, line: 138, type: !52)
!6495 = !DILocation(line: 138, column: 9, scope: !6431)
!6496 = !DILocalVariable(name: "x", scope: !6431, file: !266, line: 138, type: !52)
!6497 = !DILocation(line: 138, column: 12, scope: !6431)
!6498 = !DILocalVariable(name: "sh", scope: !6431, file: !266, line: 139, type: !343)
!6499 = !DILocation(line: 139, column: 15, scope: !6431)
!6500 = !DILocalVariable(name: "rnd", scope: !6431, file: !266, line: 140, type: !343)
!6501 = !DILocation(line: 140, column: 15, scope: !6431)
!6502 = !DILocalVariable(name: "cry", scope: !6431, file: !266, line: 141, type: !52)
!6503 = !DILocation(line: 141, column: 9, scope: !6431)
!6504 = !DILocation(line: 141, column: 15, scope: !6431)
!6505 = !DILocalVariable(name: "cgy", scope: !6431, file: !266, line: 142, type: !52)
!6506 = !DILocation(line: 142, column: 9, scope: !6431)
!6507 = !DILocation(line: 142, column: 15, scope: !6431)
!6508 = !DILocalVariable(name: "cby", scope: !6431, file: !266, line: 143, type: !52)
!6509 = !DILocation(line: 143, column: 9, scope: !6431)
!6510 = !DILocation(line: 143, column: 15, scope: !6431)
!6511 = !DILocalVariable(name: "cru", scope: !6431, file: !266, line: 144, type: !52)
!6512 = !DILocation(line: 144, column: 9, scope: !6431)
!6513 = !DILocation(line: 144, column: 15, scope: !6431)
!6514 = !DILocalVariable(name: "cgu", scope: !6431, file: !266, line: 145, type: !52)
!6515 = !DILocation(line: 145, column: 9, scope: !6431)
!6516 = !DILocation(line: 145, column: 15, scope: !6431)
!6517 = !DILocalVariable(name: "cburv", scope: !6431, file: !266, line: 146, type: !52)
!6518 = !DILocation(line: 146, column: 9, scope: !6431)
!6519 = !DILocation(line: 146, column: 17, scope: !6431)
!6520 = !DILocalVariable(name: "cgv", scope: !6431, file: !266, line: 147, type: !52)
!6521 = !DILocation(line: 147, column: 9, scope: !6431)
!6522 = !DILocation(line: 147, column: 15, scope: !6431)
!6523 = !DILocalVariable(name: "cbv", scope: !6431, file: !266, line: 148, type: !52)
!6524 = !DILocation(line: 148, column: 9, scope: !6431)
!6525 = !DILocation(line: 148, column: 15, scope: !6431)
!6526 = !DILocalVariable(name: "s0", scope: !6431, file: !266, line: 149, type: !47)
!6527 = !DILocation(line: 149, column: 15, scope: !6431)
!6528 = !DILocation(line: 149, column: 20, scope: !6431)
!6529 = !DILocation(line: 149, column: 34, scope: !6431)
!6530 = !DILocalVariable(name: "uv_offset", scope: !6431, file: !266, line: 150, type: !343)
!6531 = !DILocation(line: 150, column: 15, scope: !6431)
!6532 = !DILocation(line: 153, column: 58, scope: !6431)
!6533 = !DILocation(line: 153, column: 61, scope: !6431)
!6534 = !DILocation(line: 153, column: 72, scope: !6431)
!6535 = !DILocation(line: 153, column: 77, scope: !6431)
!6536 = !DILocation(line: 153, column: 7, scope: !6431)
!6537 = !DILocation(line: 154, column: 58, scope: !6431)
!6538 = !DILocation(line: 154, column: 61, scope: !6431)
!6539 = !DILocation(line: 154, column: 72, scope: !6431)
!6540 = !DILocation(line: 154, column: 77, scope: !6431)
!6541 = !DILocation(line: 154, column: 7, scope: !6431)
!6542 = !DILocation(line: 155, column: 12, scope: !6439)
!6543 = !DILocation(line: 155, column: 10, scope: !6439)
!6544 = !DILocation(line: 155, column: 17, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6438, file: !266, discriminator: 1)
!6546 = !DILocation(line: 155, column: 21, scope: !6545)
!6547 = !DILocation(line: 155, column: 19, scope: !6545)
!6548 = !DILocation(line: 155, column: 5, scope: !6545)
!6549 = !DILocation(line: 156, column: 16, scope: !6436)
!6550 = !DILocation(line: 156, column: 14, scope: !6436)
!6551 = !DILocation(line: 156, column: 21, scope: !6552)
!6552 = !DILexicalBlockFile(scope: !6435, file: !266, discriminator: 1)
!6553 = !DILocation(line: 156, column: 25, scope: !6552)
!6554 = !DILocation(line: 156, column: 23, scope: !6552)
!6555 = !DILocation(line: 156, column: 9, scope: !6552)
!6556 = !DILocalVariable(name: "r00", scope: !6434, file: !266, line: 157, type: !52)
!6557 = !DILocation(line: 157, column: 17, scope: !6434)
!6558 = !DILocation(line: 157, column: 28, scope: !6434)
!6559 = !DILocation(line: 157, column: 30, scope: !6434)
!6560 = !DILocation(line: 157, column: 23, scope: !6434)
!6561 = !DILocalVariable(name: "g00", scope: !6434, file: !266, line: 157, type: !52)
!6562 = !DILocation(line: 157, column: 37, scope: !6434)
!6563 = !DILocation(line: 157, column: 48, scope: !6434)
!6564 = !DILocation(line: 157, column: 50, scope: !6434)
!6565 = !DILocation(line: 157, column: 43, scope: !6434)
!6566 = !DILocalVariable(name: "b00", scope: !6434, file: !266, line: 157, type: !52)
!6567 = !DILocation(line: 157, column: 57, scope: !6434)
!6568 = !DILocation(line: 157, column: 68, scope: !6434)
!6569 = !DILocation(line: 157, column: 70, scope: !6434)
!6570 = !DILocation(line: 157, column: 63, scope: !6434)
!6571 = !DILocalVariable(name: "r01", scope: !6434, file: !266, line: 159, type: !52)
!6572 = !DILocation(line: 159, column: 17, scope: !6434)
!6573 = !DILocation(line: 159, column: 28, scope: !6434)
!6574 = !DILocation(line: 159, column: 30, scope: !6434)
!6575 = !DILocation(line: 159, column: 34, scope: !6434)
!6576 = !DILocation(line: 159, column: 23, scope: !6434)
!6577 = !DILocalVariable(name: "g01", scope: !6434, file: !266, line: 159, type: !52)
!6578 = !DILocation(line: 159, column: 40, scope: !6434)
!6579 = !DILocation(line: 159, column: 51, scope: !6434)
!6580 = !DILocation(line: 159, column: 53, scope: !6434)
!6581 = !DILocation(line: 159, column: 57, scope: !6434)
!6582 = !DILocation(line: 159, column: 46, scope: !6434)
!6583 = !DILocalVariable(name: "b01", scope: !6434, file: !266, line: 159, type: !52)
!6584 = !DILocation(line: 159, column: 63, scope: !6434)
!6585 = !DILocation(line: 159, column: 74, scope: !6434)
!6586 = !DILocation(line: 159, column: 76, scope: !6434)
!6587 = !DILocation(line: 159, column: 80, scope: !6434)
!6588 = !DILocation(line: 159, column: 69, scope: !6434)
!6589 = !DILocalVariable(name: "r10", scope: !6434, file: !266, line: 161, type: !52)
!6590 = !DILocation(line: 161, column: 17, scope: !6434)
!6591 = !DILocation(line: 161, column: 28, scope: !6434)
!6592 = !DILocation(line: 161, column: 30, scope: !6434)
!6593 = !DILocation(line: 161, column: 34, scope: !6434)
!6594 = !DILocation(line: 161, column: 40, scope: !6434)
!6595 = !DILocation(line: 161, column: 38, scope: !6434)
!6596 = !DILocation(line: 161, column: 23, scope: !6434)
!6597 = !DILocalVariable(name: "g10", scope: !6434, file: !266, line: 161, type: !52)
!6598 = !DILocation(line: 161, column: 44, scope: !6434)
!6599 = !DILocation(line: 161, column: 55, scope: !6434)
!6600 = !DILocation(line: 161, column: 57, scope: !6434)
!6601 = !DILocation(line: 161, column: 61, scope: !6434)
!6602 = !DILocation(line: 161, column: 67, scope: !6434)
!6603 = !DILocation(line: 161, column: 65, scope: !6434)
!6604 = !DILocation(line: 161, column: 50, scope: !6434)
!6605 = !DILocalVariable(name: "b10", scope: !6434, file: !266, line: 161, type: !52)
!6606 = !DILocation(line: 161, column: 71, scope: !6434)
!6607 = !DILocation(line: 161, column: 82, scope: !6434)
!6608 = !DILocation(line: 161, column: 84, scope: !6434)
!6609 = !DILocation(line: 161, column: 88, scope: !6434)
!6610 = !DILocation(line: 161, column: 94, scope: !6434)
!6611 = !DILocation(line: 161, column: 92, scope: !6434)
!6612 = !DILocation(line: 161, column: 77, scope: !6434)
!6613 = !DILocalVariable(name: "r11", scope: !6434, file: !266, line: 162, type: !52)
!6614 = !DILocation(line: 162, column: 17, scope: !6434)
!6615 = !DILocation(line: 162, column: 28, scope: !6434)
!6616 = !DILocation(line: 162, column: 30, scope: !6434)
!6617 = !DILocation(line: 162, column: 34, scope: !6434)
!6618 = !DILocation(line: 162, column: 40, scope: !6434)
!6619 = !DILocation(line: 162, column: 38, scope: !6434)
!6620 = !DILocation(line: 162, column: 23, scope: !6434)
!6621 = !DILocalVariable(name: "g11", scope: !6434, file: !266, line: 162, type: !52)
!6622 = !DILocation(line: 162, column: 44, scope: !6434)
!6623 = !DILocation(line: 162, column: 55, scope: !6434)
!6624 = !DILocation(line: 162, column: 57, scope: !6434)
!6625 = !DILocation(line: 162, column: 61, scope: !6434)
!6626 = !DILocation(line: 162, column: 67, scope: !6434)
!6627 = !DILocation(line: 162, column: 65, scope: !6434)
!6628 = !DILocation(line: 162, column: 50, scope: !6434)
!6629 = !DILocalVariable(name: "b11", scope: !6434, file: !266, line: 162, type: !52)
!6630 = !DILocation(line: 162, column: 71, scope: !6434)
!6631 = !DILocation(line: 162, column: 82, scope: !6434)
!6632 = !DILocation(line: 162, column: 84, scope: !6434)
!6633 = !DILocation(line: 162, column: 88, scope: !6434)
!6634 = !DILocation(line: 162, column: 94, scope: !6434)
!6635 = !DILocation(line: 162, column: 92, scope: !6434)
!6636 = !DILocation(line: 162, column: 77, scope: !6434)
!6637 = !DILocation(line: 166, column: 45, scope: !6434)
!6638 = !DILocation(line: 166, column: 63, scope: !6434)
!6639 = !DILocation(line: 166, column: 69, scope: !6434)
!6640 = !DILocation(line: 166, column: 67, scope: !6434)
!6641 = !DILocation(line: 166, column: 75, scope: !6434)
!6642 = !DILocation(line: 166, column: 81, scope: !6434)
!6643 = !DILocation(line: 166, column: 79, scope: !6434)
!6644 = !DILocation(line: 166, column: 73, scope: !6434)
!6645 = !DILocation(line: 166, column: 87, scope: !6434)
!6646 = !DILocation(line: 166, column: 93, scope: !6434)
!6647 = !DILocation(line: 166, column: 91, scope: !6434)
!6648 = !DILocation(line: 166, column: 85, scope: !6434)
!6649 = !DILocation(line: 166, column: 97, scope: !6434)
!6650 = !DILocation(line: 166, column: 104, scope: !6434)
!6651 = !DILocation(line: 166, column: 59, scope: !6434)
!6652 = !DILocation(line: 166, column: 28, scope: !6434)
!6653 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6454)
!6654 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6454)
!6655 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6454)
!6656 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6454)
!6657 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6454)
!6658 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6454)
!6659 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6454)
!6660 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6454)
!6661 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6454)
!6662 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6454)
!6663 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6454)
!6664 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6454)
!6665 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6454)
!6666 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6454)
!6667 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6454)
!6668 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6454)
!6669 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6454)
!6670 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6454)
!6671 = !DILocation(line: 166, column: 18, scope: !6434)
!6672 = !DILocation(line: 166, column: 20, scope: !6434)
!6673 = !DILocation(line: 166, column: 13, scope: !6434)
!6674 = !DILocation(line: 166, column: 26, scope: !6434)
!6675 = !DILocation(line: 170, column: 48, scope: !6434)
!6676 = !DILocation(line: 170, column: 66, scope: !6434)
!6677 = !DILocation(line: 170, column: 72, scope: !6434)
!6678 = !DILocation(line: 170, column: 70, scope: !6434)
!6679 = !DILocation(line: 170, column: 78, scope: !6434)
!6680 = !DILocation(line: 170, column: 84, scope: !6434)
!6681 = !DILocation(line: 170, column: 82, scope: !6434)
!6682 = !DILocation(line: 170, column: 76, scope: !6434)
!6683 = !DILocation(line: 170, column: 90, scope: !6434)
!6684 = !DILocation(line: 170, column: 96, scope: !6434)
!6685 = !DILocation(line: 170, column: 94, scope: !6434)
!6686 = !DILocation(line: 170, column: 88, scope: !6434)
!6687 = !DILocation(line: 170, column: 100, scope: !6434)
!6688 = !DILocation(line: 170, column: 107, scope: !6434)
!6689 = !DILocation(line: 170, column: 62, scope: !6434)
!6690 = !DILocation(line: 170, column: 31, scope: !6434)
!6691 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6433)
!6692 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6433)
!6693 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6433)
!6694 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6433)
!6695 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6433)
!6696 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6433)
!6697 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6433)
!6698 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6433)
!6699 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6433)
!6700 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6433)
!6701 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6433)
!6702 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6433)
!6703 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6433)
!6704 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6433)
!6705 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6433)
!6706 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6433)
!6707 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6433)
!6708 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6433)
!6709 = !DILocation(line: 170, column: 18, scope: !6434)
!6710 = !DILocation(line: 170, column: 20, scope: !6434)
!6711 = !DILocation(line: 170, column: 24, scope: !6434)
!6712 = !DILocation(line: 170, column: 13, scope: !6434)
!6713 = !DILocation(line: 170, column: 29, scope: !6434)
!6714 = !DILocation(line: 174, column: 53, scope: !6434)
!6715 = !DILocation(line: 174, column: 71, scope: !6434)
!6716 = !DILocation(line: 174, column: 77, scope: !6434)
!6717 = !DILocation(line: 174, column: 75, scope: !6434)
!6718 = !DILocation(line: 174, column: 83, scope: !6434)
!6719 = !DILocation(line: 174, column: 89, scope: !6434)
!6720 = !DILocation(line: 174, column: 87, scope: !6434)
!6721 = !DILocation(line: 174, column: 81, scope: !6434)
!6722 = !DILocation(line: 174, column: 95, scope: !6434)
!6723 = !DILocation(line: 174, column: 101, scope: !6434)
!6724 = !DILocation(line: 174, column: 99, scope: !6434)
!6725 = !DILocation(line: 174, column: 93, scope: !6434)
!6726 = !DILocation(line: 174, column: 105, scope: !6434)
!6727 = !DILocation(line: 174, column: 112, scope: !6434)
!6728 = !DILocation(line: 174, column: 67, scope: !6434)
!6729 = !DILocation(line: 174, column: 36, scope: !6434)
!6730 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6442)
!6731 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6442)
!6732 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6442)
!6733 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6442)
!6734 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6442)
!6735 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6442)
!6736 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6442)
!6737 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6442)
!6738 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6442)
!6739 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6442)
!6740 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6442)
!6741 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6442)
!6742 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6442)
!6743 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6442)
!6744 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6442)
!6745 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6442)
!6746 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6442)
!6747 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6442)
!6748 = !DILocation(line: 174, column: 18, scope: !6434)
!6749 = !DILocation(line: 174, column: 20, scope: !6434)
!6750 = !DILocation(line: 174, column: 24, scope: !6434)
!6751 = !DILocation(line: 174, column: 30, scope: !6434)
!6752 = !DILocation(line: 174, column: 28, scope: !6434)
!6753 = !DILocation(line: 174, column: 13, scope: !6434)
!6754 = !DILocation(line: 174, column: 34, scope: !6434)
!6755 = !DILocation(line: 177, column: 53, scope: !6434)
!6756 = !DILocation(line: 177, column: 71, scope: !6434)
!6757 = !DILocation(line: 177, column: 77, scope: !6434)
!6758 = !DILocation(line: 177, column: 75, scope: !6434)
!6759 = !DILocation(line: 177, column: 83, scope: !6434)
!6760 = !DILocation(line: 177, column: 89, scope: !6434)
!6761 = !DILocation(line: 177, column: 87, scope: !6434)
!6762 = !DILocation(line: 177, column: 81, scope: !6434)
!6763 = !DILocation(line: 177, column: 95, scope: !6434)
!6764 = !DILocation(line: 177, column: 101, scope: !6434)
!6765 = !DILocation(line: 177, column: 99, scope: !6434)
!6766 = !DILocation(line: 177, column: 93, scope: !6434)
!6767 = !DILocation(line: 177, column: 105, scope: !6434)
!6768 = !DILocation(line: 177, column: 112, scope: !6434)
!6769 = !DILocation(line: 177, column: 67, scope: !6434)
!6770 = !DILocation(line: 177, column: 36, scope: !6434)
!6771 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6445)
!6772 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6445)
!6773 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6445)
!6774 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6445)
!6775 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6445)
!6776 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6445)
!6777 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6445)
!6778 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6445)
!6779 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6445)
!6780 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6445)
!6781 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6445)
!6782 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6445)
!6783 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6445)
!6784 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6445)
!6785 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6445)
!6786 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6445)
!6787 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6445)
!6788 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6445)
!6789 = !DILocation(line: 177, column: 18, scope: !6434)
!6790 = !DILocation(line: 177, column: 20, scope: !6434)
!6791 = !DILocation(line: 177, column: 24, scope: !6434)
!6792 = !DILocation(line: 177, column: 30, scope: !6434)
!6793 = !DILocation(line: 177, column: 28, scope: !6434)
!6794 = !DILocation(line: 177, column: 13, scope: !6434)
!6795 = !DILocation(line: 177, column: 34, scope: !6434)
!6796 = !DILocation(line: 183, column: 57, scope: !6434)
!6797 = !DILocation(line: 183, column: 65, scope: !6434)
!6798 = !DILocation(line: 183, column: 62, scope: !6434)
!6799 = !DILocation(line: 183, column: 73, scope: !6434)
!6800 = !DILocation(line: 183, column: 70, scope: !6434)
!6801 = !DILocation(line: 183, column: 81, scope: !6434)
!6802 = !DILocation(line: 183, column: 78, scope: !6434)
!6803 = !DILocation(line: 183, column: 86, scope: !6434)
!6804 = !DILocation(line: 183, column: 91, scope: !6434)
!6805 = !DILocation(line: 183, column: 99, scope: !6434)
!6806 = !DILocation(line: 183, column: 97, scope: !6434)
!6807 = !DILocation(line: 183, column: 108, scope: !6434)
!6808 = !DILocation(line: 183, column: 116, scope: !6434)
!6809 = !DILocation(line: 183, column: 113, scope: !6434)
!6810 = !DILocation(line: 183, column: 124, scope: !6434)
!6811 = !DILocation(line: 183, column: 121, scope: !6434)
!6812 = !DILocation(line: 183, column: 132, scope: !6434)
!6813 = !DILocation(line: 183, column: 129, scope: !6434)
!6814 = !DILocation(line: 183, column: 137, scope: !6434)
!6815 = !DILocation(line: 183, column: 142, scope: !6434)
!6816 = !DILocation(line: 183, column: 150, scope: !6434)
!6817 = !DILocation(line: 183, column: 148, scope: !6434)
!6818 = !DILocation(line: 183, column: 103, scope: !6434)
!6819 = !DILocation(line: 183, column: 159, scope: !6434)
!6820 = !DILocation(line: 183, column: 167, scope: !6434)
!6821 = !DILocation(line: 183, column: 164, scope: !6434)
!6822 = !DILocation(line: 183, column: 175, scope: !6434)
!6823 = !DILocation(line: 183, column: 172, scope: !6434)
!6824 = !DILocation(line: 183, column: 183, scope: !6434)
!6825 = !DILocation(line: 183, column: 180, scope: !6434)
!6826 = !DILocation(line: 183, column: 188, scope: !6434)
!6827 = !DILocation(line: 183, column: 193, scope: !6434)
!6828 = !DILocation(line: 183, column: 201, scope: !6434)
!6829 = !DILocation(line: 183, column: 199, scope: !6434)
!6830 = !DILocation(line: 183, column: 154, scope: !6434)
!6831 = !DILocation(line: 183, column: 207, scope: !6434)
!6832 = !DILocation(line: 183, column: 214, scope: !6434)
!6833 = !DILocation(line: 183, column: 50, scope: !6434)
!6834 = !DILocation(line: 183, column: 23, scope: !6434)
!6835 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6448)
!6836 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6448)
!6837 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6448)
!6838 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6448)
!6839 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6448)
!6840 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6448)
!6841 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6448)
!6842 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6448)
!6843 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6448)
!6844 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6448)
!6845 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6448)
!6846 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6448)
!6847 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6448)
!6848 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6448)
!6849 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6448)
!6850 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6448)
!6851 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6448)
!6852 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6448)
!6853 = !DILocation(line: 183, column: 18, scope: !6434)
!6854 = !DILocation(line: 183, column: 13, scope: !6434)
!6855 = !DILocation(line: 183, column: 21, scope: !6434)
!6856 = !DILocation(line: 187, column: 57, scope: !6434)
!6857 = !DILocation(line: 187, column: 65, scope: !6434)
!6858 = !DILocation(line: 187, column: 62, scope: !6434)
!6859 = !DILocation(line: 187, column: 73, scope: !6434)
!6860 = !DILocation(line: 187, column: 70, scope: !6434)
!6861 = !DILocation(line: 187, column: 81, scope: !6434)
!6862 = !DILocation(line: 187, column: 78, scope: !6434)
!6863 = !DILocation(line: 187, column: 86, scope: !6434)
!6864 = !DILocation(line: 187, column: 91, scope: !6434)
!6865 = !DILocation(line: 187, column: 99, scope: !6434)
!6866 = !DILocation(line: 187, column: 97, scope: !6434)
!6867 = !DILocation(line: 187, column: 110, scope: !6434)
!6868 = !DILocation(line: 187, column: 118, scope: !6434)
!6869 = !DILocation(line: 187, column: 115, scope: !6434)
!6870 = !DILocation(line: 187, column: 126, scope: !6434)
!6871 = !DILocation(line: 187, column: 123, scope: !6434)
!6872 = !DILocation(line: 187, column: 134, scope: !6434)
!6873 = !DILocation(line: 187, column: 131, scope: !6434)
!6874 = !DILocation(line: 187, column: 139, scope: !6434)
!6875 = !DILocation(line: 187, column: 144, scope: !6434)
!6876 = !DILocation(line: 187, column: 152, scope: !6434)
!6877 = !DILocation(line: 187, column: 150, scope: !6434)
!6878 = !DILocation(line: 187, column: 105, scope: !6434)
!6879 = !DILocation(line: 187, column: 161, scope: !6434)
!6880 = !DILocation(line: 187, column: 169, scope: !6434)
!6881 = !DILocation(line: 187, column: 166, scope: !6434)
!6882 = !DILocation(line: 187, column: 177, scope: !6434)
!6883 = !DILocation(line: 187, column: 174, scope: !6434)
!6884 = !DILocation(line: 187, column: 185, scope: !6434)
!6885 = !DILocation(line: 187, column: 182, scope: !6434)
!6886 = !DILocation(line: 187, column: 190, scope: !6434)
!6887 = !DILocation(line: 187, column: 195, scope: !6434)
!6888 = !DILocation(line: 187, column: 203, scope: !6434)
!6889 = !DILocation(line: 187, column: 201, scope: !6434)
!6890 = !DILocation(line: 187, column: 156, scope: !6434)
!6891 = !DILocation(line: 187, column: 207, scope: !6434)
!6892 = !DILocation(line: 187, column: 214, scope: !6434)
!6893 = !DILocation(line: 187, column: 50, scope: !6434)
!6894 = !DILocation(line: 187, column: 23, scope: !6434)
!6895 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !6451)
!6896 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !6451)
!6897 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !6451)
!6898 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !6451)
!6899 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !6451)
!6900 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !6451)
!6901 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !6451)
!6902 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !6451)
!6903 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !6451)
!6904 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !6451)
!6905 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !6451)
!6906 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !6451)
!6907 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !6451)
!6908 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !6451)
!6909 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !6451)
!6910 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !6451)
!6911 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !6451)
!6912 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !6451)
!6913 = !DILocation(line: 187, column: 18, scope: !6434)
!6914 = !DILocation(line: 187, column: 13, scope: !6434)
!6915 = !DILocation(line: 187, column: 21, scope: !6434)
!6916 = !DILocation(line: 191, column: 9, scope: !6434)
!6917 = !DILocation(line: 156, column: 29, scope: !6918)
!6918 = !DILexicalBlockFile(scope: !6435, file: !266, discriminator: 2)
!6919 = !DILocation(line: 156, column: 9, scope: !6918)
!6920 = distinct !{!6920, !6921}
!6921 = !DILocation(line: 156, column: 9, scope: !6437)
!6922 = !DILocation(line: 193, column: 17, scope: !6437)
!6923 = !DILocation(line: 193, column: 20, scope: !6437)
!6924 = !DILocation(line: 193, column: 14, scope: !6437)
!6925 = !DILocation(line: 194, column: 17, scope: !6437)
!6926 = !DILocation(line: 194, column: 31, scope: !6437)
!6927 = !DILocation(line: 194, column: 14, scope: !6437)
!6928 = !DILocation(line: 195, column: 17, scope: !6437)
!6929 = !DILocation(line: 195, column: 31, scope: !6437)
!6930 = !DILocation(line: 195, column: 14, scope: !6437)
!6931 = !DILocation(line: 196, column: 17, scope: !6437)
!6932 = !DILocation(line: 196, column: 19, scope: !6437)
!6933 = !DILocation(line: 196, column: 14, scope: !6437)
!6934 = !DILocation(line: 197, column: 17, scope: !6437)
!6935 = !DILocation(line: 197, column: 19, scope: !6437)
!6936 = !DILocation(line: 197, column: 14, scope: !6437)
!6937 = !DILocation(line: 198, column: 17, scope: !6437)
!6938 = !DILocation(line: 198, column: 19, scope: !6437)
!6939 = !DILocation(line: 198, column: 14, scope: !6437)
!6940 = !DILocation(line: 199, column: 5, scope: !6437)
!6941 = !DILocation(line: 155, column: 25, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !6438, file: !266, discriminator: 2)
!6943 = !DILocation(line: 155, column: 5, scope: !6942)
!6944 = distinct !{!6944, !6945}
!6945 = !DILocation(line: 155, column: 5, scope: !6431)
!6946 = !DILocation(line: 200, column: 1, scope: !6431)
!6947 = distinct !DISubprogram(name: "rgb2yuv_fsb_444p8_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!6948 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !6949)
!6949 = distinct !DILocation(line: 302, column: 23, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !266, line: 246, column: 33)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !266, line: 246, column: 9)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !266, line: 246, column: 9)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !266, line: 245, column: 29)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !266, line: 245, column: 5)
!6955 = distinct !DILexicalBlock(scope: !6947, file: !266, line: 245, column: 5)
!6956 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !6957)
!6957 = distinct !DILocation(line: 313, column: 23, scope: !6950)
!6958 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !6959)
!6959 = distinct !DILocation(line: 262, column: 28, scope: !6950)
!6960 = !DILocalVariable(name: "_yuv", arg: 1, scope: !6947, file: !266, line: 208, type: !17)
!6961 = !DILocation(line: 208, column: 42, scope: !6947)
!6962 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !6947, file: !266, line: 208, type: !50)
!6963 = !DILocation(line: 208, column: 67, scope: !6947)
!6964 = !DILocalVariable(name: "rgb", arg: 3, scope: !6947, file: !266, line: 209, type: !43)
!6965 = !DILocation(line: 209, column: 38, scope: !6947)
!6966 = !DILocalVariable(name: "s", arg: 4, scope: !6947, file: !266, line: 209, type: !47)
!6967 = !DILocation(line: 209, column: 56, scope: !6947)
!6968 = !DILocalVariable(name: "w", arg: 5, scope: !6947, file: !266, line: 210, type: !52)
!6969 = !DILocation(line: 210, column: 33, scope: !6947)
!6970 = !DILocalVariable(name: "h", arg: 6, scope: !6947, file: !266, line: 210, type: !52)
!6971 = !DILocation(line: 210, column: 40, scope: !6947)
!6972 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !6947, file: !266, line: 210, type: !53)
!6973 = !DILocation(line: 210, column: 57, scope: !6947)
!6974 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !6947, file: !266, line: 211, type: !59)
!6975 = !DILocation(line: 211, column: 43, scope: !6947)
!6976 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !6947, file: !266, line: 212, type: !73)
!6977 = !DILocation(line: 212, column: 34, scope: !6947)
!6978 = !DILocalVariable(name: "yuv", scope: !6947, file: !266, line: 214, type: !17)
!6979 = !DILocation(line: 214, column: 15, scope: !6947)
!6980 = !DILocation(line: 214, column: 34, scope: !6947)
!6981 = !DILocalVariable(name: "yuv0", scope: !6947, file: !266, line: 215, type: !18)
!6982 = !DILocation(line: 215, column: 14, scope: !6947)
!6983 = !DILocation(line: 215, column: 21, scope: !6947)
!6984 = !DILocalVariable(name: "yuv1", scope: !6947, file: !266, line: 215, type: !18)
!6985 = !DILocation(line: 215, column: 30, scope: !6947)
!6986 = !DILocation(line: 215, column: 37, scope: !6947)
!6987 = !DILocalVariable(name: "yuv2", scope: !6947, file: !266, line: 215, type: !18)
!6988 = !DILocation(line: 215, column: 46, scope: !6947)
!6989 = !DILocation(line: 215, column: 53, scope: !6947)
!6990 = !DILocalVariable(name: "rgb0", scope: !6947, file: !266, line: 216, type: !59)
!6991 = !DILocation(line: 216, column: 20, scope: !6947)
!6992 = !DILocation(line: 216, column: 27, scope: !6947)
!6993 = !DILocalVariable(name: "rgb1", scope: !6947, file: !266, line: 216, type: !59)
!6994 = !DILocation(line: 216, column: 36, scope: !6947)
!6995 = !DILocation(line: 216, column: 43, scope: !6947)
!6996 = !DILocalVariable(name: "rgb2", scope: !6947, file: !266, line: 216, type: !59)
!6997 = !DILocation(line: 216, column: 52, scope: !6947)
!6998 = !DILocation(line: 216, column: 59, scope: !6947)
!6999 = !DILocalVariable(name: "y", scope: !6947, file: !266, line: 217, type: !52)
!7000 = !DILocation(line: 217, column: 9, scope: !6947)
!7001 = !DILocalVariable(name: "x", scope: !6947, file: !266, line: 217, type: !52)
!7002 = !DILocation(line: 217, column: 12, scope: !6947)
!7003 = !DILocalVariable(name: "sh", scope: !6947, file: !266, line: 218, type: !343)
!7004 = !DILocation(line: 218, column: 15, scope: !6947)
!7005 = !DILocalVariable(name: "rnd", scope: !6947, file: !266, line: 219, type: !343)
!7006 = !DILocation(line: 219, column: 15, scope: !6947)
!7007 = !DILocalVariable(name: "cry", scope: !6947, file: !266, line: 220, type: !52)
!7008 = !DILocation(line: 220, column: 9, scope: !6947)
!7009 = !DILocation(line: 220, column: 15, scope: !6947)
!7010 = !DILocalVariable(name: "cgy", scope: !6947, file: !266, line: 221, type: !52)
!7011 = !DILocation(line: 221, column: 9, scope: !6947)
!7012 = !DILocation(line: 221, column: 15, scope: !6947)
!7013 = !DILocalVariable(name: "cby", scope: !6947, file: !266, line: 222, type: !52)
!7014 = !DILocation(line: 222, column: 9, scope: !6947)
!7015 = !DILocation(line: 222, column: 15, scope: !6947)
!7016 = !DILocalVariable(name: "cru", scope: !6947, file: !266, line: 223, type: !52)
!7017 = !DILocation(line: 223, column: 9, scope: !6947)
!7018 = !DILocation(line: 223, column: 15, scope: !6947)
!7019 = !DILocalVariable(name: "cgu", scope: !6947, file: !266, line: 224, type: !52)
!7020 = !DILocation(line: 224, column: 9, scope: !6947)
!7021 = !DILocation(line: 224, column: 15, scope: !6947)
!7022 = !DILocalVariable(name: "cburv", scope: !6947, file: !266, line: 225, type: !52)
!7023 = !DILocation(line: 225, column: 9, scope: !6947)
!7024 = !DILocation(line: 225, column: 17, scope: !6947)
!7025 = !DILocalVariable(name: "cgv", scope: !6947, file: !266, line: 226, type: !52)
!7026 = !DILocation(line: 226, column: 9, scope: !6947)
!7027 = !DILocation(line: 226, column: 15, scope: !6947)
!7028 = !DILocalVariable(name: "cbv", scope: !6947, file: !266, line: 227, type: !52)
!7029 = !DILocation(line: 227, column: 9, scope: !6947)
!7030 = !DILocation(line: 227, column: 15, scope: !6947)
!7031 = !DILocalVariable(name: "s0", scope: !6947, file: !266, line: 228, type: !47)
!7032 = !DILocation(line: 228, column: 15, scope: !6947)
!7033 = !DILocation(line: 228, column: 20, scope: !6947)
!7034 = !DILocation(line: 228, column: 34, scope: !6947)
!7035 = !DILocalVariable(name: "uv_offset", scope: !6947, file: !266, line: 229, type: !343)
!7036 = !DILocation(line: 229, column: 15, scope: !6947)
!7037 = !DILocalVariable(name: "mask", scope: !6947, file: !266, line: 230, type: !4656)
!7038 = !DILocation(line: 230, column: 14, scope: !6947)
!7039 = !DILocation(line: 232, column: 12, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !6947, file: !266, line: 232, column: 5)
!7041 = !DILocation(line: 232, column: 10, scope: !7040)
!7042 = !DILocation(line: 232, column: 17, scope: !7043)
!7043 = !DILexicalBlockFile(scope: !7044, file: !266, discriminator: 1)
!7044 = distinct !DILexicalBlock(scope: !7040, file: !266, line: 232, column: 5)
!7045 = !DILocation(line: 232, column: 21, scope: !7043)
!7046 = !DILocation(line: 232, column: 19, scope: !7043)
!7047 = !DILocation(line: 232, column: 5, scope: !7043)
!7048 = !DILocation(line: 234, column: 27, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !266, line: 232, column: 29)
!7050 = !DILocation(line: 234, column: 9, scope: !7049)
!7051 = !DILocation(line: 234, column: 30, scope: !7049)
!7052 = !DILocation(line: 233, column: 27, scope: !7049)
!7053 = !DILocation(line: 233, column: 9, scope: !7049)
!7054 = !DILocation(line: 233, column: 30, scope: !7049)
!7055 = !DILocation(line: 235, column: 5, scope: !7049)
!7056 = !DILocation(line: 232, column: 25, scope: !7057)
!7057 = !DILexicalBlockFile(scope: !7044, file: !266, discriminator: 2)
!7058 = !DILocation(line: 232, column: 5, scope: !7057)
!7059 = distinct !{!7059, !7060}
!7060 = !DILocation(line: 232, column: 5, scope: !6947)
!7061 = !DILocation(line: 237, column: 58, scope: !6947)
!7062 = !DILocation(line: 237, column: 61, scope: !6947)
!7063 = !DILocation(line: 237, column: 72, scope: !6947)
!7064 = !DILocation(line: 237, column: 77, scope: !6947)
!7065 = !DILocation(line: 237, column: 7, scope: !6947)
!7066 = !DILocation(line: 238, column: 58, scope: !6947)
!7067 = !DILocation(line: 238, column: 61, scope: !6947)
!7068 = !DILocation(line: 238, column: 72, scope: !6947)
!7069 = !DILocation(line: 238, column: 77, scope: !6947)
!7070 = !DILocation(line: 238, column: 7, scope: !6947)
!7071 = !DILocation(line: 239, column: 12, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !6947, file: !266, line: 239, column: 5)
!7073 = !DILocation(line: 239, column: 10, scope: !7072)
!7074 = !DILocation(line: 239, column: 17, scope: !7075)
!7075 = !DILexicalBlockFile(scope: !7076, file: !266, discriminator: 1)
!7076 = distinct !DILexicalBlock(scope: !7072, file: !266, line: 239, column: 5)
!7077 = !DILocation(line: 239, column: 21, scope: !7075)
!7078 = !DILocation(line: 239, column: 19, scope: !7075)
!7079 = !DILocation(line: 239, column: 5, scope: !7075)
!7080 = !DILocation(line: 243, column: 27, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7076, file: !266, line: 239, column: 29)
!7082 = !DILocation(line: 243, column: 9, scope: !7081)
!7083 = !DILocation(line: 243, column: 30, scope: !7081)
!7084 = !DILocation(line: 242, column: 27, scope: !7081)
!7085 = !DILocation(line: 242, column: 9, scope: !7081)
!7086 = !DILocation(line: 242, column: 30, scope: !7081)
!7087 = !DILocation(line: 241, column: 27, scope: !7081)
!7088 = !DILocation(line: 241, column: 9, scope: !7081)
!7089 = !DILocation(line: 241, column: 30, scope: !7081)
!7090 = !DILocation(line: 240, column: 27, scope: !7081)
!7091 = !DILocation(line: 240, column: 9, scope: !7081)
!7092 = !DILocation(line: 240, column: 30, scope: !7081)
!7093 = !DILocation(line: 244, column: 5, scope: !7081)
!7094 = !DILocation(line: 239, column: 25, scope: !7095)
!7095 = !DILexicalBlockFile(scope: !7076, file: !266, discriminator: 2)
!7096 = !DILocation(line: 239, column: 5, scope: !7095)
!7097 = distinct !{!7097, !7098}
!7098 = !DILocation(line: 239, column: 5, scope: !6947)
!7099 = !DILocation(line: 245, column: 12, scope: !6955)
!7100 = !DILocation(line: 245, column: 10, scope: !6955)
!7101 = !DILocation(line: 245, column: 17, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !6954, file: !266, discriminator: 1)
!7103 = !DILocation(line: 245, column: 21, scope: !7102)
!7104 = !DILocation(line: 245, column: 19, scope: !7102)
!7105 = !DILocation(line: 245, column: 5, scope: !7102)
!7106 = !DILocation(line: 246, column: 16, scope: !6952)
!7107 = !DILocation(line: 246, column: 14, scope: !6952)
!7108 = !DILocation(line: 246, column: 21, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !6951, file: !266, discriminator: 1)
!7110 = !DILocation(line: 246, column: 25, scope: !7109)
!7111 = !DILocation(line: 246, column: 23, scope: !7109)
!7112 = !DILocation(line: 246, column: 9, scope: !7109)
!7113 = !DILocalVariable(name: "r00", scope: !6950, file: !266, line: 247, type: !52)
!7114 = !DILocation(line: 247, column: 17, scope: !6950)
!7115 = !DILocation(line: 247, column: 28, scope: !6950)
!7116 = !DILocation(line: 247, column: 30, scope: !6950)
!7117 = !DILocation(line: 247, column: 23, scope: !6950)
!7118 = !DILocalVariable(name: "g00", scope: !6950, file: !266, line: 247, type: !52)
!7119 = !DILocation(line: 247, column: 37, scope: !6950)
!7120 = !DILocation(line: 247, column: 48, scope: !6950)
!7121 = !DILocation(line: 247, column: 50, scope: !6950)
!7122 = !DILocation(line: 247, column: 43, scope: !6950)
!7123 = !DILocalVariable(name: "b00", scope: !6950, file: !266, line: 247, type: !52)
!7124 = !DILocation(line: 247, column: 57, scope: !6950)
!7125 = !DILocation(line: 247, column: 68, scope: !6950)
!7126 = !DILocation(line: 247, column: 70, scope: !6950)
!7127 = !DILocation(line: 247, column: 63, scope: !6950)
!7128 = !DILocalVariable(name: "y00", scope: !6950, file: !266, line: 248, type: !52)
!7129 = !DILocation(line: 248, column: 17, scope: !6950)
!7130 = !DILocalVariable(name: "u", scope: !6950, file: !266, line: 258, type: !52)
!7131 = !DILocation(line: 258, column: 17, scope: !6950)
!7132 = !DILocalVariable(name: "v", scope: !6950, file: !266, line: 258, type: !52)
!7133 = !DILocation(line: 258, column: 20, scope: !6950)
!7134 = !DILocalVariable(name: "diff", scope: !6950, file: !266, line: 258, type: !52)
!7135 = !DILocation(line: 258, column: 23, scope: !6950)
!7136 = !DILocation(line: 260, column: 19, scope: !6950)
!7137 = !DILocation(line: 260, column: 25, scope: !6950)
!7138 = !DILocation(line: 260, column: 23, scope: !6950)
!7139 = !DILocation(line: 260, column: 31, scope: !6950)
!7140 = !DILocation(line: 260, column: 37, scope: !6950)
!7141 = !DILocation(line: 260, column: 35, scope: !6950)
!7142 = !DILocation(line: 260, column: 29, scope: !6950)
!7143 = !DILocation(line: 260, column: 43, scope: !6950)
!7144 = !DILocation(line: 260, column: 49, scope: !6950)
!7145 = !DILocation(line: 260, column: 47, scope: !6950)
!7146 = !DILocation(line: 260, column: 41, scope: !6950)
!7147 = !DILocation(line: 260, column: 78, scope: !6950)
!7148 = !DILocation(line: 260, column: 80, scope: !6950)
!7149 = !DILocation(line: 260, column: 55, scope: !6950)
!7150 = !DILocation(line: 260, column: 70, scope: !6950)
!7151 = !DILocation(line: 260, column: 72, scope: !6950)
!7152 = !DILocation(line: 260, column: 53, scope: !6950)
!7153 = !DILocation(line: 260, column: 17, scope: !6950)
!7154 = !DILocation(line: 261, column: 21, scope: !6950)
!7155 = !DILocation(line: 261, column: 27, scope: !6950)
!7156 = !DILocation(line: 261, column: 25, scope: !6950)
!7157 = !DILocation(line: 261, column: 33, scope: !6950)
!7158 = !DILocation(line: 261, column: 18, scope: !6950)
!7159 = !DILocation(line: 262, column: 44, scope: !6950)
!7160 = !DILocation(line: 262, column: 61, scope: !6950)
!7161 = !DILocation(line: 262, column: 65, scope: !6950)
!7162 = !DILocation(line: 262, column: 58, scope: !6950)
!7163 = !DILocation(line: 262, column: 28, scope: !6950)
!7164 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !6959)
!7165 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !6959)
!7166 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !6959)
!7167 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !6959)
!7168 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !6959)
!7169 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !6959)
!7170 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !6959)
!7171 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !6959)
!7172 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !6959)
!7173 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !6959)
!7174 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !6959)
!7175 = !DILocation(line: 262, column: 18, scope: !6950)
!7176 = !DILocation(line: 262, column: 20, scope: !6950)
!7177 = !DILocation(line: 262, column: 13, scope: !6950)
!7178 = !DILocation(line: 262, column: 26, scope: !6950)
!7179 = !DILocation(line: 263, column: 57, scope: !6950)
!7180 = !DILocation(line: 263, column: 62, scope: !6950)
!7181 = !DILocation(line: 263, column: 66, scope: !6950)
!7182 = !DILocation(line: 263, column: 71, scope: !6950)
!7183 = !DILocation(line: 263, column: 40, scope: !6950)
!7184 = !DILocation(line: 263, column: 42, scope: !6950)
!7185 = !DILocation(line: 263, column: 48, scope: !6950)
!7186 = !DILocation(line: 263, column: 13, scope: !6950)
!7187 = !DILocation(line: 263, column: 30, scope: !6950)
!7188 = !DILocation(line: 263, column: 32, scope: !6950)
!7189 = !DILocation(line: 263, column: 53, scope: !6950)
!7190 = !DILocation(line: 264, column: 57, scope: !6950)
!7191 = !DILocation(line: 264, column: 62, scope: !6950)
!7192 = !DILocation(line: 264, column: 66, scope: !6950)
!7193 = !DILocation(line: 264, column: 71, scope: !6950)
!7194 = !DILocation(line: 264, column: 40, scope: !6950)
!7195 = !DILocation(line: 264, column: 42, scope: !6950)
!7196 = !DILocation(line: 264, column: 48, scope: !6950)
!7197 = !DILocation(line: 264, column: 13, scope: !6950)
!7198 = !DILocation(line: 264, column: 30, scope: !6950)
!7199 = !DILocation(line: 264, column: 32, scope: !6950)
!7200 = !DILocation(line: 264, column: 28, scope: !6950)
!7201 = !DILocation(line: 264, column: 53, scope: !6950)
!7202 = !DILocation(line: 265, column: 57, scope: !6950)
!7203 = !DILocation(line: 265, column: 62, scope: !6950)
!7204 = !DILocation(line: 265, column: 66, scope: !6950)
!7205 = !DILocation(line: 265, column: 71, scope: !6950)
!7206 = !DILocation(line: 265, column: 40, scope: !6950)
!7207 = !DILocation(line: 265, column: 42, scope: !6950)
!7208 = !DILocation(line: 265, column: 48, scope: !6950)
!7209 = !DILocation(line: 265, column: 13, scope: !6950)
!7210 = !DILocation(line: 265, column: 30, scope: !6950)
!7211 = !DILocation(line: 265, column: 32, scope: !6950)
!7212 = !DILocation(line: 265, column: 28, scope: !6950)
!7213 = !DILocation(line: 265, column: 53, scope: !6950)
!7214 = !DILocation(line: 266, column: 57, scope: !6950)
!7215 = !DILocation(line: 266, column: 62, scope: !6950)
!7216 = !DILocation(line: 266, column: 66, scope: !6950)
!7217 = !DILocation(line: 266, column: 71, scope: !6950)
!7218 = !DILocation(line: 266, column: 40, scope: !6950)
!7219 = !DILocation(line: 266, column: 42, scope: !6950)
!7220 = !DILocation(line: 266, column: 48, scope: !6950)
!7221 = !DILocation(line: 266, column: 13, scope: !6950)
!7222 = !DILocation(line: 266, column: 30, scope: !6950)
!7223 = !DILocation(line: 266, column: 32, scope: !6950)
!7224 = !DILocation(line: 266, column: 28, scope: !6950)
!7225 = !DILocation(line: 266, column: 53, scope: !6950)
!7226 = !DILocation(line: 267, column: 40, scope: !6950)
!7227 = !DILocation(line: 267, column: 42, scope: !6950)
!7228 = !DILocation(line: 267, column: 48, scope: !6950)
!7229 = !DILocation(line: 267, column: 13, scope: !6950)
!7230 = !DILocation(line: 267, column: 30, scope: !6950)
!7231 = !DILocation(line: 267, column: 32, scope: !6950)
!7232 = !DILocation(line: 267, column: 53, scope: !6950)
!7233 = !DILocation(line: 298, column: 18, scope: !6950)
!7234 = !DILocation(line: 298, column: 25, scope: !6950)
!7235 = !DILocation(line: 298, column: 23, scope: !6950)
!7236 = !DILocation(line: 299, column: 18, scope: !6950)
!7237 = !DILocation(line: 299, column: 25, scope: !6950)
!7238 = !DILocation(line: 299, column: 23, scope: !6950)
!7239 = !DILocation(line: 298, column: 29, scope: !6950)
!7240 = !DILocation(line: 300, column: 18, scope: !6950)
!7241 = !DILocation(line: 300, column: 25, scope: !6950)
!7242 = !DILocation(line: 300, column: 23, scope: !6950)
!7243 = !DILocation(line: 299, column: 29, scope: !6950)
!7244 = !DILocation(line: 300, column: 55, scope: !6950)
!7245 = !DILocation(line: 300, column: 33, scope: !6950)
!7246 = !DILocation(line: 300, column: 48, scope: !6950)
!7247 = !DILocation(line: 300, column: 50, scope: !6950)
!7248 = !DILocation(line: 300, column: 31, scope: !6950)
!7249 = !DILocation(line: 298, column: 15, scope: !6950)
!7250 = !DILocation(line: 301, column: 21, scope: !6950)
!7251 = !DILocation(line: 301, column: 25, scope: !6950)
!7252 = !DILocation(line: 301, column: 23, scope: !6950)
!7253 = !DILocation(line: 301, column: 31, scope: !6950)
!7254 = !DILocation(line: 301, column: 18, scope: !6950)
!7255 = !DILocation(line: 302, column: 52, scope: !6950)
!7256 = !DILocation(line: 302, column: 54, scope: !6950)
!7257 = !DILocation(line: 302, column: 49, scope: !6950)
!7258 = !DILocation(line: 302, column: 23, scope: !6950)
!7259 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !6949)
!7260 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !6949)
!7261 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !6949)
!7262 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !6949)
!7263 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !6949)
!7264 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !6949)
!7265 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !6949)
!7266 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !6949)
!7267 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !6949)
!7268 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !6949)
!7269 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !6949)
!7270 = !DILocation(line: 302, column: 18, scope: !6950)
!7271 = !DILocation(line: 302, column: 13, scope: !6950)
!7272 = !DILocation(line: 302, column: 21, scope: !6950)
!7273 = !DILocation(line: 303, column: 49, scope: !6950)
!7274 = !DILocation(line: 303, column: 54, scope: !6950)
!7275 = !DILocation(line: 303, column: 58, scope: !6950)
!7276 = !DILocation(line: 303, column: 63, scope: !6950)
!7277 = !DILocation(line: 303, column: 38, scope: !6950)
!7278 = !DILocation(line: 303, column: 40, scope: !6950)
!7279 = !DILocation(line: 303, column: 13, scope: !6950)
!7280 = !DILocation(line: 303, column: 30, scope: !6950)
!7281 = !DILocation(line: 303, column: 32, scope: !6950)
!7282 = !DILocation(line: 303, column: 45, scope: !6950)
!7283 = !DILocation(line: 304, column: 49, scope: !6950)
!7284 = !DILocation(line: 304, column: 54, scope: !6950)
!7285 = !DILocation(line: 304, column: 58, scope: !6950)
!7286 = !DILocation(line: 304, column: 63, scope: !6950)
!7287 = !DILocation(line: 304, column: 38, scope: !6950)
!7288 = !DILocation(line: 304, column: 40, scope: !6950)
!7289 = !DILocation(line: 304, column: 13, scope: !6950)
!7290 = !DILocation(line: 304, column: 30, scope: !6950)
!7291 = !DILocation(line: 304, column: 32, scope: !6950)
!7292 = !DILocation(line: 304, column: 28, scope: !6950)
!7293 = !DILocation(line: 304, column: 45, scope: !6950)
!7294 = !DILocation(line: 305, column: 49, scope: !6950)
!7295 = !DILocation(line: 305, column: 54, scope: !6950)
!7296 = !DILocation(line: 305, column: 58, scope: !6950)
!7297 = !DILocation(line: 305, column: 63, scope: !6950)
!7298 = !DILocation(line: 305, column: 38, scope: !6950)
!7299 = !DILocation(line: 305, column: 40, scope: !6950)
!7300 = !DILocation(line: 305, column: 13, scope: !6950)
!7301 = !DILocation(line: 305, column: 30, scope: !6950)
!7302 = !DILocation(line: 305, column: 32, scope: !6950)
!7303 = !DILocation(line: 305, column: 28, scope: !6950)
!7304 = !DILocation(line: 305, column: 45, scope: !6950)
!7305 = !DILocation(line: 306, column: 49, scope: !6950)
!7306 = !DILocation(line: 306, column: 54, scope: !6950)
!7307 = !DILocation(line: 306, column: 58, scope: !6950)
!7308 = !DILocation(line: 306, column: 63, scope: !6950)
!7309 = !DILocation(line: 306, column: 38, scope: !6950)
!7310 = !DILocation(line: 306, column: 40, scope: !6950)
!7311 = !DILocation(line: 306, column: 13, scope: !6950)
!7312 = !DILocation(line: 306, column: 30, scope: !6950)
!7313 = !DILocation(line: 306, column: 32, scope: !6950)
!7314 = !DILocation(line: 306, column: 28, scope: !6950)
!7315 = !DILocation(line: 306, column: 45, scope: !6950)
!7316 = !DILocation(line: 307, column: 38, scope: !6950)
!7317 = !DILocation(line: 307, column: 40, scope: !6950)
!7318 = !DILocation(line: 307, column: 13, scope: !6950)
!7319 = !DILocation(line: 307, column: 30, scope: !6950)
!7320 = !DILocation(line: 307, column: 32, scope: !6950)
!7321 = !DILocation(line: 307, column: 45, scope: !6950)
!7322 = !DILocation(line: 309, column: 18, scope: !6950)
!7323 = !DILocation(line: 309, column: 25, scope: !6950)
!7324 = !DILocation(line: 309, column: 23, scope: !6950)
!7325 = !DILocation(line: 310, column: 18, scope: !6950)
!7326 = !DILocation(line: 310, column: 25, scope: !6950)
!7327 = !DILocation(line: 310, column: 23, scope: !6950)
!7328 = !DILocation(line: 309, column: 31, scope: !6950)
!7329 = !DILocation(line: 311, column: 18, scope: !6950)
!7330 = !DILocation(line: 311, column: 25, scope: !6950)
!7331 = !DILocation(line: 311, column: 23, scope: !6950)
!7332 = !DILocation(line: 310, column: 29, scope: !6950)
!7333 = !DILocation(line: 311, column: 53, scope: !6950)
!7334 = !DILocation(line: 311, column: 31, scope: !6950)
!7335 = !DILocation(line: 311, column: 46, scope: !6950)
!7336 = !DILocation(line: 311, column: 48, scope: !6950)
!7337 = !DILocation(line: 311, column: 29, scope: !6950)
!7338 = !DILocation(line: 309, column: 15, scope: !6950)
!7339 = !DILocation(line: 312, column: 21, scope: !6950)
!7340 = !DILocation(line: 312, column: 25, scope: !6950)
!7341 = !DILocation(line: 312, column: 23, scope: !6950)
!7342 = !DILocation(line: 312, column: 31, scope: !6950)
!7343 = !DILocation(line: 312, column: 18, scope: !6950)
!7344 = !DILocation(line: 313, column: 52, scope: !6950)
!7345 = !DILocation(line: 313, column: 54, scope: !6950)
!7346 = !DILocation(line: 313, column: 49, scope: !6950)
!7347 = !DILocation(line: 313, column: 23, scope: !6950)
!7348 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !6957)
!7349 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !6957)
!7350 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !6957)
!7351 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !6957)
!7352 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !6957)
!7353 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !6957)
!7354 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !6957)
!7355 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !6957)
!7356 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !6957)
!7357 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !6957)
!7358 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !6957)
!7359 = !DILocation(line: 313, column: 18, scope: !6950)
!7360 = !DILocation(line: 313, column: 13, scope: !6950)
!7361 = !DILocation(line: 313, column: 21, scope: !6950)
!7362 = !DILocation(line: 314, column: 49, scope: !6950)
!7363 = !DILocation(line: 314, column: 54, scope: !6950)
!7364 = !DILocation(line: 314, column: 58, scope: !6950)
!7365 = !DILocation(line: 314, column: 63, scope: !6950)
!7366 = !DILocation(line: 314, column: 38, scope: !6950)
!7367 = !DILocation(line: 314, column: 40, scope: !6950)
!7368 = !DILocation(line: 314, column: 13, scope: !6950)
!7369 = !DILocation(line: 314, column: 30, scope: !6950)
!7370 = !DILocation(line: 314, column: 32, scope: !6950)
!7371 = !DILocation(line: 314, column: 45, scope: !6950)
!7372 = !DILocation(line: 315, column: 49, scope: !6950)
!7373 = !DILocation(line: 315, column: 54, scope: !6950)
!7374 = !DILocation(line: 315, column: 58, scope: !6950)
!7375 = !DILocation(line: 315, column: 63, scope: !6950)
!7376 = !DILocation(line: 315, column: 38, scope: !6950)
!7377 = !DILocation(line: 315, column: 40, scope: !6950)
!7378 = !DILocation(line: 315, column: 13, scope: !6950)
!7379 = !DILocation(line: 315, column: 30, scope: !6950)
!7380 = !DILocation(line: 315, column: 32, scope: !6950)
!7381 = !DILocation(line: 315, column: 28, scope: !6950)
!7382 = !DILocation(line: 315, column: 45, scope: !6950)
!7383 = !DILocation(line: 316, column: 49, scope: !6950)
!7384 = !DILocation(line: 316, column: 54, scope: !6950)
!7385 = !DILocation(line: 316, column: 58, scope: !6950)
!7386 = !DILocation(line: 316, column: 63, scope: !6950)
!7387 = !DILocation(line: 316, column: 38, scope: !6950)
!7388 = !DILocation(line: 316, column: 40, scope: !6950)
!7389 = !DILocation(line: 316, column: 13, scope: !6950)
!7390 = !DILocation(line: 316, column: 30, scope: !6950)
!7391 = !DILocation(line: 316, column: 32, scope: !6950)
!7392 = !DILocation(line: 316, column: 28, scope: !6950)
!7393 = !DILocation(line: 316, column: 45, scope: !6950)
!7394 = !DILocation(line: 317, column: 49, scope: !6950)
!7395 = !DILocation(line: 317, column: 54, scope: !6950)
!7396 = !DILocation(line: 317, column: 58, scope: !6950)
!7397 = !DILocation(line: 317, column: 63, scope: !6950)
!7398 = !DILocation(line: 317, column: 38, scope: !6950)
!7399 = !DILocation(line: 317, column: 40, scope: !6950)
!7400 = !DILocation(line: 317, column: 13, scope: !6950)
!7401 = !DILocation(line: 317, column: 30, scope: !6950)
!7402 = !DILocation(line: 317, column: 32, scope: !6950)
!7403 = !DILocation(line: 317, column: 28, scope: !6950)
!7404 = !DILocation(line: 317, column: 45, scope: !6950)
!7405 = !DILocation(line: 318, column: 38, scope: !6950)
!7406 = !DILocation(line: 318, column: 40, scope: !6950)
!7407 = !DILocation(line: 318, column: 13, scope: !6950)
!7408 = !DILocation(line: 318, column: 30, scope: !6950)
!7409 = !DILocation(line: 318, column: 32, scope: !6950)
!7410 = !DILocation(line: 318, column: 45, scope: !6950)
!7411 = !DILocation(line: 319, column: 9, scope: !6950)
!7412 = !DILocation(line: 246, column: 29, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !6951, file: !266, discriminator: 2)
!7414 = !DILocation(line: 246, column: 9, scope: !7413)
!7415 = distinct !{!7415, !7416}
!7416 = !DILocation(line: 246, column: 9, scope: !6953)
!7417 = !DILocation(line: 321, column: 17, scope: !6953)
!7418 = !DILocation(line: 321, column: 20, scope: !6953)
!7419 = !DILocation(line: 321, column: 14, scope: !6953)
!7420 = !DILocation(line: 322, column: 17, scope: !6953)
!7421 = !DILocation(line: 322, column: 31, scope: !6953)
!7422 = !DILocation(line: 322, column: 14, scope: !6953)
!7423 = !DILocation(line: 323, column: 17, scope: !6953)
!7424 = !DILocation(line: 323, column: 31, scope: !6953)
!7425 = !DILocation(line: 323, column: 14, scope: !6953)
!7426 = !DILocation(line: 324, column: 17, scope: !6953)
!7427 = !DILocation(line: 324, column: 19, scope: !6953)
!7428 = !DILocation(line: 324, column: 14, scope: !6953)
!7429 = !DILocation(line: 325, column: 17, scope: !6953)
!7430 = !DILocation(line: 325, column: 19, scope: !6953)
!7431 = !DILocation(line: 325, column: 14, scope: !6953)
!7432 = !DILocation(line: 326, column: 17, scope: !6953)
!7433 = !DILocation(line: 326, column: 19, scope: !6953)
!7434 = !DILocation(line: 326, column: 14, scope: !6953)
!7435 = !DILocation(line: 327, column: 5, scope: !6953)
!7436 = !DILocation(line: 245, column: 25, scope: !7437)
!7437 = !DILexicalBlockFile(scope: !6954, file: !266, discriminator: 2)
!7438 = !DILocation(line: 245, column: 5, scope: !7437)
!7439 = distinct !{!7439, !7440}
!7440 = !DILocation(line: 245, column: 5, scope: !6947)
!7441 = !DILocation(line: 328, column: 1, scope: !6947)
!7442 = distinct !DISubprogram(name: "rgb2yuv_fsb_422p8_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!7443 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !7444)
!7444 = distinct !DILocation(line: 271, column: 31, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !266, line: 246, column: 33)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !266, line: 246, column: 9)
!7447 = distinct !DILexicalBlock(scope: !7448, file: !266, line: 246, column: 9)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !266, line: 245, column: 29)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !266, line: 245, column: 5)
!7450 = distinct !DILexicalBlock(scope: !7442, file: !266, line: 245, column: 5)
!7451 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !7452)
!7452 = distinct !DILocation(line: 302, column: 23, scope: !7445)
!7453 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !7454)
!7454 = distinct !DILocation(line: 313, column: 23, scope: !7445)
!7455 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !7456)
!7456 = distinct !DILocation(line: 262, column: 28, scope: !7445)
!7457 = !DILocalVariable(name: "_yuv", arg: 1, scope: !7442, file: !266, line: 208, type: !17)
!7458 = !DILocation(line: 208, column: 42, scope: !7442)
!7459 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !7442, file: !266, line: 208, type: !50)
!7460 = !DILocation(line: 208, column: 67, scope: !7442)
!7461 = !DILocalVariable(name: "rgb", arg: 3, scope: !7442, file: !266, line: 209, type: !43)
!7462 = !DILocation(line: 209, column: 38, scope: !7442)
!7463 = !DILocalVariable(name: "s", arg: 4, scope: !7442, file: !266, line: 209, type: !47)
!7464 = !DILocation(line: 209, column: 56, scope: !7442)
!7465 = !DILocalVariable(name: "w", arg: 5, scope: !7442, file: !266, line: 210, type: !52)
!7466 = !DILocation(line: 210, column: 33, scope: !7442)
!7467 = !DILocalVariable(name: "h", arg: 6, scope: !7442, file: !266, line: 210, type: !52)
!7468 = !DILocation(line: 210, column: 40, scope: !7442)
!7469 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !7442, file: !266, line: 210, type: !53)
!7470 = !DILocation(line: 210, column: 57, scope: !7442)
!7471 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !7442, file: !266, line: 211, type: !59)
!7472 = !DILocation(line: 211, column: 43, scope: !7442)
!7473 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !7442, file: !266, line: 212, type: !73)
!7474 = !DILocation(line: 212, column: 34, scope: !7442)
!7475 = !DILocalVariable(name: "yuv", scope: !7442, file: !266, line: 214, type: !17)
!7476 = !DILocation(line: 214, column: 15, scope: !7442)
!7477 = !DILocation(line: 214, column: 34, scope: !7442)
!7478 = !DILocalVariable(name: "yuv0", scope: !7442, file: !266, line: 215, type: !18)
!7479 = !DILocation(line: 215, column: 14, scope: !7442)
!7480 = !DILocation(line: 215, column: 21, scope: !7442)
!7481 = !DILocalVariable(name: "yuv1", scope: !7442, file: !266, line: 215, type: !18)
!7482 = !DILocation(line: 215, column: 30, scope: !7442)
!7483 = !DILocation(line: 215, column: 37, scope: !7442)
!7484 = !DILocalVariable(name: "yuv2", scope: !7442, file: !266, line: 215, type: !18)
!7485 = !DILocation(line: 215, column: 46, scope: !7442)
!7486 = !DILocation(line: 215, column: 53, scope: !7442)
!7487 = !DILocalVariable(name: "rgb0", scope: !7442, file: !266, line: 216, type: !59)
!7488 = !DILocation(line: 216, column: 20, scope: !7442)
!7489 = !DILocation(line: 216, column: 27, scope: !7442)
!7490 = !DILocalVariable(name: "rgb1", scope: !7442, file: !266, line: 216, type: !59)
!7491 = !DILocation(line: 216, column: 36, scope: !7442)
!7492 = !DILocation(line: 216, column: 43, scope: !7442)
!7493 = !DILocalVariable(name: "rgb2", scope: !7442, file: !266, line: 216, type: !59)
!7494 = !DILocation(line: 216, column: 52, scope: !7442)
!7495 = !DILocation(line: 216, column: 59, scope: !7442)
!7496 = !DILocalVariable(name: "y", scope: !7442, file: !266, line: 217, type: !52)
!7497 = !DILocation(line: 217, column: 9, scope: !7442)
!7498 = !DILocalVariable(name: "x", scope: !7442, file: !266, line: 217, type: !52)
!7499 = !DILocation(line: 217, column: 12, scope: !7442)
!7500 = !DILocalVariable(name: "sh", scope: !7442, file: !266, line: 218, type: !343)
!7501 = !DILocation(line: 218, column: 15, scope: !7442)
!7502 = !DILocalVariable(name: "rnd", scope: !7442, file: !266, line: 219, type: !343)
!7503 = !DILocation(line: 219, column: 15, scope: !7442)
!7504 = !DILocalVariable(name: "cry", scope: !7442, file: !266, line: 220, type: !52)
!7505 = !DILocation(line: 220, column: 9, scope: !7442)
!7506 = !DILocation(line: 220, column: 15, scope: !7442)
!7507 = !DILocalVariable(name: "cgy", scope: !7442, file: !266, line: 221, type: !52)
!7508 = !DILocation(line: 221, column: 9, scope: !7442)
!7509 = !DILocation(line: 221, column: 15, scope: !7442)
!7510 = !DILocalVariable(name: "cby", scope: !7442, file: !266, line: 222, type: !52)
!7511 = !DILocation(line: 222, column: 9, scope: !7442)
!7512 = !DILocation(line: 222, column: 15, scope: !7442)
!7513 = !DILocalVariable(name: "cru", scope: !7442, file: !266, line: 223, type: !52)
!7514 = !DILocation(line: 223, column: 9, scope: !7442)
!7515 = !DILocation(line: 223, column: 15, scope: !7442)
!7516 = !DILocalVariable(name: "cgu", scope: !7442, file: !266, line: 224, type: !52)
!7517 = !DILocation(line: 224, column: 9, scope: !7442)
!7518 = !DILocation(line: 224, column: 15, scope: !7442)
!7519 = !DILocalVariable(name: "cburv", scope: !7442, file: !266, line: 225, type: !52)
!7520 = !DILocation(line: 225, column: 9, scope: !7442)
!7521 = !DILocation(line: 225, column: 17, scope: !7442)
!7522 = !DILocalVariable(name: "cgv", scope: !7442, file: !266, line: 226, type: !52)
!7523 = !DILocation(line: 226, column: 9, scope: !7442)
!7524 = !DILocation(line: 226, column: 15, scope: !7442)
!7525 = !DILocalVariable(name: "cbv", scope: !7442, file: !266, line: 227, type: !52)
!7526 = !DILocation(line: 227, column: 9, scope: !7442)
!7527 = !DILocation(line: 227, column: 15, scope: !7442)
!7528 = !DILocalVariable(name: "s0", scope: !7442, file: !266, line: 228, type: !47)
!7529 = !DILocation(line: 228, column: 15, scope: !7442)
!7530 = !DILocation(line: 228, column: 20, scope: !7442)
!7531 = !DILocation(line: 228, column: 34, scope: !7442)
!7532 = !DILocalVariable(name: "uv_offset", scope: !7442, file: !266, line: 229, type: !343)
!7533 = !DILocation(line: 229, column: 15, scope: !7442)
!7534 = !DILocalVariable(name: "mask", scope: !7442, file: !266, line: 230, type: !4656)
!7535 = !DILocation(line: 230, column: 14, scope: !7442)
!7536 = !DILocation(line: 232, column: 12, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7442, file: !266, line: 232, column: 5)
!7538 = !DILocation(line: 232, column: 10, scope: !7537)
!7539 = !DILocation(line: 232, column: 17, scope: !7540)
!7540 = !DILexicalBlockFile(scope: !7541, file: !266, discriminator: 1)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !266, line: 232, column: 5)
!7542 = !DILocation(line: 232, column: 21, scope: !7540)
!7543 = !DILocation(line: 232, column: 19, scope: !7540)
!7544 = !DILocation(line: 232, column: 5, scope: !7540)
!7545 = !DILocation(line: 234, column: 27, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7541, file: !266, line: 232, column: 29)
!7547 = !DILocation(line: 234, column: 9, scope: !7546)
!7548 = !DILocation(line: 234, column: 30, scope: !7546)
!7549 = !DILocation(line: 233, column: 27, scope: !7546)
!7550 = !DILocation(line: 233, column: 9, scope: !7546)
!7551 = !DILocation(line: 233, column: 30, scope: !7546)
!7552 = !DILocation(line: 235, column: 5, scope: !7546)
!7553 = !DILocation(line: 232, column: 25, scope: !7554)
!7554 = !DILexicalBlockFile(scope: !7541, file: !266, discriminator: 2)
!7555 = !DILocation(line: 232, column: 5, scope: !7554)
!7556 = distinct !{!7556, !7557}
!7557 = !DILocation(line: 232, column: 5, scope: !7442)
!7558 = !DILocation(line: 237, column: 58, scope: !7442)
!7559 = !DILocation(line: 237, column: 61, scope: !7442)
!7560 = !DILocation(line: 237, column: 72, scope: !7442)
!7561 = !DILocation(line: 237, column: 77, scope: !7442)
!7562 = !DILocation(line: 237, column: 7, scope: !7442)
!7563 = !DILocation(line: 238, column: 58, scope: !7442)
!7564 = !DILocation(line: 238, column: 61, scope: !7442)
!7565 = !DILocation(line: 238, column: 72, scope: !7442)
!7566 = !DILocation(line: 238, column: 77, scope: !7442)
!7567 = !DILocation(line: 238, column: 7, scope: !7442)
!7568 = !DILocation(line: 239, column: 12, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7442, file: !266, line: 239, column: 5)
!7570 = !DILocation(line: 239, column: 10, scope: !7569)
!7571 = !DILocation(line: 239, column: 17, scope: !7572)
!7572 = !DILexicalBlockFile(scope: !7573, file: !266, discriminator: 1)
!7573 = distinct !DILexicalBlock(scope: !7569, file: !266, line: 239, column: 5)
!7574 = !DILocation(line: 239, column: 21, scope: !7572)
!7575 = !DILocation(line: 239, column: 19, scope: !7572)
!7576 = !DILocation(line: 239, column: 5, scope: !7572)
!7577 = !DILocation(line: 243, column: 27, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7573, file: !266, line: 239, column: 29)
!7579 = !DILocation(line: 243, column: 9, scope: !7578)
!7580 = !DILocation(line: 243, column: 30, scope: !7578)
!7581 = !DILocation(line: 242, column: 27, scope: !7578)
!7582 = !DILocation(line: 242, column: 9, scope: !7578)
!7583 = !DILocation(line: 242, column: 30, scope: !7578)
!7584 = !DILocation(line: 241, column: 27, scope: !7578)
!7585 = !DILocation(line: 241, column: 9, scope: !7578)
!7586 = !DILocation(line: 241, column: 30, scope: !7578)
!7587 = !DILocation(line: 240, column: 27, scope: !7578)
!7588 = !DILocation(line: 240, column: 9, scope: !7578)
!7589 = !DILocation(line: 240, column: 30, scope: !7578)
!7590 = !DILocation(line: 244, column: 5, scope: !7578)
!7591 = !DILocation(line: 239, column: 25, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7573, file: !266, discriminator: 2)
!7593 = !DILocation(line: 239, column: 5, scope: !7592)
!7594 = distinct !{!7594, !7595}
!7595 = !DILocation(line: 239, column: 5, scope: !7442)
!7596 = !DILocation(line: 245, column: 12, scope: !7450)
!7597 = !DILocation(line: 245, column: 10, scope: !7450)
!7598 = !DILocation(line: 245, column: 17, scope: !7599)
!7599 = !DILexicalBlockFile(scope: !7449, file: !266, discriminator: 1)
!7600 = !DILocation(line: 245, column: 21, scope: !7599)
!7601 = !DILocation(line: 245, column: 19, scope: !7599)
!7602 = !DILocation(line: 245, column: 5, scope: !7599)
!7603 = !DILocation(line: 246, column: 16, scope: !7447)
!7604 = !DILocation(line: 246, column: 14, scope: !7447)
!7605 = !DILocation(line: 246, column: 21, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7446, file: !266, discriminator: 1)
!7607 = !DILocation(line: 246, column: 25, scope: !7606)
!7608 = !DILocation(line: 246, column: 23, scope: !7606)
!7609 = !DILocation(line: 246, column: 9, scope: !7606)
!7610 = !DILocalVariable(name: "r00", scope: !7445, file: !266, line: 247, type: !52)
!7611 = !DILocation(line: 247, column: 17, scope: !7445)
!7612 = !DILocation(line: 247, column: 28, scope: !7445)
!7613 = !DILocation(line: 247, column: 30, scope: !7445)
!7614 = !DILocation(line: 247, column: 23, scope: !7445)
!7615 = !DILocalVariable(name: "g00", scope: !7445, file: !266, line: 247, type: !52)
!7616 = !DILocation(line: 247, column: 37, scope: !7445)
!7617 = !DILocation(line: 247, column: 48, scope: !7445)
!7618 = !DILocation(line: 247, column: 50, scope: !7445)
!7619 = !DILocation(line: 247, column: 43, scope: !7445)
!7620 = !DILocalVariable(name: "b00", scope: !7445, file: !266, line: 247, type: !52)
!7621 = !DILocation(line: 247, column: 57, scope: !7445)
!7622 = !DILocation(line: 247, column: 68, scope: !7445)
!7623 = !DILocation(line: 247, column: 70, scope: !7445)
!7624 = !DILocation(line: 247, column: 63, scope: !7445)
!7625 = !DILocalVariable(name: "y00", scope: !7445, file: !266, line: 248, type: !52)
!7626 = !DILocation(line: 248, column: 17, scope: !7445)
!7627 = !DILocalVariable(name: "r01", scope: !7445, file: !266, line: 250, type: !52)
!7628 = !DILocation(line: 250, column: 17, scope: !7445)
!7629 = !DILocation(line: 250, column: 28, scope: !7445)
!7630 = !DILocation(line: 250, column: 30, scope: !7445)
!7631 = !DILocation(line: 250, column: 34, scope: !7445)
!7632 = !DILocation(line: 250, column: 23, scope: !7445)
!7633 = !DILocalVariable(name: "g01", scope: !7445, file: !266, line: 250, type: !52)
!7634 = !DILocation(line: 250, column: 40, scope: !7445)
!7635 = !DILocation(line: 250, column: 51, scope: !7445)
!7636 = !DILocation(line: 250, column: 53, scope: !7445)
!7637 = !DILocation(line: 250, column: 57, scope: !7445)
!7638 = !DILocation(line: 250, column: 46, scope: !7445)
!7639 = !DILocalVariable(name: "b01", scope: !7445, file: !266, line: 250, type: !52)
!7640 = !DILocation(line: 250, column: 63, scope: !7445)
!7641 = !DILocation(line: 250, column: 74, scope: !7445)
!7642 = !DILocation(line: 250, column: 76, scope: !7445)
!7643 = !DILocation(line: 250, column: 80, scope: !7445)
!7644 = !DILocation(line: 250, column: 69, scope: !7445)
!7645 = !DILocalVariable(name: "y01", scope: !7445, file: !266, line: 251, type: !52)
!7646 = !DILocation(line: 251, column: 17, scope: !7445)
!7647 = !DILocalVariable(name: "u", scope: !7445, file: !266, line: 258, type: !52)
!7648 = !DILocation(line: 258, column: 17, scope: !7445)
!7649 = !DILocalVariable(name: "v", scope: !7445, file: !266, line: 258, type: !52)
!7650 = !DILocation(line: 258, column: 20, scope: !7445)
!7651 = !DILocalVariable(name: "diff", scope: !7445, file: !266, line: 258, type: !52)
!7652 = !DILocation(line: 258, column: 23, scope: !7445)
!7653 = !DILocation(line: 260, column: 19, scope: !7445)
!7654 = !DILocation(line: 260, column: 25, scope: !7445)
!7655 = !DILocation(line: 260, column: 23, scope: !7445)
!7656 = !DILocation(line: 260, column: 31, scope: !7445)
!7657 = !DILocation(line: 260, column: 37, scope: !7445)
!7658 = !DILocation(line: 260, column: 35, scope: !7445)
!7659 = !DILocation(line: 260, column: 29, scope: !7445)
!7660 = !DILocation(line: 260, column: 43, scope: !7445)
!7661 = !DILocation(line: 260, column: 49, scope: !7445)
!7662 = !DILocation(line: 260, column: 47, scope: !7445)
!7663 = !DILocation(line: 260, column: 41, scope: !7445)
!7664 = !DILocation(line: 260, column: 78, scope: !7445)
!7665 = !DILocation(line: 260, column: 80, scope: !7445)
!7666 = !DILocation(line: 260, column: 55, scope: !7445)
!7667 = !DILocation(line: 260, column: 70, scope: !7445)
!7668 = !DILocation(line: 260, column: 72, scope: !7445)
!7669 = !DILocation(line: 260, column: 53, scope: !7445)
!7670 = !DILocation(line: 260, column: 17, scope: !7445)
!7671 = !DILocation(line: 261, column: 21, scope: !7445)
!7672 = !DILocation(line: 261, column: 27, scope: !7445)
!7673 = !DILocation(line: 261, column: 25, scope: !7445)
!7674 = !DILocation(line: 261, column: 33, scope: !7445)
!7675 = !DILocation(line: 261, column: 18, scope: !7445)
!7676 = !DILocation(line: 262, column: 44, scope: !7445)
!7677 = !DILocation(line: 262, column: 61, scope: !7445)
!7678 = !DILocation(line: 262, column: 65, scope: !7445)
!7679 = !DILocation(line: 262, column: 58, scope: !7445)
!7680 = !DILocation(line: 262, column: 28, scope: !7445)
!7681 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !7456)
!7682 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !7456)
!7683 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !7456)
!7684 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !7456)
!7685 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !7456)
!7686 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !7456)
!7687 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !7456)
!7688 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !7456)
!7689 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !7456)
!7690 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !7456)
!7691 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !7456)
!7692 = !DILocation(line: 262, column: 18, scope: !7445)
!7693 = !DILocation(line: 262, column: 20, scope: !7445)
!7694 = !DILocation(line: 262, column: 13, scope: !7445)
!7695 = !DILocation(line: 262, column: 26, scope: !7445)
!7696 = !DILocation(line: 263, column: 57, scope: !7445)
!7697 = !DILocation(line: 263, column: 62, scope: !7445)
!7698 = !DILocation(line: 263, column: 66, scope: !7445)
!7699 = !DILocation(line: 263, column: 71, scope: !7445)
!7700 = !DILocation(line: 263, column: 40, scope: !7445)
!7701 = !DILocation(line: 263, column: 42, scope: !7445)
!7702 = !DILocation(line: 263, column: 48, scope: !7445)
!7703 = !DILocation(line: 263, column: 13, scope: !7445)
!7704 = !DILocation(line: 263, column: 30, scope: !7445)
!7705 = !DILocation(line: 263, column: 32, scope: !7445)
!7706 = !DILocation(line: 263, column: 53, scope: !7445)
!7707 = !DILocation(line: 264, column: 57, scope: !7445)
!7708 = !DILocation(line: 264, column: 62, scope: !7445)
!7709 = !DILocation(line: 264, column: 66, scope: !7445)
!7710 = !DILocation(line: 264, column: 71, scope: !7445)
!7711 = !DILocation(line: 264, column: 40, scope: !7445)
!7712 = !DILocation(line: 264, column: 42, scope: !7445)
!7713 = !DILocation(line: 264, column: 48, scope: !7445)
!7714 = !DILocation(line: 264, column: 13, scope: !7445)
!7715 = !DILocation(line: 264, column: 30, scope: !7445)
!7716 = !DILocation(line: 264, column: 32, scope: !7445)
!7717 = !DILocation(line: 264, column: 28, scope: !7445)
!7718 = !DILocation(line: 264, column: 53, scope: !7445)
!7719 = !DILocation(line: 265, column: 57, scope: !7445)
!7720 = !DILocation(line: 265, column: 62, scope: !7445)
!7721 = !DILocation(line: 265, column: 66, scope: !7445)
!7722 = !DILocation(line: 265, column: 71, scope: !7445)
!7723 = !DILocation(line: 265, column: 40, scope: !7445)
!7724 = !DILocation(line: 265, column: 42, scope: !7445)
!7725 = !DILocation(line: 265, column: 48, scope: !7445)
!7726 = !DILocation(line: 265, column: 13, scope: !7445)
!7727 = !DILocation(line: 265, column: 30, scope: !7445)
!7728 = !DILocation(line: 265, column: 32, scope: !7445)
!7729 = !DILocation(line: 265, column: 28, scope: !7445)
!7730 = !DILocation(line: 265, column: 53, scope: !7445)
!7731 = !DILocation(line: 266, column: 57, scope: !7445)
!7732 = !DILocation(line: 266, column: 62, scope: !7445)
!7733 = !DILocation(line: 266, column: 66, scope: !7445)
!7734 = !DILocation(line: 266, column: 71, scope: !7445)
!7735 = !DILocation(line: 266, column: 40, scope: !7445)
!7736 = !DILocation(line: 266, column: 42, scope: !7445)
!7737 = !DILocation(line: 266, column: 48, scope: !7445)
!7738 = !DILocation(line: 266, column: 13, scope: !7445)
!7739 = !DILocation(line: 266, column: 30, scope: !7445)
!7740 = !DILocation(line: 266, column: 32, scope: !7445)
!7741 = !DILocation(line: 266, column: 28, scope: !7445)
!7742 = !DILocation(line: 266, column: 53, scope: !7445)
!7743 = !DILocation(line: 267, column: 40, scope: !7445)
!7744 = !DILocation(line: 267, column: 42, scope: !7445)
!7745 = !DILocation(line: 267, column: 48, scope: !7445)
!7746 = !DILocation(line: 267, column: 13, scope: !7445)
!7747 = !DILocation(line: 267, column: 30, scope: !7445)
!7748 = !DILocation(line: 267, column: 32, scope: !7445)
!7749 = !DILocation(line: 267, column: 53, scope: !7445)
!7750 = !DILocation(line: 269, column: 19, scope: !7445)
!7751 = !DILocation(line: 269, column: 25, scope: !7445)
!7752 = !DILocation(line: 269, column: 23, scope: !7445)
!7753 = !DILocation(line: 269, column: 31, scope: !7445)
!7754 = !DILocation(line: 269, column: 37, scope: !7445)
!7755 = !DILocation(line: 269, column: 35, scope: !7445)
!7756 = !DILocation(line: 269, column: 29, scope: !7445)
!7757 = !DILocation(line: 269, column: 43, scope: !7445)
!7758 = !DILocation(line: 269, column: 49, scope: !7445)
!7759 = !DILocation(line: 269, column: 47, scope: !7445)
!7760 = !DILocation(line: 269, column: 41, scope: !7445)
!7761 = !DILocation(line: 269, column: 78, scope: !7445)
!7762 = !DILocation(line: 269, column: 80, scope: !7445)
!7763 = !DILocation(line: 269, column: 84, scope: !7445)
!7764 = !DILocation(line: 269, column: 55, scope: !7445)
!7765 = !DILocation(line: 269, column: 70, scope: !7445)
!7766 = !DILocation(line: 269, column: 72, scope: !7445)
!7767 = !DILocation(line: 269, column: 53, scope: !7445)
!7768 = !DILocation(line: 269, column: 17, scope: !7445)
!7769 = !DILocation(line: 270, column: 21, scope: !7445)
!7770 = !DILocation(line: 270, column: 27, scope: !7445)
!7771 = !DILocation(line: 270, column: 25, scope: !7445)
!7772 = !DILocation(line: 270, column: 33, scope: !7445)
!7773 = !DILocation(line: 270, column: 18, scope: !7445)
!7774 = !DILocation(line: 271, column: 47, scope: !7445)
!7775 = !DILocation(line: 271, column: 64, scope: !7445)
!7776 = !DILocation(line: 271, column: 68, scope: !7445)
!7777 = !DILocation(line: 271, column: 61, scope: !7445)
!7778 = !DILocation(line: 271, column: 31, scope: !7445)
!7779 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !7444)
!7780 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !7444)
!7781 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !7444)
!7782 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !7444)
!7783 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !7444)
!7784 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !7444)
!7785 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !7444)
!7786 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !7444)
!7787 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !7444)
!7788 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !7444)
!7789 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !7444)
!7790 = !DILocation(line: 271, column: 18, scope: !7445)
!7791 = !DILocation(line: 271, column: 20, scope: !7445)
!7792 = !DILocation(line: 271, column: 24, scope: !7445)
!7793 = !DILocation(line: 271, column: 13, scope: !7445)
!7794 = !DILocation(line: 271, column: 29, scope: !7445)
!7795 = !DILocation(line: 272, column: 54, scope: !7445)
!7796 = !DILocation(line: 272, column: 59, scope: !7445)
!7797 = !DILocation(line: 272, column: 63, scope: !7445)
!7798 = !DILocation(line: 272, column: 68, scope: !7445)
!7799 = !DILocation(line: 272, column: 39, scope: !7445)
!7800 = !DILocation(line: 272, column: 41, scope: !7445)
!7801 = !DILocation(line: 272, column: 45, scope: !7445)
!7802 = !DILocation(line: 272, column: 13, scope: !7445)
!7803 = !DILocation(line: 272, column: 30, scope: !7445)
!7804 = !DILocation(line: 272, column: 32, scope: !7445)
!7805 = !DILocation(line: 272, column: 50, scope: !7445)
!7806 = !DILocation(line: 273, column: 54, scope: !7445)
!7807 = !DILocation(line: 273, column: 59, scope: !7445)
!7808 = !DILocation(line: 273, column: 63, scope: !7445)
!7809 = !DILocation(line: 273, column: 68, scope: !7445)
!7810 = !DILocation(line: 273, column: 39, scope: !7445)
!7811 = !DILocation(line: 273, column: 41, scope: !7445)
!7812 = !DILocation(line: 273, column: 45, scope: !7445)
!7813 = !DILocation(line: 273, column: 13, scope: !7445)
!7814 = !DILocation(line: 273, column: 30, scope: !7445)
!7815 = !DILocation(line: 273, column: 32, scope: !7445)
!7816 = !DILocation(line: 273, column: 28, scope: !7445)
!7817 = !DILocation(line: 273, column: 50, scope: !7445)
!7818 = !DILocation(line: 274, column: 54, scope: !7445)
!7819 = !DILocation(line: 274, column: 59, scope: !7445)
!7820 = !DILocation(line: 274, column: 63, scope: !7445)
!7821 = !DILocation(line: 274, column: 68, scope: !7445)
!7822 = !DILocation(line: 274, column: 39, scope: !7445)
!7823 = !DILocation(line: 274, column: 41, scope: !7445)
!7824 = !DILocation(line: 274, column: 45, scope: !7445)
!7825 = !DILocation(line: 274, column: 13, scope: !7445)
!7826 = !DILocation(line: 274, column: 30, scope: !7445)
!7827 = !DILocation(line: 274, column: 32, scope: !7445)
!7828 = !DILocation(line: 274, column: 28, scope: !7445)
!7829 = !DILocation(line: 274, column: 50, scope: !7445)
!7830 = !DILocation(line: 275, column: 54, scope: !7445)
!7831 = !DILocation(line: 275, column: 59, scope: !7445)
!7832 = !DILocation(line: 275, column: 63, scope: !7445)
!7833 = !DILocation(line: 275, column: 68, scope: !7445)
!7834 = !DILocation(line: 275, column: 39, scope: !7445)
!7835 = !DILocation(line: 275, column: 41, scope: !7445)
!7836 = !DILocation(line: 275, column: 45, scope: !7445)
!7837 = !DILocation(line: 275, column: 13, scope: !7445)
!7838 = !DILocation(line: 275, column: 30, scope: !7445)
!7839 = !DILocation(line: 275, column: 32, scope: !7445)
!7840 = !DILocation(line: 275, column: 28, scope: !7445)
!7841 = !DILocation(line: 275, column: 50, scope: !7445)
!7842 = !DILocation(line: 276, column: 39, scope: !7445)
!7843 = !DILocation(line: 276, column: 41, scope: !7445)
!7844 = !DILocation(line: 276, column: 45, scope: !7445)
!7845 = !DILocation(line: 276, column: 13, scope: !7445)
!7846 = !DILocation(line: 276, column: 30, scope: !7445)
!7847 = !DILocation(line: 276, column: 32, scope: !7445)
!7848 = !DILocation(line: 276, column: 50, scope: !7445)
!7849 = !DILocation(line: 298, column: 20, scope: !7445)
!7850 = !DILocation(line: 298, column: 28, scope: !7445)
!7851 = !DILocation(line: 298, column: 25, scope: !7445)
!7852 = !DILocation(line: 298, column: 33, scope: !7445)
!7853 = !DILocation(line: 298, column: 38, scope: !7445)
!7854 = !DILocation(line: 298, column: 46, scope: !7445)
!7855 = !DILocation(line: 298, column: 44, scope: !7445)
!7856 = !DILocation(line: 299, column: 20, scope: !7445)
!7857 = !DILocation(line: 299, column: 28, scope: !7445)
!7858 = !DILocation(line: 299, column: 25, scope: !7445)
!7859 = !DILocation(line: 299, column: 33, scope: !7445)
!7860 = !DILocation(line: 299, column: 38, scope: !7445)
!7861 = !DILocation(line: 299, column: 46, scope: !7445)
!7862 = !DILocation(line: 299, column: 44, scope: !7445)
!7863 = !DILocation(line: 298, column: 50, scope: !7445)
!7864 = !DILocation(line: 300, column: 20, scope: !7445)
!7865 = !DILocation(line: 300, column: 28, scope: !7445)
!7866 = !DILocation(line: 300, column: 25, scope: !7445)
!7867 = !DILocation(line: 300, column: 33, scope: !7445)
!7868 = !DILocation(line: 300, column: 38, scope: !7445)
!7869 = !DILocation(line: 300, column: 46, scope: !7445)
!7870 = !DILocation(line: 300, column: 44, scope: !7445)
!7871 = !DILocation(line: 299, column: 50, scope: !7445)
!7872 = !DILocation(line: 300, column: 76, scope: !7445)
!7873 = !DILocation(line: 300, column: 54, scope: !7445)
!7874 = !DILocation(line: 300, column: 69, scope: !7445)
!7875 = !DILocation(line: 300, column: 71, scope: !7445)
!7876 = !DILocation(line: 300, column: 52, scope: !7445)
!7877 = !DILocation(line: 298, column: 15, scope: !7445)
!7878 = !DILocation(line: 301, column: 21, scope: !7445)
!7879 = !DILocation(line: 301, column: 25, scope: !7445)
!7880 = !DILocation(line: 301, column: 23, scope: !7445)
!7881 = !DILocation(line: 301, column: 31, scope: !7445)
!7882 = !DILocation(line: 301, column: 18, scope: !7445)
!7883 = !DILocation(line: 302, column: 52, scope: !7445)
!7884 = !DILocation(line: 302, column: 54, scope: !7445)
!7885 = !DILocation(line: 302, column: 49, scope: !7445)
!7886 = !DILocation(line: 302, column: 23, scope: !7445)
!7887 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !7452)
!7888 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !7452)
!7889 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !7452)
!7890 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !7452)
!7891 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !7452)
!7892 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !7452)
!7893 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !7452)
!7894 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !7452)
!7895 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !7452)
!7896 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !7452)
!7897 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !7452)
!7898 = !DILocation(line: 302, column: 18, scope: !7445)
!7899 = !DILocation(line: 302, column: 13, scope: !7445)
!7900 = !DILocation(line: 302, column: 21, scope: !7445)
!7901 = !DILocation(line: 303, column: 49, scope: !7445)
!7902 = !DILocation(line: 303, column: 54, scope: !7445)
!7903 = !DILocation(line: 303, column: 58, scope: !7445)
!7904 = !DILocation(line: 303, column: 63, scope: !7445)
!7905 = !DILocation(line: 303, column: 38, scope: !7445)
!7906 = !DILocation(line: 303, column: 40, scope: !7445)
!7907 = !DILocation(line: 303, column: 13, scope: !7445)
!7908 = !DILocation(line: 303, column: 30, scope: !7445)
!7909 = !DILocation(line: 303, column: 32, scope: !7445)
!7910 = !DILocation(line: 303, column: 45, scope: !7445)
!7911 = !DILocation(line: 304, column: 49, scope: !7445)
!7912 = !DILocation(line: 304, column: 54, scope: !7445)
!7913 = !DILocation(line: 304, column: 58, scope: !7445)
!7914 = !DILocation(line: 304, column: 63, scope: !7445)
!7915 = !DILocation(line: 304, column: 38, scope: !7445)
!7916 = !DILocation(line: 304, column: 40, scope: !7445)
!7917 = !DILocation(line: 304, column: 13, scope: !7445)
!7918 = !DILocation(line: 304, column: 30, scope: !7445)
!7919 = !DILocation(line: 304, column: 32, scope: !7445)
!7920 = !DILocation(line: 304, column: 28, scope: !7445)
!7921 = !DILocation(line: 304, column: 45, scope: !7445)
!7922 = !DILocation(line: 305, column: 49, scope: !7445)
!7923 = !DILocation(line: 305, column: 54, scope: !7445)
!7924 = !DILocation(line: 305, column: 58, scope: !7445)
!7925 = !DILocation(line: 305, column: 63, scope: !7445)
!7926 = !DILocation(line: 305, column: 38, scope: !7445)
!7927 = !DILocation(line: 305, column: 40, scope: !7445)
!7928 = !DILocation(line: 305, column: 13, scope: !7445)
!7929 = !DILocation(line: 305, column: 30, scope: !7445)
!7930 = !DILocation(line: 305, column: 32, scope: !7445)
!7931 = !DILocation(line: 305, column: 28, scope: !7445)
!7932 = !DILocation(line: 305, column: 45, scope: !7445)
!7933 = !DILocation(line: 306, column: 49, scope: !7445)
!7934 = !DILocation(line: 306, column: 54, scope: !7445)
!7935 = !DILocation(line: 306, column: 58, scope: !7445)
!7936 = !DILocation(line: 306, column: 63, scope: !7445)
!7937 = !DILocation(line: 306, column: 38, scope: !7445)
!7938 = !DILocation(line: 306, column: 40, scope: !7445)
!7939 = !DILocation(line: 306, column: 13, scope: !7445)
!7940 = !DILocation(line: 306, column: 30, scope: !7445)
!7941 = !DILocation(line: 306, column: 32, scope: !7445)
!7942 = !DILocation(line: 306, column: 28, scope: !7445)
!7943 = !DILocation(line: 306, column: 45, scope: !7445)
!7944 = !DILocation(line: 307, column: 38, scope: !7445)
!7945 = !DILocation(line: 307, column: 40, scope: !7445)
!7946 = !DILocation(line: 307, column: 13, scope: !7445)
!7947 = !DILocation(line: 307, column: 30, scope: !7445)
!7948 = !DILocation(line: 307, column: 32, scope: !7445)
!7949 = !DILocation(line: 307, column: 45, scope: !7445)
!7950 = !DILocation(line: 309, column: 20, scope: !7445)
!7951 = !DILocation(line: 309, column: 28, scope: !7445)
!7952 = !DILocation(line: 309, column: 25, scope: !7445)
!7953 = !DILocation(line: 309, column: 33, scope: !7445)
!7954 = !DILocation(line: 309, column: 38, scope: !7445)
!7955 = !DILocation(line: 309, column: 46, scope: !7445)
!7956 = !DILocation(line: 309, column: 44, scope: !7445)
!7957 = !DILocation(line: 310, column: 20, scope: !7445)
!7958 = !DILocation(line: 310, column: 28, scope: !7445)
!7959 = !DILocation(line: 310, column: 25, scope: !7445)
!7960 = !DILocation(line: 310, column: 33, scope: !7445)
!7961 = !DILocation(line: 310, column: 38, scope: !7445)
!7962 = !DILocation(line: 310, column: 46, scope: !7445)
!7963 = !DILocation(line: 310, column: 44, scope: !7445)
!7964 = !DILocation(line: 309, column: 52, scope: !7445)
!7965 = !DILocation(line: 311, column: 20, scope: !7445)
!7966 = !DILocation(line: 311, column: 28, scope: !7445)
!7967 = !DILocation(line: 311, column: 25, scope: !7445)
!7968 = !DILocation(line: 311, column: 33, scope: !7445)
!7969 = !DILocation(line: 311, column: 38, scope: !7445)
!7970 = !DILocation(line: 311, column: 46, scope: !7445)
!7971 = !DILocation(line: 311, column: 44, scope: !7445)
!7972 = !DILocation(line: 310, column: 50, scope: !7445)
!7973 = !DILocation(line: 311, column: 74, scope: !7445)
!7974 = !DILocation(line: 311, column: 52, scope: !7445)
!7975 = !DILocation(line: 311, column: 67, scope: !7445)
!7976 = !DILocation(line: 311, column: 69, scope: !7445)
!7977 = !DILocation(line: 311, column: 50, scope: !7445)
!7978 = !DILocation(line: 309, column: 15, scope: !7445)
!7979 = !DILocation(line: 312, column: 21, scope: !7445)
!7980 = !DILocation(line: 312, column: 25, scope: !7445)
!7981 = !DILocation(line: 312, column: 23, scope: !7445)
!7982 = !DILocation(line: 312, column: 31, scope: !7445)
!7983 = !DILocation(line: 312, column: 18, scope: !7445)
!7984 = !DILocation(line: 313, column: 52, scope: !7445)
!7985 = !DILocation(line: 313, column: 54, scope: !7445)
!7986 = !DILocation(line: 313, column: 49, scope: !7445)
!7987 = !DILocation(line: 313, column: 23, scope: !7445)
!7988 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !7454)
!7989 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !7454)
!7990 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !7454)
!7991 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !7454)
!7992 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !7454)
!7993 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !7454)
!7994 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !7454)
!7995 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !7454)
!7996 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !7454)
!7997 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !7454)
!7998 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !7454)
!7999 = !DILocation(line: 313, column: 18, scope: !7445)
!8000 = !DILocation(line: 313, column: 13, scope: !7445)
!8001 = !DILocation(line: 313, column: 21, scope: !7445)
!8002 = !DILocation(line: 314, column: 49, scope: !7445)
!8003 = !DILocation(line: 314, column: 54, scope: !7445)
!8004 = !DILocation(line: 314, column: 58, scope: !7445)
!8005 = !DILocation(line: 314, column: 63, scope: !7445)
!8006 = !DILocation(line: 314, column: 38, scope: !7445)
!8007 = !DILocation(line: 314, column: 40, scope: !7445)
!8008 = !DILocation(line: 314, column: 13, scope: !7445)
!8009 = !DILocation(line: 314, column: 30, scope: !7445)
!8010 = !DILocation(line: 314, column: 32, scope: !7445)
!8011 = !DILocation(line: 314, column: 45, scope: !7445)
!8012 = !DILocation(line: 315, column: 49, scope: !7445)
!8013 = !DILocation(line: 315, column: 54, scope: !7445)
!8014 = !DILocation(line: 315, column: 58, scope: !7445)
!8015 = !DILocation(line: 315, column: 63, scope: !7445)
!8016 = !DILocation(line: 315, column: 38, scope: !7445)
!8017 = !DILocation(line: 315, column: 40, scope: !7445)
!8018 = !DILocation(line: 315, column: 13, scope: !7445)
!8019 = !DILocation(line: 315, column: 30, scope: !7445)
!8020 = !DILocation(line: 315, column: 32, scope: !7445)
!8021 = !DILocation(line: 315, column: 28, scope: !7445)
!8022 = !DILocation(line: 315, column: 45, scope: !7445)
!8023 = !DILocation(line: 316, column: 49, scope: !7445)
!8024 = !DILocation(line: 316, column: 54, scope: !7445)
!8025 = !DILocation(line: 316, column: 58, scope: !7445)
!8026 = !DILocation(line: 316, column: 63, scope: !7445)
!8027 = !DILocation(line: 316, column: 38, scope: !7445)
!8028 = !DILocation(line: 316, column: 40, scope: !7445)
!8029 = !DILocation(line: 316, column: 13, scope: !7445)
!8030 = !DILocation(line: 316, column: 30, scope: !7445)
!8031 = !DILocation(line: 316, column: 32, scope: !7445)
!8032 = !DILocation(line: 316, column: 28, scope: !7445)
!8033 = !DILocation(line: 316, column: 45, scope: !7445)
!8034 = !DILocation(line: 317, column: 49, scope: !7445)
!8035 = !DILocation(line: 317, column: 54, scope: !7445)
!8036 = !DILocation(line: 317, column: 58, scope: !7445)
!8037 = !DILocation(line: 317, column: 63, scope: !7445)
!8038 = !DILocation(line: 317, column: 38, scope: !7445)
!8039 = !DILocation(line: 317, column: 40, scope: !7445)
!8040 = !DILocation(line: 317, column: 13, scope: !7445)
!8041 = !DILocation(line: 317, column: 30, scope: !7445)
!8042 = !DILocation(line: 317, column: 32, scope: !7445)
!8043 = !DILocation(line: 317, column: 28, scope: !7445)
!8044 = !DILocation(line: 317, column: 45, scope: !7445)
!8045 = !DILocation(line: 318, column: 38, scope: !7445)
!8046 = !DILocation(line: 318, column: 40, scope: !7445)
!8047 = !DILocation(line: 318, column: 13, scope: !7445)
!8048 = !DILocation(line: 318, column: 30, scope: !7445)
!8049 = !DILocation(line: 318, column: 32, scope: !7445)
!8050 = !DILocation(line: 318, column: 45, scope: !7445)
!8051 = !DILocation(line: 319, column: 9, scope: !7445)
!8052 = !DILocation(line: 246, column: 29, scope: !8053)
!8053 = !DILexicalBlockFile(scope: !7446, file: !266, discriminator: 2)
!8054 = !DILocation(line: 246, column: 9, scope: !8053)
!8055 = distinct !{!8055, !8056}
!8056 = !DILocation(line: 246, column: 9, scope: !7448)
!8057 = !DILocation(line: 321, column: 17, scope: !7448)
!8058 = !DILocation(line: 321, column: 20, scope: !7448)
!8059 = !DILocation(line: 321, column: 14, scope: !7448)
!8060 = !DILocation(line: 322, column: 17, scope: !7448)
!8061 = !DILocation(line: 322, column: 31, scope: !7448)
!8062 = !DILocation(line: 322, column: 14, scope: !7448)
!8063 = !DILocation(line: 323, column: 17, scope: !7448)
!8064 = !DILocation(line: 323, column: 31, scope: !7448)
!8065 = !DILocation(line: 323, column: 14, scope: !7448)
!8066 = !DILocation(line: 324, column: 17, scope: !7448)
!8067 = !DILocation(line: 324, column: 19, scope: !7448)
!8068 = !DILocation(line: 324, column: 14, scope: !7448)
!8069 = !DILocation(line: 325, column: 17, scope: !7448)
!8070 = !DILocation(line: 325, column: 19, scope: !7448)
!8071 = !DILocation(line: 325, column: 14, scope: !7448)
!8072 = !DILocation(line: 326, column: 17, scope: !7448)
!8073 = !DILocation(line: 326, column: 19, scope: !7448)
!8074 = !DILocation(line: 326, column: 14, scope: !7448)
!8075 = !DILocation(line: 327, column: 5, scope: !7448)
!8076 = !DILocation(line: 245, column: 25, scope: !8077)
!8077 = !DILexicalBlockFile(scope: !7449, file: !266, discriminator: 2)
!8078 = !DILocation(line: 245, column: 5, scope: !8077)
!8079 = distinct !{!8079, !8080}
!8080 = !DILocation(line: 245, column: 5, scope: !7442)
!8081 = !DILocation(line: 328, column: 1, scope: !7442)
!8082 = distinct !DISubprogram(name: "rgb2yuv_fsb_420p8_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!8083 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8084)
!8084 = distinct !DILocation(line: 271, column: 31, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !266, line: 246, column: 33)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !266, line: 246, column: 9)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !266, line: 246, column: 9)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !266, line: 245, column: 29)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !266, line: 245, column: 5)
!8090 = distinct !DILexicalBlock(scope: !8082, file: !266, line: 245, column: 5)
!8091 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8092)
!8092 = distinct !DILocation(line: 280, column: 36, scope: !8085)
!8093 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8094)
!8094 = distinct !DILocation(line: 289, column: 36, scope: !8085)
!8095 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8096)
!8096 = distinct !DILocation(line: 302, column: 23, scope: !8085)
!8097 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8098)
!8098 = distinct !DILocation(line: 313, column: 23, scope: !8085)
!8099 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !8100)
!8100 = distinct !DILocation(line: 262, column: 28, scope: !8085)
!8101 = !DILocalVariable(name: "_yuv", arg: 1, scope: !8082, file: !266, line: 208, type: !17)
!8102 = !DILocation(line: 208, column: 42, scope: !8082)
!8103 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !8082, file: !266, line: 208, type: !50)
!8104 = !DILocation(line: 208, column: 67, scope: !8082)
!8105 = !DILocalVariable(name: "rgb", arg: 3, scope: !8082, file: !266, line: 209, type: !43)
!8106 = !DILocation(line: 209, column: 38, scope: !8082)
!8107 = !DILocalVariable(name: "s", arg: 4, scope: !8082, file: !266, line: 209, type: !47)
!8108 = !DILocation(line: 209, column: 56, scope: !8082)
!8109 = !DILocalVariable(name: "w", arg: 5, scope: !8082, file: !266, line: 210, type: !52)
!8110 = !DILocation(line: 210, column: 33, scope: !8082)
!8111 = !DILocalVariable(name: "h", arg: 6, scope: !8082, file: !266, line: 210, type: !52)
!8112 = !DILocation(line: 210, column: 40, scope: !8082)
!8113 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !8082, file: !266, line: 210, type: !53)
!8114 = !DILocation(line: 210, column: 57, scope: !8082)
!8115 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !8082, file: !266, line: 211, type: !59)
!8116 = !DILocation(line: 211, column: 43, scope: !8082)
!8117 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !8082, file: !266, line: 212, type: !73)
!8118 = !DILocation(line: 212, column: 34, scope: !8082)
!8119 = !DILocalVariable(name: "yuv", scope: !8082, file: !266, line: 214, type: !17)
!8120 = !DILocation(line: 214, column: 15, scope: !8082)
!8121 = !DILocation(line: 214, column: 34, scope: !8082)
!8122 = !DILocalVariable(name: "yuv0", scope: !8082, file: !266, line: 215, type: !18)
!8123 = !DILocation(line: 215, column: 14, scope: !8082)
!8124 = !DILocation(line: 215, column: 21, scope: !8082)
!8125 = !DILocalVariable(name: "yuv1", scope: !8082, file: !266, line: 215, type: !18)
!8126 = !DILocation(line: 215, column: 30, scope: !8082)
!8127 = !DILocation(line: 215, column: 37, scope: !8082)
!8128 = !DILocalVariable(name: "yuv2", scope: !8082, file: !266, line: 215, type: !18)
!8129 = !DILocation(line: 215, column: 46, scope: !8082)
!8130 = !DILocation(line: 215, column: 53, scope: !8082)
!8131 = !DILocalVariable(name: "rgb0", scope: !8082, file: !266, line: 216, type: !59)
!8132 = !DILocation(line: 216, column: 20, scope: !8082)
!8133 = !DILocation(line: 216, column: 27, scope: !8082)
!8134 = !DILocalVariable(name: "rgb1", scope: !8082, file: !266, line: 216, type: !59)
!8135 = !DILocation(line: 216, column: 36, scope: !8082)
!8136 = !DILocation(line: 216, column: 43, scope: !8082)
!8137 = !DILocalVariable(name: "rgb2", scope: !8082, file: !266, line: 216, type: !59)
!8138 = !DILocation(line: 216, column: 52, scope: !8082)
!8139 = !DILocation(line: 216, column: 59, scope: !8082)
!8140 = !DILocalVariable(name: "y", scope: !8082, file: !266, line: 217, type: !52)
!8141 = !DILocation(line: 217, column: 9, scope: !8082)
!8142 = !DILocalVariable(name: "x", scope: !8082, file: !266, line: 217, type: !52)
!8143 = !DILocation(line: 217, column: 12, scope: !8082)
!8144 = !DILocalVariable(name: "sh", scope: !8082, file: !266, line: 218, type: !343)
!8145 = !DILocation(line: 218, column: 15, scope: !8082)
!8146 = !DILocalVariable(name: "rnd", scope: !8082, file: !266, line: 219, type: !343)
!8147 = !DILocation(line: 219, column: 15, scope: !8082)
!8148 = !DILocalVariable(name: "cry", scope: !8082, file: !266, line: 220, type: !52)
!8149 = !DILocation(line: 220, column: 9, scope: !8082)
!8150 = !DILocation(line: 220, column: 15, scope: !8082)
!8151 = !DILocalVariable(name: "cgy", scope: !8082, file: !266, line: 221, type: !52)
!8152 = !DILocation(line: 221, column: 9, scope: !8082)
!8153 = !DILocation(line: 221, column: 15, scope: !8082)
!8154 = !DILocalVariable(name: "cby", scope: !8082, file: !266, line: 222, type: !52)
!8155 = !DILocation(line: 222, column: 9, scope: !8082)
!8156 = !DILocation(line: 222, column: 15, scope: !8082)
!8157 = !DILocalVariable(name: "cru", scope: !8082, file: !266, line: 223, type: !52)
!8158 = !DILocation(line: 223, column: 9, scope: !8082)
!8159 = !DILocation(line: 223, column: 15, scope: !8082)
!8160 = !DILocalVariable(name: "cgu", scope: !8082, file: !266, line: 224, type: !52)
!8161 = !DILocation(line: 224, column: 9, scope: !8082)
!8162 = !DILocation(line: 224, column: 15, scope: !8082)
!8163 = !DILocalVariable(name: "cburv", scope: !8082, file: !266, line: 225, type: !52)
!8164 = !DILocation(line: 225, column: 9, scope: !8082)
!8165 = !DILocation(line: 225, column: 17, scope: !8082)
!8166 = !DILocalVariable(name: "cgv", scope: !8082, file: !266, line: 226, type: !52)
!8167 = !DILocation(line: 226, column: 9, scope: !8082)
!8168 = !DILocation(line: 226, column: 15, scope: !8082)
!8169 = !DILocalVariable(name: "cbv", scope: !8082, file: !266, line: 227, type: !52)
!8170 = !DILocation(line: 227, column: 9, scope: !8082)
!8171 = !DILocation(line: 227, column: 15, scope: !8082)
!8172 = !DILocalVariable(name: "s0", scope: !8082, file: !266, line: 228, type: !47)
!8173 = !DILocation(line: 228, column: 15, scope: !8082)
!8174 = !DILocation(line: 228, column: 20, scope: !8082)
!8175 = !DILocation(line: 228, column: 34, scope: !8082)
!8176 = !DILocalVariable(name: "uv_offset", scope: !8082, file: !266, line: 229, type: !343)
!8177 = !DILocation(line: 229, column: 15, scope: !8082)
!8178 = !DILocalVariable(name: "mask", scope: !8082, file: !266, line: 230, type: !4656)
!8179 = !DILocation(line: 230, column: 14, scope: !8082)
!8180 = !DILocation(line: 232, column: 12, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8082, file: !266, line: 232, column: 5)
!8182 = !DILocation(line: 232, column: 10, scope: !8181)
!8183 = !DILocation(line: 232, column: 17, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8185, file: !266, discriminator: 1)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !266, line: 232, column: 5)
!8186 = !DILocation(line: 232, column: 21, scope: !8184)
!8187 = !DILocation(line: 232, column: 19, scope: !8184)
!8188 = !DILocation(line: 232, column: 5, scope: !8184)
!8189 = !DILocation(line: 234, column: 27, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8185, file: !266, line: 232, column: 29)
!8191 = !DILocation(line: 234, column: 9, scope: !8190)
!8192 = !DILocation(line: 234, column: 30, scope: !8190)
!8193 = !DILocation(line: 233, column: 27, scope: !8190)
!8194 = !DILocation(line: 233, column: 9, scope: !8190)
!8195 = !DILocation(line: 233, column: 30, scope: !8190)
!8196 = !DILocation(line: 235, column: 5, scope: !8190)
!8197 = !DILocation(line: 232, column: 25, scope: !8198)
!8198 = !DILexicalBlockFile(scope: !8185, file: !266, discriminator: 2)
!8199 = !DILocation(line: 232, column: 5, scope: !8198)
!8200 = distinct !{!8200, !8201}
!8201 = !DILocation(line: 232, column: 5, scope: !8082)
!8202 = !DILocation(line: 237, column: 58, scope: !8082)
!8203 = !DILocation(line: 237, column: 61, scope: !8082)
!8204 = !DILocation(line: 237, column: 72, scope: !8082)
!8205 = !DILocation(line: 237, column: 77, scope: !8082)
!8206 = !DILocation(line: 237, column: 7, scope: !8082)
!8207 = !DILocation(line: 238, column: 58, scope: !8082)
!8208 = !DILocation(line: 238, column: 61, scope: !8082)
!8209 = !DILocation(line: 238, column: 72, scope: !8082)
!8210 = !DILocation(line: 238, column: 77, scope: !8082)
!8211 = !DILocation(line: 238, column: 7, scope: !8082)
!8212 = !DILocation(line: 239, column: 12, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8082, file: !266, line: 239, column: 5)
!8214 = !DILocation(line: 239, column: 10, scope: !8213)
!8215 = !DILocation(line: 239, column: 17, scope: !8216)
!8216 = !DILexicalBlockFile(scope: !8217, file: !266, discriminator: 1)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !266, line: 239, column: 5)
!8218 = !DILocation(line: 239, column: 21, scope: !8216)
!8219 = !DILocation(line: 239, column: 19, scope: !8216)
!8220 = !DILocation(line: 239, column: 5, scope: !8216)
!8221 = !DILocation(line: 243, column: 27, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8217, file: !266, line: 239, column: 29)
!8223 = !DILocation(line: 243, column: 9, scope: !8222)
!8224 = !DILocation(line: 243, column: 30, scope: !8222)
!8225 = !DILocation(line: 242, column: 27, scope: !8222)
!8226 = !DILocation(line: 242, column: 9, scope: !8222)
!8227 = !DILocation(line: 242, column: 30, scope: !8222)
!8228 = !DILocation(line: 241, column: 27, scope: !8222)
!8229 = !DILocation(line: 241, column: 9, scope: !8222)
!8230 = !DILocation(line: 241, column: 30, scope: !8222)
!8231 = !DILocation(line: 240, column: 27, scope: !8222)
!8232 = !DILocation(line: 240, column: 9, scope: !8222)
!8233 = !DILocation(line: 240, column: 30, scope: !8222)
!8234 = !DILocation(line: 244, column: 5, scope: !8222)
!8235 = !DILocation(line: 239, column: 25, scope: !8236)
!8236 = !DILexicalBlockFile(scope: !8217, file: !266, discriminator: 2)
!8237 = !DILocation(line: 239, column: 5, scope: !8236)
!8238 = distinct !{!8238, !8239}
!8239 = !DILocation(line: 239, column: 5, scope: !8082)
!8240 = !DILocation(line: 245, column: 12, scope: !8090)
!8241 = !DILocation(line: 245, column: 10, scope: !8090)
!8242 = !DILocation(line: 245, column: 17, scope: !8243)
!8243 = !DILexicalBlockFile(scope: !8089, file: !266, discriminator: 1)
!8244 = !DILocation(line: 245, column: 21, scope: !8243)
!8245 = !DILocation(line: 245, column: 19, scope: !8243)
!8246 = !DILocation(line: 245, column: 5, scope: !8243)
!8247 = !DILocation(line: 246, column: 16, scope: !8087)
!8248 = !DILocation(line: 246, column: 14, scope: !8087)
!8249 = !DILocation(line: 246, column: 21, scope: !8250)
!8250 = !DILexicalBlockFile(scope: !8086, file: !266, discriminator: 1)
!8251 = !DILocation(line: 246, column: 25, scope: !8250)
!8252 = !DILocation(line: 246, column: 23, scope: !8250)
!8253 = !DILocation(line: 246, column: 9, scope: !8250)
!8254 = !DILocalVariable(name: "r00", scope: !8085, file: !266, line: 247, type: !52)
!8255 = !DILocation(line: 247, column: 17, scope: !8085)
!8256 = !DILocation(line: 247, column: 28, scope: !8085)
!8257 = !DILocation(line: 247, column: 30, scope: !8085)
!8258 = !DILocation(line: 247, column: 23, scope: !8085)
!8259 = !DILocalVariable(name: "g00", scope: !8085, file: !266, line: 247, type: !52)
!8260 = !DILocation(line: 247, column: 37, scope: !8085)
!8261 = !DILocation(line: 247, column: 48, scope: !8085)
!8262 = !DILocation(line: 247, column: 50, scope: !8085)
!8263 = !DILocation(line: 247, column: 43, scope: !8085)
!8264 = !DILocalVariable(name: "b00", scope: !8085, file: !266, line: 247, type: !52)
!8265 = !DILocation(line: 247, column: 57, scope: !8085)
!8266 = !DILocation(line: 247, column: 68, scope: !8085)
!8267 = !DILocation(line: 247, column: 70, scope: !8085)
!8268 = !DILocation(line: 247, column: 63, scope: !8085)
!8269 = !DILocalVariable(name: "y00", scope: !8085, file: !266, line: 248, type: !52)
!8270 = !DILocation(line: 248, column: 17, scope: !8085)
!8271 = !DILocalVariable(name: "r01", scope: !8085, file: !266, line: 250, type: !52)
!8272 = !DILocation(line: 250, column: 17, scope: !8085)
!8273 = !DILocation(line: 250, column: 28, scope: !8085)
!8274 = !DILocation(line: 250, column: 30, scope: !8085)
!8275 = !DILocation(line: 250, column: 34, scope: !8085)
!8276 = !DILocation(line: 250, column: 23, scope: !8085)
!8277 = !DILocalVariable(name: "g01", scope: !8085, file: !266, line: 250, type: !52)
!8278 = !DILocation(line: 250, column: 40, scope: !8085)
!8279 = !DILocation(line: 250, column: 51, scope: !8085)
!8280 = !DILocation(line: 250, column: 53, scope: !8085)
!8281 = !DILocation(line: 250, column: 57, scope: !8085)
!8282 = !DILocation(line: 250, column: 46, scope: !8085)
!8283 = !DILocalVariable(name: "b01", scope: !8085, file: !266, line: 250, type: !52)
!8284 = !DILocation(line: 250, column: 63, scope: !8085)
!8285 = !DILocation(line: 250, column: 74, scope: !8085)
!8286 = !DILocation(line: 250, column: 76, scope: !8085)
!8287 = !DILocation(line: 250, column: 80, scope: !8085)
!8288 = !DILocation(line: 250, column: 69, scope: !8085)
!8289 = !DILocalVariable(name: "y01", scope: !8085, file: !266, line: 251, type: !52)
!8290 = !DILocation(line: 251, column: 17, scope: !8085)
!8291 = !DILocalVariable(name: "r10", scope: !8085, file: !266, line: 253, type: !52)
!8292 = !DILocation(line: 253, column: 17, scope: !8085)
!8293 = !DILocation(line: 253, column: 28, scope: !8085)
!8294 = !DILocation(line: 253, column: 30, scope: !8085)
!8295 = !DILocation(line: 253, column: 34, scope: !8085)
!8296 = !DILocation(line: 253, column: 40, scope: !8085)
!8297 = !DILocation(line: 253, column: 38, scope: !8085)
!8298 = !DILocation(line: 253, column: 23, scope: !8085)
!8299 = !DILocalVariable(name: "g10", scope: !8085, file: !266, line: 253, type: !52)
!8300 = !DILocation(line: 253, column: 44, scope: !8085)
!8301 = !DILocation(line: 253, column: 55, scope: !8085)
!8302 = !DILocation(line: 253, column: 57, scope: !8085)
!8303 = !DILocation(line: 253, column: 61, scope: !8085)
!8304 = !DILocation(line: 253, column: 67, scope: !8085)
!8305 = !DILocation(line: 253, column: 65, scope: !8085)
!8306 = !DILocation(line: 253, column: 50, scope: !8085)
!8307 = !DILocalVariable(name: "b10", scope: !8085, file: !266, line: 253, type: !52)
!8308 = !DILocation(line: 253, column: 71, scope: !8085)
!8309 = !DILocation(line: 253, column: 82, scope: !8085)
!8310 = !DILocation(line: 253, column: 84, scope: !8085)
!8311 = !DILocation(line: 253, column: 88, scope: !8085)
!8312 = !DILocation(line: 253, column: 94, scope: !8085)
!8313 = !DILocation(line: 253, column: 92, scope: !8085)
!8314 = !DILocation(line: 253, column: 77, scope: !8085)
!8315 = !DILocalVariable(name: "r11", scope: !8085, file: !266, line: 254, type: !52)
!8316 = !DILocation(line: 254, column: 17, scope: !8085)
!8317 = !DILocation(line: 254, column: 28, scope: !8085)
!8318 = !DILocation(line: 254, column: 30, scope: !8085)
!8319 = !DILocation(line: 254, column: 34, scope: !8085)
!8320 = !DILocation(line: 254, column: 40, scope: !8085)
!8321 = !DILocation(line: 254, column: 38, scope: !8085)
!8322 = !DILocation(line: 254, column: 23, scope: !8085)
!8323 = !DILocalVariable(name: "g11", scope: !8085, file: !266, line: 254, type: !52)
!8324 = !DILocation(line: 254, column: 44, scope: !8085)
!8325 = !DILocation(line: 254, column: 55, scope: !8085)
!8326 = !DILocation(line: 254, column: 57, scope: !8085)
!8327 = !DILocation(line: 254, column: 61, scope: !8085)
!8328 = !DILocation(line: 254, column: 67, scope: !8085)
!8329 = !DILocation(line: 254, column: 65, scope: !8085)
!8330 = !DILocation(line: 254, column: 50, scope: !8085)
!8331 = !DILocalVariable(name: "b11", scope: !8085, file: !266, line: 254, type: !52)
!8332 = !DILocation(line: 254, column: 71, scope: !8085)
!8333 = !DILocation(line: 254, column: 82, scope: !8085)
!8334 = !DILocation(line: 254, column: 84, scope: !8085)
!8335 = !DILocation(line: 254, column: 88, scope: !8085)
!8336 = !DILocation(line: 254, column: 94, scope: !8085)
!8337 = !DILocation(line: 254, column: 92, scope: !8085)
!8338 = !DILocation(line: 254, column: 77, scope: !8085)
!8339 = !DILocalVariable(name: "y10", scope: !8085, file: !266, line: 255, type: !52)
!8340 = !DILocation(line: 255, column: 17, scope: !8085)
!8341 = !DILocalVariable(name: "y11", scope: !8085, file: !266, line: 255, type: !52)
!8342 = !DILocation(line: 255, column: 22, scope: !8085)
!8343 = !DILocalVariable(name: "u", scope: !8085, file: !266, line: 258, type: !52)
!8344 = !DILocation(line: 258, column: 17, scope: !8085)
!8345 = !DILocalVariable(name: "v", scope: !8085, file: !266, line: 258, type: !52)
!8346 = !DILocation(line: 258, column: 20, scope: !8085)
!8347 = !DILocalVariable(name: "diff", scope: !8085, file: !266, line: 258, type: !52)
!8348 = !DILocation(line: 258, column: 23, scope: !8085)
!8349 = !DILocation(line: 260, column: 19, scope: !8085)
!8350 = !DILocation(line: 260, column: 25, scope: !8085)
!8351 = !DILocation(line: 260, column: 23, scope: !8085)
!8352 = !DILocation(line: 260, column: 31, scope: !8085)
!8353 = !DILocation(line: 260, column: 37, scope: !8085)
!8354 = !DILocation(line: 260, column: 35, scope: !8085)
!8355 = !DILocation(line: 260, column: 29, scope: !8085)
!8356 = !DILocation(line: 260, column: 43, scope: !8085)
!8357 = !DILocation(line: 260, column: 49, scope: !8085)
!8358 = !DILocation(line: 260, column: 47, scope: !8085)
!8359 = !DILocation(line: 260, column: 41, scope: !8085)
!8360 = !DILocation(line: 260, column: 78, scope: !8085)
!8361 = !DILocation(line: 260, column: 80, scope: !8085)
!8362 = !DILocation(line: 260, column: 55, scope: !8085)
!8363 = !DILocation(line: 260, column: 70, scope: !8085)
!8364 = !DILocation(line: 260, column: 72, scope: !8085)
!8365 = !DILocation(line: 260, column: 53, scope: !8085)
!8366 = !DILocation(line: 260, column: 17, scope: !8085)
!8367 = !DILocation(line: 261, column: 21, scope: !8085)
!8368 = !DILocation(line: 261, column: 27, scope: !8085)
!8369 = !DILocation(line: 261, column: 25, scope: !8085)
!8370 = !DILocation(line: 261, column: 33, scope: !8085)
!8371 = !DILocation(line: 261, column: 18, scope: !8085)
!8372 = !DILocation(line: 262, column: 44, scope: !8085)
!8373 = !DILocation(line: 262, column: 61, scope: !8085)
!8374 = !DILocation(line: 262, column: 65, scope: !8085)
!8375 = !DILocation(line: 262, column: 58, scope: !8085)
!8376 = !DILocation(line: 262, column: 28, scope: !8085)
!8377 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8100)
!8378 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8100)
!8379 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8100)
!8380 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8100)
!8381 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8100)
!8382 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8100)
!8383 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8100)
!8384 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8100)
!8385 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8100)
!8386 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8100)
!8387 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8100)
!8388 = !DILocation(line: 262, column: 18, scope: !8085)
!8389 = !DILocation(line: 262, column: 20, scope: !8085)
!8390 = !DILocation(line: 262, column: 13, scope: !8085)
!8391 = !DILocation(line: 262, column: 26, scope: !8085)
!8392 = !DILocation(line: 263, column: 57, scope: !8085)
!8393 = !DILocation(line: 263, column: 62, scope: !8085)
!8394 = !DILocation(line: 263, column: 66, scope: !8085)
!8395 = !DILocation(line: 263, column: 71, scope: !8085)
!8396 = !DILocation(line: 263, column: 40, scope: !8085)
!8397 = !DILocation(line: 263, column: 42, scope: !8085)
!8398 = !DILocation(line: 263, column: 48, scope: !8085)
!8399 = !DILocation(line: 263, column: 13, scope: !8085)
!8400 = !DILocation(line: 263, column: 30, scope: !8085)
!8401 = !DILocation(line: 263, column: 32, scope: !8085)
!8402 = !DILocation(line: 263, column: 53, scope: !8085)
!8403 = !DILocation(line: 264, column: 57, scope: !8085)
!8404 = !DILocation(line: 264, column: 62, scope: !8085)
!8405 = !DILocation(line: 264, column: 66, scope: !8085)
!8406 = !DILocation(line: 264, column: 71, scope: !8085)
!8407 = !DILocation(line: 264, column: 40, scope: !8085)
!8408 = !DILocation(line: 264, column: 42, scope: !8085)
!8409 = !DILocation(line: 264, column: 48, scope: !8085)
!8410 = !DILocation(line: 264, column: 13, scope: !8085)
!8411 = !DILocation(line: 264, column: 30, scope: !8085)
!8412 = !DILocation(line: 264, column: 32, scope: !8085)
!8413 = !DILocation(line: 264, column: 28, scope: !8085)
!8414 = !DILocation(line: 264, column: 53, scope: !8085)
!8415 = !DILocation(line: 265, column: 57, scope: !8085)
!8416 = !DILocation(line: 265, column: 62, scope: !8085)
!8417 = !DILocation(line: 265, column: 66, scope: !8085)
!8418 = !DILocation(line: 265, column: 71, scope: !8085)
!8419 = !DILocation(line: 265, column: 40, scope: !8085)
!8420 = !DILocation(line: 265, column: 42, scope: !8085)
!8421 = !DILocation(line: 265, column: 48, scope: !8085)
!8422 = !DILocation(line: 265, column: 13, scope: !8085)
!8423 = !DILocation(line: 265, column: 30, scope: !8085)
!8424 = !DILocation(line: 265, column: 32, scope: !8085)
!8425 = !DILocation(line: 265, column: 28, scope: !8085)
!8426 = !DILocation(line: 265, column: 53, scope: !8085)
!8427 = !DILocation(line: 266, column: 57, scope: !8085)
!8428 = !DILocation(line: 266, column: 62, scope: !8085)
!8429 = !DILocation(line: 266, column: 66, scope: !8085)
!8430 = !DILocation(line: 266, column: 71, scope: !8085)
!8431 = !DILocation(line: 266, column: 40, scope: !8085)
!8432 = !DILocation(line: 266, column: 42, scope: !8085)
!8433 = !DILocation(line: 266, column: 48, scope: !8085)
!8434 = !DILocation(line: 266, column: 13, scope: !8085)
!8435 = !DILocation(line: 266, column: 30, scope: !8085)
!8436 = !DILocation(line: 266, column: 32, scope: !8085)
!8437 = !DILocation(line: 266, column: 28, scope: !8085)
!8438 = !DILocation(line: 266, column: 53, scope: !8085)
!8439 = !DILocation(line: 267, column: 40, scope: !8085)
!8440 = !DILocation(line: 267, column: 42, scope: !8085)
!8441 = !DILocation(line: 267, column: 48, scope: !8085)
!8442 = !DILocation(line: 267, column: 13, scope: !8085)
!8443 = !DILocation(line: 267, column: 30, scope: !8085)
!8444 = !DILocation(line: 267, column: 32, scope: !8085)
!8445 = !DILocation(line: 267, column: 53, scope: !8085)
!8446 = !DILocation(line: 269, column: 19, scope: !8085)
!8447 = !DILocation(line: 269, column: 25, scope: !8085)
!8448 = !DILocation(line: 269, column: 23, scope: !8085)
!8449 = !DILocation(line: 269, column: 31, scope: !8085)
!8450 = !DILocation(line: 269, column: 37, scope: !8085)
!8451 = !DILocation(line: 269, column: 35, scope: !8085)
!8452 = !DILocation(line: 269, column: 29, scope: !8085)
!8453 = !DILocation(line: 269, column: 43, scope: !8085)
!8454 = !DILocation(line: 269, column: 49, scope: !8085)
!8455 = !DILocation(line: 269, column: 47, scope: !8085)
!8456 = !DILocation(line: 269, column: 41, scope: !8085)
!8457 = !DILocation(line: 269, column: 78, scope: !8085)
!8458 = !DILocation(line: 269, column: 80, scope: !8085)
!8459 = !DILocation(line: 269, column: 84, scope: !8085)
!8460 = !DILocation(line: 269, column: 55, scope: !8085)
!8461 = !DILocation(line: 269, column: 70, scope: !8085)
!8462 = !DILocation(line: 269, column: 72, scope: !8085)
!8463 = !DILocation(line: 269, column: 53, scope: !8085)
!8464 = !DILocation(line: 269, column: 17, scope: !8085)
!8465 = !DILocation(line: 270, column: 21, scope: !8085)
!8466 = !DILocation(line: 270, column: 27, scope: !8085)
!8467 = !DILocation(line: 270, column: 25, scope: !8085)
!8468 = !DILocation(line: 270, column: 33, scope: !8085)
!8469 = !DILocation(line: 270, column: 18, scope: !8085)
!8470 = !DILocation(line: 271, column: 47, scope: !8085)
!8471 = !DILocation(line: 271, column: 64, scope: !8085)
!8472 = !DILocation(line: 271, column: 68, scope: !8085)
!8473 = !DILocation(line: 271, column: 61, scope: !8085)
!8474 = !DILocation(line: 271, column: 31, scope: !8085)
!8475 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8084)
!8476 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8084)
!8477 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8084)
!8478 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8084)
!8479 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8084)
!8480 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8084)
!8481 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8084)
!8482 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8084)
!8483 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8084)
!8484 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8084)
!8485 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8084)
!8486 = !DILocation(line: 271, column: 18, scope: !8085)
!8487 = !DILocation(line: 271, column: 20, scope: !8085)
!8488 = !DILocation(line: 271, column: 24, scope: !8085)
!8489 = !DILocation(line: 271, column: 13, scope: !8085)
!8490 = !DILocation(line: 271, column: 29, scope: !8085)
!8491 = !DILocation(line: 272, column: 54, scope: !8085)
!8492 = !DILocation(line: 272, column: 59, scope: !8085)
!8493 = !DILocation(line: 272, column: 63, scope: !8085)
!8494 = !DILocation(line: 272, column: 68, scope: !8085)
!8495 = !DILocation(line: 272, column: 39, scope: !8085)
!8496 = !DILocation(line: 272, column: 41, scope: !8085)
!8497 = !DILocation(line: 272, column: 45, scope: !8085)
!8498 = !DILocation(line: 272, column: 13, scope: !8085)
!8499 = !DILocation(line: 272, column: 30, scope: !8085)
!8500 = !DILocation(line: 272, column: 32, scope: !8085)
!8501 = !DILocation(line: 272, column: 50, scope: !8085)
!8502 = !DILocation(line: 273, column: 54, scope: !8085)
!8503 = !DILocation(line: 273, column: 59, scope: !8085)
!8504 = !DILocation(line: 273, column: 63, scope: !8085)
!8505 = !DILocation(line: 273, column: 68, scope: !8085)
!8506 = !DILocation(line: 273, column: 39, scope: !8085)
!8507 = !DILocation(line: 273, column: 41, scope: !8085)
!8508 = !DILocation(line: 273, column: 45, scope: !8085)
!8509 = !DILocation(line: 273, column: 13, scope: !8085)
!8510 = !DILocation(line: 273, column: 30, scope: !8085)
!8511 = !DILocation(line: 273, column: 32, scope: !8085)
!8512 = !DILocation(line: 273, column: 28, scope: !8085)
!8513 = !DILocation(line: 273, column: 50, scope: !8085)
!8514 = !DILocation(line: 274, column: 54, scope: !8085)
!8515 = !DILocation(line: 274, column: 59, scope: !8085)
!8516 = !DILocation(line: 274, column: 63, scope: !8085)
!8517 = !DILocation(line: 274, column: 68, scope: !8085)
!8518 = !DILocation(line: 274, column: 39, scope: !8085)
!8519 = !DILocation(line: 274, column: 41, scope: !8085)
!8520 = !DILocation(line: 274, column: 45, scope: !8085)
!8521 = !DILocation(line: 274, column: 13, scope: !8085)
!8522 = !DILocation(line: 274, column: 30, scope: !8085)
!8523 = !DILocation(line: 274, column: 32, scope: !8085)
!8524 = !DILocation(line: 274, column: 28, scope: !8085)
!8525 = !DILocation(line: 274, column: 50, scope: !8085)
!8526 = !DILocation(line: 275, column: 54, scope: !8085)
!8527 = !DILocation(line: 275, column: 59, scope: !8085)
!8528 = !DILocation(line: 275, column: 63, scope: !8085)
!8529 = !DILocation(line: 275, column: 68, scope: !8085)
!8530 = !DILocation(line: 275, column: 39, scope: !8085)
!8531 = !DILocation(line: 275, column: 41, scope: !8085)
!8532 = !DILocation(line: 275, column: 45, scope: !8085)
!8533 = !DILocation(line: 275, column: 13, scope: !8085)
!8534 = !DILocation(line: 275, column: 30, scope: !8085)
!8535 = !DILocation(line: 275, column: 32, scope: !8085)
!8536 = !DILocation(line: 275, column: 28, scope: !8085)
!8537 = !DILocation(line: 275, column: 50, scope: !8085)
!8538 = !DILocation(line: 276, column: 39, scope: !8085)
!8539 = !DILocation(line: 276, column: 41, scope: !8085)
!8540 = !DILocation(line: 276, column: 45, scope: !8085)
!8541 = !DILocation(line: 276, column: 13, scope: !8085)
!8542 = !DILocation(line: 276, column: 30, scope: !8085)
!8543 = !DILocation(line: 276, column: 32, scope: !8085)
!8544 = !DILocation(line: 276, column: 50, scope: !8085)
!8545 = !DILocation(line: 278, column: 19, scope: !8085)
!8546 = !DILocation(line: 278, column: 25, scope: !8085)
!8547 = !DILocation(line: 278, column: 23, scope: !8085)
!8548 = !DILocation(line: 278, column: 31, scope: !8085)
!8549 = !DILocation(line: 278, column: 37, scope: !8085)
!8550 = !DILocation(line: 278, column: 35, scope: !8085)
!8551 = !DILocation(line: 278, column: 29, scope: !8085)
!8552 = !DILocation(line: 278, column: 43, scope: !8085)
!8553 = !DILocation(line: 278, column: 49, scope: !8085)
!8554 = !DILocation(line: 278, column: 47, scope: !8085)
!8555 = !DILocation(line: 278, column: 41, scope: !8085)
!8556 = !DILocation(line: 278, column: 73, scope: !8085)
!8557 = !DILocation(line: 278, column: 75, scope: !8085)
!8558 = !DILocation(line: 278, column: 79, scope: !8085)
!8559 = !DILocation(line: 278, column: 55, scope: !8085)
!8560 = !DILocation(line: 278, column: 53, scope: !8085)
!8561 = !DILocation(line: 278, column: 17, scope: !8085)
!8562 = !DILocation(line: 279, column: 21, scope: !8085)
!8563 = !DILocation(line: 279, column: 27, scope: !8085)
!8564 = !DILocation(line: 279, column: 25, scope: !8085)
!8565 = !DILocation(line: 279, column: 33, scope: !8085)
!8566 = !DILocation(line: 279, column: 18, scope: !8085)
!8567 = !DILocation(line: 280, column: 52, scope: !8085)
!8568 = !DILocation(line: 280, column: 69, scope: !8085)
!8569 = !DILocation(line: 280, column: 73, scope: !8085)
!8570 = !DILocation(line: 280, column: 66, scope: !8085)
!8571 = !DILocation(line: 280, column: 36, scope: !8085)
!8572 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8092)
!8573 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8092)
!8574 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8092)
!8575 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8092)
!8576 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8092)
!8577 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8092)
!8578 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8092)
!8579 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8092)
!8580 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8092)
!8581 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8092)
!8582 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8092)
!8583 = !DILocation(line: 280, column: 18, scope: !8085)
!8584 = !DILocation(line: 280, column: 20, scope: !8085)
!8585 = !DILocation(line: 280, column: 24, scope: !8085)
!8586 = !DILocation(line: 280, column: 30, scope: !8085)
!8587 = !DILocation(line: 280, column: 28, scope: !8085)
!8588 = !DILocation(line: 280, column: 13, scope: !8085)
!8589 = !DILocation(line: 280, column: 34, scope: !8085)
!8590 = !DILocation(line: 281, column: 46, scope: !8085)
!8591 = !DILocation(line: 281, column: 51, scope: !8085)
!8592 = !DILocation(line: 281, column: 55, scope: !8085)
!8593 = !DILocation(line: 281, column: 60, scope: !8085)
!8594 = !DILocation(line: 281, column: 31, scope: !8085)
!8595 = !DILocation(line: 281, column: 33, scope: !8085)
!8596 = !DILocation(line: 281, column: 37, scope: !8085)
!8597 = !DILocation(line: 281, column: 13, scope: !8085)
!8598 = !DILocation(line: 281, column: 42, scope: !8085)
!8599 = !DILocation(line: 282, column: 46, scope: !8085)
!8600 = !DILocation(line: 282, column: 51, scope: !8085)
!8601 = !DILocation(line: 282, column: 55, scope: !8085)
!8602 = !DILocation(line: 282, column: 60, scope: !8085)
!8603 = !DILocation(line: 282, column: 31, scope: !8085)
!8604 = !DILocation(line: 282, column: 33, scope: !8085)
!8605 = !DILocation(line: 282, column: 37, scope: !8085)
!8606 = !DILocation(line: 282, column: 13, scope: !8085)
!8607 = !DILocation(line: 282, column: 42, scope: !8085)
!8608 = !DILocation(line: 283, column: 46, scope: !8085)
!8609 = !DILocation(line: 283, column: 51, scope: !8085)
!8610 = !DILocation(line: 283, column: 55, scope: !8085)
!8611 = !DILocation(line: 283, column: 60, scope: !8085)
!8612 = !DILocation(line: 283, column: 31, scope: !8085)
!8613 = !DILocation(line: 283, column: 33, scope: !8085)
!8614 = !DILocation(line: 283, column: 37, scope: !8085)
!8615 = !DILocation(line: 283, column: 13, scope: !8085)
!8616 = !DILocation(line: 283, column: 42, scope: !8085)
!8617 = !DILocation(line: 284, column: 46, scope: !8085)
!8618 = !DILocation(line: 284, column: 51, scope: !8085)
!8619 = !DILocation(line: 284, column: 55, scope: !8085)
!8620 = !DILocation(line: 284, column: 60, scope: !8085)
!8621 = !DILocation(line: 284, column: 31, scope: !8085)
!8622 = !DILocation(line: 284, column: 33, scope: !8085)
!8623 = !DILocation(line: 284, column: 37, scope: !8085)
!8624 = !DILocation(line: 284, column: 13, scope: !8085)
!8625 = !DILocation(line: 284, column: 42, scope: !8085)
!8626 = !DILocation(line: 285, column: 31, scope: !8085)
!8627 = !DILocation(line: 285, column: 33, scope: !8085)
!8628 = !DILocation(line: 285, column: 37, scope: !8085)
!8629 = !DILocation(line: 285, column: 13, scope: !8085)
!8630 = !DILocation(line: 285, column: 42, scope: !8085)
!8631 = !DILocation(line: 287, column: 19, scope: !8085)
!8632 = !DILocation(line: 287, column: 25, scope: !8085)
!8633 = !DILocation(line: 287, column: 23, scope: !8085)
!8634 = !DILocation(line: 287, column: 31, scope: !8085)
!8635 = !DILocation(line: 287, column: 37, scope: !8085)
!8636 = !DILocation(line: 287, column: 35, scope: !8085)
!8637 = !DILocation(line: 287, column: 29, scope: !8085)
!8638 = !DILocation(line: 287, column: 43, scope: !8085)
!8639 = !DILocation(line: 287, column: 49, scope: !8085)
!8640 = !DILocation(line: 287, column: 47, scope: !8085)
!8641 = !DILocation(line: 287, column: 41, scope: !8085)
!8642 = !DILocation(line: 287, column: 73, scope: !8085)
!8643 = !DILocation(line: 287, column: 75, scope: !8085)
!8644 = !DILocation(line: 287, column: 79, scope: !8085)
!8645 = !DILocation(line: 287, column: 55, scope: !8085)
!8646 = !DILocation(line: 287, column: 53, scope: !8085)
!8647 = !DILocation(line: 287, column: 17, scope: !8085)
!8648 = !DILocation(line: 288, column: 21, scope: !8085)
!8649 = !DILocation(line: 288, column: 27, scope: !8085)
!8650 = !DILocation(line: 288, column: 25, scope: !8085)
!8651 = !DILocation(line: 288, column: 33, scope: !8085)
!8652 = !DILocation(line: 288, column: 18, scope: !8085)
!8653 = !DILocation(line: 289, column: 52, scope: !8085)
!8654 = !DILocation(line: 289, column: 69, scope: !8085)
!8655 = !DILocation(line: 289, column: 73, scope: !8085)
!8656 = !DILocation(line: 289, column: 66, scope: !8085)
!8657 = !DILocation(line: 289, column: 36, scope: !8085)
!8658 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8094)
!8659 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8094)
!8660 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8094)
!8661 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8094)
!8662 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8094)
!8663 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8094)
!8664 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8094)
!8665 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8094)
!8666 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8094)
!8667 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8094)
!8668 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8094)
!8669 = !DILocation(line: 289, column: 18, scope: !8085)
!8670 = !DILocation(line: 289, column: 20, scope: !8085)
!8671 = !DILocation(line: 289, column: 24, scope: !8085)
!8672 = !DILocation(line: 289, column: 30, scope: !8085)
!8673 = !DILocation(line: 289, column: 28, scope: !8085)
!8674 = !DILocation(line: 289, column: 13, scope: !8085)
!8675 = !DILocation(line: 289, column: 34, scope: !8085)
!8676 = !DILocation(line: 290, column: 46, scope: !8085)
!8677 = !DILocation(line: 290, column: 51, scope: !8085)
!8678 = !DILocation(line: 290, column: 55, scope: !8085)
!8679 = !DILocation(line: 290, column: 60, scope: !8085)
!8680 = !DILocation(line: 290, column: 31, scope: !8085)
!8681 = !DILocation(line: 290, column: 33, scope: !8085)
!8682 = !DILocation(line: 290, column: 37, scope: !8085)
!8683 = !DILocation(line: 290, column: 13, scope: !8085)
!8684 = !DILocation(line: 290, column: 42, scope: !8085)
!8685 = !DILocation(line: 291, column: 46, scope: !8085)
!8686 = !DILocation(line: 291, column: 51, scope: !8085)
!8687 = !DILocation(line: 291, column: 55, scope: !8085)
!8688 = !DILocation(line: 291, column: 60, scope: !8085)
!8689 = !DILocation(line: 291, column: 31, scope: !8085)
!8690 = !DILocation(line: 291, column: 33, scope: !8085)
!8691 = !DILocation(line: 291, column: 37, scope: !8085)
!8692 = !DILocation(line: 291, column: 13, scope: !8085)
!8693 = !DILocation(line: 291, column: 42, scope: !8085)
!8694 = !DILocation(line: 292, column: 46, scope: !8085)
!8695 = !DILocation(line: 292, column: 51, scope: !8085)
!8696 = !DILocation(line: 292, column: 55, scope: !8085)
!8697 = !DILocation(line: 292, column: 60, scope: !8085)
!8698 = !DILocation(line: 292, column: 31, scope: !8085)
!8699 = !DILocation(line: 292, column: 33, scope: !8085)
!8700 = !DILocation(line: 292, column: 37, scope: !8085)
!8701 = !DILocation(line: 292, column: 13, scope: !8085)
!8702 = !DILocation(line: 292, column: 42, scope: !8085)
!8703 = !DILocation(line: 293, column: 46, scope: !8085)
!8704 = !DILocation(line: 293, column: 51, scope: !8085)
!8705 = !DILocation(line: 293, column: 55, scope: !8085)
!8706 = !DILocation(line: 293, column: 60, scope: !8085)
!8707 = !DILocation(line: 293, column: 31, scope: !8085)
!8708 = !DILocation(line: 293, column: 33, scope: !8085)
!8709 = !DILocation(line: 293, column: 37, scope: !8085)
!8710 = !DILocation(line: 293, column: 13, scope: !8085)
!8711 = !DILocation(line: 293, column: 42, scope: !8085)
!8712 = !DILocation(line: 294, column: 31, scope: !8085)
!8713 = !DILocation(line: 294, column: 33, scope: !8085)
!8714 = !DILocation(line: 294, column: 37, scope: !8085)
!8715 = !DILocation(line: 294, column: 13, scope: !8085)
!8716 = !DILocation(line: 294, column: 42, scope: !8085)
!8717 = !DILocation(line: 298, column: 20, scope: !8085)
!8718 = !DILocation(line: 298, column: 28, scope: !8085)
!8719 = !DILocation(line: 298, column: 25, scope: !8085)
!8720 = !DILocation(line: 298, column: 36, scope: !8085)
!8721 = !DILocation(line: 298, column: 33, scope: !8085)
!8722 = !DILocation(line: 298, column: 44, scope: !8085)
!8723 = !DILocation(line: 298, column: 41, scope: !8085)
!8724 = !DILocation(line: 298, column: 49, scope: !8085)
!8725 = !DILocation(line: 298, column: 54, scope: !8085)
!8726 = !DILocation(line: 298, column: 62, scope: !8085)
!8727 = !DILocation(line: 298, column: 60, scope: !8085)
!8728 = !DILocation(line: 299, column: 20, scope: !8085)
!8729 = !DILocation(line: 299, column: 28, scope: !8085)
!8730 = !DILocation(line: 299, column: 25, scope: !8085)
!8731 = !DILocation(line: 299, column: 36, scope: !8085)
!8732 = !DILocation(line: 299, column: 33, scope: !8085)
!8733 = !DILocation(line: 299, column: 44, scope: !8085)
!8734 = !DILocation(line: 299, column: 41, scope: !8085)
!8735 = !DILocation(line: 299, column: 49, scope: !8085)
!8736 = !DILocation(line: 299, column: 54, scope: !8085)
!8737 = !DILocation(line: 299, column: 62, scope: !8085)
!8738 = !DILocation(line: 299, column: 60, scope: !8085)
!8739 = !DILocation(line: 298, column: 66, scope: !8085)
!8740 = !DILocation(line: 300, column: 20, scope: !8085)
!8741 = !DILocation(line: 300, column: 28, scope: !8085)
!8742 = !DILocation(line: 300, column: 25, scope: !8085)
!8743 = !DILocation(line: 300, column: 36, scope: !8085)
!8744 = !DILocation(line: 300, column: 33, scope: !8085)
!8745 = !DILocation(line: 300, column: 44, scope: !8085)
!8746 = !DILocation(line: 300, column: 41, scope: !8085)
!8747 = !DILocation(line: 300, column: 49, scope: !8085)
!8748 = !DILocation(line: 300, column: 54, scope: !8085)
!8749 = !DILocation(line: 300, column: 62, scope: !8085)
!8750 = !DILocation(line: 300, column: 60, scope: !8085)
!8751 = !DILocation(line: 299, column: 66, scope: !8085)
!8752 = !DILocation(line: 300, column: 92, scope: !8085)
!8753 = !DILocation(line: 300, column: 70, scope: !8085)
!8754 = !DILocation(line: 300, column: 85, scope: !8085)
!8755 = !DILocation(line: 300, column: 87, scope: !8085)
!8756 = !DILocation(line: 300, column: 68, scope: !8085)
!8757 = !DILocation(line: 298, column: 15, scope: !8085)
!8758 = !DILocation(line: 301, column: 21, scope: !8085)
!8759 = !DILocation(line: 301, column: 25, scope: !8085)
!8760 = !DILocation(line: 301, column: 23, scope: !8085)
!8761 = !DILocation(line: 301, column: 31, scope: !8085)
!8762 = !DILocation(line: 301, column: 18, scope: !8085)
!8763 = !DILocation(line: 302, column: 52, scope: !8085)
!8764 = !DILocation(line: 302, column: 54, scope: !8085)
!8765 = !DILocation(line: 302, column: 49, scope: !8085)
!8766 = !DILocation(line: 302, column: 23, scope: !8085)
!8767 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8096)
!8768 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8096)
!8769 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8096)
!8770 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8096)
!8771 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8096)
!8772 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8096)
!8773 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8096)
!8774 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8096)
!8775 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8096)
!8776 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8096)
!8777 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8096)
!8778 = !DILocation(line: 302, column: 18, scope: !8085)
!8779 = !DILocation(line: 302, column: 13, scope: !8085)
!8780 = !DILocation(line: 302, column: 21, scope: !8085)
!8781 = !DILocation(line: 303, column: 49, scope: !8085)
!8782 = !DILocation(line: 303, column: 54, scope: !8085)
!8783 = !DILocation(line: 303, column: 58, scope: !8085)
!8784 = !DILocation(line: 303, column: 63, scope: !8085)
!8785 = !DILocation(line: 303, column: 38, scope: !8085)
!8786 = !DILocation(line: 303, column: 40, scope: !8085)
!8787 = !DILocation(line: 303, column: 13, scope: !8085)
!8788 = !DILocation(line: 303, column: 30, scope: !8085)
!8789 = !DILocation(line: 303, column: 32, scope: !8085)
!8790 = !DILocation(line: 303, column: 45, scope: !8085)
!8791 = !DILocation(line: 304, column: 49, scope: !8085)
!8792 = !DILocation(line: 304, column: 54, scope: !8085)
!8793 = !DILocation(line: 304, column: 58, scope: !8085)
!8794 = !DILocation(line: 304, column: 63, scope: !8085)
!8795 = !DILocation(line: 304, column: 38, scope: !8085)
!8796 = !DILocation(line: 304, column: 40, scope: !8085)
!8797 = !DILocation(line: 304, column: 13, scope: !8085)
!8798 = !DILocation(line: 304, column: 30, scope: !8085)
!8799 = !DILocation(line: 304, column: 32, scope: !8085)
!8800 = !DILocation(line: 304, column: 28, scope: !8085)
!8801 = !DILocation(line: 304, column: 45, scope: !8085)
!8802 = !DILocation(line: 305, column: 49, scope: !8085)
!8803 = !DILocation(line: 305, column: 54, scope: !8085)
!8804 = !DILocation(line: 305, column: 58, scope: !8085)
!8805 = !DILocation(line: 305, column: 63, scope: !8085)
!8806 = !DILocation(line: 305, column: 38, scope: !8085)
!8807 = !DILocation(line: 305, column: 40, scope: !8085)
!8808 = !DILocation(line: 305, column: 13, scope: !8085)
!8809 = !DILocation(line: 305, column: 30, scope: !8085)
!8810 = !DILocation(line: 305, column: 32, scope: !8085)
!8811 = !DILocation(line: 305, column: 28, scope: !8085)
!8812 = !DILocation(line: 305, column: 45, scope: !8085)
!8813 = !DILocation(line: 306, column: 49, scope: !8085)
!8814 = !DILocation(line: 306, column: 54, scope: !8085)
!8815 = !DILocation(line: 306, column: 58, scope: !8085)
!8816 = !DILocation(line: 306, column: 63, scope: !8085)
!8817 = !DILocation(line: 306, column: 38, scope: !8085)
!8818 = !DILocation(line: 306, column: 40, scope: !8085)
!8819 = !DILocation(line: 306, column: 13, scope: !8085)
!8820 = !DILocation(line: 306, column: 30, scope: !8085)
!8821 = !DILocation(line: 306, column: 32, scope: !8085)
!8822 = !DILocation(line: 306, column: 28, scope: !8085)
!8823 = !DILocation(line: 306, column: 45, scope: !8085)
!8824 = !DILocation(line: 307, column: 38, scope: !8085)
!8825 = !DILocation(line: 307, column: 40, scope: !8085)
!8826 = !DILocation(line: 307, column: 13, scope: !8085)
!8827 = !DILocation(line: 307, column: 30, scope: !8085)
!8828 = !DILocation(line: 307, column: 32, scope: !8085)
!8829 = !DILocation(line: 307, column: 45, scope: !8085)
!8830 = !DILocation(line: 309, column: 20, scope: !8085)
!8831 = !DILocation(line: 309, column: 28, scope: !8085)
!8832 = !DILocation(line: 309, column: 25, scope: !8085)
!8833 = !DILocation(line: 309, column: 36, scope: !8085)
!8834 = !DILocation(line: 309, column: 33, scope: !8085)
!8835 = !DILocation(line: 309, column: 44, scope: !8085)
!8836 = !DILocation(line: 309, column: 41, scope: !8085)
!8837 = !DILocation(line: 309, column: 49, scope: !8085)
!8838 = !DILocation(line: 309, column: 54, scope: !8085)
!8839 = !DILocation(line: 309, column: 62, scope: !8085)
!8840 = !DILocation(line: 309, column: 60, scope: !8085)
!8841 = !DILocation(line: 310, column: 20, scope: !8085)
!8842 = !DILocation(line: 310, column: 28, scope: !8085)
!8843 = !DILocation(line: 310, column: 25, scope: !8085)
!8844 = !DILocation(line: 310, column: 36, scope: !8085)
!8845 = !DILocation(line: 310, column: 33, scope: !8085)
!8846 = !DILocation(line: 310, column: 44, scope: !8085)
!8847 = !DILocation(line: 310, column: 41, scope: !8085)
!8848 = !DILocation(line: 310, column: 49, scope: !8085)
!8849 = !DILocation(line: 310, column: 54, scope: !8085)
!8850 = !DILocation(line: 310, column: 62, scope: !8085)
!8851 = !DILocation(line: 310, column: 60, scope: !8085)
!8852 = !DILocation(line: 309, column: 68, scope: !8085)
!8853 = !DILocation(line: 311, column: 20, scope: !8085)
!8854 = !DILocation(line: 311, column: 28, scope: !8085)
!8855 = !DILocation(line: 311, column: 25, scope: !8085)
!8856 = !DILocation(line: 311, column: 36, scope: !8085)
!8857 = !DILocation(line: 311, column: 33, scope: !8085)
!8858 = !DILocation(line: 311, column: 44, scope: !8085)
!8859 = !DILocation(line: 311, column: 41, scope: !8085)
!8860 = !DILocation(line: 311, column: 49, scope: !8085)
!8861 = !DILocation(line: 311, column: 54, scope: !8085)
!8862 = !DILocation(line: 311, column: 62, scope: !8085)
!8863 = !DILocation(line: 311, column: 60, scope: !8085)
!8864 = !DILocation(line: 310, column: 66, scope: !8085)
!8865 = !DILocation(line: 311, column: 90, scope: !8085)
!8866 = !DILocation(line: 311, column: 68, scope: !8085)
!8867 = !DILocation(line: 311, column: 83, scope: !8085)
!8868 = !DILocation(line: 311, column: 85, scope: !8085)
!8869 = !DILocation(line: 311, column: 66, scope: !8085)
!8870 = !DILocation(line: 309, column: 15, scope: !8085)
!8871 = !DILocation(line: 312, column: 21, scope: !8085)
!8872 = !DILocation(line: 312, column: 25, scope: !8085)
!8873 = !DILocation(line: 312, column: 23, scope: !8085)
!8874 = !DILocation(line: 312, column: 31, scope: !8085)
!8875 = !DILocation(line: 312, column: 18, scope: !8085)
!8876 = !DILocation(line: 313, column: 52, scope: !8085)
!8877 = !DILocation(line: 313, column: 54, scope: !8085)
!8878 = !DILocation(line: 313, column: 49, scope: !8085)
!8879 = !DILocation(line: 313, column: 23, scope: !8085)
!8880 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !8098)
!8881 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !8098)
!8882 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !8098)
!8883 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !8098)
!8884 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !8098)
!8885 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !8098)
!8886 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !8098)
!8887 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !8098)
!8888 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !8098)
!8889 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !8098)
!8890 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !8098)
!8891 = !DILocation(line: 313, column: 18, scope: !8085)
!8892 = !DILocation(line: 313, column: 13, scope: !8085)
!8893 = !DILocation(line: 313, column: 21, scope: !8085)
!8894 = !DILocation(line: 314, column: 49, scope: !8085)
!8895 = !DILocation(line: 314, column: 54, scope: !8085)
!8896 = !DILocation(line: 314, column: 58, scope: !8085)
!8897 = !DILocation(line: 314, column: 63, scope: !8085)
!8898 = !DILocation(line: 314, column: 38, scope: !8085)
!8899 = !DILocation(line: 314, column: 40, scope: !8085)
!8900 = !DILocation(line: 314, column: 13, scope: !8085)
!8901 = !DILocation(line: 314, column: 30, scope: !8085)
!8902 = !DILocation(line: 314, column: 32, scope: !8085)
!8903 = !DILocation(line: 314, column: 45, scope: !8085)
!8904 = !DILocation(line: 315, column: 49, scope: !8085)
!8905 = !DILocation(line: 315, column: 54, scope: !8085)
!8906 = !DILocation(line: 315, column: 58, scope: !8085)
!8907 = !DILocation(line: 315, column: 63, scope: !8085)
!8908 = !DILocation(line: 315, column: 38, scope: !8085)
!8909 = !DILocation(line: 315, column: 40, scope: !8085)
!8910 = !DILocation(line: 315, column: 13, scope: !8085)
!8911 = !DILocation(line: 315, column: 30, scope: !8085)
!8912 = !DILocation(line: 315, column: 32, scope: !8085)
!8913 = !DILocation(line: 315, column: 28, scope: !8085)
!8914 = !DILocation(line: 315, column: 45, scope: !8085)
!8915 = !DILocation(line: 316, column: 49, scope: !8085)
!8916 = !DILocation(line: 316, column: 54, scope: !8085)
!8917 = !DILocation(line: 316, column: 58, scope: !8085)
!8918 = !DILocation(line: 316, column: 63, scope: !8085)
!8919 = !DILocation(line: 316, column: 38, scope: !8085)
!8920 = !DILocation(line: 316, column: 40, scope: !8085)
!8921 = !DILocation(line: 316, column: 13, scope: !8085)
!8922 = !DILocation(line: 316, column: 30, scope: !8085)
!8923 = !DILocation(line: 316, column: 32, scope: !8085)
!8924 = !DILocation(line: 316, column: 28, scope: !8085)
!8925 = !DILocation(line: 316, column: 45, scope: !8085)
!8926 = !DILocation(line: 317, column: 49, scope: !8085)
!8927 = !DILocation(line: 317, column: 54, scope: !8085)
!8928 = !DILocation(line: 317, column: 58, scope: !8085)
!8929 = !DILocation(line: 317, column: 63, scope: !8085)
!8930 = !DILocation(line: 317, column: 38, scope: !8085)
!8931 = !DILocation(line: 317, column: 40, scope: !8085)
!8932 = !DILocation(line: 317, column: 13, scope: !8085)
!8933 = !DILocation(line: 317, column: 30, scope: !8085)
!8934 = !DILocation(line: 317, column: 32, scope: !8085)
!8935 = !DILocation(line: 317, column: 28, scope: !8085)
!8936 = !DILocation(line: 317, column: 45, scope: !8085)
!8937 = !DILocation(line: 318, column: 38, scope: !8085)
!8938 = !DILocation(line: 318, column: 40, scope: !8085)
!8939 = !DILocation(line: 318, column: 13, scope: !8085)
!8940 = !DILocation(line: 318, column: 30, scope: !8085)
!8941 = !DILocation(line: 318, column: 32, scope: !8085)
!8942 = !DILocation(line: 318, column: 45, scope: !8085)
!8943 = !DILocation(line: 319, column: 9, scope: !8085)
!8944 = !DILocation(line: 246, column: 29, scope: !8945)
!8945 = !DILexicalBlockFile(scope: !8086, file: !266, discriminator: 2)
!8946 = !DILocation(line: 246, column: 9, scope: !8945)
!8947 = distinct !{!8947, !8948}
!8948 = !DILocation(line: 246, column: 9, scope: !8088)
!8949 = !DILocation(line: 321, column: 17, scope: !8088)
!8950 = !DILocation(line: 321, column: 20, scope: !8088)
!8951 = !DILocation(line: 321, column: 14, scope: !8088)
!8952 = !DILocation(line: 322, column: 17, scope: !8088)
!8953 = !DILocation(line: 322, column: 31, scope: !8088)
!8954 = !DILocation(line: 322, column: 14, scope: !8088)
!8955 = !DILocation(line: 323, column: 17, scope: !8088)
!8956 = !DILocation(line: 323, column: 31, scope: !8088)
!8957 = !DILocation(line: 323, column: 14, scope: !8088)
!8958 = !DILocation(line: 324, column: 17, scope: !8088)
!8959 = !DILocation(line: 324, column: 19, scope: !8088)
!8960 = !DILocation(line: 324, column: 14, scope: !8088)
!8961 = !DILocation(line: 325, column: 17, scope: !8088)
!8962 = !DILocation(line: 325, column: 19, scope: !8088)
!8963 = !DILocation(line: 325, column: 14, scope: !8088)
!8964 = !DILocation(line: 326, column: 17, scope: !8088)
!8965 = !DILocation(line: 326, column: 19, scope: !8088)
!8966 = !DILocation(line: 326, column: 14, scope: !8088)
!8967 = !DILocation(line: 327, column: 5, scope: !8088)
!8968 = !DILocation(line: 245, column: 25, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !8089, file: !266, discriminator: 2)
!8970 = !DILocation(line: 245, column: 5, scope: !8969)
!8971 = distinct !{!8971, !8972}
!8972 = !DILocation(line: 245, column: 5, scope: !8082)
!8973 = !DILocation(line: 328, column: 1, scope: !8082)
!8974 = distinct !DISubprogram(name: "rgb2yuv_fsb_444p10_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!8975 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !8976)
!8976 = distinct !DILocation(line: 302, column: 23, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !266, line: 246, column: 33)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !266, line: 246, column: 9)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !266, line: 246, column: 9)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !266, line: 245, column: 29)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !266, line: 245, column: 5)
!8982 = distinct !DILexicalBlock(scope: !8974, file: !266, line: 245, column: 5)
!8983 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !8976)
!8984 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !8985)
!8985 = distinct !DILocation(line: 313, column: 23, scope: !8977)
!8986 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !8985)
!8987 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !8988)
!8988 = distinct !DILocation(line: 262, column: 28, scope: !8977)
!8989 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !8988)
!8990 = !DILocalVariable(name: "_yuv", arg: 1, scope: !8974, file: !266, line: 208, type: !17)
!8991 = !DILocation(line: 208, column: 43, scope: !8974)
!8992 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !8974, file: !266, line: 208, type: !50)
!8993 = !DILocation(line: 208, column: 68, scope: !8974)
!8994 = !DILocalVariable(name: "rgb", arg: 3, scope: !8974, file: !266, line: 209, type: !43)
!8995 = !DILocation(line: 209, column: 38, scope: !8974)
!8996 = !DILocalVariable(name: "s", arg: 4, scope: !8974, file: !266, line: 209, type: !47)
!8997 = !DILocation(line: 209, column: 56, scope: !8974)
!8998 = !DILocalVariable(name: "w", arg: 5, scope: !8974, file: !266, line: 210, type: !52)
!8999 = !DILocation(line: 210, column: 33, scope: !8974)
!9000 = !DILocalVariable(name: "h", arg: 6, scope: !8974, file: !266, line: 210, type: !52)
!9001 = !DILocation(line: 210, column: 40, scope: !8974)
!9002 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !8974, file: !266, line: 210, type: !53)
!9003 = !DILocation(line: 210, column: 57, scope: !8974)
!9004 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !8974, file: !266, line: 211, type: !59)
!9005 = !DILocation(line: 211, column: 43, scope: !8974)
!9006 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !8974, file: !266, line: 212, type: !73)
!9007 = !DILocation(line: 212, column: 34, scope: !8974)
!9008 = !DILocalVariable(name: "yuv", scope: !8974, file: !266, line: 214, type: !22)
!9009 = !DILocation(line: 214, column: 16, scope: !8974)
!9010 = !DILocation(line: 214, column: 36, scope: !8974)
!9011 = !DILocation(line: 214, column: 22, scope: !8974)
!9012 = !DILocalVariable(name: "yuv0", scope: !8974, file: !266, line: 215, type: !23)
!9013 = !DILocation(line: 215, column: 15, scope: !8974)
!9014 = !DILocation(line: 215, column: 22, scope: !8974)
!9015 = !DILocalVariable(name: "yuv1", scope: !8974, file: !266, line: 215, type: !23)
!9016 = !DILocation(line: 215, column: 31, scope: !8974)
!9017 = !DILocation(line: 215, column: 38, scope: !8974)
!9018 = !DILocalVariable(name: "yuv2", scope: !8974, file: !266, line: 215, type: !23)
!9019 = !DILocation(line: 215, column: 47, scope: !8974)
!9020 = !DILocation(line: 215, column: 54, scope: !8974)
!9021 = !DILocalVariable(name: "rgb0", scope: !8974, file: !266, line: 216, type: !59)
!9022 = !DILocation(line: 216, column: 20, scope: !8974)
!9023 = !DILocation(line: 216, column: 27, scope: !8974)
!9024 = !DILocalVariable(name: "rgb1", scope: !8974, file: !266, line: 216, type: !59)
!9025 = !DILocation(line: 216, column: 36, scope: !8974)
!9026 = !DILocation(line: 216, column: 43, scope: !8974)
!9027 = !DILocalVariable(name: "rgb2", scope: !8974, file: !266, line: 216, type: !59)
!9028 = !DILocation(line: 216, column: 52, scope: !8974)
!9029 = !DILocation(line: 216, column: 59, scope: !8974)
!9030 = !DILocalVariable(name: "y", scope: !8974, file: !266, line: 217, type: !52)
!9031 = !DILocation(line: 217, column: 9, scope: !8974)
!9032 = !DILocalVariable(name: "x", scope: !8974, file: !266, line: 217, type: !52)
!9033 = !DILocation(line: 217, column: 12, scope: !8974)
!9034 = !DILocalVariable(name: "sh", scope: !8974, file: !266, line: 218, type: !343)
!9035 = !DILocation(line: 218, column: 15, scope: !8974)
!9036 = !DILocalVariable(name: "rnd", scope: !8974, file: !266, line: 219, type: !343)
!9037 = !DILocation(line: 219, column: 15, scope: !8974)
!9038 = !DILocalVariable(name: "cry", scope: !8974, file: !266, line: 220, type: !52)
!9039 = !DILocation(line: 220, column: 9, scope: !8974)
!9040 = !DILocation(line: 220, column: 15, scope: !8974)
!9041 = !DILocalVariable(name: "cgy", scope: !8974, file: !266, line: 221, type: !52)
!9042 = !DILocation(line: 221, column: 9, scope: !8974)
!9043 = !DILocation(line: 221, column: 15, scope: !8974)
!9044 = !DILocalVariable(name: "cby", scope: !8974, file: !266, line: 222, type: !52)
!9045 = !DILocation(line: 222, column: 9, scope: !8974)
!9046 = !DILocation(line: 222, column: 15, scope: !8974)
!9047 = !DILocalVariable(name: "cru", scope: !8974, file: !266, line: 223, type: !52)
!9048 = !DILocation(line: 223, column: 9, scope: !8974)
!9049 = !DILocation(line: 223, column: 15, scope: !8974)
!9050 = !DILocalVariable(name: "cgu", scope: !8974, file: !266, line: 224, type: !52)
!9051 = !DILocation(line: 224, column: 9, scope: !8974)
!9052 = !DILocation(line: 224, column: 15, scope: !8974)
!9053 = !DILocalVariable(name: "cburv", scope: !8974, file: !266, line: 225, type: !52)
!9054 = !DILocation(line: 225, column: 9, scope: !8974)
!9055 = !DILocation(line: 225, column: 17, scope: !8974)
!9056 = !DILocalVariable(name: "cgv", scope: !8974, file: !266, line: 226, type: !52)
!9057 = !DILocation(line: 226, column: 9, scope: !8974)
!9058 = !DILocation(line: 226, column: 15, scope: !8974)
!9059 = !DILocalVariable(name: "cbv", scope: !8974, file: !266, line: 227, type: !52)
!9060 = !DILocation(line: 227, column: 9, scope: !8974)
!9061 = !DILocation(line: 227, column: 15, scope: !8974)
!9062 = !DILocalVariable(name: "s0", scope: !8974, file: !266, line: 228, type: !47)
!9063 = !DILocation(line: 228, column: 15, scope: !8974)
!9064 = !DILocation(line: 228, column: 20, scope: !8974)
!9065 = !DILocation(line: 228, column: 34, scope: !8974)
!9066 = !DILocalVariable(name: "uv_offset", scope: !8974, file: !266, line: 229, type: !343)
!9067 = !DILocation(line: 229, column: 15, scope: !8974)
!9068 = !DILocalVariable(name: "mask", scope: !8974, file: !266, line: 230, type: !4656)
!9069 = !DILocation(line: 230, column: 14, scope: !8974)
!9070 = !DILocation(line: 232, column: 12, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !8974, file: !266, line: 232, column: 5)
!9072 = !DILocation(line: 232, column: 10, scope: !9071)
!9073 = !DILocation(line: 232, column: 17, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !9075, file: !266, discriminator: 1)
!9075 = distinct !DILexicalBlock(scope: !9071, file: !266, line: 232, column: 5)
!9076 = !DILocation(line: 232, column: 21, scope: !9074)
!9077 = !DILocation(line: 232, column: 19, scope: !9074)
!9078 = !DILocation(line: 232, column: 5, scope: !9074)
!9079 = !DILocation(line: 234, column: 27, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9075, file: !266, line: 232, column: 29)
!9081 = !DILocation(line: 234, column: 9, scope: !9080)
!9082 = !DILocation(line: 234, column: 30, scope: !9080)
!9083 = !DILocation(line: 233, column: 27, scope: !9080)
!9084 = !DILocation(line: 233, column: 9, scope: !9080)
!9085 = !DILocation(line: 233, column: 30, scope: !9080)
!9086 = !DILocation(line: 235, column: 5, scope: !9080)
!9087 = !DILocation(line: 232, column: 25, scope: !9088)
!9088 = !DILexicalBlockFile(scope: !9075, file: !266, discriminator: 2)
!9089 = !DILocation(line: 232, column: 5, scope: !9088)
!9090 = distinct !{!9090, !9091}
!9091 = !DILocation(line: 232, column: 5, scope: !8974)
!9092 = !DILocation(line: 237, column: 58, scope: !8974)
!9093 = !DILocation(line: 237, column: 61, scope: !8974)
!9094 = !DILocation(line: 237, column: 72, scope: !8974)
!9095 = !DILocation(line: 237, column: 77, scope: !8974)
!9096 = !DILocation(line: 237, column: 7, scope: !8974)
!9097 = !DILocation(line: 238, column: 58, scope: !8974)
!9098 = !DILocation(line: 238, column: 61, scope: !8974)
!9099 = !DILocation(line: 238, column: 72, scope: !8974)
!9100 = !DILocation(line: 238, column: 77, scope: !8974)
!9101 = !DILocation(line: 238, column: 7, scope: !8974)
!9102 = !DILocation(line: 239, column: 12, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !8974, file: !266, line: 239, column: 5)
!9104 = !DILocation(line: 239, column: 10, scope: !9103)
!9105 = !DILocation(line: 239, column: 17, scope: !9106)
!9106 = !DILexicalBlockFile(scope: !9107, file: !266, discriminator: 1)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !266, line: 239, column: 5)
!9108 = !DILocation(line: 239, column: 21, scope: !9106)
!9109 = !DILocation(line: 239, column: 19, scope: !9106)
!9110 = !DILocation(line: 239, column: 5, scope: !9106)
!9111 = !DILocation(line: 243, column: 27, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9107, file: !266, line: 239, column: 29)
!9113 = !DILocation(line: 243, column: 9, scope: !9112)
!9114 = !DILocation(line: 243, column: 30, scope: !9112)
!9115 = !DILocation(line: 242, column: 27, scope: !9112)
!9116 = !DILocation(line: 242, column: 9, scope: !9112)
!9117 = !DILocation(line: 242, column: 30, scope: !9112)
!9118 = !DILocation(line: 241, column: 27, scope: !9112)
!9119 = !DILocation(line: 241, column: 9, scope: !9112)
!9120 = !DILocation(line: 241, column: 30, scope: !9112)
!9121 = !DILocation(line: 240, column: 27, scope: !9112)
!9122 = !DILocation(line: 240, column: 9, scope: !9112)
!9123 = !DILocation(line: 240, column: 30, scope: !9112)
!9124 = !DILocation(line: 244, column: 5, scope: !9112)
!9125 = !DILocation(line: 239, column: 25, scope: !9126)
!9126 = !DILexicalBlockFile(scope: !9107, file: !266, discriminator: 2)
!9127 = !DILocation(line: 239, column: 5, scope: !9126)
!9128 = distinct !{!9128, !9129}
!9129 = !DILocation(line: 239, column: 5, scope: !8974)
!9130 = !DILocation(line: 245, column: 12, scope: !8982)
!9131 = !DILocation(line: 245, column: 10, scope: !8982)
!9132 = !DILocation(line: 245, column: 17, scope: !9133)
!9133 = !DILexicalBlockFile(scope: !8981, file: !266, discriminator: 1)
!9134 = !DILocation(line: 245, column: 21, scope: !9133)
!9135 = !DILocation(line: 245, column: 19, scope: !9133)
!9136 = !DILocation(line: 245, column: 5, scope: !9133)
!9137 = !DILocation(line: 246, column: 16, scope: !8979)
!9138 = !DILocation(line: 246, column: 14, scope: !8979)
!9139 = !DILocation(line: 246, column: 21, scope: !9140)
!9140 = !DILexicalBlockFile(scope: !8978, file: !266, discriminator: 1)
!9141 = !DILocation(line: 246, column: 25, scope: !9140)
!9142 = !DILocation(line: 246, column: 23, scope: !9140)
!9143 = !DILocation(line: 246, column: 9, scope: !9140)
!9144 = !DILocalVariable(name: "r00", scope: !8977, file: !266, line: 247, type: !52)
!9145 = !DILocation(line: 247, column: 17, scope: !8977)
!9146 = !DILocation(line: 247, column: 28, scope: !8977)
!9147 = !DILocation(line: 247, column: 30, scope: !8977)
!9148 = !DILocation(line: 247, column: 23, scope: !8977)
!9149 = !DILocalVariable(name: "g00", scope: !8977, file: !266, line: 247, type: !52)
!9150 = !DILocation(line: 247, column: 37, scope: !8977)
!9151 = !DILocation(line: 247, column: 48, scope: !8977)
!9152 = !DILocation(line: 247, column: 50, scope: !8977)
!9153 = !DILocation(line: 247, column: 43, scope: !8977)
!9154 = !DILocalVariable(name: "b00", scope: !8977, file: !266, line: 247, type: !52)
!9155 = !DILocation(line: 247, column: 57, scope: !8977)
!9156 = !DILocation(line: 247, column: 68, scope: !8977)
!9157 = !DILocation(line: 247, column: 70, scope: !8977)
!9158 = !DILocation(line: 247, column: 63, scope: !8977)
!9159 = !DILocalVariable(name: "y00", scope: !8977, file: !266, line: 248, type: !52)
!9160 = !DILocation(line: 248, column: 17, scope: !8977)
!9161 = !DILocalVariable(name: "u", scope: !8977, file: !266, line: 258, type: !52)
!9162 = !DILocation(line: 258, column: 17, scope: !8977)
!9163 = !DILocalVariable(name: "v", scope: !8977, file: !266, line: 258, type: !52)
!9164 = !DILocation(line: 258, column: 20, scope: !8977)
!9165 = !DILocalVariable(name: "diff", scope: !8977, file: !266, line: 258, type: !52)
!9166 = !DILocation(line: 258, column: 23, scope: !8977)
!9167 = !DILocation(line: 260, column: 19, scope: !8977)
!9168 = !DILocation(line: 260, column: 25, scope: !8977)
!9169 = !DILocation(line: 260, column: 23, scope: !8977)
!9170 = !DILocation(line: 260, column: 31, scope: !8977)
!9171 = !DILocation(line: 260, column: 37, scope: !8977)
!9172 = !DILocation(line: 260, column: 35, scope: !8977)
!9173 = !DILocation(line: 260, column: 29, scope: !8977)
!9174 = !DILocation(line: 260, column: 43, scope: !8977)
!9175 = !DILocation(line: 260, column: 49, scope: !8977)
!9176 = !DILocation(line: 260, column: 47, scope: !8977)
!9177 = !DILocation(line: 260, column: 41, scope: !8977)
!9178 = !DILocation(line: 260, column: 78, scope: !8977)
!9179 = !DILocation(line: 260, column: 80, scope: !8977)
!9180 = !DILocation(line: 260, column: 55, scope: !8977)
!9181 = !DILocation(line: 260, column: 70, scope: !8977)
!9182 = !DILocation(line: 260, column: 72, scope: !8977)
!9183 = !DILocation(line: 260, column: 53, scope: !8977)
!9184 = !DILocation(line: 260, column: 17, scope: !8977)
!9185 = !DILocation(line: 261, column: 21, scope: !8977)
!9186 = !DILocation(line: 261, column: 27, scope: !8977)
!9187 = !DILocation(line: 261, column: 25, scope: !8977)
!9188 = !DILocation(line: 261, column: 33, scope: !8977)
!9189 = !DILocation(line: 261, column: 18, scope: !8977)
!9190 = !DILocation(line: 262, column: 45, scope: !8977)
!9191 = !DILocation(line: 262, column: 62, scope: !8977)
!9192 = !DILocation(line: 262, column: 66, scope: !8977)
!9193 = !DILocation(line: 262, column: 59, scope: !8977)
!9194 = !DILocation(line: 262, column: 28, scope: !8977)
!9195 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !8988)
!9196 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !8988)
!9197 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !8988)
!9198 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !8988)
!9199 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !8988)
!9200 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !8988)
!9201 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !8988)
!9202 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !8988)
!9203 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !8988)
!9204 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !8988)
!9205 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !8988)
!9206 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !8988)
!9207 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !8988)
!9208 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !8988)
!9209 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !8988)
!9210 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !8988)
!9211 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !8988)
!9212 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !8988)
!9213 = !DILocation(line: 262, column: 18, scope: !8977)
!9214 = !DILocation(line: 262, column: 20, scope: !8977)
!9215 = !DILocation(line: 262, column: 13, scope: !8977)
!9216 = !DILocation(line: 262, column: 26, scope: !8977)
!9217 = !DILocation(line: 263, column: 57, scope: !8977)
!9218 = !DILocation(line: 263, column: 62, scope: !8977)
!9219 = !DILocation(line: 263, column: 66, scope: !8977)
!9220 = !DILocation(line: 263, column: 71, scope: !8977)
!9221 = !DILocation(line: 263, column: 40, scope: !8977)
!9222 = !DILocation(line: 263, column: 42, scope: !8977)
!9223 = !DILocation(line: 263, column: 48, scope: !8977)
!9224 = !DILocation(line: 263, column: 13, scope: !8977)
!9225 = !DILocation(line: 263, column: 30, scope: !8977)
!9226 = !DILocation(line: 263, column: 32, scope: !8977)
!9227 = !DILocation(line: 263, column: 53, scope: !8977)
!9228 = !DILocation(line: 264, column: 57, scope: !8977)
!9229 = !DILocation(line: 264, column: 62, scope: !8977)
!9230 = !DILocation(line: 264, column: 66, scope: !8977)
!9231 = !DILocation(line: 264, column: 71, scope: !8977)
!9232 = !DILocation(line: 264, column: 40, scope: !8977)
!9233 = !DILocation(line: 264, column: 42, scope: !8977)
!9234 = !DILocation(line: 264, column: 48, scope: !8977)
!9235 = !DILocation(line: 264, column: 13, scope: !8977)
!9236 = !DILocation(line: 264, column: 30, scope: !8977)
!9237 = !DILocation(line: 264, column: 32, scope: !8977)
!9238 = !DILocation(line: 264, column: 28, scope: !8977)
!9239 = !DILocation(line: 264, column: 53, scope: !8977)
!9240 = !DILocation(line: 265, column: 57, scope: !8977)
!9241 = !DILocation(line: 265, column: 62, scope: !8977)
!9242 = !DILocation(line: 265, column: 66, scope: !8977)
!9243 = !DILocation(line: 265, column: 71, scope: !8977)
!9244 = !DILocation(line: 265, column: 40, scope: !8977)
!9245 = !DILocation(line: 265, column: 42, scope: !8977)
!9246 = !DILocation(line: 265, column: 48, scope: !8977)
!9247 = !DILocation(line: 265, column: 13, scope: !8977)
!9248 = !DILocation(line: 265, column: 30, scope: !8977)
!9249 = !DILocation(line: 265, column: 32, scope: !8977)
!9250 = !DILocation(line: 265, column: 28, scope: !8977)
!9251 = !DILocation(line: 265, column: 53, scope: !8977)
!9252 = !DILocation(line: 266, column: 57, scope: !8977)
!9253 = !DILocation(line: 266, column: 62, scope: !8977)
!9254 = !DILocation(line: 266, column: 66, scope: !8977)
!9255 = !DILocation(line: 266, column: 71, scope: !8977)
!9256 = !DILocation(line: 266, column: 40, scope: !8977)
!9257 = !DILocation(line: 266, column: 42, scope: !8977)
!9258 = !DILocation(line: 266, column: 48, scope: !8977)
!9259 = !DILocation(line: 266, column: 13, scope: !8977)
!9260 = !DILocation(line: 266, column: 30, scope: !8977)
!9261 = !DILocation(line: 266, column: 32, scope: !8977)
!9262 = !DILocation(line: 266, column: 28, scope: !8977)
!9263 = !DILocation(line: 266, column: 53, scope: !8977)
!9264 = !DILocation(line: 267, column: 40, scope: !8977)
!9265 = !DILocation(line: 267, column: 42, scope: !8977)
!9266 = !DILocation(line: 267, column: 48, scope: !8977)
!9267 = !DILocation(line: 267, column: 13, scope: !8977)
!9268 = !DILocation(line: 267, column: 30, scope: !8977)
!9269 = !DILocation(line: 267, column: 32, scope: !8977)
!9270 = !DILocation(line: 267, column: 53, scope: !8977)
!9271 = !DILocation(line: 298, column: 18, scope: !8977)
!9272 = !DILocation(line: 298, column: 25, scope: !8977)
!9273 = !DILocation(line: 298, column: 23, scope: !8977)
!9274 = !DILocation(line: 299, column: 18, scope: !8977)
!9275 = !DILocation(line: 299, column: 25, scope: !8977)
!9276 = !DILocation(line: 299, column: 23, scope: !8977)
!9277 = !DILocation(line: 298, column: 29, scope: !8977)
!9278 = !DILocation(line: 300, column: 18, scope: !8977)
!9279 = !DILocation(line: 300, column: 25, scope: !8977)
!9280 = !DILocation(line: 300, column: 23, scope: !8977)
!9281 = !DILocation(line: 299, column: 29, scope: !8977)
!9282 = !DILocation(line: 300, column: 55, scope: !8977)
!9283 = !DILocation(line: 300, column: 33, scope: !8977)
!9284 = !DILocation(line: 300, column: 48, scope: !8977)
!9285 = !DILocation(line: 300, column: 50, scope: !8977)
!9286 = !DILocation(line: 300, column: 31, scope: !8977)
!9287 = !DILocation(line: 298, column: 15, scope: !8977)
!9288 = !DILocation(line: 301, column: 21, scope: !8977)
!9289 = !DILocation(line: 301, column: 25, scope: !8977)
!9290 = !DILocation(line: 301, column: 23, scope: !8977)
!9291 = !DILocation(line: 301, column: 31, scope: !8977)
!9292 = !DILocation(line: 301, column: 18, scope: !8977)
!9293 = !DILocation(line: 302, column: 53, scope: !8977)
!9294 = !DILocation(line: 302, column: 55, scope: !8977)
!9295 = !DILocation(line: 302, column: 50, scope: !8977)
!9296 = !DILocation(line: 302, column: 23, scope: !8977)
!9297 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !8976)
!9298 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !8976)
!9299 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !8976)
!9300 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !8976)
!9301 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !8976)
!9302 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !8976)
!9303 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !8976)
!9304 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !8976)
!9305 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !8976)
!9306 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !8976)
!9307 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !8976)
!9308 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !8976)
!9309 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !8976)
!9310 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !8976)
!9311 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !8976)
!9312 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !8976)
!9313 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !8976)
!9314 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !8976)
!9315 = !DILocation(line: 302, column: 18, scope: !8977)
!9316 = !DILocation(line: 302, column: 13, scope: !8977)
!9317 = !DILocation(line: 302, column: 21, scope: !8977)
!9318 = !DILocation(line: 303, column: 49, scope: !8977)
!9319 = !DILocation(line: 303, column: 54, scope: !8977)
!9320 = !DILocation(line: 303, column: 58, scope: !8977)
!9321 = !DILocation(line: 303, column: 63, scope: !8977)
!9322 = !DILocation(line: 303, column: 38, scope: !8977)
!9323 = !DILocation(line: 303, column: 40, scope: !8977)
!9324 = !DILocation(line: 303, column: 13, scope: !8977)
!9325 = !DILocation(line: 303, column: 30, scope: !8977)
!9326 = !DILocation(line: 303, column: 32, scope: !8977)
!9327 = !DILocation(line: 303, column: 45, scope: !8977)
!9328 = !DILocation(line: 304, column: 49, scope: !8977)
!9329 = !DILocation(line: 304, column: 54, scope: !8977)
!9330 = !DILocation(line: 304, column: 58, scope: !8977)
!9331 = !DILocation(line: 304, column: 63, scope: !8977)
!9332 = !DILocation(line: 304, column: 38, scope: !8977)
!9333 = !DILocation(line: 304, column: 40, scope: !8977)
!9334 = !DILocation(line: 304, column: 13, scope: !8977)
!9335 = !DILocation(line: 304, column: 30, scope: !8977)
!9336 = !DILocation(line: 304, column: 32, scope: !8977)
!9337 = !DILocation(line: 304, column: 28, scope: !8977)
!9338 = !DILocation(line: 304, column: 45, scope: !8977)
!9339 = !DILocation(line: 305, column: 49, scope: !8977)
!9340 = !DILocation(line: 305, column: 54, scope: !8977)
!9341 = !DILocation(line: 305, column: 58, scope: !8977)
!9342 = !DILocation(line: 305, column: 63, scope: !8977)
!9343 = !DILocation(line: 305, column: 38, scope: !8977)
!9344 = !DILocation(line: 305, column: 40, scope: !8977)
!9345 = !DILocation(line: 305, column: 13, scope: !8977)
!9346 = !DILocation(line: 305, column: 30, scope: !8977)
!9347 = !DILocation(line: 305, column: 32, scope: !8977)
!9348 = !DILocation(line: 305, column: 28, scope: !8977)
!9349 = !DILocation(line: 305, column: 45, scope: !8977)
!9350 = !DILocation(line: 306, column: 49, scope: !8977)
!9351 = !DILocation(line: 306, column: 54, scope: !8977)
!9352 = !DILocation(line: 306, column: 58, scope: !8977)
!9353 = !DILocation(line: 306, column: 63, scope: !8977)
!9354 = !DILocation(line: 306, column: 38, scope: !8977)
!9355 = !DILocation(line: 306, column: 40, scope: !8977)
!9356 = !DILocation(line: 306, column: 13, scope: !8977)
!9357 = !DILocation(line: 306, column: 30, scope: !8977)
!9358 = !DILocation(line: 306, column: 32, scope: !8977)
!9359 = !DILocation(line: 306, column: 28, scope: !8977)
!9360 = !DILocation(line: 306, column: 45, scope: !8977)
!9361 = !DILocation(line: 307, column: 38, scope: !8977)
!9362 = !DILocation(line: 307, column: 40, scope: !8977)
!9363 = !DILocation(line: 307, column: 13, scope: !8977)
!9364 = !DILocation(line: 307, column: 30, scope: !8977)
!9365 = !DILocation(line: 307, column: 32, scope: !8977)
!9366 = !DILocation(line: 307, column: 45, scope: !8977)
!9367 = !DILocation(line: 309, column: 18, scope: !8977)
!9368 = !DILocation(line: 309, column: 25, scope: !8977)
!9369 = !DILocation(line: 309, column: 23, scope: !8977)
!9370 = !DILocation(line: 310, column: 18, scope: !8977)
!9371 = !DILocation(line: 310, column: 25, scope: !8977)
!9372 = !DILocation(line: 310, column: 23, scope: !8977)
!9373 = !DILocation(line: 309, column: 31, scope: !8977)
!9374 = !DILocation(line: 311, column: 18, scope: !8977)
!9375 = !DILocation(line: 311, column: 25, scope: !8977)
!9376 = !DILocation(line: 311, column: 23, scope: !8977)
!9377 = !DILocation(line: 310, column: 29, scope: !8977)
!9378 = !DILocation(line: 311, column: 53, scope: !8977)
!9379 = !DILocation(line: 311, column: 31, scope: !8977)
!9380 = !DILocation(line: 311, column: 46, scope: !8977)
!9381 = !DILocation(line: 311, column: 48, scope: !8977)
!9382 = !DILocation(line: 311, column: 29, scope: !8977)
!9383 = !DILocation(line: 309, column: 15, scope: !8977)
!9384 = !DILocation(line: 312, column: 21, scope: !8977)
!9385 = !DILocation(line: 312, column: 25, scope: !8977)
!9386 = !DILocation(line: 312, column: 23, scope: !8977)
!9387 = !DILocation(line: 312, column: 31, scope: !8977)
!9388 = !DILocation(line: 312, column: 18, scope: !8977)
!9389 = !DILocation(line: 313, column: 53, scope: !8977)
!9390 = !DILocation(line: 313, column: 55, scope: !8977)
!9391 = !DILocation(line: 313, column: 50, scope: !8977)
!9392 = !DILocation(line: 313, column: 23, scope: !8977)
!9393 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !8985)
!9394 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !8985)
!9395 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !8985)
!9396 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !8985)
!9397 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !8985)
!9398 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !8985)
!9399 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !8985)
!9400 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !8985)
!9401 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !8985)
!9402 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !8985)
!9403 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !8985)
!9404 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !8985)
!9405 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !8985)
!9406 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !8985)
!9407 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !8985)
!9408 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !8985)
!9409 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !8985)
!9410 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !8985)
!9411 = !DILocation(line: 313, column: 18, scope: !8977)
!9412 = !DILocation(line: 313, column: 13, scope: !8977)
!9413 = !DILocation(line: 313, column: 21, scope: !8977)
!9414 = !DILocation(line: 314, column: 49, scope: !8977)
!9415 = !DILocation(line: 314, column: 54, scope: !8977)
!9416 = !DILocation(line: 314, column: 58, scope: !8977)
!9417 = !DILocation(line: 314, column: 63, scope: !8977)
!9418 = !DILocation(line: 314, column: 38, scope: !8977)
!9419 = !DILocation(line: 314, column: 40, scope: !8977)
!9420 = !DILocation(line: 314, column: 13, scope: !8977)
!9421 = !DILocation(line: 314, column: 30, scope: !8977)
!9422 = !DILocation(line: 314, column: 32, scope: !8977)
!9423 = !DILocation(line: 314, column: 45, scope: !8977)
!9424 = !DILocation(line: 315, column: 49, scope: !8977)
!9425 = !DILocation(line: 315, column: 54, scope: !8977)
!9426 = !DILocation(line: 315, column: 58, scope: !8977)
!9427 = !DILocation(line: 315, column: 63, scope: !8977)
!9428 = !DILocation(line: 315, column: 38, scope: !8977)
!9429 = !DILocation(line: 315, column: 40, scope: !8977)
!9430 = !DILocation(line: 315, column: 13, scope: !8977)
!9431 = !DILocation(line: 315, column: 30, scope: !8977)
!9432 = !DILocation(line: 315, column: 32, scope: !8977)
!9433 = !DILocation(line: 315, column: 28, scope: !8977)
!9434 = !DILocation(line: 315, column: 45, scope: !8977)
!9435 = !DILocation(line: 316, column: 49, scope: !8977)
!9436 = !DILocation(line: 316, column: 54, scope: !8977)
!9437 = !DILocation(line: 316, column: 58, scope: !8977)
!9438 = !DILocation(line: 316, column: 63, scope: !8977)
!9439 = !DILocation(line: 316, column: 38, scope: !8977)
!9440 = !DILocation(line: 316, column: 40, scope: !8977)
!9441 = !DILocation(line: 316, column: 13, scope: !8977)
!9442 = !DILocation(line: 316, column: 30, scope: !8977)
!9443 = !DILocation(line: 316, column: 32, scope: !8977)
!9444 = !DILocation(line: 316, column: 28, scope: !8977)
!9445 = !DILocation(line: 316, column: 45, scope: !8977)
!9446 = !DILocation(line: 317, column: 49, scope: !8977)
!9447 = !DILocation(line: 317, column: 54, scope: !8977)
!9448 = !DILocation(line: 317, column: 58, scope: !8977)
!9449 = !DILocation(line: 317, column: 63, scope: !8977)
!9450 = !DILocation(line: 317, column: 38, scope: !8977)
!9451 = !DILocation(line: 317, column: 40, scope: !8977)
!9452 = !DILocation(line: 317, column: 13, scope: !8977)
!9453 = !DILocation(line: 317, column: 30, scope: !8977)
!9454 = !DILocation(line: 317, column: 32, scope: !8977)
!9455 = !DILocation(line: 317, column: 28, scope: !8977)
!9456 = !DILocation(line: 317, column: 45, scope: !8977)
!9457 = !DILocation(line: 318, column: 38, scope: !8977)
!9458 = !DILocation(line: 318, column: 40, scope: !8977)
!9459 = !DILocation(line: 318, column: 13, scope: !8977)
!9460 = !DILocation(line: 318, column: 30, scope: !8977)
!9461 = !DILocation(line: 318, column: 32, scope: !8977)
!9462 = !DILocation(line: 318, column: 45, scope: !8977)
!9463 = !DILocation(line: 319, column: 9, scope: !8977)
!9464 = !DILocation(line: 246, column: 29, scope: !9465)
!9465 = !DILexicalBlockFile(scope: !8978, file: !266, discriminator: 2)
!9466 = !DILocation(line: 246, column: 9, scope: !9465)
!9467 = distinct !{!9467, !9468}
!9468 = !DILocation(line: 246, column: 9, scope: !8980)
!9469 = !DILocation(line: 321, column: 17, scope: !8980)
!9470 = !DILocation(line: 321, column: 20, scope: !8980)
!9471 = !DILocation(line: 321, column: 14, scope: !8980)
!9472 = !DILocation(line: 322, column: 17, scope: !8980)
!9473 = !DILocation(line: 322, column: 31, scope: !8980)
!9474 = !DILocation(line: 322, column: 14, scope: !8980)
!9475 = !DILocation(line: 323, column: 17, scope: !8980)
!9476 = !DILocation(line: 323, column: 31, scope: !8980)
!9477 = !DILocation(line: 323, column: 14, scope: !8980)
!9478 = !DILocation(line: 324, column: 17, scope: !8980)
!9479 = !DILocation(line: 324, column: 19, scope: !8980)
!9480 = !DILocation(line: 324, column: 14, scope: !8980)
!9481 = !DILocation(line: 325, column: 17, scope: !8980)
!9482 = !DILocation(line: 325, column: 19, scope: !8980)
!9483 = !DILocation(line: 325, column: 14, scope: !8980)
!9484 = !DILocation(line: 326, column: 17, scope: !8980)
!9485 = !DILocation(line: 326, column: 19, scope: !8980)
!9486 = !DILocation(line: 326, column: 14, scope: !8980)
!9487 = !DILocation(line: 327, column: 5, scope: !8980)
!9488 = !DILocation(line: 245, column: 25, scope: !9489)
!9489 = !DILexicalBlockFile(scope: !8981, file: !266, discriminator: 2)
!9490 = !DILocation(line: 245, column: 5, scope: !9489)
!9491 = distinct !{!9491, !9492}
!9492 = !DILocation(line: 245, column: 5, scope: !8974)
!9493 = !DILocation(line: 328, column: 1, scope: !8974)
!9494 = distinct !DISubprogram(name: "rgb2yuv_fsb_422p10_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!9495 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !9496)
!9496 = distinct !DILocation(line: 271, column: 31, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !266, line: 246, column: 33)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !266, line: 246, column: 9)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !266, line: 246, column: 9)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !266, line: 245, column: 29)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !266, line: 245, column: 5)
!9502 = distinct !DILexicalBlock(scope: !9494, file: !266, line: 245, column: 5)
!9503 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !9496)
!9504 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !9505)
!9505 = distinct !DILocation(line: 302, column: 23, scope: !9497)
!9506 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !9505)
!9507 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !9508)
!9508 = distinct !DILocation(line: 313, column: 23, scope: !9497)
!9509 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !9508)
!9510 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !9511)
!9511 = distinct !DILocation(line: 262, column: 28, scope: !9497)
!9512 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !9511)
!9513 = !DILocalVariable(name: "_yuv", arg: 1, scope: !9494, file: !266, line: 208, type: !17)
!9514 = !DILocation(line: 208, column: 43, scope: !9494)
!9515 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !9494, file: !266, line: 208, type: !50)
!9516 = !DILocation(line: 208, column: 68, scope: !9494)
!9517 = !DILocalVariable(name: "rgb", arg: 3, scope: !9494, file: !266, line: 209, type: !43)
!9518 = !DILocation(line: 209, column: 38, scope: !9494)
!9519 = !DILocalVariable(name: "s", arg: 4, scope: !9494, file: !266, line: 209, type: !47)
!9520 = !DILocation(line: 209, column: 56, scope: !9494)
!9521 = !DILocalVariable(name: "w", arg: 5, scope: !9494, file: !266, line: 210, type: !52)
!9522 = !DILocation(line: 210, column: 33, scope: !9494)
!9523 = !DILocalVariable(name: "h", arg: 6, scope: !9494, file: !266, line: 210, type: !52)
!9524 = !DILocation(line: 210, column: 40, scope: !9494)
!9525 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !9494, file: !266, line: 210, type: !53)
!9526 = !DILocation(line: 210, column: 57, scope: !9494)
!9527 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !9494, file: !266, line: 211, type: !59)
!9528 = !DILocation(line: 211, column: 43, scope: !9494)
!9529 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !9494, file: !266, line: 212, type: !73)
!9530 = !DILocation(line: 212, column: 34, scope: !9494)
!9531 = !DILocalVariable(name: "yuv", scope: !9494, file: !266, line: 214, type: !22)
!9532 = !DILocation(line: 214, column: 16, scope: !9494)
!9533 = !DILocation(line: 214, column: 36, scope: !9494)
!9534 = !DILocation(line: 214, column: 22, scope: !9494)
!9535 = !DILocalVariable(name: "yuv0", scope: !9494, file: !266, line: 215, type: !23)
!9536 = !DILocation(line: 215, column: 15, scope: !9494)
!9537 = !DILocation(line: 215, column: 22, scope: !9494)
!9538 = !DILocalVariable(name: "yuv1", scope: !9494, file: !266, line: 215, type: !23)
!9539 = !DILocation(line: 215, column: 31, scope: !9494)
!9540 = !DILocation(line: 215, column: 38, scope: !9494)
!9541 = !DILocalVariable(name: "yuv2", scope: !9494, file: !266, line: 215, type: !23)
!9542 = !DILocation(line: 215, column: 47, scope: !9494)
!9543 = !DILocation(line: 215, column: 54, scope: !9494)
!9544 = !DILocalVariable(name: "rgb0", scope: !9494, file: !266, line: 216, type: !59)
!9545 = !DILocation(line: 216, column: 20, scope: !9494)
!9546 = !DILocation(line: 216, column: 27, scope: !9494)
!9547 = !DILocalVariable(name: "rgb1", scope: !9494, file: !266, line: 216, type: !59)
!9548 = !DILocation(line: 216, column: 36, scope: !9494)
!9549 = !DILocation(line: 216, column: 43, scope: !9494)
!9550 = !DILocalVariable(name: "rgb2", scope: !9494, file: !266, line: 216, type: !59)
!9551 = !DILocation(line: 216, column: 52, scope: !9494)
!9552 = !DILocation(line: 216, column: 59, scope: !9494)
!9553 = !DILocalVariable(name: "y", scope: !9494, file: !266, line: 217, type: !52)
!9554 = !DILocation(line: 217, column: 9, scope: !9494)
!9555 = !DILocalVariable(name: "x", scope: !9494, file: !266, line: 217, type: !52)
!9556 = !DILocation(line: 217, column: 12, scope: !9494)
!9557 = !DILocalVariable(name: "sh", scope: !9494, file: !266, line: 218, type: !343)
!9558 = !DILocation(line: 218, column: 15, scope: !9494)
!9559 = !DILocalVariable(name: "rnd", scope: !9494, file: !266, line: 219, type: !343)
!9560 = !DILocation(line: 219, column: 15, scope: !9494)
!9561 = !DILocalVariable(name: "cry", scope: !9494, file: !266, line: 220, type: !52)
!9562 = !DILocation(line: 220, column: 9, scope: !9494)
!9563 = !DILocation(line: 220, column: 15, scope: !9494)
!9564 = !DILocalVariable(name: "cgy", scope: !9494, file: !266, line: 221, type: !52)
!9565 = !DILocation(line: 221, column: 9, scope: !9494)
!9566 = !DILocation(line: 221, column: 15, scope: !9494)
!9567 = !DILocalVariable(name: "cby", scope: !9494, file: !266, line: 222, type: !52)
!9568 = !DILocation(line: 222, column: 9, scope: !9494)
!9569 = !DILocation(line: 222, column: 15, scope: !9494)
!9570 = !DILocalVariable(name: "cru", scope: !9494, file: !266, line: 223, type: !52)
!9571 = !DILocation(line: 223, column: 9, scope: !9494)
!9572 = !DILocation(line: 223, column: 15, scope: !9494)
!9573 = !DILocalVariable(name: "cgu", scope: !9494, file: !266, line: 224, type: !52)
!9574 = !DILocation(line: 224, column: 9, scope: !9494)
!9575 = !DILocation(line: 224, column: 15, scope: !9494)
!9576 = !DILocalVariable(name: "cburv", scope: !9494, file: !266, line: 225, type: !52)
!9577 = !DILocation(line: 225, column: 9, scope: !9494)
!9578 = !DILocation(line: 225, column: 17, scope: !9494)
!9579 = !DILocalVariable(name: "cgv", scope: !9494, file: !266, line: 226, type: !52)
!9580 = !DILocation(line: 226, column: 9, scope: !9494)
!9581 = !DILocation(line: 226, column: 15, scope: !9494)
!9582 = !DILocalVariable(name: "cbv", scope: !9494, file: !266, line: 227, type: !52)
!9583 = !DILocation(line: 227, column: 9, scope: !9494)
!9584 = !DILocation(line: 227, column: 15, scope: !9494)
!9585 = !DILocalVariable(name: "s0", scope: !9494, file: !266, line: 228, type: !47)
!9586 = !DILocation(line: 228, column: 15, scope: !9494)
!9587 = !DILocation(line: 228, column: 20, scope: !9494)
!9588 = !DILocation(line: 228, column: 34, scope: !9494)
!9589 = !DILocalVariable(name: "uv_offset", scope: !9494, file: !266, line: 229, type: !343)
!9590 = !DILocation(line: 229, column: 15, scope: !9494)
!9591 = !DILocalVariable(name: "mask", scope: !9494, file: !266, line: 230, type: !4656)
!9592 = !DILocation(line: 230, column: 14, scope: !9494)
!9593 = !DILocation(line: 232, column: 12, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9494, file: !266, line: 232, column: 5)
!9595 = !DILocation(line: 232, column: 10, scope: !9594)
!9596 = !DILocation(line: 232, column: 17, scope: !9597)
!9597 = !DILexicalBlockFile(scope: !9598, file: !266, discriminator: 1)
!9598 = distinct !DILexicalBlock(scope: !9594, file: !266, line: 232, column: 5)
!9599 = !DILocation(line: 232, column: 21, scope: !9597)
!9600 = !DILocation(line: 232, column: 19, scope: !9597)
!9601 = !DILocation(line: 232, column: 5, scope: !9597)
!9602 = !DILocation(line: 234, column: 27, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9598, file: !266, line: 232, column: 29)
!9604 = !DILocation(line: 234, column: 9, scope: !9603)
!9605 = !DILocation(line: 234, column: 30, scope: !9603)
!9606 = !DILocation(line: 233, column: 27, scope: !9603)
!9607 = !DILocation(line: 233, column: 9, scope: !9603)
!9608 = !DILocation(line: 233, column: 30, scope: !9603)
!9609 = !DILocation(line: 235, column: 5, scope: !9603)
!9610 = !DILocation(line: 232, column: 25, scope: !9611)
!9611 = !DILexicalBlockFile(scope: !9598, file: !266, discriminator: 2)
!9612 = !DILocation(line: 232, column: 5, scope: !9611)
!9613 = distinct !{!9613, !9614}
!9614 = !DILocation(line: 232, column: 5, scope: !9494)
!9615 = !DILocation(line: 237, column: 58, scope: !9494)
!9616 = !DILocation(line: 237, column: 61, scope: !9494)
!9617 = !DILocation(line: 237, column: 72, scope: !9494)
!9618 = !DILocation(line: 237, column: 77, scope: !9494)
!9619 = !DILocation(line: 237, column: 7, scope: !9494)
!9620 = !DILocation(line: 238, column: 58, scope: !9494)
!9621 = !DILocation(line: 238, column: 61, scope: !9494)
!9622 = !DILocation(line: 238, column: 72, scope: !9494)
!9623 = !DILocation(line: 238, column: 77, scope: !9494)
!9624 = !DILocation(line: 238, column: 7, scope: !9494)
!9625 = !DILocation(line: 239, column: 12, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9494, file: !266, line: 239, column: 5)
!9627 = !DILocation(line: 239, column: 10, scope: !9626)
!9628 = !DILocation(line: 239, column: 17, scope: !9629)
!9629 = !DILexicalBlockFile(scope: !9630, file: !266, discriminator: 1)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !266, line: 239, column: 5)
!9631 = !DILocation(line: 239, column: 21, scope: !9629)
!9632 = !DILocation(line: 239, column: 19, scope: !9629)
!9633 = !DILocation(line: 239, column: 5, scope: !9629)
!9634 = !DILocation(line: 243, column: 27, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9630, file: !266, line: 239, column: 29)
!9636 = !DILocation(line: 243, column: 9, scope: !9635)
!9637 = !DILocation(line: 243, column: 30, scope: !9635)
!9638 = !DILocation(line: 242, column: 27, scope: !9635)
!9639 = !DILocation(line: 242, column: 9, scope: !9635)
!9640 = !DILocation(line: 242, column: 30, scope: !9635)
!9641 = !DILocation(line: 241, column: 27, scope: !9635)
!9642 = !DILocation(line: 241, column: 9, scope: !9635)
!9643 = !DILocation(line: 241, column: 30, scope: !9635)
!9644 = !DILocation(line: 240, column: 27, scope: !9635)
!9645 = !DILocation(line: 240, column: 9, scope: !9635)
!9646 = !DILocation(line: 240, column: 30, scope: !9635)
!9647 = !DILocation(line: 244, column: 5, scope: !9635)
!9648 = !DILocation(line: 239, column: 25, scope: !9649)
!9649 = !DILexicalBlockFile(scope: !9630, file: !266, discriminator: 2)
!9650 = !DILocation(line: 239, column: 5, scope: !9649)
!9651 = distinct !{!9651, !9652}
!9652 = !DILocation(line: 239, column: 5, scope: !9494)
!9653 = !DILocation(line: 245, column: 12, scope: !9502)
!9654 = !DILocation(line: 245, column: 10, scope: !9502)
!9655 = !DILocation(line: 245, column: 17, scope: !9656)
!9656 = !DILexicalBlockFile(scope: !9501, file: !266, discriminator: 1)
!9657 = !DILocation(line: 245, column: 21, scope: !9656)
!9658 = !DILocation(line: 245, column: 19, scope: !9656)
!9659 = !DILocation(line: 245, column: 5, scope: !9656)
!9660 = !DILocation(line: 246, column: 16, scope: !9499)
!9661 = !DILocation(line: 246, column: 14, scope: !9499)
!9662 = !DILocation(line: 246, column: 21, scope: !9663)
!9663 = !DILexicalBlockFile(scope: !9498, file: !266, discriminator: 1)
!9664 = !DILocation(line: 246, column: 25, scope: !9663)
!9665 = !DILocation(line: 246, column: 23, scope: !9663)
!9666 = !DILocation(line: 246, column: 9, scope: !9663)
!9667 = !DILocalVariable(name: "r00", scope: !9497, file: !266, line: 247, type: !52)
!9668 = !DILocation(line: 247, column: 17, scope: !9497)
!9669 = !DILocation(line: 247, column: 28, scope: !9497)
!9670 = !DILocation(line: 247, column: 30, scope: !9497)
!9671 = !DILocation(line: 247, column: 23, scope: !9497)
!9672 = !DILocalVariable(name: "g00", scope: !9497, file: !266, line: 247, type: !52)
!9673 = !DILocation(line: 247, column: 37, scope: !9497)
!9674 = !DILocation(line: 247, column: 48, scope: !9497)
!9675 = !DILocation(line: 247, column: 50, scope: !9497)
!9676 = !DILocation(line: 247, column: 43, scope: !9497)
!9677 = !DILocalVariable(name: "b00", scope: !9497, file: !266, line: 247, type: !52)
!9678 = !DILocation(line: 247, column: 57, scope: !9497)
!9679 = !DILocation(line: 247, column: 68, scope: !9497)
!9680 = !DILocation(line: 247, column: 70, scope: !9497)
!9681 = !DILocation(line: 247, column: 63, scope: !9497)
!9682 = !DILocalVariable(name: "y00", scope: !9497, file: !266, line: 248, type: !52)
!9683 = !DILocation(line: 248, column: 17, scope: !9497)
!9684 = !DILocalVariable(name: "r01", scope: !9497, file: !266, line: 250, type: !52)
!9685 = !DILocation(line: 250, column: 17, scope: !9497)
!9686 = !DILocation(line: 250, column: 28, scope: !9497)
!9687 = !DILocation(line: 250, column: 30, scope: !9497)
!9688 = !DILocation(line: 250, column: 34, scope: !9497)
!9689 = !DILocation(line: 250, column: 23, scope: !9497)
!9690 = !DILocalVariable(name: "g01", scope: !9497, file: !266, line: 250, type: !52)
!9691 = !DILocation(line: 250, column: 40, scope: !9497)
!9692 = !DILocation(line: 250, column: 51, scope: !9497)
!9693 = !DILocation(line: 250, column: 53, scope: !9497)
!9694 = !DILocation(line: 250, column: 57, scope: !9497)
!9695 = !DILocation(line: 250, column: 46, scope: !9497)
!9696 = !DILocalVariable(name: "b01", scope: !9497, file: !266, line: 250, type: !52)
!9697 = !DILocation(line: 250, column: 63, scope: !9497)
!9698 = !DILocation(line: 250, column: 74, scope: !9497)
!9699 = !DILocation(line: 250, column: 76, scope: !9497)
!9700 = !DILocation(line: 250, column: 80, scope: !9497)
!9701 = !DILocation(line: 250, column: 69, scope: !9497)
!9702 = !DILocalVariable(name: "y01", scope: !9497, file: !266, line: 251, type: !52)
!9703 = !DILocation(line: 251, column: 17, scope: !9497)
!9704 = !DILocalVariable(name: "u", scope: !9497, file: !266, line: 258, type: !52)
!9705 = !DILocation(line: 258, column: 17, scope: !9497)
!9706 = !DILocalVariable(name: "v", scope: !9497, file: !266, line: 258, type: !52)
!9707 = !DILocation(line: 258, column: 20, scope: !9497)
!9708 = !DILocalVariable(name: "diff", scope: !9497, file: !266, line: 258, type: !52)
!9709 = !DILocation(line: 258, column: 23, scope: !9497)
!9710 = !DILocation(line: 260, column: 19, scope: !9497)
!9711 = !DILocation(line: 260, column: 25, scope: !9497)
!9712 = !DILocation(line: 260, column: 23, scope: !9497)
!9713 = !DILocation(line: 260, column: 31, scope: !9497)
!9714 = !DILocation(line: 260, column: 37, scope: !9497)
!9715 = !DILocation(line: 260, column: 35, scope: !9497)
!9716 = !DILocation(line: 260, column: 29, scope: !9497)
!9717 = !DILocation(line: 260, column: 43, scope: !9497)
!9718 = !DILocation(line: 260, column: 49, scope: !9497)
!9719 = !DILocation(line: 260, column: 47, scope: !9497)
!9720 = !DILocation(line: 260, column: 41, scope: !9497)
!9721 = !DILocation(line: 260, column: 78, scope: !9497)
!9722 = !DILocation(line: 260, column: 80, scope: !9497)
!9723 = !DILocation(line: 260, column: 55, scope: !9497)
!9724 = !DILocation(line: 260, column: 70, scope: !9497)
!9725 = !DILocation(line: 260, column: 72, scope: !9497)
!9726 = !DILocation(line: 260, column: 53, scope: !9497)
!9727 = !DILocation(line: 260, column: 17, scope: !9497)
!9728 = !DILocation(line: 261, column: 21, scope: !9497)
!9729 = !DILocation(line: 261, column: 27, scope: !9497)
!9730 = !DILocation(line: 261, column: 25, scope: !9497)
!9731 = !DILocation(line: 261, column: 33, scope: !9497)
!9732 = !DILocation(line: 261, column: 18, scope: !9497)
!9733 = !DILocation(line: 262, column: 45, scope: !9497)
!9734 = !DILocation(line: 262, column: 62, scope: !9497)
!9735 = !DILocation(line: 262, column: 66, scope: !9497)
!9736 = !DILocation(line: 262, column: 59, scope: !9497)
!9737 = !DILocation(line: 262, column: 28, scope: !9497)
!9738 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !9511)
!9739 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !9511)
!9740 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !9511)
!9741 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !9511)
!9742 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !9511)
!9743 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !9511)
!9744 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !9511)
!9745 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !9511)
!9746 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !9511)
!9747 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !9511)
!9748 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !9511)
!9749 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !9511)
!9750 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !9511)
!9751 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !9511)
!9752 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !9511)
!9753 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !9511)
!9754 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !9511)
!9755 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !9511)
!9756 = !DILocation(line: 262, column: 18, scope: !9497)
!9757 = !DILocation(line: 262, column: 20, scope: !9497)
!9758 = !DILocation(line: 262, column: 13, scope: !9497)
!9759 = !DILocation(line: 262, column: 26, scope: !9497)
!9760 = !DILocation(line: 263, column: 57, scope: !9497)
!9761 = !DILocation(line: 263, column: 62, scope: !9497)
!9762 = !DILocation(line: 263, column: 66, scope: !9497)
!9763 = !DILocation(line: 263, column: 71, scope: !9497)
!9764 = !DILocation(line: 263, column: 40, scope: !9497)
!9765 = !DILocation(line: 263, column: 42, scope: !9497)
!9766 = !DILocation(line: 263, column: 48, scope: !9497)
!9767 = !DILocation(line: 263, column: 13, scope: !9497)
!9768 = !DILocation(line: 263, column: 30, scope: !9497)
!9769 = !DILocation(line: 263, column: 32, scope: !9497)
!9770 = !DILocation(line: 263, column: 53, scope: !9497)
!9771 = !DILocation(line: 264, column: 57, scope: !9497)
!9772 = !DILocation(line: 264, column: 62, scope: !9497)
!9773 = !DILocation(line: 264, column: 66, scope: !9497)
!9774 = !DILocation(line: 264, column: 71, scope: !9497)
!9775 = !DILocation(line: 264, column: 40, scope: !9497)
!9776 = !DILocation(line: 264, column: 42, scope: !9497)
!9777 = !DILocation(line: 264, column: 48, scope: !9497)
!9778 = !DILocation(line: 264, column: 13, scope: !9497)
!9779 = !DILocation(line: 264, column: 30, scope: !9497)
!9780 = !DILocation(line: 264, column: 32, scope: !9497)
!9781 = !DILocation(line: 264, column: 28, scope: !9497)
!9782 = !DILocation(line: 264, column: 53, scope: !9497)
!9783 = !DILocation(line: 265, column: 57, scope: !9497)
!9784 = !DILocation(line: 265, column: 62, scope: !9497)
!9785 = !DILocation(line: 265, column: 66, scope: !9497)
!9786 = !DILocation(line: 265, column: 71, scope: !9497)
!9787 = !DILocation(line: 265, column: 40, scope: !9497)
!9788 = !DILocation(line: 265, column: 42, scope: !9497)
!9789 = !DILocation(line: 265, column: 48, scope: !9497)
!9790 = !DILocation(line: 265, column: 13, scope: !9497)
!9791 = !DILocation(line: 265, column: 30, scope: !9497)
!9792 = !DILocation(line: 265, column: 32, scope: !9497)
!9793 = !DILocation(line: 265, column: 28, scope: !9497)
!9794 = !DILocation(line: 265, column: 53, scope: !9497)
!9795 = !DILocation(line: 266, column: 57, scope: !9497)
!9796 = !DILocation(line: 266, column: 62, scope: !9497)
!9797 = !DILocation(line: 266, column: 66, scope: !9497)
!9798 = !DILocation(line: 266, column: 71, scope: !9497)
!9799 = !DILocation(line: 266, column: 40, scope: !9497)
!9800 = !DILocation(line: 266, column: 42, scope: !9497)
!9801 = !DILocation(line: 266, column: 48, scope: !9497)
!9802 = !DILocation(line: 266, column: 13, scope: !9497)
!9803 = !DILocation(line: 266, column: 30, scope: !9497)
!9804 = !DILocation(line: 266, column: 32, scope: !9497)
!9805 = !DILocation(line: 266, column: 28, scope: !9497)
!9806 = !DILocation(line: 266, column: 53, scope: !9497)
!9807 = !DILocation(line: 267, column: 40, scope: !9497)
!9808 = !DILocation(line: 267, column: 42, scope: !9497)
!9809 = !DILocation(line: 267, column: 48, scope: !9497)
!9810 = !DILocation(line: 267, column: 13, scope: !9497)
!9811 = !DILocation(line: 267, column: 30, scope: !9497)
!9812 = !DILocation(line: 267, column: 32, scope: !9497)
!9813 = !DILocation(line: 267, column: 53, scope: !9497)
!9814 = !DILocation(line: 269, column: 19, scope: !9497)
!9815 = !DILocation(line: 269, column: 25, scope: !9497)
!9816 = !DILocation(line: 269, column: 23, scope: !9497)
!9817 = !DILocation(line: 269, column: 31, scope: !9497)
!9818 = !DILocation(line: 269, column: 37, scope: !9497)
!9819 = !DILocation(line: 269, column: 35, scope: !9497)
!9820 = !DILocation(line: 269, column: 29, scope: !9497)
!9821 = !DILocation(line: 269, column: 43, scope: !9497)
!9822 = !DILocation(line: 269, column: 49, scope: !9497)
!9823 = !DILocation(line: 269, column: 47, scope: !9497)
!9824 = !DILocation(line: 269, column: 41, scope: !9497)
!9825 = !DILocation(line: 269, column: 78, scope: !9497)
!9826 = !DILocation(line: 269, column: 80, scope: !9497)
!9827 = !DILocation(line: 269, column: 84, scope: !9497)
!9828 = !DILocation(line: 269, column: 55, scope: !9497)
!9829 = !DILocation(line: 269, column: 70, scope: !9497)
!9830 = !DILocation(line: 269, column: 72, scope: !9497)
!9831 = !DILocation(line: 269, column: 53, scope: !9497)
!9832 = !DILocation(line: 269, column: 17, scope: !9497)
!9833 = !DILocation(line: 270, column: 21, scope: !9497)
!9834 = !DILocation(line: 270, column: 27, scope: !9497)
!9835 = !DILocation(line: 270, column: 25, scope: !9497)
!9836 = !DILocation(line: 270, column: 33, scope: !9497)
!9837 = !DILocation(line: 270, column: 18, scope: !9497)
!9838 = !DILocation(line: 271, column: 48, scope: !9497)
!9839 = !DILocation(line: 271, column: 65, scope: !9497)
!9840 = !DILocation(line: 271, column: 69, scope: !9497)
!9841 = !DILocation(line: 271, column: 62, scope: !9497)
!9842 = !DILocation(line: 271, column: 31, scope: !9497)
!9843 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !9496)
!9844 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !9496)
!9845 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !9496)
!9846 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !9496)
!9847 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !9496)
!9848 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !9496)
!9849 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !9496)
!9850 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !9496)
!9851 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !9496)
!9852 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !9496)
!9853 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !9496)
!9854 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !9496)
!9855 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !9496)
!9856 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !9496)
!9857 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !9496)
!9858 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !9496)
!9859 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !9496)
!9860 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !9496)
!9861 = !DILocation(line: 271, column: 18, scope: !9497)
!9862 = !DILocation(line: 271, column: 20, scope: !9497)
!9863 = !DILocation(line: 271, column: 24, scope: !9497)
!9864 = !DILocation(line: 271, column: 13, scope: !9497)
!9865 = !DILocation(line: 271, column: 29, scope: !9497)
!9866 = !DILocation(line: 272, column: 54, scope: !9497)
!9867 = !DILocation(line: 272, column: 59, scope: !9497)
!9868 = !DILocation(line: 272, column: 63, scope: !9497)
!9869 = !DILocation(line: 272, column: 68, scope: !9497)
!9870 = !DILocation(line: 272, column: 39, scope: !9497)
!9871 = !DILocation(line: 272, column: 41, scope: !9497)
!9872 = !DILocation(line: 272, column: 45, scope: !9497)
!9873 = !DILocation(line: 272, column: 13, scope: !9497)
!9874 = !DILocation(line: 272, column: 30, scope: !9497)
!9875 = !DILocation(line: 272, column: 32, scope: !9497)
!9876 = !DILocation(line: 272, column: 50, scope: !9497)
!9877 = !DILocation(line: 273, column: 54, scope: !9497)
!9878 = !DILocation(line: 273, column: 59, scope: !9497)
!9879 = !DILocation(line: 273, column: 63, scope: !9497)
!9880 = !DILocation(line: 273, column: 68, scope: !9497)
!9881 = !DILocation(line: 273, column: 39, scope: !9497)
!9882 = !DILocation(line: 273, column: 41, scope: !9497)
!9883 = !DILocation(line: 273, column: 45, scope: !9497)
!9884 = !DILocation(line: 273, column: 13, scope: !9497)
!9885 = !DILocation(line: 273, column: 30, scope: !9497)
!9886 = !DILocation(line: 273, column: 32, scope: !9497)
!9887 = !DILocation(line: 273, column: 28, scope: !9497)
!9888 = !DILocation(line: 273, column: 50, scope: !9497)
!9889 = !DILocation(line: 274, column: 54, scope: !9497)
!9890 = !DILocation(line: 274, column: 59, scope: !9497)
!9891 = !DILocation(line: 274, column: 63, scope: !9497)
!9892 = !DILocation(line: 274, column: 68, scope: !9497)
!9893 = !DILocation(line: 274, column: 39, scope: !9497)
!9894 = !DILocation(line: 274, column: 41, scope: !9497)
!9895 = !DILocation(line: 274, column: 45, scope: !9497)
!9896 = !DILocation(line: 274, column: 13, scope: !9497)
!9897 = !DILocation(line: 274, column: 30, scope: !9497)
!9898 = !DILocation(line: 274, column: 32, scope: !9497)
!9899 = !DILocation(line: 274, column: 28, scope: !9497)
!9900 = !DILocation(line: 274, column: 50, scope: !9497)
!9901 = !DILocation(line: 275, column: 54, scope: !9497)
!9902 = !DILocation(line: 275, column: 59, scope: !9497)
!9903 = !DILocation(line: 275, column: 63, scope: !9497)
!9904 = !DILocation(line: 275, column: 68, scope: !9497)
!9905 = !DILocation(line: 275, column: 39, scope: !9497)
!9906 = !DILocation(line: 275, column: 41, scope: !9497)
!9907 = !DILocation(line: 275, column: 45, scope: !9497)
!9908 = !DILocation(line: 275, column: 13, scope: !9497)
!9909 = !DILocation(line: 275, column: 30, scope: !9497)
!9910 = !DILocation(line: 275, column: 32, scope: !9497)
!9911 = !DILocation(line: 275, column: 28, scope: !9497)
!9912 = !DILocation(line: 275, column: 50, scope: !9497)
!9913 = !DILocation(line: 276, column: 39, scope: !9497)
!9914 = !DILocation(line: 276, column: 41, scope: !9497)
!9915 = !DILocation(line: 276, column: 45, scope: !9497)
!9916 = !DILocation(line: 276, column: 13, scope: !9497)
!9917 = !DILocation(line: 276, column: 30, scope: !9497)
!9918 = !DILocation(line: 276, column: 32, scope: !9497)
!9919 = !DILocation(line: 276, column: 50, scope: !9497)
!9920 = !DILocation(line: 298, column: 20, scope: !9497)
!9921 = !DILocation(line: 298, column: 28, scope: !9497)
!9922 = !DILocation(line: 298, column: 25, scope: !9497)
!9923 = !DILocation(line: 298, column: 33, scope: !9497)
!9924 = !DILocation(line: 298, column: 38, scope: !9497)
!9925 = !DILocation(line: 298, column: 46, scope: !9497)
!9926 = !DILocation(line: 298, column: 44, scope: !9497)
!9927 = !DILocation(line: 299, column: 20, scope: !9497)
!9928 = !DILocation(line: 299, column: 28, scope: !9497)
!9929 = !DILocation(line: 299, column: 25, scope: !9497)
!9930 = !DILocation(line: 299, column: 33, scope: !9497)
!9931 = !DILocation(line: 299, column: 38, scope: !9497)
!9932 = !DILocation(line: 299, column: 46, scope: !9497)
!9933 = !DILocation(line: 299, column: 44, scope: !9497)
!9934 = !DILocation(line: 298, column: 50, scope: !9497)
!9935 = !DILocation(line: 300, column: 20, scope: !9497)
!9936 = !DILocation(line: 300, column: 28, scope: !9497)
!9937 = !DILocation(line: 300, column: 25, scope: !9497)
!9938 = !DILocation(line: 300, column: 33, scope: !9497)
!9939 = !DILocation(line: 300, column: 38, scope: !9497)
!9940 = !DILocation(line: 300, column: 46, scope: !9497)
!9941 = !DILocation(line: 300, column: 44, scope: !9497)
!9942 = !DILocation(line: 299, column: 50, scope: !9497)
!9943 = !DILocation(line: 300, column: 76, scope: !9497)
!9944 = !DILocation(line: 300, column: 54, scope: !9497)
!9945 = !DILocation(line: 300, column: 69, scope: !9497)
!9946 = !DILocation(line: 300, column: 71, scope: !9497)
!9947 = !DILocation(line: 300, column: 52, scope: !9497)
!9948 = !DILocation(line: 298, column: 15, scope: !9497)
!9949 = !DILocation(line: 301, column: 21, scope: !9497)
!9950 = !DILocation(line: 301, column: 25, scope: !9497)
!9951 = !DILocation(line: 301, column: 23, scope: !9497)
!9952 = !DILocation(line: 301, column: 31, scope: !9497)
!9953 = !DILocation(line: 301, column: 18, scope: !9497)
!9954 = !DILocation(line: 302, column: 53, scope: !9497)
!9955 = !DILocation(line: 302, column: 55, scope: !9497)
!9956 = !DILocation(line: 302, column: 50, scope: !9497)
!9957 = !DILocation(line: 302, column: 23, scope: !9497)
!9958 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !9505)
!9959 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !9505)
!9960 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !9505)
!9961 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !9505)
!9962 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !9505)
!9963 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !9505)
!9964 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !9505)
!9965 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !9505)
!9966 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !9505)
!9967 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !9505)
!9968 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !9505)
!9969 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !9505)
!9970 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !9505)
!9971 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !9505)
!9972 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !9505)
!9973 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !9505)
!9974 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !9505)
!9975 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !9505)
!9976 = !DILocation(line: 302, column: 18, scope: !9497)
!9977 = !DILocation(line: 302, column: 13, scope: !9497)
!9978 = !DILocation(line: 302, column: 21, scope: !9497)
!9979 = !DILocation(line: 303, column: 49, scope: !9497)
!9980 = !DILocation(line: 303, column: 54, scope: !9497)
!9981 = !DILocation(line: 303, column: 58, scope: !9497)
!9982 = !DILocation(line: 303, column: 63, scope: !9497)
!9983 = !DILocation(line: 303, column: 38, scope: !9497)
!9984 = !DILocation(line: 303, column: 40, scope: !9497)
!9985 = !DILocation(line: 303, column: 13, scope: !9497)
!9986 = !DILocation(line: 303, column: 30, scope: !9497)
!9987 = !DILocation(line: 303, column: 32, scope: !9497)
!9988 = !DILocation(line: 303, column: 45, scope: !9497)
!9989 = !DILocation(line: 304, column: 49, scope: !9497)
!9990 = !DILocation(line: 304, column: 54, scope: !9497)
!9991 = !DILocation(line: 304, column: 58, scope: !9497)
!9992 = !DILocation(line: 304, column: 63, scope: !9497)
!9993 = !DILocation(line: 304, column: 38, scope: !9497)
!9994 = !DILocation(line: 304, column: 40, scope: !9497)
!9995 = !DILocation(line: 304, column: 13, scope: !9497)
!9996 = !DILocation(line: 304, column: 30, scope: !9497)
!9997 = !DILocation(line: 304, column: 32, scope: !9497)
!9998 = !DILocation(line: 304, column: 28, scope: !9497)
!9999 = !DILocation(line: 304, column: 45, scope: !9497)
!10000 = !DILocation(line: 305, column: 49, scope: !9497)
!10001 = !DILocation(line: 305, column: 54, scope: !9497)
!10002 = !DILocation(line: 305, column: 58, scope: !9497)
!10003 = !DILocation(line: 305, column: 63, scope: !9497)
!10004 = !DILocation(line: 305, column: 38, scope: !9497)
!10005 = !DILocation(line: 305, column: 40, scope: !9497)
!10006 = !DILocation(line: 305, column: 13, scope: !9497)
!10007 = !DILocation(line: 305, column: 30, scope: !9497)
!10008 = !DILocation(line: 305, column: 32, scope: !9497)
!10009 = !DILocation(line: 305, column: 28, scope: !9497)
!10010 = !DILocation(line: 305, column: 45, scope: !9497)
!10011 = !DILocation(line: 306, column: 49, scope: !9497)
!10012 = !DILocation(line: 306, column: 54, scope: !9497)
!10013 = !DILocation(line: 306, column: 58, scope: !9497)
!10014 = !DILocation(line: 306, column: 63, scope: !9497)
!10015 = !DILocation(line: 306, column: 38, scope: !9497)
!10016 = !DILocation(line: 306, column: 40, scope: !9497)
!10017 = !DILocation(line: 306, column: 13, scope: !9497)
!10018 = !DILocation(line: 306, column: 30, scope: !9497)
!10019 = !DILocation(line: 306, column: 32, scope: !9497)
!10020 = !DILocation(line: 306, column: 28, scope: !9497)
!10021 = !DILocation(line: 306, column: 45, scope: !9497)
!10022 = !DILocation(line: 307, column: 38, scope: !9497)
!10023 = !DILocation(line: 307, column: 40, scope: !9497)
!10024 = !DILocation(line: 307, column: 13, scope: !9497)
!10025 = !DILocation(line: 307, column: 30, scope: !9497)
!10026 = !DILocation(line: 307, column: 32, scope: !9497)
!10027 = !DILocation(line: 307, column: 45, scope: !9497)
!10028 = !DILocation(line: 309, column: 20, scope: !9497)
!10029 = !DILocation(line: 309, column: 28, scope: !9497)
!10030 = !DILocation(line: 309, column: 25, scope: !9497)
!10031 = !DILocation(line: 309, column: 33, scope: !9497)
!10032 = !DILocation(line: 309, column: 38, scope: !9497)
!10033 = !DILocation(line: 309, column: 46, scope: !9497)
!10034 = !DILocation(line: 309, column: 44, scope: !9497)
!10035 = !DILocation(line: 310, column: 20, scope: !9497)
!10036 = !DILocation(line: 310, column: 28, scope: !9497)
!10037 = !DILocation(line: 310, column: 25, scope: !9497)
!10038 = !DILocation(line: 310, column: 33, scope: !9497)
!10039 = !DILocation(line: 310, column: 38, scope: !9497)
!10040 = !DILocation(line: 310, column: 46, scope: !9497)
!10041 = !DILocation(line: 310, column: 44, scope: !9497)
!10042 = !DILocation(line: 309, column: 52, scope: !9497)
!10043 = !DILocation(line: 311, column: 20, scope: !9497)
!10044 = !DILocation(line: 311, column: 28, scope: !9497)
!10045 = !DILocation(line: 311, column: 25, scope: !9497)
!10046 = !DILocation(line: 311, column: 33, scope: !9497)
!10047 = !DILocation(line: 311, column: 38, scope: !9497)
!10048 = !DILocation(line: 311, column: 46, scope: !9497)
!10049 = !DILocation(line: 311, column: 44, scope: !9497)
!10050 = !DILocation(line: 310, column: 50, scope: !9497)
!10051 = !DILocation(line: 311, column: 74, scope: !9497)
!10052 = !DILocation(line: 311, column: 52, scope: !9497)
!10053 = !DILocation(line: 311, column: 67, scope: !9497)
!10054 = !DILocation(line: 311, column: 69, scope: !9497)
!10055 = !DILocation(line: 311, column: 50, scope: !9497)
!10056 = !DILocation(line: 309, column: 15, scope: !9497)
!10057 = !DILocation(line: 312, column: 21, scope: !9497)
!10058 = !DILocation(line: 312, column: 25, scope: !9497)
!10059 = !DILocation(line: 312, column: 23, scope: !9497)
!10060 = !DILocation(line: 312, column: 31, scope: !9497)
!10061 = !DILocation(line: 312, column: 18, scope: !9497)
!10062 = !DILocation(line: 313, column: 53, scope: !9497)
!10063 = !DILocation(line: 313, column: 55, scope: !9497)
!10064 = !DILocation(line: 313, column: 50, scope: !9497)
!10065 = !DILocation(line: 313, column: 23, scope: !9497)
!10066 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !9508)
!10067 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !9508)
!10068 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !9508)
!10069 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !9508)
!10070 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !9508)
!10071 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !9508)
!10072 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !9508)
!10073 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !9508)
!10074 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !9508)
!10075 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !9508)
!10076 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !9508)
!10077 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !9508)
!10078 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !9508)
!10079 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !9508)
!10080 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !9508)
!10081 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !9508)
!10082 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !9508)
!10083 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !9508)
!10084 = !DILocation(line: 313, column: 18, scope: !9497)
!10085 = !DILocation(line: 313, column: 13, scope: !9497)
!10086 = !DILocation(line: 313, column: 21, scope: !9497)
!10087 = !DILocation(line: 314, column: 49, scope: !9497)
!10088 = !DILocation(line: 314, column: 54, scope: !9497)
!10089 = !DILocation(line: 314, column: 58, scope: !9497)
!10090 = !DILocation(line: 314, column: 63, scope: !9497)
!10091 = !DILocation(line: 314, column: 38, scope: !9497)
!10092 = !DILocation(line: 314, column: 40, scope: !9497)
!10093 = !DILocation(line: 314, column: 13, scope: !9497)
!10094 = !DILocation(line: 314, column: 30, scope: !9497)
!10095 = !DILocation(line: 314, column: 32, scope: !9497)
!10096 = !DILocation(line: 314, column: 45, scope: !9497)
!10097 = !DILocation(line: 315, column: 49, scope: !9497)
!10098 = !DILocation(line: 315, column: 54, scope: !9497)
!10099 = !DILocation(line: 315, column: 58, scope: !9497)
!10100 = !DILocation(line: 315, column: 63, scope: !9497)
!10101 = !DILocation(line: 315, column: 38, scope: !9497)
!10102 = !DILocation(line: 315, column: 40, scope: !9497)
!10103 = !DILocation(line: 315, column: 13, scope: !9497)
!10104 = !DILocation(line: 315, column: 30, scope: !9497)
!10105 = !DILocation(line: 315, column: 32, scope: !9497)
!10106 = !DILocation(line: 315, column: 28, scope: !9497)
!10107 = !DILocation(line: 315, column: 45, scope: !9497)
!10108 = !DILocation(line: 316, column: 49, scope: !9497)
!10109 = !DILocation(line: 316, column: 54, scope: !9497)
!10110 = !DILocation(line: 316, column: 58, scope: !9497)
!10111 = !DILocation(line: 316, column: 63, scope: !9497)
!10112 = !DILocation(line: 316, column: 38, scope: !9497)
!10113 = !DILocation(line: 316, column: 40, scope: !9497)
!10114 = !DILocation(line: 316, column: 13, scope: !9497)
!10115 = !DILocation(line: 316, column: 30, scope: !9497)
!10116 = !DILocation(line: 316, column: 32, scope: !9497)
!10117 = !DILocation(line: 316, column: 28, scope: !9497)
!10118 = !DILocation(line: 316, column: 45, scope: !9497)
!10119 = !DILocation(line: 317, column: 49, scope: !9497)
!10120 = !DILocation(line: 317, column: 54, scope: !9497)
!10121 = !DILocation(line: 317, column: 58, scope: !9497)
!10122 = !DILocation(line: 317, column: 63, scope: !9497)
!10123 = !DILocation(line: 317, column: 38, scope: !9497)
!10124 = !DILocation(line: 317, column: 40, scope: !9497)
!10125 = !DILocation(line: 317, column: 13, scope: !9497)
!10126 = !DILocation(line: 317, column: 30, scope: !9497)
!10127 = !DILocation(line: 317, column: 32, scope: !9497)
!10128 = !DILocation(line: 317, column: 28, scope: !9497)
!10129 = !DILocation(line: 317, column: 45, scope: !9497)
!10130 = !DILocation(line: 318, column: 38, scope: !9497)
!10131 = !DILocation(line: 318, column: 40, scope: !9497)
!10132 = !DILocation(line: 318, column: 13, scope: !9497)
!10133 = !DILocation(line: 318, column: 30, scope: !9497)
!10134 = !DILocation(line: 318, column: 32, scope: !9497)
!10135 = !DILocation(line: 318, column: 45, scope: !9497)
!10136 = !DILocation(line: 319, column: 9, scope: !9497)
!10137 = !DILocation(line: 246, column: 29, scope: !10138)
!10138 = !DILexicalBlockFile(scope: !9498, file: !266, discriminator: 2)
!10139 = !DILocation(line: 246, column: 9, scope: !10138)
!10140 = distinct !{!10140, !10141}
!10141 = !DILocation(line: 246, column: 9, scope: !9500)
!10142 = !DILocation(line: 321, column: 17, scope: !9500)
!10143 = !DILocation(line: 321, column: 20, scope: !9500)
!10144 = !DILocation(line: 321, column: 14, scope: !9500)
!10145 = !DILocation(line: 322, column: 17, scope: !9500)
!10146 = !DILocation(line: 322, column: 31, scope: !9500)
!10147 = !DILocation(line: 322, column: 14, scope: !9500)
!10148 = !DILocation(line: 323, column: 17, scope: !9500)
!10149 = !DILocation(line: 323, column: 31, scope: !9500)
!10150 = !DILocation(line: 323, column: 14, scope: !9500)
!10151 = !DILocation(line: 324, column: 17, scope: !9500)
!10152 = !DILocation(line: 324, column: 19, scope: !9500)
!10153 = !DILocation(line: 324, column: 14, scope: !9500)
!10154 = !DILocation(line: 325, column: 17, scope: !9500)
!10155 = !DILocation(line: 325, column: 19, scope: !9500)
!10156 = !DILocation(line: 325, column: 14, scope: !9500)
!10157 = !DILocation(line: 326, column: 17, scope: !9500)
!10158 = !DILocation(line: 326, column: 19, scope: !9500)
!10159 = !DILocation(line: 326, column: 14, scope: !9500)
!10160 = !DILocation(line: 327, column: 5, scope: !9500)
!10161 = !DILocation(line: 245, column: 25, scope: !10162)
!10162 = !DILexicalBlockFile(scope: !9501, file: !266, discriminator: 2)
!10163 = !DILocation(line: 245, column: 5, scope: !10162)
!10164 = distinct !{!10164, !10165}
!10165 = !DILocation(line: 245, column: 5, scope: !9494)
!10166 = !DILocation(line: 328, column: 1, scope: !9494)
!10167 = distinct !DISubprogram(name: "rgb2yuv_fsb_420p10_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!10168 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10169)
!10169 = distinct !DILocation(line: 271, column: 31, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !266, line: 246, column: 33)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !266, line: 246, column: 9)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !266, line: 246, column: 9)
!10173 = distinct !DILexicalBlock(scope: !10174, file: !266, line: 245, column: 29)
!10174 = distinct !DILexicalBlock(scope: !10175, file: !266, line: 245, column: 5)
!10175 = distinct !DILexicalBlock(scope: !10167, file: !266, line: 245, column: 5)
!10176 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10169)
!10177 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 280, column: 36, scope: !10170)
!10179 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10178)
!10180 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10181)
!10181 = distinct !DILocation(line: 289, column: 36, scope: !10170)
!10182 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10181)
!10183 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10184)
!10184 = distinct !DILocation(line: 302, column: 23, scope: !10170)
!10185 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10184)
!10186 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10187)
!10187 = distinct !DILocation(line: 313, column: 23, scope: !10170)
!10188 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10187)
!10189 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !10190)
!10190 = distinct !DILocation(line: 262, column: 28, scope: !10170)
!10191 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !10190)
!10192 = !DILocalVariable(name: "_yuv", arg: 1, scope: !10167, file: !266, line: 208, type: !17)
!10193 = !DILocation(line: 208, column: 43, scope: !10167)
!10194 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !10167, file: !266, line: 208, type: !50)
!10195 = !DILocation(line: 208, column: 68, scope: !10167)
!10196 = !DILocalVariable(name: "rgb", arg: 3, scope: !10167, file: !266, line: 209, type: !43)
!10197 = !DILocation(line: 209, column: 38, scope: !10167)
!10198 = !DILocalVariable(name: "s", arg: 4, scope: !10167, file: !266, line: 209, type: !47)
!10199 = !DILocation(line: 209, column: 56, scope: !10167)
!10200 = !DILocalVariable(name: "w", arg: 5, scope: !10167, file: !266, line: 210, type: !52)
!10201 = !DILocation(line: 210, column: 33, scope: !10167)
!10202 = !DILocalVariable(name: "h", arg: 6, scope: !10167, file: !266, line: 210, type: !52)
!10203 = !DILocation(line: 210, column: 40, scope: !10167)
!10204 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !10167, file: !266, line: 210, type: !53)
!10205 = !DILocation(line: 210, column: 57, scope: !10167)
!10206 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !10167, file: !266, line: 211, type: !59)
!10207 = !DILocation(line: 211, column: 43, scope: !10167)
!10208 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !10167, file: !266, line: 212, type: !73)
!10209 = !DILocation(line: 212, column: 34, scope: !10167)
!10210 = !DILocalVariable(name: "yuv", scope: !10167, file: !266, line: 214, type: !22)
!10211 = !DILocation(line: 214, column: 16, scope: !10167)
!10212 = !DILocation(line: 214, column: 36, scope: !10167)
!10213 = !DILocation(line: 214, column: 22, scope: !10167)
!10214 = !DILocalVariable(name: "yuv0", scope: !10167, file: !266, line: 215, type: !23)
!10215 = !DILocation(line: 215, column: 15, scope: !10167)
!10216 = !DILocation(line: 215, column: 22, scope: !10167)
!10217 = !DILocalVariable(name: "yuv1", scope: !10167, file: !266, line: 215, type: !23)
!10218 = !DILocation(line: 215, column: 31, scope: !10167)
!10219 = !DILocation(line: 215, column: 38, scope: !10167)
!10220 = !DILocalVariable(name: "yuv2", scope: !10167, file: !266, line: 215, type: !23)
!10221 = !DILocation(line: 215, column: 47, scope: !10167)
!10222 = !DILocation(line: 215, column: 54, scope: !10167)
!10223 = !DILocalVariable(name: "rgb0", scope: !10167, file: !266, line: 216, type: !59)
!10224 = !DILocation(line: 216, column: 20, scope: !10167)
!10225 = !DILocation(line: 216, column: 27, scope: !10167)
!10226 = !DILocalVariable(name: "rgb1", scope: !10167, file: !266, line: 216, type: !59)
!10227 = !DILocation(line: 216, column: 36, scope: !10167)
!10228 = !DILocation(line: 216, column: 43, scope: !10167)
!10229 = !DILocalVariable(name: "rgb2", scope: !10167, file: !266, line: 216, type: !59)
!10230 = !DILocation(line: 216, column: 52, scope: !10167)
!10231 = !DILocation(line: 216, column: 59, scope: !10167)
!10232 = !DILocalVariable(name: "y", scope: !10167, file: !266, line: 217, type: !52)
!10233 = !DILocation(line: 217, column: 9, scope: !10167)
!10234 = !DILocalVariable(name: "x", scope: !10167, file: !266, line: 217, type: !52)
!10235 = !DILocation(line: 217, column: 12, scope: !10167)
!10236 = !DILocalVariable(name: "sh", scope: !10167, file: !266, line: 218, type: !343)
!10237 = !DILocation(line: 218, column: 15, scope: !10167)
!10238 = !DILocalVariable(name: "rnd", scope: !10167, file: !266, line: 219, type: !343)
!10239 = !DILocation(line: 219, column: 15, scope: !10167)
!10240 = !DILocalVariable(name: "cry", scope: !10167, file: !266, line: 220, type: !52)
!10241 = !DILocation(line: 220, column: 9, scope: !10167)
!10242 = !DILocation(line: 220, column: 15, scope: !10167)
!10243 = !DILocalVariable(name: "cgy", scope: !10167, file: !266, line: 221, type: !52)
!10244 = !DILocation(line: 221, column: 9, scope: !10167)
!10245 = !DILocation(line: 221, column: 15, scope: !10167)
!10246 = !DILocalVariable(name: "cby", scope: !10167, file: !266, line: 222, type: !52)
!10247 = !DILocation(line: 222, column: 9, scope: !10167)
!10248 = !DILocation(line: 222, column: 15, scope: !10167)
!10249 = !DILocalVariable(name: "cru", scope: !10167, file: !266, line: 223, type: !52)
!10250 = !DILocation(line: 223, column: 9, scope: !10167)
!10251 = !DILocation(line: 223, column: 15, scope: !10167)
!10252 = !DILocalVariable(name: "cgu", scope: !10167, file: !266, line: 224, type: !52)
!10253 = !DILocation(line: 224, column: 9, scope: !10167)
!10254 = !DILocation(line: 224, column: 15, scope: !10167)
!10255 = !DILocalVariable(name: "cburv", scope: !10167, file: !266, line: 225, type: !52)
!10256 = !DILocation(line: 225, column: 9, scope: !10167)
!10257 = !DILocation(line: 225, column: 17, scope: !10167)
!10258 = !DILocalVariable(name: "cgv", scope: !10167, file: !266, line: 226, type: !52)
!10259 = !DILocation(line: 226, column: 9, scope: !10167)
!10260 = !DILocation(line: 226, column: 15, scope: !10167)
!10261 = !DILocalVariable(name: "cbv", scope: !10167, file: !266, line: 227, type: !52)
!10262 = !DILocation(line: 227, column: 9, scope: !10167)
!10263 = !DILocation(line: 227, column: 15, scope: !10167)
!10264 = !DILocalVariable(name: "s0", scope: !10167, file: !266, line: 228, type: !47)
!10265 = !DILocation(line: 228, column: 15, scope: !10167)
!10266 = !DILocation(line: 228, column: 20, scope: !10167)
!10267 = !DILocation(line: 228, column: 34, scope: !10167)
!10268 = !DILocalVariable(name: "uv_offset", scope: !10167, file: !266, line: 229, type: !343)
!10269 = !DILocation(line: 229, column: 15, scope: !10167)
!10270 = !DILocalVariable(name: "mask", scope: !10167, file: !266, line: 230, type: !4656)
!10271 = !DILocation(line: 230, column: 14, scope: !10167)
!10272 = !DILocation(line: 232, column: 12, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10167, file: !266, line: 232, column: 5)
!10274 = !DILocation(line: 232, column: 10, scope: !10273)
!10275 = !DILocation(line: 232, column: 17, scope: !10276)
!10276 = !DILexicalBlockFile(scope: !10277, file: !266, discriminator: 1)
!10277 = distinct !DILexicalBlock(scope: !10273, file: !266, line: 232, column: 5)
!10278 = !DILocation(line: 232, column: 21, scope: !10276)
!10279 = !DILocation(line: 232, column: 19, scope: !10276)
!10280 = !DILocation(line: 232, column: 5, scope: !10276)
!10281 = !DILocation(line: 234, column: 27, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10277, file: !266, line: 232, column: 29)
!10283 = !DILocation(line: 234, column: 9, scope: !10282)
!10284 = !DILocation(line: 234, column: 30, scope: !10282)
!10285 = !DILocation(line: 233, column: 27, scope: !10282)
!10286 = !DILocation(line: 233, column: 9, scope: !10282)
!10287 = !DILocation(line: 233, column: 30, scope: !10282)
!10288 = !DILocation(line: 235, column: 5, scope: !10282)
!10289 = !DILocation(line: 232, column: 25, scope: !10290)
!10290 = !DILexicalBlockFile(scope: !10277, file: !266, discriminator: 2)
!10291 = !DILocation(line: 232, column: 5, scope: !10290)
!10292 = distinct !{!10292, !10293}
!10293 = !DILocation(line: 232, column: 5, scope: !10167)
!10294 = !DILocation(line: 237, column: 58, scope: !10167)
!10295 = !DILocation(line: 237, column: 61, scope: !10167)
!10296 = !DILocation(line: 237, column: 72, scope: !10167)
!10297 = !DILocation(line: 237, column: 77, scope: !10167)
!10298 = !DILocation(line: 237, column: 7, scope: !10167)
!10299 = !DILocation(line: 238, column: 58, scope: !10167)
!10300 = !DILocation(line: 238, column: 61, scope: !10167)
!10301 = !DILocation(line: 238, column: 72, scope: !10167)
!10302 = !DILocation(line: 238, column: 77, scope: !10167)
!10303 = !DILocation(line: 238, column: 7, scope: !10167)
!10304 = !DILocation(line: 239, column: 12, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10167, file: !266, line: 239, column: 5)
!10306 = !DILocation(line: 239, column: 10, scope: !10305)
!10307 = !DILocation(line: 239, column: 17, scope: !10308)
!10308 = !DILexicalBlockFile(scope: !10309, file: !266, discriminator: 1)
!10309 = distinct !DILexicalBlock(scope: !10305, file: !266, line: 239, column: 5)
!10310 = !DILocation(line: 239, column: 21, scope: !10308)
!10311 = !DILocation(line: 239, column: 19, scope: !10308)
!10312 = !DILocation(line: 239, column: 5, scope: !10308)
!10313 = !DILocation(line: 243, column: 27, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !266, line: 239, column: 29)
!10315 = !DILocation(line: 243, column: 9, scope: !10314)
!10316 = !DILocation(line: 243, column: 30, scope: !10314)
!10317 = !DILocation(line: 242, column: 27, scope: !10314)
!10318 = !DILocation(line: 242, column: 9, scope: !10314)
!10319 = !DILocation(line: 242, column: 30, scope: !10314)
!10320 = !DILocation(line: 241, column: 27, scope: !10314)
!10321 = !DILocation(line: 241, column: 9, scope: !10314)
!10322 = !DILocation(line: 241, column: 30, scope: !10314)
!10323 = !DILocation(line: 240, column: 27, scope: !10314)
!10324 = !DILocation(line: 240, column: 9, scope: !10314)
!10325 = !DILocation(line: 240, column: 30, scope: !10314)
!10326 = !DILocation(line: 244, column: 5, scope: !10314)
!10327 = !DILocation(line: 239, column: 25, scope: !10328)
!10328 = !DILexicalBlockFile(scope: !10309, file: !266, discriminator: 2)
!10329 = !DILocation(line: 239, column: 5, scope: !10328)
!10330 = distinct !{!10330, !10331}
!10331 = !DILocation(line: 239, column: 5, scope: !10167)
!10332 = !DILocation(line: 245, column: 12, scope: !10175)
!10333 = !DILocation(line: 245, column: 10, scope: !10175)
!10334 = !DILocation(line: 245, column: 17, scope: !10335)
!10335 = !DILexicalBlockFile(scope: !10174, file: !266, discriminator: 1)
!10336 = !DILocation(line: 245, column: 21, scope: !10335)
!10337 = !DILocation(line: 245, column: 19, scope: !10335)
!10338 = !DILocation(line: 245, column: 5, scope: !10335)
!10339 = !DILocation(line: 246, column: 16, scope: !10172)
!10340 = !DILocation(line: 246, column: 14, scope: !10172)
!10341 = !DILocation(line: 246, column: 21, scope: !10342)
!10342 = !DILexicalBlockFile(scope: !10171, file: !266, discriminator: 1)
!10343 = !DILocation(line: 246, column: 25, scope: !10342)
!10344 = !DILocation(line: 246, column: 23, scope: !10342)
!10345 = !DILocation(line: 246, column: 9, scope: !10342)
!10346 = !DILocalVariable(name: "r00", scope: !10170, file: !266, line: 247, type: !52)
!10347 = !DILocation(line: 247, column: 17, scope: !10170)
!10348 = !DILocation(line: 247, column: 28, scope: !10170)
!10349 = !DILocation(line: 247, column: 30, scope: !10170)
!10350 = !DILocation(line: 247, column: 23, scope: !10170)
!10351 = !DILocalVariable(name: "g00", scope: !10170, file: !266, line: 247, type: !52)
!10352 = !DILocation(line: 247, column: 37, scope: !10170)
!10353 = !DILocation(line: 247, column: 48, scope: !10170)
!10354 = !DILocation(line: 247, column: 50, scope: !10170)
!10355 = !DILocation(line: 247, column: 43, scope: !10170)
!10356 = !DILocalVariable(name: "b00", scope: !10170, file: !266, line: 247, type: !52)
!10357 = !DILocation(line: 247, column: 57, scope: !10170)
!10358 = !DILocation(line: 247, column: 68, scope: !10170)
!10359 = !DILocation(line: 247, column: 70, scope: !10170)
!10360 = !DILocation(line: 247, column: 63, scope: !10170)
!10361 = !DILocalVariable(name: "y00", scope: !10170, file: !266, line: 248, type: !52)
!10362 = !DILocation(line: 248, column: 17, scope: !10170)
!10363 = !DILocalVariable(name: "r01", scope: !10170, file: !266, line: 250, type: !52)
!10364 = !DILocation(line: 250, column: 17, scope: !10170)
!10365 = !DILocation(line: 250, column: 28, scope: !10170)
!10366 = !DILocation(line: 250, column: 30, scope: !10170)
!10367 = !DILocation(line: 250, column: 34, scope: !10170)
!10368 = !DILocation(line: 250, column: 23, scope: !10170)
!10369 = !DILocalVariable(name: "g01", scope: !10170, file: !266, line: 250, type: !52)
!10370 = !DILocation(line: 250, column: 40, scope: !10170)
!10371 = !DILocation(line: 250, column: 51, scope: !10170)
!10372 = !DILocation(line: 250, column: 53, scope: !10170)
!10373 = !DILocation(line: 250, column: 57, scope: !10170)
!10374 = !DILocation(line: 250, column: 46, scope: !10170)
!10375 = !DILocalVariable(name: "b01", scope: !10170, file: !266, line: 250, type: !52)
!10376 = !DILocation(line: 250, column: 63, scope: !10170)
!10377 = !DILocation(line: 250, column: 74, scope: !10170)
!10378 = !DILocation(line: 250, column: 76, scope: !10170)
!10379 = !DILocation(line: 250, column: 80, scope: !10170)
!10380 = !DILocation(line: 250, column: 69, scope: !10170)
!10381 = !DILocalVariable(name: "y01", scope: !10170, file: !266, line: 251, type: !52)
!10382 = !DILocation(line: 251, column: 17, scope: !10170)
!10383 = !DILocalVariable(name: "r10", scope: !10170, file: !266, line: 253, type: !52)
!10384 = !DILocation(line: 253, column: 17, scope: !10170)
!10385 = !DILocation(line: 253, column: 28, scope: !10170)
!10386 = !DILocation(line: 253, column: 30, scope: !10170)
!10387 = !DILocation(line: 253, column: 34, scope: !10170)
!10388 = !DILocation(line: 253, column: 40, scope: !10170)
!10389 = !DILocation(line: 253, column: 38, scope: !10170)
!10390 = !DILocation(line: 253, column: 23, scope: !10170)
!10391 = !DILocalVariable(name: "g10", scope: !10170, file: !266, line: 253, type: !52)
!10392 = !DILocation(line: 253, column: 44, scope: !10170)
!10393 = !DILocation(line: 253, column: 55, scope: !10170)
!10394 = !DILocation(line: 253, column: 57, scope: !10170)
!10395 = !DILocation(line: 253, column: 61, scope: !10170)
!10396 = !DILocation(line: 253, column: 67, scope: !10170)
!10397 = !DILocation(line: 253, column: 65, scope: !10170)
!10398 = !DILocation(line: 253, column: 50, scope: !10170)
!10399 = !DILocalVariable(name: "b10", scope: !10170, file: !266, line: 253, type: !52)
!10400 = !DILocation(line: 253, column: 71, scope: !10170)
!10401 = !DILocation(line: 253, column: 82, scope: !10170)
!10402 = !DILocation(line: 253, column: 84, scope: !10170)
!10403 = !DILocation(line: 253, column: 88, scope: !10170)
!10404 = !DILocation(line: 253, column: 94, scope: !10170)
!10405 = !DILocation(line: 253, column: 92, scope: !10170)
!10406 = !DILocation(line: 253, column: 77, scope: !10170)
!10407 = !DILocalVariable(name: "r11", scope: !10170, file: !266, line: 254, type: !52)
!10408 = !DILocation(line: 254, column: 17, scope: !10170)
!10409 = !DILocation(line: 254, column: 28, scope: !10170)
!10410 = !DILocation(line: 254, column: 30, scope: !10170)
!10411 = !DILocation(line: 254, column: 34, scope: !10170)
!10412 = !DILocation(line: 254, column: 40, scope: !10170)
!10413 = !DILocation(line: 254, column: 38, scope: !10170)
!10414 = !DILocation(line: 254, column: 23, scope: !10170)
!10415 = !DILocalVariable(name: "g11", scope: !10170, file: !266, line: 254, type: !52)
!10416 = !DILocation(line: 254, column: 44, scope: !10170)
!10417 = !DILocation(line: 254, column: 55, scope: !10170)
!10418 = !DILocation(line: 254, column: 57, scope: !10170)
!10419 = !DILocation(line: 254, column: 61, scope: !10170)
!10420 = !DILocation(line: 254, column: 67, scope: !10170)
!10421 = !DILocation(line: 254, column: 65, scope: !10170)
!10422 = !DILocation(line: 254, column: 50, scope: !10170)
!10423 = !DILocalVariable(name: "b11", scope: !10170, file: !266, line: 254, type: !52)
!10424 = !DILocation(line: 254, column: 71, scope: !10170)
!10425 = !DILocation(line: 254, column: 82, scope: !10170)
!10426 = !DILocation(line: 254, column: 84, scope: !10170)
!10427 = !DILocation(line: 254, column: 88, scope: !10170)
!10428 = !DILocation(line: 254, column: 94, scope: !10170)
!10429 = !DILocation(line: 254, column: 92, scope: !10170)
!10430 = !DILocation(line: 254, column: 77, scope: !10170)
!10431 = !DILocalVariable(name: "y10", scope: !10170, file: !266, line: 255, type: !52)
!10432 = !DILocation(line: 255, column: 17, scope: !10170)
!10433 = !DILocalVariable(name: "y11", scope: !10170, file: !266, line: 255, type: !52)
!10434 = !DILocation(line: 255, column: 22, scope: !10170)
!10435 = !DILocalVariable(name: "u", scope: !10170, file: !266, line: 258, type: !52)
!10436 = !DILocation(line: 258, column: 17, scope: !10170)
!10437 = !DILocalVariable(name: "v", scope: !10170, file: !266, line: 258, type: !52)
!10438 = !DILocation(line: 258, column: 20, scope: !10170)
!10439 = !DILocalVariable(name: "diff", scope: !10170, file: !266, line: 258, type: !52)
!10440 = !DILocation(line: 258, column: 23, scope: !10170)
!10441 = !DILocation(line: 260, column: 19, scope: !10170)
!10442 = !DILocation(line: 260, column: 25, scope: !10170)
!10443 = !DILocation(line: 260, column: 23, scope: !10170)
!10444 = !DILocation(line: 260, column: 31, scope: !10170)
!10445 = !DILocation(line: 260, column: 37, scope: !10170)
!10446 = !DILocation(line: 260, column: 35, scope: !10170)
!10447 = !DILocation(line: 260, column: 29, scope: !10170)
!10448 = !DILocation(line: 260, column: 43, scope: !10170)
!10449 = !DILocation(line: 260, column: 49, scope: !10170)
!10450 = !DILocation(line: 260, column: 47, scope: !10170)
!10451 = !DILocation(line: 260, column: 41, scope: !10170)
!10452 = !DILocation(line: 260, column: 78, scope: !10170)
!10453 = !DILocation(line: 260, column: 80, scope: !10170)
!10454 = !DILocation(line: 260, column: 55, scope: !10170)
!10455 = !DILocation(line: 260, column: 70, scope: !10170)
!10456 = !DILocation(line: 260, column: 72, scope: !10170)
!10457 = !DILocation(line: 260, column: 53, scope: !10170)
!10458 = !DILocation(line: 260, column: 17, scope: !10170)
!10459 = !DILocation(line: 261, column: 21, scope: !10170)
!10460 = !DILocation(line: 261, column: 27, scope: !10170)
!10461 = !DILocation(line: 261, column: 25, scope: !10170)
!10462 = !DILocation(line: 261, column: 33, scope: !10170)
!10463 = !DILocation(line: 261, column: 18, scope: !10170)
!10464 = !DILocation(line: 262, column: 45, scope: !10170)
!10465 = !DILocation(line: 262, column: 62, scope: !10170)
!10466 = !DILocation(line: 262, column: 66, scope: !10170)
!10467 = !DILocation(line: 262, column: 59, scope: !10170)
!10468 = !DILocation(line: 262, column: 28, scope: !10170)
!10469 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10190)
!10470 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10190)
!10471 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10190)
!10472 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10190)
!10473 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10190)
!10474 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10190)
!10475 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10190)
!10476 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10190)
!10477 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10190)
!10478 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10190)
!10479 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10190)
!10480 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10190)
!10481 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10190)
!10482 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10190)
!10483 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10190)
!10484 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10190)
!10485 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10190)
!10486 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10190)
!10487 = !DILocation(line: 262, column: 18, scope: !10170)
!10488 = !DILocation(line: 262, column: 20, scope: !10170)
!10489 = !DILocation(line: 262, column: 13, scope: !10170)
!10490 = !DILocation(line: 262, column: 26, scope: !10170)
!10491 = !DILocation(line: 263, column: 57, scope: !10170)
!10492 = !DILocation(line: 263, column: 62, scope: !10170)
!10493 = !DILocation(line: 263, column: 66, scope: !10170)
!10494 = !DILocation(line: 263, column: 71, scope: !10170)
!10495 = !DILocation(line: 263, column: 40, scope: !10170)
!10496 = !DILocation(line: 263, column: 42, scope: !10170)
!10497 = !DILocation(line: 263, column: 48, scope: !10170)
!10498 = !DILocation(line: 263, column: 13, scope: !10170)
!10499 = !DILocation(line: 263, column: 30, scope: !10170)
!10500 = !DILocation(line: 263, column: 32, scope: !10170)
!10501 = !DILocation(line: 263, column: 53, scope: !10170)
!10502 = !DILocation(line: 264, column: 57, scope: !10170)
!10503 = !DILocation(line: 264, column: 62, scope: !10170)
!10504 = !DILocation(line: 264, column: 66, scope: !10170)
!10505 = !DILocation(line: 264, column: 71, scope: !10170)
!10506 = !DILocation(line: 264, column: 40, scope: !10170)
!10507 = !DILocation(line: 264, column: 42, scope: !10170)
!10508 = !DILocation(line: 264, column: 48, scope: !10170)
!10509 = !DILocation(line: 264, column: 13, scope: !10170)
!10510 = !DILocation(line: 264, column: 30, scope: !10170)
!10511 = !DILocation(line: 264, column: 32, scope: !10170)
!10512 = !DILocation(line: 264, column: 28, scope: !10170)
!10513 = !DILocation(line: 264, column: 53, scope: !10170)
!10514 = !DILocation(line: 265, column: 57, scope: !10170)
!10515 = !DILocation(line: 265, column: 62, scope: !10170)
!10516 = !DILocation(line: 265, column: 66, scope: !10170)
!10517 = !DILocation(line: 265, column: 71, scope: !10170)
!10518 = !DILocation(line: 265, column: 40, scope: !10170)
!10519 = !DILocation(line: 265, column: 42, scope: !10170)
!10520 = !DILocation(line: 265, column: 48, scope: !10170)
!10521 = !DILocation(line: 265, column: 13, scope: !10170)
!10522 = !DILocation(line: 265, column: 30, scope: !10170)
!10523 = !DILocation(line: 265, column: 32, scope: !10170)
!10524 = !DILocation(line: 265, column: 28, scope: !10170)
!10525 = !DILocation(line: 265, column: 53, scope: !10170)
!10526 = !DILocation(line: 266, column: 57, scope: !10170)
!10527 = !DILocation(line: 266, column: 62, scope: !10170)
!10528 = !DILocation(line: 266, column: 66, scope: !10170)
!10529 = !DILocation(line: 266, column: 71, scope: !10170)
!10530 = !DILocation(line: 266, column: 40, scope: !10170)
!10531 = !DILocation(line: 266, column: 42, scope: !10170)
!10532 = !DILocation(line: 266, column: 48, scope: !10170)
!10533 = !DILocation(line: 266, column: 13, scope: !10170)
!10534 = !DILocation(line: 266, column: 30, scope: !10170)
!10535 = !DILocation(line: 266, column: 32, scope: !10170)
!10536 = !DILocation(line: 266, column: 28, scope: !10170)
!10537 = !DILocation(line: 266, column: 53, scope: !10170)
!10538 = !DILocation(line: 267, column: 40, scope: !10170)
!10539 = !DILocation(line: 267, column: 42, scope: !10170)
!10540 = !DILocation(line: 267, column: 48, scope: !10170)
!10541 = !DILocation(line: 267, column: 13, scope: !10170)
!10542 = !DILocation(line: 267, column: 30, scope: !10170)
!10543 = !DILocation(line: 267, column: 32, scope: !10170)
!10544 = !DILocation(line: 267, column: 53, scope: !10170)
!10545 = !DILocation(line: 269, column: 19, scope: !10170)
!10546 = !DILocation(line: 269, column: 25, scope: !10170)
!10547 = !DILocation(line: 269, column: 23, scope: !10170)
!10548 = !DILocation(line: 269, column: 31, scope: !10170)
!10549 = !DILocation(line: 269, column: 37, scope: !10170)
!10550 = !DILocation(line: 269, column: 35, scope: !10170)
!10551 = !DILocation(line: 269, column: 29, scope: !10170)
!10552 = !DILocation(line: 269, column: 43, scope: !10170)
!10553 = !DILocation(line: 269, column: 49, scope: !10170)
!10554 = !DILocation(line: 269, column: 47, scope: !10170)
!10555 = !DILocation(line: 269, column: 41, scope: !10170)
!10556 = !DILocation(line: 269, column: 78, scope: !10170)
!10557 = !DILocation(line: 269, column: 80, scope: !10170)
!10558 = !DILocation(line: 269, column: 84, scope: !10170)
!10559 = !DILocation(line: 269, column: 55, scope: !10170)
!10560 = !DILocation(line: 269, column: 70, scope: !10170)
!10561 = !DILocation(line: 269, column: 72, scope: !10170)
!10562 = !DILocation(line: 269, column: 53, scope: !10170)
!10563 = !DILocation(line: 269, column: 17, scope: !10170)
!10564 = !DILocation(line: 270, column: 21, scope: !10170)
!10565 = !DILocation(line: 270, column: 27, scope: !10170)
!10566 = !DILocation(line: 270, column: 25, scope: !10170)
!10567 = !DILocation(line: 270, column: 33, scope: !10170)
!10568 = !DILocation(line: 270, column: 18, scope: !10170)
!10569 = !DILocation(line: 271, column: 48, scope: !10170)
!10570 = !DILocation(line: 271, column: 65, scope: !10170)
!10571 = !DILocation(line: 271, column: 69, scope: !10170)
!10572 = !DILocation(line: 271, column: 62, scope: !10170)
!10573 = !DILocation(line: 271, column: 31, scope: !10170)
!10574 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10169)
!10575 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10169)
!10576 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10169)
!10577 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10169)
!10578 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10169)
!10579 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10169)
!10580 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10169)
!10581 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10169)
!10582 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10169)
!10583 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10169)
!10584 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10169)
!10585 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10169)
!10586 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10169)
!10587 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10169)
!10588 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10169)
!10589 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10169)
!10590 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10169)
!10591 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10169)
!10592 = !DILocation(line: 271, column: 18, scope: !10170)
!10593 = !DILocation(line: 271, column: 20, scope: !10170)
!10594 = !DILocation(line: 271, column: 24, scope: !10170)
!10595 = !DILocation(line: 271, column: 13, scope: !10170)
!10596 = !DILocation(line: 271, column: 29, scope: !10170)
!10597 = !DILocation(line: 272, column: 54, scope: !10170)
!10598 = !DILocation(line: 272, column: 59, scope: !10170)
!10599 = !DILocation(line: 272, column: 63, scope: !10170)
!10600 = !DILocation(line: 272, column: 68, scope: !10170)
!10601 = !DILocation(line: 272, column: 39, scope: !10170)
!10602 = !DILocation(line: 272, column: 41, scope: !10170)
!10603 = !DILocation(line: 272, column: 45, scope: !10170)
!10604 = !DILocation(line: 272, column: 13, scope: !10170)
!10605 = !DILocation(line: 272, column: 30, scope: !10170)
!10606 = !DILocation(line: 272, column: 32, scope: !10170)
!10607 = !DILocation(line: 272, column: 50, scope: !10170)
!10608 = !DILocation(line: 273, column: 54, scope: !10170)
!10609 = !DILocation(line: 273, column: 59, scope: !10170)
!10610 = !DILocation(line: 273, column: 63, scope: !10170)
!10611 = !DILocation(line: 273, column: 68, scope: !10170)
!10612 = !DILocation(line: 273, column: 39, scope: !10170)
!10613 = !DILocation(line: 273, column: 41, scope: !10170)
!10614 = !DILocation(line: 273, column: 45, scope: !10170)
!10615 = !DILocation(line: 273, column: 13, scope: !10170)
!10616 = !DILocation(line: 273, column: 30, scope: !10170)
!10617 = !DILocation(line: 273, column: 32, scope: !10170)
!10618 = !DILocation(line: 273, column: 28, scope: !10170)
!10619 = !DILocation(line: 273, column: 50, scope: !10170)
!10620 = !DILocation(line: 274, column: 54, scope: !10170)
!10621 = !DILocation(line: 274, column: 59, scope: !10170)
!10622 = !DILocation(line: 274, column: 63, scope: !10170)
!10623 = !DILocation(line: 274, column: 68, scope: !10170)
!10624 = !DILocation(line: 274, column: 39, scope: !10170)
!10625 = !DILocation(line: 274, column: 41, scope: !10170)
!10626 = !DILocation(line: 274, column: 45, scope: !10170)
!10627 = !DILocation(line: 274, column: 13, scope: !10170)
!10628 = !DILocation(line: 274, column: 30, scope: !10170)
!10629 = !DILocation(line: 274, column: 32, scope: !10170)
!10630 = !DILocation(line: 274, column: 28, scope: !10170)
!10631 = !DILocation(line: 274, column: 50, scope: !10170)
!10632 = !DILocation(line: 275, column: 54, scope: !10170)
!10633 = !DILocation(line: 275, column: 59, scope: !10170)
!10634 = !DILocation(line: 275, column: 63, scope: !10170)
!10635 = !DILocation(line: 275, column: 68, scope: !10170)
!10636 = !DILocation(line: 275, column: 39, scope: !10170)
!10637 = !DILocation(line: 275, column: 41, scope: !10170)
!10638 = !DILocation(line: 275, column: 45, scope: !10170)
!10639 = !DILocation(line: 275, column: 13, scope: !10170)
!10640 = !DILocation(line: 275, column: 30, scope: !10170)
!10641 = !DILocation(line: 275, column: 32, scope: !10170)
!10642 = !DILocation(line: 275, column: 28, scope: !10170)
!10643 = !DILocation(line: 275, column: 50, scope: !10170)
!10644 = !DILocation(line: 276, column: 39, scope: !10170)
!10645 = !DILocation(line: 276, column: 41, scope: !10170)
!10646 = !DILocation(line: 276, column: 45, scope: !10170)
!10647 = !DILocation(line: 276, column: 13, scope: !10170)
!10648 = !DILocation(line: 276, column: 30, scope: !10170)
!10649 = !DILocation(line: 276, column: 32, scope: !10170)
!10650 = !DILocation(line: 276, column: 50, scope: !10170)
!10651 = !DILocation(line: 278, column: 19, scope: !10170)
!10652 = !DILocation(line: 278, column: 25, scope: !10170)
!10653 = !DILocation(line: 278, column: 23, scope: !10170)
!10654 = !DILocation(line: 278, column: 31, scope: !10170)
!10655 = !DILocation(line: 278, column: 37, scope: !10170)
!10656 = !DILocation(line: 278, column: 35, scope: !10170)
!10657 = !DILocation(line: 278, column: 29, scope: !10170)
!10658 = !DILocation(line: 278, column: 43, scope: !10170)
!10659 = !DILocation(line: 278, column: 49, scope: !10170)
!10660 = !DILocation(line: 278, column: 47, scope: !10170)
!10661 = !DILocation(line: 278, column: 41, scope: !10170)
!10662 = !DILocation(line: 278, column: 73, scope: !10170)
!10663 = !DILocation(line: 278, column: 75, scope: !10170)
!10664 = !DILocation(line: 278, column: 79, scope: !10170)
!10665 = !DILocation(line: 278, column: 55, scope: !10170)
!10666 = !DILocation(line: 278, column: 53, scope: !10170)
!10667 = !DILocation(line: 278, column: 17, scope: !10170)
!10668 = !DILocation(line: 279, column: 21, scope: !10170)
!10669 = !DILocation(line: 279, column: 27, scope: !10170)
!10670 = !DILocation(line: 279, column: 25, scope: !10170)
!10671 = !DILocation(line: 279, column: 33, scope: !10170)
!10672 = !DILocation(line: 279, column: 18, scope: !10170)
!10673 = !DILocation(line: 280, column: 53, scope: !10170)
!10674 = !DILocation(line: 280, column: 70, scope: !10170)
!10675 = !DILocation(line: 280, column: 74, scope: !10170)
!10676 = !DILocation(line: 280, column: 67, scope: !10170)
!10677 = !DILocation(line: 280, column: 36, scope: !10170)
!10678 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10178)
!10679 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10178)
!10680 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10178)
!10681 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10178)
!10682 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10178)
!10683 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10178)
!10684 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10178)
!10685 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10178)
!10686 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10178)
!10687 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10178)
!10688 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10178)
!10689 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10178)
!10690 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10178)
!10691 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10178)
!10692 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10178)
!10693 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10178)
!10694 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10178)
!10695 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10178)
!10696 = !DILocation(line: 280, column: 18, scope: !10170)
!10697 = !DILocation(line: 280, column: 20, scope: !10170)
!10698 = !DILocation(line: 280, column: 24, scope: !10170)
!10699 = !DILocation(line: 280, column: 30, scope: !10170)
!10700 = !DILocation(line: 280, column: 28, scope: !10170)
!10701 = !DILocation(line: 280, column: 13, scope: !10170)
!10702 = !DILocation(line: 280, column: 34, scope: !10170)
!10703 = !DILocation(line: 281, column: 46, scope: !10170)
!10704 = !DILocation(line: 281, column: 51, scope: !10170)
!10705 = !DILocation(line: 281, column: 55, scope: !10170)
!10706 = !DILocation(line: 281, column: 60, scope: !10170)
!10707 = !DILocation(line: 281, column: 31, scope: !10170)
!10708 = !DILocation(line: 281, column: 33, scope: !10170)
!10709 = !DILocation(line: 281, column: 37, scope: !10170)
!10710 = !DILocation(line: 281, column: 13, scope: !10170)
!10711 = !DILocation(line: 281, column: 42, scope: !10170)
!10712 = !DILocation(line: 282, column: 46, scope: !10170)
!10713 = !DILocation(line: 282, column: 51, scope: !10170)
!10714 = !DILocation(line: 282, column: 55, scope: !10170)
!10715 = !DILocation(line: 282, column: 60, scope: !10170)
!10716 = !DILocation(line: 282, column: 31, scope: !10170)
!10717 = !DILocation(line: 282, column: 33, scope: !10170)
!10718 = !DILocation(line: 282, column: 37, scope: !10170)
!10719 = !DILocation(line: 282, column: 13, scope: !10170)
!10720 = !DILocation(line: 282, column: 42, scope: !10170)
!10721 = !DILocation(line: 283, column: 46, scope: !10170)
!10722 = !DILocation(line: 283, column: 51, scope: !10170)
!10723 = !DILocation(line: 283, column: 55, scope: !10170)
!10724 = !DILocation(line: 283, column: 60, scope: !10170)
!10725 = !DILocation(line: 283, column: 31, scope: !10170)
!10726 = !DILocation(line: 283, column: 33, scope: !10170)
!10727 = !DILocation(line: 283, column: 37, scope: !10170)
!10728 = !DILocation(line: 283, column: 13, scope: !10170)
!10729 = !DILocation(line: 283, column: 42, scope: !10170)
!10730 = !DILocation(line: 284, column: 46, scope: !10170)
!10731 = !DILocation(line: 284, column: 51, scope: !10170)
!10732 = !DILocation(line: 284, column: 55, scope: !10170)
!10733 = !DILocation(line: 284, column: 60, scope: !10170)
!10734 = !DILocation(line: 284, column: 31, scope: !10170)
!10735 = !DILocation(line: 284, column: 33, scope: !10170)
!10736 = !DILocation(line: 284, column: 37, scope: !10170)
!10737 = !DILocation(line: 284, column: 13, scope: !10170)
!10738 = !DILocation(line: 284, column: 42, scope: !10170)
!10739 = !DILocation(line: 285, column: 31, scope: !10170)
!10740 = !DILocation(line: 285, column: 33, scope: !10170)
!10741 = !DILocation(line: 285, column: 37, scope: !10170)
!10742 = !DILocation(line: 285, column: 13, scope: !10170)
!10743 = !DILocation(line: 285, column: 42, scope: !10170)
!10744 = !DILocation(line: 287, column: 19, scope: !10170)
!10745 = !DILocation(line: 287, column: 25, scope: !10170)
!10746 = !DILocation(line: 287, column: 23, scope: !10170)
!10747 = !DILocation(line: 287, column: 31, scope: !10170)
!10748 = !DILocation(line: 287, column: 37, scope: !10170)
!10749 = !DILocation(line: 287, column: 35, scope: !10170)
!10750 = !DILocation(line: 287, column: 29, scope: !10170)
!10751 = !DILocation(line: 287, column: 43, scope: !10170)
!10752 = !DILocation(line: 287, column: 49, scope: !10170)
!10753 = !DILocation(line: 287, column: 47, scope: !10170)
!10754 = !DILocation(line: 287, column: 41, scope: !10170)
!10755 = !DILocation(line: 287, column: 73, scope: !10170)
!10756 = !DILocation(line: 287, column: 75, scope: !10170)
!10757 = !DILocation(line: 287, column: 79, scope: !10170)
!10758 = !DILocation(line: 287, column: 55, scope: !10170)
!10759 = !DILocation(line: 287, column: 53, scope: !10170)
!10760 = !DILocation(line: 287, column: 17, scope: !10170)
!10761 = !DILocation(line: 288, column: 21, scope: !10170)
!10762 = !DILocation(line: 288, column: 27, scope: !10170)
!10763 = !DILocation(line: 288, column: 25, scope: !10170)
!10764 = !DILocation(line: 288, column: 33, scope: !10170)
!10765 = !DILocation(line: 288, column: 18, scope: !10170)
!10766 = !DILocation(line: 289, column: 53, scope: !10170)
!10767 = !DILocation(line: 289, column: 70, scope: !10170)
!10768 = !DILocation(line: 289, column: 74, scope: !10170)
!10769 = !DILocation(line: 289, column: 67, scope: !10170)
!10770 = !DILocation(line: 289, column: 36, scope: !10170)
!10771 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10181)
!10772 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10181)
!10773 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10181)
!10774 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10181)
!10775 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10181)
!10776 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10181)
!10777 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10181)
!10778 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10181)
!10779 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10181)
!10780 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10181)
!10781 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10181)
!10782 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10181)
!10783 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10181)
!10784 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10181)
!10785 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10181)
!10786 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10181)
!10787 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10181)
!10788 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10181)
!10789 = !DILocation(line: 289, column: 18, scope: !10170)
!10790 = !DILocation(line: 289, column: 20, scope: !10170)
!10791 = !DILocation(line: 289, column: 24, scope: !10170)
!10792 = !DILocation(line: 289, column: 30, scope: !10170)
!10793 = !DILocation(line: 289, column: 28, scope: !10170)
!10794 = !DILocation(line: 289, column: 13, scope: !10170)
!10795 = !DILocation(line: 289, column: 34, scope: !10170)
!10796 = !DILocation(line: 290, column: 46, scope: !10170)
!10797 = !DILocation(line: 290, column: 51, scope: !10170)
!10798 = !DILocation(line: 290, column: 55, scope: !10170)
!10799 = !DILocation(line: 290, column: 60, scope: !10170)
!10800 = !DILocation(line: 290, column: 31, scope: !10170)
!10801 = !DILocation(line: 290, column: 33, scope: !10170)
!10802 = !DILocation(line: 290, column: 37, scope: !10170)
!10803 = !DILocation(line: 290, column: 13, scope: !10170)
!10804 = !DILocation(line: 290, column: 42, scope: !10170)
!10805 = !DILocation(line: 291, column: 46, scope: !10170)
!10806 = !DILocation(line: 291, column: 51, scope: !10170)
!10807 = !DILocation(line: 291, column: 55, scope: !10170)
!10808 = !DILocation(line: 291, column: 60, scope: !10170)
!10809 = !DILocation(line: 291, column: 31, scope: !10170)
!10810 = !DILocation(line: 291, column: 33, scope: !10170)
!10811 = !DILocation(line: 291, column: 37, scope: !10170)
!10812 = !DILocation(line: 291, column: 13, scope: !10170)
!10813 = !DILocation(line: 291, column: 42, scope: !10170)
!10814 = !DILocation(line: 292, column: 46, scope: !10170)
!10815 = !DILocation(line: 292, column: 51, scope: !10170)
!10816 = !DILocation(line: 292, column: 55, scope: !10170)
!10817 = !DILocation(line: 292, column: 60, scope: !10170)
!10818 = !DILocation(line: 292, column: 31, scope: !10170)
!10819 = !DILocation(line: 292, column: 33, scope: !10170)
!10820 = !DILocation(line: 292, column: 37, scope: !10170)
!10821 = !DILocation(line: 292, column: 13, scope: !10170)
!10822 = !DILocation(line: 292, column: 42, scope: !10170)
!10823 = !DILocation(line: 293, column: 46, scope: !10170)
!10824 = !DILocation(line: 293, column: 51, scope: !10170)
!10825 = !DILocation(line: 293, column: 55, scope: !10170)
!10826 = !DILocation(line: 293, column: 60, scope: !10170)
!10827 = !DILocation(line: 293, column: 31, scope: !10170)
!10828 = !DILocation(line: 293, column: 33, scope: !10170)
!10829 = !DILocation(line: 293, column: 37, scope: !10170)
!10830 = !DILocation(line: 293, column: 13, scope: !10170)
!10831 = !DILocation(line: 293, column: 42, scope: !10170)
!10832 = !DILocation(line: 294, column: 31, scope: !10170)
!10833 = !DILocation(line: 294, column: 33, scope: !10170)
!10834 = !DILocation(line: 294, column: 37, scope: !10170)
!10835 = !DILocation(line: 294, column: 13, scope: !10170)
!10836 = !DILocation(line: 294, column: 42, scope: !10170)
!10837 = !DILocation(line: 298, column: 20, scope: !10170)
!10838 = !DILocation(line: 298, column: 28, scope: !10170)
!10839 = !DILocation(line: 298, column: 25, scope: !10170)
!10840 = !DILocation(line: 298, column: 36, scope: !10170)
!10841 = !DILocation(line: 298, column: 33, scope: !10170)
!10842 = !DILocation(line: 298, column: 44, scope: !10170)
!10843 = !DILocation(line: 298, column: 41, scope: !10170)
!10844 = !DILocation(line: 298, column: 49, scope: !10170)
!10845 = !DILocation(line: 298, column: 54, scope: !10170)
!10846 = !DILocation(line: 298, column: 62, scope: !10170)
!10847 = !DILocation(line: 298, column: 60, scope: !10170)
!10848 = !DILocation(line: 299, column: 20, scope: !10170)
!10849 = !DILocation(line: 299, column: 28, scope: !10170)
!10850 = !DILocation(line: 299, column: 25, scope: !10170)
!10851 = !DILocation(line: 299, column: 36, scope: !10170)
!10852 = !DILocation(line: 299, column: 33, scope: !10170)
!10853 = !DILocation(line: 299, column: 44, scope: !10170)
!10854 = !DILocation(line: 299, column: 41, scope: !10170)
!10855 = !DILocation(line: 299, column: 49, scope: !10170)
!10856 = !DILocation(line: 299, column: 54, scope: !10170)
!10857 = !DILocation(line: 299, column: 62, scope: !10170)
!10858 = !DILocation(line: 299, column: 60, scope: !10170)
!10859 = !DILocation(line: 298, column: 66, scope: !10170)
!10860 = !DILocation(line: 300, column: 20, scope: !10170)
!10861 = !DILocation(line: 300, column: 28, scope: !10170)
!10862 = !DILocation(line: 300, column: 25, scope: !10170)
!10863 = !DILocation(line: 300, column: 36, scope: !10170)
!10864 = !DILocation(line: 300, column: 33, scope: !10170)
!10865 = !DILocation(line: 300, column: 44, scope: !10170)
!10866 = !DILocation(line: 300, column: 41, scope: !10170)
!10867 = !DILocation(line: 300, column: 49, scope: !10170)
!10868 = !DILocation(line: 300, column: 54, scope: !10170)
!10869 = !DILocation(line: 300, column: 62, scope: !10170)
!10870 = !DILocation(line: 300, column: 60, scope: !10170)
!10871 = !DILocation(line: 299, column: 66, scope: !10170)
!10872 = !DILocation(line: 300, column: 92, scope: !10170)
!10873 = !DILocation(line: 300, column: 70, scope: !10170)
!10874 = !DILocation(line: 300, column: 85, scope: !10170)
!10875 = !DILocation(line: 300, column: 87, scope: !10170)
!10876 = !DILocation(line: 300, column: 68, scope: !10170)
!10877 = !DILocation(line: 298, column: 15, scope: !10170)
!10878 = !DILocation(line: 301, column: 21, scope: !10170)
!10879 = !DILocation(line: 301, column: 25, scope: !10170)
!10880 = !DILocation(line: 301, column: 23, scope: !10170)
!10881 = !DILocation(line: 301, column: 31, scope: !10170)
!10882 = !DILocation(line: 301, column: 18, scope: !10170)
!10883 = !DILocation(line: 302, column: 53, scope: !10170)
!10884 = !DILocation(line: 302, column: 55, scope: !10170)
!10885 = !DILocation(line: 302, column: 50, scope: !10170)
!10886 = !DILocation(line: 302, column: 23, scope: !10170)
!10887 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10184)
!10888 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10184)
!10889 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10184)
!10890 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10184)
!10891 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10184)
!10892 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10184)
!10893 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10184)
!10894 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10184)
!10895 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10184)
!10896 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10184)
!10897 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10184)
!10898 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10184)
!10899 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10184)
!10900 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10184)
!10901 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10184)
!10902 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10184)
!10903 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10184)
!10904 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10184)
!10905 = !DILocation(line: 302, column: 18, scope: !10170)
!10906 = !DILocation(line: 302, column: 13, scope: !10170)
!10907 = !DILocation(line: 302, column: 21, scope: !10170)
!10908 = !DILocation(line: 303, column: 49, scope: !10170)
!10909 = !DILocation(line: 303, column: 54, scope: !10170)
!10910 = !DILocation(line: 303, column: 58, scope: !10170)
!10911 = !DILocation(line: 303, column: 63, scope: !10170)
!10912 = !DILocation(line: 303, column: 38, scope: !10170)
!10913 = !DILocation(line: 303, column: 40, scope: !10170)
!10914 = !DILocation(line: 303, column: 13, scope: !10170)
!10915 = !DILocation(line: 303, column: 30, scope: !10170)
!10916 = !DILocation(line: 303, column: 32, scope: !10170)
!10917 = !DILocation(line: 303, column: 45, scope: !10170)
!10918 = !DILocation(line: 304, column: 49, scope: !10170)
!10919 = !DILocation(line: 304, column: 54, scope: !10170)
!10920 = !DILocation(line: 304, column: 58, scope: !10170)
!10921 = !DILocation(line: 304, column: 63, scope: !10170)
!10922 = !DILocation(line: 304, column: 38, scope: !10170)
!10923 = !DILocation(line: 304, column: 40, scope: !10170)
!10924 = !DILocation(line: 304, column: 13, scope: !10170)
!10925 = !DILocation(line: 304, column: 30, scope: !10170)
!10926 = !DILocation(line: 304, column: 32, scope: !10170)
!10927 = !DILocation(line: 304, column: 28, scope: !10170)
!10928 = !DILocation(line: 304, column: 45, scope: !10170)
!10929 = !DILocation(line: 305, column: 49, scope: !10170)
!10930 = !DILocation(line: 305, column: 54, scope: !10170)
!10931 = !DILocation(line: 305, column: 58, scope: !10170)
!10932 = !DILocation(line: 305, column: 63, scope: !10170)
!10933 = !DILocation(line: 305, column: 38, scope: !10170)
!10934 = !DILocation(line: 305, column: 40, scope: !10170)
!10935 = !DILocation(line: 305, column: 13, scope: !10170)
!10936 = !DILocation(line: 305, column: 30, scope: !10170)
!10937 = !DILocation(line: 305, column: 32, scope: !10170)
!10938 = !DILocation(line: 305, column: 28, scope: !10170)
!10939 = !DILocation(line: 305, column: 45, scope: !10170)
!10940 = !DILocation(line: 306, column: 49, scope: !10170)
!10941 = !DILocation(line: 306, column: 54, scope: !10170)
!10942 = !DILocation(line: 306, column: 58, scope: !10170)
!10943 = !DILocation(line: 306, column: 63, scope: !10170)
!10944 = !DILocation(line: 306, column: 38, scope: !10170)
!10945 = !DILocation(line: 306, column: 40, scope: !10170)
!10946 = !DILocation(line: 306, column: 13, scope: !10170)
!10947 = !DILocation(line: 306, column: 30, scope: !10170)
!10948 = !DILocation(line: 306, column: 32, scope: !10170)
!10949 = !DILocation(line: 306, column: 28, scope: !10170)
!10950 = !DILocation(line: 306, column: 45, scope: !10170)
!10951 = !DILocation(line: 307, column: 38, scope: !10170)
!10952 = !DILocation(line: 307, column: 40, scope: !10170)
!10953 = !DILocation(line: 307, column: 13, scope: !10170)
!10954 = !DILocation(line: 307, column: 30, scope: !10170)
!10955 = !DILocation(line: 307, column: 32, scope: !10170)
!10956 = !DILocation(line: 307, column: 45, scope: !10170)
!10957 = !DILocation(line: 309, column: 20, scope: !10170)
!10958 = !DILocation(line: 309, column: 28, scope: !10170)
!10959 = !DILocation(line: 309, column: 25, scope: !10170)
!10960 = !DILocation(line: 309, column: 36, scope: !10170)
!10961 = !DILocation(line: 309, column: 33, scope: !10170)
!10962 = !DILocation(line: 309, column: 44, scope: !10170)
!10963 = !DILocation(line: 309, column: 41, scope: !10170)
!10964 = !DILocation(line: 309, column: 49, scope: !10170)
!10965 = !DILocation(line: 309, column: 54, scope: !10170)
!10966 = !DILocation(line: 309, column: 62, scope: !10170)
!10967 = !DILocation(line: 309, column: 60, scope: !10170)
!10968 = !DILocation(line: 310, column: 20, scope: !10170)
!10969 = !DILocation(line: 310, column: 28, scope: !10170)
!10970 = !DILocation(line: 310, column: 25, scope: !10170)
!10971 = !DILocation(line: 310, column: 36, scope: !10170)
!10972 = !DILocation(line: 310, column: 33, scope: !10170)
!10973 = !DILocation(line: 310, column: 44, scope: !10170)
!10974 = !DILocation(line: 310, column: 41, scope: !10170)
!10975 = !DILocation(line: 310, column: 49, scope: !10170)
!10976 = !DILocation(line: 310, column: 54, scope: !10170)
!10977 = !DILocation(line: 310, column: 62, scope: !10170)
!10978 = !DILocation(line: 310, column: 60, scope: !10170)
!10979 = !DILocation(line: 309, column: 68, scope: !10170)
!10980 = !DILocation(line: 311, column: 20, scope: !10170)
!10981 = !DILocation(line: 311, column: 28, scope: !10170)
!10982 = !DILocation(line: 311, column: 25, scope: !10170)
!10983 = !DILocation(line: 311, column: 36, scope: !10170)
!10984 = !DILocation(line: 311, column: 33, scope: !10170)
!10985 = !DILocation(line: 311, column: 44, scope: !10170)
!10986 = !DILocation(line: 311, column: 41, scope: !10170)
!10987 = !DILocation(line: 311, column: 49, scope: !10170)
!10988 = !DILocation(line: 311, column: 54, scope: !10170)
!10989 = !DILocation(line: 311, column: 62, scope: !10170)
!10990 = !DILocation(line: 311, column: 60, scope: !10170)
!10991 = !DILocation(line: 310, column: 66, scope: !10170)
!10992 = !DILocation(line: 311, column: 90, scope: !10170)
!10993 = !DILocation(line: 311, column: 68, scope: !10170)
!10994 = !DILocation(line: 311, column: 83, scope: !10170)
!10995 = !DILocation(line: 311, column: 85, scope: !10170)
!10996 = !DILocation(line: 311, column: 66, scope: !10170)
!10997 = !DILocation(line: 309, column: 15, scope: !10170)
!10998 = !DILocation(line: 312, column: 21, scope: !10170)
!10999 = !DILocation(line: 312, column: 25, scope: !10170)
!11000 = !DILocation(line: 312, column: 23, scope: !10170)
!11001 = !DILocation(line: 312, column: 31, scope: !10170)
!11002 = !DILocation(line: 312, column: 18, scope: !10170)
!11003 = !DILocation(line: 313, column: 53, scope: !10170)
!11004 = !DILocation(line: 313, column: 55, scope: !10170)
!11005 = !DILocation(line: 313, column: 50, scope: !10170)
!11006 = !DILocation(line: 313, column: 23, scope: !10170)
!11007 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !10187)
!11008 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !10187)
!11009 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !10187)
!11010 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !10187)
!11011 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !10187)
!11012 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !10187)
!11013 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !10187)
!11014 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !10187)
!11015 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !10187)
!11016 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !10187)
!11017 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !10187)
!11018 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !10187)
!11019 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !10187)
!11020 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !10187)
!11021 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !10187)
!11022 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !10187)
!11023 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !10187)
!11024 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !10187)
!11025 = !DILocation(line: 313, column: 18, scope: !10170)
!11026 = !DILocation(line: 313, column: 13, scope: !10170)
!11027 = !DILocation(line: 313, column: 21, scope: !10170)
!11028 = !DILocation(line: 314, column: 49, scope: !10170)
!11029 = !DILocation(line: 314, column: 54, scope: !10170)
!11030 = !DILocation(line: 314, column: 58, scope: !10170)
!11031 = !DILocation(line: 314, column: 63, scope: !10170)
!11032 = !DILocation(line: 314, column: 38, scope: !10170)
!11033 = !DILocation(line: 314, column: 40, scope: !10170)
!11034 = !DILocation(line: 314, column: 13, scope: !10170)
!11035 = !DILocation(line: 314, column: 30, scope: !10170)
!11036 = !DILocation(line: 314, column: 32, scope: !10170)
!11037 = !DILocation(line: 314, column: 45, scope: !10170)
!11038 = !DILocation(line: 315, column: 49, scope: !10170)
!11039 = !DILocation(line: 315, column: 54, scope: !10170)
!11040 = !DILocation(line: 315, column: 58, scope: !10170)
!11041 = !DILocation(line: 315, column: 63, scope: !10170)
!11042 = !DILocation(line: 315, column: 38, scope: !10170)
!11043 = !DILocation(line: 315, column: 40, scope: !10170)
!11044 = !DILocation(line: 315, column: 13, scope: !10170)
!11045 = !DILocation(line: 315, column: 30, scope: !10170)
!11046 = !DILocation(line: 315, column: 32, scope: !10170)
!11047 = !DILocation(line: 315, column: 28, scope: !10170)
!11048 = !DILocation(line: 315, column: 45, scope: !10170)
!11049 = !DILocation(line: 316, column: 49, scope: !10170)
!11050 = !DILocation(line: 316, column: 54, scope: !10170)
!11051 = !DILocation(line: 316, column: 58, scope: !10170)
!11052 = !DILocation(line: 316, column: 63, scope: !10170)
!11053 = !DILocation(line: 316, column: 38, scope: !10170)
!11054 = !DILocation(line: 316, column: 40, scope: !10170)
!11055 = !DILocation(line: 316, column: 13, scope: !10170)
!11056 = !DILocation(line: 316, column: 30, scope: !10170)
!11057 = !DILocation(line: 316, column: 32, scope: !10170)
!11058 = !DILocation(line: 316, column: 28, scope: !10170)
!11059 = !DILocation(line: 316, column: 45, scope: !10170)
!11060 = !DILocation(line: 317, column: 49, scope: !10170)
!11061 = !DILocation(line: 317, column: 54, scope: !10170)
!11062 = !DILocation(line: 317, column: 58, scope: !10170)
!11063 = !DILocation(line: 317, column: 63, scope: !10170)
!11064 = !DILocation(line: 317, column: 38, scope: !10170)
!11065 = !DILocation(line: 317, column: 40, scope: !10170)
!11066 = !DILocation(line: 317, column: 13, scope: !10170)
!11067 = !DILocation(line: 317, column: 30, scope: !10170)
!11068 = !DILocation(line: 317, column: 32, scope: !10170)
!11069 = !DILocation(line: 317, column: 28, scope: !10170)
!11070 = !DILocation(line: 317, column: 45, scope: !10170)
!11071 = !DILocation(line: 318, column: 38, scope: !10170)
!11072 = !DILocation(line: 318, column: 40, scope: !10170)
!11073 = !DILocation(line: 318, column: 13, scope: !10170)
!11074 = !DILocation(line: 318, column: 30, scope: !10170)
!11075 = !DILocation(line: 318, column: 32, scope: !10170)
!11076 = !DILocation(line: 318, column: 45, scope: !10170)
!11077 = !DILocation(line: 319, column: 9, scope: !10170)
!11078 = !DILocation(line: 246, column: 29, scope: !11079)
!11079 = !DILexicalBlockFile(scope: !10171, file: !266, discriminator: 2)
!11080 = !DILocation(line: 246, column: 9, scope: !11079)
!11081 = distinct !{!11081, !11082}
!11082 = !DILocation(line: 246, column: 9, scope: !10173)
!11083 = !DILocation(line: 321, column: 17, scope: !10173)
!11084 = !DILocation(line: 321, column: 20, scope: !10173)
!11085 = !DILocation(line: 321, column: 14, scope: !10173)
!11086 = !DILocation(line: 322, column: 17, scope: !10173)
!11087 = !DILocation(line: 322, column: 31, scope: !10173)
!11088 = !DILocation(line: 322, column: 14, scope: !10173)
!11089 = !DILocation(line: 323, column: 17, scope: !10173)
!11090 = !DILocation(line: 323, column: 31, scope: !10173)
!11091 = !DILocation(line: 323, column: 14, scope: !10173)
!11092 = !DILocation(line: 324, column: 17, scope: !10173)
!11093 = !DILocation(line: 324, column: 19, scope: !10173)
!11094 = !DILocation(line: 324, column: 14, scope: !10173)
!11095 = !DILocation(line: 325, column: 17, scope: !10173)
!11096 = !DILocation(line: 325, column: 19, scope: !10173)
!11097 = !DILocation(line: 325, column: 14, scope: !10173)
!11098 = !DILocation(line: 326, column: 17, scope: !10173)
!11099 = !DILocation(line: 326, column: 19, scope: !10173)
!11100 = !DILocation(line: 326, column: 14, scope: !10173)
!11101 = !DILocation(line: 327, column: 5, scope: !10173)
!11102 = !DILocation(line: 245, column: 25, scope: !11103)
!11103 = !DILexicalBlockFile(scope: !10174, file: !266, discriminator: 2)
!11104 = !DILocation(line: 245, column: 5, scope: !11103)
!11105 = distinct !{!11105, !11106}
!11106 = !DILocation(line: 245, column: 5, scope: !10167)
!11107 = !DILocation(line: 328, column: 1, scope: !10167)
!11108 = distinct !DISubprogram(name: "rgb2yuv_fsb_444p12_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!11109 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11110)
!11110 = distinct !DILocation(line: 302, column: 23, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !266, line: 246, column: 33)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !266, line: 246, column: 9)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !266, line: 246, column: 9)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !266, line: 245, column: 29)
!11115 = distinct !DILexicalBlock(scope: !11116, file: !266, line: 245, column: 5)
!11116 = distinct !DILexicalBlock(scope: !11108, file: !266, line: 245, column: 5)
!11117 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11110)
!11118 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11119)
!11119 = distinct !DILocation(line: 313, column: 23, scope: !11111)
!11120 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11119)
!11121 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11122)
!11122 = distinct !DILocation(line: 262, column: 28, scope: !11111)
!11123 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11122)
!11124 = !DILocalVariable(name: "_yuv", arg: 1, scope: !11108, file: !266, line: 208, type: !17)
!11125 = !DILocation(line: 208, column: 43, scope: !11108)
!11126 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !11108, file: !266, line: 208, type: !50)
!11127 = !DILocation(line: 208, column: 68, scope: !11108)
!11128 = !DILocalVariable(name: "rgb", arg: 3, scope: !11108, file: !266, line: 209, type: !43)
!11129 = !DILocation(line: 209, column: 38, scope: !11108)
!11130 = !DILocalVariable(name: "s", arg: 4, scope: !11108, file: !266, line: 209, type: !47)
!11131 = !DILocation(line: 209, column: 56, scope: !11108)
!11132 = !DILocalVariable(name: "w", arg: 5, scope: !11108, file: !266, line: 210, type: !52)
!11133 = !DILocation(line: 210, column: 33, scope: !11108)
!11134 = !DILocalVariable(name: "h", arg: 6, scope: !11108, file: !266, line: 210, type: !52)
!11135 = !DILocation(line: 210, column: 40, scope: !11108)
!11136 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !11108, file: !266, line: 210, type: !53)
!11137 = !DILocation(line: 210, column: 57, scope: !11108)
!11138 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !11108, file: !266, line: 211, type: !59)
!11139 = !DILocation(line: 211, column: 43, scope: !11108)
!11140 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !11108, file: !266, line: 212, type: !73)
!11141 = !DILocation(line: 212, column: 34, scope: !11108)
!11142 = !DILocalVariable(name: "yuv", scope: !11108, file: !266, line: 214, type: !22)
!11143 = !DILocation(line: 214, column: 16, scope: !11108)
!11144 = !DILocation(line: 214, column: 36, scope: !11108)
!11145 = !DILocation(line: 214, column: 22, scope: !11108)
!11146 = !DILocalVariable(name: "yuv0", scope: !11108, file: !266, line: 215, type: !23)
!11147 = !DILocation(line: 215, column: 15, scope: !11108)
!11148 = !DILocation(line: 215, column: 22, scope: !11108)
!11149 = !DILocalVariable(name: "yuv1", scope: !11108, file: !266, line: 215, type: !23)
!11150 = !DILocation(line: 215, column: 31, scope: !11108)
!11151 = !DILocation(line: 215, column: 38, scope: !11108)
!11152 = !DILocalVariable(name: "yuv2", scope: !11108, file: !266, line: 215, type: !23)
!11153 = !DILocation(line: 215, column: 47, scope: !11108)
!11154 = !DILocation(line: 215, column: 54, scope: !11108)
!11155 = !DILocalVariable(name: "rgb0", scope: !11108, file: !266, line: 216, type: !59)
!11156 = !DILocation(line: 216, column: 20, scope: !11108)
!11157 = !DILocation(line: 216, column: 27, scope: !11108)
!11158 = !DILocalVariable(name: "rgb1", scope: !11108, file: !266, line: 216, type: !59)
!11159 = !DILocation(line: 216, column: 36, scope: !11108)
!11160 = !DILocation(line: 216, column: 43, scope: !11108)
!11161 = !DILocalVariable(name: "rgb2", scope: !11108, file: !266, line: 216, type: !59)
!11162 = !DILocation(line: 216, column: 52, scope: !11108)
!11163 = !DILocation(line: 216, column: 59, scope: !11108)
!11164 = !DILocalVariable(name: "y", scope: !11108, file: !266, line: 217, type: !52)
!11165 = !DILocation(line: 217, column: 9, scope: !11108)
!11166 = !DILocalVariable(name: "x", scope: !11108, file: !266, line: 217, type: !52)
!11167 = !DILocation(line: 217, column: 12, scope: !11108)
!11168 = !DILocalVariable(name: "sh", scope: !11108, file: !266, line: 218, type: !343)
!11169 = !DILocation(line: 218, column: 15, scope: !11108)
!11170 = !DILocalVariable(name: "rnd", scope: !11108, file: !266, line: 219, type: !343)
!11171 = !DILocation(line: 219, column: 15, scope: !11108)
!11172 = !DILocalVariable(name: "cry", scope: !11108, file: !266, line: 220, type: !52)
!11173 = !DILocation(line: 220, column: 9, scope: !11108)
!11174 = !DILocation(line: 220, column: 15, scope: !11108)
!11175 = !DILocalVariable(name: "cgy", scope: !11108, file: !266, line: 221, type: !52)
!11176 = !DILocation(line: 221, column: 9, scope: !11108)
!11177 = !DILocation(line: 221, column: 15, scope: !11108)
!11178 = !DILocalVariable(name: "cby", scope: !11108, file: !266, line: 222, type: !52)
!11179 = !DILocation(line: 222, column: 9, scope: !11108)
!11180 = !DILocation(line: 222, column: 15, scope: !11108)
!11181 = !DILocalVariable(name: "cru", scope: !11108, file: !266, line: 223, type: !52)
!11182 = !DILocation(line: 223, column: 9, scope: !11108)
!11183 = !DILocation(line: 223, column: 15, scope: !11108)
!11184 = !DILocalVariable(name: "cgu", scope: !11108, file: !266, line: 224, type: !52)
!11185 = !DILocation(line: 224, column: 9, scope: !11108)
!11186 = !DILocation(line: 224, column: 15, scope: !11108)
!11187 = !DILocalVariable(name: "cburv", scope: !11108, file: !266, line: 225, type: !52)
!11188 = !DILocation(line: 225, column: 9, scope: !11108)
!11189 = !DILocation(line: 225, column: 17, scope: !11108)
!11190 = !DILocalVariable(name: "cgv", scope: !11108, file: !266, line: 226, type: !52)
!11191 = !DILocation(line: 226, column: 9, scope: !11108)
!11192 = !DILocation(line: 226, column: 15, scope: !11108)
!11193 = !DILocalVariable(name: "cbv", scope: !11108, file: !266, line: 227, type: !52)
!11194 = !DILocation(line: 227, column: 9, scope: !11108)
!11195 = !DILocation(line: 227, column: 15, scope: !11108)
!11196 = !DILocalVariable(name: "s0", scope: !11108, file: !266, line: 228, type: !47)
!11197 = !DILocation(line: 228, column: 15, scope: !11108)
!11198 = !DILocation(line: 228, column: 20, scope: !11108)
!11199 = !DILocation(line: 228, column: 34, scope: !11108)
!11200 = !DILocalVariable(name: "uv_offset", scope: !11108, file: !266, line: 229, type: !343)
!11201 = !DILocation(line: 229, column: 15, scope: !11108)
!11202 = !DILocalVariable(name: "mask", scope: !11108, file: !266, line: 230, type: !4656)
!11203 = !DILocation(line: 230, column: 14, scope: !11108)
!11204 = !DILocation(line: 232, column: 12, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11108, file: !266, line: 232, column: 5)
!11206 = !DILocation(line: 232, column: 10, scope: !11205)
!11207 = !DILocation(line: 232, column: 17, scope: !11208)
!11208 = !DILexicalBlockFile(scope: !11209, file: !266, discriminator: 1)
!11209 = distinct !DILexicalBlock(scope: !11205, file: !266, line: 232, column: 5)
!11210 = !DILocation(line: 232, column: 21, scope: !11208)
!11211 = !DILocation(line: 232, column: 19, scope: !11208)
!11212 = !DILocation(line: 232, column: 5, scope: !11208)
!11213 = !DILocation(line: 234, column: 27, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11209, file: !266, line: 232, column: 29)
!11215 = !DILocation(line: 234, column: 9, scope: !11214)
!11216 = !DILocation(line: 234, column: 30, scope: !11214)
!11217 = !DILocation(line: 233, column: 27, scope: !11214)
!11218 = !DILocation(line: 233, column: 9, scope: !11214)
!11219 = !DILocation(line: 233, column: 30, scope: !11214)
!11220 = !DILocation(line: 235, column: 5, scope: !11214)
!11221 = !DILocation(line: 232, column: 25, scope: !11222)
!11222 = !DILexicalBlockFile(scope: !11209, file: !266, discriminator: 2)
!11223 = !DILocation(line: 232, column: 5, scope: !11222)
!11224 = distinct !{!11224, !11225}
!11225 = !DILocation(line: 232, column: 5, scope: !11108)
!11226 = !DILocation(line: 237, column: 58, scope: !11108)
!11227 = !DILocation(line: 237, column: 61, scope: !11108)
!11228 = !DILocation(line: 237, column: 72, scope: !11108)
!11229 = !DILocation(line: 237, column: 77, scope: !11108)
!11230 = !DILocation(line: 237, column: 7, scope: !11108)
!11231 = !DILocation(line: 238, column: 58, scope: !11108)
!11232 = !DILocation(line: 238, column: 61, scope: !11108)
!11233 = !DILocation(line: 238, column: 72, scope: !11108)
!11234 = !DILocation(line: 238, column: 77, scope: !11108)
!11235 = !DILocation(line: 238, column: 7, scope: !11108)
!11236 = !DILocation(line: 239, column: 12, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11108, file: !266, line: 239, column: 5)
!11238 = !DILocation(line: 239, column: 10, scope: !11237)
!11239 = !DILocation(line: 239, column: 17, scope: !11240)
!11240 = !DILexicalBlockFile(scope: !11241, file: !266, discriminator: 1)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !266, line: 239, column: 5)
!11242 = !DILocation(line: 239, column: 21, scope: !11240)
!11243 = !DILocation(line: 239, column: 19, scope: !11240)
!11244 = !DILocation(line: 239, column: 5, scope: !11240)
!11245 = !DILocation(line: 243, column: 27, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11241, file: !266, line: 239, column: 29)
!11247 = !DILocation(line: 243, column: 9, scope: !11246)
!11248 = !DILocation(line: 243, column: 30, scope: !11246)
!11249 = !DILocation(line: 242, column: 27, scope: !11246)
!11250 = !DILocation(line: 242, column: 9, scope: !11246)
!11251 = !DILocation(line: 242, column: 30, scope: !11246)
!11252 = !DILocation(line: 241, column: 27, scope: !11246)
!11253 = !DILocation(line: 241, column: 9, scope: !11246)
!11254 = !DILocation(line: 241, column: 30, scope: !11246)
!11255 = !DILocation(line: 240, column: 27, scope: !11246)
!11256 = !DILocation(line: 240, column: 9, scope: !11246)
!11257 = !DILocation(line: 240, column: 30, scope: !11246)
!11258 = !DILocation(line: 244, column: 5, scope: !11246)
!11259 = !DILocation(line: 239, column: 25, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11241, file: !266, discriminator: 2)
!11261 = !DILocation(line: 239, column: 5, scope: !11260)
!11262 = distinct !{!11262, !11263}
!11263 = !DILocation(line: 239, column: 5, scope: !11108)
!11264 = !DILocation(line: 245, column: 12, scope: !11116)
!11265 = !DILocation(line: 245, column: 10, scope: !11116)
!11266 = !DILocation(line: 245, column: 17, scope: !11267)
!11267 = !DILexicalBlockFile(scope: !11115, file: !266, discriminator: 1)
!11268 = !DILocation(line: 245, column: 21, scope: !11267)
!11269 = !DILocation(line: 245, column: 19, scope: !11267)
!11270 = !DILocation(line: 245, column: 5, scope: !11267)
!11271 = !DILocation(line: 246, column: 16, scope: !11113)
!11272 = !DILocation(line: 246, column: 14, scope: !11113)
!11273 = !DILocation(line: 246, column: 21, scope: !11274)
!11274 = !DILexicalBlockFile(scope: !11112, file: !266, discriminator: 1)
!11275 = !DILocation(line: 246, column: 25, scope: !11274)
!11276 = !DILocation(line: 246, column: 23, scope: !11274)
!11277 = !DILocation(line: 246, column: 9, scope: !11274)
!11278 = !DILocalVariable(name: "r00", scope: !11111, file: !266, line: 247, type: !52)
!11279 = !DILocation(line: 247, column: 17, scope: !11111)
!11280 = !DILocation(line: 247, column: 28, scope: !11111)
!11281 = !DILocation(line: 247, column: 30, scope: !11111)
!11282 = !DILocation(line: 247, column: 23, scope: !11111)
!11283 = !DILocalVariable(name: "g00", scope: !11111, file: !266, line: 247, type: !52)
!11284 = !DILocation(line: 247, column: 37, scope: !11111)
!11285 = !DILocation(line: 247, column: 48, scope: !11111)
!11286 = !DILocation(line: 247, column: 50, scope: !11111)
!11287 = !DILocation(line: 247, column: 43, scope: !11111)
!11288 = !DILocalVariable(name: "b00", scope: !11111, file: !266, line: 247, type: !52)
!11289 = !DILocation(line: 247, column: 57, scope: !11111)
!11290 = !DILocation(line: 247, column: 68, scope: !11111)
!11291 = !DILocation(line: 247, column: 70, scope: !11111)
!11292 = !DILocation(line: 247, column: 63, scope: !11111)
!11293 = !DILocalVariable(name: "y00", scope: !11111, file: !266, line: 248, type: !52)
!11294 = !DILocation(line: 248, column: 17, scope: !11111)
!11295 = !DILocalVariable(name: "u", scope: !11111, file: !266, line: 258, type: !52)
!11296 = !DILocation(line: 258, column: 17, scope: !11111)
!11297 = !DILocalVariable(name: "v", scope: !11111, file: !266, line: 258, type: !52)
!11298 = !DILocation(line: 258, column: 20, scope: !11111)
!11299 = !DILocalVariable(name: "diff", scope: !11111, file: !266, line: 258, type: !52)
!11300 = !DILocation(line: 258, column: 23, scope: !11111)
!11301 = !DILocation(line: 260, column: 19, scope: !11111)
!11302 = !DILocation(line: 260, column: 25, scope: !11111)
!11303 = !DILocation(line: 260, column: 23, scope: !11111)
!11304 = !DILocation(line: 260, column: 31, scope: !11111)
!11305 = !DILocation(line: 260, column: 37, scope: !11111)
!11306 = !DILocation(line: 260, column: 35, scope: !11111)
!11307 = !DILocation(line: 260, column: 29, scope: !11111)
!11308 = !DILocation(line: 260, column: 43, scope: !11111)
!11309 = !DILocation(line: 260, column: 49, scope: !11111)
!11310 = !DILocation(line: 260, column: 47, scope: !11111)
!11311 = !DILocation(line: 260, column: 41, scope: !11111)
!11312 = !DILocation(line: 260, column: 78, scope: !11111)
!11313 = !DILocation(line: 260, column: 80, scope: !11111)
!11314 = !DILocation(line: 260, column: 55, scope: !11111)
!11315 = !DILocation(line: 260, column: 70, scope: !11111)
!11316 = !DILocation(line: 260, column: 72, scope: !11111)
!11317 = !DILocation(line: 260, column: 53, scope: !11111)
!11318 = !DILocation(line: 260, column: 17, scope: !11111)
!11319 = !DILocation(line: 261, column: 21, scope: !11111)
!11320 = !DILocation(line: 261, column: 27, scope: !11111)
!11321 = !DILocation(line: 261, column: 25, scope: !11111)
!11322 = !DILocation(line: 261, column: 33, scope: !11111)
!11323 = !DILocation(line: 261, column: 18, scope: !11111)
!11324 = !DILocation(line: 262, column: 45, scope: !11111)
!11325 = !DILocation(line: 262, column: 62, scope: !11111)
!11326 = !DILocation(line: 262, column: 66, scope: !11111)
!11327 = !DILocation(line: 262, column: 59, scope: !11111)
!11328 = !DILocation(line: 262, column: 28, scope: !11111)
!11329 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11122)
!11330 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11122)
!11331 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11122)
!11332 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11122)
!11333 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11122)
!11334 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11122)
!11335 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11122)
!11336 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11122)
!11337 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11122)
!11338 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11122)
!11339 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11122)
!11340 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11122)
!11341 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11122)
!11342 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11122)
!11343 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11122)
!11344 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11122)
!11345 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11122)
!11346 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11122)
!11347 = !DILocation(line: 262, column: 18, scope: !11111)
!11348 = !DILocation(line: 262, column: 20, scope: !11111)
!11349 = !DILocation(line: 262, column: 13, scope: !11111)
!11350 = !DILocation(line: 262, column: 26, scope: !11111)
!11351 = !DILocation(line: 263, column: 57, scope: !11111)
!11352 = !DILocation(line: 263, column: 62, scope: !11111)
!11353 = !DILocation(line: 263, column: 66, scope: !11111)
!11354 = !DILocation(line: 263, column: 71, scope: !11111)
!11355 = !DILocation(line: 263, column: 40, scope: !11111)
!11356 = !DILocation(line: 263, column: 42, scope: !11111)
!11357 = !DILocation(line: 263, column: 48, scope: !11111)
!11358 = !DILocation(line: 263, column: 13, scope: !11111)
!11359 = !DILocation(line: 263, column: 30, scope: !11111)
!11360 = !DILocation(line: 263, column: 32, scope: !11111)
!11361 = !DILocation(line: 263, column: 53, scope: !11111)
!11362 = !DILocation(line: 264, column: 57, scope: !11111)
!11363 = !DILocation(line: 264, column: 62, scope: !11111)
!11364 = !DILocation(line: 264, column: 66, scope: !11111)
!11365 = !DILocation(line: 264, column: 71, scope: !11111)
!11366 = !DILocation(line: 264, column: 40, scope: !11111)
!11367 = !DILocation(line: 264, column: 42, scope: !11111)
!11368 = !DILocation(line: 264, column: 48, scope: !11111)
!11369 = !DILocation(line: 264, column: 13, scope: !11111)
!11370 = !DILocation(line: 264, column: 30, scope: !11111)
!11371 = !DILocation(line: 264, column: 32, scope: !11111)
!11372 = !DILocation(line: 264, column: 28, scope: !11111)
!11373 = !DILocation(line: 264, column: 53, scope: !11111)
!11374 = !DILocation(line: 265, column: 57, scope: !11111)
!11375 = !DILocation(line: 265, column: 62, scope: !11111)
!11376 = !DILocation(line: 265, column: 66, scope: !11111)
!11377 = !DILocation(line: 265, column: 71, scope: !11111)
!11378 = !DILocation(line: 265, column: 40, scope: !11111)
!11379 = !DILocation(line: 265, column: 42, scope: !11111)
!11380 = !DILocation(line: 265, column: 48, scope: !11111)
!11381 = !DILocation(line: 265, column: 13, scope: !11111)
!11382 = !DILocation(line: 265, column: 30, scope: !11111)
!11383 = !DILocation(line: 265, column: 32, scope: !11111)
!11384 = !DILocation(line: 265, column: 28, scope: !11111)
!11385 = !DILocation(line: 265, column: 53, scope: !11111)
!11386 = !DILocation(line: 266, column: 57, scope: !11111)
!11387 = !DILocation(line: 266, column: 62, scope: !11111)
!11388 = !DILocation(line: 266, column: 66, scope: !11111)
!11389 = !DILocation(line: 266, column: 71, scope: !11111)
!11390 = !DILocation(line: 266, column: 40, scope: !11111)
!11391 = !DILocation(line: 266, column: 42, scope: !11111)
!11392 = !DILocation(line: 266, column: 48, scope: !11111)
!11393 = !DILocation(line: 266, column: 13, scope: !11111)
!11394 = !DILocation(line: 266, column: 30, scope: !11111)
!11395 = !DILocation(line: 266, column: 32, scope: !11111)
!11396 = !DILocation(line: 266, column: 28, scope: !11111)
!11397 = !DILocation(line: 266, column: 53, scope: !11111)
!11398 = !DILocation(line: 267, column: 40, scope: !11111)
!11399 = !DILocation(line: 267, column: 42, scope: !11111)
!11400 = !DILocation(line: 267, column: 48, scope: !11111)
!11401 = !DILocation(line: 267, column: 13, scope: !11111)
!11402 = !DILocation(line: 267, column: 30, scope: !11111)
!11403 = !DILocation(line: 267, column: 32, scope: !11111)
!11404 = !DILocation(line: 267, column: 53, scope: !11111)
!11405 = !DILocation(line: 298, column: 18, scope: !11111)
!11406 = !DILocation(line: 298, column: 25, scope: !11111)
!11407 = !DILocation(line: 298, column: 23, scope: !11111)
!11408 = !DILocation(line: 299, column: 18, scope: !11111)
!11409 = !DILocation(line: 299, column: 25, scope: !11111)
!11410 = !DILocation(line: 299, column: 23, scope: !11111)
!11411 = !DILocation(line: 298, column: 29, scope: !11111)
!11412 = !DILocation(line: 300, column: 18, scope: !11111)
!11413 = !DILocation(line: 300, column: 25, scope: !11111)
!11414 = !DILocation(line: 300, column: 23, scope: !11111)
!11415 = !DILocation(line: 299, column: 29, scope: !11111)
!11416 = !DILocation(line: 300, column: 55, scope: !11111)
!11417 = !DILocation(line: 300, column: 33, scope: !11111)
!11418 = !DILocation(line: 300, column: 48, scope: !11111)
!11419 = !DILocation(line: 300, column: 50, scope: !11111)
!11420 = !DILocation(line: 300, column: 31, scope: !11111)
!11421 = !DILocation(line: 298, column: 15, scope: !11111)
!11422 = !DILocation(line: 301, column: 21, scope: !11111)
!11423 = !DILocation(line: 301, column: 25, scope: !11111)
!11424 = !DILocation(line: 301, column: 23, scope: !11111)
!11425 = !DILocation(line: 301, column: 31, scope: !11111)
!11426 = !DILocation(line: 301, column: 18, scope: !11111)
!11427 = !DILocation(line: 302, column: 53, scope: !11111)
!11428 = !DILocation(line: 302, column: 55, scope: !11111)
!11429 = !DILocation(line: 302, column: 50, scope: !11111)
!11430 = !DILocation(line: 302, column: 23, scope: !11111)
!11431 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11110)
!11432 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11110)
!11433 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11110)
!11434 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11110)
!11435 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11110)
!11436 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11110)
!11437 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11110)
!11438 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11110)
!11439 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11110)
!11440 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11110)
!11441 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11110)
!11442 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11110)
!11443 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11110)
!11444 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11110)
!11445 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11110)
!11446 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11110)
!11447 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11110)
!11448 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11110)
!11449 = !DILocation(line: 302, column: 18, scope: !11111)
!11450 = !DILocation(line: 302, column: 13, scope: !11111)
!11451 = !DILocation(line: 302, column: 21, scope: !11111)
!11452 = !DILocation(line: 303, column: 49, scope: !11111)
!11453 = !DILocation(line: 303, column: 54, scope: !11111)
!11454 = !DILocation(line: 303, column: 58, scope: !11111)
!11455 = !DILocation(line: 303, column: 63, scope: !11111)
!11456 = !DILocation(line: 303, column: 38, scope: !11111)
!11457 = !DILocation(line: 303, column: 40, scope: !11111)
!11458 = !DILocation(line: 303, column: 13, scope: !11111)
!11459 = !DILocation(line: 303, column: 30, scope: !11111)
!11460 = !DILocation(line: 303, column: 32, scope: !11111)
!11461 = !DILocation(line: 303, column: 45, scope: !11111)
!11462 = !DILocation(line: 304, column: 49, scope: !11111)
!11463 = !DILocation(line: 304, column: 54, scope: !11111)
!11464 = !DILocation(line: 304, column: 58, scope: !11111)
!11465 = !DILocation(line: 304, column: 63, scope: !11111)
!11466 = !DILocation(line: 304, column: 38, scope: !11111)
!11467 = !DILocation(line: 304, column: 40, scope: !11111)
!11468 = !DILocation(line: 304, column: 13, scope: !11111)
!11469 = !DILocation(line: 304, column: 30, scope: !11111)
!11470 = !DILocation(line: 304, column: 32, scope: !11111)
!11471 = !DILocation(line: 304, column: 28, scope: !11111)
!11472 = !DILocation(line: 304, column: 45, scope: !11111)
!11473 = !DILocation(line: 305, column: 49, scope: !11111)
!11474 = !DILocation(line: 305, column: 54, scope: !11111)
!11475 = !DILocation(line: 305, column: 58, scope: !11111)
!11476 = !DILocation(line: 305, column: 63, scope: !11111)
!11477 = !DILocation(line: 305, column: 38, scope: !11111)
!11478 = !DILocation(line: 305, column: 40, scope: !11111)
!11479 = !DILocation(line: 305, column: 13, scope: !11111)
!11480 = !DILocation(line: 305, column: 30, scope: !11111)
!11481 = !DILocation(line: 305, column: 32, scope: !11111)
!11482 = !DILocation(line: 305, column: 28, scope: !11111)
!11483 = !DILocation(line: 305, column: 45, scope: !11111)
!11484 = !DILocation(line: 306, column: 49, scope: !11111)
!11485 = !DILocation(line: 306, column: 54, scope: !11111)
!11486 = !DILocation(line: 306, column: 58, scope: !11111)
!11487 = !DILocation(line: 306, column: 63, scope: !11111)
!11488 = !DILocation(line: 306, column: 38, scope: !11111)
!11489 = !DILocation(line: 306, column: 40, scope: !11111)
!11490 = !DILocation(line: 306, column: 13, scope: !11111)
!11491 = !DILocation(line: 306, column: 30, scope: !11111)
!11492 = !DILocation(line: 306, column: 32, scope: !11111)
!11493 = !DILocation(line: 306, column: 28, scope: !11111)
!11494 = !DILocation(line: 306, column: 45, scope: !11111)
!11495 = !DILocation(line: 307, column: 38, scope: !11111)
!11496 = !DILocation(line: 307, column: 40, scope: !11111)
!11497 = !DILocation(line: 307, column: 13, scope: !11111)
!11498 = !DILocation(line: 307, column: 30, scope: !11111)
!11499 = !DILocation(line: 307, column: 32, scope: !11111)
!11500 = !DILocation(line: 307, column: 45, scope: !11111)
!11501 = !DILocation(line: 309, column: 18, scope: !11111)
!11502 = !DILocation(line: 309, column: 25, scope: !11111)
!11503 = !DILocation(line: 309, column: 23, scope: !11111)
!11504 = !DILocation(line: 310, column: 18, scope: !11111)
!11505 = !DILocation(line: 310, column: 25, scope: !11111)
!11506 = !DILocation(line: 310, column: 23, scope: !11111)
!11507 = !DILocation(line: 309, column: 31, scope: !11111)
!11508 = !DILocation(line: 311, column: 18, scope: !11111)
!11509 = !DILocation(line: 311, column: 25, scope: !11111)
!11510 = !DILocation(line: 311, column: 23, scope: !11111)
!11511 = !DILocation(line: 310, column: 29, scope: !11111)
!11512 = !DILocation(line: 311, column: 53, scope: !11111)
!11513 = !DILocation(line: 311, column: 31, scope: !11111)
!11514 = !DILocation(line: 311, column: 46, scope: !11111)
!11515 = !DILocation(line: 311, column: 48, scope: !11111)
!11516 = !DILocation(line: 311, column: 29, scope: !11111)
!11517 = !DILocation(line: 309, column: 15, scope: !11111)
!11518 = !DILocation(line: 312, column: 21, scope: !11111)
!11519 = !DILocation(line: 312, column: 25, scope: !11111)
!11520 = !DILocation(line: 312, column: 23, scope: !11111)
!11521 = !DILocation(line: 312, column: 31, scope: !11111)
!11522 = !DILocation(line: 312, column: 18, scope: !11111)
!11523 = !DILocation(line: 313, column: 53, scope: !11111)
!11524 = !DILocation(line: 313, column: 55, scope: !11111)
!11525 = !DILocation(line: 313, column: 50, scope: !11111)
!11526 = !DILocation(line: 313, column: 23, scope: !11111)
!11527 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11119)
!11528 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11119)
!11529 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11119)
!11530 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11119)
!11531 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11119)
!11532 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11119)
!11533 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11119)
!11534 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11119)
!11535 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11119)
!11536 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11119)
!11537 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11119)
!11538 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11119)
!11539 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11119)
!11540 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11119)
!11541 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11119)
!11542 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11119)
!11543 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11119)
!11544 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11119)
!11545 = !DILocation(line: 313, column: 18, scope: !11111)
!11546 = !DILocation(line: 313, column: 13, scope: !11111)
!11547 = !DILocation(line: 313, column: 21, scope: !11111)
!11548 = !DILocation(line: 314, column: 49, scope: !11111)
!11549 = !DILocation(line: 314, column: 54, scope: !11111)
!11550 = !DILocation(line: 314, column: 58, scope: !11111)
!11551 = !DILocation(line: 314, column: 63, scope: !11111)
!11552 = !DILocation(line: 314, column: 38, scope: !11111)
!11553 = !DILocation(line: 314, column: 40, scope: !11111)
!11554 = !DILocation(line: 314, column: 13, scope: !11111)
!11555 = !DILocation(line: 314, column: 30, scope: !11111)
!11556 = !DILocation(line: 314, column: 32, scope: !11111)
!11557 = !DILocation(line: 314, column: 45, scope: !11111)
!11558 = !DILocation(line: 315, column: 49, scope: !11111)
!11559 = !DILocation(line: 315, column: 54, scope: !11111)
!11560 = !DILocation(line: 315, column: 58, scope: !11111)
!11561 = !DILocation(line: 315, column: 63, scope: !11111)
!11562 = !DILocation(line: 315, column: 38, scope: !11111)
!11563 = !DILocation(line: 315, column: 40, scope: !11111)
!11564 = !DILocation(line: 315, column: 13, scope: !11111)
!11565 = !DILocation(line: 315, column: 30, scope: !11111)
!11566 = !DILocation(line: 315, column: 32, scope: !11111)
!11567 = !DILocation(line: 315, column: 28, scope: !11111)
!11568 = !DILocation(line: 315, column: 45, scope: !11111)
!11569 = !DILocation(line: 316, column: 49, scope: !11111)
!11570 = !DILocation(line: 316, column: 54, scope: !11111)
!11571 = !DILocation(line: 316, column: 58, scope: !11111)
!11572 = !DILocation(line: 316, column: 63, scope: !11111)
!11573 = !DILocation(line: 316, column: 38, scope: !11111)
!11574 = !DILocation(line: 316, column: 40, scope: !11111)
!11575 = !DILocation(line: 316, column: 13, scope: !11111)
!11576 = !DILocation(line: 316, column: 30, scope: !11111)
!11577 = !DILocation(line: 316, column: 32, scope: !11111)
!11578 = !DILocation(line: 316, column: 28, scope: !11111)
!11579 = !DILocation(line: 316, column: 45, scope: !11111)
!11580 = !DILocation(line: 317, column: 49, scope: !11111)
!11581 = !DILocation(line: 317, column: 54, scope: !11111)
!11582 = !DILocation(line: 317, column: 58, scope: !11111)
!11583 = !DILocation(line: 317, column: 63, scope: !11111)
!11584 = !DILocation(line: 317, column: 38, scope: !11111)
!11585 = !DILocation(line: 317, column: 40, scope: !11111)
!11586 = !DILocation(line: 317, column: 13, scope: !11111)
!11587 = !DILocation(line: 317, column: 30, scope: !11111)
!11588 = !DILocation(line: 317, column: 32, scope: !11111)
!11589 = !DILocation(line: 317, column: 28, scope: !11111)
!11590 = !DILocation(line: 317, column: 45, scope: !11111)
!11591 = !DILocation(line: 318, column: 38, scope: !11111)
!11592 = !DILocation(line: 318, column: 40, scope: !11111)
!11593 = !DILocation(line: 318, column: 13, scope: !11111)
!11594 = !DILocation(line: 318, column: 30, scope: !11111)
!11595 = !DILocation(line: 318, column: 32, scope: !11111)
!11596 = !DILocation(line: 318, column: 45, scope: !11111)
!11597 = !DILocation(line: 319, column: 9, scope: !11111)
!11598 = !DILocation(line: 246, column: 29, scope: !11599)
!11599 = !DILexicalBlockFile(scope: !11112, file: !266, discriminator: 2)
!11600 = !DILocation(line: 246, column: 9, scope: !11599)
!11601 = distinct !{!11601, !11602}
!11602 = !DILocation(line: 246, column: 9, scope: !11114)
!11603 = !DILocation(line: 321, column: 17, scope: !11114)
!11604 = !DILocation(line: 321, column: 20, scope: !11114)
!11605 = !DILocation(line: 321, column: 14, scope: !11114)
!11606 = !DILocation(line: 322, column: 17, scope: !11114)
!11607 = !DILocation(line: 322, column: 31, scope: !11114)
!11608 = !DILocation(line: 322, column: 14, scope: !11114)
!11609 = !DILocation(line: 323, column: 17, scope: !11114)
!11610 = !DILocation(line: 323, column: 31, scope: !11114)
!11611 = !DILocation(line: 323, column: 14, scope: !11114)
!11612 = !DILocation(line: 324, column: 17, scope: !11114)
!11613 = !DILocation(line: 324, column: 19, scope: !11114)
!11614 = !DILocation(line: 324, column: 14, scope: !11114)
!11615 = !DILocation(line: 325, column: 17, scope: !11114)
!11616 = !DILocation(line: 325, column: 19, scope: !11114)
!11617 = !DILocation(line: 325, column: 14, scope: !11114)
!11618 = !DILocation(line: 326, column: 17, scope: !11114)
!11619 = !DILocation(line: 326, column: 19, scope: !11114)
!11620 = !DILocation(line: 326, column: 14, scope: !11114)
!11621 = !DILocation(line: 327, column: 5, scope: !11114)
!11622 = !DILocation(line: 245, column: 25, scope: !11623)
!11623 = !DILexicalBlockFile(scope: !11115, file: !266, discriminator: 2)
!11624 = !DILocation(line: 245, column: 5, scope: !11623)
!11625 = distinct !{!11625, !11626}
!11626 = !DILocation(line: 245, column: 5, scope: !11108)
!11627 = !DILocation(line: 328, column: 1, scope: !11108)
!11628 = distinct !DISubprogram(name: "rgb2yuv_fsb_422p12_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!11629 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11630)
!11630 = distinct !DILocation(line: 271, column: 31, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !266, line: 246, column: 33)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !266, line: 246, column: 9)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !266, line: 246, column: 9)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !266, line: 245, column: 29)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !266, line: 245, column: 5)
!11636 = distinct !DILexicalBlock(scope: !11628, file: !266, line: 245, column: 5)
!11637 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11630)
!11638 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11639)
!11639 = distinct !DILocation(line: 302, column: 23, scope: !11631)
!11640 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11639)
!11641 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11642)
!11642 = distinct !DILocation(line: 313, column: 23, scope: !11631)
!11643 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11642)
!11644 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !11645)
!11645 = distinct !DILocation(line: 262, column: 28, scope: !11631)
!11646 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !11645)
!11647 = !DILocalVariable(name: "_yuv", arg: 1, scope: !11628, file: !266, line: 208, type: !17)
!11648 = !DILocation(line: 208, column: 43, scope: !11628)
!11649 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !11628, file: !266, line: 208, type: !50)
!11650 = !DILocation(line: 208, column: 68, scope: !11628)
!11651 = !DILocalVariable(name: "rgb", arg: 3, scope: !11628, file: !266, line: 209, type: !43)
!11652 = !DILocation(line: 209, column: 38, scope: !11628)
!11653 = !DILocalVariable(name: "s", arg: 4, scope: !11628, file: !266, line: 209, type: !47)
!11654 = !DILocation(line: 209, column: 56, scope: !11628)
!11655 = !DILocalVariable(name: "w", arg: 5, scope: !11628, file: !266, line: 210, type: !52)
!11656 = !DILocation(line: 210, column: 33, scope: !11628)
!11657 = !DILocalVariable(name: "h", arg: 6, scope: !11628, file: !266, line: 210, type: !52)
!11658 = !DILocation(line: 210, column: 40, scope: !11628)
!11659 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !11628, file: !266, line: 210, type: !53)
!11660 = !DILocation(line: 210, column: 57, scope: !11628)
!11661 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !11628, file: !266, line: 211, type: !59)
!11662 = !DILocation(line: 211, column: 43, scope: !11628)
!11663 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !11628, file: !266, line: 212, type: !73)
!11664 = !DILocation(line: 212, column: 34, scope: !11628)
!11665 = !DILocalVariable(name: "yuv", scope: !11628, file: !266, line: 214, type: !22)
!11666 = !DILocation(line: 214, column: 16, scope: !11628)
!11667 = !DILocation(line: 214, column: 36, scope: !11628)
!11668 = !DILocation(line: 214, column: 22, scope: !11628)
!11669 = !DILocalVariable(name: "yuv0", scope: !11628, file: !266, line: 215, type: !23)
!11670 = !DILocation(line: 215, column: 15, scope: !11628)
!11671 = !DILocation(line: 215, column: 22, scope: !11628)
!11672 = !DILocalVariable(name: "yuv1", scope: !11628, file: !266, line: 215, type: !23)
!11673 = !DILocation(line: 215, column: 31, scope: !11628)
!11674 = !DILocation(line: 215, column: 38, scope: !11628)
!11675 = !DILocalVariable(name: "yuv2", scope: !11628, file: !266, line: 215, type: !23)
!11676 = !DILocation(line: 215, column: 47, scope: !11628)
!11677 = !DILocation(line: 215, column: 54, scope: !11628)
!11678 = !DILocalVariable(name: "rgb0", scope: !11628, file: !266, line: 216, type: !59)
!11679 = !DILocation(line: 216, column: 20, scope: !11628)
!11680 = !DILocation(line: 216, column: 27, scope: !11628)
!11681 = !DILocalVariable(name: "rgb1", scope: !11628, file: !266, line: 216, type: !59)
!11682 = !DILocation(line: 216, column: 36, scope: !11628)
!11683 = !DILocation(line: 216, column: 43, scope: !11628)
!11684 = !DILocalVariable(name: "rgb2", scope: !11628, file: !266, line: 216, type: !59)
!11685 = !DILocation(line: 216, column: 52, scope: !11628)
!11686 = !DILocation(line: 216, column: 59, scope: !11628)
!11687 = !DILocalVariable(name: "y", scope: !11628, file: !266, line: 217, type: !52)
!11688 = !DILocation(line: 217, column: 9, scope: !11628)
!11689 = !DILocalVariable(name: "x", scope: !11628, file: !266, line: 217, type: !52)
!11690 = !DILocation(line: 217, column: 12, scope: !11628)
!11691 = !DILocalVariable(name: "sh", scope: !11628, file: !266, line: 218, type: !343)
!11692 = !DILocation(line: 218, column: 15, scope: !11628)
!11693 = !DILocalVariable(name: "rnd", scope: !11628, file: !266, line: 219, type: !343)
!11694 = !DILocation(line: 219, column: 15, scope: !11628)
!11695 = !DILocalVariable(name: "cry", scope: !11628, file: !266, line: 220, type: !52)
!11696 = !DILocation(line: 220, column: 9, scope: !11628)
!11697 = !DILocation(line: 220, column: 15, scope: !11628)
!11698 = !DILocalVariable(name: "cgy", scope: !11628, file: !266, line: 221, type: !52)
!11699 = !DILocation(line: 221, column: 9, scope: !11628)
!11700 = !DILocation(line: 221, column: 15, scope: !11628)
!11701 = !DILocalVariable(name: "cby", scope: !11628, file: !266, line: 222, type: !52)
!11702 = !DILocation(line: 222, column: 9, scope: !11628)
!11703 = !DILocation(line: 222, column: 15, scope: !11628)
!11704 = !DILocalVariable(name: "cru", scope: !11628, file: !266, line: 223, type: !52)
!11705 = !DILocation(line: 223, column: 9, scope: !11628)
!11706 = !DILocation(line: 223, column: 15, scope: !11628)
!11707 = !DILocalVariable(name: "cgu", scope: !11628, file: !266, line: 224, type: !52)
!11708 = !DILocation(line: 224, column: 9, scope: !11628)
!11709 = !DILocation(line: 224, column: 15, scope: !11628)
!11710 = !DILocalVariable(name: "cburv", scope: !11628, file: !266, line: 225, type: !52)
!11711 = !DILocation(line: 225, column: 9, scope: !11628)
!11712 = !DILocation(line: 225, column: 17, scope: !11628)
!11713 = !DILocalVariable(name: "cgv", scope: !11628, file: !266, line: 226, type: !52)
!11714 = !DILocation(line: 226, column: 9, scope: !11628)
!11715 = !DILocation(line: 226, column: 15, scope: !11628)
!11716 = !DILocalVariable(name: "cbv", scope: !11628, file: !266, line: 227, type: !52)
!11717 = !DILocation(line: 227, column: 9, scope: !11628)
!11718 = !DILocation(line: 227, column: 15, scope: !11628)
!11719 = !DILocalVariable(name: "s0", scope: !11628, file: !266, line: 228, type: !47)
!11720 = !DILocation(line: 228, column: 15, scope: !11628)
!11721 = !DILocation(line: 228, column: 20, scope: !11628)
!11722 = !DILocation(line: 228, column: 34, scope: !11628)
!11723 = !DILocalVariable(name: "uv_offset", scope: !11628, file: !266, line: 229, type: !343)
!11724 = !DILocation(line: 229, column: 15, scope: !11628)
!11725 = !DILocalVariable(name: "mask", scope: !11628, file: !266, line: 230, type: !4656)
!11726 = !DILocation(line: 230, column: 14, scope: !11628)
!11727 = !DILocation(line: 232, column: 12, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11628, file: !266, line: 232, column: 5)
!11729 = !DILocation(line: 232, column: 10, scope: !11728)
!11730 = !DILocation(line: 232, column: 17, scope: !11731)
!11731 = !DILexicalBlockFile(scope: !11732, file: !266, discriminator: 1)
!11732 = distinct !DILexicalBlock(scope: !11728, file: !266, line: 232, column: 5)
!11733 = !DILocation(line: 232, column: 21, scope: !11731)
!11734 = !DILocation(line: 232, column: 19, scope: !11731)
!11735 = !DILocation(line: 232, column: 5, scope: !11731)
!11736 = !DILocation(line: 234, column: 27, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11732, file: !266, line: 232, column: 29)
!11738 = !DILocation(line: 234, column: 9, scope: !11737)
!11739 = !DILocation(line: 234, column: 30, scope: !11737)
!11740 = !DILocation(line: 233, column: 27, scope: !11737)
!11741 = !DILocation(line: 233, column: 9, scope: !11737)
!11742 = !DILocation(line: 233, column: 30, scope: !11737)
!11743 = !DILocation(line: 235, column: 5, scope: !11737)
!11744 = !DILocation(line: 232, column: 25, scope: !11745)
!11745 = !DILexicalBlockFile(scope: !11732, file: !266, discriminator: 2)
!11746 = !DILocation(line: 232, column: 5, scope: !11745)
!11747 = distinct !{!11747, !11748}
!11748 = !DILocation(line: 232, column: 5, scope: !11628)
!11749 = !DILocation(line: 237, column: 58, scope: !11628)
!11750 = !DILocation(line: 237, column: 61, scope: !11628)
!11751 = !DILocation(line: 237, column: 72, scope: !11628)
!11752 = !DILocation(line: 237, column: 77, scope: !11628)
!11753 = !DILocation(line: 237, column: 7, scope: !11628)
!11754 = !DILocation(line: 238, column: 58, scope: !11628)
!11755 = !DILocation(line: 238, column: 61, scope: !11628)
!11756 = !DILocation(line: 238, column: 72, scope: !11628)
!11757 = !DILocation(line: 238, column: 77, scope: !11628)
!11758 = !DILocation(line: 238, column: 7, scope: !11628)
!11759 = !DILocation(line: 239, column: 12, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11628, file: !266, line: 239, column: 5)
!11761 = !DILocation(line: 239, column: 10, scope: !11760)
!11762 = !DILocation(line: 239, column: 17, scope: !11763)
!11763 = !DILexicalBlockFile(scope: !11764, file: !266, discriminator: 1)
!11764 = distinct !DILexicalBlock(scope: !11760, file: !266, line: 239, column: 5)
!11765 = !DILocation(line: 239, column: 21, scope: !11763)
!11766 = !DILocation(line: 239, column: 19, scope: !11763)
!11767 = !DILocation(line: 239, column: 5, scope: !11763)
!11768 = !DILocation(line: 243, column: 27, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !266, line: 239, column: 29)
!11770 = !DILocation(line: 243, column: 9, scope: !11769)
!11771 = !DILocation(line: 243, column: 30, scope: !11769)
!11772 = !DILocation(line: 242, column: 27, scope: !11769)
!11773 = !DILocation(line: 242, column: 9, scope: !11769)
!11774 = !DILocation(line: 242, column: 30, scope: !11769)
!11775 = !DILocation(line: 241, column: 27, scope: !11769)
!11776 = !DILocation(line: 241, column: 9, scope: !11769)
!11777 = !DILocation(line: 241, column: 30, scope: !11769)
!11778 = !DILocation(line: 240, column: 27, scope: !11769)
!11779 = !DILocation(line: 240, column: 9, scope: !11769)
!11780 = !DILocation(line: 240, column: 30, scope: !11769)
!11781 = !DILocation(line: 244, column: 5, scope: !11769)
!11782 = !DILocation(line: 239, column: 25, scope: !11783)
!11783 = !DILexicalBlockFile(scope: !11764, file: !266, discriminator: 2)
!11784 = !DILocation(line: 239, column: 5, scope: !11783)
!11785 = distinct !{!11785, !11786}
!11786 = !DILocation(line: 239, column: 5, scope: !11628)
!11787 = !DILocation(line: 245, column: 12, scope: !11636)
!11788 = !DILocation(line: 245, column: 10, scope: !11636)
!11789 = !DILocation(line: 245, column: 17, scope: !11790)
!11790 = !DILexicalBlockFile(scope: !11635, file: !266, discriminator: 1)
!11791 = !DILocation(line: 245, column: 21, scope: !11790)
!11792 = !DILocation(line: 245, column: 19, scope: !11790)
!11793 = !DILocation(line: 245, column: 5, scope: !11790)
!11794 = !DILocation(line: 246, column: 16, scope: !11633)
!11795 = !DILocation(line: 246, column: 14, scope: !11633)
!11796 = !DILocation(line: 246, column: 21, scope: !11797)
!11797 = !DILexicalBlockFile(scope: !11632, file: !266, discriminator: 1)
!11798 = !DILocation(line: 246, column: 25, scope: !11797)
!11799 = !DILocation(line: 246, column: 23, scope: !11797)
!11800 = !DILocation(line: 246, column: 9, scope: !11797)
!11801 = !DILocalVariable(name: "r00", scope: !11631, file: !266, line: 247, type: !52)
!11802 = !DILocation(line: 247, column: 17, scope: !11631)
!11803 = !DILocation(line: 247, column: 28, scope: !11631)
!11804 = !DILocation(line: 247, column: 30, scope: !11631)
!11805 = !DILocation(line: 247, column: 23, scope: !11631)
!11806 = !DILocalVariable(name: "g00", scope: !11631, file: !266, line: 247, type: !52)
!11807 = !DILocation(line: 247, column: 37, scope: !11631)
!11808 = !DILocation(line: 247, column: 48, scope: !11631)
!11809 = !DILocation(line: 247, column: 50, scope: !11631)
!11810 = !DILocation(line: 247, column: 43, scope: !11631)
!11811 = !DILocalVariable(name: "b00", scope: !11631, file: !266, line: 247, type: !52)
!11812 = !DILocation(line: 247, column: 57, scope: !11631)
!11813 = !DILocation(line: 247, column: 68, scope: !11631)
!11814 = !DILocation(line: 247, column: 70, scope: !11631)
!11815 = !DILocation(line: 247, column: 63, scope: !11631)
!11816 = !DILocalVariable(name: "y00", scope: !11631, file: !266, line: 248, type: !52)
!11817 = !DILocation(line: 248, column: 17, scope: !11631)
!11818 = !DILocalVariable(name: "r01", scope: !11631, file: !266, line: 250, type: !52)
!11819 = !DILocation(line: 250, column: 17, scope: !11631)
!11820 = !DILocation(line: 250, column: 28, scope: !11631)
!11821 = !DILocation(line: 250, column: 30, scope: !11631)
!11822 = !DILocation(line: 250, column: 34, scope: !11631)
!11823 = !DILocation(line: 250, column: 23, scope: !11631)
!11824 = !DILocalVariable(name: "g01", scope: !11631, file: !266, line: 250, type: !52)
!11825 = !DILocation(line: 250, column: 40, scope: !11631)
!11826 = !DILocation(line: 250, column: 51, scope: !11631)
!11827 = !DILocation(line: 250, column: 53, scope: !11631)
!11828 = !DILocation(line: 250, column: 57, scope: !11631)
!11829 = !DILocation(line: 250, column: 46, scope: !11631)
!11830 = !DILocalVariable(name: "b01", scope: !11631, file: !266, line: 250, type: !52)
!11831 = !DILocation(line: 250, column: 63, scope: !11631)
!11832 = !DILocation(line: 250, column: 74, scope: !11631)
!11833 = !DILocation(line: 250, column: 76, scope: !11631)
!11834 = !DILocation(line: 250, column: 80, scope: !11631)
!11835 = !DILocation(line: 250, column: 69, scope: !11631)
!11836 = !DILocalVariable(name: "y01", scope: !11631, file: !266, line: 251, type: !52)
!11837 = !DILocation(line: 251, column: 17, scope: !11631)
!11838 = !DILocalVariable(name: "u", scope: !11631, file: !266, line: 258, type: !52)
!11839 = !DILocation(line: 258, column: 17, scope: !11631)
!11840 = !DILocalVariable(name: "v", scope: !11631, file: !266, line: 258, type: !52)
!11841 = !DILocation(line: 258, column: 20, scope: !11631)
!11842 = !DILocalVariable(name: "diff", scope: !11631, file: !266, line: 258, type: !52)
!11843 = !DILocation(line: 258, column: 23, scope: !11631)
!11844 = !DILocation(line: 260, column: 19, scope: !11631)
!11845 = !DILocation(line: 260, column: 25, scope: !11631)
!11846 = !DILocation(line: 260, column: 23, scope: !11631)
!11847 = !DILocation(line: 260, column: 31, scope: !11631)
!11848 = !DILocation(line: 260, column: 37, scope: !11631)
!11849 = !DILocation(line: 260, column: 35, scope: !11631)
!11850 = !DILocation(line: 260, column: 29, scope: !11631)
!11851 = !DILocation(line: 260, column: 43, scope: !11631)
!11852 = !DILocation(line: 260, column: 49, scope: !11631)
!11853 = !DILocation(line: 260, column: 47, scope: !11631)
!11854 = !DILocation(line: 260, column: 41, scope: !11631)
!11855 = !DILocation(line: 260, column: 78, scope: !11631)
!11856 = !DILocation(line: 260, column: 80, scope: !11631)
!11857 = !DILocation(line: 260, column: 55, scope: !11631)
!11858 = !DILocation(line: 260, column: 70, scope: !11631)
!11859 = !DILocation(line: 260, column: 72, scope: !11631)
!11860 = !DILocation(line: 260, column: 53, scope: !11631)
!11861 = !DILocation(line: 260, column: 17, scope: !11631)
!11862 = !DILocation(line: 261, column: 21, scope: !11631)
!11863 = !DILocation(line: 261, column: 27, scope: !11631)
!11864 = !DILocation(line: 261, column: 25, scope: !11631)
!11865 = !DILocation(line: 261, column: 33, scope: !11631)
!11866 = !DILocation(line: 261, column: 18, scope: !11631)
!11867 = !DILocation(line: 262, column: 45, scope: !11631)
!11868 = !DILocation(line: 262, column: 62, scope: !11631)
!11869 = !DILocation(line: 262, column: 66, scope: !11631)
!11870 = !DILocation(line: 262, column: 59, scope: !11631)
!11871 = !DILocation(line: 262, column: 28, scope: !11631)
!11872 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11645)
!11873 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11645)
!11874 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11645)
!11875 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11645)
!11876 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11645)
!11877 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11645)
!11878 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11645)
!11879 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11645)
!11880 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11645)
!11881 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11645)
!11882 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11645)
!11883 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11645)
!11884 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11645)
!11885 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11645)
!11886 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11645)
!11887 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11645)
!11888 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11645)
!11889 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11645)
!11890 = !DILocation(line: 262, column: 18, scope: !11631)
!11891 = !DILocation(line: 262, column: 20, scope: !11631)
!11892 = !DILocation(line: 262, column: 13, scope: !11631)
!11893 = !DILocation(line: 262, column: 26, scope: !11631)
!11894 = !DILocation(line: 263, column: 57, scope: !11631)
!11895 = !DILocation(line: 263, column: 62, scope: !11631)
!11896 = !DILocation(line: 263, column: 66, scope: !11631)
!11897 = !DILocation(line: 263, column: 71, scope: !11631)
!11898 = !DILocation(line: 263, column: 40, scope: !11631)
!11899 = !DILocation(line: 263, column: 42, scope: !11631)
!11900 = !DILocation(line: 263, column: 48, scope: !11631)
!11901 = !DILocation(line: 263, column: 13, scope: !11631)
!11902 = !DILocation(line: 263, column: 30, scope: !11631)
!11903 = !DILocation(line: 263, column: 32, scope: !11631)
!11904 = !DILocation(line: 263, column: 53, scope: !11631)
!11905 = !DILocation(line: 264, column: 57, scope: !11631)
!11906 = !DILocation(line: 264, column: 62, scope: !11631)
!11907 = !DILocation(line: 264, column: 66, scope: !11631)
!11908 = !DILocation(line: 264, column: 71, scope: !11631)
!11909 = !DILocation(line: 264, column: 40, scope: !11631)
!11910 = !DILocation(line: 264, column: 42, scope: !11631)
!11911 = !DILocation(line: 264, column: 48, scope: !11631)
!11912 = !DILocation(line: 264, column: 13, scope: !11631)
!11913 = !DILocation(line: 264, column: 30, scope: !11631)
!11914 = !DILocation(line: 264, column: 32, scope: !11631)
!11915 = !DILocation(line: 264, column: 28, scope: !11631)
!11916 = !DILocation(line: 264, column: 53, scope: !11631)
!11917 = !DILocation(line: 265, column: 57, scope: !11631)
!11918 = !DILocation(line: 265, column: 62, scope: !11631)
!11919 = !DILocation(line: 265, column: 66, scope: !11631)
!11920 = !DILocation(line: 265, column: 71, scope: !11631)
!11921 = !DILocation(line: 265, column: 40, scope: !11631)
!11922 = !DILocation(line: 265, column: 42, scope: !11631)
!11923 = !DILocation(line: 265, column: 48, scope: !11631)
!11924 = !DILocation(line: 265, column: 13, scope: !11631)
!11925 = !DILocation(line: 265, column: 30, scope: !11631)
!11926 = !DILocation(line: 265, column: 32, scope: !11631)
!11927 = !DILocation(line: 265, column: 28, scope: !11631)
!11928 = !DILocation(line: 265, column: 53, scope: !11631)
!11929 = !DILocation(line: 266, column: 57, scope: !11631)
!11930 = !DILocation(line: 266, column: 62, scope: !11631)
!11931 = !DILocation(line: 266, column: 66, scope: !11631)
!11932 = !DILocation(line: 266, column: 71, scope: !11631)
!11933 = !DILocation(line: 266, column: 40, scope: !11631)
!11934 = !DILocation(line: 266, column: 42, scope: !11631)
!11935 = !DILocation(line: 266, column: 48, scope: !11631)
!11936 = !DILocation(line: 266, column: 13, scope: !11631)
!11937 = !DILocation(line: 266, column: 30, scope: !11631)
!11938 = !DILocation(line: 266, column: 32, scope: !11631)
!11939 = !DILocation(line: 266, column: 28, scope: !11631)
!11940 = !DILocation(line: 266, column: 53, scope: !11631)
!11941 = !DILocation(line: 267, column: 40, scope: !11631)
!11942 = !DILocation(line: 267, column: 42, scope: !11631)
!11943 = !DILocation(line: 267, column: 48, scope: !11631)
!11944 = !DILocation(line: 267, column: 13, scope: !11631)
!11945 = !DILocation(line: 267, column: 30, scope: !11631)
!11946 = !DILocation(line: 267, column: 32, scope: !11631)
!11947 = !DILocation(line: 267, column: 53, scope: !11631)
!11948 = !DILocation(line: 269, column: 19, scope: !11631)
!11949 = !DILocation(line: 269, column: 25, scope: !11631)
!11950 = !DILocation(line: 269, column: 23, scope: !11631)
!11951 = !DILocation(line: 269, column: 31, scope: !11631)
!11952 = !DILocation(line: 269, column: 37, scope: !11631)
!11953 = !DILocation(line: 269, column: 35, scope: !11631)
!11954 = !DILocation(line: 269, column: 29, scope: !11631)
!11955 = !DILocation(line: 269, column: 43, scope: !11631)
!11956 = !DILocation(line: 269, column: 49, scope: !11631)
!11957 = !DILocation(line: 269, column: 47, scope: !11631)
!11958 = !DILocation(line: 269, column: 41, scope: !11631)
!11959 = !DILocation(line: 269, column: 78, scope: !11631)
!11960 = !DILocation(line: 269, column: 80, scope: !11631)
!11961 = !DILocation(line: 269, column: 84, scope: !11631)
!11962 = !DILocation(line: 269, column: 55, scope: !11631)
!11963 = !DILocation(line: 269, column: 70, scope: !11631)
!11964 = !DILocation(line: 269, column: 72, scope: !11631)
!11965 = !DILocation(line: 269, column: 53, scope: !11631)
!11966 = !DILocation(line: 269, column: 17, scope: !11631)
!11967 = !DILocation(line: 270, column: 21, scope: !11631)
!11968 = !DILocation(line: 270, column: 27, scope: !11631)
!11969 = !DILocation(line: 270, column: 25, scope: !11631)
!11970 = !DILocation(line: 270, column: 33, scope: !11631)
!11971 = !DILocation(line: 270, column: 18, scope: !11631)
!11972 = !DILocation(line: 271, column: 48, scope: !11631)
!11973 = !DILocation(line: 271, column: 65, scope: !11631)
!11974 = !DILocation(line: 271, column: 69, scope: !11631)
!11975 = !DILocation(line: 271, column: 62, scope: !11631)
!11976 = !DILocation(line: 271, column: 31, scope: !11631)
!11977 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11630)
!11978 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11630)
!11979 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11630)
!11980 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11630)
!11981 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11630)
!11982 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11630)
!11983 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11630)
!11984 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11630)
!11985 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11630)
!11986 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11630)
!11987 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11630)
!11988 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11630)
!11989 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11630)
!11990 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11630)
!11991 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11630)
!11992 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11630)
!11993 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11630)
!11994 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11630)
!11995 = !DILocation(line: 271, column: 18, scope: !11631)
!11996 = !DILocation(line: 271, column: 20, scope: !11631)
!11997 = !DILocation(line: 271, column: 24, scope: !11631)
!11998 = !DILocation(line: 271, column: 13, scope: !11631)
!11999 = !DILocation(line: 271, column: 29, scope: !11631)
!12000 = !DILocation(line: 272, column: 54, scope: !11631)
!12001 = !DILocation(line: 272, column: 59, scope: !11631)
!12002 = !DILocation(line: 272, column: 63, scope: !11631)
!12003 = !DILocation(line: 272, column: 68, scope: !11631)
!12004 = !DILocation(line: 272, column: 39, scope: !11631)
!12005 = !DILocation(line: 272, column: 41, scope: !11631)
!12006 = !DILocation(line: 272, column: 45, scope: !11631)
!12007 = !DILocation(line: 272, column: 13, scope: !11631)
!12008 = !DILocation(line: 272, column: 30, scope: !11631)
!12009 = !DILocation(line: 272, column: 32, scope: !11631)
!12010 = !DILocation(line: 272, column: 50, scope: !11631)
!12011 = !DILocation(line: 273, column: 54, scope: !11631)
!12012 = !DILocation(line: 273, column: 59, scope: !11631)
!12013 = !DILocation(line: 273, column: 63, scope: !11631)
!12014 = !DILocation(line: 273, column: 68, scope: !11631)
!12015 = !DILocation(line: 273, column: 39, scope: !11631)
!12016 = !DILocation(line: 273, column: 41, scope: !11631)
!12017 = !DILocation(line: 273, column: 45, scope: !11631)
!12018 = !DILocation(line: 273, column: 13, scope: !11631)
!12019 = !DILocation(line: 273, column: 30, scope: !11631)
!12020 = !DILocation(line: 273, column: 32, scope: !11631)
!12021 = !DILocation(line: 273, column: 28, scope: !11631)
!12022 = !DILocation(line: 273, column: 50, scope: !11631)
!12023 = !DILocation(line: 274, column: 54, scope: !11631)
!12024 = !DILocation(line: 274, column: 59, scope: !11631)
!12025 = !DILocation(line: 274, column: 63, scope: !11631)
!12026 = !DILocation(line: 274, column: 68, scope: !11631)
!12027 = !DILocation(line: 274, column: 39, scope: !11631)
!12028 = !DILocation(line: 274, column: 41, scope: !11631)
!12029 = !DILocation(line: 274, column: 45, scope: !11631)
!12030 = !DILocation(line: 274, column: 13, scope: !11631)
!12031 = !DILocation(line: 274, column: 30, scope: !11631)
!12032 = !DILocation(line: 274, column: 32, scope: !11631)
!12033 = !DILocation(line: 274, column: 28, scope: !11631)
!12034 = !DILocation(line: 274, column: 50, scope: !11631)
!12035 = !DILocation(line: 275, column: 54, scope: !11631)
!12036 = !DILocation(line: 275, column: 59, scope: !11631)
!12037 = !DILocation(line: 275, column: 63, scope: !11631)
!12038 = !DILocation(line: 275, column: 68, scope: !11631)
!12039 = !DILocation(line: 275, column: 39, scope: !11631)
!12040 = !DILocation(line: 275, column: 41, scope: !11631)
!12041 = !DILocation(line: 275, column: 45, scope: !11631)
!12042 = !DILocation(line: 275, column: 13, scope: !11631)
!12043 = !DILocation(line: 275, column: 30, scope: !11631)
!12044 = !DILocation(line: 275, column: 32, scope: !11631)
!12045 = !DILocation(line: 275, column: 28, scope: !11631)
!12046 = !DILocation(line: 275, column: 50, scope: !11631)
!12047 = !DILocation(line: 276, column: 39, scope: !11631)
!12048 = !DILocation(line: 276, column: 41, scope: !11631)
!12049 = !DILocation(line: 276, column: 45, scope: !11631)
!12050 = !DILocation(line: 276, column: 13, scope: !11631)
!12051 = !DILocation(line: 276, column: 30, scope: !11631)
!12052 = !DILocation(line: 276, column: 32, scope: !11631)
!12053 = !DILocation(line: 276, column: 50, scope: !11631)
!12054 = !DILocation(line: 298, column: 20, scope: !11631)
!12055 = !DILocation(line: 298, column: 28, scope: !11631)
!12056 = !DILocation(line: 298, column: 25, scope: !11631)
!12057 = !DILocation(line: 298, column: 33, scope: !11631)
!12058 = !DILocation(line: 298, column: 38, scope: !11631)
!12059 = !DILocation(line: 298, column: 46, scope: !11631)
!12060 = !DILocation(line: 298, column: 44, scope: !11631)
!12061 = !DILocation(line: 299, column: 20, scope: !11631)
!12062 = !DILocation(line: 299, column: 28, scope: !11631)
!12063 = !DILocation(line: 299, column: 25, scope: !11631)
!12064 = !DILocation(line: 299, column: 33, scope: !11631)
!12065 = !DILocation(line: 299, column: 38, scope: !11631)
!12066 = !DILocation(line: 299, column: 46, scope: !11631)
!12067 = !DILocation(line: 299, column: 44, scope: !11631)
!12068 = !DILocation(line: 298, column: 50, scope: !11631)
!12069 = !DILocation(line: 300, column: 20, scope: !11631)
!12070 = !DILocation(line: 300, column: 28, scope: !11631)
!12071 = !DILocation(line: 300, column: 25, scope: !11631)
!12072 = !DILocation(line: 300, column: 33, scope: !11631)
!12073 = !DILocation(line: 300, column: 38, scope: !11631)
!12074 = !DILocation(line: 300, column: 46, scope: !11631)
!12075 = !DILocation(line: 300, column: 44, scope: !11631)
!12076 = !DILocation(line: 299, column: 50, scope: !11631)
!12077 = !DILocation(line: 300, column: 76, scope: !11631)
!12078 = !DILocation(line: 300, column: 54, scope: !11631)
!12079 = !DILocation(line: 300, column: 69, scope: !11631)
!12080 = !DILocation(line: 300, column: 71, scope: !11631)
!12081 = !DILocation(line: 300, column: 52, scope: !11631)
!12082 = !DILocation(line: 298, column: 15, scope: !11631)
!12083 = !DILocation(line: 301, column: 21, scope: !11631)
!12084 = !DILocation(line: 301, column: 25, scope: !11631)
!12085 = !DILocation(line: 301, column: 23, scope: !11631)
!12086 = !DILocation(line: 301, column: 31, scope: !11631)
!12087 = !DILocation(line: 301, column: 18, scope: !11631)
!12088 = !DILocation(line: 302, column: 53, scope: !11631)
!12089 = !DILocation(line: 302, column: 55, scope: !11631)
!12090 = !DILocation(line: 302, column: 50, scope: !11631)
!12091 = !DILocation(line: 302, column: 23, scope: !11631)
!12092 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11639)
!12093 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11639)
!12094 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11639)
!12095 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11639)
!12096 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11639)
!12097 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11639)
!12098 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11639)
!12099 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11639)
!12100 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11639)
!12101 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11639)
!12102 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11639)
!12103 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11639)
!12104 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11639)
!12105 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11639)
!12106 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11639)
!12107 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11639)
!12108 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11639)
!12109 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11639)
!12110 = !DILocation(line: 302, column: 18, scope: !11631)
!12111 = !DILocation(line: 302, column: 13, scope: !11631)
!12112 = !DILocation(line: 302, column: 21, scope: !11631)
!12113 = !DILocation(line: 303, column: 49, scope: !11631)
!12114 = !DILocation(line: 303, column: 54, scope: !11631)
!12115 = !DILocation(line: 303, column: 58, scope: !11631)
!12116 = !DILocation(line: 303, column: 63, scope: !11631)
!12117 = !DILocation(line: 303, column: 38, scope: !11631)
!12118 = !DILocation(line: 303, column: 40, scope: !11631)
!12119 = !DILocation(line: 303, column: 13, scope: !11631)
!12120 = !DILocation(line: 303, column: 30, scope: !11631)
!12121 = !DILocation(line: 303, column: 32, scope: !11631)
!12122 = !DILocation(line: 303, column: 45, scope: !11631)
!12123 = !DILocation(line: 304, column: 49, scope: !11631)
!12124 = !DILocation(line: 304, column: 54, scope: !11631)
!12125 = !DILocation(line: 304, column: 58, scope: !11631)
!12126 = !DILocation(line: 304, column: 63, scope: !11631)
!12127 = !DILocation(line: 304, column: 38, scope: !11631)
!12128 = !DILocation(line: 304, column: 40, scope: !11631)
!12129 = !DILocation(line: 304, column: 13, scope: !11631)
!12130 = !DILocation(line: 304, column: 30, scope: !11631)
!12131 = !DILocation(line: 304, column: 32, scope: !11631)
!12132 = !DILocation(line: 304, column: 28, scope: !11631)
!12133 = !DILocation(line: 304, column: 45, scope: !11631)
!12134 = !DILocation(line: 305, column: 49, scope: !11631)
!12135 = !DILocation(line: 305, column: 54, scope: !11631)
!12136 = !DILocation(line: 305, column: 58, scope: !11631)
!12137 = !DILocation(line: 305, column: 63, scope: !11631)
!12138 = !DILocation(line: 305, column: 38, scope: !11631)
!12139 = !DILocation(line: 305, column: 40, scope: !11631)
!12140 = !DILocation(line: 305, column: 13, scope: !11631)
!12141 = !DILocation(line: 305, column: 30, scope: !11631)
!12142 = !DILocation(line: 305, column: 32, scope: !11631)
!12143 = !DILocation(line: 305, column: 28, scope: !11631)
!12144 = !DILocation(line: 305, column: 45, scope: !11631)
!12145 = !DILocation(line: 306, column: 49, scope: !11631)
!12146 = !DILocation(line: 306, column: 54, scope: !11631)
!12147 = !DILocation(line: 306, column: 58, scope: !11631)
!12148 = !DILocation(line: 306, column: 63, scope: !11631)
!12149 = !DILocation(line: 306, column: 38, scope: !11631)
!12150 = !DILocation(line: 306, column: 40, scope: !11631)
!12151 = !DILocation(line: 306, column: 13, scope: !11631)
!12152 = !DILocation(line: 306, column: 30, scope: !11631)
!12153 = !DILocation(line: 306, column: 32, scope: !11631)
!12154 = !DILocation(line: 306, column: 28, scope: !11631)
!12155 = !DILocation(line: 306, column: 45, scope: !11631)
!12156 = !DILocation(line: 307, column: 38, scope: !11631)
!12157 = !DILocation(line: 307, column: 40, scope: !11631)
!12158 = !DILocation(line: 307, column: 13, scope: !11631)
!12159 = !DILocation(line: 307, column: 30, scope: !11631)
!12160 = !DILocation(line: 307, column: 32, scope: !11631)
!12161 = !DILocation(line: 307, column: 45, scope: !11631)
!12162 = !DILocation(line: 309, column: 20, scope: !11631)
!12163 = !DILocation(line: 309, column: 28, scope: !11631)
!12164 = !DILocation(line: 309, column: 25, scope: !11631)
!12165 = !DILocation(line: 309, column: 33, scope: !11631)
!12166 = !DILocation(line: 309, column: 38, scope: !11631)
!12167 = !DILocation(line: 309, column: 46, scope: !11631)
!12168 = !DILocation(line: 309, column: 44, scope: !11631)
!12169 = !DILocation(line: 310, column: 20, scope: !11631)
!12170 = !DILocation(line: 310, column: 28, scope: !11631)
!12171 = !DILocation(line: 310, column: 25, scope: !11631)
!12172 = !DILocation(line: 310, column: 33, scope: !11631)
!12173 = !DILocation(line: 310, column: 38, scope: !11631)
!12174 = !DILocation(line: 310, column: 46, scope: !11631)
!12175 = !DILocation(line: 310, column: 44, scope: !11631)
!12176 = !DILocation(line: 309, column: 52, scope: !11631)
!12177 = !DILocation(line: 311, column: 20, scope: !11631)
!12178 = !DILocation(line: 311, column: 28, scope: !11631)
!12179 = !DILocation(line: 311, column: 25, scope: !11631)
!12180 = !DILocation(line: 311, column: 33, scope: !11631)
!12181 = !DILocation(line: 311, column: 38, scope: !11631)
!12182 = !DILocation(line: 311, column: 46, scope: !11631)
!12183 = !DILocation(line: 311, column: 44, scope: !11631)
!12184 = !DILocation(line: 310, column: 50, scope: !11631)
!12185 = !DILocation(line: 311, column: 74, scope: !11631)
!12186 = !DILocation(line: 311, column: 52, scope: !11631)
!12187 = !DILocation(line: 311, column: 67, scope: !11631)
!12188 = !DILocation(line: 311, column: 69, scope: !11631)
!12189 = !DILocation(line: 311, column: 50, scope: !11631)
!12190 = !DILocation(line: 309, column: 15, scope: !11631)
!12191 = !DILocation(line: 312, column: 21, scope: !11631)
!12192 = !DILocation(line: 312, column: 25, scope: !11631)
!12193 = !DILocation(line: 312, column: 23, scope: !11631)
!12194 = !DILocation(line: 312, column: 31, scope: !11631)
!12195 = !DILocation(line: 312, column: 18, scope: !11631)
!12196 = !DILocation(line: 313, column: 53, scope: !11631)
!12197 = !DILocation(line: 313, column: 55, scope: !11631)
!12198 = !DILocation(line: 313, column: 50, scope: !11631)
!12199 = !DILocation(line: 313, column: 23, scope: !11631)
!12200 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !11642)
!12201 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !11642)
!12202 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !11642)
!12203 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !11642)
!12204 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !11642)
!12205 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !11642)
!12206 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !11642)
!12207 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !11642)
!12208 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !11642)
!12209 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !11642)
!12210 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !11642)
!12211 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !11642)
!12212 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !11642)
!12213 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !11642)
!12214 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !11642)
!12215 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !11642)
!12216 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !11642)
!12217 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !11642)
!12218 = !DILocation(line: 313, column: 18, scope: !11631)
!12219 = !DILocation(line: 313, column: 13, scope: !11631)
!12220 = !DILocation(line: 313, column: 21, scope: !11631)
!12221 = !DILocation(line: 314, column: 49, scope: !11631)
!12222 = !DILocation(line: 314, column: 54, scope: !11631)
!12223 = !DILocation(line: 314, column: 58, scope: !11631)
!12224 = !DILocation(line: 314, column: 63, scope: !11631)
!12225 = !DILocation(line: 314, column: 38, scope: !11631)
!12226 = !DILocation(line: 314, column: 40, scope: !11631)
!12227 = !DILocation(line: 314, column: 13, scope: !11631)
!12228 = !DILocation(line: 314, column: 30, scope: !11631)
!12229 = !DILocation(line: 314, column: 32, scope: !11631)
!12230 = !DILocation(line: 314, column: 45, scope: !11631)
!12231 = !DILocation(line: 315, column: 49, scope: !11631)
!12232 = !DILocation(line: 315, column: 54, scope: !11631)
!12233 = !DILocation(line: 315, column: 58, scope: !11631)
!12234 = !DILocation(line: 315, column: 63, scope: !11631)
!12235 = !DILocation(line: 315, column: 38, scope: !11631)
!12236 = !DILocation(line: 315, column: 40, scope: !11631)
!12237 = !DILocation(line: 315, column: 13, scope: !11631)
!12238 = !DILocation(line: 315, column: 30, scope: !11631)
!12239 = !DILocation(line: 315, column: 32, scope: !11631)
!12240 = !DILocation(line: 315, column: 28, scope: !11631)
!12241 = !DILocation(line: 315, column: 45, scope: !11631)
!12242 = !DILocation(line: 316, column: 49, scope: !11631)
!12243 = !DILocation(line: 316, column: 54, scope: !11631)
!12244 = !DILocation(line: 316, column: 58, scope: !11631)
!12245 = !DILocation(line: 316, column: 63, scope: !11631)
!12246 = !DILocation(line: 316, column: 38, scope: !11631)
!12247 = !DILocation(line: 316, column: 40, scope: !11631)
!12248 = !DILocation(line: 316, column: 13, scope: !11631)
!12249 = !DILocation(line: 316, column: 30, scope: !11631)
!12250 = !DILocation(line: 316, column: 32, scope: !11631)
!12251 = !DILocation(line: 316, column: 28, scope: !11631)
!12252 = !DILocation(line: 316, column: 45, scope: !11631)
!12253 = !DILocation(line: 317, column: 49, scope: !11631)
!12254 = !DILocation(line: 317, column: 54, scope: !11631)
!12255 = !DILocation(line: 317, column: 58, scope: !11631)
!12256 = !DILocation(line: 317, column: 63, scope: !11631)
!12257 = !DILocation(line: 317, column: 38, scope: !11631)
!12258 = !DILocation(line: 317, column: 40, scope: !11631)
!12259 = !DILocation(line: 317, column: 13, scope: !11631)
!12260 = !DILocation(line: 317, column: 30, scope: !11631)
!12261 = !DILocation(line: 317, column: 32, scope: !11631)
!12262 = !DILocation(line: 317, column: 28, scope: !11631)
!12263 = !DILocation(line: 317, column: 45, scope: !11631)
!12264 = !DILocation(line: 318, column: 38, scope: !11631)
!12265 = !DILocation(line: 318, column: 40, scope: !11631)
!12266 = !DILocation(line: 318, column: 13, scope: !11631)
!12267 = !DILocation(line: 318, column: 30, scope: !11631)
!12268 = !DILocation(line: 318, column: 32, scope: !11631)
!12269 = !DILocation(line: 318, column: 45, scope: !11631)
!12270 = !DILocation(line: 319, column: 9, scope: !11631)
!12271 = !DILocation(line: 246, column: 29, scope: !12272)
!12272 = !DILexicalBlockFile(scope: !11632, file: !266, discriminator: 2)
!12273 = !DILocation(line: 246, column: 9, scope: !12272)
!12274 = distinct !{!12274, !12275}
!12275 = !DILocation(line: 246, column: 9, scope: !11634)
!12276 = !DILocation(line: 321, column: 17, scope: !11634)
!12277 = !DILocation(line: 321, column: 20, scope: !11634)
!12278 = !DILocation(line: 321, column: 14, scope: !11634)
!12279 = !DILocation(line: 322, column: 17, scope: !11634)
!12280 = !DILocation(line: 322, column: 31, scope: !11634)
!12281 = !DILocation(line: 322, column: 14, scope: !11634)
!12282 = !DILocation(line: 323, column: 17, scope: !11634)
!12283 = !DILocation(line: 323, column: 31, scope: !11634)
!12284 = !DILocation(line: 323, column: 14, scope: !11634)
!12285 = !DILocation(line: 324, column: 17, scope: !11634)
!12286 = !DILocation(line: 324, column: 19, scope: !11634)
!12287 = !DILocation(line: 324, column: 14, scope: !11634)
!12288 = !DILocation(line: 325, column: 17, scope: !11634)
!12289 = !DILocation(line: 325, column: 19, scope: !11634)
!12290 = !DILocation(line: 325, column: 14, scope: !11634)
!12291 = !DILocation(line: 326, column: 17, scope: !11634)
!12292 = !DILocation(line: 326, column: 19, scope: !11634)
!12293 = !DILocation(line: 326, column: 14, scope: !11634)
!12294 = !DILocation(line: 327, column: 5, scope: !11634)
!12295 = !DILocation(line: 245, column: 25, scope: !12296)
!12296 = !DILexicalBlockFile(scope: !11635, file: !266, discriminator: 2)
!12297 = !DILocation(line: 245, column: 5, scope: !12296)
!12298 = distinct !{!12298, !12299}
!12299 = !DILocation(line: 245, column: 5, scope: !11628)
!12300 = !DILocation(line: 328, column: 1, scope: !11628)
!12301 = distinct !DISubprogram(name: "rgb2yuv_fsb_420p12_c", scope: !266, file: !266, line: 208, type: !71, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!12302 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12303)
!12303 = distinct !DILocation(line: 271, column: 31, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !266, line: 246, column: 33)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !266, line: 246, column: 9)
!12306 = distinct !DILexicalBlock(scope: !12307, file: !266, line: 246, column: 9)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !266, line: 245, column: 29)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !266, line: 245, column: 5)
!12309 = distinct !DILexicalBlock(scope: !12301, file: !266, line: 245, column: 5)
!12310 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12303)
!12311 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12312)
!12312 = distinct !DILocation(line: 280, column: 36, scope: !12304)
!12313 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12312)
!12314 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12315)
!12315 = distinct !DILocation(line: 289, column: 36, scope: !12304)
!12316 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12315)
!12317 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12318)
!12318 = distinct !DILocation(line: 302, column: 23, scope: !12304)
!12319 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12318)
!12320 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12321)
!12321 = distinct !DILocation(line: 313, column: 23, scope: !12304)
!12322 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12321)
!12323 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !12324)
!12324 = distinct !DILocation(line: 262, column: 28, scope: !12304)
!12325 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !12324)
!12326 = !DILocalVariable(name: "_yuv", arg: 1, scope: !12301, file: !266, line: 208, type: !17)
!12327 = !DILocation(line: 208, column: 43, scope: !12301)
!12328 = !DILocalVariable(name: "yuv_stride", arg: 2, scope: !12301, file: !266, line: 208, type: !50)
!12329 = !DILocation(line: 208, column: 68, scope: !12301)
!12330 = !DILocalVariable(name: "rgb", arg: 3, scope: !12301, file: !266, line: 209, type: !43)
!12331 = !DILocation(line: 209, column: 38, scope: !12301)
!12332 = !DILocalVariable(name: "s", arg: 4, scope: !12301, file: !266, line: 209, type: !47)
!12333 = !DILocation(line: 209, column: 56, scope: !12301)
!12334 = !DILocalVariable(name: "w", arg: 5, scope: !12301, file: !266, line: 210, type: !52)
!12335 = !DILocation(line: 210, column: 33, scope: !12301)
!12336 = !DILocalVariable(name: "h", arg: 6, scope: !12301, file: !266, line: 210, type: !52)
!12337 = !DILocation(line: 210, column: 40, scope: !12301)
!12338 = !DILocalVariable(name: "rgb2yuv_coeffs", arg: 7, scope: !12301, file: !266, line: 210, type: !53)
!12339 = !DILocation(line: 210, column: 57, scope: !12301)
!12340 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !12301, file: !266, line: 211, type: !59)
!12341 = !DILocation(line: 211, column: 43, scope: !12301)
!12342 = !DILocalVariable(name: "rnd_scratch", arg: 9, scope: !12301, file: !266, line: 212, type: !73)
!12343 = !DILocation(line: 212, column: 34, scope: !12301)
!12344 = !DILocalVariable(name: "yuv", scope: !12301, file: !266, line: 214, type: !22)
!12345 = !DILocation(line: 214, column: 16, scope: !12301)
!12346 = !DILocation(line: 214, column: 36, scope: !12301)
!12347 = !DILocation(line: 214, column: 22, scope: !12301)
!12348 = !DILocalVariable(name: "yuv0", scope: !12301, file: !266, line: 215, type: !23)
!12349 = !DILocation(line: 215, column: 15, scope: !12301)
!12350 = !DILocation(line: 215, column: 22, scope: !12301)
!12351 = !DILocalVariable(name: "yuv1", scope: !12301, file: !266, line: 215, type: !23)
!12352 = !DILocation(line: 215, column: 31, scope: !12301)
!12353 = !DILocation(line: 215, column: 38, scope: !12301)
!12354 = !DILocalVariable(name: "yuv2", scope: !12301, file: !266, line: 215, type: !23)
!12355 = !DILocation(line: 215, column: 47, scope: !12301)
!12356 = !DILocation(line: 215, column: 54, scope: !12301)
!12357 = !DILocalVariable(name: "rgb0", scope: !12301, file: !266, line: 216, type: !59)
!12358 = !DILocation(line: 216, column: 20, scope: !12301)
!12359 = !DILocation(line: 216, column: 27, scope: !12301)
!12360 = !DILocalVariable(name: "rgb1", scope: !12301, file: !266, line: 216, type: !59)
!12361 = !DILocation(line: 216, column: 36, scope: !12301)
!12362 = !DILocation(line: 216, column: 43, scope: !12301)
!12363 = !DILocalVariable(name: "rgb2", scope: !12301, file: !266, line: 216, type: !59)
!12364 = !DILocation(line: 216, column: 52, scope: !12301)
!12365 = !DILocation(line: 216, column: 59, scope: !12301)
!12366 = !DILocalVariable(name: "y", scope: !12301, file: !266, line: 217, type: !52)
!12367 = !DILocation(line: 217, column: 9, scope: !12301)
!12368 = !DILocalVariable(name: "x", scope: !12301, file: !266, line: 217, type: !52)
!12369 = !DILocation(line: 217, column: 12, scope: !12301)
!12370 = !DILocalVariable(name: "sh", scope: !12301, file: !266, line: 218, type: !343)
!12371 = !DILocation(line: 218, column: 15, scope: !12301)
!12372 = !DILocalVariable(name: "rnd", scope: !12301, file: !266, line: 219, type: !343)
!12373 = !DILocation(line: 219, column: 15, scope: !12301)
!12374 = !DILocalVariable(name: "cry", scope: !12301, file: !266, line: 220, type: !52)
!12375 = !DILocation(line: 220, column: 9, scope: !12301)
!12376 = !DILocation(line: 220, column: 15, scope: !12301)
!12377 = !DILocalVariable(name: "cgy", scope: !12301, file: !266, line: 221, type: !52)
!12378 = !DILocation(line: 221, column: 9, scope: !12301)
!12379 = !DILocation(line: 221, column: 15, scope: !12301)
!12380 = !DILocalVariable(name: "cby", scope: !12301, file: !266, line: 222, type: !52)
!12381 = !DILocation(line: 222, column: 9, scope: !12301)
!12382 = !DILocation(line: 222, column: 15, scope: !12301)
!12383 = !DILocalVariable(name: "cru", scope: !12301, file: !266, line: 223, type: !52)
!12384 = !DILocation(line: 223, column: 9, scope: !12301)
!12385 = !DILocation(line: 223, column: 15, scope: !12301)
!12386 = !DILocalVariable(name: "cgu", scope: !12301, file: !266, line: 224, type: !52)
!12387 = !DILocation(line: 224, column: 9, scope: !12301)
!12388 = !DILocation(line: 224, column: 15, scope: !12301)
!12389 = !DILocalVariable(name: "cburv", scope: !12301, file: !266, line: 225, type: !52)
!12390 = !DILocation(line: 225, column: 9, scope: !12301)
!12391 = !DILocation(line: 225, column: 17, scope: !12301)
!12392 = !DILocalVariable(name: "cgv", scope: !12301, file: !266, line: 226, type: !52)
!12393 = !DILocation(line: 226, column: 9, scope: !12301)
!12394 = !DILocation(line: 226, column: 15, scope: !12301)
!12395 = !DILocalVariable(name: "cbv", scope: !12301, file: !266, line: 227, type: !52)
!12396 = !DILocation(line: 227, column: 9, scope: !12301)
!12397 = !DILocation(line: 227, column: 15, scope: !12301)
!12398 = !DILocalVariable(name: "s0", scope: !12301, file: !266, line: 228, type: !47)
!12399 = !DILocation(line: 228, column: 15, scope: !12301)
!12400 = !DILocation(line: 228, column: 20, scope: !12301)
!12401 = !DILocation(line: 228, column: 34, scope: !12301)
!12402 = !DILocalVariable(name: "uv_offset", scope: !12301, file: !266, line: 229, type: !343)
!12403 = !DILocation(line: 229, column: 15, scope: !12301)
!12404 = !DILocalVariable(name: "mask", scope: !12301, file: !266, line: 230, type: !4656)
!12405 = !DILocation(line: 230, column: 14, scope: !12301)
!12406 = !DILocation(line: 232, column: 12, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12301, file: !266, line: 232, column: 5)
!12408 = !DILocation(line: 232, column: 10, scope: !12407)
!12409 = !DILocation(line: 232, column: 17, scope: !12410)
!12410 = !DILexicalBlockFile(scope: !12411, file: !266, discriminator: 1)
!12411 = distinct !DILexicalBlock(scope: !12407, file: !266, line: 232, column: 5)
!12412 = !DILocation(line: 232, column: 21, scope: !12410)
!12413 = !DILocation(line: 232, column: 19, scope: !12410)
!12414 = !DILocation(line: 232, column: 5, scope: !12410)
!12415 = !DILocation(line: 234, column: 27, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12411, file: !266, line: 232, column: 29)
!12417 = !DILocation(line: 234, column: 9, scope: !12416)
!12418 = !DILocation(line: 234, column: 30, scope: !12416)
!12419 = !DILocation(line: 233, column: 27, scope: !12416)
!12420 = !DILocation(line: 233, column: 9, scope: !12416)
!12421 = !DILocation(line: 233, column: 30, scope: !12416)
!12422 = !DILocation(line: 235, column: 5, scope: !12416)
!12423 = !DILocation(line: 232, column: 25, scope: !12424)
!12424 = !DILexicalBlockFile(scope: !12411, file: !266, discriminator: 2)
!12425 = !DILocation(line: 232, column: 5, scope: !12424)
!12426 = distinct !{!12426, !12427}
!12427 = !DILocation(line: 232, column: 5, scope: !12301)
!12428 = !DILocation(line: 237, column: 58, scope: !12301)
!12429 = !DILocation(line: 237, column: 61, scope: !12301)
!12430 = !DILocation(line: 237, column: 72, scope: !12301)
!12431 = !DILocation(line: 237, column: 77, scope: !12301)
!12432 = !DILocation(line: 237, column: 7, scope: !12301)
!12433 = !DILocation(line: 238, column: 58, scope: !12301)
!12434 = !DILocation(line: 238, column: 61, scope: !12301)
!12435 = !DILocation(line: 238, column: 72, scope: !12301)
!12436 = !DILocation(line: 238, column: 77, scope: !12301)
!12437 = !DILocation(line: 238, column: 7, scope: !12301)
!12438 = !DILocation(line: 239, column: 12, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12301, file: !266, line: 239, column: 5)
!12440 = !DILocation(line: 239, column: 10, scope: !12439)
!12441 = !DILocation(line: 239, column: 17, scope: !12442)
!12442 = !DILexicalBlockFile(scope: !12443, file: !266, discriminator: 1)
!12443 = distinct !DILexicalBlock(scope: !12439, file: !266, line: 239, column: 5)
!12444 = !DILocation(line: 239, column: 21, scope: !12442)
!12445 = !DILocation(line: 239, column: 19, scope: !12442)
!12446 = !DILocation(line: 239, column: 5, scope: !12442)
!12447 = !DILocation(line: 243, column: 27, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12443, file: !266, line: 239, column: 29)
!12449 = !DILocation(line: 243, column: 9, scope: !12448)
!12450 = !DILocation(line: 243, column: 30, scope: !12448)
!12451 = !DILocation(line: 242, column: 27, scope: !12448)
!12452 = !DILocation(line: 242, column: 9, scope: !12448)
!12453 = !DILocation(line: 242, column: 30, scope: !12448)
!12454 = !DILocation(line: 241, column: 27, scope: !12448)
!12455 = !DILocation(line: 241, column: 9, scope: !12448)
!12456 = !DILocation(line: 241, column: 30, scope: !12448)
!12457 = !DILocation(line: 240, column: 27, scope: !12448)
!12458 = !DILocation(line: 240, column: 9, scope: !12448)
!12459 = !DILocation(line: 240, column: 30, scope: !12448)
!12460 = !DILocation(line: 244, column: 5, scope: !12448)
!12461 = !DILocation(line: 239, column: 25, scope: !12462)
!12462 = !DILexicalBlockFile(scope: !12443, file: !266, discriminator: 2)
!12463 = !DILocation(line: 239, column: 5, scope: !12462)
!12464 = distinct !{!12464, !12465}
!12465 = !DILocation(line: 239, column: 5, scope: !12301)
!12466 = !DILocation(line: 245, column: 12, scope: !12309)
!12467 = !DILocation(line: 245, column: 10, scope: !12309)
!12468 = !DILocation(line: 245, column: 17, scope: !12469)
!12469 = !DILexicalBlockFile(scope: !12308, file: !266, discriminator: 1)
!12470 = !DILocation(line: 245, column: 21, scope: !12469)
!12471 = !DILocation(line: 245, column: 19, scope: !12469)
!12472 = !DILocation(line: 245, column: 5, scope: !12469)
!12473 = !DILocation(line: 246, column: 16, scope: !12306)
!12474 = !DILocation(line: 246, column: 14, scope: !12306)
!12475 = !DILocation(line: 246, column: 21, scope: !12476)
!12476 = !DILexicalBlockFile(scope: !12305, file: !266, discriminator: 1)
!12477 = !DILocation(line: 246, column: 25, scope: !12476)
!12478 = !DILocation(line: 246, column: 23, scope: !12476)
!12479 = !DILocation(line: 246, column: 9, scope: !12476)
!12480 = !DILocalVariable(name: "r00", scope: !12304, file: !266, line: 247, type: !52)
!12481 = !DILocation(line: 247, column: 17, scope: !12304)
!12482 = !DILocation(line: 247, column: 28, scope: !12304)
!12483 = !DILocation(line: 247, column: 30, scope: !12304)
!12484 = !DILocation(line: 247, column: 23, scope: !12304)
!12485 = !DILocalVariable(name: "g00", scope: !12304, file: !266, line: 247, type: !52)
!12486 = !DILocation(line: 247, column: 37, scope: !12304)
!12487 = !DILocation(line: 247, column: 48, scope: !12304)
!12488 = !DILocation(line: 247, column: 50, scope: !12304)
!12489 = !DILocation(line: 247, column: 43, scope: !12304)
!12490 = !DILocalVariable(name: "b00", scope: !12304, file: !266, line: 247, type: !52)
!12491 = !DILocation(line: 247, column: 57, scope: !12304)
!12492 = !DILocation(line: 247, column: 68, scope: !12304)
!12493 = !DILocation(line: 247, column: 70, scope: !12304)
!12494 = !DILocation(line: 247, column: 63, scope: !12304)
!12495 = !DILocalVariable(name: "y00", scope: !12304, file: !266, line: 248, type: !52)
!12496 = !DILocation(line: 248, column: 17, scope: !12304)
!12497 = !DILocalVariable(name: "r01", scope: !12304, file: !266, line: 250, type: !52)
!12498 = !DILocation(line: 250, column: 17, scope: !12304)
!12499 = !DILocation(line: 250, column: 28, scope: !12304)
!12500 = !DILocation(line: 250, column: 30, scope: !12304)
!12501 = !DILocation(line: 250, column: 34, scope: !12304)
!12502 = !DILocation(line: 250, column: 23, scope: !12304)
!12503 = !DILocalVariable(name: "g01", scope: !12304, file: !266, line: 250, type: !52)
!12504 = !DILocation(line: 250, column: 40, scope: !12304)
!12505 = !DILocation(line: 250, column: 51, scope: !12304)
!12506 = !DILocation(line: 250, column: 53, scope: !12304)
!12507 = !DILocation(line: 250, column: 57, scope: !12304)
!12508 = !DILocation(line: 250, column: 46, scope: !12304)
!12509 = !DILocalVariable(name: "b01", scope: !12304, file: !266, line: 250, type: !52)
!12510 = !DILocation(line: 250, column: 63, scope: !12304)
!12511 = !DILocation(line: 250, column: 74, scope: !12304)
!12512 = !DILocation(line: 250, column: 76, scope: !12304)
!12513 = !DILocation(line: 250, column: 80, scope: !12304)
!12514 = !DILocation(line: 250, column: 69, scope: !12304)
!12515 = !DILocalVariable(name: "y01", scope: !12304, file: !266, line: 251, type: !52)
!12516 = !DILocation(line: 251, column: 17, scope: !12304)
!12517 = !DILocalVariable(name: "r10", scope: !12304, file: !266, line: 253, type: !52)
!12518 = !DILocation(line: 253, column: 17, scope: !12304)
!12519 = !DILocation(line: 253, column: 28, scope: !12304)
!12520 = !DILocation(line: 253, column: 30, scope: !12304)
!12521 = !DILocation(line: 253, column: 34, scope: !12304)
!12522 = !DILocation(line: 253, column: 40, scope: !12304)
!12523 = !DILocation(line: 253, column: 38, scope: !12304)
!12524 = !DILocation(line: 253, column: 23, scope: !12304)
!12525 = !DILocalVariable(name: "g10", scope: !12304, file: !266, line: 253, type: !52)
!12526 = !DILocation(line: 253, column: 44, scope: !12304)
!12527 = !DILocation(line: 253, column: 55, scope: !12304)
!12528 = !DILocation(line: 253, column: 57, scope: !12304)
!12529 = !DILocation(line: 253, column: 61, scope: !12304)
!12530 = !DILocation(line: 253, column: 67, scope: !12304)
!12531 = !DILocation(line: 253, column: 65, scope: !12304)
!12532 = !DILocation(line: 253, column: 50, scope: !12304)
!12533 = !DILocalVariable(name: "b10", scope: !12304, file: !266, line: 253, type: !52)
!12534 = !DILocation(line: 253, column: 71, scope: !12304)
!12535 = !DILocation(line: 253, column: 82, scope: !12304)
!12536 = !DILocation(line: 253, column: 84, scope: !12304)
!12537 = !DILocation(line: 253, column: 88, scope: !12304)
!12538 = !DILocation(line: 253, column: 94, scope: !12304)
!12539 = !DILocation(line: 253, column: 92, scope: !12304)
!12540 = !DILocation(line: 253, column: 77, scope: !12304)
!12541 = !DILocalVariable(name: "r11", scope: !12304, file: !266, line: 254, type: !52)
!12542 = !DILocation(line: 254, column: 17, scope: !12304)
!12543 = !DILocation(line: 254, column: 28, scope: !12304)
!12544 = !DILocation(line: 254, column: 30, scope: !12304)
!12545 = !DILocation(line: 254, column: 34, scope: !12304)
!12546 = !DILocation(line: 254, column: 40, scope: !12304)
!12547 = !DILocation(line: 254, column: 38, scope: !12304)
!12548 = !DILocation(line: 254, column: 23, scope: !12304)
!12549 = !DILocalVariable(name: "g11", scope: !12304, file: !266, line: 254, type: !52)
!12550 = !DILocation(line: 254, column: 44, scope: !12304)
!12551 = !DILocation(line: 254, column: 55, scope: !12304)
!12552 = !DILocation(line: 254, column: 57, scope: !12304)
!12553 = !DILocation(line: 254, column: 61, scope: !12304)
!12554 = !DILocation(line: 254, column: 67, scope: !12304)
!12555 = !DILocation(line: 254, column: 65, scope: !12304)
!12556 = !DILocation(line: 254, column: 50, scope: !12304)
!12557 = !DILocalVariable(name: "b11", scope: !12304, file: !266, line: 254, type: !52)
!12558 = !DILocation(line: 254, column: 71, scope: !12304)
!12559 = !DILocation(line: 254, column: 82, scope: !12304)
!12560 = !DILocation(line: 254, column: 84, scope: !12304)
!12561 = !DILocation(line: 254, column: 88, scope: !12304)
!12562 = !DILocation(line: 254, column: 94, scope: !12304)
!12563 = !DILocation(line: 254, column: 92, scope: !12304)
!12564 = !DILocation(line: 254, column: 77, scope: !12304)
!12565 = !DILocalVariable(name: "y10", scope: !12304, file: !266, line: 255, type: !52)
!12566 = !DILocation(line: 255, column: 17, scope: !12304)
!12567 = !DILocalVariable(name: "y11", scope: !12304, file: !266, line: 255, type: !52)
!12568 = !DILocation(line: 255, column: 22, scope: !12304)
!12569 = !DILocalVariable(name: "u", scope: !12304, file: !266, line: 258, type: !52)
!12570 = !DILocation(line: 258, column: 17, scope: !12304)
!12571 = !DILocalVariable(name: "v", scope: !12304, file: !266, line: 258, type: !52)
!12572 = !DILocation(line: 258, column: 20, scope: !12304)
!12573 = !DILocalVariable(name: "diff", scope: !12304, file: !266, line: 258, type: !52)
!12574 = !DILocation(line: 258, column: 23, scope: !12304)
!12575 = !DILocation(line: 260, column: 19, scope: !12304)
!12576 = !DILocation(line: 260, column: 25, scope: !12304)
!12577 = !DILocation(line: 260, column: 23, scope: !12304)
!12578 = !DILocation(line: 260, column: 31, scope: !12304)
!12579 = !DILocation(line: 260, column: 37, scope: !12304)
!12580 = !DILocation(line: 260, column: 35, scope: !12304)
!12581 = !DILocation(line: 260, column: 29, scope: !12304)
!12582 = !DILocation(line: 260, column: 43, scope: !12304)
!12583 = !DILocation(line: 260, column: 49, scope: !12304)
!12584 = !DILocation(line: 260, column: 47, scope: !12304)
!12585 = !DILocation(line: 260, column: 41, scope: !12304)
!12586 = !DILocation(line: 260, column: 78, scope: !12304)
!12587 = !DILocation(line: 260, column: 80, scope: !12304)
!12588 = !DILocation(line: 260, column: 55, scope: !12304)
!12589 = !DILocation(line: 260, column: 70, scope: !12304)
!12590 = !DILocation(line: 260, column: 72, scope: !12304)
!12591 = !DILocation(line: 260, column: 53, scope: !12304)
!12592 = !DILocation(line: 260, column: 17, scope: !12304)
!12593 = !DILocation(line: 261, column: 21, scope: !12304)
!12594 = !DILocation(line: 261, column: 27, scope: !12304)
!12595 = !DILocation(line: 261, column: 25, scope: !12304)
!12596 = !DILocation(line: 261, column: 33, scope: !12304)
!12597 = !DILocation(line: 261, column: 18, scope: !12304)
!12598 = !DILocation(line: 262, column: 45, scope: !12304)
!12599 = !DILocation(line: 262, column: 62, scope: !12304)
!12600 = !DILocation(line: 262, column: 66, scope: !12304)
!12601 = !DILocation(line: 262, column: 59, scope: !12304)
!12602 = !DILocation(line: 262, column: 28, scope: !12304)
!12603 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12324)
!12604 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12324)
!12605 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12324)
!12606 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12324)
!12607 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12324)
!12608 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12324)
!12609 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12324)
!12610 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12324)
!12611 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12324)
!12612 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12324)
!12613 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12324)
!12614 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12324)
!12615 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12324)
!12616 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12324)
!12617 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12324)
!12618 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12324)
!12619 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12324)
!12620 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12324)
!12621 = !DILocation(line: 262, column: 18, scope: !12304)
!12622 = !DILocation(line: 262, column: 20, scope: !12304)
!12623 = !DILocation(line: 262, column: 13, scope: !12304)
!12624 = !DILocation(line: 262, column: 26, scope: !12304)
!12625 = !DILocation(line: 263, column: 57, scope: !12304)
!12626 = !DILocation(line: 263, column: 62, scope: !12304)
!12627 = !DILocation(line: 263, column: 66, scope: !12304)
!12628 = !DILocation(line: 263, column: 71, scope: !12304)
!12629 = !DILocation(line: 263, column: 40, scope: !12304)
!12630 = !DILocation(line: 263, column: 42, scope: !12304)
!12631 = !DILocation(line: 263, column: 48, scope: !12304)
!12632 = !DILocation(line: 263, column: 13, scope: !12304)
!12633 = !DILocation(line: 263, column: 30, scope: !12304)
!12634 = !DILocation(line: 263, column: 32, scope: !12304)
!12635 = !DILocation(line: 263, column: 53, scope: !12304)
!12636 = !DILocation(line: 264, column: 57, scope: !12304)
!12637 = !DILocation(line: 264, column: 62, scope: !12304)
!12638 = !DILocation(line: 264, column: 66, scope: !12304)
!12639 = !DILocation(line: 264, column: 71, scope: !12304)
!12640 = !DILocation(line: 264, column: 40, scope: !12304)
!12641 = !DILocation(line: 264, column: 42, scope: !12304)
!12642 = !DILocation(line: 264, column: 48, scope: !12304)
!12643 = !DILocation(line: 264, column: 13, scope: !12304)
!12644 = !DILocation(line: 264, column: 30, scope: !12304)
!12645 = !DILocation(line: 264, column: 32, scope: !12304)
!12646 = !DILocation(line: 264, column: 28, scope: !12304)
!12647 = !DILocation(line: 264, column: 53, scope: !12304)
!12648 = !DILocation(line: 265, column: 57, scope: !12304)
!12649 = !DILocation(line: 265, column: 62, scope: !12304)
!12650 = !DILocation(line: 265, column: 66, scope: !12304)
!12651 = !DILocation(line: 265, column: 71, scope: !12304)
!12652 = !DILocation(line: 265, column: 40, scope: !12304)
!12653 = !DILocation(line: 265, column: 42, scope: !12304)
!12654 = !DILocation(line: 265, column: 48, scope: !12304)
!12655 = !DILocation(line: 265, column: 13, scope: !12304)
!12656 = !DILocation(line: 265, column: 30, scope: !12304)
!12657 = !DILocation(line: 265, column: 32, scope: !12304)
!12658 = !DILocation(line: 265, column: 28, scope: !12304)
!12659 = !DILocation(line: 265, column: 53, scope: !12304)
!12660 = !DILocation(line: 266, column: 57, scope: !12304)
!12661 = !DILocation(line: 266, column: 62, scope: !12304)
!12662 = !DILocation(line: 266, column: 66, scope: !12304)
!12663 = !DILocation(line: 266, column: 71, scope: !12304)
!12664 = !DILocation(line: 266, column: 40, scope: !12304)
!12665 = !DILocation(line: 266, column: 42, scope: !12304)
!12666 = !DILocation(line: 266, column: 48, scope: !12304)
!12667 = !DILocation(line: 266, column: 13, scope: !12304)
!12668 = !DILocation(line: 266, column: 30, scope: !12304)
!12669 = !DILocation(line: 266, column: 32, scope: !12304)
!12670 = !DILocation(line: 266, column: 28, scope: !12304)
!12671 = !DILocation(line: 266, column: 53, scope: !12304)
!12672 = !DILocation(line: 267, column: 40, scope: !12304)
!12673 = !DILocation(line: 267, column: 42, scope: !12304)
!12674 = !DILocation(line: 267, column: 48, scope: !12304)
!12675 = !DILocation(line: 267, column: 13, scope: !12304)
!12676 = !DILocation(line: 267, column: 30, scope: !12304)
!12677 = !DILocation(line: 267, column: 32, scope: !12304)
!12678 = !DILocation(line: 267, column: 53, scope: !12304)
!12679 = !DILocation(line: 269, column: 19, scope: !12304)
!12680 = !DILocation(line: 269, column: 25, scope: !12304)
!12681 = !DILocation(line: 269, column: 23, scope: !12304)
!12682 = !DILocation(line: 269, column: 31, scope: !12304)
!12683 = !DILocation(line: 269, column: 37, scope: !12304)
!12684 = !DILocation(line: 269, column: 35, scope: !12304)
!12685 = !DILocation(line: 269, column: 29, scope: !12304)
!12686 = !DILocation(line: 269, column: 43, scope: !12304)
!12687 = !DILocation(line: 269, column: 49, scope: !12304)
!12688 = !DILocation(line: 269, column: 47, scope: !12304)
!12689 = !DILocation(line: 269, column: 41, scope: !12304)
!12690 = !DILocation(line: 269, column: 78, scope: !12304)
!12691 = !DILocation(line: 269, column: 80, scope: !12304)
!12692 = !DILocation(line: 269, column: 84, scope: !12304)
!12693 = !DILocation(line: 269, column: 55, scope: !12304)
!12694 = !DILocation(line: 269, column: 70, scope: !12304)
!12695 = !DILocation(line: 269, column: 72, scope: !12304)
!12696 = !DILocation(line: 269, column: 53, scope: !12304)
!12697 = !DILocation(line: 269, column: 17, scope: !12304)
!12698 = !DILocation(line: 270, column: 21, scope: !12304)
!12699 = !DILocation(line: 270, column: 27, scope: !12304)
!12700 = !DILocation(line: 270, column: 25, scope: !12304)
!12701 = !DILocation(line: 270, column: 33, scope: !12304)
!12702 = !DILocation(line: 270, column: 18, scope: !12304)
!12703 = !DILocation(line: 271, column: 48, scope: !12304)
!12704 = !DILocation(line: 271, column: 65, scope: !12304)
!12705 = !DILocation(line: 271, column: 69, scope: !12304)
!12706 = !DILocation(line: 271, column: 62, scope: !12304)
!12707 = !DILocation(line: 271, column: 31, scope: !12304)
!12708 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12303)
!12709 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12303)
!12710 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12303)
!12711 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12303)
!12712 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12303)
!12713 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12303)
!12714 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12303)
!12715 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12303)
!12716 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12303)
!12717 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12303)
!12718 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12303)
!12719 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12303)
!12720 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12303)
!12721 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12303)
!12722 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12303)
!12723 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12303)
!12724 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12303)
!12725 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12303)
!12726 = !DILocation(line: 271, column: 18, scope: !12304)
!12727 = !DILocation(line: 271, column: 20, scope: !12304)
!12728 = !DILocation(line: 271, column: 24, scope: !12304)
!12729 = !DILocation(line: 271, column: 13, scope: !12304)
!12730 = !DILocation(line: 271, column: 29, scope: !12304)
!12731 = !DILocation(line: 272, column: 54, scope: !12304)
!12732 = !DILocation(line: 272, column: 59, scope: !12304)
!12733 = !DILocation(line: 272, column: 63, scope: !12304)
!12734 = !DILocation(line: 272, column: 68, scope: !12304)
!12735 = !DILocation(line: 272, column: 39, scope: !12304)
!12736 = !DILocation(line: 272, column: 41, scope: !12304)
!12737 = !DILocation(line: 272, column: 45, scope: !12304)
!12738 = !DILocation(line: 272, column: 13, scope: !12304)
!12739 = !DILocation(line: 272, column: 30, scope: !12304)
!12740 = !DILocation(line: 272, column: 32, scope: !12304)
!12741 = !DILocation(line: 272, column: 50, scope: !12304)
!12742 = !DILocation(line: 273, column: 54, scope: !12304)
!12743 = !DILocation(line: 273, column: 59, scope: !12304)
!12744 = !DILocation(line: 273, column: 63, scope: !12304)
!12745 = !DILocation(line: 273, column: 68, scope: !12304)
!12746 = !DILocation(line: 273, column: 39, scope: !12304)
!12747 = !DILocation(line: 273, column: 41, scope: !12304)
!12748 = !DILocation(line: 273, column: 45, scope: !12304)
!12749 = !DILocation(line: 273, column: 13, scope: !12304)
!12750 = !DILocation(line: 273, column: 30, scope: !12304)
!12751 = !DILocation(line: 273, column: 32, scope: !12304)
!12752 = !DILocation(line: 273, column: 28, scope: !12304)
!12753 = !DILocation(line: 273, column: 50, scope: !12304)
!12754 = !DILocation(line: 274, column: 54, scope: !12304)
!12755 = !DILocation(line: 274, column: 59, scope: !12304)
!12756 = !DILocation(line: 274, column: 63, scope: !12304)
!12757 = !DILocation(line: 274, column: 68, scope: !12304)
!12758 = !DILocation(line: 274, column: 39, scope: !12304)
!12759 = !DILocation(line: 274, column: 41, scope: !12304)
!12760 = !DILocation(line: 274, column: 45, scope: !12304)
!12761 = !DILocation(line: 274, column: 13, scope: !12304)
!12762 = !DILocation(line: 274, column: 30, scope: !12304)
!12763 = !DILocation(line: 274, column: 32, scope: !12304)
!12764 = !DILocation(line: 274, column: 28, scope: !12304)
!12765 = !DILocation(line: 274, column: 50, scope: !12304)
!12766 = !DILocation(line: 275, column: 54, scope: !12304)
!12767 = !DILocation(line: 275, column: 59, scope: !12304)
!12768 = !DILocation(line: 275, column: 63, scope: !12304)
!12769 = !DILocation(line: 275, column: 68, scope: !12304)
!12770 = !DILocation(line: 275, column: 39, scope: !12304)
!12771 = !DILocation(line: 275, column: 41, scope: !12304)
!12772 = !DILocation(line: 275, column: 45, scope: !12304)
!12773 = !DILocation(line: 275, column: 13, scope: !12304)
!12774 = !DILocation(line: 275, column: 30, scope: !12304)
!12775 = !DILocation(line: 275, column: 32, scope: !12304)
!12776 = !DILocation(line: 275, column: 28, scope: !12304)
!12777 = !DILocation(line: 275, column: 50, scope: !12304)
!12778 = !DILocation(line: 276, column: 39, scope: !12304)
!12779 = !DILocation(line: 276, column: 41, scope: !12304)
!12780 = !DILocation(line: 276, column: 45, scope: !12304)
!12781 = !DILocation(line: 276, column: 13, scope: !12304)
!12782 = !DILocation(line: 276, column: 30, scope: !12304)
!12783 = !DILocation(line: 276, column: 32, scope: !12304)
!12784 = !DILocation(line: 276, column: 50, scope: !12304)
!12785 = !DILocation(line: 278, column: 19, scope: !12304)
!12786 = !DILocation(line: 278, column: 25, scope: !12304)
!12787 = !DILocation(line: 278, column: 23, scope: !12304)
!12788 = !DILocation(line: 278, column: 31, scope: !12304)
!12789 = !DILocation(line: 278, column: 37, scope: !12304)
!12790 = !DILocation(line: 278, column: 35, scope: !12304)
!12791 = !DILocation(line: 278, column: 29, scope: !12304)
!12792 = !DILocation(line: 278, column: 43, scope: !12304)
!12793 = !DILocation(line: 278, column: 49, scope: !12304)
!12794 = !DILocation(line: 278, column: 47, scope: !12304)
!12795 = !DILocation(line: 278, column: 41, scope: !12304)
!12796 = !DILocation(line: 278, column: 73, scope: !12304)
!12797 = !DILocation(line: 278, column: 75, scope: !12304)
!12798 = !DILocation(line: 278, column: 79, scope: !12304)
!12799 = !DILocation(line: 278, column: 55, scope: !12304)
!12800 = !DILocation(line: 278, column: 53, scope: !12304)
!12801 = !DILocation(line: 278, column: 17, scope: !12304)
!12802 = !DILocation(line: 279, column: 21, scope: !12304)
!12803 = !DILocation(line: 279, column: 27, scope: !12304)
!12804 = !DILocation(line: 279, column: 25, scope: !12304)
!12805 = !DILocation(line: 279, column: 33, scope: !12304)
!12806 = !DILocation(line: 279, column: 18, scope: !12304)
!12807 = !DILocation(line: 280, column: 53, scope: !12304)
!12808 = !DILocation(line: 280, column: 70, scope: !12304)
!12809 = !DILocation(line: 280, column: 74, scope: !12304)
!12810 = !DILocation(line: 280, column: 67, scope: !12304)
!12811 = !DILocation(line: 280, column: 36, scope: !12304)
!12812 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12312)
!12813 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12312)
!12814 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12312)
!12815 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12312)
!12816 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12312)
!12817 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12312)
!12818 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12312)
!12819 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12312)
!12820 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12312)
!12821 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12312)
!12822 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12312)
!12823 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12312)
!12824 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12312)
!12825 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12312)
!12826 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12312)
!12827 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12312)
!12828 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12312)
!12829 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12312)
!12830 = !DILocation(line: 280, column: 18, scope: !12304)
!12831 = !DILocation(line: 280, column: 20, scope: !12304)
!12832 = !DILocation(line: 280, column: 24, scope: !12304)
!12833 = !DILocation(line: 280, column: 30, scope: !12304)
!12834 = !DILocation(line: 280, column: 28, scope: !12304)
!12835 = !DILocation(line: 280, column: 13, scope: !12304)
!12836 = !DILocation(line: 280, column: 34, scope: !12304)
!12837 = !DILocation(line: 281, column: 46, scope: !12304)
!12838 = !DILocation(line: 281, column: 51, scope: !12304)
!12839 = !DILocation(line: 281, column: 55, scope: !12304)
!12840 = !DILocation(line: 281, column: 60, scope: !12304)
!12841 = !DILocation(line: 281, column: 31, scope: !12304)
!12842 = !DILocation(line: 281, column: 33, scope: !12304)
!12843 = !DILocation(line: 281, column: 37, scope: !12304)
!12844 = !DILocation(line: 281, column: 13, scope: !12304)
!12845 = !DILocation(line: 281, column: 42, scope: !12304)
!12846 = !DILocation(line: 282, column: 46, scope: !12304)
!12847 = !DILocation(line: 282, column: 51, scope: !12304)
!12848 = !DILocation(line: 282, column: 55, scope: !12304)
!12849 = !DILocation(line: 282, column: 60, scope: !12304)
!12850 = !DILocation(line: 282, column: 31, scope: !12304)
!12851 = !DILocation(line: 282, column: 33, scope: !12304)
!12852 = !DILocation(line: 282, column: 37, scope: !12304)
!12853 = !DILocation(line: 282, column: 13, scope: !12304)
!12854 = !DILocation(line: 282, column: 42, scope: !12304)
!12855 = !DILocation(line: 283, column: 46, scope: !12304)
!12856 = !DILocation(line: 283, column: 51, scope: !12304)
!12857 = !DILocation(line: 283, column: 55, scope: !12304)
!12858 = !DILocation(line: 283, column: 60, scope: !12304)
!12859 = !DILocation(line: 283, column: 31, scope: !12304)
!12860 = !DILocation(line: 283, column: 33, scope: !12304)
!12861 = !DILocation(line: 283, column: 37, scope: !12304)
!12862 = !DILocation(line: 283, column: 13, scope: !12304)
!12863 = !DILocation(line: 283, column: 42, scope: !12304)
!12864 = !DILocation(line: 284, column: 46, scope: !12304)
!12865 = !DILocation(line: 284, column: 51, scope: !12304)
!12866 = !DILocation(line: 284, column: 55, scope: !12304)
!12867 = !DILocation(line: 284, column: 60, scope: !12304)
!12868 = !DILocation(line: 284, column: 31, scope: !12304)
!12869 = !DILocation(line: 284, column: 33, scope: !12304)
!12870 = !DILocation(line: 284, column: 37, scope: !12304)
!12871 = !DILocation(line: 284, column: 13, scope: !12304)
!12872 = !DILocation(line: 284, column: 42, scope: !12304)
!12873 = !DILocation(line: 285, column: 31, scope: !12304)
!12874 = !DILocation(line: 285, column: 33, scope: !12304)
!12875 = !DILocation(line: 285, column: 37, scope: !12304)
!12876 = !DILocation(line: 285, column: 13, scope: !12304)
!12877 = !DILocation(line: 285, column: 42, scope: !12304)
!12878 = !DILocation(line: 287, column: 19, scope: !12304)
!12879 = !DILocation(line: 287, column: 25, scope: !12304)
!12880 = !DILocation(line: 287, column: 23, scope: !12304)
!12881 = !DILocation(line: 287, column: 31, scope: !12304)
!12882 = !DILocation(line: 287, column: 37, scope: !12304)
!12883 = !DILocation(line: 287, column: 35, scope: !12304)
!12884 = !DILocation(line: 287, column: 29, scope: !12304)
!12885 = !DILocation(line: 287, column: 43, scope: !12304)
!12886 = !DILocation(line: 287, column: 49, scope: !12304)
!12887 = !DILocation(line: 287, column: 47, scope: !12304)
!12888 = !DILocation(line: 287, column: 41, scope: !12304)
!12889 = !DILocation(line: 287, column: 73, scope: !12304)
!12890 = !DILocation(line: 287, column: 75, scope: !12304)
!12891 = !DILocation(line: 287, column: 79, scope: !12304)
!12892 = !DILocation(line: 287, column: 55, scope: !12304)
!12893 = !DILocation(line: 287, column: 53, scope: !12304)
!12894 = !DILocation(line: 287, column: 17, scope: !12304)
!12895 = !DILocation(line: 288, column: 21, scope: !12304)
!12896 = !DILocation(line: 288, column: 27, scope: !12304)
!12897 = !DILocation(line: 288, column: 25, scope: !12304)
!12898 = !DILocation(line: 288, column: 33, scope: !12304)
!12899 = !DILocation(line: 288, column: 18, scope: !12304)
!12900 = !DILocation(line: 289, column: 53, scope: !12304)
!12901 = !DILocation(line: 289, column: 70, scope: !12304)
!12902 = !DILocation(line: 289, column: 74, scope: !12304)
!12903 = !DILocation(line: 289, column: 67, scope: !12304)
!12904 = !DILocation(line: 289, column: 36, scope: !12304)
!12905 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12315)
!12906 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12315)
!12907 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12315)
!12908 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12315)
!12909 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12315)
!12910 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12315)
!12911 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12315)
!12912 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12315)
!12913 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12315)
!12914 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12315)
!12915 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12315)
!12916 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12315)
!12917 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12315)
!12918 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12315)
!12919 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12315)
!12920 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12315)
!12921 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12315)
!12922 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12315)
!12923 = !DILocation(line: 289, column: 18, scope: !12304)
!12924 = !DILocation(line: 289, column: 20, scope: !12304)
!12925 = !DILocation(line: 289, column: 24, scope: !12304)
!12926 = !DILocation(line: 289, column: 30, scope: !12304)
!12927 = !DILocation(line: 289, column: 28, scope: !12304)
!12928 = !DILocation(line: 289, column: 13, scope: !12304)
!12929 = !DILocation(line: 289, column: 34, scope: !12304)
!12930 = !DILocation(line: 290, column: 46, scope: !12304)
!12931 = !DILocation(line: 290, column: 51, scope: !12304)
!12932 = !DILocation(line: 290, column: 55, scope: !12304)
!12933 = !DILocation(line: 290, column: 60, scope: !12304)
!12934 = !DILocation(line: 290, column: 31, scope: !12304)
!12935 = !DILocation(line: 290, column: 33, scope: !12304)
!12936 = !DILocation(line: 290, column: 37, scope: !12304)
!12937 = !DILocation(line: 290, column: 13, scope: !12304)
!12938 = !DILocation(line: 290, column: 42, scope: !12304)
!12939 = !DILocation(line: 291, column: 46, scope: !12304)
!12940 = !DILocation(line: 291, column: 51, scope: !12304)
!12941 = !DILocation(line: 291, column: 55, scope: !12304)
!12942 = !DILocation(line: 291, column: 60, scope: !12304)
!12943 = !DILocation(line: 291, column: 31, scope: !12304)
!12944 = !DILocation(line: 291, column: 33, scope: !12304)
!12945 = !DILocation(line: 291, column: 37, scope: !12304)
!12946 = !DILocation(line: 291, column: 13, scope: !12304)
!12947 = !DILocation(line: 291, column: 42, scope: !12304)
!12948 = !DILocation(line: 292, column: 46, scope: !12304)
!12949 = !DILocation(line: 292, column: 51, scope: !12304)
!12950 = !DILocation(line: 292, column: 55, scope: !12304)
!12951 = !DILocation(line: 292, column: 60, scope: !12304)
!12952 = !DILocation(line: 292, column: 31, scope: !12304)
!12953 = !DILocation(line: 292, column: 33, scope: !12304)
!12954 = !DILocation(line: 292, column: 37, scope: !12304)
!12955 = !DILocation(line: 292, column: 13, scope: !12304)
!12956 = !DILocation(line: 292, column: 42, scope: !12304)
!12957 = !DILocation(line: 293, column: 46, scope: !12304)
!12958 = !DILocation(line: 293, column: 51, scope: !12304)
!12959 = !DILocation(line: 293, column: 55, scope: !12304)
!12960 = !DILocation(line: 293, column: 60, scope: !12304)
!12961 = !DILocation(line: 293, column: 31, scope: !12304)
!12962 = !DILocation(line: 293, column: 33, scope: !12304)
!12963 = !DILocation(line: 293, column: 37, scope: !12304)
!12964 = !DILocation(line: 293, column: 13, scope: !12304)
!12965 = !DILocation(line: 293, column: 42, scope: !12304)
!12966 = !DILocation(line: 294, column: 31, scope: !12304)
!12967 = !DILocation(line: 294, column: 33, scope: !12304)
!12968 = !DILocation(line: 294, column: 37, scope: !12304)
!12969 = !DILocation(line: 294, column: 13, scope: !12304)
!12970 = !DILocation(line: 294, column: 42, scope: !12304)
!12971 = !DILocation(line: 298, column: 20, scope: !12304)
!12972 = !DILocation(line: 298, column: 28, scope: !12304)
!12973 = !DILocation(line: 298, column: 25, scope: !12304)
!12974 = !DILocation(line: 298, column: 36, scope: !12304)
!12975 = !DILocation(line: 298, column: 33, scope: !12304)
!12976 = !DILocation(line: 298, column: 44, scope: !12304)
!12977 = !DILocation(line: 298, column: 41, scope: !12304)
!12978 = !DILocation(line: 298, column: 49, scope: !12304)
!12979 = !DILocation(line: 298, column: 54, scope: !12304)
!12980 = !DILocation(line: 298, column: 62, scope: !12304)
!12981 = !DILocation(line: 298, column: 60, scope: !12304)
!12982 = !DILocation(line: 299, column: 20, scope: !12304)
!12983 = !DILocation(line: 299, column: 28, scope: !12304)
!12984 = !DILocation(line: 299, column: 25, scope: !12304)
!12985 = !DILocation(line: 299, column: 36, scope: !12304)
!12986 = !DILocation(line: 299, column: 33, scope: !12304)
!12987 = !DILocation(line: 299, column: 44, scope: !12304)
!12988 = !DILocation(line: 299, column: 41, scope: !12304)
!12989 = !DILocation(line: 299, column: 49, scope: !12304)
!12990 = !DILocation(line: 299, column: 54, scope: !12304)
!12991 = !DILocation(line: 299, column: 62, scope: !12304)
!12992 = !DILocation(line: 299, column: 60, scope: !12304)
!12993 = !DILocation(line: 298, column: 66, scope: !12304)
!12994 = !DILocation(line: 300, column: 20, scope: !12304)
!12995 = !DILocation(line: 300, column: 28, scope: !12304)
!12996 = !DILocation(line: 300, column: 25, scope: !12304)
!12997 = !DILocation(line: 300, column: 36, scope: !12304)
!12998 = !DILocation(line: 300, column: 33, scope: !12304)
!12999 = !DILocation(line: 300, column: 44, scope: !12304)
!13000 = !DILocation(line: 300, column: 41, scope: !12304)
!13001 = !DILocation(line: 300, column: 49, scope: !12304)
!13002 = !DILocation(line: 300, column: 54, scope: !12304)
!13003 = !DILocation(line: 300, column: 62, scope: !12304)
!13004 = !DILocation(line: 300, column: 60, scope: !12304)
!13005 = !DILocation(line: 299, column: 66, scope: !12304)
!13006 = !DILocation(line: 300, column: 92, scope: !12304)
!13007 = !DILocation(line: 300, column: 70, scope: !12304)
!13008 = !DILocation(line: 300, column: 85, scope: !12304)
!13009 = !DILocation(line: 300, column: 87, scope: !12304)
!13010 = !DILocation(line: 300, column: 68, scope: !12304)
!13011 = !DILocation(line: 298, column: 15, scope: !12304)
!13012 = !DILocation(line: 301, column: 21, scope: !12304)
!13013 = !DILocation(line: 301, column: 25, scope: !12304)
!13014 = !DILocation(line: 301, column: 23, scope: !12304)
!13015 = !DILocation(line: 301, column: 31, scope: !12304)
!13016 = !DILocation(line: 301, column: 18, scope: !12304)
!13017 = !DILocation(line: 302, column: 53, scope: !12304)
!13018 = !DILocation(line: 302, column: 55, scope: !12304)
!13019 = !DILocation(line: 302, column: 50, scope: !12304)
!13020 = !DILocation(line: 302, column: 23, scope: !12304)
!13021 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12318)
!13022 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12318)
!13023 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12318)
!13024 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12318)
!13025 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12318)
!13026 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12318)
!13027 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12318)
!13028 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12318)
!13029 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12318)
!13030 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12318)
!13031 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12318)
!13032 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12318)
!13033 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12318)
!13034 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12318)
!13035 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12318)
!13036 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12318)
!13037 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12318)
!13038 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12318)
!13039 = !DILocation(line: 302, column: 18, scope: !12304)
!13040 = !DILocation(line: 302, column: 13, scope: !12304)
!13041 = !DILocation(line: 302, column: 21, scope: !12304)
!13042 = !DILocation(line: 303, column: 49, scope: !12304)
!13043 = !DILocation(line: 303, column: 54, scope: !12304)
!13044 = !DILocation(line: 303, column: 58, scope: !12304)
!13045 = !DILocation(line: 303, column: 63, scope: !12304)
!13046 = !DILocation(line: 303, column: 38, scope: !12304)
!13047 = !DILocation(line: 303, column: 40, scope: !12304)
!13048 = !DILocation(line: 303, column: 13, scope: !12304)
!13049 = !DILocation(line: 303, column: 30, scope: !12304)
!13050 = !DILocation(line: 303, column: 32, scope: !12304)
!13051 = !DILocation(line: 303, column: 45, scope: !12304)
!13052 = !DILocation(line: 304, column: 49, scope: !12304)
!13053 = !DILocation(line: 304, column: 54, scope: !12304)
!13054 = !DILocation(line: 304, column: 58, scope: !12304)
!13055 = !DILocation(line: 304, column: 63, scope: !12304)
!13056 = !DILocation(line: 304, column: 38, scope: !12304)
!13057 = !DILocation(line: 304, column: 40, scope: !12304)
!13058 = !DILocation(line: 304, column: 13, scope: !12304)
!13059 = !DILocation(line: 304, column: 30, scope: !12304)
!13060 = !DILocation(line: 304, column: 32, scope: !12304)
!13061 = !DILocation(line: 304, column: 28, scope: !12304)
!13062 = !DILocation(line: 304, column: 45, scope: !12304)
!13063 = !DILocation(line: 305, column: 49, scope: !12304)
!13064 = !DILocation(line: 305, column: 54, scope: !12304)
!13065 = !DILocation(line: 305, column: 58, scope: !12304)
!13066 = !DILocation(line: 305, column: 63, scope: !12304)
!13067 = !DILocation(line: 305, column: 38, scope: !12304)
!13068 = !DILocation(line: 305, column: 40, scope: !12304)
!13069 = !DILocation(line: 305, column: 13, scope: !12304)
!13070 = !DILocation(line: 305, column: 30, scope: !12304)
!13071 = !DILocation(line: 305, column: 32, scope: !12304)
!13072 = !DILocation(line: 305, column: 28, scope: !12304)
!13073 = !DILocation(line: 305, column: 45, scope: !12304)
!13074 = !DILocation(line: 306, column: 49, scope: !12304)
!13075 = !DILocation(line: 306, column: 54, scope: !12304)
!13076 = !DILocation(line: 306, column: 58, scope: !12304)
!13077 = !DILocation(line: 306, column: 63, scope: !12304)
!13078 = !DILocation(line: 306, column: 38, scope: !12304)
!13079 = !DILocation(line: 306, column: 40, scope: !12304)
!13080 = !DILocation(line: 306, column: 13, scope: !12304)
!13081 = !DILocation(line: 306, column: 30, scope: !12304)
!13082 = !DILocation(line: 306, column: 32, scope: !12304)
!13083 = !DILocation(line: 306, column: 28, scope: !12304)
!13084 = !DILocation(line: 306, column: 45, scope: !12304)
!13085 = !DILocation(line: 307, column: 38, scope: !12304)
!13086 = !DILocation(line: 307, column: 40, scope: !12304)
!13087 = !DILocation(line: 307, column: 13, scope: !12304)
!13088 = !DILocation(line: 307, column: 30, scope: !12304)
!13089 = !DILocation(line: 307, column: 32, scope: !12304)
!13090 = !DILocation(line: 307, column: 45, scope: !12304)
!13091 = !DILocation(line: 309, column: 20, scope: !12304)
!13092 = !DILocation(line: 309, column: 28, scope: !12304)
!13093 = !DILocation(line: 309, column: 25, scope: !12304)
!13094 = !DILocation(line: 309, column: 36, scope: !12304)
!13095 = !DILocation(line: 309, column: 33, scope: !12304)
!13096 = !DILocation(line: 309, column: 44, scope: !12304)
!13097 = !DILocation(line: 309, column: 41, scope: !12304)
!13098 = !DILocation(line: 309, column: 49, scope: !12304)
!13099 = !DILocation(line: 309, column: 54, scope: !12304)
!13100 = !DILocation(line: 309, column: 62, scope: !12304)
!13101 = !DILocation(line: 309, column: 60, scope: !12304)
!13102 = !DILocation(line: 310, column: 20, scope: !12304)
!13103 = !DILocation(line: 310, column: 28, scope: !12304)
!13104 = !DILocation(line: 310, column: 25, scope: !12304)
!13105 = !DILocation(line: 310, column: 36, scope: !12304)
!13106 = !DILocation(line: 310, column: 33, scope: !12304)
!13107 = !DILocation(line: 310, column: 44, scope: !12304)
!13108 = !DILocation(line: 310, column: 41, scope: !12304)
!13109 = !DILocation(line: 310, column: 49, scope: !12304)
!13110 = !DILocation(line: 310, column: 54, scope: !12304)
!13111 = !DILocation(line: 310, column: 62, scope: !12304)
!13112 = !DILocation(line: 310, column: 60, scope: !12304)
!13113 = !DILocation(line: 309, column: 68, scope: !12304)
!13114 = !DILocation(line: 311, column: 20, scope: !12304)
!13115 = !DILocation(line: 311, column: 28, scope: !12304)
!13116 = !DILocation(line: 311, column: 25, scope: !12304)
!13117 = !DILocation(line: 311, column: 36, scope: !12304)
!13118 = !DILocation(line: 311, column: 33, scope: !12304)
!13119 = !DILocation(line: 311, column: 44, scope: !12304)
!13120 = !DILocation(line: 311, column: 41, scope: !12304)
!13121 = !DILocation(line: 311, column: 49, scope: !12304)
!13122 = !DILocation(line: 311, column: 54, scope: !12304)
!13123 = !DILocation(line: 311, column: 62, scope: !12304)
!13124 = !DILocation(line: 311, column: 60, scope: !12304)
!13125 = !DILocation(line: 310, column: 66, scope: !12304)
!13126 = !DILocation(line: 311, column: 90, scope: !12304)
!13127 = !DILocation(line: 311, column: 68, scope: !12304)
!13128 = !DILocation(line: 311, column: 83, scope: !12304)
!13129 = !DILocation(line: 311, column: 85, scope: !12304)
!13130 = !DILocation(line: 311, column: 66, scope: !12304)
!13131 = !DILocation(line: 309, column: 15, scope: !12304)
!13132 = !DILocation(line: 312, column: 21, scope: !12304)
!13133 = !DILocation(line: 312, column: 25, scope: !12304)
!13134 = !DILocation(line: 312, column: 23, scope: !12304)
!13135 = !DILocation(line: 312, column: 31, scope: !12304)
!13136 = !DILocation(line: 312, column: 18, scope: !12304)
!13137 = !DILocation(line: 313, column: 53, scope: !12304)
!13138 = !DILocation(line: 313, column: 55, scope: !12304)
!13139 = !DILocation(line: 313, column: 50, scope: !12304)
!13140 = !DILocation(line: 313, column: 23, scope: !12304)
!13141 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !12321)
!13142 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !12321)
!13143 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !12321)
!13144 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !12321)
!13145 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !12321)
!13146 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !12321)
!13147 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !12321)
!13148 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !12321)
!13149 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !12321)
!13150 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !12321)
!13151 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !12321)
!13152 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !12321)
!13153 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !12321)
!13154 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !12321)
!13155 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !12321)
!13156 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !12321)
!13157 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !12321)
!13158 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !12321)
!13159 = !DILocation(line: 313, column: 18, scope: !12304)
!13160 = !DILocation(line: 313, column: 13, scope: !12304)
!13161 = !DILocation(line: 313, column: 21, scope: !12304)
!13162 = !DILocation(line: 314, column: 49, scope: !12304)
!13163 = !DILocation(line: 314, column: 54, scope: !12304)
!13164 = !DILocation(line: 314, column: 58, scope: !12304)
!13165 = !DILocation(line: 314, column: 63, scope: !12304)
!13166 = !DILocation(line: 314, column: 38, scope: !12304)
!13167 = !DILocation(line: 314, column: 40, scope: !12304)
!13168 = !DILocation(line: 314, column: 13, scope: !12304)
!13169 = !DILocation(line: 314, column: 30, scope: !12304)
!13170 = !DILocation(line: 314, column: 32, scope: !12304)
!13171 = !DILocation(line: 314, column: 45, scope: !12304)
!13172 = !DILocation(line: 315, column: 49, scope: !12304)
!13173 = !DILocation(line: 315, column: 54, scope: !12304)
!13174 = !DILocation(line: 315, column: 58, scope: !12304)
!13175 = !DILocation(line: 315, column: 63, scope: !12304)
!13176 = !DILocation(line: 315, column: 38, scope: !12304)
!13177 = !DILocation(line: 315, column: 40, scope: !12304)
!13178 = !DILocation(line: 315, column: 13, scope: !12304)
!13179 = !DILocation(line: 315, column: 30, scope: !12304)
!13180 = !DILocation(line: 315, column: 32, scope: !12304)
!13181 = !DILocation(line: 315, column: 28, scope: !12304)
!13182 = !DILocation(line: 315, column: 45, scope: !12304)
!13183 = !DILocation(line: 316, column: 49, scope: !12304)
!13184 = !DILocation(line: 316, column: 54, scope: !12304)
!13185 = !DILocation(line: 316, column: 58, scope: !12304)
!13186 = !DILocation(line: 316, column: 63, scope: !12304)
!13187 = !DILocation(line: 316, column: 38, scope: !12304)
!13188 = !DILocation(line: 316, column: 40, scope: !12304)
!13189 = !DILocation(line: 316, column: 13, scope: !12304)
!13190 = !DILocation(line: 316, column: 30, scope: !12304)
!13191 = !DILocation(line: 316, column: 32, scope: !12304)
!13192 = !DILocation(line: 316, column: 28, scope: !12304)
!13193 = !DILocation(line: 316, column: 45, scope: !12304)
!13194 = !DILocation(line: 317, column: 49, scope: !12304)
!13195 = !DILocation(line: 317, column: 54, scope: !12304)
!13196 = !DILocation(line: 317, column: 58, scope: !12304)
!13197 = !DILocation(line: 317, column: 63, scope: !12304)
!13198 = !DILocation(line: 317, column: 38, scope: !12304)
!13199 = !DILocation(line: 317, column: 40, scope: !12304)
!13200 = !DILocation(line: 317, column: 13, scope: !12304)
!13201 = !DILocation(line: 317, column: 30, scope: !12304)
!13202 = !DILocation(line: 317, column: 32, scope: !12304)
!13203 = !DILocation(line: 317, column: 28, scope: !12304)
!13204 = !DILocation(line: 317, column: 45, scope: !12304)
!13205 = !DILocation(line: 318, column: 38, scope: !12304)
!13206 = !DILocation(line: 318, column: 40, scope: !12304)
!13207 = !DILocation(line: 318, column: 13, scope: !12304)
!13208 = !DILocation(line: 318, column: 30, scope: !12304)
!13209 = !DILocation(line: 318, column: 32, scope: !12304)
!13210 = !DILocation(line: 318, column: 45, scope: !12304)
!13211 = !DILocation(line: 319, column: 9, scope: !12304)
!13212 = !DILocation(line: 246, column: 29, scope: !13213)
!13213 = !DILexicalBlockFile(scope: !12305, file: !266, discriminator: 2)
!13214 = !DILocation(line: 246, column: 9, scope: !13213)
!13215 = distinct !{!13215, !13216}
!13216 = !DILocation(line: 246, column: 9, scope: !12307)
!13217 = !DILocation(line: 321, column: 17, scope: !12307)
!13218 = !DILocation(line: 321, column: 20, scope: !12307)
!13219 = !DILocation(line: 321, column: 14, scope: !12307)
!13220 = !DILocation(line: 322, column: 17, scope: !12307)
!13221 = !DILocation(line: 322, column: 31, scope: !12307)
!13222 = !DILocation(line: 322, column: 14, scope: !12307)
!13223 = !DILocation(line: 323, column: 17, scope: !12307)
!13224 = !DILocation(line: 323, column: 31, scope: !12307)
!13225 = !DILocation(line: 323, column: 14, scope: !12307)
!13226 = !DILocation(line: 324, column: 17, scope: !12307)
!13227 = !DILocation(line: 324, column: 19, scope: !12307)
!13228 = !DILocation(line: 324, column: 14, scope: !12307)
!13229 = !DILocation(line: 325, column: 17, scope: !12307)
!13230 = !DILocation(line: 325, column: 19, scope: !12307)
!13231 = !DILocation(line: 325, column: 14, scope: !12307)
!13232 = !DILocation(line: 326, column: 17, scope: !12307)
!13233 = !DILocation(line: 326, column: 19, scope: !12307)
!13234 = !DILocation(line: 326, column: 14, scope: !12307)
!13235 = !DILocation(line: 327, column: 5, scope: !12307)
!13236 = !DILocation(line: 245, column: 25, scope: !13237)
!13237 = !DILexicalBlockFile(scope: !12308, file: !266, discriminator: 2)
!13238 = !DILocation(line: 245, column: 5, scope: !13237)
!13239 = distinct !{!13239, !13240}
!13240 = !DILocation(line: 245, column: 5, scope: !12301)
!13241 = !DILocation(line: 328, column: 1, scope: !12301)
!13242 = distinct !DISubprogram(name: "yuv2yuv_444p8to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!13243 = !DIFile(filename: "libavfilter/colorspacedsp_yuv2yuv_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!13244 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 87, column: 23, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13247, file: !13243, line: 64, column: 33)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !13243, line: 64, column: 9)
!13248 = distinct !DILexicalBlock(scope: !13249, file: !13243, line: 64, column: 9)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !13243, line: 63, column: 29)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !13243, line: 63, column: 5)
!13251 = distinct !DILexicalBlock(scope: !13242, file: !13243, line: 63, column: 5)
!13252 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13253)
!13253 = distinct !DILocation(line: 88, column: 23, scope: !13246)
!13254 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13255)
!13255 = distinct !DILocation(line: 76, column: 28, scope: !13246)
!13256 = !DILocalVariable(name: "_dst", arg: 1, scope: !13242, file: !13243, line: 40, type: !17)
!13257 = !DILocation(line: 40, column: 41, scope: !13242)
!13258 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !13242, file: !13243, line: 40, type: !50)
!13259 = !DILocation(line: 40, column: 66, scope: !13242)
!13260 = !DILocalVariable(name: "_src", arg: 3, scope: !13242, file: !13243, line: 41, type: !17)
!13261 = !DILocation(line: 41, column: 34, scope: !13242)
!13262 = !DILocalVariable(name: "src_stride", arg: 4, scope: !13242, file: !13243, line: 41, type: !50)
!13263 = !DILocation(line: 41, column: 59, scope: !13242)
!13264 = !DILocalVariable(name: "w", arg: 5, scope: !13242, file: !13243, line: 42, type: !52)
!13265 = !DILocation(line: 42, column: 29, scope: !13242)
!13266 = !DILocalVariable(name: "h", arg: 6, scope: !13242, file: !13243, line: 42, type: !52)
!13267 = !DILocation(line: 42, column: 36, scope: !13242)
!13268 = !DILocalVariable(name: "c", arg: 7, scope: !13242, file: !13243, line: 42, type: !53)
!13269 = !DILocation(line: 42, column: 53, scope: !13242)
!13270 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !13242, file: !13243, line: 43, type: !84)
!13271 = !DILocation(line: 43, column: 39, scope: !13242)
!13272 = !DILocalVariable(name: "dst", scope: !13242, file: !13243, line: 45, type: !17)
!13273 = !DILocation(line: 45, column: 15, scope: !13242)
!13274 = !DILocation(line: 45, column: 34, scope: !13242)
!13275 = !DILocalVariable(name: "src", scope: !13242, file: !13243, line: 46, type: !17)
!13276 = !DILocation(line: 46, column: 15, scope: !13242)
!13277 = !DILocation(line: 46, column: 34, scope: !13242)
!13278 = !DILocalVariable(name: "src0", scope: !13242, file: !13243, line: 47, type: !304)
!13279 = !DILocation(line: 47, column: 20, scope: !13242)
!13280 = !DILocation(line: 47, column: 27, scope: !13242)
!13281 = !DILocalVariable(name: "src1", scope: !13242, file: !13243, line: 47, type: !304)
!13282 = !DILocation(line: 47, column: 36, scope: !13242)
!13283 = !DILocation(line: 47, column: 43, scope: !13242)
!13284 = !DILocalVariable(name: "src2", scope: !13242, file: !13243, line: 47, type: !304)
!13285 = !DILocation(line: 47, column: 52, scope: !13242)
!13286 = !DILocation(line: 47, column: 59, scope: !13242)
!13287 = !DILocalVariable(name: "dst0", scope: !13242, file: !13243, line: 48, type: !18)
!13288 = !DILocation(line: 48, column: 14, scope: !13242)
!13289 = !DILocation(line: 48, column: 21, scope: !13242)
!13290 = !DILocalVariable(name: "dst1", scope: !13242, file: !13243, line: 48, type: !18)
!13291 = !DILocation(line: 48, column: 30, scope: !13242)
!13292 = !DILocation(line: 48, column: 37, scope: !13242)
!13293 = !DILocalVariable(name: "dst2", scope: !13242, file: !13243, line: 48, type: !18)
!13294 = !DILocation(line: 48, column: 46, scope: !13242)
!13295 = !DILocation(line: 48, column: 53, scope: !13242)
!13296 = !DILocalVariable(name: "y", scope: !13242, file: !13243, line: 49, type: !52)
!13297 = !DILocation(line: 49, column: 9, scope: !13242)
!13298 = !DILocalVariable(name: "x", scope: !13242, file: !13243, line: 49, type: !52)
!13299 = !DILocation(line: 49, column: 12, scope: !13242)
!13300 = !DILocalVariable(name: "sh", scope: !13242, file: !13243, line: 50, type: !343)
!13301 = !DILocation(line: 50, column: 15, scope: !13242)
!13302 = !DILocalVariable(name: "rnd", scope: !13242, file: !13243, line: 51, type: !343)
!13303 = !DILocation(line: 51, column: 15, scope: !13242)
!13304 = !DILocalVariable(name: "y_off_in", scope: !13242, file: !13243, line: 52, type: !52)
!13305 = !DILocation(line: 52, column: 9, scope: !13242)
!13306 = !DILocation(line: 52, column: 20, scope: !13242)
!13307 = !DILocalVariable(name: "y_off_out", scope: !13242, file: !13243, line: 53, type: !52)
!13308 = !DILocation(line: 53, column: 9, scope: !13242)
!13309 = !DILocation(line: 53, column: 21, scope: !13242)
!13310 = !DILocation(line: 53, column: 38, scope: !13242)
!13311 = !DILocalVariable(name: "uv_off_in", scope: !13242, file: !13243, line: 54, type: !343)
!13312 = !DILocation(line: 54, column: 15, scope: !13242)
!13313 = !DILocalVariable(name: "uv_off_out", scope: !13242, file: !13243, line: 55, type: !343)
!13314 = !DILocation(line: 55, column: 15, scope: !13242)
!13315 = !DILocalVariable(name: "cyy", scope: !13242, file: !13243, line: 56, type: !52)
!13316 = !DILocation(line: 56, column: 9, scope: !13242)
!13317 = !DILocation(line: 56, column: 15, scope: !13242)
!13318 = !DILocalVariable(name: "cyu", scope: !13242, file: !13243, line: 56, type: !52)
!13319 = !DILocation(line: 56, column: 27, scope: !13242)
!13320 = !DILocation(line: 56, column: 33, scope: !13242)
!13321 = !DILocalVariable(name: "cyv", scope: !13242, file: !13243, line: 56, type: !52)
!13322 = !DILocation(line: 56, column: 45, scope: !13242)
!13323 = !DILocation(line: 56, column: 51, scope: !13242)
!13324 = !DILocalVariable(name: "cuu", scope: !13242, file: !13243, line: 57, type: !52)
!13325 = !DILocation(line: 57, column: 9, scope: !13242)
!13326 = !DILocation(line: 57, column: 15, scope: !13242)
!13327 = !DILocalVariable(name: "cuv", scope: !13242, file: !13243, line: 57, type: !52)
!13328 = !DILocation(line: 57, column: 27, scope: !13242)
!13329 = !DILocation(line: 57, column: 33, scope: !13242)
!13330 = !DILocalVariable(name: "cvu", scope: !13242, file: !13243, line: 57, type: !52)
!13331 = !DILocation(line: 57, column: 45, scope: !13242)
!13332 = !DILocation(line: 57, column: 51, scope: !13242)
!13333 = !DILocalVariable(name: "cvv", scope: !13242, file: !13243, line: 57, type: !52)
!13334 = !DILocation(line: 57, column: 63, scope: !13242)
!13335 = !DILocation(line: 57, column: 69, scope: !13242)
!13336 = !DILocation(line: 61, column: 58, scope: !13242)
!13337 = !DILocation(line: 61, column: 61, scope: !13242)
!13338 = !DILocation(line: 61, column: 72, scope: !13242)
!13339 = !DILocation(line: 61, column: 77, scope: !13242)
!13340 = !DILocation(line: 61, column: 7, scope: !13242)
!13341 = !DILocation(line: 62, column: 58, scope: !13242)
!13342 = !DILocation(line: 62, column: 61, scope: !13242)
!13343 = !DILocation(line: 62, column: 72, scope: !13242)
!13344 = !DILocation(line: 62, column: 77, scope: !13242)
!13345 = !DILocation(line: 62, column: 7, scope: !13242)
!13346 = !DILocation(line: 63, column: 12, scope: !13251)
!13347 = !DILocation(line: 63, column: 10, scope: !13251)
!13348 = !DILocation(line: 63, column: 17, scope: !13349)
!13349 = !DILexicalBlockFile(scope: !13250, file: !13243, discriminator: 1)
!13350 = !DILocation(line: 63, column: 21, scope: !13349)
!13351 = !DILocation(line: 63, column: 19, scope: !13349)
!13352 = !DILocation(line: 63, column: 5, scope: !13349)
!13353 = !DILocation(line: 64, column: 16, scope: !13248)
!13354 = !DILocation(line: 64, column: 14, scope: !13248)
!13355 = !DILocation(line: 64, column: 21, scope: !13356)
!13356 = !DILexicalBlockFile(scope: !13247, file: !13243, discriminator: 1)
!13357 = !DILocation(line: 64, column: 25, scope: !13356)
!13358 = !DILocation(line: 64, column: 23, scope: !13356)
!13359 = !DILocation(line: 64, column: 9, scope: !13356)
!13360 = !DILocalVariable(name: "y00", scope: !13246, file: !13243, line: 65, type: !52)
!13361 = !DILocation(line: 65, column: 17, scope: !13246)
!13362 = !DILocation(line: 65, column: 28, scope: !13246)
!13363 = !DILocation(line: 65, column: 30, scope: !13246)
!13364 = !DILocation(line: 65, column: 23, scope: !13246)
!13365 = !DILocation(line: 65, column: 38, scope: !13246)
!13366 = !DILocation(line: 65, column: 36, scope: !13246)
!13367 = !DILocalVariable(name: "u", scope: !13246, file: !13243, line: 73, type: !52)
!13368 = !DILocation(line: 73, column: 17, scope: !13246)
!13369 = !DILocation(line: 73, column: 26, scope: !13246)
!13370 = !DILocation(line: 73, column: 21, scope: !13246)
!13371 = !DILocation(line: 73, column: 29, scope: !13246)
!13372 = !DILocalVariable(name: "v", scope: !13246, file: !13243, line: 73, type: !52)
!13373 = !DILocation(line: 73, column: 42, scope: !13246)
!13374 = !DILocation(line: 73, column: 51, scope: !13246)
!13375 = !DILocation(line: 73, column: 46, scope: !13246)
!13376 = !DILocation(line: 73, column: 54, scope: !13246)
!13377 = !DILocalVariable(name: "uv_val", scope: !13246, file: !13243, line: 74, type: !52)
!13378 = !DILocation(line: 74, column: 17, scope: !13246)
!13379 = !DILocation(line: 74, column: 26, scope: !13246)
!13380 = !DILocation(line: 74, column: 32, scope: !13246)
!13381 = !DILocation(line: 74, column: 30, scope: !13246)
!13382 = !DILocation(line: 74, column: 36, scope: !13246)
!13383 = !DILocation(line: 74, column: 42, scope: !13246)
!13384 = !DILocation(line: 74, column: 40, scope: !13246)
!13385 = !DILocation(line: 74, column: 34, scope: !13246)
!13386 = !DILocation(line: 74, column: 44, scope: !13246)
!13387 = !DILocation(line: 74, column: 52, scope: !13246)
!13388 = !DILocation(line: 74, column: 50, scope: !13246)
!13389 = !DILocation(line: 76, column: 45, scope: !13246)
!13390 = !DILocation(line: 76, column: 51, scope: !13246)
!13391 = !DILocation(line: 76, column: 49, scope: !13246)
!13392 = !DILocation(line: 76, column: 57, scope: !13246)
!13393 = !DILocation(line: 76, column: 55, scope: !13246)
!13394 = !DILocation(line: 76, column: 65, scope: !13246)
!13395 = !DILocation(line: 76, column: 28, scope: !13246)
!13396 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13255)
!13397 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13255)
!13398 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13255)
!13399 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13255)
!13400 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13255)
!13401 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13255)
!13402 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13255)
!13403 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13255)
!13404 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13255)
!13405 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13255)
!13406 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13255)
!13407 = !DILocation(line: 76, column: 18, scope: !13246)
!13408 = !DILocation(line: 76, column: 20, scope: !13246)
!13409 = !DILocation(line: 76, column: 13, scope: !13246)
!13410 = !DILocation(line: 76, column: 26, scope: !13246)
!13411 = !DILocation(line: 87, column: 40, scope: !13246)
!13412 = !DILocation(line: 87, column: 44, scope: !13246)
!13413 = !DILocation(line: 87, column: 42, scope: !13246)
!13414 = !DILocation(line: 87, column: 50, scope: !13246)
!13415 = !DILocation(line: 87, column: 54, scope: !13246)
!13416 = !DILocation(line: 87, column: 52, scope: !13246)
!13417 = !DILocation(line: 87, column: 48, scope: !13246)
!13418 = !DILocation(line: 87, column: 58, scope: !13246)
!13419 = !DILocation(line: 87, column: 72, scope: !13246)
!13420 = !DILocation(line: 87, column: 23, scope: !13246)
!13421 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13245)
!13422 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13245)
!13423 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13245)
!13424 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13245)
!13425 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13245)
!13426 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13245)
!13427 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13245)
!13428 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13245)
!13429 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13245)
!13430 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13245)
!13431 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13245)
!13432 = !DILocation(line: 87, column: 18, scope: !13246)
!13433 = !DILocation(line: 87, column: 13, scope: !13246)
!13434 = !DILocation(line: 87, column: 21, scope: !13246)
!13435 = !DILocation(line: 88, column: 40, scope: !13246)
!13436 = !DILocation(line: 88, column: 44, scope: !13246)
!13437 = !DILocation(line: 88, column: 42, scope: !13246)
!13438 = !DILocation(line: 88, column: 50, scope: !13246)
!13439 = !DILocation(line: 88, column: 54, scope: !13246)
!13440 = !DILocation(line: 88, column: 52, scope: !13246)
!13441 = !DILocation(line: 88, column: 48, scope: !13246)
!13442 = !DILocation(line: 88, column: 58, scope: !13246)
!13443 = !DILocation(line: 88, column: 72, scope: !13246)
!13444 = !DILocation(line: 88, column: 23, scope: !13246)
!13445 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13253)
!13446 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13253)
!13447 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13253)
!13448 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13253)
!13449 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13253)
!13450 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13253)
!13451 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13253)
!13452 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13253)
!13453 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13253)
!13454 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13253)
!13455 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13253)
!13456 = !DILocation(line: 88, column: 18, scope: !13246)
!13457 = !DILocation(line: 88, column: 13, scope: !13246)
!13458 = !DILocation(line: 88, column: 21, scope: !13246)
!13459 = !DILocation(line: 89, column: 9, scope: !13246)
!13460 = !DILocation(line: 64, column: 29, scope: !13461)
!13461 = !DILexicalBlockFile(scope: !13247, file: !13243, discriminator: 2)
!13462 = !DILocation(line: 64, column: 9, scope: !13461)
!13463 = distinct !{!13463, !13464}
!13464 = !DILocation(line: 64, column: 9, scope: !13249)
!13465 = !DILocation(line: 91, column: 18, scope: !13249)
!13466 = !DILocation(line: 91, column: 32, scope: !13249)
!13467 = !DILocation(line: 91, column: 44, scope: !13249)
!13468 = !DILocation(line: 91, column: 14, scope: !13249)
!13469 = !DILocation(line: 92, column: 17, scope: !13249)
!13470 = !DILocation(line: 92, column: 31, scope: !13249)
!13471 = !DILocation(line: 92, column: 14, scope: !13249)
!13472 = !DILocation(line: 93, column: 17, scope: !13249)
!13473 = !DILocation(line: 93, column: 31, scope: !13249)
!13474 = !DILocation(line: 93, column: 14, scope: !13249)
!13475 = !DILocation(line: 94, column: 18, scope: !13249)
!13476 = !DILocation(line: 94, column: 32, scope: !13249)
!13477 = !DILocation(line: 94, column: 44, scope: !13249)
!13478 = !DILocation(line: 94, column: 14, scope: !13249)
!13479 = !DILocation(line: 95, column: 17, scope: !13249)
!13480 = !DILocation(line: 95, column: 31, scope: !13249)
!13481 = !DILocation(line: 95, column: 14, scope: !13249)
!13482 = !DILocation(line: 96, column: 17, scope: !13249)
!13483 = !DILocation(line: 96, column: 31, scope: !13249)
!13484 = !DILocation(line: 96, column: 14, scope: !13249)
!13485 = !DILocation(line: 97, column: 5, scope: !13249)
!13486 = !DILocation(line: 63, column: 25, scope: !13487)
!13487 = !DILexicalBlockFile(scope: !13250, file: !13243, discriminator: 2)
!13488 = !DILocation(line: 63, column: 5, scope: !13487)
!13489 = distinct !{!13489, !13490}
!13490 = !DILocation(line: 63, column: 5, scope: !13242)
!13491 = !DILocation(line: 98, column: 1, scope: !13242)
!13492 = distinct !DISubprogram(name: "yuv2yuv_422p8to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!13493 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 78, column: 31, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !13243, line: 64, column: 33)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !13243, line: 64, column: 9)
!13497 = distinct !DILexicalBlock(scope: !13498, file: !13243, line: 64, column: 9)
!13498 = distinct !DILexicalBlock(scope: !13499, file: !13243, line: 63, column: 29)
!13499 = distinct !DILexicalBlock(scope: !13500, file: !13243, line: 63, column: 5)
!13500 = distinct !DILexicalBlock(scope: !13492, file: !13243, line: 63, column: 5)
!13501 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13502)
!13502 = distinct !DILocation(line: 87, column: 23, scope: !13495)
!13503 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 88, column: 23, scope: !13495)
!13505 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 76, column: 28, scope: !13495)
!13507 = !DILocalVariable(name: "_dst", arg: 1, scope: !13492, file: !13243, line: 40, type: !17)
!13508 = !DILocation(line: 40, column: 41, scope: !13492)
!13509 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !13492, file: !13243, line: 40, type: !50)
!13510 = !DILocation(line: 40, column: 66, scope: !13492)
!13511 = !DILocalVariable(name: "_src", arg: 3, scope: !13492, file: !13243, line: 41, type: !17)
!13512 = !DILocation(line: 41, column: 34, scope: !13492)
!13513 = !DILocalVariable(name: "src_stride", arg: 4, scope: !13492, file: !13243, line: 41, type: !50)
!13514 = !DILocation(line: 41, column: 59, scope: !13492)
!13515 = !DILocalVariable(name: "w", arg: 5, scope: !13492, file: !13243, line: 42, type: !52)
!13516 = !DILocation(line: 42, column: 29, scope: !13492)
!13517 = !DILocalVariable(name: "h", arg: 6, scope: !13492, file: !13243, line: 42, type: !52)
!13518 = !DILocation(line: 42, column: 36, scope: !13492)
!13519 = !DILocalVariable(name: "c", arg: 7, scope: !13492, file: !13243, line: 42, type: !53)
!13520 = !DILocation(line: 42, column: 53, scope: !13492)
!13521 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !13492, file: !13243, line: 43, type: !84)
!13522 = !DILocation(line: 43, column: 39, scope: !13492)
!13523 = !DILocalVariable(name: "dst", scope: !13492, file: !13243, line: 45, type: !17)
!13524 = !DILocation(line: 45, column: 15, scope: !13492)
!13525 = !DILocation(line: 45, column: 34, scope: !13492)
!13526 = !DILocalVariable(name: "src", scope: !13492, file: !13243, line: 46, type: !17)
!13527 = !DILocation(line: 46, column: 15, scope: !13492)
!13528 = !DILocation(line: 46, column: 34, scope: !13492)
!13529 = !DILocalVariable(name: "src0", scope: !13492, file: !13243, line: 47, type: !304)
!13530 = !DILocation(line: 47, column: 20, scope: !13492)
!13531 = !DILocation(line: 47, column: 27, scope: !13492)
!13532 = !DILocalVariable(name: "src1", scope: !13492, file: !13243, line: 47, type: !304)
!13533 = !DILocation(line: 47, column: 36, scope: !13492)
!13534 = !DILocation(line: 47, column: 43, scope: !13492)
!13535 = !DILocalVariable(name: "src2", scope: !13492, file: !13243, line: 47, type: !304)
!13536 = !DILocation(line: 47, column: 52, scope: !13492)
!13537 = !DILocation(line: 47, column: 59, scope: !13492)
!13538 = !DILocalVariable(name: "dst0", scope: !13492, file: !13243, line: 48, type: !18)
!13539 = !DILocation(line: 48, column: 14, scope: !13492)
!13540 = !DILocation(line: 48, column: 21, scope: !13492)
!13541 = !DILocalVariable(name: "dst1", scope: !13492, file: !13243, line: 48, type: !18)
!13542 = !DILocation(line: 48, column: 30, scope: !13492)
!13543 = !DILocation(line: 48, column: 37, scope: !13492)
!13544 = !DILocalVariable(name: "dst2", scope: !13492, file: !13243, line: 48, type: !18)
!13545 = !DILocation(line: 48, column: 46, scope: !13492)
!13546 = !DILocation(line: 48, column: 53, scope: !13492)
!13547 = !DILocalVariable(name: "y", scope: !13492, file: !13243, line: 49, type: !52)
!13548 = !DILocation(line: 49, column: 9, scope: !13492)
!13549 = !DILocalVariable(name: "x", scope: !13492, file: !13243, line: 49, type: !52)
!13550 = !DILocation(line: 49, column: 12, scope: !13492)
!13551 = !DILocalVariable(name: "sh", scope: !13492, file: !13243, line: 50, type: !343)
!13552 = !DILocation(line: 50, column: 15, scope: !13492)
!13553 = !DILocalVariable(name: "rnd", scope: !13492, file: !13243, line: 51, type: !343)
!13554 = !DILocation(line: 51, column: 15, scope: !13492)
!13555 = !DILocalVariable(name: "y_off_in", scope: !13492, file: !13243, line: 52, type: !52)
!13556 = !DILocation(line: 52, column: 9, scope: !13492)
!13557 = !DILocation(line: 52, column: 20, scope: !13492)
!13558 = !DILocalVariable(name: "y_off_out", scope: !13492, file: !13243, line: 53, type: !52)
!13559 = !DILocation(line: 53, column: 9, scope: !13492)
!13560 = !DILocation(line: 53, column: 21, scope: !13492)
!13561 = !DILocation(line: 53, column: 38, scope: !13492)
!13562 = !DILocalVariable(name: "uv_off_in", scope: !13492, file: !13243, line: 54, type: !343)
!13563 = !DILocation(line: 54, column: 15, scope: !13492)
!13564 = !DILocalVariable(name: "uv_off_out", scope: !13492, file: !13243, line: 55, type: !343)
!13565 = !DILocation(line: 55, column: 15, scope: !13492)
!13566 = !DILocalVariable(name: "cyy", scope: !13492, file: !13243, line: 56, type: !52)
!13567 = !DILocation(line: 56, column: 9, scope: !13492)
!13568 = !DILocation(line: 56, column: 15, scope: !13492)
!13569 = !DILocalVariable(name: "cyu", scope: !13492, file: !13243, line: 56, type: !52)
!13570 = !DILocation(line: 56, column: 27, scope: !13492)
!13571 = !DILocation(line: 56, column: 33, scope: !13492)
!13572 = !DILocalVariable(name: "cyv", scope: !13492, file: !13243, line: 56, type: !52)
!13573 = !DILocation(line: 56, column: 45, scope: !13492)
!13574 = !DILocation(line: 56, column: 51, scope: !13492)
!13575 = !DILocalVariable(name: "cuu", scope: !13492, file: !13243, line: 57, type: !52)
!13576 = !DILocation(line: 57, column: 9, scope: !13492)
!13577 = !DILocation(line: 57, column: 15, scope: !13492)
!13578 = !DILocalVariable(name: "cuv", scope: !13492, file: !13243, line: 57, type: !52)
!13579 = !DILocation(line: 57, column: 27, scope: !13492)
!13580 = !DILocation(line: 57, column: 33, scope: !13492)
!13581 = !DILocalVariable(name: "cvu", scope: !13492, file: !13243, line: 57, type: !52)
!13582 = !DILocation(line: 57, column: 45, scope: !13492)
!13583 = !DILocation(line: 57, column: 51, scope: !13492)
!13584 = !DILocalVariable(name: "cvv", scope: !13492, file: !13243, line: 57, type: !52)
!13585 = !DILocation(line: 57, column: 63, scope: !13492)
!13586 = !DILocation(line: 57, column: 69, scope: !13492)
!13587 = !DILocation(line: 61, column: 58, scope: !13492)
!13588 = !DILocation(line: 61, column: 61, scope: !13492)
!13589 = !DILocation(line: 61, column: 72, scope: !13492)
!13590 = !DILocation(line: 61, column: 77, scope: !13492)
!13591 = !DILocation(line: 61, column: 7, scope: !13492)
!13592 = !DILocation(line: 62, column: 58, scope: !13492)
!13593 = !DILocation(line: 62, column: 61, scope: !13492)
!13594 = !DILocation(line: 62, column: 72, scope: !13492)
!13595 = !DILocation(line: 62, column: 77, scope: !13492)
!13596 = !DILocation(line: 62, column: 7, scope: !13492)
!13597 = !DILocation(line: 63, column: 12, scope: !13500)
!13598 = !DILocation(line: 63, column: 10, scope: !13500)
!13599 = !DILocation(line: 63, column: 17, scope: !13600)
!13600 = !DILexicalBlockFile(scope: !13499, file: !13243, discriminator: 1)
!13601 = !DILocation(line: 63, column: 21, scope: !13600)
!13602 = !DILocation(line: 63, column: 19, scope: !13600)
!13603 = !DILocation(line: 63, column: 5, scope: !13600)
!13604 = !DILocation(line: 64, column: 16, scope: !13497)
!13605 = !DILocation(line: 64, column: 14, scope: !13497)
!13606 = !DILocation(line: 64, column: 21, scope: !13607)
!13607 = !DILexicalBlockFile(scope: !13496, file: !13243, discriminator: 1)
!13608 = !DILocation(line: 64, column: 25, scope: !13607)
!13609 = !DILocation(line: 64, column: 23, scope: !13607)
!13610 = !DILocation(line: 64, column: 9, scope: !13607)
!13611 = !DILocalVariable(name: "y00", scope: !13495, file: !13243, line: 65, type: !52)
!13612 = !DILocation(line: 65, column: 17, scope: !13495)
!13613 = !DILocation(line: 65, column: 28, scope: !13495)
!13614 = !DILocation(line: 65, column: 30, scope: !13495)
!13615 = !DILocation(line: 65, column: 23, scope: !13495)
!13616 = !DILocation(line: 65, column: 38, scope: !13495)
!13617 = !DILocation(line: 65, column: 36, scope: !13495)
!13618 = !DILocalVariable(name: "y01", scope: !13495, file: !13243, line: 67, type: !52)
!13619 = !DILocation(line: 67, column: 17, scope: !13495)
!13620 = !DILocation(line: 67, column: 32, scope: !13495)
!13621 = !DILocation(line: 67, column: 30, scope: !13495)
!13622 = !DILocation(line: 67, column: 34, scope: !13495)
!13623 = !DILocation(line: 67, column: 23, scope: !13495)
!13624 = !DILocation(line: 67, column: 41, scope: !13495)
!13625 = !DILocation(line: 67, column: 39, scope: !13495)
!13626 = !DILocalVariable(name: "u", scope: !13495, file: !13243, line: 73, type: !52)
!13627 = !DILocation(line: 73, column: 17, scope: !13495)
!13628 = !DILocation(line: 73, column: 26, scope: !13495)
!13629 = !DILocation(line: 73, column: 21, scope: !13495)
!13630 = !DILocation(line: 73, column: 29, scope: !13495)
!13631 = !DILocalVariable(name: "v", scope: !13495, file: !13243, line: 73, type: !52)
!13632 = !DILocation(line: 73, column: 42, scope: !13495)
!13633 = !DILocation(line: 73, column: 51, scope: !13495)
!13634 = !DILocation(line: 73, column: 46, scope: !13495)
!13635 = !DILocation(line: 73, column: 54, scope: !13495)
!13636 = !DILocalVariable(name: "uv_val", scope: !13495, file: !13243, line: 74, type: !52)
!13637 = !DILocation(line: 74, column: 17, scope: !13495)
!13638 = !DILocation(line: 74, column: 26, scope: !13495)
!13639 = !DILocation(line: 74, column: 32, scope: !13495)
!13640 = !DILocation(line: 74, column: 30, scope: !13495)
!13641 = !DILocation(line: 74, column: 36, scope: !13495)
!13642 = !DILocation(line: 74, column: 42, scope: !13495)
!13643 = !DILocation(line: 74, column: 40, scope: !13495)
!13644 = !DILocation(line: 74, column: 34, scope: !13495)
!13645 = !DILocation(line: 74, column: 44, scope: !13495)
!13646 = !DILocation(line: 74, column: 52, scope: !13495)
!13647 = !DILocation(line: 74, column: 50, scope: !13495)
!13648 = !DILocation(line: 76, column: 45, scope: !13495)
!13649 = !DILocation(line: 76, column: 51, scope: !13495)
!13650 = !DILocation(line: 76, column: 49, scope: !13495)
!13651 = !DILocation(line: 76, column: 57, scope: !13495)
!13652 = !DILocation(line: 76, column: 55, scope: !13495)
!13653 = !DILocation(line: 76, column: 65, scope: !13495)
!13654 = !DILocation(line: 76, column: 28, scope: !13495)
!13655 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13506)
!13656 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13506)
!13657 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13506)
!13658 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13506)
!13659 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13506)
!13660 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13506)
!13661 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13506)
!13662 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13506)
!13663 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13506)
!13664 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13506)
!13665 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13506)
!13666 = !DILocation(line: 76, column: 18, scope: !13495)
!13667 = !DILocation(line: 76, column: 20, scope: !13495)
!13668 = !DILocation(line: 76, column: 13, scope: !13495)
!13669 = !DILocation(line: 76, column: 26, scope: !13495)
!13670 = !DILocation(line: 78, column: 48, scope: !13495)
!13671 = !DILocation(line: 78, column: 54, scope: !13495)
!13672 = !DILocation(line: 78, column: 52, scope: !13495)
!13673 = !DILocation(line: 78, column: 60, scope: !13495)
!13674 = !DILocation(line: 78, column: 58, scope: !13495)
!13675 = !DILocation(line: 78, column: 68, scope: !13495)
!13676 = !DILocation(line: 78, column: 31, scope: !13495)
!13677 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13494)
!13678 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13494)
!13679 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13494)
!13680 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13494)
!13681 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13494)
!13682 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13494)
!13683 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13494)
!13684 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13494)
!13685 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13494)
!13686 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13494)
!13687 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13494)
!13688 = !DILocation(line: 78, column: 18, scope: !13495)
!13689 = !DILocation(line: 78, column: 20, scope: !13495)
!13690 = !DILocation(line: 78, column: 24, scope: !13495)
!13691 = !DILocation(line: 78, column: 13, scope: !13495)
!13692 = !DILocation(line: 78, column: 29, scope: !13495)
!13693 = !DILocation(line: 87, column: 40, scope: !13495)
!13694 = !DILocation(line: 87, column: 44, scope: !13495)
!13695 = !DILocation(line: 87, column: 42, scope: !13495)
!13696 = !DILocation(line: 87, column: 50, scope: !13495)
!13697 = !DILocation(line: 87, column: 54, scope: !13495)
!13698 = !DILocation(line: 87, column: 52, scope: !13495)
!13699 = !DILocation(line: 87, column: 48, scope: !13495)
!13700 = !DILocation(line: 87, column: 58, scope: !13495)
!13701 = !DILocation(line: 87, column: 72, scope: !13495)
!13702 = !DILocation(line: 87, column: 23, scope: !13495)
!13703 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13502)
!13704 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13502)
!13705 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13502)
!13706 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13502)
!13707 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13502)
!13708 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13502)
!13709 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13502)
!13710 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13502)
!13711 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13502)
!13712 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13502)
!13713 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13502)
!13714 = !DILocation(line: 87, column: 18, scope: !13495)
!13715 = !DILocation(line: 87, column: 13, scope: !13495)
!13716 = !DILocation(line: 87, column: 21, scope: !13495)
!13717 = !DILocation(line: 88, column: 40, scope: !13495)
!13718 = !DILocation(line: 88, column: 44, scope: !13495)
!13719 = !DILocation(line: 88, column: 42, scope: !13495)
!13720 = !DILocation(line: 88, column: 50, scope: !13495)
!13721 = !DILocation(line: 88, column: 54, scope: !13495)
!13722 = !DILocation(line: 88, column: 52, scope: !13495)
!13723 = !DILocation(line: 88, column: 48, scope: !13495)
!13724 = !DILocation(line: 88, column: 58, scope: !13495)
!13725 = !DILocation(line: 88, column: 72, scope: !13495)
!13726 = !DILocation(line: 88, column: 23, scope: !13495)
!13727 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13504)
!13728 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13504)
!13729 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13504)
!13730 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13504)
!13731 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13504)
!13732 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13504)
!13733 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13504)
!13734 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13504)
!13735 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13504)
!13736 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13504)
!13737 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13504)
!13738 = !DILocation(line: 88, column: 18, scope: !13495)
!13739 = !DILocation(line: 88, column: 13, scope: !13495)
!13740 = !DILocation(line: 88, column: 21, scope: !13495)
!13741 = !DILocation(line: 89, column: 9, scope: !13495)
!13742 = !DILocation(line: 64, column: 29, scope: !13743)
!13743 = !DILexicalBlockFile(scope: !13496, file: !13243, discriminator: 2)
!13744 = !DILocation(line: 64, column: 9, scope: !13743)
!13745 = distinct !{!13745, !13746}
!13746 = !DILocation(line: 64, column: 9, scope: !13498)
!13747 = !DILocation(line: 91, column: 18, scope: !13498)
!13748 = !DILocation(line: 91, column: 32, scope: !13498)
!13749 = !DILocation(line: 91, column: 44, scope: !13498)
!13750 = !DILocation(line: 91, column: 14, scope: !13498)
!13751 = !DILocation(line: 92, column: 17, scope: !13498)
!13752 = !DILocation(line: 92, column: 31, scope: !13498)
!13753 = !DILocation(line: 92, column: 14, scope: !13498)
!13754 = !DILocation(line: 93, column: 17, scope: !13498)
!13755 = !DILocation(line: 93, column: 31, scope: !13498)
!13756 = !DILocation(line: 93, column: 14, scope: !13498)
!13757 = !DILocation(line: 94, column: 18, scope: !13498)
!13758 = !DILocation(line: 94, column: 32, scope: !13498)
!13759 = !DILocation(line: 94, column: 44, scope: !13498)
!13760 = !DILocation(line: 94, column: 14, scope: !13498)
!13761 = !DILocation(line: 95, column: 17, scope: !13498)
!13762 = !DILocation(line: 95, column: 31, scope: !13498)
!13763 = !DILocation(line: 95, column: 14, scope: !13498)
!13764 = !DILocation(line: 96, column: 17, scope: !13498)
!13765 = !DILocation(line: 96, column: 31, scope: !13498)
!13766 = !DILocation(line: 96, column: 14, scope: !13498)
!13767 = !DILocation(line: 97, column: 5, scope: !13498)
!13768 = !DILocation(line: 63, column: 25, scope: !13769)
!13769 = !DILexicalBlockFile(scope: !13499, file: !13243, discriminator: 2)
!13770 = !DILocation(line: 63, column: 5, scope: !13769)
!13771 = distinct !{!13771, !13772}
!13772 = !DILocation(line: 63, column: 5, scope: !13492)
!13773 = !DILocation(line: 98, column: 1, scope: !13492)
!13774 = distinct !DISubprogram(name: "yuv2yuv_420p8to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!13775 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 78, column: 31, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13778, file: !13243, line: 64, column: 33)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !13243, line: 64, column: 9)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !13243, line: 64, column: 9)
!13780 = distinct !DILexicalBlock(scope: !13781, file: !13243, line: 63, column: 29)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13243, line: 63, column: 5)
!13782 = distinct !DILexicalBlock(scope: !13774, file: !13243, line: 63, column: 5)
!13783 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13784)
!13784 = distinct !DILocation(line: 81, column: 31, scope: !13777)
!13785 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13786)
!13786 = distinct !DILocation(line: 83, column: 31, scope: !13777)
!13787 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 87, column: 23, scope: !13777)
!13789 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 88, column: 23, scope: !13777)
!13791 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !13792)
!13792 = distinct !DILocation(line: 76, column: 28, scope: !13777)
!13793 = !DILocalVariable(name: "_dst", arg: 1, scope: !13774, file: !13243, line: 40, type: !17)
!13794 = !DILocation(line: 40, column: 41, scope: !13774)
!13795 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !13774, file: !13243, line: 40, type: !50)
!13796 = !DILocation(line: 40, column: 66, scope: !13774)
!13797 = !DILocalVariable(name: "_src", arg: 3, scope: !13774, file: !13243, line: 41, type: !17)
!13798 = !DILocation(line: 41, column: 34, scope: !13774)
!13799 = !DILocalVariable(name: "src_stride", arg: 4, scope: !13774, file: !13243, line: 41, type: !50)
!13800 = !DILocation(line: 41, column: 59, scope: !13774)
!13801 = !DILocalVariable(name: "w", arg: 5, scope: !13774, file: !13243, line: 42, type: !52)
!13802 = !DILocation(line: 42, column: 29, scope: !13774)
!13803 = !DILocalVariable(name: "h", arg: 6, scope: !13774, file: !13243, line: 42, type: !52)
!13804 = !DILocation(line: 42, column: 36, scope: !13774)
!13805 = !DILocalVariable(name: "c", arg: 7, scope: !13774, file: !13243, line: 42, type: !53)
!13806 = !DILocation(line: 42, column: 53, scope: !13774)
!13807 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !13774, file: !13243, line: 43, type: !84)
!13808 = !DILocation(line: 43, column: 39, scope: !13774)
!13809 = !DILocalVariable(name: "dst", scope: !13774, file: !13243, line: 45, type: !17)
!13810 = !DILocation(line: 45, column: 15, scope: !13774)
!13811 = !DILocation(line: 45, column: 34, scope: !13774)
!13812 = !DILocalVariable(name: "src", scope: !13774, file: !13243, line: 46, type: !17)
!13813 = !DILocation(line: 46, column: 15, scope: !13774)
!13814 = !DILocation(line: 46, column: 34, scope: !13774)
!13815 = !DILocalVariable(name: "src0", scope: !13774, file: !13243, line: 47, type: !304)
!13816 = !DILocation(line: 47, column: 20, scope: !13774)
!13817 = !DILocation(line: 47, column: 27, scope: !13774)
!13818 = !DILocalVariable(name: "src1", scope: !13774, file: !13243, line: 47, type: !304)
!13819 = !DILocation(line: 47, column: 36, scope: !13774)
!13820 = !DILocation(line: 47, column: 43, scope: !13774)
!13821 = !DILocalVariable(name: "src2", scope: !13774, file: !13243, line: 47, type: !304)
!13822 = !DILocation(line: 47, column: 52, scope: !13774)
!13823 = !DILocation(line: 47, column: 59, scope: !13774)
!13824 = !DILocalVariable(name: "dst0", scope: !13774, file: !13243, line: 48, type: !18)
!13825 = !DILocation(line: 48, column: 14, scope: !13774)
!13826 = !DILocation(line: 48, column: 21, scope: !13774)
!13827 = !DILocalVariable(name: "dst1", scope: !13774, file: !13243, line: 48, type: !18)
!13828 = !DILocation(line: 48, column: 30, scope: !13774)
!13829 = !DILocation(line: 48, column: 37, scope: !13774)
!13830 = !DILocalVariable(name: "dst2", scope: !13774, file: !13243, line: 48, type: !18)
!13831 = !DILocation(line: 48, column: 46, scope: !13774)
!13832 = !DILocation(line: 48, column: 53, scope: !13774)
!13833 = !DILocalVariable(name: "y", scope: !13774, file: !13243, line: 49, type: !52)
!13834 = !DILocation(line: 49, column: 9, scope: !13774)
!13835 = !DILocalVariable(name: "x", scope: !13774, file: !13243, line: 49, type: !52)
!13836 = !DILocation(line: 49, column: 12, scope: !13774)
!13837 = !DILocalVariable(name: "sh", scope: !13774, file: !13243, line: 50, type: !343)
!13838 = !DILocation(line: 50, column: 15, scope: !13774)
!13839 = !DILocalVariable(name: "rnd", scope: !13774, file: !13243, line: 51, type: !343)
!13840 = !DILocation(line: 51, column: 15, scope: !13774)
!13841 = !DILocalVariable(name: "y_off_in", scope: !13774, file: !13243, line: 52, type: !52)
!13842 = !DILocation(line: 52, column: 9, scope: !13774)
!13843 = !DILocation(line: 52, column: 20, scope: !13774)
!13844 = !DILocalVariable(name: "y_off_out", scope: !13774, file: !13243, line: 53, type: !52)
!13845 = !DILocation(line: 53, column: 9, scope: !13774)
!13846 = !DILocation(line: 53, column: 21, scope: !13774)
!13847 = !DILocation(line: 53, column: 38, scope: !13774)
!13848 = !DILocalVariable(name: "uv_off_in", scope: !13774, file: !13243, line: 54, type: !343)
!13849 = !DILocation(line: 54, column: 15, scope: !13774)
!13850 = !DILocalVariable(name: "uv_off_out", scope: !13774, file: !13243, line: 55, type: !343)
!13851 = !DILocation(line: 55, column: 15, scope: !13774)
!13852 = !DILocalVariable(name: "cyy", scope: !13774, file: !13243, line: 56, type: !52)
!13853 = !DILocation(line: 56, column: 9, scope: !13774)
!13854 = !DILocation(line: 56, column: 15, scope: !13774)
!13855 = !DILocalVariable(name: "cyu", scope: !13774, file: !13243, line: 56, type: !52)
!13856 = !DILocation(line: 56, column: 27, scope: !13774)
!13857 = !DILocation(line: 56, column: 33, scope: !13774)
!13858 = !DILocalVariable(name: "cyv", scope: !13774, file: !13243, line: 56, type: !52)
!13859 = !DILocation(line: 56, column: 45, scope: !13774)
!13860 = !DILocation(line: 56, column: 51, scope: !13774)
!13861 = !DILocalVariable(name: "cuu", scope: !13774, file: !13243, line: 57, type: !52)
!13862 = !DILocation(line: 57, column: 9, scope: !13774)
!13863 = !DILocation(line: 57, column: 15, scope: !13774)
!13864 = !DILocalVariable(name: "cuv", scope: !13774, file: !13243, line: 57, type: !52)
!13865 = !DILocation(line: 57, column: 27, scope: !13774)
!13866 = !DILocation(line: 57, column: 33, scope: !13774)
!13867 = !DILocalVariable(name: "cvu", scope: !13774, file: !13243, line: 57, type: !52)
!13868 = !DILocation(line: 57, column: 45, scope: !13774)
!13869 = !DILocation(line: 57, column: 51, scope: !13774)
!13870 = !DILocalVariable(name: "cvv", scope: !13774, file: !13243, line: 57, type: !52)
!13871 = !DILocation(line: 57, column: 63, scope: !13774)
!13872 = !DILocation(line: 57, column: 69, scope: !13774)
!13873 = !DILocation(line: 61, column: 58, scope: !13774)
!13874 = !DILocation(line: 61, column: 61, scope: !13774)
!13875 = !DILocation(line: 61, column: 72, scope: !13774)
!13876 = !DILocation(line: 61, column: 77, scope: !13774)
!13877 = !DILocation(line: 61, column: 7, scope: !13774)
!13878 = !DILocation(line: 62, column: 58, scope: !13774)
!13879 = !DILocation(line: 62, column: 61, scope: !13774)
!13880 = !DILocation(line: 62, column: 72, scope: !13774)
!13881 = !DILocation(line: 62, column: 77, scope: !13774)
!13882 = !DILocation(line: 62, column: 7, scope: !13774)
!13883 = !DILocation(line: 63, column: 12, scope: !13782)
!13884 = !DILocation(line: 63, column: 10, scope: !13782)
!13885 = !DILocation(line: 63, column: 17, scope: !13886)
!13886 = !DILexicalBlockFile(scope: !13781, file: !13243, discriminator: 1)
!13887 = !DILocation(line: 63, column: 21, scope: !13886)
!13888 = !DILocation(line: 63, column: 19, scope: !13886)
!13889 = !DILocation(line: 63, column: 5, scope: !13886)
!13890 = !DILocation(line: 64, column: 16, scope: !13779)
!13891 = !DILocation(line: 64, column: 14, scope: !13779)
!13892 = !DILocation(line: 64, column: 21, scope: !13893)
!13893 = !DILexicalBlockFile(scope: !13778, file: !13243, discriminator: 1)
!13894 = !DILocation(line: 64, column: 25, scope: !13893)
!13895 = !DILocation(line: 64, column: 23, scope: !13893)
!13896 = !DILocation(line: 64, column: 9, scope: !13893)
!13897 = !DILocalVariable(name: "y00", scope: !13777, file: !13243, line: 65, type: !52)
!13898 = !DILocation(line: 65, column: 17, scope: !13777)
!13899 = !DILocation(line: 65, column: 28, scope: !13777)
!13900 = !DILocation(line: 65, column: 30, scope: !13777)
!13901 = !DILocation(line: 65, column: 23, scope: !13777)
!13902 = !DILocation(line: 65, column: 38, scope: !13777)
!13903 = !DILocation(line: 65, column: 36, scope: !13777)
!13904 = !DILocalVariable(name: "y01", scope: !13777, file: !13243, line: 67, type: !52)
!13905 = !DILocation(line: 67, column: 17, scope: !13777)
!13906 = !DILocation(line: 67, column: 32, scope: !13777)
!13907 = !DILocation(line: 67, column: 30, scope: !13777)
!13908 = !DILocation(line: 67, column: 34, scope: !13777)
!13909 = !DILocation(line: 67, column: 23, scope: !13777)
!13910 = !DILocation(line: 67, column: 41, scope: !13777)
!13911 = !DILocation(line: 67, column: 39, scope: !13777)
!13912 = !DILocalVariable(name: "y10", scope: !13777, file: !13243, line: 69, type: !52)
!13913 = !DILocation(line: 69, column: 17, scope: !13777)
!13914 = !DILocation(line: 69, column: 28, scope: !13777)
!13915 = !DILocation(line: 69, column: 42, scope: !13777)
!13916 = !DILocation(line: 69, column: 66, scope: !13777)
!13917 = !DILocation(line: 69, column: 64, scope: !13777)
!13918 = !DILocation(line: 69, column: 62, scope: !13777)
!13919 = !DILocation(line: 69, column: 60, scope: !13777)
!13920 = !DILocation(line: 69, column: 23, scope: !13777)
!13921 = !DILocation(line: 69, column: 71, scope: !13777)
!13922 = !DILocation(line: 69, column: 69, scope: !13777)
!13923 = !DILocalVariable(name: "y11", scope: !13777, file: !13243, line: 70, type: !52)
!13924 = !DILocation(line: 70, column: 17, scope: !13777)
!13925 = !DILocation(line: 70, column: 28, scope: !13777)
!13926 = !DILocation(line: 70, column: 42, scope: !13777)
!13927 = !DILocation(line: 70, column: 66, scope: !13777)
!13928 = !DILocation(line: 70, column: 64, scope: !13777)
!13929 = !DILocation(line: 70, column: 62, scope: !13777)
!13930 = !DILocation(line: 70, column: 60, scope: !13777)
!13931 = !DILocation(line: 70, column: 68, scope: !13777)
!13932 = !DILocation(line: 70, column: 23, scope: !13777)
!13933 = !DILocation(line: 70, column: 75, scope: !13777)
!13934 = !DILocation(line: 70, column: 73, scope: !13777)
!13935 = !DILocalVariable(name: "u", scope: !13777, file: !13243, line: 73, type: !52)
!13936 = !DILocation(line: 73, column: 17, scope: !13777)
!13937 = !DILocation(line: 73, column: 26, scope: !13777)
!13938 = !DILocation(line: 73, column: 21, scope: !13777)
!13939 = !DILocation(line: 73, column: 29, scope: !13777)
!13940 = !DILocalVariable(name: "v", scope: !13777, file: !13243, line: 73, type: !52)
!13941 = !DILocation(line: 73, column: 42, scope: !13777)
!13942 = !DILocation(line: 73, column: 51, scope: !13777)
!13943 = !DILocation(line: 73, column: 46, scope: !13777)
!13944 = !DILocation(line: 73, column: 54, scope: !13777)
!13945 = !DILocalVariable(name: "uv_val", scope: !13777, file: !13243, line: 74, type: !52)
!13946 = !DILocation(line: 74, column: 17, scope: !13777)
!13947 = !DILocation(line: 74, column: 26, scope: !13777)
!13948 = !DILocation(line: 74, column: 32, scope: !13777)
!13949 = !DILocation(line: 74, column: 30, scope: !13777)
!13950 = !DILocation(line: 74, column: 36, scope: !13777)
!13951 = !DILocation(line: 74, column: 42, scope: !13777)
!13952 = !DILocation(line: 74, column: 40, scope: !13777)
!13953 = !DILocation(line: 74, column: 34, scope: !13777)
!13954 = !DILocation(line: 74, column: 44, scope: !13777)
!13955 = !DILocation(line: 74, column: 52, scope: !13777)
!13956 = !DILocation(line: 74, column: 50, scope: !13777)
!13957 = !DILocation(line: 76, column: 45, scope: !13777)
!13958 = !DILocation(line: 76, column: 51, scope: !13777)
!13959 = !DILocation(line: 76, column: 49, scope: !13777)
!13960 = !DILocation(line: 76, column: 57, scope: !13777)
!13961 = !DILocation(line: 76, column: 55, scope: !13777)
!13962 = !DILocation(line: 76, column: 65, scope: !13777)
!13963 = !DILocation(line: 76, column: 28, scope: !13777)
!13964 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13792)
!13965 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13792)
!13966 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13792)
!13967 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13792)
!13968 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13792)
!13969 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13792)
!13970 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13792)
!13971 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13792)
!13972 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13792)
!13973 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13792)
!13974 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13792)
!13975 = !DILocation(line: 76, column: 18, scope: !13777)
!13976 = !DILocation(line: 76, column: 20, scope: !13777)
!13977 = !DILocation(line: 76, column: 13, scope: !13777)
!13978 = !DILocation(line: 76, column: 26, scope: !13777)
!13979 = !DILocation(line: 78, column: 48, scope: !13777)
!13980 = !DILocation(line: 78, column: 54, scope: !13777)
!13981 = !DILocation(line: 78, column: 52, scope: !13777)
!13982 = !DILocation(line: 78, column: 60, scope: !13777)
!13983 = !DILocation(line: 78, column: 58, scope: !13777)
!13984 = !DILocation(line: 78, column: 68, scope: !13777)
!13985 = !DILocation(line: 78, column: 31, scope: !13777)
!13986 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13776)
!13987 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13776)
!13988 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13776)
!13989 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13776)
!13990 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13776)
!13991 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13776)
!13992 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13776)
!13993 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13776)
!13994 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13776)
!13995 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13776)
!13996 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13776)
!13997 = !DILocation(line: 78, column: 18, scope: !13777)
!13998 = !DILocation(line: 78, column: 20, scope: !13777)
!13999 = !DILocation(line: 78, column: 24, scope: !13777)
!14000 = !DILocation(line: 78, column: 13, scope: !13777)
!14001 = !DILocation(line: 78, column: 29, scope: !13777)
!14002 = !DILocation(line: 81, column: 48, scope: !13777)
!14003 = !DILocation(line: 81, column: 54, scope: !13777)
!14004 = !DILocation(line: 81, column: 52, scope: !13777)
!14005 = !DILocation(line: 81, column: 60, scope: !13777)
!14006 = !DILocation(line: 81, column: 58, scope: !13777)
!14007 = !DILocation(line: 81, column: 68, scope: !13777)
!14008 = !DILocation(line: 81, column: 31, scope: !13777)
!14009 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13784)
!14010 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13784)
!14011 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13784)
!14012 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13784)
!14013 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13784)
!14014 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13784)
!14015 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13784)
!14016 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13784)
!14017 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13784)
!14018 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13784)
!14019 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13784)
!14020 = !DILocation(line: 80, column: 18, scope: !13777)
!14021 = !DILocation(line: 80, column: 20, scope: !13777)
!14022 = !DILocation(line: 80, column: 24, scope: !13777)
!14023 = !DILocation(line: 80, column: 30, scope: !13777)
!14024 = !DILocation(line: 80, column: 44, scope: !13777)
!14025 = !DILocation(line: 80, column: 28, scope: !13777)
!14026 = !DILocation(line: 80, column: 13, scope: !13777)
!14027 = !DILocation(line: 80, column: 63, scope: !13777)
!14028 = !DILocation(line: 83, column: 48, scope: !13777)
!14029 = !DILocation(line: 83, column: 54, scope: !13777)
!14030 = !DILocation(line: 83, column: 52, scope: !13777)
!14031 = !DILocation(line: 83, column: 60, scope: !13777)
!14032 = !DILocation(line: 83, column: 58, scope: !13777)
!14033 = !DILocation(line: 83, column: 68, scope: !13777)
!14034 = !DILocation(line: 83, column: 31, scope: !13777)
!14035 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13786)
!14036 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13786)
!14037 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13786)
!14038 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13786)
!14039 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13786)
!14040 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13786)
!14041 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13786)
!14042 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13786)
!14043 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13786)
!14044 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13786)
!14045 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13786)
!14046 = !DILocation(line: 82, column: 18, scope: !13777)
!14047 = !DILocation(line: 82, column: 20, scope: !13777)
!14048 = !DILocation(line: 82, column: 24, scope: !13777)
!14049 = !DILocation(line: 82, column: 30, scope: !13777)
!14050 = !DILocation(line: 82, column: 44, scope: !13777)
!14051 = !DILocation(line: 82, column: 28, scope: !13777)
!14052 = !DILocation(line: 82, column: 13, scope: !13777)
!14053 = !DILocation(line: 82, column: 63, scope: !13777)
!14054 = !DILocation(line: 87, column: 40, scope: !13777)
!14055 = !DILocation(line: 87, column: 44, scope: !13777)
!14056 = !DILocation(line: 87, column: 42, scope: !13777)
!14057 = !DILocation(line: 87, column: 50, scope: !13777)
!14058 = !DILocation(line: 87, column: 54, scope: !13777)
!14059 = !DILocation(line: 87, column: 52, scope: !13777)
!14060 = !DILocation(line: 87, column: 48, scope: !13777)
!14061 = !DILocation(line: 87, column: 58, scope: !13777)
!14062 = !DILocation(line: 87, column: 72, scope: !13777)
!14063 = !DILocation(line: 87, column: 23, scope: !13777)
!14064 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13788)
!14065 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13788)
!14066 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13788)
!14067 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13788)
!14068 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13788)
!14069 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13788)
!14070 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13788)
!14071 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13788)
!14072 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13788)
!14073 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13788)
!14074 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13788)
!14075 = !DILocation(line: 87, column: 18, scope: !13777)
!14076 = !DILocation(line: 87, column: 13, scope: !13777)
!14077 = !DILocation(line: 87, column: 21, scope: !13777)
!14078 = !DILocation(line: 88, column: 40, scope: !13777)
!14079 = !DILocation(line: 88, column: 44, scope: !13777)
!14080 = !DILocation(line: 88, column: 42, scope: !13777)
!14081 = !DILocation(line: 88, column: 50, scope: !13777)
!14082 = !DILocation(line: 88, column: 54, scope: !13777)
!14083 = !DILocation(line: 88, column: 52, scope: !13777)
!14084 = !DILocation(line: 88, column: 48, scope: !13777)
!14085 = !DILocation(line: 88, column: 58, scope: !13777)
!14086 = !DILocation(line: 88, column: 72, scope: !13777)
!14087 = !DILocation(line: 88, column: 23, scope: !13777)
!14088 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !13790)
!14089 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !13790)
!14090 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !13790)
!14091 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !13790)
!14092 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !13790)
!14093 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !13790)
!14094 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !13790)
!14095 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !13790)
!14096 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !13790)
!14097 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !13790)
!14098 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !13790)
!14099 = !DILocation(line: 88, column: 18, scope: !13777)
!14100 = !DILocation(line: 88, column: 13, scope: !13777)
!14101 = !DILocation(line: 88, column: 21, scope: !13777)
!14102 = !DILocation(line: 89, column: 9, scope: !13777)
!14103 = !DILocation(line: 64, column: 29, scope: !14104)
!14104 = !DILexicalBlockFile(scope: !13778, file: !13243, discriminator: 2)
!14105 = !DILocation(line: 64, column: 9, scope: !14104)
!14106 = distinct !{!14106, !14107}
!14107 = !DILocation(line: 64, column: 9, scope: !13780)
!14108 = !DILocation(line: 91, column: 18, scope: !13780)
!14109 = !DILocation(line: 91, column: 32, scope: !13780)
!14110 = !DILocation(line: 91, column: 44, scope: !13780)
!14111 = !DILocation(line: 91, column: 14, scope: !13780)
!14112 = !DILocation(line: 92, column: 17, scope: !13780)
!14113 = !DILocation(line: 92, column: 31, scope: !13780)
!14114 = !DILocation(line: 92, column: 14, scope: !13780)
!14115 = !DILocation(line: 93, column: 17, scope: !13780)
!14116 = !DILocation(line: 93, column: 31, scope: !13780)
!14117 = !DILocation(line: 93, column: 14, scope: !13780)
!14118 = !DILocation(line: 94, column: 18, scope: !13780)
!14119 = !DILocation(line: 94, column: 32, scope: !13780)
!14120 = !DILocation(line: 94, column: 44, scope: !13780)
!14121 = !DILocation(line: 94, column: 14, scope: !13780)
!14122 = !DILocation(line: 95, column: 17, scope: !13780)
!14123 = !DILocation(line: 95, column: 31, scope: !13780)
!14124 = !DILocation(line: 95, column: 14, scope: !13780)
!14125 = !DILocation(line: 96, column: 17, scope: !13780)
!14126 = !DILocation(line: 96, column: 31, scope: !13780)
!14127 = !DILocation(line: 96, column: 14, scope: !13780)
!14128 = !DILocation(line: 97, column: 5, scope: !13780)
!14129 = !DILocation(line: 63, column: 25, scope: !14130)
!14130 = !DILexicalBlockFile(scope: !13781, file: !13243, discriminator: 2)
!14131 = !DILocation(line: 63, column: 5, scope: !14130)
!14132 = distinct !{!14132, !14133}
!14133 = !DILocation(line: 63, column: 5, scope: !13774)
!14134 = !DILocation(line: 98, column: 1, scope: !13774)
!14135 = distinct !DISubprogram(name: "yuv2yuv_444p8to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!14136 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 87, column: 23, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !13243, line: 64, column: 33)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !13243, line: 64, column: 9)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !13243, line: 64, column: 9)
!14141 = distinct !DILexicalBlock(scope: !14142, file: !13243, line: 63, column: 29)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !13243, line: 63, column: 5)
!14143 = distinct !DILexicalBlock(scope: !14135, file: !13243, line: 63, column: 5)
!14144 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14137)
!14145 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 88, column: 23, scope: !14138)
!14147 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14146)
!14148 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14149)
!14149 = distinct !DILocation(line: 76, column: 28, scope: !14138)
!14150 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14149)
!14151 = !DILocalVariable(name: "_dst", arg: 1, scope: !14135, file: !13243, line: 40, type: !17)
!14152 = !DILocation(line: 40, column: 42, scope: !14135)
!14153 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !14135, file: !13243, line: 40, type: !50)
!14154 = !DILocation(line: 40, column: 67, scope: !14135)
!14155 = !DILocalVariable(name: "_src", arg: 3, scope: !14135, file: !13243, line: 41, type: !17)
!14156 = !DILocation(line: 41, column: 34, scope: !14135)
!14157 = !DILocalVariable(name: "src_stride", arg: 4, scope: !14135, file: !13243, line: 41, type: !50)
!14158 = !DILocation(line: 41, column: 59, scope: !14135)
!14159 = !DILocalVariable(name: "w", arg: 5, scope: !14135, file: !13243, line: 42, type: !52)
!14160 = !DILocation(line: 42, column: 29, scope: !14135)
!14161 = !DILocalVariable(name: "h", arg: 6, scope: !14135, file: !13243, line: 42, type: !52)
!14162 = !DILocation(line: 42, column: 36, scope: !14135)
!14163 = !DILocalVariable(name: "c", arg: 7, scope: !14135, file: !13243, line: 42, type: !53)
!14164 = !DILocation(line: 42, column: 53, scope: !14135)
!14165 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !14135, file: !13243, line: 43, type: !84)
!14166 = !DILocation(line: 43, column: 39, scope: !14135)
!14167 = !DILocalVariable(name: "dst", scope: !14135, file: !13243, line: 45, type: !22)
!14168 = !DILocation(line: 45, column: 16, scope: !14135)
!14169 = !DILocation(line: 45, column: 36, scope: !14135)
!14170 = !DILocation(line: 45, column: 22, scope: !14135)
!14171 = !DILocalVariable(name: "src", scope: !14135, file: !13243, line: 46, type: !17)
!14172 = !DILocation(line: 46, column: 15, scope: !14135)
!14173 = !DILocation(line: 46, column: 34, scope: !14135)
!14174 = !DILocalVariable(name: "src0", scope: !14135, file: !13243, line: 47, type: !304)
!14175 = !DILocation(line: 47, column: 20, scope: !14135)
!14176 = !DILocation(line: 47, column: 27, scope: !14135)
!14177 = !DILocalVariable(name: "src1", scope: !14135, file: !13243, line: 47, type: !304)
!14178 = !DILocation(line: 47, column: 36, scope: !14135)
!14179 = !DILocation(line: 47, column: 43, scope: !14135)
!14180 = !DILocalVariable(name: "src2", scope: !14135, file: !13243, line: 47, type: !304)
!14181 = !DILocation(line: 47, column: 52, scope: !14135)
!14182 = !DILocation(line: 47, column: 59, scope: !14135)
!14183 = !DILocalVariable(name: "dst0", scope: !14135, file: !13243, line: 48, type: !23)
!14184 = !DILocation(line: 48, column: 15, scope: !14135)
!14185 = !DILocation(line: 48, column: 22, scope: !14135)
!14186 = !DILocalVariable(name: "dst1", scope: !14135, file: !13243, line: 48, type: !23)
!14187 = !DILocation(line: 48, column: 31, scope: !14135)
!14188 = !DILocation(line: 48, column: 38, scope: !14135)
!14189 = !DILocalVariable(name: "dst2", scope: !14135, file: !13243, line: 48, type: !23)
!14190 = !DILocation(line: 48, column: 47, scope: !14135)
!14191 = !DILocation(line: 48, column: 54, scope: !14135)
!14192 = !DILocalVariable(name: "y", scope: !14135, file: !13243, line: 49, type: !52)
!14193 = !DILocation(line: 49, column: 9, scope: !14135)
!14194 = !DILocalVariable(name: "x", scope: !14135, file: !13243, line: 49, type: !52)
!14195 = !DILocation(line: 49, column: 12, scope: !14135)
!14196 = !DILocalVariable(name: "sh", scope: !14135, file: !13243, line: 50, type: !343)
!14197 = !DILocation(line: 50, column: 15, scope: !14135)
!14198 = !DILocalVariable(name: "rnd", scope: !14135, file: !13243, line: 51, type: !343)
!14199 = !DILocation(line: 51, column: 15, scope: !14135)
!14200 = !DILocalVariable(name: "y_off_in", scope: !14135, file: !13243, line: 52, type: !52)
!14201 = !DILocation(line: 52, column: 9, scope: !14135)
!14202 = !DILocation(line: 52, column: 20, scope: !14135)
!14203 = !DILocalVariable(name: "y_off_out", scope: !14135, file: !13243, line: 53, type: !52)
!14204 = !DILocation(line: 53, column: 9, scope: !14135)
!14205 = !DILocation(line: 53, column: 21, scope: !14135)
!14206 = !DILocation(line: 53, column: 38, scope: !14135)
!14207 = !DILocalVariable(name: "uv_off_in", scope: !14135, file: !13243, line: 54, type: !343)
!14208 = !DILocation(line: 54, column: 15, scope: !14135)
!14209 = !DILocalVariable(name: "uv_off_out", scope: !14135, file: !13243, line: 55, type: !343)
!14210 = !DILocation(line: 55, column: 15, scope: !14135)
!14211 = !DILocalVariable(name: "cyy", scope: !14135, file: !13243, line: 56, type: !52)
!14212 = !DILocation(line: 56, column: 9, scope: !14135)
!14213 = !DILocation(line: 56, column: 15, scope: !14135)
!14214 = !DILocalVariable(name: "cyu", scope: !14135, file: !13243, line: 56, type: !52)
!14215 = !DILocation(line: 56, column: 27, scope: !14135)
!14216 = !DILocation(line: 56, column: 33, scope: !14135)
!14217 = !DILocalVariable(name: "cyv", scope: !14135, file: !13243, line: 56, type: !52)
!14218 = !DILocation(line: 56, column: 45, scope: !14135)
!14219 = !DILocation(line: 56, column: 51, scope: !14135)
!14220 = !DILocalVariable(name: "cuu", scope: !14135, file: !13243, line: 57, type: !52)
!14221 = !DILocation(line: 57, column: 9, scope: !14135)
!14222 = !DILocation(line: 57, column: 15, scope: !14135)
!14223 = !DILocalVariable(name: "cuv", scope: !14135, file: !13243, line: 57, type: !52)
!14224 = !DILocation(line: 57, column: 27, scope: !14135)
!14225 = !DILocation(line: 57, column: 33, scope: !14135)
!14226 = !DILocalVariable(name: "cvu", scope: !14135, file: !13243, line: 57, type: !52)
!14227 = !DILocation(line: 57, column: 45, scope: !14135)
!14228 = !DILocation(line: 57, column: 51, scope: !14135)
!14229 = !DILocalVariable(name: "cvv", scope: !14135, file: !13243, line: 57, type: !52)
!14230 = !DILocation(line: 57, column: 63, scope: !14135)
!14231 = !DILocation(line: 57, column: 69, scope: !14135)
!14232 = !DILocation(line: 61, column: 58, scope: !14135)
!14233 = !DILocation(line: 61, column: 61, scope: !14135)
!14234 = !DILocation(line: 61, column: 72, scope: !14135)
!14235 = !DILocation(line: 61, column: 77, scope: !14135)
!14236 = !DILocation(line: 61, column: 7, scope: !14135)
!14237 = !DILocation(line: 62, column: 58, scope: !14135)
!14238 = !DILocation(line: 62, column: 61, scope: !14135)
!14239 = !DILocation(line: 62, column: 72, scope: !14135)
!14240 = !DILocation(line: 62, column: 77, scope: !14135)
!14241 = !DILocation(line: 62, column: 7, scope: !14135)
!14242 = !DILocation(line: 63, column: 12, scope: !14143)
!14243 = !DILocation(line: 63, column: 10, scope: !14143)
!14244 = !DILocation(line: 63, column: 17, scope: !14245)
!14245 = !DILexicalBlockFile(scope: !14142, file: !13243, discriminator: 1)
!14246 = !DILocation(line: 63, column: 21, scope: !14245)
!14247 = !DILocation(line: 63, column: 19, scope: !14245)
!14248 = !DILocation(line: 63, column: 5, scope: !14245)
!14249 = !DILocation(line: 64, column: 16, scope: !14140)
!14250 = !DILocation(line: 64, column: 14, scope: !14140)
!14251 = !DILocation(line: 64, column: 21, scope: !14252)
!14252 = !DILexicalBlockFile(scope: !14139, file: !13243, discriminator: 1)
!14253 = !DILocation(line: 64, column: 25, scope: !14252)
!14254 = !DILocation(line: 64, column: 23, scope: !14252)
!14255 = !DILocation(line: 64, column: 9, scope: !14252)
!14256 = !DILocalVariable(name: "y00", scope: !14138, file: !13243, line: 65, type: !52)
!14257 = !DILocation(line: 65, column: 17, scope: !14138)
!14258 = !DILocation(line: 65, column: 28, scope: !14138)
!14259 = !DILocation(line: 65, column: 30, scope: !14138)
!14260 = !DILocation(line: 65, column: 23, scope: !14138)
!14261 = !DILocation(line: 65, column: 38, scope: !14138)
!14262 = !DILocation(line: 65, column: 36, scope: !14138)
!14263 = !DILocalVariable(name: "u", scope: !14138, file: !13243, line: 73, type: !52)
!14264 = !DILocation(line: 73, column: 17, scope: !14138)
!14265 = !DILocation(line: 73, column: 26, scope: !14138)
!14266 = !DILocation(line: 73, column: 21, scope: !14138)
!14267 = !DILocation(line: 73, column: 29, scope: !14138)
!14268 = !DILocalVariable(name: "v", scope: !14138, file: !13243, line: 73, type: !52)
!14269 = !DILocation(line: 73, column: 42, scope: !14138)
!14270 = !DILocation(line: 73, column: 51, scope: !14138)
!14271 = !DILocation(line: 73, column: 46, scope: !14138)
!14272 = !DILocation(line: 73, column: 54, scope: !14138)
!14273 = !DILocalVariable(name: "uv_val", scope: !14138, file: !13243, line: 74, type: !52)
!14274 = !DILocation(line: 74, column: 17, scope: !14138)
!14275 = !DILocation(line: 74, column: 26, scope: !14138)
!14276 = !DILocation(line: 74, column: 32, scope: !14138)
!14277 = !DILocation(line: 74, column: 30, scope: !14138)
!14278 = !DILocation(line: 74, column: 36, scope: !14138)
!14279 = !DILocation(line: 74, column: 42, scope: !14138)
!14280 = !DILocation(line: 74, column: 40, scope: !14138)
!14281 = !DILocation(line: 74, column: 34, scope: !14138)
!14282 = !DILocation(line: 74, column: 44, scope: !14138)
!14283 = !DILocation(line: 74, column: 52, scope: !14138)
!14284 = !DILocation(line: 74, column: 50, scope: !14138)
!14285 = !DILocation(line: 76, column: 46, scope: !14138)
!14286 = !DILocation(line: 76, column: 52, scope: !14138)
!14287 = !DILocation(line: 76, column: 50, scope: !14138)
!14288 = !DILocation(line: 76, column: 58, scope: !14138)
!14289 = !DILocation(line: 76, column: 56, scope: !14138)
!14290 = !DILocation(line: 76, column: 66, scope: !14138)
!14291 = !DILocation(line: 76, column: 28, scope: !14138)
!14292 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14149)
!14293 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14149)
!14294 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14149)
!14295 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14149)
!14296 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14149)
!14297 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14149)
!14298 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14149)
!14299 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14149)
!14300 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14149)
!14301 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14149)
!14302 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14149)
!14303 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14149)
!14304 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14149)
!14305 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14149)
!14306 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14149)
!14307 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14149)
!14308 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14149)
!14309 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14149)
!14310 = !DILocation(line: 76, column: 18, scope: !14138)
!14311 = !DILocation(line: 76, column: 20, scope: !14138)
!14312 = !DILocation(line: 76, column: 13, scope: !14138)
!14313 = !DILocation(line: 76, column: 26, scope: !14138)
!14314 = !DILocation(line: 87, column: 41, scope: !14138)
!14315 = !DILocation(line: 87, column: 45, scope: !14138)
!14316 = !DILocation(line: 87, column: 43, scope: !14138)
!14317 = !DILocation(line: 87, column: 51, scope: !14138)
!14318 = !DILocation(line: 87, column: 55, scope: !14138)
!14319 = !DILocation(line: 87, column: 53, scope: !14138)
!14320 = !DILocation(line: 87, column: 49, scope: !14138)
!14321 = !DILocation(line: 87, column: 59, scope: !14138)
!14322 = !DILocation(line: 87, column: 73, scope: !14138)
!14323 = !DILocation(line: 87, column: 23, scope: !14138)
!14324 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14137)
!14325 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14137)
!14326 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14137)
!14327 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14137)
!14328 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14137)
!14329 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14137)
!14330 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14137)
!14331 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14137)
!14332 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14137)
!14333 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14137)
!14334 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14137)
!14335 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14137)
!14336 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14137)
!14337 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14137)
!14338 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14137)
!14339 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14137)
!14340 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14137)
!14341 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14137)
!14342 = !DILocation(line: 87, column: 18, scope: !14138)
!14343 = !DILocation(line: 87, column: 13, scope: !14138)
!14344 = !DILocation(line: 87, column: 21, scope: !14138)
!14345 = !DILocation(line: 88, column: 41, scope: !14138)
!14346 = !DILocation(line: 88, column: 45, scope: !14138)
!14347 = !DILocation(line: 88, column: 43, scope: !14138)
!14348 = !DILocation(line: 88, column: 51, scope: !14138)
!14349 = !DILocation(line: 88, column: 55, scope: !14138)
!14350 = !DILocation(line: 88, column: 53, scope: !14138)
!14351 = !DILocation(line: 88, column: 49, scope: !14138)
!14352 = !DILocation(line: 88, column: 59, scope: !14138)
!14353 = !DILocation(line: 88, column: 73, scope: !14138)
!14354 = !DILocation(line: 88, column: 23, scope: !14138)
!14355 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14146)
!14356 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14146)
!14357 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14146)
!14358 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14146)
!14359 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14146)
!14360 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14146)
!14361 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14146)
!14362 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14146)
!14363 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14146)
!14364 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14146)
!14365 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14146)
!14366 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14146)
!14367 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14146)
!14368 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14146)
!14369 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14146)
!14370 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14146)
!14371 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14146)
!14372 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14146)
!14373 = !DILocation(line: 88, column: 18, scope: !14138)
!14374 = !DILocation(line: 88, column: 13, scope: !14138)
!14375 = !DILocation(line: 88, column: 21, scope: !14138)
!14376 = !DILocation(line: 89, column: 9, scope: !14138)
!14377 = !DILocation(line: 64, column: 29, scope: !14378)
!14378 = !DILexicalBlockFile(scope: !14139, file: !13243, discriminator: 2)
!14379 = !DILocation(line: 64, column: 9, scope: !14378)
!14380 = distinct !{!14380, !14381}
!14381 = !DILocation(line: 64, column: 9, scope: !14141)
!14382 = !DILocation(line: 91, column: 18, scope: !14141)
!14383 = !DILocation(line: 91, column: 32, scope: !14141)
!14384 = !DILocation(line: 91, column: 44, scope: !14141)
!14385 = !DILocation(line: 91, column: 14, scope: !14141)
!14386 = !DILocation(line: 92, column: 17, scope: !14141)
!14387 = !DILocation(line: 92, column: 31, scope: !14141)
!14388 = !DILocation(line: 92, column: 14, scope: !14141)
!14389 = !DILocation(line: 93, column: 17, scope: !14141)
!14390 = !DILocation(line: 93, column: 31, scope: !14141)
!14391 = !DILocation(line: 93, column: 14, scope: !14141)
!14392 = !DILocation(line: 94, column: 18, scope: !14141)
!14393 = !DILocation(line: 94, column: 32, scope: !14141)
!14394 = !DILocation(line: 94, column: 44, scope: !14141)
!14395 = !DILocation(line: 94, column: 14, scope: !14141)
!14396 = !DILocation(line: 95, column: 17, scope: !14141)
!14397 = !DILocation(line: 95, column: 31, scope: !14141)
!14398 = !DILocation(line: 95, column: 14, scope: !14141)
!14399 = !DILocation(line: 96, column: 17, scope: !14141)
!14400 = !DILocation(line: 96, column: 31, scope: !14141)
!14401 = !DILocation(line: 96, column: 14, scope: !14141)
!14402 = !DILocation(line: 97, column: 5, scope: !14141)
!14403 = !DILocation(line: 63, column: 25, scope: !14404)
!14404 = !DILexicalBlockFile(scope: !14142, file: !13243, discriminator: 2)
!14405 = !DILocation(line: 63, column: 5, scope: !14404)
!14406 = distinct !{!14406, !14407}
!14407 = !DILocation(line: 63, column: 5, scope: !14135)
!14408 = !DILocation(line: 98, column: 1, scope: !14135)
!14409 = distinct !DISubprogram(name: "yuv2yuv_422p8to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!14410 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 78, column: 31, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14413, file: !13243, line: 64, column: 33)
!14413 = distinct !DILexicalBlock(scope: !14414, file: !13243, line: 64, column: 9)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !13243, line: 64, column: 9)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !13243, line: 63, column: 29)
!14416 = distinct !DILexicalBlock(scope: !14417, file: !13243, line: 63, column: 5)
!14417 = distinct !DILexicalBlock(scope: !14409, file: !13243, line: 63, column: 5)
!14418 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14411)
!14419 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14420)
!14420 = distinct !DILocation(line: 87, column: 23, scope: !14412)
!14421 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14420)
!14422 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14423)
!14423 = distinct !DILocation(line: 88, column: 23, scope: !14412)
!14424 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14423)
!14425 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14426)
!14426 = distinct !DILocation(line: 76, column: 28, scope: !14412)
!14427 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14426)
!14428 = !DILocalVariable(name: "_dst", arg: 1, scope: !14409, file: !13243, line: 40, type: !17)
!14429 = !DILocation(line: 40, column: 42, scope: !14409)
!14430 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !14409, file: !13243, line: 40, type: !50)
!14431 = !DILocation(line: 40, column: 67, scope: !14409)
!14432 = !DILocalVariable(name: "_src", arg: 3, scope: !14409, file: !13243, line: 41, type: !17)
!14433 = !DILocation(line: 41, column: 34, scope: !14409)
!14434 = !DILocalVariable(name: "src_stride", arg: 4, scope: !14409, file: !13243, line: 41, type: !50)
!14435 = !DILocation(line: 41, column: 59, scope: !14409)
!14436 = !DILocalVariable(name: "w", arg: 5, scope: !14409, file: !13243, line: 42, type: !52)
!14437 = !DILocation(line: 42, column: 29, scope: !14409)
!14438 = !DILocalVariable(name: "h", arg: 6, scope: !14409, file: !13243, line: 42, type: !52)
!14439 = !DILocation(line: 42, column: 36, scope: !14409)
!14440 = !DILocalVariable(name: "c", arg: 7, scope: !14409, file: !13243, line: 42, type: !53)
!14441 = !DILocation(line: 42, column: 53, scope: !14409)
!14442 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !14409, file: !13243, line: 43, type: !84)
!14443 = !DILocation(line: 43, column: 39, scope: !14409)
!14444 = !DILocalVariable(name: "dst", scope: !14409, file: !13243, line: 45, type: !22)
!14445 = !DILocation(line: 45, column: 16, scope: !14409)
!14446 = !DILocation(line: 45, column: 36, scope: !14409)
!14447 = !DILocation(line: 45, column: 22, scope: !14409)
!14448 = !DILocalVariable(name: "src", scope: !14409, file: !13243, line: 46, type: !17)
!14449 = !DILocation(line: 46, column: 15, scope: !14409)
!14450 = !DILocation(line: 46, column: 34, scope: !14409)
!14451 = !DILocalVariable(name: "src0", scope: !14409, file: !13243, line: 47, type: !304)
!14452 = !DILocation(line: 47, column: 20, scope: !14409)
!14453 = !DILocation(line: 47, column: 27, scope: !14409)
!14454 = !DILocalVariable(name: "src1", scope: !14409, file: !13243, line: 47, type: !304)
!14455 = !DILocation(line: 47, column: 36, scope: !14409)
!14456 = !DILocation(line: 47, column: 43, scope: !14409)
!14457 = !DILocalVariable(name: "src2", scope: !14409, file: !13243, line: 47, type: !304)
!14458 = !DILocation(line: 47, column: 52, scope: !14409)
!14459 = !DILocation(line: 47, column: 59, scope: !14409)
!14460 = !DILocalVariable(name: "dst0", scope: !14409, file: !13243, line: 48, type: !23)
!14461 = !DILocation(line: 48, column: 15, scope: !14409)
!14462 = !DILocation(line: 48, column: 22, scope: !14409)
!14463 = !DILocalVariable(name: "dst1", scope: !14409, file: !13243, line: 48, type: !23)
!14464 = !DILocation(line: 48, column: 31, scope: !14409)
!14465 = !DILocation(line: 48, column: 38, scope: !14409)
!14466 = !DILocalVariable(name: "dst2", scope: !14409, file: !13243, line: 48, type: !23)
!14467 = !DILocation(line: 48, column: 47, scope: !14409)
!14468 = !DILocation(line: 48, column: 54, scope: !14409)
!14469 = !DILocalVariable(name: "y", scope: !14409, file: !13243, line: 49, type: !52)
!14470 = !DILocation(line: 49, column: 9, scope: !14409)
!14471 = !DILocalVariable(name: "x", scope: !14409, file: !13243, line: 49, type: !52)
!14472 = !DILocation(line: 49, column: 12, scope: !14409)
!14473 = !DILocalVariable(name: "sh", scope: !14409, file: !13243, line: 50, type: !343)
!14474 = !DILocation(line: 50, column: 15, scope: !14409)
!14475 = !DILocalVariable(name: "rnd", scope: !14409, file: !13243, line: 51, type: !343)
!14476 = !DILocation(line: 51, column: 15, scope: !14409)
!14477 = !DILocalVariable(name: "y_off_in", scope: !14409, file: !13243, line: 52, type: !52)
!14478 = !DILocation(line: 52, column: 9, scope: !14409)
!14479 = !DILocation(line: 52, column: 20, scope: !14409)
!14480 = !DILocalVariable(name: "y_off_out", scope: !14409, file: !13243, line: 53, type: !52)
!14481 = !DILocation(line: 53, column: 9, scope: !14409)
!14482 = !DILocation(line: 53, column: 21, scope: !14409)
!14483 = !DILocation(line: 53, column: 38, scope: !14409)
!14484 = !DILocalVariable(name: "uv_off_in", scope: !14409, file: !13243, line: 54, type: !343)
!14485 = !DILocation(line: 54, column: 15, scope: !14409)
!14486 = !DILocalVariable(name: "uv_off_out", scope: !14409, file: !13243, line: 55, type: !343)
!14487 = !DILocation(line: 55, column: 15, scope: !14409)
!14488 = !DILocalVariable(name: "cyy", scope: !14409, file: !13243, line: 56, type: !52)
!14489 = !DILocation(line: 56, column: 9, scope: !14409)
!14490 = !DILocation(line: 56, column: 15, scope: !14409)
!14491 = !DILocalVariable(name: "cyu", scope: !14409, file: !13243, line: 56, type: !52)
!14492 = !DILocation(line: 56, column: 27, scope: !14409)
!14493 = !DILocation(line: 56, column: 33, scope: !14409)
!14494 = !DILocalVariable(name: "cyv", scope: !14409, file: !13243, line: 56, type: !52)
!14495 = !DILocation(line: 56, column: 45, scope: !14409)
!14496 = !DILocation(line: 56, column: 51, scope: !14409)
!14497 = !DILocalVariable(name: "cuu", scope: !14409, file: !13243, line: 57, type: !52)
!14498 = !DILocation(line: 57, column: 9, scope: !14409)
!14499 = !DILocation(line: 57, column: 15, scope: !14409)
!14500 = !DILocalVariable(name: "cuv", scope: !14409, file: !13243, line: 57, type: !52)
!14501 = !DILocation(line: 57, column: 27, scope: !14409)
!14502 = !DILocation(line: 57, column: 33, scope: !14409)
!14503 = !DILocalVariable(name: "cvu", scope: !14409, file: !13243, line: 57, type: !52)
!14504 = !DILocation(line: 57, column: 45, scope: !14409)
!14505 = !DILocation(line: 57, column: 51, scope: !14409)
!14506 = !DILocalVariable(name: "cvv", scope: !14409, file: !13243, line: 57, type: !52)
!14507 = !DILocation(line: 57, column: 63, scope: !14409)
!14508 = !DILocation(line: 57, column: 69, scope: !14409)
!14509 = !DILocation(line: 61, column: 58, scope: !14409)
!14510 = !DILocation(line: 61, column: 61, scope: !14409)
!14511 = !DILocation(line: 61, column: 72, scope: !14409)
!14512 = !DILocation(line: 61, column: 77, scope: !14409)
!14513 = !DILocation(line: 61, column: 7, scope: !14409)
!14514 = !DILocation(line: 62, column: 58, scope: !14409)
!14515 = !DILocation(line: 62, column: 61, scope: !14409)
!14516 = !DILocation(line: 62, column: 72, scope: !14409)
!14517 = !DILocation(line: 62, column: 77, scope: !14409)
!14518 = !DILocation(line: 62, column: 7, scope: !14409)
!14519 = !DILocation(line: 63, column: 12, scope: !14417)
!14520 = !DILocation(line: 63, column: 10, scope: !14417)
!14521 = !DILocation(line: 63, column: 17, scope: !14522)
!14522 = !DILexicalBlockFile(scope: !14416, file: !13243, discriminator: 1)
!14523 = !DILocation(line: 63, column: 21, scope: !14522)
!14524 = !DILocation(line: 63, column: 19, scope: !14522)
!14525 = !DILocation(line: 63, column: 5, scope: !14522)
!14526 = !DILocation(line: 64, column: 16, scope: !14414)
!14527 = !DILocation(line: 64, column: 14, scope: !14414)
!14528 = !DILocation(line: 64, column: 21, scope: !14529)
!14529 = !DILexicalBlockFile(scope: !14413, file: !13243, discriminator: 1)
!14530 = !DILocation(line: 64, column: 25, scope: !14529)
!14531 = !DILocation(line: 64, column: 23, scope: !14529)
!14532 = !DILocation(line: 64, column: 9, scope: !14529)
!14533 = !DILocalVariable(name: "y00", scope: !14412, file: !13243, line: 65, type: !52)
!14534 = !DILocation(line: 65, column: 17, scope: !14412)
!14535 = !DILocation(line: 65, column: 28, scope: !14412)
!14536 = !DILocation(line: 65, column: 30, scope: !14412)
!14537 = !DILocation(line: 65, column: 23, scope: !14412)
!14538 = !DILocation(line: 65, column: 38, scope: !14412)
!14539 = !DILocation(line: 65, column: 36, scope: !14412)
!14540 = !DILocalVariable(name: "y01", scope: !14412, file: !13243, line: 67, type: !52)
!14541 = !DILocation(line: 67, column: 17, scope: !14412)
!14542 = !DILocation(line: 67, column: 32, scope: !14412)
!14543 = !DILocation(line: 67, column: 30, scope: !14412)
!14544 = !DILocation(line: 67, column: 34, scope: !14412)
!14545 = !DILocation(line: 67, column: 23, scope: !14412)
!14546 = !DILocation(line: 67, column: 41, scope: !14412)
!14547 = !DILocation(line: 67, column: 39, scope: !14412)
!14548 = !DILocalVariable(name: "u", scope: !14412, file: !13243, line: 73, type: !52)
!14549 = !DILocation(line: 73, column: 17, scope: !14412)
!14550 = !DILocation(line: 73, column: 26, scope: !14412)
!14551 = !DILocation(line: 73, column: 21, scope: !14412)
!14552 = !DILocation(line: 73, column: 29, scope: !14412)
!14553 = !DILocalVariable(name: "v", scope: !14412, file: !13243, line: 73, type: !52)
!14554 = !DILocation(line: 73, column: 42, scope: !14412)
!14555 = !DILocation(line: 73, column: 51, scope: !14412)
!14556 = !DILocation(line: 73, column: 46, scope: !14412)
!14557 = !DILocation(line: 73, column: 54, scope: !14412)
!14558 = !DILocalVariable(name: "uv_val", scope: !14412, file: !13243, line: 74, type: !52)
!14559 = !DILocation(line: 74, column: 17, scope: !14412)
!14560 = !DILocation(line: 74, column: 26, scope: !14412)
!14561 = !DILocation(line: 74, column: 32, scope: !14412)
!14562 = !DILocation(line: 74, column: 30, scope: !14412)
!14563 = !DILocation(line: 74, column: 36, scope: !14412)
!14564 = !DILocation(line: 74, column: 42, scope: !14412)
!14565 = !DILocation(line: 74, column: 40, scope: !14412)
!14566 = !DILocation(line: 74, column: 34, scope: !14412)
!14567 = !DILocation(line: 74, column: 44, scope: !14412)
!14568 = !DILocation(line: 74, column: 52, scope: !14412)
!14569 = !DILocation(line: 74, column: 50, scope: !14412)
!14570 = !DILocation(line: 76, column: 46, scope: !14412)
!14571 = !DILocation(line: 76, column: 52, scope: !14412)
!14572 = !DILocation(line: 76, column: 50, scope: !14412)
!14573 = !DILocation(line: 76, column: 58, scope: !14412)
!14574 = !DILocation(line: 76, column: 56, scope: !14412)
!14575 = !DILocation(line: 76, column: 66, scope: !14412)
!14576 = !DILocation(line: 76, column: 28, scope: !14412)
!14577 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14426)
!14578 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14426)
!14579 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14426)
!14580 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14426)
!14581 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14426)
!14582 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14426)
!14583 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14426)
!14584 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14426)
!14585 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14426)
!14586 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14426)
!14587 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14426)
!14588 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14426)
!14589 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14426)
!14590 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14426)
!14591 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14426)
!14592 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14426)
!14593 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14426)
!14594 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14426)
!14595 = !DILocation(line: 76, column: 18, scope: !14412)
!14596 = !DILocation(line: 76, column: 20, scope: !14412)
!14597 = !DILocation(line: 76, column: 13, scope: !14412)
!14598 = !DILocation(line: 76, column: 26, scope: !14412)
!14599 = !DILocation(line: 78, column: 49, scope: !14412)
!14600 = !DILocation(line: 78, column: 55, scope: !14412)
!14601 = !DILocation(line: 78, column: 53, scope: !14412)
!14602 = !DILocation(line: 78, column: 61, scope: !14412)
!14603 = !DILocation(line: 78, column: 59, scope: !14412)
!14604 = !DILocation(line: 78, column: 69, scope: !14412)
!14605 = !DILocation(line: 78, column: 31, scope: !14412)
!14606 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14411)
!14607 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14411)
!14608 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14411)
!14609 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14411)
!14610 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14411)
!14611 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14411)
!14612 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14411)
!14613 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14411)
!14614 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14411)
!14615 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14411)
!14616 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14411)
!14617 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14411)
!14618 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14411)
!14619 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14411)
!14620 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14411)
!14621 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14411)
!14622 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14411)
!14623 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14411)
!14624 = !DILocation(line: 78, column: 18, scope: !14412)
!14625 = !DILocation(line: 78, column: 20, scope: !14412)
!14626 = !DILocation(line: 78, column: 24, scope: !14412)
!14627 = !DILocation(line: 78, column: 13, scope: !14412)
!14628 = !DILocation(line: 78, column: 29, scope: !14412)
!14629 = !DILocation(line: 87, column: 41, scope: !14412)
!14630 = !DILocation(line: 87, column: 45, scope: !14412)
!14631 = !DILocation(line: 87, column: 43, scope: !14412)
!14632 = !DILocation(line: 87, column: 51, scope: !14412)
!14633 = !DILocation(line: 87, column: 55, scope: !14412)
!14634 = !DILocation(line: 87, column: 53, scope: !14412)
!14635 = !DILocation(line: 87, column: 49, scope: !14412)
!14636 = !DILocation(line: 87, column: 59, scope: !14412)
!14637 = !DILocation(line: 87, column: 73, scope: !14412)
!14638 = !DILocation(line: 87, column: 23, scope: !14412)
!14639 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14420)
!14640 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14420)
!14641 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14420)
!14642 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14420)
!14643 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14420)
!14644 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14420)
!14645 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14420)
!14646 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14420)
!14647 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14420)
!14648 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14420)
!14649 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14420)
!14650 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14420)
!14651 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14420)
!14652 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14420)
!14653 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14420)
!14654 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14420)
!14655 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14420)
!14656 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14420)
!14657 = !DILocation(line: 87, column: 18, scope: !14412)
!14658 = !DILocation(line: 87, column: 13, scope: !14412)
!14659 = !DILocation(line: 87, column: 21, scope: !14412)
!14660 = !DILocation(line: 88, column: 41, scope: !14412)
!14661 = !DILocation(line: 88, column: 45, scope: !14412)
!14662 = !DILocation(line: 88, column: 43, scope: !14412)
!14663 = !DILocation(line: 88, column: 51, scope: !14412)
!14664 = !DILocation(line: 88, column: 55, scope: !14412)
!14665 = !DILocation(line: 88, column: 53, scope: !14412)
!14666 = !DILocation(line: 88, column: 49, scope: !14412)
!14667 = !DILocation(line: 88, column: 59, scope: !14412)
!14668 = !DILocation(line: 88, column: 73, scope: !14412)
!14669 = !DILocation(line: 88, column: 23, scope: !14412)
!14670 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14423)
!14671 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14423)
!14672 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14423)
!14673 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14423)
!14674 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14423)
!14675 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14423)
!14676 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14423)
!14677 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14423)
!14678 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14423)
!14679 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14423)
!14680 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14423)
!14681 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14423)
!14682 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14423)
!14683 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14423)
!14684 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14423)
!14685 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14423)
!14686 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14423)
!14687 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14423)
!14688 = !DILocation(line: 88, column: 18, scope: !14412)
!14689 = !DILocation(line: 88, column: 13, scope: !14412)
!14690 = !DILocation(line: 88, column: 21, scope: !14412)
!14691 = !DILocation(line: 89, column: 9, scope: !14412)
!14692 = !DILocation(line: 64, column: 29, scope: !14693)
!14693 = !DILexicalBlockFile(scope: !14413, file: !13243, discriminator: 2)
!14694 = !DILocation(line: 64, column: 9, scope: !14693)
!14695 = distinct !{!14695, !14696}
!14696 = !DILocation(line: 64, column: 9, scope: !14415)
!14697 = !DILocation(line: 91, column: 18, scope: !14415)
!14698 = !DILocation(line: 91, column: 32, scope: !14415)
!14699 = !DILocation(line: 91, column: 44, scope: !14415)
!14700 = !DILocation(line: 91, column: 14, scope: !14415)
!14701 = !DILocation(line: 92, column: 17, scope: !14415)
!14702 = !DILocation(line: 92, column: 31, scope: !14415)
!14703 = !DILocation(line: 92, column: 14, scope: !14415)
!14704 = !DILocation(line: 93, column: 17, scope: !14415)
!14705 = !DILocation(line: 93, column: 31, scope: !14415)
!14706 = !DILocation(line: 93, column: 14, scope: !14415)
!14707 = !DILocation(line: 94, column: 18, scope: !14415)
!14708 = !DILocation(line: 94, column: 32, scope: !14415)
!14709 = !DILocation(line: 94, column: 44, scope: !14415)
!14710 = !DILocation(line: 94, column: 14, scope: !14415)
!14711 = !DILocation(line: 95, column: 17, scope: !14415)
!14712 = !DILocation(line: 95, column: 31, scope: !14415)
!14713 = !DILocation(line: 95, column: 14, scope: !14415)
!14714 = !DILocation(line: 96, column: 17, scope: !14415)
!14715 = !DILocation(line: 96, column: 31, scope: !14415)
!14716 = !DILocation(line: 96, column: 14, scope: !14415)
!14717 = !DILocation(line: 97, column: 5, scope: !14415)
!14718 = !DILocation(line: 63, column: 25, scope: !14719)
!14719 = !DILexicalBlockFile(scope: !14416, file: !13243, discriminator: 2)
!14720 = !DILocation(line: 63, column: 5, scope: !14719)
!14721 = distinct !{!14721, !14722}
!14722 = !DILocation(line: 63, column: 5, scope: !14409)
!14723 = !DILocation(line: 98, column: 1, scope: !14409)
!14724 = distinct !DISubprogram(name: "yuv2yuv_420p8to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!14725 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 78, column: 31, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14728, file: !13243, line: 64, column: 33)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !13243, line: 64, column: 9)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !13243, line: 64, column: 9)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !13243, line: 63, column: 29)
!14731 = distinct !DILexicalBlock(scope: !14732, file: !13243, line: 63, column: 5)
!14732 = distinct !DILexicalBlock(scope: !14724, file: !13243, line: 63, column: 5)
!14733 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14726)
!14734 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 81, column: 31, scope: !14727)
!14736 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14735)
!14737 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14738)
!14738 = distinct !DILocation(line: 83, column: 31, scope: !14727)
!14739 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14738)
!14740 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 87, column: 23, scope: !14727)
!14742 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14741)
!14743 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 88, column: 23, scope: !14727)
!14745 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14744)
!14746 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !14747)
!14747 = distinct !DILocation(line: 76, column: 28, scope: !14727)
!14748 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !14747)
!14749 = !DILocalVariable(name: "_dst", arg: 1, scope: !14724, file: !13243, line: 40, type: !17)
!14750 = !DILocation(line: 40, column: 42, scope: !14724)
!14751 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !14724, file: !13243, line: 40, type: !50)
!14752 = !DILocation(line: 40, column: 67, scope: !14724)
!14753 = !DILocalVariable(name: "_src", arg: 3, scope: !14724, file: !13243, line: 41, type: !17)
!14754 = !DILocation(line: 41, column: 34, scope: !14724)
!14755 = !DILocalVariable(name: "src_stride", arg: 4, scope: !14724, file: !13243, line: 41, type: !50)
!14756 = !DILocation(line: 41, column: 59, scope: !14724)
!14757 = !DILocalVariable(name: "w", arg: 5, scope: !14724, file: !13243, line: 42, type: !52)
!14758 = !DILocation(line: 42, column: 29, scope: !14724)
!14759 = !DILocalVariable(name: "h", arg: 6, scope: !14724, file: !13243, line: 42, type: !52)
!14760 = !DILocation(line: 42, column: 36, scope: !14724)
!14761 = !DILocalVariable(name: "c", arg: 7, scope: !14724, file: !13243, line: 42, type: !53)
!14762 = !DILocation(line: 42, column: 53, scope: !14724)
!14763 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !14724, file: !13243, line: 43, type: !84)
!14764 = !DILocation(line: 43, column: 39, scope: !14724)
!14765 = !DILocalVariable(name: "dst", scope: !14724, file: !13243, line: 45, type: !22)
!14766 = !DILocation(line: 45, column: 16, scope: !14724)
!14767 = !DILocation(line: 45, column: 36, scope: !14724)
!14768 = !DILocation(line: 45, column: 22, scope: !14724)
!14769 = !DILocalVariable(name: "src", scope: !14724, file: !13243, line: 46, type: !17)
!14770 = !DILocation(line: 46, column: 15, scope: !14724)
!14771 = !DILocation(line: 46, column: 34, scope: !14724)
!14772 = !DILocalVariable(name: "src0", scope: !14724, file: !13243, line: 47, type: !304)
!14773 = !DILocation(line: 47, column: 20, scope: !14724)
!14774 = !DILocation(line: 47, column: 27, scope: !14724)
!14775 = !DILocalVariable(name: "src1", scope: !14724, file: !13243, line: 47, type: !304)
!14776 = !DILocation(line: 47, column: 36, scope: !14724)
!14777 = !DILocation(line: 47, column: 43, scope: !14724)
!14778 = !DILocalVariable(name: "src2", scope: !14724, file: !13243, line: 47, type: !304)
!14779 = !DILocation(line: 47, column: 52, scope: !14724)
!14780 = !DILocation(line: 47, column: 59, scope: !14724)
!14781 = !DILocalVariable(name: "dst0", scope: !14724, file: !13243, line: 48, type: !23)
!14782 = !DILocation(line: 48, column: 15, scope: !14724)
!14783 = !DILocation(line: 48, column: 22, scope: !14724)
!14784 = !DILocalVariable(name: "dst1", scope: !14724, file: !13243, line: 48, type: !23)
!14785 = !DILocation(line: 48, column: 31, scope: !14724)
!14786 = !DILocation(line: 48, column: 38, scope: !14724)
!14787 = !DILocalVariable(name: "dst2", scope: !14724, file: !13243, line: 48, type: !23)
!14788 = !DILocation(line: 48, column: 47, scope: !14724)
!14789 = !DILocation(line: 48, column: 54, scope: !14724)
!14790 = !DILocalVariable(name: "y", scope: !14724, file: !13243, line: 49, type: !52)
!14791 = !DILocation(line: 49, column: 9, scope: !14724)
!14792 = !DILocalVariable(name: "x", scope: !14724, file: !13243, line: 49, type: !52)
!14793 = !DILocation(line: 49, column: 12, scope: !14724)
!14794 = !DILocalVariable(name: "sh", scope: !14724, file: !13243, line: 50, type: !343)
!14795 = !DILocation(line: 50, column: 15, scope: !14724)
!14796 = !DILocalVariable(name: "rnd", scope: !14724, file: !13243, line: 51, type: !343)
!14797 = !DILocation(line: 51, column: 15, scope: !14724)
!14798 = !DILocalVariable(name: "y_off_in", scope: !14724, file: !13243, line: 52, type: !52)
!14799 = !DILocation(line: 52, column: 9, scope: !14724)
!14800 = !DILocation(line: 52, column: 20, scope: !14724)
!14801 = !DILocalVariable(name: "y_off_out", scope: !14724, file: !13243, line: 53, type: !52)
!14802 = !DILocation(line: 53, column: 9, scope: !14724)
!14803 = !DILocation(line: 53, column: 21, scope: !14724)
!14804 = !DILocation(line: 53, column: 38, scope: !14724)
!14805 = !DILocalVariable(name: "uv_off_in", scope: !14724, file: !13243, line: 54, type: !343)
!14806 = !DILocation(line: 54, column: 15, scope: !14724)
!14807 = !DILocalVariable(name: "uv_off_out", scope: !14724, file: !13243, line: 55, type: !343)
!14808 = !DILocation(line: 55, column: 15, scope: !14724)
!14809 = !DILocalVariable(name: "cyy", scope: !14724, file: !13243, line: 56, type: !52)
!14810 = !DILocation(line: 56, column: 9, scope: !14724)
!14811 = !DILocation(line: 56, column: 15, scope: !14724)
!14812 = !DILocalVariable(name: "cyu", scope: !14724, file: !13243, line: 56, type: !52)
!14813 = !DILocation(line: 56, column: 27, scope: !14724)
!14814 = !DILocation(line: 56, column: 33, scope: !14724)
!14815 = !DILocalVariable(name: "cyv", scope: !14724, file: !13243, line: 56, type: !52)
!14816 = !DILocation(line: 56, column: 45, scope: !14724)
!14817 = !DILocation(line: 56, column: 51, scope: !14724)
!14818 = !DILocalVariable(name: "cuu", scope: !14724, file: !13243, line: 57, type: !52)
!14819 = !DILocation(line: 57, column: 9, scope: !14724)
!14820 = !DILocation(line: 57, column: 15, scope: !14724)
!14821 = !DILocalVariable(name: "cuv", scope: !14724, file: !13243, line: 57, type: !52)
!14822 = !DILocation(line: 57, column: 27, scope: !14724)
!14823 = !DILocation(line: 57, column: 33, scope: !14724)
!14824 = !DILocalVariable(name: "cvu", scope: !14724, file: !13243, line: 57, type: !52)
!14825 = !DILocation(line: 57, column: 45, scope: !14724)
!14826 = !DILocation(line: 57, column: 51, scope: !14724)
!14827 = !DILocalVariable(name: "cvv", scope: !14724, file: !13243, line: 57, type: !52)
!14828 = !DILocation(line: 57, column: 63, scope: !14724)
!14829 = !DILocation(line: 57, column: 69, scope: !14724)
!14830 = !DILocation(line: 61, column: 58, scope: !14724)
!14831 = !DILocation(line: 61, column: 61, scope: !14724)
!14832 = !DILocation(line: 61, column: 72, scope: !14724)
!14833 = !DILocation(line: 61, column: 77, scope: !14724)
!14834 = !DILocation(line: 61, column: 7, scope: !14724)
!14835 = !DILocation(line: 62, column: 58, scope: !14724)
!14836 = !DILocation(line: 62, column: 61, scope: !14724)
!14837 = !DILocation(line: 62, column: 72, scope: !14724)
!14838 = !DILocation(line: 62, column: 77, scope: !14724)
!14839 = !DILocation(line: 62, column: 7, scope: !14724)
!14840 = !DILocation(line: 63, column: 12, scope: !14732)
!14841 = !DILocation(line: 63, column: 10, scope: !14732)
!14842 = !DILocation(line: 63, column: 17, scope: !14843)
!14843 = !DILexicalBlockFile(scope: !14731, file: !13243, discriminator: 1)
!14844 = !DILocation(line: 63, column: 21, scope: !14843)
!14845 = !DILocation(line: 63, column: 19, scope: !14843)
!14846 = !DILocation(line: 63, column: 5, scope: !14843)
!14847 = !DILocation(line: 64, column: 16, scope: !14729)
!14848 = !DILocation(line: 64, column: 14, scope: !14729)
!14849 = !DILocation(line: 64, column: 21, scope: !14850)
!14850 = !DILexicalBlockFile(scope: !14728, file: !13243, discriminator: 1)
!14851 = !DILocation(line: 64, column: 25, scope: !14850)
!14852 = !DILocation(line: 64, column: 23, scope: !14850)
!14853 = !DILocation(line: 64, column: 9, scope: !14850)
!14854 = !DILocalVariable(name: "y00", scope: !14727, file: !13243, line: 65, type: !52)
!14855 = !DILocation(line: 65, column: 17, scope: !14727)
!14856 = !DILocation(line: 65, column: 28, scope: !14727)
!14857 = !DILocation(line: 65, column: 30, scope: !14727)
!14858 = !DILocation(line: 65, column: 23, scope: !14727)
!14859 = !DILocation(line: 65, column: 38, scope: !14727)
!14860 = !DILocation(line: 65, column: 36, scope: !14727)
!14861 = !DILocalVariable(name: "y01", scope: !14727, file: !13243, line: 67, type: !52)
!14862 = !DILocation(line: 67, column: 17, scope: !14727)
!14863 = !DILocation(line: 67, column: 32, scope: !14727)
!14864 = !DILocation(line: 67, column: 30, scope: !14727)
!14865 = !DILocation(line: 67, column: 34, scope: !14727)
!14866 = !DILocation(line: 67, column: 23, scope: !14727)
!14867 = !DILocation(line: 67, column: 41, scope: !14727)
!14868 = !DILocation(line: 67, column: 39, scope: !14727)
!14869 = !DILocalVariable(name: "y10", scope: !14727, file: !13243, line: 69, type: !52)
!14870 = !DILocation(line: 69, column: 17, scope: !14727)
!14871 = !DILocation(line: 69, column: 28, scope: !14727)
!14872 = !DILocation(line: 69, column: 42, scope: !14727)
!14873 = !DILocation(line: 69, column: 66, scope: !14727)
!14874 = !DILocation(line: 69, column: 64, scope: !14727)
!14875 = !DILocation(line: 69, column: 62, scope: !14727)
!14876 = !DILocation(line: 69, column: 60, scope: !14727)
!14877 = !DILocation(line: 69, column: 23, scope: !14727)
!14878 = !DILocation(line: 69, column: 71, scope: !14727)
!14879 = !DILocation(line: 69, column: 69, scope: !14727)
!14880 = !DILocalVariable(name: "y11", scope: !14727, file: !13243, line: 70, type: !52)
!14881 = !DILocation(line: 70, column: 17, scope: !14727)
!14882 = !DILocation(line: 70, column: 28, scope: !14727)
!14883 = !DILocation(line: 70, column: 42, scope: !14727)
!14884 = !DILocation(line: 70, column: 66, scope: !14727)
!14885 = !DILocation(line: 70, column: 64, scope: !14727)
!14886 = !DILocation(line: 70, column: 62, scope: !14727)
!14887 = !DILocation(line: 70, column: 60, scope: !14727)
!14888 = !DILocation(line: 70, column: 68, scope: !14727)
!14889 = !DILocation(line: 70, column: 23, scope: !14727)
!14890 = !DILocation(line: 70, column: 75, scope: !14727)
!14891 = !DILocation(line: 70, column: 73, scope: !14727)
!14892 = !DILocalVariable(name: "u", scope: !14727, file: !13243, line: 73, type: !52)
!14893 = !DILocation(line: 73, column: 17, scope: !14727)
!14894 = !DILocation(line: 73, column: 26, scope: !14727)
!14895 = !DILocation(line: 73, column: 21, scope: !14727)
!14896 = !DILocation(line: 73, column: 29, scope: !14727)
!14897 = !DILocalVariable(name: "v", scope: !14727, file: !13243, line: 73, type: !52)
!14898 = !DILocation(line: 73, column: 42, scope: !14727)
!14899 = !DILocation(line: 73, column: 51, scope: !14727)
!14900 = !DILocation(line: 73, column: 46, scope: !14727)
!14901 = !DILocation(line: 73, column: 54, scope: !14727)
!14902 = !DILocalVariable(name: "uv_val", scope: !14727, file: !13243, line: 74, type: !52)
!14903 = !DILocation(line: 74, column: 17, scope: !14727)
!14904 = !DILocation(line: 74, column: 26, scope: !14727)
!14905 = !DILocation(line: 74, column: 32, scope: !14727)
!14906 = !DILocation(line: 74, column: 30, scope: !14727)
!14907 = !DILocation(line: 74, column: 36, scope: !14727)
!14908 = !DILocation(line: 74, column: 42, scope: !14727)
!14909 = !DILocation(line: 74, column: 40, scope: !14727)
!14910 = !DILocation(line: 74, column: 34, scope: !14727)
!14911 = !DILocation(line: 74, column: 44, scope: !14727)
!14912 = !DILocation(line: 74, column: 52, scope: !14727)
!14913 = !DILocation(line: 74, column: 50, scope: !14727)
!14914 = !DILocation(line: 76, column: 46, scope: !14727)
!14915 = !DILocation(line: 76, column: 52, scope: !14727)
!14916 = !DILocation(line: 76, column: 50, scope: !14727)
!14917 = !DILocation(line: 76, column: 58, scope: !14727)
!14918 = !DILocation(line: 76, column: 56, scope: !14727)
!14919 = !DILocation(line: 76, column: 66, scope: !14727)
!14920 = !DILocation(line: 76, column: 28, scope: !14727)
!14921 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14747)
!14922 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14747)
!14923 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14747)
!14924 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14747)
!14925 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14747)
!14926 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14747)
!14927 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14747)
!14928 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14747)
!14929 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14747)
!14930 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14747)
!14931 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14747)
!14932 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14747)
!14933 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14747)
!14934 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14747)
!14935 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14747)
!14936 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14747)
!14937 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14747)
!14938 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14747)
!14939 = !DILocation(line: 76, column: 18, scope: !14727)
!14940 = !DILocation(line: 76, column: 20, scope: !14727)
!14941 = !DILocation(line: 76, column: 13, scope: !14727)
!14942 = !DILocation(line: 76, column: 26, scope: !14727)
!14943 = !DILocation(line: 78, column: 49, scope: !14727)
!14944 = !DILocation(line: 78, column: 55, scope: !14727)
!14945 = !DILocation(line: 78, column: 53, scope: !14727)
!14946 = !DILocation(line: 78, column: 61, scope: !14727)
!14947 = !DILocation(line: 78, column: 59, scope: !14727)
!14948 = !DILocation(line: 78, column: 69, scope: !14727)
!14949 = !DILocation(line: 78, column: 31, scope: !14727)
!14950 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14726)
!14951 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14726)
!14952 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14726)
!14953 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14726)
!14954 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14726)
!14955 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14726)
!14956 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14726)
!14957 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14726)
!14958 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14726)
!14959 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14726)
!14960 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14726)
!14961 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14726)
!14962 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14726)
!14963 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14726)
!14964 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14726)
!14965 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14726)
!14966 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14726)
!14967 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14726)
!14968 = !DILocation(line: 78, column: 18, scope: !14727)
!14969 = !DILocation(line: 78, column: 20, scope: !14727)
!14970 = !DILocation(line: 78, column: 24, scope: !14727)
!14971 = !DILocation(line: 78, column: 13, scope: !14727)
!14972 = !DILocation(line: 78, column: 29, scope: !14727)
!14973 = !DILocation(line: 81, column: 49, scope: !14727)
!14974 = !DILocation(line: 81, column: 55, scope: !14727)
!14975 = !DILocation(line: 81, column: 53, scope: !14727)
!14976 = !DILocation(line: 81, column: 61, scope: !14727)
!14977 = !DILocation(line: 81, column: 59, scope: !14727)
!14978 = !DILocation(line: 81, column: 69, scope: !14727)
!14979 = !DILocation(line: 81, column: 31, scope: !14727)
!14980 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14735)
!14981 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14735)
!14982 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14735)
!14983 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14735)
!14984 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14735)
!14985 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14735)
!14986 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14735)
!14987 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14735)
!14988 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14735)
!14989 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14735)
!14990 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14735)
!14991 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14735)
!14992 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14735)
!14993 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14735)
!14994 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14735)
!14995 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14735)
!14996 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14735)
!14997 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14735)
!14998 = !DILocation(line: 80, column: 18, scope: !14727)
!14999 = !DILocation(line: 80, column: 20, scope: !14727)
!15000 = !DILocation(line: 80, column: 24, scope: !14727)
!15001 = !DILocation(line: 80, column: 30, scope: !14727)
!15002 = !DILocation(line: 80, column: 44, scope: !14727)
!15003 = !DILocation(line: 80, column: 28, scope: !14727)
!15004 = !DILocation(line: 80, column: 13, scope: !14727)
!15005 = !DILocation(line: 80, column: 64, scope: !14727)
!15006 = !DILocation(line: 83, column: 49, scope: !14727)
!15007 = !DILocation(line: 83, column: 55, scope: !14727)
!15008 = !DILocation(line: 83, column: 53, scope: !14727)
!15009 = !DILocation(line: 83, column: 61, scope: !14727)
!15010 = !DILocation(line: 83, column: 59, scope: !14727)
!15011 = !DILocation(line: 83, column: 69, scope: !14727)
!15012 = !DILocation(line: 83, column: 31, scope: !14727)
!15013 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14738)
!15014 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14738)
!15015 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14738)
!15016 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14738)
!15017 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14738)
!15018 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14738)
!15019 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14738)
!15020 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14738)
!15021 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14738)
!15022 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14738)
!15023 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14738)
!15024 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14738)
!15025 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14738)
!15026 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14738)
!15027 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14738)
!15028 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14738)
!15029 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14738)
!15030 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14738)
!15031 = !DILocation(line: 82, column: 18, scope: !14727)
!15032 = !DILocation(line: 82, column: 20, scope: !14727)
!15033 = !DILocation(line: 82, column: 24, scope: !14727)
!15034 = !DILocation(line: 82, column: 30, scope: !14727)
!15035 = !DILocation(line: 82, column: 44, scope: !14727)
!15036 = !DILocation(line: 82, column: 28, scope: !14727)
!15037 = !DILocation(line: 82, column: 13, scope: !14727)
!15038 = !DILocation(line: 82, column: 64, scope: !14727)
!15039 = !DILocation(line: 87, column: 41, scope: !14727)
!15040 = !DILocation(line: 87, column: 45, scope: !14727)
!15041 = !DILocation(line: 87, column: 43, scope: !14727)
!15042 = !DILocation(line: 87, column: 51, scope: !14727)
!15043 = !DILocation(line: 87, column: 55, scope: !14727)
!15044 = !DILocation(line: 87, column: 53, scope: !14727)
!15045 = !DILocation(line: 87, column: 49, scope: !14727)
!15046 = !DILocation(line: 87, column: 59, scope: !14727)
!15047 = !DILocation(line: 87, column: 73, scope: !14727)
!15048 = !DILocation(line: 87, column: 23, scope: !14727)
!15049 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14741)
!15050 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14741)
!15051 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14741)
!15052 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14741)
!15053 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14741)
!15054 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14741)
!15055 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14741)
!15056 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14741)
!15057 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14741)
!15058 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14741)
!15059 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14741)
!15060 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14741)
!15061 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14741)
!15062 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14741)
!15063 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14741)
!15064 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14741)
!15065 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14741)
!15066 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14741)
!15067 = !DILocation(line: 87, column: 18, scope: !14727)
!15068 = !DILocation(line: 87, column: 13, scope: !14727)
!15069 = !DILocation(line: 87, column: 21, scope: !14727)
!15070 = !DILocation(line: 88, column: 41, scope: !14727)
!15071 = !DILocation(line: 88, column: 45, scope: !14727)
!15072 = !DILocation(line: 88, column: 43, scope: !14727)
!15073 = !DILocation(line: 88, column: 51, scope: !14727)
!15074 = !DILocation(line: 88, column: 55, scope: !14727)
!15075 = !DILocation(line: 88, column: 53, scope: !14727)
!15076 = !DILocation(line: 88, column: 49, scope: !14727)
!15077 = !DILocation(line: 88, column: 59, scope: !14727)
!15078 = !DILocation(line: 88, column: 73, scope: !14727)
!15079 = !DILocation(line: 88, column: 23, scope: !14727)
!15080 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !14744)
!15081 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !14744)
!15082 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !14744)
!15083 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !14744)
!15084 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !14744)
!15085 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !14744)
!15086 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !14744)
!15087 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !14744)
!15088 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !14744)
!15089 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !14744)
!15090 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !14744)
!15091 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !14744)
!15092 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !14744)
!15093 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !14744)
!15094 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !14744)
!15095 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !14744)
!15096 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !14744)
!15097 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !14744)
!15098 = !DILocation(line: 88, column: 18, scope: !14727)
!15099 = !DILocation(line: 88, column: 13, scope: !14727)
!15100 = !DILocation(line: 88, column: 21, scope: !14727)
!15101 = !DILocation(line: 89, column: 9, scope: !14727)
!15102 = !DILocation(line: 64, column: 29, scope: !15103)
!15103 = !DILexicalBlockFile(scope: !14728, file: !13243, discriminator: 2)
!15104 = !DILocation(line: 64, column: 9, scope: !15103)
!15105 = distinct !{!15105, !15106}
!15106 = !DILocation(line: 64, column: 9, scope: !14730)
!15107 = !DILocation(line: 91, column: 18, scope: !14730)
!15108 = !DILocation(line: 91, column: 32, scope: !14730)
!15109 = !DILocation(line: 91, column: 44, scope: !14730)
!15110 = !DILocation(line: 91, column: 14, scope: !14730)
!15111 = !DILocation(line: 92, column: 17, scope: !14730)
!15112 = !DILocation(line: 92, column: 31, scope: !14730)
!15113 = !DILocation(line: 92, column: 14, scope: !14730)
!15114 = !DILocation(line: 93, column: 17, scope: !14730)
!15115 = !DILocation(line: 93, column: 31, scope: !14730)
!15116 = !DILocation(line: 93, column: 14, scope: !14730)
!15117 = !DILocation(line: 94, column: 18, scope: !14730)
!15118 = !DILocation(line: 94, column: 32, scope: !14730)
!15119 = !DILocation(line: 94, column: 44, scope: !14730)
!15120 = !DILocation(line: 94, column: 14, scope: !14730)
!15121 = !DILocation(line: 95, column: 17, scope: !14730)
!15122 = !DILocation(line: 95, column: 31, scope: !14730)
!15123 = !DILocation(line: 95, column: 14, scope: !14730)
!15124 = !DILocation(line: 96, column: 17, scope: !14730)
!15125 = !DILocation(line: 96, column: 31, scope: !14730)
!15126 = !DILocation(line: 96, column: 14, scope: !14730)
!15127 = !DILocation(line: 97, column: 5, scope: !14730)
!15128 = !DILocation(line: 63, column: 25, scope: !15129)
!15129 = !DILexicalBlockFile(scope: !14731, file: !13243, discriminator: 2)
!15130 = !DILocation(line: 63, column: 5, scope: !15129)
!15131 = distinct !{!15131, !15132}
!15132 = !DILocation(line: 63, column: 5, scope: !14724)
!15133 = !DILocation(line: 98, column: 1, scope: !14724)
!15134 = distinct !DISubprogram(name: "yuv2yuv_444p8to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!15135 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 87, column: 23, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15138, file: !13243, line: 64, column: 33)
!15138 = distinct !DILexicalBlock(scope: !15139, file: !13243, line: 64, column: 9)
!15139 = distinct !DILexicalBlock(scope: !15140, file: !13243, line: 64, column: 9)
!15140 = distinct !DILexicalBlock(scope: !15141, file: !13243, line: 63, column: 29)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !13243, line: 63, column: 5)
!15142 = distinct !DILexicalBlock(scope: !15134, file: !13243, line: 63, column: 5)
!15143 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15136)
!15144 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15145)
!15145 = distinct !DILocation(line: 88, column: 23, scope: !15137)
!15146 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15145)
!15147 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 76, column: 28, scope: !15137)
!15149 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15148)
!15150 = !DILocalVariable(name: "_dst", arg: 1, scope: !15134, file: !13243, line: 40, type: !17)
!15151 = !DILocation(line: 40, column: 42, scope: !15134)
!15152 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !15134, file: !13243, line: 40, type: !50)
!15153 = !DILocation(line: 40, column: 67, scope: !15134)
!15154 = !DILocalVariable(name: "_src", arg: 3, scope: !15134, file: !13243, line: 41, type: !17)
!15155 = !DILocation(line: 41, column: 34, scope: !15134)
!15156 = !DILocalVariable(name: "src_stride", arg: 4, scope: !15134, file: !13243, line: 41, type: !50)
!15157 = !DILocation(line: 41, column: 59, scope: !15134)
!15158 = !DILocalVariable(name: "w", arg: 5, scope: !15134, file: !13243, line: 42, type: !52)
!15159 = !DILocation(line: 42, column: 29, scope: !15134)
!15160 = !DILocalVariable(name: "h", arg: 6, scope: !15134, file: !13243, line: 42, type: !52)
!15161 = !DILocation(line: 42, column: 36, scope: !15134)
!15162 = !DILocalVariable(name: "c", arg: 7, scope: !15134, file: !13243, line: 42, type: !53)
!15163 = !DILocation(line: 42, column: 53, scope: !15134)
!15164 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !15134, file: !13243, line: 43, type: !84)
!15165 = !DILocation(line: 43, column: 39, scope: !15134)
!15166 = !DILocalVariable(name: "dst", scope: !15134, file: !13243, line: 45, type: !22)
!15167 = !DILocation(line: 45, column: 16, scope: !15134)
!15168 = !DILocation(line: 45, column: 36, scope: !15134)
!15169 = !DILocation(line: 45, column: 22, scope: !15134)
!15170 = !DILocalVariable(name: "src", scope: !15134, file: !13243, line: 46, type: !17)
!15171 = !DILocation(line: 46, column: 15, scope: !15134)
!15172 = !DILocation(line: 46, column: 34, scope: !15134)
!15173 = !DILocalVariable(name: "src0", scope: !15134, file: !13243, line: 47, type: !304)
!15174 = !DILocation(line: 47, column: 20, scope: !15134)
!15175 = !DILocation(line: 47, column: 27, scope: !15134)
!15176 = !DILocalVariable(name: "src1", scope: !15134, file: !13243, line: 47, type: !304)
!15177 = !DILocation(line: 47, column: 36, scope: !15134)
!15178 = !DILocation(line: 47, column: 43, scope: !15134)
!15179 = !DILocalVariable(name: "src2", scope: !15134, file: !13243, line: 47, type: !304)
!15180 = !DILocation(line: 47, column: 52, scope: !15134)
!15181 = !DILocation(line: 47, column: 59, scope: !15134)
!15182 = !DILocalVariable(name: "dst0", scope: !15134, file: !13243, line: 48, type: !23)
!15183 = !DILocation(line: 48, column: 15, scope: !15134)
!15184 = !DILocation(line: 48, column: 22, scope: !15134)
!15185 = !DILocalVariable(name: "dst1", scope: !15134, file: !13243, line: 48, type: !23)
!15186 = !DILocation(line: 48, column: 31, scope: !15134)
!15187 = !DILocation(line: 48, column: 38, scope: !15134)
!15188 = !DILocalVariable(name: "dst2", scope: !15134, file: !13243, line: 48, type: !23)
!15189 = !DILocation(line: 48, column: 47, scope: !15134)
!15190 = !DILocation(line: 48, column: 54, scope: !15134)
!15191 = !DILocalVariable(name: "y", scope: !15134, file: !13243, line: 49, type: !52)
!15192 = !DILocation(line: 49, column: 9, scope: !15134)
!15193 = !DILocalVariable(name: "x", scope: !15134, file: !13243, line: 49, type: !52)
!15194 = !DILocation(line: 49, column: 12, scope: !15134)
!15195 = !DILocalVariable(name: "sh", scope: !15134, file: !13243, line: 50, type: !343)
!15196 = !DILocation(line: 50, column: 15, scope: !15134)
!15197 = !DILocalVariable(name: "rnd", scope: !15134, file: !13243, line: 51, type: !343)
!15198 = !DILocation(line: 51, column: 15, scope: !15134)
!15199 = !DILocalVariable(name: "y_off_in", scope: !15134, file: !13243, line: 52, type: !52)
!15200 = !DILocation(line: 52, column: 9, scope: !15134)
!15201 = !DILocation(line: 52, column: 20, scope: !15134)
!15202 = !DILocalVariable(name: "y_off_out", scope: !15134, file: !13243, line: 53, type: !52)
!15203 = !DILocation(line: 53, column: 9, scope: !15134)
!15204 = !DILocation(line: 53, column: 21, scope: !15134)
!15205 = !DILocation(line: 53, column: 38, scope: !15134)
!15206 = !DILocalVariable(name: "uv_off_in", scope: !15134, file: !13243, line: 54, type: !343)
!15207 = !DILocation(line: 54, column: 15, scope: !15134)
!15208 = !DILocalVariable(name: "uv_off_out", scope: !15134, file: !13243, line: 55, type: !343)
!15209 = !DILocation(line: 55, column: 15, scope: !15134)
!15210 = !DILocalVariable(name: "cyy", scope: !15134, file: !13243, line: 56, type: !52)
!15211 = !DILocation(line: 56, column: 9, scope: !15134)
!15212 = !DILocation(line: 56, column: 15, scope: !15134)
!15213 = !DILocalVariable(name: "cyu", scope: !15134, file: !13243, line: 56, type: !52)
!15214 = !DILocation(line: 56, column: 27, scope: !15134)
!15215 = !DILocation(line: 56, column: 33, scope: !15134)
!15216 = !DILocalVariable(name: "cyv", scope: !15134, file: !13243, line: 56, type: !52)
!15217 = !DILocation(line: 56, column: 45, scope: !15134)
!15218 = !DILocation(line: 56, column: 51, scope: !15134)
!15219 = !DILocalVariable(name: "cuu", scope: !15134, file: !13243, line: 57, type: !52)
!15220 = !DILocation(line: 57, column: 9, scope: !15134)
!15221 = !DILocation(line: 57, column: 15, scope: !15134)
!15222 = !DILocalVariable(name: "cuv", scope: !15134, file: !13243, line: 57, type: !52)
!15223 = !DILocation(line: 57, column: 27, scope: !15134)
!15224 = !DILocation(line: 57, column: 33, scope: !15134)
!15225 = !DILocalVariable(name: "cvu", scope: !15134, file: !13243, line: 57, type: !52)
!15226 = !DILocation(line: 57, column: 45, scope: !15134)
!15227 = !DILocation(line: 57, column: 51, scope: !15134)
!15228 = !DILocalVariable(name: "cvv", scope: !15134, file: !13243, line: 57, type: !52)
!15229 = !DILocation(line: 57, column: 63, scope: !15134)
!15230 = !DILocation(line: 57, column: 69, scope: !15134)
!15231 = !DILocation(line: 61, column: 58, scope: !15134)
!15232 = !DILocation(line: 61, column: 61, scope: !15134)
!15233 = !DILocation(line: 61, column: 72, scope: !15134)
!15234 = !DILocation(line: 61, column: 77, scope: !15134)
!15235 = !DILocation(line: 61, column: 7, scope: !15134)
!15236 = !DILocation(line: 62, column: 58, scope: !15134)
!15237 = !DILocation(line: 62, column: 61, scope: !15134)
!15238 = !DILocation(line: 62, column: 72, scope: !15134)
!15239 = !DILocation(line: 62, column: 77, scope: !15134)
!15240 = !DILocation(line: 62, column: 7, scope: !15134)
!15241 = !DILocation(line: 63, column: 12, scope: !15142)
!15242 = !DILocation(line: 63, column: 10, scope: !15142)
!15243 = !DILocation(line: 63, column: 17, scope: !15244)
!15244 = !DILexicalBlockFile(scope: !15141, file: !13243, discriminator: 1)
!15245 = !DILocation(line: 63, column: 21, scope: !15244)
!15246 = !DILocation(line: 63, column: 19, scope: !15244)
!15247 = !DILocation(line: 63, column: 5, scope: !15244)
!15248 = !DILocation(line: 64, column: 16, scope: !15139)
!15249 = !DILocation(line: 64, column: 14, scope: !15139)
!15250 = !DILocation(line: 64, column: 21, scope: !15251)
!15251 = !DILexicalBlockFile(scope: !15138, file: !13243, discriminator: 1)
!15252 = !DILocation(line: 64, column: 25, scope: !15251)
!15253 = !DILocation(line: 64, column: 23, scope: !15251)
!15254 = !DILocation(line: 64, column: 9, scope: !15251)
!15255 = !DILocalVariable(name: "y00", scope: !15137, file: !13243, line: 65, type: !52)
!15256 = !DILocation(line: 65, column: 17, scope: !15137)
!15257 = !DILocation(line: 65, column: 28, scope: !15137)
!15258 = !DILocation(line: 65, column: 30, scope: !15137)
!15259 = !DILocation(line: 65, column: 23, scope: !15137)
!15260 = !DILocation(line: 65, column: 38, scope: !15137)
!15261 = !DILocation(line: 65, column: 36, scope: !15137)
!15262 = !DILocalVariable(name: "u", scope: !15137, file: !13243, line: 73, type: !52)
!15263 = !DILocation(line: 73, column: 17, scope: !15137)
!15264 = !DILocation(line: 73, column: 26, scope: !15137)
!15265 = !DILocation(line: 73, column: 21, scope: !15137)
!15266 = !DILocation(line: 73, column: 29, scope: !15137)
!15267 = !DILocalVariable(name: "v", scope: !15137, file: !13243, line: 73, type: !52)
!15268 = !DILocation(line: 73, column: 42, scope: !15137)
!15269 = !DILocation(line: 73, column: 51, scope: !15137)
!15270 = !DILocation(line: 73, column: 46, scope: !15137)
!15271 = !DILocation(line: 73, column: 54, scope: !15137)
!15272 = !DILocalVariable(name: "uv_val", scope: !15137, file: !13243, line: 74, type: !52)
!15273 = !DILocation(line: 74, column: 17, scope: !15137)
!15274 = !DILocation(line: 74, column: 26, scope: !15137)
!15275 = !DILocation(line: 74, column: 32, scope: !15137)
!15276 = !DILocation(line: 74, column: 30, scope: !15137)
!15277 = !DILocation(line: 74, column: 36, scope: !15137)
!15278 = !DILocation(line: 74, column: 42, scope: !15137)
!15279 = !DILocation(line: 74, column: 40, scope: !15137)
!15280 = !DILocation(line: 74, column: 34, scope: !15137)
!15281 = !DILocation(line: 74, column: 44, scope: !15137)
!15282 = !DILocation(line: 74, column: 52, scope: !15137)
!15283 = !DILocation(line: 74, column: 50, scope: !15137)
!15284 = !DILocation(line: 76, column: 46, scope: !15137)
!15285 = !DILocation(line: 76, column: 52, scope: !15137)
!15286 = !DILocation(line: 76, column: 50, scope: !15137)
!15287 = !DILocation(line: 76, column: 58, scope: !15137)
!15288 = !DILocation(line: 76, column: 56, scope: !15137)
!15289 = !DILocation(line: 76, column: 66, scope: !15137)
!15290 = !DILocation(line: 76, column: 28, scope: !15137)
!15291 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15148)
!15292 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15148)
!15293 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15148)
!15294 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15148)
!15295 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15148)
!15296 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15148)
!15297 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15148)
!15298 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15148)
!15299 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15148)
!15300 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15148)
!15301 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15148)
!15302 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15148)
!15303 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15148)
!15304 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15148)
!15305 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15148)
!15306 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15148)
!15307 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15148)
!15308 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15148)
!15309 = !DILocation(line: 76, column: 18, scope: !15137)
!15310 = !DILocation(line: 76, column: 20, scope: !15137)
!15311 = !DILocation(line: 76, column: 13, scope: !15137)
!15312 = !DILocation(line: 76, column: 26, scope: !15137)
!15313 = !DILocation(line: 87, column: 41, scope: !15137)
!15314 = !DILocation(line: 87, column: 45, scope: !15137)
!15315 = !DILocation(line: 87, column: 43, scope: !15137)
!15316 = !DILocation(line: 87, column: 51, scope: !15137)
!15317 = !DILocation(line: 87, column: 55, scope: !15137)
!15318 = !DILocation(line: 87, column: 53, scope: !15137)
!15319 = !DILocation(line: 87, column: 49, scope: !15137)
!15320 = !DILocation(line: 87, column: 59, scope: !15137)
!15321 = !DILocation(line: 87, column: 73, scope: !15137)
!15322 = !DILocation(line: 87, column: 23, scope: !15137)
!15323 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15136)
!15324 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15136)
!15325 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15136)
!15326 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15136)
!15327 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15136)
!15328 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15136)
!15329 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15136)
!15330 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15136)
!15331 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15136)
!15332 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15136)
!15333 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15136)
!15334 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15136)
!15335 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15136)
!15336 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15136)
!15337 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15136)
!15338 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15136)
!15339 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15136)
!15340 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15136)
!15341 = !DILocation(line: 87, column: 18, scope: !15137)
!15342 = !DILocation(line: 87, column: 13, scope: !15137)
!15343 = !DILocation(line: 87, column: 21, scope: !15137)
!15344 = !DILocation(line: 88, column: 41, scope: !15137)
!15345 = !DILocation(line: 88, column: 45, scope: !15137)
!15346 = !DILocation(line: 88, column: 43, scope: !15137)
!15347 = !DILocation(line: 88, column: 51, scope: !15137)
!15348 = !DILocation(line: 88, column: 55, scope: !15137)
!15349 = !DILocation(line: 88, column: 53, scope: !15137)
!15350 = !DILocation(line: 88, column: 49, scope: !15137)
!15351 = !DILocation(line: 88, column: 59, scope: !15137)
!15352 = !DILocation(line: 88, column: 73, scope: !15137)
!15353 = !DILocation(line: 88, column: 23, scope: !15137)
!15354 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15145)
!15355 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15145)
!15356 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15145)
!15357 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15145)
!15358 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15145)
!15359 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15145)
!15360 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15145)
!15361 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15145)
!15362 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15145)
!15363 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15145)
!15364 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15145)
!15365 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15145)
!15366 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15145)
!15367 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15145)
!15368 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15145)
!15369 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15145)
!15370 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15145)
!15371 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15145)
!15372 = !DILocation(line: 88, column: 18, scope: !15137)
!15373 = !DILocation(line: 88, column: 13, scope: !15137)
!15374 = !DILocation(line: 88, column: 21, scope: !15137)
!15375 = !DILocation(line: 89, column: 9, scope: !15137)
!15376 = !DILocation(line: 64, column: 29, scope: !15377)
!15377 = !DILexicalBlockFile(scope: !15138, file: !13243, discriminator: 2)
!15378 = !DILocation(line: 64, column: 9, scope: !15377)
!15379 = distinct !{!15379, !15380}
!15380 = !DILocation(line: 64, column: 9, scope: !15140)
!15381 = !DILocation(line: 91, column: 18, scope: !15140)
!15382 = !DILocation(line: 91, column: 32, scope: !15140)
!15383 = !DILocation(line: 91, column: 44, scope: !15140)
!15384 = !DILocation(line: 91, column: 14, scope: !15140)
!15385 = !DILocation(line: 92, column: 17, scope: !15140)
!15386 = !DILocation(line: 92, column: 31, scope: !15140)
!15387 = !DILocation(line: 92, column: 14, scope: !15140)
!15388 = !DILocation(line: 93, column: 17, scope: !15140)
!15389 = !DILocation(line: 93, column: 31, scope: !15140)
!15390 = !DILocation(line: 93, column: 14, scope: !15140)
!15391 = !DILocation(line: 94, column: 18, scope: !15140)
!15392 = !DILocation(line: 94, column: 32, scope: !15140)
!15393 = !DILocation(line: 94, column: 44, scope: !15140)
!15394 = !DILocation(line: 94, column: 14, scope: !15140)
!15395 = !DILocation(line: 95, column: 17, scope: !15140)
!15396 = !DILocation(line: 95, column: 31, scope: !15140)
!15397 = !DILocation(line: 95, column: 14, scope: !15140)
!15398 = !DILocation(line: 96, column: 17, scope: !15140)
!15399 = !DILocation(line: 96, column: 31, scope: !15140)
!15400 = !DILocation(line: 96, column: 14, scope: !15140)
!15401 = !DILocation(line: 97, column: 5, scope: !15140)
!15402 = !DILocation(line: 63, column: 25, scope: !15403)
!15403 = !DILexicalBlockFile(scope: !15141, file: !13243, discriminator: 2)
!15404 = !DILocation(line: 63, column: 5, scope: !15403)
!15405 = distinct !{!15405, !15406}
!15406 = !DILocation(line: 63, column: 5, scope: !15134)
!15407 = !DILocation(line: 98, column: 1, scope: !15134)
!15408 = distinct !DISubprogram(name: "yuv2yuv_422p8to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!15409 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15410)
!15410 = distinct !DILocation(line: 78, column: 31, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15412, file: !13243, line: 64, column: 33)
!15412 = distinct !DILexicalBlock(scope: !15413, file: !13243, line: 64, column: 9)
!15413 = distinct !DILexicalBlock(scope: !15414, file: !13243, line: 64, column: 9)
!15414 = distinct !DILexicalBlock(scope: !15415, file: !13243, line: 63, column: 29)
!15415 = distinct !DILexicalBlock(scope: !15416, file: !13243, line: 63, column: 5)
!15416 = distinct !DILexicalBlock(scope: !15408, file: !13243, line: 63, column: 5)
!15417 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15410)
!15418 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 87, column: 23, scope: !15411)
!15420 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15419)
!15421 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 88, column: 23, scope: !15411)
!15423 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15422)
!15424 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 76, column: 28, scope: !15411)
!15426 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15425)
!15427 = !DILocalVariable(name: "_dst", arg: 1, scope: !15408, file: !13243, line: 40, type: !17)
!15428 = !DILocation(line: 40, column: 42, scope: !15408)
!15429 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !15408, file: !13243, line: 40, type: !50)
!15430 = !DILocation(line: 40, column: 67, scope: !15408)
!15431 = !DILocalVariable(name: "_src", arg: 3, scope: !15408, file: !13243, line: 41, type: !17)
!15432 = !DILocation(line: 41, column: 34, scope: !15408)
!15433 = !DILocalVariable(name: "src_stride", arg: 4, scope: !15408, file: !13243, line: 41, type: !50)
!15434 = !DILocation(line: 41, column: 59, scope: !15408)
!15435 = !DILocalVariable(name: "w", arg: 5, scope: !15408, file: !13243, line: 42, type: !52)
!15436 = !DILocation(line: 42, column: 29, scope: !15408)
!15437 = !DILocalVariable(name: "h", arg: 6, scope: !15408, file: !13243, line: 42, type: !52)
!15438 = !DILocation(line: 42, column: 36, scope: !15408)
!15439 = !DILocalVariable(name: "c", arg: 7, scope: !15408, file: !13243, line: 42, type: !53)
!15440 = !DILocation(line: 42, column: 53, scope: !15408)
!15441 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !15408, file: !13243, line: 43, type: !84)
!15442 = !DILocation(line: 43, column: 39, scope: !15408)
!15443 = !DILocalVariable(name: "dst", scope: !15408, file: !13243, line: 45, type: !22)
!15444 = !DILocation(line: 45, column: 16, scope: !15408)
!15445 = !DILocation(line: 45, column: 36, scope: !15408)
!15446 = !DILocation(line: 45, column: 22, scope: !15408)
!15447 = !DILocalVariable(name: "src", scope: !15408, file: !13243, line: 46, type: !17)
!15448 = !DILocation(line: 46, column: 15, scope: !15408)
!15449 = !DILocation(line: 46, column: 34, scope: !15408)
!15450 = !DILocalVariable(name: "src0", scope: !15408, file: !13243, line: 47, type: !304)
!15451 = !DILocation(line: 47, column: 20, scope: !15408)
!15452 = !DILocation(line: 47, column: 27, scope: !15408)
!15453 = !DILocalVariable(name: "src1", scope: !15408, file: !13243, line: 47, type: !304)
!15454 = !DILocation(line: 47, column: 36, scope: !15408)
!15455 = !DILocation(line: 47, column: 43, scope: !15408)
!15456 = !DILocalVariable(name: "src2", scope: !15408, file: !13243, line: 47, type: !304)
!15457 = !DILocation(line: 47, column: 52, scope: !15408)
!15458 = !DILocation(line: 47, column: 59, scope: !15408)
!15459 = !DILocalVariable(name: "dst0", scope: !15408, file: !13243, line: 48, type: !23)
!15460 = !DILocation(line: 48, column: 15, scope: !15408)
!15461 = !DILocation(line: 48, column: 22, scope: !15408)
!15462 = !DILocalVariable(name: "dst1", scope: !15408, file: !13243, line: 48, type: !23)
!15463 = !DILocation(line: 48, column: 31, scope: !15408)
!15464 = !DILocation(line: 48, column: 38, scope: !15408)
!15465 = !DILocalVariable(name: "dst2", scope: !15408, file: !13243, line: 48, type: !23)
!15466 = !DILocation(line: 48, column: 47, scope: !15408)
!15467 = !DILocation(line: 48, column: 54, scope: !15408)
!15468 = !DILocalVariable(name: "y", scope: !15408, file: !13243, line: 49, type: !52)
!15469 = !DILocation(line: 49, column: 9, scope: !15408)
!15470 = !DILocalVariable(name: "x", scope: !15408, file: !13243, line: 49, type: !52)
!15471 = !DILocation(line: 49, column: 12, scope: !15408)
!15472 = !DILocalVariable(name: "sh", scope: !15408, file: !13243, line: 50, type: !343)
!15473 = !DILocation(line: 50, column: 15, scope: !15408)
!15474 = !DILocalVariable(name: "rnd", scope: !15408, file: !13243, line: 51, type: !343)
!15475 = !DILocation(line: 51, column: 15, scope: !15408)
!15476 = !DILocalVariable(name: "y_off_in", scope: !15408, file: !13243, line: 52, type: !52)
!15477 = !DILocation(line: 52, column: 9, scope: !15408)
!15478 = !DILocation(line: 52, column: 20, scope: !15408)
!15479 = !DILocalVariable(name: "y_off_out", scope: !15408, file: !13243, line: 53, type: !52)
!15480 = !DILocation(line: 53, column: 9, scope: !15408)
!15481 = !DILocation(line: 53, column: 21, scope: !15408)
!15482 = !DILocation(line: 53, column: 38, scope: !15408)
!15483 = !DILocalVariable(name: "uv_off_in", scope: !15408, file: !13243, line: 54, type: !343)
!15484 = !DILocation(line: 54, column: 15, scope: !15408)
!15485 = !DILocalVariable(name: "uv_off_out", scope: !15408, file: !13243, line: 55, type: !343)
!15486 = !DILocation(line: 55, column: 15, scope: !15408)
!15487 = !DILocalVariable(name: "cyy", scope: !15408, file: !13243, line: 56, type: !52)
!15488 = !DILocation(line: 56, column: 9, scope: !15408)
!15489 = !DILocation(line: 56, column: 15, scope: !15408)
!15490 = !DILocalVariable(name: "cyu", scope: !15408, file: !13243, line: 56, type: !52)
!15491 = !DILocation(line: 56, column: 27, scope: !15408)
!15492 = !DILocation(line: 56, column: 33, scope: !15408)
!15493 = !DILocalVariable(name: "cyv", scope: !15408, file: !13243, line: 56, type: !52)
!15494 = !DILocation(line: 56, column: 45, scope: !15408)
!15495 = !DILocation(line: 56, column: 51, scope: !15408)
!15496 = !DILocalVariable(name: "cuu", scope: !15408, file: !13243, line: 57, type: !52)
!15497 = !DILocation(line: 57, column: 9, scope: !15408)
!15498 = !DILocation(line: 57, column: 15, scope: !15408)
!15499 = !DILocalVariable(name: "cuv", scope: !15408, file: !13243, line: 57, type: !52)
!15500 = !DILocation(line: 57, column: 27, scope: !15408)
!15501 = !DILocation(line: 57, column: 33, scope: !15408)
!15502 = !DILocalVariable(name: "cvu", scope: !15408, file: !13243, line: 57, type: !52)
!15503 = !DILocation(line: 57, column: 45, scope: !15408)
!15504 = !DILocation(line: 57, column: 51, scope: !15408)
!15505 = !DILocalVariable(name: "cvv", scope: !15408, file: !13243, line: 57, type: !52)
!15506 = !DILocation(line: 57, column: 63, scope: !15408)
!15507 = !DILocation(line: 57, column: 69, scope: !15408)
!15508 = !DILocation(line: 61, column: 58, scope: !15408)
!15509 = !DILocation(line: 61, column: 61, scope: !15408)
!15510 = !DILocation(line: 61, column: 72, scope: !15408)
!15511 = !DILocation(line: 61, column: 77, scope: !15408)
!15512 = !DILocation(line: 61, column: 7, scope: !15408)
!15513 = !DILocation(line: 62, column: 58, scope: !15408)
!15514 = !DILocation(line: 62, column: 61, scope: !15408)
!15515 = !DILocation(line: 62, column: 72, scope: !15408)
!15516 = !DILocation(line: 62, column: 77, scope: !15408)
!15517 = !DILocation(line: 62, column: 7, scope: !15408)
!15518 = !DILocation(line: 63, column: 12, scope: !15416)
!15519 = !DILocation(line: 63, column: 10, scope: !15416)
!15520 = !DILocation(line: 63, column: 17, scope: !15521)
!15521 = !DILexicalBlockFile(scope: !15415, file: !13243, discriminator: 1)
!15522 = !DILocation(line: 63, column: 21, scope: !15521)
!15523 = !DILocation(line: 63, column: 19, scope: !15521)
!15524 = !DILocation(line: 63, column: 5, scope: !15521)
!15525 = !DILocation(line: 64, column: 16, scope: !15413)
!15526 = !DILocation(line: 64, column: 14, scope: !15413)
!15527 = !DILocation(line: 64, column: 21, scope: !15528)
!15528 = !DILexicalBlockFile(scope: !15412, file: !13243, discriminator: 1)
!15529 = !DILocation(line: 64, column: 25, scope: !15528)
!15530 = !DILocation(line: 64, column: 23, scope: !15528)
!15531 = !DILocation(line: 64, column: 9, scope: !15528)
!15532 = !DILocalVariable(name: "y00", scope: !15411, file: !13243, line: 65, type: !52)
!15533 = !DILocation(line: 65, column: 17, scope: !15411)
!15534 = !DILocation(line: 65, column: 28, scope: !15411)
!15535 = !DILocation(line: 65, column: 30, scope: !15411)
!15536 = !DILocation(line: 65, column: 23, scope: !15411)
!15537 = !DILocation(line: 65, column: 38, scope: !15411)
!15538 = !DILocation(line: 65, column: 36, scope: !15411)
!15539 = !DILocalVariable(name: "y01", scope: !15411, file: !13243, line: 67, type: !52)
!15540 = !DILocation(line: 67, column: 17, scope: !15411)
!15541 = !DILocation(line: 67, column: 32, scope: !15411)
!15542 = !DILocation(line: 67, column: 30, scope: !15411)
!15543 = !DILocation(line: 67, column: 34, scope: !15411)
!15544 = !DILocation(line: 67, column: 23, scope: !15411)
!15545 = !DILocation(line: 67, column: 41, scope: !15411)
!15546 = !DILocation(line: 67, column: 39, scope: !15411)
!15547 = !DILocalVariable(name: "u", scope: !15411, file: !13243, line: 73, type: !52)
!15548 = !DILocation(line: 73, column: 17, scope: !15411)
!15549 = !DILocation(line: 73, column: 26, scope: !15411)
!15550 = !DILocation(line: 73, column: 21, scope: !15411)
!15551 = !DILocation(line: 73, column: 29, scope: !15411)
!15552 = !DILocalVariable(name: "v", scope: !15411, file: !13243, line: 73, type: !52)
!15553 = !DILocation(line: 73, column: 42, scope: !15411)
!15554 = !DILocation(line: 73, column: 51, scope: !15411)
!15555 = !DILocation(line: 73, column: 46, scope: !15411)
!15556 = !DILocation(line: 73, column: 54, scope: !15411)
!15557 = !DILocalVariable(name: "uv_val", scope: !15411, file: !13243, line: 74, type: !52)
!15558 = !DILocation(line: 74, column: 17, scope: !15411)
!15559 = !DILocation(line: 74, column: 26, scope: !15411)
!15560 = !DILocation(line: 74, column: 32, scope: !15411)
!15561 = !DILocation(line: 74, column: 30, scope: !15411)
!15562 = !DILocation(line: 74, column: 36, scope: !15411)
!15563 = !DILocation(line: 74, column: 42, scope: !15411)
!15564 = !DILocation(line: 74, column: 40, scope: !15411)
!15565 = !DILocation(line: 74, column: 34, scope: !15411)
!15566 = !DILocation(line: 74, column: 44, scope: !15411)
!15567 = !DILocation(line: 74, column: 52, scope: !15411)
!15568 = !DILocation(line: 74, column: 50, scope: !15411)
!15569 = !DILocation(line: 76, column: 46, scope: !15411)
!15570 = !DILocation(line: 76, column: 52, scope: !15411)
!15571 = !DILocation(line: 76, column: 50, scope: !15411)
!15572 = !DILocation(line: 76, column: 58, scope: !15411)
!15573 = !DILocation(line: 76, column: 56, scope: !15411)
!15574 = !DILocation(line: 76, column: 66, scope: !15411)
!15575 = !DILocation(line: 76, column: 28, scope: !15411)
!15576 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15425)
!15577 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15425)
!15578 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15425)
!15579 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15425)
!15580 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15425)
!15581 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15425)
!15582 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15425)
!15583 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15425)
!15584 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15425)
!15585 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15425)
!15586 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15425)
!15587 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15425)
!15588 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15425)
!15589 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15425)
!15590 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15425)
!15591 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15425)
!15592 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15425)
!15593 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15425)
!15594 = !DILocation(line: 76, column: 18, scope: !15411)
!15595 = !DILocation(line: 76, column: 20, scope: !15411)
!15596 = !DILocation(line: 76, column: 13, scope: !15411)
!15597 = !DILocation(line: 76, column: 26, scope: !15411)
!15598 = !DILocation(line: 78, column: 49, scope: !15411)
!15599 = !DILocation(line: 78, column: 55, scope: !15411)
!15600 = !DILocation(line: 78, column: 53, scope: !15411)
!15601 = !DILocation(line: 78, column: 61, scope: !15411)
!15602 = !DILocation(line: 78, column: 59, scope: !15411)
!15603 = !DILocation(line: 78, column: 69, scope: !15411)
!15604 = !DILocation(line: 78, column: 31, scope: !15411)
!15605 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15410)
!15606 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15410)
!15607 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15410)
!15608 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15410)
!15609 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15410)
!15610 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15410)
!15611 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15410)
!15612 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15410)
!15613 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15410)
!15614 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15410)
!15615 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15410)
!15616 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15410)
!15617 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15410)
!15618 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15410)
!15619 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15410)
!15620 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15410)
!15621 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15410)
!15622 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15410)
!15623 = !DILocation(line: 78, column: 18, scope: !15411)
!15624 = !DILocation(line: 78, column: 20, scope: !15411)
!15625 = !DILocation(line: 78, column: 24, scope: !15411)
!15626 = !DILocation(line: 78, column: 13, scope: !15411)
!15627 = !DILocation(line: 78, column: 29, scope: !15411)
!15628 = !DILocation(line: 87, column: 41, scope: !15411)
!15629 = !DILocation(line: 87, column: 45, scope: !15411)
!15630 = !DILocation(line: 87, column: 43, scope: !15411)
!15631 = !DILocation(line: 87, column: 51, scope: !15411)
!15632 = !DILocation(line: 87, column: 55, scope: !15411)
!15633 = !DILocation(line: 87, column: 53, scope: !15411)
!15634 = !DILocation(line: 87, column: 49, scope: !15411)
!15635 = !DILocation(line: 87, column: 59, scope: !15411)
!15636 = !DILocation(line: 87, column: 73, scope: !15411)
!15637 = !DILocation(line: 87, column: 23, scope: !15411)
!15638 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15419)
!15639 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15419)
!15640 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15419)
!15641 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15419)
!15642 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15419)
!15643 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15419)
!15644 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15419)
!15645 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15419)
!15646 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15419)
!15647 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15419)
!15648 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15419)
!15649 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15419)
!15650 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15419)
!15651 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15419)
!15652 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15419)
!15653 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15419)
!15654 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15419)
!15655 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15419)
!15656 = !DILocation(line: 87, column: 18, scope: !15411)
!15657 = !DILocation(line: 87, column: 13, scope: !15411)
!15658 = !DILocation(line: 87, column: 21, scope: !15411)
!15659 = !DILocation(line: 88, column: 41, scope: !15411)
!15660 = !DILocation(line: 88, column: 45, scope: !15411)
!15661 = !DILocation(line: 88, column: 43, scope: !15411)
!15662 = !DILocation(line: 88, column: 51, scope: !15411)
!15663 = !DILocation(line: 88, column: 55, scope: !15411)
!15664 = !DILocation(line: 88, column: 53, scope: !15411)
!15665 = !DILocation(line: 88, column: 49, scope: !15411)
!15666 = !DILocation(line: 88, column: 59, scope: !15411)
!15667 = !DILocation(line: 88, column: 73, scope: !15411)
!15668 = !DILocation(line: 88, column: 23, scope: !15411)
!15669 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15422)
!15670 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15422)
!15671 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15422)
!15672 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15422)
!15673 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15422)
!15674 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15422)
!15675 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15422)
!15676 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15422)
!15677 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15422)
!15678 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15422)
!15679 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15422)
!15680 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15422)
!15681 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15422)
!15682 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15422)
!15683 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15422)
!15684 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15422)
!15685 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15422)
!15686 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15422)
!15687 = !DILocation(line: 88, column: 18, scope: !15411)
!15688 = !DILocation(line: 88, column: 13, scope: !15411)
!15689 = !DILocation(line: 88, column: 21, scope: !15411)
!15690 = !DILocation(line: 89, column: 9, scope: !15411)
!15691 = !DILocation(line: 64, column: 29, scope: !15692)
!15692 = !DILexicalBlockFile(scope: !15412, file: !13243, discriminator: 2)
!15693 = !DILocation(line: 64, column: 9, scope: !15692)
!15694 = distinct !{!15694, !15695}
!15695 = !DILocation(line: 64, column: 9, scope: !15414)
!15696 = !DILocation(line: 91, column: 18, scope: !15414)
!15697 = !DILocation(line: 91, column: 32, scope: !15414)
!15698 = !DILocation(line: 91, column: 44, scope: !15414)
!15699 = !DILocation(line: 91, column: 14, scope: !15414)
!15700 = !DILocation(line: 92, column: 17, scope: !15414)
!15701 = !DILocation(line: 92, column: 31, scope: !15414)
!15702 = !DILocation(line: 92, column: 14, scope: !15414)
!15703 = !DILocation(line: 93, column: 17, scope: !15414)
!15704 = !DILocation(line: 93, column: 31, scope: !15414)
!15705 = !DILocation(line: 93, column: 14, scope: !15414)
!15706 = !DILocation(line: 94, column: 18, scope: !15414)
!15707 = !DILocation(line: 94, column: 32, scope: !15414)
!15708 = !DILocation(line: 94, column: 44, scope: !15414)
!15709 = !DILocation(line: 94, column: 14, scope: !15414)
!15710 = !DILocation(line: 95, column: 17, scope: !15414)
!15711 = !DILocation(line: 95, column: 31, scope: !15414)
!15712 = !DILocation(line: 95, column: 14, scope: !15414)
!15713 = !DILocation(line: 96, column: 17, scope: !15414)
!15714 = !DILocation(line: 96, column: 31, scope: !15414)
!15715 = !DILocation(line: 96, column: 14, scope: !15414)
!15716 = !DILocation(line: 97, column: 5, scope: !15414)
!15717 = !DILocation(line: 63, column: 25, scope: !15718)
!15718 = !DILexicalBlockFile(scope: !15415, file: !13243, discriminator: 2)
!15719 = !DILocation(line: 63, column: 5, scope: !15718)
!15720 = distinct !{!15720, !15721}
!15721 = !DILocation(line: 63, column: 5, scope: !15408)
!15722 = !DILocation(line: 98, column: 1, scope: !15408)
!15723 = distinct !DISubprogram(name: "yuv2yuv_420p8to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!15724 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15725)
!15725 = distinct !DILocation(line: 78, column: 31, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !13243, line: 64, column: 33)
!15727 = distinct !DILexicalBlock(scope: !15728, file: !13243, line: 64, column: 9)
!15728 = distinct !DILexicalBlock(scope: !15729, file: !13243, line: 64, column: 9)
!15729 = distinct !DILexicalBlock(scope: !15730, file: !13243, line: 63, column: 29)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !13243, line: 63, column: 5)
!15731 = distinct !DILexicalBlock(scope: !15723, file: !13243, line: 63, column: 5)
!15732 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15725)
!15733 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 81, column: 31, scope: !15726)
!15735 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15734)
!15736 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 83, column: 31, scope: !15726)
!15738 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15737)
!15739 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15740)
!15740 = distinct !DILocation(line: 87, column: 23, scope: !15726)
!15741 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15740)
!15742 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 88, column: 23, scope: !15726)
!15744 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15743)
!15745 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 76, column: 28, scope: !15726)
!15747 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !15746)
!15748 = !DILocalVariable(name: "_dst", arg: 1, scope: !15723, file: !13243, line: 40, type: !17)
!15749 = !DILocation(line: 40, column: 42, scope: !15723)
!15750 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !15723, file: !13243, line: 40, type: !50)
!15751 = !DILocation(line: 40, column: 67, scope: !15723)
!15752 = !DILocalVariable(name: "_src", arg: 3, scope: !15723, file: !13243, line: 41, type: !17)
!15753 = !DILocation(line: 41, column: 34, scope: !15723)
!15754 = !DILocalVariable(name: "src_stride", arg: 4, scope: !15723, file: !13243, line: 41, type: !50)
!15755 = !DILocation(line: 41, column: 59, scope: !15723)
!15756 = !DILocalVariable(name: "w", arg: 5, scope: !15723, file: !13243, line: 42, type: !52)
!15757 = !DILocation(line: 42, column: 29, scope: !15723)
!15758 = !DILocalVariable(name: "h", arg: 6, scope: !15723, file: !13243, line: 42, type: !52)
!15759 = !DILocation(line: 42, column: 36, scope: !15723)
!15760 = !DILocalVariable(name: "c", arg: 7, scope: !15723, file: !13243, line: 42, type: !53)
!15761 = !DILocation(line: 42, column: 53, scope: !15723)
!15762 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !15723, file: !13243, line: 43, type: !84)
!15763 = !DILocation(line: 43, column: 39, scope: !15723)
!15764 = !DILocalVariable(name: "dst", scope: !15723, file: !13243, line: 45, type: !22)
!15765 = !DILocation(line: 45, column: 16, scope: !15723)
!15766 = !DILocation(line: 45, column: 36, scope: !15723)
!15767 = !DILocation(line: 45, column: 22, scope: !15723)
!15768 = !DILocalVariable(name: "src", scope: !15723, file: !13243, line: 46, type: !17)
!15769 = !DILocation(line: 46, column: 15, scope: !15723)
!15770 = !DILocation(line: 46, column: 34, scope: !15723)
!15771 = !DILocalVariable(name: "src0", scope: !15723, file: !13243, line: 47, type: !304)
!15772 = !DILocation(line: 47, column: 20, scope: !15723)
!15773 = !DILocation(line: 47, column: 27, scope: !15723)
!15774 = !DILocalVariable(name: "src1", scope: !15723, file: !13243, line: 47, type: !304)
!15775 = !DILocation(line: 47, column: 36, scope: !15723)
!15776 = !DILocation(line: 47, column: 43, scope: !15723)
!15777 = !DILocalVariable(name: "src2", scope: !15723, file: !13243, line: 47, type: !304)
!15778 = !DILocation(line: 47, column: 52, scope: !15723)
!15779 = !DILocation(line: 47, column: 59, scope: !15723)
!15780 = !DILocalVariable(name: "dst0", scope: !15723, file: !13243, line: 48, type: !23)
!15781 = !DILocation(line: 48, column: 15, scope: !15723)
!15782 = !DILocation(line: 48, column: 22, scope: !15723)
!15783 = !DILocalVariable(name: "dst1", scope: !15723, file: !13243, line: 48, type: !23)
!15784 = !DILocation(line: 48, column: 31, scope: !15723)
!15785 = !DILocation(line: 48, column: 38, scope: !15723)
!15786 = !DILocalVariable(name: "dst2", scope: !15723, file: !13243, line: 48, type: !23)
!15787 = !DILocation(line: 48, column: 47, scope: !15723)
!15788 = !DILocation(line: 48, column: 54, scope: !15723)
!15789 = !DILocalVariable(name: "y", scope: !15723, file: !13243, line: 49, type: !52)
!15790 = !DILocation(line: 49, column: 9, scope: !15723)
!15791 = !DILocalVariable(name: "x", scope: !15723, file: !13243, line: 49, type: !52)
!15792 = !DILocation(line: 49, column: 12, scope: !15723)
!15793 = !DILocalVariable(name: "sh", scope: !15723, file: !13243, line: 50, type: !343)
!15794 = !DILocation(line: 50, column: 15, scope: !15723)
!15795 = !DILocalVariable(name: "rnd", scope: !15723, file: !13243, line: 51, type: !343)
!15796 = !DILocation(line: 51, column: 15, scope: !15723)
!15797 = !DILocalVariable(name: "y_off_in", scope: !15723, file: !13243, line: 52, type: !52)
!15798 = !DILocation(line: 52, column: 9, scope: !15723)
!15799 = !DILocation(line: 52, column: 20, scope: !15723)
!15800 = !DILocalVariable(name: "y_off_out", scope: !15723, file: !13243, line: 53, type: !52)
!15801 = !DILocation(line: 53, column: 9, scope: !15723)
!15802 = !DILocation(line: 53, column: 21, scope: !15723)
!15803 = !DILocation(line: 53, column: 38, scope: !15723)
!15804 = !DILocalVariable(name: "uv_off_in", scope: !15723, file: !13243, line: 54, type: !343)
!15805 = !DILocation(line: 54, column: 15, scope: !15723)
!15806 = !DILocalVariable(name: "uv_off_out", scope: !15723, file: !13243, line: 55, type: !343)
!15807 = !DILocation(line: 55, column: 15, scope: !15723)
!15808 = !DILocalVariable(name: "cyy", scope: !15723, file: !13243, line: 56, type: !52)
!15809 = !DILocation(line: 56, column: 9, scope: !15723)
!15810 = !DILocation(line: 56, column: 15, scope: !15723)
!15811 = !DILocalVariable(name: "cyu", scope: !15723, file: !13243, line: 56, type: !52)
!15812 = !DILocation(line: 56, column: 27, scope: !15723)
!15813 = !DILocation(line: 56, column: 33, scope: !15723)
!15814 = !DILocalVariable(name: "cyv", scope: !15723, file: !13243, line: 56, type: !52)
!15815 = !DILocation(line: 56, column: 45, scope: !15723)
!15816 = !DILocation(line: 56, column: 51, scope: !15723)
!15817 = !DILocalVariable(name: "cuu", scope: !15723, file: !13243, line: 57, type: !52)
!15818 = !DILocation(line: 57, column: 9, scope: !15723)
!15819 = !DILocation(line: 57, column: 15, scope: !15723)
!15820 = !DILocalVariable(name: "cuv", scope: !15723, file: !13243, line: 57, type: !52)
!15821 = !DILocation(line: 57, column: 27, scope: !15723)
!15822 = !DILocation(line: 57, column: 33, scope: !15723)
!15823 = !DILocalVariable(name: "cvu", scope: !15723, file: !13243, line: 57, type: !52)
!15824 = !DILocation(line: 57, column: 45, scope: !15723)
!15825 = !DILocation(line: 57, column: 51, scope: !15723)
!15826 = !DILocalVariable(name: "cvv", scope: !15723, file: !13243, line: 57, type: !52)
!15827 = !DILocation(line: 57, column: 63, scope: !15723)
!15828 = !DILocation(line: 57, column: 69, scope: !15723)
!15829 = !DILocation(line: 61, column: 58, scope: !15723)
!15830 = !DILocation(line: 61, column: 61, scope: !15723)
!15831 = !DILocation(line: 61, column: 72, scope: !15723)
!15832 = !DILocation(line: 61, column: 77, scope: !15723)
!15833 = !DILocation(line: 61, column: 7, scope: !15723)
!15834 = !DILocation(line: 62, column: 58, scope: !15723)
!15835 = !DILocation(line: 62, column: 61, scope: !15723)
!15836 = !DILocation(line: 62, column: 72, scope: !15723)
!15837 = !DILocation(line: 62, column: 77, scope: !15723)
!15838 = !DILocation(line: 62, column: 7, scope: !15723)
!15839 = !DILocation(line: 63, column: 12, scope: !15731)
!15840 = !DILocation(line: 63, column: 10, scope: !15731)
!15841 = !DILocation(line: 63, column: 17, scope: !15842)
!15842 = !DILexicalBlockFile(scope: !15730, file: !13243, discriminator: 1)
!15843 = !DILocation(line: 63, column: 21, scope: !15842)
!15844 = !DILocation(line: 63, column: 19, scope: !15842)
!15845 = !DILocation(line: 63, column: 5, scope: !15842)
!15846 = !DILocation(line: 64, column: 16, scope: !15728)
!15847 = !DILocation(line: 64, column: 14, scope: !15728)
!15848 = !DILocation(line: 64, column: 21, scope: !15849)
!15849 = !DILexicalBlockFile(scope: !15727, file: !13243, discriminator: 1)
!15850 = !DILocation(line: 64, column: 25, scope: !15849)
!15851 = !DILocation(line: 64, column: 23, scope: !15849)
!15852 = !DILocation(line: 64, column: 9, scope: !15849)
!15853 = !DILocalVariable(name: "y00", scope: !15726, file: !13243, line: 65, type: !52)
!15854 = !DILocation(line: 65, column: 17, scope: !15726)
!15855 = !DILocation(line: 65, column: 28, scope: !15726)
!15856 = !DILocation(line: 65, column: 30, scope: !15726)
!15857 = !DILocation(line: 65, column: 23, scope: !15726)
!15858 = !DILocation(line: 65, column: 38, scope: !15726)
!15859 = !DILocation(line: 65, column: 36, scope: !15726)
!15860 = !DILocalVariable(name: "y01", scope: !15726, file: !13243, line: 67, type: !52)
!15861 = !DILocation(line: 67, column: 17, scope: !15726)
!15862 = !DILocation(line: 67, column: 32, scope: !15726)
!15863 = !DILocation(line: 67, column: 30, scope: !15726)
!15864 = !DILocation(line: 67, column: 34, scope: !15726)
!15865 = !DILocation(line: 67, column: 23, scope: !15726)
!15866 = !DILocation(line: 67, column: 41, scope: !15726)
!15867 = !DILocation(line: 67, column: 39, scope: !15726)
!15868 = !DILocalVariable(name: "y10", scope: !15726, file: !13243, line: 69, type: !52)
!15869 = !DILocation(line: 69, column: 17, scope: !15726)
!15870 = !DILocation(line: 69, column: 28, scope: !15726)
!15871 = !DILocation(line: 69, column: 42, scope: !15726)
!15872 = !DILocation(line: 69, column: 66, scope: !15726)
!15873 = !DILocation(line: 69, column: 64, scope: !15726)
!15874 = !DILocation(line: 69, column: 62, scope: !15726)
!15875 = !DILocation(line: 69, column: 60, scope: !15726)
!15876 = !DILocation(line: 69, column: 23, scope: !15726)
!15877 = !DILocation(line: 69, column: 71, scope: !15726)
!15878 = !DILocation(line: 69, column: 69, scope: !15726)
!15879 = !DILocalVariable(name: "y11", scope: !15726, file: !13243, line: 70, type: !52)
!15880 = !DILocation(line: 70, column: 17, scope: !15726)
!15881 = !DILocation(line: 70, column: 28, scope: !15726)
!15882 = !DILocation(line: 70, column: 42, scope: !15726)
!15883 = !DILocation(line: 70, column: 66, scope: !15726)
!15884 = !DILocation(line: 70, column: 64, scope: !15726)
!15885 = !DILocation(line: 70, column: 62, scope: !15726)
!15886 = !DILocation(line: 70, column: 60, scope: !15726)
!15887 = !DILocation(line: 70, column: 68, scope: !15726)
!15888 = !DILocation(line: 70, column: 23, scope: !15726)
!15889 = !DILocation(line: 70, column: 75, scope: !15726)
!15890 = !DILocation(line: 70, column: 73, scope: !15726)
!15891 = !DILocalVariable(name: "u", scope: !15726, file: !13243, line: 73, type: !52)
!15892 = !DILocation(line: 73, column: 17, scope: !15726)
!15893 = !DILocation(line: 73, column: 26, scope: !15726)
!15894 = !DILocation(line: 73, column: 21, scope: !15726)
!15895 = !DILocation(line: 73, column: 29, scope: !15726)
!15896 = !DILocalVariable(name: "v", scope: !15726, file: !13243, line: 73, type: !52)
!15897 = !DILocation(line: 73, column: 42, scope: !15726)
!15898 = !DILocation(line: 73, column: 51, scope: !15726)
!15899 = !DILocation(line: 73, column: 46, scope: !15726)
!15900 = !DILocation(line: 73, column: 54, scope: !15726)
!15901 = !DILocalVariable(name: "uv_val", scope: !15726, file: !13243, line: 74, type: !52)
!15902 = !DILocation(line: 74, column: 17, scope: !15726)
!15903 = !DILocation(line: 74, column: 26, scope: !15726)
!15904 = !DILocation(line: 74, column: 32, scope: !15726)
!15905 = !DILocation(line: 74, column: 30, scope: !15726)
!15906 = !DILocation(line: 74, column: 36, scope: !15726)
!15907 = !DILocation(line: 74, column: 42, scope: !15726)
!15908 = !DILocation(line: 74, column: 40, scope: !15726)
!15909 = !DILocation(line: 74, column: 34, scope: !15726)
!15910 = !DILocation(line: 74, column: 44, scope: !15726)
!15911 = !DILocation(line: 74, column: 52, scope: !15726)
!15912 = !DILocation(line: 74, column: 50, scope: !15726)
!15913 = !DILocation(line: 76, column: 46, scope: !15726)
!15914 = !DILocation(line: 76, column: 52, scope: !15726)
!15915 = !DILocation(line: 76, column: 50, scope: !15726)
!15916 = !DILocation(line: 76, column: 58, scope: !15726)
!15917 = !DILocation(line: 76, column: 56, scope: !15726)
!15918 = !DILocation(line: 76, column: 66, scope: !15726)
!15919 = !DILocation(line: 76, column: 28, scope: !15726)
!15920 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15746)
!15921 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15746)
!15922 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15746)
!15923 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15746)
!15924 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15746)
!15925 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15746)
!15926 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15746)
!15927 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15746)
!15928 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15746)
!15929 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15746)
!15930 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15746)
!15931 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15746)
!15932 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15746)
!15933 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15746)
!15934 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15746)
!15935 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15746)
!15936 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15746)
!15937 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15746)
!15938 = !DILocation(line: 76, column: 18, scope: !15726)
!15939 = !DILocation(line: 76, column: 20, scope: !15726)
!15940 = !DILocation(line: 76, column: 13, scope: !15726)
!15941 = !DILocation(line: 76, column: 26, scope: !15726)
!15942 = !DILocation(line: 78, column: 49, scope: !15726)
!15943 = !DILocation(line: 78, column: 55, scope: !15726)
!15944 = !DILocation(line: 78, column: 53, scope: !15726)
!15945 = !DILocation(line: 78, column: 61, scope: !15726)
!15946 = !DILocation(line: 78, column: 59, scope: !15726)
!15947 = !DILocation(line: 78, column: 69, scope: !15726)
!15948 = !DILocation(line: 78, column: 31, scope: !15726)
!15949 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15725)
!15950 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15725)
!15951 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15725)
!15952 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15725)
!15953 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15725)
!15954 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15725)
!15955 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15725)
!15956 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15725)
!15957 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15725)
!15958 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15725)
!15959 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15725)
!15960 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15725)
!15961 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15725)
!15962 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15725)
!15963 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15725)
!15964 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15725)
!15965 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15725)
!15966 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15725)
!15967 = !DILocation(line: 78, column: 18, scope: !15726)
!15968 = !DILocation(line: 78, column: 20, scope: !15726)
!15969 = !DILocation(line: 78, column: 24, scope: !15726)
!15970 = !DILocation(line: 78, column: 13, scope: !15726)
!15971 = !DILocation(line: 78, column: 29, scope: !15726)
!15972 = !DILocation(line: 81, column: 49, scope: !15726)
!15973 = !DILocation(line: 81, column: 55, scope: !15726)
!15974 = !DILocation(line: 81, column: 53, scope: !15726)
!15975 = !DILocation(line: 81, column: 61, scope: !15726)
!15976 = !DILocation(line: 81, column: 59, scope: !15726)
!15977 = !DILocation(line: 81, column: 69, scope: !15726)
!15978 = !DILocation(line: 81, column: 31, scope: !15726)
!15979 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15734)
!15980 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15734)
!15981 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15734)
!15982 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15734)
!15983 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15734)
!15984 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15734)
!15985 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15734)
!15986 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15734)
!15987 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15734)
!15988 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15734)
!15989 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15734)
!15990 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15734)
!15991 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15734)
!15992 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15734)
!15993 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15734)
!15994 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15734)
!15995 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15734)
!15996 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15734)
!15997 = !DILocation(line: 80, column: 18, scope: !15726)
!15998 = !DILocation(line: 80, column: 20, scope: !15726)
!15999 = !DILocation(line: 80, column: 24, scope: !15726)
!16000 = !DILocation(line: 80, column: 30, scope: !15726)
!16001 = !DILocation(line: 80, column: 44, scope: !15726)
!16002 = !DILocation(line: 80, column: 28, scope: !15726)
!16003 = !DILocation(line: 80, column: 13, scope: !15726)
!16004 = !DILocation(line: 80, column: 64, scope: !15726)
!16005 = !DILocation(line: 83, column: 49, scope: !15726)
!16006 = !DILocation(line: 83, column: 55, scope: !15726)
!16007 = !DILocation(line: 83, column: 53, scope: !15726)
!16008 = !DILocation(line: 83, column: 61, scope: !15726)
!16009 = !DILocation(line: 83, column: 59, scope: !15726)
!16010 = !DILocation(line: 83, column: 69, scope: !15726)
!16011 = !DILocation(line: 83, column: 31, scope: !15726)
!16012 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15737)
!16013 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15737)
!16014 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15737)
!16015 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15737)
!16016 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15737)
!16017 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15737)
!16018 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15737)
!16019 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15737)
!16020 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15737)
!16021 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15737)
!16022 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15737)
!16023 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15737)
!16024 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15737)
!16025 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15737)
!16026 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15737)
!16027 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15737)
!16028 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15737)
!16029 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15737)
!16030 = !DILocation(line: 82, column: 18, scope: !15726)
!16031 = !DILocation(line: 82, column: 20, scope: !15726)
!16032 = !DILocation(line: 82, column: 24, scope: !15726)
!16033 = !DILocation(line: 82, column: 30, scope: !15726)
!16034 = !DILocation(line: 82, column: 44, scope: !15726)
!16035 = !DILocation(line: 82, column: 28, scope: !15726)
!16036 = !DILocation(line: 82, column: 13, scope: !15726)
!16037 = !DILocation(line: 82, column: 64, scope: !15726)
!16038 = !DILocation(line: 87, column: 41, scope: !15726)
!16039 = !DILocation(line: 87, column: 45, scope: !15726)
!16040 = !DILocation(line: 87, column: 43, scope: !15726)
!16041 = !DILocation(line: 87, column: 51, scope: !15726)
!16042 = !DILocation(line: 87, column: 55, scope: !15726)
!16043 = !DILocation(line: 87, column: 53, scope: !15726)
!16044 = !DILocation(line: 87, column: 49, scope: !15726)
!16045 = !DILocation(line: 87, column: 59, scope: !15726)
!16046 = !DILocation(line: 87, column: 73, scope: !15726)
!16047 = !DILocation(line: 87, column: 23, scope: !15726)
!16048 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15740)
!16049 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15740)
!16050 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15740)
!16051 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15740)
!16052 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15740)
!16053 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15740)
!16054 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15740)
!16055 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15740)
!16056 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15740)
!16057 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15740)
!16058 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15740)
!16059 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15740)
!16060 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15740)
!16061 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15740)
!16062 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15740)
!16063 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15740)
!16064 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15740)
!16065 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15740)
!16066 = !DILocation(line: 87, column: 18, scope: !15726)
!16067 = !DILocation(line: 87, column: 13, scope: !15726)
!16068 = !DILocation(line: 87, column: 21, scope: !15726)
!16069 = !DILocation(line: 88, column: 41, scope: !15726)
!16070 = !DILocation(line: 88, column: 45, scope: !15726)
!16071 = !DILocation(line: 88, column: 43, scope: !15726)
!16072 = !DILocation(line: 88, column: 51, scope: !15726)
!16073 = !DILocation(line: 88, column: 55, scope: !15726)
!16074 = !DILocation(line: 88, column: 53, scope: !15726)
!16075 = !DILocation(line: 88, column: 49, scope: !15726)
!16076 = !DILocation(line: 88, column: 59, scope: !15726)
!16077 = !DILocation(line: 88, column: 73, scope: !15726)
!16078 = !DILocation(line: 88, column: 23, scope: !15726)
!16079 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !15743)
!16080 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !15743)
!16081 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !15743)
!16082 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !15743)
!16083 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !15743)
!16084 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !15743)
!16085 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !15743)
!16086 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !15743)
!16087 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !15743)
!16088 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !15743)
!16089 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !15743)
!16090 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !15743)
!16091 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !15743)
!16092 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !15743)
!16093 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !15743)
!16094 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !15743)
!16095 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !15743)
!16096 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !15743)
!16097 = !DILocation(line: 88, column: 18, scope: !15726)
!16098 = !DILocation(line: 88, column: 13, scope: !15726)
!16099 = !DILocation(line: 88, column: 21, scope: !15726)
!16100 = !DILocation(line: 89, column: 9, scope: !15726)
!16101 = !DILocation(line: 64, column: 29, scope: !16102)
!16102 = !DILexicalBlockFile(scope: !15727, file: !13243, discriminator: 2)
!16103 = !DILocation(line: 64, column: 9, scope: !16102)
!16104 = distinct !{!16104, !16105}
!16105 = !DILocation(line: 64, column: 9, scope: !15729)
!16106 = !DILocation(line: 91, column: 18, scope: !15729)
!16107 = !DILocation(line: 91, column: 32, scope: !15729)
!16108 = !DILocation(line: 91, column: 44, scope: !15729)
!16109 = !DILocation(line: 91, column: 14, scope: !15729)
!16110 = !DILocation(line: 92, column: 17, scope: !15729)
!16111 = !DILocation(line: 92, column: 31, scope: !15729)
!16112 = !DILocation(line: 92, column: 14, scope: !15729)
!16113 = !DILocation(line: 93, column: 17, scope: !15729)
!16114 = !DILocation(line: 93, column: 31, scope: !15729)
!16115 = !DILocation(line: 93, column: 14, scope: !15729)
!16116 = !DILocation(line: 94, column: 18, scope: !15729)
!16117 = !DILocation(line: 94, column: 32, scope: !15729)
!16118 = !DILocation(line: 94, column: 44, scope: !15729)
!16119 = !DILocation(line: 94, column: 14, scope: !15729)
!16120 = !DILocation(line: 95, column: 17, scope: !15729)
!16121 = !DILocation(line: 95, column: 31, scope: !15729)
!16122 = !DILocation(line: 95, column: 14, scope: !15729)
!16123 = !DILocation(line: 96, column: 17, scope: !15729)
!16124 = !DILocation(line: 96, column: 31, scope: !15729)
!16125 = !DILocation(line: 96, column: 14, scope: !15729)
!16126 = !DILocation(line: 97, column: 5, scope: !15729)
!16127 = !DILocation(line: 63, column: 25, scope: !16128)
!16128 = !DILexicalBlockFile(scope: !15730, file: !13243, discriminator: 2)
!16129 = !DILocation(line: 63, column: 5, scope: !16128)
!16130 = distinct !{!16130, !16131}
!16131 = !DILocation(line: 63, column: 5, scope: !15723)
!16132 = !DILocation(line: 98, column: 1, scope: !15723)
!16133 = distinct !DISubprogram(name: "yuv2yuv_444p10to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!16134 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16135)
!16135 = distinct !DILocation(line: 87, column: 23, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16137, file: !13243, line: 64, column: 33)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !13243, line: 64, column: 9)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !13243, line: 64, column: 9)
!16139 = distinct !DILexicalBlock(scope: !16140, file: !13243, line: 63, column: 29)
!16140 = distinct !DILexicalBlock(scope: !16141, file: !13243, line: 63, column: 5)
!16141 = distinct !DILexicalBlock(scope: !16133, file: !13243, line: 63, column: 5)
!16142 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 88, column: 23, scope: !16136)
!16144 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 76, column: 28, scope: !16136)
!16146 = !DILocalVariable(name: "_dst", arg: 1, scope: !16133, file: !13243, line: 40, type: !17)
!16147 = !DILocation(line: 40, column: 42, scope: !16133)
!16148 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !16133, file: !13243, line: 40, type: !50)
!16149 = !DILocation(line: 40, column: 67, scope: !16133)
!16150 = !DILocalVariable(name: "_src", arg: 3, scope: !16133, file: !13243, line: 41, type: !17)
!16151 = !DILocation(line: 41, column: 34, scope: !16133)
!16152 = !DILocalVariable(name: "src_stride", arg: 4, scope: !16133, file: !13243, line: 41, type: !50)
!16153 = !DILocation(line: 41, column: 59, scope: !16133)
!16154 = !DILocalVariable(name: "w", arg: 5, scope: !16133, file: !13243, line: 42, type: !52)
!16155 = !DILocation(line: 42, column: 29, scope: !16133)
!16156 = !DILocalVariable(name: "h", arg: 6, scope: !16133, file: !13243, line: 42, type: !52)
!16157 = !DILocation(line: 42, column: 36, scope: !16133)
!16158 = !DILocalVariable(name: "c", arg: 7, scope: !16133, file: !13243, line: 42, type: !53)
!16159 = !DILocation(line: 42, column: 53, scope: !16133)
!16160 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !16133, file: !13243, line: 43, type: !84)
!16161 = !DILocation(line: 43, column: 39, scope: !16133)
!16162 = !DILocalVariable(name: "dst", scope: !16133, file: !13243, line: 45, type: !17)
!16163 = !DILocation(line: 45, column: 15, scope: !16133)
!16164 = !DILocation(line: 45, column: 34, scope: !16133)
!16165 = !DILocalVariable(name: "src", scope: !16133, file: !13243, line: 46, type: !22)
!16166 = !DILocation(line: 46, column: 16, scope: !16133)
!16167 = !DILocation(line: 46, column: 36, scope: !16133)
!16168 = !DILocation(line: 46, column: 22, scope: !16133)
!16169 = !DILocalVariable(name: "src0", scope: !16133, file: !13243, line: 47, type: !1418)
!16170 = !DILocation(line: 47, column: 21, scope: !16133)
!16171 = !DILocation(line: 47, column: 28, scope: !16133)
!16172 = !DILocalVariable(name: "src1", scope: !16133, file: !13243, line: 47, type: !1418)
!16173 = !DILocation(line: 47, column: 37, scope: !16133)
!16174 = !DILocation(line: 47, column: 44, scope: !16133)
!16175 = !DILocalVariable(name: "src2", scope: !16133, file: !13243, line: 47, type: !1418)
!16176 = !DILocation(line: 47, column: 53, scope: !16133)
!16177 = !DILocation(line: 47, column: 60, scope: !16133)
!16178 = !DILocalVariable(name: "dst0", scope: !16133, file: !13243, line: 48, type: !18)
!16179 = !DILocation(line: 48, column: 14, scope: !16133)
!16180 = !DILocation(line: 48, column: 21, scope: !16133)
!16181 = !DILocalVariable(name: "dst1", scope: !16133, file: !13243, line: 48, type: !18)
!16182 = !DILocation(line: 48, column: 30, scope: !16133)
!16183 = !DILocation(line: 48, column: 37, scope: !16133)
!16184 = !DILocalVariable(name: "dst2", scope: !16133, file: !13243, line: 48, type: !18)
!16185 = !DILocation(line: 48, column: 46, scope: !16133)
!16186 = !DILocation(line: 48, column: 53, scope: !16133)
!16187 = !DILocalVariable(name: "y", scope: !16133, file: !13243, line: 49, type: !52)
!16188 = !DILocation(line: 49, column: 9, scope: !16133)
!16189 = !DILocalVariable(name: "x", scope: !16133, file: !13243, line: 49, type: !52)
!16190 = !DILocation(line: 49, column: 12, scope: !16133)
!16191 = !DILocalVariable(name: "sh", scope: !16133, file: !13243, line: 50, type: !343)
!16192 = !DILocation(line: 50, column: 15, scope: !16133)
!16193 = !DILocalVariable(name: "rnd", scope: !16133, file: !13243, line: 51, type: !343)
!16194 = !DILocation(line: 51, column: 15, scope: !16133)
!16195 = !DILocalVariable(name: "y_off_in", scope: !16133, file: !13243, line: 52, type: !52)
!16196 = !DILocation(line: 52, column: 9, scope: !16133)
!16197 = !DILocation(line: 52, column: 20, scope: !16133)
!16198 = !DILocalVariable(name: "y_off_out", scope: !16133, file: !13243, line: 53, type: !52)
!16199 = !DILocation(line: 53, column: 9, scope: !16133)
!16200 = !DILocation(line: 53, column: 21, scope: !16133)
!16201 = !DILocation(line: 53, column: 38, scope: !16133)
!16202 = !DILocalVariable(name: "uv_off_in", scope: !16133, file: !13243, line: 54, type: !343)
!16203 = !DILocation(line: 54, column: 15, scope: !16133)
!16204 = !DILocalVariable(name: "uv_off_out", scope: !16133, file: !13243, line: 55, type: !343)
!16205 = !DILocation(line: 55, column: 15, scope: !16133)
!16206 = !DILocalVariable(name: "cyy", scope: !16133, file: !13243, line: 56, type: !52)
!16207 = !DILocation(line: 56, column: 9, scope: !16133)
!16208 = !DILocation(line: 56, column: 15, scope: !16133)
!16209 = !DILocalVariable(name: "cyu", scope: !16133, file: !13243, line: 56, type: !52)
!16210 = !DILocation(line: 56, column: 27, scope: !16133)
!16211 = !DILocation(line: 56, column: 33, scope: !16133)
!16212 = !DILocalVariable(name: "cyv", scope: !16133, file: !13243, line: 56, type: !52)
!16213 = !DILocation(line: 56, column: 45, scope: !16133)
!16214 = !DILocation(line: 56, column: 51, scope: !16133)
!16215 = !DILocalVariable(name: "cuu", scope: !16133, file: !13243, line: 57, type: !52)
!16216 = !DILocation(line: 57, column: 9, scope: !16133)
!16217 = !DILocation(line: 57, column: 15, scope: !16133)
!16218 = !DILocalVariable(name: "cuv", scope: !16133, file: !13243, line: 57, type: !52)
!16219 = !DILocation(line: 57, column: 27, scope: !16133)
!16220 = !DILocation(line: 57, column: 33, scope: !16133)
!16221 = !DILocalVariable(name: "cvu", scope: !16133, file: !13243, line: 57, type: !52)
!16222 = !DILocation(line: 57, column: 45, scope: !16133)
!16223 = !DILocation(line: 57, column: 51, scope: !16133)
!16224 = !DILocalVariable(name: "cvv", scope: !16133, file: !13243, line: 57, type: !52)
!16225 = !DILocation(line: 57, column: 63, scope: !16133)
!16226 = !DILocation(line: 57, column: 69, scope: !16133)
!16227 = !DILocation(line: 61, column: 58, scope: !16133)
!16228 = !DILocation(line: 61, column: 61, scope: !16133)
!16229 = !DILocation(line: 61, column: 72, scope: !16133)
!16230 = !DILocation(line: 61, column: 77, scope: !16133)
!16231 = !DILocation(line: 61, column: 7, scope: !16133)
!16232 = !DILocation(line: 62, column: 58, scope: !16133)
!16233 = !DILocation(line: 62, column: 61, scope: !16133)
!16234 = !DILocation(line: 62, column: 72, scope: !16133)
!16235 = !DILocation(line: 62, column: 77, scope: !16133)
!16236 = !DILocation(line: 62, column: 7, scope: !16133)
!16237 = !DILocation(line: 63, column: 12, scope: !16141)
!16238 = !DILocation(line: 63, column: 10, scope: !16141)
!16239 = !DILocation(line: 63, column: 17, scope: !16240)
!16240 = !DILexicalBlockFile(scope: !16140, file: !13243, discriminator: 1)
!16241 = !DILocation(line: 63, column: 21, scope: !16240)
!16242 = !DILocation(line: 63, column: 19, scope: !16240)
!16243 = !DILocation(line: 63, column: 5, scope: !16240)
!16244 = !DILocation(line: 64, column: 16, scope: !16138)
!16245 = !DILocation(line: 64, column: 14, scope: !16138)
!16246 = !DILocation(line: 64, column: 21, scope: !16247)
!16247 = !DILexicalBlockFile(scope: !16137, file: !13243, discriminator: 1)
!16248 = !DILocation(line: 64, column: 25, scope: !16247)
!16249 = !DILocation(line: 64, column: 23, scope: !16247)
!16250 = !DILocation(line: 64, column: 9, scope: !16247)
!16251 = !DILocalVariable(name: "y00", scope: !16136, file: !13243, line: 65, type: !52)
!16252 = !DILocation(line: 65, column: 17, scope: !16136)
!16253 = !DILocation(line: 65, column: 28, scope: !16136)
!16254 = !DILocation(line: 65, column: 30, scope: !16136)
!16255 = !DILocation(line: 65, column: 23, scope: !16136)
!16256 = !DILocation(line: 65, column: 38, scope: !16136)
!16257 = !DILocation(line: 65, column: 36, scope: !16136)
!16258 = !DILocalVariable(name: "u", scope: !16136, file: !13243, line: 73, type: !52)
!16259 = !DILocation(line: 73, column: 17, scope: !16136)
!16260 = !DILocation(line: 73, column: 26, scope: !16136)
!16261 = !DILocation(line: 73, column: 21, scope: !16136)
!16262 = !DILocation(line: 73, column: 29, scope: !16136)
!16263 = !DILocalVariable(name: "v", scope: !16136, file: !13243, line: 73, type: !52)
!16264 = !DILocation(line: 73, column: 42, scope: !16136)
!16265 = !DILocation(line: 73, column: 51, scope: !16136)
!16266 = !DILocation(line: 73, column: 46, scope: !16136)
!16267 = !DILocation(line: 73, column: 54, scope: !16136)
!16268 = !DILocalVariable(name: "uv_val", scope: !16136, file: !13243, line: 74, type: !52)
!16269 = !DILocation(line: 74, column: 17, scope: !16136)
!16270 = !DILocation(line: 74, column: 26, scope: !16136)
!16271 = !DILocation(line: 74, column: 32, scope: !16136)
!16272 = !DILocation(line: 74, column: 30, scope: !16136)
!16273 = !DILocation(line: 74, column: 36, scope: !16136)
!16274 = !DILocation(line: 74, column: 42, scope: !16136)
!16275 = !DILocation(line: 74, column: 40, scope: !16136)
!16276 = !DILocation(line: 74, column: 34, scope: !16136)
!16277 = !DILocation(line: 74, column: 44, scope: !16136)
!16278 = !DILocation(line: 74, column: 52, scope: !16136)
!16279 = !DILocation(line: 74, column: 50, scope: !16136)
!16280 = !DILocation(line: 76, column: 45, scope: !16136)
!16281 = !DILocation(line: 76, column: 51, scope: !16136)
!16282 = !DILocation(line: 76, column: 49, scope: !16136)
!16283 = !DILocation(line: 76, column: 57, scope: !16136)
!16284 = !DILocation(line: 76, column: 55, scope: !16136)
!16285 = !DILocation(line: 76, column: 65, scope: !16136)
!16286 = !DILocation(line: 76, column: 28, scope: !16136)
!16287 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16145)
!16288 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16145)
!16289 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16145)
!16290 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16145)
!16291 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16145)
!16292 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16145)
!16293 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16145)
!16294 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16145)
!16295 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16145)
!16296 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16145)
!16297 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16145)
!16298 = !DILocation(line: 76, column: 18, scope: !16136)
!16299 = !DILocation(line: 76, column: 20, scope: !16136)
!16300 = !DILocation(line: 76, column: 13, scope: !16136)
!16301 = !DILocation(line: 76, column: 26, scope: !16136)
!16302 = !DILocation(line: 87, column: 40, scope: !16136)
!16303 = !DILocation(line: 87, column: 44, scope: !16136)
!16304 = !DILocation(line: 87, column: 42, scope: !16136)
!16305 = !DILocation(line: 87, column: 50, scope: !16136)
!16306 = !DILocation(line: 87, column: 54, scope: !16136)
!16307 = !DILocation(line: 87, column: 52, scope: !16136)
!16308 = !DILocation(line: 87, column: 48, scope: !16136)
!16309 = !DILocation(line: 87, column: 58, scope: !16136)
!16310 = !DILocation(line: 87, column: 72, scope: !16136)
!16311 = !DILocation(line: 87, column: 23, scope: !16136)
!16312 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16135)
!16313 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16135)
!16314 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16135)
!16315 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16135)
!16316 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16135)
!16317 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16135)
!16318 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16135)
!16319 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16135)
!16320 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16135)
!16321 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16135)
!16322 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16135)
!16323 = !DILocation(line: 87, column: 18, scope: !16136)
!16324 = !DILocation(line: 87, column: 13, scope: !16136)
!16325 = !DILocation(line: 87, column: 21, scope: !16136)
!16326 = !DILocation(line: 88, column: 40, scope: !16136)
!16327 = !DILocation(line: 88, column: 44, scope: !16136)
!16328 = !DILocation(line: 88, column: 42, scope: !16136)
!16329 = !DILocation(line: 88, column: 50, scope: !16136)
!16330 = !DILocation(line: 88, column: 54, scope: !16136)
!16331 = !DILocation(line: 88, column: 52, scope: !16136)
!16332 = !DILocation(line: 88, column: 48, scope: !16136)
!16333 = !DILocation(line: 88, column: 58, scope: !16136)
!16334 = !DILocation(line: 88, column: 72, scope: !16136)
!16335 = !DILocation(line: 88, column: 23, scope: !16136)
!16336 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16143)
!16337 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16143)
!16338 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16143)
!16339 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16143)
!16340 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16143)
!16341 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16143)
!16342 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16143)
!16343 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16143)
!16344 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16143)
!16345 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16143)
!16346 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16143)
!16347 = !DILocation(line: 88, column: 18, scope: !16136)
!16348 = !DILocation(line: 88, column: 13, scope: !16136)
!16349 = !DILocation(line: 88, column: 21, scope: !16136)
!16350 = !DILocation(line: 89, column: 9, scope: !16136)
!16351 = !DILocation(line: 64, column: 29, scope: !16352)
!16352 = !DILexicalBlockFile(scope: !16137, file: !13243, discriminator: 2)
!16353 = !DILocation(line: 64, column: 9, scope: !16352)
!16354 = distinct !{!16354, !16355}
!16355 = !DILocation(line: 64, column: 9, scope: !16139)
!16356 = !DILocation(line: 91, column: 18, scope: !16139)
!16357 = !DILocation(line: 91, column: 32, scope: !16139)
!16358 = !DILocation(line: 91, column: 44, scope: !16139)
!16359 = !DILocation(line: 91, column: 14, scope: !16139)
!16360 = !DILocation(line: 92, column: 17, scope: !16139)
!16361 = !DILocation(line: 92, column: 31, scope: !16139)
!16362 = !DILocation(line: 92, column: 14, scope: !16139)
!16363 = !DILocation(line: 93, column: 17, scope: !16139)
!16364 = !DILocation(line: 93, column: 31, scope: !16139)
!16365 = !DILocation(line: 93, column: 14, scope: !16139)
!16366 = !DILocation(line: 94, column: 18, scope: !16139)
!16367 = !DILocation(line: 94, column: 32, scope: !16139)
!16368 = !DILocation(line: 94, column: 44, scope: !16139)
!16369 = !DILocation(line: 94, column: 14, scope: !16139)
!16370 = !DILocation(line: 95, column: 17, scope: !16139)
!16371 = !DILocation(line: 95, column: 31, scope: !16139)
!16372 = !DILocation(line: 95, column: 14, scope: !16139)
!16373 = !DILocation(line: 96, column: 17, scope: !16139)
!16374 = !DILocation(line: 96, column: 31, scope: !16139)
!16375 = !DILocation(line: 96, column: 14, scope: !16139)
!16376 = !DILocation(line: 97, column: 5, scope: !16139)
!16377 = !DILocation(line: 63, column: 25, scope: !16378)
!16378 = !DILexicalBlockFile(scope: !16140, file: !13243, discriminator: 2)
!16379 = !DILocation(line: 63, column: 5, scope: !16378)
!16380 = distinct !{!16380, !16381}
!16381 = !DILocation(line: 63, column: 5, scope: !16133)
!16382 = !DILocation(line: 98, column: 1, scope: !16133)
!16383 = distinct !DISubprogram(name: "yuv2yuv_422p10to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!16384 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 78, column: 31, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16387, file: !13243, line: 64, column: 33)
!16387 = distinct !DILexicalBlock(scope: !16388, file: !13243, line: 64, column: 9)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !13243, line: 64, column: 9)
!16389 = distinct !DILexicalBlock(scope: !16390, file: !13243, line: 63, column: 29)
!16390 = distinct !DILexicalBlock(scope: !16391, file: !13243, line: 63, column: 5)
!16391 = distinct !DILexicalBlock(scope: !16383, file: !13243, line: 63, column: 5)
!16392 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16393)
!16393 = distinct !DILocation(line: 87, column: 23, scope: !16386)
!16394 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16395)
!16395 = distinct !DILocation(line: 88, column: 23, scope: !16386)
!16396 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 76, column: 28, scope: !16386)
!16398 = !DILocalVariable(name: "_dst", arg: 1, scope: !16383, file: !13243, line: 40, type: !17)
!16399 = !DILocation(line: 40, column: 42, scope: !16383)
!16400 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !16383, file: !13243, line: 40, type: !50)
!16401 = !DILocation(line: 40, column: 67, scope: !16383)
!16402 = !DILocalVariable(name: "_src", arg: 3, scope: !16383, file: !13243, line: 41, type: !17)
!16403 = !DILocation(line: 41, column: 34, scope: !16383)
!16404 = !DILocalVariable(name: "src_stride", arg: 4, scope: !16383, file: !13243, line: 41, type: !50)
!16405 = !DILocation(line: 41, column: 59, scope: !16383)
!16406 = !DILocalVariable(name: "w", arg: 5, scope: !16383, file: !13243, line: 42, type: !52)
!16407 = !DILocation(line: 42, column: 29, scope: !16383)
!16408 = !DILocalVariable(name: "h", arg: 6, scope: !16383, file: !13243, line: 42, type: !52)
!16409 = !DILocation(line: 42, column: 36, scope: !16383)
!16410 = !DILocalVariable(name: "c", arg: 7, scope: !16383, file: !13243, line: 42, type: !53)
!16411 = !DILocation(line: 42, column: 53, scope: !16383)
!16412 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !16383, file: !13243, line: 43, type: !84)
!16413 = !DILocation(line: 43, column: 39, scope: !16383)
!16414 = !DILocalVariable(name: "dst", scope: !16383, file: !13243, line: 45, type: !17)
!16415 = !DILocation(line: 45, column: 15, scope: !16383)
!16416 = !DILocation(line: 45, column: 34, scope: !16383)
!16417 = !DILocalVariable(name: "src", scope: !16383, file: !13243, line: 46, type: !22)
!16418 = !DILocation(line: 46, column: 16, scope: !16383)
!16419 = !DILocation(line: 46, column: 36, scope: !16383)
!16420 = !DILocation(line: 46, column: 22, scope: !16383)
!16421 = !DILocalVariable(name: "src0", scope: !16383, file: !13243, line: 47, type: !1418)
!16422 = !DILocation(line: 47, column: 21, scope: !16383)
!16423 = !DILocation(line: 47, column: 28, scope: !16383)
!16424 = !DILocalVariable(name: "src1", scope: !16383, file: !13243, line: 47, type: !1418)
!16425 = !DILocation(line: 47, column: 37, scope: !16383)
!16426 = !DILocation(line: 47, column: 44, scope: !16383)
!16427 = !DILocalVariable(name: "src2", scope: !16383, file: !13243, line: 47, type: !1418)
!16428 = !DILocation(line: 47, column: 53, scope: !16383)
!16429 = !DILocation(line: 47, column: 60, scope: !16383)
!16430 = !DILocalVariable(name: "dst0", scope: !16383, file: !13243, line: 48, type: !18)
!16431 = !DILocation(line: 48, column: 14, scope: !16383)
!16432 = !DILocation(line: 48, column: 21, scope: !16383)
!16433 = !DILocalVariable(name: "dst1", scope: !16383, file: !13243, line: 48, type: !18)
!16434 = !DILocation(line: 48, column: 30, scope: !16383)
!16435 = !DILocation(line: 48, column: 37, scope: !16383)
!16436 = !DILocalVariable(name: "dst2", scope: !16383, file: !13243, line: 48, type: !18)
!16437 = !DILocation(line: 48, column: 46, scope: !16383)
!16438 = !DILocation(line: 48, column: 53, scope: !16383)
!16439 = !DILocalVariable(name: "y", scope: !16383, file: !13243, line: 49, type: !52)
!16440 = !DILocation(line: 49, column: 9, scope: !16383)
!16441 = !DILocalVariable(name: "x", scope: !16383, file: !13243, line: 49, type: !52)
!16442 = !DILocation(line: 49, column: 12, scope: !16383)
!16443 = !DILocalVariable(name: "sh", scope: !16383, file: !13243, line: 50, type: !343)
!16444 = !DILocation(line: 50, column: 15, scope: !16383)
!16445 = !DILocalVariable(name: "rnd", scope: !16383, file: !13243, line: 51, type: !343)
!16446 = !DILocation(line: 51, column: 15, scope: !16383)
!16447 = !DILocalVariable(name: "y_off_in", scope: !16383, file: !13243, line: 52, type: !52)
!16448 = !DILocation(line: 52, column: 9, scope: !16383)
!16449 = !DILocation(line: 52, column: 20, scope: !16383)
!16450 = !DILocalVariable(name: "y_off_out", scope: !16383, file: !13243, line: 53, type: !52)
!16451 = !DILocation(line: 53, column: 9, scope: !16383)
!16452 = !DILocation(line: 53, column: 21, scope: !16383)
!16453 = !DILocation(line: 53, column: 38, scope: !16383)
!16454 = !DILocalVariable(name: "uv_off_in", scope: !16383, file: !13243, line: 54, type: !343)
!16455 = !DILocation(line: 54, column: 15, scope: !16383)
!16456 = !DILocalVariable(name: "uv_off_out", scope: !16383, file: !13243, line: 55, type: !343)
!16457 = !DILocation(line: 55, column: 15, scope: !16383)
!16458 = !DILocalVariable(name: "cyy", scope: !16383, file: !13243, line: 56, type: !52)
!16459 = !DILocation(line: 56, column: 9, scope: !16383)
!16460 = !DILocation(line: 56, column: 15, scope: !16383)
!16461 = !DILocalVariable(name: "cyu", scope: !16383, file: !13243, line: 56, type: !52)
!16462 = !DILocation(line: 56, column: 27, scope: !16383)
!16463 = !DILocation(line: 56, column: 33, scope: !16383)
!16464 = !DILocalVariable(name: "cyv", scope: !16383, file: !13243, line: 56, type: !52)
!16465 = !DILocation(line: 56, column: 45, scope: !16383)
!16466 = !DILocation(line: 56, column: 51, scope: !16383)
!16467 = !DILocalVariable(name: "cuu", scope: !16383, file: !13243, line: 57, type: !52)
!16468 = !DILocation(line: 57, column: 9, scope: !16383)
!16469 = !DILocation(line: 57, column: 15, scope: !16383)
!16470 = !DILocalVariable(name: "cuv", scope: !16383, file: !13243, line: 57, type: !52)
!16471 = !DILocation(line: 57, column: 27, scope: !16383)
!16472 = !DILocation(line: 57, column: 33, scope: !16383)
!16473 = !DILocalVariable(name: "cvu", scope: !16383, file: !13243, line: 57, type: !52)
!16474 = !DILocation(line: 57, column: 45, scope: !16383)
!16475 = !DILocation(line: 57, column: 51, scope: !16383)
!16476 = !DILocalVariable(name: "cvv", scope: !16383, file: !13243, line: 57, type: !52)
!16477 = !DILocation(line: 57, column: 63, scope: !16383)
!16478 = !DILocation(line: 57, column: 69, scope: !16383)
!16479 = !DILocation(line: 61, column: 58, scope: !16383)
!16480 = !DILocation(line: 61, column: 61, scope: !16383)
!16481 = !DILocation(line: 61, column: 72, scope: !16383)
!16482 = !DILocation(line: 61, column: 77, scope: !16383)
!16483 = !DILocation(line: 61, column: 7, scope: !16383)
!16484 = !DILocation(line: 62, column: 58, scope: !16383)
!16485 = !DILocation(line: 62, column: 61, scope: !16383)
!16486 = !DILocation(line: 62, column: 72, scope: !16383)
!16487 = !DILocation(line: 62, column: 77, scope: !16383)
!16488 = !DILocation(line: 62, column: 7, scope: !16383)
!16489 = !DILocation(line: 63, column: 12, scope: !16391)
!16490 = !DILocation(line: 63, column: 10, scope: !16391)
!16491 = !DILocation(line: 63, column: 17, scope: !16492)
!16492 = !DILexicalBlockFile(scope: !16390, file: !13243, discriminator: 1)
!16493 = !DILocation(line: 63, column: 21, scope: !16492)
!16494 = !DILocation(line: 63, column: 19, scope: !16492)
!16495 = !DILocation(line: 63, column: 5, scope: !16492)
!16496 = !DILocation(line: 64, column: 16, scope: !16388)
!16497 = !DILocation(line: 64, column: 14, scope: !16388)
!16498 = !DILocation(line: 64, column: 21, scope: !16499)
!16499 = !DILexicalBlockFile(scope: !16387, file: !13243, discriminator: 1)
!16500 = !DILocation(line: 64, column: 25, scope: !16499)
!16501 = !DILocation(line: 64, column: 23, scope: !16499)
!16502 = !DILocation(line: 64, column: 9, scope: !16499)
!16503 = !DILocalVariable(name: "y00", scope: !16386, file: !13243, line: 65, type: !52)
!16504 = !DILocation(line: 65, column: 17, scope: !16386)
!16505 = !DILocation(line: 65, column: 28, scope: !16386)
!16506 = !DILocation(line: 65, column: 30, scope: !16386)
!16507 = !DILocation(line: 65, column: 23, scope: !16386)
!16508 = !DILocation(line: 65, column: 38, scope: !16386)
!16509 = !DILocation(line: 65, column: 36, scope: !16386)
!16510 = !DILocalVariable(name: "y01", scope: !16386, file: !13243, line: 67, type: !52)
!16511 = !DILocation(line: 67, column: 17, scope: !16386)
!16512 = !DILocation(line: 67, column: 32, scope: !16386)
!16513 = !DILocation(line: 67, column: 30, scope: !16386)
!16514 = !DILocation(line: 67, column: 34, scope: !16386)
!16515 = !DILocation(line: 67, column: 23, scope: !16386)
!16516 = !DILocation(line: 67, column: 41, scope: !16386)
!16517 = !DILocation(line: 67, column: 39, scope: !16386)
!16518 = !DILocalVariable(name: "u", scope: !16386, file: !13243, line: 73, type: !52)
!16519 = !DILocation(line: 73, column: 17, scope: !16386)
!16520 = !DILocation(line: 73, column: 26, scope: !16386)
!16521 = !DILocation(line: 73, column: 21, scope: !16386)
!16522 = !DILocation(line: 73, column: 29, scope: !16386)
!16523 = !DILocalVariable(name: "v", scope: !16386, file: !13243, line: 73, type: !52)
!16524 = !DILocation(line: 73, column: 42, scope: !16386)
!16525 = !DILocation(line: 73, column: 51, scope: !16386)
!16526 = !DILocation(line: 73, column: 46, scope: !16386)
!16527 = !DILocation(line: 73, column: 54, scope: !16386)
!16528 = !DILocalVariable(name: "uv_val", scope: !16386, file: !13243, line: 74, type: !52)
!16529 = !DILocation(line: 74, column: 17, scope: !16386)
!16530 = !DILocation(line: 74, column: 26, scope: !16386)
!16531 = !DILocation(line: 74, column: 32, scope: !16386)
!16532 = !DILocation(line: 74, column: 30, scope: !16386)
!16533 = !DILocation(line: 74, column: 36, scope: !16386)
!16534 = !DILocation(line: 74, column: 42, scope: !16386)
!16535 = !DILocation(line: 74, column: 40, scope: !16386)
!16536 = !DILocation(line: 74, column: 34, scope: !16386)
!16537 = !DILocation(line: 74, column: 44, scope: !16386)
!16538 = !DILocation(line: 74, column: 52, scope: !16386)
!16539 = !DILocation(line: 74, column: 50, scope: !16386)
!16540 = !DILocation(line: 76, column: 45, scope: !16386)
!16541 = !DILocation(line: 76, column: 51, scope: !16386)
!16542 = !DILocation(line: 76, column: 49, scope: !16386)
!16543 = !DILocation(line: 76, column: 57, scope: !16386)
!16544 = !DILocation(line: 76, column: 55, scope: !16386)
!16545 = !DILocation(line: 76, column: 65, scope: !16386)
!16546 = !DILocation(line: 76, column: 28, scope: !16386)
!16547 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16397)
!16548 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16397)
!16549 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16397)
!16550 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16397)
!16551 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16397)
!16552 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16397)
!16553 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16397)
!16554 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16397)
!16555 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16397)
!16556 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16397)
!16557 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16397)
!16558 = !DILocation(line: 76, column: 18, scope: !16386)
!16559 = !DILocation(line: 76, column: 20, scope: !16386)
!16560 = !DILocation(line: 76, column: 13, scope: !16386)
!16561 = !DILocation(line: 76, column: 26, scope: !16386)
!16562 = !DILocation(line: 78, column: 48, scope: !16386)
!16563 = !DILocation(line: 78, column: 54, scope: !16386)
!16564 = !DILocation(line: 78, column: 52, scope: !16386)
!16565 = !DILocation(line: 78, column: 60, scope: !16386)
!16566 = !DILocation(line: 78, column: 58, scope: !16386)
!16567 = !DILocation(line: 78, column: 68, scope: !16386)
!16568 = !DILocation(line: 78, column: 31, scope: !16386)
!16569 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16385)
!16570 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16385)
!16571 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16385)
!16572 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16385)
!16573 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16385)
!16574 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16385)
!16575 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16385)
!16576 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16385)
!16577 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16385)
!16578 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16385)
!16579 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16385)
!16580 = !DILocation(line: 78, column: 18, scope: !16386)
!16581 = !DILocation(line: 78, column: 20, scope: !16386)
!16582 = !DILocation(line: 78, column: 24, scope: !16386)
!16583 = !DILocation(line: 78, column: 13, scope: !16386)
!16584 = !DILocation(line: 78, column: 29, scope: !16386)
!16585 = !DILocation(line: 87, column: 40, scope: !16386)
!16586 = !DILocation(line: 87, column: 44, scope: !16386)
!16587 = !DILocation(line: 87, column: 42, scope: !16386)
!16588 = !DILocation(line: 87, column: 50, scope: !16386)
!16589 = !DILocation(line: 87, column: 54, scope: !16386)
!16590 = !DILocation(line: 87, column: 52, scope: !16386)
!16591 = !DILocation(line: 87, column: 48, scope: !16386)
!16592 = !DILocation(line: 87, column: 58, scope: !16386)
!16593 = !DILocation(line: 87, column: 72, scope: !16386)
!16594 = !DILocation(line: 87, column: 23, scope: !16386)
!16595 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16393)
!16596 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16393)
!16597 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16393)
!16598 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16393)
!16599 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16393)
!16600 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16393)
!16601 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16393)
!16602 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16393)
!16603 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16393)
!16604 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16393)
!16605 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16393)
!16606 = !DILocation(line: 87, column: 18, scope: !16386)
!16607 = !DILocation(line: 87, column: 13, scope: !16386)
!16608 = !DILocation(line: 87, column: 21, scope: !16386)
!16609 = !DILocation(line: 88, column: 40, scope: !16386)
!16610 = !DILocation(line: 88, column: 44, scope: !16386)
!16611 = !DILocation(line: 88, column: 42, scope: !16386)
!16612 = !DILocation(line: 88, column: 50, scope: !16386)
!16613 = !DILocation(line: 88, column: 54, scope: !16386)
!16614 = !DILocation(line: 88, column: 52, scope: !16386)
!16615 = !DILocation(line: 88, column: 48, scope: !16386)
!16616 = !DILocation(line: 88, column: 58, scope: !16386)
!16617 = !DILocation(line: 88, column: 72, scope: !16386)
!16618 = !DILocation(line: 88, column: 23, scope: !16386)
!16619 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16395)
!16620 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16395)
!16621 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16395)
!16622 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16395)
!16623 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16395)
!16624 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16395)
!16625 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16395)
!16626 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16395)
!16627 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16395)
!16628 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16395)
!16629 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16395)
!16630 = !DILocation(line: 88, column: 18, scope: !16386)
!16631 = !DILocation(line: 88, column: 13, scope: !16386)
!16632 = !DILocation(line: 88, column: 21, scope: !16386)
!16633 = !DILocation(line: 89, column: 9, scope: !16386)
!16634 = !DILocation(line: 64, column: 29, scope: !16635)
!16635 = !DILexicalBlockFile(scope: !16387, file: !13243, discriminator: 2)
!16636 = !DILocation(line: 64, column: 9, scope: !16635)
!16637 = distinct !{!16637, !16638}
!16638 = !DILocation(line: 64, column: 9, scope: !16389)
!16639 = !DILocation(line: 91, column: 18, scope: !16389)
!16640 = !DILocation(line: 91, column: 32, scope: !16389)
!16641 = !DILocation(line: 91, column: 44, scope: !16389)
!16642 = !DILocation(line: 91, column: 14, scope: !16389)
!16643 = !DILocation(line: 92, column: 17, scope: !16389)
!16644 = !DILocation(line: 92, column: 31, scope: !16389)
!16645 = !DILocation(line: 92, column: 14, scope: !16389)
!16646 = !DILocation(line: 93, column: 17, scope: !16389)
!16647 = !DILocation(line: 93, column: 31, scope: !16389)
!16648 = !DILocation(line: 93, column: 14, scope: !16389)
!16649 = !DILocation(line: 94, column: 18, scope: !16389)
!16650 = !DILocation(line: 94, column: 32, scope: !16389)
!16651 = !DILocation(line: 94, column: 44, scope: !16389)
!16652 = !DILocation(line: 94, column: 14, scope: !16389)
!16653 = !DILocation(line: 95, column: 17, scope: !16389)
!16654 = !DILocation(line: 95, column: 31, scope: !16389)
!16655 = !DILocation(line: 95, column: 14, scope: !16389)
!16656 = !DILocation(line: 96, column: 17, scope: !16389)
!16657 = !DILocation(line: 96, column: 31, scope: !16389)
!16658 = !DILocation(line: 96, column: 14, scope: !16389)
!16659 = !DILocation(line: 97, column: 5, scope: !16389)
!16660 = !DILocation(line: 63, column: 25, scope: !16661)
!16661 = !DILexicalBlockFile(scope: !16390, file: !13243, discriminator: 2)
!16662 = !DILocation(line: 63, column: 5, scope: !16661)
!16663 = distinct !{!16663, !16664}
!16664 = !DILocation(line: 63, column: 5, scope: !16383)
!16665 = !DILocation(line: 98, column: 1, scope: !16383)
!16666 = distinct !DISubprogram(name: "yuv2yuv_420p10to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!16667 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 78, column: 31, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16670, file: !13243, line: 64, column: 33)
!16670 = distinct !DILexicalBlock(scope: !16671, file: !13243, line: 64, column: 9)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !13243, line: 64, column: 9)
!16672 = distinct !DILexicalBlock(scope: !16673, file: !13243, line: 63, column: 29)
!16673 = distinct !DILexicalBlock(scope: !16674, file: !13243, line: 63, column: 5)
!16674 = distinct !DILexicalBlock(scope: !16666, file: !13243, line: 63, column: 5)
!16675 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 81, column: 31, scope: !16669)
!16677 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 83, column: 31, scope: !16669)
!16679 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 87, column: 23, scope: !16669)
!16681 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 88, column: 23, scope: !16669)
!16683 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 76, column: 28, scope: !16669)
!16685 = !DILocalVariable(name: "_dst", arg: 1, scope: !16666, file: !13243, line: 40, type: !17)
!16686 = !DILocation(line: 40, column: 42, scope: !16666)
!16687 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !16666, file: !13243, line: 40, type: !50)
!16688 = !DILocation(line: 40, column: 67, scope: !16666)
!16689 = !DILocalVariable(name: "_src", arg: 3, scope: !16666, file: !13243, line: 41, type: !17)
!16690 = !DILocation(line: 41, column: 34, scope: !16666)
!16691 = !DILocalVariable(name: "src_stride", arg: 4, scope: !16666, file: !13243, line: 41, type: !50)
!16692 = !DILocation(line: 41, column: 59, scope: !16666)
!16693 = !DILocalVariable(name: "w", arg: 5, scope: !16666, file: !13243, line: 42, type: !52)
!16694 = !DILocation(line: 42, column: 29, scope: !16666)
!16695 = !DILocalVariable(name: "h", arg: 6, scope: !16666, file: !13243, line: 42, type: !52)
!16696 = !DILocation(line: 42, column: 36, scope: !16666)
!16697 = !DILocalVariable(name: "c", arg: 7, scope: !16666, file: !13243, line: 42, type: !53)
!16698 = !DILocation(line: 42, column: 53, scope: !16666)
!16699 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !16666, file: !13243, line: 43, type: !84)
!16700 = !DILocation(line: 43, column: 39, scope: !16666)
!16701 = !DILocalVariable(name: "dst", scope: !16666, file: !13243, line: 45, type: !17)
!16702 = !DILocation(line: 45, column: 15, scope: !16666)
!16703 = !DILocation(line: 45, column: 34, scope: !16666)
!16704 = !DILocalVariable(name: "src", scope: !16666, file: !13243, line: 46, type: !22)
!16705 = !DILocation(line: 46, column: 16, scope: !16666)
!16706 = !DILocation(line: 46, column: 36, scope: !16666)
!16707 = !DILocation(line: 46, column: 22, scope: !16666)
!16708 = !DILocalVariable(name: "src0", scope: !16666, file: !13243, line: 47, type: !1418)
!16709 = !DILocation(line: 47, column: 21, scope: !16666)
!16710 = !DILocation(line: 47, column: 28, scope: !16666)
!16711 = !DILocalVariable(name: "src1", scope: !16666, file: !13243, line: 47, type: !1418)
!16712 = !DILocation(line: 47, column: 37, scope: !16666)
!16713 = !DILocation(line: 47, column: 44, scope: !16666)
!16714 = !DILocalVariable(name: "src2", scope: !16666, file: !13243, line: 47, type: !1418)
!16715 = !DILocation(line: 47, column: 53, scope: !16666)
!16716 = !DILocation(line: 47, column: 60, scope: !16666)
!16717 = !DILocalVariable(name: "dst0", scope: !16666, file: !13243, line: 48, type: !18)
!16718 = !DILocation(line: 48, column: 14, scope: !16666)
!16719 = !DILocation(line: 48, column: 21, scope: !16666)
!16720 = !DILocalVariable(name: "dst1", scope: !16666, file: !13243, line: 48, type: !18)
!16721 = !DILocation(line: 48, column: 30, scope: !16666)
!16722 = !DILocation(line: 48, column: 37, scope: !16666)
!16723 = !DILocalVariable(name: "dst2", scope: !16666, file: !13243, line: 48, type: !18)
!16724 = !DILocation(line: 48, column: 46, scope: !16666)
!16725 = !DILocation(line: 48, column: 53, scope: !16666)
!16726 = !DILocalVariable(name: "y", scope: !16666, file: !13243, line: 49, type: !52)
!16727 = !DILocation(line: 49, column: 9, scope: !16666)
!16728 = !DILocalVariable(name: "x", scope: !16666, file: !13243, line: 49, type: !52)
!16729 = !DILocation(line: 49, column: 12, scope: !16666)
!16730 = !DILocalVariable(name: "sh", scope: !16666, file: !13243, line: 50, type: !343)
!16731 = !DILocation(line: 50, column: 15, scope: !16666)
!16732 = !DILocalVariable(name: "rnd", scope: !16666, file: !13243, line: 51, type: !343)
!16733 = !DILocation(line: 51, column: 15, scope: !16666)
!16734 = !DILocalVariable(name: "y_off_in", scope: !16666, file: !13243, line: 52, type: !52)
!16735 = !DILocation(line: 52, column: 9, scope: !16666)
!16736 = !DILocation(line: 52, column: 20, scope: !16666)
!16737 = !DILocalVariable(name: "y_off_out", scope: !16666, file: !13243, line: 53, type: !52)
!16738 = !DILocation(line: 53, column: 9, scope: !16666)
!16739 = !DILocation(line: 53, column: 21, scope: !16666)
!16740 = !DILocation(line: 53, column: 38, scope: !16666)
!16741 = !DILocalVariable(name: "uv_off_in", scope: !16666, file: !13243, line: 54, type: !343)
!16742 = !DILocation(line: 54, column: 15, scope: !16666)
!16743 = !DILocalVariable(name: "uv_off_out", scope: !16666, file: !13243, line: 55, type: !343)
!16744 = !DILocation(line: 55, column: 15, scope: !16666)
!16745 = !DILocalVariable(name: "cyy", scope: !16666, file: !13243, line: 56, type: !52)
!16746 = !DILocation(line: 56, column: 9, scope: !16666)
!16747 = !DILocation(line: 56, column: 15, scope: !16666)
!16748 = !DILocalVariable(name: "cyu", scope: !16666, file: !13243, line: 56, type: !52)
!16749 = !DILocation(line: 56, column: 27, scope: !16666)
!16750 = !DILocation(line: 56, column: 33, scope: !16666)
!16751 = !DILocalVariable(name: "cyv", scope: !16666, file: !13243, line: 56, type: !52)
!16752 = !DILocation(line: 56, column: 45, scope: !16666)
!16753 = !DILocation(line: 56, column: 51, scope: !16666)
!16754 = !DILocalVariable(name: "cuu", scope: !16666, file: !13243, line: 57, type: !52)
!16755 = !DILocation(line: 57, column: 9, scope: !16666)
!16756 = !DILocation(line: 57, column: 15, scope: !16666)
!16757 = !DILocalVariable(name: "cuv", scope: !16666, file: !13243, line: 57, type: !52)
!16758 = !DILocation(line: 57, column: 27, scope: !16666)
!16759 = !DILocation(line: 57, column: 33, scope: !16666)
!16760 = !DILocalVariable(name: "cvu", scope: !16666, file: !13243, line: 57, type: !52)
!16761 = !DILocation(line: 57, column: 45, scope: !16666)
!16762 = !DILocation(line: 57, column: 51, scope: !16666)
!16763 = !DILocalVariable(name: "cvv", scope: !16666, file: !13243, line: 57, type: !52)
!16764 = !DILocation(line: 57, column: 63, scope: !16666)
!16765 = !DILocation(line: 57, column: 69, scope: !16666)
!16766 = !DILocation(line: 61, column: 58, scope: !16666)
!16767 = !DILocation(line: 61, column: 61, scope: !16666)
!16768 = !DILocation(line: 61, column: 72, scope: !16666)
!16769 = !DILocation(line: 61, column: 77, scope: !16666)
!16770 = !DILocation(line: 61, column: 7, scope: !16666)
!16771 = !DILocation(line: 62, column: 58, scope: !16666)
!16772 = !DILocation(line: 62, column: 61, scope: !16666)
!16773 = !DILocation(line: 62, column: 72, scope: !16666)
!16774 = !DILocation(line: 62, column: 77, scope: !16666)
!16775 = !DILocation(line: 62, column: 7, scope: !16666)
!16776 = !DILocation(line: 63, column: 12, scope: !16674)
!16777 = !DILocation(line: 63, column: 10, scope: !16674)
!16778 = !DILocation(line: 63, column: 17, scope: !16779)
!16779 = !DILexicalBlockFile(scope: !16673, file: !13243, discriminator: 1)
!16780 = !DILocation(line: 63, column: 21, scope: !16779)
!16781 = !DILocation(line: 63, column: 19, scope: !16779)
!16782 = !DILocation(line: 63, column: 5, scope: !16779)
!16783 = !DILocation(line: 64, column: 16, scope: !16671)
!16784 = !DILocation(line: 64, column: 14, scope: !16671)
!16785 = !DILocation(line: 64, column: 21, scope: !16786)
!16786 = !DILexicalBlockFile(scope: !16670, file: !13243, discriminator: 1)
!16787 = !DILocation(line: 64, column: 25, scope: !16786)
!16788 = !DILocation(line: 64, column: 23, scope: !16786)
!16789 = !DILocation(line: 64, column: 9, scope: !16786)
!16790 = !DILocalVariable(name: "y00", scope: !16669, file: !13243, line: 65, type: !52)
!16791 = !DILocation(line: 65, column: 17, scope: !16669)
!16792 = !DILocation(line: 65, column: 28, scope: !16669)
!16793 = !DILocation(line: 65, column: 30, scope: !16669)
!16794 = !DILocation(line: 65, column: 23, scope: !16669)
!16795 = !DILocation(line: 65, column: 38, scope: !16669)
!16796 = !DILocation(line: 65, column: 36, scope: !16669)
!16797 = !DILocalVariable(name: "y01", scope: !16669, file: !13243, line: 67, type: !52)
!16798 = !DILocation(line: 67, column: 17, scope: !16669)
!16799 = !DILocation(line: 67, column: 32, scope: !16669)
!16800 = !DILocation(line: 67, column: 30, scope: !16669)
!16801 = !DILocation(line: 67, column: 34, scope: !16669)
!16802 = !DILocation(line: 67, column: 23, scope: !16669)
!16803 = !DILocation(line: 67, column: 41, scope: !16669)
!16804 = !DILocation(line: 67, column: 39, scope: !16669)
!16805 = !DILocalVariable(name: "y10", scope: !16669, file: !13243, line: 69, type: !52)
!16806 = !DILocation(line: 69, column: 17, scope: !16669)
!16807 = !DILocation(line: 69, column: 28, scope: !16669)
!16808 = !DILocation(line: 69, column: 42, scope: !16669)
!16809 = !DILocation(line: 69, column: 67, scope: !16669)
!16810 = !DILocation(line: 69, column: 65, scope: !16669)
!16811 = !DILocation(line: 69, column: 63, scope: !16669)
!16812 = !DILocation(line: 69, column: 61, scope: !16669)
!16813 = !DILocation(line: 69, column: 23, scope: !16669)
!16814 = !DILocation(line: 69, column: 72, scope: !16669)
!16815 = !DILocation(line: 69, column: 70, scope: !16669)
!16816 = !DILocalVariable(name: "y11", scope: !16669, file: !13243, line: 70, type: !52)
!16817 = !DILocation(line: 70, column: 17, scope: !16669)
!16818 = !DILocation(line: 70, column: 28, scope: !16669)
!16819 = !DILocation(line: 70, column: 42, scope: !16669)
!16820 = !DILocation(line: 70, column: 67, scope: !16669)
!16821 = !DILocation(line: 70, column: 65, scope: !16669)
!16822 = !DILocation(line: 70, column: 63, scope: !16669)
!16823 = !DILocation(line: 70, column: 61, scope: !16669)
!16824 = !DILocation(line: 70, column: 69, scope: !16669)
!16825 = !DILocation(line: 70, column: 23, scope: !16669)
!16826 = !DILocation(line: 70, column: 76, scope: !16669)
!16827 = !DILocation(line: 70, column: 74, scope: !16669)
!16828 = !DILocalVariable(name: "u", scope: !16669, file: !13243, line: 73, type: !52)
!16829 = !DILocation(line: 73, column: 17, scope: !16669)
!16830 = !DILocation(line: 73, column: 26, scope: !16669)
!16831 = !DILocation(line: 73, column: 21, scope: !16669)
!16832 = !DILocation(line: 73, column: 29, scope: !16669)
!16833 = !DILocalVariable(name: "v", scope: !16669, file: !13243, line: 73, type: !52)
!16834 = !DILocation(line: 73, column: 42, scope: !16669)
!16835 = !DILocation(line: 73, column: 51, scope: !16669)
!16836 = !DILocation(line: 73, column: 46, scope: !16669)
!16837 = !DILocation(line: 73, column: 54, scope: !16669)
!16838 = !DILocalVariable(name: "uv_val", scope: !16669, file: !13243, line: 74, type: !52)
!16839 = !DILocation(line: 74, column: 17, scope: !16669)
!16840 = !DILocation(line: 74, column: 26, scope: !16669)
!16841 = !DILocation(line: 74, column: 32, scope: !16669)
!16842 = !DILocation(line: 74, column: 30, scope: !16669)
!16843 = !DILocation(line: 74, column: 36, scope: !16669)
!16844 = !DILocation(line: 74, column: 42, scope: !16669)
!16845 = !DILocation(line: 74, column: 40, scope: !16669)
!16846 = !DILocation(line: 74, column: 34, scope: !16669)
!16847 = !DILocation(line: 74, column: 44, scope: !16669)
!16848 = !DILocation(line: 74, column: 52, scope: !16669)
!16849 = !DILocation(line: 74, column: 50, scope: !16669)
!16850 = !DILocation(line: 76, column: 45, scope: !16669)
!16851 = !DILocation(line: 76, column: 51, scope: !16669)
!16852 = !DILocation(line: 76, column: 49, scope: !16669)
!16853 = !DILocation(line: 76, column: 57, scope: !16669)
!16854 = !DILocation(line: 76, column: 55, scope: !16669)
!16855 = !DILocation(line: 76, column: 65, scope: !16669)
!16856 = !DILocation(line: 76, column: 28, scope: !16669)
!16857 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16684)
!16858 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16684)
!16859 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16684)
!16860 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16684)
!16861 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16684)
!16862 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16684)
!16863 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16684)
!16864 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16684)
!16865 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16684)
!16866 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16684)
!16867 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16684)
!16868 = !DILocation(line: 76, column: 18, scope: !16669)
!16869 = !DILocation(line: 76, column: 20, scope: !16669)
!16870 = !DILocation(line: 76, column: 13, scope: !16669)
!16871 = !DILocation(line: 76, column: 26, scope: !16669)
!16872 = !DILocation(line: 78, column: 48, scope: !16669)
!16873 = !DILocation(line: 78, column: 54, scope: !16669)
!16874 = !DILocation(line: 78, column: 52, scope: !16669)
!16875 = !DILocation(line: 78, column: 60, scope: !16669)
!16876 = !DILocation(line: 78, column: 58, scope: !16669)
!16877 = !DILocation(line: 78, column: 68, scope: !16669)
!16878 = !DILocation(line: 78, column: 31, scope: !16669)
!16879 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16668)
!16880 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16668)
!16881 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16668)
!16882 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16668)
!16883 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16668)
!16884 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16668)
!16885 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16668)
!16886 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16668)
!16887 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16668)
!16888 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16668)
!16889 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16668)
!16890 = !DILocation(line: 78, column: 18, scope: !16669)
!16891 = !DILocation(line: 78, column: 20, scope: !16669)
!16892 = !DILocation(line: 78, column: 24, scope: !16669)
!16893 = !DILocation(line: 78, column: 13, scope: !16669)
!16894 = !DILocation(line: 78, column: 29, scope: !16669)
!16895 = !DILocation(line: 81, column: 48, scope: !16669)
!16896 = !DILocation(line: 81, column: 54, scope: !16669)
!16897 = !DILocation(line: 81, column: 52, scope: !16669)
!16898 = !DILocation(line: 81, column: 60, scope: !16669)
!16899 = !DILocation(line: 81, column: 58, scope: !16669)
!16900 = !DILocation(line: 81, column: 68, scope: !16669)
!16901 = !DILocation(line: 81, column: 31, scope: !16669)
!16902 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16676)
!16903 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16676)
!16904 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16676)
!16905 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16676)
!16906 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16676)
!16907 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16676)
!16908 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16676)
!16909 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16676)
!16910 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16676)
!16911 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16676)
!16912 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16676)
!16913 = !DILocation(line: 80, column: 18, scope: !16669)
!16914 = !DILocation(line: 80, column: 20, scope: !16669)
!16915 = !DILocation(line: 80, column: 24, scope: !16669)
!16916 = !DILocation(line: 80, column: 30, scope: !16669)
!16917 = !DILocation(line: 80, column: 44, scope: !16669)
!16918 = !DILocation(line: 80, column: 28, scope: !16669)
!16919 = !DILocation(line: 80, column: 13, scope: !16669)
!16920 = !DILocation(line: 80, column: 63, scope: !16669)
!16921 = !DILocation(line: 83, column: 48, scope: !16669)
!16922 = !DILocation(line: 83, column: 54, scope: !16669)
!16923 = !DILocation(line: 83, column: 52, scope: !16669)
!16924 = !DILocation(line: 83, column: 60, scope: !16669)
!16925 = !DILocation(line: 83, column: 58, scope: !16669)
!16926 = !DILocation(line: 83, column: 68, scope: !16669)
!16927 = !DILocation(line: 83, column: 31, scope: !16669)
!16928 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16678)
!16929 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16678)
!16930 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16678)
!16931 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16678)
!16932 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16678)
!16933 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16678)
!16934 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16678)
!16935 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16678)
!16936 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16678)
!16937 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16678)
!16938 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16678)
!16939 = !DILocation(line: 82, column: 18, scope: !16669)
!16940 = !DILocation(line: 82, column: 20, scope: !16669)
!16941 = !DILocation(line: 82, column: 24, scope: !16669)
!16942 = !DILocation(line: 82, column: 30, scope: !16669)
!16943 = !DILocation(line: 82, column: 44, scope: !16669)
!16944 = !DILocation(line: 82, column: 28, scope: !16669)
!16945 = !DILocation(line: 82, column: 13, scope: !16669)
!16946 = !DILocation(line: 82, column: 63, scope: !16669)
!16947 = !DILocation(line: 87, column: 40, scope: !16669)
!16948 = !DILocation(line: 87, column: 44, scope: !16669)
!16949 = !DILocation(line: 87, column: 42, scope: !16669)
!16950 = !DILocation(line: 87, column: 50, scope: !16669)
!16951 = !DILocation(line: 87, column: 54, scope: !16669)
!16952 = !DILocation(line: 87, column: 52, scope: !16669)
!16953 = !DILocation(line: 87, column: 48, scope: !16669)
!16954 = !DILocation(line: 87, column: 58, scope: !16669)
!16955 = !DILocation(line: 87, column: 72, scope: !16669)
!16956 = !DILocation(line: 87, column: 23, scope: !16669)
!16957 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16680)
!16958 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16680)
!16959 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16680)
!16960 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16680)
!16961 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16680)
!16962 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16680)
!16963 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16680)
!16964 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16680)
!16965 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16680)
!16966 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16680)
!16967 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16680)
!16968 = !DILocation(line: 87, column: 18, scope: !16669)
!16969 = !DILocation(line: 87, column: 13, scope: !16669)
!16970 = !DILocation(line: 87, column: 21, scope: !16669)
!16971 = !DILocation(line: 88, column: 40, scope: !16669)
!16972 = !DILocation(line: 88, column: 44, scope: !16669)
!16973 = !DILocation(line: 88, column: 42, scope: !16669)
!16974 = !DILocation(line: 88, column: 50, scope: !16669)
!16975 = !DILocation(line: 88, column: 54, scope: !16669)
!16976 = !DILocation(line: 88, column: 52, scope: !16669)
!16977 = !DILocation(line: 88, column: 48, scope: !16669)
!16978 = !DILocation(line: 88, column: 58, scope: !16669)
!16979 = !DILocation(line: 88, column: 72, scope: !16669)
!16980 = !DILocation(line: 88, column: 23, scope: !16669)
!16981 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !16682)
!16982 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !16682)
!16983 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !16682)
!16984 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !16682)
!16985 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !16682)
!16986 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !16682)
!16987 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !16682)
!16988 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !16682)
!16989 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !16682)
!16990 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !16682)
!16991 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !16682)
!16992 = !DILocation(line: 88, column: 18, scope: !16669)
!16993 = !DILocation(line: 88, column: 13, scope: !16669)
!16994 = !DILocation(line: 88, column: 21, scope: !16669)
!16995 = !DILocation(line: 89, column: 9, scope: !16669)
!16996 = !DILocation(line: 64, column: 29, scope: !16997)
!16997 = !DILexicalBlockFile(scope: !16670, file: !13243, discriminator: 2)
!16998 = !DILocation(line: 64, column: 9, scope: !16997)
!16999 = distinct !{!16999, !17000}
!17000 = !DILocation(line: 64, column: 9, scope: !16672)
!17001 = !DILocation(line: 91, column: 18, scope: !16672)
!17002 = !DILocation(line: 91, column: 32, scope: !16672)
!17003 = !DILocation(line: 91, column: 44, scope: !16672)
!17004 = !DILocation(line: 91, column: 14, scope: !16672)
!17005 = !DILocation(line: 92, column: 17, scope: !16672)
!17006 = !DILocation(line: 92, column: 31, scope: !16672)
!17007 = !DILocation(line: 92, column: 14, scope: !16672)
!17008 = !DILocation(line: 93, column: 17, scope: !16672)
!17009 = !DILocation(line: 93, column: 31, scope: !16672)
!17010 = !DILocation(line: 93, column: 14, scope: !16672)
!17011 = !DILocation(line: 94, column: 18, scope: !16672)
!17012 = !DILocation(line: 94, column: 32, scope: !16672)
!17013 = !DILocation(line: 94, column: 44, scope: !16672)
!17014 = !DILocation(line: 94, column: 14, scope: !16672)
!17015 = !DILocation(line: 95, column: 17, scope: !16672)
!17016 = !DILocation(line: 95, column: 31, scope: !16672)
!17017 = !DILocation(line: 95, column: 14, scope: !16672)
!17018 = !DILocation(line: 96, column: 17, scope: !16672)
!17019 = !DILocation(line: 96, column: 31, scope: !16672)
!17020 = !DILocation(line: 96, column: 14, scope: !16672)
!17021 = !DILocation(line: 97, column: 5, scope: !16672)
!17022 = !DILocation(line: 63, column: 25, scope: !17023)
!17023 = !DILexicalBlockFile(scope: !16673, file: !13243, discriminator: 2)
!17024 = !DILocation(line: 63, column: 5, scope: !17023)
!17025 = distinct !{!17025, !17026}
!17026 = !DILocation(line: 63, column: 5, scope: !16666)
!17027 = !DILocation(line: 98, column: 1, scope: !16666)
!17028 = distinct !DISubprogram(name: "yuv2yuv_444p10to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!17029 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17030)
!17030 = distinct !DILocation(line: 87, column: 23, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17032, file: !13243, line: 64, column: 33)
!17032 = distinct !DILexicalBlock(scope: !17033, file: !13243, line: 64, column: 9)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !13243, line: 64, column: 9)
!17034 = distinct !DILexicalBlock(scope: !17035, file: !13243, line: 63, column: 29)
!17035 = distinct !DILexicalBlock(scope: !17036, file: !13243, line: 63, column: 5)
!17036 = distinct !DILexicalBlock(scope: !17028, file: !13243, line: 63, column: 5)
!17037 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17030)
!17038 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 88, column: 23, scope: !17031)
!17040 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17039)
!17041 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 76, column: 28, scope: !17031)
!17043 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17042)
!17044 = !DILocalVariable(name: "_dst", arg: 1, scope: !17028, file: !13243, line: 40, type: !17)
!17045 = !DILocation(line: 40, column: 43, scope: !17028)
!17046 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !17028, file: !13243, line: 40, type: !50)
!17047 = !DILocation(line: 40, column: 68, scope: !17028)
!17048 = !DILocalVariable(name: "_src", arg: 3, scope: !17028, file: !13243, line: 41, type: !17)
!17049 = !DILocation(line: 41, column: 34, scope: !17028)
!17050 = !DILocalVariable(name: "src_stride", arg: 4, scope: !17028, file: !13243, line: 41, type: !50)
!17051 = !DILocation(line: 41, column: 59, scope: !17028)
!17052 = !DILocalVariable(name: "w", arg: 5, scope: !17028, file: !13243, line: 42, type: !52)
!17053 = !DILocation(line: 42, column: 29, scope: !17028)
!17054 = !DILocalVariable(name: "h", arg: 6, scope: !17028, file: !13243, line: 42, type: !52)
!17055 = !DILocation(line: 42, column: 36, scope: !17028)
!17056 = !DILocalVariable(name: "c", arg: 7, scope: !17028, file: !13243, line: 42, type: !53)
!17057 = !DILocation(line: 42, column: 53, scope: !17028)
!17058 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !17028, file: !13243, line: 43, type: !84)
!17059 = !DILocation(line: 43, column: 39, scope: !17028)
!17060 = !DILocalVariable(name: "dst", scope: !17028, file: !13243, line: 45, type: !22)
!17061 = !DILocation(line: 45, column: 16, scope: !17028)
!17062 = !DILocation(line: 45, column: 36, scope: !17028)
!17063 = !DILocation(line: 45, column: 22, scope: !17028)
!17064 = !DILocalVariable(name: "src", scope: !17028, file: !13243, line: 46, type: !22)
!17065 = !DILocation(line: 46, column: 16, scope: !17028)
!17066 = !DILocation(line: 46, column: 36, scope: !17028)
!17067 = !DILocation(line: 46, column: 22, scope: !17028)
!17068 = !DILocalVariable(name: "src0", scope: !17028, file: !13243, line: 47, type: !1418)
!17069 = !DILocation(line: 47, column: 21, scope: !17028)
!17070 = !DILocation(line: 47, column: 28, scope: !17028)
!17071 = !DILocalVariable(name: "src1", scope: !17028, file: !13243, line: 47, type: !1418)
!17072 = !DILocation(line: 47, column: 37, scope: !17028)
!17073 = !DILocation(line: 47, column: 44, scope: !17028)
!17074 = !DILocalVariable(name: "src2", scope: !17028, file: !13243, line: 47, type: !1418)
!17075 = !DILocation(line: 47, column: 53, scope: !17028)
!17076 = !DILocation(line: 47, column: 60, scope: !17028)
!17077 = !DILocalVariable(name: "dst0", scope: !17028, file: !13243, line: 48, type: !23)
!17078 = !DILocation(line: 48, column: 15, scope: !17028)
!17079 = !DILocation(line: 48, column: 22, scope: !17028)
!17080 = !DILocalVariable(name: "dst1", scope: !17028, file: !13243, line: 48, type: !23)
!17081 = !DILocation(line: 48, column: 31, scope: !17028)
!17082 = !DILocation(line: 48, column: 38, scope: !17028)
!17083 = !DILocalVariable(name: "dst2", scope: !17028, file: !13243, line: 48, type: !23)
!17084 = !DILocation(line: 48, column: 47, scope: !17028)
!17085 = !DILocation(line: 48, column: 54, scope: !17028)
!17086 = !DILocalVariable(name: "y", scope: !17028, file: !13243, line: 49, type: !52)
!17087 = !DILocation(line: 49, column: 9, scope: !17028)
!17088 = !DILocalVariable(name: "x", scope: !17028, file: !13243, line: 49, type: !52)
!17089 = !DILocation(line: 49, column: 12, scope: !17028)
!17090 = !DILocalVariable(name: "sh", scope: !17028, file: !13243, line: 50, type: !343)
!17091 = !DILocation(line: 50, column: 15, scope: !17028)
!17092 = !DILocalVariable(name: "rnd", scope: !17028, file: !13243, line: 51, type: !343)
!17093 = !DILocation(line: 51, column: 15, scope: !17028)
!17094 = !DILocalVariable(name: "y_off_in", scope: !17028, file: !13243, line: 52, type: !52)
!17095 = !DILocation(line: 52, column: 9, scope: !17028)
!17096 = !DILocation(line: 52, column: 20, scope: !17028)
!17097 = !DILocalVariable(name: "y_off_out", scope: !17028, file: !13243, line: 53, type: !52)
!17098 = !DILocation(line: 53, column: 9, scope: !17028)
!17099 = !DILocation(line: 53, column: 21, scope: !17028)
!17100 = !DILocation(line: 53, column: 38, scope: !17028)
!17101 = !DILocalVariable(name: "uv_off_in", scope: !17028, file: !13243, line: 54, type: !343)
!17102 = !DILocation(line: 54, column: 15, scope: !17028)
!17103 = !DILocalVariable(name: "uv_off_out", scope: !17028, file: !13243, line: 55, type: !343)
!17104 = !DILocation(line: 55, column: 15, scope: !17028)
!17105 = !DILocalVariable(name: "cyy", scope: !17028, file: !13243, line: 56, type: !52)
!17106 = !DILocation(line: 56, column: 9, scope: !17028)
!17107 = !DILocation(line: 56, column: 15, scope: !17028)
!17108 = !DILocalVariable(name: "cyu", scope: !17028, file: !13243, line: 56, type: !52)
!17109 = !DILocation(line: 56, column: 27, scope: !17028)
!17110 = !DILocation(line: 56, column: 33, scope: !17028)
!17111 = !DILocalVariable(name: "cyv", scope: !17028, file: !13243, line: 56, type: !52)
!17112 = !DILocation(line: 56, column: 45, scope: !17028)
!17113 = !DILocation(line: 56, column: 51, scope: !17028)
!17114 = !DILocalVariable(name: "cuu", scope: !17028, file: !13243, line: 57, type: !52)
!17115 = !DILocation(line: 57, column: 9, scope: !17028)
!17116 = !DILocation(line: 57, column: 15, scope: !17028)
!17117 = !DILocalVariable(name: "cuv", scope: !17028, file: !13243, line: 57, type: !52)
!17118 = !DILocation(line: 57, column: 27, scope: !17028)
!17119 = !DILocation(line: 57, column: 33, scope: !17028)
!17120 = !DILocalVariable(name: "cvu", scope: !17028, file: !13243, line: 57, type: !52)
!17121 = !DILocation(line: 57, column: 45, scope: !17028)
!17122 = !DILocation(line: 57, column: 51, scope: !17028)
!17123 = !DILocalVariable(name: "cvv", scope: !17028, file: !13243, line: 57, type: !52)
!17124 = !DILocation(line: 57, column: 63, scope: !17028)
!17125 = !DILocation(line: 57, column: 69, scope: !17028)
!17126 = !DILocation(line: 61, column: 58, scope: !17028)
!17127 = !DILocation(line: 61, column: 61, scope: !17028)
!17128 = !DILocation(line: 61, column: 72, scope: !17028)
!17129 = !DILocation(line: 61, column: 77, scope: !17028)
!17130 = !DILocation(line: 61, column: 7, scope: !17028)
!17131 = !DILocation(line: 62, column: 58, scope: !17028)
!17132 = !DILocation(line: 62, column: 61, scope: !17028)
!17133 = !DILocation(line: 62, column: 72, scope: !17028)
!17134 = !DILocation(line: 62, column: 77, scope: !17028)
!17135 = !DILocation(line: 62, column: 7, scope: !17028)
!17136 = !DILocation(line: 63, column: 12, scope: !17036)
!17137 = !DILocation(line: 63, column: 10, scope: !17036)
!17138 = !DILocation(line: 63, column: 17, scope: !17139)
!17139 = !DILexicalBlockFile(scope: !17035, file: !13243, discriminator: 1)
!17140 = !DILocation(line: 63, column: 21, scope: !17139)
!17141 = !DILocation(line: 63, column: 19, scope: !17139)
!17142 = !DILocation(line: 63, column: 5, scope: !17139)
!17143 = !DILocation(line: 64, column: 16, scope: !17033)
!17144 = !DILocation(line: 64, column: 14, scope: !17033)
!17145 = !DILocation(line: 64, column: 21, scope: !17146)
!17146 = !DILexicalBlockFile(scope: !17032, file: !13243, discriminator: 1)
!17147 = !DILocation(line: 64, column: 25, scope: !17146)
!17148 = !DILocation(line: 64, column: 23, scope: !17146)
!17149 = !DILocation(line: 64, column: 9, scope: !17146)
!17150 = !DILocalVariable(name: "y00", scope: !17031, file: !13243, line: 65, type: !52)
!17151 = !DILocation(line: 65, column: 17, scope: !17031)
!17152 = !DILocation(line: 65, column: 28, scope: !17031)
!17153 = !DILocation(line: 65, column: 30, scope: !17031)
!17154 = !DILocation(line: 65, column: 23, scope: !17031)
!17155 = !DILocation(line: 65, column: 38, scope: !17031)
!17156 = !DILocation(line: 65, column: 36, scope: !17031)
!17157 = !DILocalVariable(name: "u", scope: !17031, file: !13243, line: 73, type: !52)
!17158 = !DILocation(line: 73, column: 17, scope: !17031)
!17159 = !DILocation(line: 73, column: 26, scope: !17031)
!17160 = !DILocation(line: 73, column: 21, scope: !17031)
!17161 = !DILocation(line: 73, column: 29, scope: !17031)
!17162 = !DILocalVariable(name: "v", scope: !17031, file: !13243, line: 73, type: !52)
!17163 = !DILocation(line: 73, column: 42, scope: !17031)
!17164 = !DILocation(line: 73, column: 51, scope: !17031)
!17165 = !DILocation(line: 73, column: 46, scope: !17031)
!17166 = !DILocation(line: 73, column: 54, scope: !17031)
!17167 = !DILocalVariable(name: "uv_val", scope: !17031, file: !13243, line: 74, type: !52)
!17168 = !DILocation(line: 74, column: 17, scope: !17031)
!17169 = !DILocation(line: 74, column: 26, scope: !17031)
!17170 = !DILocation(line: 74, column: 32, scope: !17031)
!17171 = !DILocation(line: 74, column: 30, scope: !17031)
!17172 = !DILocation(line: 74, column: 36, scope: !17031)
!17173 = !DILocation(line: 74, column: 42, scope: !17031)
!17174 = !DILocation(line: 74, column: 40, scope: !17031)
!17175 = !DILocation(line: 74, column: 34, scope: !17031)
!17176 = !DILocation(line: 74, column: 44, scope: !17031)
!17177 = !DILocation(line: 74, column: 52, scope: !17031)
!17178 = !DILocation(line: 74, column: 50, scope: !17031)
!17179 = !DILocation(line: 76, column: 46, scope: !17031)
!17180 = !DILocation(line: 76, column: 52, scope: !17031)
!17181 = !DILocation(line: 76, column: 50, scope: !17031)
!17182 = !DILocation(line: 76, column: 58, scope: !17031)
!17183 = !DILocation(line: 76, column: 56, scope: !17031)
!17184 = !DILocation(line: 76, column: 66, scope: !17031)
!17185 = !DILocation(line: 76, column: 28, scope: !17031)
!17186 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17042)
!17187 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17042)
!17188 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17042)
!17189 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17042)
!17190 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17042)
!17191 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17042)
!17192 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17042)
!17193 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17042)
!17194 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17042)
!17195 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17042)
!17196 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17042)
!17197 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17042)
!17198 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17042)
!17199 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17042)
!17200 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17042)
!17201 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17042)
!17202 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17042)
!17203 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17042)
!17204 = !DILocation(line: 76, column: 18, scope: !17031)
!17205 = !DILocation(line: 76, column: 20, scope: !17031)
!17206 = !DILocation(line: 76, column: 13, scope: !17031)
!17207 = !DILocation(line: 76, column: 26, scope: !17031)
!17208 = !DILocation(line: 87, column: 41, scope: !17031)
!17209 = !DILocation(line: 87, column: 45, scope: !17031)
!17210 = !DILocation(line: 87, column: 43, scope: !17031)
!17211 = !DILocation(line: 87, column: 51, scope: !17031)
!17212 = !DILocation(line: 87, column: 55, scope: !17031)
!17213 = !DILocation(line: 87, column: 53, scope: !17031)
!17214 = !DILocation(line: 87, column: 49, scope: !17031)
!17215 = !DILocation(line: 87, column: 59, scope: !17031)
!17216 = !DILocation(line: 87, column: 73, scope: !17031)
!17217 = !DILocation(line: 87, column: 23, scope: !17031)
!17218 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17030)
!17219 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17030)
!17220 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17030)
!17221 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17030)
!17222 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17030)
!17223 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17030)
!17224 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17030)
!17225 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17030)
!17226 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17030)
!17227 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17030)
!17228 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17030)
!17229 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17030)
!17230 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17030)
!17231 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17030)
!17232 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17030)
!17233 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17030)
!17234 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17030)
!17235 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17030)
!17236 = !DILocation(line: 87, column: 18, scope: !17031)
!17237 = !DILocation(line: 87, column: 13, scope: !17031)
!17238 = !DILocation(line: 87, column: 21, scope: !17031)
!17239 = !DILocation(line: 88, column: 41, scope: !17031)
!17240 = !DILocation(line: 88, column: 45, scope: !17031)
!17241 = !DILocation(line: 88, column: 43, scope: !17031)
!17242 = !DILocation(line: 88, column: 51, scope: !17031)
!17243 = !DILocation(line: 88, column: 55, scope: !17031)
!17244 = !DILocation(line: 88, column: 53, scope: !17031)
!17245 = !DILocation(line: 88, column: 49, scope: !17031)
!17246 = !DILocation(line: 88, column: 59, scope: !17031)
!17247 = !DILocation(line: 88, column: 73, scope: !17031)
!17248 = !DILocation(line: 88, column: 23, scope: !17031)
!17249 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17039)
!17250 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17039)
!17251 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17039)
!17252 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17039)
!17253 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17039)
!17254 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17039)
!17255 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17039)
!17256 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17039)
!17257 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17039)
!17258 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17039)
!17259 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17039)
!17260 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17039)
!17261 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17039)
!17262 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17039)
!17263 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17039)
!17264 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17039)
!17265 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17039)
!17266 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17039)
!17267 = !DILocation(line: 88, column: 18, scope: !17031)
!17268 = !DILocation(line: 88, column: 13, scope: !17031)
!17269 = !DILocation(line: 88, column: 21, scope: !17031)
!17270 = !DILocation(line: 89, column: 9, scope: !17031)
!17271 = !DILocation(line: 64, column: 29, scope: !17272)
!17272 = !DILexicalBlockFile(scope: !17032, file: !13243, discriminator: 2)
!17273 = !DILocation(line: 64, column: 9, scope: !17272)
!17274 = distinct !{!17274, !17275}
!17275 = !DILocation(line: 64, column: 9, scope: !17034)
!17276 = !DILocation(line: 91, column: 18, scope: !17034)
!17277 = !DILocation(line: 91, column: 32, scope: !17034)
!17278 = !DILocation(line: 91, column: 44, scope: !17034)
!17279 = !DILocation(line: 91, column: 14, scope: !17034)
!17280 = !DILocation(line: 92, column: 17, scope: !17034)
!17281 = !DILocation(line: 92, column: 31, scope: !17034)
!17282 = !DILocation(line: 92, column: 14, scope: !17034)
!17283 = !DILocation(line: 93, column: 17, scope: !17034)
!17284 = !DILocation(line: 93, column: 31, scope: !17034)
!17285 = !DILocation(line: 93, column: 14, scope: !17034)
!17286 = !DILocation(line: 94, column: 18, scope: !17034)
!17287 = !DILocation(line: 94, column: 32, scope: !17034)
!17288 = !DILocation(line: 94, column: 44, scope: !17034)
!17289 = !DILocation(line: 94, column: 14, scope: !17034)
!17290 = !DILocation(line: 95, column: 17, scope: !17034)
!17291 = !DILocation(line: 95, column: 31, scope: !17034)
!17292 = !DILocation(line: 95, column: 14, scope: !17034)
!17293 = !DILocation(line: 96, column: 17, scope: !17034)
!17294 = !DILocation(line: 96, column: 31, scope: !17034)
!17295 = !DILocation(line: 96, column: 14, scope: !17034)
!17296 = !DILocation(line: 97, column: 5, scope: !17034)
!17297 = !DILocation(line: 63, column: 25, scope: !17298)
!17298 = !DILexicalBlockFile(scope: !17035, file: !13243, discriminator: 2)
!17299 = !DILocation(line: 63, column: 5, scope: !17298)
!17300 = distinct !{!17300, !17301}
!17301 = !DILocation(line: 63, column: 5, scope: !17028)
!17302 = !DILocation(line: 98, column: 1, scope: !17028)
!17303 = distinct !DISubprogram(name: "yuv2yuv_422p10to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!17304 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17305)
!17305 = distinct !DILocation(line: 78, column: 31, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17307, file: !13243, line: 64, column: 33)
!17307 = distinct !DILexicalBlock(scope: !17308, file: !13243, line: 64, column: 9)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !13243, line: 64, column: 9)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !13243, line: 63, column: 29)
!17310 = distinct !DILexicalBlock(scope: !17311, file: !13243, line: 63, column: 5)
!17311 = distinct !DILexicalBlock(scope: !17303, file: !13243, line: 63, column: 5)
!17312 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17305)
!17313 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 87, column: 23, scope: !17306)
!17315 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17314)
!17316 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 88, column: 23, scope: !17306)
!17318 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17317)
!17319 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 76, column: 28, scope: !17306)
!17321 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17320)
!17322 = !DILocalVariable(name: "_dst", arg: 1, scope: !17303, file: !13243, line: 40, type: !17)
!17323 = !DILocation(line: 40, column: 43, scope: !17303)
!17324 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !17303, file: !13243, line: 40, type: !50)
!17325 = !DILocation(line: 40, column: 68, scope: !17303)
!17326 = !DILocalVariable(name: "_src", arg: 3, scope: !17303, file: !13243, line: 41, type: !17)
!17327 = !DILocation(line: 41, column: 34, scope: !17303)
!17328 = !DILocalVariable(name: "src_stride", arg: 4, scope: !17303, file: !13243, line: 41, type: !50)
!17329 = !DILocation(line: 41, column: 59, scope: !17303)
!17330 = !DILocalVariable(name: "w", arg: 5, scope: !17303, file: !13243, line: 42, type: !52)
!17331 = !DILocation(line: 42, column: 29, scope: !17303)
!17332 = !DILocalVariable(name: "h", arg: 6, scope: !17303, file: !13243, line: 42, type: !52)
!17333 = !DILocation(line: 42, column: 36, scope: !17303)
!17334 = !DILocalVariable(name: "c", arg: 7, scope: !17303, file: !13243, line: 42, type: !53)
!17335 = !DILocation(line: 42, column: 53, scope: !17303)
!17336 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !17303, file: !13243, line: 43, type: !84)
!17337 = !DILocation(line: 43, column: 39, scope: !17303)
!17338 = !DILocalVariable(name: "dst", scope: !17303, file: !13243, line: 45, type: !22)
!17339 = !DILocation(line: 45, column: 16, scope: !17303)
!17340 = !DILocation(line: 45, column: 36, scope: !17303)
!17341 = !DILocation(line: 45, column: 22, scope: !17303)
!17342 = !DILocalVariable(name: "src", scope: !17303, file: !13243, line: 46, type: !22)
!17343 = !DILocation(line: 46, column: 16, scope: !17303)
!17344 = !DILocation(line: 46, column: 36, scope: !17303)
!17345 = !DILocation(line: 46, column: 22, scope: !17303)
!17346 = !DILocalVariable(name: "src0", scope: !17303, file: !13243, line: 47, type: !1418)
!17347 = !DILocation(line: 47, column: 21, scope: !17303)
!17348 = !DILocation(line: 47, column: 28, scope: !17303)
!17349 = !DILocalVariable(name: "src1", scope: !17303, file: !13243, line: 47, type: !1418)
!17350 = !DILocation(line: 47, column: 37, scope: !17303)
!17351 = !DILocation(line: 47, column: 44, scope: !17303)
!17352 = !DILocalVariable(name: "src2", scope: !17303, file: !13243, line: 47, type: !1418)
!17353 = !DILocation(line: 47, column: 53, scope: !17303)
!17354 = !DILocation(line: 47, column: 60, scope: !17303)
!17355 = !DILocalVariable(name: "dst0", scope: !17303, file: !13243, line: 48, type: !23)
!17356 = !DILocation(line: 48, column: 15, scope: !17303)
!17357 = !DILocation(line: 48, column: 22, scope: !17303)
!17358 = !DILocalVariable(name: "dst1", scope: !17303, file: !13243, line: 48, type: !23)
!17359 = !DILocation(line: 48, column: 31, scope: !17303)
!17360 = !DILocation(line: 48, column: 38, scope: !17303)
!17361 = !DILocalVariable(name: "dst2", scope: !17303, file: !13243, line: 48, type: !23)
!17362 = !DILocation(line: 48, column: 47, scope: !17303)
!17363 = !DILocation(line: 48, column: 54, scope: !17303)
!17364 = !DILocalVariable(name: "y", scope: !17303, file: !13243, line: 49, type: !52)
!17365 = !DILocation(line: 49, column: 9, scope: !17303)
!17366 = !DILocalVariable(name: "x", scope: !17303, file: !13243, line: 49, type: !52)
!17367 = !DILocation(line: 49, column: 12, scope: !17303)
!17368 = !DILocalVariable(name: "sh", scope: !17303, file: !13243, line: 50, type: !343)
!17369 = !DILocation(line: 50, column: 15, scope: !17303)
!17370 = !DILocalVariable(name: "rnd", scope: !17303, file: !13243, line: 51, type: !343)
!17371 = !DILocation(line: 51, column: 15, scope: !17303)
!17372 = !DILocalVariable(name: "y_off_in", scope: !17303, file: !13243, line: 52, type: !52)
!17373 = !DILocation(line: 52, column: 9, scope: !17303)
!17374 = !DILocation(line: 52, column: 20, scope: !17303)
!17375 = !DILocalVariable(name: "y_off_out", scope: !17303, file: !13243, line: 53, type: !52)
!17376 = !DILocation(line: 53, column: 9, scope: !17303)
!17377 = !DILocation(line: 53, column: 21, scope: !17303)
!17378 = !DILocation(line: 53, column: 38, scope: !17303)
!17379 = !DILocalVariable(name: "uv_off_in", scope: !17303, file: !13243, line: 54, type: !343)
!17380 = !DILocation(line: 54, column: 15, scope: !17303)
!17381 = !DILocalVariable(name: "uv_off_out", scope: !17303, file: !13243, line: 55, type: !343)
!17382 = !DILocation(line: 55, column: 15, scope: !17303)
!17383 = !DILocalVariable(name: "cyy", scope: !17303, file: !13243, line: 56, type: !52)
!17384 = !DILocation(line: 56, column: 9, scope: !17303)
!17385 = !DILocation(line: 56, column: 15, scope: !17303)
!17386 = !DILocalVariable(name: "cyu", scope: !17303, file: !13243, line: 56, type: !52)
!17387 = !DILocation(line: 56, column: 27, scope: !17303)
!17388 = !DILocation(line: 56, column: 33, scope: !17303)
!17389 = !DILocalVariable(name: "cyv", scope: !17303, file: !13243, line: 56, type: !52)
!17390 = !DILocation(line: 56, column: 45, scope: !17303)
!17391 = !DILocation(line: 56, column: 51, scope: !17303)
!17392 = !DILocalVariable(name: "cuu", scope: !17303, file: !13243, line: 57, type: !52)
!17393 = !DILocation(line: 57, column: 9, scope: !17303)
!17394 = !DILocation(line: 57, column: 15, scope: !17303)
!17395 = !DILocalVariable(name: "cuv", scope: !17303, file: !13243, line: 57, type: !52)
!17396 = !DILocation(line: 57, column: 27, scope: !17303)
!17397 = !DILocation(line: 57, column: 33, scope: !17303)
!17398 = !DILocalVariable(name: "cvu", scope: !17303, file: !13243, line: 57, type: !52)
!17399 = !DILocation(line: 57, column: 45, scope: !17303)
!17400 = !DILocation(line: 57, column: 51, scope: !17303)
!17401 = !DILocalVariable(name: "cvv", scope: !17303, file: !13243, line: 57, type: !52)
!17402 = !DILocation(line: 57, column: 63, scope: !17303)
!17403 = !DILocation(line: 57, column: 69, scope: !17303)
!17404 = !DILocation(line: 61, column: 58, scope: !17303)
!17405 = !DILocation(line: 61, column: 61, scope: !17303)
!17406 = !DILocation(line: 61, column: 72, scope: !17303)
!17407 = !DILocation(line: 61, column: 77, scope: !17303)
!17408 = !DILocation(line: 61, column: 7, scope: !17303)
!17409 = !DILocation(line: 62, column: 58, scope: !17303)
!17410 = !DILocation(line: 62, column: 61, scope: !17303)
!17411 = !DILocation(line: 62, column: 72, scope: !17303)
!17412 = !DILocation(line: 62, column: 77, scope: !17303)
!17413 = !DILocation(line: 62, column: 7, scope: !17303)
!17414 = !DILocation(line: 63, column: 12, scope: !17311)
!17415 = !DILocation(line: 63, column: 10, scope: !17311)
!17416 = !DILocation(line: 63, column: 17, scope: !17417)
!17417 = !DILexicalBlockFile(scope: !17310, file: !13243, discriminator: 1)
!17418 = !DILocation(line: 63, column: 21, scope: !17417)
!17419 = !DILocation(line: 63, column: 19, scope: !17417)
!17420 = !DILocation(line: 63, column: 5, scope: !17417)
!17421 = !DILocation(line: 64, column: 16, scope: !17308)
!17422 = !DILocation(line: 64, column: 14, scope: !17308)
!17423 = !DILocation(line: 64, column: 21, scope: !17424)
!17424 = !DILexicalBlockFile(scope: !17307, file: !13243, discriminator: 1)
!17425 = !DILocation(line: 64, column: 25, scope: !17424)
!17426 = !DILocation(line: 64, column: 23, scope: !17424)
!17427 = !DILocation(line: 64, column: 9, scope: !17424)
!17428 = !DILocalVariable(name: "y00", scope: !17306, file: !13243, line: 65, type: !52)
!17429 = !DILocation(line: 65, column: 17, scope: !17306)
!17430 = !DILocation(line: 65, column: 28, scope: !17306)
!17431 = !DILocation(line: 65, column: 30, scope: !17306)
!17432 = !DILocation(line: 65, column: 23, scope: !17306)
!17433 = !DILocation(line: 65, column: 38, scope: !17306)
!17434 = !DILocation(line: 65, column: 36, scope: !17306)
!17435 = !DILocalVariable(name: "y01", scope: !17306, file: !13243, line: 67, type: !52)
!17436 = !DILocation(line: 67, column: 17, scope: !17306)
!17437 = !DILocation(line: 67, column: 32, scope: !17306)
!17438 = !DILocation(line: 67, column: 30, scope: !17306)
!17439 = !DILocation(line: 67, column: 34, scope: !17306)
!17440 = !DILocation(line: 67, column: 23, scope: !17306)
!17441 = !DILocation(line: 67, column: 41, scope: !17306)
!17442 = !DILocation(line: 67, column: 39, scope: !17306)
!17443 = !DILocalVariable(name: "u", scope: !17306, file: !13243, line: 73, type: !52)
!17444 = !DILocation(line: 73, column: 17, scope: !17306)
!17445 = !DILocation(line: 73, column: 26, scope: !17306)
!17446 = !DILocation(line: 73, column: 21, scope: !17306)
!17447 = !DILocation(line: 73, column: 29, scope: !17306)
!17448 = !DILocalVariable(name: "v", scope: !17306, file: !13243, line: 73, type: !52)
!17449 = !DILocation(line: 73, column: 42, scope: !17306)
!17450 = !DILocation(line: 73, column: 51, scope: !17306)
!17451 = !DILocation(line: 73, column: 46, scope: !17306)
!17452 = !DILocation(line: 73, column: 54, scope: !17306)
!17453 = !DILocalVariable(name: "uv_val", scope: !17306, file: !13243, line: 74, type: !52)
!17454 = !DILocation(line: 74, column: 17, scope: !17306)
!17455 = !DILocation(line: 74, column: 26, scope: !17306)
!17456 = !DILocation(line: 74, column: 32, scope: !17306)
!17457 = !DILocation(line: 74, column: 30, scope: !17306)
!17458 = !DILocation(line: 74, column: 36, scope: !17306)
!17459 = !DILocation(line: 74, column: 42, scope: !17306)
!17460 = !DILocation(line: 74, column: 40, scope: !17306)
!17461 = !DILocation(line: 74, column: 34, scope: !17306)
!17462 = !DILocation(line: 74, column: 44, scope: !17306)
!17463 = !DILocation(line: 74, column: 52, scope: !17306)
!17464 = !DILocation(line: 74, column: 50, scope: !17306)
!17465 = !DILocation(line: 76, column: 46, scope: !17306)
!17466 = !DILocation(line: 76, column: 52, scope: !17306)
!17467 = !DILocation(line: 76, column: 50, scope: !17306)
!17468 = !DILocation(line: 76, column: 58, scope: !17306)
!17469 = !DILocation(line: 76, column: 56, scope: !17306)
!17470 = !DILocation(line: 76, column: 66, scope: !17306)
!17471 = !DILocation(line: 76, column: 28, scope: !17306)
!17472 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17320)
!17473 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17320)
!17474 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17320)
!17475 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17320)
!17476 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17320)
!17477 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17320)
!17478 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17320)
!17479 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17320)
!17480 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17320)
!17481 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17320)
!17482 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17320)
!17483 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17320)
!17484 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17320)
!17485 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17320)
!17486 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17320)
!17487 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17320)
!17488 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17320)
!17489 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17320)
!17490 = !DILocation(line: 76, column: 18, scope: !17306)
!17491 = !DILocation(line: 76, column: 20, scope: !17306)
!17492 = !DILocation(line: 76, column: 13, scope: !17306)
!17493 = !DILocation(line: 76, column: 26, scope: !17306)
!17494 = !DILocation(line: 78, column: 49, scope: !17306)
!17495 = !DILocation(line: 78, column: 55, scope: !17306)
!17496 = !DILocation(line: 78, column: 53, scope: !17306)
!17497 = !DILocation(line: 78, column: 61, scope: !17306)
!17498 = !DILocation(line: 78, column: 59, scope: !17306)
!17499 = !DILocation(line: 78, column: 69, scope: !17306)
!17500 = !DILocation(line: 78, column: 31, scope: !17306)
!17501 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17305)
!17502 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17305)
!17503 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17305)
!17504 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17305)
!17505 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17305)
!17506 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17305)
!17507 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17305)
!17508 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17305)
!17509 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17305)
!17510 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17305)
!17511 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17305)
!17512 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17305)
!17513 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17305)
!17514 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17305)
!17515 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17305)
!17516 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17305)
!17517 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17305)
!17518 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17305)
!17519 = !DILocation(line: 78, column: 18, scope: !17306)
!17520 = !DILocation(line: 78, column: 20, scope: !17306)
!17521 = !DILocation(line: 78, column: 24, scope: !17306)
!17522 = !DILocation(line: 78, column: 13, scope: !17306)
!17523 = !DILocation(line: 78, column: 29, scope: !17306)
!17524 = !DILocation(line: 87, column: 41, scope: !17306)
!17525 = !DILocation(line: 87, column: 45, scope: !17306)
!17526 = !DILocation(line: 87, column: 43, scope: !17306)
!17527 = !DILocation(line: 87, column: 51, scope: !17306)
!17528 = !DILocation(line: 87, column: 55, scope: !17306)
!17529 = !DILocation(line: 87, column: 53, scope: !17306)
!17530 = !DILocation(line: 87, column: 49, scope: !17306)
!17531 = !DILocation(line: 87, column: 59, scope: !17306)
!17532 = !DILocation(line: 87, column: 73, scope: !17306)
!17533 = !DILocation(line: 87, column: 23, scope: !17306)
!17534 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17314)
!17535 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17314)
!17536 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17314)
!17537 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17314)
!17538 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17314)
!17539 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17314)
!17540 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17314)
!17541 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17314)
!17542 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17314)
!17543 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17314)
!17544 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17314)
!17545 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17314)
!17546 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17314)
!17547 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17314)
!17548 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17314)
!17549 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17314)
!17550 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17314)
!17551 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17314)
!17552 = !DILocation(line: 87, column: 18, scope: !17306)
!17553 = !DILocation(line: 87, column: 13, scope: !17306)
!17554 = !DILocation(line: 87, column: 21, scope: !17306)
!17555 = !DILocation(line: 88, column: 41, scope: !17306)
!17556 = !DILocation(line: 88, column: 45, scope: !17306)
!17557 = !DILocation(line: 88, column: 43, scope: !17306)
!17558 = !DILocation(line: 88, column: 51, scope: !17306)
!17559 = !DILocation(line: 88, column: 55, scope: !17306)
!17560 = !DILocation(line: 88, column: 53, scope: !17306)
!17561 = !DILocation(line: 88, column: 49, scope: !17306)
!17562 = !DILocation(line: 88, column: 59, scope: !17306)
!17563 = !DILocation(line: 88, column: 73, scope: !17306)
!17564 = !DILocation(line: 88, column: 23, scope: !17306)
!17565 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17317)
!17566 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17317)
!17567 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17317)
!17568 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17317)
!17569 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17317)
!17570 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17317)
!17571 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17317)
!17572 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17317)
!17573 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17317)
!17574 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17317)
!17575 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17317)
!17576 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17317)
!17577 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17317)
!17578 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17317)
!17579 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17317)
!17580 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17317)
!17581 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17317)
!17582 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17317)
!17583 = !DILocation(line: 88, column: 18, scope: !17306)
!17584 = !DILocation(line: 88, column: 13, scope: !17306)
!17585 = !DILocation(line: 88, column: 21, scope: !17306)
!17586 = !DILocation(line: 89, column: 9, scope: !17306)
!17587 = !DILocation(line: 64, column: 29, scope: !17588)
!17588 = !DILexicalBlockFile(scope: !17307, file: !13243, discriminator: 2)
!17589 = !DILocation(line: 64, column: 9, scope: !17588)
!17590 = distinct !{!17590, !17591}
!17591 = !DILocation(line: 64, column: 9, scope: !17309)
!17592 = !DILocation(line: 91, column: 18, scope: !17309)
!17593 = !DILocation(line: 91, column: 32, scope: !17309)
!17594 = !DILocation(line: 91, column: 44, scope: !17309)
!17595 = !DILocation(line: 91, column: 14, scope: !17309)
!17596 = !DILocation(line: 92, column: 17, scope: !17309)
!17597 = !DILocation(line: 92, column: 31, scope: !17309)
!17598 = !DILocation(line: 92, column: 14, scope: !17309)
!17599 = !DILocation(line: 93, column: 17, scope: !17309)
!17600 = !DILocation(line: 93, column: 31, scope: !17309)
!17601 = !DILocation(line: 93, column: 14, scope: !17309)
!17602 = !DILocation(line: 94, column: 18, scope: !17309)
!17603 = !DILocation(line: 94, column: 32, scope: !17309)
!17604 = !DILocation(line: 94, column: 44, scope: !17309)
!17605 = !DILocation(line: 94, column: 14, scope: !17309)
!17606 = !DILocation(line: 95, column: 17, scope: !17309)
!17607 = !DILocation(line: 95, column: 31, scope: !17309)
!17608 = !DILocation(line: 95, column: 14, scope: !17309)
!17609 = !DILocation(line: 96, column: 17, scope: !17309)
!17610 = !DILocation(line: 96, column: 31, scope: !17309)
!17611 = !DILocation(line: 96, column: 14, scope: !17309)
!17612 = !DILocation(line: 97, column: 5, scope: !17309)
!17613 = !DILocation(line: 63, column: 25, scope: !17614)
!17614 = !DILexicalBlockFile(scope: !17310, file: !13243, discriminator: 2)
!17615 = !DILocation(line: 63, column: 5, scope: !17614)
!17616 = distinct !{!17616, !17617}
!17617 = !DILocation(line: 63, column: 5, scope: !17303)
!17618 = !DILocation(line: 98, column: 1, scope: !17303)
!17619 = distinct !DISubprogram(name: "yuv2yuv_420p10to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!17620 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 78, column: 31, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17623, file: !13243, line: 64, column: 33)
!17623 = distinct !DILexicalBlock(scope: !17624, file: !13243, line: 64, column: 9)
!17624 = distinct !DILexicalBlock(scope: !17625, file: !13243, line: 64, column: 9)
!17625 = distinct !DILexicalBlock(scope: !17626, file: !13243, line: 63, column: 29)
!17626 = distinct !DILexicalBlock(scope: !17627, file: !13243, line: 63, column: 5)
!17627 = distinct !DILexicalBlock(scope: !17619, file: !13243, line: 63, column: 5)
!17628 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17621)
!17629 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17630)
!17630 = distinct !DILocation(line: 81, column: 31, scope: !17622)
!17631 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17630)
!17632 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17633)
!17633 = distinct !DILocation(line: 83, column: 31, scope: !17622)
!17634 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17633)
!17635 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17636)
!17636 = distinct !DILocation(line: 87, column: 23, scope: !17622)
!17637 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17636)
!17638 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 88, column: 23, scope: !17622)
!17640 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17639)
!17641 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !17642)
!17642 = distinct !DILocation(line: 76, column: 28, scope: !17622)
!17643 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !17642)
!17644 = !DILocalVariable(name: "_dst", arg: 1, scope: !17619, file: !13243, line: 40, type: !17)
!17645 = !DILocation(line: 40, column: 43, scope: !17619)
!17646 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !17619, file: !13243, line: 40, type: !50)
!17647 = !DILocation(line: 40, column: 68, scope: !17619)
!17648 = !DILocalVariable(name: "_src", arg: 3, scope: !17619, file: !13243, line: 41, type: !17)
!17649 = !DILocation(line: 41, column: 34, scope: !17619)
!17650 = !DILocalVariable(name: "src_stride", arg: 4, scope: !17619, file: !13243, line: 41, type: !50)
!17651 = !DILocation(line: 41, column: 59, scope: !17619)
!17652 = !DILocalVariable(name: "w", arg: 5, scope: !17619, file: !13243, line: 42, type: !52)
!17653 = !DILocation(line: 42, column: 29, scope: !17619)
!17654 = !DILocalVariable(name: "h", arg: 6, scope: !17619, file: !13243, line: 42, type: !52)
!17655 = !DILocation(line: 42, column: 36, scope: !17619)
!17656 = !DILocalVariable(name: "c", arg: 7, scope: !17619, file: !13243, line: 42, type: !53)
!17657 = !DILocation(line: 42, column: 53, scope: !17619)
!17658 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !17619, file: !13243, line: 43, type: !84)
!17659 = !DILocation(line: 43, column: 39, scope: !17619)
!17660 = !DILocalVariable(name: "dst", scope: !17619, file: !13243, line: 45, type: !22)
!17661 = !DILocation(line: 45, column: 16, scope: !17619)
!17662 = !DILocation(line: 45, column: 36, scope: !17619)
!17663 = !DILocation(line: 45, column: 22, scope: !17619)
!17664 = !DILocalVariable(name: "src", scope: !17619, file: !13243, line: 46, type: !22)
!17665 = !DILocation(line: 46, column: 16, scope: !17619)
!17666 = !DILocation(line: 46, column: 36, scope: !17619)
!17667 = !DILocation(line: 46, column: 22, scope: !17619)
!17668 = !DILocalVariable(name: "src0", scope: !17619, file: !13243, line: 47, type: !1418)
!17669 = !DILocation(line: 47, column: 21, scope: !17619)
!17670 = !DILocation(line: 47, column: 28, scope: !17619)
!17671 = !DILocalVariable(name: "src1", scope: !17619, file: !13243, line: 47, type: !1418)
!17672 = !DILocation(line: 47, column: 37, scope: !17619)
!17673 = !DILocation(line: 47, column: 44, scope: !17619)
!17674 = !DILocalVariable(name: "src2", scope: !17619, file: !13243, line: 47, type: !1418)
!17675 = !DILocation(line: 47, column: 53, scope: !17619)
!17676 = !DILocation(line: 47, column: 60, scope: !17619)
!17677 = !DILocalVariable(name: "dst0", scope: !17619, file: !13243, line: 48, type: !23)
!17678 = !DILocation(line: 48, column: 15, scope: !17619)
!17679 = !DILocation(line: 48, column: 22, scope: !17619)
!17680 = !DILocalVariable(name: "dst1", scope: !17619, file: !13243, line: 48, type: !23)
!17681 = !DILocation(line: 48, column: 31, scope: !17619)
!17682 = !DILocation(line: 48, column: 38, scope: !17619)
!17683 = !DILocalVariable(name: "dst2", scope: !17619, file: !13243, line: 48, type: !23)
!17684 = !DILocation(line: 48, column: 47, scope: !17619)
!17685 = !DILocation(line: 48, column: 54, scope: !17619)
!17686 = !DILocalVariable(name: "y", scope: !17619, file: !13243, line: 49, type: !52)
!17687 = !DILocation(line: 49, column: 9, scope: !17619)
!17688 = !DILocalVariable(name: "x", scope: !17619, file: !13243, line: 49, type: !52)
!17689 = !DILocation(line: 49, column: 12, scope: !17619)
!17690 = !DILocalVariable(name: "sh", scope: !17619, file: !13243, line: 50, type: !343)
!17691 = !DILocation(line: 50, column: 15, scope: !17619)
!17692 = !DILocalVariable(name: "rnd", scope: !17619, file: !13243, line: 51, type: !343)
!17693 = !DILocation(line: 51, column: 15, scope: !17619)
!17694 = !DILocalVariable(name: "y_off_in", scope: !17619, file: !13243, line: 52, type: !52)
!17695 = !DILocation(line: 52, column: 9, scope: !17619)
!17696 = !DILocation(line: 52, column: 20, scope: !17619)
!17697 = !DILocalVariable(name: "y_off_out", scope: !17619, file: !13243, line: 53, type: !52)
!17698 = !DILocation(line: 53, column: 9, scope: !17619)
!17699 = !DILocation(line: 53, column: 21, scope: !17619)
!17700 = !DILocation(line: 53, column: 38, scope: !17619)
!17701 = !DILocalVariable(name: "uv_off_in", scope: !17619, file: !13243, line: 54, type: !343)
!17702 = !DILocation(line: 54, column: 15, scope: !17619)
!17703 = !DILocalVariable(name: "uv_off_out", scope: !17619, file: !13243, line: 55, type: !343)
!17704 = !DILocation(line: 55, column: 15, scope: !17619)
!17705 = !DILocalVariable(name: "cyy", scope: !17619, file: !13243, line: 56, type: !52)
!17706 = !DILocation(line: 56, column: 9, scope: !17619)
!17707 = !DILocation(line: 56, column: 15, scope: !17619)
!17708 = !DILocalVariable(name: "cyu", scope: !17619, file: !13243, line: 56, type: !52)
!17709 = !DILocation(line: 56, column: 27, scope: !17619)
!17710 = !DILocation(line: 56, column: 33, scope: !17619)
!17711 = !DILocalVariable(name: "cyv", scope: !17619, file: !13243, line: 56, type: !52)
!17712 = !DILocation(line: 56, column: 45, scope: !17619)
!17713 = !DILocation(line: 56, column: 51, scope: !17619)
!17714 = !DILocalVariable(name: "cuu", scope: !17619, file: !13243, line: 57, type: !52)
!17715 = !DILocation(line: 57, column: 9, scope: !17619)
!17716 = !DILocation(line: 57, column: 15, scope: !17619)
!17717 = !DILocalVariable(name: "cuv", scope: !17619, file: !13243, line: 57, type: !52)
!17718 = !DILocation(line: 57, column: 27, scope: !17619)
!17719 = !DILocation(line: 57, column: 33, scope: !17619)
!17720 = !DILocalVariable(name: "cvu", scope: !17619, file: !13243, line: 57, type: !52)
!17721 = !DILocation(line: 57, column: 45, scope: !17619)
!17722 = !DILocation(line: 57, column: 51, scope: !17619)
!17723 = !DILocalVariable(name: "cvv", scope: !17619, file: !13243, line: 57, type: !52)
!17724 = !DILocation(line: 57, column: 63, scope: !17619)
!17725 = !DILocation(line: 57, column: 69, scope: !17619)
!17726 = !DILocation(line: 61, column: 58, scope: !17619)
!17727 = !DILocation(line: 61, column: 61, scope: !17619)
!17728 = !DILocation(line: 61, column: 72, scope: !17619)
!17729 = !DILocation(line: 61, column: 77, scope: !17619)
!17730 = !DILocation(line: 61, column: 7, scope: !17619)
!17731 = !DILocation(line: 62, column: 58, scope: !17619)
!17732 = !DILocation(line: 62, column: 61, scope: !17619)
!17733 = !DILocation(line: 62, column: 72, scope: !17619)
!17734 = !DILocation(line: 62, column: 77, scope: !17619)
!17735 = !DILocation(line: 62, column: 7, scope: !17619)
!17736 = !DILocation(line: 63, column: 12, scope: !17627)
!17737 = !DILocation(line: 63, column: 10, scope: !17627)
!17738 = !DILocation(line: 63, column: 17, scope: !17739)
!17739 = !DILexicalBlockFile(scope: !17626, file: !13243, discriminator: 1)
!17740 = !DILocation(line: 63, column: 21, scope: !17739)
!17741 = !DILocation(line: 63, column: 19, scope: !17739)
!17742 = !DILocation(line: 63, column: 5, scope: !17739)
!17743 = !DILocation(line: 64, column: 16, scope: !17624)
!17744 = !DILocation(line: 64, column: 14, scope: !17624)
!17745 = !DILocation(line: 64, column: 21, scope: !17746)
!17746 = !DILexicalBlockFile(scope: !17623, file: !13243, discriminator: 1)
!17747 = !DILocation(line: 64, column: 25, scope: !17746)
!17748 = !DILocation(line: 64, column: 23, scope: !17746)
!17749 = !DILocation(line: 64, column: 9, scope: !17746)
!17750 = !DILocalVariable(name: "y00", scope: !17622, file: !13243, line: 65, type: !52)
!17751 = !DILocation(line: 65, column: 17, scope: !17622)
!17752 = !DILocation(line: 65, column: 28, scope: !17622)
!17753 = !DILocation(line: 65, column: 30, scope: !17622)
!17754 = !DILocation(line: 65, column: 23, scope: !17622)
!17755 = !DILocation(line: 65, column: 38, scope: !17622)
!17756 = !DILocation(line: 65, column: 36, scope: !17622)
!17757 = !DILocalVariable(name: "y01", scope: !17622, file: !13243, line: 67, type: !52)
!17758 = !DILocation(line: 67, column: 17, scope: !17622)
!17759 = !DILocation(line: 67, column: 32, scope: !17622)
!17760 = !DILocation(line: 67, column: 30, scope: !17622)
!17761 = !DILocation(line: 67, column: 34, scope: !17622)
!17762 = !DILocation(line: 67, column: 23, scope: !17622)
!17763 = !DILocation(line: 67, column: 41, scope: !17622)
!17764 = !DILocation(line: 67, column: 39, scope: !17622)
!17765 = !DILocalVariable(name: "y10", scope: !17622, file: !13243, line: 69, type: !52)
!17766 = !DILocation(line: 69, column: 17, scope: !17622)
!17767 = !DILocation(line: 69, column: 28, scope: !17622)
!17768 = !DILocation(line: 69, column: 42, scope: !17622)
!17769 = !DILocation(line: 69, column: 67, scope: !17622)
!17770 = !DILocation(line: 69, column: 65, scope: !17622)
!17771 = !DILocation(line: 69, column: 63, scope: !17622)
!17772 = !DILocation(line: 69, column: 61, scope: !17622)
!17773 = !DILocation(line: 69, column: 23, scope: !17622)
!17774 = !DILocation(line: 69, column: 72, scope: !17622)
!17775 = !DILocation(line: 69, column: 70, scope: !17622)
!17776 = !DILocalVariable(name: "y11", scope: !17622, file: !13243, line: 70, type: !52)
!17777 = !DILocation(line: 70, column: 17, scope: !17622)
!17778 = !DILocation(line: 70, column: 28, scope: !17622)
!17779 = !DILocation(line: 70, column: 42, scope: !17622)
!17780 = !DILocation(line: 70, column: 67, scope: !17622)
!17781 = !DILocation(line: 70, column: 65, scope: !17622)
!17782 = !DILocation(line: 70, column: 63, scope: !17622)
!17783 = !DILocation(line: 70, column: 61, scope: !17622)
!17784 = !DILocation(line: 70, column: 69, scope: !17622)
!17785 = !DILocation(line: 70, column: 23, scope: !17622)
!17786 = !DILocation(line: 70, column: 76, scope: !17622)
!17787 = !DILocation(line: 70, column: 74, scope: !17622)
!17788 = !DILocalVariable(name: "u", scope: !17622, file: !13243, line: 73, type: !52)
!17789 = !DILocation(line: 73, column: 17, scope: !17622)
!17790 = !DILocation(line: 73, column: 26, scope: !17622)
!17791 = !DILocation(line: 73, column: 21, scope: !17622)
!17792 = !DILocation(line: 73, column: 29, scope: !17622)
!17793 = !DILocalVariable(name: "v", scope: !17622, file: !13243, line: 73, type: !52)
!17794 = !DILocation(line: 73, column: 42, scope: !17622)
!17795 = !DILocation(line: 73, column: 51, scope: !17622)
!17796 = !DILocation(line: 73, column: 46, scope: !17622)
!17797 = !DILocation(line: 73, column: 54, scope: !17622)
!17798 = !DILocalVariable(name: "uv_val", scope: !17622, file: !13243, line: 74, type: !52)
!17799 = !DILocation(line: 74, column: 17, scope: !17622)
!17800 = !DILocation(line: 74, column: 26, scope: !17622)
!17801 = !DILocation(line: 74, column: 32, scope: !17622)
!17802 = !DILocation(line: 74, column: 30, scope: !17622)
!17803 = !DILocation(line: 74, column: 36, scope: !17622)
!17804 = !DILocation(line: 74, column: 42, scope: !17622)
!17805 = !DILocation(line: 74, column: 40, scope: !17622)
!17806 = !DILocation(line: 74, column: 34, scope: !17622)
!17807 = !DILocation(line: 74, column: 44, scope: !17622)
!17808 = !DILocation(line: 74, column: 52, scope: !17622)
!17809 = !DILocation(line: 74, column: 50, scope: !17622)
!17810 = !DILocation(line: 76, column: 46, scope: !17622)
!17811 = !DILocation(line: 76, column: 52, scope: !17622)
!17812 = !DILocation(line: 76, column: 50, scope: !17622)
!17813 = !DILocation(line: 76, column: 58, scope: !17622)
!17814 = !DILocation(line: 76, column: 56, scope: !17622)
!17815 = !DILocation(line: 76, column: 66, scope: !17622)
!17816 = !DILocation(line: 76, column: 28, scope: !17622)
!17817 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17642)
!17818 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17642)
!17819 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17642)
!17820 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17642)
!17821 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17642)
!17822 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17642)
!17823 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17642)
!17824 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17642)
!17825 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17642)
!17826 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17642)
!17827 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17642)
!17828 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17642)
!17829 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17642)
!17830 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17642)
!17831 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17642)
!17832 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17642)
!17833 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17642)
!17834 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17642)
!17835 = !DILocation(line: 76, column: 18, scope: !17622)
!17836 = !DILocation(line: 76, column: 20, scope: !17622)
!17837 = !DILocation(line: 76, column: 13, scope: !17622)
!17838 = !DILocation(line: 76, column: 26, scope: !17622)
!17839 = !DILocation(line: 78, column: 49, scope: !17622)
!17840 = !DILocation(line: 78, column: 55, scope: !17622)
!17841 = !DILocation(line: 78, column: 53, scope: !17622)
!17842 = !DILocation(line: 78, column: 61, scope: !17622)
!17843 = !DILocation(line: 78, column: 59, scope: !17622)
!17844 = !DILocation(line: 78, column: 69, scope: !17622)
!17845 = !DILocation(line: 78, column: 31, scope: !17622)
!17846 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17621)
!17847 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17621)
!17848 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17621)
!17849 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17621)
!17850 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17621)
!17851 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17621)
!17852 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17621)
!17853 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17621)
!17854 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17621)
!17855 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17621)
!17856 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17621)
!17857 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17621)
!17858 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17621)
!17859 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17621)
!17860 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17621)
!17861 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17621)
!17862 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17621)
!17863 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17621)
!17864 = !DILocation(line: 78, column: 18, scope: !17622)
!17865 = !DILocation(line: 78, column: 20, scope: !17622)
!17866 = !DILocation(line: 78, column: 24, scope: !17622)
!17867 = !DILocation(line: 78, column: 13, scope: !17622)
!17868 = !DILocation(line: 78, column: 29, scope: !17622)
!17869 = !DILocation(line: 81, column: 49, scope: !17622)
!17870 = !DILocation(line: 81, column: 55, scope: !17622)
!17871 = !DILocation(line: 81, column: 53, scope: !17622)
!17872 = !DILocation(line: 81, column: 61, scope: !17622)
!17873 = !DILocation(line: 81, column: 59, scope: !17622)
!17874 = !DILocation(line: 81, column: 69, scope: !17622)
!17875 = !DILocation(line: 81, column: 31, scope: !17622)
!17876 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17630)
!17877 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17630)
!17878 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17630)
!17879 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17630)
!17880 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17630)
!17881 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17630)
!17882 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17630)
!17883 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17630)
!17884 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17630)
!17885 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17630)
!17886 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17630)
!17887 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17630)
!17888 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17630)
!17889 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17630)
!17890 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17630)
!17891 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17630)
!17892 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17630)
!17893 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17630)
!17894 = !DILocation(line: 80, column: 18, scope: !17622)
!17895 = !DILocation(line: 80, column: 20, scope: !17622)
!17896 = !DILocation(line: 80, column: 24, scope: !17622)
!17897 = !DILocation(line: 80, column: 30, scope: !17622)
!17898 = !DILocation(line: 80, column: 44, scope: !17622)
!17899 = !DILocation(line: 80, column: 28, scope: !17622)
!17900 = !DILocation(line: 80, column: 13, scope: !17622)
!17901 = !DILocation(line: 80, column: 64, scope: !17622)
!17902 = !DILocation(line: 83, column: 49, scope: !17622)
!17903 = !DILocation(line: 83, column: 55, scope: !17622)
!17904 = !DILocation(line: 83, column: 53, scope: !17622)
!17905 = !DILocation(line: 83, column: 61, scope: !17622)
!17906 = !DILocation(line: 83, column: 59, scope: !17622)
!17907 = !DILocation(line: 83, column: 69, scope: !17622)
!17908 = !DILocation(line: 83, column: 31, scope: !17622)
!17909 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17633)
!17910 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17633)
!17911 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17633)
!17912 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17633)
!17913 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17633)
!17914 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17633)
!17915 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17633)
!17916 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17633)
!17917 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17633)
!17918 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17633)
!17919 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17633)
!17920 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17633)
!17921 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17633)
!17922 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17633)
!17923 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17633)
!17924 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17633)
!17925 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17633)
!17926 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17633)
!17927 = !DILocation(line: 82, column: 18, scope: !17622)
!17928 = !DILocation(line: 82, column: 20, scope: !17622)
!17929 = !DILocation(line: 82, column: 24, scope: !17622)
!17930 = !DILocation(line: 82, column: 30, scope: !17622)
!17931 = !DILocation(line: 82, column: 44, scope: !17622)
!17932 = !DILocation(line: 82, column: 28, scope: !17622)
!17933 = !DILocation(line: 82, column: 13, scope: !17622)
!17934 = !DILocation(line: 82, column: 64, scope: !17622)
!17935 = !DILocation(line: 87, column: 41, scope: !17622)
!17936 = !DILocation(line: 87, column: 45, scope: !17622)
!17937 = !DILocation(line: 87, column: 43, scope: !17622)
!17938 = !DILocation(line: 87, column: 51, scope: !17622)
!17939 = !DILocation(line: 87, column: 55, scope: !17622)
!17940 = !DILocation(line: 87, column: 53, scope: !17622)
!17941 = !DILocation(line: 87, column: 49, scope: !17622)
!17942 = !DILocation(line: 87, column: 59, scope: !17622)
!17943 = !DILocation(line: 87, column: 73, scope: !17622)
!17944 = !DILocation(line: 87, column: 23, scope: !17622)
!17945 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17636)
!17946 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17636)
!17947 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17636)
!17948 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17636)
!17949 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17636)
!17950 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17636)
!17951 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17636)
!17952 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17636)
!17953 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17636)
!17954 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17636)
!17955 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17636)
!17956 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17636)
!17957 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17636)
!17958 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17636)
!17959 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17636)
!17960 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17636)
!17961 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17636)
!17962 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17636)
!17963 = !DILocation(line: 87, column: 18, scope: !17622)
!17964 = !DILocation(line: 87, column: 13, scope: !17622)
!17965 = !DILocation(line: 87, column: 21, scope: !17622)
!17966 = !DILocation(line: 88, column: 41, scope: !17622)
!17967 = !DILocation(line: 88, column: 45, scope: !17622)
!17968 = !DILocation(line: 88, column: 43, scope: !17622)
!17969 = !DILocation(line: 88, column: 51, scope: !17622)
!17970 = !DILocation(line: 88, column: 55, scope: !17622)
!17971 = !DILocation(line: 88, column: 53, scope: !17622)
!17972 = !DILocation(line: 88, column: 49, scope: !17622)
!17973 = !DILocation(line: 88, column: 59, scope: !17622)
!17974 = !DILocation(line: 88, column: 73, scope: !17622)
!17975 = !DILocation(line: 88, column: 23, scope: !17622)
!17976 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !17639)
!17977 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !17639)
!17978 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !17639)
!17979 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !17639)
!17980 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !17639)
!17981 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !17639)
!17982 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !17639)
!17983 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !17639)
!17984 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !17639)
!17985 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !17639)
!17986 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !17639)
!17987 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !17639)
!17988 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !17639)
!17989 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !17639)
!17990 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !17639)
!17991 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !17639)
!17992 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !17639)
!17993 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !17639)
!17994 = !DILocation(line: 88, column: 18, scope: !17622)
!17995 = !DILocation(line: 88, column: 13, scope: !17622)
!17996 = !DILocation(line: 88, column: 21, scope: !17622)
!17997 = !DILocation(line: 89, column: 9, scope: !17622)
!17998 = !DILocation(line: 64, column: 29, scope: !17999)
!17999 = !DILexicalBlockFile(scope: !17623, file: !13243, discriminator: 2)
!18000 = !DILocation(line: 64, column: 9, scope: !17999)
!18001 = distinct !{!18001, !18002}
!18002 = !DILocation(line: 64, column: 9, scope: !17625)
!18003 = !DILocation(line: 91, column: 18, scope: !17625)
!18004 = !DILocation(line: 91, column: 32, scope: !17625)
!18005 = !DILocation(line: 91, column: 44, scope: !17625)
!18006 = !DILocation(line: 91, column: 14, scope: !17625)
!18007 = !DILocation(line: 92, column: 17, scope: !17625)
!18008 = !DILocation(line: 92, column: 31, scope: !17625)
!18009 = !DILocation(line: 92, column: 14, scope: !17625)
!18010 = !DILocation(line: 93, column: 17, scope: !17625)
!18011 = !DILocation(line: 93, column: 31, scope: !17625)
!18012 = !DILocation(line: 93, column: 14, scope: !17625)
!18013 = !DILocation(line: 94, column: 18, scope: !17625)
!18014 = !DILocation(line: 94, column: 32, scope: !17625)
!18015 = !DILocation(line: 94, column: 44, scope: !17625)
!18016 = !DILocation(line: 94, column: 14, scope: !17625)
!18017 = !DILocation(line: 95, column: 17, scope: !17625)
!18018 = !DILocation(line: 95, column: 31, scope: !17625)
!18019 = !DILocation(line: 95, column: 14, scope: !17625)
!18020 = !DILocation(line: 96, column: 17, scope: !17625)
!18021 = !DILocation(line: 96, column: 31, scope: !17625)
!18022 = !DILocation(line: 96, column: 14, scope: !17625)
!18023 = !DILocation(line: 97, column: 5, scope: !17625)
!18024 = !DILocation(line: 63, column: 25, scope: !18025)
!18025 = !DILexicalBlockFile(scope: !17626, file: !13243, discriminator: 2)
!18026 = !DILocation(line: 63, column: 5, scope: !18025)
!18027 = distinct !{!18027, !18028}
!18028 = !DILocation(line: 63, column: 5, scope: !17619)
!18029 = !DILocation(line: 98, column: 1, scope: !17619)
!18030 = distinct !DISubprogram(name: "yuv2yuv_444p10to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!18031 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18032)
!18032 = distinct !DILocation(line: 87, column: 23, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !18034, file: !13243, line: 64, column: 33)
!18034 = distinct !DILexicalBlock(scope: !18035, file: !13243, line: 64, column: 9)
!18035 = distinct !DILexicalBlock(scope: !18036, file: !13243, line: 64, column: 9)
!18036 = distinct !DILexicalBlock(scope: !18037, file: !13243, line: 63, column: 29)
!18037 = distinct !DILexicalBlock(scope: !18038, file: !13243, line: 63, column: 5)
!18038 = distinct !DILexicalBlock(scope: !18030, file: !13243, line: 63, column: 5)
!18039 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18032)
!18040 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18041)
!18041 = distinct !DILocation(line: 88, column: 23, scope: !18033)
!18042 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18041)
!18043 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18044)
!18044 = distinct !DILocation(line: 76, column: 28, scope: !18033)
!18045 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18044)
!18046 = !DILocalVariable(name: "_dst", arg: 1, scope: !18030, file: !13243, line: 40, type: !17)
!18047 = !DILocation(line: 40, column: 43, scope: !18030)
!18048 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !18030, file: !13243, line: 40, type: !50)
!18049 = !DILocation(line: 40, column: 68, scope: !18030)
!18050 = !DILocalVariable(name: "_src", arg: 3, scope: !18030, file: !13243, line: 41, type: !17)
!18051 = !DILocation(line: 41, column: 34, scope: !18030)
!18052 = !DILocalVariable(name: "src_stride", arg: 4, scope: !18030, file: !13243, line: 41, type: !50)
!18053 = !DILocation(line: 41, column: 59, scope: !18030)
!18054 = !DILocalVariable(name: "w", arg: 5, scope: !18030, file: !13243, line: 42, type: !52)
!18055 = !DILocation(line: 42, column: 29, scope: !18030)
!18056 = !DILocalVariable(name: "h", arg: 6, scope: !18030, file: !13243, line: 42, type: !52)
!18057 = !DILocation(line: 42, column: 36, scope: !18030)
!18058 = !DILocalVariable(name: "c", arg: 7, scope: !18030, file: !13243, line: 42, type: !53)
!18059 = !DILocation(line: 42, column: 53, scope: !18030)
!18060 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !18030, file: !13243, line: 43, type: !84)
!18061 = !DILocation(line: 43, column: 39, scope: !18030)
!18062 = !DILocalVariable(name: "dst", scope: !18030, file: !13243, line: 45, type: !22)
!18063 = !DILocation(line: 45, column: 16, scope: !18030)
!18064 = !DILocation(line: 45, column: 36, scope: !18030)
!18065 = !DILocation(line: 45, column: 22, scope: !18030)
!18066 = !DILocalVariable(name: "src", scope: !18030, file: !13243, line: 46, type: !22)
!18067 = !DILocation(line: 46, column: 16, scope: !18030)
!18068 = !DILocation(line: 46, column: 36, scope: !18030)
!18069 = !DILocation(line: 46, column: 22, scope: !18030)
!18070 = !DILocalVariable(name: "src0", scope: !18030, file: !13243, line: 47, type: !1418)
!18071 = !DILocation(line: 47, column: 21, scope: !18030)
!18072 = !DILocation(line: 47, column: 28, scope: !18030)
!18073 = !DILocalVariable(name: "src1", scope: !18030, file: !13243, line: 47, type: !1418)
!18074 = !DILocation(line: 47, column: 37, scope: !18030)
!18075 = !DILocation(line: 47, column: 44, scope: !18030)
!18076 = !DILocalVariable(name: "src2", scope: !18030, file: !13243, line: 47, type: !1418)
!18077 = !DILocation(line: 47, column: 53, scope: !18030)
!18078 = !DILocation(line: 47, column: 60, scope: !18030)
!18079 = !DILocalVariable(name: "dst0", scope: !18030, file: !13243, line: 48, type: !23)
!18080 = !DILocation(line: 48, column: 15, scope: !18030)
!18081 = !DILocation(line: 48, column: 22, scope: !18030)
!18082 = !DILocalVariable(name: "dst1", scope: !18030, file: !13243, line: 48, type: !23)
!18083 = !DILocation(line: 48, column: 31, scope: !18030)
!18084 = !DILocation(line: 48, column: 38, scope: !18030)
!18085 = !DILocalVariable(name: "dst2", scope: !18030, file: !13243, line: 48, type: !23)
!18086 = !DILocation(line: 48, column: 47, scope: !18030)
!18087 = !DILocation(line: 48, column: 54, scope: !18030)
!18088 = !DILocalVariable(name: "y", scope: !18030, file: !13243, line: 49, type: !52)
!18089 = !DILocation(line: 49, column: 9, scope: !18030)
!18090 = !DILocalVariable(name: "x", scope: !18030, file: !13243, line: 49, type: !52)
!18091 = !DILocation(line: 49, column: 12, scope: !18030)
!18092 = !DILocalVariable(name: "sh", scope: !18030, file: !13243, line: 50, type: !343)
!18093 = !DILocation(line: 50, column: 15, scope: !18030)
!18094 = !DILocalVariable(name: "rnd", scope: !18030, file: !13243, line: 51, type: !343)
!18095 = !DILocation(line: 51, column: 15, scope: !18030)
!18096 = !DILocalVariable(name: "y_off_in", scope: !18030, file: !13243, line: 52, type: !52)
!18097 = !DILocation(line: 52, column: 9, scope: !18030)
!18098 = !DILocation(line: 52, column: 20, scope: !18030)
!18099 = !DILocalVariable(name: "y_off_out", scope: !18030, file: !13243, line: 53, type: !52)
!18100 = !DILocation(line: 53, column: 9, scope: !18030)
!18101 = !DILocation(line: 53, column: 21, scope: !18030)
!18102 = !DILocation(line: 53, column: 38, scope: !18030)
!18103 = !DILocalVariable(name: "uv_off_in", scope: !18030, file: !13243, line: 54, type: !343)
!18104 = !DILocation(line: 54, column: 15, scope: !18030)
!18105 = !DILocalVariable(name: "uv_off_out", scope: !18030, file: !13243, line: 55, type: !343)
!18106 = !DILocation(line: 55, column: 15, scope: !18030)
!18107 = !DILocalVariable(name: "cyy", scope: !18030, file: !13243, line: 56, type: !52)
!18108 = !DILocation(line: 56, column: 9, scope: !18030)
!18109 = !DILocation(line: 56, column: 15, scope: !18030)
!18110 = !DILocalVariable(name: "cyu", scope: !18030, file: !13243, line: 56, type: !52)
!18111 = !DILocation(line: 56, column: 27, scope: !18030)
!18112 = !DILocation(line: 56, column: 33, scope: !18030)
!18113 = !DILocalVariable(name: "cyv", scope: !18030, file: !13243, line: 56, type: !52)
!18114 = !DILocation(line: 56, column: 45, scope: !18030)
!18115 = !DILocation(line: 56, column: 51, scope: !18030)
!18116 = !DILocalVariable(name: "cuu", scope: !18030, file: !13243, line: 57, type: !52)
!18117 = !DILocation(line: 57, column: 9, scope: !18030)
!18118 = !DILocation(line: 57, column: 15, scope: !18030)
!18119 = !DILocalVariable(name: "cuv", scope: !18030, file: !13243, line: 57, type: !52)
!18120 = !DILocation(line: 57, column: 27, scope: !18030)
!18121 = !DILocation(line: 57, column: 33, scope: !18030)
!18122 = !DILocalVariable(name: "cvu", scope: !18030, file: !13243, line: 57, type: !52)
!18123 = !DILocation(line: 57, column: 45, scope: !18030)
!18124 = !DILocation(line: 57, column: 51, scope: !18030)
!18125 = !DILocalVariable(name: "cvv", scope: !18030, file: !13243, line: 57, type: !52)
!18126 = !DILocation(line: 57, column: 63, scope: !18030)
!18127 = !DILocation(line: 57, column: 69, scope: !18030)
!18128 = !DILocation(line: 61, column: 58, scope: !18030)
!18129 = !DILocation(line: 61, column: 61, scope: !18030)
!18130 = !DILocation(line: 61, column: 72, scope: !18030)
!18131 = !DILocation(line: 61, column: 77, scope: !18030)
!18132 = !DILocation(line: 61, column: 7, scope: !18030)
!18133 = !DILocation(line: 62, column: 58, scope: !18030)
!18134 = !DILocation(line: 62, column: 61, scope: !18030)
!18135 = !DILocation(line: 62, column: 72, scope: !18030)
!18136 = !DILocation(line: 62, column: 77, scope: !18030)
!18137 = !DILocation(line: 62, column: 7, scope: !18030)
!18138 = !DILocation(line: 63, column: 12, scope: !18038)
!18139 = !DILocation(line: 63, column: 10, scope: !18038)
!18140 = !DILocation(line: 63, column: 17, scope: !18141)
!18141 = !DILexicalBlockFile(scope: !18037, file: !13243, discriminator: 1)
!18142 = !DILocation(line: 63, column: 21, scope: !18141)
!18143 = !DILocation(line: 63, column: 19, scope: !18141)
!18144 = !DILocation(line: 63, column: 5, scope: !18141)
!18145 = !DILocation(line: 64, column: 16, scope: !18035)
!18146 = !DILocation(line: 64, column: 14, scope: !18035)
!18147 = !DILocation(line: 64, column: 21, scope: !18148)
!18148 = !DILexicalBlockFile(scope: !18034, file: !13243, discriminator: 1)
!18149 = !DILocation(line: 64, column: 25, scope: !18148)
!18150 = !DILocation(line: 64, column: 23, scope: !18148)
!18151 = !DILocation(line: 64, column: 9, scope: !18148)
!18152 = !DILocalVariable(name: "y00", scope: !18033, file: !13243, line: 65, type: !52)
!18153 = !DILocation(line: 65, column: 17, scope: !18033)
!18154 = !DILocation(line: 65, column: 28, scope: !18033)
!18155 = !DILocation(line: 65, column: 30, scope: !18033)
!18156 = !DILocation(line: 65, column: 23, scope: !18033)
!18157 = !DILocation(line: 65, column: 38, scope: !18033)
!18158 = !DILocation(line: 65, column: 36, scope: !18033)
!18159 = !DILocalVariable(name: "u", scope: !18033, file: !13243, line: 73, type: !52)
!18160 = !DILocation(line: 73, column: 17, scope: !18033)
!18161 = !DILocation(line: 73, column: 26, scope: !18033)
!18162 = !DILocation(line: 73, column: 21, scope: !18033)
!18163 = !DILocation(line: 73, column: 29, scope: !18033)
!18164 = !DILocalVariable(name: "v", scope: !18033, file: !13243, line: 73, type: !52)
!18165 = !DILocation(line: 73, column: 42, scope: !18033)
!18166 = !DILocation(line: 73, column: 51, scope: !18033)
!18167 = !DILocation(line: 73, column: 46, scope: !18033)
!18168 = !DILocation(line: 73, column: 54, scope: !18033)
!18169 = !DILocalVariable(name: "uv_val", scope: !18033, file: !13243, line: 74, type: !52)
!18170 = !DILocation(line: 74, column: 17, scope: !18033)
!18171 = !DILocation(line: 74, column: 26, scope: !18033)
!18172 = !DILocation(line: 74, column: 32, scope: !18033)
!18173 = !DILocation(line: 74, column: 30, scope: !18033)
!18174 = !DILocation(line: 74, column: 36, scope: !18033)
!18175 = !DILocation(line: 74, column: 42, scope: !18033)
!18176 = !DILocation(line: 74, column: 40, scope: !18033)
!18177 = !DILocation(line: 74, column: 34, scope: !18033)
!18178 = !DILocation(line: 74, column: 44, scope: !18033)
!18179 = !DILocation(line: 74, column: 52, scope: !18033)
!18180 = !DILocation(line: 74, column: 50, scope: !18033)
!18181 = !DILocation(line: 76, column: 46, scope: !18033)
!18182 = !DILocation(line: 76, column: 52, scope: !18033)
!18183 = !DILocation(line: 76, column: 50, scope: !18033)
!18184 = !DILocation(line: 76, column: 58, scope: !18033)
!18185 = !DILocation(line: 76, column: 56, scope: !18033)
!18186 = !DILocation(line: 76, column: 66, scope: !18033)
!18187 = !DILocation(line: 76, column: 28, scope: !18033)
!18188 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18044)
!18189 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18044)
!18190 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18044)
!18191 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18044)
!18192 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18044)
!18193 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18044)
!18194 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18044)
!18195 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18044)
!18196 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18044)
!18197 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18044)
!18198 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18044)
!18199 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18044)
!18200 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18044)
!18201 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18044)
!18202 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18044)
!18203 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18044)
!18204 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18044)
!18205 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18044)
!18206 = !DILocation(line: 76, column: 18, scope: !18033)
!18207 = !DILocation(line: 76, column: 20, scope: !18033)
!18208 = !DILocation(line: 76, column: 13, scope: !18033)
!18209 = !DILocation(line: 76, column: 26, scope: !18033)
!18210 = !DILocation(line: 87, column: 41, scope: !18033)
!18211 = !DILocation(line: 87, column: 45, scope: !18033)
!18212 = !DILocation(line: 87, column: 43, scope: !18033)
!18213 = !DILocation(line: 87, column: 51, scope: !18033)
!18214 = !DILocation(line: 87, column: 55, scope: !18033)
!18215 = !DILocation(line: 87, column: 53, scope: !18033)
!18216 = !DILocation(line: 87, column: 49, scope: !18033)
!18217 = !DILocation(line: 87, column: 59, scope: !18033)
!18218 = !DILocation(line: 87, column: 73, scope: !18033)
!18219 = !DILocation(line: 87, column: 23, scope: !18033)
!18220 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18032)
!18221 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18032)
!18222 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18032)
!18223 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18032)
!18224 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18032)
!18225 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18032)
!18226 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18032)
!18227 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18032)
!18228 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18032)
!18229 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18032)
!18230 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18032)
!18231 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18032)
!18232 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18032)
!18233 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18032)
!18234 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18032)
!18235 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18032)
!18236 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18032)
!18237 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18032)
!18238 = !DILocation(line: 87, column: 18, scope: !18033)
!18239 = !DILocation(line: 87, column: 13, scope: !18033)
!18240 = !DILocation(line: 87, column: 21, scope: !18033)
!18241 = !DILocation(line: 88, column: 41, scope: !18033)
!18242 = !DILocation(line: 88, column: 45, scope: !18033)
!18243 = !DILocation(line: 88, column: 43, scope: !18033)
!18244 = !DILocation(line: 88, column: 51, scope: !18033)
!18245 = !DILocation(line: 88, column: 55, scope: !18033)
!18246 = !DILocation(line: 88, column: 53, scope: !18033)
!18247 = !DILocation(line: 88, column: 49, scope: !18033)
!18248 = !DILocation(line: 88, column: 59, scope: !18033)
!18249 = !DILocation(line: 88, column: 73, scope: !18033)
!18250 = !DILocation(line: 88, column: 23, scope: !18033)
!18251 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18041)
!18252 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18041)
!18253 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18041)
!18254 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18041)
!18255 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18041)
!18256 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18041)
!18257 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18041)
!18258 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18041)
!18259 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18041)
!18260 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18041)
!18261 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18041)
!18262 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18041)
!18263 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18041)
!18264 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18041)
!18265 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18041)
!18266 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18041)
!18267 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18041)
!18268 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18041)
!18269 = !DILocation(line: 88, column: 18, scope: !18033)
!18270 = !DILocation(line: 88, column: 13, scope: !18033)
!18271 = !DILocation(line: 88, column: 21, scope: !18033)
!18272 = !DILocation(line: 89, column: 9, scope: !18033)
!18273 = !DILocation(line: 64, column: 29, scope: !18274)
!18274 = !DILexicalBlockFile(scope: !18034, file: !13243, discriminator: 2)
!18275 = !DILocation(line: 64, column: 9, scope: !18274)
!18276 = distinct !{!18276, !18277}
!18277 = !DILocation(line: 64, column: 9, scope: !18036)
!18278 = !DILocation(line: 91, column: 18, scope: !18036)
!18279 = !DILocation(line: 91, column: 32, scope: !18036)
!18280 = !DILocation(line: 91, column: 44, scope: !18036)
!18281 = !DILocation(line: 91, column: 14, scope: !18036)
!18282 = !DILocation(line: 92, column: 17, scope: !18036)
!18283 = !DILocation(line: 92, column: 31, scope: !18036)
!18284 = !DILocation(line: 92, column: 14, scope: !18036)
!18285 = !DILocation(line: 93, column: 17, scope: !18036)
!18286 = !DILocation(line: 93, column: 31, scope: !18036)
!18287 = !DILocation(line: 93, column: 14, scope: !18036)
!18288 = !DILocation(line: 94, column: 18, scope: !18036)
!18289 = !DILocation(line: 94, column: 32, scope: !18036)
!18290 = !DILocation(line: 94, column: 44, scope: !18036)
!18291 = !DILocation(line: 94, column: 14, scope: !18036)
!18292 = !DILocation(line: 95, column: 17, scope: !18036)
!18293 = !DILocation(line: 95, column: 31, scope: !18036)
!18294 = !DILocation(line: 95, column: 14, scope: !18036)
!18295 = !DILocation(line: 96, column: 17, scope: !18036)
!18296 = !DILocation(line: 96, column: 31, scope: !18036)
!18297 = !DILocation(line: 96, column: 14, scope: !18036)
!18298 = !DILocation(line: 97, column: 5, scope: !18036)
!18299 = !DILocation(line: 63, column: 25, scope: !18300)
!18300 = !DILexicalBlockFile(scope: !18037, file: !13243, discriminator: 2)
!18301 = !DILocation(line: 63, column: 5, scope: !18300)
!18302 = distinct !{!18302, !18303}
!18303 = !DILocation(line: 63, column: 5, scope: !18030)
!18304 = !DILocation(line: 98, column: 1, scope: !18030)
!18305 = distinct !DISubprogram(name: "yuv2yuv_422p10to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!18306 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18307)
!18307 = distinct !DILocation(line: 78, column: 31, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18309, file: !13243, line: 64, column: 33)
!18309 = distinct !DILexicalBlock(scope: !18310, file: !13243, line: 64, column: 9)
!18310 = distinct !DILexicalBlock(scope: !18311, file: !13243, line: 64, column: 9)
!18311 = distinct !DILexicalBlock(scope: !18312, file: !13243, line: 63, column: 29)
!18312 = distinct !DILexicalBlock(scope: !18313, file: !13243, line: 63, column: 5)
!18313 = distinct !DILexicalBlock(scope: !18305, file: !13243, line: 63, column: 5)
!18314 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18307)
!18315 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18316)
!18316 = distinct !DILocation(line: 87, column: 23, scope: !18308)
!18317 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18316)
!18318 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18319)
!18319 = distinct !DILocation(line: 88, column: 23, scope: !18308)
!18320 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18319)
!18321 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18322)
!18322 = distinct !DILocation(line: 76, column: 28, scope: !18308)
!18323 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18322)
!18324 = !DILocalVariable(name: "_dst", arg: 1, scope: !18305, file: !13243, line: 40, type: !17)
!18325 = !DILocation(line: 40, column: 43, scope: !18305)
!18326 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !18305, file: !13243, line: 40, type: !50)
!18327 = !DILocation(line: 40, column: 68, scope: !18305)
!18328 = !DILocalVariable(name: "_src", arg: 3, scope: !18305, file: !13243, line: 41, type: !17)
!18329 = !DILocation(line: 41, column: 34, scope: !18305)
!18330 = !DILocalVariable(name: "src_stride", arg: 4, scope: !18305, file: !13243, line: 41, type: !50)
!18331 = !DILocation(line: 41, column: 59, scope: !18305)
!18332 = !DILocalVariable(name: "w", arg: 5, scope: !18305, file: !13243, line: 42, type: !52)
!18333 = !DILocation(line: 42, column: 29, scope: !18305)
!18334 = !DILocalVariable(name: "h", arg: 6, scope: !18305, file: !13243, line: 42, type: !52)
!18335 = !DILocation(line: 42, column: 36, scope: !18305)
!18336 = !DILocalVariable(name: "c", arg: 7, scope: !18305, file: !13243, line: 42, type: !53)
!18337 = !DILocation(line: 42, column: 53, scope: !18305)
!18338 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !18305, file: !13243, line: 43, type: !84)
!18339 = !DILocation(line: 43, column: 39, scope: !18305)
!18340 = !DILocalVariable(name: "dst", scope: !18305, file: !13243, line: 45, type: !22)
!18341 = !DILocation(line: 45, column: 16, scope: !18305)
!18342 = !DILocation(line: 45, column: 36, scope: !18305)
!18343 = !DILocation(line: 45, column: 22, scope: !18305)
!18344 = !DILocalVariable(name: "src", scope: !18305, file: !13243, line: 46, type: !22)
!18345 = !DILocation(line: 46, column: 16, scope: !18305)
!18346 = !DILocation(line: 46, column: 36, scope: !18305)
!18347 = !DILocation(line: 46, column: 22, scope: !18305)
!18348 = !DILocalVariable(name: "src0", scope: !18305, file: !13243, line: 47, type: !1418)
!18349 = !DILocation(line: 47, column: 21, scope: !18305)
!18350 = !DILocation(line: 47, column: 28, scope: !18305)
!18351 = !DILocalVariable(name: "src1", scope: !18305, file: !13243, line: 47, type: !1418)
!18352 = !DILocation(line: 47, column: 37, scope: !18305)
!18353 = !DILocation(line: 47, column: 44, scope: !18305)
!18354 = !DILocalVariable(name: "src2", scope: !18305, file: !13243, line: 47, type: !1418)
!18355 = !DILocation(line: 47, column: 53, scope: !18305)
!18356 = !DILocation(line: 47, column: 60, scope: !18305)
!18357 = !DILocalVariable(name: "dst0", scope: !18305, file: !13243, line: 48, type: !23)
!18358 = !DILocation(line: 48, column: 15, scope: !18305)
!18359 = !DILocation(line: 48, column: 22, scope: !18305)
!18360 = !DILocalVariable(name: "dst1", scope: !18305, file: !13243, line: 48, type: !23)
!18361 = !DILocation(line: 48, column: 31, scope: !18305)
!18362 = !DILocation(line: 48, column: 38, scope: !18305)
!18363 = !DILocalVariable(name: "dst2", scope: !18305, file: !13243, line: 48, type: !23)
!18364 = !DILocation(line: 48, column: 47, scope: !18305)
!18365 = !DILocation(line: 48, column: 54, scope: !18305)
!18366 = !DILocalVariable(name: "y", scope: !18305, file: !13243, line: 49, type: !52)
!18367 = !DILocation(line: 49, column: 9, scope: !18305)
!18368 = !DILocalVariable(name: "x", scope: !18305, file: !13243, line: 49, type: !52)
!18369 = !DILocation(line: 49, column: 12, scope: !18305)
!18370 = !DILocalVariable(name: "sh", scope: !18305, file: !13243, line: 50, type: !343)
!18371 = !DILocation(line: 50, column: 15, scope: !18305)
!18372 = !DILocalVariable(name: "rnd", scope: !18305, file: !13243, line: 51, type: !343)
!18373 = !DILocation(line: 51, column: 15, scope: !18305)
!18374 = !DILocalVariable(name: "y_off_in", scope: !18305, file: !13243, line: 52, type: !52)
!18375 = !DILocation(line: 52, column: 9, scope: !18305)
!18376 = !DILocation(line: 52, column: 20, scope: !18305)
!18377 = !DILocalVariable(name: "y_off_out", scope: !18305, file: !13243, line: 53, type: !52)
!18378 = !DILocation(line: 53, column: 9, scope: !18305)
!18379 = !DILocation(line: 53, column: 21, scope: !18305)
!18380 = !DILocation(line: 53, column: 38, scope: !18305)
!18381 = !DILocalVariable(name: "uv_off_in", scope: !18305, file: !13243, line: 54, type: !343)
!18382 = !DILocation(line: 54, column: 15, scope: !18305)
!18383 = !DILocalVariable(name: "uv_off_out", scope: !18305, file: !13243, line: 55, type: !343)
!18384 = !DILocation(line: 55, column: 15, scope: !18305)
!18385 = !DILocalVariable(name: "cyy", scope: !18305, file: !13243, line: 56, type: !52)
!18386 = !DILocation(line: 56, column: 9, scope: !18305)
!18387 = !DILocation(line: 56, column: 15, scope: !18305)
!18388 = !DILocalVariable(name: "cyu", scope: !18305, file: !13243, line: 56, type: !52)
!18389 = !DILocation(line: 56, column: 27, scope: !18305)
!18390 = !DILocation(line: 56, column: 33, scope: !18305)
!18391 = !DILocalVariable(name: "cyv", scope: !18305, file: !13243, line: 56, type: !52)
!18392 = !DILocation(line: 56, column: 45, scope: !18305)
!18393 = !DILocation(line: 56, column: 51, scope: !18305)
!18394 = !DILocalVariable(name: "cuu", scope: !18305, file: !13243, line: 57, type: !52)
!18395 = !DILocation(line: 57, column: 9, scope: !18305)
!18396 = !DILocation(line: 57, column: 15, scope: !18305)
!18397 = !DILocalVariable(name: "cuv", scope: !18305, file: !13243, line: 57, type: !52)
!18398 = !DILocation(line: 57, column: 27, scope: !18305)
!18399 = !DILocation(line: 57, column: 33, scope: !18305)
!18400 = !DILocalVariable(name: "cvu", scope: !18305, file: !13243, line: 57, type: !52)
!18401 = !DILocation(line: 57, column: 45, scope: !18305)
!18402 = !DILocation(line: 57, column: 51, scope: !18305)
!18403 = !DILocalVariable(name: "cvv", scope: !18305, file: !13243, line: 57, type: !52)
!18404 = !DILocation(line: 57, column: 63, scope: !18305)
!18405 = !DILocation(line: 57, column: 69, scope: !18305)
!18406 = !DILocation(line: 61, column: 58, scope: !18305)
!18407 = !DILocation(line: 61, column: 61, scope: !18305)
!18408 = !DILocation(line: 61, column: 72, scope: !18305)
!18409 = !DILocation(line: 61, column: 77, scope: !18305)
!18410 = !DILocation(line: 61, column: 7, scope: !18305)
!18411 = !DILocation(line: 62, column: 58, scope: !18305)
!18412 = !DILocation(line: 62, column: 61, scope: !18305)
!18413 = !DILocation(line: 62, column: 72, scope: !18305)
!18414 = !DILocation(line: 62, column: 77, scope: !18305)
!18415 = !DILocation(line: 62, column: 7, scope: !18305)
!18416 = !DILocation(line: 63, column: 12, scope: !18313)
!18417 = !DILocation(line: 63, column: 10, scope: !18313)
!18418 = !DILocation(line: 63, column: 17, scope: !18419)
!18419 = !DILexicalBlockFile(scope: !18312, file: !13243, discriminator: 1)
!18420 = !DILocation(line: 63, column: 21, scope: !18419)
!18421 = !DILocation(line: 63, column: 19, scope: !18419)
!18422 = !DILocation(line: 63, column: 5, scope: !18419)
!18423 = !DILocation(line: 64, column: 16, scope: !18310)
!18424 = !DILocation(line: 64, column: 14, scope: !18310)
!18425 = !DILocation(line: 64, column: 21, scope: !18426)
!18426 = !DILexicalBlockFile(scope: !18309, file: !13243, discriminator: 1)
!18427 = !DILocation(line: 64, column: 25, scope: !18426)
!18428 = !DILocation(line: 64, column: 23, scope: !18426)
!18429 = !DILocation(line: 64, column: 9, scope: !18426)
!18430 = !DILocalVariable(name: "y00", scope: !18308, file: !13243, line: 65, type: !52)
!18431 = !DILocation(line: 65, column: 17, scope: !18308)
!18432 = !DILocation(line: 65, column: 28, scope: !18308)
!18433 = !DILocation(line: 65, column: 30, scope: !18308)
!18434 = !DILocation(line: 65, column: 23, scope: !18308)
!18435 = !DILocation(line: 65, column: 38, scope: !18308)
!18436 = !DILocation(line: 65, column: 36, scope: !18308)
!18437 = !DILocalVariable(name: "y01", scope: !18308, file: !13243, line: 67, type: !52)
!18438 = !DILocation(line: 67, column: 17, scope: !18308)
!18439 = !DILocation(line: 67, column: 32, scope: !18308)
!18440 = !DILocation(line: 67, column: 30, scope: !18308)
!18441 = !DILocation(line: 67, column: 34, scope: !18308)
!18442 = !DILocation(line: 67, column: 23, scope: !18308)
!18443 = !DILocation(line: 67, column: 41, scope: !18308)
!18444 = !DILocation(line: 67, column: 39, scope: !18308)
!18445 = !DILocalVariable(name: "u", scope: !18308, file: !13243, line: 73, type: !52)
!18446 = !DILocation(line: 73, column: 17, scope: !18308)
!18447 = !DILocation(line: 73, column: 26, scope: !18308)
!18448 = !DILocation(line: 73, column: 21, scope: !18308)
!18449 = !DILocation(line: 73, column: 29, scope: !18308)
!18450 = !DILocalVariable(name: "v", scope: !18308, file: !13243, line: 73, type: !52)
!18451 = !DILocation(line: 73, column: 42, scope: !18308)
!18452 = !DILocation(line: 73, column: 51, scope: !18308)
!18453 = !DILocation(line: 73, column: 46, scope: !18308)
!18454 = !DILocation(line: 73, column: 54, scope: !18308)
!18455 = !DILocalVariable(name: "uv_val", scope: !18308, file: !13243, line: 74, type: !52)
!18456 = !DILocation(line: 74, column: 17, scope: !18308)
!18457 = !DILocation(line: 74, column: 26, scope: !18308)
!18458 = !DILocation(line: 74, column: 32, scope: !18308)
!18459 = !DILocation(line: 74, column: 30, scope: !18308)
!18460 = !DILocation(line: 74, column: 36, scope: !18308)
!18461 = !DILocation(line: 74, column: 42, scope: !18308)
!18462 = !DILocation(line: 74, column: 40, scope: !18308)
!18463 = !DILocation(line: 74, column: 34, scope: !18308)
!18464 = !DILocation(line: 74, column: 44, scope: !18308)
!18465 = !DILocation(line: 74, column: 52, scope: !18308)
!18466 = !DILocation(line: 74, column: 50, scope: !18308)
!18467 = !DILocation(line: 76, column: 46, scope: !18308)
!18468 = !DILocation(line: 76, column: 52, scope: !18308)
!18469 = !DILocation(line: 76, column: 50, scope: !18308)
!18470 = !DILocation(line: 76, column: 58, scope: !18308)
!18471 = !DILocation(line: 76, column: 56, scope: !18308)
!18472 = !DILocation(line: 76, column: 66, scope: !18308)
!18473 = !DILocation(line: 76, column: 28, scope: !18308)
!18474 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18322)
!18475 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18322)
!18476 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18322)
!18477 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18322)
!18478 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18322)
!18479 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18322)
!18480 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18322)
!18481 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18322)
!18482 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18322)
!18483 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18322)
!18484 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18322)
!18485 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18322)
!18486 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18322)
!18487 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18322)
!18488 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18322)
!18489 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18322)
!18490 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18322)
!18491 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18322)
!18492 = !DILocation(line: 76, column: 18, scope: !18308)
!18493 = !DILocation(line: 76, column: 20, scope: !18308)
!18494 = !DILocation(line: 76, column: 13, scope: !18308)
!18495 = !DILocation(line: 76, column: 26, scope: !18308)
!18496 = !DILocation(line: 78, column: 49, scope: !18308)
!18497 = !DILocation(line: 78, column: 55, scope: !18308)
!18498 = !DILocation(line: 78, column: 53, scope: !18308)
!18499 = !DILocation(line: 78, column: 61, scope: !18308)
!18500 = !DILocation(line: 78, column: 59, scope: !18308)
!18501 = !DILocation(line: 78, column: 69, scope: !18308)
!18502 = !DILocation(line: 78, column: 31, scope: !18308)
!18503 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18307)
!18504 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18307)
!18505 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18307)
!18506 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18307)
!18507 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18307)
!18508 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18307)
!18509 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18307)
!18510 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18307)
!18511 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18307)
!18512 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18307)
!18513 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18307)
!18514 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18307)
!18515 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18307)
!18516 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18307)
!18517 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18307)
!18518 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18307)
!18519 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18307)
!18520 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18307)
!18521 = !DILocation(line: 78, column: 18, scope: !18308)
!18522 = !DILocation(line: 78, column: 20, scope: !18308)
!18523 = !DILocation(line: 78, column: 24, scope: !18308)
!18524 = !DILocation(line: 78, column: 13, scope: !18308)
!18525 = !DILocation(line: 78, column: 29, scope: !18308)
!18526 = !DILocation(line: 87, column: 41, scope: !18308)
!18527 = !DILocation(line: 87, column: 45, scope: !18308)
!18528 = !DILocation(line: 87, column: 43, scope: !18308)
!18529 = !DILocation(line: 87, column: 51, scope: !18308)
!18530 = !DILocation(line: 87, column: 55, scope: !18308)
!18531 = !DILocation(line: 87, column: 53, scope: !18308)
!18532 = !DILocation(line: 87, column: 49, scope: !18308)
!18533 = !DILocation(line: 87, column: 59, scope: !18308)
!18534 = !DILocation(line: 87, column: 73, scope: !18308)
!18535 = !DILocation(line: 87, column: 23, scope: !18308)
!18536 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18316)
!18537 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18316)
!18538 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18316)
!18539 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18316)
!18540 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18316)
!18541 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18316)
!18542 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18316)
!18543 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18316)
!18544 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18316)
!18545 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18316)
!18546 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18316)
!18547 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18316)
!18548 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18316)
!18549 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18316)
!18550 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18316)
!18551 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18316)
!18552 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18316)
!18553 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18316)
!18554 = !DILocation(line: 87, column: 18, scope: !18308)
!18555 = !DILocation(line: 87, column: 13, scope: !18308)
!18556 = !DILocation(line: 87, column: 21, scope: !18308)
!18557 = !DILocation(line: 88, column: 41, scope: !18308)
!18558 = !DILocation(line: 88, column: 45, scope: !18308)
!18559 = !DILocation(line: 88, column: 43, scope: !18308)
!18560 = !DILocation(line: 88, column: 51, scope: !18308)
!18561 = !DILocation(line: 88, column: 55, scope: !18308)
!18562 = !DILocation(line: 88, column: 53, scope: !18308)
!18563 = !DILocation(line: 88, column: 49, scope: !18308)
!18564 = !DILocation(line: 88, column: 59, scope: !18308)
!18565 = !DILocation(line: 88, column: 73, scope: !18308)
!18566 = !DILocation(line: 88, column: 23, scope: !18308)
!18567 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18319)
!18568 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18319)
!18569 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18319)
!18570 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18319)
!18571 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18319)
!18572 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18319)
!18573 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18319)
!18574 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18319)
!18575 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18319)
!18576 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18319)
!18577 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18319)
!18578 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18319)
!18579 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18319)
!18580 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18319)
!18581 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18319)
!18582 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18319)
!18583 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18319)
!18584 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18319)
!18585 = !DILocation(line: 88, column: 18, scope: !18308)
!18586 = !DILocation(line: 88, column: 13, scope: !18308)
!18587 = !DILocation(line: 88, column: 21, scope: !18308)
!18588 = !DILocation(line: 89, column: 9, scope: !18308)
!18589 = !DILocation(line: 64, column: 29, scope: !18590)
!18590 = !DILexicalBlockFile(scope: !18309, file: !13243, discriminator: 2)
!18591 = !DILocation(line: 64, column: 9, scope: !18590)
!18592 = distinct !{!18592, !18593}
!18593 = !DILocation(line: 64, column: 9, scope: !18311)
!18594 = !DILocation(line: 91, column: 18, scope: !18311)
!18595 = !DILocation(line: 91, column: 32, scope: !18311)
!18596 = !DILocation(line: 91, column: 44, scope: !18311)
!18597 = !DILocation(line: 91, column: 14, scope: !18311)
!18598 = !DILocation(line: 92, column: 17, scope: !18311)
!18599 = !DILocation(line: 92, column: 31, scope: !18311)
!18600 = !DILocation(line: 92, column: 14, scope: !18311)
!18601 = !DILocation(line: 93, column: 17, scope: !18311)
!18602 = !DILocation(line: 93, column: 31, scope: !18311)
!18603 = !DILocation(line: 93, column: 14, scope: !18311)
!18604 = !DILocation(line: 94, column: 18, scope: !18311)
!18605 = !DILocation(line: 94, column: 32, scope: !18311)
!18606 = !DILocation(line: 94, column: 44, scope: !18311)
!18607 = !DILocation(line: 94, column: 14, scope: !18311)
!18608 = !DILocation(line: 95, column: 17, scope: !18311)
!18609 = !DILocation(line: 95, column: 31, scope: !18311)
!18610 = !DILocation(line: 95, column: 14, scope: !18311)
!18611 = !DILocation(line: 96, column: 17, scope: !18311)
!18612 = !DILocation(line: 96, column: 31, scope: !18311)
!18613 = !DILocation(line: 96, column: 14, scope: !18311)
!18614 = !DILocation(line: 97, column: 5, scope: !18311)
!18615 = !DILocation(line: 63, column: 25, scope: !18616)
!18616 = !DILexicalBlockFile(scope: !18312, file: !13243, discriminator: 2)
!18617 = !DILocation(line: 63, column: 5, scope: !18616)
!18618 = distinct !{!18618, !18619}
!18619 = !DILocation(line: 63, column: 5, scope: !18305)
!18620 = !DILocation(line: 98, column: 1, scope: !18305)
!18621 = distinct !DISubprogram(name: "yuv2yuv_420p10to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!18622 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18623)
!18623 = distinct !DILocation(line: 78, column: 31, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18625, file: !13243, line: 64, column: 33)
!18625 = distinct !DILexicalBlock(scope: !18626, file: !13243, line: 64, column: 9)
!18626 = distinct !DILexicalBlock(scope: !18627, file: !13243, line: 64, column: 9)
!18627 = distinct !DILexicalBlock(scope: !18628, file: !13243, line: 63, column: 29)
!18628 = distinct !DILexicalBlock(scope: !18629, file: !13243, line: 63, column: 5)
!18629 = distinct !DILexicalBlock(scope: !18621, file: !13243, line: 63, column: 5)
!18630 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18623)
!18631 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18632)
!18632 = distinct !DILocation(line: 81, column: 31, scope: !18624)
!18633 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18632)
!18634 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18635)
!18635 = distinct !DILocation(line: 83, column: 31, scope: !18624)
!18636 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18635)
!18637 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18638)
!18638 = distinct !DILocation(line: 87, column: 23, scope: !18624)
!18639 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18638)
!18640 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18641)
!18641 = distinct !DILocation(line: 88, column: 23, scope: !18624)
!18642 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18641)
!18643 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !18644)
!18644 = distinct !DILocation(line: 76, column: 28, scope: !18624)
!18645 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !18644)
!18646 = !DILocalVariable(name: "_dst", arg: 1, scope: !18621, file: !13243, line: 40, type: !17)
!18647 = !DILocation(line: 40, column: 43, scope: !18621)
!18648 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !18621, file: !13243, line: 40, type: !50)
!18649 = !DILocation(line: 40, column: 68, scope: !18621)
!18650 = !DILocalVariable(name: "_src", arg: 3, scope: !18621, file: !13243, line: 41, type: !17)
!18651 = !DILocation(line: 41, column: 34, scope: !18621)
!18652 = !DILocalVariable(name: "src_stride", arg: 4, scope: !18621, file: !13243, line: 41, type: !50)
!18653 = !DILocation(line: 41, column: 59, scope: !18621)
!18654 = !DILocalVariable(name: "w", arg: 5, scope: !18621, file: !13243, line: 42, type: !52)
!18655 = !DILocation(line: 42, column: 29, scope: !18621)
!18656 = !DILocalVariable(name: "h", arg: 6, scope: !18621, file: !13243, line: 42, type: !52)
!18657 = !DILocation(line: 42, column: 36, scope: !18621)
!18658 = !DILocalVariable(name: "c", arg: 7, scope: !18621, file: !13243, line: 42, type: !53)
!18659 = !DILocation(line: 42, column: 53, scope: !18621)
!18660 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !18621, file: !13243, line: 43, type: !84)
!18661 = !DILocation(line: 43, column: 39, scope: !18621)
!18662 = !DILocalVariable(name: "dst", scope: !18621, file: !13243, line: 45, type: !22)
!18663 = !DILocation(line: 45, column: 16, scope: !18621)
!18664 = !DILocation(line: 45, column: 36, scope: !18621)
!18665 = !DILocation(line: 45, column: 22, scope: !18621)
!18666 = !DILocalVariable(name: "src", scope: !18621, file: !13243, line: 46, type: !22)
!18667 = !DILocation(line: 46, column: 16, scope: !18621)
!18668 = !DILocation(line: 46, column: 36, scope: !18621)
!18669 = !DILocation(line: 46, column: 22, scope: !18621)
!18670 = !DILocalVariable(name: "src0", scope: !18621, file: !13243, line: 47, type: !1418)
!18671 = !DILocation(line: 47, column: 21, scope: !18621)
!18672 = !DILocation(line: 47, column: 28, scope: !18621)
!18673 = !DILocalVariable(name: "src1", scope: !18621, file: !13243, line: 47, type: !1418)
!18674 = !DILocation(line: 47, column: 37, scope: !18621)
!18675 = !DILocation(line: 47, column: 44, scope: !18621)
!18676 = !DILocalVariable(name: "src2", scope: !18621, file: !13243, line: 47, type: !1418)
!18677 = !DILocation(line: 47, column: 53, scope: !18621)
!18678 = !DILocation(line: 47, column: 60, scope: !18621)
!18679 = !DILocalVariable(name: "dst0", scope: !18621, file: !13243, line: 48, type: !23)
!18680 = !DILocation(line: 48, column: 15, scope: !18621)
!18681 = !DILocation(line: 48, column: 22, scope: !18621)
!18682 = !DILocalVariable(name: "dst1", scope: !18621, file: !13243, line: 48, type: !23)
!18683 = !DILocation(line: 48, column: 31, scope: !18621)
!18684 = !DILocation(line: 48, column: 38, scope: !18621)
!18685 = !DILocalVariable(name: "dst2", scope: !18621, file: !13243, line: 48, type: !23)
!18686 = !DILocation(line: 48, column: 47, scope: !18621)
!18687 = !DILocation(line: 48, column: 54, scope: !18621)
!18688 = !DILocalVariable(name: "y", scope: !18621, file: !13243, line: 49, type: !52)
!18689 = !DILocation(line: 49, column: 9, scope: !18621)
!18690 = !DILocalVariable(name: "x", scope: !18621, file: !13243, line: 49, type: !52)
!18691 = !DILocation(line: 49, column: 12, scope: !18621)
!18692 = !DILocalVariable(name: "sh", scope: !18621, file: !13243, line: 50, type: !343)
!18693 = !DILocation(line: 50, column: 15, scope: !18621)
!18694 = !DILocalVariable(name: "rnd", scope: !18621, file: !13243, line: 51, type: !343)
!18695 = !DILocation(line: 51, column: 15, scope: !18621)
!18696 = !DILocalVariable(name: "y_off_in", scope: !18621, file: !13243, line: 52, type: !52)
!18697 = !DILocation(line: 52, column: 9, scope: !18621)
!18698 = !DILocation(line: 52, column: 20, scope: !18621)
!18699 = !DILocalVariable(name: "y_off_out", scope: !18621, file: !13243, line: 53, type: !52)
!18700 = !DILocation(line: 53, column: 9, scope: !18621)
!18701 = !DILocation(line: 53, column: 21, scope: !18621)
!18702 = !DILocation(line: 53, column: 38, scope: !18621)
!18703 = !DILocalVariable(name: "uv_off_in", scope: !18621, file: !13243, line: 54, type: !343)
!18704 = !DILocation(line: 54, column: 15, scope: !18621)
!18705 = !DILocalVariable(name: "uv_off_out", scope: !18621, file: !13243, line: 55, type: !343)
!18706 = !DILocation(line: 55, column: 15, scope: !18621)
!18707 = !DILocalVariable(name: "cyy", scope: !18621, file: !13243, line: 56, type: !52)
!18708 = !DILocation(line: 56, column: 9, scope: !18621)
!18709 = !DILocation(line: 56, column: 15, scope: !18621)
!18710 = !DILocalVariable(name: "cyu", scope: !18621, file: !13243, line: 56, type: !52)
!18711 = !DILocation(line: 56, column: 27, scope: !18621)
!18712 = !DILocation(line: 56, column: 33, scope: !18621)
!18713 = !DILocalVariable(name: "cyv", scope: !18621, file: !13243, line: 56, type: !52)
!18714 = !DILocation(line: 56, column: 45, scope: !18621)
!18715 = !DILocation(line: 56, column: 51, scope: !18621)
!18716 = !DILocalVariable(name: "cuu", scope: !18621, file: !13243, line: 57, type: !52)
!18717 = !DILocation(line: 57, column: 9, scope: !18621)
!18718 = !DILocation(line: 57, column: 15, scope: !18621)
!18719 = !DILocalVariable(name: "cuv", scope: !18621, file: !13243, line: 57, type: !52)
!18720 = !DILocation(line: 57, column: 27, scope: !18621)
!18721 = !DILocation(line: 57, column: 33, scope: !18621)
!18722 = !DILocalVariable(name: "cvu", scope: !18621, file: !13243, line: 57, type: !52)
!18723 = !DILocation(line: 57, column: 45, scope: !18621)
!18724 = !DILocation(line: 57, column: 51, scope: !18621)
!18725 = !DILocalVariable(name: "cvv", scope: !18621, file: !13243, line: 57, type: !52)
!18726 = !DILocation(line: 57, column: 63, scope: !18621)
!18727 = !DILocation(line: 57, column: 69, scope: !18621)
!18728 = !DILocation(line: 61, column: 58, scope: !18621)
!18729 = !DILocation(line: 61, column: 61, scope: !18621)
!18730 = !DILocation(line: 61, column: 72, scope: !18621)
!18731 = !DILocation(line: 61, column: 77, scope: !18621)
!18732 = !DILocation(line: 61, column: 7, scope: !18621)
!18733 = !DILocation(line: 62, column: 58, scope: !18621)
!18734 = !DILocation(line: 62, column: 61, scope: !18621)
!18735 = !DILocation(line: 62, column: 72, scope: !18621)
!18736 = !DILocation(line: 62, column: 77, scope: !18621)
!18737 = !DILocation(line: 62, column: 7, scope: !18621)
!18738 = !DILocation(line: 63, column: 12, scope: !18629)
!18739 = !DILocation(line: 63, column: 10, scope: !18629)
!18740 = !DILocation(line: 63, column: 17, scope: !18741)
!18741 = !DILexicalBlockFile(scope: !18628, file: !13243, discriminator: 1)
!18742 = !DILocation(line: 63, column: 21, scope: !18741)
!18743 = !DILocation(line: 63, column: 19, scope: !18741)
!18744 = !DILocation(line: 63, column: 5, scope: !18741)
!18745 = !DILocation(line: 64, column: 16, scope: !18626)
!18746 = !DILocation(line: 64, column: 14, scope: !18626)
!18747 = !DILocation(line: 64, column: 21, scope: !18748)
!18748 = !DILexicalBlockFile(scope: !18625, file: !13243, discriminator: 1)
!18749 = !DILocation(line: 64, column: 25, scope: !18748)
!18750 = !DILocation(line: 64, column: 23, scope: !18748)
!18751 = !DILocation(line: 64, column: 9, scope: !18748)
!18752 = !DILocalVariable(name: "y00", scope: !18624, file: !13243, line: 65, type: !52)
!18753 = !DILocation(line: 65, column: 17, scope: !18624)
!18754 = !DILocation(line: 65, column: 28, scope: !18624)
!18755 = !DILocation(line: 65, column: 30, scope: !18624)
!18756 = !DILocation(line: 65, column: 23, scope: !18624)
!18757 = !DILocation(line: 65, column: 38, scope: !18624)
!18758 = !DILocation(line: 65, column: 36, scope: !18624)
!18759 = !DILocalVariable(name: "y01", scope: !18624, file: !13243, line: 67, type: !52)
!18760 = !DILocation(line: 67, column: 17, scope: !18624)
!18761 = !DILocation(line: 67, column: 32, scope: !18624)
!18762 = !DILocation(line: 67, column: 30, scope: !18624)
!18763 = !DILocation(line: 67, column: 34, scope: !18624)
!18764 = !DILocation(line: 67, column: 23, scope: !18624)
!18765 = !DILocation(line: 67, column: 41, scope: !18624)
!18766 = !DILocation(line: 67, column: 39, scope: !18624)
!18767 = !DILocalVariable(name: "y10", scope: !18624, file: !13243, line: 69, type: !52)
!18768 = !DILocation(line: 69, column: 17, scope: !18624)
!18769 = !DILocation(line: 69, column: 28, scope: !18624)
!18770 = !DILocation(line: 69, column: 42, scope: !18624)
!18771 = !DILocation(line: 69, column: 67, scope: !18624)
!18772 = !DILocation(line: 69, column: 65, scope: !18624)
!18773 = !DILocation(line: 69, column: 63, scope: !18624)
!18774 = !DILocation(line: 69, column: 61, scope: !18624)
!18775 = !DILocation(line: 69, column: 23, scope: !18624)
!18776 = !DILocation(line: 69, column: 72, scope: !18624)
!18777 = !DILocation(line: 69, column: 70, scope: !18624)
!18778 = !DILocalVariable(name: "y11", scope: !18624, file: !13243, line: 70, type: !52)
!18779 = !DILocation(line: 70, column: 17, scope: !18624)
!18780 = !DILocation(line: 70, column: 28, scope: !18624)
!18781 = !DILocation(line: 70, column: 42, scope: !18624)
!18782 = !DILocation(line: 70, column: 67, scope: !18624)
!18783 = !DILocation(line: 70, column: 65, scope: !18624)
!18784 = !DILocation(line: 70, column: 63, scope: !18624)
!18785 = !DILocation(line: 70, column: 61, scope: !18624)
!18786 = !DILocation(line: 70, column: 69, scope: !18624)
!18787 = !DILocation(line: 70, column: 23, scope: !18624)
!18788 = !DILocation(line: 70, column: 76, scope: !18624)
!18789 = !DILocation(line: 70, column: 74, scope: !18624)
!18790 = !DILocalVariable(name: "u", scope: !18624, file: !13243, line: 73, type: !52)
!18791 = !DILocation(line: 73, column: 17, scope: !18624)
!18792 = !DILocation(line: 73, column: 26, scope: !18624)
!18793 = !DILocation(line: 73, column: 21, scope: !18624)
!18794 = !DILocation(line: 73, column: 29, scope: !18624)
!18795 = !DILocalVariable(name: "v", scope: !18624, file: !13243, line: 73, type: !52)
!18796 = !DILocation(line: 73, column: 42, scope: !18624)
!18797 = !DILocation(line: 73, column: 51, scope: !18624)
!18798 = !DILocation(line: 73, column: 46, scope: !18624)
!18799 = !DILocation(line: 73, column: 54, scope: !18624)
!18800 = !DILocalVariable(name: "uv_val", scope: !18624, file: !13243, line: 74, type: !52)
!18801 = !DILocation(line: 74, column: 17, scope: !18624)
!18802 = !DILocation(line: 74, column: 26, scope: !18624)
!18803 = !DILocation(line: 74, column: 32, scope: !18624)
!18804 = !DILocation(line: 74, column: 30, scope: !18624)
!18805 = !DILocation(line: 74, column: 36, scope: !18624)
!18806 = !DILocation(line: 74, column: 42, scope: !18624)
!18807 = !DILocation(line: 74, column: 40, scope: !18624)
!18808 = !DILocation(line: 74, column: 34, scope: !18624)
!18809 = !DILocation(line: 74, column: 44, scope: !18624)
!18810 = !DILocation(line: 74, column: 52, scope: !18624)
!18811 = !DILocation(line: 74, column: 50, scope: !18624)
!18812 = !DILocation(line: 76, column: 46, scope: !18624)
!18813 = !DILocation(line: 76, column: 52, scope: !18624)
!18814 = !DILocation(line: 76, column: 50, scope: !18624)
!18815 = !DILocation(line: 76, column: 58, scope: !18624)
!18816 = !DILocation(line: 76, column: 56, scope: !18624)
!18817 = !DILocation(line: 76, column: 66, scope: !18624)
!18818 = !DILocation(line: 76, column: 28, scope: !18624)
!18819 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18644)
!18820 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18644)
!18821 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18644)
!18822 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18644)
!18823 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18644)
!18824 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18644)
!18825 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18644)
!18826 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18644)
!18827 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18644)
!18828 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18644)
!18829 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18644)
!18830 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18644)
!18831 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18644)
!18832 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18644)
!18833 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18644)
!18834 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18644)
!18835 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18644)
!18836 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18644)
!18837 = !DILocation(line: 76, column: 18, scope: !18624)
!18838 = !DILocation(line: 76, column: 20, scope: !18624)
!18839 = !DILocation(line: 76, column: 13, scope: !18624)
!18840 = !DILocation(line: 76, column: 26, scope: !18624)
!18841 = !DILocation(line: 78, column: 49, scope: !18624)
!18842 = !DILocation(line: 78, column: 55, scope: !18624)
!18843 = !DILocation(line: 78, column: 53, scope: !18624)
!18844 = !DILocation(line: 78, column: 61, scope: !18624)
!18845 = !DILocation(line: 78, column: 59, scope: !18624)
!18846 = !DILocation(line: 78, column: 69, scope: !18624)
!18847 = !DILocation(line: 78, column: 31, scope: !18624)
!18848 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18623)
!18849 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18623)
!18850 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18623)
!18851 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18623)
!18852 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18623)
!18853 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18623)
!18854 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18623)
!18855 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18623)
!18856 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18623)
!18857 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18623)
!18858 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18623)
!18859 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18623)
!18860 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18623)
!18861 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18623)
!18862 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18623)
!18863 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18623)
!18864 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18623)
!18865 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18623)
!18866 = !DILocation(line: 78, column: 18, scope: !18624)
!18867 = !DILocation(line: 78, column: 20, scope: !18624)
!18868 = !DILocation(line: 78, column: 24, scope: !18624)
!18869 = !DILocation(line: 78, column: 13, scope: !18624)
!18870 = !DILocation(line: 78, column: 29, scope: !18624)
!18871 = !DILocation(line: 81, column: 49, scope: !18624)
!18872 = !DILocation(line: 81, column: 55, scope: !18624)
!18873 = !DILocation(line: 81, column: 53, scope: !18624)
!18874 = !DILocation(line: 81, column: 61, scope: !18624)
!18875 = !DILocation(line: 81, column: 59, scope: !18624)
!18876 = !DILocation(line: 81, column: 69, scope: !18624)
!18877 = !DILocation(line: 81, column: 31, scope: !18624)
!18878 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18632)
!18879 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18632)
!18880 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18632)
!18881 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18632)
!18882 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18632)
!18883 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18632)
!18884 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18632)
!18885 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18632)
!18886 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18632)
!18887 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18632)
!18888 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18632)
!18889 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18632)
!18890 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18632)
!18891 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18632)
!18892 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18632)
!18893 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18632)
!18894 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18632)
!18895 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18632)
!18896 = !DILocation(line: 80, column: 18, scope: !18624)
!18897 = !DILocation(line: 80, column: 20, scope: !18624)
!18898 = !DILocation(line: 80, column: 24, scope: !18624)
!18899 = !DILocation(line: 80, column: 30, scope: !18624)
!18900 = !DILocation(line: 80, column: 44, scope: !18624)
!18901 = !DILocation(line: 80, column: 28, scope: !18624)
!18902 = !DILocation(line: 80, column: 13, scope: !18624)
!18903 = !DILocation(line: 80, column: 64, scope: !18624)
!18904 = !DILocation(line: 83, column: 49, scope: !18624)
!18905 = !DILocation(line: 83, column: 55, scope: !18624)
!18906 = !DILocation(line: 83, column: 53, scope: !18624)
!18907 = !DILocation(line: 83, column: 61, scope: !18624)
!18908 = !DILocation(line: 83, column: 59, scope: !18624)
!18909 = !DILocation(line: 83, column: 69, scope: !18624)
!18910 = !DILocation(line: 83, column: 31, scope: !18624)
!18911 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18635)
!18912 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18635)
!18913 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18635)
!18914 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18635)
!18915 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18635)
!18916 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18635)
!18917 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18635)
!18918 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18635)
!18919 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18635)
!18920 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18635)
!18921 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18635)
!18922 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18635)
!18923 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18635)
!18924 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18635)
!18925 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18635)
!18926 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18635)
!18927 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18635)
!18928 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18635)
!18929 = !DILocation(line: 82, column: 18, scope: !18624)
!18930 = !DILocation(line: 82, column: 20, scope: !18624)
!18931 = !DILocation(line: 82, column: 24, scope: !18624)
!18932 = !DILocation(line: 82, column: 30, scope: !18624)
!18933 = !DILocation(line: 82, column: 44, scope: !18624)
!18934 = !DILocation(line: 82, column: 28, scope: !18624)
!18935 = !DILocation(line: 82, column: 13, scope: !18624)
!18936 = !DILocation(line: 82, column: 64, scope: !18624)
!18937 = !DILocation(line: 87, column: 41, scope: !18624)
!18938 = !DILocation(line: 87, column: 45, scope: !18624)
!18939 = !DILocation(line: 87, column: 43, scope: !18624)
!18940 = !DILocation(line: 87, column: 51, scope: !18624)
!18941 = !DILocation(line: 87, column: 55, scope: !18624)
!18942 = !DILocation(line: 87, column: 53, scope: !18624)
!18943 = !DILocation(line: 87, column: 49, scope: !18624)
!18944 = !DILocation(line: 87, column: 59, scope: !18624)
!18945 = !DILocation(line: 87, column: 73, scope: !18624)
!18946 = !DILocation(line: 87, column: 23, scope: !18624)
!18947 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18638)
!18948 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18638)
!18949 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18638)
!18950 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18638)
!18951 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18638)
!18952 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18638)
!18953 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18638)
!18954 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18638)
!18955 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18638)
!18956 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18638)
!18957 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18638)
!18958 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18638)
!18959 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18638)
!18960 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18638)
!18961 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18638)
!18962 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18638)
!18963 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18638)
!18964 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18638)
!18965 = !DILocation(line: 87, column: 18, scope: !18624)
!18966 = !DILocation(line: 87, column: 13, scope: !18624)
!18967 = !DILocation(line: 87, column: 21, scope: !18624)
!18968 = !DILocation(line: 88, column: 41, scope: !18624)
!18969 = !DILocation(line: 88, column: 45, scope: !18624)
!18970 = !DILocation(line: 88, column: 43, scope: !18624)
!18971 = !DILocation(line: 88, column: 51, scope: !18624)
!18972 = !DILocation(line: 88, column: 55, scope: !18624)
!18973 = !DILocation(line: 88, column: 53, scope: !18624)
!18974 = !DILocation(line: 88, column: 49, scope: !18624)
!18975 = !DILocation(line: 88, column: 59, scope: !18624)
!18976 = !DILocation(line: 88, column: 73, scope: !18624)
!18977 = !DILocation(line: 88, column: 23, scope: !18624)
!18978 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !18641)
!18979 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !18641)
!18980 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !18641)
!18981 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !18641)
!18982 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !18641)
!18983 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !18641)
!18984 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !18641)
!18985 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !18641)
!18986 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !18641)
!18987 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !18641)
!18988 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !18641)
!18989 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !18641)
!18990 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !18641)
!18991 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !18641)
!18992 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !18641)
!18993 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !18641)
!18994 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !18641)
!18995 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !18641)
!18996 = !DILocation(line: 88, column: 18, scope: !18624)
!18997 = !DILocation(line: 88, column: 13, scope: !18624)
!18998 = !DILocation(line: 88, column: 21, scope: !18624)
!18999 = !DILocation(line: 89, column: 9, scope: !18624)
!19000 = !DILocation(line: 64, column: 29, scope: !19001)
!19001 = !DILexicalBlockFile(scope: !18625, file: !13243, discriminator: 2)
!19002 = !DILocation(line: 64, column: 9, scope: !19001)
!19003 = distinct !{!19003, !19004}
!19004 = !DILocation(line: 64, column: 9, scope: !18627)
!19005 = !DILocation(line: 91, column: 18, scope: !18627)
!19006 = !DILocation(line: 91, column: 32, scope: !18627)
!19007 = !DILocation(line: 91, column: 44, scope: !18627)
!19008 = !DILocation(line: 91, column: 14, scope: !18627)
!19009 = !DILocation(line: 92, column: 17, scope: !18627)
!19010 = !DILocation(line: 92, column: 31, scope: !18627)
!19011 = !DILocation(line: 92, column: 14, scope: !18627)
!19012 = !DILocation(line: 93, column: 17, scope: !18627)
!19013 = !DILocation(line: 93, column: 31, scope: !18627)
!19014 = !DILocation(line: 93, column: 14, scope: !18627)
!19015 = !DILocation(line: 94, column: 18, scope: !18627)
!19016 = !DILocation(line: 94, column: 32, scope: !18627)
!19017 = !DILocation(line: 94, column: 44, scope: !18627)
!19018 = !DILocation(line: 94, column: 14, scope: !18627)
!19019 = !DILocation(line: 95, column: 17, scope: !18627)
!19020 = !DILocation(line: 95, column: 31, scope: !18627)
!19021 = !DILocation(line: 95, column: 14, scope: !18627)
!19022 = !DILocation(line: 96, column: 17, scope: !18627)
!19023 = !DILocation(line: 96, column: 31, scope: !18627)
!19024 = !DILocation(line: 96, column: 14, scope: !18627)
!19025 = !DILocation(line: 97, column: 5, scope: !18627)
!19026 = !DILocation(line: 63, column: 25, scope: !19027)
!19027 = !DILexicalBlockFile(scope: !18628, file: !13243, discriminator: 2)
!19028 = !DILocation(line: 63, column: 5, scope: !19027)
!19029 = distinct !{!19029, !19030}
!19030 = !DILocation(line: 63, column: 5, scope: !18621)
!19031 = !DILocation(line: 98, column: 1, scope: !18621)
!19032 = distinct !DISubprogram(name: "yuv2yuv_444p12to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!19033 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19034)
!19034 = distinct !DILocation(line: 87, column: 23, scope: !19035)
!19035 = distinct !DILexicalBlock(scope: !19036, file: !13243, line: 64, column: 33)
!19036 = distinct !DILexicalBlock(scope: !19037, file: !13243, line: 64, column: 9)
!19037 = distinct !DILexicalBlock(scope: !19038, file: !13243, line: 64, column: 9)
!19038 = distinct !DILexicalBlock(scope: !19039, file: !13243, line: 63, column: 29)
!19039 = distinct !DILexicalBlock(scope: !19040, file: !13243, line: 63, column: 5)
!19040 = distinct !DILexicalBlock(scope: !19032, file: !13243, line: 63, column: 5)
!19041 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19042)
!19042 = distinct !DILocation(line: 88, column: 23, scope: !19035)
!19043 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19044)
!19044 = distinct !DILocation(line: 76, column: 28, scope: !19035)
!19045 = !DILocalVariable(name: "_dst", arg: 1, scope: !19032, file: !13243, line: 40, type: !17)
!19046 = !DILocation(line: 40, column: 42, scope: !19032)
!19047 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !19032, file: !13243, line: 40, type: !50)
!19048 = !DILocation(line: 40, column: 67, scope: !19032)
!19049 = !DILocalVariable(name: "_src", arg: 3, scope: !19032, file: !13243, line: 41, type: !17)
!19050 = !DILocation(line: 41, column: 34, scope: !19032)
!19051 = !DILocalVariable(name: "src_stride", arg: 4, scope: !19032, file: !13243, line: 41, type: !50)
!19052 = !DILocation(line: 41, column: 59, scope: !19032)
!19053 = !DILocalVariable(name: "w", arg: 5, scope: !19032, file: !13243, line: 42, type: !52)
!19054 = !DILocation(line: 42, column: 29, scope: !19032)
!19055 = !DILocalVariable(name: "h", arg: 6, scope: !19032, file: !13243, line: 42, type: !52)
!19056 = !DILocation(line: 42, column: 36, scope: !19032)
!19057 = !DILocalVariable(name: "c", arg: 7, scope: !19032, file: !13243, line: 42, type: !53)
!19058 = !DILocation(line: 42, column: 53, scope: !19032)
!19059 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !19032, file: !13243, line: 43, type: !84)
!19060 = !DILocation(line: 43, column: 39, scope: !19032)
!19061 = !DILocalVariable(name: "dst", scope: !19032, file: !13243, line: 45, type: !17)
!19062 = !DILocation(line: 45, column: 15, scope: !19032)
!19063 = !DILocation(line: 45, column: 34, scope: !19032)
!19064 = !DILocalVariable(name: "src", scope: !19032, file: !13243, line: 46, type: !22)
!19065 = !DILocation(line: 46, column: 16, scope: !19032)
!19066 = !DILocation(line: 46, column: 36, scope: !19032)
!19067 = !DILocation(line: 46, column: 22, scope: !19032)
!19068 = !DILocalVariable(name: "src0", scope: !19032, file: !13243, line: 47, type: !1418)
!19069 = !DILocation(line: 47, column: 21, scope: !19032)
!19070 = !DILocation(line: 47, column: 28, scope: !19032)
!19071 = !DILocalVariable(name: "src1", scope: !19032, file: !13243, line: 47, type: !1418)
!19072 = !DILocation(line: 47, column: 37, scope: !19032)
!19073 = !DILocation(line: 47, column: 44, scope: !19032)
!19074 = !DILocalVariable(name: "src2", scope: !19032, file: !13243, line: 47, type: !1418)
!19075 = !DILocation(line: 47, column: 53, scope: !19032)
!19076 = !DILocation(line: 47, column: 60, scope: !19032)
!19077 = !DILocalVariable(name: "dst0", scope: !19032, file: !13243, line: 48, type: !18)
!19078 = !DILocation(line: 48, column: 14, scope: !19032)
!19079 = !DILocation(line: 48, column: 21, scope: !19032)
!19080 = !DILocalVariable(name: "dst1", scope: !19032, file: !13243, line: 48, type: !18)
!19081 = !DILocation(line: 48, column: 30, scope: !19032)
!19082 = !DILocation(line: 48, column: 37, scope: !19032)
!19083 = !DILocalVariable(name: "dst2", scope: !19032, file: !13243, line: 48, type: !18)
!19084 = !DILocation(line: 48, column: 46, scope: !19032)
!19085 = !DILocation(line: 48, column: 53, scope: !19032)
!19086 = !DILocalVariable(name: "y", scope: !19032, file: !13243, line: 49, type: !52)
!19087 = !DILocation(line: 49, column: 9, scope: !19032)
!19088 = !DILocalVariable(name: "x", scope: !19032, file: !13243, line: 49, type: !52)
!19089 = !DILocation(line: 49, column: 12, scope: !19032)
!19090 = !DILocalVariable(name: "sh", scope: !19032, file: !13243, line: 50, type: !343)
!19091 = !DILocation(line: 50, column: 15, scope: !19032)
!19092 = !DILocalVariable(name: "rnd", scope: !19032, file: !13243, line: 51, type: !343)
!19093 = !DILocation(line: 51, column: 15, scope: !19032)
!19094 = !DILocalVariable(name: "y_off_in", scope: !19032, file: !13243, line: 52, type: !52)
!19095 = !DILocation(line: 52, column: 9, scope: !19032)
!19096 = !DILocation(line: 52, column: 20, scope: !19032)
!19097 = !DILocalVariable(name: "y_off_out", scope: !19032, file: !13243, line: 53, type: !52)
!19098 = !DILocation(line: 53, column: 9, scope: !19032)
!19099 = !DILocation(line: 53, column: 21, scope: !19032)
!19100 = !DILocation(line: 53, column: 38, scope: !19032)
!19101 = !DILocalVariable(name: "uv_off_in", scope: !19032, file: !13243, line: 54, type: !343)
!19102 = !DILocation(line: 54, column: 15, scope: !19032)
!19103 = !DILocalVariable(name: "uv_off_out", scope: !19032, file: !13243, line: 55, type: !343)
!19104 = !DILocation(line: 55, column: 15, scope: !19032)
!19105 = !DILocalVariable(name: "cyy", scope: !19032, file: !13243, line: 56, type: !52)
!19106 = !DILocation(line: 56, column: 9, scope: !19032)
!19107 = !DILocation(line: 56, column: 15, scope: !19032)
!19108 = !DILocalVariable(name: "cyu", scope: !19032, file: !13243, line: 56, type: !52)
!19109 = !DILocation(line: 56, column: 27, scope: !19032)
!19110 = !DILocation(line: 56, column: 33, scope: !19032)
!19111 = !DILocalVariable(name: "cyv", scope: !19032, file: !13243, line: 56, type: !52)
!19112 = !DILocation(line: 56, column: 45, scope: !19032)
!19113 = !DILocation(line: 56, column: 51, scope: !19032)
!19114 = !DILocalVariable(name: "cuu", scope: !19032, file: !13243, line: 57, type: !52)
!19115 = !DILocation(line: 57, column: 9, scope: !19032)
!19116 = !DILocation(line: 57, column: 15, scope: !19032)
!19117 = !DILocalVariable(name: "cuv", scope: !19032, file: !13243, line: 57, type: !52)
!19118 = !DILocation(line: 57, column: 27, scope: !19032)
!19119 = !DILocation(line: 57, column: 33, scope: !19032)
!19120 = !DILocalVariable(name: "cvu", scope: !19032, file: !13243, line: 57, type: !52)
!19121 = !DILocation(line: 57, column: 45, scope: !19032)
!19122 = !DILocation(line: 57, column: 51, scope: !19032)
!19123 = !DILocalVariable(name: "cvv", scope: !19032, file: !13243, line: 57, type: !52)
!19124 = !DILocation(line: 57, column: 63, scope: !19032)
!19125 = !DILocation(line: 57, column: 69, scope: !19032)
!19126 = !DILocation(line: 61, column: 58, scope: !19032)
!19127 = !DILocation(line: 61, column: 61, scope: !19032)
!19128 = !DILocation(line: 61, column: 72, scope: !19032)
!19129 = !DILocation(line: 61, column: 77, scope: !19032)
!19130 = !DILocation(line: 61, column: 7, scope: !19032)
!19131 = !DILocation(line: 62, column: 58, scope: !19032)
!19132 = !DILocation(line: 62, column: 61, scope: !19032)
!19133 = !DILocation(line: 62, column: 72, scope: !19032)
!19134 = !DILocation(line: 62, column: 77, scope: !19032)
!19135 = !DILocation(line: 62, column: 7, scope: !19032)
!19136 = !DILocation(line: 63, column: 12, scope: !19040)
!19137 = !DILocation(line: 63, column: 10, scope: !19040)
!19138 = !DILocation(line: 63, column: 17, scope: !19139)
!19139 = !DILexicalBlockFile(scope: !19039, file: !13243, discriminator: 1)
!19140 = !DILocation(line: 63, column: 21, scope: !19139)
!19141 = !DILocation(line: 63, column: 19, scope: !19139)
!19142 = !DILocation(line: 63, column: 5, scope: !19139)
!19143 = !DILocation(line: 64, column: 16, scope: !19037)
!19144 = !DILocation(line: 64, column: 14, scope: !19037)
!19145 = !DILocation(line: 64, column: 21, scope: !19146)
!19146 = !DILexicalBlockFile(scope: !19036, file: !13243, discriminator: 1)
!19147 = !DILocation(line: 64, column: 25, scope: !19146)
!19148 = !DILocation(line: 64, column: 23, scope: !19146)
!19149 = !DILocation(line: 64, column: 9, scope: !19146)
!19150 = !DILocalVariable(name: "y00", scope: !19035, file: !13243, line: 65, type: !52)
!19151 = !DILocation(line: 65, column: 17, scope: !19035)
!19152 = !DILocation(line: 65, column: 28, scope: !19035)
!19153 = !DILocation(line: 65, column: 30, scope: !19035)
!19154 = !DILocation(line: 65, column: 23, scope: !19035)
!19155 = !DILocation(line: 65, column: 38, scope: !19035)
!19156 = !DILocation(line: 65, column: 36, scope: !19035)
!19157 = !DILocalVariable(name: "u", scope: !19035, file: !13243, line: 73, type: !52)
!19158 = !DILocation(line: 73, column: 17, scope: !19035)
!19159 = !DILocation(line: 73, column: 26, scope: !19035)
!19160 = !DILocation(line: 73, column: 21, scope: !19035)
!19161 = !DILocation(line: 73, column: 29, scope: !19035)
!19162 = !DILocalVariable(name: "v", scope: !19035, file: !13243, line: 73, type: !52)
!19163 = !DILocation(line: 73, column: 42, scope: !19035)
!19164 = !DILocation(line: 73, column: 51, scope: !19035)
!19165 = !DILocation(line: 73, column: 46, scope: !19035)
!19166 = !DILocation(line: 73, column: 54, scope: !19035)
!19167 = !DILocalVariable(name: "uv_val", scope: !19035, file: !13243, line: 74, type: !52)
!19168 = !DILocation(line: 74, column: 17, scope: !19035)
!19169 = !DILocation(line: 74, column: 26, scope: !19035)
!19170 = !DILocation(line: 74, column: 32, scope: !19035)
!19171 = !DILocation(line: 74, column: 30, scope: !19035)
!19172 = !DILocation(line: 74, column: 36, scope: !19035)
!19173 = !DILocation(line: 74, column: 42, scope: !19035)
!19174 = !DILocation(line: 74, column: 40, scope: !19035)
!19175 = !DILocation(line: 74, column: 34, scope: !19035)
!19176 = !DILocation(line: 74, column: 44, scope: !19035)
!19177 = !DILocation(line: 74, column: 52, scope: !19035)
!19178 = !DILocation(line: 74, column: 50, scope: !19035)
!19179 = !DILocation(line: 76, column: 45, scope: !19035)
!19180 = !DILocation(line: 76, column: 51, scope: !19035)
!19181 = !DILocation(line: 76, column: 49, scope: !19035)
!19182 = !DILocation(line: 76, column: 57, scope: !19035)
!19183 = !DILocation(line: 76, column: 55, scope: !19035)
!19184 = !DILocation(line: 76, column: 65, scope: !19035)
!19185 = !DILocation(line: 76, column: 28, scope: !19035)
!19186 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19044)
!19187 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19044)
!19188 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19044)
!19189 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19044)
!19190 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19044)
!19191 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19044)
!19192 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19044)
!19193 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19044)
!19194 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19044)
!19195 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19044)
!19196 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19044)
!19197 = !DILocation(line: 76, column: 18, scope: !19035)
!19198 = !DILocation(line: 76, column: 20, scope: !19035)
!19199 = !DILocation(line: 76, column: 13, scope: !19035)
!19200 = !DILocation(line: 76, column: 26, scope: !19035)
!19201 = !DILocation(line: 87, column: 40, scope: !19035)
!19202 = !DILocation(line: 87, column: 44, scope: !19035)
!19203 = !DILocation(line: 87, column: 42, scope: !19035)
!19204 = !DILocation(line: 87, column: 50, scope: !19035)
!19205 = !DILocation(line: 87, column: 54, scope: !19035)
!19206 = !DILocation(line: 87, column: 52, scope: !19035)
!19207 = !DILocation(line: 87, column: 48, scope: !19035)
!19208 = !DILocation(line: 87, column: 58, scope: !19035)
!19209 = !DILocation(line: 87, column: 72, scope: !19035)
!19210 = !DILocation(line: 87, column: 23, scope: !19035)
!19211 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19034)
!19212 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19034)
!19213 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19034)
!19214 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19034)
!19215 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19034)
!19216 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19034)
!19217 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19034)
!19218 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19034)
!19219 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19034)
!19220 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19034)
!19221 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19034)
!19222 = !DILocation(line: 87, column: 18, scope: !19035)
!19223 = !DILocation(line: 87, column: 13, scope: !19035)
!19224 = !DILocation(line: 87, column: 21, scope: !19035)
!19225 = !DILocation(line: 88, column: 40, scope: !19035)
!19226 = !DILocation(line: 88, column: 44, scope: !19035)
!19227 = !DILocation(line: 88, column: 42, scope: !19035)
!19228 = !DILocation(line: 88, column: 50, scope: !19035)
!19229 = !DILocation(line: 88, column: 54, scope: !19035)
!19230 = !DILocation(line: 88, column: 52, scope: !19035)
!19231 = !DILocation(line: 88, column: 48, scope: !19035)
!19232 = !DILocation(line: 88, column: 58, scope: !19035)
!19233 = !DILocation(line: 88, column: 72, scope: !19035)
!19234 = !DILocation(line: 88, column: 23, scope: !19035)
!19235 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19042)
!19236 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19042)
!19237 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19042)
!19238 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19042)
!19239 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19042)
!19240 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19042)
!19241 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19042)
!19242 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19042)
!19243 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19042)
!19244 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19042)
!19245 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19042)
!19246 = !DILocation(line: 88, column: 18, scope: !19035)
!19247 = !DILocation(line: 88, column: 13, scope: !19035)
!19248 = !DILocation(line: 88, column: 21, scope: !19035)
!19249 = !DILocation(line: 89, column: 9, scope: !19035)
!19250 = !DILocation(line: 64, column: 29, scope: !19251)
!19251 = !DILexicalBlockFile(scope: !19036, file: !13243, discriminator: 2)
!19252 = !DILocation(line: 64, column: 9, scope: !19251)
!19253 = distinct !{!19253, !19254}
!19254 = !DILocation(line: 64, column: 9, scope: !19038)
!19255 = !DILocation(line: 91, column: 18, scope: !19038)
!19256 = !DILocation(line: 91, column: 32, scope: !19038)
!19257 = !DILocation(line: 91, column: 44, scope: !19038)
!19258 = !DILocation(line: 91, column: 14, scope: !19038)
!19259 = !DILocation(line: 92, column: 17, scope: !19038)
!19260 = !DILocation(line: 92, column: 31, scope: !19038)
!19261 = !DILocation(line: 92, column: 14, scope: !19038)
!19262 = !DILocation(line: 93, column: 17, scope: !19038)
!19263 = !DILocation(line: 93, column: 31, scope: !19038)
!19264 = !DILocation(line: 93, column: 14, scope: !19038)
!19265 = !DILocation(line: 94, column: 18, scope: !19038)
!19266 = !DILocation(line: 94, column: 32, scope: !19038)
!19267 = !DILocation(line: 94, column: 44, scope: !19038)
!19268 = !DILocation(line: 94, column: 14, scope: !19038)
!19269 = !DILocation(line: 95, column: 17, scope: !19038)
!19270 = !DILocation(line: 95, column: 31, scope: !19038)
!19271 = !DILocation(line: 95, column: 14, scope: !19038)
!19272 = !DILocation(line: 96, column: 17, scope: !19038)
!19273 = !DILocation(line: 96, column: 31, scope: !19038)
!19274 = !DILocation(line: 96, column: 14, scope: !19038)
!19275 = !DILocation(line: 97, column: 5, scope: !19038)
!19276 = !DILocation(line: 63, column: 25, scope: !19277)
!19277 = !DILexicalBlockFile(scope: !19039, file: !13243, discriminator: 2)
!19278 = !DILocation(line: 63, column: 5, scope: !19277)
!19279 = distinct !{!19279, !19280}
!19280 = !DILocation(line: 63, column: 5, scope: !19032)
!19281 = !DILocation(line: 98, column: 1, scope: !19032)
!19282 = distinct !DISubprogram(name: "yuv2yuv_422p12to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!19283 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19284)
!19284 = distinct !DILocation(line: 78, column: 31, scope: !19285)
!19285 = distinct !DILexicalBlock(scope: !19286, file: !13243, line: 64, column: 33)
!19286 = distinct !DILexicalBlock(scope: !19287, file: !13243, line: 64, column: 9)
!19287 = distinct !DILexicalBlock(scope: !19288, file: !13243, line: 64, column: 9)
!19288 = distinct !DILexicalBlock(scope: !19289, file: !13243, line: 63, column: 29)
!19289 = distinct !DILexicalBlock(scope: !19290, file: !13243, line: 63, column: 5)
!19290 = distinct !DILexicalBlock(scope: !19282, file: !13243, line: 63, column: 5)
!19291 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19292)
!19292 = distinct !DILocation(line: 87, column: 23, scope: !19285)
!19293 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19294)
!19294 = distinct !DILocation(line: 88, column: 23, scope: !19285)
!19295 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19296)
!19296 = distinct !DILocation(line: 76, column: 28, scope: !19285)
!19297 = !DILocalVariable(name: "_dst", arg: 1, scope: !19282, file: !13243, line: 40, type: !17)
!19298 = !DILocation(line: 40, column: 42, scope: !19282)
!19299 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !19282, file: !13243, line: 40, type: !50)
!19300 = !DILocation(line: 40, column: 67, scope: !19282)
!19301 = !DILocalVariable(name: "_src", arg: 3, scope: !19282, file: !13243, line: 41, type: !17)
!19302 = !DILocation(line: 41, column: 34, scope: !19282)
!19303 = !DILocalVariable(name: "src_stride", arg: 4, scope: !19282, file: !13243, line: 41, type: !50)
!19304 = !DILocation(line: 41, column: 59, scope: !19282)
!19305 = !DILocalVariable(name: "w", arg: 5, scope: !19282, file: !13243, line: 42, type: !52)
!19306 = !DILocation(line: 42, column: 29, scope: !19282)
!19307 = !DILocalVariable(name: "h", arg: 6, scope: !19282, file: !13243, line: 42, type: !52)
!19308 = !DILocation(line: 42, column: 36, scope: !19282)
!19309 = !DILocalVariable(name: "c", arg: 7, scope: !19282, file: !13243, line: 42, type: !53)
!19310 = !DILocation(line: 42, column: 53, scope: !19282)
!19311 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !19282, file: !13243, line: 43, type: !84)
!19312 = !DILocation(line: 43, column: 39, scope: !19282)
!19313 = !DILocalVariable(name: "dst", scope: !19282, file: !13243, line: 45, type: !17)
!19314 = !DILocation(line: 45, column: 15, scope: !19282)
!19315 = !DILocation(line: 45, column: 34, scope: !19282)
!19316 = !DILocalVariable(name: "src", scope: !19282, file: !13243, line: 46, type: !22)
!19317 = !DILocation(line: 46, column: 16, scope: !19282)
!19318 = !DILocation(line: 46, column: 36, scope: !19282)
!19319 = !DILocation(line: 46, column: 22, scope: !19282)
!19320 = !DILocalVariable(name: "src0", scope: !19282, file: !13243, line: 47, type: !1418)
!19321 = !DILocation(line: 47, column: 21, scope: !19282)
!19322 = !DILocation(line: 47, column: 28, scope: !19282)
!19323 = !DILocalVariable(name: "src1", scope: !19282, file: !13243, line: 47, type: !1418)
!19324 = !DILocation(line: 47, column: 37, scope: !19282)
!19325 = !DILocation(line: 47, column: 44, scope: !19282)
!19326 = !DILocalVariable(name: "src2", scope: !19282, file: !13243, line: 47, type: !1418)
!19327 = !DILocation(line: 47, column: 53, scope: !19282)
!19328 = !DILocation(line: 47, column: 60, scope: !19282)
!19329 = !DILocalVariable(name: "dst0", scope: !19282, file: !13243, line: 48, type: !18)
!19330 = !DILocation(line: 48, column: 14, scope: !19282)
!19331 = !DILocation(line: 48, column: 21, scope: !19282)
!19332 = !DILocalVariable(name: "dst1", scope: !19282, file: !13243, line: 48, type: !18)
!19333 = !DILocation(line: 48, column: 30, scope: !19282)
!19334 = !DILocation(line: 48, column: 37, scope: !19282)
!19335 = !DILocalVariable(name: "dst2", scope: !19282, file: !13243, line: 48, type: !18)
!19336 = !DILocation(line: 48, column: 46, scope: !19282)
!19337 = !DILocation(line: 48, column: 53, scope: !19282)
!19338 = !DILocalVariable(name: "y", scope: !19282, file: !13243, line: 49, type: !52)
!19339 = !DILocation(line: 49, column: 9, scope: !19282)
!19340 = !DILocalVariable(name: "x", scope: !19282, file: !13243, line: 49, type: !52)
!19341 = !DILocation(line: 49, column: 12, scope: !19282)
!19342 = !DILocalVariable(name: "sh", scope: !19282, file: !13243, line: 50, type: !343)
!19343 = !DILocation(line: 50, column: 15, scope: !19282)
!19344 = !DILocalVariable(name: "rnd", scope: !19282, file: !13243, line: 51, type: !343)
!19345 = !DILocation(line: 51, column: 15, scope: !19282)
!19346 = !DILocalVariable(name: "y_off_in", scope: !19282, file: !13243, line: 52, type: !52)
!19347 = !DILocation(line: 52, column: 9, scope: !19282)
!19348 = !DILocation(line: 52, column: 20, scope: !19282)
!19349 = !DILocalVariable(name: "y_off_out", scope: !19282, file: !13243, line: 53, type: !52)
!19350 = !DILocation(line: 53, column: 9, scope: !19282)
!19351 = !DILocation(line: 53, column: 21, scope: !19282)
!19352 = !DILocation(line: 53, column: 38, scope: !19282)
!19353 = !DILocalVariable(name: "uv_off_in", scope: !19282, file: !13243, line: 54, type: !343)
!19354 = !DILocation(line: 54, column: 15, scope: !19282)
!19355 = !DILocalVariable(name: "uv_off_out", scope: !19282, file: !13243, line: 55, type: !343)
!19356 = !DILocation(line: 55, column: 15, scope: !19282)
!19357 = !DILocalVariable(name: "cyy", scope: !19282, file: !13243, line: 56, type: !52)
!19358 = !DILocation(line: 56, column: 9, scope: !19282)
!19359 = !DILocation(line: 56, column: 15, scope: !19282)
!19360 = !DILocalVariable(name: "cyu", scope: !19282, file: !13243, line: 56, type: !52)
!19361 = !DILocation(line: 56, column: 27, scope: !19282)
!19362 = !DILocation(line: 56, column: 33, scope: !19282)
!19363 = !DILocalVariable(name: "cyv", scope: !19282, file: !13243, line: 56, type: !52)
!19364 = !DILocation(line: 56, column: 45, scope: !19282)
!19365 = !DILocation(line: 56, column: 51, scope: !19282)
!19366 = !DILocalVariable(name: "cuu", scope: !19282, file: !13243, line: 57, type: !52)
!19367 = !DILocation(line: 57, column: 9, scope: !19282)
!19368 = !DILocation(line: 57, column: 15, scope: !19282)
!19369 = !DILocalVariable(name: "cuv", scope: !19282, file: !13243, line: 57, type: !52)
!19370 = !DILocation(line: 57, column: 27, scope: !19282)
!19371 = !DILocation(line: 57, column: 33, scope: !19282)
!19372 = !DILocalVariable(name: "cvu", scope: !19282, file: !13243, line: 57, type: !52)
!19373 = !DILocation(line: 57, column: 45, scope: !19282)
!19374 = !DILocation(line: 57, column: 51, scope: !19282)
!19375 = !DILocalVariable(name: "cvv", scope: !19282, file: !13243, line: 57, type: !52)
!19376 = !DILocation(line: 57, column: 63, scope: !19282)
!19377 = !DILocation(line: 57, column: 69, scope: !19282)
!19378 = !DILocation(line: 61, column: 58, scope: !19282)
!19379 = !DILocation(line: 61, column: 61, scope: !19282)
!19380 = !DILocation(line: 61, column: 72, scope: !19282)
!19381 = !DILocation(line: 61, column: 77, scope: !19282)
!19382 = !DILocation(line: 61, column: 7, scope: !19282)
!19383 = !DILocation(line: 62, column: 58, scope: !19282)
!19384 = !DILocation(line: 62, column: 61, scope: !19282)
!19385 = !DILocation(line: 62, column: 72, scope: !19282)
!19386 = !DILocation(line: 62, column: 77, scope: !19282)
!19387 = !DILocation(line: 62, column: 7, scope: !19282)
!19388 = !DILocation(line: 63, column: 12, scope: !19290)
!19389 = !DILocation(line: 63, column: 10, scope: !19290)
!19390 = !DILocation(line: 63, column: 17, scope: !19391)
!19391 = !DILexicalBlockFile(scope: !19289, file: !13243, discriminator: 1)
!19392 = !DILocation(line: 63, column: 21, scope: !19391)
!19393 = !DILocation(line: 63, column: 19, scope: !19391)
!19394 = !DILocation(line: 63, column: 5, scope: !19391)
!19395 = !DILocation(line: 64, column: 16, scope: !19287)
!19396 = !DILocation(line: 64, column: 14, scope: !19287)
!19397 = !DILocation(line: 64, column: 21, scope: !19398)
!19398 = !DILexicalBlockFile(scope: !19286, file: !13243, discriminator: 1)
!19399 = !DILocation(line: 64, column: 25, scope: !19398)
!19400 = !DILocation(line: 64, column: 23, scope: !19398)
!19401 = !DILocation(line: 64, column: 9, scope: !19398)
!19402 = !DILocalVariable(name: "y00", scope: !19285, file: !13243, line: 65, type: !52)
!19403 = !DILocation(line: 65, column: 17, scope: !19285)
!19404 = !DILocation(line: 65, column: 28, scope: !19285)
!19405 = !DILocation(line: 65, column: 30, scope: !19285)
!19406 = !DILocation(line: 65, column: 23, scope: !19285)
!19407 = !DILocation(line: 65, column: 38, scope: !19285)
!19408 = !DILocation(line: 65, column: 36, scope: !19285)
!19409 = !DILocalVariable(name: "y01", scope: !19285, file: !13243, line: 67, type: !52)
!19410 = !DILocation(line: 67, column: 17, scope: !19285)
!19411 = !DILocation(line: 67, column: 32, scope: !19285)
!19412 = !DILocation(line: 67, column: 30, scope: !19285)
!19413 = !DILocation(line: 67, column: 34, scope: !19285)
!19414 = !DILocation(line: 67, column: 23, scope: !19285)
!19415 = !DILocation(line: 67, column: 41, scope: !19285)
!19416 = !DILocation(line: 67, column: 39, scope: !19285)
!19417 = !DILocalVariable(name: "u", scope: !19285, file: !13243, line: 73, type: !52)
!19418 = !DILocation(line: 73, column: 17, scope: !19285)
!19419 = !DILocation(line: 73, column: 26, scope: !19285)
!19420 = !DILocation(line: 73, column: 21, scope: !19285)
!19421 = !DILocation(line: 73, column: 29, scope: !19285)
!19422 = !DILocalVariable(name: "v", scope: !19285, file: !13243, line: 73, type: !52)
!19423 = !DILocation(line: 73, column: 42, scope: !19285)
!19424 = !DILocation(line: 73, column: 51, scope: !19285)
!19425 = !DILocation(line: 73, column: 46, scope: !19285)
!19426 = !DILocation(line: 73, column: 54, scope: !19285)
!19427 = !DILocalVariable(name: "uv_val", scope: !19285, file: !13243, line: 74, type: !52)
!19428 = !DILocation(line: 74, column: 17, scope: !19285)
!19429 = !DILocation(line: 74, column: 26, scope: !19285)
!19430 = !DILocation(line: 74, column: 32, scope: !19285)
!19431 = !DILocation(line: 74, column: 30, scope: !19285)
!19432 = !DILocation(line: 74, column: 36, scope: !19285)
!19433 = !DILocation(line: 74, column: 42, scope: !19285)
!19434 = !DILocation(line: 74, column: 40, scope: !19285)
!19435 = !DILocation(line: 74, column: 34, scope: !19285)
!19436 = !DILocation(line: 74, column: 44, scope: !19285)
!19437 = !DILocation(line: 74, column: 52, scope: !19285)
!19438 = !DILocation(line: 74, column: 50, scope: !19285)
!19439 = !DILocation(line: 76, column: 45, scope: !19285)
!19440 = !DILocation(line: 76, column: 51, scope: !19285)
!19441 = !DILocation(line: 76, column: 49, scope: !19285)
!19442 = !DILocation(line: 76, column: 57, scope: !19285)
!19443 = !DILocation(line: 76, column: 55, scope: !19285)
!19444 = !DILocation(line: 76, column: 65, scope: !19285)
!19445 = !DILocation(line: 76, column: 28, scope: !19285)
!19446 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19296)
!19447 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19296)
!19448 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19296)
!19449 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19296)
!19450 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19296)
!19451 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19296)
!19452 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19296)
!19453 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19296)
!19454 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19296)
!19455 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19296)
!19456 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19296)
!19457 = !DILocation(line: 76, column: 18, scope: !19285)
!19458 = !DILocation(line: 76, column: 20, scope: !19285)
!19459 = !DILocation(line: 76, column: 13, scope: !19285)
!19460 = !DILocation(line: 76, column: 26, scope: !19285)
!19461 = !DILocation(line: 78, column: 48, scope: !19285)
!19462 = !DILocation(line: 78, column: 54, scope: !19285)
!19463 = !DILocation(line: 78, column: 52, scope: !19285)
!19464 = !DILocation(line: 78, column: 60, scope: !19285)
!19465 = !DILocation(line: 78, column: 58, scope: !19285)
!19466 = !DILocation(line: 78, column: 68, scope: !19285)
!19467 = !DILocation(line: 78, column: 31, scope: !19285)
!19468 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19284)
!19469 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19284)
!19470 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19284)
!19471 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19284)
!19472 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19284)
!19473 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19284)
!19474 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19284)
!19475 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19284)
!19476 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19284)
!19477 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19284)
!19478 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19284)
!19479 = !DILocation(line: 78, column: 18, scope: !19285)
!19480 = !DILocation(line: 78, column: 20, scope: !19285)
!19481 = !DILocation(line: 78, column: 24, scope: !19285)
!19482 = !DILocation(line: 78, column: 13, scope: !19285)
!19483 = !DILocation(line: 78, column: 29, scope: !19285)
!19484 = !DILocation(line: 87, column: 40, scope: !19285)
!19485 = !DILocation(line: 87, column: 44, scope: !19285)
!19486 = !DILocation(line: 87, column: 42, scope: !19285)
!19487 = !DILocation(line: 87, column: 50, scope: !19285)
!19488 = !DILocation(line: 87, column: 54, scope: !19285)
!19489 = !DILocation(line: 87, column: 52, scope: !19285)
!19490 = !DILocation(line: 87, column: 48, scope: !19285)
!19491 = !DILocation(line: 87, column: 58, scope: !19285)
!19492 = !DILocation(line: 87, column: 72, scope: !19285)
!19493 = !DILocation(line: 87, column: 23, scope: !19285)
!19494 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19292)
!19495 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19292)
!19496 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19292)
!19497 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19292)
!19498 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19292)
!19499 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19292)
!19500 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19292)
!19501 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19292)
!19502 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19292)
!19503 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19292)
!19504 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19292)
!19505 = !DILocation(line: 87, column: 18, scope: !19285)
!19506 = !DILocation(line: 87, column: 13, scope: !19285)
!19507 = !DILocation(line: 87, column: 21, scope: !19285)
!19508 = !DILocation(line: 88, column: 40, scope: !19285)
!19509 = !DILocation(line: 88, column: 44, scope: !19285)
!19510 = !DILocation(line: 88, column: 42, scope: !19285)
!19511 = !DILocation(line: 88, column: 50, scope: !19285)
!19512 = !DILocation(line: 88, column: 54, scope: !19285)
!19513 = !DILocation(line: 88, column: 52, scope: !19285)
!19514 = !DILocation(line: 88, column: 48, scope: !19285)
!19515 = !DILocation(line: 88, column: 58, scope: !19285)
!19516 = !DILocation(line: 88, column: 72, scope: !19285)
!19517 = !DILocation(line: 88, column: 23, scope: !19285)
!19518 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19294)
!19519 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19294)
!19520 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19294)
!19521 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19294)
!19522 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19294)
!19523 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19294)
!19524 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19294)
!19525 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19294)
!19526 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19294)
!19527 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19294)
!19528 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19294)
!19529 = !DILocation(line: 88, column: 18, scope: !19285)
!19530 = !DILocation(line: 88, column: 13, scope: !19285)
!19531 = !DILocation(line: 88, column: 21, scope: !19285)
!19532 = !DILocation(line: 89, column: 9, scope: !19285)
!19533 = !DILocation(line: 64, column: 29, scope: !19534)
!19534 = !DILexicalBlockFile(scope: !19286, file: !13243, discriminator: 2)
!19535 = !DILocation(line: 64, column: 9, scope: !19534)
!19536 = distinct !{!19536, !19537}
!19537 = !DILocation(line: 64, column: 9, scope: !19288)
!19538 = !DILocation(line: 91, column: 18, scope: !19288)
!19539 = !DILocation(line: 91, column: 32, scope: !19288)
!19540 = !DILocation(line: 91, column: 44, scope: !19288)
!19541 = !DILocation(line: 91, column: 14, scope: !19288)
!19542 = !DILocation(line: 92, column: 17, scope: !19288)
!19543 = !DILocation(line: 92, column: 31, scope: !19288)
!19544 = !DILocation(line: 92, column: 14, scope: !19288)
!19545 = !DILocation(line: 93, column: 17, scope: !19288)
!19546 = !DILocation(line: 93, column: 31, scope: !19288)
!19547 = !DILocation(line: 93, column: 14, scope: !19288)
!19548 = !DILocation(line: 94, column: 18, scope: !19288)
!19549 = !DILocation(line: 94, column: 32, scope: !19288)
!19550 = !DILocation(line: 94, column: 44, scope: !19288)
!19551 = !DILocation(line: 94, column: 14, scope: !19288)
!19552 = !DILocation(line: 95, column: 17, scope: !19288)
!19553 = !DILocation(line: 95, column: 31, scope: !19288)
!19554 = !DILocation(line: 95, column: 14, scope: !19288)
!19555 = !DILocation(line: 96, column: 17, scope: !19288)
!19556 = !DILocation(line: 96, column: 31, scope: !19288)
!19557 = !DILocation(line: 96, column: 14, scope: !19288)
!19558 = !DILocation(line: 97, column: 5, scope: !19288)
!19559 = !DILocation(line: 63, column: 25, scope: !19560)
!19560 = !DILexicalBlockFile(scope: !19289, file: !13243, discriminator: 2)
!19561 = !DILocation(line: 63, column: 5, scope: !19560)
!19562 = distinct !{!19562, !19563}
!19563 = !DILocation(line: 63, column: 5, scope: !19282)
!19564 = !DILocation(line: 98, column: 1, scope: !19282)
!19565 = distinct !DISubprogram(name: "yuv2yuv_420p12to8_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!19566 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19567)
!19567 = distinct !DILocation(line: 78, column: 31, scope: !19568)
!19568 = distinct !DILexicalBlock(scope: !19569, file: !13243, line: 64, column: 33)
!19569 = distinct !DILexicalBlock(scope: !19570, file: !13243, line: 64, column: 9)
!19570 = distinct !DILexicalBlock(scope: !19571, file: !13243, line: 64, column: 9)
!19571 = distinct !DILexicalBlock(scope: !19572, file: !13243, line: 63, column: 29)
!19572 = distinct !DILexicalBlock(scope: !19573, file: !13243, line: 63, column: 5)
!19573 = distinct !DILexicalBlock(scope: !19565, file: !13243, line: 63, column: 5)
!19574 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19575)
!19575 = distinct !DILocation(line: 81, column: 31, scope: !19568)
!19576 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19577)
!19577 = distinct !DILocation(line: 83, column: 31, scope: !19568)
!19578 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19579)
!19579 = distinct !DILocation(line: 87, column: 23, scope: !19568)
!19580 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19581)
!19581 = distinct !DILocation(line: 88, column: 23, scope: !19568)
!19582 = !DILocation(line: 159, column: 97, scope: !3610, inlinedAt: !19583)
!19583 = distinct !DILocation(line: 76, column: 28, scope: !19568)
!19584 = !DILocalVariable(name: "_dst", arg: 1, scope: !19565, file: !13243, line: 40, type: !17)
!19585 = !DILocation(line: 40, column: 42, scope: !19565)
!19586 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !19565, file: !13243, line: 40, type: !50)
!19587 = !DILocation(line: 40, column: 67, scope: !19565)
!19588 = !DILocalVariable(name: "_src", arg: 3, scope: !19565, file: !13243, line: 41, type: !17)
!19589 = !DILocation(line: 41, column: 34, scope: !19565)
!19590 = !DILocalVariable(name: "src_stride", arg: 4, scope: !19565, file: !13243, line: 41, type: !50)
!19591 = !DILocation(line: 41, column: 59, scope: !19565)
!19592 = !DILocalVariable(name: "w", arg: 5, scope: !19565, file: !13243, line: 42, type: !52)
!19593 = !DILocation(line: 42, column: 29, scope: !19565)
!19594 = !DILocalVariable(name: "h", arg: 6, scope: !19565, file: !13243, line: 42, type: !52)
!19595 = !DILocation(line: 42, column: 36, scope: !19565)
!19596 = !DILocalVariable(name: "c", arg: 7, scope: !19565, file: !13243, line: 42, type: !53)
!19597 = !DILocation(line: 42, column: 53, scope: !19565)
!19598 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !19565, file: !13243, line: 43, type: !84)
!19599 = !DILocation(line: 43, column: 39, scope: !19565)
!19600 = !DILocalVariable(name: "dst", scope: !19565, file: !13243, line: 45, type: !17)
!19601 = !DILocation(line: 45, column: 15, scope: !19565)
!19602 = !DILocation(line: 45, column: 34, scope: !19565)
!19603 = !DILocalVariable(name: "src", scope: !19565, file: !13243, line: 46, type: !22)
!19604 = !DILocation(line: 46, column: 16, scope: !19565)
!19605 = !DILocation(line: 46, column: 36, scope: !19565)
!19606 = !DILocation(line: 46, column: 22, scope: !19565)
!19607 = !DILocalVariable(name: "src0", scope: !19565, file: !13243, line: 47, type: !1418)
!19608 = !DILocation(line: 47, column: 21, scope: !19565)
!19609 = !DILocation(line: 47, column: 28, scope: !19565)
!19610 = !DILocalVariable(name: "src1", scope: !19565, file: !13243, line: 47, type: !1418)
!19611 = !DILocation(line: 47, column: 37, scope: !19565)
!19612 = !DILocation(line: 47, column: 44, scope: !19565)
!19613 = !DILocalVariable(name: "src2", scope: !19565, file: !13243, line: 47, type: !1418)
!19614 = !DILocation(line: 47, column: 53, scope: !19565)
!19615 = !DILocation(line: 47, column: 60, scope: !19565)
!19616 = !DILocalVariable(name: "dst0", scope: !19565, file: !13243, line: 48, type: !18)
!19617 = !DILocation(line: 48, column: 14, scope: !19565)
!19618 = !DILocation(line: 48, column: 21, scope: !19565)
!19619 = !DILocalVariable(name: "dst1", scope: !19565, file: !13243, line: 48, type: !18)
!19620 = !DILocation(line: 48, column: 30, scope: !19565)
!19621 = !DILocation(line: 48, column: 37, scope: !19565)
!19622 = !DILocalVariable(name: "dst2", scope: !19565, file: !13243, line: 48, type: !18)
!19623 = !DILocation(line: 48, column: 46, scope: !19565)
!19624 = !DILocation(line: 48, column: 53, scope: !19565)
!19625 = !DILocalVariable(name: "y", scope: !19565, file: !13243, line: 49, type: !52)
!19626 = !DILocation(line: 49, column: 9, scope: !19565)
!19627 = !DILocalVariable(name: "x", scope: !19565, file: !13243, line: 49, type: !52)
!19628 = !DILocation(line: 49, column: 12, scope: !19565)
!19629 = !DILocalVariable(name: "sh", scope: !19565, file: !13243, line: 50, type: !343)
!19630 = !DILocation(line: 50, column: 15, scope: !19565)
!19631 = !DILocalVariable(name: "rnd", scope: !19565, file: !13243, line: 51, type: !343)
!19632 = !DILocation(line: 51, column: 15, scope: !19565)
!19633 = !DILocalVariable(name: "y_off_in", scope: !19565, file: !13243, line: 52, type: !52)
!19634 = !DILocation(line: 52, column: 9, scope: !19565)
!19635 = !DILocation(line: 52, column: 20, scope: !19565)
!19636 = !DILocalVariable(name: "y_off_out", scope: !19565, file: !13243, line: 53, type: !52)
!19637 = !DILocation(line: 53, column: 9, scope: !19565)
!19638 = !DILocation(line: 53, column: 21, scope: !19565)
!19639 = !DILocation(line: 53, column: 38, scope: !19565)
!19640 = !DILocalVariable(name: "uv_off_in", scope: !19565, file: !13243, line: 54, type: !343)
!19641 = !DILocation(line: 54, column: 15, scope: !19565)
!19642 = !DILocalVariable(name: "uv_off_out", scope: !19565, file: !13243, line: 55, type: !343)
!19643 = !DILocation(line: 55, column: 15, scope: !19565)
!19644 = !DILocalVariable(name: "cyy", scope: !19565, file: !13243, line: 56, type: !52)
!19645 = !DILocation(line: 56, column: 9, scope: !19565)
!19646 = !DILocation(line: 56, column: 15, scope: !19565)
!19647 = !DILocalVariable(name: "cyu", scope: !19565, file: !13243, line: 56, type: !52)
!19648 = !DILocation(line: 56, column: 27, scope: !19565)
!19649 = !DILocation(line: 56, column: 33, scope: !19565)
!19650 = !DILocalVariable(name: "cyv", scope: !19565, file: !13243, line: 56, type: !52)
!19651 = !DILocation(line: 56, column: 45, scope: !19565)
!19652 = !DILocation(line: 56, column: 51, scope: !19565)
!19653 = !DILocalVariable(name: "cuu", scope: !19565, file: !13243, line: 57, type: !52)
!19654 = !DILocation(line: 57, column: 9, scope: !19565)
!19655 = !DILocation(line: 57, column: 15, scope: !19565)
!19656 = !DILocalVariable(name: "cuv", scope: !19565, file: !13243, line: 57, type: !52)
!19657 = !DILocation(line: 57, column: 27, scope: !19565)
!19658 = !DILocation(line: 57, column: 33, scope: !19565)
!19659 = !DILocalVariable(name: "cvu", scope: !19565, file: !13243, line: 57, type: !52)
!19660 = !DILocation(line: 57, column: 45, scope: !19565)
!19661 = !DILocation(line: 57, column: 51, scope: !19565)
!19662 = !DILocalVariable(name: "cvv", scope: !19565, file: !13243, line: 57, type: !52)
!19663 = !DILocation(line: 57, column: 63, scope: !19565)
!19664 = !DILocation(line: 57, column: 69, scope: !19565)
!19665 = !DILocation(line: 61, column: 58, scope: !19565)
!19666 = !DILocation(line: 61, column: 61, scope: !19565)
!19667 = !DILocation(line: 61, column: 72, scope: !19565)
!19668 = !DILocation(line: 61, column: 77, scope: !19565)
!19669 = !DILocation(line: 61, column: 7, scope: !19565)
!19670 = !DILocation(line: 62, column: 58, scope: !19565)
!19671 = !DILocation(line: 62, column: 61, scope: !19565)
!19672 = !DILocation(line: 62, column: 72, scope: !19565)
!19673 = !DILocation(line: 62, column: 77, scope: !19565)
!19674 = !DILocation(line: 62, column: 7, scope: !19565)
!19675 = !DILocation(line: 63, column: 12, scope: !19573)
!19676 = !DILocation(line: 63, column: 10, scope: !19573)
!19677 = !DILocation(line: 63, column: 17, scope: !19678)
!19678 = !DILexicalBlockFile(scope: !19572, file: !13243, discriminator: 1)
!19679 = !DILocation(line: 63, column: 21, scope: !19678)
!19680 = !DILocation(line: 63, column: 19, scope: !19678)
!19681 = !DILocation(line: 63, column: 5, scope: !19678)
!19682 = !DILocation(line: 64, column: 16, scope: !19570)
!19683 = !DILocation(line: 64, column: 14, scope: !19570)
!19684 = !DILocation(line: 64, column: 21, scope: !19685)
!19685 = !DILexicalBlockFile(scope: !19569, file: !13243, discriminator: 1)
!19686 = !DILocation(line: 64, column: 25, scope: !19685)
!19687 = !DILocation(line: 64, column: 23, scope: !19685)
!19688 = !DILocation(line: 64, column: 9, scope: !19685)
!19689 = !DILocalVariable(name: "y00", scope: !19568, file: !13243, line: 65, type: !52)
!19690 = !DILocation(line: 65, column: 17, scope: !19568)
!19691 = !DILocation(line: 65, column: 28, scope: !19568)
!19692 = !DILocation(line: 65, column: 30, scope: !19568)
!19693 = !DILocation(line: 65, column: 23, scope: !19568)
!19694 = !DILocation(line: 65, column: 38, scope: !19568)
!19695 = !DILocation(line: 65, column: 36, scope: !19568)
!19696 = !DILocalVariable(name: "y01", scope: !19568, file: !13243, line: 67, type: !52)
!19697 = !DILocation(line: 67, column: 17, scope: !19568)
!19698 = !DILocation(line: 67, column: 32, scope: !19568)
!19699 = !DILocation(line: 67, column: 30, scope: !19568)
!19700 = !DILocation(line: 67, column: 34, scope: !19568)
!19701 = !DILocation(line: 67, column: 23, scope: !19568)
!19702 = !DILocation(line: 67, column: 41, scope: !19568)
!19703 = !DILocation(line: 67, column: 39, scope: !19568)
!19704 = !DILocalVariable(name: "y10", scope: !19568, file: !13243, line: 69, type: !52)
!19705 = !DILocation(line: 69, column: 17, scope: !19568)
!19706 = !DILocation(line: 69, column: 28, scope: !19568)
!19707 = !DILocation(line: 69, column: 42, scope: !19568)
!19708 = !DILocation(line: 69, column: 67, scope: !19568)
!19709 = !DILocation(line: 69, column: 65, scope: !19568)
!19710 = !DILocation(line: 69, column: 63, scope: !19568)
!19711 = !DILocation(line: 69, column: 61, scope: !19568)
!19712 = !DILocation(line: 69, column: 23, scope: !19568)
!19713 = !DILocation(line: 69, column: 72, scope: !19568)
!19714 = !DILocation(line: 69, column: 70, scope: !19568)
!19715 = !DILocalVariable(name: "y11", scope: !19568, file: !13243, line: 70, type: !52)
!19716 = !DILocation(line: 70, column: 17, scope: !19568)
!19717 = !DILocation(line: 70, column: 28, scope: !19568)
!19718 = !DILocation(line: 70, column: 42, scope: !19568)
!19719 = !DILocation(line: 70, column: 67, scope: !19568)
!19720 = !DILocation(line: 70, column: 65, scope: !19568)
!19721 = !DILocation(line: 70, column: 63, scope: !19568)
!19722 = !DILocation(line: 70, column: 61, scope: !19568)
!19723 = !DILocation(line: 70, column: 69, scope: !19568)
!19724 = !DILocation(line: 70, column: 23, scope: !19568)
!19725 = !DILocation(line: 70, column: 76, scope: !19568)
!19726 = !DILocation(line: 70, column: 74, scope: !19568)
!19727 = !DILocalVariable(name: "u", scope: !19568, file: !13243, line: 73, type: !52)
!19728 = !DILocation(line: 73, column: 17, scope: !19568)
!19729 = !DILocation(line: 73, column: 26, scope: !19568)
!19730 = !DILocation(line: 73, column: 21, scope: !19568)
!19731 = !DILocation(line: 73, column: 29, scope: !19568)
!19732 = !DILocalVariable(name: "v", scope: !19568, file: !13243, line: 73, type: !52)
!19733 = !DILocation(line: 73, column: 42, scope: !19568)
!19734 = !DILocation(line: 73, column: 51, scope: !19568)
!19735 = !DILocation(line: 73, column: 46, scope: !19568)
!19736 = !DILocation(line: 73, column: 54, scope: !19568)
!19737 = !DILocalVariable(name: "uv_val", scope: !19568, file: !13243, line: 74, type: !52)
!19738 = !DILocation(line: 74, column: 17, scope: !19568)
!19739 = !DILocation(line: 74, column: 26, scope: !19568)
!19740 = !DILocation(line: 74, column: 32, scope: !19568)
!19741 = !DILocation(line: 74, column: 30, scope: !19568)
!19742 = !DILocation(line: 74, column: 36, scope: !19568)
!19743 = !DILocation(line: 74, column: 42, scope: !19568)
!19744 = !DILocation(line: 74, column: 40, scope: !19568)
!19745 = !DILocation(line: 74, column: 34, scope: !19568)
!19746 = !DILocation(line: 74, column: 44, scope: !19568)
!19747 = !DILocation(line: 74, column: 52, scope: !19568)
!19748 = !DILocation(line: 74, column: 50, scope: !19568)
!19749 = !DILocation(line: 76, column: 45, scope: !19568)
!19750 = !DILocation(line: 76, column: 51, scope: !19568)
!19751 = !DILocation(line: 76, column: 49, scope: !19568)
!19752 = !DILocation(line: 76, column: 57, scope: !19568)
!19753 = !DILocation(line: 76, column: 55, scope: !19568)
!19754 = !DILocation(line: 76, column: 65, scope: !19568)
!19755 = !DILocation(line: 76, column: 28, scope: !19568)
!19756 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19583)
!19757 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19583)
!19758 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19583)
!19759 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19583)
!19760 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19583)
!19761 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19583)
!19762 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19583)
!19763 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19583)
!19764 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19583)
!19765 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19583)
!19766 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19583)
!19767 = !DILocation(line: 76, column: 18, scope: !19568)
!19768 = !DILocation(line: 76, column: 20, scope: !19568)
!19769 = !DILocation(line: 76, column: 13, scope: !19568)
!19770 = !DILocation(line: 76, column: 26, scope: !19568)
!19771 = !DILocation(line: 78, column: 48, scope: !19568)
!19772 = !DILocation(line: 78, column: 54, scope: !19568)
!19773 = !DILocation(line: 78, column: 52, scope: !19568)
!19774 = !DILocation(line: 78, column: 60, scope: !19568)
!19775 = !DILocation(line: 78, column: 58, scope: !19568)
!19776 = !DILocation(line: 78, column: 68, scope: !19568)
!19777 = !DILocation(line: 78, column: 31, scope: !19568)
!19778 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19567)
!19779 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19567)
!19780 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19567)
!19781 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19567)
!19782 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19567)
!19783 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19567)
!19784 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19567)
!19785 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19567)
!19786 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19567)
!19787 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19567)
!19788 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19567)
!19789 = !DILocation(line: 78, column: 18, scope: !19568)
!19790 = !DILocation(line: 78, column: 20, scope: !19568)
!19791 = !DILocation(line: 78, column: 24, scope: !19568)
!19792 = !DILocation(line: 78, column: 13, scope: !19568)
!19793 = !DILocation(line: 78, column: 29, scope: !19568)
!19794 = !DILocation(line: 81, column: 48, scope: !19568)
!19795 = !DILocation(line: 81, column: 54, scope: !19568)
!19796 = !DILocation(line: 81, column: 52, scope: !19568)
!19797 = !DILocation(line: 81, column: 60, scope: !19568)
!19798 = !DILocation(line: 81, column: 58, scope: !19568)
!19799 = !DILocation(line: 81, column: 68, scope: !19568)
!19800 = !DILocation(line: 81, column: 31, scope: !19568)
!19801 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19575)
!19802 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19575)
!19803 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19575)
!19804 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19575)
!19805 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19575)
!19806 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19575)
!19807 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19575)
!19808 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19575)
!19809 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19575)
!19810 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19575)
!19811 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19575)
!19812 = !DILocation(line: 80, column: 18, scope: !19568)
!19813 = !DILocation(line: 80, column: 20, scope: !19568)
!19814 = !DILocation(line: 80, column: 24, scope: !19568)
!19815 = !DILocation(line: 80, column: 30, scope: !19568)
!19816 = !DILocation(line: 80, column: 44, scope: !19568)
!19817 = !DILocation(line: 80, column: 28, scope: !19568)
!19818 = !DILocation(line: 80, column: 13, scope: !19568)
!19819 = !DILocation(line: 80, column: 63, scope: !19568)
!19820 = !DILocation(line: 83, column: 48, scope: !19568)
!19821 = !DILocation(line: 83, column: 54, scope: !19568)
!19822 = !DILocation(line: 83, column: 52, scope: !19568)
!19823 = !DILocation(line: 83, column: 60, scope: !19568)
!19824 = !DILocation(line: 83, column: 58, scope: !19568)
!19825 = !DILocation(line: 83, column: 68, scope: !19568)
!19826 = !DILocation(line: 83, column: 31, scope: !19568)
!19827 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19577)
!19828 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19577)
!19829 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19577)
!19830 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19577)
!19831 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19577)
!19832 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19577)
!19833 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19577)
!19834 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19577)
!19835 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19577)
!19836 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19577)
!19837 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19577)
!19838 = !DILocation(line: 82, column: 18, scope: !19568)
!19839 = !DILocation(line: 82, column: 20, scope: !19568)
!19840 = !DILocation(line: 82, column: 24, scope: !19568)
!19841 = !DILocation(line: 82, column: 30, scope: !19568)
!19842 = !DILocation(line: 82, column: 44, scope: !19568)
!19843 = !DILocation(line: 82, column: 28, scope: !19568)
!19844 = !DILocation(line: 82, column: 13, scope: !19568)
!19845 = !DILocation(line: 82, column: 63, scope: !19568)
!19846 = !DILocation(line: 87, column: 40, scope: !19568)
!19847 = !DILocation(line: 87, column: 44, scope: !19568)
!19848 = !DILocation(line: 87, column: 42, scope: !19568)
!19849 = !DILocation(line: 87, column: 50, scope: !19568)
!19850 = !DILocation(line: 87, column: 54, scope: !19568)
!19851 = !DILocation(line: 87, column: 52, scope: !19568)
!19852 = !DILocation(line: 87, column: 48, scope: !19568)
!19853 = !DILocation(line: 87, column: 58, scope: !19568)
!19854 = !DILocation(line: 87, column: 72, scope: !19568)
!19855 = !DILocation(line: 87, column: 23, scope: !19568)
!19856 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19579)
!19857 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19579)
!19858 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19579)
!19859 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19579)
!19860 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19579)
!19861 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19579)
!19862 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19579)
!19863 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19579)
!19864 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19579)
!19865 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19579)
!19866 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19579)
!19867 = !DILocation(line: 87, column: 18, scope: !19568)
!19868 = !DILocation(line: 87, column: 13, scope: !19568)
!19869 = !DILocation(line: 87, column: 21, scope: !19568)
!19870 = !DILocation(line: 88, column: 40, scope: !19568)
!19871 = !DILocation(line: 88, column: 44, scope: !19568)
!19872 = !DILocation(line: 88, column: 42, scope: !19568)
!19873 = !DILocation(line: 88, column: 50, scope: !19568)
!19874 = !DILocation(line: 88, column: 54, scope: !19568)
!19875 = !DILocation(line: 88, column: 52, scope: !19568)
!19876 = !DILocation(line: 88, column: 48, scope: !19568)
!19877 = !DILocation(line: 88, column: 58, scope: !19568)
!19878 = !DILocation(line: 88, column: 72, scope: !19568)
!19879 = !DILocation(line: 88, column: 23, scope: !19568)
!19880 = !DILocation(line: 161, column: 9, scope: !3756, inlinedAt: !19581)
!19881 = !DILocation(line: 161, column: 10, scope: !3756, inlinedAt: !19581)
!19882 = !DILocation(line: 161, column: 9, scope: !3610, inlinedAt: !19581)
!19883 = !DILocation(line: 161, column: 29, scope: !3760, inlinedAt: !19581)
!19884 = !DILocation(line: 161, column: 28, scope: !3760, inlinedAt: !19581)
!19885 = !DILocation(line: 161, column: 31, scope: !3760, inlinedAt: !19581)
!19886 = !DILocation(line: 161, column: 27, scope: !3760, inlinedAt: !19581)
!19887 = !DILocation(line: 161, column: 20, scope: !3760, inlinedAt: !19581)
!19888 = !DILocation(line: 162, column: 17, scope: !3756, inlinedAt: !19581)
!19889 = !DILocation(line: 162, column: 10, scope: !3756, inlinedAt: !19581)
!19890 = !DILocation(line: 163, column: 1, scope: !3610, inlinedAt: !19581)
!19891 = !DILocation(line: 88, column: 18, scope: !19568)
!19892 = !DILocation(line: 88, column: 13, scope: !19568)
!19893 = !DILocation(line: 88, column: 21, scope: !19568)
!19894 = !DILocation(line: 89, column: 9, scope: !19568)
!19895 = !DILocation(line: 64, column: 29, scope: !19896)
!19896 = !DILexicalBlockFile(scope: !19569, file: !13243, discriminator: 2)
!19897 = !DILocation(line: 64, column: 9, scope: !19896)
!19898 = distinct !{!19898, !19899}
!19899 = !DILocation(line: 64, column: 9, scope: !19571)
!19900 = !DILocation(line: 91, column: 18, scope: !19571)
!19901 = !DILocation(line: 91, column: 32, scope: !19571)
!19902 = !DILocation(line: 91, column: 44, scope: !19571)
!19903 = !DILocation(line: 91, column: 14, scope: !19571)
!19904 = !DILocation(line: 92, column: 17, scope: !19571)
!19905 = !DILocation(line: 92, column: 31, scope: !19571)
!19906 = !DILocation(line: 92, column: 14, scope: !19571)
!19907 = !DILocation(line: 93, column: 17, scope: !19571)
!19908 = !DILocation(line: 93, column: 31, scope: !19571)
!19909 = !DILocation(line: 93, column: 14, scope: !19571)
!19910 = !DILocation(line: 94, column: 18, scope: !19571)
!19911 = !DILocation(line: 94, column: 32, scope: !19571)
!19912 = !DILocation(line: 94, column: 44, scope: !19571)
!19913 = !DILocation(line: 94, column: 14, scope: !19571)
!19914 = !DILocation(line: 95, column: 17, scope: !19571)
!19915 = !DILocation(line: 95, column: 31, scope: !19571)
!19916 = !DILocation(line: 95, column: 14, scope: !19571)
!19917 = !DILocation(line: 96, column: 17, scope: !19571)
!19918 = !DILocation(line: 96, column: 31, scope: !19571)
!19919 = !DILocation(line: 96, column: 14, scope: !19571)
!19920 = !DILocation(line: 97, column: 5, scope: !19571)
!19921 = !DILocation(line: 63, column: 25, scope: !19922)
!19922 = !DILexicalBlockFile(scope: !19572, file: !13243, discriminator: 2)
!19923 = !DILocation(line: 63, column: 5, scope: !19922)
!19924 = distinct !{!19924, !19925}
!19925 = !DILocation(line: 63, column: 5, scope: !19565)
!19926 = !DILocation(line: 98, column: 1, scope: !19565)
!19927 = distinct !DISubprogram(name: "yuv2yuv_444p12to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!19928 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !19929)
!19929 = distinct !DILocation(line: 87, column: 23, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19931, file: !13243, line: 64, column: 33)
!19931 = distinct !DILexicalBlock(scope: !19932, file: !13243, line: 64, column: 9)
!19932 = distinct !DILexicalBlock(scope: !19933, file: !13243, line: 64, column: 9)
!19933 = distinct !DILexicalBlock(scope: !19934, file: !13243, line: 63, column: 29)
!19934 = distinct !DILexicalBlock(scope: !19935, file: !13243, line: 63, column: 5)
!19935 = distinct !DILexicalBlock(scope: !19927, file: !13243, line: 63, column: 5)
!19936 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !19929)
!19937 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !19938)
!19938 = distinct !DILocation(line: 88, column: 23, scope: !19930)
!19939 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !19938)
!19940 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !19941)
!19941 = distinct !DILocation(line: 76, column: 28, scope: !19930)
!19942 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !19941)
!19943 = !DILocalVariable(name: "_dst", arg: 1, scope: !19927, file: !13243, line: 40, type: !17)
!19944 = !DILocation(line: 40, column: 43, scope: !19927)
!19945 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !19927, file: !13243, line: 40, type: !50)
!19946 = !DILocation(line: 40, column: 68, scope: !19927)
!19947 = !DILocalVariable(name: "_src", arg: 3, scope: !19927, file: !13243, line: 41, type: !17)
!19948 = !DILocation(line: 41, column: 34, scope: !19927)
!19949 = !DILocalVariable(name: "src_stride", arg: 4, scope: !19927, file: !13243, line: 41, type: !50)
!19950 = !DILocation(line: 41, column: 59, scope: !19927)
!19951 = !DILocalVariable(name: "w", arg: 5, scope: !19927, file: !13243, line: 42, type: !52)
!19952 = !DILocation(line: 42, column: 29, scope: !19927)
!19953 = !DILocalVariable(name: "h", arg: 6, scope: !19927, file: !13243, line: 42, type: !52)
!19954 = !DILocation(line: 42, column: 36, scope: !19927)
!19955 = !DILocalVariable(name: "c", arg: 7, scope: !19927, file: !13243, line: 42, type: !53)
!19956 = !DILocation(line: 42, column: 53, scope: !19927)
!19957 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !19927, file: !13243, line: 43, type: !84)
!19958 = !DILocation(line: 43, column: 39, scope: !19927)
!19959 = !DILocalVariable(name: "dst", scope: !19927, file: !13243, line: 45, type: !22)
!19960 = !DILocation(line: 45, column: 16, scope: !19927)
!19961 = !DILocation(line: 45, column: 36, scope: !19927)
!19962 = !DILocation(line: 45, column: 22, scope: !19927)
!19963 = !DILocalVariable(name: "src", scope: !19927, file: !13243, line: 46, type: !22)
!19964 = !DILocation(line: 46, column: 16, scope: !19927)
!19965 = !DILocation(line: 46, column: 36, scope: !19927)
!19966 = !DILocation(line: 46, column: 22, scope: !19927)
!19967 = !DILocalVariable(name: "src0", scope: !19927, file: !13243, line: 47, type: !1418)
!19968 = !DILocation(line: 47, column: 21, scope: !19927)
!19969 = !DILocation(line: 47, column: 28, scope: !19927)
!19970 = !DILocalVariable(name: "src1", scope: !19927, file: !13243, line: 47, type: !1418)
!19971 = !DILocation(line: 47, column: 37, scope: !19927)
!19972 = !DILocation(line: 47, column: 44, scope: !19927)
!19973 = !DILocalVariable(name: "src2", scope: !19927, file: !13243, line: 47, type: !1418)
!19974 = !DILocation(line: 47, column: 53, scope: !19927)
!19975 = !DILocation(line: 47, column: 60, scope: !19927)
!19976 = !DILocalVariable(name: "dst0", scope: !19927, file: !13243, line: 48, type: !23)
!19977 = !DILocation(line: 48, column: 15, scope: !19927)
!19978 = !DILocation(line: 48, column: 22, scope: !19927)
!19979 = !DILocalVariable(name: "dst1", scope: !19927, file: !13243, line: 48, type: !23)
!19980 = !DILocation(line: 48, column: 31, scope: !19927)
!19981 = !DILocation(line: 48, column: 38, scope: !19927)
!19982 = !DILocalVariable(name: "dst2", scope: !19927, file: !13243, line: 48, type: !23)
!19983 = !DILocation(line: 48, column: 47, scope: !19927)
!19984 = !DILocation(line: 48, column: 54, scope: !19927)
!19985 = !DILocalVariable(name: "y", scope: !19927, file: !13243, line: 49, type: !52)
!19986 = !DILocation(line: 49, column: 9, scope: !19927)
!19987 = !DILocalVariable(name: "x", scope: !19927, file: !13243, line: 49, type: !52)
!19988 = !DILocation(line: 49, column: 12, scope: !19927)
!19989 = !DILocalVariable(name: "sh", scope: !19927, file: !13243, line: 50, type: !343)
!19990 = !DILocation(line: 50, column: 15, scope: !19927)
!19991 = !DILocalVariable(name: "rnd", scope: !19927, file: !13243, line: 51, type: !343)
!19992 = !DILocation(line: 51, column: 15, scope: !19927)
!19993 = !DILocalVariable(name: "y_off_in", scope: !19927, file: !13243, line: 52, type: !52)
!19994 = !DILocation(line: 52, column: 9, scope: !19927)
!19995 = !DILocation(line: 52, column: 20, scope: !19927)
!19996 = !DILocalVariable(name: "y_off_out", scope: !19927, file: !13243, line: 53, type: !52)
!19997 = !DILocation(line: 53, column: 9, scope: !19927)
!19998 = !DILocation(line: 53, column: 21, scope: !19927)
!19999 = !DILocation(line: 53, column: 38, scope: !19927)
!20000 = !DILocalVariable(name: "uv_off_in", scope: !19927, file: !13243, line: 54, type: !343)
!20001 = !DILocation(line: 54, column: 15, scope: !19927)
!20002 = !DILocalVariable(name: "uv_off_out", scope: !19927, file: !13243, line: 55, type: !343)
!20003 = !DILocation(line: 55, column: 15, scope: !19927)
!20004 = !DILocalVariable(name: "cyy", scope: !19927, file: !13243, line: 56, type: !52)
!20005 = !DILocation(line: 56, column: 9, scope: !19927)
!20006 = !DILocation(line: 56, column: 15, scope: !19927)
!20007 = !DILocalVariable(name: "cyu", scope: !19927, file: !13243, line: 56, type: !52)
!20008 = !DILocation(line: 56, column: 27, scope: !19927)
!20009 = !DILocation(line: 56, column: 33, scope: !19927)
!20010 = !DILocalVariable(name: "cyv", scope: !19927, file: !13243, line: 56, type: !52)
!20011 = !DILocation(line: 56, column: 45, scope: !19927)
!20012 = !DILocation(line: 56, column: 51, scope: !19927)
!20013 = !DILocalVariable(name: "cuu", scope: !19927, file: !13243, line: 57, type: !52)
!20014 = !DILocation(line: 57, column: 9, scope: !19927)
!20015 = !DILocation(line: 57, column: 15, scope: !19927)
!20016 = !DILocalVariable(name: "cuv", scope: !19927, file: !13243, line: 57, type: !52)
!20017 = !DILocation(line: 57, column: 27, scope: !19927)
!20018 = !DILocation(line: 57, column: 33, scope: !19927)
!20019 = !DILocalVariable(name: "cvu", scope: !19927, file: !13243, line: 57, type: !52)
!20020 = !DILocation(line: 57, column: 45, scope: !19927)
!20021 = !DILocation(line: 57, column: 51, scope: !19927)
!20022 = !DILocalVariable(name: "cvv", scope: !19927, file: !13243, line: 57, type: !52)
!20023 = !DILocation(line: 57, column: 63, scope: !19927)
!20024 = !DILocation(line: 57, column: 69, scope: !19927)
!20025 = !DILocation(line: 61, column: 58, scope: !19927)
!20026 = !DILocation(line: 61, column: 61, scope: !19927)
!20027 = !DILocation(line: 61, column: 72, scope: !19927)
!20028 = !DILocation(line: 61, column: 77, scope: !19927)
!20029 = !DILocation(line: 61, column: 7, scope: !19927)
!20030 = !DILocation(line: 62, column: 58, scope: !19927)
!20031 = !DILocation(line: 62, column: 61, scope: !19927)
!20032 = !DILocation(line: 62, column: 72, scope: !19927)
!20033 = !DILocation(line: 62, column: 77, scope: !19927)
!20034 = !DILocation(line: 62, column: 7, scope: !19927)
!20035 = !DILocation(line: 63, column: 12, scope: !19935)
!20036 = !DILocation(line: 63, column: 10, scope: !19935)
!20037 = !DILocation(line: 63, column: 17, scope: !20038)
!20038 = !DILexicalBlockFile(scope: !19934, file: !13243, discriminator: 1)
!20039 = !DILocation(line: 63, column: 21, scope: !20038)
!20040 = !DILocation(line: 63, column: 19, scope: !20038)
!20041 = !DILocation(line: 63, column: 5, scope: !20038)
!20042 = !DILocation(line: 64, column: 16, scope: !19932)
!20043 = !DILocation(line: 64, column: 14, scope: !19932)
!20044 = !DILocation(line: 64, column: 21, scope: !20045)
!20045 = !DILexicalBlockFile(scope: !19931, file: !13243, discriminator: 1)
!20046 = !DILocation(line: 64, column: 25, scope: !20045)
!20047 = !DILocation(line: 64, column: 23, scope: !20045)
!20048 = !DILocation(line: 64, column: 9, scope: !20045)
!20049 = !DILocalVariable(name: "y00", scope: !19930, file: !13243, line: 65, type: !52)
!20050 = !DILocation(line: 65, column: 17, scope: !19930)
!20051 = !DILocation(line: 65, column: 28, scope: !19930)
!20052 = !DILocation(line: 65, column: 30, scope: !19930)
!20053 = !DILocation(line: 65, column: 23, scope: !19930)
!20054 = !DILocation(line: 65, column: 38, scope: !19930)
!20055 = !DILocation(line: 65, column: 36, scope: !19930)
!20056 = !DILocalVariable(name: "u", scope: !19930, file: !13243, line: 73, type: !52)
!20057 = !DILocation(line: 73, column: 17, scope: !19930)
!20058 = !DILocation(line: 73, column: 26, scope: !19930)
!20059 = !DILocation(line: 73, column: 21, scope: !19930)
!20060 = !DILocation(line: 73, column: 29, scope: !19930)
!20061 = !DILocalVariable(name: "v", scope: !19930, file: !13243, line: 73, type: !52)
!20062 = !DILocation(line: 73, column: 42, scope: !19930)
!20063 = !DILocation(line: 73, column: 51, scope: !19930)
!20064 = !DILocation(line: 73, column: 46, scope: !19930)
!20065 = !DILocation(line: 73, column: 54, scope: !19930)
!20066 = !DILocalVariable(name: "uv_val", scope: !19930, file: !13243, line: 74, type: !52)
!20067 = !DILocation(line: 74, column: 17, scope: !19930)
!20068 = !DILocation(line: 74, column: 26, scope: !19930)
!20069 = !DILocation(line: 74, column: 32, scope: !19930)
!20070 = !DILocation(line: 74, column: 30, scope: !19930)
!20071 = !DILocation(line: 74, column: 36, scope: !19930)
!20072 = !DILocation(line: 74, column: 42, scope: !19930)
!20073 = !DILocation(line: 74, column: 40, scope: !19930)
!20074 = !DILocation(line: 74, column: 34, scope: !19930)
!20075 = !DILocation(line: 74, column: 44, scope: !19930)
!20076 = !DILocation(line: 74, column: 52, scope: !19930)
!20077 = !DILocation(line: 74, column: 50, scope: !19930)
!20078 = !DILocation(line: 76, column: 46, scope: !19930)
!20079 = !DILocation(line: 76, column: 52, scope: !19930)
!20080 = !DILocation(line: 76, column: 50, scope: !19930)
!20081 = !DILocation(line: 76, column: 58, scope: !19930)
!20082 = !DILocation(line: 76, column: 56, scope: !19930)
!20083 = !DILocation(line: 76, column: 66, scope: !19930)
!20084 = !DILocation(line: 76, column: 28, scope: !19930)
!20085 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !19941)
!20086 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !19941)
!20087 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !19941)
!20088 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !19941)
!20089 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !19941)
!20090 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !19941)
!20091 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !19941)
!20092 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !19941)
!20093 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !19941)
!20094 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !19941)
!20095 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !19941)
!20096 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !19941)
!20097 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !19941)
!20098 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !19941)
!20099 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !19941)
!20100 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !19941)
!20101 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !19941)
!20102 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !19941)
!20103 = !DILocation(line: 76, column: 18, scope: !19930)
!20104 = !DILocation(line: 76, column: 20, scope: !19930)
!20105 = !DILocation(line: 76, column: 13, scope: !19930)
!20106 = !DILocation(line: 76, column: 26, scope: !19930)
!20107 = !DILocation(line: 87, column: 41, scope: !19930)
!20108 = !DILocation(line: 87, column: 45, scope: !19930)
!20109 = !DILocation(line: 87, column: 43, scope: !19930)
!20110 = !DILocation(line: 87, column: 51, scope: !19930)
!20111 = !DILocation(line: 87, column: 55, scope: !19930)
!20112 = !DILocation(line: 87, column: 53, scope: !19930)
!20113 = !DILocation(line: 87, column: 49, scope: !19930)
!20114 = !DILocation(line: 87, column: 59, scope: !19930)
!20115 = !DILocation(line: 87, column: 73, scope: !19930)
!20116 = !DILocation(line: 87, column: 23, scope: !19930)
!20117 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !19929)
!20118 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !19929)
!20119 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !19929)
!20120 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !19929)
!20121 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !19929)
!20122 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !19929)
!20123 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !19929)
!20124 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !19929)
!20125 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !19929)
!20126 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !19929)
!20127 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !19929)
!20128 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !19929)
!20129 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !19929)
!20130 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !19929)
!20131 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !19929)
!20132 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !19929)
!20133 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !19929)
!20134 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !19929)
!20135 = !DILocation(line: 87, column: 18, scope: !19930)
!20136 = !DILocation(line: 87, column: 13, scope: !19930)
!20137 = !DILocation(line: 87, column: 21, scope: !19930)
!20138 = !DILocation(line: 88, column: 41, scope: !19930)
!20139 = !DILocation(line: 88, column: 45, scope: !19930)
!20140 = !DILocation(line: 88, column: 43, scope: !19930)
!20141 = !DILocation(line: 88, column: 51, scope: !19930)
!20142 = !DILocation(line: 88, column: 55, scope: !19930)
!20143 = !DILocation(line: 88, column: 53, scope: !19930)
!20144 = !DILocation(line: 88, column: 49, scope: !19930)
!20145 = !DILocation(line: 88, column: 59, scope: !19930)
!20146 = !DILocation(line: 88, column: 73, scope: !19930)
!20147 = !DILocation(line: 88, column: 23, scope: !19930)
!20148 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !19938)
!20149 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !19938)
!20150 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !19938)
!20151 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !19938)
!20152 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !19938)
!20153 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !19938)
!20154 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !19938)
!20155 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !19938)
!20156 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !19938)
!20157 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !19938)
!20158 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !19938)
!20159 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !19938)
!20160 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !19938)
!20161 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !19938)
!20162 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !19938)
!20163 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !19938)
!20164 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !19938)
!20165 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !19938)
!20166 = !DILocation(line: 88, column: 18, scope: !19930)
!20167 = !DILocation(line: 88, column: 13, scope: !19930)
!20168 = !DILocation(line: 88, column: 21, scope: !19930)
!20169 = !DILocation(line: 89, column: 9, scope: !19930)
!20170 = !DILocation(line: 64, column: 29, scope: !20171)
!20171 = !DILexicalBlockFile(scope: !19931, file: !13243, discriminator: 2)
!20172 = !DILocation(line: 64, column: 9, scope: !20171)
!20173 = distinct !{!20173, !20174}
!20174 = !DILocation(line: 64, column: 9, scope: !19933)
!20175 = !DILocation(line: 91, column: 18, scope: !19933)
!20176 = !DILocation(line: 91, column: 32, scope: !19933)
!20177 = !DILocation(line: 91, column: 44, scope: !19933)
!20178 = !DILocation(line: 91, column: 14, scope: !19933)
!20179 = !DILocation(line: 92, column: 17, scope: !19933)
!20180 = !DILocation(line: 92, column: 31, scope: !19933)
!20181 = !DILocation(line: 92, column: 14, scope: !19933)
!20182 = !DILocation(line: 93, column: 17, scope: !19933)
!20183 = !DILocation(line: 93, column: 31, scope: !19933)
!20184 = !DILocation(line: 93, column: 14, scope: !19933)
!20185 = !DILocation(line: 94, column: 18, scope: !19933)
!20186 = !DILocation(line: 94, column: 32, scope: !19933)
!20187 = !DILocation(line: 94, column: 44, scope: !19933)
!20188 = !DILocation(line: 94, column: 14, scope: !19933)
!20189 = !DILocation(line: 95, column: 17, scope: !19933)
!20190 = !DILocation(line: 95, column: 31, scope: !19933)
!20191 = !DILocation(line: 95, column: 14, scope: !19933)
!20192 = !DILocation(line: 96, column: 17, scope: !19933)
!20193 = !DILocation(line: 96, column: 31, scope: !19933)
!20194 = !DILocation(line: 96, column: 14, scope: !19933)
!20195 = !DILocation(line: 97, column: 5, scope: !19933)
!20196 = !DILocation(line: 63, column: 25, scope: !20197)
!20197 = !DILexicalBlockFile(scope: !19934, file: !13243, discriminator: 2)
!20198 = !DILocation(line: 63, column: 5, scope: !20197)
!20199 = distinct !{!20199, !20200}
!20200 = !DILocation(line: 63, column: 5, scope: !19927)
!20201 = !DILocation(line: 98, column: 1, scope: !19927)
!20202 = distinct !DISubprogram(name: "yuv2yuv_422p12to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!20203 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20204)
!20204 = distinct !DILocation(line: 78, column: 31, scope: !20205)
!20205 = distinct !DILexicalBlock(scope: !20206, file: !13243, line: 64, column: 33)
!20206 = distinct !DILexicalBlock(scope: !20207, file: !13243, line: 64, column: 9)
!20207 = distinct !DILexicalBlock(scope: !20208, file: !13243, line: 64, column: 9)
!20208 = distinct !DILexicalBlock(scope: !20209, file: !13243, line: 63, column: 29)
!20209 = distinct !DILexicalBlock(scope: !20210, file: !13243, line: 63, column: 5)
!20210 = distinct !DILexicalBlock(scope: !20202, file: !13243, line: 63, column: 5)
!20211 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20204)
!20212 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20213)
!20213 = distinct !DILocation(line: 87, column: 23, scope: !20205)
!20214 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20213)
!20215 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20216)
!20216 = distinct !DILocation(line: 88, column: 23, scope: !20205)
!20217 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20216)
!20218 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20219)
!20219 = distinct !DILocation(line: 76, column: 28, scope: !20205)
!20220 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20219)
!20221 = !DILocalVariable(name: "_dst", arg: 1, scope: !20202, file: !13243, line: 40, type: !17)
!20222 = !DILocation(line: 40, column: 43, scope: !20202)
!20223 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !20202, file: !13243, line: 40, type: !50)
!20224 = !DILocation(line: 40, column: 68, scope: !20202)
!20225 = !DILocalVariable(name: "_src", arg: 3, scope: !20202, file: !13243, line: 41, type: !17)
!20226 = !DILocation(line: 41, column: 34, scope: !20202)
!20227 = !DILocalVariable(name: "src_stride", arg: 4, scope: !20202, file: !13243, line: 41, type: !50)
!20228 = !DILocation(line: 41, column: 59, scope: !20202)
!20229 = !DILocalVariable(name: "w", arg: 5, scope: !20202, file: !13243, line: 42, type: !52)
!20230 = !DILocation(line: 42, column: 29, scope: !20202)
!20231 = !DILocalVariable(name: "h", arg: 6, scope: !20202, file: !13243, line: 42, type: !52)
!20232 = !DILocation(line: 42, column: 36, scope: !20202)
!20233 = !DILocalVariable(name: "c", arg: 7, scope: !20202, file: !13243, line: 42, type: !53)
!20234 = !DILocation(line: 42, column: 53, scope: !20202)
!20235 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !20202, file: !13243, line: 43, type: !84)
!20236 = !DILocation(line: 43, column: 39, scope: !20202)
!20237 = !DILocalVariable(name: "dst", scope: !20202, file: !13243, line: 45, type: !22)
!20238 = !DILocation(line: 45, column: 16, scope: !20202)
!20239 = !DILocation(line: 45, column: 36, scope: !20202)
!20240 = !DILocation(line: 45, column: 22, scope: !20202)
!20241 = !DILocalVariable(name: "src", scope: !20202, file: !13243, line: 46, type: !22)
!20242 = !DILocation(line: 46, column: 16, scope: !20202)
!20243 = !DILocation(line: 46, column: 36, scope: !20202)
!20244 = !DILocation(line: 46, column: 22, scope: !20202)
!20245 = !DILocalVariable(name: "src0", scope: !20202, file: !13243, line: 47, type: !1418)
!20246 = !DILocation(line: 47, column: 21, scope: !20202)
!20247 = !DILocation(line: 47, column: 28, scope: !20202)
!20248 = !DILocalVariable(name: "src1", scope: !20202, file: !13243, line: 47, type: !1418)
!20249 = !DILocation(line: 47, column: 37, scope: !20202)
!20250 = !DILocation(line: 47, column: 44, scope: !20202)
!20251 = !DILocalVariable(name: "src2", scope: !20202, file: !13243, line: 47, type: !1418)
!20252 = !DILocation(line: 47, column: 53, scope: !20202)
!20253 = !DILocation(line: 47, column: 60, scope: !20202)
!20254 = !DILocalVariable(name: "dst0", scope: !20202, file: !13243, line: 48, type: !23)
!20255 = !DILocation(line: 48, column: 15, scope: !20202)
!20256 = !DILocation(line: 48, column: 22, scope: !20202)
!20257 = !DILocalVariable(name: "dst1", scope: !20202, file: !13243, line: 48, type: !23)
!20258 = !DILocation(line: 48, column: 31, scope: !20202)
!20259 = !DILocation(line: 48, column: 38, scope: !20202)
!20260 = !DILocalVariable(name: "dst2", scope: !20202, file: !13243, line: 48, type: !23)
!20261 = !DILocation(line: 48, column: 47, scope: !20202)
!20262 = !DILocation(line: 48, column: 54, scope: !20202)
!20263 = !DILocalVariable(name: "y", scope: !20202, file: !13243, line: 49, type: !52)
!20264 = !DILocation(line: 49, column: 9, scope: !20202)
!20265 = !DILocalVariable(name: "x", scope: !20202, file: !13243, line: 49, type: !52)
!20266 = !DILocation(line: 49, column: 12, scope: !20202)
!20267 = !DILocalVariable(name: "sh", scope: !20202, file: !13243, line: 50, type: !343)
!20268 = !DILocation(line: 50, column: 15, scope: !20202)
!20269 = !DILocalVariable(name: "rnd", scope: !20202, file: !13243, line: 51, type: !343)
!20270 = !DILocation(line: 51, column: 15, scope: !20202)
!20271 = !DILocalVariable(name: "y_off_in", scope: !20202, file: !13243, line: 52, type: !52)
!20272 = !DILocation(line: 52, column: 9, scope: !20202)
!20273 = !DILocation(line: 52, column: 20, scope: !20202)
!20274 = !DILocalVariable(name: "y_off_out", scope: !20202, file: !13243, line: 53, type: !52)
!20275 = !DILocation(line: 53, column: 9, scope: !20202)
!20276 = !DILocation(line: 53, column: 21, scope: !20202)
!20277 = !DILocation(line: 53, column: 38, scope: !20202)
!20278 = !DILocalVariable(name: "uv_off_in", scope: !20202, file: !13243, line: 54, type: !343)
!20279 = !DILocation(line: 54, column: 15, scope: !20202)
!20280 = !DILocalVariable(name: "uv_off_out", scope: !20202, file: !13243, line: 55, type: !343)
!20281 = !DILocation(line: 55, column: 15, scope: !20202)
!20282 = !DILocalVariable(name: "cyy", scope: !20202, file: !13243, line: 56, type: !52)
!20283 = !DILocation(line: 56, column: 9, scope: !20202)
!20284 = !DILocation(line: 56, column: 15, scope: !20202)
!20285 = !DILocalVariable(name: "cyu", scope: !20202, file: !13243, line: 56, type: !52)
!20286 = !DILocation(line: 56, column: 27, scope: !20202)
!20287 = !DILocation(line: 56, column: 33, scope: !20202)
!20288 = !DILocalVariable(name: "cyv", scope: !20202, file: !13243, line: 56, type: !52)
!20289 = !DILocation(line: 56, column: 45, scope: !20202)
!20290 = !DILocation(line: 56, column: 51, scope: !20202)
!20291 = !DILocalVariable(name: "cuu", scope: !20202, file: !13243, line: 57, type: !52)
!20292 = !DILocation(line: 57, column: 9, scope: !20202)
!20293 = !DILocation(line: 57, column: 15, scope: !20202)
!20294 = !DILocalVariable(name: "cuv", scope: !20202, file: !13243, line: 57, type: !52)
!20295 = !DILocation(line: 57, column: 27, scope: !20202)
!20296 = !DILocation(line: 57, column: 33, scope: !20202)
!20297 = !DILocalVariable(name: "cvu", scope: !20202, file: !13243, line: 57, type: !52)
!20298 = !DILocation(line: 57, column: 45, scope: !20202)
!20299 = !DILocation(line: 57, column: 51, scope: !20202)
!20300 = !DILocalVariable(name: "cvv", scope: !20202, file: !13243, line: 57, type: !52)
!20301 = !DILocation(line: 57, column: 63, scope: !20202)
!20302 = !DILocation(line: 57, column: 69, scope: !20202)
!20303 = !DILocation(line: 61, column: 58, scope: !20202)
!20304 = !DILocation(line: 61, column: 61, scope: !20202)
!20305 = !DILocation(line: 61, column: 72, scope: !20202)
!20306 = !DILocation(line: 61, column: 77, scope: !20202)
!20307 = !DILocation(line: 61, column: 7, scope: !20202)
!20308 = !DILocation(line: 62, column: 58, scope: !20202)
!20309 = !DILocation(line: 62, column: 61, scope: !20202)
!20310 = !DILocation(line: 62, column: 72, scope: !20202)
!20311 = !DILocation(line: 62, column: 77, scope: !20202)
!20312 = !DILocation(line: 62, column: 7, scope: !20202)
!20313 = !DILocation(line: 63, column: 12, scope: !20210)
!20314 = !DILocation(line: 63, column: 10, scope: !20210)
!20315 = !DILocation(line: 63, column: 17, scope: !20316)
!20316 = !DILexicalBlockFile(scope: !20209, file: !13243, discriminator: 1)
!20317 = !DILocation(line: 63, column: 21, scope: !20316)
!20318 = !DILocation(line: 63, column: 19, scope: !20316)
!20319 = !DILocation(line: 63, column: 5, scope: !20316)
!20320 = !DILocation(line: 64, column: 16, scope: !20207)
!20321 = !DILocation(line: 64, column: 14, scope: !20207)
!20322 = !DILocation(line: 64, column: 21, scope: !20323)
!20323 = !DILexicalBlockFile(scope: !20206, file: !13243, discriminator: 1)
!20324 = !DILocation(line: 64, column: 25, scope: !20323)
!20325 = !DILocation(line: 64, column: 23, scope: !20323)
!20326 = !DILocation(line: 64, column: 9, scope: !20323)
!20327 = !DILocalVariable(name: "y00", scope: !20205, file: !13243, line: 65, type: !52)
!20328 = !DILocation(line: 65, column: 17, scope: !20205)
!20329 = !DILocation(line: 65, column: 28, scope: !20205)
!20330 = !DILocation(line: 65, column: 30, scope: !20205)
!20331 = !DILocation(line: 65, column: 23, scope: !20205)
!20332 = !DILocation(line: 65, column: 38, scope: !20205)
!20333 = !DILocation(line: 65, column: 36, scope: !20205)
!20334 = !DILocalVariable(name: "y01", scope: !20205, file: !13243, line: 67, type: !52)
!20335 = !DILocation(line: 67, column: 17, scope: !20205)
!20336 = !DILocation(line: 67, column: 32, scope: !20205)
!20337 = !DILocation(line: 67, column: 30, scope: !20205)
!20338 = !DILocation(line: 67, column: 34, scope: !20205)
!20339 = !DILocation(line: 67, column: 23, scope: !20205)
!20340 = !DILocation(line: 67, column: 41, scope: !20205)
!20341 = !DILocation(line: 67, column: 39, scope: !20205)
!20342 = !DILocalVariable(name: "u", scope: !20205, file: !13243, line: 73, type: !52)
!20343 = !DILocation(line: 73, column: 17, scope: !20205)
!20344 = !DILocation(line: 73, column: 26, scope: !20205)
!20345 = !DILocation(line: 73, column: 21, scope: !20205)
!20346 = !DILocation(line: 73, column: 29, scope: !20205)
!20347 = !DILocalVariable(name: "v", scope: !20205, file: !13243, line: 73, type: !52)
!20348 = !DILocation(line: 73, column: 42, scope: !20205)
!20349 = !DILocation(line: 73, column: 51, scope: !20205)
!20350 = !DILocation(line: 73, column: 46, scope: !20205)
!20351 = !DILocation(line: 73, column: 54, scope: !20205)
!20352 = !DILocalVariable(name: "uv_val", scope: !20205, file: !13243, line: 74, type: !52)
!20353 = !DILocation(line: 74, column: 17, scope: !20205)
!20354 = !DILocation(line: 74, column: 26, scope: !20205)
!20355 = !DILocation(line: 74, column: 32, scope: !20205)
!20356 = !DILocation(line: 74, column: 30, scope: !20205)
!20357 = !DILocation(line: 74, column: 36, scope: !20205)
!20358 = !DILocation(line: 74, column: 42, scope: !20205)
!20359 = !DILocation(line: 74, column: 40, scope: !20205)
!20360 = !DILocation(line: 74, column: 34, scope: !20205)
!20361 = !DILocation(line: 74, column: 44, scope: !20205)
!20362 = !DILocation(line: 74, column: 52, scope: !20205)
!20363 = !DILocation(line: 74, column: 50, scope: !20205)
!20364 = !DILocation(line: 76, column: 46, scope: !20205)
!20365 = !DILocation(line: 76, column: 52, scope: !20205)
!20366 = !DILocation(line: 76, column: 50, scope: !20205)
!20367 = !DILocation(line: 76, column: 58, scope: !20205)
!20368 = !DILocation(line: 76, column: 56, scope: !20205)
!20369 = !DILocation(line: 76, column: 66, scope: !20205)
!20370 = !DILocation(line: 76, column: 28, scope: !20205)
!20371 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20219)
!20372 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20219)
!20373 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20219)
!20374 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20219)
!20375 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20219)
!20376 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20219)
!20377 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20219)
!20378 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20219)
!20379 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20219)
!20380 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20219)
!20381 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20219)
!20382 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20219)
!20383 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20219)
!20384 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20219)
!20385 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20219)
!20386 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20219)
!20387 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20219)
!20388 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20219)
!20389 = !DILocation(line: 76, column: 18, scope: !20205)
!20390 = !DILocation(line: 76, column: 20, scope: !20205)
!20391 = !DILocation(line: 76, column: 13, scope: !20205)
!20392 = !DILocation(line: 76, column: 26, scope: !20205)
!20393 = !DILocation(line: 78, column: 49, scope: !20205)
!20394 = !DILocation(line: 78, column: 55, scope: !20205)
!20395 = !DILocation(line: 78, column: 53, scope: !20205)
!20396 = !DILocation(line: 78, column: 61, scope: !20205)
!20397 = !DILocation(line: 78, column: 59, scope: !20205)
!20398 = !DILocation(line: 78, column: 69, scope: !20205)
!20399 = !DILocation(line: 78, column: 31, scope: !20205)
!20400 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20204)
!20401 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20204)
!20402 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20204)
!20403 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20204)
!20404 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20204)
!20405 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20204)
!20406 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20204)
!20407 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20204)
!20408 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20204)
!20409 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20204)
!20410 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20204)
!20411 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20204)
!20412 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20204)
!20413 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20204)
!20414 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20204)
!20415 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20204)
!20416 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20204)
!20417 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20204)
!20418 = !DILocation(line: 78, column: 18, scope: !20205)
!20419 = !DILocation(line: 78, column: 20, scope: !20205)
!20420 = !DILocation(line: 78, column: 24, scope: !20205)
!20421 = !DILocation(line: 78, column: 13, scope: !20205)
!20422 = !DILocation(line: 78, column: 29, scope: !20205)
!20423 = !DILocation(line: 87, column: 41, scope: !20205)
!20424 = !DILocation(line: 87, column: 45, scope: !20205)
!20425 = !DILocation(line: 87, column: 43, scope: !20205)
!20426 = !DILocation(line: 87, column: 51, scope: !20205)
!20427 = !DILocation(line: 87, column: 55, scope: !20205)
!20428 = !DILocation(line: 87, column: 53, scope: !20205)
!20429 = !DILocation(line: 87, column: 49, scope: !20205)
!20430 = !DILocation(line: 87, column: 59, scope: !20205)
!20431 = !DILocation(line: 87, column: 73, scope: !20205)
!20432 = !DILocation(line: 87, column: 23, scope: !20205)
!20433 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20213)
!20434 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20213)
!20435 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20213)
!20436 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20213)
!20437 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20213)
!20438 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20213)
!20439 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20213)
!20440 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20213)
!20441 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20213)
!20442 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20213)
!20443 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20213)
!20444 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20213)
!20445 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20213)
!20446 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20213)
!20447 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20213)
!20448 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20213)
!20449 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20213)
!20450 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20213)
!20451 = !DILocation(line: 87, column: 18, scope: !20205)
!20452 = !DILocation(line: 87, column: 13, scope: !20205)
!20453 = !DILocation(line: 87, column: 21, scope: !20205)
!20454 = !DILocation(line: 88, column: 41, scope: !20205)
!20455 = !DILocation(line: 88, column: 45, scope: !20205)
!20456 = !DILocation(line: 88, column: 43, scope: !20205)
!20457 = !DILocation(line: 88, column: 51, scope: !20205)
!20458 = !DILocation(line: 88, column: 55, scope: !20205)
!20459 = !DILocation(line: 88, column: 53, scope: !20205)
!20460 = !DILocation(line: 88, column: 49, scope: !20205)
!20461 = !DILocation(line: 88, column: 59, scope: !20205)
!20462 = !DILocation(line: 88, column: 73, scope: !20205)
!20463 = !DILocation(line: 88, column: 23, scope: !20205)
!20464 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20216)
!20465 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20216)
!20466 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20216)
!20467 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20216)
!20468 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20216)
!20469 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20216)
!20470 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20216)
!20471 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20216)
!20472 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20216)
!20473 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20216)
!20474 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20216)
!20475 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20216)
!20476 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20216)
!20477 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20216)
!20478 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20216)
!20479 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20216)
!20480 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20216)
!20481 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20216)
!20482 = !DILocation(line: 88, column: 18, scope: !20205)
!20483 = !DILocation(line: 88, column: 13, scope: !20205)
!20484 = !DILocation(line: 88, column: 21, scope: !20205)
!20485 = !DILocation(line: 89, column: 9, scope: !20205)
!20486 = !DILocation(line: 64, column: 29, scope: !20487)
!20487 = !DILexicalBlockFile(scope: !20206, file: !13243, discriminator: 2)
!20488 = !DILocation(line: 64, column: 9, scope: !20487)
!20489 = distinct !{!20489, !20490}
!20490 = !DILocation(line: 64, column: 9, scope: !20208)
!20491 = !DILocation(line: 91, column: 18, scope: !20208)
!20492 = !DILocation(line: 91, column: 32, scope: !20208)
!20493 = !DILocation(line: 91, column: 44, scope: !20208)
!20494 = !DILocation(line: 91, column: 14, scope: !20208)
!20495 = !DILocation(line: 92, column: 17, scope: !20208)
!20496 = !DILocation(line: 92, column: 31, scope: !20208)
!20497 = !DILocation(line: 92, column: 14, scope: !20208)
!20498 = !DILocation(line: 93, column: 17, scope: !20208)
!20499 = !DILocation(line: 93, column: 31, scope: !20208)
!20500 = !DILocation(line: 93, column: 14, scope: !20208)
!20501 = !DILocation(line: 94, column: 18, scope: !20208)
!20502 = !DILocation(line: 94, column: 32, scope: !20208)
!20503 = !DILocation(line: 94, column: 44, scope: !20208)
!20504 = !DILocation(line: 94, column: 14, scope: !20208)
!20505 = !DILocation(line: 95, column: 17, scope: !20208)
!20506 = !DILocation(line: 95, column: 31, scope: !20208)
!20507 = !DILocation(line: 95, column: 14, scope: !20208)
!20508 = !DILocation(line: 96, column: 17, scope: !20208)
!20509 = !DILocation(line: 96, column: 31, scope: !20208)
!20510 = !DILocation(line: 96, column: 14, scope: !20208)
!20511 = !DILocation(line: 97, column: 5, scope: !20208)
!20512 = !DILocation(line: 63, column: 25, scope: !20513)
!20513 = !DILexicalBlockFile(scope: !20209, file: !13243, discriminator: 2)
!20514 = !DILocation(line: 63, column: 5, scope: !20513)
!20515 = distinct !{!20515, !20516}
!20516 = !DILocation(line: 63, column: 5, scope: !20202)
!20517 = !DILocation(line: 98, column: 1, scope: !20202)
!20518 = distinct !DISubprogram(name: "yuv2yuv_420p12to10_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!20519 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20520)
!20520 = distinct !DILocation(line: 78, column: 31, scope: !20521)
!20521 = distinct !DILexicalBlock(scope: !20522, file: !13243, line: 64, column: 33)
!20522 = distinct !DILexicalBlock(scope: !20523, file: !13243, line: 64, column: 9)
!20523 = distinct !DILexicalBlock(scope: !20524, file: !13243, line: 64, column: 9)
!20524 = distinct !DILexicalBlock(scope: !20525, file: !13243, line: 63, column: 29)
!20525 = distinct !DILexicalBlock(scope: !20526, file: !13243, line: 63, column: 5)
!20526 = distinct !DILexicalBlock(scope: !20518, file: !13243, line: 63, column: 5)
!20527 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20520)
!20528 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20529)
!20529 = distinct !DILocation(line: 81, column: 31, scope: !20521)
!20530 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20529)
!20531 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20532)
!20532 = distinct !DILocation(line: 83, column: 31, scope: !20521)
!20533 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20532)
!20534 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20535)
!20535 = distinct !DILocation(line: 87, column: 23, scope: !20521)
!20536 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20535)
!20537 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20538)
!20538 = distinct !DILocation(line: 88, column: 23, scope: !20521)
!20539 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20538)
!20540 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20541)
!20541 = distinct !DILocation(line: 76, column: 28, scope: !20521)
!20542 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20541)
!20543 = !DILocalVariable(name: "_dst", arg: 1, scope: !20518, file: !13243, line: 40, type: !17)
!20544 = !DILocation(line: 40, column: 43, scope: !20518)
!20545 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !20518, file: !13243, line: 40, type: !50)
!20546 = !DILocation(line: 40, column: 68, scope: !20518)
!20547 = !DILocalVariable(name: "_src", arg: 3, scope: !20518, file: !13243, line: 41, type: !17)
!20548 = !DILocation(line: 41, column: 34, scope: !20518)
!20549 = !DILocalVariable(name: "src_stride", arg: 4, scope: !20518, file: !13243, line: 41, type: !50)
!20550 = !DILocation(line: 41, column: 59, scope: !20518)
!20551 = !DILocalVariable(name: "w", arg: 5, scope: !20518, file: !13243, line: 42, type: !52)
!20552 = !DILocation(line: 42, column: 29, scope: !20518)
!20553 = !DILocalVariable(name: "h", arg: 6, scope: !20518, file: !13243, line: 42, type: !52)
!20554 = !DILocation(line: 42, column: 36, scope: !20518)
!20555 = !DILocalVariable(name: "c", arg: 7, scope: !20518, file: !13243, line: 42, type: !53)
!20556 = !DILocation(line: 42, column: 53, scope: !20518)
!20557 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !20518, file: !13243, line: 43, type: !84)
!20558 = !DILocation(line: 43, column: 39, scope: !20518)
!20559 = !DILocalVariable(name: "dst", scope: !20518, file: !13243, line: 45, type: !22)
!20560 = !DILocation(line: 45, column: 16, scope: !20518)
!20561 = !DILocation(line: 45, column: 36, scope: !20518)
!20562 = !DILocation(line: 45, column: 22, scope: !20518)
!20563 = !DILocalVariable(name: "src", scope: !20518, file: !13243, line: 46, type: !22)
!20564 = !DILocation(line: 46, column: 16, scope: !20518)
!20565 = !DILocation(line: 46, column: 36, scope: !20518)
!20566 = !DILocation(line: 46, column: 22, scope: !20518)
!20567 = !DILocalVariable(name: "src0", scope: !20518, file: !13243, line: 47, type: !1418)
!20568 = !DILocation(line: 47, column: 21, scope: !20518)
!20569 = !DILocation(line: 47, column: 28, scope: !20518)
!20570 = !DILocalVariable(name: "src1", scope: !20518, file: !13243, line: 47, type: !1418)
!20571 = !DILocation(line: 47, column: 37, scope: !20518)
!20572 = !DILocation(line: 47, column: 44, scope: !20518)
!20573 = !DILocalVariable(name: "src2", scope: !20518, file: !13243, line: 47, type: !1418)
!20574 = !DILocation(line: 47, column: 53, scope: !20518)
!20575 = !DILocation(line: 47, column: 60, scope: !20518)
!20576 = !DILocalVariable(name: "dst0", scope: !20518, file: !13243, line: 48, type: !23)
!20577 = !DILocation(line: 48, column: 15, scope: !20518)
!20578 = !DILocation(line: 48, column: 22, scope: !20518)
!20579 = !DILocalVariable(name: "dst1", scope: !20518, file: !13243, line: 48, type: !23)
!20580 = !DILocation(line: 48, column: 31, scope: !20518)
!20581 = !DILocation(line: 48, column: 38, scope: !20518)
!20582 = !DILocalVariable(name: "dst2", scope: !20518, file: !13243, line: 48, type: !23)
!20583 = !DILocation(line: 48, column: 47, scope: !20518)
!20584 = !DILocation(line: 48, column: 54, scope: !20518)
!20585 = !DILocalVariable(name: "y", scope: !20518, file: !13243, line: 49, type: !52)
!20586 = !DILocation(line: 49, column: 9, scope: !20518)
!20587 = !DILocalVariable(name: "x", scope: !20518, file: !13243, line: 49, type: !52)
!20588 = !DILocation(line: 49, column: 12, scope: !20518)
!20589 = !DILocalVariable(name: "sh", scope: !20518, file: !13243, line: 50, type: !343)
!20590 = !DILocation(line: 50, column: 15, scope: !20518)
!20591 = !DILocalVariable(name: "rnd", scope: !20518, file: !13243, line: 51, type: !343)
!20592 = !DILocation(line: 51, column: 15, scope: !20518)
!20593 = !DILocalVariable(name: "y_off_in", scope: !20518, file: !13243, line: 52, type: !52)
!20594 = !DILocation(line: 52, column: 9, scope: !20518)
!20595 = !DILocation(line: 52, column: 20, scope: !20518)
!20596 = !DILocalVariable(name: "y_off_out", scope: !20518, file: !13243, line: 53, type: !52)
!20597 = !DILocation(line: 53, column: 9, scope: !20518)
!20598 = !DILocation(line: 53, column: 21, scope: !20518)
!20599 = !DILocation(line: 53, column: 38, scope: !20518)
!20600 = !DILocalVariable(name: "uv_off_in", scope: !20518, file: !13243, line: 54, type: !343)
!20601 = !DILocation(line: 54, column: 15, scope: !20518)
!20602 = !DILocalVariable(name: "uv_off_out", scope: !20518, file: !13243, line: 55, type: !343)
!20603 = !DILocation(line: 55, column: 15, scope: !20518)
!20604 = !DILocalVariable(name: "cyy", scope: !20518, file: !13243, line: 56, type: !52)
!20605 = !DILocation(line: 56, column: 9, scope: !20518)
!20606 = !DILocation(line: 56, column: 15, scope: !20518)
!20607 = !DILocalVariable(name: "cyu", scope: !20518, file: !13243, line: 56, type: !52)
!20608 = !DILocation(line: 56, column: 27, scope: !20518)
!20609 = !DILocation(line: 56, column: 33, scope: !20518)
!20610 = !DILocalVariable(name: "cyv", scope: !20518, file: !13243, line: 56, type: !52)
!20611 = !DILocation(line: 56, column: 45, scope: !20518)
!20612 = !DILocation(line: 56, column: 51, scope: !20518)
!20613 = !DILocalVariable(name: "cuu", scope: !20518, file: !13243, line: 57, type: !52)
!20614 = !DILocation(line: 57, column: 9, scope: !20518)
!20615 = !DILocation(line: 57, column: 15, scope: !20518)
!20616 = !DILocalVariable(name: "cuv", scope: !20518, file: !13243, line: 57, type: !52)
!20617 = !DILocation(line: 57, column: 27, scope: !20518)
!20618 = !DILocation(line: 57, column: 33, scope: !20518)
!20619 = !DILocalVariable(name: "cvu", scope: !20518, file: !13243, line: 57, type: !52)
!20620 = !DILocation(line: 57, column: 45, scope: !20518)
!20621 = !DILocation(line: 57, column: 51, scope: !20518)
!20622 = !DILocalVariable(name: "cvv", scope: !20518, file: !13243, line: 57, type: !52)
!20623 = !DILocation(line: 57, column: 63, scope: !20518)
!20624 = !DILocation(line: 57, column: 69, scope: !20518)
!20625 = !DILocation(line: 61, column: 58, scope: !20518)
!20626 = !DILocation(line: 61, column: 61, scope: !20518)
!20627 = !DILocation(line: 61, column: 72, scope: !20518)
!20628 = !DILocation(line: 61, column: 77, scope: !20518)
!20629 = !DILocation(line: 61, column: 7, scope: !20518)
!20630 = !DILocation(line: 62, column: 58, scope: !20518)
!20631 = !DILocation(line: 62, column: 61, scope: !20518)
!20632 = !DILocation(line: 62, column: 72, scope: !20518)
!20633 = !DILocation(line: 62, column: 77, scope: !20518)
!20634 = !DILocation(line: 62, column: 7, scope: !20518)
!20635 = !DILocation(line: 63, column: 12, scope: !20526)
!20636 = !DILocation(line: 63, column: 10, scope: !20526)
!20637 = !DILocation(line: 63, column: 17, scope: !20638)
!20638 = !DILexicalBlockFile(scope: !20525, file: !13243, discriminator: 1)
!20639 = !DILocation(line: 63, column: 21, scope: !20638)
!20640 = !DILocation(line: 63, column: 19, scope: !20638)
!20641 = !DILocation(line: 63, column: 5, scope: !20638)
!20642 = !DILocation(line: 64, column: 16, scope: !20523)
!20643 = !DILocation(line: 64, column: 14, scope: !20523)
!20644 = !DILocation(line: 64, column: 21, scope: !20645)
!20645 = !DILexicalBlockFile(scope: !20522, file: !13243, discriminator: 1)
!20646 = !DILocation(line: 64, column: 25, scope: !20645)
!20647 = !DILocation(line: 64, column: 23, scope: !20645)
!20648 = !DILocation(line: 64, column: 9, scope: !20645)
!20649 = !DILocalVariable(name: "y00", scope: !20521, file: !13243, line: 65, type: !52)
!20650 = !DILocation(line: 65, column: 17, scope: !20521)
!20651 = !DILocation(line: 65, column: 28, scope: !20521)
!20652 = !DILocation(line: 65, column: 30, scope: !20521)
!20653 = !DILocation(line: 65, column: 23, scope: !20521)
!20654 = !DILocation(line: 65, column: 38, scope: !20521)
!20655 = !DILocation(line: 65, column: 36, scope: !20521)
!20656 = !DILocalVariable(name: "y01", scope: !20521, file: !13243, line: 67, type: !52)
!20657 = !DILocation(line: 67, column: 17, scope: !20521)
!20658 = !DILocation(line: 67, column: 32, scope: !20521)
!20659 = !DILocation(line: 67, column: 30, scope: !20521)
!20660 = !DILocation(line: 67, column: 34, scope: !20521)
!20661 = !DILocation(line: 67, column: 23, scope: !20521)
!20662 = !DILocation(line: 67, column: 41, scope: !20521)
!20663 = !DILocation(line: 67, column: 39, scope: !20521)
!20664 = !DILocalVariable(name: "y10", scope: !20521, file: !13243, line: 69, type: !52)
!20665 = !DILocation(line: 69, column: 17, scope: !20521)
!20666 = !DILocation(line: 69, column: 28, scope: !20521)
!20667 = !DILocation(line: 69, column: 42, scope: !20521)
!20668 = !DILocation(line: 69, column: 67, scope: !20521)
!20669 = !DILocation(line: 69, column: 65, scope: !20521)
!20670 = !DILocation(line: 69, column: 63, scope: !20521)
!20671 = !DILocation(line: 69, column: 61, scope: !20521)
!20672 = !DILocation(line: 69, column: 23, scope: !20521)
!20673 = !DILocation(line: 69, column: 72, scope: !20521)
!20674 = !DILocation(line: 69, column: 70, scope: !20521)
!20675 = !DILocalVariable(name: "y11", scope: !20521, file: !13243, line: 70, type: !52)
!20676 = !DILocation(line: 70, column: 17, scope: !20521)
!20677 = !DILocation(line: 70, column: 28, scope: !20521)
!20678 = !DILocation(line: 70, column: 42, scope: !20521)
!20679 = !DILocation(line: 70, column: 67, scope: !20521)
!20680 = !DILocation(line: 70, column: 65, scope: !20521)
!20681 = !DILocation(line: 70, column: 63, scope: !20521)
!20682 = !DILocation(line: 70, column: 61, scope: !20521)
!20683 = !DILocation(line: 70, column: 69, scope: !20521)
!20684 = !DILocation(line: 70, column: 23, scope: !20521)
!20685 = !DILocation(line: 70, column: 76, scope: !20521)
!20686 = !DILocation(line: 70, column: 74, scope: !20521)
!20687 = !DILocalVariable(name: "u", scope: !20521, file: !13243, line: 73, type: !52)
!20688 = !DILocation(line: 73, column: 17, scope: !20521)
!20689 = !DILocation(line: 73, column: 26, scope: !20521)
!20690 = !DILocation(line: 73, column: 21, scope: !20521)
!20691 = !DILocation(line: 73, column: 29, scope: !20521)
!20692 = !DILocalVariable(name: "v", scope: !20521, file: !13243, line: 73, type: !52)
!20693 = !DILocation(line: 73, column: 42, scope: !20521)
!20694 = !DILocation(line: 73, column: 51, scope: !20521)
!20695 = !DILocation(line: 73, column: 46, scope: !20521)
!20696 = !DILocation(line: 73, column: 54, scope: !20521)
!20697 = !DILocalVariable(name: "uv_val", scope: !20521, file: !13243, line: 74, type: !52)
!20698 = !DILocation(line: 74, column: 17, scope: !20521)
!20699 = !DILocation(line: 74, column: 26, scope: !20521)
!20700 = !DILocation(line: 74, column: 32, scope: !20521)
!20701 = !DILocation(line: 74, column: 30, scope: !20521)
!20702 = !DILocation(line: 74, column: 36, scope: !20521)
!20703 = !DILocation(line: 74, column: 42, scope: !20521)
!20704 = !DILocation(line: 74, column: 40, scope: !20521)
!20705 = !DILocation(line: 74, column: 34, scope: !20521)
!20706 = !DILocation(line: 74, column: 44, scope: !20521)
!20707 = !DILocation(line: 74, column: 52, scope: !20521)
!20708 = !DILocation(line: 74, column: 50, scope: !20521)
!20709 = !DILocation(line: 76, column: 46, scope: !20521)
!20710 = !DILocation(line: 76, column: 52, scope: !20521)
!20711 = !DILocation(line: 76, column: 50, scope: !20521)
!20712 = !DILocation(line: 76, column: 58, scope: !20521)
!20713 = !DILocation(line: 76, column: 56, scope: !20521)
!20714 = !DILocation(line: 76, column: 66, scope: !20521)
!20715 = !DILocation(line: 76, column: 28, scope: !20521)
!20716 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20541)
!20717 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20541)
!20718 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20541)
!20719 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20541)
!20720 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20541)
!20721 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20541)
!20722 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20541)
!20723 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20541)
!20724 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20541)
!20725 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20541)
!20726 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20541)
!20727 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20541)
!20728 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20541)
!20729 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20541)
!20730 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20541)
!20731 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20541)
!20732 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20541)
!20733 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20541)
!20734 = !DILocation(line: 76, column: 18, scope: !20521)
!20735 = !DILocation(line: 76, column: 20, scope: !20521)
!20736 = !DILocation(line: 76, column: 13, scope: !20521)
!20737 = !DILocation(line: 76, column: 26, scope: !20521)
!20738 = !DILocation(line: 78, column: 49, scope: !20521)
!20739 = !DILocation(line: 78, column: 55, scope: !20521)
!20740 = !DILocation(line: 78, column: 53, scope: !20521)
!20741 = !DILocation(line: 78, column: 61, scope: !20521)
!20742 = !DILocation(line: 78, column: 59, scope: !20521)
!20743 = !DILocation(line: 78, column: 69, scope: !20521)
!20744 = !DILocation(line: 78, column: 31, scope: !20521)
!20745 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20520)
!20746 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20520)
!20747 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20520)
!20748 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20520)
!20749 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20520)
!20750 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20520)
!20751 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20520)
!20752 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20520)
!20753 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20520)
!20754 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20520)
!20755 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20520)
!20756 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20520)
!20757 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20520)
!20758 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20520)
!20759 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20520)
!20760 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20520)
!20761 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20520)
!20762 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20520)
!20763 = !DILocation(line: 78, column: 18, scope: !20521)
!20764 = !DILocation(line: 78, column: 20, scope: !20521)
!20765 = !DILocation(line: 78, column: 24, scope: !20521)
!20766 = !DILocation(line: 78, column: 13, scope: !20521)
!20767 = !DILocation(line: 78, column: 29, scope: !20521)
!20768 = !DILocation(line: 81, column: 49, scope: !20521)
!20769 = !DILocation(line: 81, column: 55, scope: !20521)
!20770 = !DILocation(line: 81, column: 53, scope: !20521)
!20771 = !DILocation(line: 81, column: 61, scope: !20521)
!20772 = !DILocation(line: 81, column: 59, scope: !20521)
!20773 = !DILocation(line: 81, column: 69, scope: !20521)
!20774 = !DILocation(line: 81, column: 31, scope: !20521)
!20775 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20529)
!20776 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20529)
!20777 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20529)
!20778 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20529)
!20779 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20529)
!20780 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20529)
!20781 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20529)
!20782 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20529)
!20783 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20529)
!20784 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20529)
!20785 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20529)
!20786 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20529)
!20787 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20529)
!20788 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20529)
!20789 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20529)
!20790 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20529)
!20791 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20529)
!20792 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20529)
!20793 = !DILocation(line: 80, column: 18, scope: !20521)
!20794 = !DILocation(line: 80, column: 20, scope: !20521)
!20795 = !DILocation(line: 80, column: 24, scope: !20521)
!20796 = !DILocation(line: 80, column: 30, scope: !20521)
!20797 = !DILocation(line: 80, column: 44, scope: !20521)
!20798 = !DILocation(line: 80, column: 28, scope: !20521)
!20799 = !DILocation(line: 80, column: 13, scope: !20521)
!20800 = !DILocation(line: 80, column: 64, scope: !20521)
!20801 = !DILocation(line: 83, column: 49, scope: !20521)
!20802 = !DILocation(line: 83, column: 55, scope: !20521)
!20803 = !DILocation(line: 83, column: 53, scope: !20521)
!20804 = !DILocation(line: 83, column: 61, scope: !20521)
!20805 = !DILocation(line: 83, column: 59, scope: !20521)
!20806 = !DILocation(line: 83, column: 69, scope: !20521)
!20807 = !DILocation(line: 83, column: 31, scope: !20521)
!20808 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20532)
!20809 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20532)
!20810 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20532)
!20811 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20532)
!20812 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20532)
!20813 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20532)
!20814 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20532)
!20815 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20532)
!20816 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20532)
!20817 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20532)
!20818 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20532)
!20819 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20532)
!20820 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20532)
!20821 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20532)
!20822 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20532)
!20823 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20532)
!20824 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20532)
!20825 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20532)
!20826 = !DILocation(line: 82, column: 18, scope: !20521)
!20827 = !DILocation(line: 82, column: 20, scope: !20521)
!20828 = !DILocation(line: 82, column: 24, scope: !20521)
!20829 = !DILocation(line: 82, column: 30, scope: !20521)
!20830 = !DILocation(line: 82, column: 44, scope: !20521)
!20831 = !DILocation(line: 82, column: 28, scope: !20521)
!20832 = !DILocation(line: 82, column: 13, scope: !20521)
!20833 = !DILocation(line: 82, column: 64, scope: !20521)
!20834 = !DILocation(line: 87, column: 41, scope: !20521)
!20835 = !DILocation(line: 87, column: 45, scope: !20521)
!20836 = !DILocation(line: 87, column: 43, scope: !20521)
!20837 = !DILocation(line: 87, column: 51, scope: !20521)
!20838 = !DILocation(line: 87, column: 55, scope: !20521)
!20839 = !DILocation(line: 87, column: 53, scope: !20521)
!20840 = !DILocation(line: 87, column: 49, scope: !20521)
!20841 = !DILocation(line: 87, column: 59, scope: !20521)
!20842 = !DILocation(line: 87, column: 73, scope: !20521)
!20843 = !DILocation(line: 87, column: 23, scope: !20521)
!20844 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20535)
!20845 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20535)
!20846 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20535)
!20847 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20535)
!20848 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20535)
!20849 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20535)
!20850 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20535)
!20851 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20535)
!20852 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20535)
!20853 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20535)
!20854 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20535)
!20855 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20535)
!20856 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20535)
!20857 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20535)
!20858 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20535)
!20859 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20535)
!20860 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20535)
!20861 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20535)
!20862 = !DILocation(line: 87, column: 18, scope: !20521)
!20863 = !DILocation(line: 87, column: 13, scope: !20521)
!20864 = !DILocation(line: 87, column: 21, scope: !20521)
!20865 = !DILocation(line: 88, column: 41, scope: !20521)
!20866 = !DILocation(line: 88, column: 45, scope: !20521)
!20867 = !DILocation(line: 88, column: 43, scope: !20521)
!20868 = !DILocation(line: 88, column: 51, scope: !20521)
!20869 = !DILocation(line: 88, column: 55, scope: !20521)
!20870 = !DILocation(line: 88, column: 53, scope: !20521)
!20871 = !DILocation(line: 88, column: 49, scope: !20521)
!20872 = !DILocation(line: 88, column: 59, scope: !20521)
!20873 = !DILocation(line: 88, column: 73, scope: !20521)
!20874 = !DILocation(line: 88, column: 23, scope: !20521)
!20875 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20538)
!20876 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20538)
!20877 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20538)
!20878 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20538)
!20879 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20538)
!20880 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20538)
!20881 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20538)
!20882 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20538)
!20883 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20538)
!20884 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20538)
!20885 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20538)
!20886 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20538)
!20887 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20538)
!20888 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20538)
!20889 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20538)
!20890 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20538)
!20891 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20538)
!20892 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20538)
!20893 = !DILocation(line: 88, column: 18, scope: !20521)
!20894 = !DILocation(line: 88, column: 13, scope: !20521)
!20895 = !DILocation(line: 88, column: 21, scope: !20521)
!20896 = !DILocation(line: 89, column: 9, scope: !20521)
!20897 = !DILocation(line: 64, column: 29, scope: !20898)
!20898 = !DILexicalBlockFile(scope: !20522, file: !13243, discriminator: 2)
!20899 = !DILocation(line: 64, column: 9, scope: !20898)
!20900 = distinct !{!20900, !20901}
!20901 = !DILocation(line: 64, column: 9, scope: !20524)
!20902 = !DILocation(line: 91, column: 18, scope: !20524)
!20903 = !DILocation(line: 91, column: 32, scope: !20524)
!20904 = !DILocation(line: 91, column: 44, scope: !20524)
!20905 = !DILocation(line: 91, column: 14, scope: !20524)
!20906 = !DILocation(line: 92, column: 17, scope: !20524)
!20907 = !DILocation(line: 92, column: 31, scope: !20524)
!20908 = !DILocation(line: 92, column: 14, scope: !20524)
!20909 = !DILocation(line: 93, column: 17, scope: !20524)
!20910 = !DILocation(line: 93, column: 31, scope: !20524)
!20911 = !DILocation(line: 93, column: 14, scope: !20524)
!20912 = !DILocation(line: 94, column: 18, scope: !20524)
!20913 = !DILocation(line: 94, column: 32, scope: !20524)
!20914 = !DILocation(line: 94, column: 44, scope: !20524)
!20915 = !DILocation(line: 94, column: 14, scope: !20524)
!20916 = !DILocation(line: 95, column: 17, scope: !20524)
!20917 = !DILocation(line: 95, column: 31, scope: !20524)
!20918 = !DILocation(line: 95, column: 14, scope: !20524)
!20919 = !DILocation(line: 96, column: 17, scope: !20524)
!20920 = !DILocation(line: 96, column: 31, scope: !20524)
!20921 = !DILocation(line: 96, column: 14, scope: !20524)
!20922 = !DILocation(line: 97, column: 5, scope: !20524)
!20923 = !DILocation(line: 63, column: 25, scope: !20924)
!20924 = !DILexicalBlockFile(scope: !20525, file: !13243, discriminator: 2)
!20925 = !DILocation(line: 63, column: 5, scope: !20924)
!20926 = distinct !{!20926, !20927}
!20927 = !DILocation(line: 63, column: 5, scope: !20518)
!20928 = !DILocation(line: 98, column: 1, scope: !20518)
!20929 = distinct !DISubprogram(name: "yuv2yuv_444p12to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!20930 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20931)
!20931 = distinct !DILocation(line: 87, column: 23, scope: !20932)
!20932 = distinct !DILexicalBlock(scope: !20933, file: !13243, line: 64, column: 33)
!20933 = distinct !DILexicalBlock(scope: !20934, file: !13243, line: 64, column: 9)
!20934 = distinct !DILexicalBlock(scope: !20935, file: !13243, line: 64, column: 9)
!20935 = distinct !DILexicalBlock(scope: !20936, file: !13243, line: 63, column: 29)
!20936 = distinct !DILexicalBlock(scope: !20937, file: !13243, line: 63, column: 5)
!20937 = distinct !DILexicalBlock(scope: !20929, file: !13243, line: 63, column: 5)
!20938 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20931)
!20939 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20940)
!20940 = distinct !DILocation(line: 88, column: 23, scope: !20932)
!20941 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20940)
!20942 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !20943)
!20943 = distinct !DILocation(line: 76, column: 28, scope: !20932)
!20944 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !20943)
!20945 = !DILocalVariable(name: "_dst", arg: 1, scope: !20929, file: !13243, line: 40, type: !17)
!20946 = !DILocation(line: 40, column: 43, scope: !20929)
!20947 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !20929, file: !13243, line: 40, type: !50)
!20948 = !DILocation(line: 40, column: 68, scope: !20929)
!20949 = !DILocalVariable(name: "_src", arg: 3, scope: !20929, file: !13243, line: 41, type: !17)
!20950 = !DILocation(line: 41, column: 34, scope: !20929)
!20951 = !DILocalVariable(name: "src_stride", arg: 4, scope: !20929, file: !13243, line: 41, type: !50)
!20952 = !DILocation(line: 41, column: 59, scope: !20929)
!20953 = !DILocalVariable(name: "w", arg: 5, scope: !20929, file: !13243, line: 42, type: !52)
!20954 = !DILocation(line: 42, column: 29, scope: !20929)
!20955 = !DILocalVariable(name: "h", arg: 6, scope: !20929, file: !13243, line: 42, type: !52)
!20956 = !DILocation(line: 42, column: 36, scope: !20929)
!20957 = !DILocalVariable(name: "c", arg: 7, scope: !20929, file: !13243, line: 42, type: !53)
!20958 = !DILocation(line: 42, column: 53, scope: !20929)
!20959 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !20929, file: !13243, line: 43, type: !84)
!20960 = !DILocation(line: 43, column: 39, scope: !20929)
!20961 = !DILocalVariable(name: "dst", scope: !20929, file: !13243, line: 45, type: !22)
!20962 = !DILocation(line: 45, column: 16, scope: !20929)
!20963 = !DILocation(line: 45, column: 36, scope: !20929)
!20964 = !DILocation(line: 45, column: 22, scope: !20929)
!20965 = !DILocalVariable(name: "src", scope: !20929, file: !13243, line: 46, type: !22)
!20966 = !DILocation(line: 46, column: 16, scope: !20929)
!20967 = !DILocation(line: 46, column: 36, scope: !20929)
!20968 = !DILocation(line: 46, column: 22, scope: !20929)
!20969 = !DILocalVariable(name: "src0", scope: !20929, file: !13243, line: 47, type: !1418)
!20970 = !DILocation(line: 47, column: 21, scope: !20929)
!20971 = !DILocation(line: 47, column: 28, scope: !20929)
!20972 = !DILocalVariable(name: "src1", scope: !20929, file: !13243, line: 47, type: !1418)
!20973 = !DILocation(line: 47, column: 37, scope: !20929)
!20974 = !DILocation(line: 47, column: 44, scope: !20929)
!20975 = !DILocalVariable(name: "src2", scope: !20929, file: !13243, line: 47, type: !1418)
!20976 = !DILocation(line: 47, column: 53, scope: !20929)
!20977 = !DILocation(line: 47, column: 60, scope: !20929)
!20978 = !DILocalVariable(name: "dst0", scope: !20929, file: !13243, line: 48, type: !23)
!20979 = !DILocation(line: 48, column: 15, scope: !20929)
!20980 = !DILocation(line: 48, column: 22, scope: !20929)
!20981 = !DILocalVariable(name: "dst1", scope: !20929, file: !13243, line: 48, type: !23)
!20982 = !DILocation(line: 48, column: 31, scope: !20929)
!20983 = !DILocation(line: 48, column: 38, scope: !20929)
!20984 = !DILocalVariable(name: "dst2", scope: !20929, file: !13243, line: 48, type: !23)
!20985 = !DILocation(line: 48, column: 47, scope: !20929)
!20986 = !DILocation(line: 48, column: 54, scope: !20929)
!20987 = !DILocalVariable(name: "y", scope: !20929, file: !13243, line: 49, type: !52)
!20988 = !DILocation(line: 49, column: 9, scope: !20929)
!20989 = !DILocalVariable(name: "x", scope: !20929, file: !13243, line: 49, type: !52)
!20990 = !DILocation(line: 49, column: 12, scope: !20929)
!20991 = !DILocalVariable(name: "sh", scope: !20929, file: !13243, line: 50, type: !343)
!20992 = !DILocation(line: 50, column: 15, scope: !20929)
!20993 = !DILocalVariable(name: "rnd", scope: !20929, file: !13243, line: 51, type: !343)
!20994 = !DILocation(line: 51, column: 15, scope: !20929)
!20995 = !DILocalVariable(name: "y_off_in", scope: !20929, file: !13243, line: 52, type: !52)
!20996 = !DILocation(line: 52, column: 9, scope: !20929)
!20997 = !DILocation(line: 52, column: 20, scope: !20929)
!20998 = !DILocalVariable(name: "y_off_out", scope: !20929, file: !13243, line: 53, type: !52)
!20999 = !DILocation(line: 53, column: 9, scope: !20929)
!21000 = !DILocation(line: 53, column: 21, scope: !20929)
!21001 = !DILocation(line: 53, column: 38, scope: !20929)
!21002 = !DILocalVariable(name: "uv_off_in", scope: !20929, file: !13243, line: 54, type: !343)
!21003 = !DILocation(line: 54, column: 15, scope: !20929)
!21004 = !DILocalVariable(name: "uv_off_out", scope: !20929, file: !13243, line: 55, type: !343)
!21005 = !DILocation(line: 55, column: 15, scope: !20929)
!21006 = !DILocalVariable(name: "cyy", scope: !20929, file: !13243, line: 56, type: !52)
!21007 = !DILocation(line: 56, column: 9, scope: !20929)
!21008 = !DILocation(line: 56, column: 15, scope: !20929)
!21009 = !DILocalVariable(name: "cyu", scope: !20929, file: !13243, line: 56, type: !52)
!21010 = !DILocation(line: 56, column: 27, scope: !20929)
!21011 = !DILocation(line: 56, column: 33, scope: !20929)
!21012 = !DILocalVariable(name: "cyv", scope: !20929, file: !13243, line: 56, type: !52)
!21013 = !DILocation(line: 56, column: 45, scope: !20929)
!21014 = !DILocation(line: 56, column: 51, scope: !20929)
!21015 = !DILocalVariable(name: "cuu", scope: !20929, file: !13243, line: 57, type: !52)
!21016 = !DILocation(line: 57, column: 9, scope: !20929)
!21017 = !DILocation(line: 57, column: 15, scope: !20929)
!21018 = !DILocalVariable(name: "cuv", scope: !20929, file: !13243, line: 57, type: !52)
!21019 = !DILocation(line: 57, column: 27, scope: !20929)
!21020 = !DILocation(line: 57, column: 33, scope: !20929)
!21021 = !DILocalVariable(name: "cvu", scope: !20929, file: !13243, line: 57, type: !52)
!21022 = !DILocation(line: 57, column: 45, scope: !20929)
!21023 = !DILocation(line: 57, column: 51, scope: !20929)
!21024 = !DILocalVariable(name: "cvv", scope: !20929, file: !13243, line: 57, type: !52)
!21025 = !DILocation(line: 57, column: 63, scope: !20929)
!21026 = !DILocation(line: 57, column: 69, scope: !20929)
!21027 = !DILocation(line: 61, column: 58, scope: !20929)
!21028 = !DILocation(line: 61, column: 61, scope: !20929)
!21029 = !DILocation(line: 61, column: 72, scope: !20929)
!21030 = !DILocation(line: 61, column: 77, scope: !20929)
!21031 = !DILocation(line: 61, column: 7, scope: !20929)
!21032 = !DILocation(line: 62, column: 58, scope: !20929)
!21033 = !DILocation(line: 62, column: 61, scope: !20929)
!21034 = !DILocation(line: 62, column: 72, scope: !20929)
!21035 = !DILocation(line: 62, column: 77, scope: !20929)
!21036 = !DILocation(line: 62, column: 7, scope: !20929)
!21037 = !DILocation(line: 63, column: 12, scope: !20937)
!21038 = !DILocation(line: 63, column: 10, scope: !20937)
!21039 = !DILocation(line: 63, column: 17, scope: !21040)
!21040 = !DILexicalBlockFile(scope: !20936, file: !13243, discriminator: 1)
!21041 = !DILocation(line: 63, column: 21, scope: !21040)
!21042 = !DILocation(line: 63, column: 19, scope: !21040)
!21043 = !DILocation(line: 63, column: 5, scope: !21040)
!21044 = !DILocation(line: 64, column: 16, scope: !20934)
!21045 = !DILocation(line: 64, column: 14, scope: !20934)
!21046 = !DILocation(line: 64, column: 21, scope: !21047)
!21047 = !DILexicalBlockFile(scope: !20933, file: !13243, discriminator: 1)
!21048 = !DILocation(line: 64, column: 25, scope: !21047)
!21049 = !DILocation(line: 64, column: 23, scope: !21047)
!21050 = !DILocation(line: 64, column: 9, scope: !21047)
!21051 = !DILocalVariable(name: "y00", scope: !20932, file: !13243, line: 65, type: !52)
!21052 = !DILocation(line: 65, column: 17, scope: !20932)
!21053 = !DILocation(line: 65, column: 28, scope: !20932)
!21054 = !DILocation(line: 65, column: 30, scope: !20932)
!21055 = !DILocation(line: 65, column: 23, scope: !20932)
!21056 = !DILocation(line: 65, column: 38, scope: !20932)
!21057 = !DILocation(line: 65, column: 36, scope: !20932)
!21058 = !DILocalVariable(name: "u", scope: !20932, file: !13243, line: 73, type: !52)
!21059 = !DILocation(line: 73, column: 17, scope: !20932)
!21060 = !DILocation(line: 73, column: 26, scope: !20932)
!21061 = !DILocation(line: 73, column: 21, scope: !20932)
!21062 = !DILocation(line: 73, column: 29, scope: !20932)
!21063 = !DILocalVariable(name: "v", scope: !20932, file: !13243, line: 73, type: !52)
!21064 = !DILocation(line: 73, column: 42, scope: !20932)
!21065 = !DILocation(line: 73, column: 51, scope: !20932)
!21066 = !DILocation(line: 73, column: 46, scope: !20932)
!21067 = !DILocation(line: 73, column: 54, scope: !20932)
!21068 = !DILocalVariable(name: "uv_val", scope: !20932, file: !13243, line: 74, type: !52)
!21069 = !DILocation(line: 74, column: 17, scope: !20932)
!21070 = !DILocation(line: 74, column: 26, scope: !20932)
!21071 = !DILocation(line: 74, column: 32, scope: !20932)
!21072 = !DILocation(line: 74, column: 30, scope: !20932)
!21073 = !DILocation(line: 74, column: 36, scope: !20932)
!21074 = !DILocation(line: 74, column: 42, scope: !20932)
!21075 = !DILocation(line: 74, column: 40, scope: !20932)
!21076 = !DILocation(line: 74, column: 34, scope: !20932)
!21077 = !DILocation(line: 74, column: 44, scope: !20932)
!21078 = !DILocation(line: 74, column: 52, scope: !20932)
!21079 = !DILocation(line: 74, column: 50, scope: !20932)
!21080 = !DILocation(line: 76, column: 46, scope: !20932)
!21081 = !DILocation(line: 76, column: 52, scope: !20932)
!21082 = !DILocation(line: 76, column: 50, scope: !20932)
!21083 = !DILocation(line: 76, column: 58, scope: !20932)
!21084 = !DILocation(line: 76, column: 56, scope: !20932)
!21085 = !DILocation(line: 76, column: 66, scope: !20932)
!21086 = !DILocation(line: 76, column: 28, scope: !20932)
!21087 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20943)
!21088 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20943)
!21089 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20943)
!21090 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20943)
!21091 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20943)
!21092 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20943)
!21093 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20943)
!21094 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20943)
!21095 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20943)
!21096 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20943)
!21097 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20943)
!21098 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20943)
!21099 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20943)
!21100 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20943)
!21101 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20943)
!21102 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20943)
!21103 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20943)
!21104 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20943)
!21105 = !DILocation(line: 76, column: 18, scope: !20932)
!21106 = !DILocation(line: 76, column: 20, scope: !20932)
!21107 = !DILocation(line: 76, column: 13, scope: !20932)
!21108 = !DILocation(line: 76, column: 26, scope: !20932)
!21109 = !DILocation(line: 87, column: 41, scope: !20932)
!21110 = !DILocation(line: 87, column: 45, scope: !20932)
!21111 = !DILocation(line: 87, column: 43, scope: !20932)
!21112 = !DILocation(line: 87, column: 51, scope: !20932)
!21113 = !DILocation(line: 87, column: 55, scope: !20932)
!21114 = !DILocation(line: 87, column: 53, scope: !20932)
!21115 = !DILocation(line: 87, column: 49, scope: !20932)
!21116 = !DILocation(line: 87, column: 59, scope: !20932)
!21117 = !DILocation(line: 87, column: 73, scope: !20932)
!21118 = !DILocation(line: 87, column: 23, scope: !20932)
!21119 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20931)
!21120 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20931)
!21121 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20931)
!21122 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20931)
!21123 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20931)
!21124 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20931)
!21125 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20931)
!21126 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20931)
!21127 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20931)
!21128 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20931)
!21129 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20931)
!21130 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20931)
!21131 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20931)
!21132 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20931)
!21133 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20931)
!21134 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20931)
!21135 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20931)
!21136 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20931)
!21137 = !DILocation(line: 87, column: 18, scope: !20932)
!21138 = !DILocation(line: 87, column: 13, scope: !20932)
!21139 = !DILocation(line: 87, column: 21, scope: !20932)
!21140 = !DILocation(line: 88, column: 41, scope: !20932)
!21141 = !DILocation(line: 88, column: 45, scope: !20932)
!21142 = !DILocation(line: 88, column: 43, scope: !20932)
!21143 = !DILocation(line: 88, column: 51, scope: !20932)
!21144 = !DILocation(line: 88, column: 55, scope: !20932)
!21145 = !DILocation(line: 88, column: 53, scope: !20932)
!21146 = !DILocation(line: 88, column: 49, scope: !20932)
!21147 = !DILocation(line: 88, column: 59, scope: !20932)
!21148 = !DILocation(line: 88, column: 73, scope: !20932)
!21149 = !DILocation(line: 88, column: 23, scope: !20932)
!21150 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !20940)
!21151 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !20940)
!21152 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !20940)
!21153 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !20940)
!21154 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !20940)
!21155 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !20940)
!21156 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !20940)
!21157 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !20940)
!21158 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !20940)
!21159 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !20940)
!21160 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !20940)
!21161 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !20940)
!21162 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !20940)
!21163 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !20940)
!21164 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !20940)
!21165 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !20940)
!21166 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !20940)
!21167 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !20940)
!21168 = !DILocation(line: 88, column: 18, scope: !20932)
!21169 = !DILocation(line: 88, column: 13, scope: !20932)
!21170 = !DILocation(line: 88, column: 21, scope: !20932)
!21171 = !DILocation(line: 89, column: 9, scope: !20932)
!21172 = !DILocation(line: 64, column: 29, scope: !21173)
!21173 = !DILexicalBlockFile(scope: !20933, file: !13243, discriminator: 2)
!21174 = !DILocation(line: 64, column: 9, scope: !21173)
!21175 = distinct !{!21175, !21176}
!21176 = !DILocation(line: 64, column: 9, scope: !20935)
!21177 = !DILocation(line: 91, column: 18, scope: !20935)
!21178 = !DILocation(line: 91, column: 32, scope: !20935)
!21179 = !DILocation(line: 91, column: 44, scope: !20935)
!21180 = !DILocation(line: 91, column: 14, scope: !20935)
!21181 = !DILocation(line: 92, column: 17, scope: !20935)
!21182 = !DILocation(line: 92, column: 31, scope: !20935)
!21183 = !DILocation(line: 92, column: 14, scope: !20935)
!21184 = !DILocation(line: 93, column: 17, scope: !20935)
!21185 = !DILocation(line: 93, column: 31, scope: !20935)
!21186 = !DILocation(line: 93, column: 14, scope: !20935)
!21187 = !DILocation(line: 94, column: 18, scope: !20935)
!21188 = !DILocation(line: 94, column: 32, scope: !20935)
!21189 = !DILocation(line: 94, column: 44, scope: !20935)
!21190 = !DILocation(line: 94, column: 14, scope: !20935)
!21191 = !DILocation(line: 95, column: 17, scope: !20935)
!21192 = !DILocation(line: 95, column: 31, scope: !20935)
!21193 = !DILocation(line: 95, column: 14, scope: !20935)
!21194 = !DILocation(line: 96, column: 17, scope: !20935)
!21195 = !DILocation(line: 96, column: 31, scope: !20935)
!21196 = !DILocation(line: 96, column: 14, scope: !20935)
!21197 = !DILocation(line: 97, column: 5, scope: !20935)
!21198 = !DILocation(line: 63, column: 25, scope: !21199)
!21199 = !DILexicalBlockFile(scope: !20936, file: !13243, discriminator: 2)
!21200 = !DILocation(line: 63, column: 5, scope: !21199)
!21201 = distinct !{!21201, !21202}
!21202 = !DILocation(line: 63, column: 5, scope: !20929)
!21203 = !DILocation(line: 98, column: 1, scope: !20929)
!21204 = distinct !DISubprogram(name: "yuv2yuv_422p12to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!21205 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21206)
!21206 = distinct !DILocation(line: 78, column: 31, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21208, file: !13243, line: 64, column: 33)
!21208 = distinct !DILexicalBlock(scope: !21209, file: !13243, line: 64, column: 9)
!21209 = distinct !DILexicalBlock(scope: !21210, file: !13243, line: 64, column: 9)
!21210 = distinct !DILexicalBlock(scope: !21211, file: !13243, line: 63, column: 29)
!21211 = distinct !DILexicalBlock(scope: !21212, file: !13243, line: 63, column: 5)
!21212 = distinct !DILexicalBlock(scope: !21204, file: !13243, line: 63, column: 5)
!21213 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21206)
!21214 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21215)
!21215 = distinct !DILocation(line: 87, column: 23, scope: !21207)
!21216 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21215)
!21217 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21218)
!21218 = distinct !DILocation(line: 88, column: 23, scope: !21207)
!21219 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21218)
!21220 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21221)
!21221 = distinct !DILocation(line: 76, column: 28, scope: !21207)
!21222 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21221)
!21223 = !DILocalVariable(name: "_dst", arg: 1, scope: !21204, file: !13243, line: 40, type: !17)
!21224 = !DILocation(line: 40, column: 43, scope: !21204)
!21225 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !21204, file: !13243, line: 40, type: !50)
!21226 = !DILocation(line: 40, column: 68, scope: !21204)
!21227 = !DILocalVariable(name: "_src", arg: 3, scope: !21204, file: !13243, line: 41, type: !17)
!21228 = !DILocation(line: 41, column: 34, scope: !21204)
!21229 = !DILocalVariable(name: "src_stride", arg: 4, scope: !21204, file: !13243, line: 41, type: !50)
!21230 = !DILocation(line: 41, column: 59, scope: !21204)
!21231 = !DILocalVariable(name: "w", arg: 5, scope: !21204, file: !13243, line: 42, type: !52)
!21232 = !DILocation(line: 42, column: 29, scope: !21204)
!21233 = !DILocalVariable(name: "h", arg: 6, scope: !21204, file: !13243, line: 42, type: !52)
!21234 = !DILocation(line: 42, column: 36, scope: !21204)
!21235 = !DILocalVariable(name: "c", arg: 7, scope: !21204, file: !13243, line: 42, type: !53)
!21236 = !DILocation(line: 42, column: 53, scope: !21204)
!21237 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !21204, file: !13243, line: 43, type: !84)
!21238 = !DILocation(line: 43, column: 39, scope: !21204)
!21239 = !DILocalVariable(name: "dst", scope: !21204, file: !13243, line: 45, type: !22)
!21240 = !DILocation(line: 45, column: 16, scope: !21204)
!21241 = !DILocation(line: 45, column: 36, scope: !21204)
!21242 = !DILocation(line: 45, column: 22, scope: !21204)
!21243 = !DILocalVariable(name: "src", scope: !21204, file: !13243, line: 46, type: !22)
!21244 = !DILocation(line: 46, column: 16, scope: !21204)
!21245 = !DILocation(line: 46, column: 36, scope: !21204)
!21246 = !DILocation(line: 46, column: 22, scope: !21204)
!21247 = !DILocalVariable(name: "src0", scope: !21204, file: !13243, line: 47, type: !1418)
!21248 = !DILocation(line: 47, column: 21, scope: !21204)
!21249 = !DILocation(line: 47, column: 28, scope: !21204)
!21250 = !DILocalVariable(name: "src1", scope: !21204, file: !13243, line: 47, type: !1418)
!21251 = !DILocation(line: 47, column: 37, scope: !21204)
!21252 = !DILocation(line: 47, column: 44, scope: !21204)
!21253 = !DILocalVariable(name: "src2", scope: !21204, file: !13243, line: 47, type: !1418)
!21254 = !DILocation(line: 47, column: 53, scope: !21204)
!21255 = !DILocation(line: 47, column: 60, scope: !21204)
!21256 = !DILocalVariable(name: "dst0", scope: !21204, file: !13243, line: 48, type: !23)
!21257 = !DILocation(line: 48, column: 15, scope: !21204)
!21258 = !DILocation(line: 48, column: 22, scope: !21204)
!21259 = !DILocalVariable(name: "dst1", scope: !21204, file: !13243, line: 48, type: !23)
!21260 = !DILocation(line: 48, column: 31, scope: !21204)
!21261 = !DILocation(line: 48, column: 38, scope: !21204)
!21262 = !DILocalVariable(name: "dst2", scope: !21204, file: !13243, line: 48, type: !23)
!21263 = !DILocation(line: 48, column: 47, scope: !21204)
!21264 = !DILocation(line: 48, column: 54, scope: !21204)
!21265 = !DILocalVariable(name: "y", scope: !21204, file: !13243, line: 49, type: !52)
!21266 = !DILocation(line: 49, column: 9, scope: !21204)
!21267 = !DILocalVariable(name: "x", scope: !21204, file: !13243, line: 49, type: !52)
!21268 = !DILocation(line: 49, column: 12, scope: !21204)
!21269 = !DILocalVariable(name: "sh", scope: !21204, file: !13243, line: 50, type: !343)
!21270 = !DILocation(line: 50, column: 15, scope: !21204)
!21271 = !DILocalVariable(name: "rnd", scope: !21204, file: !13243, line: 51, type: !343)
!21272 = !DILocation(line: 51, column: 15, scope: !21204)
!21273 = !DILocalVariable(name: "y_off_in", scope: !21204, file: !13243, line: 52, type: !52)
!21274 = !DILocation(line: 52, column: 9, scope: !21204)
!21275 = !DILocation(line: 52, column: 20, scope: !21204)
!21276 = !DILocalVariable(name: "y_off_out", scope: !21204, file: !13243, line: 53, type: !52)
!21277 = !DILocation(line: 53, column: 9, scope: !21204)
!21278 = !DILocation(line: 53, column: 21, scope: !21204)
!21279 = !DILocation(line: 53, column: 38, scope: !21204)
!21280 = !DILocalVariable(name: "uv_off_in", scope: !21204, file: !13243, line: 54, type: !343)
!21281 = !DILocation(line: 54, column: 15, scope: !21204)
!21282 = !DILocalVariable(name: "uv_off_out", scope: !21204, file: !13243, line: 55, type: !343)
!21283 = !DILocation(line: 55, column: 15, scope: !21204)
!21284 = !DILocalVariable(name: "cyy", scope: !21204, file: !13243, line: 56, type: !52)
!21285 = !DILocation(line: 56, column: 9, scope: !21204)
!21286 = !DILocation(line: 56, column: 15, scope: !21204)
!21287 = !DILocalVariable(name: "cyu", scope: !21204, file: !13243, line: 56, type: !52)
!21288 = !DILocation(line: 56, column: 27, scope: !21204)
!21289 = !DILocation(line: 56, column: 33, scope: !21204)
!21290 = !DILocalVariable(name: "cyv", scope: !21204, file: !13243, line: 56, type: !52)
!21291 = !DILocation(line: 56, column: 45, scope: !21204)
!21292 = !DILocation(line: 56, column: 51, scope: !21204)
!21293 = !DILocalVariable(name: "cuu", scope: !21204, file: !13243, line: 57, type: !52)
!21294 = !DILocation(line: 57, column: 9, scope: !21204)
!21295 = !DILocation(line: 57, column: 15, scope: !21204)
!21296 = !DILocalVariable(name: "cuv", scope: !21204, file: !13243, line: 57, type: !52)
!21297 = !DILocation(line: 57, column: 27, scope: !21204)
!21298 = !DILocation(line: 57, column: 33, scope: !21204)
!21299 = !DILocalVariable(name: "cvu", scope: !21204, file: !13243, line: 57, type: !52)
!21300 = !DILocation(line: 57, column: 45, scope: !21204)
!21301 = !DILocation(line: 57, column: 51, scope: !21204)
!21302 = !DILocalVariable(name: "cvv", scope: !21204, file: !13243, line: 57, type: !52)
!21303 = !DILocation(line: 57, column: 63, scope: !21204)
!21304 = !DILocation(line: 57, column: 69, scope: !21204)
!21305 = !DILocation(line: 61, column: 58, scope: !21204)
!21306 = !DILocation(line: 61, column: 61, scope: !21204)
!21307 = !DILocation(line: 61, column: 72, scope: !21204)
!21308 = !DILocation(line: 61, column: 77, scope: !21204)
!21309 = !DILocation(line: 61, column: 7, scope: !21204)
!21310 = !DILocation(line: 62, column: 58, scope: !21204)
!21311 = !DILocation(line: 62, column: 61, scope: !21204)
!21312 = !DILocation(line: 62, column: 72, scope: !21204)
!21313 = !DILocation(line: 62, column: 77, scope: !21204)
!21314 = !DILocation(line: 62, column: 7, scope: !21204)
!21315 = !DILocation(line: 63, column: 12, scope: !21212)
!21316 = !DILocation(line: 63, column: 10, scope: !21212)
!21317 = !DILocation(line: 63, column: 17, scope: !21318)
!21318 = !DILexicalBlockFile(scope: !21211, file: !13243, discriminator: 1)
!21319 = !DILocation(line: 63, column: 21, scope: !21318)
!21320 = !DILocation(line: 63, column: 19, scope: !21318)
!21321 = !DILocation(line: 63, column: 5, scope: !21318)
!21322 = !DILocation(line: 64, column: 16, scope: !21209)
!21323 = !DILocation(line: 64, column: 14, scope: !21209)
!21324 = !DILocation(line: 64, column: 21, scope: !21325)
!21325 = !DILexicalBlockFile(scope: !21208, file: !13243, discriminator: 1)
!21326 = !DILocation(line: 64, column: 25, scope: !21325)
!21327 = !DILocation(line: 64, column: 23, scope: !21325)
!21328 = !DILocation(line: 64, column: 9, scope: !21325)
!21329 = !DILocalVariable(name: "y00", scope: !21207, file: !13243, line: 65, type: !52)
!21330 = !DILocation(line: 65, column: 17, scope: !21207)
!21331 = !DILocation(line: 65, column: 28, scope: !21207)
!21332 = !DILocation(line: 65, column: 30, scope: !21207)
!21333 = !DILocation(line: 65, column: 23, scope: !21207)
!21334 = !DILocation(line: 65, column: 38, scope: !21207)
!21335 = !DILocation(line: 65, column: 36, scope: !21207)
!21336 = !DILocalVariable(name: "y01", scope: !21207, file: !13243, line: 67, type: !52)
!21337 = !DILocation(line: 67, column: 17, scope: !21207)
!21338 = !DILocation(line: 67, column: 32, scope: !21207)
!21339 = !DILocation(line: 67, column: 30, scope: !21207)
!21340 = !DILocation(line: 67, column: 34, scope: !21207)
!21341 = !DILocation(line: 67, column: 23, scope: !21207)
!21342 = !DILocation(line: 67, column: 41, scope: !21207)
!21343 = !DILocation(line: 67, column: 39, scope: !21207)
!21344 = !DILocalVariable(name: "u", scope: !21207, file: !13243, line: 73, type: !52)
!21345 = !DILocation(line: 73, column: 17, scope: !21207)
!21346 = !DILocation(line: 73, column: 26, scope: !21207)
!21347 = !DILocation(line: 73, column: 21, scope: !21207)
!21348 = !DILocation(line: 73, column: 29, scope: !21207)
!21349 = !DILocalVariable(name: "v", scope: !21207, file: !13243, line: 73, type: !52)
!21350 = !DILocation(line: 73, column: 42, scope: !21207)
!21351 = !DILocation(line: 73, column: 51, scope: !21207)
!21352 = !DILocation(line: 73, column: 46, scope: !21207)
!21353 = !DILocation(line: 73, column: 54, scope: !21207)
!21354 = !DILocalVariable(name: "uv_val", scope: !21207, file: !13243, line: 74, type: !52)
!21355 = !DILocation(line: 74, column: 17, scope: !21207)
!21356 = !DILocation(line: 74, column: 26, scope: !21207)
!21357 = !DILocation(line: 74, column: 32, scope: !21207)
!21358 = !DILocation(line: 74, column: 30, scope: !21207)
!21359 = !DILocation(line: 74, column: 36, scope: !21207)
!21360 = !DILocation(line: 74, column: 42, scope: !21207)
!21361 = !DILocation(line: 74, column: 40, scope: !21207)
!21362 = !DILocation(line: 74, column: 34, scope: !21207)
!21363 = !DILocation(line: 74, column: 44, scope: !21207)
!21364 = !DILocation(line: 74, column: 52, scope: !21207)
!21365 = !DILocation(line: 74, column: 50, scope: !21207)
!21366 = !DILocation(line: 76, column: 46, scope: !21207)
!21367 = !DILocation(line: 76, column: 52, scope: !21207)
!21368 = !DILocation(line: 76, column: 50, scope: !21207)
!21369 = !DILocation(line: 76, column: 58, scope: !21207)
!21370 = !DILocation(line: 76, column: 56, scope: !21207)
!21371 = !DILocation(line: 76, column: 66, scope: !21207)
!21372 = !DILocation(line: 76, column: 28, scope: !21207)
!21373 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21221)
!21374 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21221)
!21375 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21221)
!21376 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21221)
!21377 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21221)
!21378 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21221)
!21379 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21221)
!21380 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21221)
!21381 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21221)
!21382 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21221)
!21383 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21221)
!21384 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21221)
!21385 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21221)
!21386 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21221)
!21387 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21221)
!21388 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21221)
!21389 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21221)
!21390 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21221)
!21391 = !DILocation(line: 76, column: 18, scope: !21207)
!21392 = !DILocation(line: 76, column: 20, scope: !21207)
!21393 = !DILocation(line: 76, column: 13, scope: !21207)
!21394 = !DILocation(line: 76, column: 26, scope: !21207)
!21395 = !DILocation(line: 78, column: 49, scope: !21207)
!21396 = !DILocation(line: 78, column: 55, scope: !21207)
!21397 = !DILocation(line: 78, column: 53, scope: !21207)
!21398 = !DILocation(line: 78, column: 61, scope: !21207)
!21399 = !DILocation(line: 78, column: 59, scope: !21207)
!21400 = !DILocation(line: 78, column: 69, scope: !21207)
!21401 = !DILocation(line: 78, column: 31, scope: !21207)
!21402 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21206)
!21403 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21206)
!21404 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21206)
!21405 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21206)
!21406 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21206)
!21407 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21206)
!21408 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21206)
!21409 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21206)
!21410 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21206)
!21411 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21206)
!21412 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21206)
!21413 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21206)
!21414 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21206)
!21415 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21206)
!21416 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21206)
!21417 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21206)
!21418 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21206)
!21419 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21206)
!21420 = !DILocation(line: 78, column: 18, scope: !21207)
!21421 = !DILocation(line: 78, column: 20, scope: !21207)
!21422 = !DILocation(line: 78, column: 24, scope: !21207)
!21423 = !DILocation(line: 78, column: 13, scope: !21207)
!21424 = !DILocation(line: 78, column: 29, scope: !21207)
!21425 = !DILocation(line: 87, column: 41, scope: !21207)
!21426 = !DILocation(line: 87, column: 45, scope: !21207)
!21427 = !DILocation(line: 87, column: 43, scope: !21207)
!21428 = !DILocation(line: 87, column: 51, scope: !21207)
!21429 = !DILocation(line: 87, column: 55, scope: !21207)
!21430 = !DILocation(line: 87, column: 53, scope: !21207)
!21431 = !DILocation(line: 87, column: 49, scope: !21207)
!21432 = !DILocation(line: 87, column: 59, scope: !21207)
!21433 = !DILocation(line: 87, column: 73, scope: !21207)
!21434 = !DILocation(line: 87, column: 23, scope: !21207)
!21435 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21215)
!21436 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21215)
!21437 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21215)
!21438 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21215)
!21439 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21215)
!21440 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21215)
!21441 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21215)
!21442 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21215)
!21443 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21215)
!21444 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21215)
!21445 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21215)
!21446 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21215)
!21447 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21215)
!21448 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21215)
!21449 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21215)
!21450 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21215)
!21451 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21215)
!21452 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21215)
!21453 = !DILocation(line: 87, column: 18, scope: !21207)
!21454 = !DILocation(line: 87, column: 13, scope: !21207)
!21455 = !DILocation(line: 87, column: 21, scope: !21207)
!21456 = !DILocation(line: 88, column: 41, scope: !21207)
!21457 = !DILocation(line: 88, column: 45, scope: !21207)
!21458 = !DILocation(line: 88, column: 43, scope: !21207)
!21459 = !DILocation(line: 88, column: 51, scope: !21207)
!21460 = !DILocation(line: 88, column: 55, scope: !21207)
!21461 = !DILocation(line: 88, column: 53, scope: !21207)
!21462 = !DILocation(line: 88, column: 49, scope: !21207)
!21463 = !DILocation(line: 88, column: 59, scope: !21207)
!21464 = !DILocation(line: 88, column: 73, scope: !21207)
!21465 = !DILocation(line: 88, column: 23, scope: !21207)
!21466 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21218)
!21467 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21218)
!21468 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21218)
!21469 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21218)
!21470 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21218)
!21471 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21218)
!21472 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21218)
!21473 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21218)
!21474 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21218)
!21475 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21218)
!21476 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21218)
!21477 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21218)
!21478 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21218)
!21479 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21218)
!21480 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21218)
!21481 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21218)
!21482 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21218)
!21483 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21218)
!21484 = !DILocation(line: 88, column: 18, scope: !21207)
!21485 = !DILocation(line: 88, column: 13, scope: !21207)
!21486 = !DILocation(line: 88, column: 21, scope: !21207)
!21487 = !DILocation(line: 89, column: 9, scope: !21207)
!21488 = !DILocation(line: 64, column: 29, scope: !21489)
!21489 = !DILexicalBlockFile(scope: !21208, file: !13243, discriminator: 2)
!21490 = !DILocation(line: 64, column: 9, scope: !21489)
!21491 = distinct !{!21491, !21492}
!21492 = !DILocation(line: 64, column: 9, scope: !21210)
!21493 = !DILocation(line: 91, column: 18, scope: !21210)
!21494 = !DILocation(line: 91, column: 32, scope: !21210)
!21495 = !DILocation(line: 91, column: 44, scope: !21210)
!21496 = !DILocation(line: 91, column: 14, scope: !21210)
!21497 = !DILocation(line: 92, column: 17, scope: !21210)
!21498 = !DILocation(line: 92, column: 31, scope: !21210)
!21499 = !DILocation(line: 92, column: 14, scope: !21210)
!21500 = !DILocation(line: 93, column: 17, scope: !21210)
!21501 = !DILocation(line: 93, column: 31, scope: !21210)
!21502 = !DILocation(line: 93, column: 14, scope: !21210)
!21503 = !DILocation(line: 94, column: 18, scope: !21210)
!21504 = !DILocation(line: 94, column: 32, scope: !21210)
!21505 = !DILocation(line: 94, column: 44, scope: !21210)
!21506 = !DILocation(line: 94, column: 14, scope: !21210)
!21507 = !DILocation(line: 95, column: 17, scope: !21210)
!21508 = !DILocation(line: 95, column: 31, scope: !21210)
!21509 = !DILocation(line: 95, column: 14, scope: !21210)
!21510 = !DILocation(line: 96, column: 17, scope: !21210)
!21511 = !DILocation(line: 96, column: 31, scope: !21210)
!21512 = !DILocation(line: 96, column: 14, scope: !21210)
!21513 = !DILocation(line: 97, column: 5, scope: !21210)
!21514 = !DILocation(line: 63, column: 25, scope: !21515)
!21515 = !DILexicalBlockFile(scope: !21211, file: !13243, discriminator: 2)
!21516 = !DILocation(line: 63, column: 5, scope: !21515)
!21517 = distinct !{!21517, !21518}
!21518 = !DILocation(line: 63, column: 5, scope: !21204)
!21519 = !DILocation(line: 98, column: 1, scope: !21204)
!21520 = distinct !DISubprogram(name: "yuv2yuv_420p12to12_c", scope: !13243, file: !13243, line: 40, type: !82, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!21521 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21522)
!21522 = distinct !DILocation(line: 78, column: 31, scope: !21523)
!21523 = distinct !DILexicalBlock(scope: !21524, file: !13243, line: 64, column: 33)
!21524 = distinct !DILexicalBlock(scope: !21525, file: !13243, line: 64, column: 9)
!21525 = distinct !DILexicalBlock(scope: !21526, file: !13243, line: 64, column: 9)
!21526 = distinct !DILexicalBlock(scope: !21527, file: !13243, line: 63, column: 29)
!21527 = distinct !DILexicalBlock(scope: !21528, file: !13243, line: 63, column: 5)
!21528 = distinct !DILexicalBlock(scope: !21520, file: !13243, line: 63, column: 5)
!21529 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21522)
!21530 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21531)
!21531 = distinct !DILocation(line: 81, column: 31, scope: !21523)
!21532 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21531)
!21533 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21534)
!21534 = distinct !DILocation(line: 83, column: 31, scope: !21523)
!21535 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21534)
!21536 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21537)
!21537 = distinct !DILocation(line: 87, column: 23, scope: !21523)
!21538 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21537)
!21539 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21540)
!21540 = distinct !DILocation(line: 88, column: 23, scope: !21523)
!21541 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21540)
!21542 = !DILocation(line: 229, column: 99, scope: !4653, inlinedAt: !21543)
!21543 = distinct !DILocation(line: 76, column: 28, scope: !21523)
!21544 = !DILocation(line: 229, column: 106, scope: !4653, inlinedAt: !21543)
!21545 = !DILocalVariable(name: "_dst", arg: 1, scope: !21520, file: !13243, line: 40, type: !17)
!21546 = !DILocation(line: 40, column: 43, scope: !21520)
!21547 = !DILocalVariable(name: "dst_stride", arg: 2, scope: !21520, file: !13243, line: 40, type: !50)
!21548 = !DILocation(line: 40, column: 68, scope: !21520)
!21549 = !DILocalVariable(name: "_src", arg: 3, scope: !21520, file: !13243, line: 41, type: !17)
!21550 = !DILocation(line: 41, column: 34, scope: !21520)
!21551 = !DILocalVariable(name: "src_stride", arg: 4, scope: !21520, file: !13243, line: 41, type: !50)
!21552 = !DILocation(line: 41, column: 59, scope: !21520)
!21553 = !DILocalVariable(name: "w", arg: 5, scope: !21520, file: !13243, line: 42, type: !52)
!21554 = !DILocation(line: 42, column: 29, scope: !21520)
!21555 = !DILocalVariable(name: "h", arg: 6, scope: !21520, file: !13243, line: 42, type: !52)
!21556 = !DILocation(line: 42, column: 36, scope: !21520)
!21557 = !DILocalVariable(name: "c", arg: 7, scope: !21520, file: !13243, line: 42, type: !53)
!21558 = !DILocation(line: 42, column: 53, scope: !21520)
!21559 = !DILocalVariable(name: "yuv_offset", arg: 8, scope: !21520, file: !13243, line: 43, type: !84)
!21560 = !DILocation(line: 43, column: 39, scope: !21520)
!21561 = !DILocalVariable(name: "dst", scope: !21520, file: !13243, line: 45, type: !22)
!21562 = !DILocation(line: 45, column: 16, scope: !21520)
!21563 = !DILocation(line: 45, column: 36, scope: !21520)
!21564 = !DILocation(line: 45, column: 22, scope: !21520)
!21565 = !DILocalVariable(name: "src", scope: !21520, file: !13243, line: 46, type: !22)
!21566 = !DILocation(line: 46, column: 16, scope: !21520)
!21567 = !DILocation(line: 46, column: 36, scope: !21520)
!21568 = !DILocation(line: 46, column: 22, scope: !21520)
!21569 = !DILocalVariable(name: "src0", scope: !21520, file: !13243, line: 47, type: !1418)
!21570 = !DILocation(line: 47, column: 21, scope: !21520)
!21571 = !DILocation(line: 47, column: 28, scope: !21520)
!21572 = !DILocalVariable(name: "src1", scope: !21520, file: !13243, line: 47, type: !1418)
!21573 = !DILocation(line: 47, column: 37, scope: !21520)
!21574 = !DILocation(line: 47, column: 44, scope: !21520)
!21575 = !DILocalVariable(name: "src2", scope: !21520, file: !13243, line: 47, type: !1418)
!21576 = !DILocation(line: 47, column: 53, scope: !21520)
!21577 = !DILocation(line: 47, column: 60, scope: !21520)
!21578 = !DILocalVariable(name: "dst0", scope: !21520, file: !13243, line: 48, type: !23)
!21579 = !DILocation(line: 48, column: 15, scope: !21520)
!21580 = !DILocation(line: 48, column: 22, scope: !21520)
!21581 = !DILocalVariable(name: "dst1", scope: !21520, file: !13243, line: 48, type: !23)
!21582 = !DILocation(line: 48, column: 31, scope: !21520)
!21583 = !DILocation(line: 48, column: 38, scope: !21520)
!21584 = !DILocalVariable(name: "dst2", scope: !21520, file: !13243, line: 48, type: !23)
!21585 = !DILocation(line: 48, column: 47, scope: !21520)
!21586 = !DILocation(line: 48, column: 54, scope: !21520)
!21587 = !DILocalVariable(name: "y", scope: !21520, file: !13243, line: 49, type: !52)
!21588 = !DILocation(line: 49, column: 9, scope: !21520)
!21589 = !DILocalVariable(name: "x", scope: !21520, file: !13243, line: 49, type: !52)
!21590 = !DILocation(line: 49, column: 12, scope: !21520)
!21591 = !DILocalVariable(name: "sh", scope: !21520, file: !13243, line: 50, type: !343)
!21592 = !DILocation(line: 50, column: 15, scope: !21520)
!21593 = !DILocalVariable(name: "rnd", scope: !21520, file: !13243, line: 51, type: !343)
!21594 = !DILocation(line: 51, column: 15, scope: !21520)
!21595 = !DILocalVariable(name: "y_off_in", scope: !21520, file: !13243, line: 52, type: !52)
!21596 = !DILocation(line: 52, column: 9, scope: !21520)
!21597 = !DILocation(line: 52, column: 20, scope: !21520)
!21598 = !DILocalVariable(name: "y_off_out", scope: !21520, file: !13243, line: 53, type: !52)
!21599 = !DILocation(line: 53, column: 9, scope: !21520)
!21600 = !DILocation(line: 53, column: 21, scope: !21520)
!21601 = !DILocation(line: 53, column: 38, scope: !21520)
!21602 = !DILocalVariable(name: "uv_off_in", scope: !21520, file: !13243, line: 54, type: !343)
!21603 = !DILocation(line: 54, column: 15, scope: !21520)
!21604 = !DILocalVariable(name: "uv_off_out", scope: !21520, file: !13243, line: 55, type: !343)
!21605 = !DILocation(line: 55, column: 15, scope: !21520)
!21606 = !DILocalVariable(name: "cyy", scope: !21520, file: !13243, line: 56, type: !52)
!21607 = !DILocation(line: 56, column: 9, scope: !21520)
!21608 = !DILocation(line: 56, column: 15, scope: !21520)
!21609 = !DILocalVariable(name: "cyu", scope: !21520, file: !13243, line: 56, type: !52)
!21610 = !DILocation(line: 56, column: 27, scope: !21520)
!21611 = !DILocation(line: 56, column: 33, scope: !21520)
!21612 = !DILocalVariable(name: "cyv", scope: !21520, file: !13243, line: 56, type: !52)
!21613 = !DILocation(line: 56, column: 45, scope: !21520)
!21614 = !DILocation(line: 56, column: 51, scope: !21520)
!21615 = !DILocalVariable(name: "cuu", scope: !21520, file: !13243, line: 57, type: !52)
!21616 = !DILocation(line: 57, column: 9, scope: !21520)
!21617 = !DILocation(line: 57, column: 15, scope: !21520)
!21618 = !DILocalVariable(name: "cuv", scope: !21520, file: !13243, line: 57, type: !52)
!21619 = !DILocation(line: 57, column: 27, scope: !21520)
!21620 = !DILocation(line: 57, column: 33, scope: !21520)
!21621 = !DILocalVariable(name: "cvu", scope: !21520, file: !13243, line: 57, type: !52)
!21622 = !DILocation(line: 57, column: 45, scope: !21520)
!21623 = !DILocation(line: 57, column: 51, scope: !21520)
!21624 = !DILocalVariable(name: "cvv", scope: !21520, file: !13243, line: 57, type: !52)
!21625 = !DILocation(line: 57, column: 63, scope: !21520)
!21626 = !DILocation(line: 57, column: 69, scope: !21520)
!21627 = !DILocation(line: 61, column: 58, scope: !21520)
!21628 = !DILocation(line: 61, column: 61, scope: !21520)
!21629 = !DILocation(line: 61, column: 72, scope: !21520)
!21630 = !DILocation(line: 61, column: 77, scope: !21520)
!21631 = !DILocation(line: 61, column: 7, scope: !21520)
!21632 = !DILocation(line: 62, column: 58, scope: !21520)
!21633 = !DILocation(line: 62, column: 61, scope: !21520)
!21634 = !DILocation(line: 62, column: 72, scope: !21520)
!21635 = !DILocation(line: 62, column: 77, scope: !21520)
!21636 = !DILocation(line: 62, column: 7, scope: !21520)
!21637 = !DILocation(line: 63, column: 12, scope: !21528)
!21638 = !DILocation(line: 63, column: 10, scope: !21528)
!21639 = !DILocation(line: 63, column: 17, scope: !21640)
!21640 = !DILexicalBlockFile(scope: !21527, file: !13243, discriminator: 1)
!21641 = !DILocation(line: 63, column: 21, scope: !21640)
!21642 = !DILocation(line: 63, column: 19, scope: !21640)
!21643 = !DILocation(line: 63, column: 5, scope: !21640)
!21644 = !DILocation(line: 64, column: 16, scope: !21525)
!21645 = !DILocation(line: 64, column: 14, scope: !21525)
!21646 = !DILocation(line: 64, column: 21, scope: !21647)
!21647 = !DILexicalBlockFile(scope: !21524, file: !13243, discriminator: 1)
!21648 = !DILocation(line: 64, column: 25, scope: !21647)
!21649 = !DILocation(line: 64, column: 23, scope: !21647)
!21650 = !DILocation(line: 64, column: 9, scope: !21647)
!21651 = !DILocalVariable(name: "y00", scope: !21523, file: !13243, line: 65, type: !52)
!21652 = !DILocation(line: 65, column: 17, scope: !21523)
!21653 = !DILocation(line: 65, column: 28, scope: !21523)
!21654 = !DILocation(line: 65, column: 30, scope: !21523)
!21655 = !DILocation(line: 65, column: 23, scope: !21523)
!21656 = !DILocation(line: 65, column: 38, scope: !21523)
!21657 = !DILocation(line: 65, column: 36, scope: !21523)
!21658 = !DILocalVariable(name: "y01", scope: !21523, file: !13243, line: 67, type: !52)
!21659 = !DILocation(line: 67, column: 17, scope: !21523)
!21660 = !DILocation(line: 67, column: 32, scope: !21523)
!21661 = !DILocation(line: 67, column: 30, scope: !21523)
!21662 = !DILocation(line: 67, column: 34, scope: !21523)
!21663 = !DILocation(line: 67, column: 23, scope: !21523)
!21664 = !DILocation(line: 67, column: 41, scope: !21523)
!21665 = !DILocation(line: 67, column: 39, scope: !21523)
!21666 = !DILocalVariable(name: "y10", scope: !21523, file: !13243, line: 69, type: !52)
!21667 = !DILocation(line: 69, column: 17, scope: !21523)
!21668 = !DILocation(line: 69, column: 28, scope: !21523)
!21669 = !DILocation(line: 69, column: 42, scope: !21523)
!21670 = !DILocation(line: 69, column: 67, scope: !21523)
!21671 = !DILocation(line: 69, column: 65, scope: !21523)
!21672 = !DILocation(line: 69, column: 63, scope: !21523)
!21673 = !DILocation(line: 69, column: 61, scope: !21523)
!21674 = !DILocation(line: 69, column: 23, scope: !21523)
!21675 = !DILocation(line: 69, column: 72, scope: !21523)
!21676 = !DILocation(line: 69, column: 70, scope: !21523)
!21677 = !DILocalVariable(name: "y11", scope: !21523, file: !13243, line: 70, type: !52)
!21678 = !DILocation(line: 70, column: 17, scope: !21523)
!21679 = !DILocation(line: 70, column: 28, scope: !21523)
!21680 = !DILocation(line: 70, column: 42, scope: !21523)
!21681 = !DILocation(line: 70, column: 67, scope: !21523)
!21682 = !DILocation(line: 70, column: 65, scope: !21523)
!21683 = !DILocation(line: 70, column: 63, scope: !21523)
!21684 = !DILocation(line: 70, column: 61, scope: !21523)
!21685 = !DILocation(line: 70, column: 69, scope: !21523)
!21686 = !DILocation(line: 70, column: 23, scope: !21523)
!21687 = !DILocation(line: 70, column: 76, scope: !21523)
!21688 = !DILocation(line: 70, column: 74, scope: !21523)
!21689 = !DILocalVariable(name: "u", scope: !21523, file: !13243, line: 73, type: !52)
!21690 = !DILocation(line: 73, column: 17, scope: !21523)
!21691 = !DILocation(line: 73, column: 26, scope: !21523)
!21692 = !DILocation(line: 73, column: 21, scope: !21523)
!21693 = !DILocation(line: 73, column: 29, scope: !21523)
!21694 = !DILocalVariable(name: "v", scope: !21523, file: !13243, line: 73, type: !52)
!21695 = !DILocation(line: 73, column: 42, scope: !21523)
!21696 = !DILocation(line: 73, column: 51, scope: !21523)
!21697 = !DILocation(line: 73, column: 46, scope: !21523)
!21698 = !DILocation(line: 73, column: 54, scope: !21523)
!21699 = !DILocalVariable(name: "uv_val", scope: !21523, file: !13243, line: 74, type: !52)
!21700 = !DILocation(line: 74, column: 17, scope: !21523)
!21701 = !DILocation(line: 74, column: 26, scope: !21523)
!21702 = !DILocation(line: 74, column: 32, scope: !21523)
!21703 = !DILocation(line: 74, column: 30, scope: !21523)
!21704 = !DILocation(line: 74, column: 36, scope: !21523)
!21705 = !DILocation(line: 74, column: 42, scope: !21523)
!21706 = !DILocation(line: 74, column: 40, scope: !21523)
!21707 = !DILocation(line: 74, column: 34, scope: !21523)
!21708 = !DILocation(line: 74, column: 44, scope: !21523)
!21709 = !DILocation(line: 74, column: 52, scope: !21523)
!21710 = !DILocation(line: 74, column: 50, scope: !21523)
!21711 = !DILocation(line: 76, column: 46, scope: !21523)
!21712 = !DILocation(line: 76, column: 52, scope: !21523)
!21713 = !DILocation(line: 76, column: 50, scope: !21523)
!21714 = !DILocation(line: 76, column: 58, scope: !21523)
!21715 = !DILocation(line: 76, column: 56, scope: !21523)
!21716 = !DILocation(line: 76, column: 66, scope: !21523)
!21717 = !DILocation(line: 76, column: 28, scope: !21523)
!21718 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21543)
!21719 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21543)
!21720 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21543)
!21721 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21543)
!21722 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21543)
!21723 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21543)
!21724 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21543)
!21725 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21543)
!21726 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21543)
!21727 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21543)
!21728 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21543)
!21729 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21543)
!21730 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21543)
!21731 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21543)
!21732 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21543)
!21733 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21543)
!21734 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21543)
!21735 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21543)
!21736 = !DILocation(line: 76, column: 18, scope: !21523)
!21737 = !DILocation(line: 76, column: 20, scope: !21523)
!21738 = !DILocation(line: 76, column: 13, scope: !21523)
!21739 = !DILocation(line: 76, column: 26, scope: !21523)
!21740 = !DILocation(line: 78, column: 49, scope: !21523)
!21741 = !DILocation(line: 78, column: 55, scope: !21523)
!21742 = !DILocation(line: 78, column: 53, scope: !21523)
!21743 = !DILocation(line: 78, column: 61, scope: !21523)
!21744 = !DILocation(line: 78, column: 59, scope: !21523)
!21745 = !DILocation(line: 78, column: 69, scope: !21523)
!21746 = !DILocation(line: 78, column: 31, scope: !21523)
!21747 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21522)
!21748 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21522)
!21749 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21522)
!21750 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21522)
!21751 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21522)
!21752 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21522)
!21753 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21522)
!21754 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21522)
!21755 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21522)
!21756 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21522)
!21757 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21522)
!21758 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21522)
!21759 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21522)
!21760 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21522)
!21761 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21522)
!21762 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21522)
!21763 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21522)
!21764 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21522)
!21765 = !DILocation(line: 78, column: 18, scope: !21523)
!21766 = !DILocation(line: 78, column: 20, scope: !21523)
!21767 = !DILocation(line: 78, column: 24, scope: !21523)
!21768 = !DILocation(line: 78, column: 13, scope: !21523)
!21769 = !DILocation(line: 78, column: 29, scope: !21523)
!21770 = !DILocation(line: 81, column: 49, scope: !21523)
!21771 = !DILocation(line: 81, column: 55, scope: !21523)
!21772 = !DILocation(line: 81, column: 53, scope: !21523)
!21773 = !DILocation(line: 81, column: 61, scope: !21523)
!21774 = !DILocation(line: 81, column: 59, scope: !21523)
!21775 = !DILocation(line: 81, column: 69, scope: !21523)
!21776 = !DILocation(line: 81, column: 31, scope: !21523)
!21777 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21531)
!21778 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21531)
!21779 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21531)
!21780 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21531)
!21781 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21531)
!21782 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21531)
!21783 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21531)
!21784 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21531)
!21785 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21531)
!21786 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21531)
!21787 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21531)
!21788 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21531)
!21789 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21531)
!21790 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21531)
!21791 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21531)
!21792 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21531)
!21793 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21531)
!21794 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21531)
!21795 = !DILocation(line: 80, column: 18, scope: !21523)
!21796 = !DILocation(line: 80, column: 20, scope: !21523)
!21797 = !DILocation(line: 80, column: 24, scope: !21523)
!21798 = !DILocation(line: 80, column: 30, scope: !21523)
!21799 = !DILocation(line: 80, column: 44, scope: !21523)
!21800 = !DILocation(line: 80, column: 28, scope: !21523)
!21801 = !DILocation(line: 80, column: 13, scope: !21523)
!21802 = !DILocation(line: 80, column: 64, scope: !21523)
!21803 = !DILocation(line: 83, column: 49, scope: !21523)
!21804 = !DILocation(line: 83, column: 55, scope: !21523)
!21805 = !DILocation(line: 83, column: 53, scope: !21523)
!21806 = !DILocation(line: 83, column: 61, scope: !21523)
!21807 = !DILocation(line: 83, column: 59, scope: !21523)
!21808 = !DILocation(line: 83, column: 69, scope: !21523)
!21809 = !DILocation(line: 83, column: 31, scope: !21523)
!21810 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21534)
!21811 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21534)
!21812 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21534)
!21813 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21534)
!21814 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21534)
!21815 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21534)
!21816 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21534)
!21817 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21534)
!21818 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21534)
!21819 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21534)
!21820 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21534)
!21821 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21534)
!21822 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21534)
!21823 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21534)
!21824 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21534)
!21825 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21534)
!21826 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21534)
!21827 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21534)
!21828 = !DILocation(line: 82, column: 18, scope: !21523)
!21829 = !DILocation(line: 82, column: 20, scope: !21523)
!21830 = !DILocation(line: 82, column: 24, scope: !21523)
!21831 = !DILocation(line: 82, column: 30, scope: !21523)
!21832 = !DILocation(line: 82, column: 44, scope: !21523)
!21833 = !DILocation(line: 82, column: 28, scope: !21523)
!21834 = !DILocation(line: 82, column: 13, scope: !21523)
!21835 = !DILocation(line: 82, column: 64, scope: !21523)
!21836 = !DILocation(line: 87, column: 41, scope: !21523)
!21837 = !DILocation(line: 87, column: 45, scope: !21523)
!21838 = !DILocation(line: 87, column: 43, scope: !21523)
!21839 = !DILocation(line: 87, column: 51, scope: !21523)
!21840 = !DILocation(line: 87, column: 55, scope: !21523)
!21841 = !DILocation(line: 87, column: 53, scope: !21523)
!21842 = !DILocation(line: 87, column: 49, scope: !21523)
!21843 = !DILocation(line: 87, column: 59, scope: !21523)
!21844 = !DILocation(line: 87, column: 73, scope: !21523)
!21845 = !DILocation(line: 87, column: 23, scope: !21523)
!21846 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21537)
!21847 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21537)
!21848 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21537)
!21849 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21537)
!21850 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21537)
!21851 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21537)
!21852 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21537)
!21853 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21537)
!21854 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21537)
!21855 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21537)
!21856 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21537)
!21857 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21537)
!21858 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21537)
!21859 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21537)
!21860 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21537)
!21861 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21537)
!21862 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21537)
!21863 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21537)
!21864 = !DILocation(line: 87, column: 18, scope: !21523)
!21865 = !DILocation(line: 87, column: 13, scope: !21523)
!21866 = !DILocation(line: 87, column: 21, scope: !21523)
!21867 = !DILocation(line: 88, column: 41, scope: !21523)
!21868 = !DILocation(line: 88, column: 45, scope: !21523)
!21869 = !DILocation(line: 88, column: 43, scope: !21523)
!21870 = !DILocation(line: 88, column: 51, scope: !21523)
!21871 = !DILocation(line: 88, column: 55, scope: !21523)
!21872 = !DILocation(line: 88, column: 53, scope: !21523)
!21873 = !DILocation(line: 88, column: 49, scope: !21523)
!21874 = !DILocation(line: 88, column: 59, scope: !21523)
!21875 = !DILocation(line: 88, column: 73, scope: !21523)
!21876 = !DILocation(line: 88, column: 23, scope: !21523)
!21877 = !DILocation(line: 231, column: 9, scope: !4805, inlinedAt: !21540)
!21878 = !DILocation(line: 231, column: 19, scope: !4805, inlinedAt: !21540)
!21879 = !DILocation(line: 231, column: 17, scope: !4805, inlinedAt: !21540)
!21880 = !DILocation(line: 231, column: 22, scope: !4805, inlinedAt: !21540)
!21881 = !DILocation(line: 231, column: 13, scope: !4805, inlinedAt: !21540)
!21882 = !DILocation(line: 231, column: 11, scope: !4805, inlinedAt: !21540)
!21883 = !DILocation(line: 231, column: 9, scope: !4653, inlinedAt: !21540)
!21884 = !DILocation(line: 231, column: 37, scope: !4813, inlinedAt: !21540)
!21885 = !DILocation(line: 231, column: 36, scope: !4813, inlinedAt: !21540)
!21886 = !DILocation(line: 231, column: 40, scope: !4813, inlinedAt: !21540)
!21887 = !DILocation(line: 231, column: 53, scope: !4813, inlinedAt: !21540)
!21888 = !DILocation(line: 231, column: 51, scope: !4813, inlinedAt: !21540)
!21889 = !DILocation(line: 231, column: 56, scope: !4813, inlinedAt: !21540)
!21890 = !DILocation(line: 231, column: 46, scope: !4813, inlinedAt: !21540)
!21891 = !DILocation(line: 231, column: 28, scope: !4813, inlinedAt: !21540)
!21892 = !DILocation(line: 232, column: 17, scope: !4805, inlinedAt: !21540)
!21893 = !DILocation(line: 232, column: 10, scope: !4805, inlinedAt: !21540)
!21894 = !DILocation(line: 233, column: 1, scope: !4653, inlinedAt: !21540)
!21895 = !DILocation(line: 88, column: 18, scope: !21523)
!21896 = !DILocation(line: 88, column: 13, scope: !21523)
!21897 = !DILocation(line: 88, column: 21, scope: !21523)
!21898 = !DILocation(line: 89, column: 9, scope: !21523)
!21899 = !DILocation(line: 64, column: 29, scope: !21900)
!21900 = !DILexicalBlockFile(scope: !21524, file: !13243, discriminator: 2)
!21901 = !DILocation(line: 64, column: 9, scope: !21900)
!21902 = distinct !{!21902, !21903}
!21903 = !DILocation(line: 64, column: 9, scope: !21526)
!21904 = !DILocation(line: 91, column: 18, scope: !21526)
!21905 = !DILocation(line: 91, column: 32, scope: !21526)
!21906 = !DILocation(line: 91, column: 44, scope: !21526)
!21907 = !DILocation(line: 91, column: 14, scope: !21526)
!21908 = !DILocation(line: 92, column: 17, scope: !21526)
!21909 = !DILocation(line: 92, column: 31, scope: !21526)
!21910 = !DILocation(line: 92, column: 14, scope: !21526)
!21911 = !DILocation(line: 93, column: 17, scope: !21526)
!21912 = !DILocation(line: 93, column: 31, scope: !21526)
!21913 = !DILocation(line: 93, column: 14, scope: !21526)
!21914 = !DILocation(line: 94, column: 18, scope: !21526)
!21915 = !DILocation(line: 94, column: 32, scope: !21526)
!21916 = !DILocation(line: 94, column: 44, scope: !21526)
!21917 = !DILocation(line: 94, column: 14, scope: !21526)
!21918 = !DILocation(line: 95, column: 17, scope: !21526)
!21919 = !DILocation(line: 95, column: 31, scope: !21526)
!21920 = !DILocation(line: 95, column: 14, scope: !21526)
!21921 = !DILocation(line: 96, column: 17, scope: !21526)
!21922 = !DILocation(line: 96, column: 31, scope: !21526)
!21923 = !DILocation(line: 96, column: 14, scope: !21526)
!21924 = !DILocation(line: 97, column: 5, scope: !21526)
!21925 = !DILocation(line: 63, column: 25, scope: !21926)
!21926 = !DILexicalBlockFile(scope: !21527, file: !13243, discriminator: 2)
!21927 = !DILocation(line: 63, column: 5, scope: !21926)
!21928 = distinct !{!21928, !21929}
!21929 = !DILocation(line: 63, column: 5, scope: !21520)
!21930 = !DILocation(line: 98, column: 1, scope: !21520)
!21931 = distinct !DISubprogram(name: "multiply3x3_c", scope: !30, file: !30, line: 77, type: !90, isLocal: true, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !92)
!21932 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !21933)
!21933 = distinct !DILocation(line: 89, column: 23, scope: !21934)
!21934 = distinct !DILexicalBlock(scope: !21935, file: !30, line: 84, column: 33)
!21935 = distinct !DILexicalBlock(scope: !21936, file: !30, line: 84, column: 9)
!21936 = distinct !DILexicalBlock(scope: !21937, file: !30, line: 84, column: 9)
!21937 = distinct !DILexicalBlock(scope: !21938, file: !30, line: 83, column: 29)
!21938 = distinct !DILexicalBlock(scope: !21939, file: !30, line: 83, column: 5)
!21939 = distinct !DILexicalBlock(scope: !21931, file: !30, line: 83, column: 5)
!21940 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !21941)
!21941 = distinct !DILocation(line: 91, column: 23, scope: !21934)
!21942 = !DILocation(line: 192, column: 97, scope: !268, inlinedAt: !21943)
!21943 = distinct !DILocation(line: 87, column: 23, scope: !21934)
!21944 = !DILocalVariable(name: "buf", arg: 1, scope: !21931, file: !30, line: 77, type: !43)
!21945 = !DILocation(line: 77, column: 36, scope: !21931)
!21946 = !DILocalVariable(name: "stride", arg: 2, scope: !21931, file: !30, line: 77, type: !47)
!21947 = !DILocation(line: 77, column: 54, scope: !21931)
!21948 = !DILocalVariable(name: "w", arg: 3, scope: !21931, file: !30, line: 78, type: !52)
!21949 = !DILocation(line: 78, column: 31, scope: !21931)
!21950 = !DILocalVariable(name: "h", arg: 4, scope: !21931, file: !30, line: 78, type: !52)
!21951 = !DILocation(line: 78, column: 38, scope: !21931)
!21952 = !DILocalVariable(name: "m", arg: 5, scope: !21931, file: !30, line: 78, type: !53)
!21953 = !DILocation(line: 78, column: 55, scope: !21931)
!21954 = !DILocalVariable(name: "y", scope: !21931, file: !30, line: 80, type: !52)
!21955 = !DILocation(line: 80, column: 9, scope: !21931)
!21956 = !DILocalVariable(name: "x", scope: !21931, file: !30, line: 80, type: !52)
!21957 = !DILocation(line: 80, column: 12, scope: !21931)
!21958 = !DILocalVariable(name: "buf0", scope: !21931, file: !30, line: 81, type: !44)
!21959 = !DILocation(line: 81, column: 14, scope: !21931)
!21960 = !DILocation(line: 81, column: 21, scope: !21931)
!21961 = !DILocalVariable(name: "buf1", scope: !21931, file: !30, line: 81, type: !44)
!21962 = !DILocation(line: 81, column: 30, scope: !21931)
!21963 = !DILocation(line: 81, column: 37, scope: !21931)
!21964 = !DILocalVariable(name: "buf2", scope: !21931, file: !30, line: 81, type: !44)
!21965 = !DILocation(line: 81, column: 46, scope: !21931)
!21966 = !DILocation(line: 81, column: 53, scope: !21931)
!21967 = !DILocation(line: 83, column: 12, scope: !21939)
!21968 = !DILocation(line: 83, column: 10, scope: !21939)
!21969 = !DILocation(line: 83, column: 17, scope: !21970)
!21970 = !DILexicalBlockFile(scope: !21938, file: !30, discriminator: 1)
!21971 = !DILocation(line: 83, column: 21, scope: !21970)
!21972 = !DILocation(line: 83, column: 19, scope: !21970)
!21973 = !DILocation(line: 83, column: 5, scope: !21970)
!21974 = !DILocation(line: 84, column: 16, scope: !21936)
!21975 = !DILocation(line: 84, column: 14, scope: !21936)
!21976 = !DILocation(line: 84, column: 21, scope: !21977)
!21977 = !DILexicalBlockFile(scope: !21935, file: !30, discriminator: 1)
!21978 = !DILocation(line: 84, column: 25, scope: !21977)
!21979 = !DILocation(line: 84, column: 23, scope: !21977)
!21980 = !DILocation(line: 84, column: 9, scope: !21977)
!21981 = !DILocalVariable(name: "v0", scope: !21934, file: !30, line: 85, type: !52)
!21982 = !DILocation(line: 85, column: 17, scope: !21934)
!21983 = !DILocation(line: 85, column: 27, scope: !21934)
!21984 = !DILocation(line: 85, column: 22, scope: !21934)
!21985 = !DILocalVariable(name: "v1", scope: !21934, file: !30, line: 85, type: !52)
!21986 = !DILocation(line: 85, column: 31, scope: !21934)
!21987 = !DILocation(line: 85, column: 41, scope: !21934)
!21988 = !DILocation(line: 85, column: 36, scope: !21934)
!21989 = !DILocalVariable(name: "v2", scope: !21934, file: !30, line: 85, type: !52)
!21990 = !DILocation(line: 85, column: 45, scope: !21934)
!21991 = !DILocation(line: 85, column: 55, scope: !21934)
!21992 = !DILocation(line: 85, column: 50, scope: !21934)
!21993 = !DILocation(line: 87, column: 40, scope: !21934)
!21994 = !DILocation(line: 87, column: 53, scope: !21934)
!21995 = !DILocation(line: 87, column: 51, scope: !21934)
!21996 = !DILocation(line: 87, column: 58, scope: !21934)
!21997 = !DILocation(line: 87, column: 71, scope: !21934)
!21998 = !DILocation(line: 87, column: 69, scope: !21934)
!21999 = !DILocation(line: 87, column: 56, scope: !21934)
!22000 = !DILocation(line: 88, column: 38, scope: !21934)
!22001 = !DILocation(line: 88, column: 51, scope: !21934)
!22002 = !DILocation(line: 88, column: 49, scope: !21934)
!22003 = !DILocation(line: 87, column: 74, scope: !21934)
!22004 = !DILocation(line: 88, column: 54, scope: !21934)
!22005 = !DILocation(line: 88, column: 62, scope: !21934)
!22006 = !DILocation(line: 87, column: 23, scope: !21934)
!22007 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !21943)
!22008 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !21943)
!22009 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !21943)
!22010 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !21943)
!22011 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !21943)
!22012 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !21943)
!22013 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !21943)
!22014 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !21943)
!22015 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !21943)
!22016 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !21943)
!22017 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !21943)
!22018 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !21943)
!22019 = !DILocation(line: 87, column: 18, scope: !21934)
!22020 = !DILocation(line: 87, column: 13, scope: !21934)
!22021 = !DILocation(line: 87, column: 21, scope: !21934)
!22022 = !DILocation(line: 89, column: 40, scope: !21934)
!22023 = !DILocation(line: 89, column: 53, scope: !21934)
!22024 = !DILocation(line: 89, column: 51, scope: !21934)
!22025 = !DILocation(line: 89, column: 58, scope: !21934)
!22026 = !DILocation(line: 89, column: 71, scope: !21934)
!22027 = !DILocation(line: 89, column: 69, scope: !21934)
!22028 = !DILocation(line: 89, column: 56, scope: !21934)
!22029 = !DILocation(line: 90, column: 38, scope: !21934)
!22030 = !DILocation(line: 90, column: 51, scope: !21934)
!22031 = !DILocation(line: 90, column: 49, scope: !21934)
!22032 = !DILocation(line: 89, column: 74, scope: !21934)
!22033 = !DILocation(line: 90, column: 54, scope: !21934)
!22034 = !DILocation(line: 90, column: 62, scope: !21934)
!22035 = !DILocation(line: 89, column: 23, scope: !21934)
!22036 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !21933)
!22037 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !21933)
!22038 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !21933)
!22039 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !21933)
!22040 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !21933)
!22041 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !21933)
!22042 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !21933)
!22043 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !21933)
!22044 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !21933)
!22045 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !21933)
!22046 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !21933)
!22047 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !21933)
!22048 = !DILocation(line: 89, column: 18, scope: !21934)
!22049 = !DILocation(line: 89, column: 13, scope: !21934)
!22050 = !DILocation(line: 89, column: 21, scope: !21934)
!22051 = !DILocation(line: 91, column: 40, scope: !21934)
!22052 = !DILocation(line: 91, column: 53, scope: !21934)
!22053 = !DILocation(line: 91, column: 51, scope: !21934)
!22054 = !DILocation(line: 91, column: 58, scope: !21934)
!22055 = !DILocation(line: 91, column: 71, scope: !21934)
!22056 = !DILocation(line: 91, column: 69, scope: !21934)
!22057 = !DILocation(line: 91, column: 56, scope: !21934)
!22058 = !DILocation(line: 92, column: 38, scope: !21934)
!22059 = !DILocation(line: 92, column: 51, scope: !21934)
!22060 = !DILocation(line: 92, column: 49, scope: !21934)
!22061 = !DILocation(line: 91, column: 74, scope: !21934)
!22062 = !DILocation(line: 92, column: 54, scope: !21934)
!22063 = !DILocation(line: 92, column: 62, scope: !21934)
!22064 = !DILocation(line: 91, column: 23, scope: !21934)
!22065 = !DILocation(line: 194, column: 10, scope: !401, inlinedAt: !21941)
!22066 = !DILocation(line: 194, column: 11, scope: !401, inlinedAt: !21941)
!22067 = !DILocation(line: 194, column: 21, scope: !401, inlinedAt: !21941)
!22068 = !DILocation(line: 194, column: 9, scope: !268, inlinedAt: !21941)
!22069 = !DILocation(line: 194, column: 40, scope: !406, inlinedAt: !21941)
!22070 = !DILocation(line: 194, column: 41, scope: !406, inlinedAt: !21941)
!22071 = !DILocation(line: 194, column: 47, scope: !406, inlinedAt: !21941)
!22072 = !DILocation(line: 194, column: 39, scope: !406, inlinedAt: !21941)
!22073 = !DILocation(line: 194, column: 32, scope: !406, inlinedAt: !21941)
!22074 = !DILocation(line: 195, column: 17, scope: !401, inlinedAt: !21941)
!22075 = !DILocation(line: 195, column: 10, scope: !401, inlinedAt: !21941)
!22076 = !DILocation(line: 196, column: 1, scope: !268, inlinedAt: !21941)
!22077 = !DILocation(line: 91, column: 18, scope: !21934)
!22078 = !DILocation(line: 91, column: 13, scope: !21934)
!22079 = !DILocation(line: 91, column: 21, scope: !21934)
!22080 = !DILocation(line: 93, column: 9, scope: !21934)
!22081 = !DILocation(line: 84, column: 29, scope: !22082)
!22082 = !DILexicalBlockFile(scope: !21935, file: !30, discriminator: 2)
!22083 = !DILocation(line: 84, column: 9, scope: !22082)
!22084 = distinct !{!22084, !22085}
!22085 = !DILocation(line: 84, column: 9, scope: !21937)
!22086 = !DILocation(line: 95, column: 17, scope: !21937)
!22087 = !DILocation(line: 95, column: 14, scope: !21937)
!22088 = !DILocation(line: 96, column: 17, scope: !21937)
!22089 = !DILocation(line: 96, column: 14, scope: !21937)
!22090 = !DILocation(line: 97, column: 17, scope: !21937)
!22091 = !DILocation(line: 97, column: 14, scope: !21937)
!22092 = !DILocation(line: 98, column: 5, scope: !21937)
!22093 = !DILocation(line: 83, column: 25, scope: !22094)
!22094 = !DILexicalBlockFile(scope: !21938, file: !30, discriminator: 2)
!22095 = !DILocation(line: 83, column: 5, scope: !22094)
!22096 = distinct !{!22096, !22097}
!22097 = !DILocation(line: 83, column: 5, scope: !21931)
!22098 = !DILocation(line: 99, column: 1, scope: !21931)
