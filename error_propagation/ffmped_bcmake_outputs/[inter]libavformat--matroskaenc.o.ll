; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskaenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskaenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodecTag = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, {}*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.CodecTags = type { [22 x i8], i32 }
%struct.CodecMime = type { [32 x i8], i32 }
%struct.AVMetadataConv = type { i8*, i8* }
%struct.MatroskaMuxContext = type { %struct.AVClass*, i32, %struct.AVIOContext*, %struct.AVIOContext*, %struct.ebml_master, %struct.AVIOContext*, %struct.ebml_master, %struct.AVIOContext*, %struct.ebml_master, %struct.ebml_master, i64, %struct.ebml_master, i64, i64, i64, i64, %struct.mkv_seekhead*, %struct.mkv_cues*, %struct.mkv_track*, %struct.mkv_attachments*, %struct.AVPacket, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, [126 x i64], i64*, i64*, i32 }
%struct.ebml_master = type { i64, i32 }
%struct.mkv_seekhead = type { i64, i64, i32, i32, %struct.mkv_seekhead_entry*, i32 }
%struct.mkv_seekhead_entry = type { i32, i64 }
%struct.mkv_cues = type { i64, %struct.mkv_cuepoint*, i32 }
%struct.mkv_cuepoint = type { i64, i32, i32, i64, i64, i64 }
%struct.mkv_track = type { i32, i32, i32, i64, i64, i64 }
%struct.mkv_attachments = type { %struct.mkv_attachment*, i32 }
%struct.mkv_attachment = type { i32, i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.AVLFG = type { [64 x i32], i32 }
%union.unaligned_64 = type { i64 }
%union.unaligned_16 = type { i16 }
%union.av_intfloat64 = type { i64 }
%union.unaligned_32 = type { i32 }
%struct.AVSHA = type opaque
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVStereo3D = type { i32, i32, i32 }
%struct.AVContentLightMetadata = type { i32, i32 }
%struct.AVMasteringDisplayMetadata = type { [3 x [2 x %struct.AVRational]], [2 x %struct.AVRational], %struct.AVRational, %struct.AVRational, i32, i32 }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.WvHeader = type { i32, i16, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [9 x i8] c"matroska\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Matroska\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"video/x-matroska\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"mkv\00", align 1
@ff_codec_bmp_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_wav_tags = external constant [0 x %struct.AVCodecTag], align 4
@additional_audio_tags = internal constant [13 x %struct.AVCodecTag] [%struct.AVCodecTag { i32 86032, i32 -1 }, %struct.AVCodecTag { i32 86045, i32 -1 }, %struct.AVCodecTag { i32 86076, i32 -1 }, %struct.AVCodecTag { i32 65537, i32 -1 }, %struct.AVCodecTag { i32 65549, i32 -1 }, %struct.AVCodecTag { i32 65545, i32 -1 }, %struct.AVCodecTag { i32 86066, i32 -1 }, %struct.AVCodecTag { i32 86035, i32 -1 }, %struct.AVCodecTag { i32 77824, i32 -1 }, %struct.AVCodecTag { i32 77825, i32 -1 }, %struct.AVCodecTag { i32 86036, i32 -1 }, %struct.AVCodecTag { i32 86060, i32 -1 }, %struct.AVCodecTag { i32 0, i32 -1 }], align 16
@additional_video_tags = internal constant [4 x %struct.AVCodecTag] [%struct.AVCodecTag { i32 5, i32 -1 }, %struct.AVCodecTag { i32 6, i32 -1 }, %struct.AVCodecTag { i32 68, i32 -1 }, %struct.AVCodecTag { i32 0, i32 -1 }], align 16
@additional_subtitle_tags = internal constant [3 x %struct.AVCodecTag] [%struct.AVCodecTag { i32 94209, i32 -1 }, %struct.AVCodecTag { i32 94214, i32 -1 }, %struct.AVCodecTag { i32 0, i32 -1 }], align 16
@.compoundliteral = internal constant [6 x %struct.AVCodecTag*] [%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([13 x %struct.AVCodecTag], [13 x %struct.AVCodecTag]* @additional_audio_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([4 x %struct.AVCodecTag], [4 x %struct.AVCodecTag]* @additional_video_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([3 x %struct.AVCodecTag], [3 x %struct.AVCodecTag]* @additional_subtitle_tags, i32 0, i32 0), %struct.AVCodecTag* null], align 8
@matroska_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([9 x %struct.AVOption], [9 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_matroska_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i32 86019, i32 12, i32 96269, i32 197696, %struct.AVCodecTag** getelementptr inbounds ([6 x %struct.AVCodecTag*], [6 x %struct.AVCodecTag*]* @.compoundliteral, i32 0, i32 0), %struct.AVClass* @matroska_class, %struct.AVOutputFormat* null, i32 1376, i32 (%struct.AVFormatContext*)* @mkv_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_write_flush_packet, i32 (%struct.AVFormatContext*)* @mkv_write_trailer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* null, i32 (i32, i32)* @mkv_query_codec, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* @mkv_init, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_check_bitstream }, align 8
@.str.4 = private unnamed_addr constant [5 x i8] c"webm\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"WebM\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"video/webm\00", align 1
@webm_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([9 x %struct.AVOption], [9 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_webm_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 86021, i32 139, i32 96265, i32 197696, %struct.AVCodecTag** null, %struct.AVClass* @webm_class, %struct.AVOutputFormat* null, i32 1376, i32 (%struct.AVFormatContext*)* @mkv_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_write_flush_packet, i32 (%struct.AVFormatContext*)* @mkv_write_trailer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* null, i32 (i32, i32)* @webm_query_codec, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* @mkv_init, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_check_bitstream }, align 8
@.str.7 = private unnamed_addr constant [15 x i8] c"Matroska Audio\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"audio/x-matroska\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"mka\00", align 1
@.compoundliteral.10 = internal constant [3 x %struct.AVCodecTag*] [%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([13 x %struct.AVCodecTag], [13 x %struct.AVCodecTag]* @additional_audio_tags, i32 0, i32 0), %struct.AVCodecTag* null], align 8
@mka_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([9 x %struct.AVOption], [9 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_matroska_audio_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 86019, i32 0, i32 0, i32 196672, %struct.AVCodecTag** getelementptr inbounds ([3 x %struct.AVCodecTag*], [3 x %struct.AVCodecTag*]* @.compoundliteral.10, i32 0, i32 0), %struct.AVClass* @mka_class, %struct.AVOutputFormat* null, i32 1376, i32 (%struct.AVFormatContext*)* @mkv_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_write_flush_packet, i32 (%struct.AVFormatContext*)* @mkv_write_trailer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* null, i32 (i32, i32)* null, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* @mkv_init, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mkv_check_bitstream }, align 8
@.str.11 = private unnamed_addr constant [15 x i8] c"matroska muxer\00", align 1
@options = internal constant [9 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.13, i32 0, i32 0), i32 296, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i32 0, i32 0), i32 300, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i32 0, i32 0), i32 312, i32 2, %union.anon { i64 -1 }, double -1.000000e+00, double 0x43E0000000000000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i32 0, i32 0), i32 320, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0), i32 324, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 1.270000e+02, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 328, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0), i32 1368, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i32 0, i32 0), i32 332, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.12 = private unnamed_addr constant [20 x i8] c"reserve_index_space\00", align 1
@.str.13 = private unnamed_addr constant [94 x i8] c"Reserve a given amount of space (in bytes) at the beginning of the file for the index (cues).\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"cluster_size_limit\00", align 1
@.str.15 = private unnamed_addr constant [58 x i8] c"Store at most the provided amount of bytes in a cluster. \00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"cluster_time_limit\00", align 1
@.str.17 = private unnamed_addr constant [64 x i8] c"Store at most the provided number of milliseconds in a cluster.\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"dash\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"Create a WebM file conforming to WebM DASH specification\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"dash_track_number\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"Track number for the DASH stream\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"live\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"Write files assuming it is a live stream.\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"allow_raw_vfw\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"allow RAW VFW mode\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"write_crc32\00", align 1
@.str.27 = private unnamed_addr constant [51 x i8] c"write a CRC32 element inside every Level 1 element\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"stereo_mode\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"alpha_mode\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"Lavf58.26.101\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"encoding_tool\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"Lavf\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"Write early duration from recording time = %lu\0A\00", align 1
@.str.35 = private unnamed_addr constant [42 x i8] c"Write early duration from metadata = %lu\0A\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"bytes <= 8\00", align 1
@.str.38 = private unnamed_addr constant [26 x i8] c"libavformat/matroskaenc.c\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"num < (1ULL << 56) - 1\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"bytes >= needed_bytes\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"DURATION\00", align 1
@.str.42 = private unnamed_addr constant [63 x i8] c"get_metadata_duration found duration in context metadata: %ld\0A\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"get_metadata_duration returned: %ld\0A\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"size >= 2\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"und\00", align 1
@ff_webm_codec_tags = external constant [0 x %struct.CodecTags], align 4
@.str.47 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/CAPTIONS\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/METADATA\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"D_WEBVTT/SUBTITLES\00", align 1
@.str.51 = private unnamed_addr constant [100 x i8] c"Only VP8 or VP9 or AV1 video and Vorbis or Opus audio and WebVTT subtitles are supported for WebM.\0A\00", align 1
@ff_mkv_codec_tags = external constant [0 x %struct.CodecTags], align 4
@.str.52 = private unnamed_addr constant [167 x i8] c"Raw RGB is not supported Natively in Matroska, you can use AVI or NUT or\0AIf you would like to store it anyway using VFW mode, enable allow_raw_vfw (-allow_raw_vfw 1)\0A\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"Initial padding is invalid\0A\00", align 1
@ff_codec_movvideo_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.54 = private unnamed_addr constant [12 x i8] c"V_QUICKTIME\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"V_MS/VFW/FOURCC\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Overflow in display width\0A\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"A_MS/ACM\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"Subtitle codec %d is not supported.\0A\00", align 1
@.str.59 = private unnamed_addr constant [62 x i8] c"Only audio, video, and subtitles are supported for Matroska.\0A\00", align 1
@.str.60 = private unnamed_addr constant [62 x i8] c"Error parsing AAC extradata, unable to determine samplerate.\0A\00", align 1
@ff_matroska_video_stereo_mode = external constant [15 x i8*], align 16
@.str.61 = private unnamed_addr constant [41 x i8] c"The specified stereo mode is not valid.\0A\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"Unknown projection type\0A\00", align 1
@.str.63 = private unnamed_addr constant [42 x i8] c"codec %s is not supported by this format\0A\00", align 1
@.str.64 = private unnamed_addr constant [37 x i8] c"No bmp codec tag found for codec %s\0A\00", align 1
@.str.65 = private unnamed_addr constant [37 x i8] c"No wav codec tag found for codec %s\0A\00", align 1
@.str.66 = private unnamed_addr constant [64 x i8] c"Invalid extradata found, ALAC expects a 36-byte QuickTime atom.\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"Extradata corrupt.\0A\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.69 = private unnamed_addr constant [34 x i8] c"WAVEFORMATEXTENSIBLE_CHANNEL_MASK\00", align 1
@mkv_write_chapters.scale = private unnamed_addr constant %struct.AVRational { i32 1, i32 1000000000 }, align 4
@.str.70 = private unnamed_addr constant [43 x i8] c"Invalid chapter start (%ld) or end (%ld).\0A\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"Attachment stream %d has no filename tag.\0A\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"mimetype\00", align 1
@ff_mkv_mime_tags = external constant [0 x %struct.CodecMime], align 4
@ff_mkv_image_mime_tags = external constant [0 x %struct.CodecMime], align 4
@.str.74 = private unnamed_addr constant [86 x i8] c"Attachment stream %d has no mimetype tag and it cannot be deduced from the codec id.\0A\00", align 1
@.str.75 = private unnamed_addr constant [30 x i8] c"Using %.8x for attachment %d\0A\00", align 1
@ff_mkv_metadata_conv = external constant [0 x %struct.AVMetadataConv], align 8
@.str.76 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.79 = private unnamed_addr constant [38 x i8] c"Flushing cluster at offset %lu bytes\0A\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"Flushing cluster\0A\00", align 1
@.str.81 = private unnamed_addr constant [44 x i8] c"Could not write cached audio packet ret:%d\0A\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"Invalid FLAC STREAMINFO metadata for output stream %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [51 x i8] c"Ignoring new extradata in a packet for stream %d.\0A\00", align 1
@.str.84 = private unnamed_addr constant [58 x i8] c"Starting new cluster at offset %lu bytes, pts %ludts %lu\0A\00", align 1
@.str.85 = private unnamed_addr constant [38 x i8] c"Starting new cluster, pts %ludts %lu\0A\00", align 1
@.str.86 = private unnamed_addr constant [43 x i8] c"Can't write packet with unknown timestamp\0A\00", align 1
@.str.87 = private unnamed_addr constant [39 x i8] c"Starting new cluster due to timestamp\0A\00", align 1
@.str.88 = private unnamed_addr constant [83 x i8] c"Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, keyframe %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [35 x i8] c"Error stripping a WavPack packet.\0A\00", align 1
@.str.90 = private unnamed_addr constant [80 x i8] c"Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, flags %d\0A\00", align 1
@.str.91 = private unnamed_addr constant [15 x i8] c"%.*s\0A%.*s\0A%.*s\00", align 1
@.str.92 = private unnamed_addr constant [57 x i8] c"Insufficient space reserved for cues: %d (needed: %ld).\0A\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"end duration = %lu\0A\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"stream %d end duration = %lu\0A\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"%02d:%02d:%012.9f\00", align 1
@.str.96 = private unnamed_addr constant [35 x i8] c"tracknum>=0 && tracknum<num_tracks\00", align 1
@.str.97 = private unnamed_addr constant [57 x i8] c"At most %d streams are supported for muxing in Matroska\0A\00", align 1
@.str.98 = private unnamed_addr constant [51 x i8] c"The Matroska muxer does not yet support muxing %s\0A\00", align 1
@.str.99 = private unnamed_addr constant [14 x i8] c"aac_adtstoasc\00", align 1
@.str.100 = private unnamed_addr constant [15 x i8] c"vp9_superframe\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"webm muxer\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"matroska audio muxer\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_header(%struct.AVFormatContext* %s) #0 !dbg !2435 {
entry:
  %s.addr.i282 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i282, metadata !2441, metadata !2445), !dbg !2446
  %s.addr.i280 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i280, metadata !2441, metadata !2445), !dbg !2450
  %s.addr.i278 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i278, metadata !2441, metadata !2445), !dbg !2452
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !2454
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %ebml_header = alloca %struct.ebml_master, align 8
  %tag = alloca %struct.AVDictionaryEntry*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %version = alloca i32, align 4
  %creation_time = alloca i64, align 8
  %coerce = alloca %struct.ebml_master, align 8
  %coerce41 = alloca %struct.ebml_master, align 8
  %segment_uid = alloca [4 x i32], align 16
  %lfg = alloca %struct.AVLFG, align 4
  %ident = alloca i8*, align 8
  %date_utc = alloca i64, align 8
  %date_utc_buf = alloca [8 x i8], align 1
  %metadata_duration = alloca i64, align 8
  %scaledDuration = alloca i64, align 8
  %scaledDuration117 = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2456, metadata !2445), !dbg !2457
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !2458, metadata !2445), !dbg !2563
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2564
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2565
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2565
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !2564
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2563
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !2566, metadata !2445), !dbg !2567
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2568
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !2569
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !2569
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !2567
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %ebml_header, metadata !2570, metadata !2445), !dbg !2571
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tag, metadata !2572, metadata !2445), !dbg !2579
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2580, metadata !2445), !dbg !2581
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2582, metadata !2445), !dbg !2583
  call void @llvm.dbg.declare(metadata i32* %version, metadata !2584, metadata !2445), !dbg !2585
  store i32 2, i32* %version, align 4, !dbg !2585
  call void @llvm.dbg.declare(metadata i64* %creation_time, metadata !2586, metadata !2445), !dbg !2587
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2588
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 2, !dbg !2590
  %6 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !2590
  %name = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %6, i32 0, i32 0, !dbg !2591
  %7 = load i8*, i8** %name, align 8, !dbg !2591
  %call = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0)) #10, !dbg !2592
  %tobool = icmp ne i32 %call, 0, !dbg !2592
  br i1 %tobool, label %if.else, label %if.then, !dbg !2593

if.then:                                          ; preds = %entry
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2594
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %8, i32 0, i32 1, !dbg !2595
  store i32 2, i32* %mode, align 8, !dbg !2596
  br label %if.end, !dbg !2594

if.else:                                          ; preds = %entry
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2597
  %mode2 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %9, i32 0, i32 1, !dbg !2598
  store i32 1, i32* %mode2, align 8, !dbg !2599
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2600
  %mode3 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %10, i32 0, i32 1, !dbg !2602
  %11 = load i32, i32* %mode3, align 8, !dbg !2602
  %cmp = icmp ne i32 %11, 2, !dbg !2603
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !2604

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2605
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 29, !dbg !2606
  %13 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !2606
  %call4 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2607
  %tobool5 = icmp ne %struct.AVDictionaryEntry* %call4, null, !dbg !2607
  br i1 %tobool5, label %if.then10, label %lor.lhs.false6, !dbg !2608

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2609
  %metadata7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 29, !dbg !2610
  %15 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata7, align 8, !dbg !2610
  %call8 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2611
  %tobool9 = icmp ne %struct.AVDictionaryEntry* %call8, null, !dbg !2611
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !2612

if.then10:                                        ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end
  store i32 4, i32* %version, align 4, !dbg !2614
  br label %if.end11, !dbg !2615

if.end11:                                         ; preds = %if.then10, %lor.lhs.false6
  store i32 0, i32* %i, align 4, !dbg !2616
  br label %for.cond, !dbg !2618

for.cond:                                         ; preds = %for.inc, %if.end11
  %16 = load i32, i32* %i, align 4, !dbg !2619
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2622
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 6, !dbg !2623
  %18 = load i32, i32* %nb_streams, align 4, !dbg !2623
  %cmp12 = icmp ult i32 %16, %18, !dbg !2624
  br i1 %cmp12, label %for.body, label %for.end, !dbg !2625

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !2626
  %idxprom = sext i32 %19 to i64, !dbg !2629
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2629
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 7, !dbg !2630
  %21 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !2630
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %21, i64 %idxprom, !dbg !2629
  %22 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !2629
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 19, !dbg !2631
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !2631
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 1, !dbg !2632
  %24 = load i32, i32* %codec_id, align 4, !dbg !2632
  %cmp13 = icmp eq i32 %24, 86076, !dbg !2633
  br i1 %cmp13, label %if.then28, label %lor.lhs.false14, !dbg !2634

lor.lhs.false14:                                  ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !2635
  %idxprom15 = sext i32 %25 to i64, !dbg !2636
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2636
  %streams16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 7, !dbg !2637
  %27 = load %struct.AVStream**, %struct.AVStream*** %streams16, align 8, !dbg !2637
  %arrayidx17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %27, i64 %idxprom15, !dbg !2636
  %28 = load %struct.AVStream*, %struct.AVStream** %arrayidx17, align 8, !dbg !2636
  %metadata18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 11, !dbg !2638
  %29 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata18, align 8, !dbg !2638
  %call19 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2639
  %tobool20 = icmp ne %struct.AVDictionaryEntry* %call19, null, !dbg !2639
  br i1 %tobool20, label %if.then28, label %lor.lhs.false21, !dbg !2640

lor.lhs.false21:                                  ; preds = %lor.lhs.false14
  %30 = load i32, i32* %i, align 4, !dbg !2641
  %idxprom22 = sext i32 %30 to i64, !dbg !2642
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2642
  %streams23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 7, !dbg !2643
  %32 = load %struct.AVStream**, %struct.AVStream*** %streams23, align 8, !dbg !2643
  %arrayidx24 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %32, i64 %idxprom22, !dbg !2642
  %33 = load %struct.AVStream*, %struct.AVStream** %arrayidx24, align 8, !dbg !2642
  %metadata25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %33, i32 0, i32 11, !dbg !2644
  %34 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata25, align 8, !dbg !2644
  %call26 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2645
  %tobool27 = icmp ne %struct.AVDictionaryEntry* %call26, null, !dbg !2645
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !2646

if.then28:                                        ; preds = %lor.lhs.false21, %lor.lhs.false14, %for.body
  store i32 4, i32* %version, align 4, !dbg !2648
  br label %if.end29, !dbg !2649

if.end29:                                         ; preds = %if.then28, %lor.lhs.false21
  br label %for.inc, !dbg !2650

for.inc:                                          ; preds = %if.end29
  %35 = load i32, i32* %i, align 4, !dbg !2651
  %inc = add nsw i32 %35, 1, !dbg !2651
  store i32 %inc, i32* %i, align 4, !dbg !2651
  br label %for.cond, !dbg !2653, !llvm.loop !2654

for.end:                                          ; preds = %for.cond
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2656
  %nb_streams30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i32 0, i32 6, !dbg !2657
  %37 = load i32, i32* %nb_streams30, align 4, !dbg !2657
  %conv = zext i32 %37 to i64, !dbg !2656
  %call31 = call i8* @av_mallocz_array(i64 %conv, i64 40), !dbg !2658
  %38 = bitcast i8* %call31 to %struct.mkv_track*, !dbg !2658
  %39 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2659
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %39, i32 0, i32 18, !dbg !2660
  store %struct.mkv_track* %38, %struct.mkv_track** %tracks, align 8, !dbg !2661
  %40 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2662
  %tracks32 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %40, i32 0, i32 18, !dbg !2664
  %41 = load %struct.mkv_track*, %struct.mkv_track** %tracks32, align 8, !dbg !2664
  %tobool33 = icmp ne %struct.mkv_track* %41, null, !dbg !2662
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2665

if.then34:                                        ; preds = %for.end
  store i32 -12, i32* %ret, align 4, !dbg !2666
  br label %fail, !dbg !2668

if.end35:                                         ; preds = %for.end
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2669
  %call36 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %42, i32 440786851, i64 0), !dbg !2670
  %43 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !2670
  %44 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 0, !dbg !2670
  %45 = extractvalue { i64, i32 } %call36, 0, !dbg !2670
  store i64 %45, i64* %44, align 8, !dbg !2670
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 1, !dbg !2670
  %47 = extractvalue { i64, i32 } %call36, 1, !dbg !2670
  store i32 %47, i32* %46, align 8, !dbg !2670
  %48 = bitcast %struct.ebml_master* %ebml_header to i8*, !dbg !2670
  %49 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !2670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false), !dbg !2671
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2672
  call void @put_ebml_uint(%struct.AVIOContext* %50, i32 17030, i64 1), !dbg !2673
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2674
  call void @put_ebml_uint(%struct.AVIOContext* %51, i32 17143, i64 1), !dbg !2675
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2676
  call void @put_ebml_uint(%struct.AVIOContext* %52, i32 17138, i64 4), !dbg !2677
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2678
  call void @put_ebml_uint(%struct.AVIOContext* %53, i32 17139, i64 8), !dbg !2679
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2680
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2681
  %oformat37 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %55, i32 0, i32 2, !dbg !2682
  %56 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat37, align 8, !dbg !2682
  %name38 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %56, i32 0, i32 0, !dbg !2683
  %57 = load i8*, i8** %name38, align 8, !dbg !2683
  call void @put_ebml_string(%struct.AVIOContext* %54, i32 17026, i8* %57), !dbg !2684
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2685
  %59 = load i32, i32* %version, align 4, !dbg !2686
  %conv39 = sext i32 %59 to i64, !dbg !2686
  call void @put_ebml_uint(%struct.AVIOContext* %58, i32 17031, i64 %conv39), !dbg !2687
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2688
  call void @put_ebml_uint(%struct.AVIOContext* %60, i32 17029, i64 2), !dbg !2689
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2690
  %62 = bitcast %struct.ebml_master* %ebml_header to { i64, i32 }*, !dbg !2691
  %63 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 0, !dbg !2691
  %64 = load i64, i64* %63, align 8, !dbg !2691
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 1, !dbg !2691
  %66 = load i32, i32* %65, align 8, !dbg !2691
  call void @end_ebml_master(%struct.AVIOContext* %61, i64 %64, i32 %66), !dbg !2691
  %67 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2692
  %segment = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %67, i32 0, i32 9, !dbg !2693
  %68 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2694
  %call40 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %68, i32 408125543, i64 0), !dbg !2695
  %69 = bitcast %struct.ebml_master* %coerce41 to { i64, i32 }*, !dbg !2695
  %70 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 0, !dbg !2695
  %71 = extractvalue { i64, i32 } %call40, 0, !dbg !2695
  store i64 %71, i64* %70, align 8, !dbg !2695
  %72 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 1, !dbg !2695
  %73 = extractvalue { i64, i32 } %call40, 1, !dbg !2695
  store i32 %73, i32* %72, align 8, !dbg !2695
  %74 = bitcast %struct.ebml_master* %segment to i8*, !dbg !2695
  %75 = bitcast %struct.ebml_master* %coerce41 to i8*, !dbg !2695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 16, i32 8, i1 false), !dbg !2696
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2697
  store %struct.AVIOContext* %76, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2698
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2699
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %77, i64 0, i32 1) #11, !dbg !2700
  %78 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2701
  %segment_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %78, i32 0, i32 10, !dbg !2702
  store i64 %call.i, i64* %segment_offset, align 8, !dbg !2703
  %79 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2704
  %80 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2705
  %segment_offset43 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %80, i32 0, i32 10, !dbg !2706
  %81 = load i64, i64* %segment_offset43, align 8, !dbg !2706
  %call44 = call %struct.mkv_seekhead* @mkv_start_seekhead(%struct.AVIOContext* %79, i64 %81, i32 10), !dbg !2707
  %82 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2708
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %82, i32 0, i32 16, !dbg !2709
  store %struct.mkv_seekhead* %call44, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !2710
  %83 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2711
  %main_seekhead45 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %83, i32 0, i32 16, !dbg !2713
  %84 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead45, align 8, !dbg !2713
  %tobool46 = icmp ne %struct.mkv_seekhead* %84, null, !dbg !2711
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !2714

if.then47:                                        ; preds = %if.end35
  store i32 -12, i32* %ret, align 4, !dbg !2715
  br label %fail, !dbg !2717

if.end48:                                         ; preds = %if.end35
  %85 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2718
  %main_seekhead49 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %85, i32 0, i32 16, !dbg !2719
  %86 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead49, align 8, !dbg !2719
  %87 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2720
  store %struct.AVIOContext* %87, %struct.AVIOContext** %s.addr.i278, align 8, !dbg !2721
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i278, align 8, !dbg !2722
  %call.i279 = call i64 @avio_seek(%struct.AVIOContext* %88, i64 0, i32 1) #11, !dbg !2723
  %call51 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %86, i32 357149030, i64 %call.i279), !dbg !2724
  store i32 %call51, i32* %ret, align 4, !dbg !2725
  %89 = load i32, i32* %ret, align 4, !dbg !2726
  %cmp52 = icmp slt i32 %89, 0, !dbg !2728
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !2729

if.then54:                                        ; preds = %if.end48
  br label %fail, !dbg !2730

if.end55:                                         ; preds = %if.end48
  %90 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2732
  %91 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2733
  %info_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %91, i32 0, i32 5, !dbg !2734
  %92 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2735
  %93 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2736
  %info = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %93, i32 0, i32 6, !dbg !2737
  %call56 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %90, %struct.AVIOContext** %info_bc, %struct.MatroskaMuxContext* %92, %struct.ebml_master* %info, i32 357149030, i64 0), !dbg !2738
  store i32 %call56, i32* %ret, align 4, !dbg !2739
  %94 = load i32, i32* %ret, align 4, !dbg !2740
  %cmp57 = icmp slt i32 %94, 0, !dbg !2742
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !2743

if.then59:                                        ; preds = %if.end55
  %95 = load i32, i32* %ret, align 4, !dbg !2744
  store i32 %95, i32* %retval, align 4, !dbg !2745
  br label %return, !dbg !2745

if.end60:                                         ; preds = %if.end55
  %96 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2746
  %info_bc61 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %96, i32 0, i32 5, !dbg !2747
  %97 = load %struct.AVIOContext*, %struct.AVIOContext** %info_bc61, align 8, !dbg !2747
  store %struct.AVIOContext* %97, %struct.AVIOContext** %pb, align 8, !dbg !2748
  %98 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2749
  call void @put_ebml_uint(%struct.AVIOContext* %98, i32 2807729, i64 1000000), !dbg !2750
  %99 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2751
  %metadata62 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %99, i32 0, i32 29, !dbg !2753
  %100 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata62, align 8, !dbg !2753
  %call63 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2754
  store %struct.AVDictionaryEntry* %call63, %struct.AVDictionaryEntry** %tag, align 8, !dbg !2755
  %tobool64 = icmp ne %struct.AVDictionaryEntry* %call63, null, !dbg !2755
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2756

if.then65:                                        ; preds = %if.end60
  %101 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2757
  %102 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !2758
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %102, i32 0, i32 1, !dbg !2759
  %103 = load i8*, i8** %value, align 8, !dbg !2759
  call void @put_ebml_string(%struct.AVIOContext* %101, i32 31657, i8* %103), !dbg !2760
  br label %if.end66, !dbg !2760

if.end66:                                         ; preds = %if.then65, %if.end60
  %104 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2761
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %104, i32 0, i32 15, !dbg !2763
  %105 = load i32, i32* %flags, align 8, !dbg !2763
  %and = and i32 %105, 1024, !dbg !2764
  %tobool67 = icmp ne i32 %and, 0, !dbg !2764
  br i1 %tobool67, label %if.else92, label %if.then68, !dbg !2765

if.then68:                                        ; preds = %if.end66
  %106 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2766
  call void @put_ebml_string(%struct.AVIOContext* %106, i32 19840, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0)), !dbg !2768
  %107 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2769
  %metadata69 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %107, i32 0, i32 29, !dbg !2771
  %108 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata69, align 8, !dbg !2771
  %call70 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %108, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !2772
  store %struct.AVDictionaryEntry* %call70, %struct.AVDictionaryEntry** %tag, align 8, !dbg !2773
  %tobool71 = icmp ne %struct.AVDictionaryEntry* %call70, null, !dbg !2773
  br i1 %tobool71, label %if.then72, label %if.else74, !dbg !2774

if.then72:                                        ; preds = %if.then68
  %109 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2775
  %110 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !2776
  %value73 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %110, i32 0, i32 1, !dbg !2777
  %111 = load i8*, i8** %value73, align 8, !dbg !2777
  call void @put_ebml_string(%struct.AVIOContext* %109, i32 22337, i8* %111), !dbg !2778
  br label %if.end75, !dbg !2778

if.else74:                                        ; preds = %if.then68
  %112 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2779
  call void @put_ebml_string(%struct.AVIOContext* %112, i32 22337, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0)), !dbg !2780
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then72
  %113 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2781
  %mode76 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %113, i32 0, i32 1, !dbg !2783
  %114 = load i32, i32* %mode76, align 8, !dbg !2783
  %cmp77 = icmp ne i32 %114, 2, !dbg !2784
  br i1 %cmp77, label %if.then79, label %if.end91, !dbg !2785

if.then79:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata [4 x i32]* %segment_uid, metadata !2786, metadata !2445), !dbg !2789
  call void @llvm.dbg.declare(metadata %struct.AVLFG* %lfg, metadata !2790, metadata !2445), !dbg !2800
  %call80 = call i32 @av_get_random_seed(), !dbg !2801
  call void @av_lfg_init(%struct.AVLFG* %lfg, i32 %call80), !dbg !2802
  store i32 0, i32* %i, align 4, !dbg !2804
  br label %for.cond81, !dbg !2806

for.cond81:                                       ; preds = %for.inc88, %if.then79
  %115 = load i32, i32* %i, align 4, !dbg !2807
  %cmp82 = icmp slt i32 %115, 4, !dbg !2810
  br i1 %cmp82, label %for.body84, label %for.end90, !dbg !2811

for.body84:                                       ; preds = %for.cond81
  %call85 = call i32 @av_lfg_get(%struct.AVLFG* %lfg), !dbg !2812
  %116 = load i32, i32* %i, align 4, !dbg !2813
  %idxprom86 = sext i32 %116 to i64, !dbg !2814
  %arrayidx87 = getelementptr inbounds [4 x i32], [4 x i32]* %segment_uid, i64 0, i64 %idxprom86, !dbg !2814
  store i32 %call85, i32* %arrayidx87, align 4, !dbg !2815
  br label %for.inc88, !dbg !2814

for.inc88:                                        ; preds = %for.body84
  %117 = load i32, i32* %i, align 4, !dbg !2816
  %inc89 = add nsw i32 %117, 1, !dbg !2816
  store i32 %inc89, i32* %i, align 4, !dbg !2816
  br label %for.cond81, !dbg !2818, !llvm.loop !2819

for.end90:                                        ; preds = %for.cond81
  %118 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2821
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %segment_uid, i32 0, i32 0, !dbg !2822
  %119 = bitcast i32* %arraydecay to i8*, !dbg !2822
  call void @put_ebml_binary(%struct.AVIOContext* %118, i32 29604, i8* %119, i32 16), !dbg !2823
  br label %if.end91, !dbg !2824

if.end91:                                         ; preds = %for.end90, %if.end75
  br label %if.end93, !dbg !2825

if.else92:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i8** %ident, metadata !2826, metadata !2445), !dbg !2828
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8** %ident, align 8, !dbg !2828
  %120 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2829
  %121 = load i8*, i8** %ident, align 8, !dbg !2830
  call void @put_ebml_string(%struct.AVIOContext* %120, i32 19840, i8* %121), !dbg !2831
  %122 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2832
  %123 = load i8*, i8** %ident, align 8, !dbg !2833
  call void @put_ebml_string(%struct.AVIOContext* %122, i32 22337, i8* %123), !dbg !2834
  br label %if.end93

if.end93:                                         ; preds = %if.else92, %if.end91
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2835
  %call94 = call i32 @ff_parse_creation_time_metadata(%struct.AVFormatContext* %124, i64* %creation_time, i32 0), !dbg !2837
  %cmp95 = icmp sgt i32 %call94, 0, !dbg !2838
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !2839

if.then97:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata i64* %date_utc, metadata !2840, metadata !2445), !dbg !2842
  %125 = load i64, i64* %creation_time, align 8, !dbg !2843
  %sub = sub nsw i64 %125, 978307200000000, !dbg !2844
  %mul = mul nsw i64 %sub, 1000, !dbg !2845
  store i64 %mul, i64* %date_utc, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata [8 x i8]* %date_utc_buf, metadata !2846, metadata !2445), !dbg !2848
  %126 = load i64, i64* %date_utc, align 8, !dbg !2849
  %call98 = call i64 @av_bswap64(i64 %126) #2, !dbg !2850
  %arraydecay99 = getelementptr inbounds [8 x i8], [8 x i8]* %date_utc_buf, i32 0, i32 0, !dbg !2851
  %127 = bitcast i8* %arraydecay99 to %union.unaligned_64*, !dbg !2851
  %l = bitcast %union.unaligned_64* %127 to i64*, !dbg !2851
  store i64 %call98, i64* %l, align 1, !dbg !2852
  %128 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2853
  %arraydecay100 = getelementptr inbounds [8 x i8], [8 x i8]* %date_utc_buf, i32 0, i32 0, !dbg !2854
  call void @put_ebml_binary(%struct.AVIOContext* %128, i32 17505, i8* %arraydecay100, i32 8), !dbg !2855
  br label %if.end101, !dbg !2856

if.end101:                                        ; preds = %if.then97, %if.end93
  %129 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2857
  %duration = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %129, i32 0, i32 15, !dbg !2858
  store i64 0, i64* %duration, align 8, !dbg !2859
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2860
  store %struct.AVIOContext* %130, %struct.AVIOContext** %s.addr.i280, align 8, !dbg !2861
  %131 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i280, align 8, !dbg !2862
  %call.i281 = call i64 @avio_seek(%struct.AVIOContext* %131, i64 0, i32 1) #11, !dbg !2863
  %132 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2864
  %duration_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %132, i32 0, i32 14, !dbg !2865
  store i64 %call.i281, i64* %duration_offset, align 8, !dbg !2866
  %133 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2867
  %is_live = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %133, i32 0, i32 29, !dbg !2869
  %134 = load i32, i32* %is_live, align 8, !dbg !2869
  %tobool103 = icmp ne i32 %134, 0, !dbg !2867
  br i1 %tobool103, label %if.end123, label %if.then104, !dbg !2870

if.then104:                                       ; preds = %if.end101
  call void @llvm.dbg.declare(metadata i64* %metadata_duration, metadata !2871, metadata !2445), !dbg !2873
  %135 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2874
  %call105 = call i64 @get_metadata_duration(%struct.AVFormatContext* %135), !dbg !2875
  store i64 %call105, i64* %metadata_duration, align 8, !dbg !2873
  %136 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2876
  %duration106 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %136, i32 0, i32 11, !dbg !2878
  %137 = load i64, i64* %duration106, align 8, !dbg !2878
  %cmp107 = icmp sgt i64 %137, 0, !dbg !2879
  br i1 %cmp107, label %if.then109, label %if.else113, !dbg !2880

if.then109:                                       ; preds = %if.then104
  call void @llvm.dbg.declare(metadata i64* %scaledDuration, metadata !2881, metadata !2445), !dbg !2883
  %138 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2884
  %duration110 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %138, i32 0, i32 11, !dbg !2885
  %139 = load i64, i64* %duration110, align 8, !dbg !2885
  %call111 = call i64 @av_rescale(i64 %139, i64 1000, i64 1000000) #2, !dbg !2886
  store i64 %call111, i64* %scaledDuration, align 8, !dbg !2883
  %140 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2887
  %141 = load i64, i64* %scaledDuration, align 8, !dbg !2888
  %conv112 = sitofp i64 %141 to double, !dbg !2888
  call void @put_ebml_float(%struct.AVIOContext* %140, i32 17545, double %conv112), !dbg !2889
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2890
  %143 = bitcast %struct.AVFormatContext* %142 to i8*, !dbg !2890
  %144 = load i64, i64* %scaledDuration, align 8, !dbg !2891
  call void (i8*, i32, i8*, ...) @av_log(i8* %143, i32 48, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i64 %144), !dbg !2892
  br label %if.end122, !dbg !2893

if.else113:                                       ; preds = %if.then104
  %145 = load i64, i64* %metadata_duration, align 8, !dbg !2894
  %cmp114 = icmp sgt i64 %145, 0, !dbg !2897
  br i1 %cmp114, label %if.then116, label %if.else120, !dbg !2894

if.then116:                                       ; preds = %if.else113
  call void @llvm.dbg.declare(metadata i64* %scaledDuration117, metadata !2898, metadata !2445), !dbg !2900
  %146 = load i64, i64* %metadata_duration, align 8, !dbg !2901
  %call118 = call i64 @av_rescale(i64 %146, i64 1000, i64 1000000) #2, !dbg !2902
  store i64 %call118, i64* %scaledDuration117, align 8, !dbg !2900
  %147 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2903
  %148 = load i64, i64* %scaledDuration117, align 8, !dbg !2904
  %conv119 = sitofp i64 %148 to double, !dbg !2904
  call void @put_ebml_float(%struct.AVIOContext* %147, i32 17545, double %conv119), !dbg !2905
  %149 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2906
  %150 = bitcast %struct.AVFormatContext* %149 to i8*, !dbg !2906
  %151 = load i64, i64* %scaledDuration117, align 8, !dbg !2907
  call void (i8*, i32, i8*, ...) @av_log(i8* %150, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.35, i32 0, i32 0), i64 %151), !dbg !2908
  br label %if.end121, !dbg !2909

if.else120:                                       ; preds = %if.else113
  %152 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2910
  call void @put_ebml_void(%struct.AVIOContext* %152, i64 11), !dbg !2912
  br label %if.end121

if.end121:                                        ; preds = %if.else120, %if.then116
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then109
  br label %if.end123, !dbg !2913

if.end123:                                        ; preds = %if.end122, %if.end101
  %153 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2914
  %pb124 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %153, i32 0, i32 4, !dbg !2916
  %154 = load %struct.AVIOContext*, %struct.AVIOContext** %pb124, align 8, !dbg !2916
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %154, i32 0, i32 19, !dbg !2917
  %155 = load i32, i32* %seekable, align 8, !dbg !2917
  %and125 = and i32 %155, 1, !dbg !2918
  %tobool126 = icmp ne i32 %and125, 0, !dbg !2918
  br i1 %tobool126, label %land.lhs.true, label %if.else133, !dbg !2919

land.lhs.true:                                    ; preds = %if.end123
  %156 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2920
  %is_live127 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %156, i32 0, i32 29, !dbg !2922
  %157 = load i32, i32* %is_live127, align 8, !dbg !2922
  %tobool128 = icmp ne i32 %157, 0, !dbg !2920
  br i1 %tobool128, label %if.else133, label %if.then129, !dbg !2923

if.then129:                                       ; preds = %land.lhs.true
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2924
  %pb130 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %158, i32 0, i32 4, !dbg !2925
  %159 = load %struct.AVIOContext*, %struct.AVIOContext** %pb130, align 8, !dbg !2925
  %160 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2926
  %info_bc131 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %160, i32 0, i32 5, !dbg !2927
  %161 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2928
  %162 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2929
  %info132 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %162, i32 0, i32 6, !dbg !2930
  %163 = bitcast %struct.ebml_master* %info132 to { i64, i32 }*, !dbg !2931
  %164 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %163, i32 0, i32 0, !dbg !2931
  %165 = load i64, i64* %164, align 8, !dbg !2931
  %166 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %163, i32 0, i32 1, !dbg !2931
  %167 = load i32, i32* %166, align 8, !dbg !2931
  call void @end_ebml_master_crc32_preliminary(%struct.AVIOContext* %159, %struct.AVIOContext** %info_bc131, %struct.MatroskaMuxContext* %161, i64 %165, i32 %167), !dbg !2931
  br label %if.end137, !dbg !2931

if.else133:                                       ; preds = %land.lhs.true, %if.end123
  %168 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2932
  %pb134 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %168, i32 0, i32 4, !dbg !2933
  %169 = load %struct.AVIOContext*, %struct.AVIOContext** %pb134, align 8, !dbg !2933
  %170 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2934
  %info_bc135 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %170, i32 0, i32 5, !dbg !2935
  %171 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2936
  %172 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2937
  %info136 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %172, i32 0, i32 6, !dbg !2938
  %173 = bitcast %struct.ebml_master* %info136 to { i64, i32 }*, !dbg !2939
  %174 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %173, i32 0, i32 0, !dbg !2939
  %175 = load i64, i64* %174, align 8, !dbg !2939
  %176 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %173, i32 0, i32 1, !dbg !2939
  %177 = load i32, i32* %176, align 8, !dbg !2939
  call void @end_ebml_master_crc32(%struct.AVIOContext* %169, %struct.AVIOContext** %info_bc135, %struct.MatroskaMuxContext* %171, i64 %175, i32 %177), !dbg !2939
  br label %if.end137

if.end137:                                        ; preds = %if.else133, %if.then129
  %178 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2940
  %pb138 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %178, i32 0, i32 4, !dbg !2941
  %179 = load %struct.AVIOContext*, %struct.AVIOContext** %pb138, align 8, !dbg !2941
  store %struct.AVIOContext* %179, %struct.AVIOContext** %pb, align 8, !dbg !2942
  %180 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2943
  %nb_streams139 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %180, i32 0, i32 6, !dbg !2944
  %181 = load i32, i32* %nb_streams139, align 4, !dbg !2944
  %conv140 = zext i32 %181 to i64, !dbg !2943
  %mul141 = mul i64 %conv140, 8, !dbg !2945
  %call142 = call noalias i8* @av_mallocz(i64 %mul141), !dbg !2946
  %182 = bitcast i8* %call142 to i64*, !dbg !2946
  %183 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2947
  %stream_durations = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %183, i32 0, i32 34, !dbg !2948
  store i64* %182, i64** %stream_durations, align 8, !dbg !2949
  %184 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2950
  %nb_streams143 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %184, i32 0, i32 6, !dbg !2951
  %185 = load i32, i32* %nb_streams143, align 4, !dbg !2951
  %conv144 = zext i32 %185 to i64, !dbg !2950
  %mul145 = mul i64 %conv144, 8, !dbg !2952
  %call146 = call noalias i8* @av_mallocz(i64 %mul145), !dbg !2953
  %186 = bitcast i8* %call146 to i64*, !dbg !2953
  %187 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2954
  %stream_duration_offsets = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %187, i32 0, i32 35, !dbg !2955
  store i64* %186, i64** %stream_duration_offsets, align 8, !dbg !2956
  %188 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2957
  %stream_durations147 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %188, i32 0, i32 34, !dbg !2959
  %189 = load i64*, i64** %stream_durations147, align 8, !dbg !2959
  %tobool148 = icmp ne i64* %189, null, !dbg !2957
  br i1 %tobool148, label %lor.lhs.false149, label %if.then152, !dbg !2960

lor.lhs.false149:                                 ; preds = %if.end137
  %190 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2961
  %stream_duration_offsets150 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %190, i32 0, i32 35, !dbg !2963
  %191 = load i64*, i64** %stream_duration_offsets150, align 8, !dbg !2963
  %tobool151 = icmp ne i64* %191, null, !dbg !2961
  br i1 %tobool151, label %if.end153, label %if.then152, !dbg !2964

if.then152:                                       ; preds = %lor.lhs.false149, %if.end137
  store i32 -12, i32* %ret, align 4, !dbg !2965
  br label %fail, !dbg !2967

if.end153:                                        ; preds = %lor.lhs.false149
  %192 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2968
  %call154 = call i32 @mkv_write_tracks(%struct.AVFormatContext* %192), !dbg !2969
  store i32 %call154, i32* %ret, align 4, !dbg !2970
  %193 = load i32, i32* %ret, align 4, !dbg !2971
  %cmp155 = icmp slt i32 %193, 0, !dbg !2973
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !2974

if.then157:                                       ; preds = %if.end153
  br label %fail, !dbg !2975

if.end158:                                        ; preds = %if.end153
  store i32 0, i32* %i, align 4, !dbg !2976
  br label %for.cond159, !dbg !2978

for.cond159:                                      ; preds = %for.inc180, %if.end158
  %194 = load i32, i32* %i, align 4, !dbg !2979
  %195 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2982
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %195, i32 0, i32 27, !dbg !2983
  %196 = load i32, i32* %nb_chapters, align 4, !dbg !2983
  %cmp160 = icmp ult i32 %194, %196, !dbg !2984
  br i1 %cmp160, label %for.body162, label %for.end182, !dbg !2985

for.body162:                                      ; preds = %for.cond159
  %197 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2986
  %chapter_id_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %197, i32 0, i32 31, !dbg !2987
  %198 = load i32, i32* %chapter_id_offset, align 8, !dbg !2987
  %conv163 = zext i32 %198 to i64, !dbg !2988
  %199 = load i32, i32* %i, align 4, !dbg !2989
  %idxprom164 = sext i32 %199 to i64, !dbg !2990
  %200 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2990
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %200, i32 0, i32 28, !dbg !2991
  %201 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !2991
  %arrayidx165 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %201, i64 %idxprom164, !dbg !2990
  %202 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx165, align 8, !dbg !2990
  %id = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %202, i32 0, i32 0, !dbg !2992
  %203 = load i32, i32* %id, align 8, !dbg !2992
  %conv166 = sext i32 %203 to i64, !dbg !2990
  %sub167 = sub nsw i64 1, %conv166, !dbg !2993
  %cmp168 = icmp sgt i64 %conv163, %sub167, !dbg !2994
  br i1 %cmp168, label %cond.true, label %cond.false, !dbg !2988

cond.true:                                        ; preds = %for.body162
  %204 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !2995
  %chapter_id_offset170 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %204, i32 0, i32 31, !dbg !2996
  %205 = load i32, i32* %chapter_id_offset170, align 8, !dbg !2996
  %conv171 = zext i32 %205 to i64, !dbg !2997
  br label %cond.end, !dbg !2998

cond.false:                                       ; preds = %for.body162
  %206 = load i32, i32* %i, align 4, !dbg !2999
  %idxprom172 = sext i32 %206 to i64, !dbg !3001
  %207 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3001
  %chapters173 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %207, i32 0, i32 28, !dbg !3002
  %208 = load %struct.AVChapter**, %struct.AVChapter*** %chapters173, align 8, !dbg !3002
  %arrayidx174 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %208, i64 %idxprom172, !dbg !3001
  %209 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx174, align 8, !dbg !3001
  %id175 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %209, i32 0, i32 0, !dbg !3003
  %210 = load i32, i32* %id175, align 8, !dbg !3003
  %conv176 = sext i32 %210 to i64, !dbg !3001
  %sub177 = sub nsw i64 1, %conv176, !dbg !3004
  br label %cond.end, !dbg !3005

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv171, %cond.true ], [ %sub177, %cond.false ], !dbg !3006
  %conv178 = trunc i64 %cond to i32, !dbg !3008
  %211 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3009
  %chapter_id_offset179 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %211, i32 0, i32 31, !dbg !3010
  store i32 %conv178, i32* %chapter_id_offset179, align 8, !dbg !3011
  br label %for.inc180, !dbg !3009

for.inc180:                                       ; preds = %cond.end
  %212 = load i32, i32* %i, align 4, !dbg !3012
  %inc181 = add nsw i32 %212, 1, !dbg !3012
  store i32 %inc181, i32* %i, align 4, !dbg !3012
  br label %for.cond159, !dbg !3013, !llvm.loop !3014

for.end182:                                       ; preds = %for.cond159
  %213 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3016
  %call183 = call i32 @mkv_write_chapters(%struct.AVFormatContext* %213), !dbg !3017
  store i32 %call183, i32* %ret, align 4, !dbg !3018
  %214 = load i32, i32* %ret, align 4, !dbg !3019
  %cmp184 = icmp slt i32 %214, 0, !dbg !3021
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !3022

if.then186:                                       ; preds = %for.end182
  br label %fail, !dbg !3023

if.end187:                                        ; preds = %for.end182
  %215 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3024
  %mode188 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %215, i32 0, i32 1, !dbg !3026
  %216 = load i32, i32* %mode188, align 8, !dbg !3026
  %cmp189 = icmp ne i32 %216, 2, !dbg !3027
  br i1 %cmp189, label %if.then191, label %if.end197, !dbg !3028

if.then191:                                       ; preds = %if.end187
  %217 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3029
  %call192 = call i32 @mkv_write_attachments(%struct.AVFormatContext* %217), !dbg !3031
  store i32 %call192, i32* %ret, align 4, !dbg !3032
  %218 = load i32, i32* %ret, align 4, !dbg !3033
  %cmp193 = icmp slt i32 %218, 0, !dbg !3035
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !3036

if.then195:                                       ; preds = %if.then191
  br label %fail, !dbg !3037

if.end196:                                        ; preds = %if.then191
  br label %if.end197, !dbg !3038

if.end197:                                        ; preds = %if.end196, %if.end187
  %219 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3039
  %call198 = call i32 @mkv_write_tags(%struct.AVFormatContext* %219), !dbg !3040
  store i32 %call198, i32* %ret, align 4, !dbg !3041
  %220 = load i32, i32* %ret, align 4, !dbg !3042
  %cmp199 = icmp slt i32 %220, 0, !dbg !3044
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !3045

if.then201:                                       ; preds = %if.end197
  br label %fail, !dbg !3046

if.end202:                                        ; preds = %if.end197
  %221 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3047
  %pb203 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %221, i32 0, i32 4, !dbg !3049
  %222 = load %struct.AVIOContext*, %struct.AVIOContext** %pb203, align 8, !dbg !3049
  %seekable204 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %222, i32 0, i32 19, !dbg !3050
  %223 = load i32, i32* %seekable204, align 8, !dbg !3050
  %and205 = and i32 %223, 1, !dbg !3051
  %tobool206 = icmp ne i32 %and205, 0, !dbg !3051
  br i1 %tobool206, label %if.end212, label %land.lhs.true207, !dbg !3052

land.lhs.true207:                                 ; preds = %if.end202
  %224 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3053
  %is_live208 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %224, i32 0, i32 29, !dbg !3055
  %225 = load i32, i32* %is_live208, align 8, !dbg !3055
  %tobool209 = icmp ne i32 %225, 0, !dbg !3053
  br i1 %tobool209, label %if.end212, label %if.then210, !dbg !3056

if.then210:                                       ; preds = %land.lhs.true207
  %226 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3057
  %227 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3058
  %call211 = call i64 @mkv_write_seekhead(%struct.AVIOContext* %226, %struct.MatroskaMuxContext* %227), !dbg !3059
  br label %if.end212, !dbg !3059

if.end212:                                        ; preds = %if.then210, %land.lhs.true207, %if.end202
  %228 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3060
  %segment_offset213 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %228, i32 0, i32 10, !dbg !3061
  %229 = load i64, i64* %segment_offset213, align 8, !dbg !3061
  %call214 = call %struct.mkv_cues* @mkv_start_cues(i64 %229), !dbg !3062
  %230 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3063
  %cues = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %230, i32 0, i32 17, !dbg !3064
  store %struct.mkv_cues* %call214, %struct.mkv_cues** %cues, align 8, !dbg !3065
  %231 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3066
  %cues215 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %231, i32 0, i32 17, !dbg !3068
  %232 = load %struct.mkv_cues*, %struct.mkv_cues** %cues215, align 8, !dbg !3068
  %tobool216 = icmp ne %struct.mkv_cues* %232, null, !dbg !3066
  br i1 %tobool216, label %if.end218, label %if.then217, !dbg !3069

if.then217:                                       ; preds = %if.end212
  store i32 -12, i32* %ret, align 4, !dbg !3070
  br label %fail, !dbg !3072

if.end218:                                        ; preds = %if.end212
  %233 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3073
  %metadata_header_padding = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %233, i32 0, i32 61, !dbg !3075
  %234 = load i32, i32* %metadata_header_padding, align 8, !dbg !3075
  %cmp219 = icmp sgt i32 %234, 0, !dbg !3076
  br i1 %cmp219, label %if.then221, label %if.end231, !dbg !3077

if.then221:                                       ; preds = %if.end218
  %235 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3078
  %metadata_header_padding222 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %235, i32 0, i32 61, !dbg !3081
  %236 = load i32, i32* %metadata_header_padding222, align 8, !dbg !3081
  %cmp223 = icmp eq i32 %236, 1, !dbg !3082
  br i1 %cmp223, label %if.then225, label %if.end228, !dbg !3083

if.then225:                                       ; preds = %if.then221
  %237 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3084
  %metadata_header_padding226 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %237, i32 0, i32 61, !dbg !3085
  %238 = load i32, i32* %metadata_header_padding226, align 8, !dbg !3086
  %inc227 = add nsw i32 %238, 1, !dbg !3086
  store i32 %inc227, i32* %metadata_header_padding226, align 8, !dbg !3086
  br label %if.end228, !dbg !3084

if.end228:                                        ; preds = %if.then225, %if.then221
  %239 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3087
  %240 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3088
  %metadata_header_padding229 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %240, i32 0, i32 61, !dbg !3089
  %241 = load i32, i32* %metadata_header_padding229, align 8, !dbg !3089
  %conv230 = sext i32 %241 to i64, !dbg !3088
  call void @put_ebml_void(%struct.AVIOContext* %239, i64 %conv230), !dbg !3090
  br label %if.end231, !dbg !3091

if.end231:                                        ; preds = %if.end228, %if.end218
  %242 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3092
  %seekable232 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %242, i32 0, i32 19, !dbg !3093
  %243 = load i32, i32* %seekable232, align 8, !dbg !3093
  %and233 = and i32 %243, 1, !dbg !3094
  %tobool234 = icmp ne i32 %and233, 0, !dbg !3094
  br i1 %tobool234, label %land.lhs.true235, label %if.end248, !dbg !3095

land.lhs.true235:                                 ; preds = %if.end231
  %244 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3096
  %reserve_cues_space = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %244, i32 0, i32 23, !dbg !3098
  %245 = load i32, i32* %reserve_cues_space, align 8, !dbg !3098
  %tobool236 = icmp ne i32 %245, 0, !dbg !3096
  br i1 %tobool236, label %if.then237, label %if.end248, !dbg !3099

if.then237:                                       ; preds = %land.lhs.true235
  %246 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3100
  store %struct.AVIOContext* %246, %struct.AVIOContext** %s.addr.i282, align 8, !dbg !3101
  %247 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i282, align 8, !dbg !3102
  %call.i283 = call i64 @avio_seek(%struct.AVIOContext* %247, i64 0, i32 1) #11, !dbg !3103
  %248 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3104
  %cues_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %248, i32 0, i32 25, !dbg !3105
  store i64 %call.i283, i64* %cues_pos, align 8, !dbg !3106
  %249 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3107
  %reserve_cues_space239 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %249, i32 0, i32 23, !dbg !3109
  %250 = load i32, i32* %reserve_cues_space239, align 8, !dbg !3109
  %cmp240 = icmp eq i32 %250, 1, !dbg !3110
  br i1 %cmp240, label %if.then242, label %if.end245, !dbg !3111

if.then242:                                       ; preds = %if.then237
  %251 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3112
  %reserve_cues_space243 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %251, i32 0, i32 23, !dbg !3113
  %252 = load i32, i32* %reserve_cues_space243, align 8, !dbg !3114
  %inc244 = add nsw i32 %252, 1, !dbg !3114
  store i32 %inc244, i32* %reserve_cues_space243, align 8, !dbg !3114
  br label %if.end245, !dbg !3112

if.end245:                                        ; preds = %if.then242, %if.then237
  %253 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3115
  %254 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3116
  %reserve_cues_space246 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %254, i32 0, i32 23, !dbg !3117
  %255 = load i32, i32* %reserve_cues_space246, align 8, !dbg !3117
  %conv247 = sext i32 %255 to i64, !dbg !3116
  call void @put_ebml_void(%struct.AVIOContext* %253, i64 %conv247), !dbg !3118
  br label %if.end248, !dbg !3119

if.end248:                                        ; preds = %if.end245, %land.lhs.true235, %if.end231
  %256 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3120
  %cur_audio_pkt = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %256, i32 0, i32 20, !dbg !3121
  call void @av_init_packet(%struct.AVPacket* %cur_audio_pkt), !dbg !3122
  %257 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3123
  %cur_audio_pkt249 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %257, i32 0, i32 20, !dbg !3124
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %cur_audio_pkt249, i32 0, i32 4, !dbg !3125
  store i32 0, i32* %size, align 8, !dbg !3126
  %258 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3127
  %cluster_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %258, i32 0, i32 12, !dbg !3128
  store i64 -1, i64* %cluster_pos, align 8, !dbg !3129
  %259 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3130
  call void @avio_flush(%struct.AVIOContext* %259), !dbg !3131
  %260 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3132
  %seekable250 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %260, i32 0, i32 19, !dbg !3134
  %261 = load i32, i32* %seekable250, align 8, !dbg !3134
  %and251 = and i32 %261, 1, !dbg !3135
  %tobool252 = icmp ne i32 %and251, 0, !dbg !3135
  br i1 %tobool252, label %if.then253, label %if.else264, !dbg !3136

if.then253:                                       ; preds = %if.end248
  %262 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3137
  %cluster_time_limit = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %262, i32 0, i32 26, !dbg !3140
  %263 = load i64, i64* %cluster_time_limit, align 8, !dbg !3140
  %cmp254 = icmp slt i64 %263, 0, !dbg !3141
  br i1 %cmp254, label %if.then256, label %if.end258, !dbg !3142

if.then256:                                       ; preds = %if.then253
  %264 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3143
  %cluster_time_limit257 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %264, i32 0, i32 26, !dbg !3144
  store i64 5000, i64* %cluster_time_limit257, align 8, !dbg !3145
  br label %if.end258, !dbg !3143

if.end258:                                        ; preds = %if.then256, %if.then253
  %265 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3146
  %cluster_size_limit = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %265, i32 0, i32 24, !dbg !3148
  %266 = load i32, i32* %cluster_size_limit, align 4, !dbg !3148
  %cmp259 = icmp slt i32 %266, 0, !dbg !3149
  br i1 %cmp259, label %if.then261, label %if.end263, !dbg !3150

if.then261:                                       ; preds = %if.end258
  %267 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3151
  %cluster_size_limit262 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %267, i32 0, i32 24, !dbg !3152
  store i32 5242880, i32* %cluster_size_limit262, align 4, !dbg !3153
  br label %if.end263, !dbg !3151

if.end263:                                        ; preds = %if.then261, %if.end258
  br label %if.end277, !dbg !3154

if.else264:                                       ; preds = %if.end248
  %268 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3155
  %cluster_time_limit265 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %268, i32 0, i32 26, !dbg !3158
  %269 = load i64, i64* %cluster_time_limit265, align 8, !dbg !3158
  %cmp266 = icmp slt i64 %269, 0, !dbg !3159
  br i1 %cmp266, label %if.then268, label %if.end270, !dbg !3160

if.then268:                                       ; preds = %if.else264
  %270 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3161
  %cluster_time_limit269 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %270, i32 0, i32 26, !dbg !3162
  store i64 1000, i64* %cluster_time_limit269, align 8, !dbg !3163
  br label %if.end270, !dbg !3161

if.end270:                                        ; preds = %if.then268, %if.else264
  %271 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3164
  %cluster_size_limit271 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %271, i32 0, i32 24, !dbg !3166
  %272 = load i32, i32* %cluster_size_limit271, align 4, !dbg !3166
  %cmp272 = icmp slt i32 %272, 0, !dbg !3167
  br i1 %cmp272, label %if.then274, label %if.end276, !dbg !3168

if.then274:                                       ; preds = %if.end270
  %273 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3169
  %cluster_size_limit275 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %273, i32 0, i32 24, !dbg !3170
  store i32 32768, i32* %cluster_size_limit275, align 4, !dbg !3171
  br label %if.end276, !dbg !3169

if.end276:                                        ; preds = %if.then274, %if.end270
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.end263
  store i32 0, i32* %retval, align 4, !dbg !3172
  br label %return, !dbg !3172

fail:                                             ; preds = %if.then217, %if.then201, %if.then195, %if.then186, %if.then157, %if.then152, %if.then54, %if.then47, %if.then34
  %274 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3173
  call void @mkv_free(%struct.MatroskaMuxContext* %274), !dbg !3174
  %275 = load i32, i32* %ret, align 4, !dbg !3175
  store i32 %275, i32* %retval, align 4, !dbg !3176
  br label %return, !dbg !3176

return:                                           ; preds = %fail, %if.end277, %if.then59
  %276 = load i32, i32* %retval, align 4, !dbg !3177
  ret i32 %276, !dbg !3177
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_flush_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3178 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !3181
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3188, metadata !2445), !dbg !3189
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3190, metadata !2445), !dbg !3191
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !3192, metadata !2445), !dbg !3193
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3194
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3195
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3195
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !3194
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3193
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3196
  %tobool = icmp ne %struct.AVPacket* %3, null, !dbg !3196
  br i1 %tobool, label %if.end9, label %if.then, !dbg !3197

if.then:                                          ; preds = %entry
  %4 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3198
  %cluster_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %4, i32 0, i32 12, !dbg !3199
  %5 = load i64, i64* %cluster_pos, align 8, !dbg !3199
  %cmp = icmp ne i64 %5, -1, !dbg !3200
  br i1 %cmp, label %if.then1, label %if.end8, !dbg !3201

if.then1:                                         ; preds = %if.then
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3202
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 4, !dbg !3203
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3203
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3204
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %8, i32 0, i32 2, !dbg !3205
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3206
  %10 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3207
  %cluster = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %10, i32 0, i32 11, !dbg !3208
  %11 = bitcast %struct.ebml_master* %cluster to { i64, i32 }*, !dbg !3209
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0, !dbg !3209
  %13 = load i64, i64* %12, align 8, !dbg !3209
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1, !dbg !3209
  %15 = load i32, i32* %14, align 8, !dbg !3209
  call void @end_ebml_master_crc32(%struct.AVIOContext* %7, %struct.AVIOContext** %dyn_bc, %struct.MatroskaMuxContext* %9, i64 %13, i32 %15), !dbg !3209
  %16 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3210
  %cluster_pos2 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %16, i32 0, i32 12, !dbg !3211
  store i64 -1, i64* %cluster_pos2, align 8, !dbg !3212
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3213
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 4, !dbg !3214
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !3214
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %18, i32 0, i32 19, !dbg !3215
  %19 = load i32, i32* %seekable, align 8, !dbg !3215
  %and = and i32 %19, 1, !dbg !3216
  %tobool4 = icmp ne i32 %and, 0, !dbg !3216
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3217

if.then5:                                         ; preds = %if.then1
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3218
  %21 = bitcast %struct.AVFormatContext* %20 to i8*, !dbg !3218
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3219
  %pb6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 4, !dbg !3220
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb6, align 8, !dbg !3220
  store %struct.AVIOContext* %23, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3221
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3222
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %24, i64 0, i32 1) #11, !dbg !3223
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i32 0, i32 0), i64 %call.i), !dbg !3224
  br label %if.end, !dbg !3224

if.else:                                          ; preds = %if.then1
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3225
  %26 = bitcast %struct.AVFormatContext* %25 to i8*, !dbg !3225
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i32 0, i32 0)), !dbg !3226
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3227
  %pb7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 4, !dbg !3228
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb7, align 8, !dbg !3228
  call void @avio_flush(%struct.AVIOContext* %28), !dbg !3229
  br label %if.end8, !dbg !3230

if.end8:                                          ; preds = %if.end, %if.then
  store i32 1, i32* %retval, align 4, !dbg !3231
  br label %return, !dbg !3231

if.end9:                                          ; preds = %entry
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3232
  %30 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3233
  %call10 = call i32 @mkv_write_packet(%struct.AVFormatContext* %29, %struct.AVPacket* %30), !dbg !3234
  store i32 %call10, i32* %retval, align 4, !dbg !3235
  br label %return, !dbg !3235

return:                                           ; preds = %if.end9, %if.end8
  %31 = load i32, i32* %retval, align 4, !dbg !3236
  ret i32 %31, !dbg !3236
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_trailer(%struct.AVFormatContext* %s) #0 !dbg !3237 {
entry:
  %s.addr.i127 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i127, metadata !2441, metadata !2445), !dbg !3238
  %s.addr.i125 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i125, metadata !2441, metadata !2445), !dbg !3244
  %s.addr.i123 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i123, metadata !2441, metadata !2445), !dbg !3246
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !3252
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %currentpos = alloca i64, align 8
  %cuespos = alloca i64, align 8
  %ret = alloca i32, align 4
  %cues_end = alloca i64, align 8
  %i = alloca i32, align 4
  %curr = alloca i64, align 8
  %st = alloca %struct.AVStream*, align 8
  %duration_sec = alloca double, align 8
  %duration_string = alloca [20 x i8], align 16
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3254, metadata !2445), !dbg !3255
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !3256, metadata !2445), !dbg !3257
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3258
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3259
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3259
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !3258
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3257
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !3260, metadata !2445), !dbg !3261
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3262
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !3263
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !3263
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !3261
  call void @llvm.dbg.declare(metadata i64* %currentpos, metadata !3264, metadata !2445), !dbg !3265
  call void @llvm.dbg.declare(metadata i64* %cuespos, metadata !3266, metadata !2445), !dbg !3267
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3268, metadata !2445), !dbg !3269
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3270
  %cur_audio_pkt = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 20, !dbg !3272
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %cur_audio_pkt, i32 0, i32 4, !dbg !3273
  %6 = load i32, i32* %size, align 8, !dbg !3273
  %cmp = icmp sgt i32 %6, 0, !dbg !3274
  br i1 %cmp, label %if.then, label %if.end6, !dbg !3275

if.then:                                          ; preds = %entry
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3276
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3278
  %cur_audio_pkt2 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %8, i32 0, i32 20, !dbg !3279
  %call = call i32 @mkv_write_packet_internal(%struct.AVFormatContext* %7, %struct.AVPacket* %cur_audio_pkt2, i32 0), !dbg !3280
  store i32 %call, i32* %ret, align 4, !dbg !3281
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3282
  %cur_audio_pkt3 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %9, i32 0, i32 20, !dbg !3283
  call void @av_packet_unref(%struct.AVPacket* %cur_audio_pkt3), !dbg !3284
  %10 = load i32, i32* %ret, align 4, !dbg !3285
  %cmp4 = icmp slt i32 %10, 0, !dbg !3287
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3288

if.then5:                                         ; preds = %if.then
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3289
  %12 = bitcast %struct.AVFormatContext* %11 to i8*, !dbg !3289
  %13 = load i32, i32* %ret, align 4, !dbg !3291
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.81, i32 0, i32 0), i32 %13), !dbg !3292
  %14 = load i32, i32* %ret, align 4, !dbg !3293
  store i32 %14, i32* %retval, align 4, !dbg !3294
  br label %return, !dbg !3294

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !3295

if.end6:                                          ; preds = %if.end, %entry
  %15 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3296
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %15, i32 0, i32 2, !dbg !3298
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc, align 8, !dbg !3298
  %tobool = icmp ne %struct.AVIOContext* %16, null, !dbg !3296
  br i1 %tobool, label %if.then7, label %if.end9, !dbg !3299

if.then7:                                         ; preds = %if.end6
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3300
  %18 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3302
  %dyn_bc8 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %18, i32 0, i32 2, !dbg !3303
  %19 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3304
  %20 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3305
  %cluster = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %20, i32 0, i32 11, !dbg !3306
  %21 = bitcast %struct.ebml_master* %cluster to { i64, i32 }*, !dbg !3307
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0, !dbg !3307
  %23 = load i64, i64* %22, align 8, !dbg !3307
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1, !dbg !3307
  %25 = load i32, i32* %24, align 8, !dbg !3307
  call void @end_ebml_master_crc32(%struct.AVIOContext* %17, %struct.AVIOContext** %dyn_bc8, %struct.MatroskaMuxContext* %19, i64 %23, i32 %25), !dbg !3307
  br label %if.end9, !dbg !3308

if.end9:                                          ; preds = %if.then7, %if.end6
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3309
  %call10 = call i32 @mkv_write_chapters(%struct.AVFormatContext* %26), !dbg !3310
  store i32 %call10, i32* %ret, align 4, !dbg !3311
  %27 = load i32, i32* %ret, align 4, !dbg !3312
  %cmp11 = icmp slt i32 %27, 0, !dbg !3314
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !3315

if.then12:                                        ; preds = %if.end9
  %28 = load i32, i32* %ret, align 4, !dbg !3316
  store i32 %28, i32* %retval, align 4, !dbg !3317
  br label %return, !dbg !3317

if.end13:                                         ; preds = %if.end9
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3318
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %29, i32 0, i32 19, !dbg !3319
  %30 = load i32, i32* %seekable, align 8, !dbg !3319
  %and = and i32 %30, 1, !dbg !3320
  %tobool14 = icmp ne i32 %and, 0, !dbg !3320
  br i1 %tobool14, label %land.lhs.true, label %if.end118, !dbg !3321

land.lhs.true:                                    ; preds = %if.end13
  %31 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3322
  %is_live = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %31, i32 0, i32 29, !dbg !3324
  %32 = load i32, i32* %is_live, align 8, !dbg !3324
  %tobool15 = icmp ne i32 %32, 0, !dbg !3322
  br i1 %tobool15, label %if.end118, label %if.then16, !dbg !3325

if.then16:                                        ; preds = %land.lhs.true
  %33 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3326
  %cues = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %33, i32 0, i32 17, !dbg !3327
  %34 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !3327
  %num_entries = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %34, i32 0, i32 2, !dbg !3328
  %35 = load i32, i32* %num_entries, align 8, !dbg !3328
  %tobool17 = icmp ne i32 %35, 0, !dbg !3326
  br i1 %tobool17, label %if.then18, label %if.end54, !dbg !3329

if.then18:                                        ; preds = %if.then16
  %36 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3330
  %reserve_cues_space = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %36, i32 0, i32 23, !dbg !3331
  %37 = load i32, i32* %reserve_cues_space, align 8, !dbg !3331
  %tobool19 = icmp ne i32 %37, 0, !dbg !3330
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !3332

if.then20:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata i64* %cues_end, metadata !3333, metadata !2445), !dbg !3334
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3335
  store %struct.AVIOContext* %38, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3336
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3337
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %39, i64 0, i32 1) #11, !dbg !3338
  store i64 %call.i, i64* %currentpos, align 8, !dbg !3339
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3340
  %41 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3341
  %cues_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %41, i32 0, i32 25, !dbg !3342
  %42 = load i64, i64* %cues_pos, align 8, !dbg !3342
  %call22 = call i64 @avio_seek(%struct.AVIOContext* %40, i64 %42, i32 0), !dbg !3343
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3344
  %44 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3345
  %cues23 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %44, i32 0, i32 17, !dbg !3346
  %45 = load %struct.mkv_cues*, %struct.mkv_cues** %cues23, align 8, !dbg !3346
  %46 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3347
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %46, i32 0, i32 18, !dbg !3348
  %47 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !3348
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3349
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %48, i32 0, i32 6, !dbg !3350
  %49 = load i32, i32* %nb_streams, align 4, !dbg !3350
  %call24 = call i64 @mkv_write_cues(%struct.AVFormatContext* %43, %struct.mkv_cues* %45, %struct.mkv_track* %47, i32 %49), !dbg !3351
  store i64 %call24, i64* %cuespos, align 8, !dbg !3352
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3353
  store %struct.AVIOContext* %50, %struct.AVIOContext** %s.addr.i123, align 8, !dbg !3354
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i123, align 8, !dbg !3355
  %call.i124 = call i64 @avio_seek(%struct.AVIOContext* %51, i64 0, i32 1) #11, !dbg !3356
  store i64 %call.i124, i64* %cues_end, align 8, !dbg !3357
  %52 = load i64, i64* %cues_end, align 8, !dbg !3358
  %53 = load i64, i64* %cuespos, align 8, !dbg !3360
  %54 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3361
  %reserve_cues_space26 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %54, i32 0, i32 23, !dbg !3362
  %55 = load i32, i32* %reserve_cues_space26, align 8, !dbg !3362
  %conv = sext i32 %55 to i64, !dbg !3361
  %add = add nsw i64 %53, %conv, !dbg !3363
  %cmp27 = icmp sgt i64 %52, %add, !dbg !3364
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !3365

if.then29:                                        ; preds = %if.then20
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3366
  %57 = bitcast %struct.AVFormatContext* %56 to i8*, !dbg !3366
  %58 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3368
  %reserve_cues_space30 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %58, i32 0, i32 23, !dbg !3369
  %59 = load i32, i32* %reserve_cues_space30, align 8, !dbg !3369
  %60 = load i64, i64* %cues_end, align 8, !dbg !3370
  %61 = load i64, i64* %cuespos, align 8, !dbg !3371
  %sub = sub nsw i64 %60, %61, !dbg !3372
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.92, i32 0, i32 0), i32 %59, i64 %sub), !dbg !3373
  store i32 -22, i32* %retval, align 4, !dbg !3374
  br label %return, !dbg !3374

if.end31:                                         ; preds = %if.then20
  %62 = load i64, i64* %cues_end, align 8, !dbg !3375
  %63 = load i64, i64* %cuespos, align 8, !dbg !3377
  %64 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3378
  %reserve_cues_space32 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %64, i32 0, i32 23, !dbg !3379
  %65 = load i32, i32* %reserve_cues_space32, align 8, !dbg !3379
  %conv33 = sext i32 %65 to i64, !dbg !3378
  %add34 = add nsw i64 %63, %conv33, !dbg !3380
  %cmp35 = icmp slt i64 %62, %add34, !dbg !3381
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !3382

if.then37:                                        ; preds = %if.end31
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3383
  %67 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3384
  %reserve_cues_space38 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %67, i32 0, i32 23, !dbg !3385
  %68 = load i32, i32* %reserve_cues_space38, align 8, !dbg !3385
  %conv39 = sext i32 %68 to i64, !dbg !3384
  %69 = load i64, i64* %cues_end, align 8, !dbg !3386
  %70 = load i64, i64* %cuespos, align 8, !dbg !3387
  %sub40 = sub nsw i64 %69, %70, !dbg !3388
  %sub41 = sub nsw i64 %conv39, %sub40, !dbg !3389
  call void @put_ebml_void(%struct.AVIOContext* %66, i64 %sub41), !dbg !3390
  br label %if.end42, !dbg !3390

if.end42:                                         ; preds = %if.then37, %if.end31
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3391
  %72 = load i64, i64* %currentpos, align 8, !dbg !3392
  %call43 = call i64 @avio_seek(%struct.AVIOContext* %71, i64 %72, i32 0), !dbg !3393
  br label %if.end48, !dbg !3394

if.else:                                          ; preds = %if.then18
  %73 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3395
  %74 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3397
  %cues44 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %74, i32 0, i32 17, !dbg !3398
  %75 = load %struct.mkv_cues*, %struct.mkv_cues** %cues44, align 8, !dbg !3398
  %76 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3399
  %tracks45 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %76, i32 0, i32 18, !dbg !3400
  %77 = load %struct.mkv_track*, %struct.mkv_track** %tracks45, align 8, !dbg !3400
  %78 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3401
  %nb_streams46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %78, i32 0, i32 6, !dbg !3402
  %79 = load i32, i32* %nb_streams46, align 4, !dbg !3402
  %call47 = call i64 @mkv_write_cues(%struct.AVFormatContext* %73, %struct.mkv_cues* %75, %struct.mkv_track* %77, i32 %79), !dbg !3403
  store i64 %call47, i64* %cuespos, align 8, !dbg !3404
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.end42
  %80 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3405
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %80, i32 0, i32 16, !dbg !3406
  %81 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !3406
  %82 = load i64, i64* %cuespos, align 8, !dbg !3407
  %call49 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %81, i32 475249515, i64 %82), !dbg !3408
  store i32 %call49, i32* %ret, align 4, !dbg !3409
  %83 = load i32, i32* %ret, align 4, !dbg !3410
  %cmp50 = icmp slt i32 %83, 0, !dbg !3412
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !3413

if.then52:                                        ; preds = %if.end48
  %84 = load i32, i32* %ret, align 4, !dbg !3414
  store i32 %84, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end53:                                         ; preds = %if.end48
  br label %if.end54, !dbg !3416

if.end54:                                         ; preds = %if.end53, %if.then16
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3417
  %86 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3418
  %call55 = call i64 @mkv_write_seekhead(%struct.AVIOContext* %85, %struct.MatroskaMuxContext* %86), !dbg !3419
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3420
  %88 = bitcast %struct.AVFormatContext* %87 to i8*, !dbg !3420
  %89 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3421
  %duration = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %89, i32 0, i32 15, !dbg !3422
  %90 = load i64, i64* %duration, align 8, !dbg !3422
  call void (i8*, i32, i8*, ...) @av_log(i8* %88, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i32 0, i32 0), i64 %90), !dbg !3423
  %91 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3424
  store %struct.AVIOContext* %91, %struct.AVIOContext** %s.addr.i125, align 8, !dbg !3425
  %92 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i125, align 8, !dbg !3426
  %call.i126 = call i64 @avio_seek(%struct.AVIOContext* %92, i64 0, i32 1) #11, !dbg !3427
  store i64 %call.i126, i64* %currentpos, align 8, !dbg !3428
  %93 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3429
  %info_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %93, i32 0, i32 5, !dbg !3430
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %info_bc, align 8, !dbg !3430
  %95 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3431
  %duration_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %95, i32 0, i32 14, !dbg !3432
  %96 = load i64, i64* %duration_offset, align 8, !dbg !3432
  %call57 = call i64 @avio_seek(%struct.AVIOContext* %94, i64 %96, i32 0), !dbg !3433
  %97 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3434
  %info_bc58 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %97, i32 0, i32 5, !dbg !3435
  %98 = load %struct.AVIOContext*, %struct.AVIOContext** %info_bc58, align 8, !dbg !3435
  %99 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3436
  %duration59 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %99, i32 0, i32 15, !dbg !3437
  %100 = load i64, i64* %duration59, align 8, !dbg !3437
  %conv60 = sitofp i64 %100 to double, !dbg !3436
  call void @put_ebml_float(%struct.AVIOContext* %98, i32 17545, double %conv60), !dbg !3438
  %101 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3439
  %102 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3440
  %info = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %102, i32 0, i32 6, !dbg !3441
  %pos = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %info, i32 0, i32 0, !dbg !3442
  %103 = load i64, i64* %pos, align 8, !dbg !3442
  %call61 = call i64 @avio_seek(%struct.AVIOContext* %101, i64 %103, i32 0), !dbg !3443
  %104 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3444
  %105 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3445
  %info_bc62 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %105, i32 0, i32 5, !dbg !3446
  %106 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3447
  %107 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3448
  %info63 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %107, i32 0, i32 6, !dbg !3449
  %108 = bitcast %struct.ebml_master* %info63 to { i64, i32 }*, !dbg !3450
  %109 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %108, i32 0, i32 0, !dbg !3450
  %110 = load i64, i64* %109, align 8, !dbg !3450
  %111 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %108, i32 0, i32 1, !dbg !3450
  %112 = load i32, i32* %111, align 8, !dbg !3450
  call void @end_ebml_master_crc32(%struct.AVIOContext* %104, %struct.AVIOContext** %info_bc62, %struct.MatroskaMuxContext* %106, i64 %110, i32 %112), !dbg !3450
  %113 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3451
  %114 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3452
  %tracks_master = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %114, i32 0, i32 8, !dbg !3453
  %pos64 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %tracks_master, i32 0, i32 0, !dbg !3454
  %115 = load i64, i64* %pos64, align 8, !dbg !3454
  %call65 = call i64 @avio_seek(%struct.AVIOContext* %113, i64 %115, i32 0), !dbg !3455
  %116 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3456
  %117 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3457
  %tracks_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %117, i32 0, i32 7, !dbg !3458
  %118 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3459
  %119 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3460
  %tracks_master66 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %119, i32 0, i32 8, !dbg !3461
  %120 = bitcast %struct.ebml_master* %tracks_master66 to { i64, i32 }*, !dbg !3462
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %120, i32 0, i32 0, !dbg !3462
  %122 = load i64, i64* %121, align 8, !dbg !3462
  %123 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %120, i32 0, i32 1, !dbg !3462
  %124 = load i32, i32* %123, align 8, !dbg !3462
  call void @end_ebml_master_crc32(%struct.AVIOContext* %116, %struct.AVIOContext** %tracks_bc, %struct.MatroskaMuxContext* %118, i64 %122, i32 %124), !dbg !3462
  %125 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3463
  %is_live67 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %125, i32 0, i32 29, !dbg !3464
  %126 = load i32, i32* %is_live67, align 8, !dbg !3464
  %tobool68 = icmp ne i32 %126, 0, !dbg !3463
  br i1 %tobool68, label %if.end104, label %land.lhs.true69, !dbg !3465

land.lhs.true69:                                  ; preds = %if.end54
  %127 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3466
  %stream_durations = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %127, i32 0, i32 34, !dbg !3468
  %128 = load i64*, i64** %stream_durations, align 8, !dbg !3468
  %tobool70 = icmp ne i64* %128, null, !dbg !3466
  br i1 %tobool70, label %if.then71, label %if.end104, !dbg !3469

if.then71:                                        ; preds = %land.lhs.true69
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3470, metadata !2445), !dbg !3471
  call void @llvm.dbg.declare(metadata i64* %curr, metadata !3472, metadata !2445), !dbg !3473
  %129 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3474
  %tags_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %129, i32 0, i32 3, !dbg !3475
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc, align 8, !dbg !3475
  store %struct.AVIOContext* %130, %struct.AVIOContext** %s.addr.i127, align 8, !dbg !3476
  %131 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i127, align 8, !dbg !3477
  %call.i128 = call i64 @avio_seek(%struct.AVIOContext* %131, i64 0, i32 1) #11, !dbg !3478
  store i64 %call.i128, i64* %curr, align 8, !dbg !3473
  store i32 0, i32* %i, align 4, !dbg !3479
  br label %for.cond, !dbg !3481

for.cond:                                         ; preds = %for.inc, %if.then71
  %132 = load i32, i32* %i, align 4, !dbg !3482
  %133 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3485
  %nb_streams73 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %133, i32 0, i32 6, !dbg !3486
  %134 = load i32, i32* %nb_streams73, align 4, !dbg !3486
  %cmp74 = icmp ult i32 %132, %134, !dbg !3487
  br i1 %cmp74, label %for.body, label %for.end, !dbg !3488

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3489, metadata !2445), !dbg !3491
  %135 = load i32, i32* %i, align 4, !dbg !3492
  %idxprom = sext i32 %135 to i64, !dbg !3493
  %136 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3493
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %136, i32 0, i32 7, !dbg !3494
  %137 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3494
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %137, i64 %idxprom, !dbg !3493
  %138 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3493
  store %struct.AVStream* %138, %struct.AVStream** %st, align 8, !dbg !3491
  %139 = load i32, i32* %i, align 4, !dbg !3495
  %idxprom76 = sext i32 %139 to i64, !dbg !3497
  %140 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3497
  %stream_duration_offsets = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %140, i32 0, i32 35, !dbg !3498
  %141 = load i64*, i64** %stream_duration_offsets, align 8, !dbg !3498
  %arrayidx77 = getelementptr inbounds i64, i64* %141, i64 %idxprom76, !dbg !3497
  %142 = load i64, i64* %arrayidx77, align 8, !dbg !3497
  %cmp78 = icmp sgt i64 %142, 0, !dbg !3499
  br i1 %cmp78, label %if.then80, label %if.end101, !dbg !3500

if.then80:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata double* %duration_sec, metadata !3501, metadata !2445), !dbg !3503
  %143 = load i32, i32* %i, align 4, !dbg !3504
  %idxprom81 = sext i32 %143 to i64, !dbg !3505
  %144 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3505
  %stream_durations82 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %144, i32 0, i32 34, !dbg !3506
  %145 = load i64*, i64** %stream_durations82, align 8, !dbg !3506
  %arrayidx83 = getelementptr inbounds i64, i64* %145, i64 %idxprom81, !dbg !3505
  %146 = load i64, i64* %arrayidx83, align 8, !dbg !3505
  %conv84 = sitofp i64 %146 to double, !dbg !3505
  %147 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3507
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %147, i32 0, i32 4, !dbg !3508
  %148 = bitcast %struct.AVRational* %time_base to i64*, !dbg !3509
  %149 = load i64, i64* %148, align 8, !dbg !3509
  %call85 = call double @av_q2d(i64 %149), !dbg !3509
  %mul = fmul double %conv84, %call85, !dbg !3510
  store double %mul, double* %duration_sec, align 8, !dbg !3503
  call void @llvm.dbg.declare(metadata [20 x i8]* %duration_string, metadata !3511, metadata !2445), !dbg !3515
  %150 = bitcast [20 x i8]* %duration_string to i8*, !dbg !3515
  call void @llvm.memset.p0i8.i64(i8* %150, i8 0, i64 20, i32 16, i1 false), !dbg !3515
  %151 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3516
  %152 = bitcast %struct.AVFormatContext* %151 to i8*, !dbg !3516
  %153 = load i32, i32* %i, align 4, !dbg !3517
  %154 = load i32, i32* %i, align 4, !dbg !3518
  %idxprom86 = sext i32 %154 to i64, !dbg !3519
  %155 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3519
  %stream_durations87 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %155, i32 0, i32 34, !dbg !3520
  %156 = load i64*, i64** %stream_durations87, align 8, !dbg !3520
  %arrayidx88 = getelementptr inbounds i64, i64* %156, i64 %idxprom86, !dbg !3519
  %157 = load i64, i64* %arrayidx88, align 8, !dbg !3519
  call void (i8*, i32, i8*, ...) @av_log(i8* %152, i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i32 0, i32 0), i32 %153, i64 %157), !dbg !3521
  %158 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3522
  %tags_bc89 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %158, i32 0, i32 3, !dbg !3523
  %159 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc89, align 8, !dbg !3523
  %160 = load i32, i32* %i, align 4, !dbg !3524
  %idxprom90 = sext i32 %160 to i64, !dbg !3525
  %161 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3525
  %stream_duration_offsets91 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %161, i32 0, i32 35, !dbg !3526
  %162 = load i64*, i64** %stream_duration_offsets91, align 8, !dbg !3526
  %arrayidx92 = getelementptr inbounds i64, i64* %162, i64 %idxprom90, !dbg !3525
  %163 = load i64, i64* %arrayidx92, align 8, !dbg !3525
  %call93 = call i64 @avio_seek(%struct.AVIOContext* %159, i64 %163, i32 0), !dbg !3527
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %duration_string, i32 0, i32 0, !dbg !3528
  %164 = load double, double* %duration_sec, align 8, !dbg !3529
  %conv94 = fptosi double %164 to i32, !dbg !3530
  %div = sdiv i32 %conv94, 3600, !dbg !3531
  %165 = load double, double* %duration_sec, align 8, !dbg !3532
  %conv95 = fptosi double %165 to i32, !dbg !3533
  %div96 = sdiv i32 %conv95, 60, !dbg !3534
  %rem = srem i32 %div96, 60, !dbg !3535
  %166 = load double, double* %duration_sec, align 8, !dbg !3536
  %call97 = call double @fmod(double %166, double 6.000000e+01) #11, !dbg !3537
  %call98 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i32 0, i32 0), i32 %div, i32 %rem, double %call97) #11, !dbg !3538
  %167 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3539
  %tags_bc99 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %167, i32 0, i32 3, !dbg !3540
  %168 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc99, align 8, !dbg !3540
  %arraydecay100 = getelementptr inbounds [20 x i8], [20 x i8]* %duration_string, i32 0, i32 0, !dbg !3541
  call void @put_ebml_binary(%struct.AVIOContext* %168, i32 17543, i8* %arraydecay100, i32 20), !dbg !3542
  br label %if.end101, !dbg !3543

if.end101:                                        ; preds = %if.then80, %for.body
  br label %for.inc, !dbg !3544

for.inc:                                          ; preds = %if.end101
  %169 = load i32, i32* %i, align 4, !dbg !3545
  %inc = add nsw i32 %169, 1, !dbg !3545
  store i32 %inc, i32* %i, align 4, !dbg !3545
  br label %for.cond, !dbg !3547, !llvm.loop !3548

for.end:                                          ; preds = %for.cond
  %170 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3550
  %tags_bc102 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %170, i32 0, i32 3, !dbg !3551
  %171 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc102, align 8, !dbg !3551
  %172 = load i64, i64* %curr, align 8, !dbg !3552
  %call103 = call i64 @avio_seek(%struct.AVIOContext* %171, i64 %172, i32 0), !dbg !3553
  br label %if.end104, !dbg !3554

if.end104:                                        ; preds = %for.end, %land.lhs.true69, %if.end54
  %173 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3555
  %tags = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %173, i32 0, i32 4, !dbg !3557
  %pos105 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %tags, i32 0, i32 0, !dbg !3558
  %174 = load i64, i64* %pos105, align 8, !dbg !3558
  %tobool106 = icmp ne i64 %174, 0, !dbg !3555
  br i1 %tobool106, label %land.lhs.true107, label %if.end116, !dbg !3559

land.lhs.true107:                                 ; preds = %if.end104
  %175 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3560
  %is_live108 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %175, i32 0, i32 29, !dbg !3562
  %176 = load i32, i32* %is_live108, align 8, !dbg !3562
  %tobool109 = icmp ne i32 %176, 0, !dbg !3560
  br i1 %tobool109, label %if.end116, label %if.then110, !dbg !3563

if.then110:                                       ; preds = %land.lhs.true107
  %177 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3564
  %178 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3566
  %tags111 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %178, i32 0, i32 4, !dbg !3567
  %pos112 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %tags111, i32 0, i32 0, !dbg !3568
  %179 = load i64, i64* %pos112, align 8, !dbg !3568
  %call113 = call i64 @avio_seek(%struct.AVIOContext* %177, i64 %179, i32 0), !dbg !3569
  %180 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3570
  %181 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3571
  %tags_bc114 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %181, i32 0, i32 3, !dbg !3572
  %182 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3573
  %183 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3574
  %tags115 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %183, i32 0, i32 4, !dbg !3575
  %184 = bitcast %struct.ebml_master* %tags115 to { i64, i32 }*, !dbg !3576
  %185 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %184, i32 0, i32 0, !dbg !3576
  %186 = load i64, i64* %185, align 8, !dbg !3576
  %187 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %184, i32 0, i32 1, !dbg !3576
  %188 = load i32, i32* %187, align 8, !dbg !3576
  call void @end_ebml_master_crc32(%struct.AVIOContext* %180, %struct.AVIOContext** %tags_bc114, %struct.MatroskaMuxContext* %182, i64 %186, i32 %188), !dbg !3576
  br label %if.end116, !dbg !3577

if.end116:                                        ; preds = %if.then110, %land.lhs.true107, %if.end104
  %189 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3578
  %190 = load i64, i64* %currentpos, align 8, !dbg !3579
  %call117 = call i64 @avio_seek(%struct.AVIOContext* %189, i64 %190, i32 0), !dbg !3580
  br label %if.end118, !dbg !3581

if.end118:                                        ; preds = %if.end116, %land.lhs.true, %if.end13
  %191 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3582
  %is_live119 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %191, i32 0, i32 29, !dbg !3584
  %192 = load i32, i32* %is_live119, align 8, !dbg !3584
  %tobool120 = icmp ne i32 %192, 0, !dbg !3582
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !3585

if.then121:                                       ; preds = %if.end118
  %193 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3586
  %194 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3588
  %segment = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %194, i32 0, i32 9, !dbg !3589
  %195 = bitcast %struct.ebml_master* %segment to { i64, i32 }*, !dbg !3590
  %196 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %195, i32 0, i32 0, !dbg !3590
  %197 = load i64, i64* %196, align 8, !dbg !3590
  %198 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %195, i32 0, i32 1, !dbg !3590
  %199 = load i32, i32* %198, align 8, !dbg !3590
  call void @end_ebml_master(%struct.AVIOContext* %193, i64 %197, i32 %199), !dbg !3590
  br label %if.end122, !dbg !3591

if.end122:                                        ; preds = %if.then121, %if.end118
  %200 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !3592
  call void @mkv_free(%struct.MatroskaMuxContext* %200), !dbg !3593
  store i32 0, i32* %retval, align 4, !dbg !3594
  br label %return, !dbg !3594

return:                                           ; preds = %if.end122, %if.then52, %if.then29, %if.then12, %if.then5
  %201 = load i32, i32* %retval, align 4, !dbg !3595
  ret i32 %201, !dbg !3595
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_query_codec(i32 %codec_id, i32 %std_compliance) #0 !dbg !3596 {
entry:
  %retval = alloca i32, align 4
  %codec_id.addr = alloca i32, align 4
  %std_compliance.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !3597, metadata !2445), !dbg !3598
  store i32 %std_compliance, i32* %std_compliance.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %std_compliance.addr, metadata !3599, metadata !2445), !dbg !3600
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3601, metadata !2445), !dbg !3602
  store i32 0, i32* %i, align 4, !dbg !3603
  br label %for.cond, !dbg !3605

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3606
  %idxprom = sext i32 %0 to i64, !dbg !3609
  %arrayidx = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom, !dbg !3609
  %id = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx, i32 0, i32 1, !dbg !3610
  %1 = load i32, i32* %id, align 4, !dbg !3610
  %cmp = icmp ne i32 %1, 0, !dbg !3611
  br i1 %cmp, label %for.body, label %for.end, !dbg !3612

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3613
  %idxprom1 = sext i32 %2 to i64, !dbg !3615
  %arrayidx2 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom1, !dbg !3615
  %id3 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx2, i32 0, i32 1, !dbg !3616
  %3 = load i32, i32* %id3, align 4, !dbg !3616
  %4 = load i32, i32* %codec_id.addr, align 4, !dbg !3617
  %cmp4 = icmp eq i32 %3, %4, !dbg !3618
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3619

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !3620
  br label %return, !dbg !3620

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3621

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !3623
  %inc = add nsw i32 %5, 1, !dbg !3623
  store i32 %inc, i32* %i, align 4, !dbg !3623
  br label %for.cond, !dbg !3625, !llvm.loop !3626

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %std_compliance.addr, align 4, !dbg !3628
  %cmp5 = icmp slt i32 %6, 0, !dbg !3630
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !3631

if.then6:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3632, metadata !2445), !dbg !3634
  %7 = load i32, i32* %codec_id.addr, align 4, !dbg !3635
  %call = call i32 @avcodec_get_type(i32 %7), !dbg !3636
  store i32 %call, i32* %type, align 4, !dbg !3634
  %8 = load i32, i32* %type, align 4, !dbg !3637
  %cmp7 = icmp eq i32 %8, 0, !dbg !3639
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !3640

lor.lhs.false:                                    ; preds = %if.then6
  %9 = load i32, i32* %type, align 4, !dbg !3641
  %cmp8 = icmp eq i32 %9, 1, !dbg !3643
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3644

if.then9:                                         ; preds = %lor.lhs.false, %if.then6
  store i32 1, i32* %retval, align 4, !dbg !3645
  br label %return, !dbg !3645

if.end10:                                         ; preds = %lor.lhs.false
  br label %if.end11, !dbg !3646

if.end11:                                         ; preds = %if.end10, %for.end
  store i32 0, i32* %retval, align 4, !dbg !3647
  br label %return, !dbg !3647

return:                                           ; preds = %if.end11, %if.then9, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3648
  ret i32 %10, !dbg !3648
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_init(%struct.AVFormatContext* %s) #0 !dbg !3649 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3650, metadata !2445), !dbg !3651
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3652, metadata !2445), !dbg !3653
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3654
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 6, !dbg !3656
  %1 = load i32, i32* %nb_streams, align 4, !dbg !3656
  %cmp = icmp ugt i32 %1, 126, !dbg !3657
  br i1 %cmp, label %if.then, label %if.end, !dbg !3658

if.then:                                          ; preds = %entry
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3659
  %3 = bitcast %struct.AVFormatContext* %2 to i8*, !dbg !3659
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.97, i32 0, i32 0), i32 126), !dbg !3661
  store i32 -22, i32* %retval, align 4, !dbg !3662
  br label %return, !dbg !3662

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3663
  br label %for.cond, !dbg !3665

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !3666
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3669
  %nb_streams1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 6, !dbg !3670
  %6 = load i32, i32* %nb_streams1, align 4, !dbg !3670
  %cmp2 = icmp ult i32 %4, %6, !dbg !3671
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3672

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !3673
  %idxprom = sext i32 %7 to i64, !dbg !3676
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3676
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 7, !dbg !3677
  %9 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3677
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %9, i64 %idxprom, !dbg !3676
  %10 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3676
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 19, !dbg !3678
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3678
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 1, !dbg !3679
  %12 = load i32, i32* %codec_id, align 4, !dbg !3679
  %cmp3 = icmp eq i32 %12, 86047, !dbg !3680
  br i1 %cmp3, label %if.then38, label %lor.lhs.false, !dbg !3681

lor.lhs.false:                                    ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !3682
  %idxprom4 = sext i32 %13 to i64, !dbg !3683
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3683
  %streams5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 7, !dbg !3684
  %15 = load %struct.AVStream**, %struct.AVStream*** %streams5, align 8, !dbg !3684
  %arrayidx6 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %idxprom4, !dbg !3683
  %16 = load %struct.AVStream*, %struct.AVStream** %arrayidx6, align 8, !dbg !3683
  %codecpar7 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i32 0, i32 19, !dbg !3685
  %17 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar7, align 8, !dbg !3685
  %codec_id8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %17, i32 0, i32 1, !dbg !3686
  %18 = load i32, i32* %codec_id8, align 4, !dbg !3686
  %cmp9 = icmp eq i32 %18, 86036, !dbg !3687
  br i1 %cmp9, label %if.then38, label %lor.lhs.false10, !dbg !3688

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %19 = load i32, i32* %i, align 4, !dbg !3689
  %idxprom11 = sext i32 %19 to i64, !dbg !3690
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3690
  %streams12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 7, !dbg !3691
  %21 = load %struct.AVStream**, %struct.AVStream*** %streams12, align 8, !dbg !3691
  %arrayidx13 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %21, i64 %idxprom11, !dbg !3690
  %22 = load %struct.AVStream*, %struct.AVStream** %arrayidx13, align 8, !dbg !3690
  %codecpar14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 19, !dbg !3692
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar14, align 8, !dbg !3692
  %codec_id15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 1, !dbg !3693
  %24 = load i32, i32* %codec_id15, align 4, !dbg !3693
  %cmp16 = icmp eq i32 %24, 77825, !dbg !3694
  br i1 %cmp16, label %if.then38, label %lor.lhs.false17, !dbg !3695

lor.lhs.false17:                                  ; preds = %lor.lhs.false10
  %25 = load i32, i32* %i, align 4, !dbg !3696
  %idxprom18 = sext i32 %25 to i64, !dbg !3697
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3697
  %streams19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 7, !dbg !3698
  %27 = load %struct.AVStream**, %struct.AVStream*** %streams19, align 8, !dbg !3698
  %arrayidx20 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %27, i64 %idxprom18, !dbg !3697
  %28 = load %struct.AVStream*, %struct.AVStream** %arrayidx20, align 8, !dbg !3697
  %codecpar21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 19, !dbg !3699
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar21, align 8, !dbg !3699
  %codec_id22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 1, !dbg !3700
  %30 = load i32, i32* %codec_id22, align 4, !dbg !3700
  %cmp23 = icmp eq i32 %30, 86057, !dbg !3701
  br i1 %cmp23, label %if.then38, label %lor.lhs.false24, !dbg !3702

lor.lhs.false24:                                  ; preds = %lor.lhs.false17
  %31 = load i32, i32* %i, align 4, !dbg !3703
  %idxprom25 = sext i32 %31 to i64, !dbg !3704
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3704
  %streams26 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 7, !dbg !3705
  %33 = load %struct.AVStream**, %struct.AVStream*** %streams26, align 8, !dbg !3705
  %arrayidx27 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %33, i64 %idxprom25, !dbg !3704
  %34 = load %struct.AVStream*, %struct.AVStream** %arrayidx27, align 8, !dbg !3704
  %codecpar28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %34, i32 0, i32 19, !dbg !3706
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar28, align 8, !dbg !3706
  %codec_id29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 1, !dbg !3707
  %36 = load i32, i32* %codec_id29, align 4, !dbg !3707
  %cmp30 = icmp eq i32 %36, 5, !dbg !3708
  br i1 %cmp30, label %if.then38, label %lor.lhs.false31, !dbg !3709

lor.lhs.false31:                                  ; preds = %lor.lhs.false24
  %37 = load i32, i32* %i, align 4, !dbg !3710
  %idxprom32 = sext i32 %37 to i64, !dbg !3711
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3711
  %streams33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 7, !dbg !3712
  %39 = load %struct.AVStream**, %struct.AVStream*** %streams33, align 8, !dbg !3712
  %arrayidx34 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %39, i64 %idxprom32, !dbg !3711
  %40 = load %struct.AVStream*, %struct.AVStream** %arrayidx34, align 8, !dbg !3711
  %codecpar35 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %40, i32 0, i32 19, !dbg !3713
  %41 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar35, align 8, !dbg !3713
  %codec_id36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %41, i32 0, i32 1, !dbg !3714
  %42 = load i32, i32* %codec_id36, align 4, !dbg !3714
  %cmp37 = icmp eq i32 %42, 6, !dbg !3715
  br i1 %cmp37, label %if.then38, label %if.end44, !dbg !3716

if.then38:                                        ; preds = %lor.lhs.false31, %lor.lhs.false24, %lor.lhs.false17, %lor.lhs.false10, %lor.lhs.false, %for.body
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3718
  %44 = bitcast %struct.AVFormatContext* %43 to i8*, !dbg !3718
  %45 = load i32, i32* %i, align 4, !dbg !3720
  %idxprom39 = sext i32 %45 to i64, !dbg !3721
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3721
  %streams40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i32 0, i32 7, !dbg !3722
  %47 = load %struct.AVStream**, %struct.AVStream*** %streams40, align 8, !dbg !3722
  %arrayidx41 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %47, i64 %idxprom39, !dbg !3721
  %48 = load %struct.AVStream*, %struct.AVStream** %arrayidx41, align 8, !dbg !3721
  %codecpar42 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %48, i32 0, i32 19, !dbg !3723
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar42, align 8, !dbg !3723
  %codec_id43 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i32 0, i32 1, !dbg !3724
  %50 = load i32, i32* %codec_id43, align 4, !dbg !3724
  %call = call i8* @avcodec_get_name(i32 %50), !dbg !3725
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.98, i32 0, i32 0), i8* %call), !dbg !3726
  store i32 -1163346256, i32* %retval, align 4, !dbg !3727
  br label %return, !dbg !3727

if.end44:                                         ; preds = %lor.lhs.false31
  br label %for.inc, !dbg !3728

for.inc:                                          ; preds = %if.end44
  %51 = load i32, i32* %i, align 4, !dbg !3729
  %inc = add nsw i32 %51, 1, !dbg !3729
  store i32 %inc, i32* %i, align 4, !dbg !3729
  br label %for.cond, !dbg !3731, !llvm.loop !3732

for.end:                                          ; preds = %for.cond
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3734
  %avoid_negative_ts = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 39, !dbg !3736
  %53 = load i32, i32* %avoid_negative_ts, align 4, !dbg !3736
  %cmp45 = icmp slt i32 %53, 0, !dbg !3737
  br i1 %cmp45, label %if.then46, label %if.end48, !dbg !3738

if.then46:                                        ; preds = %for.end
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3739
  %avoid_negative_ts47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %54, i32 0, i32 39, !dbg !3741
  store i32 1, i32* %avoid_negative_ts47, align 4, !dbg !3742
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3743
  %internal = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %55, i32 0, i32 55, !dbg !3744
  %56 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal, align 8, !dbg !3744
  %avoid_negative_ts_use_pts = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %56, i32 0, i32 13, !dbg !3745
  store i32 1, i32* %avoid_negative_ts_use_pts, align 8, !dbg !3746
  br label %if.end48, !dbg !3747

if.end48:                                         ; preds = %if.then46, %for.end
  store i32 0, i32* %i, align 4, !dbg !3748
  br label %for.cond49, !dbg !3750

for.cond49:                                       ; preds = %for.inc56, %if.end48
  %57 = load i32, i32* %i, align 4, !dbg !3751
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3754
  %nb_streams50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %58, i32 0, i32 6, !dbg !3755
  %59 = load i32, i32* %nb_streams50, align 4, !dbg !3755
  %cmp51 = icmp ult i32 %57, %59, !dbg !3756
  br i1 %cmp51, label %for.body52, label %for.end58, !dbg !3757

for.body52:                                       ; preds = %for.cond49
  %60 = load i32, i32* %i, align 4, !dbg !3758
  %idxprom53 = sext i32 %60 to i64, !dbg !3760
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3760
  %streams54 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i32 0, i32 7, !dbg !3761
  %62 = load %struct.AVStream**, %struct.AVStream*** %streams54, align 8, !dbg !3761
  %arrayidx55 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %62, i64 %idxprom53, !dbg !3760
  %63 = load %struct.AVStream*, %struct.AVStream** %arrayidx55, align 8, !dbg !3760
  call void @avpriv_set_pts_info(%struct.AVStream* %63, i32 64, i32 1, i32 1000), !dbg !3762
  br label %for.inc56, !dbg !3763

for.inc56:                                        ; preds = %for.body52
  %64 = load i32, i32* %i, align 4, !dbg !3764
  %inc57 = add nsw i32 %64, 1, !dbg !3764
  store i32 %inc57, i32* %i, align 4, !dbg !3764
  br label %for.cond49, !dbg !3766, !llvm.loop !3767

for.end58:                                        ; preds = %for.cond49
  store i32 0, i32* %retval, align 4, !dbg !3769
  br label %return, !dbg !3769

return:                                           ; preds = %for.end58, %if.then38, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !3770
  ret i32 %65, !dbg !3770
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_check_bitstream(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3771 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !3772, metadata !2445), !dbg !3777
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %ret = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3783, metadata !2445), !dbg !3784
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3785, metadata !2445), !dbg !3786
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3787, metadata !2445), !dbg !3788
  store i32 1, i32* %ret, align 4, !dbg !3788
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3789, metadata !2445), !dbg !3790
  %0 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3791
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 5, !dbg !3792
  %1 = load i32, i32* %stream_index, align 4, !dbg !3792
  %idxprom = sext i32 %1 to i64, !dbg !3793
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3793
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 7, !dbg !3794
  %3 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3794
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %3, i64 %idxprom, !dbg !3793
  %4 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3793
  store %struct.AVStream* %4, %struct.AVStream** %st, align 8, !dbg !3790
  %5 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3795
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 19, !dbg !3796
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3796
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 1, !dbg !3797
  %7 = load i32, i32* %codec_id, align 4, !dbg !3797
  %cmp = icmp eq i32 %7, 86018, !dbg !3798
  br i1 %cmp, label %if.then, label %if.else, !dbg !3799

if.then:                                          ; preds = %entry
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3800
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 4, !dbg !3801
  %9 = load i32, i32* %size, align 8, !dbg !3801
  %cmp1 = icmp sgt i32 %9, 2, !dbg !3802
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !3803

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3804
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 3, !dbg !3805
  %11 = load i8*, i8** %data, align 8, !dbg !3805
  %12 = bitcast i8* %11 to %union.unaligned_16*, !dbg !3806
  %l = bitcast %union.unaligned_16* %12 to i16*, !dbg !3806
  %13 = load i16, i16* %l, align 1, !dbg !3806
  store i16 %13, i16* %x.addr.i, align 2, !dbg !3807
  %14 = load i16, i16* %x.addr.i, align 2, !dbg !3808
  %conv.i = zext i16 %14 to i32, !dbg !3808
  %shr.i = ashr i32 %conv.i, 8, !dbg !3809
  %15 = load i16, i16* %x.addr.i, align 2, !dbg !3810
  %conv1.i = zext i16 %15 to i32, !dbg !3810
  %shl.i = shl i32 %conv1.i, 8, !dbg !3811
  %or.i = or i32 %shr.i, %shl.i, !dbg !3812
  %conv2.i = trunc i32 %or.i to i16, !dbg !3813
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !3814
  %16 = load i16, i16* %x.addr.i, align 2, !dbg !3815
  %conv = zext i16 %16 to i32, !dbg !3807
  %and = and i32 %conv, 65520, !dbg !3816
  %cmp2 = icmp eq i32 %and, 65520, !dbg !3817
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !3818

if.then4:                                         ; preds = %land.lhs.true
  %17 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3819
  %call5 = call i32 @ff_stream_add_bitstream_filter(%struct.AVStream* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.99, i32 0, i32 0), i8* null), !dbg !3820
  store i32 %call5, i32* %ret, align 4, !dbg !3821
  br label %if.end, !dbg !3822

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end13, !dbg !3823

if.else:                                          ; preds = %entry
  %18 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3824
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 19, !dbg !3827
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !3827
  %codec_id7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i32 0, i32 1, !dbg !3828
  %20 = load i32, i32* %codec_id7, align 4, !dbg !3828
  %cmp8 = icmp eq i32 %20, 167, !dbg !3829
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !3824

if.then10:                                        ; preds = %if.else
  %21 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3830
  %call11 = call i32 @ff_stream_add_bitstream_filter(%struct.AVStream* %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.100, i32 0, i32 0), i8* null), !dbg !3832
  store i32 %call11, i32* %ret, align 4, !dbg !3833
  br label %if.end12, !dbg !3834

if.end12:                                         ; preds = %if.then10, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  %22 = load i32, i32* %ret, align 4, !dbg !3835
  ret i32 %22, !dbg !3836
}

; Function Attrs: nounwind uwtable
define internal i32 @webm_query_codec(i32 %codec_id, i32 %std_compliance) #0 !dbg !3837 {
entry:
  %retval = alloca i32, align 4
  %codec_id.addr = alloca i32, align 4
  %std_compliance.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !3838, metadata !2445), !dbg !3839
  store i32 %std_compliance, i32* %std_compliance.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %std_compliance.addr, metadata !3840, metadata !2445), !dbg !3841
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3842, metadata !2445), !dbg !3843
  store i32 0, i32* %i, align 4, !dbg !3844
  br label %for.cond, !dbg !3846

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3847
  %idxprom = sext i32 %0 to i64, !dbg !3850
  %arrayidx = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_webm_codec_tags, i64 0, i64 %idxprom, !dbg !3850
  %id = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx, i32 0, i32 1, !dbg !3851
  %1 = load i32, i32* %id, align 4, !dbg !3851
  %cmp = icmp ne i32 %1, 0, !dbg !3852
  br i1 %cmp, label %for.body, label %for.end, !dbg !3853

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3854
  %idxprom1 = sext i32 %2 to i64, !dbg !3856
  %arrayidx2 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_webm_codec_tags, i64 0, i64 %idxprom1, !dbg !3856
  %id3 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx2, i32 0, i32 1, !dbg !3857
  %3 = load i32, i32* %id3, align 4, !dbg !3857
  %4 = load i32, i32* %codec_id.addr, align 4, !dbg !3858
  %cmp4 = icmp eq i32 %3, %4, !dbg !3859
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3860

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !3861
  br label %return, !dbg !3861

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3862

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !3864
  %inc = add nsw i32 %5, 1, !dbg !3864
  store i32 %inc, i32* %i, align 4, !dbg !3864
  br label %for.cond, !dbg !3866, !llvm.loop !3867

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3869
  br label %return, !dbg !3869

return:                                           ; preds = %for.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !3870
  ret i32 %6, !dbg !3870
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #1

declare i8* @av_mallocz_array(i64, i64) #1

; Function Attrs: nounwind uwtable
define internal { i64, i32 } @start_ebml_master(%struct.AVIOContext* %pb, i32 %elementid, i64 %expectedsize) #0 !dbg !3871 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !3874
  %retval = alloca %struct.ebml_master, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %expectedsize.addr = alloca i64, align 8
  %bytes = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !3876, metadata !2445), !dbg !3877
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !3878, metadata !2445), !dbg !3879
  store i64 %expectedsize, i64* %expectedsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %expectedsize.addr, metadata !3880, metadata !2445), !dbg !3881
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !3882, metadata !2445), !dbg !3883
  %0 = load i64, i64* %expectedsize.addr, align 8, !dbg !3884
  %tobool = icmp ne i64 %0, 0, !dbg !3884
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3884

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %expectedsize.addr, align 8, !dbg !3885
  %call = call i32 @ebml_num_size(i64 %1), !dbg !3887
  br label %cond.end, !dbg !3888

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 8, %cond.false ], !dbg !3891
  store i32 %cond, i32* %bytes, align 4, !dbg !3893
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3894
  %3 = load i32, i32* %elementid.addr, align 4, !dbg !3895
  call void @put_ebml_id(%struct.AVIOContext* %2, i32 %3), !dbg !3896
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3897
  %5 = load i32, i32* %bytes, align 4, !dbg !3898
  call void @put_ebml_size_unknown(%struct.AVIOContext* %4, i32 %5), !dbg !3899
  %pos = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %retval, i32 0, i32 0, !dbg !3900
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3901
  store %struct.AVIOContext* %6, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3902
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3903
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %7, i64 0, i32 1) #11, !dbg !3904
  store i64 %call.i, i64* %pos, align 8, !dbg !3900
  %sizebytes = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %retval, i32 0, i32 1, !dbg !3900
  %8 = load i32, i32* %bytes, align 4, !dbg !3905
  store i32 %8, i32* %sizebytes, align 8, !dbg !3900
  %9 = bitcast %struct.ebml_master* %retval to { i64, i32 }*, !dbg !3906
  %10 = load { i64, i32 }, { i64, i32 }* %9, align 8, !dbg !3906
  ret { i64, i32 } %10, !dbg !3906
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @put_ebml_uint(%struct.AVIOContext* %pb, i32 %elementid, i64 %val) #0 !dbg !3907 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %val.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %bytes = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !3910, metadata !2445), !dbg !3911
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !3912, metadata !2445), !dbg !3913
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !3914, metadata !2445), !dbg !3915
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3916, metadata !2445), !dbg !3917
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !3918, metadata !2445), !dbg !3919
  store i32 1, i32* %bytes, align 4, !dbg !3919
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3920, metadata !2445), !dbg !3921
  %0 = load i64, i64* %val.addr, align 8, !dbg !3922
  store i64 %0, i64* %tmp, align 8, !dbg !3921
  br label %while.cond, !dbg !3923

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i64, i64* %tmp, align 8, !dbg !3924
  %shr = lshr i64 %1, 8, !dbg !3924
  store i64 %shr, i64* %tmp, align 8, !dbg !3924
  %tobool = icmp ne i64 %shr, 0, !dbg !3926
  br i1 %tobool, label %while.body, label %while.end, !dbg !3926

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %bytes, align 4, !dbg !3927
  %inc = add nsw i32 %2, 1, !dbg !3927
  store i32 %inc, i32* %bytes, align 4, !dbg !3927
  br label %while.cond, !dbg !3928, !llvm.loop !3930

while.end:                                        ; preds = %while.cond
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3931
  %4 = load i32, i32* %elementid.addr, align 4, !dbg !3932
  call void @put_ebml_id(%struct.AVIOContext* %3, i32 %4), !dbg !3933
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3934
  %6 = load i32, i32* %bytes, align 4, !dbg !3935
  %conv = sext i32 %6 to i64, !dbg !3935
  call void @put_ebml_num(%struct.AVIOContext* %5, i64 %conv, i32 0), !dbg !3936
  %7 = load i32, i32* %bytes, align 4, !dbg !3937
  %sub = sub nsw i32 %7, 1, !dbg !3939
  store i32 %sub, i32* %i, align 4, !dbg !3940
  br label %for.cond, !dbg !3941

for.cond:                                         ; preds = %for.inc, %while.end
  %8 = load i32, i32* %i, align 4, !dbg !3942
  %cmp = icmp sge i32 %8, 0, !dbg !3945
  br i1 %cmp, label %for.body, label %for.end, !dbg !3946

for.body:                                         ; preds = %for.cond
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3947
  %10 = load i64, i64* %val.addr, align 8, !dbg !3948
  %11 = load i32, i32* %i, align 4, !dbg !3949
  %mul = mul nsw i32 %11, 8, !dbg !3950
  %sh_prom = zext i32 %mul to i64, !dbg !3951
  %shr2 = lshr i64 %10, %sh_prom, !dbg !3951
  %conv3 = trunc i64 %shr2 to i8, !dbg !3952
  %conv4 = zext i8 %conv3 to i32, !dbg !3952
  call void @avio_w8(%struct.AVIOContext* %9, i32 %conv4), !dbg !3953
  br label %for.inc, !dbg !3953

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !3954
  %dec = add nsw i32 %12, -1, !dbg !3954
  store i32 %dec, i32* %i, align 4, !dbg !3954
  br label %for.cond, !dbg !3956, !llvm.loop !3957

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3959
}

; Function Attrs: nounwind uwtable
define internal void @put_ebml_string(%struct.AVIOContext* %pb, i32 %elementid, i8* %str) #0 !dbg !3960 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !3963, metadata !2445), !dbg !3964
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !3965, metadata !2445), !dbg !3966
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !3967, metadata !2445), !dbg !3968
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3969
  %1 = load i32, i32* %elementid.addr, align 4, !dbg !3970
  %2 = load i8*, i8** %str.addr, align 8, !dbg !3971
  %3 = load i8*, i8** %str.addr, align 8, !dbg !3972
  %call = call i64 @strlen(i8* %3) #10, !dbg !3973
  %conv = trunc i64 %call to i32, !dbg !3973
  call void @put_ebml_binary(%struct.AVIOContext* %0, i32 %1, i8* %2, i32 %conv), !dbg !3974
  ret void, !dbg !3976
}

; Function Attrs: nounwind uwtable
define internal void @end_ebml_master(%struct.AVIOContext* %pb, i64 %master.coerce0, i32 %master.coerce1) #0 !dbg !3977 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !3980
  %master = alloca %struct.ebml_master, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  %0 = bitcast %struct.ebml_master* %master to { i64, i32 }*
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  store i64 %master.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %master.coerce1, i32* %2, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !3982, metadata !2445), !dbg !3983
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %master, metadata !3984, metadata !2445), !dbg !3985
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !3986, metadata !2445), !dbg !3987
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3988
  store %struct.AVIOContext* %3, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3989
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3990
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %4, i64 0, i32 1) #11, !dbg !3991
  store i64 %call.i, i64* %pos, align 8, !dbg !3987
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3992
  %pos1 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %master, i32 0, i32 0, !dbg !3994
  %6 = load i64, i64* %pos1, align 8, !dbg !3994
  %sizebytes = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %master, i32 0, i32 1, !dbg !3995
  %7 = load i32, i32* %sizebytes, align 8, !dbg !3995
  %conv = sext i32 %7 to i64, !dbg !3996
  %sub = sub nsw i64 %6, %conv, !dbg !3997
  %call2 = call i64 @avio_seek(%struct.AVIOContext* %5, i64 %sub, i32 0), !dbg !3998
  %cmp = icmp slt i64 %call2, 0, !dbg !3999
  br i1 %cmp, label %if.then, label %if.end, !dbg !4000

if.then:                                          ; preds = %entry
  br label %return, !dbg !4001

if.end:                                           ; preds = %entry
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4002
  %9 = load i64, i64* %pos, align 8, !dbg !4003
  %pos4 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %master, i32 0, i32 0, !dbg !4004
  %10 = load i64, i64* %pos4, align 8, !dbg !4004
  %sub5 = sub nsw i64 %9, %10, !dbg !4005
  %sizebytes6 = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %master, i32 0, i32 1, !dbg !4006
  %11 = load i32, i32* %sizebytes6, align 8, !dbg !4006
  call void @put_ebml_num(%struct.AVIOContext* %8, i64 %sub5, i32 %11), !dbg !4007
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4008
  %13 = load i64, i64* %pos, align 8, !dbg !4009
  %call7 = call i64 @avio_seek(%struct.AVIOContext* %12, i64 %13, i32 0), !dbg !4010
  br label %return, !dbg !4011

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4012
}

; Function Attrs: nounwind uwtable
define internal %struct.mkv_seekhead* @mkv_start_seekhead(%struct.AVIOContext* %pb, i64 %segment_offset, i32 %numelements) #0 !dbg !4014 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !4017
  %retval = alloca %struct.mkv_seekhead*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %segment_offset.addr = alloca i64, align 8
  %numelements.addr = alloca i32, align 4
  %new_seekhead = alloca %struct.mkv_seekhead*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4021, metadata !2445), !dbg !4022
  store i64 %segment_offset, i64* %segment_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %segment_offset.addr, metadata !4023, metadata !2445), !dbg !4024
  store i32 %numelements, i32* %numelements.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numelements.addr, metadata !4025, metadata !2445), !dbg !4026
  call void @llvm.dbg.declare(metadata %struct.mkv_seekhead** %new_seekhead, metadata !4027, metadata !2445), !dbg !4028
  %call = call noalias i8* @av_mallocz(i64 40), !dbg !4029
  %0 = bitcast i8* %call to %struct.mkv_seekhead*, !dbg !4029
  store %struct.mkv_seekhead* %0, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4028
  %1 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4030
  %tobool = icmp ne %struct.mkv_seekhead* %1, null, !dbg !4030
  br i1 %tobool, label %if.end, label %if.then, !dbg !4032

if.then:                                          ; preds = %entry
  store %struct.mkv_seekhead* null, %struct.mkv_seekhead** %retval, align 8, !dbg !4033
  br label %return, !dbg !4033

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %segment_offset.addr, align 8, !dbg !4034
  %3 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4035
  %segment_offset1 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %3, i32 0, i32 1, !dbg !4036
  store i64 %2, i64* %segment_offset1, align 8, !dbg !4037
  %4 = load i32, i32* %numelements.addr, align 4, !dbg !4038
  %cmp = icmp sgt i32 %4, 0, !dbg !4039
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !4040

if.then2:                                         ; preds = %if.end
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4041
  store %struct.AVIOContext* %5, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4042
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4043
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #11, !dbg !4044
  %7 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4045
  %filepos = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %7, i32 0, i32 0, !dbg !4046
  store i64 %call.i, i64* %filepos, align 8, !dbg !4047
  %8 = load i32, i32* %numelements.addr, align 4, !dbg !4048
  %mul = mul nsw i32 %8, 21, !dbg !4049
  %add = add nsw i32 %mul, 19, !dbg !4050
  %9 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4051
  %reserved_size = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %9, i32 0, i32 2, !dbg !4052
  store i32 %add, i32* %reserved_size, align 8, !dbg !4053
  %10 = load i32, i32* %numelements.addr, align 4, !dbg !4054
  %11 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4055
  %max_entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %11, i32 0, i32 3, !dbg !4056
  store i32 %10, i32* %max_entries, align 4, !dbg !4057
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4058
  %13 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4059
  %reserved_size4 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %13, i32 0, i32 2, !dbg !4060
  %14 = load i32, i32* %reserved_size4, align 8, !dbg !4060
  %conv = sext i32 %14 to i64, !dbg !4059
  call void @put_ebml_void(%struct.AVIOContext* %12, i64 %conv), !dbg !4061
  br label %if.end5, !dbg !4062

if.end5:                                          ; preds = %if.then2, %if.end
  %15 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %new_seekhead, align 8, !dbg !4063
  store %struct.mkv_seekhead* %15, %struct.mkv_seekhead** %retval, align 8, !dbg !4064
  br label %return, !dbg !4064

return:                                           ; preds = %if.end5, %if.then
  %16 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %retval, align 8, !dbg !4065
  ret %struct.mkv_seekhead* %16, !dbg !4065
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %seekhead, i32 %elementid, i64 %filepos) #0 !dbg !4066 {
entry:
  %retval = alloca i32, align 4
  %seekhead.addr = alloca %struct.mkv_seekhead*, align 8
  %elementid.addr = alloca i32, align 4
  %filepos.addr = alloca i64, align 8
  %entries = alloca %struct.mkv_seekhead_entry*, align 8
  store %struct.mkv_seekhead* %seekhead, %struct.mkv_seekhead** %seekhead.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mkv_seekhead** %seekhead.addr, metadata !4069, metadata !2445), !dbg !4070
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !4071, metadata !2445), !dbg !4072
  store i64 %filepos, i64* %filepos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filepos.addr, metadata !4073, metadata !2445), !dbg !4074
  call void @llvm.dbg.declare(metadata %struct.mkv_seekhead_entry** %entries, metadata !4075, metadata !2445), !dbg !4076
  %0 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4077
  %entries1 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %0, i32 0, i32 4, !dbg !4078
  %1 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries1, align 8, !dbg !4078
  store %struct.mkv_seekhead_entry* %1, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !4076
  %2 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4079
  %max_entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %2, i32 0, i32 3, !dbg !4081
  %3 = load i32, i32* %max_entries, align 4, !dbg !4081
  %cmp = icmp sgt i32 %3, 0, !dbg !4082
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4083

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4084
  %max_entries2 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %4, i32 0, i32 3, !dbg !4086
  %5 = load i32, i32* %max_entries2, align 4, !dbg !4086
  %6 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4087
  %num_entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %6, i32 0, i32 5, !dbg !4088
  %7 = load i32, i32* %num_entries, align 8, !dbg !4088
  %cmp3 = icmp sle i32 %5, %7, !dbg !4089
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4090

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !4091
  br label %return, !dbg !4091

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !4092
  %9 = bitcast %struct.mkv_seekhead_entry* %8 to i8*, !dbg !4092
  %10 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4093
  %num_entries4 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %10, i32 0, i32 5, !dbg !4094
  %11 = load i32, i32* %num_entries4, align 8, !dbg !4094
  %add = add nsw i32 %11, 1, !dbg !4095
  %conv = sext i32 %add to i64, !dbg !4093
  %call = call i8* @av_realloc_array(i8* %9, i64 %conv, i64 16), !dbg !4096
  %12 = bitcast i8* %call to %struct.mkv_seekhead_entry*, !dbg !4096
  store %struct.mkv_seekhead_entry* %12, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !4097
  %13 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !4098
  %tobool = icmp ne %struct.mkv_seekhead_entry* %13, null, !dbg !4098
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !4100

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !4101
  br label %return, !dbg !4101

if.end6:                                          ; preds = %if.end
  %14 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !4102
  %15 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4103
  %entries7 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %15, i32 0, i32 4, !dbg !4104
  store %struct.mkv_seekhead_entry* %14, %struct.mkv_seekhead_entry** %entries7, align 8, !dbg !4105
  %16 = load i32, i32* %elementid.addr, align 4, !dbg !4106
  %17 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4107
  %num_entries8 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %17, i32 0, i32 5, !dbg !4108
  %18 = load i32, i32* %num_entries8, align 8, !dbg !4108
  %idxprom = sext i32 %18 to i64, !dbg !4109
  %19 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4109
  %entries9 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %19, i32 0, i32 4, !dbg !4110
  %20 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries9, align 8, !dbg !4110
  %arrayidx = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %20, i64 %idxprom, !dbg !4109
  %elementid10 = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %arrayidx, i32 0, i32 0, !dbg !4111
  store i32 %16, i32* %elementid10, align 8, !dbg !4112
  %21 = load i64, i64* %filepos.addr, align 8, !dbg !4113
  %22 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4114
  %segment_offset = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %22, i32 0, i32 1, !dbg !4115
  %23 = load i64, i64* %segment_offset, align 8, !dbg !4115
  %sub = sub i64 %21, %23, !dbg !4116
  %24 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4117
  %num_entries11 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %24, i32 0, i32 5, !dbg !4118
  %25 = load i32, i32* %num_entries11, align 8, !dbg !4119
  %inc = add nsw i32 %25, 1, !dbg !4119
  store i32 %inc, i32* %num_entries11, align 8, !dbg !4119
  %idxprom12 = sext i32 %25 to i64, !dbg !4120
  %26 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead.addr, align 8, !dbg !4120
  %entries13 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %26, i32 0, i32 4, !dbg !4121
  %27 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries13, align 8, !dbg !4121
  %arrayidx14 = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %27, i64 %idxprom12, !dbg !4120
  %segmentpos = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %arrayidx14, i32 0, i32 1, !dbg !4122
  store i64 %sub, i64* %segmentpos, align 8, !dbg !4123
  store i32 0, i32* %retval, align 4, !dbg !4124
  br label %return, !dbg !4124

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !4125
  ret i32 %28, !dbg !4125
}

; Function Attrs: nounwind uwtable
define internal i32 @start_ebml_master_crc32(%struct.AVIOContext* %pb, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %mkv, %struct.ebml_master* %master, i32 %elementid, i64 %expectedsize) #0 !dbg !4126 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %dyn_cp.addr = alloca %struct.AVIOContext**, align 8
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %master.addr = alloca %struct.ebml_master*, align 8
  %elementid.addr = alloca i32, align 4
  %expectedsize.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %coerce8 = alloca %struct.ebml_master, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4130, metadata !2445), !dbg !4131
  store %struct.AVIOContext** %dyn_cp, %struct.AVIOContext*** %dyn_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %dyn_cp.addr, metadata !4132, metadata !2445), !dbg !4133
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !4134, metadata !2445), !dbg !4135
  store %struct.ebml_master* %master, %struct.ebml_master** %master.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ebml_master** %master.addr, metadata !4136, metadata !2445), !dbg !4137
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !4138, metadata !2445), !dbg !4139
  store i64 %expectedsize, i64* %expectedsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %expectedsize.addr, metadata !4140, metadata !2445), !dbg !4141
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4142, metadata !2445), !dbg !4143
  %0 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4144
  %call = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %0), !dbg !4146
  store i32 %call, i32* %ret, align 4, !dbg !4147
  %cmp = icmp slt i32 %call, 0, !dbg !4148
  br i1 %cmp, label %if.then, label %if.end, !dbg !4149

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !4150
  store i32 %1, i32* %retval, align 4, !dbg !4151
  br label %return, !dbg !4151

if.end:                                           ; preds = %entry
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4152
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %2, i32 0, i32 19, !dbg !4154
  %3 = load i32, i32* %seekable, align 8, !dbg !4154
  %and = and i32 %3, 1, !dbg !4155
  %tobool = icmp ne i32 %and, 0, !dbg !4155
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4156

if.then1:                                         ; preds = %if.end
  %4 = load %struct.ebml_master*, %struct.ebml_master** %master.addr, align 8, !dbg !4157
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4159
  %6 = load i32, i32* %elementid.addr, align 4, !dbg !4160
  %7 = load i64, i64* %expectedsize.addr, align 8, !dbg !4161
  %call2 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %5, i32 %6, i64 %7), !dbg !4162
  %8 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !4162
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !4162
  %10 = extractvalue { i64, i32 } %call2, 0, !dbg !4162
  store i64 %10, i64* %9, align 8, !dbg !4162
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !4162
  %12 = extractvalue { i64, i32 } %call2, 1, !dbg !4162
  store i32 %12, i32* %11, align 8, !dbg !4162
  %13 = bitcast %struct.ebml_master* %4 to i8*, !dbg !4162
  %14 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !4162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false), !dbg !4163
  %15 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !4165
  %write_crc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %15, i32 0, i32 30, !dbg !4167
  %16 = load i32, i32* %write_crc, align 4, !dbg !4167
  %tobool3 = icmp ne i32 %16, 0, !dbg !4165
  br i1 %tobool3, label %land.lhs.true, label %if.end6, !dbg !4168

land.lhs.true:                                    ; preds = %if.then1
  %17 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !4169
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %17, i32 0, i32 1, !dbg !4171
  %18 = load i32, i32* %mode, align 8, !dbg !4171
  %cmp4 = icmp ne i32 %18, 2, !dbg !4172
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4173

if.then5:                                         ; preds = %land.lhs.true
  %19 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4174
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %19, align 8, !dbg !4175
  call void @put_ebml_void(%struct.AVIOContext* %20, i64 6), !dbg !4176
  br label %if.end6, !dbg !4176

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.then1
  br label %if.end9, !dbg !4177

if.else:                                          ; preds = %if.end
  %21 = load %struct.ebml_master*, %struct.ebml_master** %master.addr, align 8, !dbg !4178
  %22 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4179
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %22, align 8, !dbg !4180
  %24 = load i32, i32* %elementid.addr, align 4, !dbg !4181
  %25 = load i64, i64* %expectedsize.addr, align 8, !dbg !4182
  %call7 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %23, i32 %24, i64 %25), !dbg !4183
  %26 = bitcast %struct.ebml_master* %coerce8 to { i64, i32 }*, !dbg !4183
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0, !dbg !4183
  %28 = extractvalue { i64, i32 } %call7, 0, !dbg !4183
  store i64 %28, i64* %27, align 8, !dbg !4183
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1, !dbg !4183
  %30 = extractvalue { i64, i32 } %call7, 1, !dbg !4183
  store i32 %30, i32* %29, align 8, !dbg !4183
  %31 = bitcast %struct.ebml_master* %21 to i8*, !dbg !4183
  %32 = bitcast %struct.ebml_master* %coerce8 to i8*, !dbg !4183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 16, i32 8, i1 false), !dbg !4184
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4186
  br label %return, !dbg !4186

return:                                           ; preds = %if.end9, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !4187
  ret i32 %33, !dbg !4187
}

declare void @av_lfg_init(%struct.AVLFG*, i32) #1

declare i32 @av_get_random_seed() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_lfg_get(%struct.AVLFG* %c) #5 !dbg !4188 {
entry:
  %c.addr = alloca %struct.AVLFG*, align 8
  store %struct.AVLFG* %c, %struct.AVLFG** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVLFG** %c.addr, metadata !4192, metadata !2445), !dbg !4193
  %0 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4194
  %index = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i32 0, i32 1, !dbg !4195
  %1 = load i32, i32* %index, align 4, !dbg !4195
  %sub = sub nsw i32 %1, 24, !dbg !4196
  %and = and i32 %sub, 63, !dbg !4197
  %idxprom = sext i32 %and to i64, !dbg !4198
  %2 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4198
  %state = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %2, i32 0, i32 0, !dbg !4199
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %state, i64 0, i64 %idxprom, !dbg !4198
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4198
  %4 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4200
  %index1 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %4, i32 0, i32 1, !dbg !4201
  %5 = load i32, i32* %index1, align 4, !dbg !4201
  %sub2 = sub nsw i32 %5, 55, !dbg !4202
  %and3 = and i32 %sub2, 63, !dbg !4203
  %idxprom4 = sext i32 %and3 to i64, !dbg !4204
  %6 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4204
  %state5 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %6, i32 0, i32 0, !dbg !4205
  %arrayidx6 = getelementptr inbounds [64 x i32], [64 x i32]* %state5, i64 0, i64 %idxprom4, !dbg !4204
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !4204
  %add = add i32 %3, %7, !dbg !4206
  %8 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4207
  %index7 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %8, i32 0, i32 1, !dbg !4208
  %9 = load i32, i32* %index7, align 4, !dbg !4208
  %and8 = and i32 %9, 63, !dbg !4209
  %idxprom9 = sext i32 %and8 to i64, !dbg !4210
  %10 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4210
  %state10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %10, i32 0, i32 0, !dbg !4211
  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %state10, i64 0, i64 %idxprom9, !dbg !4210
  store i32 %add, i32* %arrayidx11, align 4, !dbg !4212
  %11 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4213
  %index12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %11, i32 0, i32 1, !dbg !4214
  %12 = load i32, i32* %index12, align 4, !dbg !4215
  %inc = add nsw i32 %12, 1, !dbg !4215
  store i32 %inc, i32* %index12, align 4, !dbg !4215
  %and13 = and i32 %12, 63, !dbg !4216
  %idxprom14 = sext i32 %and13 to i64, !dbg !4217
  %13 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4217
  %state15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %13, i32 0, i32 0, !dbg !4218
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %state15, i64 0, i64 %idxprom14, !dbg !4217
  %14 = load i32, i32* %arrayidx16, align 4, !dbg !4217
  ret i32 %14, !dbg !4219
}

; Function Attrs: nounwind uwtable
define internal void @put_ebml_binary(%struct.AVIOContext* %pb, i32 %elementid, i8* %buf, i32 %size) #0 !dbg !4220 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4225, metadata !2445), !dbg !4226
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !4227, metadata !2445), !dbg !4228
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4229, metadata !2445), !dbg !4230
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4231, metadata !2445), !dbg !4232
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4233
  %1 = load i32, i32* %elementid.addr, align 4, !dbg !4234
  call void @put_ebml_id(%struct.AVIOContext* %0, i32 %1), !dbg !4235
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4236
  %3 = load i32, i32* %size.addr, align 4, !dbg !4237
  %conv = sext i32 %3 to i64, !dbg !4237
  call void @put_ebml_num(%struct.AVIOContext* %2, i64 %conv, i32 0), !dbg !4238
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4239
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !4240
  %6 = load i32, i32* %size.addr, align 4, !dbg !4241
  call void @avio_write(%struct.AVIOContext* %4, i8* %5, i32 %6), !dbg !4242
  ret void, !dbg !4243
}

declare i32 @ff_parse_creation_time_metadata(%struct.AVFormatContext*, i64*, i32) #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #6 !dbg !4244 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !4247, metadata !2445), !dbg !4251
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4247, metadata !2445), !dbg !4254
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4256, metadata !2445), !dbg !4257
  %0 = load i64, i64* %x.addr, align 8, !dbg !4258
  %conv = trunc i64 %0 to i32, !dbg !4258
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !4259
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !4260
  %shl.i = shl i32 %1, 8, !dbg !4261
  %and.i = and i32 %shl.i, 65280, !dbg !4262
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !4263
  %shr.i = lshr i32 %2, 8, !dbg !4264
  %and1.i = and i32 %shr.i, 255, !dbg !4265
  %or.i = or i32 %and.i, %and1.i, !dbg !4266
  %shl2.i = shl i32 %or.i, 16, !dbg !4267
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !4268
  %shr3.i = lshr i32 %3, 16, !dbg !4269
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4270
  %and5.i = and i32 %shl4.i, 65280, !dbg !4271
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !4272
  %shr6.i = lshr i32 %4, 16, !dbg !4273
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4274
  %and8.i = and i32 %shr7.i, 255, !dbg !4275
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4276
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4277
  %conv1 = zext i32 %or10.i to i64, !dbg !4278
  %shl = shl i64 %conv1, 32, !dbg !4279
  %5 = load i64, i64* %x.addr, align 8, !dbg !4280
  %shr = lshr i64 %5, 32, !dbg !4281
  %conv2 = trunc i64 %shr to i32, !dbg !4280
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !4282
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !4283
  %shl.i6 = shl i32 %6, 8, !dbg !4284
  %and.i7 = and i32 %shl.i6, 65280, !dbg !4285
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !4286
  %shr.i8 = lshr i32 %7, 8, !dbg !4287
  %and1.i9 = and i32 %shr.i8, 255, !dbg !4288
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !4289
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !4290
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !4291
  %shr3.i12 = lshr i32 %8, 16, !dbg !4292
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !4293
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !4294
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !4295
  %shr6.i15 = lshr i32 %9, 16, !dbg !4296
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !4297
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !4298
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !4299
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !4300
  %conv4 = zext i32 %or10.i19 to i64, !dbg !4301
  %or = or i64 %shl, %conv4, !dbg !4302
  ret i64 %or, !dbg !4303
}

; Function Attrs: nounwind uwtable
define internal i64 @get_metadata_duration(%struct.AVFormatContext* %s) #0 !dbg !4304 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %max = alloca i64, align 8
  %us = alloca i64, align 8
  %explicitDuration = alloca %struct.AVDictionaryEntry*, align 8
  %us5 = alloca i64, align 8
  %duration = alloca %struct.AVDictionaryEntry*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4307, metadata !2445), !dbg !4308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4309, metadata !2445), !dbg !4310
  store i32 0, i32* %i, align 4, !dbg !4310
  call void @llvm.dbg.declare(metadata i64* %max, metadata !4311, metadata !2445), !dbg !4312
  store i64 0, i64* %max, align 8, !dbg !4312
  call void @llvm.dbg.declare(metadata i64* %us, metadata !4313, metadata !2445), !dbg !4314
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %explicitDuration, metadata !4315, metadata !2445), !dbg !4316
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4317
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 29, !dbg !4318
  %1 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !4318
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4319
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %explicitDuration, align 8, !dbg !4316
  %2 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %explicitDuration, align 8, !dbg !4320
  %tobool = icmp ne %struct.AVDictionaryEntry* %2, null, !dbg !4320
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4322

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %explicitDuration, align 8, !dbg !4323
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %3, i32 0, i32 1, !dbg !4325
  %4 = load i8*, i8** %value, align 8, !dbg !4325
  %call1 = call i32 @av_parse_time(i64* %us, i8* %4, i32 1), !dbg !4326
  %cmp = icmp eq i32 %call1, 0, !dbg !4327
  br i1 %cmp, label %land.lhs.true2, label %if.end, !dbg !4328

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load i64, i64* %us, align 8, !dbg !4329
  %cmp3 = icmp sgt i64 %5, 0, !dbg !4331
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4332

if.then:                                          ; preds = %land.lhs.true2
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4333
  %7 = bitcast %struct.AVFormatContext* %6 to i8*, !dbg !4333
  %8 = load i64, i64* %us, align 8, !dbg !4335
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.42, i32 0, i32 0), i64 %8), !dbg !4336
  %9 = load i64, i64* %us, align 8, !dbg !4337
  store i64 %9, i64* %retval, align 8, !dbg !4338
  br label %return, !dbg !4338

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !4339
  br label %for.cond, !dbg !4341

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !4342
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4345
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 6, !dbg !4346
  %12 = load i32, i32* %nb_streams, align 4, !dbg !4346
  %cmp4 = icmp ult i32 %10, %12, !dbg !4347
  br i1 %cmp4, label %for.body, label %for.end, !dbg !4348

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %us5, metadata !4349, metadata !2445), !dbg !4351
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %duration, metadata !4352, metadata !2445), !dbg !4353
  %13 = load i32, i32* %i, align 4, !dbg !4354
  %idxprom = sext i32 %13 to i64, !dbg !4355
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4355
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 7, !dbg !4356
  %15 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !4356
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %idxprom, !dbg !4355
  %16 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !4355
  %metadata6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i32 0, i32 11, !dbg !4357
  %17 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata6, align 8, !dbg !4357
  %call7 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4358
  store %struct.AVDictionaryEntry* %call7, %struct.AVDictionaryEntry** %duration, align 8, !dbg !4353
  %18 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %duration, align 8, !dbg !4359
  %tobool8 = icmp ne %struct.AVDictionaryEntry* %18, null, !dbg !4359
  br i1 %tobool8, label %land.lhs.true9, label %if.end15, !dbg !4361

land.lhs.true9:                                   ; preds = %for.body
  %19 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %duration, align 8, !dbg !4362
  %value10 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %19, i32 0, i32 1, !dbg !4364
  %20 = load i8*, i8** %value10, align 8, !dbg !4364
  %call11 = call i32 @av_parse_time(i64* %us5, i8* %20, i32 1), !dbg !4365
  %cmp12 = icmp eq i32 %call11, 0, !dbg !4366
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !4367

if.then13:                                        ; preds = %land.lhs.true9
  %21 = load i64, i64* %max, align 8, !dbg !4368
  %22 = load i64, i64* %us5, align 8, !dbg !4369
  %cmp14 = icmp sgt i64 %21, %22, !dbg !4370
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !4371

cond.true:                                        ; preds = %if.then13
  %23 = load i64, i64* %max, align 8, !dbg !4372
  br label %cond.end, !dbg !4373

cond.false:                                       ; preds = %if.then13
  %24 = load i64, i64* %us5, align 8, !dbg !4374
  br label %cond.end, !dbg !4376

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %23, %cond.true ], [ %24, %cond.false ], !dbg !4377
  store i64 %cond, i64* %max, align 8, !dbg !4379
  br label %if.end15, !dbg !4380

if.end15:                                         ; preds = %cond.end, %land.lhs.true9, %for.body
  br label %for.inc, !dbg !4381

for.inc:                                          ; preds = %if.end15
  %25 = load i32, i32* %i, align 4, !dbg !4382
  %inc = add nsw i32 %25, 1, !dbg !4382
  store i32 %inc, i32* %i, align 4, !dbg !4382
  br label %for.cond, !dbg !4384, !llvm.loop !4385

for.end:                                          ; preds = %for.cond
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4387
  %27 = bitcast %struct.AVFormatContext* %26 to i8*, !dbg !4387
  %28 = load i64, i64* %max, align 8, !dbg !4388
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i32 0, i32 0), i64 %28), !dbg !4389
  %29 = load i64, i64* %max, align 8, !dbg !4390
  store i64 %29, i64* %retval, align 8, !dbg !4391
  br label %return, !dbg !4391

return:                                           ; preds = %for.end, %if.then
  %30 = load i64, i64* %retval, align 8, !dbg !4392
  ret i64 %30, !dbg !4392
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) #7

; Function Attrs: nounwind uwtable
define internal void @put_ebml_float(%struct.AVIOContext* %pb, i32 %elementid, double %val) #0 !dbg !4393 {
entry:
  %f.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr.i, metadata !4396, metadata !2445), !dbg !4401
  %v.i = alloca %union.av_intfloat64, align 8
  call void @llvm.dbg.declare(metadata %union.av_intfloat64* %v.i, metadata !4403, metadata !2445), !dbg !4408
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %val.addr = alloca double, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4409, metadata !2445), !dbg !4410
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !4411, metadata !2445), !dbg !4412
  store double %val, double* %val.addr, align 8
  call void @llvm.dbg.declare(metadata double* %val.addr, metadata !4413, metadata !2445), !dbg !4414
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4415
  %1 = load i32, i32* %elementid.addr, align 4, !dbg !4416
  call void @put_ebml_id(%struct.AVIOContext* %0, i32 %1), !dbg !4417
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4418
  call void @put_ebml_num(%struct.AVIOContext* %2, i64 8, i32 0), !dbg !4419
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4420
  %4 = load double, double* %val.addr, align 8, !dbg !4421
  store double %4, double* %f.addr.i, align 8, !dbg !4422
  %5 = load double, double* %f.addr.i, align 8, !dbg !4423
  %f1.i = bitcast %union.av_intfloat64* %v.i to double*, !dbg !4424
  store double %5, double* %f1.i, align 8, !dbg !4425
  %i.i = bitcast %union.av_intfloat64* %v.i to i64*, !dbg !4426
  %6 = load i64, i64* %i.i, align 8, !dbg !4426
  call void @avio_wb64(%struct.AVIOContext* %3, i64 %6), !dbg !4427
  ret void, !dbg !4429
}

declare void @av_log(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal void @put_ebml_void(%struct.AVIOContext* %pb, i64 %size) #0 !dbg !4430 {
entry:
  %s.addr.i7 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i7, metadata !2441, metadata !2445), !dbg !4433
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !4435
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i64, align 8
  %currentpos = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4437, metadata !2445), !dbg !4438
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4439, metadata !2445), !dbg !4440
  call void @llvm.dbg.declare(metadata i64* %currentpos, metadata !4441, metadata !2445), !dbg !4442
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4443
  store %struct.AVIOContext* %0, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4444
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4445
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11, !dbg !4446
  store i64 %call.i, i64* %currentpos, align 8, !dbg !4442
  br label %do.body, !dbg !4447, !llvm.loop !4448

do.body:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !4449
  %cmp = icmp uge i64 %2, 2, !dbg !4453
  br i1 %cmp, label %if.end, label %if.then, !dbg !4454

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 299), !dbg !4455
  call void @abort() #12, !dbg !4458
  unreachable, !dbg !4460

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !4461

do.end:                                           ; preds = %if.end
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4463
  call void @put_ebml_id(%struct.AVIOContext* %3, i32 236), !dbg !4464
  %4 = load i64, i64* %size.addr, align 8, !dbg !4465
  %cmp1 = icmp ult i64 %4, 10, !dbg !4467
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4468

if.then2:                                         ; preds = %do.end
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4469
  %6 = load i64, i64* %size.addr, align 8, !dbg !4470
  %sub = sub i64 %6, 2, !dbg !4471
  call void @put_ebml_num(%struct.AVIOContext* %5, i64 %sub, i32 0), !dbg !4472
  br label %if.end4, !dbg !4472

if.else:                                          ; preds = %do.end
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4473
  %8 = load i64, i64* %size.addr, align 8, !dbg !4474
  %sub3 = sub i64 %8, 9, !dbg !4475
  call void @put_ebml_num(%struct.AVIOContext* %7, i64 %sub3, i32 8), !dbg !4476
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4477
  %10 = load i64, i64* %currentpos, align 8, !dbg !4478
  %11 = load i64, i64* %size.addr, align 8, !dbg !4479
  %add = add i64 %10, %11, !dbg !4480
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4481
  store %struct.AVIOContext* %12, %struct.AVIOContext** %s.addr.i7, align 8, !dbg !4482
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i7, align 8, !dbg !4483
  %call.i8 = call i64 @avio_seek(%struct.AVIOContext* %13, i64 0, i32 1) #11, !dbg !4484
  %sub6 = sub i64 %add, %call.i8, !dbg !4485
  %conv = trunc i64 %sub6 to i32, !dbg !4478
  call void @ffio_fill(%struct.AVIOContext* %9, i32 0, i32 %conv), !dbg !4486
  ret void, !dbg !4488
}

; Function Attrs: nounwind uwtable
define internal void @end_ebml_master_crc32_preliminary(%struct.AVIOContext* %pb, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %mkv, i64 %master.coerce0, i32 %master.coerce1) #0 !dbg !4489 {
entry:
  %master = alloca %struct.ebml_master, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %dyn_cp.addr = alloca %struct.AVIOContext**, align 8
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %buf = alloca i8*, align 8
  %size = alloca i32, align 4
  %0 = bitcast %struct.ebml_master* %master to { i64, i32 }*
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  store i64 %master.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %master.coerce1, i32* %2, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4492, metadata !2445), !dbg !4493
  store %struct.AVIOContext** %dyn_cp, %struct.AVIOContext*** %dyn_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %dyn_cp.addr, metadata !4494, metadata !2445), !dbg !4495
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !4496, metadata !2445), !dbg !4497
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %master, metadata !4498, metadata !2445), !dbg !4499
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4500
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %3, i32 0, i32 19, !dbg !4502
  %4 = load i32, i32* %seekable, align 8, !dbg !4502
  %and = and i32 %4, 1, !dbg !4503
  %tobool = icmp ne i32 %and, 0, !dbg !4503
  br i1 %tobool, label %if.then, label %if.end, !dbg !4504

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4505, metadata !2445), !dbg !4507
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4508, metadata !2445), !dbg !4509
  %5 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4510
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8, !dbg !4511
  %call = call i32 @avio_get_dyn_buf(%struct.AVIOContext* %6, i8** %buf), !dbg !4512
  store i32 %call, i32* %size, align 4, !dbg !4509
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4513
  %8 = load i8*, i8** %buf, align 8, !dbg !4514
  %9 = load i32, i32* %size, align 4, !dbg !4515
  call void @avio_write(%struct.AVIOContext* %7, i8* %8, i32 %9), !dbg !4516
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4517
  %11 = bitcast %struct.ebml_master* %master to { i64, i32 }*, !dbg !4518
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0, !dbg !4518
  %13 = load i64, i64* %12, align 8, !dbg !4518
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1, !dbg !4518
  %15 = load i32, i32* %14, align 8, !dbg !4518
  call void @end_ebml_master(%struct.AVIOContext* %10, i64 %13, i32 %15), !dbg !4518
  br label %if.end, !dbg !4519

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4520
}

; Function Attrs: nounwind uwtable
define internal void @end_ebml_master_crc32(%struct.AVIOContext* %pb, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %mkv, i64 %master.coerce0, i32 %master.coerce1) #0 !dbg !4521 {
entry:
  %master = alloca %struct.ebml_master, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %dyn_cp.addr = alloca %struct.AVIOContext**, align 8
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %buf = alloca i8*, align 8
  %crc = alloca [4 x i8], align 1
  %size = alloca i32, align 4
  %skip = alloca i32, align 4
  %0 = bitcast %struct.ebml_master* %master to { i64, i32 }*
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  store i64 %master.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %master.coerce1, i32* %2, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4522, metadata !2445), !dbg !4523
  store %struct.AVIOContext** %dyn_cp, %struct.AVIOContext*** %dyn_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %dyn_cp.addr, metadata !4524, metadata !2445), !dbg !4525
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !4526, metadata !2445), !dbg !4527
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %master, metadata !4528, metadata !2445), !dbg !4529
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4530, metadata !2445), !dbg !4531
  call void @llvm.dbg.declare(metadata [4 x i8]* %crc, metadata !4532, metadata !2445), !dbg !4534
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4535, metadata !2445), !dbg !4536
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4537, metadata !2445), !dbg !4538
  store i32 0, i32* %skip, align 4, !dbg !4538
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4539
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %3, i32 0, i32 19, !dbg !4541
  %4 = load i32, i32* %seekable, align 8, !dbg !4541
  %and = and i32 %4, 1, !dbg !4542
  %tobool = icmp ne i32 %and, 0, !dbg !4542
  br i1 %tobool, label %if.then, label %if.else, !dbg !4543

if.then:                                          ; preds = %entry
  %5 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4544
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8, !dbg !4546
  %call = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %6, i8** %buf), !dbg !4547
  store i32 %call, i32* %size, align 4, !dbg !4548
  %7 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !4549
  %write_crc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %7, i32 0, i32 30, !dbg !4551
  %8 = load i32, i32* %write_crc, align 4, !dbg !4551
  %tobool1 = icmp ne i32 %8, 0, !dbg !4549
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !4552

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !4553
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %9, i32 0, i32 1, !dbg !4555
  %10 = load i32, i32* %mode, align 8, !dbg !4555
  %cmp = icmp ne i32 %10, 2, !dbg !4556
  br i1 %cmp, label %if.then2, label %if.end, !dbg !4557

if.then2:                                         ; preds = %land.lhs.true
  store i32 6, i32* %skip, align 4, !dbg !4558
  %call3 = call i32* @av_crc_get_table(i32 4), !dbg !4560
  %11 = load i8*, i8** %buf, align 8, !dbg !4561
  %12 = load i32, i32* %skip, align 4, !dbg !4562
  %idx.ext = sext i32 %12 to i64, !dbg !4563
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !4563
  %13 = load i32, i32* %size, align 4, !dbg !4564
  %14 = load i32, i32* %skip, align 4, !dbg !4565
  %sub = sub nsw i32 %13, %14, !dbg !4566
  %conv = sext i32 %sub to i64, !dbg !4564
  %call4 = call i32 @av_crc(i32* %call3, i32 -1, i8* %add.ptr, i64 %conv) #10, !dbg !4567
  %xor = xor i32 %call4, -1, !dbg !4569
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %crc, i32 0, i32 0, !dbg !4570
  %15 = bitcast i8* %arraydecay to %union.unaligned_32*, !dbg !4570
  %l = bitcast %union.unaligned_32* %15 to i32*, !dbg !4570
  store i32 %xor, i32* %l, align 1, !dbg !4571
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4572
  %arraydecay5 = getelementptr inbounds [4 x i8], [4 x i8]* %crc, i32 0, i32 0, !dbg !4573
  call void @put_ebml_binary(%struct.AVIOContext* %16, i32 191, i8* %arraydecay5, i32 4), !dbg !4574
  br label %if.end, !dbg !4575

if.end:                                           ; preds = %if.then2, %land.lhs.true, %if.then
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4576
  %18 = load i8*, i8** %buf, align 8, !dbg !4577
  %19 = load i32, i32* %skip, align 4, !dbg !4578
  %idx.ext6 = sext i32 %19 to i64, !dbg !4579
  %add.ptr7 = getelementptr inbounds i8, i8* %18, i64 %idx.ext6, !dbg !4579
  %20 = load i32, i32* %size, align 4, !dbg !4580
  %21 = load i32, i32* %skip, align 4, !dbg !4581
  %sub8 = sub nsw i32 %20, %21, !dbg !4582
  call void @avio_write(%struct.AVIOContext* %17, i8* %add.ptr7, i32 %sub8), !dbg !4583
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4584
  %23 = bitcast %struct.ebml_master* %master to { i64, i32 }*, !dbg !4585
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0, !dbg !4585
  %25 = load i64, i64* %24, align 8, !dbg !4585
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1, !dbg !4585
  %27 = load i32, i32* %26, align 8, !dbg !4585
  call void @end_ebml_master(%struct.AVIOContext* %22, i64 %25, i32 %27), !dbg !4585
  br label %if.end10, !dbg !4586

if.else:                                          ; preds = %entry
  %28 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4587
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %28, align 8, !dbg !4589
  %30 = bitcast %struct.ebml_master* %master to { i64, i32 }*, !dbg !4590
  %31 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 0, !dbg !4590
  %32 = load i64, i64* %31, align 8, !dbg !4590
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 1, !dbg !4590
  %34 = load i32, i32* %33, align 8, !dbg !4590
  call void @end_ebml_master(%struct.AVIOContext* %29, i64 %32, i32 %34), !dbg !4590
  %35 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4591
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %35, align 8, !dbg !4592
  %call9 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %36, i8** %buf), !dbg !4593
  store i32 %call9, i32* %size, align 4, !dbg !4594
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4595
  %38 = load i8*, i8** %buf, align 8, !dbg !4596
  %39 = load i32, i32* %size, align 4, !dbg !4597
  call void @avio_write(%struct.AVIOContext* %37, i8* %38, i32 %39), !dbg !4598
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  %40 = load i8*, i8** %buf, align 8, !dbg !4599
  call void @av_free(i8* %40), !dbg !4600
  %41 = load %struct.AVIOContext**, %struct.AVIOContext*** %dyn_cp.addr, align 8, !dbg !4601
  store %struct.AVIOContext* null, %struct.AVIOContext** %41, align 8, !dbg !4602
  ret void, !dbg !4603
}

declare noalias i8* @av_mallocz(i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_tracks(%struct.AVFormatContext* %s) #0 !dbg !4604 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !4605
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %default_stream_exists = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4607, metadata !2445), !dbg !4608
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !4609, metadata !2445), !dbg !4610
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4611
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4612
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4612
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !4611
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4610
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4613, metadata !2445), !dbg !4614
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4615
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !4616
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4616
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !4614
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4617, metadata !2445), !dbg !4618
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4619, metadata !2445), !dbg !4620
  call void @llvm.dbg.declare(metadata i32* %default_stream_exists, metadata !4621, metadata !2445), !dbg !4622
  store i32 0, i32* %default_stream_exists, align 4, !dbg !4622
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4623
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 16, !dbg !4624
  %6 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !4624
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4625
  store %struct.AVIOContext* %7, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4626
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4627
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %8, i64 0, i32 1) #11, !dbg !4628
  %call2 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %6, i32 374648427, i64 %call.i), !dbg !4629
  store i32 %call2, i32* %ret, align 4, !dbg !4631
  %9 = load i32, i32* %ret, align 4, !dbg !4632
  %cmp = icmp slt i32 %9, 0, !dbg !4634
  br i1 %cmp, label %if.then, label %if.end, !dbg !4635

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !4636
  store i32 %10, i32* %retval, align 4, !dbg !4637
  br label %return, !dbg !4637

if.end:                                           ; preds = %entry
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4638
  %12 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4639
  %tracks_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %12, i32 0, i32 7, !dbg !4640
  %13 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4641
  %14 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4642
  %tracks_master = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %14, i32 0, i32 8, !dbg !4643
  %call3 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %11, %struct.AVIOContext** %tracks_bc, %struct.MatroskaMuxContext* %13, %struct.ebml_master* %tracks_master, i32 374648427, i64 0), !dbg !4644
  store i32 %call3, i32* %ret, align 4, !dbg !4645
  %15 = load i32, i32* %ret, align 4, !dbg !4646
  %cmp4 = icmp slt i32 %15, 0, !dbg !4648
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4649

if.then5:                                         ; preds = %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !4650
  store i32 %16, i32* %retval, align 4, !dbg !4651
  br label %return, !dbg !4651

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4652
  br label %for.cond, !dbg !4654

for.cond:                                         ; preds = %for.inc, %if.end6
  %17 = load i32, i32* %i, align 4, !dbg !4655
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4658
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 6, !dbg !4659
  %19 = load i32, i32* %nb_streams, align 4, !dbg !4659
  %cmp7 = icmp ult i32 %17, %19, !dbg !4660
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4661

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !4662, metadata !2445), !dbg !4664
  %20 = load i32, i32* %i, align 4, !dbg !4665
  %idxprom = sext i32 %20 to i64, !dbg !4666
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4666
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 7, !dbg !4667
  %22 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !4667
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %22, i64 %idxprom, !dbg !4666
  %23 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !4666
  store %struct.AVStream* %23, %struct.AVStream** %st, align 8, !dbg !4664
  %24 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4668
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 8, !dbg !4669
  %25 = load i32, i32* %disposition, align 8, !dbg !4669
  %and = and i32 %25, 1, !dbg !4670
  %26 = load i32, i32* %default_stream_exists, align 4, !dbg !4671
  %or = or i32 %26, %and, !dbg !4671
  store i32 %or, i32* %default_stream_exists, align 4, !dbg !4671
  br label %for.inc, !dbg !4672

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !4673
  %inc = add nsw i32 %27, 1, !dbg !4673
  store i32 %inc, i32* %i, align 4, !dbg !4673
  br label %for.cond, !dbg !4675, !llvm.loop !4676

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4678
  br label %for.cond8, !dbg !4680

for.cond8:                                        ; preds = %for.inc17, %for.end
  %28 = load i32, i32* %i, align 4, !dbg !4681
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4684
  %nb_streams9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i32 0, i32 6, !dbg !4685
  %30 = load i32, i32* %nb_streams9, align 4, !dbg !4685
  %cmp10 = icmp ult i32 %28, %30, !dbg !4686
  br i1 %cmp10, label %for.body11, label %for.end19, !dbg !4687

for.body11:                                       ; preds = %for.cond8
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4688
  %32 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4690
  %33 = load i32, i32* %i, align 4, !dbg !4691
  %34 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4692
  %tracks_bc12 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %34, i32 0, i32 7, !dbg !4693
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc12, align 8, !dbg !4693
  %36 = load i32, i32* %default_stream_exists, align 4, !dbg !4694
  %call13 = call i32 @mkv_write_track(%struct.AVFormatContext* %31, %struct.MatroskaMuxContext* %32, i32 %33, %struct.AVIOContext* %35, i32 %36), !dbg !4695
  store i32 %call13, i32* %ret, align 4, !dbg !4696
  %37 = load i32, i32* %ret, align 4, !dbg !4697
  %cmp14 = icmp slt i32 %37, 0, !dbg !4699
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4700

if.then15:                                        ; preds = %for.body11
  %38 = load i32, i32* %ret, align 4, !dbg !4701
  store i32 %38, i32* %retval, align 4, !dbg !4702
  br label %return, !dbg !4702

if.end16:                                         ; preds = %for.body11
  br label %for.inc17, !dbg !4703

for.inc17:                                        ; preds = %if.end16
  %39 = load i32, i32* %i, align 4, !dbg !4704
  %inc18 = add nsw i32 %39, 1, !dbg !4704
  store i32 %inc18, i32* %i, align 4, !dbg !4704
  br label %for.cond8, !dbg !4706, !llvm.loop !4707

for.end19:                                        ; preds = %for.cond8
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4709
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %40, i32 0, i32 19, !dbg !4711
  %41 = load i32, i32* %seekable, align 8, !dbg !4711
  %and20 = and i32 %41, 1, !dbg !4712
  %tobool = icmp ne i32 %and20, 0, !dbg !4712
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4713

land.lhs.true:                                    ; preds = %for.end19
  %42 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4714
  %is_live = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %42, i32 0, i32 29, !dbg !4716
  %43 = load i32, i32* %is_live, align 8, !dbg !4716
  %tobool21 = icmp ne i32 %43, 0, !dbg !4714
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !4717

if.then22:                                        ; preds = %land.lhs.true
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4718
  %45 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4719
  %tracks_bc23 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %45, i32 0, i32 7, !dbg !4720
  %46 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4721
  %47 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4722
  %tracks_master24 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %47, i32 0, i32 8, !dbg !4723
  %48 = bitcast %struct.ebml_master* %tracks_master24 to { i64, i32 }*, !dbg !4724
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %48, i32 0, i32 0, !dbg !4724
  %50 = load i64, i64* %49, align 8, !dbg !4724
  %51 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %48, i32 0, i32 1, !dbg !4724
  %52 = load i32, i32* %51, align 8, !dbg !4724
  call void @end_ebml_master_crc32_preliminary(%struct.AVIOContext* %44, %struct.AVIOContext** %tracks_bc23, %struct.MatroskaMuxContext* %46, i64 %50, i32 %52), !dbg !4724
  br label %if.end27, !dbg !4724

if.else:                                          ; preds = %land.lhs.true, %for.end19
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4725
  %54 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4726
  %tracks_bc25 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %54, i32 0, i32 7, !dbg !4727
  %55 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4728
  %56 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4729
  %tracks_master26 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %56, i32 0, i32 8, !dbg !4730
  %57 = bitcast %struct.ebml_master* %tracks_master26 to { i64, i32 }*, !dbg !4731
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %57, i32 0, i32 0, !dbg !4731
  %59 = load i64, i64* %58, align 8, !dbg !4731
  %60 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %57, i32 0, i32 1, !dbg !4731
  %61 = load i32, i32* %60, align 8, !dbg !4731
  call void @end_ebml_master_crc32(%struct.AVIOContext* %53, %struct.AVIOContext** %tracks_bc25, %struct.MatroskaMuxContext* %55, i64 %59, i32 %61), !dbg !4731
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then22
  store i32 0, i32* %retval, align 4, !dbg !4732
  br label %return, !dbg !4732

return:                                           ; preds = %if.end27, %if.then15, %if.then5, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !4733
  ret i32 %62, !dbg !4733
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_chapters(%struct.AVFormatContext* %s) #0 !dbg !4734 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !4735
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %chapters = alloca %struct.ebml_master, align 8
  %editionentry = alloca %struct.ebml_master, align 8
  %scale = alloca %struct.AVRational, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %chapteratom = alloca %struct.ebml_master, align 8
  %chapterdisplay = alloca %struct.ebml_master, align 8
  %c = alloca %struct.AVChapter*, align 8
  %chapterstart = alloca i64, align 8
  %chapterend = alloca i64, align 8
  %t = alloca %struct.AVDictionaryEntry*, align 8
  %coerce28 = alloca %struct.ebml_master, align 8
  %coerce38 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4737, metadata !2445), !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !4739, metadata !2445), !dbg !4740
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4741
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4742
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4742
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !4741
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4740
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !4743, metadata !2445), !dbg !4744
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4745, metadata !2445), !dbg !4746
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4747
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !4748
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4748
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !4746
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %chapters, metadata !4749, metadata !2445), !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %editionentry, metadata !4751, metadata !2445), !dbg !4752
  call void @llvm.dbg.declare(metadata %struct.AVRational* %scale, metadata !4753, metadata !2445), !dbg !4754
  %5 = bitcast %struct.AVRational* %scale to i8*, !dbg !4754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast (%struct.AVRational* @mkv_write_chapters.scale to i8*), i64 8, i32 4, i1 false), !dbg !4754
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4755, metadata !2445), !dbg !4756
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4757, metadata !2445), !dbg !4758
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4759
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 27, !dbg !4761
  %7 = load i32, i32* %nb_chapters, align 4, !dbg !4761
  %tobool = icmp ne i32 %7, 0, !dbg !4759
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4762

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4763
  %wrote_chapters = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %8, i32 0, i32 32, !dbg !4765
  %9 = load i32, i32* %wrote_chapters, align 4, !dbg !4765
  %tobool2 = icmp ne i32 %9, 0, !dbg !4763
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4766

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4767
  br label %return, !dbg !4767

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4768
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %10, i32 0, i32 16, !dbg !4769
  %11 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !4769
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4770
  store %struct.AVIOContext* %12, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4771
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4772
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %13, i64 0, i32 1) #11, !dbg !4773
  %call3 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %11, i32 272869232, i64 %call.i), !dbg !4774
  store i32 %call3, i32* %ret, align 4, !dbg !4776
  %14 = load i32, i32* %ret, align 4, !dbg !4777
  %cmp = icmp slt i32 %14, 0, !dbg !4779
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4780

if.then4:                                         ; preds = %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !4781
  store i32 %15, i32* %retval, align 4, !dbg !4783
  br label %return, !dbg !4783

if.end5:                                          ; preds = %if.end
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4784
  %17 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4785
  %call6 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %16, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %17, %struct.ebml_master* %chapters, i32 272869232, i64 0), !dbg !4786
  store i32 %call6, i32* %ret, align 4, !dbg !4787
  %18 = load i32, i32* %ret, align 4, !dbg !4788
  %cmp7 = icmp slt i32 %18, 0, !dbg !4790
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4791

if.then8:                                         ; preds = %if.end5
  %19 = load i32, i32* %ret, align 4, !dbg !4792
  store i32 %19, i32* %retval, align 4, !dbg !4794
  br label %return, !dbg !4794

if.end9:                                          ; preds = %if.end5
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4795
  %call10 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %20, i32 17849, i64 0), !dbg !4796
  %21 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !4796
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0, !dbg !4796
  %23 = extractvalue { i64, i32 } %call10, 0, !dbg !4796
  store i64 %23, i64* %22, align 8, !dbg !4796
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1, !dbg !4796
  %25 = extractvalue { i64, i32 } %call10, 1, !dbg !4796
  store i32 %25, i32* %24, align 8, !dbg !4796
  %26 = bitcast %struct.ebml_master* %editionentry to i8*, !dbg !4796
  %27 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !4796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !4797
  %28 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4798
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %28, i32 0, i32 1, !dbg !4800
  %29 = load i32, i32* %mode, align 8, !dbg !4800
  %cmp11 = icmp ne i32 %29, 2, !dbg !4801
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4802

if.then12:                                        ; preds = %if.end9
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4803
  call void @put_ebml_uint(%struct.AVIOContext* %30, i32 17883, i64 1), !dbg !4805
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4806
  call void @put_ebml_uint(%struct.AVIOContext* %31, i32 17853, i64 0), !dbg !4807
  br label %if.end13, !dbg !4808

if.end13:                                         ; preds = %if.then12, %if.end9
  store i32 0, i32* %i, align 4, !dbg !4809
  br label %for.cond, !dbg !4811

for.cond:                                         ; preds = %for.inc, %if.end13
  %32 = load i32, i32* %i, align 4, !dbg !4812
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4815
  %nb_chapters14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 27, !dbg !4816
  %34 = load i32, i32* %nb_chapters14, align 4, !dbg !4816
  %cmp15 = icmp ult i32 %32, %34, !dbg !4817
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4818

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %chapteratom, metadata !4819, metadata !2445), !dbg !4821
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %chapterdisplay, metadata !4822, metadata !2445), !dbg !4823
  call void @llvm.dbg.declare(metadata %struct.AVChapter** %c, metadata !4824, metadata !2445), !dbg !4825
  %35 = load i32, i32* %i, align 4, !dbg !4826
  %idxprom = sext i32 %35 to i64, !dbg !4827
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4827
  %chapters16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i32 0, i32 28, !dbg !4828
  %37 = load %struct.AVChapter**, %struct.AVChapter*** %chapters16, align 8, !dbg !4828
  %arrayidx = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %37, i64 %idxprom, !dbg !4827
  %38 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx, align 8, !dbg !4827
  store %struct.AVChapter* %38, %struct.AVChapter** %c, align 8, !dbg !4825
  call void @llvm.dbg.declare(metadata i64* %chapterstart, metadata !4829, metadata !2445), !dbg !4830
  %39 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4831
  %start = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %39, i32 0, i32 2, !dbg !4832
  %40 = load i64, i64* %start, align 8, !dbg !4832
  %41 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4833
  %time_base = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %41, i32 0, i32 1, !dbg !4834
  %42 = bitcast %struct.AVRational* %time_base to i64*, !dbg !4835
  %43 = load i64, i64* %42, align 4, !dbg !4835
  %44 = bitcast %struct.AVRational* %scale to i64*, !dbg !4835
  %45 = load i64, i64* %44, align 4, !dbg !4835
  %call17 = call i64 @av_rescale_q(i64 %40, i64 %43, i64 %45) #2, !dbg !4835
  store i64 %call17, i64* %chapterstart, align 8, !dbg !4830
  call void @llvm.dbg.declare(metadata i64* %chapterend, metadata !4836, metadata !2445), !dbg !4837
  %46 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4838
  %end = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %46, i32 0, i32 3, !dbg !4839
  %47 = load i64, i64* %end, align 8, !dbg !4839
  %48 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4840
  %time_base18 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %48, i32 0, i32 1, !dbg !4841
  %49 = bitcast %struct.AVRational* %time_base18 to i64*, !dbg !4842
  %50 = load i64, i64* %49, align 4, !dbg !4842
  %51 = bitcast %struct.AVRational* %scale to i64*, !dbg !4842
  %52 = load i64, i64* %51, align 4, !dbg !4842
  %call19 = call i64 @av_rescale_q(i64 %47, i64 %50, i64 %52) #2, !dbg !4842
  store i64 %call19, i64* %chapterend, align 8, !dbg !4837
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !4843, metadata !2445), !dbg !4844
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %t, align 8, !dbg !4844
  %53 = load i64, i64* %chapterstart, align 8, !dbg !4845
  %cmp20 = icmp slt i64 %53, 0, !dbg !4847
  br i1 %cmp20, label %if.then25, label %lor.lhs.false21, !dbg !4848

lor.lhs.false21:                                  ; preds = %for.body
  %54 = load i64, i64* %chapterstart, align 8, !dbg !4849
  %55 = load i64, i64* %chapterend, align 8, !dbg !4851
  %cmp22 = icmp sgt i64 %54, %55, !dbg !4852
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23, !dbg !4853

lor.lhs.false23:                                  ; preds = %lor.lhs.false21
  %56 = load i64, i64* %chapterend, align 8, !dbg !4854
  %cmp24 = icmp slt i64 %56, 0, !dbg !4856
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !4857

if.then25:                                        ; preds = %lor.lhs.false23, %lor.lhs.false21, %for.body
  %57 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4858
  %58 = bitcast %struct.AVFormatContext* %57 to i8*, !dbg !4858
  %59 = load i64, i64* %chapterstart, align 8, !dbg !4860
  %60 = load i64, i64* %chapterend, align 8, !dbg !4861
  call void (i8*, i32, i8*, ...) @av_log(i8* %58, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.70, i32 0, i32 0), i64 %59, i64 %60), !dbg !4862
  store i32 -1094995529, i32* %retval, align 4, !dbg !4863
  br label %return, !dbg !4863

if.end26:                                         ; preds = %lor.lhs.false23
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4864
  %call27 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %61, i32 182, i64 0), !dbg !4865
  %62 = bitcast %struct.ebml_master* %coerce28 to { i64, i32 }*, !dbg !4865
  %63 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 0, !dbg !4865
  %64 = extractvalue { i64, i32 } %call27, 0, !dbg !4865
  store i64 %64, i64* %63, align 8, !dbg !4865
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 1, !dbg !4865
  %66 = extractvalue { i64, i32 } %call27, 1, !dbg !4865
  store i32 %66, i32* %65, align 8, !dbg !4865
  %67 = bitcast %struct.ebml_master* %chapteratom to i8*, !dbg !4865
  %68 = bitcast %struct.ebml_master* %coerce28 to i8*, !dbg !4865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 16, i32 8, i1 false), !dbg !4866
  %69 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4868
  %70 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4869
  %id = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %70, i32 0, i32 0, !dbg !4870
  %71 = load i32, i32* %id, align 8, !dbg !4870
  %72 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4871
  %chapter_id_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %72, i32 0, i32 31, !dbg !4872
  %73 = load i32, i32* %chapter_id_offset, align 8, !dbg !4872
  %add = add i32 %71, %73, !dbg !4873
  %conv = zext i32 %add to i64, !dbg !4869
  call void @put_ebml_uint(%struct.AVIOContext* %69, i32 29636, i64 %conv), !dbg !4874
  %74 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4875
  %75 = load i64, i64* %chapterstart, align 8, !dbg !4876
  call void @put_ebml_uint(%struct.AVIOContext* %74, i32 145, i64 %75), !dbg !4877
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4878
  %77 = load i64, i64* %chapterend, align 8, !dbg !4879
  call void @put_ebml_uint(%struct.AVIOContext* %76, i32 146, i64 %77), !dbg !4880
  %78 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4881
  %mode29 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %78, i32 0, i32 1, !dbg !4883
  %79 = load i32, i32* %mode29, align 8, !dbg !4883
  %cmp30 = icmp ne i32 %79, 2, !dbg !4884
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4885

if.then32:                                        ; preds = %if.end26
  %80 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4886
  call void @put_ebml_uint(%struct.AVIOContext* %80, i32 152, i64 0), !dbg !4888
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4889
  call void @put_ebml_uint(%struct.AVIOContext* %81, i32 17816, i64 1), !dbg !4890
  br label %if.end33, !dbg !4891

if.end33:                                         ; preds = %if.then32, %if.end26
  %82 = load %struct.AVChapter*, %struct.AVChapter** %c, align 8, !dbg !4892
  %metadata = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %82, i32 0, i32 4, !dbg !4894
  %83 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !4894
  %call34 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4895
  store %struct.AVDictionaryEntry* %call34, %struct.AVDictionaryEntry** %t, align 8, !dbg !4896
  %tobool35 = icmp ne %struct.AVDictionaryEntry* %call34, null, !dbg !4896
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !4897

if.then36:                                        ; preds = %if.end33
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4898
  %call37 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %84, i32 128, i64 0), !dbg !4900
  %85 = bitcast %struct.ebml_master* %coerce38 to { i64, i32 }*, !dbg !4900
  %86 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %85, i32 0, i32 0, !dbg !4900
  %87 = extractvalue { i64, i32 } %call37, 0, !dbg !4900
  store i64 %87, i64* %86, align 8, !dbg !4900
  %88 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %85, i32 0, i32 1, !dbg !4900
  %89 = extractvalue { i64, i32 } %call37, 1, !dbg !4900
  store i32 %89, i32* %88, align 8, !dbg !4900
  %90 = bitcast %struct.ebml_master* %chapterdisplay to i8*, !dbg !4900
  %91 = bitcast %struct.ebml_master* %coerce38 to i8*, !dbg !4900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 16, i32 8, i1 false), !dbg !4901
  %92 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4903
  %93 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !4904
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %93, i32 0, i32 1, !dbg !4905
  %94 = load i8*, i8** %value, align 8, !dbg !4905
  call void @put_ebml_string(%struct.AVIOContext* %92, i32 133, i8* %94), !dbg !4906
  %95 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4907
  call void @put_ebml_string(%struct.AVIOContext* %95, i32 17276, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0)), !dbg !4908
  %96 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4909
  %97 = bitcast %struct.ebml_master* %chapterdisplay to { i64, i32 }*, !dbg !4910
  %98 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 0, !dbg !4910
  %99 = load i64, i64* %98, align 8, !dbg !4910
  %100 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 1, !dbg !4910
  %101 = load i32, i32* %100, align 8, !dbg !4910
  call void @end_ebml_master(%struct.AVIOContext* %96, i64 %99, i32 %101), !dbg !4910
  br label %if.end39, !dbg !4911

if.end39:                                         ; preds = %if.then36, %if.end33
  %102 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4912
  %103 = bitcast %struct.ebml_master* %chapteratom to { i64, i32 }*, !dbg !4913
  %104 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %103, i32 0, i32 0, !dbg !4913
  %105 = load i64, i64* %104, align 8, !dbg !4913
  %106 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %103, i32 0, i32 1, !dbg !4913
  %107 = load i32, i32* %106, align 8, !dbg !4913
  call void @end_ebml_master(%struct.AVIOContext* %102, i64 %105, i32 %107), !dbg !4913
  br label %for.inc, !dbg !4914

for.inc:                                          ; preds = %if.end39
  %108 = load i32, i32* %i, align 4, !dbg !4915
  %inc = add nsw i32 %108, 1, !dbg !4915
  store i32 %inc, i32* %i, align 4, !dbg !4915
  br label %for.cond, !dbg !4917, !llvm.loop !4918

for.end:                                          ; preds = %for.cond
  %109 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !4920
  %110 = bitcast %struct.ebml_master* %editionentry to { i64, i32 }*, !dbg !4921
  %111 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %110, i32 0, i32 0, !dbg !4921
  %112 = load i64, i64* %111, align 8, !dbg !4921
  %113 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %110, i32 0, i32 1, !dbg !4921
  %114 = load i32, i32* %113, align 8, !dbg !4921
  call void @end_ebml_master(%struct.AVIOContext* %109, i64 %112, i32 %114), !dbg !4921
  %115 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4922
  %116 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4923
  %117 = bitcast %struct.ebml_master* %chapters to { i64, i32 }*, !dbg !4924
  %118 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %117, i32 0, i32 0, !dbg !4924
  %119 = load i64, i64* %118, align 8, !dbg !4924
  %120 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %117, i32 0, i32 1, !dbg !4924
  %121 = load i32, i32* %120, align 8, !dbg !4924
  call void @end_ebml_master_crc32(%struct.AVIOContext* %115, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %116, i64 %119, i32 %121), !dbg !4924
  %122 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4925
  %wrote_chapters40 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %122, i32 0, i32 32, !dbg !4926
  store i32 1, i32* %wrote_chapters40, align 4, !dbg !4927
  store i32 0, i32* %retval, align 4, !dbg !4928
  br label %return, !dbg !4928

return:                                           ; preds = %for.end, %if.then25, %if.then8, %if.then4, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !4929
  ret i32 %123, !dbg !4929
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_attachments(%struct.AVFormatContext* %s) #0 !dbg !4930 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !4931
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %attachments = alloca %struct.ebml_master, align 8
  %c = alloca %struct.AVLFG, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %attached_file = alloca %struct.ebml_master, align 8
  %attachment = alloca %struct.mkv_attachment*, align 8
  %t = alloca %struct.AVDictionaryEntry*, align 8
  %mimetype = alloca i8*, align 8
  %fileuid = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %i48 = alloca i32, align 4
  %sha = alloca %struct.AVSHA*, align 8
  %digest = alloca [20 x i8], align 16
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4933, metadata !2445), !dbg !4934
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !4935, metadata !2445), !dbg !4936
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4937
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4938
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4938
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !4937
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4936
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !4939, metadata !2445), !dbg !4940
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4941, metadata !2445), !dbg !4942
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4943
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !4944
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4944
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !4942
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %attachments, metadata !4945, metadata !2445), !dbg !4946
  call void @llvm.dbg.declare(metadata %struct.AVLFG* %c, metadata !4947, metadata !2445), !dbg !4948
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4949, metadata !2445), !dbg !4950
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4951, metadata !2445), !dbg !4952
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4953
  %have_attachments = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 21, !dbg !4955
  %6 = load i32, i32* %have_attachments, align 8, !dbg !4955
  %tobool = icmp ne i32 %6, 0, !dbg !4953
  br i1 %tobool, label %if.end, label %if.then, !dbg !4956

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4957
  br label %return, !dbg !4957

if.end:                                           ; preds = %entry
  %call = call noalias i8* @av_mallocz(i64 16), !dbg !4958
  %7 = bitcast i8* %call to %struct.mkv_attachments*, !dbg !4958
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4959
  %attachments2 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %8, i32 0, i32 19, !dbg !4960
  store %struct.mkv_attachments* %7, %struct.mkv_attachments** %attachments2, align 8, !dbg !4961
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4962
  %attachments3 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %9, i32 0, i32 19, !dbg !4964
  %10 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments3, align 8, !dbg !4964
  %tobool4 = icmp ne %struct.mkv_attachments* %10, null, !dbg !4962
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4965

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !4966
  br label %return, !dbg !4966

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @av_get_random_seed(), !dbg !4967
  call void @av_lfg_init(%struct.AVLFG* %c, i32 %call7), !dbg !4968
  %11 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4970
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %11, i32 0, i32 16, !dbg !4971
  %12 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !4971
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4972
  store %struct.AVIOContext* %13, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4973
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4974
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %14, i64 0, i32 1) #11, !dbg !4975
  %call9 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %12, i32 423732329, i64 %call.i), !dbg !4976
  store i32 %call9, i32* %ret, align 4, !dbg !4977
  %15 = load i32, i32* %ret, align 4, !dbg !4978
  %cmp = icmp slt i32 %15, 0, !dbg !4980
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !4981

if.then10:                                        ; preds = %if.end6
  %16 = load i32, i32* %ret, align 4, !dbg !4982
  store i32 %16, i32* %retval, align 4, !dbg !4984
  br label %return, !dbg !4984

if.end11:                                         ; preds = %if.end6
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4985
  %18 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !4986
  %call12 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %17, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %18, %struct.ebml_master* %attachments, i32 423732329, i64 0), !dbg !4987
  store i32 %call12, i32* %ret, align 4, !dbg !4988
  %19 = load i32, i32* %ret, align 4, !dbg !4989
  %cmp13 = icmp slt i32 %19, 0, !dbg !4991
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !4992

if.then14:                                        ; preds = %if.end11
  %20 = load i32, i32* %ret, align 4, !dbg !4993
  store i32 %20, i32* %retval, align 4, !dbg !4995
  br label %return, !dbg !4995

if.end15:                                         ; preds = %if.end11
  store i32 0, i32* %i, align 4, !dbg !4996
  br label %for.cond, !dbg !4998

for.cond:                                         ; preds = %for.inc129, %if.end15
  %21 = load i32, i32* %i, align 4, !dbg !4999
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5002
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 6, !dbg !5003
  %23 = load i32, i32* %nb_streams, align 4, !dbg !5003
  %cmp16 = icmp ult i32 %21, %23, !dbg !5004
  br i1 %cmp16, label %for.body, label %for.end131, !dbg !5005

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !5006, metadata !2445), !dbg !5008
  %24 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom = sext i32 %24 to i64, !dbg !5010
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5010
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 7, !dbg !5011
  %26 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !5011
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %26, i64 %idxprom, !dbg !5010
  %27 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !5010
  store %struct.AVStream* %27, %struct.AVStream** %st, align 8, !dbg !5008
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %attached_file, metadata !5012, metadata !2445), !dbg !5013
  call void @llvm.dbg.declare(metadata %struct.mkv_attachment** %attachment, metadata !5014, metadata !2445), !dbg !5015
  %28 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5016
  %attachments17 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %28, i32 0, i32 19, !dbg !5017
  %29 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments17, align 8, !dbg !5017
  %entries = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %29, i32 0, i32 0, !dbg !5018
  %30 = load %struct.mkv_attachment*, %struct.mkv_attachment** %entries, align 8, !dbg !5018
  store %struct.mkv_attachment* %30, %struct.mkv_attachment** %attachment, align 8, !dbg !5015
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !5019, metadata !2445), !dbg !5020
  call void @llvm.dbg.declare(metadata i8** %mimetype, metadata !5021, metadata !2445), !dbg !5022
  store i8* null, i8** %mimetype, align 8, !dbg !5022
  call void @llvm.dbg.declare(metadata i32* %fileuid, metadata !5023, metadata !2445), !dbg !5024
  %31 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5025
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i32 0, i32 19, !dbg !5027
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5027
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 0, !dbg !5028
  %33 = load i32, i32* %codec_type, align 8, !dbg !5028
  %cmp18 = icmp ne i32 %33, 4, !dbg !5029
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5030

if.then19:                                        ; preds = %for.body
  br label %for.inc129, !dbg !5031

if.end20:                                         ; preds = %for.body
  %34 = load %struct.mkv_attachment*, %struct.mkv_attachment** %attachment, align 8, !dbg !5032
  %35 = bitcast %struct.mkv_attachment* %34 to i8*, !dbg !5032
  %36 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5033
  %attachments21 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %36, i32 0, i32 19, !dbg !5034
  %37 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments21, align 8, !dbg !5034
  %num_entries = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %37, i32 0, i32 1, !dbg !5035
  %38 = load i32, i32* %num_entries, align 8, !dbg !5035
  %add = add nsw i32 %38, 1, !dbg !5036
  %conv = sext i32 %add to i64, !dbg !5033
  %call22 = call i8* @av_realloc_array(i8* %35, i64 %conv, i64 8), !dbg !5037
  %39 = bitcast i8* %call22 to %struct.mkv_attachment*, !dbg !5037
  store %struct.mkv_attachment* %39, %struct.mkv_attachment** %attachment, align 8, !dbg !5038
  %40 = load %struct.mkv_attachment*, %struct.mkv_attachment** %attachment, align 8, !dbg !5039
  %tobool23 = icmp ne %struct.mkv_attachment* %40, null, !dbg !5039
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !5041

if.then24:                                        ; preds = %if.end20
  store i32 -12, i32* %retval, align 4, !dbg !5042
  br label %return, !dbg !5042

if.end25:                                         ; preds = %if.end20
  %41 = load %struct.mkv_attachment*, %struct.mkv_attachment** %attachment, align 8, !dbg !5043
  %42 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5044
  %attachments26 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %42, i32 0, i32 19, !dbg !5045
  %43 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments26, align 8, !dbg !5045
  %entries27 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %43, i32 0, i32 0, !dbg !5046
  store %struct.mkv_attachment* %41, %struct.mkv_attachment** %entries27, align 8, !dbg !5047
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5048
  %call28 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %44, i32 24999, i64 0), !dbg !5049
  %45 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !5049
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 0, !dbg !5049
  %47 = extractvalue { i64, i32 } %call28, 0, !dbg !5049
  store i64 %47, i64* %46, align 8, !dbg !5049
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 1, !dbg !5049
  %49 = extractvalue { i64, i32 } %call28, 1, !dbg !5049
  store i32 %49, i32* %48, align 8, !dbg !5049
  %50 = bitcast %struct.ebml_master* %attached_file to i8*, !dbg !5049
  %51 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !5049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false), !dbg !5050
  %52 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5052
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %52, i32 0, i32 11, !dbg !5054
  %53 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !5054
  %call29 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !5055
  store %struct.AVDictionaryEntry* %call29, %struct.AVDictionaryEntry** %t, align 8, !dbg !5056
  %tobool30 = icmp ne %struct.AVDictionaryEntry* %call29, null, !dbg !5056
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5057

if.then31:                                        ; preds = %if.end25
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5058
  %55 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !5059
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %55, i32 0, i32 1, !dbg !5060
  %56 = load i8*, i8** %value, align 8, !dbg !5060
  call void @put_ebml_string(%struct.AVIOContext* %54, i32 18046, i8* %56), !dbg !5061
  br label %if.end32, !dbg !5061

if.end32:                                         ; preds = %if.then31, %if.end25
  %57 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5062
  %metadata33 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 11, !dbg !5064
  %58 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata33, align 8, !dbg !5064
  %call34 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !5065
  store %struct.AVDictionaryEntry* %call34, %struct.AVDictionaryEntry** %t, align 8, !dbg !5066
  %tobool35 = icmp ne %struct.AVDictionaryEntry* %call34, null, !dbg !5066
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !5067

if.then36:                                        ; preds = %if.end32
  %59 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5068
  %60 = bitcast %struct.AVFormatContext* %59 to i8*, !dbg !5068
  %61 = load i32, i32* %i, align 4, !dbg !5070
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i32 0, i32 0), i32 %61), !dbg !5071
  store i32 -22, i32* %retval, align 4, !dbg !5072
  br label %return, !dbg !5072

if.end37:                                         ; preds = %if.end32
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5073
  %63 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !5074
  %value38 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %63, i32 0, i32 1, !dbg !5075
  %64 = load i8*, i8** %value38, align 8, !dbg !5075
  call void @put_ebml_string(%struct.AVIOContext* %62, i32 18030, i8* %64), !dbg !5076
  %65 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5077
  %metadata39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %65, i32 0, i32 11, !dbg !5079
  %66 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata39, align 8, !dbg !5079
  %call40 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !5080
  store %struct.AVDictionaryEntry* %call40, %struct.AVDictionaryEntry** %t, align 8, !dbg !5081
  %tobool41 = icmp ne %struct.AVDictionaryEntry* %call40, null, !dbg !5081
  br i1 %tobool41, label %if.then42, label %if.else, !dbg !5082

if.then42:                                        ; preds = %if.end37
  %67 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !5083
  %value43 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %67, i32 0, i32 1, !dbg !5084
  %68 = load i8*, i8** %value43, align 8, !dbg !5084
  store i8* %68, i8** %mimetype, align 8, !dbg !5085
  br label %if.end90, !dbg !5086

if.else:                                          ; preds = %if.end37
  %69 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5087
  %codecpar44 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %69, i32 0, i32 19, !dbg !5089
  %70 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar44, align 8, !dbg !5089
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %70, i32 0, i32 1, !dbg !5090
  %71 = load i32, i32* %codec_id, align 4, !dbg !5090
  %cmp45 = icmp ne i32 %71, 0, !dbg !5091
  br i1 %cmp45, label %if.then47, label %if.end89, !dbg !5092

if.then47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i48, metadata !5093, metadata !2445), !dbg !5095
  store i32 0, i32* %i48, align 4, !dbg !5096
  br label %for.cond49, !dbg !5098

for.cond49:                                       ; preds = %for.inc, %if.then47
  %72 = load i32, i32* %i48, align 4, !dbg !5099
  %idxprom50 = sext i32 %72 to i64, !dbg !5102
  %arrayidx51 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom50, !dbg !5102
  %id = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx51, i32 0, i32 1, !dbg !5103
  %73 = load i32, i32* %id, align 4, !dbg !5103
  %cmp52 = icmp ne i32 %73, 0, !dbg !5104
  br i1 %cmp52, label %for.body54, label %for.end, !dbg !5105

for.body54:                                       ; preds = %for.cond49
  %74 = load i32, i32* %i48, align 4, !dbg !5106
  %idxprom55 = sext i32 %74 to i64, !dbg !5108
  %arrayidx56 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom55, !dbg !5108
  %id57 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx56, i32 0, i32 1, !dbg !5109
  %75 = load i32, i32* %id57, align 4, !dbg !5109
  %76 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5110
  %codecpar58 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %76, i32 0, i32 19, !dbg !5111
  %77 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar58, align 8, !dbg !5111
  %codec_id59 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %77, i32 0, i32 1, !dbg !5112
  %78 = load i32, i32* %codec_id59, align 4, !dbg !5112
  %cmp60 = icmp eq i32 %75, %78, !dbg !5113
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !5114

if.then62:                                        ; preds = %for.body54
  %79 = load i32, i32* %i48, align 4, !dbg !5115
  %idxprom63 = sext i32 %79 to i64, !dbg !5117
  %arrayidx64 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom63, !dbg !5117
  %str = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx64, i32 0, i32 0, !dbg !5118
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %str, i32 0, i32 0, !dbg !5117
  store i8* %arraydecay, i8** %mimetype, align 8, !dbg !5119
  br label %for.end, !dbg !5120

if.end65:                                         ; preds = %for.body54
  br label %for.inc, !dbg !5121

for.inc:                                          ; preds = %if.end65
  %80 = load i32, i32* %i48, align 4, !dbg !5123
  %inc = add nsw i32 %80, 1, !dbg !5123
  store i32 %inc, i32* %i48, align 4, !dbg !5123
  br label %for.cond49, !dbg !5125, !llvm.loop !5126

for.end:                                          ; preds = %if.then62, %for.cond49
  store i32 0, i32* %i48, align 4, !dbg !5128
  br label %for.cond66, !dbg !5130

for.cond66:                                       ; preds = %for.inc86, %for.end
  %81 = load i32, i32* %i48, align 4, !dbg !5131
  %idxprom67 = sext i32 %81 to i64, !dbg !5134
  %arrayidx68 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom67, !dbg !5134
  %id69 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx68, i32 0, i32 1, !dbg !5135
  %82 = load i32, i32* %id69, align 4, !dbg !5135
  %cmp70 = icmp ne i32 %82, 0, !dbg !5136
  br i1 %cmp70, label %for.body72, label %for.end88, !dbg !5137

for.body72:                                       ; preds = %for.cond66
  %83 = load i32, i32* %i48, align 4, !dbg !5138
  %idxprom73 = sext i32 %83 to i64, !dbg !5140
  %arrayidx74 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom73, !dbg !5140
  %id75 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx74, i32 0, i32 1, !dbg !5141
  %84 = load i32, i32* %id75, align 4, !dbg !5141
  %85 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5142
  %codecpar76 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %85, i32 0, i32 19, !dbg !5143
  %86 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar76, align 8, !dbg !5143
  %codec_id77 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %86, i32 0, i32 1, !dbg !5144
  %87 = load i32, i32* %codec_id77, align 4, !dbg !5144
  %cmp78 = icmp eq i32 %84, %87, !dbg !5145
  br i1 %cmp78, label %if.then80, label %if.end85, !dbg !5146

if.then80:                                        ; preds = %for.body72
  %88 = load i32, i32* %i48, align 4, !dbg !5147
  %idxprom81 = sext i32 %88 to i64, !dbg !5149
  %arrayidx82 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom81, !dbg !5149
  %str83 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx82, i32 0, i32 0, !dbg !5150
  %arraydecay84 = getelementptr inbounds [32 x i8], [32 x i8]* %str83, i32 0, i32 0, !dbg !5149
  store i8* %arraydecay84, i8** %mimetype, align 8, !dbg !5151
  br label %for.end88, !dbg !5152

if.end85:                                         ; preds = %for.body72
  br label %for.inc86, !dbg !5153

for.inc86:                                        ; preds = %if.end85
  %89 = load i32, i32* %i48, align 4, !dbg !5155
  %inc87 = add nsw i32 %89, 1, !dbg !5155
  store i32 %inc87, i32* %i48, align 4, !dbg !5155
  br label %for.cond66, !dbg !5157, !llvm.loop !5158

for.end88:                                        ; preds = %if.then80, %for.cond66
  br label %if.end89, !dbg !5160

if.end89:                                         ; preds = %for.end88, %if.else
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then42
  %90 = load i8*, i8** %mimetype, align 8, !dbg !5161
  %tobool91 = icmp ne i8* %90, null, !dbg !5161
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !5163

if.then92:                                        ; preds = %if.end90
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5164
  %92 = bitcast %struct.AVFormatContext* %91 to i8*, !dbg !5164
  %93 = load i32, i32* %i, align 4, !dbg !5166
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.74, i32 0, i32 0), i32 %93), !dbg !5167
  store i32 -22, i32* %retval, align 4, !dbg !5168
  br label %return, !dbg !5168

if.end93:                                         ; preds = %if.end90
  %94 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5169
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %94, i32 0, i32 15, !dbg !5171
  %95 = load i32, i32* %flags, align 8, !dbg !5171
  %and = and i32 %95, 1024, !dbg !5172
  %tobool94 = icmp ne i32 %and, 0, !dbg !5172
  br i1 %tobool94, label %if.then95, label %if.else105, !dbg !5173

if.then95:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata %struct.AVSHA** %sha, metadata !5174, metadata !2445), !dbg !5179
  %call96 = call %struct.AVSHA* @av_sha_alloc(), !dbg !5180
  store %struct.AVSHA* %call96, %struct.AVSHA** %sha, align 8, !dbg !5179
  call void @llvm.dbg.declare(metadata [20 x i8]* %digest, metadata !5181, metadata !2445), !dbg !5183
  %96 = load %struct.AVSHA*, %struct.AVSHA** %sha, align 8, !dbg !5184
  %tobool97 = icmp ne %struct.AVSHA* %96, null, !dbg !5184
  br i1 %tobool97, label %if.end99, label %if.then98, !dbg !5186

if.then98:                                        ; preds = %if.then95
  store i32 -12, i32* %retval, align 4, !dbg !5187
  br label %return, !dbg !5187

if.end99:                                         ; preds = %if.then95
  %97 = load %struct.AVSHA*, %struct.AVSHA** %sha, align 8, !dbg !5188
  %call100 = call i32 @av_sha_init(%struct.AVSHA* %97, i32 160), !dbg !5189
  %98 = load %struct.AVSHA*, %struct.AVSHA** %sha, align 8, !dbg !5190
  %99 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5191
  %codecpar101 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %99, i32 0, i32 19, !dbg !5192
  %100 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar101, align 8, !dbg !5192
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %100, i32 0, i32 3, !dbg !5193
  %101 = load i8*, i8** %extradata, align 8, !dbg !5193
  %102 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5194
  %codecpar102 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %102, i32 0, i32 19, !dbg !5195
  %103 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar102, align 8, !dbg !5195
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %103, i32 0, i32 4, !dbg !5196
  %104 = load i32, i32* %extradata_size, align 8, !dbg !5196
  call void @av_sha_update(%struct.AVSHA* %98, i8* %101, i32 %104), !dbg !5197
  %105 = load %struct.AVSHA*, %struct.AVSHA** %sha, align 8, !dbg !5198
  %arraydecay103 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i32 0, i32 0, !dbg !5199
  call void @av_sha_final(%struct.AVSHA* %105, i8* %arraydecay103), !dbg !5200
  %106 = load %struct.AVSHA*, %struct.AVSHA** %sha, align 8, !dbg !5201
  %107 = bitcast %struct.AVSHA* %106 to i8*, !dbg !5201
  call void @av_free(i8* %107), !dbg !5202
  %arraydecay104 = getelementptr inbounds [20 x i8], [20 x i8]* %digest, i32 0, i32 0, !dbg !5203
  %108 = bitcast i8* %arraydecay104 to %union.unaligned_32*, !dbg !5203
  %l = bitcast %union.unaligned_32* %108 to i32*, !dbg !5203
  %109 = load i32, i32* %l, align 16, !dbg !5203
  store i32 %109, i32* %fileuid, align 4, !dbg !5204
  br label %if.end107, !dbg !5205

if.else105:                                       ; preds = %if.end93
  %call106 = call i32 @av_lfg_get(%struct.AVLFG* %c), !dbg !5206
  store i32 %call106, i32* %fileuid, align 4, !dbg !5208
  br label %if.end107

if.end107:                                        ; preds = %if.else105, %if.end99
  %110 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5209
  %111 = bitcast %struct.AVFormatContext* %110 to i8*, !dbg !5209
  %112 = load i32, i32* %fileuid, align 4, !dbg !5210
  %113 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5211
  %attachments108 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %113, i32 0, i32 19, !dbg !5212
  %114 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments108, align 8, !dbg !5212
  %num_entries109 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %114, i32 0, i32 1, !dbg !5213
  %115 = load i32, i32* %num_entries109, align 8, !dbg !5213
  call void (i8*, i32, i8*, ...) @av_log(i8* %111, i32 40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.75, i32 0, i32 0), i32 %112, i32 %115), !dbg !5214
  %116 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5215
  %117 = load i8*, i8** %mimetype, align 8, !dbg !5216
  call void @put_ebml_string(%struct.AVIOContext* %116, i32 18016, i8* %117), !dbg !5217
  %118 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5218
  %119 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5219
  %codecpar110 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i32 0, i32 19, !dbg !5220
  %120 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar110, align 8, !dbg !5220
  %extradata111 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %120, i32 0, i32 3, !dbg !5221
  %121 = load i8*, i8** %extradata111, align 8, !dbg !5221
  %122 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5222
  %codecpar112 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %122, i32 0, i32 19, !dbg !5223
  %123 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar112, align 8, !dbg !5223
  %extradata_size113 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %123, i32 0, i32 4, !dbg !5224
  %124 = load i32, i32* %extradata_size113, align 8, !dbg !5224
  call void @put_ebml_binary(%struct.AVIOContext* %118, i32 18012, i8* %121, i32 %124), !dbg !5225
  %125 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5226
  %126 = load i32, i32* %fileuid, align 4, !dbg !5227
  %conv114 = zext i32 %126 to i64, !dbg !5227
  call void @put_ebml_uint(%struct.AVIOContext* %125, i32 18094, i64 %conv114), !dbg !5228
  %127 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5229
  %128 = bitcast %struct.ebml_master* %attached_file to { i64, i32 }*, !dbg !5230
  %129 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %128, i32 0, i32 0, !dbg !5230
  %130 = load i64, i64* %129, align 8, !dbg !5230
  %131 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %128, i32 0, i32 1, !dbg !5230
  %132 = load i32, i32* %131, align 8, !dbg !5230
  call void @end_ebml_master(%struct.AVIOContext* %127, i64 %130, i32 %132), !dbg !5230
  %133 = load i32, i32* %i, align 4, !dbg !5231
  %134 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5232
  %attachments115 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %134, i32 0, i32 19, !dbg !5233
  %135 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments115, align 8, !dbg !5233
  %num_entries116 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %135, i32 0, i32 1, !dbg !5234
  %136 = load i32, i32* %num_entries116, align 8, !dbg !5234
  %idxprom117 = sext i32 %136 to i64, !dbg !5235
  %137 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5235
  %attachments118 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %137, i32 0, i32 19, !dbg !5236
  %138 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments118, align 8, !dbg !5236
  %entries119 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %138, i32 0, i32 0, !dbg !5237
  %139 = load %struct.mkv_attachment*, %struct.mkv_attachment** %entries119, align 8, !dbg !5237
  %arrayidx120 = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %139, i64 %idxprom117, !dbg !5235
  %stream_idx = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %arrayidx120, i32 0, i32 0, !dbg !5238
  store i32 %133, i32* %stream_idx, align 4, !dbg !5239
  %140 = load i32, i32* %fileuid, align 4, !dbg !5240
  %141 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5241
  %attachments121 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %141, i32 0, i32 19, !dbg !5242
  %142 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments121, align 8, !dbg !5242
  %num_entries122 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %142, i32 0, i32 1, !dbg !5243
  %143 = load i32, i32* %num_entries122, align 8, !dbg !5244
  %inc123 = add nsw i32 %143, 1, !dbg !5244
  store i32 %inc123, i32* %num_entries122, align 8, !dbg !5244
  %idxprom124 = sext i32 %143 to i64, !dbg !5245
  %144 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5245
  %attachments125 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %144, i32 0, i32 19, !dbg !5246
  %145 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments125, align 8, !dbg !5246
  %entries126 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %145, i32 0, i32 0, !dbg !5247
  %146 = load %struct.mkv_attachment*, %struct.mkv_attachment** %entries126, align 8, !dbg !5247
  %arrayidx127 = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %146, i64 %idxprom124, !dbg !5245
  %fileuid128 = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %arrayidx127, i32 0, i32 1, !dbg !5248
  store i32 %140, i32* %fileuid128, align 4, !dbg !5249
  br label %for.inc129, !dbg !5250

for.inc129:                                       ; preds = %if.end107, %if.then19
  %147 = load i32, i32* %i, align 4, !dbg !5251
  %inc130 = add nsw i32 %147, 1, !dbg !5251
  store i32 %inc130, i32* %i, align 4, !dbg !5251
  br label %for.cond, !dbg !5253, !llvm.loop !5254

for.end131:                                       ; preds = %for.cond
  %148 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5256
  %149 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5257
  %150 = bitcast %struct.ebml_master* %attachments to { i64, i32 }*, !dbg !5258
  %151 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %150, i32 0, i32 0, !dbg !5258
  %152 = load i64, i64* %151, align 8, !dbg !5258
  %153 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %150, i32 0, i32 1, !dbg !5258
  %154 = load i32, i32* %153, align 8, !dbg !5258
  call void @end_ebml_master_crc32(%struct.AVIOContext* %148, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %149, i64 %152, i32 %154), !dbg !5258
  store i32 0, i32* %retval, align 4, !dbg !5259
  br label %return, !dbg !5259

return:                                           ; preds = %for.end131, %if.then98, %if.then92, %if.then36, %if.then24, %if.then14, %if.then10, %if.then5, %if.then
  %155 = load i32, i32* %retval, align 4, !dbg !5260
  ret i32 %155, !dbg !5260
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_tags(%struct.AVFormatContext* %s) #0 !dbg !5261 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !5262
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %pb27 = alloca %struct.AVIOContext*, align 8
  %st28 = alloca %struct.AVStream*, align 8
  %tag_target = alloca %struct.ebml_master, align 8
  %tag = alloca %struct.ebml_master, align 8
  %coerce = alloca %struct.ebml_master, align 8
  %ch = alloca %struct.AVChapter*, align 8
  %attachment = alloca %struct.mkv_attachment*, align 8
  %st82 = alloca %struct.AVStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5269, metadata !2445), !dbg !5270
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !5271, metadata !2445), !dbg !5272
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5273
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5274
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5274
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !5273
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5275, metadata !2445), !dbg !5276
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5277, metadata !2445), !dbg !5278
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5279
  call void @ff_metadata_conv_ctx(%struct.AVFormatContext* %3, %struct.AVMetadataConv* getelementptr inbounds ([0 x %struct.AVMetadataConv], [0 x %struct.AVMetadataConv]* @ff_mkv_metadata_conv, i32 0, i32 0), %struct.AVMetadataConv* null), !dbg !5280
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5281
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 29, !dbg !5283
  %5 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !5283
  %call = call i32 @mkv_check_tag(%struct.AVDictionary* %5, i32 0), !dbg !5284
  %tobool = icmp ne i32 %call, 0, !dbg !5284
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5285

if.then:                                          ; preds = %entry
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5286
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5288
  %metadata1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 29, !dbg !5289
  %8 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata1, align 8, !dbg !5289
  %9 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5290
  %tags = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %9, i32 0, i32 4, !dbg !5291
  %call2 = call i32 @mkv_write_tag(%struct.AVFormatContext* %6, %struct.AVDictionary* %8, i32 0, i32 0, %struct.ebml_master* %tags), !dbg !5292
  store i32 %call2, i32* %ret, align 4, !dbg !5293
  %10 = load i32, i32* %ret, align 4, !dbg !5294
  %cmp = icmp slt i32 %10, 0, !dbg !5296
  br i1 %cmp, label %if.then3, label %if.end, !dbg !5297

if.then3:                                         ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !5298
  store i32 %11, i32* %retval, align 4, !dbg !5300
  br label %return, !dbg !5300

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !5301

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %i, align 4, !dbg !5302
  br label %for.cond, !dbg !5304

for.cond:                                         ; preds = %for.inc, %if.end4
  %12 = load i32, i32* %i, align 4, !dbg !5305
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5308
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 6, !dbg !5309
  %14 = load i32, i32* %nb_streams, align 4, !dbg !5309
  %cmp5 = icmp ult i32 %12, %14, !dbg !5310
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5311

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !5312, metadata !2445), !dbg !5314
  %15 = load i32, i32* %i, align 4, !dbg !5315
  %idxprom = sext i32 %15 to i64, !dbg !5316
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5316
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 7, !dbg !5317
  %17 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !5317
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 %idxprom, !dbg !5316
  %18 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !5316
  store %struct.AVStream* %18, %struct.AVStream** %st, align 8, !dbg !5314
  %19 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5318
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 19, !dbg !5320
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5320
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 0, !dbg !5321
  %21 = load i32, i32* %codec_type, align 8, !dbg !5321
  %cmp6 = icmp eq i32 %21, 4, !dbg !5322
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5323

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !5324

if.end8:                                          ; preds = %for.body
  %22 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5325
  %metadata9 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 11, !dbg !5327
  %23 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata9, align 8, !dbg !5327
  %call10 = call i32 @mkv_check_tag(%struct.AVDictionary* %23, i32 25541), !dbg !5328
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5328
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5329

if.then12:                                        ; preds = %if.end8
  br label %for.inc, !dbg !5330

if.end13:                                         ; preds = %if.end8
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5331
  %25 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5332
  %metadata14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 11, !dbg !5333
  %26 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata14, align 8, !dbg !5333
  %27 = load i32, i32* %i, align 4, !dbg !5334
  %add = add nsw i32 %27, 1, !dbg !5335
  %28 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5336
  %tags15 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %28, i32 0, i32 4, !dbg !5337
  %call16 = call i32 @mkv_write_tag(%struct.AVFormatContext* %24, %struct.AVDictionary* %26, i32 25541, i32 %add, %struct.ebml_master* %tags15), !dbg !5338
  store i32 %call16, i32* %ret, align 4, !dbg !5339
  %29 = load i32, i32* %ret, align 4, !dbg !5340
  %cmp17 = icmp slt i32 %29, 0, !dbg !5342
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5343

if.then18:                                        ; preds = %if.end13
  %30 = load i32, i32* %ret, align 4, !dbg !5344
  store i32 %30, i32* %retval, align 4, !dbg !5346
  br label %return, !dbg !5346

if.end19:                                         ; preds = %if.end13
  br label %for.inc, !dbg !5347

for.inc:                                          ; preds = %if.end19, %if.then12, %if.then7
  %31 = load i32, i32* %i, align 4, !dbg !5348
  %inc = add nsw i32 %31, 1, !dbg !5348
  store i32 %inc, i32* %i, align 4, !dbg !5348
  br label %for.cond, !dbg !5350, !llvm.loop !5351

for.end:                                          ; preds = %for.cond
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5353
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 4, !dbg !5354
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5354
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %33, i32 0, i32 19, !dbg !5355
  %34 = load i32, i32* %seekable, align 8, !dbg !5355
  %and = and i32 %34, 1, !dbg !5356
  %tobool20 = icmp ne i32 %and, 0, !dbg !5356
  br i1 %tobool20, label %land.lhs.true, label %if.end47, !dbg !5357

land.lhs.true:                                    ; preds = %for.end
  %35 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5358
  %is_live = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %35, i32 0, i32 29, !dbg !5360
  %36 = load i32, i32* %is_live, align 8, !dbg !5360
  %tobool21 = icmp ne i32 %36, 0, !dbg !5358
  br i1 %tobool21, label %if.end47, label %if.then22, !dbg !5361

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !5362
  br label %for.cond23, !dbg !5363

for.cond23:                                       ; preds = %for.inc44, %if.then22
  %37 = load i32, i32* %i, align 4, !dbg !5364
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5366
  %nb_streams24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 6, !dbg !5367
  %39 = load i32, i32* %nb_streams24, align 4, !dbg !5367
  %cmp25 = icmp ult i32 %37, %39, !dbg !5368
  br i1 %cmp25, label %for.body26, label %for.end46, !dbg !5369

for.body26:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb27, metadata !5370, metadata !2445), !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st28, metadata !5372, metadata !2445), !dbg !5373
  %40 = load i32, i32* %i, align 4, !dbg !5374
  %idxprom29 = sext i32 %40 to i64, !dbg !5375
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5375
  %streams30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 7, !dbg !5376
  %42 = load %struct.AVStream**, %struct.AVStream*** %streams30, align 8, !dbg !5376
  %arrayidx31 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %42, i64 %idxprom29, !dbg !5375
  %43 = load %struct.AVStream*, %struct.AVStream** %arrayidx31, align 8, !dbg !5375
  store %struct.AVStream* %43, %struct.AVStream** %st28, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %tag_target, metadata !5377, metadata !2445), !dbg !5378
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %tag, metadata !5379, metadata !2445), !dbg !5380
  %44 = load %struct.AVStream*, %struct.AVStream** %st28, align 8, !dbg !5381
  %codecpar32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %44, i32 0, i32 19, !dbg !5383
  %45 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar32, align 8, !dbg !5383
  %codec_type33 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %45, i32 0, i32 0, !dbg !5384
  %46 = load i32, i32* %codec_type33, align 8, !dbg !5384
  %cmp34 = icmp eq i32 %46, 4, !dbg !5385
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !5386

if.then35:                                        ; preds = %for.body26
  br label %for.inc44, !dbg !5387

if.end36:                                         ; preds = %for.body26
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5388
  %48 = load i32, i32* %i, align 4, !dbg !5389
  %add37 = add nsw i32 %48, 1, !dbg !5390
  %49 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5391
  %tags38 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %49, i32 0, i32 4, !dbg !5392
  %call39 = call i32 @mkv_write_tag_targets(%struct.AVFormatContext* %47, i32 25541, i32 %add37, %struct.ebml_master* %tags38, %struct.ebml_master* %tag_target), !dbg !5393
  %50 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5394
  %tags_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %50, i32 0, i32 3, !dbg !5395
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc, align 8, !dbg !5395
  store %struct.AVIOContext* %51, %struct.AVIOContext** %pb27, align 8, !dbg !5396
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5397
  %call40 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %52, i32 26568, i64 0), !dbg !5398
  %53 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !5398
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 0, !dbg !5398
  %55 = extractvalue { i64, i32 } %call40, 0, !dbg !5398
  store i64 %55, i64* %54, align 8, !dbg !5398
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 1, !dbg !5398
  %57 = extractvalue { i64, i32 } %call40, 1, !dbg !5398
  store i32 %57, i32* %56, align 8, !dbg !5398
  %58 = bitcast %struct.ebml_master* %tag to i8*, !dbg !5398
  %59 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !5398
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 16, i32 8, i1 false), !dbg !5399
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5401
  call void @put_ebml_string(%struct.AVIOContext* %60, i32 17827, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0)), !dbg !5402
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5403
  store %struct.AVIOContext* %61, %struct.AVIOContext** %s.addr.i, align 8, !dbg !5404
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !5405
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %62, i64 0, i32 1) #11, !dbg !5406
  %63 = load i32, i32* %i, align 4, !dbg !5407
  %idxprom42 = sext i32 %63 to i64, !dbg !5408
  %64 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5408
  %stream_duration_offsets = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %64, i32 0, i32 35, !dbg !5409
  %65 = load i64*, i64** %stream_duration_offsets, align 8, !dbg !5409
  %arrayidx43 = getelementptr inbounds i64, i64* %65, i64 %idxprom42, !dbg !5408
  store i64 %call.i, i64* %arrayidx43, align 8, !dbg !5410
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5411
  call void @put_ebml_void(%struct.AVIOContext* %66, i64 23), !dbg !5412
  %67 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5413
  %68 = bitcast %struct.ebml_master* %tag to { i64, i32 }*, !dbg !5414
  %69 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %68, i32 0, i32 0, !dbg !5414
  %70 = load i64, i64* %69, align 8, !dbg !5414
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %68, i32 0, i32 1, !dbg !5414
  %72 = load i32, i32* %71, align 8, !dbg !5414
  call void @end_ebml_master(%struct.AVIOContext* %67, i64 %70, i32 %72), !dbg !5414
  %73 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !5415
  %74 = bitcast %struct.ebml_master* %tag_target to { i64, i32 }*, !dbg !5416
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %74, i32 0, i32 0, !dbg !5416
  %76 = load i64, i64* %75, align 8, !dbg !5416
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %74, i32 0, i32 1, !dbg !5416
  %78 = load i32, i32* %77, align 8, !dbg !5416
  call void @end_ebml_master(%struct.AVIOContext* %73, i64 %76, i32 %78), !dbg !5416
  br label %for.inc44, !dbg !5417

for.inc44:                                        ; preds = %if.end36, %if.then35
  %79 = load i32, i32* %i, align 4, !dbg !5418
  %inc45 = add nsw i32 %79, 1, !dbg !5418
  store i32 %inc45, i32* %i, align 4, !dbg !5418
  br label %for.cond23, !dbg !5420, !llvm.loop !5421

for.end46:                                        ; preds = %for.cond23
  br label %if.end47, !dbg !5423

if.end47:                                         ; preds = %for.end46, %land.lhs.true, %for.end
  %80 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5424
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %80, i32 0, i32 1, !dbg !5426
  %81 = load i32, i32* %mode, align 8, !dbg !5426
  %cmp48 = icmp ne i32 %81, 2, !dbg !5427
  br i1 %cmp48, label %if.then49, label %if.end70, !dbg !5428

if.then49:                                        ; preds = %if.end47
  store i32 0, i32* %i, align 4, !dbg !5429
  br label %for.cond50, !dbg !5432

for.cond50:                                       ; preds = %for.inc67, %if.then49
  %82 = load i32, i32* %i, align 4, !dbg !5433
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5436
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 27, !dbg !5437
  %84 = load i32, i32* %nb_chapters, align 4, !dbg !5437
  %cmp51 = icmp ult i32 %82, %84, !dbg !5438
  br i1 %cmp51, label %for.body52, label %for.end69, !dbg !5439

for.body52:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.AVChapter** %ch, metadata !5440, metadata !2445), !dbg !5442
  %85 = load i32, i32* %i, align 4, !dbg !5443
  %idxprom53 = sext i32 %85 to i64, !dbg !5444
  %86 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5444
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %86, i32 0, i32 28, !dbg !5445
  %87 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !5445
  %arrayidx54 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %87, i64 %idxprom53, !dbg !5444
  %88 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx54, align 8, !dbg !5444
  store %struct.AVChapter* %88, %struct.AVChapter** %ch, align 8, !dbg !5442
  %89 = load %struct.AVChapter*, %struct.AVChapter** %ch, align 8, !dbg !5446
  %metadata55 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %89, i32 0, i32 4, !dbg !5448
  %90 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata55, align 8, !dbg !5448
  %call56 = call i32 @mkv_check_tag(%struct.AVDictionary* %90, i32 25540), !dbg !5449
  %tobool57 = icmp ne i32 %call56, 0, !dbg !5449
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !5450

if.then58:                                        ; preds = %for.body52
  br label %for.inc67, !dbg !5451

if.end59:                                         ; preds = %for.body52
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5452
  %92 = load %struct.AVChapter*, %struct.AVChapter** %ch, align 8, !dbg !5453
  %metadata60 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %92, i32 0, i32 4, !dbg !5454
  %93 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata60, align 8, !dbg !5454
  %94 = load %struct.AVChapter*, %struct.AVChapter** %ch, align 8, !dbg !5455
  %id = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %94, i32 0, i32 0, !dbg !5456
  %95 = load i32, i32* %id, align 8, !dbg !5456
  %96 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5457
  %chapter_id_offset = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %96, i32 0, i32 31, !dbg !5458
  %97 = load i32, i32* %chapter_id_offset, align 8, !dbg !5458
  %add61 = add i32 %95, %97, !dbg !5459
  %98 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5460
  %tags62 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %98, i32 0, i32 4, !dbg !5461
  %call63 = call i32 @mkv_write_tag(%struct.AVFormatContext* %91, %struct.AVDictionary* %93, i32 25540, i32 %add61, %struct.ebml_master* %tags62), !dbg !5462
  store i32 %call63, i32* %ret, align 4, !dbg !5463
  %99 = load i32, i32* %ret, align 4, !dbg !5464
  %cmp64 = icmp slt i32 %99, 0, !dbg !5466
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !5467

if.then65:                                        ; preds = %if.end59
  %100 = load i32, i32* %ret, align 4, !dbg !5468
  store i32 %100, i32* %retval, align 4, !dbg !5469
  br label %return, !dbg !5469

if.end66:                                         ; preds = %if.end59
  br label %for.inc67, !dbg !5470

for.inc67:                                        ; preds = %if.end66, %if.then58
  %101 = load i32, i32* %i, align 4, !dbg !5471
  %inc68 = add nsw i32 %101, 1, !dbg !5471
  store i32 %inc68, i32* %i, align 4, !dbg !5471
  br label %for.cond50, !dbg !5473, !llvm.loop !5474

for.end69:                                        ; preds = %for.cond50
  br label %if.end70, !dbg !5476

if.end70:                                         ; preds = %for.end69, %if.end47
  %102 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5477
  %have_attachments = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %102, i32 0, i32 21, !dbg !5479
  %103 = load i32, i32* %have_attachments, align 8, !dbg !5479
  %tobool71 = icmp ne i32 %103, 0, !dbg !5477
  br i1 %tobool71, label %land.lhs.true72, label %if.end100, !dbg !5480

land.lhs.true72:                                  ; preds = %if.end70
  %104 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5481
  %mode73 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %104, i32 0, i32 1, !dbg !5483
  %105 = load i32, i32* %mode73, align 8, !dbg !5483
  %cmp74 = icmp ne i32 %105, 2, !dbg !5484
  br i1 %cmp74, label %if.then75, label %if.end100, !dbg !5485

if.then75:                                        ; preds = %land.lhs.true72
  store i32 0, i32* %i, align 4, !dbg !5486
  br label %for.cond76, !dbg !5489

for.cond76:                                       ; preds = %for.inc97, %if.then75
  %106 = load i32, i32* %i, align 4, !dbg !5490
  %107 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5493
  %attachments = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %107, i32 0, i32 19, !dbg !5494
  %108 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments, align 8, !dbg !5494
  %num_entries = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %108, i32 0, i32 1, !dbg !5495
  %109 = load i32, i32* %num_entries, align 8, !dbg !5495
  %cmp77 = icmp slt i32 %106, %109, !dbg !5496
  br i1 %cmp77, label %for.body78, label %for.end99, !dbg !5497

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata %struct.mkv_attachment** %attachment, metadata !5498, metadata !2445), !dbg !5500
  %110 = load i32, i32* %i, align 4, !dbg !5501
  %idxprom79 = sext i32 %110 to i64, !dbg !5502
  %111 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5502
  %attachments80 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %111, i32 0, i32 19, !dbg !5503
  %112 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments80, align 8, !dbg !5503
  %entries = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %112, i32 0, i32 0, !dbg !5504
  %113 = load %struct.mkv_attachment*, %struct.mkv_attachment** %entries, align 8, !dbg !5504
  %arrayidx81 = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %113, i64 %idxprom79, !dbg !5502
  store %struct.mkv_attachment* %arrayidx81, %struct.mkv_attachment** %attachment, align 8, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st82, metadata !5505, metadata !2445), !dbg !5506
  %114 = load %struct.mkv_attachment*, %struct.mkv_attachment** %attachment, align 8, !dbg !5507
  %stream_idx = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %114, i32 0, i32 0, !dbg !5508
  %115 = load i32, i32* %stream_idx, align 4, !dbg !5508
  %idxprom83 = sext i32 %115 to i64, !dbg !5509
  %116 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5509
  %streams84 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %116, i32 0, i32 7, !dbg !5510
  %117 = load %struct.AVStream**, %struct.AVStream*** %streams84, align 8, !dbg !5510
  %arrayidx85 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %117, i64 %idxprom83, !dbg !5509
  %118 = load %struct.AVStream*, %struct.AVStream** %arrayidx85, align 8, !dbg !5509
  store %struct.AVStream* %118, %struct.AVStream** %st82, align 8, !dbg !5506
  %119 = load %struct.AVStream*, %struct.AVStream** %st82, align 8, !dbg !5511
  %metadata86 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i32 0, i32 11, !dbg !5513
  %120 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata86, align 8, !dbg !5513
  %call87 = call i32 @mkv_check_tag(%struct.AVDictionary* %120, i32 25542), !dbg !5514
  %tobool88 = icmp ne i32 %call87, 0, !dbg !5514
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !5515

if.then89:                                        ; preds = %for.body78
  br label %for.inc97, !dbg !5516

if.end90:                                         ; preds = %for.body78
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5517
  %122 = load %struct.AVStream*, %struct.AVStream** %st82, align 8, !dbg !5518
  %metadata91 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %122, i32 0, i32 11, !dbg !5519
  %123 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata91, align 8, !dbg !5519
  %124 = load %struct.mkv_attachment*, %struct.mkv_attachment** %attachment, align 8, !dbg !5520
  %fileuid = getelementptr inbounds %struct.mkv_attachment, %struct.mkv_attachment* %124, i32 0, i32 1, !dbg !5521
  %125 = load i32, i32* %fileuid, align 4, !dbg !5521
  %126 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5522
  %tags92 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %126, i32 0, i32 4, !dbg !5523
  %call93 = call i32 @mkv_write_tag(%struct.AVFormatContext* %121, %struct.AVDictionary* %123, i32 25542, i32 %125, %struct.ebml_master* %tags92), !dbg !5524
  store i32 %call93, i32* %ret, align 4, !dbg !5525
  %127 = load i32, i32* %ret, align 4, !dbg !5526
  %cmp94 = icmp slt i32 %127, 0, !dbg !5528
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !5529

if.then95:                                        ; preds = %if.end90
  %128 = load i32, i32* %ret, align 4, !dbg !5530
  store i32 %128, i32* %retval, align 4, !dbg !5531
  br label %return, !dbg !5531

if.end96:                                         ; preds = %if.end90
  br label %for.inc97, !dbg !5532

for.inc97:                                        ; preds = %if.end96, %if.then89
  %129 = load i32, i32* %i, align 4, !dbg !5533
  %inc98 = add nsw i32 %129, 1, !dbg !5533
  store i32 %inc98, i32* %i, align 4, !dbg !5533
  br label %for.cond76, !dbg !5535, !llvm.loop !5536

for.end99:                                        ; preds = %for.cond76
  br label %if.end100, !dbg !5538

if.end100:                                        ; preds = %for.end99, %land.lhs.true72, %if.end70
  %130 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5539
  %tags101 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %130, i32 0, i32 4, !dbg !5541
  %pos = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %tags101, i32 0, i32 0, !dbg !5542
  %131 = load i64, i64* %pos, align 8, !dbg !5542
  %tobool102 = icmp ne i64 %131, 0, !dbg !5539
  br i1 %tobool102, label %if.then103, label %if.end119, !dbg !5543

if.then103:                                       ; preds = %if.end100
  %132 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5544
  %pb104 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %132, i32 0, i32 4, !dbg !5547
  %133 = load %struct.AVIOContext*, %struct.AVIOContext** %pb104, align 8, !dbg !5547
  %seekable105 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %133, i32 0, i32 19, !dbg !5548
  %134 = load i32, i32* %seekable105, align 8, !dbg !5548
  %and106 = and i32 %134, 1, !dbg !5549
  %tobool107 = icmp ne i32 %and106, 0, !dbg !5549
  br i1 %tobool107, label %land.lhs.true108, label %if.else, !dbg !5550

land.lhs.true108:                                 ; preds = %if.then103
  %135 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5551
  %is_live109 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %135, i32 0, i32 29, !dbg !5553
  %136 = load i32, i32* %is_live109, align 8, !dbg !5553
  %tobool110 = icmp ne i32 %136, 0, !dbg !5551
  br i1 %tobool110, label %if.else, label %if.then111, !dbg !5554

if.then111:                                       ; preds = %land.lhs.true108
  %137 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5555
  %pb112 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %137, i32 0, i32 4, !dbg !5556
  %138 = load %struct.AVIOContext*, %struct.AVIOContext** %pb112, align 8, !dbg !5556
  %139 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5557
  %tags_bc113 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %139, i32 0, i32 3, !dbg !5558
  %140 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5559
  %141 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5560
  %tags114 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %141, i32 0, i32 4, !dbg !5561
  %142 = bitcast %struct.ebml_master* %tags114 to { i64, i32 }*, !dbg !5562
  %143 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %142, i32 0, i32 0, !dbg !5562
  %144 = load i64, i64* %143, align 8, !dbg !5562
  %145 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %142, i32 0, i32 1, !dbg !5562
  %146 = load i32, i32* %145, align 8, !dbg !5562
  call void @end_ebml_master_crc32_preliminary(%struct.AVIOContext* %138, %struct.AVIOContext** %tags_bc113, %struct.MatroskaMuxContext* %140, i64 %144, i32 %146), !dbg !5562
  br label %if.end118, !dbg !5562

if.else:                                          ; preds = %land.lhs.true108, %if.then103
  %147 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5563
  %pb115 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %147, i32 0, i32 4, !dbg !5564
  %148 = load %struct.AVIOContext*, %struct.AVIOContext** %pb115, align 8, !dbg !5564
  %149 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5565
  %tags_bc116 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %149, i32 0, i32 3, !dbg !5566
  %150 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5567
  %151 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !5568
  %tags117 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %151, i32 0, i32 4, !dbg !5569
  %152 = bitcast %struct.ebml_master* %tags117 to { i64, i32 }*, !dbg !5570
  %153 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %152, i32 0, i32 0, !dbg !5570
  %154 = load i64, i64* %153, align 8, !dbg !5570
  %155 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %152, i32 0, i32 1, !dbg !5570
  %156 = load i32, i32* %155, align 8, !dbg !5570
  call void @end_ebml_master_crc32(%struct.AVIOContext* %148, %struct.AVIOContext** %tags_bc116, %struct.MatroskaMuxContext* %150, i64 %154, i32 %156), !dbg !5570
  br label %if.end118

if.end118:                                        ; preds = %if.else, %if.then111
  br label %if.end119, !dbg !5571

if.end119:                                        ; preds = %if.end118, %if.end100
  store i32 0, i32* %retval, align 4, !dbg !5572
  br label %return, !dbg !5572

return:                                           ; preds = %if.end119, %if.then95, %if.then65, %if.then18, %if.then3
  %157 = load i32, i32* %retval, align 4, !dbg !5573
  ret i32 %157, !dbg !5573
}

; Function Attrs: nounwind uwtable
define internal i64 @mkv_write_seekhead(%struct.AVIOContext* %pb, %struct.MatroskaMuxContext* %mkv) #0 !dbg !5574 {
entry:
  %s.addr.i32 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i32, metadata !2441, metadata !2445), !dbg !5577
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !5581
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %seekhead = alloca %struct.mkv_seekhead*, align 8
  %metaseek = alloca %struct.ebml_master, align 8
  %seekentry = alloca %struct.ebml_master, align 8
  %currentpos = alloca i64, align 8
  %i = alloca i32, align 4
  %entry13 = alloca %struct.mkv_seekhead_entry*, align 8
  %coerce = alloca %struct.ebml_master, align 8
  %remaining = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5583, metadata !2445), !dbg !5584
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !5585, metadata !2445), !dbg !5586
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !5587, metadata !2445), !dbg !5588
  call void @llvm.dbg.declare(metadata %struct.mkv_seekhead** %seekhead, metadata !5589, metadata !2445), !dbg !5590
  %0 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5591
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %0, i32 0, i32 16, !dbg !5592
  %1 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !5592
  store %struct.mkv_seekhead* %1, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5590
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %metaseek, metadata !5593, metadata !2445), !dbg !5594
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %seekentry, metadata !5595, metadata !2445), !dbg !5596
  call void @llvm.dbg.declare(metadata i64* %currentpos, metadata !5597, metadata !2445), !dbg !5598
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5599, metadata !2445), !dbg !5600
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5601
  store %struct.AVIOContext* %2, %struct.AVIOContext** %s.addr.i, align 8, !dbg !5602
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !5603
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %3, i64 0, i32 1) #11, !dbg !5604
  store i64 %call.i, i64* %currentpos, align 8, !dbg !5605
  %4 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5606
  %reserved_size = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %4, i32 0, i32 2, !dbg !5608
  %5 = load i32, i32* %reserved_size, align 8, !dbg !5608
  %cmp = icmp sgt i32 %5, 0, !dbg !5609
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5610

if.then:                                          ; preds = %entry
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5611
  %7 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5614
  %filepos = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %7, i32 0, i32 0, !dbg !5615
  %8 = load i64, i64* %filepos, align 8, !dbg !5615
  %call1 = call i64 @avio_seek(%struct.AVIOContext* %6, i64 %8, i32 0), !dbg !5616
  %cmp2 = icmp slt i64 %call1, 0, !dbg !5617
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5618

if.then3:                                         ; preds = %if.then
  store i64 -1, i64* %currentpos, align 8, !dbg !5619
  br label %fail, !dbg !5621

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !5622

if.end4:                                          ; preds = %if.end, %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5623
  %10 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5625
  %11 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5626
  %reserved_size5 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %11, i32 0, i32 2, !dbg !5627
  %12 = load i32, i32* %reserved_size5, align 8, !dbg !5627
  %conv = sext i32 %12 to i64, !dbg !5626
  %call6 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %9, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %10, %struct.ebml_master* %metaseek, i32 290298740, i64 %conv), !dbg !5628
  %cmp7 = icmp slt i32 %call6, 0, !dbg !5629
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !5630

if.then9:                                         ; preds = %if.end4
  store i64 -1, i64* %currentpos, align 8, !dbg !5631
  br label %fail, !dbg !5633

if.end10:                                         ; preds = %if.end4
  store i32 0, i32* %i, align 4, !dbg !5634
  br label %for.cond, !dbg !5636

for.cond:                                         ; preds = %for.inc, %if.end10
  %13 = load i32, i32* %i, align 4, !dbg !5637
  %14 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5640
  %num_entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %14, i32 0, i32 5, !dbg !5641
  %15 = load i32, i32* %num_entries, align 8, !dbg !5641
  %cmp11 = icmp slt i32 %13, %15, !dbg !5642
  br i1 %cmp11, label %for.body, label %for.end, !dbg !5643

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.mkv_seekhead_entry** %entry13, metadata !5644, metadata !2445), !dbg !5646
  %16 = load i32, i32* %i, align 4, !dbg !5647
  %idxprom = sext i32 %16 to i64, !dbg !5648
  %17 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5648
  %entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %17, i32 0, i32 4, !dbg !5649
  %18 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entries, align 8, !dbg !5649
  %arrayidx = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %18, i64 %idxprom, !dbg !5648
  store %struct.mkv_seekhead_entry* %arrayidx, %struct.mkv_seekhead_entry** %entry13, align 8, !dbg !5646
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5650
  %call14 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %19, i32 19899, i64 21), !dbg !5651
  %20 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !5651
  %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0, !dbg !5651
  %22 = extractvalue { i64, i32 } %call14, 0, !dbg !5651
  store i64 %22, i64* %21, align 8, !dbg !5651
  %23 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1, !dbg !5651
  %24 = extractvalue { i64, i32 } %call14, 1, !dbg !5651
  store i32 %24, i32* %23, align 8, !dbg !5651
  %25 = bitcast %struct.ebml_master* %seekentry to i8*, !dbg !5651
  %26 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !5651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false), !dbg !5652
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5654
  call void @put_ebml_id(%struct.AVIOContext* %27, i32 21419), !dbg !5655
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5656
  %29 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entry13, align 8, !dbg !5657
  %elementid = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %29, i32 0, i32 0, !dbg !5658
  %30 = load i32, i32* %elementid, align 8, !dbg !5658
  %call15 = call i32 @ebml_id_size(i32 %30), !dbg !5659
  %conv16 = sext i32 %call15 to i64, !dbg !5659
  call void @put_ebml_num(%struct.AVIOContext* %28, i64 %conv16, i32 0), !dbg !5660
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5661
  %32 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entry13, align 8, !dbg !5662
  %elementid17 = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %32, i32 0, i32 0, !dbg !5663
  %33 = load i32, i32* %elementid17, align 8, !dbg !5663
  call void @put_ebml_id(%struct.AVIOContext* %31, i32 %33), !dbg !5664
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5665
  %35 = load %struct.mkv_seekhead_entry*, %struct.mkv_seekhead_entry** %entry13, align 8, !dbg !5666
  %segmentpos = getelementptr inbounds %struct.mkv_seekhead_entry, %struct.mkv_seekhead_entry* %35, i32 0, i32 1, !dbg !5667
  %36 = load i64, i64* %segmentpos, align 8, !dbg !5667
  call void @put_ebml_uint(%struct.AVIOContext* %34, i32 21420, i64 %36), !dbg !5668
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !5669
  %38 = bitcast %struct.ebml_master* %seekentry to { i64, i32 }*, !dbg !5670
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 0, !dbg !5670
  %40 = load i64, i64* %39, align 8, !dbg !5670
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 1, !dbg !5670
  %42 = load i32, i32* %41, align 8, !dbg !5670
  call void @end_ebml_master(%struct.AVIOContext* %37, i64 %40, i32 %42), !dbg !5670
  br label %for.inc, !dbg !5671

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %i, align 4, !dbg !5672
  %inc = add nsw i32 %43, 1, !dbg !5672
  store i32 %inc, i32* %i, align 4, !dbg !5672
  br label %for.cond, !dbg !5674, !llvm.loop !5675

for.end:                                          ; preds = %for.cond
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5677
  %45 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5678
  %46 = bitcast %struct.ebml_master* %metaseek to { i64, i32 }*, !dbg !5679
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 0, !dbg !5679
  %48 = load i64, i64* %47, align 8, !dbg !5679
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 1, !dbg !5679
  %50 = load i32, i32* %49, align 8, !dbg !5679
  call void @end_ebml_master_crc32(%struct.AVIOContext* %44, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %45, i64 %48, i32 %50), !dbg !5679
  %51 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5680
  %reserved_size18 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %51, i32 0, i32 2, !dbg !5681
  %52 = load i32, i32* %reserved_size18, align 8, !dbg !5681
  %cmp19 = icmp sgt i32 %52, 0, !dbg !5682
  br i1 %cmp19, label %if.then21, label %if.end28, !dbg !5683

if.then21:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !5684, metadata !2445), !dbg !5685
  %53 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5686
  %filepos22 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %53, i32 0, i32 0, !dbg !5687
  %54 = load i64, i64* %filepos22, align 8, !dbg !5687
  %55 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5688
  %reserved_size23 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %55, i32 0, i32 2, !dbg !5689
  %56 = load i32, i32* %reserved_size23, align 8, !dbg !5689
  %conv24 = sext i32 %56 to i64, !dbg !5688
  %add = add nsw i64 %54, %conv24, !dbg !5690
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5691
  store %struct.AVIOContext* %57, %struct.AVIOContext** %s.addr.i32, align 8, !dbg !5692
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i32, align 8, !dbg !5693
  %call.i33 = call i64 @avio_seek(%struct.AVIOContext* %58, i64 0, i32 1) #11, !dbg !5694
  %sub = sub nsw i64 %add, %call.i33, !dbg !5695
  store i64 %sub, i64* %remaining, align 8, !dbg !5685
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5696
  %60 = load i64, i64* %remaining, align 8, !dbg !5697
  call void @put_ebml_void(%struct.AVIOContext* %59, i64 %60), !dbg !5698
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5699
  %62 = load i64, i64* %currentpos, align 8, !dbg !5700
  %call26 = call i64 @avio_seek(%struct.AVIOContext* %61, i64 %62, i32 0), !dbg !5701
  %63 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %seekhead, align 8, !dbg !5702
  %filepos27 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %63, i32 0, i32 0, !dbg !5703
  %64 = load i64, i64* %filepos27, align 8, !dbg !5703
  store i64 %64, i64* %currentpos, align 8, !dbg !5704
  br label %if.end28, !dbg !5705

if.end28:                                         ; preds = %if.then21, %for.end
  br label %fail, !dbg !5706

fail:                                             ; preds = %if.end28, %if.then9, %if.then3
  %65 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5708
  %main_seekhead29 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %65, i32 0, i32 16, !dbg !5709
  %66 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead29, align 8, !dbg !5709
  %entries30 = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %66, i32 0, i32 4, !dbg !5710
  %67 = bitcast %struct.mkv_seekhead_entry** %entries30 to i8*, !dbg !5711
  call void @av_freep(i8* %67), !dbg !5712
  %68 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5713
  %main_seekhead31 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %68, i32 0, i32 16, !dbg !5714
  %69 = bitcast %struct.mkv_seekhead** %main_seekhead31 to i8*, !dbg !5715
  call void @av_freep(i8* %69), !dbg !5716
  %70 = load i64, i64* %currentpos, align 8, !dbg !5717
  ret i64 %70, !dbg !5718
}

; Function Attrs: nounwind uwtable
define internal %struct.mkv_cues* @mkv_start_cues(i64 %segment_offset) #0 !dbg !5719 {
entry:
  %retval = alloca %struct.mkv_cues*, align 8
  %segment_offset.addr = alloca i64, align 8
  %cues = alloca %struct.mkv_cues*, align 8
  store i64 %segment_offset, i64* %segment_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %segment_offset.addr, metadata !5722, metadata !2445), !dbg !5723
  call void @llvm.dbg.declare(metadata %struct.mkv_cues** %cues, metadata !5724, metadata !2445), !dbg !5725
  %call = call noalias i8* @av_mallocz(i64 24), !dbg !5726
  %0 = bitcast i8* %call to %struct.mkv_cues*, !dbg !5726
  store %struct.mkv_cues* %0, %struct.mkv_cues** %cues, align 8, !dbg !5725
  %1 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !5727
  %tobool = icmp ne %struct.mkv_cues* %1, null, !dbg !5727
  br i1 %tobool, label %if.end, label %if.then, !dbg !5729

if.then:                                          ; preds = %entry
  store %struct.mkv_cues* null, %struct.mkv_cues** %retval, align 8, !dbg !5730
  br label %return, !dbg !5730

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %segment_offset.addr, align 8, !dbg !5731
  %3 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !5732
  %segment_offset1 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %3, i32 0, i32 0, !dbg !5733
  store i64 %2, i64* %segment_offset1, align 8, !dbg !5734
  %4 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !5735
  store %struct.mkv_cues* %4, %struct.mkv_cues** %retval, align 8, !dbg !5736
  br label %return, !dbg !5736

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.mkv_cues*, %struct.mkv_cues** %retval, align 8, !dbg !5737
  ret %struct.mkv_cues* %5, !dbg !5737
}

declare void @av_init_packet(%struct.AVPacket*) #1

declare void @avio_flush(%struct.AVIOContext*) #1

; Function Attrs: nounwind uwtable
define internal void @mkv_free(%struct.MatroskaMuxContext* %mkv) #0 !dbg !5738 {
entry:
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %buf = alloca i8*, align 8
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !5741, metadata !2445), !dbg !5742
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5743, metadata !2445), !dbg !5744
  %0 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5745
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %0, i32 0, i32 2, !dbg !5747
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc, align 8, !dbg !5747
  %tobool = icmp ne %struct.AVIOContext* %1, null, !dbg !5745
  br i1 %tobool, label %if.then, label %if.end, !dbg !5748

if.then:                                          ; preds = %entry
  %2 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5749
  %dyn_bc1 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %2, i32 0, i32 2, !dbg !5751
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc1, align 8, !dbg !5751
  %call = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %3, i8** %buf), !dbg !5752
  %4 = load i8*, i8** %buf, align 8, !dbg !5753
  call void @av_free(i8* %4), !dbg !5754
  br label %if.end, !dbg !5755

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5756
  %info_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 5, !dbg !5758
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %info_bc, align 8, !dbg !5758
  %tobool2 = icmp ne %struct.AVIOContext* %6, null, !dbg !5756
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !5759

if.then3:                                         ; preds = %if.end
  %7 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5760
  %info_bc4 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %7, i32 0, i32 5, !dbg !5762
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %info_bc4, align 8, !dbg !5762
  %call5 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %8, i8** %buf), !dbg !5763
  %9 = load i8*, i8** %buf, align 8, !dbg !5764
  call void @av_free(i8* %9), !dbg !5765
  br label %if.end6, !dbg !5766

if.end6:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5767
  %tracks_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %10, i32 0, i32 7, !dbg !5769
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc, align 8, !dbg !5769
  %tobool7 = icmp ne %struct.AVIOContext* %11, null, !dbg !5767
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !5770

if.then8:                                         ; preds = %if.end6
  %12 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5771
  %tracks_bc9 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %12, i32 0, i32 7, !dbg !5773
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc9, align 8, !dbg !5773
  %call10 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %13, i8** %buf), !dbg !5774
  %14 = load i8*, i8** %buf, align 8, !dbg !5775
  call void @av_free(i8* %14), !dbg !5776
  br label %if.end11, !dbg !5777

if.end11:                                         ; preds = %if.then8, %if.end6
  %15 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5778
  %tags_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %15, i32 0, i32 3, !dbg !5780
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc, align 8, !dbg !5780
  %tobool12 = icmp ne %struct.AVIOContext* %16, null, !dbg !5778
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !5781

if.then13:                                        ; preds = %if.end11
  %17 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5782
  %tags_bc14 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %17, i32 0, i32 3, !dbg !5784
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc14, align 8, !dbg !5784
  %call15 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %18, i8** %buf), !dbg !5785
  %19 = load i8*, i8** %buf, align 8, !dbg !5786
  call void @av_free(i8* %19), !dbg !5787
  br label %if.end16, !dbg !5788

if.end16:                                         ; preds = %if.then13, %if.end11
  %20 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5789
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %20, i32 0, i32 16, !dbg !5791
  %21 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !5791
  %tobool17 = icmp ne %struct.mkv_seekhead* %21, null, !dbg !5789
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !5792

if.then18:                                        ; preds = %if.end16
  %22 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5793
  %main_seekhead19 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %22, i32 0, i32 16, !dbg !5795
  %23 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead19, align 8, !dbg !5795
  %entries = getelementptr inbounds %struct.mkv_seekhead, %struct.mkv_seekhead* %23, i32 0, i32 4, !dbg !5796
  %24 = bitcast %struct.mkv_seekhead_entry** %entries to i8*, !dbg !5797
  call void @av_freep(i8* %24), !dbg !5798
  %25 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5799
  %main_seekhead20 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %25, i32 0, i32 16, !dbg !5800
  %26 = bitcast %struct.mkv_seekhead** %main_seekhead20 to i8*, !dbg !5801
  call void @av_freep(i8* %26), !dbg !5802
  br label %if.end21, !dbg !5803

if.end21:                                         ; preds = %if.then18, %if.end16
  %27 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5804
  %cues = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %27, i32 0, i32 17, !dbg !5806
  %28 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !5806
  %tobool22 = icmp ne %struct.mkv_cues* %28, null, !dbg !5804
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !5807

if.then23:                                        ; preds = %if.end21
  %29 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5808
  %cues24 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %29, i32 0, i32 17, !dbg !5810
  %30 = load %struct.mkv_cues*, %struct.mkv_cues** %cues24, align 8, !dbg !5810
  %entries25 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %30, i32 0, i32 1, !dbg !5811
  %31 = bitcast %struct.mkv_cuepoint** %entries25 to i8*, !dbg !5812
  call void @av_freep(i8* %31), !dbg !5813
  %32 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5814
  %cues26 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %32, i32 0, i32 17, !dbg !5815
  %33 = bitcast %struct.mkv_cues** %cues26 to i8*, !dbg !5816
  call void @av_freep(i8* %33), !dbg !5817
  br label %if.end27, !dbg !5818

if.end27:                                         ; preds = %if.then23, %if.end21
  %34 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5819
  %attachments = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %34, i32 0, i32 19, !dbg !5821
  %35 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments, align 8, !dbg !5821
  %tobool28 = icmp ne %struct.mkv_attachments* %35, null, !dbg !5819
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !5822

if.then29:                                        ; preds = %if.end27
  %36 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5823
  %attachments30 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %36, i32 0, i32 19, !dbg !5825
  %37 = load %struct.mkv_attachments*, %struct.mkv_attachments** %attachments30, align 8, !dbg !5825
  %entries31 = getelementptr inbounds %struct.mkv_attachments, %struct.mkv_attachments* %37, i32 0, i32 0, !dbg !5826
  %38 = bitcast %struct.mkv_attachment** %entries31 to i8*, !dbg !5827
  call void @av_freep(i8* %38), !dbg !5828
  %39 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5829
  %attachments32 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %39, i32 0, i32 19, !dbg !5830
  %40 = bitcast %struct.mkv_attachments** %attachments32 to i8*, !dbg !5831
  call void @av_freep(i8* %40), !dbg !5832
  br label %if.end33, !dbg !5833

if.end33:                                         ; preds = %if.then29, %if.end27
  %41 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5834
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %41, i32 0, i32 18, !dbg !5835
  %42 = bitcast %struct.mkv_track** %tracks to i8*, !dbg !5836
  call void @av_freep(i8* %42), !dbg !5837
  %43 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5838
  %stream_durations = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %43, i32 0, i32 34, !dbg !5839
  %44 = bitcast i64** %stream_durations to i8*, !dbg !5840
  call void @av_freep(i8* %44), !dbg !5841
  %45 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !5842
  %stream_duration_offsets = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %45, i32 0, i32 35, !dbg !5843
  %46 = bitcast i64** %stream_duration_offsets to i8*, !dbg !5844
  call void @av_freep(i8* %46), !dbg !5845
  ret void, !dbg !5846
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_num_size(i64 %num) #0 !dbg !5847 {
entry:
  %num.addr = alloca i64, align 8
  %bytes = alloca i32, align 4
  store i64 %num, i64* %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %num.addr, metadata !5850, metadata !2445), !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !5852, metadata !2445), !dbg !5853
  store i32 1, i32* %bytes, align 4, !dbg !5853
  br label %while.cond, !dbg !5854

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %num.addr, align 8, !dbg !5855
  %add = add i64 %0, 1, !dbg !5857
  %1 = load i32, i32* %bytes, align 4, !dbg !5858
  %mul = mul nsw i32 %1, 7, !dbg !5859
  %sh_prom = zext i32 %mul to i64, !dbg !5860
  %shr = lshr i64 %add, %sh_prom, !dbg !5860
  %tobool = icmp ne i64 %shr, 0, !dbg !5861
  br i1 %tobool, label %while.body, label %while.end, !dbg !5861

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %bytes, align 4, !dbg !5862
  %inc = add nsw i32 %2, 1, !dbg !5862
  store i32 %inc, i32* %bytes, align 4, !dbg !5862
  br label %while.cond, !dbg !5863, !llvm.loop !5865

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* %bytes, align 4, !dbg !5866
  ret i32 %3, !dbg !5867
}

; Function Attrs: nounwind uwtable
define internal void @put_ebml_id(%struct.AVIOContext* %pb, i32 %id) #0 !dbg !5868 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5871, metadata !2445), !dbg !5872
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5873, metadata !2445), !dbg !5874
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5875, metadata !2445), !dbg !5876
  %0 = load i32, i32* %id.addr, align 4, !dbg !5877
  %call = call i32 @ebml_id_size(i32 %0), !dbg !5878
  store i32 %call, i32* %i, align 4, !dbg !5876
  br label %while.cond, !dbg !5879

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5880
  %dec = add nsw i32 %1, -1, !dbg !5880
  store i32 %dec, i32* %i, align 4, !dbg !5880
  %tobool = icmp ne i32 %1, 0, !dbg !5882
  br i1 %tobool, label %while.body, label %while.end, !dbg !5882

while.body:                                       ; preds = %while.cond
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5883
  %3 = load i32, i32* %id.addr, align 4, !dbg !5884
  %4 = load i32, i32* %i, align 4, !dbg !5885
  %mul = mul nsw i32 %4, 8, !dbg !5886
  %shr = lshr i32 %3, %mul, !dbg !5887
  %conv = trunc i32 %shr to i8, !dbg !5888
  %conv1 = zext i8 %conv to i32, !dbg !5888
  call void @avio_w8(%struct.AVIOContext* %2, i32 %conv1), !dbg !5889
  br label %while.cond, !dbg !5890, !llvm.loop !5892

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5893
}

; Function Attrs: nounwind uwtable
define internal void @put_ebml_size_unknown(%struct.AVIOContext* %pb, i32 %bytes) #0 !dbg !5894 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5897, metadata !2445), !dbg !5898
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !5899, metadata !2445), !dbg !5900
  br label %do.body, !dbg !5901, !llvm.loop !5902

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %bytes.addr, align 4, !dbg !5903
  %cmp = icmp sle i32 %0, 8, !dbg !5907
  br i1 %cmp, label %if.end, label %if.then, !dbg !5908

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 201), !dbg !5909
  call void @abort() #12, !dbg !5912
  unreachable, !dbg !5914

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !5915

do.end:                                           ; preds = %if.end
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5917
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !5918
  %shr = ashr i32 511, %2, !dbg !5919
  call void @avio_w8(%struct.AVIOContext* %1, i32 %shr), !dbg !5920
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5921
  %4 = load i32, i32* %bytes.addr, align 4, !dbg !5922
  %sub = sub nsw i32 %4, 1, !dbg !5923
  call void @ffio_fill(%struct.AVIOContext* %3, i32 255, i32 %sub), !dbg !5924
  ret void, !dbg !5925
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_id_size(i32 %id) #0 !dbg !5926 {
entry:
  %id.addr = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5929, metadata !2445), !dbg !5930
  %0 = load i32, i32* %id.addr, align 4, !dbg !5931
  %add = add i32 %0, 1, !dbg !5932
  %or = or i32 %add, 1, !dbg !5933
  %1 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5934
  %sub = sub nsw i32 31, %1, !dbg !5935
  %sub1 = sub nsw i32 %sub, 1, !dbg !5936
  %div = sdiv i32 %sub1, 7, !dbg !5937
  %add2 = add nsw i32 %div, 1, !dbg !5938
  ret i32 %add2, !dbg !5939
}

declare void @avio_w8(%struct.AVIOContext*, i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: noreturn nounwind
declare void @abort() #8

declare void @ffio_fill(%struct.AVIOContext*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal void @put_ebml_num(%struct.AVIOContext* %pb, i64 %num, i32 %bytes) #0 !dbg !5940 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %num.addr = alloca i64, align 8
  %bytes.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %needed_bytes = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5943, metadata !2445), !dbg !5944
  store i64 %num, i64* %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %num.addr, metadata !5945, metadata !2445), !dbg !5946
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !5947, metadata !2445), !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5949, metadata !2445), !dbg !5950
  call void @llvm.dbg.declare(metadata i32* %needed_bytes, metadata !5951, metadata !2445), !dbg !5952
  %0 = load i64, i64* %num.addr, align 8, !dbg !5953
  %call = call i32 @ebml_num_size(i64 %0), !dbg !5954
  store i32 %call, i32* %needed_bytes, align 4, !dbg !5952
  br label %do.body, !dbg !5955, !llvm.loop !5956

do.body:                                          ; preds = %entry
  %1 = load i64, i64* %num.addr, align 8, !dbg !5957
  %cmp = icmp ult i64 %1, 72057594037927935, !dbg !5961
  br i1 %cmp, label %if.end, label %if.then, !dbg !5962

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 228), !dbg !5963
  call void @abort() #12, !dbg !5966
  unreachable, !dbg !5968

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !5969

do.end:                                           ; preds = %if.end
  %2 = load i32, i32* %bytes.addr, align 4, !dbg !5971
  %cmp1 = icmp eq i32 %2, 0, !dbg !5973
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5974

if.then2:                                         ; preds = %do.end
  %3 = load i32, i32* %needed_bytes, align 4, !dbg !5975
  store i32 %3, i32* %bytes.addr, align 4, !dbg !5976
  br label %if.end3, !dbg !5977

if.end3:                                          ; preds = %if.then2, %do.end
  br label %do.body4, !dbg !5978, !llvm.loop !5979

do.body4:                                         ; preds = %if.end3
  %4 = load i32, i32* %bytes.addr, align 4, !dbg !5980
  %5 = load i32, i32* %needed_bytes, align 4, !dbg !5984
  %cmp5 = icmp sge i32 %4, %5, !dbg !5985
  br i1 %cmp5, label %if.end7, label %if.then6, !dbg !5986

if.then6:                                         ; preds = %do.body4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 235), !dbg !5987
  call void @abort() #12, !dbg !5990
  unreachable, !dbg !5992

if.end7:                                          ; preds = %do.body4
  br label %do.end8, !dbg !5993

do.end8:                                          ; preds = %if.end7
  %6 = load i32, i32* %bytes.addr, align 4, !dbg !5995
  %mul = mul nsw i32 %6, 7, !dbg !5996
  %sh_prom = zext i32 %mul to i64, !dbg !5997
  %shl = shl i64 1, %sh_prom, !dbg !5997
  %7 = load i64, i64* %num.addr, align 8, !dbg !5998
  %or = or i64 %7, %shl, !dbg !5998
  store i64 %or, i64* %num.addr, align 8, !dbg !5998
  %8 = load i32, i32* %bytes.addr, align 4, !dbg !5999
  %sub = sub nsw i32 %8, 1, !dbg !6001
  store i32 %sub, i32* %i, align 4, !dbg !6002
  br label %for.cond, !dbg !6003

for.cond:                                         ; preds = %for.inc, %do.end8
  %9 = load i32, i32* %i, align 4, !dbg !6004
  %cmp9 = icmp sge i32 %9, 0, !dbg !6007
  br i1 %cmp9, label %for.body, label %for.end, !dbg !6008

for.body:                                         ; preds = %for.cond
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6009
  %11 = load i64, i64* %num.addr, align 8, !dbg !6010
  %12 = load i32, i32* %i, align 4, !dbg !6011
  %mul10 = mul nsw i32 %12, 8, !dbg !6012
  %sh_prom11 = zext i32 %mul10 to i64, !dbg !6013
  %shr = lshr i64 %11, %sh_prom11, !dbg !6013
  %conv = trunc i64 %shr to i8, !dbg !6014
  %conv12 = zext i8 %conv to i32, !dbg !6014
  call void @avio_w8(%struct.AVIOContext* %10, i32 %conv12), !dbg !6015
  br label %for.inc, !dbg !6015

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !6016
  %dec = add nsw i32 %13, -1, !dbg !6016
  store i32 %dec, i32* %i, align 4, !dbg !6016
  br label %for.cond, !dbg !6018, !llvm.loop !6019

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6021
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #1

declare i8* @av_realloc_array(i8*, i64, i64) #1

declare i32 @avio_open_dyn_buf(%struct.AVIOContext**) #1

declare void @avio_write(%struct.AVIOContext*, i8*, i32) #1

declare i32 @av_parse_time(i64*, i8*, i32) #1

declare void @avio_wb64(%struct.AVIOContext*, i64) #1

declare i32 @avio_get_dyn_buf(%struct.AVIOContext*, i8**) #1

declare i32 @avio_close_dyn_buf(%struct.AVIOContext*, i8**) #1

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #3

declare i32* @av_crc_get_table(i32) #1

declare void @av_free(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_track(%struct.AVFormatContext* %s, %struct.MatroskaMuxContext* %mkv, i32 %i, %struct.AVIOContext* %pb, i32 %default_stream_exists) #0 !dbg !6022 {
entry:
  %s.addr.i444 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i444, metadata !2441, metadata !2445), !dbg !6025
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !6029
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !6032, metadata !2445), !dbg !6036
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !6040, metadata !2445), !dbg !6041
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mkv.addr = alloca %struct.MatroskaMuxContext*, align 8
  %i.addr = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %default_stream_exists.addr = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %subinfo = alloca %struct.ebml_master, align 8
  %track = alloca %struct.ebml_master, align 8
  %native_id = alloca i32, align 4
  %qt_id = alloca i32, align 4
  %bit_depth = alloca i32, align 4
  %sample_rate = alloca i32, align 4
  %output_sample_rate = alloca i32, align 4
  %display_width_div = alloca i32, align 4
  %display_height_div = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %tag = alloca %struct.AVDictionaryEntry*, align 8
  %coerce = alloca %struct.ebml_master, align 8
  %codec_id86 = alloca i8*, align 8
  %codecdelay = alloca i64, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral185 = alloca %struct.AVRational, align 4
  %agg.tmp = alloca %struct.AVRational, align 4
  %coerce259 = alloca %struct.ebml_master, align 8
  %d_width = alloca i64, align 8
  %display_aspect_ratio = alloca %struct.AVRational, align 4
  %color_space = alloca i32, align 4
  %coerce396 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6042, metadata !2445), !dbg !6043
  store %struct.MatroskaMuxContext* %mkv, %struct.MatroskaMuxContext** %mkv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv.addr, metadata !6044, metadata !2445), !dbg !6045
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6046, metadata !2445), !dbg !6047
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !6048, metadata !2445), !dbg !6049
  store i32 %default_stream_exists, i32* %default_stream_exists.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_stream_exists.addr, metadata !6050, metadata !2445), !dbg !6051
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !6052, metadata !2445), !dbg !6053
  %0 = load i32, i32* %i.addr, align 4, !dbg !6054
  %idxprom = sext i32 %0 to i64, !dbg !6055
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6055
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 7, !dbg !6056
  %2 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6056
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %2, i64 %idxprom, !dbg !6055
  %3 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !6055
  store %struct.AVStream* %3, %struct.AVStream** %st, align 8, !dbg !6053
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !6057, metadata !2445), !dbg !6058
  %4 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6059
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %4, i32 0, i32 19, !dbg !6060
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !6060
  store %struct.AVCodecParameters* %5, %struct.AVCodecParameters** %par, align 8, !dbg !6058
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %subinfo, metadata !6061, metadata !2445), !dbg !6062
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %track, metadata !6063, metadata !2445), !dbg !6064
  call void @llvm.dbg.declare(metadata i32* %native_id, metadata !6065, metadata !2445), !dbg !6066
  store i32 0, i32* %native_id, align 4, !dbg !6066
  call void @llvm.dbg.declare(metadata i32* %qt_id, metadata !6067, metadata !2445), !dbg !6068
  store i32 0, i32* %qt_id, align 4, !dbg !6068
  call void @llvm.dbg.declare(metadata i32* %bit_depth, metadata !6069, metadata !2445), !dbg !6070
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6071
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 1, !dbg !6072
  %7 = load i32, i32* %codec_id, align 4, !dbg !6072
  %call = call i32 @av_get_bits_per_sample(i32 %7), !dbg !6073
  store i32 %call, i32* %bit_depth, align 4, !dbg !6070
  call void @llvm.dbg.declare(metadata i32* %sample_rate, metadata !6074, metadata !2445), !dbg !6075
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6076
  %sample_rate1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 23, !dbg !6077
  %9 = load i32, i32* %sample_rate1, align 4, !dbg !6077
  store i32 %9, i32* %sample_rate, align 4, !dbg !6075
  call void @llvm.dbg.declare(metadata i32* %output_sample_rate, metadata !6078, metadata !2445), !dbg !6079
  store i32 0, i32* %output_sample_rate, align 4, !dbg !6079
  call void @llvm.dbg.declare(metadata i32* %display_width_div, metadata !6080, metadata !2445), !dbg !6081
  store i32 1, i32* %display_width_div, align 4, !dbg !6081
  call void @llvm.dbg.declare(metadata i32* %display_height_div, metadata !6082, metadata !2445), !dbg !6083
  store i32 1, i32* %display_height_div, align 4, !dbg !6083
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6084, metadata !2445), !dbg !6085
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6086, metadata !2445), !dbg !6087
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tag, metadata !6088, metadata !2445), !dbg !6089
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6090
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 0, !dbg !6092
  %11 = load i32, i32* %codec_type, align 8, !dbg !6092
  %cmp = icmp eq i32 %11, 4, !dbg !6093
  br i1 %cmp, label %if.then, label %if.end, !dbg !6094

if.then:                                          ; preds = %entry
  %12 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6095
  %have_attachments = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %12, i32 0, i32 21, !dbg !6097
  store i32 1, i32* %have_attachments, align 8, !dbg !6098
  store i32 0, i32* %retval, align 4, !dbg !6099
  br label %return, !dbg !6099

if.end:                                           ; preds = %entry
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6100
  %codec_type2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 0, !dbg !6102
  %14 = load i32, i32* %codec_type2, align 8, !dbg !6102
  %cmp3 = icmp eq i32 %14, 1, !dbg !6103
  br i1 %cmp3, label %if.then4, label %if.end17, !dbg !6104

if.then4:                                         ; preds = %if.end
  %15 = load i32, i32* %bit_depth, align 4, !dbg !6105
  %tobool = icmp ne i32 %15, 0, !dbg !6105
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !6108

land.lhs.true:                                    ; preds = %if.then4
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6109
  %codec_id5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 1, !dbg !6111
  %17 = load i32, i32* %codec_id5, align 4, !dbg !6111
  %cmp6 = icmp ne i32 %17, 69643, !dbg !6112
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !6113

if.then7:                                         ; preds = %land.lhs.true
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6114
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 8, !dbg !6117
  %19 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !6117
  %tobool8 = icmp ne i32 %19, 0, !dbg !6114
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6118

if.then9:                                         ; preds = %if.then7
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6119
  %bits_per_raw_sample10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 8, !dbg !6120
  %21 = load i32, i32* %bits_per_raw_sample10, align 4, !dbg !6120
  store i32 %21, i32* %bit_depth, align 4, !dbg !6121
  br label %if.end12, !dbg !6122

if.else:                                          ; preds = %if.then7
  %22 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6123
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %22, i32 0, i32 5, !dbg !6124
  %23 = load i32, i32* %format, align 4, !dbg !6124
  %call11 = call i32 @av_get_bytes_per_sample(i32 %23), !dbg !6125
  %shl = shl i32 %call11, 3, !dbg !6126
  store i32 %shl, i32* %bit_depth, align 4, !dbg !6127
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  br label %if.end13, !dbg !6128

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %if.then4
  %24 = load i32, i32* %bit_depth, align 4, !dbg !6129
  %tobool14 = icmp ne i32 %24, 0, !dbg !6129
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6131

if.then15:                                        ; preds = %if.end13
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6132
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 7, !dbg !6133
  %26 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !6133
  store i32 %26, i32* %bit_depth, align 4, !dbg !6134
  br label %if.end16, !dbg !6135

if.end16:                                         ; preds = %if.then15, %if.end13
  br label %if.end17, !dbg !6136

if.end17:                                         ; preds = %if.end16, %if.end
  %27 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6137
  %codec_id18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %27, i32 0, i32 1, !dbg !6139
  %28 = load i32, i32* %codec_id18, align 4, !dbg !6139
  %cmp19 = icmp eq i32 %28, 86018, !dbg !6140
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !6141

if.then20:                                        ; preds = %if.end17
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6142
  %30 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6144
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %30, i32 0, i32 3, !dbg !6145
  %31 = load i8*, i8** %extradata, align 8, !dbg !6145
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6146
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 4, !dbg !6147
  %33 = load i32, i32* %extradata_size, align 8, !dbg !6147
  %call21 = call i32 @get_aac_sample_rates(%struct.AVFormatContext* %29, i8* %31, i32 %33, i32* %sample_rate, i32* %output_sample_rate), !dbg !6148
  store i32 %call21, i32* %ret, align 4, !dbg !6149
  %34 = load i32, i32* %ret, align 4, !dbg !6150
  %cmp22 = icmp slt i32 %34, 0, !dbg !6152
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !6153

if.then23:                                        ; preds = %if.then20
  %35 = load i32, i32* %ret, align 4, !dbg !6154
  store i32 %35, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

if.end24:                                         ; preds = %if.then20
  br label %if.end25, !dbg !6156

if.end25:                                         ; preds = %if.end24, %if.end17
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6157
  %call26 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %36, i32 174, i64 0), !dbg !6158
  %37 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !6158
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0, !dbg !6158
  %39 = extractvalue { i64, i32 } %call26, 0, !dbg !6158
  store i64 %39, i64* %38, align 8, !dbg !6158
  %40 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1, !dbg !6158
  %41 = extractvalue { i64, i32 } %call26, 1, !dbg !6158
  store i32 %41, i32* %40, align 8, !dbg !6158
  %42 = bitcast %struct.ebml_master* %track to i8*, !dbg !6158
  %43 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !6158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false), !dbg !6159
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6161
  %45 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6162
  %is_dash = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %45, i32 0, i32 27, !dbg !6163
  %46 = load i32, i32* %is_dash, align 8, !dbg !6163
  %tobool27 = icmp ne i32 %46, 0, !dbg !6162
  br i1 %tobool27, label %cond.true, label %cond.false, !dbg !6162

cond.true:                                        ; preds = %if.end25
  %47 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6164
  %dash_track_number = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %47, i32 0, i32 28, !dbg !6165
  %48 = load i32, i32* %dash_track_number, align 4, !dbg !6165
  br label %cond.end, !dbg !6166

cond.false:                                       ; preds = %if.end25
  %49 = load i32, i32* %i.addr, align 4, !dbg !6167
  %add = add nsw i32 %49, 1, !dbg !6169
  br label %cond.end, !dbg !6170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %48, %cond.true ], [ %add, %cond.false ], !dbg !6171
  %conv = sext i32 %cond to i64, !dbg !6171
  call void @put_ebml_uint(%struct.AVIOContext* %44, i32 215, i64 %conv), !dbg !6173
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6174
  %51 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6175
  %is_dash28 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %51, i32 0, i32 27, !dbg !6176
  %52 = load i32, i32* %is_dash28, align 8, !dbg !6176
  %tobool29 = icmp ne i32 %52, 0, !dbg !6175
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !6175

cond.true30:                                      ; preds = %cond.end
  %53 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6177
  %dash_track_number31 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %53, i32 0, i32 28, !dbg !6178
  %54 = load i32, i32* %dash_track_number31, align 4, !dbg !6178
  br label %cond.end34, !dbg !6179

cond.false32:                                     ; preds = %cond.end
  %55 = load i32, i32* %i.addr, align 4, !dbg !6180
  %add33 = add nsw i32 %55, 1, !dbg !6181
  br label %cond.end34, !dbg !6182

cond.end34:                                       ; preds = %cond.false32, %cond.true30
  %cond35 = phi i32 [ %54, %cond.true30 ], [ %add33, %cond.false32 ], !dbg !6183
  %conv36 = sext i32 %cond35 to i64, !dbg !6183
  call void @put_ebml_uint(%struct.AVIOContext* %50, i32 29637, i64 %conv36), !dbg !6184
  %56 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6185
  call void @put_ebml_uint(%struct.AVIOContext* %56, i32 156, i64 0), !dbg !6186
  %57 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6187
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 11, !dbg !6189
  %58 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !6189
  %call37 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !6190
  store %struct.AVDictionaryEntry* %call37, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6191
  %tobool38 = icmp ne %struct.AVDictionaryEntry* %call37, null, !dbg !6191
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6192

if.then39:                                        ; preds = %cond.end34
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6193
  %60 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6194
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %60, i32 0, i32 1, !dbg !6195
  %61 = load i8*, i8** %value, align 8, !dbg !6195
  call void @put_ebml_string(%struct.AVIOContext* %59, i32 21358, i8* %61), !dbg !6196
  br label %if.end40, !dbg !6196

if.end40:                                         ; preds = %if.then39, %cond.end34
  %62 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6197
  %metadata41 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %62, i32 0, i32 11, !dbg !6198
  %63 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata41, align 8, !dbg !6198
  %call42 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !6199
  store %struct.AVDictionaryEntry* %call42, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6200
  %64 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6201
  %mode = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %64, i32 0, i32 1, !dbg !6203
  %65 = load i32, i32* %mode, align 8, !dbg !6203
  %cmp43 = icmp ne i32 %65, 2, !dbg !6204
  br i1 %cmp43, label %if.then48, label %lor.lhs.false, !dbg !6205

lor.lhs.false:                                    ; preds = %if.end40
  %66 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6206
  %codec_id45 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i32 0, i32 1, !dbg !6208
  %67 = load i32, i32* %codec_id45, align 4, !dbg !6208
  %cmp46 = icmp ne i32 %67, 96265, !dbg !6209
  br i1 %cmp46, label %if.then48, label %if.else58, !dbg !6210

if.then48:                                        ; preds = %lor.lhs.false, %if.end40
  %68 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6211
  %69 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6213
  %tobool49 = icmp ne %struct.AVDictionaryEntry* %69, null, !dbg !6213
  br i1 %tobool49, label %land.lhs.true50, label %cond.false55, !dbg !6214

land.lhs.true50:                                  ; preds = %if.then48
  %70 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6215
  %value51 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %70, i32 0, i32 1, !dbg !6217
  %71 = load i8*, i8** %value51, align 8, !dbg !6217
  %tobool52 = icmp ne i8* %71, null, !dbg !6215
  br i1 %tobool52, label %cond.true53, label %cond.false55, !dbg !6218

cond.true53:                                      ; preds = %land.lhs.true50
  %72 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6219
  %value54 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %72, i32 0, i32 1, !dbg !6221
  %73 = load i8*, i8** %value54, align 8, !dbg !6221
  br label %cond.end56, !dbg !6222

cond.false55:                                     ; preds = %land.lhs.true50, %if.then48
  br label %cond.end56, !dbg !6223

cond.end56:                                       ; preds = %cond.false55, %cond.true53
  %cond57 = phi i8* [ %73, %cond.true53 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), %cond.false55 ], !dbg !6225
  call void @put_ebml_string(%struct.AVIOContext* %68, i32 2274716, i8* %cond57), !dbg !6227
  br label %if.end66, !dbg !6228

if.else58:                                        ; preds = %lor.lhs.false
  %74 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6229
  %tobool59 = icmp ne %struct.AVDictionaryEntry* %74, null, !dbg !6229
  br i1 %tobool59, label %land.lhs.true60, label %if.end65, !dbg !6232

land.lhs.true60:                                  ; preds = %if.else58
  %75 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6233
  %value61 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %75, i32 0, i32 1, !dbg !6235
  %76 = load i8*, i8** %value61, align 8, !dbg !6235
  %tobool62 = icmp ne i8* %76, null, !dbg !6233
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !6236

if.then63:                                        ; preds = %land.lhs.true60
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6237
  %78 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6239
  %value64 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %78, i32 0, i32 1, !dbg !6240
  %79 = load i8*, i8** %value64, align 8, !dbg !6240
  call void @put_ebml_string(%struct.AVIOContext* %77, i32 2274716, i8* %79), !dbg !6241
  br label %if.end65, !dbg !6242

if.end65:                                         ; preds = %if.then63, %land.lhs.true60, %if.else58
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %cond.end56
  %80 = load i32, i32* %default_stream_exists.addr, align 4, !dbg !6243
  %tobool67 = icmp ne i32 %80, 0, !dbg !6243
  br i1 %tobool67, label %land.lhs.true68, label %if.end76, !dbg !6245

land.lhs.true68:                                  ; preds = %if.end66
  %81 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6246
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %81, i32 0, i32 8, !dbg !6248
  %82 = load i32, i32* %disposition, align 8, !dbg !6248
  %and = and i32 %82, 1, !dbg !6249
  %tobool69 = icmp ne i32 %and, 0, !dbg !6249
  br i1 %tobool69, label %if.end76, label %if.then70, !dbg !6250

if.then70:                                        ; preds = %land.lhs.true68
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6251
  %84 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6252
  %disposition71 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %84, i32 0, i32 8, !dbg !6253
  %85 = load i32, i32* %disposition71, align 8, !dbg !6253
  %and72 = and i32 %85, 1, !dbg !6254
  %tobool73 = icmp ne i32 %and72, 0, !dbg !6255
  %lnot = xor i1 %tobool73, true, !dbg !6255
  %lnot74 = xor i1 %lnot, true, !dbg !6256
  %lnot.ext = zext i1 %lnot74 to i32, !dbg !6256
  %conv75 = sext i32 %lnot.ext to i64, !dbg !6256
  call void @put_ebml_uint(%struct.AVIOContext* %83, i32 136, i64 %conv75), !dbg !6257
  br label %if.end76, !dbg !6257

if.end76:                                         ; preds = %if.then70, %land.lhs.true68, %if.end66
  %86 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6258
  %disposition77 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %86, i32 0, i32 8, !dbg !6260
  %87 = load i32, i32* %disposition77, align 8, !dbg !6260
  %and78 = and i32 %87, 64, !dbg !6261
  %tobool79 = icmp ne i32 %and78, 0, !dbg !6261
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !6262

if.then80:                                        ; preds = %if.end76
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6263
  call void @put_ebml_uint(%struct.AVIOContext* %88, i32 21930, i64 1), !dbg !6264
  br label %if.end81, !dbg !6264

if.end81:                                         ; preds = %if.then80, %if.end76
  %89 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6265
  %mode82 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %89, i32 0, i32 1, !dbg !6267
  %90 = load i32, i32* %mode82, align 8, !dbg !6267
  %cmp83 = icmp eq i32 %90, 2, !dbg !6268
  br i1 %cmp83, label %if.then85, label %if.else133, !dbg !6269

if.then85:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i8** %codec_id86, metadata !6270, metadata !2445), !dbg !6272
  %91 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6273
  %codec_type87 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %91, i32 0, i32 0, !dbg !6275
  %92 = load i32, i32* %codec_type87, align 8, !dbg !6275
  %cmp88 = icmp ne i32 %92, 3, !dbg !6276
  br i1 %cmp88, label %if.then90, label %if.else105, !dbg !6277

if.then90:                                        ; preds = %if.then85
  store i32 0, i32* %j, align 4, !dbg !6278
  br label %for.cond, !dbg !6281

for.cond:                                         ; preds = %for.inc, %if.then90
  %93 = load i32, i32* %j, align 4, !dbg !6282
  %idxprom91 = sext i32 %93 to i64, !dbg !6285
  %arrayidx92 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_webm_codec_tags, i64 0, i64 %idxprom91, !dbg !6285
  %id = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx92, i32 0, i32 1, !dbg !6286
  %94 = load i32, i32* %id, align 4, !dbg !6286
  %cmp93 = icmp ne i32 %94, 0, !dbg !6287
  br i1 %cmp93, label %for.body, label %for.end, !dbg !6288

for.body:                                         ; preds = %for.cond
  %95 = load i32, i32* %j, align 4, !dbg !6289
  %idxprom95 = sext i32 %95 to i64, !dbg !6292
  %arrayidx96 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_webm_codec_tags, i64 0, i64 %idxprom95, !dbg !6292
  %id97 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx96, i32 0, i32 1, !dbg !6293
  %96 = load i32, i32* %id97, align 4, !dbg !6293
  %97 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6294
  %codec_id98 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %97, i32 0, i32 1, !dbg !6295
  %98 = load i32, i32* %codec_id98, align 4, !dbg !6295
  %cmp99 = icmp eq i32 %96, %98, !dbg !6296
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !6297

if.then101:                                       ; preds = %for.body
  %99 = load i32, i32* %j, align 4, !dbg !6298
  %idxprom102 = sext i32 %99 to i64, !dbg !6300
  %arrayidx103 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_webm_codec_tags, i64 0, i64 %idxprom102, !dbg !6300
  %str = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx103, i32 0, i32 0, !dbg !6301
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %str, i32 0, i32 0, !dbg !6300
  store i8* %arraydecay, i8** %codec_id86, align 8, !dbg !6302
  store i32 1, i32* %native_id, align 4, !dbg !6303
  br label %for.end, !dbg !6304

if.end104:                                        ; preds = %for.body
  br label %for.inc, !dbg !6305

for.inc:                                          ; preds = %if.end104
  %100 = load i32, i32* %j, align 4, !dbg !6306
  %inc = add nsw i32 %100, 1, !dbg !6306
  store i32 %inc, i32* %j, align 4, !dbg !6306
  br label %for.cond, !dbg !6308, !llvm.loop !6309

for.end:                                          ; preds = %if.then101, %for.cond
  br label %if.end129, !dbg !6311

if.else105:                                       ; preds = %if.then85
  %101 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6312
  %codec_id106 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %101, i32 0, i32 1, !dbg !6315
  %102 = load i32, i32* %codec_id106, align 4, !dbg !6315
  %cmp107 = icmp eq i32 %102, 96265, !dbg !6316
  br i1 %cmp107, label %if.then109, label %if.end128, !dbg !6312

if.then109:                                       ; preds = %if.else105
  %103 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6317
  %disposition110 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %103, i32 0, i32 8, !dbg !6320
  %104 = load i32, i32* %disposition110, align 8, !dbg !6320
  %and111 = and i32 %104, 65536, !dbg !6321
  %tobool112 = icmp ne i32 %and111, 0, !dbg !6321
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !6322

if.then113:                                       ; preds = %if.then109
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i8** %codec_id86, align 8, !dbg !6323
  store i32 17, i32* %native_id, align 4, !dbg !6325
  br label %if.end127, !dbg !6326

if.else114:                                       ; preds = %if.then109
  %105 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6327
  %disposition115 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %105, i32 0, i32 8, !dbg !6330
  %106 = load i32, i32* %disposition115, align 8, !dbg !6330
  %and116 = and i32 %106, 131072, !dbg !6331
  %tobool117 = icmp ne i32 %and116, 0, !dbg !6331
  br i1 %tobool117, label %if.then118, label %if.else119, !dbg !6327

if.then118:                                       ; preds = %if.else114
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i32 0, i32 0), i8** %codec_id86, align 8, !dbg !6332
  store i32 33, i32* %native_id, align 4, !dbg !6334
  br label %if.end126, !dbg !6335

if.else119:                                       ; preds = %if.else114
  %107 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6336
  %disposition120 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %107, i32 0, i32 8, !dbg !6339
  %108 = load i32, i32* %disposition120, align 8, !dbg !6339
  %and121 = and i32 %108, 262144, !dbg !6340
  %tobool122 = icmp ne i32 %and121, 0, !dbg !6340
  br i1 %tobool122, label %if.then123, label %if.else124, !dbg !6336

if.then123:                                       ; preds = %if.else119
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i32 0, i32 0), i8** %codec_id86, align 8, !dbg !6341
  store i32 33, i32* %native_id, align 4, !dbg !6343
  br label %if.end125, !dbg !6344

if.else124:                                       ; preds = %if.else119
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0), i8** %codec_id86, align 8, !dbg !6345
  store i32 17, i32* %native_id, align 4, !dbg !6347
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then123
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then118
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then113
  br label %if.end128, !dbg !6348

if.end128:                                        ; preds = %if.end127, %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %for.end
  %109 = load i32, i32* %native_id, align 4, !dbg !6349
  %tobool130 = icmp ne i32 %109, 0, !dbg !6349
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !6351

if.then131:                                       ; preds = %if.end129
  %110 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6352
  %111 = bitcast %struct.AVFormatContext* %110 to i8*, !dbg !6352
  call void (i8*, i32, i8*, ...) @av_log(i8* %111, i32 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.51, i32 0, i32 0)), !dbg !6354
  store i32 -22, i32* %retval, align 4, !dbg !6355
  br label %return, !dbg !6355

if.end132:                                        ; preds = %if.end129
  %112 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6356
  %113 = load i8*, i8** %codec_id86, align 8, !dbg !6357
  call void @put_ebml_string(%struct.AVIOContext* %112, i32 134, i8* %113), !dbg !6358
  br label %if.end172, !dbg !6359

if.else133:                                       ; preds = %if.end81
  %114 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6360
  %codec_id134 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %114, i32 0, i32 1, !dbg !6363
  %115 = load i32, i32* %codec_id134, align 4, !dbg !6363
  %cmp135 = icmp ne i32 %115, 13, !dbg !6364
  br i1 %cmp135, label %if.then139, label %lor.lhs.false137, !dbg !6365

lor.lhs.false137:                                 ; preds = %if.else133
  %116 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6366
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %116, i32 0, i32 2, !dbg !6368
  %117 = load i32, i32* %codec_tag, align 8, !dbg !6368
  %tobool138 = icmp ne i32 %117, 0, !dbg !6366
  br i1 %tobool138, label %if.then139, label %if.else166, !dbg !6369

if.then139:                                       ; preds = %lor.lhs.false137, %if.else133
  store i32 0, i32* %j, align 4, !dbg !6370
  br label %for.cond140, !dbg !6373

for.cond140:                                      ; preds = %for.inc163, %if.then139
  %118 = load i32, i32* %j, align 4, !dbg !6374
  %idxprom141 = sext i32 %118 to i64, !dbg !6377
  %arrayidx142 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom141, !dbg !6377
  %id143 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx142, i32 0, i32 1, !dbg !6378
  %119 = load i32, i32* %id143, align 4, !dbg !6378
  %cmp144 = icmp ne i32 %119, 0, !dbg !6379
  br i1 %cmp144, label %for.body146, label %for.end165, !dbg !6380

for.body146:                                      ; preds = %for.cond140
  %120 = load i32, i32* %j, align 4, !dbg !6381
  %idxprom147 = sext i32 %120 to i64, !dbg !6384
  %arrayidx148 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom147, !dbg !6384
  %id149 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx148, i32 0, i32 1, !dbg !6385
  %121 = load i32, i32* %id149, align 4, !dbg !6385
  %122 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6386
  %codec_id150 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %122, i32 0, i32 1, !dbg !6387
  %123 = load i32, i32* %codec_id150, align 4, !dbg !6387
  %cmp151 = icmp eq i32 %121, %123, !dbg !6388
  br i1 %cmp151, label %land.lhs.true153, label %if.end162, !dbg !6389

land.lhs.true153:                                 ; preds = %for.body146
  %124 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6390
  %codec_id154 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %124, i32 0, i32 1, !dbg !6392
  %125 = load i32, i32* %codec_id154, align 4, !dbg !6392
  %cmp155 = icmp ne i32 %125, 33, !dbg !6393
  br i1 %cmp155, label %if.then157, label %if.end162, !dbg !6394

if.then157:                                       ; preds = %land.lhs.true153
  %126 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6395
  %127 = load i32, i32* %j, align 4, !dbg !6397
  %idxprom158 = sext i32 %127 to i64, !dbg !6398
  %arrayidx159 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom158, !dbg !6398
  %str160 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx159, i32 0, i32 0, !dbg !6399
  %arraydecay161 = getelementptr inbounds [22 x i8], [22 x i8]* %str160, i32 0, i32 0, !dbg !6398
  call void @put_ebml_string(%struct.AVIOContext* %126, i32 134, i8* %arraydecay161), !dbg !6400
  store i32 1, i32* %native_id, align 4, !dbg !6401
  br label %for.end165, !dbg !6402

if.end162:                                        ; preds = %land.lhs.true153, %for.body146
  br label %for.inc163, !dbg !6403

for.inc163:                                       ; preds = %if.end162
  %128 = load i32, i32* %j, align 4, !dbg !6404
  %inc164 = add nsw i32 %128, 1, !dbg !6404
  store i32 %inc164, i32* %j, align 4, !dbg !6404
  br label %for.cond140, !dbg !6406, !llvm.loop !6407

for.end165:                                       ; preds = %if.then157, %for.cond140
  br label %if.end171, !dbg !6409

if.else166:                                       ; preds = %lor.lhs.false137
  %129 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6410
  %allow_raw_vfw = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %129, i32 0, i32 36, !dbg !6413
  %130 = load i32, i32* %allow_raw_vfw, align 8, !dbg !6413
  %tobool167 = icmp ne i32 %130, 0, !dbg !6410
  br i1 %tobool167, label %if.then168, label %if.else169, !dbg !6414

if.then168:                                       ; preds = %if.else166
  store i32 0, i32* %native_id, align 4, !dbg !6415
  br label %if.end170, !dbg !6417

if.else169:                                       ; preds = %if.else166
  %131 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6418
  %132 = bitcast %struct.AVFormatContext* %131 to i8*, !dbg !6418
  call void (i8*, i32, i8*, ...) @av_log(i8* %132, i32 16, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.52, i32 0, i32 0)), !dbg !6420
  store i32 -22, i32* %retval, align 4, !dbg !6421
  br label %return, !dbg !6421

if.end170:                                        ; preds = %if.then168
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %for.end165
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end132
  %133 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6422
  %codec_type173 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %133, i32 0, i32 0, !dbg !6424
  %134 = load i32, i32* %codec_type173, align 8, !dbg !6424
  %cmp174 = icmp eq i32 %134, 1, !dbg !6425
  br i1 %cmp174, label %land.lhs.true176, label %if.end193, !dbg !6426

land.lhs.true176:                                 ; preds = %if.end172
  %135 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6427
  %initial_padding = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %135, i32 0, i32 26, !dbg !6429
  %136 = load i32, i32* %initial_padding, align 8, !dbg !6429
  %tobool177 = icmp ne i32 %136, 0, !dbg !6427
  br i1 %tobool177, label %land.lhs.true178, label %if.end193, !dbg !6430

land.lhs.true178:                                 ; preds = %land.lhs.true176
  %137 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6431
  %codec_id179 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %137, i32 0, i32 1, !dbg !6433
  %138 = load i32, i32* %codec_id179, align 4, !dbg !6433
  %cmp180 = icmp eq i32 %138, 86076, !dbg !6434
  br i1 %cmp180, label %if.then182, label %if.end193, !dbg !6435

if.then182:                                       ; preds = %land.lhs.true178
  call void @llvm.dbg.declare(metadata i64* %codecdelay, metadata !6436, metadata !2445), !dbg !6438
  %139 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6439
  %initial_padding183 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %139, i32 0, i32 26, !dbg !6440
  %140 = load i32, i32* %initial_padding183, align 8, !dbg !6440
  %conv184 = sext i32 %140 to i64, !dbg !6439
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !6441
  store i32 1, i32* %num, align 4, !dbg !6441
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !6441
  store i32 48000, i32* %den, align 4, !dbg !6441
  %num186 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral185, i32 0, i32 0, !dbg !6442
  store i32 1, i32* %num186, align 4, !dbg !6442
  %den187 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral185, i32 0, i32 1, !dbg !6442
  store i32 1000000000, i32* %den187, align 4, !dbg !6442
  %141 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !6443
  %142 = load i64, i64* %141, align 4, !dbg !6443
  %143 = bitcast %struct.AVRational* %.compoundliteral185 to i64*, !dbg !6443
  %144 = load i64, i64* %143, align 4, !dbg !6443
  %call188 = call i64 @av_rescale_q(i64 %conv184, i64 %142, i64 %144) #2, !dbg !6443
  store i64 %call188, i64* %codecdelay, align 8, !dbg !6438
  %145 = load i64, i64* %codecdelay, align 8, !dbg !6444
  %cmp189 = icmp slt i64 %145, 0, !dbg !6446
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !6447

if.then191:                                       ; preds = %if.then182
  %146 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6448
  %147 = bitcast %struct.AVFormatContext* %146 to i8*, !dbg !6448
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i32 0, i32 0)), !dbg !6450
  store i32 -22, i32* %retval, align 4, !dbg !6451
  br label %return, !dbg !6451

if.end192:                                        ; preds = %if.then182
  %148 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6452
  %149 = load i64, i64* %codecdelay, align 8, !dbg !6453
  call void @put_ebml_uint(%struct.AVIOContext* %148, i32 22186, i64 %149), !dbg !6454
  br label %if.end193, !dbg !6455

if.end193:                                        ; preds = %if.end192, %land.lhs.true178, %land.lhs.true176, %if.end172
  %150 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6456
  %codec_id194 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %150, i32 0, i32 1, !dbg !6458
  %151 = load i32, i32* %codec_id194, align 4, !dbg !6458
  %cmp195 = icmp eq i32 %151, 86076, !dbg !6459
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !6460

if.then197:                                       ; preds = %if.end193
  %152 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6461
  call void @put_ebml_uint(%struct.AVIOContext* %152, i32 22203, i64 80000000), !dbg !6463
  br label %if.end198, !dbg !6464

if.end198:                                        ; preds = %if.then197, %if.end193
  %153 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6465
  %codec_type199 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %153, i32 0, i32 0, !dbg !6466
  %154 = load i32, i32* %codec_type199, align 8, !dbg !6466
  switch i32 %154, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb391
    i32 3, label %sw.bb411
  ], !dbg !6467

sw.bb:                                            ; preds = %if.end198
  %155 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6468
  %have_video = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %155, i32 0, i32 22, !dbg !6469
  store i32 1, i32* %have_video, align 4, !dbg !6470
  %156 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6471
  call void @put_ebml_uint(%struct.AVIOContext* %156, i32 131, i64 1), !dbg !6472
  %157 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6473
  %avg_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %157, i32 0, i32 12, !dbg !6474
  %num200 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate, i32 0, i32 0, !dbg !6475
  %158 = load i32, i32* %num200, align 8, !dbg !6475
  %cmp201 = icmp sgt i32 %158, 0, !dbg !6476
  br i1 %cmp201, label %land.lhs.true203, label %if.end221, !dbg !6477

land.lhs.true203:                                 ; preds = %sw.bb
  %159 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6478
  %avg_frame_rate204 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %159, i32 0, i32 12, !dbg !6479
  %den205 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate204, i32 0, i32 1, !dbg !6480
  %160 = load i32, i32* %den205, align 4, !dbg !6480
  %cmp206 = icmp sgt i32 %160, 0, !dbg !6481
  br i1 %cmp206, label %land.lhs.true208, label %if.end221, !dbg !6482

land.lhs.true208:                                 ; preds = %land.lhs.true203
  %161 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6483
  %avg_frame_rate209 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %161, i32 0, i32 12, !dbg !6484
  %162 = bitcast %struct.AVRational* %avg_frame_rate209 to i64*, !dbg !6485
  %163 = load i64, i64* %162, align 8, !dbg !6485
  %164 = bitcast %struct.AVRational* %q.i to i64*, !dbg !6485
  store i64 %163, i64* %164, align 4, !dbg !6485
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !6486
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !6487
  %165 = load i32, i32* %den.i, align 4, !dbg !6487
  store i32 %165, i32* %num.i, align 4, !dbg !6486
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !6486
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !6488
  %166 = load i32, i32* %num2.i, align 4, !dbg !6488
  store i32 %166, i32* %den1.i, align 4, !dbg !6486
  %167 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !6489
  %168 = bitcast %struct.AVRational* %r.i to i8*, !dbg !6489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 8, i32 4, i1 false) #11, !dbg !6489
  %169 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !6490
  %170 = load i64, i64* %169, align 4, !dbg !6490
  %171 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !6485
  store i64 %170, i64* %171, align 4, !dbg !6485
  %172 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6491
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %172, i32 0, i32 4, !dbg !6492
  %173 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !6493
  %174 = load i64, i64* %173, align 4, !dbg !6493
  %175 = bitcast %struct.AVRational* %time_base to i64*, !dbg !6493
  %176 = load i64, i64* %175, align 8, !dbg !6493
  %call211 = call i32 @av_cmp_q(i64 %174, i64 %176), !dbg !6494
  %cmp212 = icmp sgt i32 %call211, 0, !dbg !6496
  br i1 %cmp212, label %if.then214, label %if.end221, !dbg !6497

if.then214:                                       ; preds = %land.lhs.true208
  %177 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6499
  %178 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6500
  %avg_frame_rate215 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %178, i32 0, i32 12, !dbg !6501
  %den216 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate215, i32 0, i32 1, !dbg !6502
  %179 = load i32, i32* %den216, align 4, !dbg !6502
  %conv217 = sext i32 %179 to i64, !dbg !6500
  %mul = mul nsw i64 1000000000, %conv217, !dbg !6503
  %180 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6504
  %avg_frame_rate218 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %180, i32 0, i32 12, !dbg !6505
  %num219 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate218, i32 0, i32 0, !dbg !6506
  %181 = load i32, i32* %num219, align 8, !dbg !6506
  %conv220 = sext i32 %181 to i64, !dbg !6504
  %div = sdiv i64 %mul, %conv220, !dbg !6507
  call void @put_ebml_uint(%struct.AVIOContext* %177, i32 2352003, i64 %div), !dbg !6508
  br label %if.end221, !dbg !6508

if.end221:                                        ; preds = %if.then214, %land.lhs.true208, %land.lhs.true203, %sw.bb
  %182 = load i32, i32* %native_id, align 4, !dbg !6509
  %tobool222 = icmp ne i32 %182, 0, !dbg !6509
  br i1 %tobool222, label %if.end248, label %land.lhs.true223, !dbg !6511

land.lhs.true223:                                 ; preds = %if.end221
  %183 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6512
  %codec_id224 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %183, i32 0, i32 1, !dbg !6513
  %184 = load i32, i32* %codec_id224, align 4, !dbg !6513
  %call225 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %184), !dbg !6514
  %tobool226 = icmp ne i32 %call225, 0, !dbg !6514
  br i1 %tobool226, label %land.lhs.true227, label %if.end248, !dbg !6515

land.lhs.true227:                                 ; preds = %land.lhs.true223
  %185 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6516
  %codec_id228 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %185, i32 0, i32 1, !dbg !6517
  %186 = load i32, i32* %codec_id228, align 4, !dbg !6517
  %call229 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i32 0, i32 0), i32 %186), !dbg !6518
  %tobool230 = icmp ne i32 %call229, 0, !dbg !6518
  br i1 %tobool230, label %lor.lhs.false235, label %land.lhs.true231, !dbg !6519

land.lhs.true231:                                 ; preds = %land.lhs.true227
  %187 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6520
  %codec_id232 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %187, i32 0, i32 1, !dbg !6522
  %188 = load i32, i32* %codec_id232, align 4, !dbg !6522
  %cmp233 = icmp ne i32 %188, 13, !dbg !6523
  br i1 %cmp233, label %if.then247, label %lor.lhs.false235, !dbg !6524

lor.lhs.false235:                                 ; preds = %land.lhs.true231, %land.lhs.true227
  %189 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6525
  %codec_id236 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %189, i32 0, i32 1, !dbg !6526
  %190 = load i32, i32* %codec_id236, align 4, !dbg !6526
  %cmp237 = icmp eq i32 %190, 22, !dbg !6527
  br i1 %cmp237, label %if.then247, label %lor.lhs.false239, !dbg !6528

lor.lhs.false239:                                 ; preds = %lor.lhs.false235
  %191 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6529
  %codec_id240 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %191, i32 0, i32 1, !dbg !6530
  %192 = load i32, i32* %codec_id240, align 4, !dbg !6530
  %cmp241 = icmp eq i32 %192, 23, !dbg !6531
  br i1 %cmp241, label %if.then247, label %lor.lhs.false243, !dbg !6532

lor.lhs.false243:                                 ; preds = %lor.lhs.false239
  %193 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6533
  %codec_id244 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %193, i32 0, i32 1, !dbg !6534
  %194 = load i32, i32* %codec_id244, align 4, !dbg !6534
  %cmp245 = icmp eq i32 %194, 43, !dbg !6535
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !6536

if.then247:                                       ; preds = %lor.lhs.false243, %lor.lhs.false239, %lor.lhs.false235, %land.lhs.true231
  store i32 1, i32* %qt_id, align 4, !dbg !6538
  br label %if.end248, !dbg !6539

if.end248:                                        ; preds = %if.then247, %lor.lhs.false243, %land.lhs.true223, %if.end221
  %195 = load i32, i32* %qt_id, align 4, !dbg !6540
  %tobool249 = icmp ne i32 %195, 0, !dbg !6540
  br i1 %tobool249, label %if.then250, label %if.else251, !dbg !6542

if.then250:                                       ; preds = %if.end248
  %196 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6543
  call void @put_ebml_string(%struct.AVIOContext* %196, i32 134, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i32 0, i32 0)), !dbg !6544
  br label %if.end257, !dbg !6544

if.else251:                                       ; preds = %if.end248
  %197 = load i32, i32* %native_id, align 4, !dbg !6545
  %tobool252 = icmp ne i32 %197, 0, !dbg !6545
  br i1 %tobool252, label %if.end256, label %if.then253, !dbg !6547

if.then253:                                       ; preds = %if.else251
  %198 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6548
  call void @put_ebml_string(%struct.AVIOContext* %198, i32 134, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0)), !dbg !6550
  %199 = load i32, i32* %i.addr, align 4, !dbg !6551
  %idxprom254 = sext i32 %199 to i64, !dbg !6552
  %200 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6552
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %200, i32 0, i32 18, !dbg !6553
  %201 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !6553
  %arrayidx255 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %201, i64 %idxprom254, !dbg !6552
  %write_dts = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx255, i32 0, i32 0, !dbg !6554
  store i32 1, i32* %write_dts, align 8, !dbg !6555
  %202 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6556
  %internal = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %202, i32 0, i32 55, !dbg !6557
  %203 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal, align 8, !dbg !6557
  %avoid_negative_ts_use_pts = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %203, i32 0, i32 13, !dbg !6558
  store i32 0, i32* %avoid_negative_ts_use_pts, align 8, !dbg !6559
  br label %if.end256, !dbg !6560

if.end256:                                        ; preds = %if.then253, %if.else251
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then250
  %204 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6561
  %call258 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %204, i32 224, i64 0), !dbg !6562
  %205 = bitcast %struct.ebml_master* %coerce259 to { i64, i32 }*, !dbg !6562
  %206 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %205, i32 0, i32 0, !dbg !6562
  %207 = extractvalue { i64, i32 } %call258, 0, !dbg !6562
  store i64 %207, i64* %206, align 8, !dbg !6562
  %208 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %205, i32 0, i32 1, !dbg !6562
  %209 = extractvalue { i64, i32 } %call258, 1, !dbg !6562
  store i32 %209, i32* %208, align 8, !dbg !6562
  %210 = bitcast %struct.ebml_master* %subinfo to i8*, !dbg !6562
  %211 = bitcast %struct.ebml_master* %coerce259 to i8*, !dbg !6562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 16, i32 8, i1 false), !dbg !6563
  %212 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6564
  %213 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6565
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %213, i32 0, i32 11, !dbg !6566
  %214 = load i32, i32* %width, align 8, !dbg !6566
  %conv260 = sext i32 %214 to i64, !dbg !6565
  call void @put_ebml_uint(%struct.AVIOContext* %212, i32 176, i64 %conv260), !dbg !6567
  %215 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6568
  %216 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6569
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %216, i32 0, i32 12, !dbg !6570
  %217 = load i32, i32* %height, align 4, !dbg !6570
  %conv261 = sext i32 %217 to i64, !dbg !6569
  call void @put_ebml_uint(%struct.AVIOContext* %215, i32 186, i64 %conv261), !dbg !6571
  %218 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6572
  %219 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6573
  %mode262 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %219, i32 0, i32 1, !dbg !6574
  %220 = load i32, i32* %mode262, align 8, !dbg !6574
  %221 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6575
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %221, i32 0, i32 14, !dbg !6576
  %222 = load i32, i32* %field_order, align 8, !dbg !6576
  call void @mkv_write_field_order(%struct.AVIOContext* %218, i32 %220, i32 %222), !dbg !6577
  %223 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6578
  %224 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6579
  %225 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6580
  %226 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6581
  %mode263 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %226, i32 0, i32 1, !dbg !6582
  %227 = load i32, i32* %mode263, align 8, !dbg !6582
  %call264 = call i32 @mkv_write_stereo_mode(%struct.AVFormatContext* %223, %struct.AVIOContext* %224, %struct.AVStream* %225, i32 %227, i32* %display_width_div, i32* %display_height_div), !dbg !6583
  store i32 %call264, i32* %ret, align 4, !dbg !6584
  %228 = load i32, i32* %ret, align 4, !dbg !6585
  %cmp265 = icmp slt i32 %228, 0, !dbg !6587
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !6588

if.then267:                                       ; preds = %if.end257
  %229 = load i32, i32* %ret, align 4, !dbg !6589
  store i32 %229, i32* %retval, align 4, !dbg !6590
  br label %return, !dbg !6590

if.end268:                                        ; preds = %if.end257
  %230 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6591
  %metadata269 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %230, i32 0, i32 11, !dbg !6593
  %231 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata269, align 8, !dbg !6593
  %call270 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %231, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !6594
  store %struct.AVDictionaryEntry* %call270, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6595
  %tobool271 = icmp ne %struct.AVDictionaryEntry* %call270, null, !dbg !6595
  br i1 %tobool271, label %land.lhs.true272, label %lor.lhs.false276, !dbg !6596

land.lhs.true272:                                 ; preds = %if.end268
  %232 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6597
  %value273 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %232, i32 0, i32 1, !dbg !6599
  %233 = load i8*, i8** %value273, align 8, !dbg !6599
  %call274 = call i32 @atoi(i8* %233) #10, !dbg !6600
  %tobool275 = icmp ne i32 %call274, 0, !dbg !6600
  br i1 %tobool275, label %if.then288, label %lor.lhs.false276, !dbg !6601

lor.lhs.false276:                                 ; preds = %land.lhs.true272, %if.end268
  %234 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6602
  %metadata277 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %234, i32 0, i32 29, !dbg !6603
  %235 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata277, align 8, !dbg !6603
  %call278 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %235, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !6604
  store %struct.AVDictionaryEntry* %call278, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6605
  %tobool279 = icmp ne %struct.AVDictionaryEntry* %call278, null, !dbg !6605
  br i1 %tobool279, label %land.lhs.true280, label %lor.lhs.false284, !dbg !6606

land.lhs.true280:                                 ; preds = %lor.lhs.false276
  %236 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !6607
  %value281 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %236, i32 0, i32 1, !dbg !6608
  %237 = load i8*, i8** %value281, align 8, !dbg !6608
  %call282 = call i32 @atoi(i8* %237) #10, !dbg !6609
  %tobool283 = icmp ne i32 %call282, 0, !dbg !6609
  br i1 %tobool283, label %if.then288, label %lor.lhs.false284, !dbg !6610

lor.lhs.false284:                                 ; preds = %land.lhs.true280, %lor.lhs.false276
  %238 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6611
  %format285 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %238, i32 0, i32 5, !dbg !6612
  %239 = load i32, i32* %format285, align 4, !dbg !6612
  %cmp286 = icmp eq i32 %239, 33, !dbg !6613
  br i1 %cmp286, label %if.then288, label %if.end289, !dbg !6614

if.then288:                                       ; preds = %lor.lhs.false284, %land.lhs.true280, %land.lhs.true272
  %240 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6615
  call void @put_ebml_uint(%struct.AVIOContext* %240, i32 21440, i64 1), !dbg !6617
  br label %if.end289, !dbg !6618

if.end289:                                        ; preds = %if.then288, %lor.lhs.false284
  %241 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6619
  %sample_aspect_ratio = getelementptr inbounds %struct.AVStream, %struct.AVStream* %241, i32 0, i32 10, !dbg !6621
  %num290 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !6622
  %242 = load i32, i32* %num290, align 8, !dbg !6622
  %tobool291 = icmp ne i32 %242, 0, !dbg !6619
  br i1 %tobool291, label %if.then292, label %if.else354, !dbg !6623

if.then292:                                       ; preds = %if.end289
  call void @llvm.dbg.declare(metadata i64* %d_width, metadata !6624, metadata !2445), !dbg !6626
  %243 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6627
  %width293 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %243, i32 0, i32 11, !dbg !6628
  %244 = load i32, i32* %width293, align 8, !dbg !6628
  %conv294 = sext i32 %244 to i64, !dbg !6627
  %245 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6629
  %sample_aspect_ratio295 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %245, i32 0, i32 10, !dbg !6630
  %num296 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio295, i32 0, i32 0, !dbg !6631
  %246 = load i32, i32* %num296, align 8, !dbg !6631
  %conv297 = sext i32 %246 to i64, !dbg !6629
  %247 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6632
  %sample_aspect_ratio298 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %247, i32 0, i32 10, !dbg !6633
  %den299 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio298, i32 0, i32 1, !dbg !6634
  %248 = load i32, i32* %den299, align 4, !dbg !6634
  %conv300 = sext i32 %248 to i64, !dbg !6632
  %call301 = call i64 @av_rescale(i64 %conv294, i64 %conv297, i64 %conv300) #2, !dbg !6635
  store i64 %call301, i64* %d_width, align 8, !dbg !6626
  %249 = load i64, i64* %d_width, align 8, !dbg !6636
  %cmp302 = icmp sgt i64 %249, 2147483647, !dbg !6638
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !6639

if.then304:                                       ; preds = %if.then292
  %250 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6640
  %251 = bitcast %struct.AVFormatContext* %250 to i8*, !dbg !6640
  call void (i8*, i32, i8*, ...) @av_log(i8* %251, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i32 0, i32 0)), !dbg !6642
  store i32 -22, i32* %retval, align 4, !dbg !6643
  br label %return, !dbg !6643

if.end305:                                        ; preds = %if.then292
  %252 = load i64, i64* %d_width, align 8, !dbg !6644
  %253 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6646
  %width306 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %253, i32 0, i32 11, !dbg !6647
  %254 = load i32, i32* %width306, align 8, !dbg !6647
  %conv307 = sext i32 %254 to i64, !dbg !6646
  %cmp308 = icmp ne i64 %252, %conv307, !dbg !6648
  br i1 %cmp308, label %if.then316, label %lor.lhs.false310, !dbg !6649

lor.lhs.false310:                                 ; preds = %if.end305
  %255 = load i32, i32* %display_width_div, align 4, !dbg !6650
  %cmp311 = icmp ne i32 %255, 1, !dbg !6652
  br i1 %cmp311, label %if.then316, label %lor.lhs.false313, !dbg !6653

lor.lhs.false313:                                 ; preds = %lor.lhs.false310
  %256 = load i32, i32* %display_height_div, align 4, !dbg !6654
  %cmp314 = icmp ne i32 %256, 1, !dbg !6656
  br i1 %cmp314, label %if.then316, label %if.end353, !dbg !6657

if.then316:                                       ; preds = %lor.lhs.false313, %lor.lhs.false310, %if.end305
  %257 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6658
  %mode317 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %257, i32 0, i32 1, !dbg !6661
  %258 = load i32, i32* %mode317, align 8, !dbg !6661
  %cmp318 = icmp eq i32 %258, 2, !dbg !6662
  br i1 %cmp318, label %if.then326, label %lor.lhs.false320, !dbg !6663

lor.lhs.false320:                                 ; preds = %if.then316
  %259 = load i32, i32* %display_width_div, align 4, !dbg !6664
  %cmp321 = icmp ne i32 %259, 1, !dbg !6666
  br i1 %cmp321, label %if.then326, label %lor.lhs.false323, !dbg !6667

lor.lhs.false323:                                 ; preds = %lor.lhs.false320
  %260 = load i32, i32* %display_height_div, align 4, !dbg !6668
  %cmp324 = icmp ne i32 %260, 1, !dbg !6670
  br i1 %cmp324, label %if.then326, label %if.else332, !dbg !6671

if.then326:                                       ; preds = %lor.lhs.false323, %lor.lhs.false320, %if.then316
  %261 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6672
  %262 = load i64, i64* %d_width, align 8, !dbg !6674
  %263 = load i32, i32* %display_width_div, align 4, !dbg !6675
  %conv327 = sext i32 %263 to i64, !dbg !6675
  %div328 = sdiv i64 %262, %conv327, !dbg !6676
  call void @put_ebml_uint(%struct.AVIOContext* %261, i32 21680, i64 %div328), !dbg !6677
  %264 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6678
  %265 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6679
  %height329 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %265, i32 0, i32 12, !dbg !6680
  %266 = load i32, i32* %height329, align 4, !dbg !6680
  %267 = load i32, i32* %display_height_div, align 4, !dbg !6681
  %div330 = sdiv i32 %266, %267, !dbg !6682
  %conv331 = sext i32 %div330 to i64, !dbg !6679
  call void @put_ebml_uint(%struct.AVIOContext* %264, i32 21690, i64 %conv331), !dbg !6683
  br label %if.end352, !dbg !6684

if.else332:                                       ; preds = %lor.lhs.false323
  call void @llvm.dbg.declare(metadata %struct.AVRational* %display_aspect_ratio, metadata !6685, metadata !2445), !dbg !6687
  %num333 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 0, !dbg !6688
  %den334 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 1, !dbg !6689
  %268 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6690
  %width335 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %268, i32 0, i32 11, !dbg !6691
  %269 = load i32, i32* %width335, align 8, !dbg !6691
  %conv336 = sext i32 %269 to i64, !dbg !6690
  %270 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6692
  %sample_aspect_ratio337 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i32 0, i32 10, !dbg !6693
  %num338 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio337, i32 0, i32 0, !dbg !6694
  %271 = load i32, i32* %num338, align 8, !dbg !6694
  %conv339 = sext i32 %271 to i64, !dbg !6695
  %mul340 = mul nsw i64 %conv336, %conv339, !dbg !6696
  %272 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6697
  %height341 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %272, i32 0, i32 12, !dbg !6698
  %273 = load i32, i32* %height341, align 4, !dbg !6698
  %conv342 = sext i32 %273 to i64, !dbg !6697
  %274 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6699
  %sample_aspect_ratio343 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %274, i32 0, i32 10, !dbg !6700
  %den344 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio343, i32 0, i32 1, !dbg !6701
  %275 = load i32, i32* %den344, align 4, !dbg !6701
  %conv345 = sext i32 %275 to i64, !dbg !6702
  %mul346 = mul nsw i64 %conv342, %conv345, !dbg !6703
  %call347 = call i32 @av_reduce(i32* %num333, i32* %den334, i64 %mul340, i64 %mul346, i64 1048576), !dbg !6704
  %276 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6705
  %num348 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 0, !dbg !6706
  %277 = load i32, i32* %num348, align 4, !dbg !6706
  %conv349 = sext i32 %277 to i64, !dbg !6707
  call void @put_ebml_uint(%struct.AVIOContext* %276, i32 21680, i64 %conv349), !dbg !6708
  %278 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6709
  %den350 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %display_aspect_ratio, i32 0, i32 1, !dbg !6710
  %279 = load i32, i32* %den350, align 4, !dbg !6710
  %conv351 = sext i32 %279 to i64, !dbg !6711
  call void @put_ebml_uint(%struct.AVIOContext* %278, i32 21690, i64 %conv351), !dbg !6712
  %280 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6713
  call void @put_ebml_uint(%struct.AVIOContext* %280, i32 21682, i64 3), !dbg !6714
  br label %if.end352

if.end352:                                        ; preds = %if.else332, %if.then326
  br label %if.end353, !dbg !6715

if.end353:                                        ; preds = %if.end352, %lor.lhs.false313
  br label %if.end374, !dbg !6716

if.else354:                                       ; preds = %if.end289
  %281 = load i32, i32* %display_width_div, align 4, !dbg !6717
  %cmp355 = icmp ne i32 %281, 1, !dbg !6720
  br i1 %cmp355, label %if.then360, label %lor.lhs.false357, !dbg !6721

lor.lhs.false357:                                 ; preds = %if.else354
  %282 = load i32, i32* %display_height_div, align 4, !dbg !6722
  %cmp358 = icmp ne i32 %282, 1, !dbg !6724
  br i1 %cmp358, label %if.then360, label %if.else367, !dbg !6725

if.then360:                                       ; preds = %lor.lhs.false357, %if.else354
  %283 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6726
  %284 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6728
  %width361 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %284, i32 0, i32 11, !dbg !6729
  %285 = load i32, i32* %width361, align 8, !dbg !6729
  %286 = load i32, i32* %display_width_div, align 4, !dbg !6730
  %div362 = sdiv i32 %285, %286, !dbg !6731
  %conv363 = sext i32 %div362 to i64, !dbg !6728
  call void @put_ebml_uint(%struct.AVIOContext* %283, i32 21680, i64 %conv363), !dbg !6732
  %287 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6733
  %288 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6734
  %height364 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %288, i32 0, i32 12, !dbg !6735
  %289 = load i32, i32* %height364, align 4, !dbg !6735
  %290 = load i32, i32* %display_height_div, align 4, !dbg !6736
  %div365 = sdiv i32 %289, %290, !dbg !6737
  %conv366 = sext i32 %div365 to i64, !dbg !6734
  call void @put_ebml_uint(%struct.AVIOContext* %287, i32 21690, i64 %conv366), !dbg !6738
  br label %if.end373, !dbg !6739

if.else367:                                       ; preds = %lor.lhs.false357
  %291 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6740
  %mode368 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %291, i32 0, i32 1, !dbg !6743
  %292 = load i32, i32* %mode368, align 8, !dbg !6743
  %cmp369 = icmp ne i32 %292, 2, !dbg !6744
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !6740

if.then371:                                       ; preds = %if.else367
  %293 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6745
  call void @put_ebml_uint(%struct.AVIOContext* %293, i32 21682, i64 4), !dbg !6746
  br label %if.end372, !dbg !6746

if.end372:                                        ; preds = %if.then371, %if.else367
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.then360
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %if.end353
  %294 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6747
  %codec_id375 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %294, i32 0, i32 1, !dbg !6749
  %295 = load i32, i32* %codec_id375, align 4, !dbg !6749
  %cmp376 = icmp eq i32 %295, 13, !dbg !6750
  br i1 %cmp376, label %if.then378, label %if.end380, !dbg !6751

if.then378:                                       ; preds = %if.end374
  call void @llvm.dbg.declare(metadata i32* %color_space, metadata !6752, metadata !2445), !dbg !6754
  %296 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6755
  %codec_tag379 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %296, i32 0, i32 2, !dbg !6756
  %297 = load i32, i32* %codec_tag379, align 8, !dbg !6756
  store i32 %297, i32* %color_space, align 4, !dbg !6754
  %298 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6757
  %299 = bitcast i32* %color_space to i8*, !dbg !6758
  call void @put_ebml_binary(%struct.AVIOContext* %298, i32 3061028, i8* %299, i32 4), !dbg !6759
  br label %if.end380, !dbg !6760

if.end380:                                        ; preds = %if.then378, %if.end374
  %300 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6761
  %301 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6762
  %302 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6763
  %call381 = call i32 @mkv_write_video_color(%struct.AVIOContext* %300, %struct.AVCodecParameters* %301, %struct.AVStream* %302), !dbg !6764
  store i32 %call381, i32* %ret, align 4, !dbg !6765
  %303 = load i32, i32* %ret, align 4, !dbg !6766
  %cmp382 = icmp slt i32 %303, 0, !dbg !6768
  br i1 %cmp382, label %if.then384, label %if.end385, !dbg !6769

if.then384:                                       ; preds = %if.end380
  %304 = load i32, i32* %ret, align 4, !dbg !6770
  store i32 %304, i32* %retval, align 4, !dbg !6771
  br label %return, !dbg !6771

if.end385:                                        ; preds = %if.end380
  %305 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6772
  %306 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6773
  %307 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6774
  %call386 = call i32 @mkv_write_video_projection(%struct.AVFormatContext* %305, %struct.AVIOContext* %306, %struct.AVStream* %307), !dbg !6775
  store i32 %call386, i32* %ret, align 4, !dbg !6776
  %308 = load i32, i32* %ret, align 4, !dbg !6777
  %cmp387 = icmp slt i32 %308, 0, !dbg !6779
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !6780

if.then389:                                       ; preds = %if.end385
  %309 = load i32, i32* %ret, align 4, !dbg !6781
  store i32 %309, i32* %retval, align 4, !dbg !6782
  br label %return, !dbg !6782

if.end390:                                        ; preds = %if.end385
  %310 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6783
  %311 = bitcast %struct.ebml_master* %subinfo to { i64, i32 }*, !dbg !6784
  %312 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %311, i32 0, i32 0, !dbg !6784
  %313 = load i64, i64* %312, align 8, !dbg !6784
  %314 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %311, i32 0, i32 1, !dbg !6784
  %315 = load i32, i32* %314, align 8, !dbg !6784
  call void @end_ebml_master(%struct.AVIOContext* %310, i64 %313, i32 %315), !dbg !6784
  br label %sw.epilog, !dbg !6785

sw.bb391:                                         ; preds = %if.end198
  %316 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6786
  call void @put_ebml_uint(%struct.AVIOContext* %316, i32 131, i64 2), !dbg !6787
  %317 = load i32, i32* %native_id, align 4, !dbg !6788
  %tobool392 = icmp ne i32 %317, 0, !dbg !6788
  br i1 %tobool392, label %if.end394, label %if.then393, !dbg !6790

if.then393:                                       ; preds = %sw.bb391
  %318 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6791
  call void @put_ebml_string(%struct.AVIOContext* %318, i32 134, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0)), !dbg !6792
  br label %if.end394, !dbg !6792

if.end394:                                        ; preds = %if.then393, %sw.bb391
  %319 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6793
  %call395 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %319, i32 225, i64 0), !dbg !6794
  %320 = bitcast %struct.ebml_master* %coerce396 to { i64, i32 }*, !dbg !6794
  %321 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %320, i32 0, i32 0, !dbg !6794
  %322 = extractvalue { i64, i32 } %call395, 0, !dbg !6794
  store i64 %322, i64* %321, align 8, !dbg !6794
  %323 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %320, i32 0, i32 1, !dbg !6794
  %324 = extractvalue { i64, i32 } %call395, 1, !dbg !6794
  store i32 %324, i32* %323, align 8, !dbg !6794
  %325 = bitcast %struct.ebml_master* %subinfo to i8*, !dbg !6794
  %326 = bitcast %struct.ebml_master* %coerce396 to i8*, !dbg !6794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 16, i32 8, i1 false), !dbg !6795
  %327 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6796
  %328 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6797
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %328, i32 0, i32 22, !dbg !6798
  %329 = load i32, i32* %channels, align 8, !dbg !6798
  %conv397 = sext i32 %329 to i64, !dbg !6797
  call void @put_ebml_uint(%struct.AVIOContext* %327, i32 159, i64 %conv397), !dbg !6799
  %330 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6800
  store %struct.AVIOContext* %330, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6801
  %331 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6802
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %331, i64 0, i32 1) #11, !dbg !6803
  %332 = load i32, i32* %i.addr, align 4, !dbg !6804
  %idxprom399 = sext i32 %332 to i64, !dbg !6805
  %333 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6805
  %tracks400 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %333, i32 0, i32 18, !dbg !6806
  %334 = load %struct.mkv_track*, %struct.mkv_track** %tracks400, align 8, !dbg !6806
  %arrayidx401 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %334, i64 %idxprom399, !dbg !6805
  %sample_rate_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx401, i32 0, i32 3, !dbg !6807
  store i64 %call.i, i64* %sample_rate_offset, align 8, !dbg !6808
  %335 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6809
  %336 = load i32, i32* %sample_rate, align 4, !dbg !6810
  %conv402 = sitofp i32 %336 to double, !dbg !6810
  call void @put_ebml_float(%struct.AVIOContext* %335, i32 181, double %conv402), !dbg !6811
  %337 = load i32, i32* %output_sample_rate, align 4, !dbg !6812
  %tobool403 = icmp ne i32 %337, 0, !dbg !6812
  br i1 %tobool403, label %if.then404, label %if.end406, !dbg !6814

if.then404:                                       ; preds = %if.end394
  %338 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6815
  %339 = load i32, i32* %output_sample_rate, align 4, !dbg !6816
  %conv405 = sitofp i32 %339 to double, !dbg !6816
  call void @put_ebml_float(%struct.AVIOContext* %338, i32 30901, double %conv405), !dbg !6817
  br label %if.end406, !dbg !6817

if.end406:                                        ; preds = %if.then404, %if.end394
  %340 = load i32, i32* %bit_depth, align 4, !dbg !6818
  %tobool407 = icmp ne i32 %340, 0, !dbg !6818
  br i1 %tobool407, label %if.then408, label %if.end410, !dbg !6820

if.then408:                                       ; preds = %if.end406
  %341 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6821
  %342 = load i32, i32* %bit_depth, align 4, !dbg !6822
  %conv409 = sext i32 %342 to i64, !dbg !6822
  call void @put_ebml_uint(%struct.AVIOContext* %341, i32 25188, i64 %conv409), !dbg !6823
  br label %if.end410, !dbg !6823

if.end410:                                        ; preds = %if.then408, %if.end406
  %343 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6824
  %344 = bitcast %struct.ebml_master* %subinfo to { i64, i32 }*, !dbg !6825
  %345 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %344, i32 0, i32 0, !dbg !6825
  %346 = load i64, i64* %345, align 8, !dbg !6825
  %347 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %344, i32 0, i32 1, !dbg !6825
  %348 = load i32, i32* %347, align 8, !dbg !6825
  call void @end_ebml_master(%struct.AVIOContext* %343, i64 %346, i32 %348), !dbg !6825
  br label %sw.epilog, !dbg !6826

sw.bb411:                                         ; preds = %if.end198
  %349 = load i32, i32* %native_id, align 4, !dbg !6827
  %tobool412 = icmp ne i32 %349, 0, !dbg !6827
  br i1 %tobool412, label %if.end415, label %if.then413, !dbg !6829

if.then413:                                       ; preds = %sw.bb411
  %350 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6830
  %351 = bitcast %struct.AVFormatContext* %350 to i8*, !dbg !6830
  %352 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6832
  %codec_id414 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %352, i32 0, i32 1, !dbg !6833
  %353 = load i32, i32* %codec_id414, align 4, !dbg !6833
  call void (i8*, i32, i8*, ...) @av_log(i8* %351, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i32 0, i32 0), i32 %353), !dbg !6834
  store i32 -38, i32* %retval, align 4, !dbg !6835
  br label %return, !dbg !6835

if.end415:                                        ; preds = %sw.bb411
  %354 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6836
  %mode416 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %354, i32 0, i32 1, !dbg !6838
  %355 = load i32, i32* %mode416, align 8, !dbg !6838
  %cmp417 = icmp ne i32 %355, 2, !dbg !6839
  br i1 %cmp417, label %if.then423, label %lor.lhs.false419, !dbg !6840

lor.lhs.false419:                                 ; preds = %if.end415
  %356 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6841
  %codec_id420 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %356, i32 0, i32 1, !dbg !6843
  %357 = load i32, i32* %codec_id420, align 4, !dbg !6843
  %cmp421 = icmp ne i32 %357, 96265, !dbg !6844
  br i1 %cmp421, label %if.then423, label %if.end424, !dbg !6845

if.then423:                                       ; preds = %lor.lhs.false419, %if.end415
  store i32 17, i32* %native_id, align 4, !dbg !6846
  br label %if.end424, !dbg !6847

if.end424:                                        ; preds = %if.then423, %lor.lhs.false419
  %358 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6848
  %359 = load i32, i32* %native_id, align 4, !dbg !6849
  %conv425 = sext i32 %359 to i64, !dbg !6849
  call void @put_ebml_uint(%struct.AVIOContext* %358, i32 131, i64 %conv425), !dbg !6850
  br label %sw.epilog, !dbg !6851

sw.default:                                       ; preds = %if.end198
  %360 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6852
  %361 = bitcast %struct.AVFormatContext* %360 to i8*, !dbg !6852
  call void (i8*, i32, i8*, ...) @av_log(i8* %361, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.59, i32 0, i32 0)), !dbg !6853
  store i32 -22, i32* %retval, align 4, !dbg !6854
  br label %return, !dbg !6854

sw.epilog:                                        ; preds = %if.end424, %if.end410, %if.end390
  %362 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6855
  %mode426 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %362, i32 0, i32 1, !dbg !6856
  %363 = load i32, i32* %mode426, align 8, !dbg !6856
  %cmp427 = icmp ne i32 %363, 2, !dbg !6857
  br i1 %cmp427, label %if.then433, label %lor.lhs.false429, !dbg !6858

lor.lhs.false429:                                 ; preds = %sw.epilog
  %364 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6859
  %codec_id430 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %364, i32 0, i32 1, !dbg !6861
  %365 = load i32, i32* %codec_id430, align 4, !dbg !6861
  %cmp431 = icmp ne i32 %365, 96265, !dbg !6862
  br i1 %cmp431, label %if.then433, label %if.end443, !dbg !6863

if.then433:                                       ; preds = %lor.lhs.false429, %sw.epilog
  %366 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6864
  store %struct.AVIOContext* %366, %struct.AVIOContext** %s.addr.i444, align 8, !dbg !6865
  %367 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i444, align 8, !dbg !6866
  %call.i445 = call i64 @avio_seek(%struct.AVIOContext* %367, i64 0, i32 1) #11, !dbg !6867
  %368 = load i32, i32* %i.addr, align 4, !dbg !6868
  %idxprom435 = sext i32 %368 to i64, !dbg !6869
  %369 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv.addr, align 8, !dbg !6869
  %tracks436 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %369, i32 0, i32 18, !dbg !6870
  %370 = load %struct.mkv_track*, %struct.mkv_track** %tracks436, align 8, !dbg !6870
  %arrayidx437 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %370, i64 %idxprom435, !dbg !6869
  %codecpriv_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx437, i32 0, i32 4, !dbg !6871
  store i64 %call.i445, i64* %codecpriv_offset, align 8, !dbg !6872
  %371 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6873
  %372 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6874
  %373 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6875
  %374 = load i32, i32* %native_id, align 4, !dbg !6876
  %375 = load i32, i32* %qt_id, align 4, !dbg !6877
  %call438 = call i32 @mkv_write_codecprivate(%struct.AVFormatContext* %371, %struct.AVIOContext* %372, %struct.AVCodecParameters* %373, i32 %374, i32 %375), !dbg !6878
  store i32 %call438, i32* %ret, align 4, !dbg !6879
  %376 = load i32, i32* %ret, align 4, !dbg !6880
  %cmp439 = icmp slt i32 %376, 0, !dbg !6882
  br i1 %cmp439, label %if.then441, label %if.end442, !dbg !6883

if.then441:                                       ; preds = %if.then433
  %377 = load i32, i32* %ret, align 4, !dbg !6884
  store i32 %377, i32* %retval, align 4, !dbg !6885
  br label %return, !dbg !6885

if.end442:                                        ; preds = %if.then433
  br label %if.end443, !dbg !6886

if.end443:                                        ; preds = %if.end442, %lor.lhs.false429
  %378 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6887
  %379 = bitcast %struct.ebml_master* %track to { i64, i32 }*, !dbg !6888
  %380 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %379, i32 0, i32 0, !dbg !6888
  %381 = load i64, i64* %380, align 8, !dbg !6888
  %382 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %379, i32 0, i32 1, !dbg !6888
  %383 = load i32, i32* %382, align 8, !dbg !6888
  call void @end_ebml_master(%struct.AVIOContext* %378, i64 %381, i32 %383), !dbg !6888
  store i32 0, i32* %retval, align 4, !dbg !6889
  br label %return, !dbg !6889

return:                                           ; preds = %if.end443, %if.then441, %sw.default, %if.then413, %if.then389, %if.then384, %if.then304, %if.then267, %if.then191, %if.else169, %if.then131, %if.then23, %if.then
  %384 = load i32, i32* %retval, align 4, !dbg !6890
  ret i32 %384, !dbg !6890
}

declare i32 @av_get_bits_per_sample(i32) #1

declare i32 @av_get_bytes_per_sample(i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @get_aac_sample_rates(%struct.AVFormatContext* %s, i8* %extradata, i32 %extradata_size, i32* %sample_rate, i32* %output_sample_rate) #0 !dbg !6891 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %extradata.addr = alloca i8*, align 8
  %extradata_size.addr = alloca i32, align 4
  %sample_rate.addr = alloca i32*, align 8
  %output_sample_rate.addr = alloca i32*, align 8
  %mp4ac = alloca %struct.MPEG4AudioConfig, align 4
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6894, metadata !2445), !dbg !6895
  store i8* %extradata, i8** %extradata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extradata.addr, metadata !6896, metadata !2445), !dbg !6897
  store i32 %extradata_size, i32* %extradata_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extradata_size.addr, metadata !6898, metadata !2445), !dbg !6899
  store i32* %sample_rate, i32** %sample_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sample_rate.addr, metadata !6900, metadata !2445), !dbg !6901
  store i32* %output_sample_rate, i32** %output_sample_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %output_sample_rate.addr, metadata !6902, metadata !2445), !dbg !6903
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig* %mp4ac, metadata !6904, metadata !2445), !dbg !6921
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6922, metadata !2445), !dbg !6923
  %0 = load i8*, i8** %extradata.addr, align 8, !dbg !6924
  %1 = load i32, i32* %extradata_size.addr, align 4, !dbg !6925
  %mul = mul nsw i32 %1, 8, !dbg !6926
  %call = call i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig* %mp4ac, i8* %0, i32 %mul, i32 1), !dbg !6927
  store i32 %call, i32* %ret, align 4, !dbg !6928
  %2 = load i32, i32* %ret, align 4, !dbg !6929
  %cmp = icmp slt i32 %2, 0, !dbg !6931
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6932

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %extradata_size.addr, align 4, !dbg !6933
  %tobool = icmp ne i32 %3, 0, !dbg !6933
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6935

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6936
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 4, !dbg !6938
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6938
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %5, i32 0, i32 19, !dbg !6939
  %6 = load i32, i32* %seekable, align 8, !dbg !6939
  %and = and i32 %6, 1, !dbg !6940
  %tobool1 = icmp ne i32 %and, 0, !dbg !6940
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6941

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6942
  %8 = bitcast %struct.AVFormatContext* %7 to i8*, !dbg !6942
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.60, i32 0, i32 0)), !dbg !6944
  store i32 -22, i32* %retval, align 4, !dbg !6945
  br label %return, !dbg !6945

if.end:                                           ; preds = %lor.lhs.false, %entry
  %9 = load i32, i32* %ret, align 4, !dbg !6946
  %cmp2 = icmp slt i32 %9, 0, !dbg !6948
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !6949

if.then3:                                         ; preds = %if.end
  %10 = load i32*, i32** %sample_rate.addr, align 8, !dbg !6950
  %11 = load i32, i32* %10, align 4, !dbg !6952
  %12 = load i32*, i32** %output_sample_rate.addr, align 8, !dbg !6953
  store i32 %11, i32* %12, align 4, !dbg !6954
  br label %if.end5, !dbg !6955

if.else:                                          ; preds = %if.end
  %sample_rate4 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %mp4ac, i32 0, i32 2, !dbg !6956
  %13 = load i32, i32* %sample_rate4, align 4, !dbg !6956
  %14 = load i32*, i32** %sample_rate.addr, align 8, !dbg !6958
  store i32 %13, i32* %14, align 4, !dbg !6959
  %ext_sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %mp4ac, i32 0, i32 7, !dbg !6960
  %15 = load i32, i32* %ext_sample_rate, align 4, !dbg !6960
  %16 = load i32*, i32** %output_sample_rate.addr, align 8, !dbg !6961
  store i32 %15, i32* %16, align 4, !dbg !6962
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  store i32 0, i32* %retval, align 4, !dbg !6963
  br label %return, !dbg !6963

return:                                           ; preds = %if.end5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6964
  ret i32 %17, !dbg !6964
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_cmp_q(i64 %a.coerce, i64 %b.coerce) #5 !dbg !6965 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.AVRational, align 4
  %b = alloca %struct.AVRational, align 4
  %tmp = alloca i64, align 8
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  %1 = bitcast %struct.AVRational* %b to i64*
  store i64 %b.coerce, i64* %1, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !6968, metadata !2445), !dbg !6969
  call void @llvm.dbg.declare(metadata %struct.AVRational* %b, metadata !6970, metadata !2445), !dbg !6971
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !6972, metadata !2445), !dbg !6974
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !6975
  %2 = load i32, i32* %num, align 4, !dbg !6975
  %conv = sext i32 %2 to i64, !dbg !6976
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 1, !dbg !6977
  %3 = load i32, i32* %den, align 4, !dbg !6977
  %conv1 = sext i32 %3 to i64, !dbg !6978
  %mul = mul nsw i64 %conv, %conv1, !dbg !6979
  %num2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 0, !dbg !6980
  %4 = load i32, i32* %num2, align 4, !dbg !6980
  %conv3 = sext i32 %4 to i64, !dbg !6981
  %den4 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !6982
  %5 = load i32, i32* %den4, align 4, !dbg !6982
  %conv5 = sext i32 %5 to i64, !dbg !6983
  %mul6 = mul nsw i64 %conv3, %conv5, !dbg !6984
  %sub = sub nsw i64 %mul, %mul6, !dbg !6985
  store i64 %sub, i64* %tmp, align 8, !dbg !6974
  %6 = load i64, i64* %tmp, align 8, !dbg !6986
  %tobool = icmp ne i64 %6, 0, !dbg !6986
  br i1 %tobool, label %if.then, label %if.else, !dbg !6988

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %tmp, align 8, !dbg !6989
  %den7 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !6991
  %8 = load i32, i32* %den7, align 4, !dbg !6991
  %conv8 = sext i32 %8 to i64, !dbg !6992
  %xor = xor i64 %7, %conv8, !dbg !6993
  %den9 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 1, !dbg !6994
  %9 = load i32, i32* %den9, align 4, !dbg !6994
  %conv10 = sext i32 %9 to i64, !dbg !6995
  %xor11 = xor i64 %xor, %conv10, !dbg !6996
  %shr = ashr i64 %xor11, 63, !dbg !6997
  %conv12 = trunc i64 %shr to i32, !dbg !6998
  %or = or i32 %conv12, 1, !dbg !6999
  store i32 %or, i32* %retval, align 4, !dbg !7000
  br label %return, !dbg !7000

if.else:                                          ; preds = %entry
  %den13 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 1, !dbg !7001
  %10 = load i32, i32* %den13, align 4, !dbg !7001
  %tobool14 = icmp ne i32 %10, 0, !dbg !7003
  br i1 %tobool14, label %land.lhs.true, label %if.else18, !dbg !7004

land.lhs.true:                                    ; preds = %if.else
  %den15 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !7005
  %11 = load i32, i32* %den15, align 4, !dbg !7005
  %tobool16 = icmp ne i32 %11, 0, !dbg !7007
  br i1 %tobool16, label %if.then17, label %if.else18, !dbg !7008

if.then17:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !7009
  br label %return, !dbg !7009

if.else18:                                        ; preds = %land.lhs.true, %if.else
  %num19 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !7011
  %12 = load i32, i32* %num19, align 4, !dbg !7011
  %tobool20 = icmp ne i32 %12, 0, !dbg !7013
  br i1 %tobool20, label %land.lhs.true21, label %if.else30, !dbg !7014

land.lhs.true21:                                  ; preds = %if.else18
  %num22 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 0, !dbg !7015
  %13 = load i32, i32* %num22, align 4, !dbg !7015
  %tobool23 = icmp ne i32 %13, 0, !dbg !7017
  br i1 %tobool23, label %if.then24, label %if.else30, !dbg !7018

if.then24:                                        ; preds = %land.lhs.true21
  %num25 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !7019
  %14 = load i32, i32* %num25, align 4, !dbg !7019
  %shr26 = ashr i32 %14, 31, !dbg !7021
  %num27 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %b, i32 0, i32 0, !dbg !7022
  %15 = load i32, i32* %num27, align 4, !dbg !7022
  %shr28 = ashr i32 %15, 31, !dbg !7023
  %sub29 = sub nsw i32 %shr26, %shr28, !dbg !7024
  store i32 %sub29, i32* %retval, align 4, !dbg !7025
  br label %return, !dbg !7025

if.else30:                                        ; preds = %land.lhs.true21, %if.else18
  store i32 -2147483648, i32* %retval, align 4, !dbg !7026
  br label %return, !dbg !7026

return:                                           ; preds = %if.else30, %if.then24, %if.then17, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7027
  ret i32 %16, !dbg !7027
}

declare i32 @ff_codec_get_tag(%struct.AVCodecTag*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @mkv_write_field_order(%struct.AVIOContext* %pb, i32 %mode, i32 %field_order) #0 !dbg !7028 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %mode.addr = alloca i32, align 4
  %field_order.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7031, metadata !2445), !dbg !7032
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7033, metadata !2445), !dbg !7034
  store i32 %field_order, i32* %field_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %field_order.addr, metadata !7035, metadata !2445), !dbg !7036
  %0 = load i32, i32* %field_order.addr, align 4, !dbg !7037
  switch i32 %0, label %sw.epilog7 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb2
    i32 4, label %sw.bb2
    i32 5, label %sw.bb2
  ], !dbg !7038

sw.bb:                                            ; preds = %entry
  br label %sw.epilog7, !dbg !7039

sw.bb1:                                           ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7041
  call void @put_ebml_uint(%struct.AVIOContext* %1, i32 154, i64 2), !dbg !7042
  br label %sw.epilog7, !dbg !7043

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7044
  call void @put_ebml_uint(%struct.AVIOContext* %2, i32 154, i64 1), !dbg !7045
  %3 = load i32, i32* %mode.addr, align 4, !dbg !7046
  %cmp = icmp ne i32 %3, 2, !dbg !7048
  br i1 %cmp, label %if.then, label %if.end, !dbg !7049

if.then:                                          ; preds = %sw.bb2
  %4 = load i32, i32* %field_order.addr, align 4, !dbg !7050
  switch i32 %4, label %sw.epilog [
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
    i32 4, label %sw.bb5
    i32 5, label %sw.bb6
  ], !dbg !7052

sw.bb3:                                           ; preds = %if.then
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7053
  call void @put_ebml_uint(%struct.AVIOContext* %5, i32 157, i64 1), !dbg !7055
  br label %sw.epilog, !dbg !7056

sw.bb4:                                           ; preds = %if.then
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7057
  call void @put_ebml_uint(%struct.AVIOContext* %6, i32 157, i64 6), !dbg !7058
  br label %sw.epilog, !dbg !7059

sw.bb5:                                           ; preds = %if.then
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7060
  call void @put_ebml_uint(%struct.AVIOContext* %7, i32 157, i64 9), !dbg !7061
  br label %sw.epilog, !dbg !7062

sw.bb6:                                           ; preds = %if.then
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7063
  call void @put_ebml_uint(%struct.AVIOContext* %8, i32 157, i64 14), !dbg !7064
  br label %sw.epilog, !dbg !7065

sw.epilog:                                        ; preds = %if.then, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3
  br label %if.end, !dbg !7066

if.end:                                           ; preds = %sw.epilog, %sw.bb2
  br label %sw.epilog7, !dbg !7067

sw.epilog7:                                       ; preds = %if.end, %entry, %sw.bb1, %sw.bb
  ret void, !dbg !7068
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_stereo_mode(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVStream* %st, i32 %mode, i32* %h_width, i32* %h_height) #0 !dbg !7069 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %mode.addr = alloca i32, align 4
  %h_width.addr = alloca i32*, align 8
  %h_height.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %tag = alloca %struct.AVDictionaryEntry*, align 8
  %format = alloca i32, align 4
  %stereo_mode = alloca i32, align 4
  %ret14 = alloca i32, align 4
  %sd = alloca %struct.AVPacketSideData, align 8
  %stereo = alloca %struct.AVStereo3D*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7072, metadata !2445), !dbg !7073
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7074, metadata !2445), !dbg !7075
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !7076, metadata !2445), !dbg !7077
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7078, metadata !2445), !dbg !7079
  store i32* %h_width, i32** %h_width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %h_width.addr, metadata !7080, metadata !2445), !dbg !7081
  store i32* %h_height, i32** %h_height.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %h_height.addr, metadata !7082, metadata !2445), !dbg !7083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7084, metadata !2445), !dbg !7085
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7086, metadata !2445), !dbg !7087
  store i32 0, i32* %ret, align 4, !dbg !7087
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tag, metadata !7088, metadata !2445), !dbg !7089
  call void @llvm.dbg.declare(metadata i32* %format, metadata !7090, metadata !2445), !dbg !7092
  store i32 15, i32* %format, align 4, !dbg !7092
  %0 = load i32*, i32** %h_width.addr, align 8, !dbg !7093
  store i32 1, i32* %0, align 4, !dbg !7094
  %1 = load i32*, i32** %h_height.addr, align 8, !dbg !7095
  store i32 1, i32* %1, align 4, !dbg !7096
  %2 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7097
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2, i32 0, i32 11, !dbg !7099
  %3 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !7099
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7100
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %tag, align 8, !dbg !7101
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !7101
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7102

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7103
  %metadata1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 29, !dbg !7104
  %5 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata1, align 8, !dbg !7104
  %call2 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7105
  store %struct.AVDictionaryEntry* %call2, %struct.AVDictionaryEntry** %tag, align 8, !dbg !7106
  %tobool3 = icmp ne %struct.AVDictionaryEntry* %call2, null, !dbg !7106
  br i1 %tobool3, label %if.then, label %if.end20, !dbg !7107

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %stereo_mode, metadata !7109, metadata !2445), !dbg !7111
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !7112
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %6, i32 0, i32 1, !dbg !7113
  %7 = load i8*, i8** %value, align 8, !dbg !7113
  %call4 = call i32 @atoi(i8* %7) #10, !dbg !7114
  store i32 %call4, i32* %stereo_mode, align 4, !dbg !7111
  store i32 0, i32* %i, align 4, !dbg !7115
  br label %for.cond, !dbg !7117

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !7118
  %cmp = icmp slt i32 %8, 15, !dbg !7121
  br i1 %cmp, label %for.body, label %for.end, !dbg !7122

for.body:                                         ; preds = %for.cond
  %9 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !7123
  %value5 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %9, i32 0, i32 1, !dbg !7125
  %10 = load i8*, i8** %value5, align 8, !dbg !7125
  %11 = load i32, i32* %i, align 4, !dbg !7126
  %idxprom = sext i32 %11 to i64, !dbg !7127
  %arrayidx = getelementptr inbounds [15 x i8*], [15 x i8*]* @ff_matroska_video_stereo_mode, i64 0, i64 %idxprom, !dbg !7127
  %12 = load i8*, i8** %arrayidx, align 8, !dbg !7127
  %call6 = call i32 @strcmp(i8* %10, i8* %12) #10, !dbg !7128
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7128
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !7129

if.then8:                                         ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !7130
  store i32 %13, i32* %stereo_mode, align 4, !dbg !7132
  br label %for.end, !dbg !7133

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7134

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !7136
  %inc = add nsw i32 %14, 1, !dbg !7136
  store i32 %inc, i32* %i, align 4, !dbg !7136
  br label %for.cond, !dbg !7138, !llvm.loop !7139

for.end:                                          ; preds = %if.then8, %for.cond
  %15 = load i32, i32* %stereo_mode, align 4, !dbg !7141
  %cmp9 = icmp slt i32 %15, 15, !dbg !7143
  br i1 %cmp9, label %land.lhs.true, label %if.end19, !dbg !7144

land.lhs.true:                                    ; preds = %for.end
  %16 = load i32, i32* %stereo_mode, align 4, !dbg !7145
  %cmp10 = icmp ne i32 %16, 10, !dbg !7146
  br i1 %cmp10, label %land.lhs.true11, label %if.end19, !dbg !7147

land.lhs.true11:                                  ; preds = %land.lhs.true
  %17 = load i32, i32* %stereo_mode, align 4, !dbg !7148
  %cmp12 = icmp ne i32 %17, 12, !dbg !7150
  br i1 %cmp12, label %if.then13, label %if.end19, !dbg !7151

if.then13:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata i32* %ret14, metadata !7153, metadata !2445), !dbg !7155
  %18 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7156
  %19 = load i32, i32* %stereo_mode, align 4, !dbg !7157
  %call15 = call i32 @ff_mkv_stereo3d_conv(%struct.AVStream* %18, i32 %19), !dbg !7158
  store i32 %call15, i32* %ret14, align 4, !dbg !7155
  %20 = load i32, i32* %ret14, align 4, !dbg !7159
  %cmp16 = icmp slt i32 %20, 0, !dbg !7161
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7162

if.then17:                                        ; preds = %if.then13
  %21 = load i32, i32* %ret14, align 4, !dbg !7163
  store i32 %21, i32* %retval, align 4, !dbg !7164
  br label %return, !dbg !7164

if.end18:                                         ; preds = %if.then13
  br label %if.end19, !dbg !7165

if.end19:                                         ; preds = %if.end18, %land.lhs.true11, %land.lhs.true, %for.end
  br label %if.end20, !dbg !7166

if.end20:                                         ; preds = %if.end19, %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !7167
  br label %for.cond21, !dbg !7169

for.cond21:                                       ; preds = %for.inc66, %if.end20
  %22 = load i32, i32* %i, align 4, !dbg !7170
  %23 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7173
  %nb_side_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %23, i32 0, i32 15, !dbg !7174
  %24 = load i32, i32* %nb_side_data, align 8, !dbg !7174
  %cmp22 = icmp slt i32 %22, %24, !dbg !7175
  br i1 %cmp22, label %for.body23, label %for.end68, !dbg !7176

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.AVPacketSideData* %sd, metadata !7177, metadata !2445), !dbg !7179
  %25 = load i32, i32* %i, align 4, !dbg !7180
  %idxprom24 = sext i32 %25 to i64, !dbg !7181
  %26 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7181
  %side_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %26, i32 0, i32 14, !dbg !7182
  %27 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %side_data, align 8, !dbg !7182
  %arrayidx25 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %27, i64 %idxprom24, !dbg !7181
  %28 = bitcast %struct.AVPacketSideData* %sd to i8*, !dbg !7181
  %29 = bitcast %struct.AVPacketSideData* %arrayidx25 to i8*, !dbg !7181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false), !dbg !7181
  %type = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %sd, i32 0, i32 2, !dbg !7183
  %30 = load i32, i32* %type, align 4, !dbg !7183
  %cmp26 = icmp eq i32 %30, 6, !dbg !7185
  br i1 %cmp26, label %if.then27, label %if.end65, !dbg !7186

if.then27:                                        ; preds = %for.body23
  call void @llvm.dbg.declare(metadata %struct.AVStereo3D** %stereo, metadata !7187, metadata !2445), !dbg !7189
  %data = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %sd, i32 0, i32 0, !dbg !7190
  %31 = load i8*, i8** %data, align 8, !dbg !7190
  %32 = bitcast i8* %31 to %struct.AVStereo3D*, !dbg !7191
  store %struct.AVStereo3D* %32, %struct.AVStereo3D** %stereo, align 8, !dbg !7189
  %33 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7192
  %type28 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %33, i32 0, i32 0, !dbg !7193
  %34 = load i32, i32* %type28, align 4, !dbg !7193
  switch i32 %34, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb29
    i32 2, label %sw.bb31
    i32 4, label %sw.bb37
    i32 6, label %sw.bb44
    i32 7, label %sw.bb51
    i32 3, label %sw.bb58
  ], !dbg !7194

sw.bb:                                            ; preds = %if.then27
  store i32 0, i32* %format, align 4, !dbg !7195
  br label %sw.epilog, !dbg !7197

sw.bb29:                                          ; preds = %if.then27
  %35 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7198
  %flags = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %35, i32 0, i32 1, !dbg !7199
  %36 = load i32, i32* %flags, align 4, !dbg !7199
  %and = and i32 %36, 1, !dbg !7200
  %tobool30 = icmp ne i32 %and, 0, !dbg !7201
  %cond = select i1 %tobool30, i32 11, i32 1, !dbg !7201
  store i32 %cond, i32* %format, align 4, !dbg !7202
  %37 = load i32*, i32** %h_width.addr, align 8, !dbg !7203
  store i32 2, i32* %37, align 4, !dbg !7204
  br label %sw.epilog, !dbg !7205

sw.bb31:                                          ; preds = %if.then27
  store i32 3, i32* %format, align 4, !dbg !7206
  %38 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7207
  %flags32 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %38, i32 0, i32 1, !dbg !7209
  %39 = load i32, i32* %flags32, align 4, !dbg !7209
  %and33 = and i32 %39, 1, !dbg !7210
  %tobool34 = icmp ne i32 %and33, 0, !dbg !7210
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !7211

if.then35:                                        ; preds = %sw.bb31
  %40 = load i32, i32* %format, align 4, !dbg !7212
  %dec = add i32 %40, -1, !dbg !7212
  store i32 %dec, i32* %format, align 4, !dbg !7212
  br label %if.end36, !dbg !7213

if.end36:                                         ; preds = %if.then35, %sw.bb31
  %41 = load i32*, i32** %h_height.addr, align 8, !dbg !7214
  store i32 2, i32* %41, align 4, !dbg !7215
  br label %sw.epilog, !dbg !7216

sw.bb37:                                          ; preds = %if.then27
  store i32 5, i32* %format, align 4, !dbg !7217
  %42 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7218
  %flags38 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %42, i32 0, i32 1, !dbg !7220
  %43 = load i32, i32* %flags38, align 4, !dbg !7220
  %and39 = and i32 %43, 1, !dbg !7221
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7221
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !7222

if.then41:                                        ; preds = %sw.bb37
  %44 = load i32, i32* %format, align 4, !dbg !7223
  %dec42 = add i32 %44, -1, !dbg !7223
  store i32 %dec42, i32* %format, align 4, !dbg !7223
  br label %if.end43, !dbg !7224

if.end43:                                         ; preds = %if.then41, %sw.bb37
  br label %sw.epilog, !dbg !7225

sw.bb44:                                          ; preds = %if.then27
  store i32 7, i32* %format, align 4, !dbg !7226
  %45 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7227
  %flags45 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %45, i32 0, i32 1, !dbg !7229
  %46 = load i32, i32* %flags45, align 4, !dbg !7229
  %and46 = and i32 %46, 1, !dbg !7230
  %tobool47 = icmp ne i32 %and46, 0, !dbg !7230
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !7231

if.then48:                                        ; preds = %sw.bb44
  %47 = load i32, i32* %format, align 4, !dbg !7232
  %dec49 = add i32 %47, -1, !dbg !7232
  store i32 %dec49, i32* %format, align 4, !dbg !7232
  br label %if.end50, !dbg !7233

if.end50:                                         ; preds = %if.then48, %sw.bb44
  %48 = load i32*, i32** %h_height.addr, align 8, !dbg !7234
  store i32 2, i32* %48, align 4, !dbg !7235
  br label %sw.epilog, !dbg !7236

sw.bb51:                                          ; preds = %if.then27
  store i32 9, i32* %format, align 4, !dbg !7237
  %49 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7238
  %flags52 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %49, i32 0, i32 1, !dbg !7240
  %50 = load i32, i32* %flags52, align 4, !dbg !7240
  %and53 = and i32 %50, 1, !dbg !7241
  %tobool54 = icmp ne i32 %and53, 0, !dbg !7241
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !7242

if.then55:                                        ; preds = %sw.bb51
  %51 = load i32, i32* %format, align 4, !dbg !7243
  %dec56 = add i32 %51, -1, !dbg !7243
  store i32 %dec56, i32* %format, align 4, !dbg !7243
  br label %if.end57, !dbg !7244

if.end57:                                         ; preds = %if.then55, %sw.bb51
  %52 = load i32*, i32** %h_width.addr, align 8, !dbg !7245
  store i32 2, i32* %52, align 4, !dbg !7246
  br label %sw.epilog, !dbg !7247

sw.bb58:                                          ; preds = %if.then27
  store i32 13, i32* %format, align 4, !dbg !7248
  %53 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !7249
  %flags59 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %53, i32 0, i32 1, !dbg !7251
  %54 = load i32, i32* %flags59, align 4, !dbg !7251
  %and60 = and i32 %54, 1, !dbg !7252
  %tobool61 = icmp ne i32 %and60, 0, !dbg !7252
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !7253

if.then62:                                        ; preds = %sw.bb58
  %55 = load i32, i32* %format, align 4, !dbg !7254
  %inc63 = add i32 %55, 1, !dbg !7254
  store i32 %inc63, i32* %format, align 4, !dbg !7254
  br label %if.end64, !dbg !7255

if.end64:                                         ; preds = %if.then62, %sw.bb58
  br label %sw.epilog, !dbg !7256

sw.epilog:                                        ; preds = %if.then27, %if.end64, %if.end57, %if.end50, %if.end43, %if.end36, %sw.bb29, %sw.bb
  br label %for.end68, !dbg !7257

if.end65:                                         ; preds = %for.body23
  br label %for.inc66, !dbg !7258

for.inc66:                                        ; preds = %if.end65
  %56 = load i32, i32* %i, align 4, !dbg !7259
  %inc67 = add nsw i32 %56, 1, !dbg !7259
  store i32 %inc67, i32* %i, align 4, !dbg !7259
  br label %for.cond21, !dbg !7261, !llvm.loop !7262

for.end68:                                        ; preds = %sw.epilog, %for.cond21
  %57 = load i32, i32* %format, align 4, !dbg !7264
  %cmp69 = icmp eq i32 %57, 15, !dbg !7266
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !7267

if.then70:                                        ; preds = %for.end68
  %58 = load i32, i32* %ret, align 4, !dbg !7268
  store i32 %58, i32* %retval, align 4, !dbg !7269
  br label %return, !dbg !7269

if.end71:                                         ; preds = %for.end68
  %59 = load i32, i32* %mode.addr, align 4, !dbg !7270
  %cmp72 = icmp eq i32 %59, 2, !dbg !7272
  br i1 %cmp72, label %land.lhs.true73, label %lor.lhs.false77, !dbg !7273

land.lhs.true73:                                  ; preds = %if.end71
  %60 = load i32, i32* %format, align 4, !dbg !7274
  %cmp74 = icmp ugt i32 %60, 3, !dbg !7275
  br i1 %cmp74, label %land.lhs.true75, label %lor.lhs.false77, !dbg !7276

land.lhs.true75:                                  ; preds = %land.lhs.true73
  %61 = load i32, i32* %format, align 4, !dbg !7277
  %cmp76 = icmp ne i32 %61, 11, !dbg !7278
  br i1 %cmp76, label %if.then79, label %lor.lhs.false77, !dbg !7279

lor.lhs.false77:                                  ; preds = %land.lhs.true75, %land.lhs.true73, %if.end71
  %62 = load i32, i32* %format, align 4, !dbg !7280
  %cmp78 = icmp uge i32 %62, 15, !dbg !7282
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !7283

if.then79:                                        ; preds = %lor.lhs.false77, %land.lhs.true75
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7284
  %64 = bitcast %struct.AVFormatContext* %63 to i8*, !dbg !7284
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61, i32 0, i32 0)), !dbg !7286
  store i32 15, i32* %format, align 4, !dbg !7287
  store i32 -22, i32* %retval, align 4, !dbg !7288
  br label %return, !dbg !7288

if.end80:                                         ; preds = %lor.lhs.false77
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7289
  %66 = load i32, i32* %format, align 4, !dbg !7290
  %conv = zext i32 %66 to i64, !dbg !7290
  call void @put_ebml_uint(%struct.AVIOContext* %65, i32 21432, i64 %conv), !dbg !7291
  %67 = load i32, i32* %ret, align 4, !dbg !7292
  store i32 %67, i32* %retval, align 4, !dbg !7293
  br label %return, !dbg !7293

return:                                           ; preds = %if.end80, %if.then79, %if.then70, %if.then17
  %68 = load i32, i32* %retval, align 4, !dbg !7294
  ret i32 %68, !dbg !7294
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #3

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_video_color(%struct.AVIOContext* %pb, %struct.AVCodecParameters* %par, %struct.AVStream* %st) #0 !dbg !7295 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %colorinfo_ptr = alloca i8*, align 8
  %side_data_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %colorinfo_size = alloca i32, align 4
  %side_data = alloca i8*, align 8
  %xpos = alloca i32, align 4
  %ypos = alloca i32, align 4
  %metadata = alloca %struct.AVContentLightMetadata*, align 8
  %meta_element = alloca %struct.ebml_master, align 8
  %metadata62 = alloca %struct.AVMasteringDisplayMetadata*, align 8
  %colorinfo = alloca %struct.ebml_master, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7298, metadata !2445), !dbg !7299
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !7300, metadata !2445), !dbg !7301
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !7302, metadata !2445), !dbg !7303
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !7304, metadata !2445), !dbg !7305
  call void @llvm.dbg.declare(metadata i8** %colorinfo_ptr, metadata !7306, metadata !2445), !dbg !7307
  call void @llvm.dbg.declare(metadata i32* %side_data_size, metadata !7308, metadata !2445), !dbg !7309
  store i32 0, i32* %side_data_size, align 4, !dbg !7309
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7310, metadata !2445), !dbg !7311
  call void @llvm.dbg.declare(metadata i32* %colorinfo_size, metadata !7312, metadata !2445), !dbg !7313
  call void @llvm.dbg.declare(metadata i8** %side_data, metadata !7314, metadata !2445), !dbg !7315
  %call = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %dyn_cp), !dbg !7316
  store i32 %call, i32* %ret, align 4, !dbg !7317
  %0 = load i32, i32* %ret, align 4, !dbg !7318
  %cmp = icmp slt i32 %0, 0, !dbg !7320
  br i1 %cmp, label %if.then, label %if.end, !dbg !7321

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !7322
  store i32 %1, i32* %retval, align 4, !dbg !7323
  br label %return, !dbg !7323

if.end:                                           ; preds = %entry
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7324
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 17, !dbg !7326
  %3 = load i32, i32* %color_trc, align 4, !dbg !7326
  %cmp1 = icmp ne i32 %3, 2, !dbg !7327
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !7328

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7329
  %color_trc2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %4, i32 0, i32 17, !dbg !7330
  %5 = load i32, i32* %color_trc2, align 4, !dbg !7330
  %cmp3 = icmp ult i32 %5, 19, !dbg !7331
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7332

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7334
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7336
  %color_trc5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 17, !dbg !7337
  %8 = load i32, i32* %color_trc5, align 4, !dbg !7337
  %conv = zext i32 %8 to i64, !dbg !7336
  call void @put_ebml_uint(%struct.AVIOContext* %6, i32 21946, i64 %conv), !dbg !7338
  br label %if.end6, !dbg !7339

if.end6:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7340
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 18, !dbg !7342
  %10 = load i32, i32* %color_space, align 8, !dbg !7342
  %cmp7 = icmp ne i32 %10, 2, !dbg !7343
  br i1 %cmp7, label %land.lhs.true9, label %if.end16, !dbg !7344

land.lhs.true9:                                   ; preds = %if.end6
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7345
  %color_space10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 18, !dbg !7346
  %12 = load i32, i32* %color_space10, align 8, !dbg !7346
  %cmp11 = icmp ult i32 %12, 15, !dbg !7347
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !7348

if.then13:                                        ; preds = %land.lhs.true9
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7349
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7351
  %color_space14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 18, !dbg !7352
  %15 = load i32, i32* %color_space14, align 8, !dbg !7352
  %conv15 = zext i32 %15 to i64, !dbg !7351
  call void @put_ebml_uint(%struct.AVIOContext* %13, i32 21937, i64 %conv15), !dbg !7353
  br label %if.end16, !dbg !7354

if.end16:                                         ; preds = %if.then13, %land.lhs.true9, %if.end6
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7355
  %color_primaries = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 16, !dbg !7357
  %17 = load i32, i32* %color_primaries, align 8, !dbg !7357
  %cmp17 = icmp ne i32 %17, 2, !dbg !7358
  br i1 %cmp17, label %land.lhs.true19, label %if.end26, !dbg !7359

land.lhs.true19:                                  ; preds = %if.end16
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7360
  %color_primaries20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 16, !dbg !7361
  %19 = load i32, i32* %color_primaries20, align 8, !dbg !7361
  %cmp21 = icmp ult i32 %19, 23, !dbg !7362
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !7363

if.then23:                                        ; preds = %land.lhs.true19
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7364
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7366
  %color_primaries24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 16, !dbg !7367
  %22 = load i32, i32* %color_primaries24, align 8, !dbg !7367
  %conv25 = zext i32 %22 to i64, !dbg !7366
  call void @put_ebml_uint(%struct.AVIOContext* %20, i32 21947, i64 %conv25), !dbg !7368
  br label %if.end26, !dbg !7369

if.end26:                                         ; preds = %if.then23, %land.lhs.true19, %if.end16
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7370
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 15, !dbg !7372
  %24 = load i32, i32* %color_range, align 4, !dbg !7372
  %cmp27 = icmp ne i32 %24, 0, !dbg !7373
  br i1 %cmp27, label %land.lhs.true29, label %if.end36, !dbg !7374

land.lhs.true29:                                  ; preds = %if.end26
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7375
  %color_range30 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 15, !dbg !7376
  %26 = load i32, i32* %color_range30, align 4, !dbg !7376
  %cmp31 = icmp ult i32 %26, 3, !dbg !7377
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !7378

if.then33:                                        ; preds = %land.lhs.true29
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7379
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7381
  %color_range34 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i32 0, i32 15, !dbg !7382
  %29 = load i32, i32* %color_range34, align 4, !dbg !7382
  %conv35 = zext i32 %29 to i64, !dbg !7381
  call void @put_ebml_uint(%struct.AVIOContext* %27, i32 21945, i64 %conv35), !dbg !7383
  br label %if.end36, !dbg !7384

if.end36:                                         ; preds = %if.then33, %land.lhs.true29, %if.end26
  %30 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7385
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %30, i32 0, i32 19, !dbg !7387
  %31 = load i32, i32* %chroma_location, align 4, !dbg !7387
  %cmp37 = icmp ne i32 %31, 0, !dbg !7388
  br i1 %cmp37, label %land.lhs.true39, label %if.end50, !dbg !7389

land.lhs.true39:                                  ; preds = %if.end36
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7390
  %chroma_location40 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 19, !dbg !7391
  %33 = load i32, i32* %chroma_location40, align 4, !dbg !7391
  %cmp41 = icmp ule i32 %33, 4, !dbg !7392
  br i1 %cmp41, label %if.then43, label %if.end50, !dbg !7393

if.then43:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %xpos, metadata !7394, metadata !2445), !dbg !7396
  call void @llvm.dbg.declare(metadata i32* %ypos, metadata !7397, metadata !2445), !dbg !7398
  %34 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7399
  %chroma_location44 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %34, i32 0, i32 19, !dbg !7400
  %35 = load i32, i32* %chroma_location44, align 4, !dbg !7400
  %call45 = call i32 @avcodec_enum_to_chroma_pos(i32* %xpos, i32* %ypos, i32 %35), !dbg !7401
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7402
  %37 = load i32, i32* %xpos, align 4, !dbg !7403
  %shr = ashr i32 %37, 7, !dbg !7404
  %add = add nsw i32 %shr, 1, !dbg !7405
  %conv46 = sext i32 %add to i64, !dbg !7406
  call void @put_ebml_uint(%struct.AVIOContext* %36, i32 21943, i64 %conv46), !dbg !7407
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7408
  %39 = load i32, i32* %ypos, align 4, !dbg !7409
  %shr47 = ashr i32 %39, 7, !dbg !7410
  %add48 = add nsw i32 %shr47, 1, !dbg !7411
  %conv49 = sext i32 %add48 to i64, !dbg !7412
  call void @put_ebml_uint(%struct.AVIOContext* %38, i32 21944, i64 %conv49), !dbg !7413
  br label %if.end50, !dbg !7414

if.end50:                                         ; preds = %if.then43, %land.lhs.true39, %if.end36
  %40 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7415
  %call51 = call i8* @av_stream_get_side_data(%struct.AVStream* %40, i32 22, i32* %side_data_size), !dbg !7416
  store i8* %call51, i8** %side_data, align 8, !dbg !7417
  %41 = load i32, i32* %side_data_size, align 4, !dbg !7418
  %tobool = icmp ne i32 %41, 0, !dbg !7418
  br i1 %tobool, label %if.then52, label %if.end55, !dbg !7420

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata %struct.AVContentLightMetadata** %metadata, metadata !7421, metadata !2445), !dbg !7423
  %42 = load i8*, i8** %side_data, align 8, !dbg !7424
  %43 = bitcast i8* %42 to %struct.AVContentLightMetadata*, !dbg !7425
  store %struct.AVContentLightMetadata* %43, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !7423
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7426
  %45 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !7427
  %MaxCLL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %45, i32 0, i32 0, !dbg !7428
  %46 = load i32, i32* %MaxCLL, align 4, !dbg !7428
  %conv53 = zext i32 %46 to i64, !dbg !7427
  call void @put_ebml_uint(%struct.AVIOContext* %44, i32 21948, i64 %conv53), !dbg !7429
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7430
  %48 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !7431
  %MaxFALL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %48, i32 0, i32 1, !dbg !7432
  %49 = load i32, i32* %MaxFALL, align 4, !dbg !7432
  %conv54 = zext i32 %49 to i64, !dbg !7431
  call void @put_ebml_uint(%struct.AVIOContext* %47, i32 21949, i64 %conv54), !dbg !7433
  br label %if.end55, !dbg !7434

if.end55:                                         ; preds = %if.then52, %if.end50
  %50 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7435
  %call56 = call i8* @av_stream_get_side_data(%struct.AVStream* %50, i32 20, i32* %side_data_size), !dbg !7436
  store i8* %call56, i8** %side_data, align 8, !dbg !7437
  %51 = load i32, i32* %side_data_size, align 4, !dbg !7438
  %conv57 = sext i32 %51 to i64, !dbg !7438
  %cmp58 = icmp eq i64 %conv57, 88, !dbg !7440
  br i1 %cmp58, label %if.then60, label %if.end98, !dbg !7441

if.then60:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %meta_element, metadata !7442, metadata !2445), !dbg !7444
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7445
  %call61 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %52, i32 21968, i64 0), !dbg !7446
  %53 = bitcast %struct.ebml_master* %meta_element to { i64, i32 }*, !dbg !7446
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 0, !dbg !7446
  %55 = extractvalue { i64, i32 } %call61, 0, !dbg !7446
  store i64 %55, i64* %54, align 8, !dbg !7446
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 1, !dbg !7446
  %57 = extractvalue { i64, i32 } %call61, 1, !dbg !7446
  store i32 %57, i32* %56, align 8, !dbg !7446
  call void @llvm.dbg.declare(metadata %struct.AVMasteringDisplayMetadata** %metadata62, metadata !7447, metadata !2445), !dbg !7448
  %58 = load i8*, i8** %side_data, align 8, !dbg !7449
  %59 = bitcast i8* %58 to %struct.AVMasteringDisplayMetadata*, !dbg !7450
  store %struct.AVMasteringDisplayMetadata* %59, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7448
  %60 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7451
  %has_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %60, i32 0, i32 4, !dbg !7453
  %61 = load i32, i32* %has_primaries, align 4, !dbg !7453
  %tobool63 = icmp ne i32 %61, 0, !dbg !7451
  br i1 %tobool63, label %if.then64, label %if.end92, !dbg !7454

if.then64:                                        ; preds = %if.then60
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7455
  %63 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7457
  %display_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %63, i32 0, i32 0, !dbg !7458
  %arrayidx = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries, i64 0, i64 0, !dbg !7457
  %arrayidx65 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx, i64 0, i64 0, !dbg !7457
  %64 = bitcast %struct.AVRational* %arrayidx65 to i64*, !dbg !7459
  %65 = load i64, i64* %64, align 4, !dbg !7459
  %call66 = call double @av_q2d(i64 %65), !dbg !7459
  call void @put_ebml_float(%struct.AVIOContext* %62, i32 21969, double %call66), !dbg !7460
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7461
  %67 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7462
  %display_primaries67 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %67, i32 0, i32 0, !dbg !7463
  %arrayidx68 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries67, i64 0, i64 0, !dbg !7462
  %arrayidx69 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx68, i64 0, i64 1, !dbg !7462
  %68 = bitcast %struct.AVRational* %arrayidx69 to i64*, !dbg !7464
  %69 = load i64, i64* %68, align 4, !dbg !7464
  %call70 = call double @av_q2d(i64 %69), !dbg !7464
  call void @put_ebml_float(%struct.AVIOContext* %66, i32 21970, double %call70), !dbg !7465
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7466
  %71 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7467
  %display_primaries71 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %71, i32 0, i32 0, !dbg !7468
  %arrayidx72 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries71, i64 0, i64 1, !dbg !7467
  %arrayidx73 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx72, i64 0, i64 0, !dbg !7467
  %72 = bitcast %struct.AVRational* %arrayidx73 to i64*, !dbg !7469
  %73 = load i64, i64* %72, align 4, !dbg !7469
  %call74 = call double @av_q2d(i64 %73), !dbg !7469
  call void @put_ebml_float(%struct.AVIOContext* %70, i32 21971, double %call74), !dbg !7470
  %74 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7471
  %75 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7472
  %display_primaries75 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %75, i32 0, i32 0, !dbg !7473
  %arrayidx76 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries75, i64 0, i64 1, !dbg !7472
  %arrayidx77 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx76, i64 0, i64 1, !dbg !7472
  %76 = bitcast %struct.AVRational* %arrayidx77 to i64*, !dbg !7474
  %77 = load i64, i64* %76, align 4, !dbg !7474
  %call78 = call double @av_q2d(i64 %77), !dbg !7474
  call void @put_ebml_float(%struct.AVIOContext* %74, i32 21972, double %call78), !dbg !7475
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7476
  %79 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7477
  %display_primaries79 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %79, i32 0, i32 0, !dbg !7478
  %arrayidx80 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries79, i64 0, i64 2, !dbg !7477
  %arrayidx81 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx80, i64 0, i64 0, !dbg !7477
  %80 = bitcast %struct.AVRational* %arrayidx81 to i64*, !dbg !7479
  %81 = load i64, i64* %80, align 4, !dbg !7479
  %call82 = call double @av_q2d(i64 %81), !dbg !7479
  call void @put_ebml_float(%struct.AVIOContext* %78, i32 21973, double %call82), !dbg !7480
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7481
  %83 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7482
  %display_primaries83 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %83, i32 0, i32 0, !dbg !7483
  %arrayidx84 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries83, i64 0, i64 2, !dbg !7482
  %arrayidx85 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx84, i64 0, i64 1, !dbg !7482
  %84 = bitcast %struct.AVRational* %arrayidx85 to i64*, !dbg !7484
  %85 = load i64, i64* %84, align 4, !dbg !7484
  %call86 = call double @av_q2d(i64 %85), !dbg !7484
  call void @put_ebml_float(%struct.AVIOContext* %82, i32 21974, double %call86), !dbg !7485
  %86 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7486
  %87 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7487
  %white_point = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %87, i32 0, i32 1, !dbg !7488
  %arrayidx87 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point, i64 0, i64 0, !dbg !7487
  %88 = bitcast %struct.AVRational* %arrayidx87 to i64*, !dbg !7489
  %89 = load i64, i64* %88, align 4, !dbg !7489
  %call88 = call double @av_q2d(i64 %89), !dbg !7489
  call void @put_ebml_float(%struct.AVIOContext* %86, i32 21975, double %call88), !dbg !7490
  %90 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7491
  %91 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7492
  %white_point89 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %91, i32 0, i32 1, !dbg !7493
  %arrayidx90 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point89, i64 0, i64 1, !dbg !7492
  %92 = bitcast %struct.AVRational* %arrayidx90 to i64*, !dbg !7494
  %93 = load i64, i64* %92, align 4, !dbg !7494
  %call91 = call double @av_q2d(i64 %93), !dbg !7494
  call void @put_ebml_float(%struct.AVIOContext* %90, i32 21976, double %call91), !dbg !7495
  br label %if.end92, !dbg !7496

if.end92:                                         ; preds = %if.then64, %if.then60
  %94 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7497
  %has_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %94, i32 0, i32 5, !dbg !7499
  %95 = load i32, i32* %has_luminance, align 4, !dbg !7499
  %tobool93 = icmp ne i32 %95, 0, !dbg !7497
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !7500

if.then94:                                        ; preds = %if.end92
  %96 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7501
  %97 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7503
  %max_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %97, i32 0, i32 3, !dbg !7504
  %98 = bitcast %struct.AVRational* %max_luminance to i64*, !dbg !7505
  %99 = load i64, i64* %98, align 4, !dbg !7505
  %call95 = call double @av_q2d(i64 %99), !dbg !7505
  call void @put_ebml_float(%struct.AVIOContext* %96, i32 21977, double %call95), !dbg !7506
  %100 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7507
  %101 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata62, align 8, !dbg !7508
  %min_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %101, i32 0, i32 2, !dbg !7509
  %102 = bitcast %struct.AVRational* %min_luminance to i64*, !dbg !7510
  %103 = load i64, i64* %102, align 4, !dbg !7510
  %call96 = call double @av_q2d(i64 %103), !dbg !7510
  call void @put_ebml_float(%struct.AVIOContext* %100, i32 21978, double %call96), !dbg !7511
  br label %if.end97, !dbg !7512

if.end97:                                         ; preds = %if.then94, %if.end92
  %104 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7513
  %105 = bitcast %struct.ebml_master* %meta_element to { i64, i32 }*, !dbg !7514
  %106 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %105, i32 0, i32 0, !dbg !7514
  %107 = load i64, i64* %106, align 8, !dbg !7514
  %108 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %105, i32 0, i32 1, !dbg !7514
  %109 = load i32, i32* %108, align 8, !dbg !7514
  call void @end_ebml_master(%struct.AVIOContext* %104, i64 %107, i32 %109), !dbg !7514
  br label %if.end98, !dbg !7515

if.end98:                                         ; preds = %if.end97, %if.end55
  %110 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7516
  %call99 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %110, i8** %colorinfo_ptr), !dbg !7517
  store i32 %call99, i32* %colorinfo_size, align 4, !dbg !7518
  %111 = load i32, i32* %colorinfo_size, align 4, !dbg !7519
  %tobool100 = icmp ne i32 %111, 0, !dbg !7519
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !7521

if.then101:                                       ; preds = %if.end98
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %colorinfo, metadata !7522, metadata !2445), !dbg !7524
  %112 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7525
  %113 = load i32, i32* %colorinfo_size, align 4, !dbg !7526
  %conv102 = sext i32 %113 to i64, !dbg !7526
  %call103 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %112, i32 21936, i64 %conv102), !dbg !7527
  %114 = bitcast %struct.ebml_master* %colorinfo to { i64, i32 }*, !dbg !7527
  %115 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %114, i32 0, i32 0, !dbg !7527
  %116 = extractvalue { i64, i32 } %call103, 0, !dbg !7527
  store i64 %116, i64* %115, align 8, !dbg !7527
  %117 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %114, i32 0, i32 1, !dbg !7527
  %118 = extractvalue { i64, i32 } %call103, 1, !dbg !7527
  store i32 %118, i32* %117, align 8, !dbg !7527
  %119 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7528
  %120 = load i8*, i8** %colorinfo_ptr, align 8, !dbg !7529
  %121 = load i32, i32* %colorinfo_size, align 4, !dbg !7530
  call void @avio_write(%struct.AVIOContext* %119, i8* %120, i32 %121), !dbg !7531
  %122 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7532
  %123 = bitcast %struct.ebml_master* %colorinfo to { i64, i32 }*, !dbg !7533
  %124 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %123, i32 0, i32 0, !dbg !7533
  %125 = load i64, i64* %124, align 8, !dbg !7533
  %126 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %123, i32 0, i32 1, !dbg !7533
  %127 = load i32, i32* %126, align 8, !dbg !7533
  call void @end_ebml_master(%struct.AVIOContext* %122, i64 %125, i32 %127), !dbg !7533
  br label %if.end104, !dbg !7534

if.end104:                                        ; preds = %if.then101, %if.end98
  %128 = load i8*, i8** %colorinfo_ptr, align 8, !dbg !7535
  call void @av_free(i8* %128), !dbg !7536
  store i32 0, i32* %retval, align 4, !dbg !7537
  br label %return, !dbg !7537

return:                                           ; preds = %if.end104, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !7538
  ret i32 %129, !dbg !7538
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_video_projection(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVStream* %st) #0 !dbg !7539 {
entry:
  %s.addr.i38 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i38, metadata !2441, metadata !2445), !dbg !7542
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !7545
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %b = alloca %struct.AVIOContext, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %side_data_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %projection_size = alloca i32, align 4
  %projection_ptr = alloca i8*, align 8
  %private = alloca [20 x i8], align 16
  %spherical = alloca %struct.AVSphericalMapping*, align 8
  %projection34 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7547, metadata !2445), !dbg !7548
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7549, metadata !2445), !dbg !7550
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !7551, metadata !2445), !dbg !7552
  call void @llvm.dbg.declare(metadata %struct.AVIOContext* %b, metadata !7553, metadata !2445), !dbg !7554
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !7555, metadata !2445), !dbg !7556
  call void @llvm.dbg.declare(metadata i32* %side_data_size, metadata !7557, metadata !2445), !dbg !7558
  store i32 0, i32* %side_data_size, align 4, !dbg !7558
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7559, metadata !2445), !dbg !7560
  call void @llvm.dbg.declare(metadata i32* %projection_size, metadata !7561, metadata !2445), !dbg !7562
  call void @llvm.dbg.declare(metadata i8** %projection_ptr, metadata !7563, metadata !2445), !dbg !7564
  call void @llvm.dbg.declare(metadata [20 x i8]* %private, metadata !7565, metadata !2445), !dbg !7566
  call void @llvm.dbg.declare(metadata %struct.AVSphericalMapping** %spherical, metadata !7567, metadata !2445), !dbg !7568
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7569
  %call = call i8* @av_stream_get_side_data(%struct.AVStream* %0, i32 21, i32* %side_data_size), !dbg !7570
  %1 = bitcast i8* %call to %struct.AVSphericalMapping*, !dbg !7571
  store %struct.AVSphericalMapping* %1, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7568
  %2 = load i32, i32* %side_data_size, align 4, !dbg !7572
  %tobool = icmp ne i32 %2, 0, !dbg !7572
  br i1 %tobool, label %if.end, label %if.then, !dbg !7574

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7575
  br label %return, !dbg !7575

if.end:                                           ; preds = %entry
  %call1 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %dyn_cp), !dbg !7576
  store i32 %call1, i32* %ret, align 4, !dbg !7577
  %3 = load i32, i32* %ret, align 4, !dbg !7578
  %cmp = icmp slt i32 %3, 0, !dbg !7580
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7581

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !7582
  store i32 %4, i32* %retval, align 4, !dbg !7583
  br label %return, !dbg !7583

if.end3:                                          ; preds = %if.end
  %5 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7584
  %projection = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %5, i32 0, i32 0, !dbg !7585
  %6 = load i32, i32* %projection, align 4, !dbg !7585
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb4
    i32 1, label %sw.bb8
  ], !dbg !7586

sw.bb:                                            ; preds = %if.end3
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7587
  call void @put_ebml_uint(%struct.AVIOContext* %7, i32 30321, i64 1), !dbg !7588
  br label %sw.epilog, !dbg !7589

sw.bb4:                                           ; preds = %if.end3
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %private, i32 0, i32 0, !dbg !7590
  %call5 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %arraydecay, i32 20, i32 1, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !7591
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7592
  call void @put_ebml_uint(%struct.AVIOContext* %8, i32 30321, i64 1), !dbg !7593
  call void @avio_wb32(%struct.AVIOContext* %b, i32 0), !dbg !7594
  %9 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7595
  %bound_top = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %9, i32 0, i32 5, !dbg !7596
  %10 = load i32, i32* %bound_top, align 4, !dbg !7596
  call void @avio_wb32(%struct.AVIOContext* %b, i32 %10), !dbg !7597
  %11 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7598
  %bound_bottom = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %11, i32 0, i32 7, !dbg !7599
  %12 = load i32, i32* %bound_bottom, align 4, !dbg !7599
  call void @avio_wb32(%struct.AVIOContext* %b, i32 %12), !dbg !7600
  %13 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7601
  %bound_left = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %13, i32 0, i32 4, !dbg !7602
  %14 = load i32, i32* %bound_left, align 4, !dbg !7602
  call void @avio_wb32(%struct.AVIOContext* %b, i32 %14), !dbg !7603
  %15 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7604
  %bound_right = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %15, i32 0, i32 6, !dbg !7605
  %16 = load i32, i32* %bound_right, align 4, !dbg !7605
  call void @avio_wb32(%struct.AVIOContext* %b, i32 %16), !dbg !7606
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7607
  %arraydecay6 = getelementptr inbounds [20 x i8], [20 x i8]* %private, i32 0, i32 0, !dbg !7608
  store %struct.AVIOContext* %b, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7609
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7610
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %18, i64 0, i32 1) #11, !dbg !7611
  %conv = trunc i64 %call.i to i32, !dbg !7609
  call void @put_ebml_binary(%struct.AVIOContext* %17, i32 30322, i8* %arraydecay6, i32 %conv), !dbg !7612
  br label %sw.epilog, !dbg !7613

sw.bb8:                                           ; preds = %if.end3
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %private, i32 0, i32 0, !dbg !7614
  %call10 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %arraydecay9, i32 12, i32 1, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !7615
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7616
  call void @put_ebml_uint(%struct.AVIOContext* %19, i32 30321, i64 2), !dbg !7617
  call void @avio_wb32(%struct.AVIOContext* %b, i32 0), !dbg !7618
  call void @avio_wb32(%struct.AVIOContext* %b, i32 0), !dbg !7619
  %20 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7620
  %padding = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %20, i32 0, i32 8, !dbg !7621
  %21 = load i32, i32* %padding, align 4, !dbg !7621
  call void @avio_wb32(%struct.AVIOContext* %b, i32 %21), !dbg !7622
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7623
  %arraydecay11 = getelementptr inbounds [20 x i8], [20 x i8]* %private, i32 0, i32 0, !dbg !7624
  store %struct.AVIOContext* %b, %struct.AVIOContext** %s.addr.i38, align 8, !dbg !7625
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i38, align 8, !dbg !7626
  %call.i39 = call i64 @avio_seek(%struct.AVIOContext* %23, i64 0, i32 1) #11, !dbg !7627
  %conv13 = trunc i64 %call.i39 to i32, !dbg !7625
  call void @put_ebml_binary(%struct.AVIOContext* %22, i32 30322, i8* %arraydecay11, i32 %conv13), !dbg !7628
  br label %sw.epilog, !dbg !7629

sw.default:                                       ; preds = %if.end3
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7630
  %25 = bitcast %struct.AVFormatContext* %24 to i8*, !dbg !7630
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i32 0, i32 0)), !dbg !7631
  br label %end, !dbg !7632

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb4, %sw.bb
  %26 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7633
  %yaw = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %26, i32 0, i32 1, !dbg !7635
  %27 = load i32, i32* %yaw, align 4, !dbg !7635
  %tobool14 = icmp ne i32 %27, 0, !dbg !7633
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !7636

if.then15:                                        ; preds = %sw.epilog
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7637
  %29 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7638
  %yaw16 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %29, i32 0, i32 1, !dbg !7639
  %30 = load i32, i32* %yaw16, align 4, !dbg !7639
  %conv17 = sitofp i32 %30 to double, !dbg !7640
  %div = fdiv double %conv17, 6.553600e+04, !dbg !7641
  call void @put_ebml_float(%struct.AVIOContext* %28, i32 30323, double %div), !dbg !7642
  br label %if.end18, !dbg !7642

if.end18:                                         ; preds = %if.then15, %sw.epilog
  %31 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7643
  %pitch = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %31, i32 0, i32 2, !dbg !7645
  %32 = load i32, i32* %pitch, align 4, !dbg !7645
  %tobool19 = icmp ne i32 %32, 0, !dbg !7643
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !7646

if.then20:                                        ; preds = %if.end18
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7647
  %34 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7648
  %pitch21 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %34, i32 0, i32 2, !dbg !7649
  %35 = load i32, i32* %pitch21, align 4, !dbg !7649
  %conv22 = sitofp i32 %35 to double, !dbg !7650
  %div23 = fdiv double %conv22, 6.553600e+04, !dbg !7651
  call void @put_ebml_float(%struct.AVIOContext* %33, i32 30324, double %div23), !dbg !7652
  br label %if.end24, !dbg !7652

if.end24:                                         ; preds = %if.then20, %if.end18
  %36 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7653
  %roll = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %36, i32 0, i32 3, !dbg !7655
  %37 = load i32, i32* %roll, align 4, !dbg !7655
  %tobool25 = icmp ne i32 %37, 0, !dbg !7653
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !7656

if.then26:                                        ; preds = %if.end24
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7657
  %39 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !7658
  %roll27 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %39, i32 0, i32 3, !dbg !7659
  %40 = load i32, i32* %roll27, align 4, !dbg !7659
  %conv28 = sitofp i32 %40 to double, !dbg !7660
  %div29 = fdiv double %conv28, 6.553600e+04, !dbg !7661
  call void @put_ebml_float(%struct.AVIOContext* %38, i32 30325, double %div29), !dbg !7662
  br label %if.end30, !dbg !7662

if.end30:                                         ; preds = %if.then26, %if.end24
  br label %end, !dbg !7663

end:                                              ; preds = %if.end30, %sw.default
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7665
  %call31 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %41, i8** %projection_ptr), !dbg !7666
  store i32 %call31, i32* %projection_size, align 4, !dbg !7667
  %42 = load i32, i32* %projection_size, align 4, !dbg !7668
  %tobool32 = icmp ne i32 %42, 0, !dbg !7668
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !7670

if.then33:                                        ; preds = %end
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %projection34, metadata !7671, metadata !2445), !dbg !7673
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7674
  %44 = load i32, i32* %projection_size, align 4, !dbg !7675
  %conv35 = sext i32 %44 to i64, !dbg !7675
  %call36 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %43, i32 30320, i64 %conv35), !dbg !7676
  %45 = bitcast %struct.ebml_master* %projection34 to { i64, i32 }*, !dbg !7676
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 0, !dbg !7676
  %47 = extractvalue { i64, i32 } %call36, 0, !dbg !7676
  store i64 %47, i64* %46, align 8, !dbg !7676
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 1, !dbg !7676
  %49 = extractvalue { i64, i32 } %call36, 1, !dbg !7676
  store i32 %49, i32* %48, align 8, !dbg !7676
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7677
  %51 = load i8*, i8** %projection_ptr, align 8, !dbg !7678
  %52 = load i32, i32* %projection_size, align 4, !dbg !7679
  call void @avio_write(%struct.AVIOContext* %50, i8* %51, i32 %52), !dbg !7680
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7681
  %54 = bitcast %struct.ebml_master* %projection34 to { i64, i32 }*, !dbg !7682
  %55 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 0, !dbg !7682
  %56 = load i64, i64* %55, align 8, !dbg !7682
  %57 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 1, !dbg !7682
  %58 = load i32, i32* %57, align 8, !dbg !7682
  call void @end_ebml_master(%struct.AVIOContext* %53, i64 %56, i32 %58), !dbg !7682
  br label %if.end37, !dbg !7683

if.end37:                                         ; preds = %if.then33, %end
  %59 = bitcast i8** %projection_ptr to i8*, !dbg !7684
  call void @av_freep(i8* %59), !dbg !7685
  store i32 0, i32* %retval, align 4, !dbg !7686
  br label %return, !dbg !7686

return:                                           ; preds = %if.end37, %if.then2, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !7687
  ret i32 %60, !dbg !7687
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_codecprivate(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVCodecParameters* %par, i32 %native_id, i32 %qt_id) #0 !dbg !7688 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %native_id.addr = alloca i32, align 4
  %qt_id.addr = alloca i32, align 4
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %codecpriv = alloca i8*, align 8
  %ret = alloca i32, align 4
  %codecpriv_size = alloca i32, align 4
  %i = alloca i32, align 4
  %tag = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7691, metadata !2445), !dbg !7692
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7693, metadata !2445), !dbg !7694
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !7695, metadata !2445), !dbg !7696
  store i32 %native_id, i32* %native_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %native_id.addr, metadata !7697, metadata !2445), !dbg !7698
  store i32 %qt_id, i32* %qt_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qt_id.addr, metadata !7699, metadata !2445), !dbg !7700
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !7701, metadata !2445), !dbg !7702
  call void @llvm.dbg.declare(metadata i8** %codecpriv, metadata !7703, metadata !2445), !dbg !7704
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7705, metadata !2445), !dbg !7706
  call void @llvm.dbg.declare(metadata i32* %codecpriv_size, metadata !7707, metadata !2445), !dbg !7708
  %call = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %dyn_cp), !dbg !7709
  store i32 %call, i32* %ret, align 4, !dbg !7710
  %0 = load i32, i32* %ret, align 4, !dbg !7711
  %cmp = icmp slt i32 %0, 0, !dbg !7713
  br i1 %cmp, label %if.then, label %if.end, !dbg !7714

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !7715
  store i32 %1, i32* %retval, align 4, !dbg !7716
  br label %return, !dbg !7716

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %native_id.addr, align 4, !dbg !7717
  %tobool = icmp ne i32 %2, 0, !dbg !7717
  br i1 %tobool, label %if.then1, label %if.else, !dbg !7719

if.then1:                                         ; preds = %if.end
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7720
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7722
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7723
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7724
  %call2 = call i32 @mkv_write_native_codecprivate(%struct.AVFormatContext* %3, %struct.AVIOContext* %4, %struct.AVCodecParameters* %5, %struct.AVIOContext* %6), !dbg !7725
  store i32 %call2, i32* %ret, align 4, !dbg !7726
  br label %if.end71, !dbg !7727

if.else:                                          ; preds = %if.end
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7728
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 0, !dbg !7731
  %8 = load i32, i32* %codec_type, align 8, !dbg !7731
  %cmp3 = icmp eq i32 %8, 0, !dbg !7732
  br i1 %cmp3, label %if.then4, label %if.else52, !dbg !7728

if.then4:                                         ; preds = %if.else
  %9 = load i32, i32* %qt_id.addr, align 4, !dbg !7733
  %tobool5 = icmp ne i32 %9, 0, !dbg !7733
  br i1 %tobool5, label %if.then6, label %if.else27, !dbg !7736

if.then6:                                         ; preds = %if.then4
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7737
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 2, !dbg !7740
  %11 = load i32, i32* %codec_tag, align 8, !dbg !7740
  %tobool7 = icmp ne i32 %11, 0, !dbg !7737
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !7741

if.then8:                                         ; preds = %if.then6
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7742
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 1, !dbg !7743
  %13 = load i32, i32* %codec_id, align 4, !dbg !7743
  %call9 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %13), !dbg !7744
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7745
  %codec_tag10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 2, !dbg !7746
  store i32 %call9, i32* %codec_tag10, align 8, !dbg !7747
  br label %if.end11, !dbg !7745

if.end11:                                         ; preds = %if.then8, %if.then6
  %15 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7748
  %codec_tag12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %15, i32 0, i32 2, !dbg !7750
  %16 = load i32, i32* %codec_tag12, align 8, !dbg !7750
  %call13 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %16), !dbg !7751
  %17 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7752
  %codec_id14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %17, i32 0, i32 1, !dbg !7753
  %18 = load i32, i32* %codec_id14, align 4, !dbg !7753
  %cmp15 = icmp eq i32 %call13, %18, !dbg !7754
  br i1 %cmp15, label %land.lhs.true, label %if.end24, !dbg !7755

land.lhs.true:                                    ; preds = %if.end11
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7756
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i32 0, i32 4, !dbg !7758
  %20 = load i32, i32* %extradata_size, align 8, !dbg !7758
  %tobool16 = icmp ne i32 %20, 0, !dbg !7756
  br i1 %tobool16, label %lor.lhs.false, label %if.then20, !dbg !7759

lor.lhs.false:                                    ; preds = %land.lhs.true
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7760
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 3, !dbg !7762
  %22 = load i8*, i8** %extradata, align 8, !dbg !7762
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 4, !dbg !7763
  %23 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7764
  %l = bitcast %union.unaligned_32* %23 to i32*, !dbg !7764
  %24 = load i32, i32* %l, align 1, !dbg !7764
  %call17 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %24), !dbg !7765
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7766
  %codec_id18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 1, !dbg !7767
  %26 = load i32, i32* %codec_id18, align 4, !dbg !7767
  %cmp19 = icmp ne i32 %call17, %26, !dbg !7768
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !7769

if.then20:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7771, metadata !2445), !dbg !7773
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7774
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7775
  %extradata_size21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i32 0, i32 4, !dbg !7776
  %29 = load i32, i32* %extradata_size21, align 8, !dbg !7776
  %add = add nsw i32 90, %29, !dbg !7777
  call void @avio_wb32(%struct.AVIOContext* %27, i32 %add), !dbg !7778
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7779
  %31 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7780
  %codec_tag22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %31, i32 0, i32 2, !dbg !7781
  %32 = load i32, i32* %codec_tag22, align 8, !dbg !7781
  call void @avio_wl32(%struct.AVIOContext* %30, i32 %32), !dbg !7782
  store i32 0, i32* %i, align 4, !dbg !7783
  br label %for.cond, !dbg !7785

for.cond:                                         ; preds = %for.inc, %if.then20
  %33 = load i32, i32* %i, align 4, !dbg !7786
  %cmp23 = icmp slt i32 %33, 82, !dbg !7789
  br i1 %cmp23, label %for.body, label %for.end, !dbg !7790

for.body:                                         ; preds = %for.cond
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7791
  call void @avio_w8(%struct.AVIOContext* %34, i32 0), !dbg !7792
  br label %for.inc, !dbg !7792

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !7793
  %inc = add nsw i32 %35, 1, !dbg !7793
  store i32 %inc, i32* %i, align 4, !dbg !7793
  br label %for.cond, !dbg !7795, !llvm.loop !7796

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !7798

if.end24:                                         ; preds = %for.end, %lor.lhs.false, %if.end11
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7799
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7800
  %extradata25 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 3, !dbg !7801
  %38 = load i8*, i8** %extradata25, align 8, !dbg !7801
  %39 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7802
  %extradata_size26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %39, i32 0, i32 4, !dbg !7803
  %40 = load i32, i32* %extradata_size26, align 8, !dbg !7803
  call void @avio_write(%struct.AVIOContext* %36, i8* %38, i32 %40), !dbg !7804
  br label %if.end51, !dbg !7805

if.else27:                                        ; preds = %if.then4
  %41 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7806
  %codec_id28 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %41, i32 0, i32 1, !dbg !7809
  %42 = load i32, i32* %codec_id28, align 4, !dbg !7809
  %call29 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i32 0, i32 0), i32 %42), !dbg !7810
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7810
  br i1 %tobool30, label %if.end34, label %if.then31, !dbg !7811

if.then31:                                        ; preds = %if.else27
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7812
  %44 = bitcast %struct.AVFormatContext* %43 to i8*, !dbg !7812
  %45 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7813
  %codec_id32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %45, i32 0, i32 1, !dbg !7814
  %46 = load i32, i32* %codec_id32, align 4, !dbg !7814
  %call33 = call i8* @avcodec_get_name(i32 %46), !dbg !7815
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.63, i32 0, i32 0), i8* %call33), !dbg !7816
  br label %if.end34, !dbg !7816

if.end34:                                         ; preds = %if.then31, %if.else27
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7817
  %codec_tag35 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i32 0, i32 2, !dbg !7819
  %48 = load i32, i32* %codec_tag35, align 8, !dbg !7819
  %tobool36 = icmp ne i32 %48, 0, !dbg !7817
  br i1 %tobool36, label %if.end41, label %if.then37, !dbg !7820

if.then37:                                        ; preds = %if.end34
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7821
  %codec_id38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i32 0, i32 1, !dbg !7822
  %50 = load i32, i32* %codec_id38, align 4, !dbg !7822
  %call39 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i32 0, i32 0), i32 %50), !dbg !7823
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7824
  %codec_tag40 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i32 0, i32 2, !dbg !7825
  store i32 %call39, i32* %codec_tag40, align 8, !dbg !7826
  br label %if.end41, !dbg !7824

if.end41:                                         ; preds = %if.then37, %if.end34
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7827
  %codec_tag42 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 2, !dbg !7829
  %53 = load i32, i32* %codec_tag42, align 8, !dbg !7829
  %tobool43 = icmp ne i32 %53, 0, !dbg !7827
  br i1 %tobool43, label %if.end50, label %land.lhs.true44, !dbg !7830

land.lhs.true44:                                  ; preds = %if.end41
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7831
  %codec_id45 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 1, !dbg !7833
  %55 = load i32, i32* %codec_id45, align 4, !dbg !7833
  %cmp46 = icmp ne i32 %55, 13, !dbg !7834
  br i1 %cmp46, label %if.then47, label %if.end50, !dbg !7835

if.then47:                                        ; preds = %land.lhs.true44
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7836
  %57 = bitcast %struct.AVFormatContext* %56 to i8*, !dbg !7836
  %58 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7838
  %codec_id48 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %58, i32 0, i32 1, !dbg !7839
  %59 = load i32, i32* %codec_id48, align 4, !dbg !7839
  %call49 = call i8* @avcodec_get_name(i32 %59), !dbg !7840
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.64, i32 0, i32 0), i8* %call49), !dbg !7841
  store i32 -22, i32* %ret, align 4, !dbg !7842
  br label %if.end50, !dbg !7843

if.end50:                                         ; preds = %if.then47, %land.lhs.true44, %if.end41
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7844
  %61 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7845
  call void @ff_put_bmp_header(%struct.AVIOContext* %60, %struct.AVCodecParameters* %61, i32 0, i32 0), !dbg !7846
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end24
  br label %if.end70, !dbg !7847

if.else52:                                        ; preds = %if.else
  %62 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7848
  %codec_type53 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %62, i32 0, i32 0, !dbg !7851
  %63 = load i32, i32* %codec_type53, align 8, !dbg !7851
  %cmp54 = icmp eq i32 %63, 1, !dbg !7852
  br i1 %cmp54, label %if.then55, label %if.end69, !dbg !7848

if.then55:                                        ; preds = %if.else52
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !7853, metadata !2445), !dbg !7855
  %64 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7856
  %codec_id56 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %64, i32 0, i32 1, !dbg !7857
  %65 = load i32, i32* %codec_id56, align 4, !dbg !7857
  %call57 = call i32 @ff_codec_get_tag(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i32 0, i32 0), i32 %65), !dbg !7858
  store i32 %call57, i32* %tag, align 4, !dbg !7859
  %66 = load i32, i32* %tag, align 4, !dbg !7860
  %tobool58 = icmp ne i32 %66, 0, !dbg !7860
  br i1 %tobool58, label %if.end62, label %if.then59, !dbg !7862

if.then59:                                        ; preds = %if.then55
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7863
  %68 = bitcast %struct.AVFormatContext* %67 to i8*, !dbg !7863
  %69 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7865
  %codec_id60 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %69, i32 0, i32 1, !dbg !7866
  %70 = load i32, i32* %codec_id60, align 4, !dbg !7866
  %call61 = call i8* @avcodec_get_name(i32 %70), !dbg !7867
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.65, i32 0, i32 0), i8* %call61), !dbg !7868
  store i32 -22, i32* %ret, align 4, !dbg !7869
  br label %if.end62, !dbg !7870

if.end62:                                         ; preds = %if.then59, %if.then55
  %71 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7871
  %codec_tag63 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %71, i32 0, i32 2, !dbg !7873
  %72 = load i32, i32* %codec_tag63, align 8, !dbg !7873
  %tobool64 = icmp ne i32 %72, 0, !dbg !7871
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !7874

if.then65:                                        ; preds = %if.end62
  %73 = load i32, i32* %tag, align 4, !dbg !7875
  %74 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7876
  %codec_tag66 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %74, i32 0, i32 2, !dbg !7877
  store i32 %73, i32* %codec_tag66, align 8, !dbg !7878
  br label %if.end67, !dbg !7876

if.end67:                                         ; preds = %if.then65, %if.end62
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7879
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7880
  %77 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7881
  %call68 = call i32 @ff_put_wav_header(%struct.AVFormatContext* %75, %struct.AVIOContext* %76, %struct.AVCodecParameters* %77, i32 1), !dbg !7882
  br label %if.end69, !dbg !7883

if.end69:                                         ; preds = %if.end67, %if.else52
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end51
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then1
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !7884
  %call72 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %78, i8** %codecpriv), !dbg !7885
  store i32 %call72, i32* %codecpriv_size, align 4, !dbg !7886
  %79 = load i32, i32* %codecpriv_size, align 4, !dbg !7887
  %tobool73 = icmp ne i32 %79, 0, !dbg !7887
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !7889

if.then74:                                        ; preds = %if.end71
  %80 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7890
  %81 = load i8*, i8** %codecpriv, align 8, !dbg !7891
  %82 = load i32, i32* %codecpriv_size, align 4, !dbg !7892
  call void @put_ebml_binary(%struct.AVIOContext* %80, i32 25506, i8* %81, i32 %82), !dbg !7893
  br label %if.end75, !dbg !7893

if.end75:                                         ; preds = %if.then74, %if.end71
  %83 = load i8*, i8** %codecpriv, align 8, !dbg !7894
  call void @av_free(i8* %83), !dbg !7895
  %84 = load i32, i32* %ret, align 4, !dbg !7896
  store i32 %84, i32* %retval, align 4, !dbg !7897
  br label %return, !dbg !7897

return:                                           ; preds = %if.end75, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !7898
  ret i32 %85, !dbg !7898
}

declare i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig*, i8*, i32, i32) #1

declare i32 @ff_mkv_stereo3d_conv(%struct.AVStream*, i32) #1

declare i32 @avcodec_enum_to_chroma_pos(i32*, i32*, i32) #1

declare i8* @av_stream_get_side_data(%struct.AVStream*, i32, i32*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #5 !dbg !7899 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !7902, metadata !2445), !dbg !7903
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !7904
  %1 = load i32, i32* %num, align 4, !dbg !7904
  %conv = sitofp i32 %1 to double, !dbg !7905
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !7906
  %2 = load i32, i32* %den, align 4, !dbg !7906
  %conv1 = sitofp i32 %2 to double, !dbg !7907
  %div = fdiv double %conv, %conv1, !dbg !7908
  ret double %div, !dbg !7909
}

declare i32 @ffio_init_context(%struct.AVIOContext*, i8*, i32, i32, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*) #1

declare void @avio_wb32(%struct.AVIOContext*, i32) #1

declare void @av_freep(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_native_codecprivate(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVCodecParameters* %par, %struct.AVIOContext* %dyn_cp) #0 !dbg !7910 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %dyn_cp.addr = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7913, metadata !2445), !dbg !7914
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7915, metadata !2445), !dbg !7916
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !7917, metadata !2445), !dbg !7918
  store %struct.AVIOContext* %dyn_cp, %struct.AVIOContext** %dyn_cp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp.addr, metadata !7919, metadata !2445), !dbg !7920
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7921
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 1, !dbg !7922
  %1 = load i32, i32* %codec_id, align 4, !dbg !7922
  switch i32 %1, label %sw.default [
    i32 86021, label %sw.bb
    i32 30, label %sw.bb
    i32 86028, label %sw.bb1
    i32 86041, label %sw.bb3
    i32 27, label %sw.bb5
    i32 173, label %sw.bb7
    i32 32797, label %sw.bb11
    i32 86032, label %sw.bb16
    i32 86018, label %sw.bb23
  ], !dbg !7923

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7924
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7926
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7927
  %call = call i32 @put_xiph_codecpriv(%struct.AVFormatContext* %2, %struct.AVIOContext* %3, %struct.AVCodecParameters* %4), !dbg !7928
  store i32 %call, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7930
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7931
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7932
  %call2 = call i32 @put_flac_codecpriv(%struct.AVFormatContext* %5, %struct.AVIOContext* %6, %struct.AVCodecParameters* %7), !dbg !7933
  store i32 %call2, i32* %retval, align 4, !dbg !7934
  br label %return, !dbg !7934

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7935
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7936
  %call4 = call i32 @put_wv_codecpriv(%struct.AVIOContext* %8, %struct.AVCodecParameters* %9), !dbg !7937
  store i32 %call4, i32* %retval, align 4, !dbg !7938
  br label %return, !dbg !7938

sw.bb5:                                           ; preds = %entry
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7939
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7940
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 3, !dbg !7941
  %12 = load i8*, i8** %extradata, align 8, !dbg !7941
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7942
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 4, !dbg !7943
  %14 = load i32, i32* %extradata_size, align 8, !dbg !7943
  %call6 = call i32 @ff_isom_write_avcc(%struct.AVIOContext* %10, i8* %12, i32 %14), !dbg !7944
  store i32 %call6, i32* %retval, align 4, !dbg !7945
  br label %return, !dbg !7945

sw.bb7:                                           ; preds = %entry
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7946
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7947
  %extradata8 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 3, !dbg !7948
  %17 = load i8*, i8** %extradata8, align 8, !dbg !7948
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7949
  %extradata_size9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 4, !dbg !7950
  %19 = load i32, i32* %extradata_size9, align 8, !dbg !7950
  %call10 = call i32 @ff_isom_write_hvcc(%struct.AVIOContext* %15, i8* %17, i32 %19, i32 0), !dbg !7951
  store i32 0, i32* %retval, align 4, !dbg !7952
  br label %return, !dbg !7952

sw.bb11:                                          ; preds = %entry
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7953
  %extradata_size12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 4, !dbg !7955
  %21 = load i32, i32* %extradata_size12, align 8, !dbg !7955
  %tobool = icmp ne i32 %21, 0, !dbg !7953
  br i1 %tobool, label %if.then, label %if.else, !dbg !7956

if.then:                                          ; preds = %sw.bb11
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7957
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7958
  %extradata13 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 3, !dbg !7959
  %24 = load i8*, i8** %extradata13, align 8, !dbg !7959
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7960
  %extradata_size14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 4, !dbg !7961
  %26 = load i32, i32* %extradata_size14, align 8, !dbg !7961
  %call15 = call i32 @ff_isom_write_av1c(%struct.AVIOContext* %22, i8* %24, i32 %26), !dbg !7962
  store i32 %call15, i32* %retval, align 4, !dbg !7963
  br label %return, !dbg !7963

if.else:                                          ; preds = %sw.bb11
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7964
  call void @put_ebml_void(%struct.AVIOContext* %27, i64 7), !dbg !7965
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.epilog, !dbg !7966

sw.bb16:                                          ; preds = %entry
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7967
  %extradata_size17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i32 0, i32 4, !dbg !7969
  %29 = load i32, i32* %extradata_size17, align 8, !dbg !7969
  %cmp = icmp slt i32 %29, 36, !dbg !7970
  br i1 %cmp, label %if.then18, label %if.else19, !dbg !7971

if.then18:                                        ; preds = %sw.bb16
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7972
  %31 = bitcast %struct.AVFormatContext* %30 to i8*, !dbg !7972
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.66, i32 0, i32 0)), !dbg !7974
  store i32 -1094995529, i32* %retval, align 4, !dbg !7975
  br label %return, !dbg !7975

if.else19:                                        ; preds = %sw.bb16
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7976
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7977
  %extradata20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i32 0, i32 3, !dbg !7978
  %34 = load i8*, i8** %extradata20, align 8, !dbg !7978
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 12, !dbg !7979
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7980
  %extradata_size21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 4, !dbg !7981
  %36 = load i32, i32* %extradata_size21, align 8, !dbg !7981
  %sub = sub nsw i32 %36, 12, !dbg !7982
  call void @avio_write(%struct.AVIOContext* %32, i8* %add.ptr, i32 %sub), !dbg !7983
  br label %if.end22

if.end22:                                         ; preds = %if.else19
  br label %sw.epilog, !dbg !7984

sw.bb23:                                          ; preds = %entry
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7985
  %extradata_size24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 4, !dbg !7987
  %38 = load i32, i32* %extradata_size24, align 8, !dbg !7987
  %tobool25 = icmp ne i32 %38, 0, !dbg !7985
  br i1 %tobool25, label %if.then26, label %if.else29, !dbg !7988

if.then26:                                        ; preds = %sw.bb23
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !7989
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7990
  %extradata27 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i32 0, i32 3, !dbg !7991
  %41 = load i8*, i8** %extradata27, align 8, !dbg !7991
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7992
  %extradata_size28 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i32 0, i32 4, !dbg !7993
  %43 = load i32, i32* %extradata_size28, align 8, !dbg !7993
  call void @avio_write(%struct.AVIOContext* %39, i8* %41, i32 %43), !dbg !7994
  br label %if.end30, !dbg !7994

if.else29:                                        ; preds = %sw.bb23
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7995
  call void @put_ebml_void(%struct.AVIOContext* %44, i64 326), !dbg !7996
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then26
  br label %sw.epilog, !dbg !7997

sw.default:                                       ; preds = %entry
  %45 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7998
  %codec_id31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %45, i32 0, i32 1, !dbg !8000
  %46 = load i32, i32* %codec_id31, align 4, !dbg !8000
  %cmp32 = icmp eq i32 %46, 147, !dbg !8001
  br i1 %cmp32, label %land.lhs.true, label %if.else37, !dbg !8002

land.lhs.true:                                    ; preds = %sw.default
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8003
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i32 0, i32 2, !dbg !8004
  %48 = load i32, i32* %codec_tag, align 8, !dbg !8004
  %call33 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %48), !dbg !8005
  %cmp34 = icmp eq i32 %call33, 147, !dbg !8006
  br i1 %cmp34, label %if.then35, label %if.else37, !dbg !8007

if.then35:                                        ; preds = %land.lhs.true
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !8009
  %50 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8011
  %codec_tag36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %50, i32 0, i32 2, !dbg !8012
  %51 = load i32, i32* %codec_tag36, align 8, !dbg !8012
  call void @avio_wl32(%struct.AVIOContext* %49, i32 %51), !dbg !8013
  br label %if.end47, !dbg !8014

if.else37:                                        ; preds = %land.lhs.true, %sw.default
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8015
  %extradata_size38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 4, !dbg !8018
  %53 = load i32, i32* %extradata_size38, align 8, !dbg !8018
  %tobool39 = icmp ne i32 %53, 0, !dbg !8015
  br i1 %tobool39, label %land.lhs.true40, label %if.end46, !dbg !8019

land.lhs.true40:                                  ; preds = %if.else37
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8020
  %codec_id41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 1, !dbg !8022
  %55 = load i32, i32* %codec_id41, align 4, !dbg !8022
  %cmp42 = icmp ne i32 %55, 86038, !dbg !8023
  br i1 %cmp42, label %if.then43, label %if.end46, !dbg !8024

if.then43:                                        ; preds = %land.lhs.true40
  %56 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp.addr, align 8, !dbg !8025
  %57 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8026
  %extradata44 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %57, i32 0, i32 3, !dbg !8027
  %58 = load i8*, i8** %extradata44, align 8, !dbg !8027
  %59 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8028
  %extradata_size45 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %59, i32 0, i32 4, !dbg !8029
  %60 = load i32, i32* %extradata_size45, align 8, !dbg !8029
  call void @avio_write(%struct.AVIOContext* %56, i8* %58, i32 %60), !dbg !8030
  br label %if.end46, !dbg !8030

if.end46:                                         ; preds = %if.then43, %land.lhs.true40, %if.else37
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  br label %sw.epilog, !dbg !8031

sw.epilog:                                        ; preds = %if.end47, %if.end30, %if.end22, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8032
  br label %return, !dbg !8032

return:                                           ; preds = %sw.epilog, %if.then18, %if.then, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %61 = load i32, i32* %retval, align 4, !dbg !8033
  ret i32 %61, !dbg !8033
}

declare i32 @ff_codec_get_id(%struct.AVCodecTag*, i32) #1

declare void @avio_wl32(%struct.AVIOContext*, i32) #1

declare i8* @avcodec_get_name(i32) #1

declare void @ff_put_bmp_header(%struct.AVIOContext*, %struct.AVCodecParameters*, i32, i32) #1

declare i32 @ff_put_wav_header(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVCodecParameters*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @put_xiph_codecpriv(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVCodecParameters* %par) #0 !dbg !8034 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %header_start = alloca [3 x i8*], align 16
  %header_len = alloca [3 x i32], align 4
  %first_header_size = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8037, metadata !2445), !dbg !8038
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8039, metadata !2445), !dbg !8040
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8041, metadata !2445), !dbg !8042
  call void @llvm.dbg.declare(metadata [3 x i8*]* %header_start, metadata !8043, metadata !2445), !dbg !8045
  call void @llvm.dbg.declare(metadata [3 x i32]* %header_len, metadata !8046, metadata !2445), !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %first_header_size, metadata !8049, metadata !2445), !dbg !8050
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8051, metadata !2445), !dbg !8052
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8053
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 1, !dbg !8055
  %1 = load i32, i32* %codec_id, align 4, !dbg !8055
  %cmp = icmp eq i32 %1, 86021, !dbg !8056
  br i1 %cmp, label %if.then, label %if.else, !dbg !8057

if.then:                                          ; preds = %entry
  store i32 30, i32* %first_header_size, align 4, !dbg !8058
  br label %if.end, !dbg !8059

if.else:                                          ; preds = %entry
  store i32 42, i32* %first_header_size, align 4, !dbg !8060
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8061
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 3, !dbg !8063
  %3 = load i8*, i8** %extradata, align 8, !dbg !8063
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8064
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %4, i32 0, i32 4, !dbg !8065
  %5 = load i32, i32* %extradata_size, align 8, !dbg !8065
  %6 = load i32, i32* %first_header_size, align 4, !dbg !8066
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %header_start, i32 0, i32 0, !dbg !8067
  %arraydecay1 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i32 0, i32 0, !dbg !8068
  %call = call i32 @avpriv_split_xiph_headers(i8* %3, i32 %5, i32 %6, i8** %arraydecay, i32* %arraydecay1), !dbg !8069
  %cmp2 = icmp slt i32 %call, 0, !dbg !8070
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8071

if.then3:                                         ; preds = %if.end
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8072
  %8 = bitcast %struct.AVFormatContext* %7 to i8*, !dbg !8072
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i32 0, i32 0)), !dbg !8074
  store i32 -1, i32* %retval, align 4, !dbg !8075
  br label %return, !dbg !8075

if.end4:                                          ; preds = %if.end
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8076
  call void @avio_w8(%struct.AVIOContext* %9, i32 2), !dbg !8077
  store i32 0, i32* %j, align 4, !dbg !8078
  br label %for.cond, !dbg !8080

for.cond:                                         ; preds = %for.inc, %if.end4
  %10 = load i32, i32* %j, align 4, !dbg !8081
  %cmp5 = icmp slt i32 %10, 2, !dbg !8084
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8085

for.body:                                         ; preds = %for.cond
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8086
  %12 = load i32, i32* %j, align 4, !dbg !8088
  %idxprom = sext i32 %12 to i64, !dbg !8089
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom, !dbg !8089
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8089
  call void @put_xiph_size(%struct.AVIOContext* %11, i32 %13), !dbg !8090
  br label %for.inc, !dbg !8091

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %j, align 4, !dbg !8092
  %inc = add nsw i32 %14, 1, !dbg !8092
  store i32 %inc, i32* %j, align 4, !dbg !8092
  br label %for.cond, !dbg !8094, !llvm.loop !8095

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8097
  br label %for.cond6, !dbg !8099

for.cond6:                                        ; preds = %for.inc13, %for.end
  %15 = load i32, i32* %j, align 4, !dbg !8100
  %cmp7 = icmp slt i32 %15, 3, !dbg !8103
  br i1 %cmp7, label %for.body8, label %for.end15, !dbg !8104

for.body8:                                        ; preds = %for.cond6
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8105
  %17 = load i32, i32* %j, align 4, !dbg !8106
  %idxprom9 = sext i32 %17 to i64, !dbg !8107
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %header_start, i64 0, i64 %idxprom9, !dbg !8107
  %18 = load i8*, i8** %arrayidx10, align 8, !dbg !8107
  %19 = load i32, i32* %j, align 4, !dbg !8108
  %idxprom11 = sext i32 %19 to i64, !dbg !8109
  %arrayidx12 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom11, !dbg !8109
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !8109
  call void @avio_write(%struct.AVIOContext* %16, i8* %18, i32 %20), !dbg !8110
  br label %for.inc13, !dbg !8110

for.inc13:                                        ; preds = %for.body8
  %21 = load i32, i32* %j, align 4, !dbg !8111
  %inc14 = add nsw i32 %21, 1, !dbg !8111
  store i32 %inc14, i32* %j, align 4, !dbg !8111
  br label %for.cond6, !dbg !8113, !llvm.loop !8114

for.end15:                                        ; preds = %for.cond6
  store i32 0, i32* %retval, align 4, !dbg !8116
  br label %return, !dbg !8116

return:                                           ; preds = %for.end15, %if.then3
  %22 = load i32, i32* %retval, align 4, !dbg !8117
  ret i32 %22, !dbg !8117
}

; Function Attrs: nounwind uwtable
define internal i32 @put_flac_codecpriv(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVCodecParameters* %par) #0 !dbg !8118 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %write_comment = alloca i32, align 4
  %ret = alloca i32, align 4
  %vendor = alloca i8*, align 8
  %dict = alloca %struct.AVDictionary*, align 8
  %buf = alloca [32 x i8], align 16
  %data = alloca i8*, align 8
  %p = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8119, metadata !2445), !dbg !8120
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8121, metadata !2445), !dbg !8122
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8123, metadata !2445), !dbg !8124
  call void @llvm.dbg.declare(metadata i32* %write_comment, metadata !8125, metadata !2445), !dbg !8126
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8127
  %channel_layout = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 21, !dbg !8128
  %1 = load i64, i64* %channel_layout, align 8, !dbg !8128
  %tobool = icmp ne i64 %1, 0, !dbg !8127
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8129

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8130
  %channel_layout1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 21, !dbg !8131
  %3 = load i64, i64* %channel_layout1, align 8, !dbg !8131
  %and = and i64 %3, -262144, !dbg !8132
  %tobool2 = icmp ne i64 %and, 0, !dbg !8132
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8133

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8134
  %channel_layout3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %4, i32 0, i32 21, !dbg !8135
  %5 = load i64, i64* %channel_layout3, align 8, !dbg !8135
  %call = call i32 @ff_flac_is_native_layout(i64 %5), !dbg !8136
  %tobool4 = icmp ne i32 %call, 0, !dbg !8137
  %lnot = xor i1 %tobool4, true, !dbg !8137
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %6 to i32, !dbg !8138
  store i32 %land.ext, i32* %write_comment, align 4, !dbg !8140
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8141, metadata !2445), !dbg !8142
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8143
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8144
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 3, !dbg !8145
  %9 = load i8*, i8** %extradata, align 8, !dbg !8145
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8146
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 4, !dbg !8147
  %11 = load i32, i32* %extradata_size, align 8, !dbg !8147
  %12 = load i32, i32* %write_comment, align 4, !dbg !8148
  %tobool5 = icmp ne i32 %12, 0, !dbg !8149
  %lnot6 = xor i1 %tobool5, true, !dbg !8149
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !8149
  %call7 = call i32 @ff_flac_write_header(%struct.AVIOContext* %7, i8* %9, i32 %11, i32 %lnot.ext), !dbg !8150
  store i32 %call7, i32* %ret, align 4, !dbg !8142
  %13 = load i32, i32* %ret, align 4, !dbg !8151
  %cmp = icmp slt i32 %13, 0, !dbg !8153
  br i1 %cmp, label %if.then, label %if.end, !dbg !8154

if.then:                                          ; preds = %land.end
  %14 = load i32, i32* %ret, align 4, !dbg !8155
  store i32 %14, i32* %retval, align 4, !dbg !8156
  br label %return, !dbg !8156

if.end:                                           ; preds = %land.end
  %15 = load i32, i32* %write_comment, align 4, !dbg !8157
  %tobool8 = icmp ne i32 %15, 0, !dbg !8157
  br i1 %tobool8, label %if.then9, label %if.end36, !dbg !8159

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %vendor, metadata !8160, metadata !2445), !dbg !8162
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8163
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 15, !dbg !8164
  %17 = load i32, i32* %flags, align 8, !dbg !8164
  %and10 = and i32 %17, 1024, !dbg !8165
  %tobool11 = icmp ne i32 %and10, 0, !dbg !8166
  %cond = select i1 %tobool11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), !dbg !8166
  store i8* %cond, i8** %vendor, align 8, !dbg !8162
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %dict, metadata !8167, metadata !2445), !dbg !8168
  store %struct.AVDictionary* null, %struct.AVDictionary** %dict, align 8, !dbg !8168
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !8169, metadata !2445), !dbg !8173
  call void @llvm.dbg.declare(metadata i8** %data, metadata !8174, metadata !2445), !dbg !8175
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8176, metadata !2445), !dbg !8177
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8178, metadata !2445), !dbg !8179
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !8180
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8181
  %channel_layout12 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 21, !dbg !8182
  %19 = load i64, i64* %channel_layout12, align 8, !dbg !8182
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), i64 %19) #11, !dbg !8183
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !8184
  %call15 = call i32 @av_dict_set(%struct.AVDictionary** %dict, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.69, i32 0, i32 0), i8* %arraydecay14, i32 0), !dbg !8185
  %20 = load %struct.AVDictionary*, %struct.AVDictionary** %dict, align 8, !dbg !8186
  %21 = load i8*, i8** %vendor, align 8, !dbg !8187
  %call16 = call i64 @ff_vorbiscomment_length(%struct.AVDictionary* %20, i8* %21, %struct.AVChapter** null, i32 0), !dbg !8188
  store i64 %call16, i64* %len, align 8, !dbg !8189
  %22 = load i64, i64* %len, align 8, !dbg !8190
  %cmp17 = icmp sge i64 %22, 16777212, !dbg !8192
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !8193

if.then18:                                        ; preds = %if.then9
  store i32 -22, i32* %retval, align 4, !dbg !8194
  br label %return, !dbg !8194

if.end19:                                         ; preds = %if.then9
  %23 = load i64, i64* %len, align 8, !dbg !8195
  %add = add nsw i64 %23, 4, !dbg !8196
  %call20 = call noalias i8* @av_malloc(i64 %add), !dbg !8197
  store i8* %call20, i8** %data, align 8, !dbg !8198
  %24 = load i8*, i8** %data, align 8, !dbg !8199
  %tobool21 = icmp ne i8* %24, null, !dbg !8199
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !8201

if.then22:                                        ; preds = %if.end19
  call void @av_dict_free(%struct.AVDictionary** %dict), !dbg !8202
  store i32 -12, i32* %retval, align 4, !dbg !8204
  br label %return, !dbg !8204

if.end23:                                         ; preds = %if.end19
  %25 = load i8*, i8** %data, align 8, !dbg !8205
  %arrayidx = getelementptr inbounds i8, i8* %25, i64 0, !dbg !8205
  store i8 -124, i8* %arrayidx, align 1, !dbg !8206
  br label %do.body, !dbg !8207, !llvm.loop !8208

do.body:                                          ; preds = %if.end23
  %26 = load i64, i64* %len, align 8, !dbg !8209
  %conv = trunc i64 %26 to i8, !dbg !8212
  %27 = load i8*, i8** %data, align 8, !dbg !8213
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 1, !dbg !8214
  %arrayidx24 = getelementptr inbounds i8, i8* %add.ptr, i64 2, !dbg !8215
  store i8 %conv, i8* %arrayidx24, align 1, !dbg !8216
  %28 = load i64, i64* %len, align 8, !dbg !8217
  %shr = ashr i64 %28, 8, !dbg !8218
  %conv25 = trunc i64 %shr to i8, !dbg !8219
  %29 = load i8*, i8** %data, align 8, !dbg !8220
  %add.ptr26 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !8221
  %arrayidx27 = getelementptr inbounds i8, i8* %add.ptr26, i64 1, !dbg !8222
  store i8 %conv25, i8* %arrayidx27, align 1, !dbg !8223
  %30 = load i64, i64* %len, align 8, !dbg !8224
  %shr28 = ashr i64 %30, 16, !dbg !8225
  %conv29 = trunc i64 %shr28 to i8, !dbg !8226
  %31 = load i8*, i8** %data, align 8, !dbg !8227
  %add.ptr30 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !8228
  %arrayidx31 = getelementptr inbounds i8, i8* %add.ptr30, i64 0, !dbg !8229
  store i8 %conv29, i8* %arrayidx31, align 1, !dbg !8230
  br label %do.end, !dbg !8231

do.end:                                           ; preds = %do.body
  %32 = load i8*, i8** %data, align 8, !dbg !8232
  %add.ptr32 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !8233
  store i8* %add.ptr32, i8** %p, align 8, !dbg !8234
  %33 = load i8*, i8** %vendor, align 8, !dbg !8235
  %call33 = call i32 @ff_vorbiscomment_write(i8** %p, %struct.AVDictionary** %dict, i8* %33, %struct.AVChapter** null, i32 0), !dbg !8236
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8237
  %35 = load i8*, i8** %data, align 8, !dbg !8238
  %36 = load i64, i64* %len, align 8, !dbg !8239
  %add34 = add nsw i64 %36, 4, !dbg !8240
  %conv35 = trunc i64 %add34 to i32, !dbg !8239
  call void @avio_write(%struct.AVIOContext* %34, i8* %35, i32 %conv35), !dbg !8241
  %37 = bitcast i8** %data to i8*, !dbg !8242
  call void @av_freep(i8* %37), !dbg !8243
  call void @av_dict_free(%struct.AVDictionary** %dict), !dbg !8244
  br label %if.end36, !dbg !8245

if.end36:                                         ; preds = %do.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8246
  br label %return, !dbg !8246

return:                                           ; preds = %if.end36, %if.then22, %if.then18, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !8247
  ret i32 %38, !dbg !8247
}

; Function Attrs: nounwind uwtable
define internal i32 @put_wv_codecpriv(%struct.AVIOContext* %pb, %struct.AVCodecParameters* %par) #0 !dbg !8248 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8251, metadata !2445), !dbg !8252
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !8253, metadata !2445), !dbg !8254
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8255
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 3, !dbg !8257
  %1 = load i8*, i8** %extradata, align 8, !dbg !8257
  %tobool = icmp ne i8* %1, null, !dbg !8255
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8258

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8259
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 4, !dbg !8261
  %3 = load i32, i32* %extradata_size, align 8, !dbg !8261
  %cmp = icmp eq i32 %3, 2, !dbg !8262
  br i1 %cmp, label %if.then, label %if.else, !dbg !8263

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8264
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !8265
  %extradata1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 3, !dbg !8266
  %6 = load i8*, i8** %extradata1, align 8, !dbg !8266
  call void @avio_write(%struct.AVIOContext* %4, i8* %6, i32 2), !dbg !8267
  br label %if.end, !dbg !8267

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8268
  call void @avio_wl16(%struct.AVIOContext* %7, i32 1027), !dbg !8269
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !8270
}

declare i32 @ff_isom_write_avcc(%struct.AVIOContext*, i8*, i32) #1

declare i32 @ff_isom_write_hvcc(%struct.AVIOContext*, i8*, i32, i32) #1

declare i32 @ff_isom_write_av1c(%struct.AVIOContext*, i8*, i32) #1

declare i32 @avpriv_split_xiph_headers(i8*, i32, i32, i8**, i32*) #1

; Function Attrs: nounwind uwtable
define internal void @put_xiph_size(%struct.AVIOContext* %pb, i32 %size) #0 !dbg !8271 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8272, metadata !2445), !dbg !8273
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8274, metadata !2445), !dbg !8275
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8276
  %1 = load i32, i32* %size.addr, align 4, !dbg !8277
  %div = sdiv i32 %1, 255, !dbg !8278
  call void @ffio_fill(%struct.AVIOContext* %0, i32 255, i32 %div), !dbg !8279
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8280
  %3 = load i32, i32* %size.addr, align 4, !dbg !8281
  %rem = srem i32 %3, 255, !dbg !8282
  call void @avio_w8(%struct.AVIOContext* %2, i32 %rem), !dbg !8283
  ret void, !dbg !8284
}

declare i32 @ff_flac_is_native_layout(i64) #1

declare i32 @ff_flac_write_header(%struct.AVIOContext*, i8*, i32, i32) #1

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #9

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #1

declare i64 @ff_vorbiscomment_length(%struct.AVDictionary*, i8*, %struct.AVChapter**, i32) #1

declare noalias i8* @av_malloc(i64) #1

declare void @av_dict_free(%struct.AVDictionary**) #1

declare i32 @ff_vorbiscomment_write(i8**, %struct.AVDictionary**, i8*, %struct.AVChapter**, i32) #1

declare void @avio_wl16(%struct.AVIOContext*, i32) #1

declare %struct.AVSHA* @av_sha_alloc() #1

declare i32 @av_sha_init(%struct.AVSHA*, i32) #1

declare void @av_sha_update(%struct.AVSHA*, i8*, i32) #1

declare void @av_sha_final(%struct.AVSHA*, i8*) #1

declare void @ff_metadata_conv_ctx(%struct.AVFormatContext*, %struct.AVMetadataConv*, %struct.AVMetadataConv*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_check_tag(%struct.AVDictionary* %m, i32 %elementid) #0 !dbg !8285 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.AVDictionary*, align 8
  %elementid.addr = alloca i32, align 4
  %t = alloca %struct.AVDictionaryEntry*, align 8
  store %struct.AVDictionary* %m, %struct.AVDictionary** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %m.addr, metadata !8288, metadata !2445), !dbg !8289
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !8290, metadata !2445), !dbg !8291
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !8292, metadata !2445), !dbg !8293
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %t, align 8, !dbg !8293
  br label %while.cond, !dbg !8294

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.AVDictionary*, %struct.AVDictionary** %m.addr, align 8, !dbg !8295
  %1 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8297
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), %struct.AVDictionaryEntry* %1, i32 2), !dbg !8298
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %t, align 8, !dbg !8299
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !8300
  br i1 %tobool, label %while.body, label %while.end, !dbg !8300

while.body:                                       ; preds = %while.cond
  %2 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8301
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %2, i32 0, i32 0, !dbg !8303
  %3 = load i8*, i8** %key, align 8, !dbg !8303
  %4 = load i32, i32* %elementid.addr, align 4, !dbg !8304
  %call1 = call i32 @mkv_check_tag_name(i8* %3, i32 %4), !dbg !8305
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8305
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8306

if.then:                                          ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !8307
  br label %return, !dbg !8307

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !8308, !llvm.loop !8310

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8311
  br label %return, !dbg !8311

return:                                           ; preds = %while.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8312
  ret i32 %5, !dbg !8312
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_tag(%struct.AVFormatContext* %s, %struct.AVDictionary* %m, i32 %elementid, i32 %uid, %struct.ebml_master* %tags) #0 !dbg !8313 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %m.addr = alloca %struct.AVDictionary*, align 8
  %elementid.addr = alloca i32, align 4
  %uid.addr = alloca i32, align 4
  %tags.addr = alloca %struct.ebml_master*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %tag = alloca %struct.ebml_master, align 8
  %ret = alloca i32, align 4
  %t = alloca %struct.AVDictionaryEntry*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8316, metadata !2445), !dbg !8317
  store %struct.AVDictionary* %m, %struct.AVDictionary** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %m.addr, metadata !8318, metadata !2445), !dbg !8319
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !8320, metadata !2445), !dbg !8321
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !8322, metadata !2445), !dbg !8323
  store %struct.ebml_master* %tags, %struct.ebml_master** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ebml_master** %tags.addr, metadata !8324, metadata !2445), !dbg !8325
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !8326, metadata !2445), !dbg !8327
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8328
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8329
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8329
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !8328
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8327
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %tag, metadata !8330, metadata !2445), !dbg !8331
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8332, metadata !2445), !dbg !8333
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !8334, metadata !2445), !dbg !8335
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %t, align 8, !dbg !8335
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8336
  %4 = load i32, i32* %elementid.addr, align 4, !dbg !8337
  %5 = load i32, i32* %uid.addr, align 4, !dbg !8338
  %6 = load %struct.ebml_master*, %struct.ebml_master** %tags.addr, align 8, !dbg !8339
  %call = call i32 @mkv_write_tag_targets(%struct.AVFormatContext* %3, i32 %4, i32 %5, %struct.ebml_master* %6, %struct.ebml_master* %tag), !dbg !8340
  store i32 %call, i32* %ret, align 4, !dbg !8341
  %7 = load i32, i32* %ret, align 4, !dbg !8342
  %cmp = icmp slt i32 %7, 0, !dbg !8344
  br i1 %cmp, label %if.then, label %if.end, !dbg !8345

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !8346
  store i32 %8, i32* %retval, align 4, !dbg !8347
  br label %return, !dbg !8347

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8348

while.cond:                                       ; preds = %if.end9, %if.end
  %9 = load %struct.AVDictionary*, %struct.AVDictionary** %m.addr, align 8, !dbg !8349
  %10 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8351
  %call1 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i32 0, i32 0), %struct.AVDictionaryEntry* %10, i32 2), !dbg !8352
  store %struct.AVDictionaryEntry* %call1, %struct.AVDictionaryEntry** %t, align 8, !dbg !8353
  %tobool = icmp ne %struct.AVDictionaryEntry* %call1, null, !dbg !8354
  br i1 %tobool, label %while.body, label %while.end, !dbg !8354

while.body:                                       ; preds = %while.cond
  %11 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8355
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %11, i32 0, i32 0, !dbg !8358
  %12 = load i8*, i8** %key, align 8, !dbg !8358
  %13 = load i32, i32* %elementid.addr, align 4, !dbg !8359
  %call2 = call i32 @mkv_check_tag_name(i8* %12, i32 %13), !dbg !8360
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8360
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !8361

if.then4:                                         ; preds = %while.body
  %14 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8362
  %tags_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %14, i32 0, i32 3, !dbg !8364
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc, align 8, !dbg !8364
  %16 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8365
  %call5 = call i32 @mkv_write_simpletag(%struct.AVIOContext* %15, %struct.AVDictionaryEntry* %16), !dbg !8366
  store i32 %call5, i32* %ret, align 4, !dbg !8367
  %17 = load i32, i32* %ret, align 4, !dbg !8368
  %cmp6 = icmp slt i32 %17, 0, !dbg !8370
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8371

if.then7:                                         ; preds = %if.then4
  %18 = load i32, i32* %ret, align 4, !dbg !8372
  store i32 %18, i32* %retval, align 4, !dbg !8373
  br label %return, !dbg !8373

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !8374

if.end9:                                          ; preds = %if.end8, %while.body
  br label %while.cond, !dbg !8375, !llvm.loop !8377

while.end:                                        ; preds = %while.cond
  %19 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8378
  %tags_bc10 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %19, i32 0, i32 3, !dbg !8379
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc10, align 8, !dbg !8379
  %21 = bitcast %struct.ebml_master* %tag to { i64, i32 }*, !dbg !8380
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0, !dbg !8380
  %23 = load i64, i64* %22, align 8, !dbg !8380
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1, !dbg !8380
  %25 = load i32, i32* %24, align 8, !dbg !8380
  call void @end_ebml_master(%struct.AVIOContext* %20, i64 %23, i32 %25), !dbg !8380
  store i32 0, i32* %retval, align 4, !dbg !8381
  br label %return, !dbg !8381

return:                                           ; preds = %while.end, %if.then7, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !8382
  ret i32 %26, !dbg !8382
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_tag_targets(%struct.AVFormatContext* %s, i32 %elementid, i32 %uid, %struct.ebml_master* %tags, %struct.ebml_master* %tag) #0 !dbg !8383 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !8386
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %elementid.addr = alloca i32, align 4
  %uid.addr = alloca i32, align 4
  %tags.addr = alloca %struct.ebml_master*, align 8
  %tag.addr = alloca %struct.ebml_master*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %targets = alloca %struct.ebml_master, align 8
  %ret = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %coerce10 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8390, metadata !2445), !dbg !8391
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !8392, metadata !2445), !dbg !8393
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !8394, metadata !2445), !dbg !8395
  store %struct.ebml_master* %tags, %struct.ebml_master** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ebml_master** %tags.addr, metadata !8396, metadata !2445), !dbg !8397
  store %struct.ebml_master* %tag, %struct.ebml_master** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ebml_master** %tag.addr, metadata !8398, metadata !2445), !dbg !8399
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8400, metadata !2445), !dbg !8401
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !8402, metadata !2445), !dbg !8403
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8404
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8405
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8405
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !8404
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8403
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %targets, metadata !8406, metadata !2445), !dbg !8407
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8408, metadata !2445), !dbg !8409
  %3 = load %struct.ebml_master*, %struct.ebml_master** %tags.addr, align 8, !dbg !8410
  %pos = getelementptr inbounds %struct.ebml_master, %struct.ebml_master* %3, i32 0, i32 0, !dbg !8411
  %4 = load i64, i64* %pos, align 8, !dbg !8411
  %tobool = icmp ne i64 %4, 0, !dbg !8410
  br i1 %tobool, label %if.end6, label %if.then, !dbg !8412

if.then:                                          ; preds = %entry
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8413
  %main_seekhead = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 16, !dbg !8414
  %6 = load %struct.mkv_seekhead*, %struct.mkv_seekhead** %main_seekhead, align 8, !dbg !8414
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8415
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 4, !dbg !8416
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8416
  store %struct.AVIOContext* %8, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8417
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8418
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #11, !dbg !8419
  %call2 = call i32 @mkv_add_seekhead_entry(%struct.mkv_seekhead* %6, i32 307544935, i64 %call.i), !dbg !8420
  store i32 %call2, i32* %ret, align 4, !dbg !8422
  %10 = load i32, i32* %ret, align 4, !dbg !8423
  %cmp = icmp slt i32 %10, 0, !dbg !8425
  br i1 %cmp, label %if.then3, label %if.end, !dbg !8426

if.then3:                                         ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !8427
  store i32 %11, i32* %retval, align 4, !dbg !8429
  br label %return, !dbg !8429

if.end:                                           ; preds = %if.then
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8430
  %pb4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 4, !dbg !8431
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb4, align 8, !dbg !8431
  %14 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8432
  %tags_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %14, i32 0, i32 3, !dbg !8433
  %15 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8434
  %16 = load %struct.ebml_master*, %struct.ebml_master** %tags.addr, align 8, !dbg !8435
  %call5 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %13, %struct.AVIOContext** %tags_bc, %struct.MatroskaMuxContext* %15, %struct.ebml_master* %16, i32 307544935, i64 0), !dbg !8436
  br label %if.end6, !dbg !8437

if.end6:                                          ; preds = %if.end, %entry
  %17 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8438
  %tags_bc7 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %17, i32 0, i32 3, !dbg !8439
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %tags_bc7, align 8, !dbg !8439
  store %struct.AVIOContext* %18, %struct.AVIOContext** %pb, align 8, !dbg !8440
  %19 = load %struct.ebml_master*, %struct.ebml_master** %tag.addr, align 8, !dbg !8441
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8442
  %call8 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %20, i32 29555, i64 0), !dbg !8443
  %21 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !8443
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0, !dbg !8443
  %23 = extractvalue { i64, i32 } %call8, 0, !dbg !8443
  store i64 %23, i64* %22, align 8, !dbg !8443
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1, !dbg !8443
  %25 = extractvalue { i64, i32 } %call8, 1, !dbg !8443
  store i32 %25, i32* %24, align 8, !dbg !8443
  %26 = bitcast %struct.ebml_master* %19 to i8*, !dbg !8443
  %27 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !8443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !8444
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8446
  %call9 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %28, i32 25536, i64 0), !dbg !8447
  %29 = bitcast %struct.ebml_master* %coerce10 to { i64, i32 }*, !dbg !8447
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0, !dbg !8447
  %31 = extractvalue { i64, i32 } %call9, 0, !dbg !8447
  store i64 %31, i64* %30, align 8, !dbg !8447
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1, !dbg !8447
  %33 = extractvalue { i64, i32 } %call9, 1, !dbg !8447
  store i32 %33, i32* %32, align 8, !dbg !8447
  %34 = bitcast %struct.ebml_master* %targets to i8*, !dbg !8447
  %35 = bitcast %struct.ebml_master* %coerce10 to i8*, !dbg !8447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !8448
  %36 = load i32, i32* %elementid.addr, align 4, !dbg !8449
  %tobool11 = icmp ne i32 %36, 0, !dbg !8449
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8451

if.then12:                                        ; preds = %if.end6
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8452
  %38 = load i32, i32* %elementid.addr, align 4, !dbg !8453
  %39 = load i32, i32* %uid.addr, align 4, !dbg !8454
  %conv = zext i32 %39 to i64, !dbg !8454
  call void @put_ebml_uint(%struct.AVIOContext* %37, i32 %38, i64 %conv), !dbg !8455
  br label %if.end13, !dbg !8455

if.end13:                                         ; preds = %if.then12, %if.end6
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8456
  %41 = bitcast %struct.ebml_master* %targets to { i64, i32 }*, !dbg !8457
  %42 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0, !dbg !8457
  %43 = load i64, i64* %42, align 8, !dbg !8457
  %44 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1, !dbg !8457
  %45 = load i32, i32* %44, align 8, !dbg !8457
  call void @end_ebml_master(%struct.AVIOContext* %40, i64 %43, i32 %45), !dbg !8457
  store i32 0, i32* %retval, align 4, !dbg !8458
  br label %return, !dbg !8458

return:                                           ; preds = %if.end13, %if.then3
  %46 = load i32, i32* %retval, align 4, !dbg !8459
  ret i32 %46, !dbg !8459
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_check_tag_name(i8* %name, i32 %elementid) #0 !dbg !8460 {
entry:
  %name.addr = alloca i8*, align 8
  %elementid.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8463, metadata !2445), !dbg !8464
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !8465, metadata !2445), !dbg !8466
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8467
  %call = call i32 @av_strcasecmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0)), !dbg !8468
  %tobool = icmp ne i32 %call, 0, !dbg !8468
  br i1 %tobool, label %land.lhs.true, label %land.end21, !dbg !8469

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8470
  %call1 = call i32 @av_strcasecmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0)), !dbg !8471
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8471
  br i1 %tobool2, label %land.lhs.true3, label %land.end21, !dbg !8472

land.lhs.true3:                                   ; preds = %land.lhs.true
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8473
  %call4 = call i32 @av_strcasecmp(i8* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i32 0, i32 0)), !dbg !8474
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8474
  br i1 %tobool5, label %land.lhs.true6, label %land.end21, !dbg !8475

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8476
  %call7 = call i32 @av_strcasecmp(i8* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0)), !dbg !8477
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8477
  br i1 %tobool8, label %land.lhs.true9, label %land.end21, !dbg !8478

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8479
  %call10 = call i32 @av_strcasecmp(i8* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0)), !dbg !8480
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8480
  br i1 %tobool11, label %land.lhs.true12, label %land.end21, !dbg !8481

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %5 = load i32, i32* %elementid.addr, align 4, !dbg !8482
  %cmp = icmp ne i32 %5, 25541, !dbg !8483
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !8484

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %6 = load i8*, i8** %name.addr, align 8, !dbg !8485
  %call13 = call i32 @av_strcasecmp(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0)), !dbg !8486
  %tobool14 = icmp ne i32 %call13, 0, !dbg !8486
  br i1 %tobool14, label %land.rhs, label %land.end21, !dbg !8487

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true12
  %7 = load i32, i32* %elementid.addr, align 4, !dbg !8488
  %cmp15 = icmp ne i32 %7, 25542, !dbg !8489
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !8490

lor.rhs:                                          ; preds = %land.rhs
  %8 = load i8*, i8** %name.addr, align 8, !dbg !8491
  %call16 = call i32 @av_strcasecmp(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i32 0, i32 0)), !dbg !8492
  %tobool17 = icmp ne i32 %call16, 0, !dbg !8492
  br i1 %tobool17, label %land.rhs18, label %land.end, !dbg !8493

land.rhs18:                                       ; preds = %lor.rhs
  %9 = load i8*, i8** %name.addr, align 8, !dbg !8494
  %call19 = call i32 @av_strcasecmp(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0)), !dbg !8495
  %tobool20 = icmp ne i32 %call19, 0, !dbg !8496
  br label %land.end

land.end:                                         ; preds = %land.rhs18, %lor.rhs
  %10 = phi i1 [ false, %lor.rhs ], [ %tobool20, %land.rhs18 ]
  br label %lor.end, !dbg !8498

lor.end:                                          ; preds = %land.end, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %10, %land.end ]
  br label %land.end21

land.end21:                                       ; preds = %lor.end, %lor.lhs.false, %land.lhs.true9, %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %entry
  %12 = phi i1 [ false, %lor.lhs.false ], [ false, %land.lhs.true9 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true3 ], [ false, %land.lhs.true ], [ false, %entry ], [ %11, %lor.end ]
  %land.ext = zext i1 %12 to i32, !dbg !8499
  ret i32 %land.ext, !dbg !8500
}

declare i32 @av_strcasecmp(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_simpletag(%struct.AVIOContext* %pb, %struct.AVDictionaryEntry* %t) #0 !dbg !8501 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %t.addr = alloca %struct.AVDictionaryEntry*, align 8
  %key = alloca i8*, align 8
  %p = alloca i8*, align 8
  %lang = alloca i8*, align 8
  %tag = alloca %struct.ebml_master, align 8
  %coerce = alloca %struct.ebml_master, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8504, metadata !2445), !dbg !8505
  store %struct.AVDictionaryEntry* %t, %struct.AVDictionaryEntry** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t.addr, metadata !8506, metadata !2445), !dbg !8507
  call void @llvm.dbg.declare(metadata i8** %key, metadata !8508, metadata !2445), !dbg !8509
  %0 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t.addr, align 8, !dbg !8510
  %key1 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %0, i32 0, i32 0, !dbg !8511
  %1 = load i8*, i8** %key1, align 8, !dbg !8511
  %call = call noalias i8* @av_strdup(i8* %1), !dbg !8512
  store i8* %call, i8** %key, align 8, !dbg !8509
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8513, metadata !2445), !dbg !8514
  %2 = load i8*, i8** %key, align 8, !dbg !8515
  store i8* %2, i8** %p, align 8, !dbg !8514
  call void @llvm.dbg.declare(metadata i8** %lang, metadata !8516, metadata !2445), !dbg !8517
  store i8* null, i8** %lang, align 8, !dbg !8517
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %tag, metadata !8518, metadata !2445), !dbg !8519
  %3 = load i8*, i8** %key, align 8, !dbg !8520
  %tobool = icmp ne i8* %3, null, !dbg !8520
  br i1 %tobool, label %if.end, label %if.then, !dbg !8522

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8523
  br label %return, !dbg !8523

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !8524
  %call2 = call i8* @strrchr(i8* %4, i32 45) #10, !dbg !8526
  store i8* %call2, i8** %p, align 8, !dbg !8527
  %tobool3 = icmp ne i8* %call2, null, !dbg !8527
  br i1 %tobool3, label %land.lhs.true, label %if.end7, !dbg !8528

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %p, align 8, !dbg !8529
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !8530
  %call4 = call i8* @ff_convert_lang_to(i8* %add.ptr, i32 0), !dbg !8531
  store i8* %call4, i8** %lang, align 8, !dbg !8532
  %tobool5 = icmp ne i8* %call4, null, !dbg !8532
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8533

if.then6:                                         ; preds = %land.lhs.true
  %6 = load i8*, i8** %p, align 8, !dbg !8535
  store i8 0, i8* %6, align 1, !dbg !8536
  br label %if.end7, !dbg !8537

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %7 = load i8*, i8** %key, align 8, !dbg !8538
  store i8* %7, i8** %p, align 8, !dbg !8539
  br label %while.cond, !dbg !8540

while.cond:                                       ; preds = %if.end22, %if.end7
  %8 = load i8*, i8** %p, align 8, !dbg !8541
  %9 = load i8, i8* %8, align 1, !dbg !8542
  %tobool8 = icmp ne i8 %9, 0, !dbg !8543
  br i1 %tobool8, label %while.body, label %while.end, !dbg !8543

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8544
  %11 = load i8, i8* %10, align 1, !dbg !8547
  %conv = zext i8 %11 to i32, !dbg !8547
  %cmp = icmp eq i32 %conv, 32, !dbg !8548
  br i1 %cmp, label %if.then10, label %if.else, !dbg !8549

if.then10:                                        ; preds = %while.body
  %12 = load i8*, i8** %p, align 8, !dbg !8550
  store i8 95, i8* %12, align 1, !dbg !8551
  br label %if.end22, !dbg !8552

if.else:                                          ; preds = %while.body
  %13 = load i8*, i8** %p, align 8, !dbg !8553
  %14 = load i8, i8* %13, align 1, !dbg !8555
  %conv11 = zext i8 %14 to i32, !dbg !8555
  %cmp12 = icmp sge i32 %conv11, 97, !dbg !8556
  br i1 %cmp12, label %land.lhs.true14, label %if.end21, !dbg !8557

land.lhs.true14:                                  ; preds = %if.else
  %15 = load i8*, i8** %p, align 8, !dbg !8558
  %16 = load i8, i8* %15, align 1, !dbg !8560
  %conv15 = zext i8 %16 to i32, !dbg !8560
  %cmp16 = icmp sle i32 %conv15, 122, !dbg !8561
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !8562

if.then18:                                        ; preds = %land.lhs.true14
  %17 = load i8*, i8** %p, align 8, !dbg !8563
  %18 = load i8, i8* %17, align 1, !dbg !8564
  %conv19 = zext i8 %18 to i32, !dbg !8564
  %sub = sub nsw i32 %conv19, 32, !dbg !8564
  %conv20 = trunc i32 %sub to i8, !dbg !8564
  store i8 %conv20, i8* %17, align 1, !dbg !8564
  br label %if.end21, !dbg !8565

if.end21:                                         ; preds = %if.then18, %land.lhs.true14, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then10
  %19 = load i8*, i8** %p, align 8, !dbg !8566
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8566
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8566
  br label %while.cond, !dbg !8567, !llvm.loop !8569

while.end:                                        ; preds = %while.cond
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8570
  %call23 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %20, i32 26568, i64 0), !dbg !8571
  %21 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !8571
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0, !dbg !8571
  %23 = extractvalue { i64, i32 } %call23, 0, !dbg !8571
  store i64 %23, i64* %22, align 8, !dbg !8571
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1, !dbg !8571
  %25 = extractvalue { i64, i32 } %call23, 1, !dbg !8571
  store i32 %25, i32* %24, align 8, !dbg !8571
  %26 = bitcast %struct.ebml_master* %tag to i8*, !dbg !8571
  %27 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !8571
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !8572
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8573
  %29 = load i8*, i8** %key, align 8, !dbg !8574
  call void @put_ebml_string(%struct.AVIOContext* %28, i32 17827, i8* %29), !dbg !8575
  %30 = load i8*, i8** %lang, align 8, !dbg !8576
  %tobool24 = icmp ne i8* %30, null, !dbg !8576
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !8578

if.then25:                                        ; preds = %while.end
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8579
  %32 = load i8*, i8** %lang, align 8, !dbg !8580
  call void @put_ebml_string(%struct.AVIOContext* %31, i32 17530, i8* %32), !dbg !8581
  br label %if.end26, !dbg !8581

if.end26:                                         ; preds = %if.then25, %while.end
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8582
  %34 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t.addr, align 8, !dbg !8583
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %34, i32 0, i32 1, !dbg !8584
  %35 = load i8*, i8** %value, align 8, !dbg !8584
  call void @put_ebml_string(%struct.AVIOContext* %33, i32 17543, i8* %35), !dbg !8585
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8586
  %37 = bitcast %struct.ebml_master* %tag to { i64, i32 }*, !dbg !8587
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0, !dbg !8587
  %39 = load i64, i64* %38, align 8, !dbg !8587
  %40 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1, !dbg !8587
  %41 = load i32, i32* %40, align 8, !dbg !8587
  call void @end_ebml_master(%struct.AVIOContext* %36, i64 %39, i32 %41), !dbg !8587
  %42 = bitcast i8** %key to i8*, !dbg !8588
  call void @av_freep(i8* %42), !dbg !8589
  store i32 0, i32* %retval, align 4, !dbg !8590
  br label %return, !dbg !8590

return:                                           ; preds = %if.end26, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !8591
  ret i32 %43, !dbg !8591
}

declare noalias i8* @av_strdup(i8*) #1

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #3

declare i8* @ff_convert_lang_to(i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !8592 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !8593
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %codec_type = alloca i32, align 4
  %keyframe = alloca i32, align 4
  %cluster_size = alloca i32, align 4
  %cluster_time = alloca i64, align 8
  %ret = alloca i32, align 4
  %start_new_cluster = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8595, metadata !2445), !dbg !8596
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !8597, metadata !2445), !dbg !8598
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !8599, metadata !2445), !dbg !8600
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8601
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8602
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8602
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !8601
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8600
  call void @llvm.dbg.declare(metadata i32* %codec_type, metadata !8603, metadata !2445), !dbg !8604
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8605
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 5, !dbg !8606
  %4 = load i32, i32* %stream_index, align 4, !dbg !8606
  %idxprom = sext i32 %4 to i64, !dbg !8607
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8607
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !8608
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8608
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 %idxprom, !dbg !8607
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !8607
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !8609
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8609
  %codec_type1 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 0, !dbg !8610
  %9 = load i32, i32* %codec_type1, align 8, !dbg !8610
  store i32 %9, i32* %codec_type, align 4, !dbg !8604
  call void @llvm.dbg.declare(metadata i32* %keyframe, metadata !8611, metadata !2445), !dbg !8612
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8613
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 6, !dbg !8614
  %11 = load i32, i32* %flags, align 8, !dbg !8614
  %and = and i32 %11, 1, !dbg !8615
  %tobool = icmp ne i32 %and, 0, !dbg !8616
  %lnot = xor i1 %tobool, true, !dbg !8616
  %lnot2 = xor i1 %lnot, true, !dbg !8617
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8617
  store i32 %lnot.ext, i32* %keyframe, align 4, !dbg !8612
  call void @llvm.dbg.declare(metadata i32* %cluster_size, metadata !8618, metadata !2445), !dbg !8619
  call void @llvm.dbg.declare(metadata i64* %cluster_time, metadata !8620, metadata !2445), !dbg !8621
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8622, metadata !2445), !dbg !8623
  call void @llvm.dbg.declare(metadata i32* %start_new_cluster, metadata !8624, metadata !2445), !dbg !8625
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8626
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8627
  %call = call i32 @mkv_check_new_extra_data(%struct.AVFormatContext* %12, %struct.AVPacket* %13), !dbg !8628
  store i32 %call, i32* %ret, align 4, !dbg !8629
  %14 = load i32, i32* %ret, align 4, !dbg !8630
  %cmp = icmp slt i32 %14, 0, !dbg !8632
  br i1 %cmp, label %if.then, label %if.end, !dbg !8633

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %ret, align 4, !dbg !8634
  store i32 %15, i32* %retval, align 4, !dbg !8635
  br label %return, !dbg !8635

if.end:                                           ; preds = %entry
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8636
  %stream_index3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 5, !dbg !8638
  %17 = load i32, i32* %stream_index3, align 4, !dbg !8638
  %idxprom4 = sext i32 %17 to i64, !dbg !8639
  %18 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8639
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %18, i32 0, i32 18, !dbg !8640
  %19 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !8640
  %arrayidx5 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %19, i64 %idxprom4, !dbg !8639
  %write_dts = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx5, i32 0, i32 0, !dbg !8641
  %20 = load i32, i32* %write_dts, align 8, !dbg !8641
  %tobool6 = icmp ne i32 %20, 0, !dbg !8639
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !8642

if.then7:                                         ; preds = %if.end
  %21 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8643
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %21, i32 0, i32 2, !dbg !8644
  %22 = load i64, i64* %dts, align 8, !dbg !8644
  %23 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8645
  %cluster_pts = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %23, i32 0, i32 13, !dbg !8646
  %24 = load i64, i64* %cluster_pts, align 8, !dbg !8646
  %sub = sub nsw i64 %22, %24, !dbg !8647
  store i64 %sub, i64* %cluster_time, align 8, !dbg !8648
  br label %if.end10, !dbg !8649

if.else:                                          ; preds = %if.end
  %25 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8650
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i32 0, i32 1, !dbg !8651
  %26 = load i64, i64* %pts, align 8, !dbg !8651
  %27 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8652
  %cluster_pts8 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %27, i32 0, i32 13, !dbg !8653
  %28 = load i64, i64* %cluster_pts8, align 8, !dbg !8653
  %sub9 = sub nsw i64 %26, %28, !dbg !8654
  store i64 %sub9, i64* %cluster_time, align 8, !dbg !8655
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8656
  %stream_index11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %29, i32 0, i32 5, !dbg !8657
  %30 = load i32, i32* %stream_index11, align 4, !dbg !8657
  %idxprom12 = sext i32 %30 to i64, !dbg !8658
  %31 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8658
  %tracks13 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %31, i32 0, i32 18, !dbg !8659
  %32 = load %struct.mkv_track*, %struct.mkv_track** %tracks13, align 8, !dbg !8659
  %arrayidx14 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %32, i64 %idxprom12, !dbg !8658
  %ts_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx14, i32 0, i32 5, !dbg !8660
  %33 = load i64, i64* %ts_offset, align 8, !dbg !8660
  %34 = load i64, i64* %cluster_time, align 8, !dbg !8661
  %add = add nsw i64 %34, %33, !dbg !8661
  store i64 %add, i64* %cluster_time, align 8, !dbg !8661
  %35 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8662
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %35, i32 0, i32 2, !dbg !8663
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc, align 8, !dbg !8663
  store %struct.AVIOContext* %36, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8664
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8665
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %37, i64 0, i32 1) #11, !dbg !8666
  %conv = trunc i64 %call.i to i32, !dbg !8664
  store i32 %conv, i32* %cluster_size, align 4, !dbg !8667
  %38 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8668
  %is_dash = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %38, i32 0, i32 27, !dbg !8670
  %39 = load i32, i32* %is_dash, align 8, !dbg !8670
  %tobool16 = icmp ne i32 %39, 0, !dbg !8668
  br i1 %tobool16, label %land.lhs.true, label %if.else20, !dbg !8671

land.lhs.true:                                    ; preds = %if.end10
  %40 = load i32, i32* %codec_type, align 4, !dbg !8672
  %cmp17 = icmp eq i32 %40, 0, !dbg !8674
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !8675

if.then19:                                        ; preds = %land.lhs.true
  %41 = load i32, i32* %keyframe, align 4, !dbg !8676
  store i32 %41, i32* %start_new_cluster, align 4, !dbg !8678
  br label %if.end54, !dbg !8679

if.else20:                                        ; preds = %land.lhs.true, %if.end10
  %42 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8680
  %is_dash21 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %42, i32 0, i32 27, !dbg !8683
  %43 = load i32, i32* %is_dash21, align 8, !dbg !8683
  %tobool22 = icmp ne i32 %43, 0, !dbg !8680
  br i1 %tobool22, label %land.lhs.true23, label %if.else32, !dbg !8684

land.lhs.true23:                                  ; preds = %if.else20
  %44 = load i32, i32* %codec_type, align 4, !dbg !8685
  %cmp24 = icmp eq i32 %44, 1, !dbg !8687
  br i1 %cmp24, label %land.lhs.true26, label %if.else32, !dbg !8688

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %45 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8689
  %cluster_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %45, i32 0, i32 12, !dbg !8690
  %46 = load i64, i64* %cluster_pos, align 8, !dbg !8690
  %cmp27 = icmp eq i64 %46, -1, !dbg !8691
  br i1 %cmp27, label %if.then31, label %lor.lhs.false, !dbg !8692

lor.lhs.false:                                    ; preds = %land.lhs.true26
  %47 = load i64, i64* %cluster_time, align 8, !dbg !8693
  %48 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8694
  %cluster_time_limit = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %48, i32 0, i32 26, !dbg !8695
  %49 = load i64, i64* %cluster_time_limit, align 8, !dbg !8695
  %cmp29 = icmp sgt i64 %47, %49, !dbg !8696
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !8697

if.then31:                                        ; preds = %lor.lhs.false, %land.lhs.true26
  store i32 1, i32* %start_new_cluster, align 4, !dbg !8699
  br label %if.end53, !dbg !8701

if.else32:                                        ; preds = %lor.lhs.false, %land.lhs.true23, %if.else20
  %50 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8702
  %is_dash33 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %50, i32 0, i32 27, !dbg !8705
  %51 = load i32, i32* %is_dash33, align 8, !dbg !8705
  %tobool34 = icmp ne i32 %51, 0, !dbg !8702
  br i1 %tobool34, label %if.else51, label %land.lhs.true35, !dbg !8706

land.lhs.true35:                                  ; preds = %if.else32
  %52 = load i32, i32* %cluster_size, align 4, !dbg !8707
  %53 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8708
  %cluster_size_limit = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %53, i32 0, i32 24, !dbg !8709
  %54 = load i32, i32* %cluster_size_limit, align 4, !dbg !8709
  %cmp36 = icmp sgt i32 %52, %54, !dbg !8710
  br i1 %cmp36, label %if.then50, label %lor.lhs.false38, !dbg !8711

lor.lhs.false38:                                  ; preds = %land.lhs.true35
  %55 = load i64, i64* %cluster_time, align 8, !dbg !8712
  %56 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8713
  %cluster_time_limit39 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %56, i32 0, i32 26, !dbg !8714
  %57 = load i64, i64* %cluster_time_limit39, align 8, !dbg !8714
  %cmp40 = icmp sgt i64 %55, %57, !dbg !8715
  br i1 %cmp40, label %if.then50, label %lor.lhs.false42, !dbg !8716

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %58 = load i32, i32* %codec_type, align 4, !dbg !8717
  %cmp43 = icmp eq i32 %58, 0, !dbg !8718
  br i1 %cmp43, label %land.lhs.true45, label %if.else51, !dbg !8719

land.lhs.true45:                                  ; preds = %lor.lhs.false42
  %59 = load i32, i32* %keyframe, align 4, !dbg !8720
  %tobool46 = icmp ne i32 %59, 0, !dbg !8720
  br i1 %tobool46, label %land.lhs.true47, label %if.else51, !dbg !8721

land.lhs.true47:                                  ; preds = %land.lhs.true45
  %60 = load i32, i32* %cluster_size, align 4, !dbg !8722
  %cmp48 = icmp sgt i32 %60, 4096, !dbg !8723
  br i1 %cmp48, label %if.then50, label %if.else51, !dbg !8724

if.then50:                                        ; preds = %land.lhs.true47, %lor.lhs.false38, %land.lhs.true35
  store i32 1, i32* %start_new_cluster, align 4, !dbg !8725
  br label %if.end52, !dbg !8727

if.else51:                                        ; preds = %land.lhs.true47, %land.lhs.true45, %lor.lhs.false42, %if.else32
  store i32 0, i32* %start_new_cluster, align 4, !dbg !8728
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then50
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then31
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then19
  %61 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8730
  %cluster_pos55 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %61, i32 0, i32 12, !dbg !8732
  %62 = load i64, i64* %cluster_pos55, align 8, !dbg !8732
  %cmp56 = icmp ne i64 %62, -1, !dbg !8733
  br i1 %cmp56, label %land.lhs.true58, label %if.end61, !dbg !8734

land.lhs.true58:                                  ; preds = %if.end54
  %63 = load i32, i32* %start_new_cluster, align 4, !dbg !8735
  %tobool59 = icmp ne i32 %63, 0, !dbg !8735
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !8737

if.then60:                                        ; preds = %land.lhs.true58
  %64 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8738
  %65 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8740
  call void @mkv_start_new_cluster(%struct.AVFormatContext* %64, %struct.AVPacket* %65), !dbg !8741
  br label %if.end61, !dbg !8742

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %if.end54
  %66 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8743
  %cluster_pos62 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %66, i32 0, i32 12, !dbg !8745
  %67 = load i64, i64* %cluster_pos62, align 8, !dbg !8745
  %tobool63 = icmp ne i64 %67, 0, !dbg !8743
  br i1 %tobool63, label %if.end77, label %if.then64, !dbg !8746

if.then64:                                        ; preds = %if.end61
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8747
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i32 0, i32 4, !dbg !8748
  %69 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8748
  %70 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8749
  %dts65 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %70, i32 0, i32 2, !dbg !8750
  %71 = load i64, i64* %dts65, align 8, !dbg !8750
  %72 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8751
  %stream_index66 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %72, i32 0, i32 5, !dbg !8752
  %73 = load i32, i32* %stream_index66, align 4, !dbg !8752
  %idxprom67 = sext i32 %73 to i64, !dbg !8753
  %74 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8753
  %streams68 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %74, i32 0, i32 7, !dbg !8754
  %75 = load %struct.AVStream**, %struct.AVStream*** %streams68, align 8, !dbg !8754
  %arrayidx69 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %75, i64 %idxprom67, !dbg !8753
  %76 = load %struct.AVStream*, %struct.AVStream** %arrayidx69, align 8, !dbg !8753
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %76, i32 0, i32 4, !dbg !8755
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8756
  store i32 1, i32* %num, align 4, !dbg !8756
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8756
  store i32 1000000, i32* %den, align 4, !dbg !8756
  %77 = bitcast %struct.AVRational* %time_base to i64*, !dbg !8757
  %78 = load i64, i64* %77, align 8, !dbg !8757
  %79 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !8757
  %80 = load i64, i64* %79, align 4, !dbg !8757
  %call70 = call i64 @av_rescale_q(i64 %71, i64 %78, i64 %80) #2, !dbg !8757
  %81 = load i32, i32* %keyframe, align 4, !dbg !8758
  %tobool71 = icmp ne i32 %81, 0, !dbg !8758
  br i1 %tobool71, label %land.rhs, label %land.end, !dbg !8759

land.rhs:                                         ; preds = %if.then64
  %82 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8760
  %have_video = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %82, i32 0, i32 22, !dbg !8762
  %83 = load i32, i32* %have_video, align 4, !dbg !8762
  %tobool72 = icmp ne i32 %83, 0, !dbg !8760
  br i1 %tobool72, label %cond.true, label %cond.false, !dbg !8760

cond.true:                                        ; preds = %land.rhs
  %84 = load i32, i32* %codec_type, align 4, !dbg !8763
  %cmp73 = icmp eq i32 %84, 0, !dbg !8765
  %conv74 = zext i1 %cmp73 to i32, !dbg !8765
  br label %cond.end, !dbg !8766

cond.false:                                       ; preds = %land.rhs
  br label %cond.end, !dbg !8767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv74, %cond.true ], [ 1, %cond.false ], !dbg !8769
  %tobool75 = icmp ne i32 %cond, 0, !dbg !8771
  br label %land.end

land.end:                                         ; preds = %cond.end, %if.then64
  %85 = phi i1 [ false, %if.then64 ], [ %tobool75, %cond.end ]
  %cond76 = select i1 %85, i32 1, i32 2, !dbg !8772
  call void @avio_write_marker(%struct.AVIOContext* %69, i64 %call70, i32 %cond76), !dbg !8774
  br label %if.end77, !dbg !8774

if.end77:                                         ; preds = %land.end, %if.end61
  %86 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8775
  %cur_audio_pkt = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %86, i32 0, i32 20, !dbg !8777
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %cur_audio_pkt, i32 0, i32 4, !dbg !8778
  %87 = load i32, i32* %size, align 8, !dbg !8778
  %cmp78 = icmp sgt i32 %87, 0, !dbg !8779
  br i1 %cmp78, label %if.then80, label %if.end94, !dbg !8780

if.then80:                                        ; preds = %if.end77
  %88 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8781
  %89 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8783
  %cur_audio_pkt81 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %89, i32 0, i32 20, !dbg !8784
  %90 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8785
  %is_dash82 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %90, i32 0, i32 27, !dbg !8786
  %91 = load i32, i32* %is_dash82, align 8, !dbg !8786
  %tobool83 = icmp ne i32 %91, 0, !dbg !8785
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !8785

cond.true84:                                      ; preds = %if.then80
  %92 = load i32, i32* %start_new_cluster, align 4, !dbg !8787
  br label %cond.end86, !dbg !8789

cond.false85:                                     ; preds = %if.then80
  br label %cond.end86, !dbg !8790

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi i32 [ %92, %cond.true84 ], [ 0, %cond.false85 ], !dbg !8792
  %call88 = call i32 @mkv_write_packet_internal(%struct.AVFormatContext* %88, %struct.AVPacket* %cur_audio_pkt81, i32 %cond87), !dbg !8794
  store i32 %call88, i32* %ret, align 4, !dbg !8795
  %93 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8796
  %cur_audio_pkt89 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %93, i32 0, i32 20, !dbg !8797
  call void @av_packet_unref(%struct.AVPacket* %cur_audio_pkt89), !dbg !8798
  %94 = load i32, i32* %ret, align 4, !dbg !8799
  %cmp90 = icmp slt i32 %94, 0, !dbg !8801
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !8802

if.then92:                                        ; preds = %cond.end86
  %95 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8803
  %96 = bitcast %struct.AVFormatContext* %95 to i8*, !dbg !8803
  %97 = load i32, i32* %ret, align 4, !dbg !8805
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.81, i32 0, i32 0), i32 %97), !dbg !8806
  %98 = load i32, i32* %ret, align 4, !dbg !8807
  store i32 %98, i32* %retval, align 4, !dbg !8808
  br label %return, !dbg !8808

if.end93:                                         ; preds = %cond.end86
  br label %if.end94, !dbg !8809

if.end94:                                         ; preds = %if.end93, %if.end77
  %99 = load i32, i32* %codec_type, align 4, !dbg !8810
  %cmp95 = icmp eq i32 %99, 1, !dbg !8812
  br i1 %cmp95, label %if.then97, label %if.else100, !dbg !8813

if.then97:                                        ; preds = %if.end94
  %100 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8814
  %cur_audio_pkt98 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %100, i32 0, i32 20, !dbg !8816
  %101 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8817
  %call99 = call i32 @av_packet_ref(%struct.AVPacket* %cur_audio_pkt98, %struct.AVPacket* %101), !dbg !8818
  store i32 %call99, i32* %ret, align 4, !dbg !8819
  br label %if.end102, !dbg !8820

if.else100:                                       ; preds = %if.end94
  %102 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8821
  %103 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8822
  %call101 = call i32 @mkv_write_packet_internal(%struct.AVFormatContext* %102, %struct.AVPacket* %103, i32 0), !dbg !8823
  store i32 %call101, i32* %ret, align 4, !dbg !8824
  br label %if.end102

if.end102:                                        ; preds = %if.else100, %if.then97
  %104 = load i32, i32* %ret, align 4, !dbg !8825
  store i32 %104, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

return:                                           ; preds = %if.end102, %if.then92, %if.then
  %105 = load i32, i32* %retval, align 4, !dbg !8827
  ret i32 %105, !dbg !8827
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_check_new_extra_data(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !8828 {
entry:
  %s.addr.i142 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i142, metadata !2441, metadata !2445), !dbg !8829
  %s.addr.i140 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i140, metadata !2441, metadata !2445), !dbg !8834
  %s.addr.i138 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i138, metadata !2441, metadata !2445), !dbg !8838
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !8842
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %track = alloca %struct.mkv_track*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %side_data = alloca i8*, align 8
  %side_data_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %filler = alloca i32, align 4
  %output_sample_rate = alloca i32, align 4
  %curpos = alloca i64, align 8
  %codecpriv_par = alloca %struct.AVCodecParameters*, align 8
  %curpos60 = alloca i64, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %codecpriv = alloca i8*, align 8
  %codecpriv_size = alloca i32, align 4
  %curpos102 = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8844, metadata !2445), !dbg !8845
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !8846, metadata !2445), !dbg !8847
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !8848, metadata !2445), !dbg !8849
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8850
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8851
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8851
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !8850
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8849
  call void @llvm.dbg.declare(metadata %struct.mkv_track** %track, metadata !8852, metadata !2445), !dbg !8853
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8854
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 5, !dbg !8855
  %4 = load i32, i32* %stream_index, align 4, !dbg !8855
  %idxprom = sext i32 %4 to i64, !dbg !8856
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8856
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 18, !dbg !8857
  %6 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !8857
  %arrayidx = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %6, i64 %idxprom, !dbg !8856
  store %struct.mkv_track* %arrayidx, %struct.mkv_track** %track, align 8, !dbg !8853
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !8858, metadata !2445), !dbg !8859
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8860
  %stream_index1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 5, !dbg !8861
  %8 = load i32, i32* %stream_index1, align 4, !dbg !8861
  %idxprom2 = sext i32 %8 to i64, !dbg !8862
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8862
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 7, !dbg !8863
  %10 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8863
  %arrayidx3 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %10, i64 %idxprom2, !dbg !8862
  %11 = load %struct.AVStream*, %struct.AVStream** %arrayidx3, align 8, !dbg !8862
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i32 0, i32 19, !dbg !8864
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8864
  store %struct.AVCodecParameters* %12, %struct.AVCodecParameters** %par, align 8, !dbg !8859
  call void @llvm.dbg.declare(metadata i8** %side_data, metadata !8865, metadata !2445), !dbg !8866
  call void @llvm.dbg.declare(metadata i32* %side_data_size, metadata !8867, metadata !2445), !dbg !8868
  store i32 0, i32* %side_data_size, align 4, !dbg !8868
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8869, metadata !2445), !dbg !8870
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !8871
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %13, i32 1, i32* %side_data_size), !dbg !8872
  store i8* %call, i8** %side_data, align 8, !dbg !8873
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8874
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 1, !dbg !8875
  %15 = load i32, i32* %codec_id, align 4, !dbg !8875
  switch i32 %15, label %sw.default [
    i32 86018, label %sw.bb
    i32 86028, label %sw.bb49
    i32 32797, label %sw.bb88
  ], !dbg !8876

sw.bb:                                            ; preds = %entry
  %16 = load i32, i32* %side_data_size, align 4, !dbg !8877
  %tobool = icmp ne i32 %16, 0, !dbg !8877
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8878

land.lhs.true:                                    ; preds = %sw.bb
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8879
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 4, !dbg !8881
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8881
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %18, i32 0, i32 19, !dbg !8882
  %19 = load i32, i32* %seekable, align 8, !dbg !8882
  %and = and i32 %19, 1, !dbg !8883
  %tobool4 = icmp ne i32 %and, 0, !dbg !8883
  br i1 %tobool4, label %land.lhs.true5, label %if.else, !dbg !8884

land.lhs.true5:                                   ; preds = %land.lhs.true
  %20 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8885
  %is_live = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %20, i32 0, i32 29, !dbg !8887
  %21 = load i32, i32* %is_live, align 8, !dbg !8887
  %tobool6 = icmp ne i32 %21, 0, !dbg !8885
  br i1 %tobool6, label %if.else, label %if.then, !dbg !8888

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata i32* %filler, metadata !8889, metadata !2445), !dbg !8890
  call void @llvm.dbg.declare(metadata i32* %output_sample_rate, metadata !8891, metadata !2445), !dbg !8892
  store i32 0, i32* %output_sample_rate, align 4, !dbg !8892
  call void @llvm.dbg.declare(metadata i64* %curpos, metadata !8893, metadata !2445), !dbg !8894
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8895
  %23 = load i8*, i8** %side_data, align 8, !dbg !8896
  %24 = load i32, i32* %side_data_size, align 4, !dbg !8897
  %25 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8898
  %sample_rate = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %25, i32 0, i32 2, !dbg !8899
  %call7 = call i32 @get_aac_sample_rates(%struct.AVFormatContext* %22, i8* %23, i32 %24, i32* %sample_rate, i32* %output_sample_rate), !dbg !8900
  store i32 %call7, i32* %ret, align 4, !dbg !8901
  %26 = load i32, i32* %ret, align 4, !dbg !8902
  %cmp = icmp slt i32 %26, 0, !dbg !8904
  br i1 %cmp, label %if.then8, label %if.end, !dbg !8905

if.then8:                                         ; preds = %if.then
  %27 = load i32, i32* %ret, align 4, !dbg !8906
  store i32 %27, i32* %retval, align 4, !dbg !8907
  br label %return, !dbg !8907

if.end:                                           ; preds = %if.then
  %28 = load i32, i32* %output_sample_rate, align 4, !dbg !8908
  %tobool9 = icmp ne i32 %28, 0, !dbg !8908
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !8910

if.then10:                                        ; preds = %if.end
  %29 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8911
  %sample_rate11 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %29, i32 0, i32 2, !dbg !8912
  %30 = load i32, i32* %sample_rate11, align 8, !dbg !8912
  store i32 %30, i32* %output_sample_rate, align 4, !dbg !8913
  br label %if.end12, !dbg !8914

if.end12:                                         ; preds = %if.then10, %if.end
  %31 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8915
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %31, i32 0, i32 3, !dbg !8916
  %32 = bitcast i8** %extradata to i8*, !dbg !8917
  call void @av_freep(i8* %32), !dbg !8918
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8919
  %34 = load i32, i32* %side_data_size, align 4, !dbg !8920
  %call13 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %33, i32 %34), !dbg !8921
  store i32 %call13, i32* %ret, align 4, !dbg !8922
  %35 = load i32, i32* %ret, align 4, !dbg !8923
  %cmp14 = icmp slt i32 %35, 0, !dbg !8925
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !8926

if.then15:                                        ; preds = %if.end12
  %36 = load i32, i32* %ret, align 4, !dbg !8927
  store i32 %36, i32* %retval, align 4, !dbg !8928
  br label %return, !dbg !8928

if.end16:                                         ; preds = %if.end12
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8929
  %extradata17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 3, !dbg !8930
  %38 = load i8*, i8** %extradata17, align 8, !dbg !8930
  %39 = load i8*, i8** %side_data, align 8, !dbg !8931
  %40 = load i32, i32* %side_data_size, align 4, !dbg !8932
  %conv = sext i32 %40 to i64, !dbg !8932
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 %conv, i32 1, i1 false), !dbg !8933
  %41 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8934
  %tracks_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %41, i32 0, i32 7, !dbg !8935
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc, align 8, !dbg !8935
  store %struct.AVIOContext* %42, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8936
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !8937
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %43, i64 0, i32 1) #11, !dbg !8938
  store i64 %call.i, i64* %curpos, align 8, !dbg !8939
  %44 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8940
  %tracks_bc19 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %44, i32 0, i32 7, !dbg !8941
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc19, align 8, !dbg !8941
  %46 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8942
  %codecpriv_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %46, i32 0, i32 4, !dbg !8943
  %47 = load i64, i64* %codecpriv_offset, align 8, !dbg !8943
  %call20 = call i64 @avio_seek(%struct.AVIOContext* %45, i64 %47, i32 0), !dbg !8944
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8945
  %49 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8946
  %tracks_bc21 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %49, i32 0, i32 7, !dbg !8947
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc21, align 8, !dbg !8947
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8948
  %call22 = call i32 @mkv_write_codecprivate(%struct.AVFormatContext* %48, %struct.AVIOContext* %50, %struct.AVCodecParameters* %51, i32 1, i32 0), !dbg !8949
  %52 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8950
  %tracks_bc23 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %52, i32 0, i32 7, !dbg !8951
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc23, align 8, !dbg !8951
  store %struct.AVIOContext* %53, %struct.AVIOContext** %s.addr.i138, align 8, !dbg !8952
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i138, align 8, !dbg !8953
  %call.i139 = call i64 @avio_seek(%struct.AVIOContext* %54, i64 0, i32 1) #11, !dbg !8954
  %55 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8955
  %codecpriv_offset25 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %55, i32 0, i32 4, !dbg !8956
  %56 = load i64, i64* %codecpriv_offset25, align 8, !dbg !8956
  %sub = sub nsw i64 %call.i139, %56, !dbg !8957
  %sub26 = sub nsw i64 326, %sub, !dbg !8958
  %conv27 = trunc i64 %sub26 to i32, !dbg !8959
  store i32 %conv27, i32* %filler, align 4, !dbg !8960
  %57 = load i32, i32* %filler, align 4, !dbg !8961
  %tobool28 = icmp ne i32 %57, 0, !dbg !8961
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8963

if.then29:                                        ; preds = %if.end16
  %58 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8964
  %tracks_bc30 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %58, i32 0, i32 7, !dbg !8965
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc30, align 8, !dbg !8965
  %60 = load i32, i32* %filler, align 4, !dbg !8966
  %conv31 = sext i32 %60 to i64, !dbg !8966
  call void @put_ebml_void(%struct.AVIOContext* %59, i64 %conv31), !dbg !8967
  br label %if.end32, !dbg !8967

if.end32:                                         ; preds = %if.then29, %if.end16
  %61 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8968
  %tracks_bc33 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %61, i32 0, i32 7, !dbg !8969
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc33, align 8, !dbg !8969
  %63 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8970
  %sample_rate_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %63, i32 0, i32 3, !dbg !8971
  %64 = load i64, i64* %sample_rate_offset, align 8, !dbg !8971
  %call34 = call i64 @avio_seek(%struct.AVIOContext* %62, i64 %64, i32 0), !dbg !8972
  %65 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8973
  %tracks_bc35 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %65, i32 0, i32 7, !dbg !8974
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc35, align 8, !dbg !8974
  %67 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8975
  %sample_rate36 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %67, i32 0, i32 2, !dbg !8976
  %68 = load i32, i32* %sample_rate36, align 8, !dbg !8976
  %conv37 = sitofp i32 %68 to double, !dbg !8975
  call void @put_ebml_float(%struct.AVIOContext* %66, i32 181, double %conv37), !dbg !8977
  %69 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8978
  %tracks_bc38 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %69, i32 0, i32 7, !dbg !8979
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc38, align 8, !dbg !8979
  %71 = load i32, i32* %output_sample_rate, align 4, !dbg !8980
  %conv39 = sitofp i32 %71 to double, !dbg !8980
  call void @put_ebml_float(%struct.AVIOContext* %70, i32 30901, double %conv39), !dbg !8981
  %72 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !8982
  %tracks_bc40 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %72, i32 0, i32 7, !dbg !8983
  %73 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc40, align 8, !dbg !8983
  %74 = load i64, i64* %curpos, align 8, !dbg !8984
  %call41 = call i64 @avio_seek(%struct.AVIOContext* %73, i64 %74, i32 0), !dbg !8985
  br label %if.end48, !dbg !8986

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %sw.bb
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !8987
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 4, !dbg !8990
  %76 = load i32, i32* %extradata_size, align 8, !dbg !8990
  %tobool42 = icmp ne i32 %76, 0, !dbg !8987
  br i1 %tobool42, label %if.end47, label %land.lhs.true43, !dbg !8991

land.lhs.true43:                                  ; preds = %if.else
  %77 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !8992
  %sample_rate44 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %77, i32 0, i32 2, !dbg !8994
  %78 = load i32, i32* %sample_rate44, align 8, !dbg !8994
  %tobool45 = icmp ne i32 %78, 0, !dbg !8992
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !8995

if.then46:                                        ; preds = %land.lhs.true43
  %79 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8996
  %80 = bitcast %struct.AVFormatContext* %79 to i8*, !dbg !8996
  call void (i8*, i32, i8*, ...) @av_log(i8* %80, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.60, i32 0, i32 0)), !dbg !8998
  store i32 -22, i32* %retval, align 4, !dbg !8999
  br label %return, !dbg !8999

if.end47:                                         ; preds = %land.lhs.true43, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end32
  br label %sw.epilog, !dbg !9000

sw.bb49:                                          ; preds = %entry
  %81 = load i32, i32* %side_data_size, align 4, !dbg !9001
  %tobool50 = icmp ne i32 %81, 0, !dbg !9001
  br i1 %tobool50, label %land.lhs.true51, label %if.end87, !dbg !9002

land.lhs.true51:                                  ; preds = %sw.bb49
  %82 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9003
  %pb52 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %82, i32 0, i32 4, !dbg !9005
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %pb52, align 8, !dbg !9005
  %seekable53 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %83, i32 0, i32 19, !dbg !9006
  %84 = load i32, i32* %seekable53, align 8, !dbg !9006
  %and54 = and i32 %84, 1, !dbg !9007
  %tobool55 = icmp ne i32 %and54, 0, !dbg !9007
  br i1 %tobool55, label %land.lhs.true56, label %if.end87, !dbg !9008

land.lhs.true56:                                  ; preds = %land.lhs.true51
  %85 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9009
  %is_live57 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %85, i32 0, i32 29, !dbg !9011
  %86 = load i32, i32* %is_live57, align 8, !dbg !9011
  %tobool58 = icmp ne i32 %86, 0, !dbg !9009
  br i1 %tobool58, label %if.end87, label %if.then59, !dbg !9012

if.then59:                                        ; preds = %land.lhs.true56
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %codecpriv_par, metadata !9013, metadata !2445), !dbg !9014
  call void @llvm.dbg.declare(metadata i64* %curpos60, metadata !9015, metadata !2445), !dbg !9016
  %87 = load i32, i32* %side_data_size, align 4, !dbg !9017
  %88 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9019
  %extradata_size61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %88, i32 0, i32 4, !dbg !9020
  %89 = load i32, i32* %extradata_size61, align 8, !dbg !9020
  %cmp62 = icmp ne i32 %87, %89, !dbg !9021
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !9022

if.then64:                                        ; preds = %if.then59
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9023
  %91 = bitcast %struct.AVFormatContext* %90 to i8*, !dbg !9023
  %92 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9025
  %stream_index65 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %92, i32 0, i32 5, !dbg !9026
  %93 = load i32, i32* %stream_index65, align 4, !dbg !9026
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i32 0, i32 0), i32 %93), !dbg !9027
  store i32 -22, i32* %retval, align 4, !dbg !9028
  br label %return, !dbg !9028

if.end66:                                         ; preds = %if.then59
  %call67 = call %struct.AVCodecParameters* @avcodec_parameters_alloc(), !dbg !9029
  store %struct.AVCodecParameters* %call67, %struct.AVCodecParameters** %codecpriv_par, align 8, !dbg !9030
  %94 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpriv_par, align 8, !dbg !9031
  %tobool68 = icmp ne %struct.AVCodecParameters* %94, null, !dbg !9031
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !9033

if.then69:                                        ; preds = %if.end66
  store i32 -12, i32* %retval, align 4, !dbg !9034
  br label %return, !dbg !9034

if.end70:                                         ; preds = %if.end66
  %95 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpriv_par, align 8, !dbg !9035
  %96 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9036
  %call71 = call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %95, %struct.AVCodecParameters* %96), !dbg !9037
  store i32 %call71, i32* %ret, align 4, !dbg !9038
  %97 = load i32, i32* %ret, align 4, !dbg !9039
  %cmp72 = icmp slt i32 %97, 0, !dbg !9041
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !9042

if.then74:                                        ; preds = %if.end70
  call void @avcodec_parameters_free(%struct.AVCodecParameters** %codecpriv_par), !dbg !9043
  %98 = load i32, i32* %ret, align 4, !dbg !9045
  store i32 %98, i32* %retval, align 4, !dbg !9046
  br label %return, !dbg !9046

if.end75:                                         ; preds = %if.end70
  %99 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpriv_par, align 8, !dbg !9047
  %extradata76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %99, i32 0, i32 3, !dbg !9048
  %100 = load i8*, i8** %extradata76, align 8, !dbg !9048
  %101 = load i8*, i8** %side_data, align 8, !dbg !9049
  %102 = load i32, i32* %side_data_size, align 4, !dbg !9050
  %conv77 = sext i32 %102 to i64, !dbg !9050
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 %conv77, i32 1, i1 false), !dbg !9051
  %103 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9052
  %tracks_bc78 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %103, i32 0, i32 7, !dbg !9053
  %104 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc78, align 8, !dbg !9053
  store %struct.AVIOContext* %104, %struct.AVIOContext** %s.addr.i140, align 8, !dbg !9054
  %105 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i140, align 8, !dbg !9055
  %call.i141 = call i64 @avio_seek(%struct.AVIOContext* %105, i64 0, i32 1) #11, !dbg !9056
  store i64 %call.i141, i64* %curpos60, align 8, !dbg !9057
  %106 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9058
  %tracks_bc80 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %106, i32 0, i32 7, !dbg !9059
  %107 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc80, align 8, !dbg !9059
  %108 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !9060
  %codecpriv_offset81 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %108, i32 0, i32 4, !dbg !9061
  %109 = load i64, i64* %codecpriv_offset81, align 8, !dbg !9061
  %call82 = call i64 @avio_seek(%struct.AVIOContext* %107, i64 %109, i32 0), !dbg !9062
  %110 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9063
  %111 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9064
  %tracks_bc83 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %111, i32 0, i32 7, !dbg !9065
  %112 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc83, align 8, !dbg !9065
  %113 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpriv_par, align 8, !dbg !9066
  %call84 = call i32 @mkv_write_codecprivate(%struct.AVFormatContext* %110, %struct.AVIOContext* %112, %struct.AVCodecParameters* %113, i32 1, i32 0), !dbg !9067
  %114 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9068
  %tracks_bc85 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %114, i32 0, i32 7, !dbg !9069
  %115 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc85, align 8, !dbg !9069
  %116 = load i64, i64* %curpos60, align 8, !dbg !9070
  %call86 = call i64 @avio_seek(%struct.AVIOContext* %115, i64 %116, i32 0), !dbg !9071
  call void @avcodec_parameters_free(%struct.AVCodecParameters** %codecpriv_par), !dbg !9072
  br label %if.end87, !dbg !9073

if.end87:                                         ; preds = %if.end75, %land.lhs.true56, %land.lhs.true51, %sw.bb49
  br label %sw.epilog, !dbg !9074

sw.bb88:                                          ; preds = %entry
  %117 = load i32, i32* %side_data_size, align 4, !dbg !9075
  %tobool89 = icmp ne i32 %117, 0, !dbg !9075
  br i1 %tobool89, label %land.lhs.true90, label %if.else128, !dbg !9076

land.lhs.true90:                                  ; preds = %sw.bb88
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9077
  %pb91 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %118, i32 0, i32 4, !dbg !9079
  %119 = load %struct.AVIOContext*, %struct.AVIOContext** %pb91, align 8, !dbg !9079
  %seekable92 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %119, i32 0, i32 19, !dbg !9080
  %120 = load i32, i32* %seekable92, align 8, !dbg !9080
  %and93 = and i32 %120, 1, !dbg !9081
  %tobool94 = icmp ne i32 %and93, 0, !dbg !9081
  br i1 %tobool94, label %land.lhs.true95, label %if.else128, !dbg !9082

land.lhs.true95:                                  ; preds = %land.lhs.true90
  %121 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9083
  %is_live96 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %121, i32 0, i32 29, !dbg !9085
  %122 = load i32, i32* %is_live96, align 8, !dbg !9085
  %tobool97 = icmp ne i32 %122, 0, !dbg !9083
  br i1 %tobool97, label %if.else128, label %land.lhs.true98, !dbg !9086

land.lhs.true98:                                  ; preds = %land.lhs.true95
  %123 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9087
  %extradata_size99 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %123, i32 0, i32 4, !dbg !9088
  %124 = load i32, i32* %extradata_size99, align 8, !dbg !9088
  %tobool100 = icmp ne i32 %124, 0, !dbg !9087
  br i1 %tobool100, label %if.else128, label %if.then101, !dbg !9089

if.then101:                                       ; preds = %land.lhs.true98
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !9091, metadata !2445), !dbg !9092
  call void @llvm.dbg.declare(metadata i8** %codecpriv, metadata !9093, metadata !2445), !dbg !9094
  call void @llvm.dbg.declare(metadata i32* %codecpriv_size, metadata !9095, metadata !2445), !dbg !9096
  call void @llvm.dbg.declare(metadata i64* %curpos102, metadata !9097, metadata !2445), !dbg !9098
  %call103 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %dyn_cp), !dbg !9099
  store i32 %call103, i32* %ret, align 4, !dbg !9100
  %125 = load i32, i32* %ret, align 4, !dbg !9101
  %cmp104 = icmp slt i32 %125, 0, !dbg !9103
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !9104

if.then106:                                       ; preds = %if.then101
  %126 = load i32, i32* %ret, align 4, !dbg !9105
  store i32 %126, i32* %retval, align 4, !dbg !9106
  br label %return, !dbg !9106

if.end107:                                        ; preds = %if.then101
  %127 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !9107
  %128 = load i8*, i8** %side_data, align 8, !dbg !9108
  %129 = load i32, i32* %side_data_size, align 4, !dbg !9109
  %call108 = call i32 @ff_isom_write_av1c(%struct.AVIOContext* %127, i8* %128, i32 %129), !dbg !9110
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !9111
  %call109 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %130, i8** %codecpriv), !dbg !9112
  store i32 %call109, i32* %codecpriv_size, align 4, !dbg !9113
  %131 = load i32, i32* %codecpriv_size, align 4, !dbg !9114
  %tobool110 = icmp ne i32 %131, 0, !dbg !9114
  br i1 %tobool110, label %if.end112, label %if.then111, !dbg !9116

if.then111:                                       ; preds = %if.end107
  %132 = load i8*, i8** %codecpriv, align 8, !dbg !9117
  call void @av_free(i8* %132), !dbg !9119
  store i32 -1094995529, i32* %retval, align 4, !dbg !9120
  br label %return, !dbg !9120

if.end112:                                        ; preds = %if.end107
  %133 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9121
  %tracks_bc113 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %133, i32 0, i32 7, !dbg !9122
  %134 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc113, align 8, !dbg !9122
  store %struct.AVIOContext* %134, %struct.AVIOContext** %s.addr.i142, align 8, !dbg !9123
  %135 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i142, align 8, !dbg !9124
  %call.i143 = call i64 @avio_seek(%struct.AVIOContext* %135, i64 0, i32 1) #11, !dbg !9125
  store i64 %call.i143, i64* %curpos102, align 8, !dbg !9126
  %136 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9127
  %tracks_bc115 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %136, i32 0, i32 7, !dbg !9128
  %137 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc115, align 8, !dbg !9128
  %138 = load %struct.mkv_track*, %struct.mkv_track** %track, align 8, !dbg !9129
  %codecpriv_offset116 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %138, i32 0, i32 4, !dbg !9130
  %139 = load i64, i64* %codecpriv_offset116, align 8, !dbg !9130
  %call117 = call i64 @avio_seek(%struct.AVIOContext* %137, i64 %139, i32 0), !dbg !9131
  %140 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9132
  %tracks_bc118 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %140, i32 0, i32 7, !dbg !9133
  %141 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc118, align 8, !dbg !9133
  %142 = load i8*, i8** %codecpriv, align 8, !dbg !9134
  call void @put_ebml_binary(%struct.AVIOContext* %141, i32 25506, i8* %142, i32 4), !dbg !9135
  %143 = load i8*, i8** %codecpriv, align 8, !dbg !9136
  call void @av_free(i8* %143), !dbg !9137
  %144 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9138
  %tracks_bc119 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %144, i32 0, i32 7, !dbg !9139
  %145 = load %struct.AVIOContext*, %struct.AVIOContext** %tracks_bc119, align 8, !dbg !9139
  %146 = load i64, i64* %curpos102, align 8, !dbg !9140
  %call120 = call i64 @avio_seek(%struct.AVIOContext* %145, i64 %146, i32 0), !dbg !9141
  %147 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9142
  %148 = load i32, i32* %side_data_size, align 4, !dbg !9143
  %call121 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %147, i32 %148), !dbg !9144
  store i32 %call121, i32* %ret, align 4, !dbg !9145
  %149 = load i32, i32* %ret, align 4, !dbg !9146
  %cmp122 = icmp slt i32 %149, 0, !dbg !9148
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !9149

if.then124:                                       ; preds = %if.end112
  %150 = load i32, i32* %ret, align 4, !dbg !9150
  store i32 %150, i32* %retval, align 4, !dbg !9151
  br label %return, !dbg !9151

if.end125:                                        ; preds = %if.end112
  %151 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9152
  %extradata126 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %151, i32 0, i32 3, !dbg !9153
  %152 = load i8*, i8** %extradata126, align 8, !dbg !9153
  %153 = load i8*, i8** %side_data, align 8, !dbg !9154
  %154 = load i32, i32* %side_data_size, align 4, !dbg !9155
  %conv127 = sext i32 %154 to i64, !dbg !9155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %153, i64 %conv127, i32 1, i1 false), !dbg !9156
  br label %if.end133, !dbg !9157

if.else128:                                       ; preds = %land.lhs.true98, %land.lhs.true95, %land.lhs.true90, %sw.bb88
  %155 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9158
  %extradata_size129 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %155, i32 0, i32 4, !dbg !9161
  %156 = load i32, i32* %extradata_size129, align 8, !dbg !9161
  %tobool130 = icmp ne i32 %156, 0, !dbg !9158
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !9162

if.then131:                                       ; preds = %if.else128
  store i32 -1094995529, i32* %retval, align 4, !dbg !9163
  br label %return, !dbg !9163

if.end132:                                        ; preds = %if.else128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end125
  br label %sw.epilog, !dbg !9164

sw.default:                                       ; preds = %entry
  %157 = load i32, i32* %side_data_size, align 4, !dbg !9165
  %tobool134 = icmp ne i32 %157, 0, !dbg !9165
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !9167

if.then135:                                       ; preds = %sw.default
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9168
  %159 = bitcast %struct.AVFormatContext* %158 to i8*, !dbg !9168
  %160 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9169
  %stream_index136 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %160, i32 0, i32 5, !dbg !9170
  %161 = load i32, i32* %stream_index136, align 4, !dbg !9170
  call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 48, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.83, i32 0, i32 0), i32 %161), !dbg !9171
  br label %if.end137, !dbg !9171

if.end137:                                        ; preds = %if.then135, %sw.default
  br label %sw.epilog, !dbg !9172

sw.epilog:                                        ; preds = %if.end137, %if.end133, %if.end87, %if.end48
  store i32 0, i32* %retval, align 4, !dbg !9173
  br label %return, !dbg !9173

return:                                           ; preds = %sw.epilog, %if.then131, %if.then124, %if.then111, %if.then106, %if.then74, %if.then69, %if.then64, %if.then46, %if.then15, %if.then8
  %162 = load i32, i32* %retval, align 4, !dbg !9174
  ret i32 %162, !dbg !9174
}

; Function Attrs: nounwind uwtable
define internal void @mkv_start_new_cluster(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !9175 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !9178
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9181, metadata !2445), !dbg !9182
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9183, metadata !2445), !dbg !9184
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !9185, metadata !2445), !dbg !9186
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9187
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9188
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9188
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !9187
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9186
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9189
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9190
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9190
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9191
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 2, !dbg !9192
  %6 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9193
  %7 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9194
  %cluster = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %7, i32 0, i32 11, !dbg !9195
  %8 = bitcast %struct.ebml_master* %cluster to { i64, i32 }*, !dbg !9196
  %9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !9196
  %10 = load i64, i64* %9, align 8, !dbg !9196
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !9196
  %12 = load i32, i32* %11, align 8, !dbg !9196
  call void @end_ebml_master_crc32(%struct.AVIOContext* %4, %struct.AVIOContext** %dyn_bc, %struct.MatroskaMuxContext* %6, i64 %10, i32 %12), !dbg !9196
  %13 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9197
  %cluster_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %13, i32 0, i32 12, !dbg !9198
  store i64 -1, i64* %cluster_pos, align 8, !dbg !9199
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9200
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 4, !dbg !9201
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9201
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %15, i32 0, i32 19, !dbg !9202
  %16 = load i32, i32* %seekable, align 8, !dbg !9202
  %and = and i32 %16, 1, !dbg !9203
  %tobool = icmp ne i32 %and, 0, !dbg !9203
  br i1 %tobool, label %if.then, label %if.else, !dbg !9204

if.then:                                          ; preds = %entry
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9205
  %18 = bitcast %struct.AVFormatContext* %17 to i8*, !dbg !9205
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9206
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 4, !dbg !9207
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !9207
  store %struct.AVIOContext* %20, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9208
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9209
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %21, i64 0, i32 1) #11, !dbg !9210
  %22 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9211
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %22, i32 0, i32 1, !dbg !9212
  %23 = load i64, i64* %pts, align 8, !dbg !9212
  %24 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9213
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i32 0, i32 2, !dbg !9214
  %25 = load i64, i64* %dts, align 8, !dbg !9214
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 48, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.84, i32 0, i32 0), i64 %call.i, i64 %23, i64 %25), !dbg !9215
  br label %if.end, !dbg !9215

if.else:                                          ; preds = %entry
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9216
  %27 = bitcast %struct.AVFormatContext* %26 to i8*, !dbg !9216
  %28 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9217
  %pts3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %28, i32 0, i32 1, !dbg !9218
  %29 = load i64, i64* %pts3, align 8, !dbg !9218
  %30 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9219
  %dts4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %30, i32 0, i32 2, !dbg !9220
  %31 = load i64, i64* %dts4, align 8, !dbg !9220
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.85, i32 0, i32 0), i64 %29, i64 %31), !dbg !9221
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9222
  %pb5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 4, !dbg !9223
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb5, align 8, !dbg !9223
  call void @avio_flush(%struct.AVIOContext* %33), !dbg !9224
  ret void, !dbg !9225
}

declare void @avio_write_marker(%struct.AVIOContext*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_packet_internal(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt, i32 %add_cue) #0 !dbg !9226 {
entry:
  %s.addr.i156 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i156, metadata !2441, metadata !2445), !dbg !9229
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !9231
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %add_cue.addr = alloca i32, align 4
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %keyframe = alloca i32, align 4
  %duration = alloca i32, align 4
  %ret = alloca i32, align 4
  %ts = alloca i64, align 8
  %relative_packet_pos = alloca i64, align 8
  %dash_tracknum = alloca i32, align 4
  %cluster_time = alloca i64, align 8
  %blockgroup = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9235, metadata !2445), !dbg !9236
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9237, metadata !2445), !dbg !9238
  store i32 %add_cue, i32* %add_cue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add_cue.addr, metadata !9239, metadata !2445), !dbg !9240
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !9241, metadata !2445), !dbg !9242
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9243
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9244
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9244
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !9243
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9242
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9245, metadata !2445), !dbg !9246
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9247
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9248
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9248
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9246
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !9249, metadata !2445), !dbg !9250
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9251
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 5, !dbg !9252
  %6 = load i32, i32* %stream_index, align 4, !dbg !9252
  %idxprom = sext i32 %6 to i64, !dbg !9253
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9253
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 7, !dbg !9254
  %8 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9254
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %8, i64 %idxprom, !dbg !9253
  %9 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9253
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %9, i32 0, i32 19, !dbg !9255
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9255
  store %struct.AVCodecParameters* %10, %struct.AVCodecParameters** %par, align 8, !dbg !9250
  call void @llvm.dbg.declare(metadata i32* %keyframe, metadata !9256, metadata !2445), !dbg !9257
  %11 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9258
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 6, !dbg !9259
  %12 = load i32, i32* %flags, align 8, !dbg !9259
  %and = and i32 %12, 1, !dbg !9260
  %tobool = icmp ne i32 %and, 0, !dbg !9261
  %lnot = xor i1 %tobool, true, !dbg !9261
  %lnot2 = xor i1 %lnot, true, !dbg !9262
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9262
  store i32 %lnot.ext, i32* %keyframe, align 4, !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %duration, metadata !9263, metadata !2445), !dbg !9264
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9265
  %duration3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %13, i32 0, i32 9, !dbg !9266
  %14 = load i64, i64* %duration3, align 8, !dbg !9266
  %conv = trunc i64 %14 to i32, !dbg !9265
  store i32 %conv, i32* %duration, align 4, !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9267, metadata !2445), !dbg !9268
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !9269, metadata !2445), !dbg !9270
  %15 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9271
  %stream_index4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %15, i32 0, i32 5, !dbg !9272
  %16 = load i32, i32* %stream_index4, align 4, !dbg !9272
  %idxprom5 = sext i32 %16 to i64, !dbg !9273
  %17 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9273
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %17, i32 0, i32 18, !dbg !9274
  %18 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !9274
  %arrayidx6 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %18, i64 %idxprom5, !dbg !9273
  %write_dts = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx6, i32 0, i32 0, !dbg !9275
  %19 = load i32, i32* %write_dts, align 8, !dbg !9275
  %tobool7 = icmp ne i32 %19, 0, !dbg !9273
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !9273

cond.true:                                        ; preds = %entry
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9276
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 2, !dbg !9278
  %21 = load i64, i64* %dts, align 8, !dbg !9278
  br label %cond.end, !dbg !9279

cond.false:                                       ; preds = %entry
  %22 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9280
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %22, i32 0, i32 1, !dbg !9282
  %23 = load i64, i64* %pts, align 8, !dbg !9282
  br label %cond.end, !dbg !9283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %21, %cond.true ], [ %23, %cond.false ], !dbg !9284
  store i64 %cond, i64* %ts, align 8, !dbg !9286
  call void @llvm.dbg.declare(metadata i64* %relative_packet_pos, metadata !9287, metadata !2445), !dbg !9288
  call void @llvm.dbg.declare(metadata i32* %dash_tracknum, metadata !9289, metadata !2445), !dbg !9290
  %24 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9291
  %is_dash = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %24, i32 0, i32 27, !dbg !9292
  %25 = load i32, i32* %is_dash, align 8, !dbg !9292
  %tobool8 = icmp ne i32 %25, 0, !dbg !9291
  br i1 %tobool8, label %cond.true9, label %cond.false10, !dbg !9291

cond.true9:                                       ; preds = %cond.end
  %26 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9293
  %dash_track_number = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %26, i32 0, i32 28, !dbg !9294
  %27 = load i32, i32* %dash_track_number, align 4, !dbg !9294
  br label %cond.end12, !dbg !9295

cond.false10:                                     ; preds = %cond.end
  %28 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9296
  %stream_index11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %28, i32 0, i32 5, !dbg !9297
  %29 = load i32, i32* %stream_index11, align 4, !dbg !9297
  %add = add nsw i32 %29, 1, !dbg !9298
  br label %cond.end12, !dbg !9299

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %27, %cond.true9 ], [ %add, %cond.false10 ], !dbg !9300
  store i32 %cond13, i32* %dash_tracknum, align 4, !dbg !9301
  %30 = load i64, i64* %ts, align 8, !dbg !9302
  %cmp = icmp eq i64 %30, -9223372036854775808, !dbg !9304
  br i1 %cmp, label %if.then, label %if.end, !dbg !9305

if.then:                                          ; preds = %cond.end12
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9306
  %32 = bitcast %struct.AVFormatContext* %31 to i8*, !dbg !9306
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.86, i32 0, i32 0)), !dbg !9308
  store i32 -22, i32* %retval, align 4, !dbg !9309
  br label %return, !dbg !9309

if.end:                                           ; preds = %cond.end12
  %33 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9310
  %stream_index15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %33, i32 0, i32 5, !dbg !9311
  %34 = load i32, i32* %stream_index15, align 4, !dbg !9311
  %idxprom16 = sext i32 %34 to i64, !dbg !9312
  %35 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9312
  %tracks17 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %35, i32 0, i32 18, !dbg !9313
  %36 = load %struct.mkv_track*, %struct.mkv_track** %tracks17, align 8, !dbg !9313
  %arrayidx18 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %36, i64 %idxprom16, !dbg !9312
  %ts_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx18, i32 0, i32 5, !dbg !9314
  %37 = load i64, i64* %ts_offset, align 8, !dbg !9314
  %38 = load i64, i64* %ts, align 8, !dbg !9315
  %add19 = add nsw i64 %38, %37, !dbg !9315
  store i64 %add19, i64* %ts, align 8, !dbg !9315
  %39 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9316
  %cluster_pos = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %39, i32 0, i32 12, !dbg !9318
  %40 = load i64, i64* %cluster_pos, align 8, !dbg !9318
  %cmp20 = icmp ne i64 %40, -1, !dbg !9319
  br i1 %cmp20, label %if.then22, label %if.end35, !dbg !9320

if.then22:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %cluster_time, metadata !9321, metadata !2445), !dbg !9323
  %41 = load i64, i64* %ts, align 8, !dbg !9324
  %42 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9325
  %cluster_pts = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %42, i32 0, i32 13, !dbg !9326
  %43 = load i64, i64* %cluster_pts, align 8, !dbg !9326
  %sub = sub nsw i64 %41, %43, !dbg !9327
  %44 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9328
  %stream_index23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i32 0, i32 5, !dbg !9329
  %45 = load i32, i32* %stream_index23, align 4, !dbg !9329
  %idxprom24 = sext i32 %45 to i64, !dbg !9330
  %46 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9330
  %tracks25 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %46, i32 0, i32 18, !dbg !9331
  %47 = load %struct.mkv_track*, %struct.mkv_track** %tracks25, align 8, !dbg !9331
  %arrayidx26 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %47, i64 %idxprom24, !dbg !9330
  %ts_offset27 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx26, i32 0, i32 5, !dbg !9332
  %48 = load i64, i64* %ts_offset27, align 8, !dbg !9332
  %add28 = add nsw i64 %sub, %48, !dbg !9333
  store i64 %add28, i64* %cluster_time, align 8, !dbg !9323
  %49 = load i64, i64* %cluster_time, align 8, !dbg !9334
  %conv29 = trunc i64 %49 to i16, !dbg !9336
  %conv30 = sext i16 %conv29 to i64, !dbg !9336
  %50 = load i64, i64* %cluster_time, align 8, !dbg !9337
  %cmp31 = icmp ne i64 %conv30, %50, !dbg !9338
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !9339

if.then33:                                        ; preds = %if.then22
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9340
  %52 = bitcast %struct.AVFormatContext* %51 to i8*, !dbg !9340
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.87, i32 0, i32 0)), !dbg !9342
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9343
  %54 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9344
  call void @mkv_start_new_cluster(%struct.AVFormatContext* %53, %struct.AVPacket* %54), !dbg !9345
  br label %if.end34, !dbg !9346

if.end34:                                         ; preds = %if.then33, %if.then22
  br label %if.end35, !dbg !9347

if.end35:                                         ; preds = %if.end34, %if.end
  %55 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9348
  %cluster_pos36 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %55, i32 0, i32 12, !dbg !9349
  %56 = load i64, i64* %cluster_pos36, align 8, !dbg !9349
  %cmp37 = icmp eq i64 %56, -1, !dbg !9350
  br i1 %cmp37, label %if.then39, label %if.end62, !dbg !9351

if.then39:                                        ; preds = %if.end35
  %57 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9352
  %pb40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %57, i32 0, i32 4, !dbg !9353
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %pb40, align 8, !dbg !9353
  store %struct.AVIOContext* %58, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9354
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9355
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %59, i64 0, i32 1) #11, !dbg !9356
  %60 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9357
  %cluster_pos41 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %60, i32 0, i32 12, !dbg !9358
  store i64 %call.i, i64* %cluster_pos41, align 8, !dbg !9359
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9360
  %pb42 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i32 0, i32 4, !dbg !9361
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %pb42, align 8, !dbg !9361
  %63 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9362
  %dyn_bc = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %63, i32 0, i32 2, !dbg !9363
  %64 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9364
  %65 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9365
  %cluster = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %65, i32 0, i32 11, !dbg !9366
  %call43 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %62, %struct.AVIOContext** %dyn_bc, %struct.MatroskaMuxContext* %64, %struct.ebml_master* %cluster, i32 524531317, i64 0), !dbg !9367
  store i32 %call43, i32* %ret, align 4, !dbg !9368
  %66 = load i32, i32* %ret, align 4, !dbg !9369
  %cmp44 = icmp slt i32 %66, 0, !dbg !9371
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !9372

if.then46:                                        ; preds = %if.then39
  %67 = load i32, i32* %ret, align 4, !dbg !9373
  store i32 %67, i32* %retval, align 4, !dbg !9374
  br label %return, !dbg !9374

if.end47:                                         ; preds = %if.then39
  %68 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9375
  %dyn_bc48 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %68, i32 0, i32 2, !dbg !9376
  %69 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc48, align 8, !dbg !9376
  %70 = load i64, i64* %ts, align 8, !dbg !9377
  %cmp49 = icmp sgt i64 0, %70, !dbg !9378
  br i1 %cmp49, label %cond.true51, label %cond.false52, !dbg !9379

cond.true51:                                      ; preds = %if.end47
  br label %cond.end53, !dbg !9380

cond.false52:                                     ; preds = %if.end47
  %71 = load i64, i64* %ts, align 8, !dbg !9382
  br label %cond.end53, !dbg !9384

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i64 [ 0, %cond.true51 ], [ %71, %cond.false52 ], !dbg !9385
  call void @put_ebml_uint(%struct.AVIOContext* %69, i32 231, i64 %cond54), !dbg !9387
  %72 = load i64, i64* %ts, align 8, !dbg !9388
  %cmp55 = icmp sgt i64 0, %72, !dbg !9389
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !9390

cond.true57:                                      ; preds = %cond.end53
  br label %cond.end59, !dbg !9391

cond.false58:                                     ; preds = %cond.end53
  %73 = load i64, i64* %ts, align 8, !dbg !9392
  br label %cond.end59, !dbg !9393

cond.end59:                                       ; preds = %cond.false58, %cond.true57
  %cond60 = phi i64 [ 0, %cond.true57 ], [ %73, %cond.false58 ], !dbg !9394
  %74 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9395
  %cluster_pts61 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %74, i32 0, i32 13, !dbg !9396
  store i64 %cond60, i64* %cluster_pts61, align 8, !dbg !9397
  br label %if.end62, !dbg !9398

if.end62:                                         ; preds = %cond.end59, %if.end35
  %75 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9399
  %dyn_bc63 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %75, i32 0, i32 2, !dbg !9400
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_bc63, align 8, !dbg !9400
  store %struct.AVIOContext* %76, %struct.AVIOContext** %pb, align 8, !dbg !9401
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9402
  store %struct.AVIOContext* %77, %struct.AVIOContext** %s.addr.i156, align 8, !dbg !9403
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i156, align 8, !dbg !9404
  %call.i157 = call i64 @avio_seek(%struct.AVIOContext* %78, i64 0, i32 1) #11, !dbg !9405
  store i64 %call.i157, i64* %relative_packet_pos, align 8, !dbg !9406
  %79 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9407
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %79, i32 0, i32 0, !dbg !9409
  %80 = load i32, i32* %codec_type, align 8, !dbg !9409
  %cmp65 = icmp ne i32 %80, 3, !dbg !9410
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !9411

if.then67:                                        ; preds = %if.end62
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9412
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9414
  %83 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9415
  %84 = load i32, i32* %keyframe, align 4, !dbg !9416
  call void @mkv_write_block(%struct.AVFormatContext* %81, %struct.AVIOContext* %82, i32 163, %struct.AVPacket* %83, i32 %84), !dbg !9417
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9418
  %pb68 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %85, i32 0, i32 4, !dbg !9420
  %86 = load %struct.AVIOContext*, %struct.AVIOContext** %pb68, align 8, !dbg !9420
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %86, i32 0, i32 19, !dbg !9421
  %87 = load i32, i32* %seekable, align 8, !dbg !9421
  %and69 = and i32 %87, 1, !dbg !9422
  %tobool70 = icmp ne i32 %and69, 0, !dbg !9422
  br i1 %tobool70, label %land.lhs.true, label %if.end85, !dbg !9423

land.lhs.true:                                    ; preds = %if.then67
  %88 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9424
  %codec_type71 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %88, i32 0, i32 0, !dbg !9426
  %89 = load i32, i32* %codec_type71, align 8, !dbg !9426
  %cmp72 = icmp eq i32 %89, 0, !dbg !9427
  br i1 %cmp72, label %land.lhs.true74, label %lor.lhs.false, !dbg !9428

land.lhs.true74:                                  ; preds = %land.lhs.true
  %90 = load i32, i32* %keyframe, align 4, !dbg !9429
  %tobool75 = icmp ne i32 %90, 0, !dbg !9429
  br i1 %tobool75, label %if.then77, label %lor.lhs.false, !dbg !9431

lor.lhs.false:                                    ; preds = %land.lhs.true74, %land.lhs.true
  %91 = load i32, i32* %add_cue.addr, align 4, !dbg !9432
  %tobool76 = icmp ne i32 %91, 0, !dbg !9432
  br i1 %tobool76, label %if.then77, label %if.end85, !dbg !9434

if.then77:                                        ; preds = %lor.lhs.false, %land.lhs.true74
  %92 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9435
  %cues = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %92, i32 0, i32 17, !dbg !9437
  %93 = load %struct.mkv_cues*, %struct.mkv_cues** %cues, align 8, !dbg !9437
  %94 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9438
  %stream_index78 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %94, i32 0, i32 5, !dbg !9439
  %95 = load i32, i32* %stream_index78, align 4, !dbg !9439
  %96 = load i32, i32* %dash_tracknum, align 4, !dbg !9440
  %97 = load i64, i64* %ts, align 8, !dbg !9441
  %98 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9442
  %cluster_pos79 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %98, i32 0, i32 12, !dbg !9443
  %99 = load i64, i64* %cluster_pos79, align 8, !dbg !9443
  %100 = load i64, i64* %relative_packet_pos, align 8, !dbg !9444
  %call80 = call i32 @mkv_add_cuepoint(%struct.mkv_cues* %93, i32 %95, i32 %96, i64 %97, i64 %99, i64 %100, i64 -1), !dbg !9445
  store i32 %call80, i32* %ret, align 4, !dbg !9446
  %101 = load i32, i32* %ret, align 4, !dbg !9447
  %cmp81 = icmp slt i32 %101, 0, !dbg !9449
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !9450

if.then83:                                        ; preds = %if.then77
  %102 = load i32, i32* %ret, align 4, !dbg !9451
  store i32 %102, i32* %retval, align 4, !dbg !9453
  br label %return, !dbg !9453

if.end84:                                         ; preds = %if.then77
  br label %if.end85, !dbg !9454

if.end85:                                         ; preds = %if.end84, %lor.lhs.false, %if.then67
  br label %if.end117, !dbg !9455

if.else:                                          ; preds = %if.end62
  %103 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9456
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %103, i32 0, i32 1, !dbg !9459
  %104 = load i32, i32* %codec_id, align 4, !dbg !9459
  %cmp86 = icmp eq i32 %104, 96265, !dbg !9460
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !9461

if.then88:                                        ; preds = %if.else
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9462
  %106 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9464
  %107 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9465
  %call89 = call i32 @mkv_write_vtt_blocks(%struct.AVFormatContext* %105, %struct.AVIOContext* %106, %struct.AVPacket* %107), !dbg !9466
  store i32 %call89, i32* %duration, align 4, !dbg !9467
  br label %if.end101, !dbg !9468

if.else90:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %blockgroup, metadata !9469, metadata !2445), !dbg !9471
  %108 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9472
  %109 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9473
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %109, i32 0, i32 4, !dbg !9474
  %110 = load i32, i32* %size, align 8, !dbg !9474
  %call91 = call i32 @mkv_blockgroup_size(i32 %110), !dbg !9475
  %conv92 = sext i32 %call91 to i64, !dbg !9475
  %call93 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %108, i32 160, i64 %conv92), !dbg !9476
  %111 = bitcast %struct.ebml_master* %blockgroup to { i64, i32 }*, !dbg !9476
  %112 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %111, i32 0, i32 0, !dbg !9476
  %113 = extractvalue { i64, i32 } %call93, 0, !dbg !9476
  store i64 %113, i64* %112, align 8, !dbg !9476
  %114 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %111, i32 0, i32 1, !dbg !9476
  %115 = extractvalue { i64, i32 } %call93, 1, !dbg !9476
  store i32 %115, i32* %114, align 8, !dbg !9476
  %116 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9477
  %convergence_duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %116, i32 0, i32 11, !dbg !9479
  %117 = load i64, i64* %convergence_duration, align 8, !dbg !9479
  %cmp94 = icmp sgt i64 %117, 0, !dbg !9480
  br i1 %cmp94, label %if.then96, label %if.end99, !dbg !9481

if.then96:                                        ; preds = %if.else90
  %118 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9482
  %convergence_duration97 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %118, i32 0, i32 11, !dbg !9484
  %119 = load i64, i64* %convergence_duration97, align 8, !dbg !9484
  %conv98 = trunc i64 %119 to i32, !dbg !9482
  store i32 %conv98, i32* %duration, align 4, !dbg !9485
  br label %if.end99, !dbg !9486

if.end99:                                         ; preds = %if.then96, %if.else90
  %120 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9487
  %121 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9488
  %122 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9489
  call void @mkv_write_block(%struct.AVFormatContext* %120, %struct.AVIOContext* %121, i32 161, %struct.AVPacket* %122, i32 1), !dbg !9490
  %123 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9491
  %124 = load i32, i32* %duration, align 4, !dbg !9492
  %conv100 = sext i32 %124 to i64, !dbg !9492
  call void @put_ebml_uint(%struct.AVIOContext* %123, i32 155, i64 %conv100), !dbg !9493
  %125 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9494
  %126 = bitcast %struct.ebml_master* %blockgroup to { i64, i32 }*, !dbg !9495
  %127 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %126, i32 0, i32 0, !dbg !9495
  %128 = load i64, i64* %127, align 8, !dbg !9495
  %129 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %126, i32 0, i32 1, !dbg !9495
  %130 = load i32, i32* %129, align 8, !dbg !9495
  call void @end_ebml_master(%struct.AVIOContext* %125, i64 %128, i32 %130), !dbg !9495
  br label %if.end101

if.end101:                                        ; preds = %if.end99, %if.then88
  %131 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9496
  %pb102 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %131, i32 0, i32 4, !dbg !9498
  %132 = load %struct.AVIOContext*, %struct.AVIOContext** %pb102, align 8, !dbg !9498
  %seekable103 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %132, i32 0, i32 19, !dbg !9499
  %133 = load i32, i32* %seekable103, align 8, !dbg !9499
  %and104 = and i32 %133, 1, !dbg !9500
  %tobool105 = icmp ne i32 %and104, 0, !dbg !9500
  br i1 %tobool105, label %if.then106, label %if.end116, !dbg !9501

if.then106:                                       ; preds = %if.end101
  %134 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9502
  %cues107 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %134, i32 0, i32 17, !dbg !9504
  %135 = load %struct.mkv_cues*, %struct.mkv_cues** %cues107, align 8, !dbg !9504
  %136 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9505
  %stream_index108 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %136, i32 0, i32 5, !dbg !9506
  %137 = load i32, i32* %stream_index108, align 4, !dbg !9506
  %138 = load i32, i32* %dash_tracknum, align 4, !dbg !9507
  %139 = load i64, i64* %ts, align 8, !dbg !9508
  %140 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9509
  %cluster_pos109 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %140, i32 0, i32 12, !dbg !9510
  %141 = load i64, i64* %cluster_pos109, align 8, !dbg !9510
  %142 = load i64, i64* %relative_packet_pos, align 8, !dbg !9511
  %143 = load i32, i32* %duration, align 4, !dbg !9512
  %conv110 = sext i32 %143 to i64, !dbg !9512
  %call111 = call i32 @mkv_add_cuepoint(%struct.mkv_cues* %135, i32 %137, i32 %138, i64 %139, i64 %141, i64 %142, i64 %conv110), !dbg !9513
  store i32 %call111, i32* %ret, align 4, !dbg !9514
  %144 = load i32, i32* %ret, align 4, !dbg !9515
  %cmp112 = icmp slt i32 %144, 0, !dbg !9517
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !9518

if.then114:                                       ; preds = %if.then106
  %145 = load i32, i32* %ret, align 4, !dbg !9519
  store i32 %145, i32* %retval, align 4, !dbg !9520
  br label %return, !dbg !9520

if.end115:                                        ; preds = %if.then106
  br label %if.end116, !dbg !9521

if.end116:                                        ; preds = %if.end115, %if.end101
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end85
  %146 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9522
  %duration118 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %146, i32 0, i32 15, !dbg !9523
  %147 = load i64, i64* %duration118, align 8, !dbg !9523
  %148 = load i64, i64* %ts, align 8, !dbg !9524
  %149 = load i32, i32* %duration, align 4, !dbg !9525
  %conv119 = sext i32 %149 to i64, !dbg !9525
  %add120 = add nsw i64 %148, %conv119, !dbg !9526
  %cmp121 = icmp sgt i64 %147, %add120, !dbg !9527
  br i1 %cmp121, label %cond.true123, label %cond.false125, !dbg !9528

cond.true123:                                     ; preds = %if.end117
  %150 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9529
  %duration124 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %150, i32 0, i32 15, !dbg !9530
  %151 = load i64, i64* %duration124, align 8, !dbg !9530
  br label %cond.end128, !dbg !9531

cond.false125:                                    ; preds = %if.end117
  %152 = load i64, i64* %ts, align 8, !dbg !9532
  %153 = load i32, i32* %duration, align 4, !dbg !9533
  %conv126 = sext i32 %153 to i64, !dbg !9533
  %add127 = add nsw i64 %152, %conv126, !dbg !9534
  br label %cond.end128, !dbg !9535

cond.end128:                                      ; preds = %cond.false125, %cond.true123
  %cond129 = phi i64 [ %151, %cond.true123 ], [ %add127, %cond.false125 ], !dbg !9536
  %154 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9537
  %duration130 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %154, i32 0, i32 15, !dbg !9538
  store i64 %cond129, i64* %duration130, align 8, !dbg !9539
  %155 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9540
  %stream_durations = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %155, i32 0, i32 34, !dbg !9542
  %156 = load i64*, i64** %stream_durations, align 8, !dbg !9542
  %tobool131 = icmp ne i64* %156, null, !dbg !9540
  br i1 %tobool131, label %if.then132, label %if.end155, !dbg !9543

if.then132:                                       ; preds = %cond.end128
  %157 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9544
  %stream_index133 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %157, i32 0, i32 5, !dbg !9545
  %158 = load i32, i32* %stream_index133, align 4, !dbg !9545
  %idxprom134 = sext i32 %158 to i64, !dbg !9546
  %159 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9546
  %stream_durations135 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %159, i32 0, i32 34, !dbg !9547
  %160 = load i64*, i64** %stream_durations135, align 8, !dbg !9547
  %arrayidx136 = getelementptr inbounds i64, i64* %160, i64 %idxprom134, !dbg !9546
  %161 = load i64, i64* %arrayidx136, align 8, !dbg !9546
  %162 = load i64, i64* %ts, align 8, !dbg !9548
  %163 = load i32, i32* %duration, align 4, !dbg !9549
  %conv137 = sext i32 %163 to i64, !dbg !9549
  %add138 = add nsw i64 %162, %conv137, !dbg !9550
  %cmp139 = icmp sgt i64 %161, %add138, !dbg !9551
  br i1 %cmp139, label %cond.true141, label %cond.false146, !dbg !9552

cond.true141:                                     ; preds = %if.then132
  %164 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9553
  %stream_index142 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %164, i32 0, i32 5, !dbg !9555
  %165 = load i32, i32* %stream_index142, align 4, !dbg !9555
  %idxprom143 = sext i32 %165 to i64, !dbg !9556
  %166 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9556
  %stream_durations144 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %166, i32 0, i32 34, !dbg !9557
  %167 = load i64*, i64** %stream_durations144, align 8, !dbg !9557
  %arrayidx145 = getelementptr inbounds i64, i64* %167, i64 %idxprom143, !dbg !9556
  %168 = load i64, i64* %arrayidx145, align 8, !dbg !9556
  br label %cond.end149, !dbg !9558

cond.false146:                                    ; preds = %if.then132
  %169 = load i64, i64* %ts, align 8, !dbg !9559
  %170 = load i32, i32* %duration, align 4, !dbg !9561
  %conv147 = sext i32 %170 to i64, !dbg !9561
  %add148 = add nsw i64 %169, %conv147, !dbg !9562
  br label %cond.end149, !dbg !9563

cond.end149:                                      ; preds = %cond.false146, %cond.true141
  %cond150 = phi i64 [ %168, %cond.true141 ], [ %add148, %cond.false146 ], !dbg !9564
  %171 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9566
  %stream_index151 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %171, i32 0, i32 5, !dbg !9567
  %172 = load i32, i32* %stream_index151, align 4, !dbg !9567
  %idxprom152 = sext i32 %172 to i64, !dbg !9568
  %173 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9568
  %stream_durations153 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %173, i32 0, i32 34, !dbg !9569
  %174 = load i64*, i64** %stream_durations153, align 8, !dbg !9569
  %arrayidx154 = getelementptr inbounds i64, i64* %174, i64 %idxprom152, !dbg !9568
  store i64 %cond150, i64* %arrayidx154, align 8, !dbg !9570
  br label %if.end155, !dbg !9568

if.end155:                                        ; preds = %cond.end149, %cond.end128
  store i32 0, i32* %retval, align 4, !dbg !9571
  br label %return, !dbg !9571

return:                                           ; preds = %if.end155, %if.then114, %if.then83, %if.then46, %if.then
  %175 = load i32, i32* %retval, align 4, !dbg !9572
  ret i32 %175, !dbg !9572
}

declare void @av_packet_unref(%struct.AVPacket*) #1

declare i32 @av_packet_ref(%struct.AVPacket*, %struct.AVPacket*) #1

declare i8* @av_packet_get_side_data(%struct.AVPacket*, i32, i32*) #1

declare i32 @ff_alloc_extradata(%struct.AVCodecParameters*, i32) #1

declare %struct.AVCodecParameters* @avcodec_parameters_alloc() #1

declare i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters*) #1

declare void @avcodec_parameters_free(%struct.AVCodecParameters**) #1

; Function Attrs: nounwind uwtable
define internal void @mkv_write_block(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, i32 %blockid, %struct.AVPacket* %pkt, i32 %keyframe) #0 !dbg !9573 {
entry:
  %x.addr.i191 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i191, metadata !4247, metadata !2445), !dbg !9576
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4247, metadata !2445), !dbg !9581
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !9584
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %blockid.addr = alloca i32, align 4
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %keyframe.addr = alloca i32, align 4
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %data = alloca i8*, align 8
  %side_data = alloca i8*, align 8
  %offset = alloca i32, align 4
  %size = alloca i32, align 4
  %side_data_size = alloca i32, align 4
  %ts = alloca i64, align 8
  %additional_id = alloca i64, align 8
  %discard_padding = alloca i64, align 8
  %track_number = alloca i8, align 1
  %block_group = alloca %struct.ebml_master, align 8
  %block_additions = alloca %struct.ebml_master, align 8
  %block_more = alloca %struct.ebml_master, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral114 = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %coerce178 = alloca %struct.ebml_master, align 8
  %coerce180 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9586, metadata !2445), !dbg !9587
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !9588, metadata !2445), !dbg !9589
  store i32 %blockid, i32* %blockid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockid.addr, metadata !9590, metadata !2445), !dbg !9591
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9592, metadata !2445), !dbg !9593
  store i32 %keyframe, i32* %keyframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keyframe.addr, metadata !9594, metadata !2445), !dbg !9595
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !9596, metadata !2445), !dbg !9597
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9598
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9599
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9599
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !9598
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9597
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !9600, metadata !2445), !dbg !9601
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9602
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 5, !dbg !9603
  %4 = load i32, i32* %stream_index, align 4, !dbg !9603
  %idxprom = sext i32 %4 to i64, !dbg !9604
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9604
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !9605
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9605
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 %idxprom, !dbg !9604
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9604
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !9606
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9606
  store %struct.AVCodecParameters* %8, %struct.AVCodecParameters** %par, align 8, !dbg !9601
  call void @llvm.dbg.declare(metadata i8** %data, metadata !9607, metadata !2445), !dbg !9608
  store i8* null, i8** %data, align 8, !dbg !9608
  call void @llvm.dbg.declare(metadata i8** %side_data, metadata !9609, metadata !2445), !dbg !9610
  store i8* null, i8** %side_data, align 8, !dbg !9610
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9611, metadata !2445), !dbg !9612
  store i32 0, i32* %offset, align 4, !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9613, metadata !2445), !dbg !9614
  %9 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9615
  %size1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %9, i32 0, i32 4, !dbg !9616
  %10 = load i32, i32* %size1, align 8, !dbg !9616
  store i32 %10, i32* %size, align 4, !dbg !9614
  call void @llvm.dbg.declare(metadata i32* %side_data_size, metadata !9617, metadata !2445), !dbg !9618
  store i32 0, i32* %side_data_size, align 4, !dbg !9618
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !9619, metadata !2445), !dbg !9620
  %11 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9621
  %stream_index2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 5, !dbg !9622
  %12 = load i32, i32* %stream_index2, align 4, !dbg !9622
  %idxprom3 = sext i32 %12 to i64, !dbg !9623
  %13 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9623
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %13, i32 0, i32 18, !dbg !9624
  %14 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !9624
  %arrayidx4 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %14, i64 %idxprom3, !dbg !9623
  %write_dts = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx4, i32 0, i32 0, !dbg !9625
  %15 = load i32, i32* %write_dts, align 8, !dbg !9625
  %tobool = icmp ne i32 %15, 0, !dbg !9623
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9623

cond.true:                                        ; preds = %entry
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9626
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 2, !dbg !9628
  %17 = load i64, i64* %dts, align 8, !dbg !9628
  br label %cond.end, !dbg !9629

cond.false:                                       ; preds = %entry
  %18 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9630
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 1, !dbg !9632
  %19 = load i64, i64* %pts, align 8, !dbg !9632
  br label %cond.end, !dbg !9633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %17, %cond.true ], [ %19, %cond.false ], !dbg !9634
  store i64 %cond, i64* %ts, align 8, !dbg !9636
  call void @llvm.dbg.declare(metadata i64* %additional_id, metadata !9637, metadata !2445), !dbg !9638
  store i64 0, i64* %additional_id, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %discard_padding, metadata !9639, metadata !2445), !dbg !9640
  store i64 0, i64* %discard_padding, align 8, !dbg !9640
  call void @llvm.dbg.declare(metadata i8* %track_number, metadata !9641, metadata !2445), !dbg !9642
  %20 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9643
  %is_dash = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %20, i32 0, i32 27, !dbg !9644
  %21 = load i32, i32* %is_dash, align 8, !dbg !9644
  %tobool5 = icmp ne i32 %21, 0, !dbg !9643
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !9643

cond.true6:                                       ; preds = %cond.end
  %22 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9645
  %dash_track_number = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %22, i32 0, i32 28, !dbg !9646
  %23 = load i32, i32* %dash_track_number, align 4, !dbg !9646
  br label %cond.end9, !dbg !9647

cond.false7:                                      ; preds = %cond.end
  %24 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9648
  %stream_index8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i32 0, i32 5, !dbg !9649
  %25 = load i32, i32* %stream_index8, align 4, !dbg !9649
  %add = add nsw i32 %25, 1, !dbg !9650
  br label %cond.end9, !dbg !9651

cond.end9:                                        ; preds = %cond.false7, %cond.true6
  %cond10 = phi i32 [ %23, %cond.true6 ], [ %add, %cond.false7 ], !dbg !9652
  %conv = trunc i32 %cond10 to i8, !dbg !9653
  store i8 %conv, i8* %track_number, align 1, !dbg !9654
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %block_group, metadata !9655, metadata !2445), !dbg !9656
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %block_additions, metadata !9657, metadata !2445), !dbg !9658
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %block_more, metadata !9659, metadata !2445), !dbg !9660
  %26 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9661
  %stream_index11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %26, i32 0, i32 5, !dbg !9662
  %27 = load i32, i32* %stream_index11, align 4, !dbg !9662
  %idxprom12 = sext i32 %27 to i64, !dbg !9663
  %28 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9663
  %tracks13 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %28, i32 0, i32 18, !dbg !9664
  %29 = load %struct.mkv_track*, %struct.mkv_track** %tracks13, align 8, !dbg !9664
  %arrayidx14 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %29, i64 %idxprom12, !dbg !9663
  %ts_offset = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx14, i32 0, i32 5, !dbg !9665
  %30 = load i64, i64* %ts_offset, align 8, !dbg !9665
  %31 = load i64, i64* %ts, align 8, !dbg !9666
  %add15 = add nsw i64 %31, %30, !dbg !9666
  store i64 %add15, i64* %ts, align 8, !dbg !9666
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9667
  %33 = bitcast %struct.AVFormatContext* %32 to i8*, !dbg !9667
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9668
  store %struct.AVIOContext* %34, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9669
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9670
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %35, i64 0, i32 1) #11, !dbg !9671
  %36 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9672
  %size16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %36, i32 0, i32 4, !dbg !9673
  %37 = load i32, i32* %size16, align 8, !dbg !9673
  %38 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9674
  %pts17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %38, i32 0, i32 1, !dbg !9675
  %39 = load i64, i64* %pts17, align 8, !dbg !9675
  %40 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9676
  %dts18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %40, i32 0, i32 2, !dbg !9677
  %41 = load i64, i64* %dts18, align 8, !dbg !9677
  %42 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9678
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %42, i32 0, i32 9, !dbg !9679
  %43 = load i64, i64* %duration, align 8, !dbg !9679
  %44 = load i32, i32* %keyframe.addr, align 4, !dbg !9680
  %cmp = icmp ne i32 %44, 0, !dbg !9681
  %conv19 = zext i1 %cmp to i32, !dbg !9681
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 48, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.88, i32 0, i32 0), i64 %call.i, i32 %37, i64 %39, i64 %41, i64 %43, i32 %conv19), !dbg !9682
  %45 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9683
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %45, i32 0, i32 1, !dbg !9684
  %46 = load i32, i32* %codec_id, align 4, !dbg !9684
  %cmp20 = icmp eq i32 %46, 27, !dbg !9685
  br i1 %cmp20, label %land.lhs.true, label %if.else, !dbg !9686

land.lhs.true:                                    ; preds = %cond.end9
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9687
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i32 0, i32 4, !dbg !9688
  %48 = load i32, i32* %extradata_size, align 8, !dbg !9688
  %cmp22 = icmp sgt i32 %48, 0, !dbg !9689
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !9690

land.lhs.true24:                                  ; preds = %land.lhs.true
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9691
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i32 0, i32 3, !dbg !9692
  %50 = load i8*, i8** %extradata, align 8, !dbg !9692
  %arrayidx25 = getelementptr inbounds i8, i8* %50, i64 0, !dbg !9693
  %51 = load i8, i8* %arrayidx25, align 1, !dbg !9693
  %conv26 = zext i8 %51 to i32, !dbg !9693
  %shl = shl i32 %conv26, 16, !dbg !9694
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9695
  %extradata27 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 3, !dbg !9696
  %53 = load i8*, i8** %extradata27, align 8, !dbg !9696
  %arrayidx28 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !9697
  %54 = load i8, i8* %arrayidx28, align 1, !dbg !9697
  %conv29 = zext i8 %54 to i32, !dbg !9697
  %shl30 = shl i32 %conv29, 8, !dbg !9698
  %or = or i32 %shl, %shl30, !dbg !9699
  %55 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9700
  %extradata31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %55, i32 0, i32 3, !dbg !9701
  %56 = load i8*, i8** %extradata31, align 8, !dbg !9701
  %arrayidx32 = getelementptr inbounds i8, i8* %56, i64 2, !dbg !9702
  %57 = load i8, i8* %arrayidx32, align 1, !dbg !9702
  %conv33 = zext i8 %57 to i32, !dbg !9702
  %or34 = or i32 %or, %conv33, !dbg !9703
  %cmp35 = icmp eq i32 %or34, 1, !dbg !9704
  br i1 %cmp35, label %if.then, label %lor.lhs.false, !dbg !9705

lor.lhs.false:                                    ; preds = %land.lhs.true24
  %58 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9706
  %extradata37 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %58, i32 0, i32 3, !dbg !9707
  %59 = load i8*, i8** %extradata37, align 8, !dbg !9707
  %60 = bitcast i8* %59 to %union.unaligned_32*, !dbg !9708
  %l = bitcast %union.unaligned_32* %60 to i32*, !dbg !9708
  %61 = load i32, i32* %l, align 1, !dbg !9708
  store i32 %61, i32* %x.addr.i, align 4, !dbg !9709
  %62 = load i32, i32* %x.addr.i, align 4, !dbg !9710
  %shl.i = shl i32 %62, 8, !dbg !9711
  %and.i = and i32 %shl.i, 65280, !dbg !9712
  %63 = load i32, i32* %x.addr.i, align 4, !dbg !9713
  %shr.i = lshr i32 %63, 8, !dbg !9714
  %and1.i = and i32 %shr.i, 255, !dbg !9715
  %or.i = or i32 %and.i, %and1.i, !dbg !9716
  %shl2.i = shl i32 %or.i, 16, !dbg !9717
  %64 = load i32, i32* %x.addr.i, align 4, !dbg !9718
  %shr3.i = lshr i32 %64, 16, !dbg !9719
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9720
  %and5.i = and i32 %shl4.i, 65280, !dbg !9721
  %65 = load i32, i32* %x.addr.i, align 4, !dbg !9722
  %shr6.i = lshr i32 %65, 16, !dbg !9723
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9724
  %and8.i = and i32 %shr7.i, 255, !dbg !9725
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9726
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9727
  %cmp39 = icmp eq i32 %or10.i, 1, !dbg !9728
  br i1 %cmp39, label %if.then, label %if.else, !dbg !9729

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true24
  %66 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9730
  %data41 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %66, i32 0, i32 3, !dbg !9731
  %67 = load i8*, i8** %data41, align 8, !dbg !9731
  %call42 = call i32 @ff_avc_parse_nal_units_buf(i8* %67, i8** %data, i32* %size), !dbg !9732
  br label %if.end97, !dbg !9732

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true, %cond.end9
  %68 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9733
  %codec_id43 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %68, i32 0, i32 1, !dbg !9734
  %69 = load i32, i32* %codec_id43, align 4, !dbg !9734
  %cmp44 = icmp eq i32 %69, 173, !dbg !9735
  br i1 %cmp44, label %land.lhs.true46, label %if.else75, !dbg !9736

land.lhs.true46:                                  ; preds = %if.else
  %70 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9737
  %extradata_size47 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %70, i32 0, i32 4, !dbg !9738
  %71 = load i32, i32* %extradata_size47, align 8, !dbg !9738
  %cmp48 = icmp sgt i32 %71, 6, !dbg !9739
  br i1 %cmp48, label %land.lhs.true50, label %if.else75, !dbg !9740

land.lhs.true50:                                  ; preds = %land.lhs.true46
  %72 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9741
  %extradata51 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %72, i32 0, i32 3, !dbg !9742
  %73 = load i8*, i8** %extradata51, align 8, !dbg !9742
  %arrayidx52 = getelementptr inbounds i8, i8* %73, i64 0, !dbg !9743
  %74 = load i8, i8* %arrayidx52, align 1, !dbg !9743
  %conv53 = zext i8 %74 to i32, !dbg !9743
  %shl54 = shl i32 %conv53, 16, !dbg !9744
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9745
  %extradata55 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 3, !dbg !9746
  %76 = load i8*, i8** %extradata55, align 8, !dbg !9746
  %arrayidx56 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !9747
  %77 = load i8, i8* %arrayidx56, align 1, !dbg !9747
  %conv57 = zext i8 %77 to i32, !dbg !9747
  %shl58 = shl i32 %conv57, 8, !dbg !9748
  %or59 = or i32 %shl54, %shl58, !dbg !9749
  %78 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9750
  %extradata60 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %78, i32 0, i32 3, !dbg !9751
  %79 = load i8*, i8** %extradata60, align 8, !dbg !9751
  %arrayidx61 = getelementptr inbounds i8, i8* %79, i64 2, !dbg !9752
  %80 = load i8, i8* %arrayidx61, align 1, !dbg !9752
  %conv62 = zext i8 %80 to i32, !dbg !9752
  %or63 = or i32 %or59, %conv62, !dbg !9753
  %cmp64 = icmp eq i32 %or63, 1, !dbg !9754
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66, !dbg !9755

lor.lhs.false66:                                  ; preds = %land.lhs.true50
  %81 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9756
  %extradata67 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %81, i32 0, i32 3, !dbg !9757
  %82 = load i8*, i8** %extradata67, align 8, !dbg !9757
  %83 = bitcast i8* %82 to %union.unaligned_32*, !dbg !9758
  %l68 = bitcast %union.unaligned_32* %83 to i32*, !dbg !9758
  %84 = load i32, i32* %l68, align 1, !dbg !9758
  store i32 %84, i32* %x.addr.i191, align 4, !dbg !9759
  %85 = load i32, i32* %x.addr.i191, align 4, !dbg !9760
  %shl.i192 = shl i32 %85, 8, !dbg !9761
  %and.i193 = and i32 %shl.i192, 65280, !dbg !9762
  %86 = load i32, i32* %x.addr.i191, align 4, !dbg !9763
  %shr.i194 = lshr i32 %86, 8, !dbg !9764
  %and1.i195 = and i32 %shr.i194, 255, !dbg !9765
  %or.i196 = or i32 %and.i193, %and1.i195, !dbg !9766
  %shl2.i197 = shl i32 %or.i196, 16, !dbg !9767
  %87 = load i32, i32* %x.addr.i191, align 4, !dbg !9768
  %shr3.i198 = lshr i32 %87, 16, !dbg !9769
  %shl4.i199 = shl i32 %shr3.i198, 8, !dbg !9770
  %and5.i200 = and i32 %shl4.i199, 65280, !dbg !9771
  %88 = load i32, i32* %x.addr.i191, align 4, !dbg !9772
  %shr6.i201 = lshr i32 %88, 16, !dbg !9773
  %shr7.i202 = lshr i32 %shr6.i201, 8, !dbg !9774
  %and8.i203 = and i32 %shr7.i202, 255, !dbg !9775
  %or9.i204 = or i32 %and5.i200, %and8.i203, !dbg !9776
  %or10.i205 = or i32 %shl2.i197, %or9.i204, !dbg !9777
  %cmp70 = icmp eq i32 %or10.i205, 1, !dbg !9778
  br i1 %cmp70, label %if.then72, label %if.else75, !dbg !9779

if.then72:                                        ; preds = %lor.lhs.false66, %land.lhs.true50
  %89 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9781
  %data73 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %89, i32 0, i32 3, !dbg !9782
  %90 = load i8*, i8** %data73, align 8, !dbg !9782
  %call74 = call i32 @ff_hevc_annexb2mp4_buf(i8* %90, i8** %data, i32* %size, i32 0, i32* null), !dbg !9783
  br label %if.end96, !dbg !9783

if.else75:                                        ; preds = %lor.lhs.false66, %land.lhs.true46, %if.else
  %91 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9784
  %codec_id76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %91, i32 0, i32 1, !dbg !9786
  %92 = load i32, i32* %codec_id76, align 4, !dbg !9786
  %cmp77 = icmp eq i32 %92, 32797, !dbg !9787
  br i1 %cmp77, label %if.then79, label %if.else82, !dbg !9788

if.then79:                                        ; preds = %if.else75
  %93 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9789
  %data80 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %93, i32 0, i32 3, !dbg !9790
  %94 = load i8*, i8** %data80, align 8, !dbg !9790
  %call81 = call i32 @ff_av1_filter_obus_buf(i8* %94, i8** %data, i32* %size), !dbg !9791
  br label %if.end95, !dbg !9791

if.else82:                                        ; preds = %if.else75
  %95 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9792
  %codec_id83 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %95, i32 0, i32 1, !dbg !9794
  %96 = load i32, i32* %codec_id83, align 4, !dbg !9794
  %cmp84 = icmp eq i32 %96, 86041, !dbg !9795
  br i1 %cmp84, label %if.then86, label %if.else92, !dbg !9796

if.then86:                                        ; preds = %if.else82
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9797, metadata !2445), !dbg !9799
  %97 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9800
  %data87 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %97, i32 0, i32 3, !dbg !9801
  %98 = load i8*, i8** %data87, align 8, !dbg !9801
  %call88 = call i32 @mkv_strip_wavpack(i8* %98, i8** %data, i32* %size), !dbg !9802
  store i32 %call88, i32* %ret, align 4, !dbg !9799
  %99 = load i32, i32* %ret, align 4, !dbg !9803
  %cmp89 = icmp slt i32 %99, 0, !dbg !9805
  br i1 %cmp89, label %if.then91, label %if.end, !dbg !9806

if.then91:                                        ; preds = %if.then86
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9807
  %101 = bitcast %struct.AVFormatContext* %100 to i8*, !dbg !9807
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.89, i32 0, i32 0)), !dbg !9809
  br label %if.end190, !dbg !9810

if.end:                                           ; preds = %if.then86
  br label %if.end94, !dbg !9811

if.else92:                                        ; preds = %if.else82
  %102 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9812
  %data93 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %102, i32 0, i32 3, !dbg !9813
  %103 = load i8*, i8** %data93, align 8, !dbg !9813
  store i8* %103, i8** %data, align 8, !dbg !9814
  br label %if.end94

if.end94:                                         ; preds = %if.else92, %if.end
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then79
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then72
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then
  %104 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9815
  %codec_id98 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %104, i32 0, i32 1, !dbg !9817
  %105 = load i32, i32* %codec_id98, align 4, !dbg !9817
  %cmp99 = icmp eq i32 %105, 147, !dbg !9818
  br i1 %cmp99, label %land.lhs.true101, label %if.end105, !dbg !9819

land.lhs.true101:                                 ; preds = %if.end97
  %106 = load i32, i32* %size, align 4, !dbg !9820
  %cmp102 = icmp sge i32 %106, 8, !dbg !9822
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !9823

if.then104:                                       ; preds = %land.lhs.true101
  %107 = load i32, i32* %size, align 4, !dbg !9824
  %sub = sub nsw i32 %107, 8, !dbg !9824
  store i32 %sub, i32* %size, align 4, !dbg !9824
  store i32 8, i32* %offset, align 4, !dbg !9826
  br label %if.end105, !dbg !9827

if.end105:                                        ; preds = %if.then104, %land.lhs.true101, %if.end97
  %108 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9828
  %call106 = call i8* @av_packet_get_side_data(%struct.AVPacket* %108, i32 11, i32* %side_data_size), !dbg !9829
  store i8* %call106, i8** %side_data, align 8, !dbg !9830
  %109 = load i8*, i8** %side_data, align 8, !dbg !9831
  %tobool107 = icmp ne i8* %109, null, !dbg !9831
  br i1 %tobool107, label %land.lhs.true108, label %if.end118, !dbg !9833

land.lhs.true108:                                 ; preds = %if.end105
  %110 = load i32, i32* %side_data_size, align 4, !dbg !9834
  %cmp109 = icmp sge i32 %110, 10, !dbg !9836
  br i1 %cmp109, label %if.then111, label %if.end118, !dbg !9837

if.then111:                                       ; preds = %land.lhs.true108
  %111 = load i8*, i8** %side_data, align 8, !dbg !9838
  %add.ptr = getelementptr inbounds i8, i8* %111, i64 4, !dbg !9840
  %112 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !9841
  %l112 = bitcast %union.unaligned_32* %112 to i32*, !dbg !9841
  %113 = load i32, i32* %l112, align 1, !dbg !9841
  %conv113 = zext i32 %113 to i64, !dbg !9842
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !9843
  store i32 1, i32* %num, align 4, !dbg !9843
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !9843
  %114 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9844
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %114, i32 0, i32 23, !dbg !9845
  %115 = load i32, i32* %sample_rate, align 4, !dbg !9845
  store i32 %115, i32* %den, align 4, !dbg !9843
  %num115 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral114, i32 0, i32 0, !dbg !9846
  store i32 1, i32* %num115, align 4, !dbg !9846
  %den116 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral114, i32 0, i32 1, !dbg !9846
  store i32 1000000000, i32* %den116, align 4, !dbg !9846
  %116 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !9847
  %117 = load i64, i64* %116, align 4, !dbg !9847
  %118 = bitcast %struct.AVRational* %.compoundliteral114 to i64*, !dbg !9847
  %119 = load i64, i64* %118, align 4, !dbg !9847
  %call117 = call i64 @av_rescale_q(i64 %conv113, i64 %117, i64 %119) #2, !dbg !9847
  store i64 %call117, i64* %discard_padding, align 8, !dbg !9848
  br label %if.end118, !dbg !9849

if.end118:                                        ; preds = %if.then111, %land.lhs.true108, %if.end105
  %120 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9850
  %call119 = call i8* @av_packet_get_side_data(%struct.AVPacket* %120, i32 15, i32* %side_data_size), !dbg !9851
  store i8* %call119, i8** %side_data, align 8, !dbg !9852
  %121 = load i8*, i8** %side_data, align 8, !dbg !9853
  %tobool120 = icmp ne i8* %121, null, !dbg !9853
  br i1 %tobool120, label %if.then121, label %if.end126, !dbg !9855

if.then121:                                       ; preds = %if.end118
  %122 = load i8*, i8** %side_data, align 8, !dbg !9856
  %123 = bitcast i8* %122 to %union.unaligned_64*, !dbg !9858
  %l122 = bitcast %union.unaligned_64* %123 to i64*, !dbg !9858
  %124 = load i64, i64* %l122, align 1, !dbg !9858
  %call123 = call i64 @av_bswap64(i64 %124) #2, !dbg !9859
  store i64 %call123, i64* %additional_id, align 8, !dbg !9860
  %125 = load i8*, i8** %side_data, align 8, !dbg !9861
  %add.ptr124 = getelementptr inbounds i8, i8* %125, i64 8, !dbg !9861
  store i8* %add.ptr124, i8** %side_data, align 8, !dbg !9861
  %126 = load i32, i32* %side_data_size, align 4, !dbg !9862
  %sub125 = sub nsw i32 %126, 8, !dbg !9862
  store i32 %sub125, i32* %side_data_size, align 4, !dbg !9862
  br label %if.end126, !dbg !9863

if.end126:                                        ; preds = %if.then121, %if.end118
  %127 = load i32, i32* %side_data_size, align 4, !dbg !9864
  %tobool127 = icmp ne i32 %127, 0, !dbg !9864
  br i1 %tobool127, label %land.lhs.true128, label %lor.lhs.false131, !dbg !9866

land.lhs.true128:                                 ; preds = %if.end126
  %128 = load i64, i64* %additional_id, align 8, !dbg !9867
  %cmp129 = icmp eq i64 %128, 1, !dbg !9869
  br i1 %cmp129, label %if.then133, label %lor.lhs.false131, !dbg !9870

lor.lhs.false131:                                 ; preds = %land.lhs.true128, %if.end126
  %129 = load i64, i64* %discard_padding, align 8, !dbg !9871
  %tobool132 = icmp ne i64 %129, 0, !dbg !9871
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !9873

if.then133:                                       ; preds = %lor.lhs.false131, %land.lhs.true128
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9874
  %call134 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %130, i32 160, i64 0), !dbg !9876
  %131 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !9876
  %132 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %131, i32 0, i32 0, !dbg !9876
  %133 = extractvalue { i64, i32 } %call134, 0, !dbg !9876
  store i64 %133, i64* %132, align 8, !dbg !9876
  %134 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %131, i32 0, i32 1, !dbg !9876
  %135 = extractvalue { i64, i32 } %call134, 1, !dbg !9876
  store i32 %135, i32* %134, align 8, !dbg !9876
  %136 = bitcast %struct.ebml_master* %block_group to i8*, !dbg !9876
  %137 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !9876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 16, i32 8, i1 false), !dbg !9877
  store i32 161, i32* %blockid.addr, align 4, !dbg !9879
  br label %if.end135, !dbg !9880

if.end135:                                        ; preds = %if.then133, %lor.lhs.false131
  %138 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9881
  %139 = load i32, i32* %blockid.addr, align 4, !dbg !9882
  call void @put_ebml_id(%struct.AVIOContext* %138, i32 %139), !dbg !9883
  %140 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9884
  %141 = load i32, i32* %size, align 4, !dbg !9885
  %add136 = add nsw i32 %141, 4, !dbg !9886
  %conv137 = sext i32 %add136 to i64, !dbg !9885
  call void @put_ebml_num(%struct.AVIOContext* %140, i64 %conv137, i32 0), !dbg !9887
  %142 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9888
  %143 = load i8, i8* %track_number, align 1, !dbg !9889
  %conv138 = zext i8 %143 to i32, !dbg !9889
  %or139 = or i32 128, %conv138, !dbg !9890
  call void @avio_w8(%struct.AVIOContext* %142, i32 %or139), !dbg !9891
  %144 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9892
  %145 = load i64, i64* %ts, align 8, !dbg !9893
  %146 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9894
  %cluster_pts = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %146, i32 0, i32 13, !dbg !9895
  %147 = load i64, i64* %cluster_pts, align 8, !dbg !9895
  %sub140 = sub nsw i64 %145, %147, !dbg !9896
  %conv141 = trunc i64 %sub140 to i32, !dbg !9893
  call void @avio_wb16(%struct.AVIOContext* %144, i32 %conv141), !dbg !9897
  %148 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9898
  %149 = load i32, i32* %blockid.addr, align 4, !dbg !9899
  %cmp142 = icmp eq i32 %149, 163, !dbg !9900
  br i1 %cmp142, label %land.rhs, label %land.end, !dbg !9901

land.rhs:                                         ; preds = %if.end135
  %150 = load i32, i32* %keyframe.addr, align 4, !dbg !9902
  %tobool144 = icmp ne i32 %150, 0, !dbg !9903
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end135
  %151 = phi i1 [ false, %if.end135 ], [ %tobool144, %land.rhs ]
  %cond145 = select i1 %151, i32 128, i32 0, !dbg !9904
  call void @avio_w8(%struct.AVIOContext* %148, i32 %cond145), !dbg !9905
  %152 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9906
  %153 = load i8*, i8** %data, align 8, !dbg !9907
  %154 = load i32, i32* %offset, align 4, !dbg !9908
  %idx.ext = sext i32 %154 to i64, !dbg !9909
  %add.ptr146 = getelementptr inbounds i8, i8* %153, i64 %idx.ext, !dbg !9909
  %155 = load i32, i32* %size, align 4, !dbg !9910
  call void @avio_write(%struct.AVIOContext* %152, i8* %add.ptr146, i32 %155), !dbg !9911
  %156 = load i8*, i8** %data, align 8, !dbg !9912
  %157 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9914
  %data147 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %157, i32 0, i32 3, !dbg !9915
  %158 = load i8*, i8** %data147, align 8, !dbg !9915
  %cmp148 = icmp ne i8* %156, %158, !dbg !9916
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !9917

if.then150:                                       ; preds = %land.end
  %159 = load i8*, i8** %data, align 8, !dbg !9918
  call void @av_free(i8* %159), !dbg !9919
  br label %if.end151, !dbg !9919

if.end151:                                        ; preds = %if.then150, %land.end
  %160 = load i32, i32* %blockid.addr, align 4, !dbg !9920
  %cmp152 = icmp eq i32 %160, 161, !dbg !9922
  br i1 %cmp152, label %land.lhs.true154, label %if.end161, !dbg !9923

land.lhs.true154:                                 ; preds = %if.end151
  %161 = load i32, i32* %keyframe.addr, align 4, !dbg !9924
  %tobool155 = icmp ne i32 %161, 0, !dbg !9924
  br i1 %tobool155, label %if.end161, label %if.then156, !dbg !9926

if.then156:                                       ; preds = %land.lhs.true154
  %162 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9927
  %163 = load i8, i8* %track_number, align 1, !dbg !9929
  %conv157 = zext i8 %163 to i32, !dbg !9929
  %sub158 = sub nsw i32 %conv157, 1, !dbg !9930
  %idxprom159 = sext i32 %sub158 to i64, !dbg !9931
  %164 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9931
  %last_track_timestamp = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %164, i32 0, i32 33, !dbg !9932
  %arrayidx160 = getelementptr inbounds [126 x i64], [126 x i64]* %last_track_timestamp, i64 0, i64 %idxprom159, !dbg !9931
  %165 = load i64, i64* %arrayidx160, align 8, !dbg !9931
  call void @put_ebml_sint(%struct.AVIOContext* %162, i32 251, i64 %165), !dbg !9933
  br label %if.end161, !dbg !9934

if.end161:                                        ; preds = %if.then156, %land.lhs.true154, %if.end151
  %166 = load i64, i64* %ts, align 8, !dbg !9935
  %167 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9936
  %cluster_pts162 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %167, i32 0, i32 13, !dbg !9937
  %168 = load i64, i64* %cluster_pts162, align 8, !dbg !9937
  %sub163 = sub nsw i64 %166, %168, !dbg !9938
  %169 = load i8, i8* %track_number, align 1, !dbg !9939
  %conv164 = zext i8 %169 to i32, !dbg !9939
  %sub165 = sub nsw i32 %conv164, 1, !dbg !9940
  %idxprom166 = sext i32 %sub165 to i64, !dbg !9941
  %170 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !9941
  %last_track_timestamp167 = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %170, i32 0, i32 33, !dbg !9942
  %arrayidx168 = getelementptr inbounds [126 x i64], [126 x i64]* %last_track_timestamp167, i64 0, i64 %idxprom166, !dbg !9941
  store i64 %sub163, i64* %arrayidx168, align 8, !dbg !9943
  %171 = load i64, i64* %discard_padding, align 8, !dbg !9944
  %tobool169 = icmp ne i64 %171, 0, !dbg !9944
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !9946

if.then170:                                       ; preds = %if.end161
  %172 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9947
  %173 = load i64, i64* %discard_padding, align 8, !dbg !9949
  call void @put_ebml_sint(%struct.AVIOContext* %172, i32 30114, i64 %173), !dbg !9950
  br label %if.end171, !dbg !9951

if.end171:                                        ; preds = %if.then170, %if.end161
  %174 = load i32, i32* %side_data_size, align 4, !dbg !9952
  %tobool172 = icmp ne i32 %174, 0, !dbg !9952
  br i1 %tobool172, label %land.lhs.true173, label %if.end182, !dbg !9954

land.lhs.true173:                                 ; preds = %if.end171
  %175 = load i64, i64* %additional_id, align 8, !dbg !9955
  %cmp174 = icmp eq i64 %175, 1, !dbg !9957
  br i1 %cmp174, label %if.then176, label %if.end182, !dbg !9958

if.then176:                                       ; preds = %land.lhs.true173
  %176 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9959
  %call177 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %176, i32 30113, i64 0), !dbg !9961
  %177 = bitcast %struct.ebml_master* %coerce178 to { i64, i32 }*, !dbg !9961
  %178 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %177, i32 0, i32 0, !dbg !9961
  %179 = extractvalue { i64, i32 } %call177, 0, !dbg !9961
  store i64 %179, i64* %178, align 8, !dbg !9961
  %180 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %177, i32 0, i32 1, !dbg !9961
  %181 = extractvalue { i64, i32 } %call177, 1, !dbg !9961
  store i32 %181, i32* %180, align 8, !dbg !9961
  %182 = bitcast %struct.ebml_master* %block_additions to i8*, !dbg !9961
  %183 = bitcast %struct.ebml_master* %coerce178 to i8*, !dbg !9961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 16, i32 8, i1 false), !dbg !9962
  %184 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9964
  %call179 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %184, i32 166, i64 0), !dbg !9965
  %185 = bitcast %struct.ebml_master* %coerce180 to { i64, i32 }*, !dbg !9965
  %186 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %185, i32 0, i32 0, !dbg !9965
  %187 = extractvalue { i64, i32 } %call179, 0, !dbg !9965
  store i64 %187, i64* %186, align 8, !dbg !9965
  %188 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %185, i32 0, i32 1, !dbg !9965
  %189 = extractvalue { i64, i32 } %call179, 1, !dbg !9965
  store i32 %189, i32* %188, align 8, !dbg !9965
  %190 = bitcast %struct.ebml_master* %block_more to i8*, !dbg !9965
  %191 = bitcast %struct.ebml_master* %coerce180 to i8*, !dbg !9965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %191, i64 16, i32 8, i1 false), !dbg !9966
  %192 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9967
  call void @put_ebml_uint(%struct.AVIOContext* %192, i32 238, i64 1), !dbg !9968
  %193 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9969
  call void @put_ebml_id(%struct.AVIOContext* %193, i32 165), !dbg !9970
  %194 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9971
  %195 = load i32, i32* %side_data_size, align 4, !dbg !9972
  %conv181 = sext i32 %195 to i64, !dbg !9972
  call void @put_ebml_num(%struct.AVIOContext* %194, i64 %conv181, i32 0), !dbg !9973
  %196 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9974
  %197 = load i8*, i8** %side_data, align 8, !dbg !9975
  %198 = load i32, i32* %side_data_size, align 4, !dbg !9976
  call void @avio_write(%struct.AVIOContext* %196, i8* %197, i32 %198), !dbg !9977
  %199 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9978
  %200 = bitcast %struct.ebml_master* %block_more to { i64, i32 }*, !dbg !9979
  %201 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %200, i32 0, i32 0, !dbg !9979
  %202 = load i64, i64* %201, align 8, !dbg !9979
  %203 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %200, i32 0, i32 1, !dbg !9979
  %204 = load i32, i32* %203, align 8, !dbg !9979
  call void @end_ebml_master(%struct.AVIOContext* %199, i64 %202, i32 %204), !dbg !9979
  %205 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9980
  %206 = bitcast %struct.ebml_master* %block_additions to { i64, i32 }*, !dbg !9981
  %207 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %206, i32 0, i32 0, !dbg !9981
  %208 = load i64, i64* %207, align 8, !dbg !9981
  %209 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %206, i32 0, i32 1, !dbg !9981
  %210 = load i32, i32* %209, align 8, !dbg !9981
  call void @end_ebml_master(%struct.AVIOContext* %205, i64 %208, i32 %210), !dbg !9981
  br label %if.end182, !dbg !9982

if.end182:                                        ; preds = %if.then176, %land.lhs.true173, %if.end171
  %211 = load i32, i32* %side_data_size, align 4, !dbg !9983
  %tobool183 = icmp ne i32 %211, 0, !dbg !9983
  br i1 %tobool183, label %land.lhs.true184, label %lor.lhs.false187, !dbg !9985

land.lhs.true184:                                 ; preds = %if.end182
  %212 = load i64, i64* %additional_id, align 8, !dbg !9986
  %cmp185 = icmp eq i64 %212, 1, !dbg !9988
  br i1 %cmp185, label %if.then189, label %lor.lhs.false187, !dbg !9989

lor.lhs.false187:                                 ; preds = %land.lhs.true184, %if.end182
  %213 = load i64, i64* %discard_padding, align 8, !dbg !9990
  %tobool188 = icmp ne i64 %213, 0, !dbg !9990
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !9992

if.then189:                                       ; preds = %lor.lhs.false187, %land.lhs.true184
  %214 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9993
  %215 = bitcast %struct.ebml_master* %block_group to { i64, i32 }*, !dbg !9995
  %216 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %215, i32 0, i32 0, !dbg !9995
  %217 = load i64, i64* %216, align 8, !dbg !9995
  %218 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %215, i32 0, i32 1, !dbg !9995
  %219 = load i32, i32* %218, align 8, !dbg !9995
  call void @end_ebml_master(%struct.AVIOContext* %214, i64 %217, i32 %219), !dbg !9995
  br label %if.end190, !dbg !9996

if.end190:                                        ; preds = %if.then91, %if.then189, %lor.lhs.false187
  ret void, !dbg !9997
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_add_cuepoint(%struct.mkv_cues* %cues, i32 %stream, i32 %tracknum, i64 %ts, i64 %cluster_pos, i64 %relative_pos, i64 %duration) #0 !dbg !9998 {
entry:
  %retval = alloca i32, align 4
  %cues.addr = alloca %struct.mkv_cues*, align 8
  %stream.addr = alloca i32, align 4
  %tracknum.addr = alloca i32, align 4
  %ts.addr = alloca i64, align 8
  %cluster_pos.addr = alloca i64, align 8
  %relative_pos.addr = alloca i64, align 8
  %duration.addr = alloca i64, align 8
  %entries = alloca %struct.mkv_cuepoint*, align 8
  store %struct.mkv_cues* %cues, %struct.mkv_cues** %cues.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mkv_cues** %cues.addr, metadata !10001, metadata !2445), !dbg !10002
  store i32 %stream, i32* %stream.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream.addr, metadata !10003, metadata !2445), !dbg !10004
  store i32 %tracknum, i32* %tracknum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tracknum.addr, metadata !10005, metadata !2445), !dbg !10006
  store i64 %ts, i64* %ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts.addr, metadata !10007, metadata !2445), !dbg !10008
  store i64 %cluster_pos, i64* %cluster_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cluster_pos.addr, metadata !10009, metadata !2445), !dbg !10010
  store i64 %relative_pos, i64* %relative_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %relative_pos.addr, metadata !10011, metadata !2445), !dbg !10012
  store i64 %duration, i64* %duration.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %duration.addr, metadata !10013, metadata !2445), !dbg !10014
  call void @llvm.dbg.declare(metadata %struct.mkv_cuepoint** %entries, metadata !10015, metadata !2445), !dbg !10016
  %0 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10017
  %entries1 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %0, i32 0, i32 1, !dbg !10018
  %1 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries1, align 8, !dbg !10018
  store %struct.mkv_cuepoint* %1, %struct.mkv_cuepoint** %entries, align 8, !dbg !10016
  %2 = load i64, i64* %ts.addr, align 8, !dbg !10019
  %cmp = icmp slt i64 %2, 0, !dbg !10021
  br i1 %cmp, label %if.then, label %if.end, !dbg !10022

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10023
  br label %return, !dbg !10023

if.end:                                           ; preds = %entry
  %3 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries, align 8, !dbg !10024
  %4 = bitcast %struct.mkv_cuepoint* %3 to i8*, !dbg !10024
  %5 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10025
  %num_entries = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %5, i32 0, i32 2, !dbg !10026
  %6 = load i32, i32* %num_entries, align 8, !dbg !10026
  %add = add nsw i32 %6, 1, !dbg !10027
  %conv = sext i32 %add to i64, !dbg !10025
  %call = call i8* @av_realloc_array(i8* %4, i64 %conv, i64 40), !dbg !10028
  %7 = bitcast i8* %call to %struct.mkv_cuepoint*, !dbg !10028
  store %struct.mkv_cuepoint* %7, %struct.mkv_cuepoint** %entries, align 8, !dbg !10029
  %8 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries, align 8, !dbg !10030
  %tobool = icmp ne %struct.mkv_cuepoint* %8, null, !dbg !10030
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10032

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !10033
  br label %return, !dbg !10033

if.end3:                                          ; preds = %if.end
  %9 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries, align 8, !dbg !10034
  %10 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10035
  %entries4 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %10, i32 0, i32 1, !dbg !10036
  store %struct.mkv_cuepoint* %9, %struct.mkv_cuepoint** %entries4, align 8, !dbg !10037
  %11 = load i64, i64* %ts.addr, align 8, !dbg !10038
  %12 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10039
  %num_entries5 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %12, i32 0, i32 2, !dbg !10040
  %13 = load i32, i32* %num_entries5, align 8, !dbg !10040
  %idxprom = sext i32 %13 to i64, !dbg !10041
  %14 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10041
  %entries6 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %14, i32 0, i32 1, !dbg !10042
  %15 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries6, align 8, !dbg !10042
  %arrayidx = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %15, i64 %idxprom, !dbg !10041
  %pts = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx, i32 0, i32 0, !dbg !10043
  store i64 %11, i64* %pts, align 8, !dbg !10044
  %16 = load i32, i32* %stream.addr, align 4, !dbg !10045
  %17 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10046
  %num_entries7 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %17, i32 0, i32 2, !dbg !10047
  %18 = load i32, i32* %num_entries7, align 8, !dbg !10047
  %idxprom8 = sext i32 %18 to i64, !dbg !10048
  %19 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10048
  %entries9 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %19, i32 0, i32 1, !dbg !10049
  %20 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries9, align 8, !dbg !10049
  %arrayidx10 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %20, i64 %idxprom8, !dbg !10048
  %stream_idx = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx10, i32 0, i32 1, !dbg !10050
  store i32 %16, i32* %stream_idx, align 8, !dbg !10051
  %21 = load i32, i32* %tracknum.addr, align 4, !dbg !10052
  %22 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10053
  %num_entries11 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %22, i32 0, i32 2, !dbg !10054
  %23 = load i32, i32* %num_entries11, align 8, !dbg !10054
  %idxprom12 = sext i32 %23 to i64, !dbg !10055
  %24 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10055
  %entries13 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %24, i32 0, i32 1, !dbg !10056
  %25 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries13, align 8, !dbg !10056
  %arrayidx14 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %25, i64 %idxprom12, !dbg !10055
  %tracknum15 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx14, i32 0, i32 2, !dbg !10057
  store i32 %21, i32* %tracknum15, align 4, !dbg !10058
  %26 = load i64, i64* %cluster_pos.addr, align 8, !dbg !10059
  %27 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10060
  %segment_offset = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %27, i32 0, i32 0, !dbg !10061
  %28 = load i64, i64* %segment_offset, align 8, !dbg !10061
  %sub = sub nsw i64 %26, %28, !dbg !10062
  %29 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10063
  %num_entries16 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %29, i32 0, i32 2, !dbg !10064
  %30 = load i32, i32* %num_entries16, align 8, !dbg !10064
  %idxprom17 = sext i32 %30 to i64, !dbg !10065
  %31 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10065
  %entries18 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %31, i32 0, i32 1, !dbg !10066
  %32 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries18, align 8, !dbg !10066
  %arrayidx19 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %32, i64 %idxprom17, !dbg !10065
  %cluster_pos20 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx19, i32 0, i32 3, !dbg !10067
  store i64 %sub, i64* %cluster_pos20, align 8, !dbg !10068
  %33 = load i64, i64* %relative_pos.addr, align 8, !dbg !10069
  %34 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10070
  %num_entries21 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %34, i32 0, i32 2, !dbg !10071
  %35 = load i32, i32* %num_entries21, align 8, !dbg !10071
  %idxprom22 = sext i32 %35 to i64, !dbg !10072
  %36 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10072
  %entries23 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %36, i32 0, i32 1, !dbg !10073
  %37 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries23, align 8, !dbg !10073
  %arrayidx24 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %37, i64 %idxprom22, !dbg !10072
  %relative_pos25 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx24, i32 0, i32 4, !dbg !10074
  store i64 %33, i64* %relative_pos25, align 8, !dbg !10075
  %38 = load i64, i64* %duration.addr, align 8, !dbg !10076
  %39 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10077
  %num_entries26 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %39, i32 0, i32 2, !dbg !10078
  %40 = load i32, i32* %num_entries26, align 8, !dbg !10079
  %inc = add nsw i32 %40, 1, !dbg !10079
  store i32 %inc, i32* %num_entries26, align 8, !dbg !10079
  %idxprom27 = sext i32 %40 to i64, !dbg !10080
  %41 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10080
  %entries28 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %41, i32 0, i32 1, !dbg !10081
  %42 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries28, align 8, !dbg !10081
  %arrayidx29 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %42, i64 %idxprom27, !dbg !10080
  %duration30 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx29, i32 0, i32 5, !dbg !10082
  store i64 %38, i64* %duration30, align 8, !dbg !10083
  store i32 0, i32* %retval, align 4, !dbg !10084
  br label %return, !dbg !10084

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !10085
  ret i32 %43, !dbg !10085
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_write_vtt_blocks(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVPacket* %pkt) #0 !dbg !10086 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !10089
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %blockgroup = alloca %struct.ebml_master, align 8
  %id_size = alloca i32, align 4
  %settings_size = alloca i32, align 4
  %size = alloca i32, align 4
  %id = alloca i8*, align 8
  %settings = alloca i8*, align 8
  %ts = alloca i64, align 8
  %flags = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !10091, metadata !2445), !dbg !10092
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !10093, metadata !2445), !dbg !10094
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !10095, metadata !2445), !dbg !10096
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !10097, metadata !2445), !dbg !10098
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10099
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !10100
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10100
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !10099
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10098
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %blockgroup, metadata !10101, metadata !2445), !dbg !10102
  call void @llvm.dbg.declare(metadata i32* %id_size, metadata !10103, metadata !2445), !dbg !10104
  call void @llvm.dbg.declare(metadata i32* %settings_size, metadata !10105, metadata !2445), !dbg !10106
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10107, metadata !2445), !dbg !10108
  call void @llvm.dbg.declare(metadata i8** %id, metadata !10109, metadata !2445), !dbg !10110
  call void @llvm.dbg.declare(metadata i8** %settings, metadata !10111, metadata !2445), !dbg !10112
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !10113, metadata !2445), !dbg !10114
  %3 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10115
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 5, !dbg !10116
  %4 = load i32, i32* %stream_index, align 4, !dbg !10116
  %idxprom = sext i32 %4 to i64, !dbg !10117
  %5 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10117
  %tracks = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %5, i32 0, i32 18, !dbg !10118
  %6 = load %struct.mkv_track*, %struct.mkv_track** %tracks, align 8, !dbg !10118
  %arrayidx = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %6, i64 %idxprom, !dbg !10117
  %write_dts = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx, i32 0, i32 0, !dbg !10119
  %7 = load i32, i32* %write_dts, align 8, !dbg !10119
  %tobool = icmp ne i32 %7, 0, !dbg !10117
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10117

cond.true:                                        ; preds = %entry
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10120
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 2, !dbg !10122
  %9 = load i64, i64* %dts, align 8, !dbg !10122
  br label %cond.end, !dbg !10123

cond.false:                                       ; preds = %entry
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10124
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 1, !dbg !10126
  %11 = load i64, i64* %pts, align 8, !dbg !10126
  br label %cond.end, !dbg !10127

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %11, %cond.false ], !dbg !10128
  store i64 %cond, i64* %ts, align 8, !dbg !10130
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10131, metadata !2445), !dbg !10132
  store i32 0, i32* %flags, align 4, !dbg !10132
  store i32 0, i32* %id_size, align 4, !dbg !10133
  %12 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10134
  %call = call i8* @av_packet_get_side_data(%struct.AVPacket* %12, i32 16, i32* %id_size), !dbg !10135
  store i8* %call, i8** %id, align 8, !dbg !10136
  store i32 0, i32* %settings_size, align 4, !dbg !10137
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10138
  %call1 = call i8* @av_packet_get_side_data(%struct.AVPacket* %13, i32 17, i32* %settings_size), !dbg !10139
  store i8* %call1, i8** %settings, align 8, !dbg !10140
  %14 = load i32, i32* %id_size, align 4, !dbg !10141
  %add = add nsw i32 %14, 1, !dbg !10142
  %15 = load i32, i32* %settings_size, align 4, !dbg !10143
  %add2 = add nsw i32 %add, %15, !dbg !10144
  %add3 = add nsw i32 %add2, 1, !dbg !10145
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10146
  %size4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 4, !dbg !10147
  %17 = load i32, i32* %size4, align 8, !dbg !10147
  %add5 = add nsw i32 %add3, %17, !dbg !10148
  store i32 %add5, i32* %size, align 4, !dbg !10149
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10150
  %19 = bitcast %struct.AVFormatContext* %18 to i8*, !dbg !10150
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10151
  store %struct.AVIOContext* %20, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10152
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10153
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %21, i64 0, i32 1) #11, !dbg !10154
  %22 = load i32, i32* %size, align 4, !dbg !10155
  %23 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10156
  %pts7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %23, i32 0, i32 1, !dbg !10157
  %24 = load i64, i64* %pts7, align 8, !dbg !10157
  %25 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10158
  %dts8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i32 0, i32 2, !dbg !10159
  %26 = load i64, i64* %dts8, align 8, !dbg !10159
  %27 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10160
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %27, i32 0, i32 9, !dbg !10161
  %28 = load i64, i64* %duration, align 8, !dbg !10161
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 48, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.90, i32 0, i32 0), i64 %call.i, i32 %22, i64 %24, i64 %26, i64 %28, i32 0), !dbg !10162
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10163
  %30 = load i32, i32* %size, align 4, !dbg !10164
  %call9 = call i32 @mkv_blockgroup_size(i32 %30), !dbg !10165
  %conv = sext i32 %call9 to i64, !dbg !10165
  %call10 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %29, i32 160, i64 %conv), !dbg !10166
  %31 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !10167
  %32 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 0, !dbg !10167
  %33 = extractvalue { i64, i32 } %call10, 0, !dbg !10167
  store i64 %33, i64* %32, align 8, !dbg !10167
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 1, !dbg !10167
  %35 = extractvalue { i64, i32 } %call10, 1, !dbg !10167
  store i32 %35, i32* %34, align 8, !dbg !10167
  %36 = bitcast %struct.ebml_master* %blockgroup to i8*, !dbg !10167
  %37 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !10167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 16, i32 8, i1 false), !dbg !10168
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10169
  call void @put_ebml_id(%struct.AVIOContext* %38, i32 161), !dbg !10170
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10171
  %40 = load i32, i32* %size, align 4, !dbg !10172
  %add11 = add nsw i32 %40, 4, !dbg !10173
  %conv12 = sext i32 %add11 to i64, !dbg !10172
  call void @put_ebml_num(%struct.AVIOContext* %39, i64 %conv12, i32 0), !dbg !10174
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10175
  %42 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10176
  %stream_index13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %42, i32 0, i32 5, !dbg !10177
  %43 = load i32, i32* %stream_index13, align 4, !dbg !10177
  %add14 = add nsw i32 %43, 1, !dbg !10178
  %or = or i32 128, %add14, !dbg !10179
  call void @avio_w8(%struct.AVIOContext* %41, i32 %or), !dbg !10180
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10181
  %45 = load i64, i64* %ts, align 8, !dbg !10182
  %46 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10183
  %cluster_pts = getelementptr inbounds %struct.MatroskaMuxContext, %struct.MatroskaMuxContext* %46, i32 0, i32 13, !dbg !10184
  %47 = load i64, i64* %cluster_pts, align 8, !dbg !10184
  %sub = sub nsw i64 %45, %47, !dbg !10185
  %conv15 = trunc i64 %sub to i32, !dbg !10182
  call void @avio_wb16(%struct.AVIOContext* %44, i32 %conv15), !dbg !10186
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10187
  call void @avio_w8(%struct.AVIOContext* %48, i32 0), !dbg !10188
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10189
  %50 = load i32, i32* %id_size, align 4, !dbg !10190
  %51 = load i8*, i8** %id, align 8, !dbg !10191
  %52 = load i32, i32* %settings_size, align 4, !dbg !10192
  %53 = load i8*, i8** %settings, align 8, !dbg !10193
  %54 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10194
  %size16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %54, i32 0, i32 4, !dbg !10195
  %55 = load i32, i32* %size16, align 8, !dbg !10195
  %56 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10196
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %56, i32 0, i32 3, !dbg !10197
  %57 = load i8*, i8** %data, align 8, !dbg !10197
  %call17 = call i32 (%struct.AVIOContext*, i8*, ...) @avio_printf(%struct.AVIOContext* %49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.91, i32 0, i32 0), i32 %50, i8* %51, i32 %52, i8* %53, i32 %55, i8* %57), !dbg !10198
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10199
  %59 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10200
  %duration18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %59, i32 0, i32 9, !dbg !10201
  %60 = load i64, i64* %duration18, align 8, !dbg !10201
  call void @put_ebml_uint(%struct.AVIOContext* %58, i32 155, i64 %60), !dbg !10202
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10203
  %62 = bitcast %struct.ebml_master* %blockgroup to { i64, i32 }*, !dbg !10204
  %63 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 0, !dbg !10204
  %64 = load i64, i64* %63, align 8, !dbg !10204
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 1, !dbg !10204
  %66 = load i32, i32* %65, align 8, !dbg !10204
  call void @end_ebml_master(%struct.AVIOContext* %61, i64 %64, i32 %66), !dbg !10204
  %67 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10205
  %duration19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %67, i32 0, i32 9, !dbg !10206
  %68 = load i64, i64* %duration19, align 8, !dbg !10206
  %conv20 = trunc i64 %68 to i32, !dbg !10205
  ret i32 %conv20, !dbg !10207
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_blockgroup_size(i32 %pkt_size) #0 !dbg !10208 {
entry:
  %pkt_size.addr = alloca i32, align 4
  %size = alloca i32, align 4
  store i32 %pkt_size, i32* %pkt_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkt_size.addr, metadata !10211, metadata !2445), !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10213, metadata !2445), !dbg !10214
  %0 = load i32, i32* %pkt_size.addr, align 4, !dbg !10215
  %add = add nsw i32 %0, 4, !dbg !10216
  store i32 %add, i32* %size, align 4, !dbg !10214
  %1 = load i32, i32* %size, align 4, !dbg !10217
  %conv = sext i32 %1 to i64, !dbg !10217
  %call = call i32 @ebml_num_size(i64 %conv), !dbg !10218
  %2 = load i32, i32* %size, align 4, !dbg !10219
  %add1 = add nsw i32 %2, %call, !dbg !10219
  store i32 %add1, i32* %size, align 4, !dbg !10219
  %3 = load i32, i32* %size, align 4, !dbg !10220
  %add2 = add nsw i32 %3, 2, !dbg !10220
  store i32 %add2, i32* %size, align 4, !dbg !10220
  %4 = load i32, i32* %size, align 4, !dbg !10221
  %add3 = add nsw i32 %4, 8, !dbg !10221
  store i32 %add3, i32* %size, align 4, !dbg !10221
  %5 = load i32, i32* %size, align 4, !dbg !10222
  %conv4 = sext i32 %5 to i64, !dbg !10222
  %call5 = call i32 @ebml_num_size(i64 %conv4), !dbg !10223
  %6 = load i32, i32* %size, align 4, !dbg !10224
  %add6 = add nsw i32 %6, %call5, !dbg !10224
  store i32 %add6, i32* %size, align 4, !dbg !10224
  %7 = load i32, i32* %size, align 4, !dbg !10225
  %add7 = add nsw i32 %7, 1, !dbg !10225
  store i32 %add7, i32* %size, align 4, !dbg !10225
  %8 = load i32, i32* %size, align 4, !dbg !10226
  ret i32 %8, !dbg !10227
}

declare i32 @ff_avc_parse_nal_units_buf(i8*, i8**, i32*) #1

declare i32 @ff_hevc_annexb2mp4_buf(i8*, i8**, i32*, i32, i32*) #1

declare i32 @ff_av1_filter_obus_buf(i8*, i8**, i32*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mkv_strip_wavpack(i8* %src, i8** %pdst, i32* %size) #0 !dbg !10228 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %pdst.addr = alloca i8**, align 8
  %size.addr = alloca i32*, align 8
  %dst = alloca i8*, align 8
  %srclen = alloca i32, align 4
  %offset = alloca i32, align 4
  %ret = alloca i32, align 4
  %header = alloca %struct.WvHeader, align 4
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !10231, metadata !2445), !dbg !10232
  store i8** %pdst, i8*** %pdst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %pdst.addr, metadata !10233, metadata !2445), !dbg !10234
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !10235, metadata !2445), !dbg !10236
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !10237, metadata !2445), !dbg !10238
  call void @llvm.dbg.declare(metadata i32* %srclen, metadata !10239, metadata !2445), !dbg !10240
  %0 = load i32*, i32** %size.addr, align 8, !dbg !10241
  %1 = load i32, i32* %0, align 4, !dbg !10242
  store i32 %1, i32* %srclen, align 4, !dbg !10240
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10243, metadata !2445), !dbg !10244
  store i32 0, i32* %offset, align 4, !dbg !10244
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10245, metadata !2445), !dbg !10246
  %2 = load i32, i32* %srclen, align 4, !dbg !10247
  %conv = sext i32 %2 to i64, !dbg !10247
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !10248
  store i8* %call, i8** %dst, align 8, !dbg !10249
  %3 = load i8*, i8** %dst, align 8, !dbg !10250
  %tobool = icmp ne i8* %3, null, !dbg !10250
  br i1 %tobool, label %if.end, label %if.then, !dbg !10252

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10253
  br label %return, !dbg !10253

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !10254

while.cond:                                       ; preds = %if.end32, %if.end
  %4 = load i32, i32* %srclen, align 4, !dbg !10255
  %cmp = icmp sge i32 %4, 32, !dbg !10257
  br i1 %cmp, label %while.body, label %while.end, !dbg !10258

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.WvHeader* %header, metadata !10259, metadata !2445), !dbg !10274
  %5 = load i8*, i8** %src.addr, align 8, !dbg !10275
  %call2 = call i32 @ff_wv_parse_header(%struct.WvHeader* %header, i8* %5), !dbg !10276
  store i32 %call2, i32* %ret, align 4, !dbg !10277
  %6 = load i32, i32* %ret, align 4, !dbg !10278
  %cmp3 = icmp slt i32 %6, 0, !dbg !10280
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !10281

if.then5:                                         ; preds = %while.body
  br label %fail, !dbg !10282

if.end6:                                          ; preds = %while.body
  %7 = load i8*, i8** %src.addr, align 8, !dbg !10283
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 32, !dbg !10283
  store i8* %add.ptr, i8** %src.addr, align 8, !dbg !10283
  %8 = load i32, i32* %srclen, align 4, !dbg !10284
  %sub = sub nsw i32 %8, 32, !dbg !10284
  store i32 %sub, i32* %srclen, align 4, !dbg !10284
  %9 = load i32, i32* %srclen, align 4, !dbg !10285
  %blocksize = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10287
  %10 = load i32, i32* %blocksize, align 4, !dbg !10287
  %cmp7 = icmp ult i32 %9, %10, !dbg !10288
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10289

if.then9:                                         ; preds = %if.end6
  store i32 -1094995529, i32* %ret, align 4, !dbg !10290
  br label %fail, !dbg !10292

if.end10:                                         ; preds = %if.end6
  %initial = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 7, !dbg !10293
  %11 = load i32, i32* %initial, align 4, !dbg !10293
  %tobool11 = icmp ne i32 %11, 0, !dbg !10295
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !10296

if.then12:                                        ; preds = %if.end10
  %samples = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 4, !dbg !10297
  %12 = load i32, i32* %samples, align 4, !dbg !10297
  %13 = load i8*, i8** %dst, align 8, !dbg !10299
  %14 = load i32, i32* %offset, align 4, !dbg !10300
  %idx.ext = sext i32 %14 to i64, !dbg !10301
  %add.ptr13 = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !10301
  %15 = bitcast i8* %add.ptr13 to %union.unaligned_32*, !dbg !10302
  %l = bitcast %union.unaligned_32* %15 to i32*, !dbg !10302
  store i32 %12, i32* %l, align 1, !dbg !10303
  %16 = load i32, i32* %offset, align 4, !dbg !10304
  %add = add nsw i32 %16, 4, !dbg !10304
  store i32 %add, i32* %offset, align 4, !dbg !10304
  br label %if.end14, !dbg !10305

if.end14:                                         ; preds = %if.then12, %if.end10
  %flags = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 5, !dbg !10306
  %17 = load i32, i32* %flags, align 4, !dbg !10306
  %18 = load i8*, i8** %dst, align 8, !dbg !10307
  %19 = load i32, i32* %offset, align 4, !dbg !10308
  %idx.ext15 = sext i32 %19 to i64, !dbg !10309
  %add.ptr16 = getelementptr inbounds i8, i8* %18, i64 %idx.ext15, !dbg !10309
  %20 = bitcast i8* %add.ptr16 to %union.unaligned_32*, !dbg !10310
  %l17 = bitcast %union.unaligned_32* %20 to i32*, !dbg !10310
  store i32 %17, i32* %l17, align 1, !dbg !10311
  %crc = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 6, !dbg !10312
  %21 = load i32, i32* %crc, align 4, !dbg !10312
  %22 = load i8*, i8** %dst, align 8, !dbg !10313
  %23 = load i32, i32* %offset, align 4, !dbg !10314
  %idx.ext18 = sext i32 %23 to i64, !dbg !10315
  %add.ptr19 = getelementptr inbounds i8, i8* %22, i64 %idx.ext18, !dbg !10315
  %add.ptr20 = getelementptr inbounds i8, i8* %add.ptr19, i64 4, !dbg !10316
  %24 = bitcast i8* %add.ptr20 to %union.unaligned_32*, !dbg !10317
  %l21 = bitcast %union.unaligned_32* %24 to i32*, !dbg !10317
  store i32 %21, i32* %l21, align 1, !dbg !10318
  %25 = load i32, i32* %offset, align 4, !dbg !10319
  %add22 = add nsw i32 %25, 8, !dbg !10319
  store i32 %add22, i32* %offset, align 4, !dbg !10319
  %initial23 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 7, !dbg !10320
  %26 = load i32, i32* %initial23, align 4, !dbg !10320
  %tobool24 = icmp ne i32 %26, 0, !dbg !10322
  br i1 %tobool24, label %land.lhs.true, label %if.then26, !dbg !10323

land.lhs.true:                                    ; preds = %if.end14
  %final = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 8, !dbg !10324
  %27 = load i32, i32* %final, align 4, !dbg !10324
  %tobool25 = icmp ne i32 %27, 0, !dbg !10326
  br i1 %tobool25, label %if.end32, label %if.then26, !dbg !10327

if.then26:                                        ; preds = %land.lhs.true, %if.end14
  %blocksize27 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10328
  %28 = load i32, i32* %blocksize27, align 4, !dbg !10328
  %29 = load i8*, i8** %dst, align 8, !dbg !10330
  %30 = load i32, i32* %offset, align 4, !dbg !10331
  %idx.ext28 = sext i32 %30 to i64, !dbg !10332
  %add.ptr29 = getelementptr inbounds i8, i8* %29, i64 %idx.ext28, !dbg !10332
  %31 = bitcast i8* %add.ptr29 to %union.unaligned_32*, !dbg !10333
  %l30 = bitcast %union.unaligned_32* %31 to i32*, !dbg !10333
  store i32 %28, i32* %l30, align 1, !dbg !10334
  %32 = load i32, i32* %offset, align 4, !dbg !10335
  %add31 = add nsw i32 %32, 4, !dbg !10335
  store i32 %add31, i32* %offset, align 4, !dbg !10335
  br label %if.end32, !dbg !10336

if.end32:                                         ; preds = %if.then26, %land.lhs.true
  %33 = load i8*, i8** %dst, align 8, !dbg !10337
  %34 = load i32, i32* %offset, align 4, !dbg !10338
  %idx.ext33 = sext i32 %34 to i64, !dbg !10339
  %add.ptr34 = getelementptr inbounds i8, i8* %33, i64 %idx.ext33, !dbg !10339
  %35 = load i8*, i8** %src.addr, align 8, !dbg !10340
  %blocksize35 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10341
  %36 = load i32, i32* %blocksize35, align 4, !dbg !10341
  %conv36 = zext i32 %36 to i64, !dbg !10342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr34, i8* %35, i64 %conv36, i32 1, i1 false), !dbg !10343
  %blocksize37 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10344
  %37 = load i32, i32* %blocksize37, align 4, !dbg !10344
  %38 = load i8*, i8** %src.addr, align 8, !dbg !10345
  %idx.ext38 = zext i32 %37 to i64, !dbg !10345
  %add.ptr39 = getelementptr inbounds i8, i8* %38, i64 %idx.ext38, !dbg !10345
  store i8* %add.ptr39, i8** %src.addr, align 8, !dbg !10345
  %blocksize40 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10346
  %39 = load i32, i32* %blocksize40, align 4, !dbg !10346
  %40 = load i32, i32* %srclen, align 4, !dbg !10347
  %sub41 = sub i32 %40, %39, !dbg !10347
  store i32 %sub41, i32* %srclen, align 4, !dbg !10347
  %blocksize42 = getelementptr inbounds %struct.WvHeader, %struct.WvHeader* %header, i32 0, i32 0, !dbg !10348
  %41 = load i32, i32* %blocksize42, align 4, !dbg !10348
  %42 = load i32, i32* %offset, align 4, !dbg !10349
  %add43 = add i32 %42, %41, !dbg !10349
  store i32 %add43, i32* %offset, align 4, !dbg !10349
  br label %while.cond, !dbg !10350, !llvm.loop !10352

while.end:                                        ; preds = %while.cond
  %43 = load i8*, i8** %dst, align 8, !dbg !10353
  %44 = load i8**, i8*** %pdst.addr, align 8, !dbg !10354
  store i8* %43, i8** %44, align 8, !dbg !10355
  %45 = load i32, i32* %offset, align 4, !dbg !10356
  %46 = load i32*, i32** %size.addr, align 8, !dbg !10357
  store i32 %45, i32* %46, align 4, !dbg !10358
  store i32 0, i32* %retval, align 4, !dbg !10359
  br label %return, !dbg !10359

fail:                                             ; preds = %if.then9, %if.then5
  %47 = bitcast i8** %dst to i8*, !dbg !10360
  call void @av_freep(i8* %47), !dbg !10361
  %48 = load i32, i32* %ret, align 4, !dbg !10362
  store i32 %48, i32* %retval, align 4, !dbg !10363
  br label %return, !dbg !10363

return:                                           ; preds = %fail, %while.end, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !10364
  ret i32 %49, !dbg !10364
}

declare void @avio_wb16(%struct.AVIOContext*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @put_ebml_sint(%struct.AVIOContext* %pb, i32 %elementid, i64 %val) #0 !dbg !10365 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %elementid.addr = alloca i32, align 4
  %val.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %bytes = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !10368, metadata !2445), !dbg !10369
  store i32 %elementid, i32* %elementid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elementid.addr, metadata !10370, metadata !2445), !dbg !10371
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !10372, metadata !2445), !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10374, metadata !2445), !dbg !10375
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !10376, metadata !2445), !dbg !10377
  store i32 1, i32* %bytes, align 4, !dbg !10377
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !10378, metadata !2445), !dbg !10379
  %0 = load i64, i64* %val.addr, align 8, !dbg !10380
  %cmp = icmp slt i64 %0, 0, !dbg !10381
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10380

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %val.addr, align 8, !dbg !10382
  %xor = xor i64 %1, -1, !dbg !10384
  br label %cond.end, !dbg !10385

cond.false:                                       ; preds = %entry
  %2 = load i64, i64* %val.addr, align 8, !dbg !10386
  br label %cond.end, !dbg !10388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %xor, %cond.true ], [ %2, %cond.false ], !dbg !10389
  %mul = mul nsw i64 2, %cond, !dbg !10391
  store i64 %mul, i64* %tmp, align 8, !dbg !10392
  br label %while.cond, !dbg !10393

while.cond:                                       ; preds = %while.body, %cond.end
  %3 = load i64, i64* %tmp, align 8, !dbg !10394
  %shr = lshr i64 %3, 8, !dbg !10394
  store i64 %shr, i64* %tmp, align 8, !dbg !10394
  %tobool = icmp ne i64 %shr, 0, !dbg !10395
  br i1 %tobool, label %while.body, label %while.end, !dbg !10395

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %bytes, align 4, !dbg !10396
  %inc = add nsw i32 %4, 1, !dbg !10396
  store i32 %inc, i32* %bytes, align 4, !dbg !10396
  br label %while.cond, !dbg !10397, !llvm.loop !10398

while.end:                                        ; preds = %while.cond
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10399
  %6 = load i32, i32* %elementid.addr, align 4, !dbg !10400
  call void @put_ebml_id(%struct.AVIOContext* %5, i32 %6), !dbg !10401
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10402
  %8 = load i32, i32* %bytes, align 4, !dbg !10403
  %conv = sext i32 %8 to i64, !dbg !10403
  call void @put_ebml_num(%struct.AVIOContext* %7, i64 %conv, i32 0), !dbg !10404
  %9 = load i32, i32* %bytes, align 4, !dbg !10405
  %sub = sub nsw i32 %9, 1, !dbg !10407
  store i32 %sub, i32* %i, align 4, !dbg !10408
  br label %for.cond, !dbg !10409

for.cond:                                         ; preds = %for.inc, %while.end
  %10 = load i32, i32* %i, align 4, !dbg !10410
  %cmp1 = icmp sge i32 %10, 0, !dbg !10413
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10414

for.body:                                         ; preds = %for.cond
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !10415
  %12 = load i64, i64* %val.addr, align 8, !dbg !10416
  %13 = load i32, i32* %i, align 4, !dbg !10417
  %mul3 = mul nsw i32 %13, 8, !dbg !10418
  %sh_prom = zext i32 %mul3 to i64, !dbg !10419
  %shr4 = ashr i64 %12, %sh_prom, !dbg !10419
  %conv5 = trunc i64 %shr4 to i8, !dbg !10420
  %conv6 = zext i8 %conv5 to i32, !dbg !10420
  call void @avio_w8(%struct.AVIOContext* %11, i32 %conv6), !dbg !10421
  br label %for.inc, !dbg !10421

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !10422
  %dec = add nsw i32 %14, -1, !dbg !10422
  store i32 %dec, i32* %i, align 4, !dbg !10422
  br label %for.cond, !dbg !10424, !llvm.loop !10425

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10427
}

declare i32 @ff_wv_parse_header(%struct.WvHeader*, i8*) #1

declare i32 @avio_printf(%struct.AVIOContext*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i64 @mkv_write_cues(%struct.AVFormatContext* %s, %struct.mkv_cues* %cues, %struct.mkv_track* %tracks, i32 %num_tracks) #0 !dbg !10428 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2441, metadata !2445), !dbg !10431
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %cues.addr = alloca %struct.mkv_cues*, align 8
  %tracks.addr = alloca %struct.mkv_track*, align 8
  %num_tracks.addr = alloca i32, align 4
  %mkv = alloca %struct.MatroskaMuxContext*, align 8
  %dyn_cp = alloca %struct.AVIOContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %cues_element = alloca %struct.ebml_master, align 8
  %currentpos = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %cuepoint = alloca %struct.ebml_master, align 8
  %track_positions = alloca %struct.ebml_master, align 8
  %entry5 = alloca %struct.mkv_cuepoint*, align 8
  %pts = alloca i64, align 8
  %ctp_nb = alloca i32, align 4
  %tracknum = alloca i32, align 4
  %coerce = alloca %struct.ebml_master, align 8
  %tracknum73 = alloca i32, align 4
  %coerce104 = alloca %struct.ebml_master, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !10433, metadata !2445), !dbg !10434
  store %struct.mkv_cues* %cues, %struct.mkv_cues** %cues.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mkv_cues** %cues.addr, metadata !10435, metadata !2445), !dbg !10436
  store %struct.mkv_track* %tracks, %struct.mkv_track** %tracks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mkv_track** %tracks.addr, metadata !10437, metadata !2445), !dbg !10438
  store i32 %num_tracks, i32* %num_tracks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_tracks.addr, metadata !10439, metadata !2445), !dbg !10440
  call void @llvm.dbg.declare(metadata %struct.MatroskaMuxContext** %mkv, metadata !10441, metadata !2445), !dbg !10442
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10443
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !10444
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10444
  %2 = bitcast i8* %1 to %struct.MatroskaMuxContext*, !dbg !10443
  store %struct.MatroskaMuxContext* %2, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10442
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_cp, metadata !10445, metadata !2445), !dbg !10446
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !10447, metadata !2445), !dbg !10448
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10449
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !10450
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !10450
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !10448
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %cues_element, metadata !10451, metadata !2445), !dbg !10452
  call void @llvm.dbg.declare(metadata i64* %currentpos, metadata !10453, metadata !2445), !dbg !10454
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10455, metadata !2445), !dbg !10456
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10457, metadata !2445), !dbg !10458
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10459, metadata !2445), !dbg !10460
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10461
  store %struct.AVIOContext* %5, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10462
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10463
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #11, !dbg !10464
  store i64 %call.i, i64* %currentpos, align 8, !dbg !10465
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10466
  %8 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10467
  %call2 = call i32 @start_ebml_master_crc32(%struct.AVIOContext* %7, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %8, %struct.ebml_master* %cues_element, i32 475249515, i64 0), !dbg !10468
  store i32 %call2, i32* %ret, align 4, !dbg !10469
  %9 = load i32, i32* %ret, align 4, !dbg !10470
  %cmp = icmp slt i32 %9, 0, !dbg !10472
  br i1 %cmp, label %if.then, label %if.end, !dbg !10473

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !10474
  %conv = sext i32 %10 to i64, !dbg !10474
  store i64 %conv, i64* %retval, align 8, !dbg !10475
  br label %return, !dbg !10475

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10476
  br label %for.cond, !dbg !10478

for.cond:                                         ; preds = %for.inc127, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10479
  %12 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10482
  %num_entries = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %12, i32 0, i32 2, !dbg !10483
  %13 = load i32, i32* %num_entries, align 8, !dbg !10483
  %cmp3 = icmp slt i32 %11, %13, !dbg !10484
  br i1 %cmp3, label %for.body, label %for.end129, !dbg !10485

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %cuepoint, metadata !10486, metadata !2445), !dbg !10488
  call void @llvm.dbg.declare(metadata %struct.ebml_master* %track_positions, metadata !10489, metadata !2445), !dbg !10490
  call void @llvm.dbg.declare(metadata %struct.mkv_cuepoint** %entry5, metadata !10491, metadata !2445), !dbg !10492
  %14 = load i32, i32* %i, align 4, !dbg !10493
  %idxprom = sext i32 %14 to i64, !dbg !10494
  %15 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10494
  %entries = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %15, i32 0, i32 1, !dbg !10495
  %16 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entries, align 8, !dbg !10495
  %arrayidx = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %16, i64 %idxprom, !dbg !10494
  store %struct.mkv_cuepoint* %arrayidx, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10492
  call void @llvm.dbg.declare(metadata i64* %pts, metadata !10496, metadata !2445), !dbg !10497
  %17 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10498
  %pts6 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %17, i32 0, i32 0, !dbg !10499
  %18 = load i64, i64* %pts6, align 8, !dbg !10499
  store i64 %18, i64* %pts, align 8, !dbg !10497
  call void @llvm.dbg.declare(metadata i32* %ctp_nb, metadata !10500, metadata !2445), !dbg !10501
  store i32 0, i32* %ctp_nb, align 4, !dbg !10501
  store i32 0, i32* %j, align 4, !dbg !10502
  br label %for.cond7, !dbg !10504

for.cond7:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %j, align 4, !dbg !10505
  %20 = load i32, i32* %num_tracks.addr, align 4, !dbg !10508
  %cmp8 = icmp slt i32 %19, %20, !dbg !10509
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !10510

for.body10:                                       ; preds = %for.cond7
  %21 = load i32, i32* %j, align 4, !dbg !10511
  %idxprom11 = sext i32 %21 to i64, !dbg !10512
  %22 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10512
  %arrayidx12 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %22, i64 %idxprom11, !dbg !10512
  %has_cue = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx12, i32 0, i32 1, !dbg !10513
  store i32 0, i32* %has_cue, align 4, !dbg !10514
  br label %for.inc, !dbg !10512

for.inc:                                          ; preds = %for.body10
  %23 = load i32, i32* %j, align 4, !dbg !10515
  %inc = add nsw i32 %23, 1, !dbg !10515
  store i32 %inc, i32* %j, align 4, !dbg !10515
  br label %for.cond7, !dbg !10517, !llvm.loop !10518

for.end:                                          ; preds = %for.cond7
  store i32 0, i32* %j, align 4, !dbg !10520
  br label %for.cond13, !dbg !10522

for.cond13:                                       ; preds = %for.inc45, %for.end
  %24 = load i32, i32* %j, align 4, !dbg !10523
  %25 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10526
  %num_entries14 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %25, i32 0, i32 2, !dbg !10527
  %26 = load i32, i32* %num_entries14, align 8, !dbg !10527
  %27 = load i32, i32* %i, align 4, !dbg !10528
  %sub = sub nsw i32 %26, %27, !dbg !10529
  %cmp15 = icmp slt i32 %24, %sub, !dbg !10530
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !10531

land.rhs:                                         ; preds = %for.cond13
  %28 = load i32, i32* %j, align 4, !dbg !10532
  %idxprom17 = sext i32 %28 to i64, !dbg !10534
  %29 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10534
  %arrayidx18 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %29, i64 %idxprom17, !dbg !10534
  %pts19 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx18, i32 0, i32 0, !dbg !10535
  %30 = load i64, i64* %pts19, align 8, !dbg !10535
  %31 = load i64, i64* %pts, align 8, !dbg !10536
  %cmp20 = icmp eq i64 %30, %31, !dbg !10537
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond13
  %32 = phi i1 [ false, %for.cond13 ], [ %cmp20, %land.rhs ]
  br i1 %32, label %for.body22, label %for.end47, !dbg !10538

for.body22:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %tracknum, metadata !10540, metadata !2445), !dbg !10542
  %33 = load i32, i32* %j, align 4, !dbg !10543
  %idxprom23 = sext i32 %33 to i64, !dbg !10544
  %34 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10544
  %arrayidx24 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %34, i64 %idxprom23, !dbg !10544
  %stream_idx = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx24, i32 0, i32 1, !dbg !10545
  %35 = load i32, i32* %stream_idx, align 8, !dbg !10545
  store i32 %35, i32* %tracknum, align 4, !dbg !10542
  br label %do.body, !dbg !10546, !llvm.loop !10547

do.body:                                          ; preds = %for.body22
  %36 = load i32, i32* %tracknum, align 4, !dbg !10548
  %cmp25 = icmp sge i32 %36, 0, !dbg !10552
  br i1 %cmp25, label %land.lhs.true, label %if.then29, !dbg !10553

land.lhs.true:                                    ; preds = %do.body
  %37 = load i32, i32* %tracknum, align 4, !dbg !10554
  %38 = load i32, i32* %num_tracks.addr, align 4, !dbg !10556
  %cmp27 = icmp slt i32 %37, %38, !dbg !10557
  br i1 %cmp27, label %if.end30, label %if.then29, !dbg !10558

if.then29:                                        ; preds = %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 601), !dbg !10559
  call void @abort() #12, !dbg !10562
  unreachable, !dbg !10564

if.end30:                                         ; preds = %land.lhs.true
  br label %do.end, !dbg !10565

do.end:                                           ; preds = %if.end30
  %39 = load i32, i32* %tracknum, align 4, !dbg !10567
  %idxprom31 = sext i32 %39 to i64, !dbg !10569
  %40 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10569
  %arrayidx32 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %40, i64 %idxprom31, !dbg !10569
  %has_cue33 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx32, i32 0, i32 1, !dbg !10570
  %41 = load i32, i32* %has_cue33, align 4, !dbg !10570
  %tobool = icmp ne i32 %41, 0, !dbg !10569
  br i1 %tobool, label %land.lhs.true34, label %if.end40, !dbg !10571

land.lhs.true34:                                  ; preds = %do.end
  %42 = load i32, i32* %tracknum, align 4, !dbg !10572
  %idxprom35 = sext i32 %42 to i64, !dbg !10574
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10574
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 7, !dbg !10575
  %44 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !10575
  %arrayidx36 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %44, i64 %idxprom35, !dbg !10574
  %45 = load %struct.AVStream*, %struct.AVStream** %arrayidx36, align 8, !dbg !10574
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %45, i32 0, i32 19, !dbg !10576
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !10576
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i32 0, i32 0, !dbg !10577
  %47 = load i32, i32* %codec_type, align 8, !dbg !10577
  %cmp37 = icmp ne i32 %47, 3, !dbg !10578
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !10579

if.then39:                                        ; preds = %land.lhs.true34
  br label %for.inc45, !dbg !10580

if.end40:                                         ; preds = %land.lhs.true34, %do.end
  %48 = load i32, i32* %tracknum, align 4, !dbg !10581
  %idxprom41 = sext i32 %48 to i64, !dbg !10582
  %49 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10582
  %arrayidx42 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %49, i64 %idxprom41, !dbg !10582
  %has_cue43 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx42, i32 0, i32 1, !dbg !10583
  store i32 1, i32* %has_cue43, align 4, !dbg !10584
  %50 = load i32, i32* %ctp_nb, align 4, !dbg !10585
  %inc44 = add nsw i32 %50, 1, !dbg !10585
  store i32 %inc44, i32* %ctp_nb, align 4, !dbg !10585
  br label %for.inc45, !dbg !10586

for.inc45:                                        ; preds = %if.end40, %if.then39
  %51 = load i32, i32* %j, align 4, !dbg !10587
  %inc46 = add nsw i32 %51, 1, !dbg !10587
  store i32 %inc46, i32* %j, align 4, !dbg !10587
  br label %for.cond13, !dbg !10589, !llvm.loop !10590

for.end47:                                        ; preds = %land.end
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10592
  %53 = load i32, i32* %ctp_nb, align 4, !dbg !10593
  %mul = mul nsw i32 42, %53, !dbg !10594
  %add = add nsw i32 12, %mul, !dbg !10595
  %conv48 = sext i32 %add to i64, !dbg !10596
  %call49 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %52, i32 187, i64 %conv48), !dbg !10597
  %54 = bitcast %struct.ebml_master* %coerce to { i64, i32 }*, !dbg !10597
  %55 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 0, !dbg !10597
  %56 = extractvalue { i64, i32 } %call49, 0, !dbg !10597
  store i64 %56, i64* %55, align 8, !dbg !10597
  %57 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 1, !dbg !10597
  %58 = extractvalue { i64, i32 } %call49, 1, !dbg !10597
  store i32 %58, i32* %57, align 8, !dbg !10597
  %59 = bitcast %struct.ebml_master* %cuepoint to i8*, !dbg !10597
  %60 = bitcast %struct.ebml_master* %coerce to i8*, !dbg !10597
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 16, i32 8, i1 false), !dbg !10598
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10600
  %62 = load i64, i64* %pts, align 8, !dbg !10601
  call void @put_ebml_uint(%struct.AVIOContext* %61, i32 179, i64 %62), !dbg !10602
  store i32 0, i32* %j, align 4, !dbg !10603
  br label %for.cond50, !dbg !10605

for.cond50:                                       ; preds = %for.inc57, %for.end47
  %63 = load i32, i32* %j, align 4, !dbg !10606
  %64 = load i32, i32* %num_tracks.addr, align 4, !dbg !10609
  %cmp51 = icmp slt i32 %63, %64, !dbg !10610
  br i1 %cmp51, label %for.body53, label %for.end59, !dbg !10611

for.body53:                                       ; preds = %for.cond50
  %65 = load i32, i32* %j, align 4, !dbg !10612
  %idxprom54 = sext i32 %65 to i64, !dbg !10613
  %66 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10613
  %arrayidx55 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %66, i64 %idxprom54, !dbg !10613
  %has_cue56 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx55, i32 0, i32 1, !dbg !10614
  store i32 0, i32* %has_cue56, align 4, !dbg !10615
  br label %for.inc57, !dbg !10613

for.inc57:                                        ; preds = %for.body53
  %67 = load i32, i32* %j, align 4, !dbg !10616
  %inc58 = add nsw i32 %67, 1, !dbg !10616
  store i32 %inc58, i32* %j, align 4, !dbg !10616
  br label %for.cond50, !dbg !10618, !llvm.loop !10619

for.end59:                                        ; preds = %for.cond50
  store i32 0, i32* %j, align 4, !dbg !10621
  br label %for.cond60, !dbg !10623

for.cond60:                                       ; preds = %for.inc122, %for.end59
  %68 = load i32, i32* %j, align 4, !dbg !10624
  %69 = load %struct.mkv_cues*, %struct.mkv_cues** %cues.addr, align 8, !dbg !10627
  %num_entries61 = getelementptr inbounds %struct.mkv_cues, %struct.mkv_cues* %69, i32 0, i32 2, !dbg !10628
  %70 = load i32, i32* %num_entries61, align 8, !dbg !10628
  %71 = load i32, i32* %i, align 4, !dbg !10629
  %sub62 = sub nsw i32 %70, %71, !dbg !10630
  %cmp63 = icmp slt i32 %68, %sub62, !dbg !10631
  br i1 %cmp63, label %land.rhs65, label %land.end71, !dbg !10632

land.rhs65:                                       ; preds = %for.cond60
  %72 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom66 = sext i32 %72 to i64, !dbg !10635
  %73 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10635
  %arrayidx67 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %73, i64 %idxprom66, !dbg !10635
  %pts68 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx67, i32 0, i32 0, !dbg !10636
  %74 = load i64, i64* %pts68, align 8, !dbg !10636
  %75 = load i64, i64* %pts, align 8, !dbg !10637
  %cmp69 = icmp eq i64 %74, %75, !dbg !10638
  br label %land.end71

land.end71:                                       ; preds = %land.rhs65, %for.cond60
  %76 = phi i1 [ false, %for.cond60 ], [ %cmp69, %land.rhs65 ]
  br i1 %76, label %for.body72, label %for.end124, !dbg !10639

for.body72:                                       ; preds = %land.end71
  call void @llvm.dbg.declare(metadata i32* %tracknum73, metadata !10641, metadata !2445), !dbg !10643
  %77 = load i32, i32* %j, align 4, !dbg !10644
  %idxprom74 = sext i32 %77 to i64, !dbg !10645
  %78 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10645
  %arrayidx75 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %78, i64 %idxprom74, !dbg !10645
  %stream_idx76 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx75, i32 0, i32 1, !dbg !10646
  %79 = load i32, i32* %stream_idx76, align 8, !dbg !10646
  store i32 %79, i32* %tracknum73, align 4, !dbg !10643
  br label %do.body77, !dbg !10647, !llvm.loop !10648

do.body77:                                        ; preds = %for.body72
  %80 = load i32, i32* %tracknum73, align 4, !dbg !10649
  %cmp78 = icmp sge i32 %80, 0, !dbg !10653
  br i1 %cmp78, label %land.lhs.true80, label %if.then83, !dbg !10654

land.lhs.true80:                                  ; preds = %do.body77
  %81 = load i32, i32* %tracknum73, align 4, !dbg !10655
  %82 = load i32, i32* %num_tracks.addr, align 4, !dbg !10657
  %cmp81 = icmp slt i32 %81, %82, !dbg !10658
  br i1 %cmp81, label %if.end84, label %if.then83, !dbg !10659

if.then83:                                        ; preds = %land.lhs.true80, %do.body77
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i32 0, i32 0), i32 617), !dbg !10660
  call void @abort() #12, !dbg !10663
  unreachable, !dbg !10665

if.end84:                                         ; preds = %land.lhs.true80
  br label %do.end85, !dbg !10666

do.end85:                                         ; preds = %if.end84
  %83 = load i32, i32* %tracknum73, align 4, !dbg !10668
  %idxprom86 = sext i32 %83 to i64, !dbg !10670
  %84 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10670
  %arrayidx87 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %84, i64 %idxprom86, !dbg !10670
  %has_cue88 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx87, i32 0, i32 1, !dbg !10671
  %85 = load i32, i32* %has_cue88, align 4, !dbg !10671
  %tobool89 = icmp ne i32 %85, 0, !dbg !10670
  br i1 %tobool89, label %land.lhs.true90, label %if.end99, !dbg !10672

land.lhs.true90:                                  ; preds = %do.end85
  %86 = load i32, i32* %tracknum73, align 4, !dbg !10673
  %idxprom91 = sext i32 %86 to i64, !dbg !10675
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !10675
  %streams92 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %87, i32 0, i32 7, !dbg !10676
  %88 = load %struct.AVStream**, %struct.AVStream*** %streams92, align 8, !dbg !10676
  %arrayidx93 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %88, i64 %idxprom91, !dbg !10675
  %89 = load %struct.AVStream*, %struct.AVStream** %arrayidx93, align 8, !dbg !10675
  %codecpar94 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %89, i32 0, i32 19, !dbg !10677
  %90 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar94, align 8, !dbg !10677
  %codec_type95 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %90, i32 0, i32 0, !dbg !10678
  %91 = load i32, i32* %codec_type95, align 8, !dbg !10678
  %cmp96 = icmp ne i32 %91, 3, !dbg !10679
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10680

if.then98:                                        ; preds = %land.lhs.true90
  br label %for.inc122, !dbg !10681

if.end99:                                         ; preds = %land.lhs.true90, %do.end85
  %92 = load i32, i32* %tracknum73, align 4, !dbg !10682
  %idxprom100 = sext i32 %92 to i64, !dbg !10683
  %93 = load %struct.mkv_track*, %struct.mkv_track** %tracks.addr, align 8, !dbg !10683
  %arrayidx101 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %93, i64 %idxprom100, !dbg !10683
  %has_cue102 = getelementptr inbounds %struct.mkv_track, %struct.mkv_track* %arrayidx101, i32 0, i32 1, !dbg !10684
  store i32 1, i32* %has_cue102, align 4, !dbg !10685
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10686
  %call103 = call { i64, i32 } @start_ebml_master(%struct.AVIOContext* %94, i32 183, i64 42), !dbg !10687
  %95 = bitcast %struct.ebml_master* %coerce104 to { i64, i32 }*, !dbg !10687
  %96 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %95, i32 0, i32 0, !dbg !10687
  %97 = extractvalue { i64, i32 } %call103, 0, !dbg !10687
  store i64 %97, i64* %96, align 8, !dbg !10687
  %98 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %95, i32 0, i32 1, !dbg !10687
  %99 = extractvalue { i64, i32 } %call103, 1, !dbg !10687
  store i32 %99, i32* %98, align 8, !dbg !10687
  %100 = bitcast %struct.ebml_master* %track_positions to i8*, !dbg !10687
  %101 = bitcast %struct.ebml_master* %coerce104 to i8*, !dbg !10687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 16, i32 8, i1 false), !dbg !10688
  %102 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10690
  %103 = load i32, i32* %j, align 4, !dbg !10691
  %idxprom105 = sext i32 %103 to i64, !dbg !10692
  %104 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10692
  %arrayidx106 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %104, i64 %idxprom105, !dbg !10692
  %tracknum107 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx106, i32 0, i32 2, !dbg !10693
  %105 = load i32, i32* %tracknum107, align 4, !dbg !10693
  %conv108 = sext i32 %105 to i64, !dbg !10692
  call void @put_ebml_uint(%struct.AVIOContext* %102, i32 247, i64 %conv108), !dbg !10694
  %106 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10695
  %107 = load i32, i32* %j, align 4, !dbg !10696
  %idxprom109 = sext i32 %107 to i64, !dbg !10697
  %108 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10697
  %arrayidx110 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %108, i64 %idxprom109, !dbg !10697
  %cluster_pos = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx110, i32 0, i32 3, !dbg !10698
  %109 = load i64, i64* %cluster_pos, align 8, !dbg !10698
  call void @put_ebml_uint(%struct.AVIOContext* %106, i32 241, i64 %109), !dbg !10699
  %110 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10700
  %111 = load i32, i32* %j, align 4, !dbg !10701
  %idxprom111 = sext i32 %111 to i64, !dbg !10702
  %112 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10702
  %arrayidx112 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %112, i64 %idxprom111, !dbg !10702
  %relative_pos = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx112, i32 0, i32 4, !dbg !10703
  %113 = load i64, i64* %relative_pos, align 8, !dbg !10703
  call void @put_ebml_uint(%struct.AVIOContext* %110, i32 240, i64 %113), !dbg !10704
  %114 = load i32, i32* %j, align 4, !dbg !10705
  %idxprom113 = sext i32 %114 to i64, !dbg !10707
  %115 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10707
  %arrayidx114 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %115, i64 %idxprom113, !dbg !10707
  %duration = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx114, i32 0, i32 5, !dbg !10708
  %116 = load i64, i64* %duration, align 8, !dbg !10708
  %cmp115 = icmp ne i64 %116, -1, !dbg !10709
  br i1 %cmp115, label %if.then117, label %if.end121, !dbg !10710

if.then117:                                       ; preds = %if.end99
  %117 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10711
  %118 = load i32, i32* %j, align 4, !dbg !10712
  %idxprom118 = sext i32 %118 to i64, !dbg !10713
  %119 = load %struct.mkv_cuepoint*, %struct.mkv_cuepoint** %entry5, align 8, !dbg !10713
  %arrayidx119 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %119, i64 %idxprom118, !dbg !10713
  %duration120 = getelementptr inbounds %struct.mkv_cuepoint, %struct.mkv_cuepoint* %arrayidx119, i32 0, i32 5, !dbg !10714
  %120 = load i64, i64* %duration120, align 8, !dbg !10714
  call void @put_ebml_uint(%struct.AVIOContext* %117, i32 178, i64 %120), !dbg !10715
  br label %if.end121, !dbg !10715

if.end121:                                        ; preds = %if.then117, %if.end99
  %121 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10716
  %122 = bitcast %struct.ebml_master* %track_positions to { i64, i32 }*, !dbg !10717
  %123 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %122, i32 0, i32 0, !dbg !10717
  %124 = load i64, i64* %123, align 8, !dbg !10717
  %125 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %122, i32 0, i32 1, !dbg !10717
  %126 = load i32, i32* %125, align 8, !dbg !10717
  call void @end_ebml_master(%struct.AVIOContext* %121, i64 %124, i32 %126), !dbg !10717
  br label %for.inc122, !dbg !10718

for.inc122:                                       ; preds = %if.end121, %if.then98
  %127 = load i32, i32* %j, align 4, !dbg !10719
  %inc123 = add nsw i32 %127, 1, !dbg !10719
  store i32 %inc123, i32* %j, align 4, !dbg !10719
  br label %for.cond60, !dbg !10721, !llvm.loop !10722

for.end124:                                       ; preds = %land.end71
  %128 = load i32, i32* %j, align 4, !dbg !10724
  %sub125 = sub nsw i32 %128, 1, !dbg !10725
  %129 = load i32, i32* %i, align 4, !dbg !10726
  %add126 = add nsw i32 %129, %sub125, !dbg !10726
  store i32 %add126, i32* %i, align 4, !dbg !10726
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_cp, align 8, !dbg !10727
  %131 = bitcast %struct.ebml_master* %cuepoint to { i64, i32 }*, !dbg !10728
  %132 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %131, i32 0, i32 0, !dbg !10728
  %133 = load i64, i64* %132, align 8, !dbg !10728
  %134 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %131, i32 0, i32 1, !dbg !10728
  %135 = load i32, i32* %134, align 8, !dbg !10728
  call void @end_ebml_master(%struct.AVIOContext* %130, i64 %133, i32 %135), !dbg !10728
  br label %for.inc127, !dbg !10729

for.inc127:                                       ; preds = %for.end124
  %136 = load i32, i32* %i, align 4, !dbg !10730
  %inc128 = add nsw i32 %136, 1, !dbg !10730
  store i32 %inc128, i32* %i, align 4, !dbg !10730
  br label %for.cond, !dbg !10732, !llvm.loop !10733

for.end129:                                       ; preds = %for.cond
  %137 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10735
  %138 = load %struct.MatroskaMuxContext*, %struct.MatroskaMuxContext** %mkv, align 8, !dbg !10736
  %139 = bitcast %struct.ebml_master* %cues_element to { i64, i32 }*, !dbg !10737
  %140 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %139, i32 0, i32 0, !dbg !10737
  %141 = load i64, i64* %140, align 8, !dbg !10737
  %142 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %139, i32 0, i32 1, !dbg !10737
  %143 = load i32, i32* %142, align 8, !dbg !10737
  call void @end_ebml_master_crc32(%struct.AVIOContext* %137, %struct.AVIOContext** %dyn_cp, %struct.MatroskaMuxContext* %138, i64 %141, i32 %143), !dbg !10737
  %144 = load i64, i64* %currentpos, align 8, !dbg !10738
  store i64 %144, i64* %retval, align 8, !dbg !10739
  br label %return, !dbg !10739

return:                                           ; preds = %for.end129, %if.then
  %145 = load i64, i64* %retval, align 8, !dbg !10740
  ret i64 %145, !dbg !10740
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind
declare double @fmod(double, double) #9

declare i32 @avcodec_get_type(i32) #1

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #1

declare i32 @ff_stream_add_bitstream_filter(%struct.AVStream*, i8*, i8*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2432, !2433}
!llvm.ident = !{!2434}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1033, globals: !1124)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskaenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !463, !485, !506, !536, !545, !555, !755, !772, !778, !788, !812, !818, !836, !860, !879, !889, !897, !909, !918, !927, !933, !938, !950, !961, !968, !973, !981, !999, !1010, !1015, !1021, !1027}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !537, line: 111, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!538 = !{!539, !540, !541, !542, !543, !544}
!539 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!540 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!541 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!542 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!543 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!544 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!545 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !546, line: 199, size: 32, align: 32, elements: !547)
!546 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!547 = !{!548, !549, !550, !551, !552, !553, !554}
!548 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!549 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!550 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!551 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!552 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!553 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!554 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !556, line: 64, size: 32, align: 32, elements: !557)
!556 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754}
!558 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!559 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!560 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!561 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!567 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!568 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!569 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!570 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!574 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!575 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!576 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!579 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!580 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!581 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!582 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!583 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!584 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!585 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!586 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!587 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!588 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!589 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!593 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!594 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!595 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!596 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!597 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!598 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!599 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!600 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!601 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!602 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!603 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!604 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!605 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!606 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!613 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!614 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!615 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!616 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!617 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!619 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!621 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!624 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!625 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!635 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!636 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!642 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!663 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!664 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!665 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!666 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!667 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!668 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!669 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!670 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!676 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!679 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!681 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!682 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!683 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!684 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!685 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!686 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!688 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!694 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!695 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!696 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!697 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!704 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!705 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!706 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!707 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!708 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!709 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!714 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!715 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!716 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!721 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!722 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!723 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!724 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!725 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!726 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!727 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!728 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!729 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!730 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!732 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!733 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!734 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!735 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!736 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!737 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!738 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!739 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!740 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!741 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!742 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!743 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!744 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!745 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!750 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!751 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!752 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!753 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!754 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !756, line: 58, size: 32, align: 32, elements: !757)
!756 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!757 = !{!758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!758 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!759 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!760 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!761 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!762 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!763 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!764 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!765 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!766 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!767 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!768 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!769 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!770 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!771 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !773)
!773 = !{!774, !775, !776, !777}
!774 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!775 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!776 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!777 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!778 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !546, line: 272, size: 32, align: 32, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787}
!780 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!781 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!782 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!783 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!784 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!785 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!786 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!787 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!788 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !789, line: 48, size: 32, align: 32, elements: !790)
!789 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!791 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!803 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!804 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!805 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!806 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!807 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!808 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!809 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!810 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!811 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !556, line: 516, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817}
!814 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!816 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!817 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!818 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !556, line: 440, size: 32, align: 32, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!820 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!821 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!822 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!823 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!824 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!825 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!826 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!827 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!828 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!829 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!830 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!831 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!832 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!833 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!834 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!835 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !556, line: 464, size: 32, align: 32, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859}
!838 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!839 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!840 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!841 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!842 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!843 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!844 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!846 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!847 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!848 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!849 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!850 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!851 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!852 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!853 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!854 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!855 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!856 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!857 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!858 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!859 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !556, line: 493, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878}
!862 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!864 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!865 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!866 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!867 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!868 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!869 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!870 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!871 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!872 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!873 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!874 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!875 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!876 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!877 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!878 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !556, line: 538, size: 32, align: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !888}
!881 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!882 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!883 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!884 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!885 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!886 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!887 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!888 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 49, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948, !949}
!941 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!942 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!943 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!944 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!945 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!946 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!947 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!948 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!949 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 267, size: 32, align: 32, elements: !952)
!951 = !DIFile(filename: "libavformat/matroska.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!952 = !{!953, !954, !955, !956, !957, !958, !959, !960}
!953 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_NONE", value: 0)
!954 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_VIDEO", value: 1)
!955 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_AUDIO", value: 2)
!956 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_COMPLEX", value: 3)
!957 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_LOGO", value: 16)
!958 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_SUBTITLE", value: 17)
!959 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_CONTROL", value: 32)
!960 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_METADATA", value: 33)
!961 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 319, size: 32, align: 32, elements: !962)
!962 = !{!963, !964, !965, !966, !967}
!963 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_PIXELS", value: 0)
!964 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_CENTIMETERS", value: 1)
!965 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_INCHES", value: 2)
!966 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_DAR", value: 3)
!967 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_UNKNOWN", value: 4)
!968 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 285, size: 32, align: 32, elements: !969)
!969 = !{!970, !971, !972}
!970 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_UNDETERMINED", value: 0)
!971 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_INTERLACED", value: 1)
!972 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_PROGRESSIVE", value: 2)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 291, size: 32, align: 32, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980}
!975 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_PROGRESSIVE", value: 0)
!976 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_UNDETERMINED", value: 2)
!977 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_TT", value: 1)
!978 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_BB", value: 6)
!979 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_TB", value: 9)
!980 = !DIEnumerator(name: "MATROSKA_VIDEO_FIELDORDER_BT", value: 14)
!981 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 300, size: 32, align: 32, elements: !982)
!982 = !{!983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!983 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_MONO", value: 0)
!984 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT", value: 1)
!985 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTTOM_TOP", value: 2)
!986 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM", value: 3)
!987 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_RL", value: 4)
!988 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR", value: 5)
!989 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_RL", value: 6)
!990 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR", value: 7)
!991 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_RL", value: 8)
!992 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR", value: 9)
!993 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_CYAN_RED", value: 10)
!994 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT", value: 11)
!995 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_GREEN_MAG", value: 12)
!996 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR", value: 13)
!997 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_RL", value: 14)
!998 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_NB", value: 15)
!999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DType", file: !1000, line: 51, size: 32, align: 32, elements: !1001)
!1000 = !DIFile(filename: "./libavutil/stereo3d.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!1002 = !DIEnumerator(name: "AV_STEREO3D_2D", value: 0)
!1003 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE", value: 1)
!1004 = !DIEnumerator(name: "AV_STEREO3D_TOPBOTTOM", value: 2)
!1005 = !DIEnumerator(name: "AV_STEREO3D_FRAMESEQUENCE", value: 3)
!1006 = !DIEnumerator(name: "AV_STEREO3D_CHECKERBOARD", value: 4)
!1007 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE_QUINCUNX", value: 5)
!1008 = !DIEnumerator(name: "AV_STEREO3D_LINES", value: 6)
!1009 = !DIEnumerator(name: "AV_STEREO3D_COLUMNS", value: 7)
!1010 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DView", file: !1000, line: 147, size: 32, align: 32, elements: !1011)
!1011 = !{!1012, !1013, !1014}
!1012 = !DIEnumerator(name: "AV_STEREO3D_VIEW_PACKED", value: 0)
!1013 = !DIEnumerator(name: "AV_STEREO3D_VIEW_LEFT", value: 1)
!1014 = !DIEnumerator(name: "AV_STEREO3D_VIEW_RIGHT", value: 2)
!1015 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSphericalProjection", file: !1016, line: 51, size: 32, align: 32, elements: !1017)
!1016 = !DIFile(filename: "./libavutil/spherical.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1017 = !{!1018, !1019, !1020}
!1018 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR", value: 0)
!1019 = !DIEnumerator(name: "AV_SPHERICAL_CUBEMAP", value: 1)
!1020 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR_TILE", value: 2)
!1021 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 341, size: 32, align: 32, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026}
!1023 = !DIEnumerator(name: "MATROSKA_VIDEO_PROJECTION_TYPE_RECTANGULAR", value: 0)
!1024 = !DIEnumerator(name: "MATROSKA_VIDEO_PROJECTION_TYPE_EQUIRECTANGULAR", value: 1)
!1025 = !DIEnumerator(name: "MATROSKA_VIDEO_PROJECTION_TYPE_CUBEMAP", value: 2)
!1026 = !DIEnumerator(name: "MATROSKA_VIDEO_PROJECTION_TYPE_MESH", value: 3)
!1027 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVLangCodespace", file: !1028, line: 30, size: 32, align: 32, elements: !1029)
!1028 = !DIFile(filename: "libavformat/avlanguage.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1029 = !{!1030, !1031, !1032}
!1030 = !DIEnumerator(name: "AV_LANG_ISO639_2_BIBL", value: 0)
!1031 = !DIEnumerator(name: "AV_LANG_ISO639_2_TERM", value: 1)
!1032 = !DIEnumerator(name: "AV_LANG_ISO639_1", value: 2)
!1033 = !{!1034, !1042, !1044, !1039, !1045, !1051, !1053, !1054, !1061, !1069, !1092, !1093, !1108, !1050, !1110, !1111, !1113, !1115, !1117}
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !1036, line: 220, size: 64, align: 8, elements: !1037)
!1036 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1035, file: !1036, line: 220, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1040, line: 55, baseType: !1041)
!1040 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1041 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1040, line: 48, baseType: !1043)
!1043 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1036, line: 221, size: 32, align: 8, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1046, file: !1036, line: 221, baseType: !1049, size: 32, align: 32)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1040, line: 51, baseType: !1050)
!1050 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1040, line: 40, baseType: !1052)
!1052 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1053 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStereo3D", file: !1000, line: 191, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStereo3D", file: !1000, line: 176, size: 96, align: 32, elements: !1057)
!1057 = !{!1058, !1059, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1056, file: !1000, line: 180, baseType: !999, size: 32, align: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1056, file: !1000, line: 185, baseType: !1053, size: 32, align: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1056, file: !1000, line: 190, baseType: !1010, size: 32, align: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64, align: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVContentLightMetadata", file: !1064, line: 108, baseType: !1065)
!1064 = !DIFile(filename: "./libavutil/mastering_display_metadata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVContentLightMetadata", file: !1064, line: 98, size: 64, align: 32, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "MaxCLL", scope: !1065, file: !1064, line: 102, baseType: !1050, size: 32, align: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "MaxFALL", scope: !1065, file: !1064, line: 107, baseType: !1050, size: 32, align: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64, align: 64)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVMasteringDisplayMetadata", file: !1064, line: 69, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVMasteringDisplayMetadata", file: !1064, line: 38, size: 704, align: 32, elements: !1073)
!1073 = !{!1074, !1085, !1088, !1089, !1090, !1091}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !1072, file: !1064, line: 42, baseType: !1075, size: 384, align: 32)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 384, align: 32, elements: !1082)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1077, line: 61, baseType: !1078)
!1077 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1077, line: 58, size: 64, align: 32, elements: !1079)
!1079 = !{!1080, !1081}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1078, file: !1077, line: 59, baseType: !1053, size: 32, align: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1078, file: !1077, line: 60, baseType: !1053, size: 32, align: 32, offset: 32)
!1082 = !{!1083, !1084}
!1083 = !DISubrange(count: 3)
!1084 = !DISubrange(count: 2)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !1072, file: !1064, line: 47, baseType: !1086, size: 128, align: 32, offset: 384)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 128, align: 32, elements: !1087)
!1087 = !{!1084}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "min_luminance", scope: !1072, file: !1064, line: 52, baseType: !1076, size: 64, align: 32, offset: 512)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "max_luminance", scope: !1072, file: !1064, line: 57, baseType: !1076, size: 64, align: 32, offset: 576)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "has_primaries", scope: !1072, file: !1064, line: 62, baseType: !1053, size: 32, align: 32, offset: 640)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "has_luminance", scope: !1072, file: !1064, line: 67, baseType: !1053, size: 32, align: 32, offset: 672)
!1092 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSphericalMapping", file: !1016, line: 183, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSphericalMapping", file: !1016, line: 82, size: 288, align: 32, elements: !1097)
!1097 = !{!1098, !1099, !1101, !1102, !1103, !1104, !1105, !1106, !1107}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "projection", scope: !1096, file: !1016, line: 86, baseType: !1015, size: 32, align: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "yaw", scope: !1096, file: !1016, line: 126, baseType: !1100, size: 32, align: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1040, line: 38, baseType: !1053)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1096, file: !1016, line: 127, baseType: !1100, size: 32, align: 32, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1096, file: !1016, line: 128, baseType: !1100, size: 32, align: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "bound_left", scope: !1096, file: !1016, line: 167, baseType: !1049, size: 32, align: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "bound_top", scope: !1096, file: !1016, line: 168, baseType: !1049, size: 32, align: 32, offset: 160)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "bound_right", scope: !1096, file: !1016, line: 169, baseType: !1049, size: 32, align: 32, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "bound_bottom", scope: !1096, file: !1016, line: 170, baseType: !1049, size: 32, align: 32, offset: 224)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1096, file: !1016, line: 182, baseType: !1049, size: 32, align: 32, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1040, line: 37, baseType: !1112)
!1112 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64, align: 64)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1036, line: 222, size: 16, align: 8, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1119, file: !1036, line: 222, baseType: !1122, size: 16, align: 16)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1040, line: 49, baseType: !1123)
!1123 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1124 = !{!1125, !2410, !2411, !2412, !2418, !2420, !2423, !2424, !2430, !2431}
!1125 = distinct !DIGlobalVariable(name: "ff_matroska_muxer", scope: !0, file: !1126, line: 2810, type: !1127, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_matroska_muxer)
!1126 = !DIFile(filename: "libavformat/matroskaenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOutputFormat", file: !919, line: 624, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1129)
!1129 = !{!1130, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1151, !1223, !1225, !1226, !2375, !2376, !2377, !2381, !2385, !2389, !2390, !2395, !2396, !2397, !2398, !2399, !2400, !2404}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1128, file: !919, line: 498, baseType: !1131, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1133)
!1133 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1128, file: !919, line: 504, baseType: !1131, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1128, file: !919, line: 505, baseType: !1131, size: 64, align: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1128, file: !919, line: 506, baseType: !1131, size: 64, align: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1128, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1128, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1128, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1128, file: !919, line: 517, baseType: !1053, size: 32, align: 32, offset: 352)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1128, file: !919, line: 523, baseType: !1142, size: 64, align: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !1147, line: 44, size: 64, align: 32, elements: !1148)
!1147 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1148 = !{!1149, !1150}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1146, file: !1147, line: 45, baseType: !3, size: 32, align: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1146, file: !1147, line: 46, baseType: !1050, size: 32, align: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1128, file: !919, line: 526, baseType: !1152, size: 64, align: 64, offset: 448)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1156)
!1156 = !{!1157, !1158, !1162, !1182, !1183, !1184, !1185, !1189, !1195, !1197, !1201}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1155, file: !486, line: 72, baseType: !1131, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1155, file: !486, line: 78, baseType: !1159, size: 64, align: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!1131, !1044}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1155, file: !486, line: 85, baseType: !1163, size: 64, align: 64, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1178, !1179, !1180, !1181}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !464, line: 247, baseType: !1131, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1165, file: !464, line: 253, baseType: !1131, size: 64, align: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1165, file: !464, line: 259, baseType: !1053, size: 32, align: 32, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1165, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1165, file: !464, line: 271, baseType: !1172, size: 64, align: 64, offset: 192)
!1172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1165, file: !464, line: 265, size: 64, align: 64, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1172, file: !464, line: 266, baseType: !1051, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1172, file: !464, line: 267, baseType: !1092, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1172, file: !464, line: 268, baseType: !1131, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1172, file: !464, line: 270, baseType: !1076, size: 64, align: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1165, file: !464, line: 272, baseType: !1092, size: 64, align: 64, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1165, file: !464, line: 273, baseType: !1092, size: 64, align: 64, offset: 320)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1165, file: !464, line: 275, baseType: !1053, size: 32, align: 32, offset: 384)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1165, file: !464, line: 300, baseType: !1131, size: 64, align: 64, offset: 448)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1155, file: !486, line: 93, baseType: !1053, size: 32, align: 32, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1155, file: !486, line: 99, baseType: !1053, size: 32, align: 32, offset: 224)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1155, file: !486, line: 108, baseType: !1053, size: 32, align: 32, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1155, file: !486, line: 113, baseType: !1186, size: 64, align: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!1044, !1044, !1044}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1155, file: !486, line: 123, baseType: !1190, size: 64, align: 64, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64, align: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!1193, !1193}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1155, file: !486, line: 130, baseType: !1196, size: 32, align: 32, offset: 448)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1155, file: !486, line: 136, baseType: !1198, size: 64, align: 64, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64, align: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!1196, !1044}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1155, file: !486, line: 142, baseType: !1202, size: 64, align: 64, offset: 576)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!1053, !1205, !1044, !1131, !1053}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1208)
!1208 = !{!1209, !1221, !1222}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1207, file: !464, line: 360, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1213, file: !464, line: 307, baseType: !1131, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1213, file: !464, line: 313, baseType: !1092, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1213, file: !464, line: 313, baseType: !1092, size: 64, align: 64, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1213, file: !464, line: 318, baseType: !1092, size: 64, align: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1213, file: !464, line: 318, baseType: !1092, size: 64, align: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1213, file: !464, line: 323, baseType: !1053, size: 32, align: 32, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1207, file: !464, line: 364, baseType: !1053, size: 32, align: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1207, file: !464, line: 368, baseType: !1053, size: 32, align: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1128, file: !919, line: 535, baseType: !1224, size: 64, align: 64, offset: 512)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1128, file: !919, line: 539, baseType: !1053, size: 32, align: 32, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1128, file: !919, line: 541, baseType: !1227, size: 64, align: 64, offset: 640)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1053, !1230}
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1232)
!1232 = !{!1233, !1234, !1329, !1330, !1331, !1394, !1395, !1396, !2229, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2283, !2284, !2285, !2286, !2287, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2338, !2339, !2342, !2343, !2344, !2345, !2346, !2347, !2352, !2353, !2354, !2355, !2363, !2364, !2368, !2372, !2373, !2374}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1231, file: !919, line: 1342, baseType: !1152, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1231, file: !919, line: 1349, baseType: !1235, size: 64, align: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1261, !1262, !1300, !1301, !1305, !1310, !1311, !1312, !1316, !1322, !1328}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !919, line: 638, baseType: !1131, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1236, file: !919, line: 645, baseType: !1131, size: 64, align: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1236, file: !919, line: 652, baseType: !1053, size: 32, align: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1236, file: !919, line: 659, baseType: !1131, size: 64, align: 64, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1236, file: !919, line: 661, baseType: !1142, size: 64, align: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1236, file: !919, line: 663, baseType: !1152, size: 64, align: 64, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1236, file: !919, line: 670, baseType: !1131, size: 64, align: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1236, file: !919, line: 679, baseType: !1235, size: 64, align: 64, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1236, file: !919, line: 684, baseType: !1053, size: 32, align: 32, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1236, file: !919, line: 689, baseType: !1053, size: 32, align: 32, offset: 544)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1236, file: !919, line: 696, baseType: !1249, size: 64, align: 64, offset: 576)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!1053, !1252}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1255)
!1255 = !{!1256, !1257, !1259, !1260}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1254, file: !919, line: 449, baseType: !1131, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1254, file: !919, line: 450, baseType: !1258, size: 64, align: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1254, file: !919, line: 451, baseType: !1053, size: 32, align: 32, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1254, file: !919, line: 452, baseType: !1131, size: 64, align: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1236, file: !919, line: 703, baseType: !1227, size: 64, align: 64, offset: 640)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1236, file: !919, line: 714, baseType: !1263, size: 64, align: 64, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!1053, !1230, !1266}
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1269)
!1269 = !{!1270, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1296, !1297, !1298, !1299}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1268, file: !4, line: 1451, baseType: !1271, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1273, line: 94, baseType: !1274)
!1273 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1273, line: 81, size: 192, align: 64, elements: !1275)
!1275 = !{!1276, !1280, !1281}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1274, file: !1273, line: 82, baseType: !1277, size: 64, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1273, line: 73, baseType: !1279)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1273, line: 73, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1274, file: !1273, line: 89, baseType: !1110, size: 64, align: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1274, file: !1273, line: 93, baseType: !1053, size: 32, align: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1268, file: !4, line: 1461, baseType: !1051, size: 64, align: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1268, file: !4, line: 1467, baseType: !1051, size: 64, align: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1268, file: !4, line: 1468, baseType: !1110, size: 64, align: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1268, file: !4, line: 1469, baseType: !1053, size: 32, align: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1268, file: !4, line: 1470, baseType: !1053, size: 32, align: 32, offset: 288)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1268, file: !4, line: 1474, baseType: !1053, size: 32, align: 32, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1268, file: !4, line: 1479, baseType: !1289, size: 64, align: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1291, file: !4, line: 1412, baseType: !1110, size: 64, align: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1291, file: !4, line: 1413, baseType: !1053, size: 32, align: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1291, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1268, file: !4, line: 1480, baseType: !1053, size: 32, align: 32, offset: 448)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1268, file: !4, line: 1486, baseType: !1051, size: 64, align: 64, offset: 512)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1268, file: !4, line: 1488, baseType: !1051, size: 64, align: 64, offset: 576)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1268, file: !4, line: 1497, baseType: !1051, size: 64, align: 64, offset: 640)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1236, file: !919, line: 720, baseType: !1227, size: 64, align: 64, offset: 768)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1236, file: !919, line: 730, baseType: !1302, size: 64, align: 64, offset: 832)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64, align: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!1053, !1230, !1053, !1051, !1053}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1236, file: !919, line: 737, baseType: !1306, size: 64, align: 64, offset: 896)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!1051, !1230, !1053, !1309, !1051}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1236, file: !919, line: 744, baseType: !1227, size: 64, align: 64, offset: 960)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1236, file: !919, line: 750, baseType: !1227, size: 64, align: 64, offset: 1024)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1236, file: !919, line: 758, baseType: !1313, size: 64, align: 64, offset: 1088)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64, align: 64)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!1053, !1230, !1053, !1051, !1051, !1051, !1053}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1236, file: !919, line: 764, baseType: !1317, size: 64, align: 64, offset: 1152)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1053, !1230, !1320}
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64, align: 64)
!1321 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1236, file: !919, line: 770, baseType: !1323, size: 64, align: 64, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!1053, !1230, !1326}
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1327 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1236, file: !919, line: 776, baseType: !1323, size: 64, align: 64, offset: 1280)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1231, file: !919, line: 1356, baseType: !1224, size: 64, align: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1231, file: !919, line: 1365, baseType: !1044, size: 64, align: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1231, file: !919, line: 1379, baseType: !1332, size: 64, align: 64, offset: 256)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !537, line: 352, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !537, line: 161, size: 2112, align: 64, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340, !1341, !1342, !1346, !1347, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1361, !1362, !1366, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1384, !1385, !1386, !1387, !1391, !1392, !1393}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1334, file: !537, line: 174, baseType: !1152, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1334, file: !537, line: 226, baseType: !1258, size: 64, align: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1334, file: !537, line: 227, baseType: !1053, size: 32, align: 32, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1334, file: !537, line: 228, baseType: !1258, size: 64, align: 64, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1334, file: !537, line: 229, baseType: !1258, size: 64, align: 64, offset: 256)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1334, file: !537, line: 233, baseType: !1044, size: 64, align: 64, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1334, file: !537, line: 235, baseType: !1343, size: 64, align: 64, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!1053, !1044, !1110, !1053}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1334, file: !537, line: 236, baseType: !1343, size: 64, align: 64, offset: 448)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1334, file: !537, line: 237, baseType: !1348, size: 64, align: 64, offset: 512)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!1051, !1044, !1051, !1053}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1334, file: !537, line: 238, baseType: !1051, size: 64, align: 64, offset: 576)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1334, file: !537, line: 239, baseType: !1053, size: 32, align: 32, offset: 640)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1334, file: !537, line: 240, baseType: !1053, size: 32, align: 32, offset: 672)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1334, file: !537, line: 241, baseType: !1053, size: 32, align: 32, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1334, file: !537, line: 242, baseType: !1041, size: 64, align: 64, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1334, file: !537, line: 243, baseType: !1258, size: 64, align: 64, offset: 832)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1334, file: !537, line: 244, baseType: !1358, size: 64, align: 64, offset: 896)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1041, !1041, !1113, !1050}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1334, file: !537, line: 245, baseType: !1053, size: 32, align: 32, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1334, file: !537, line: 249, baseType: !1363, size: 64, align: 64, offset: 1024)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!1053, !1044, !1053}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1334, file: !537, line: 255, baseType: !1367, size: 64, align: 64, offset: 1088)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!1051, !1044, !1053, !1051, !1053}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1334, file: !537, line: 260, baseType: !1053, size: 32, align: 32, offset: 1152)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1334, file: !537, line: 266, baseType: !1051, size: 64, align: 64, offset: 1216)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1334, file: !537, line: 273, baseType: !1053, size: 32, align: 32, offset: 1280)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1334, file: !537, line: 279, baseType: !1051, size: 64, align: 64, offset: 1344)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1334, file: !537, line: 285, baseType: !1053, size: 32, align: 32, offset: 1408)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1334, file: !537, line: 291, baseType: !1053, size: 32, align: 32, offset: 1440)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1334, file: !537, line: 298, baseType: !1053, size: 32, align: 32, offset: 1472)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1334, file: !537, line: 304, baseType: !1053, size: 32, align: 32, offset: 1504)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1334, file: !537, line: 309, baseType: !1131, size: 64, align: 64, offset: 1536)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1334, file: !537, line: 314, baseType: !1131, size: 64, align: 64, offset: 1600)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1334, file: !537, line: 319, baseType: !1381, size: 64, align: 64, offset: 1664)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!1053, !1044, !1110, !1053, !536, !1051}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1334, file: !537, line: 326, baseType: !1053, size: 32, align: 32, offset: 1728)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1334, file: !537, line: 331, baseType: !536, size: 32, align: 32, offset: 1760)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1334, file: !537, line: 332, baseType: !1051, size: 64, align: 64, offset: 1792)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1334, file: !537, line: 338, baseType: !1388, size: 64, align: 64, offset: 1856)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!1053, !1044}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1334, file: !537, line: 340, baseType: !1051, size: 64, align: 64, offset: 1920)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1334, file: !537, line: 346, baseType: !1258, size: 64, align: 64, offset: 1984)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1334, file: !537, line: 351, baseType: !1053, size: 32, align: 32, offset: 2048)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1231, file: !919, line: 1386, baseType: !1053, size: 32, align: 32, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1231, file: !919, line: 1393, baseType: !1050, size: 32, align: 32, offset: 352)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1231, file: !919, line: 1405, baseType: !1397, size: 64, align: 64, offset: 384)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64, align: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64, align: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1401)
!1401 = !{!1402, !1403, !1404, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2154, !2160, !2161, !2165, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2197, !2198, !2199, !2200, !2201, !2202}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1400, file: !919, line: 866, baseType: !1053, size: 32, align: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1400, file: !919, line: 872, baseType: !1053, size: 32, align: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1400, file: !919, line: 878, baseType: !1405, size: 64, align: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1636, !1637, !1638, !1639, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1792, !1796, !1797, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1976, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1407, file: !4, line: 1561, baseType: !1152, size: 64, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1407, file: !4, line: 1562, baseType: !1053, size: 32, align: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1407, file: !4, line: 1564, baseType: !545, size: 32, align: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1407, file: !4, line: 1565, baseType: !1413, size: 64, align: 64, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64, align: 64)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1425, !1428, !1431, !1434, !1437, !1438, !1439, !1447, !1448, !1449, !1451, !1455, !1461, !1470, !1474, !1475, !1520, !1607, !1611, !1612, !1616, !1620, !1625, !1629, !1630, !1631}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1415, file: !4, line: 3475, baseType: !1131, size: 64, align: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1415, file: !4, line: 3480, baseType: !1131, size: 64, align: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1415, file: !4, line: 3481, baseType: !545, size: 32, align: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1415, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1415, file: !4, line: 3487, baseType: !1053, size: 32, align: 32, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1415, file: !4, line: 3488, baseType: !1423, size: 64, align: 64, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64, align: 64)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1415, file: !4, line: 3489, baseType: !1426, size: 64, align: 64, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64, align: 64)
!1427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1415, file: !4, line: 3490, baseType: !1429, size: 64, align: 64, offset: 384)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1415, file: !4, line: 3491, baseType: !1432, size: 64, align: 64, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64, align: 64)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1415, file: !4, line: 3492, baseType: !1435, size: 64, align: 64, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1415, file: !4, line: 3493, baseType: !1042, size: 8, align: 8, offset: 576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1415, file: !4, line: 3494, baseType: !1152, size: 64, align: 64, offset: 640)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1415, file: !4, line: 3495, baseType: !1440, size: 64, align: 64, offset: 704)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1443, file: !4, line: 3402, baseType: !1053, size: 32, align: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1443, file: !4, line: 3403, baseType: !1131, size: 64, align: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1415, file: !4, line: 3507, baseType: !1131, size: 64, align: 64, offset: 768)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1415, file: !4, line: 3516, baseType: !1053, size: 32, align: 32, offset: 832)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1415, file: !4, line: 3517, baseType: !1450, size: 64, align: 64, offset: 896)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64, align: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1415, file: !4, line: 3527, baseType: !1452, size: 64, align: 64, offset: 960)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!1053, !1405}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1415, file: !4, line: 3535, baseType: !1456, size: 64, align: 64, offset: 1024)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!1053, !1405, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64, align: 64)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1415, file: !4, line: 3541, baseType: !1462, size: 64, align: 64, offset: 1088)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1466, line: 223, size: 128, align: 64, elements: !1467)
!1466 = !DIFile(filename: "./libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1465, file: !1466, line: 224, baseType: !1113, size: 64, align: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1465, file: !1466, line: 225, baseType: !1113, size: 64, align: 64, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1415, file: !4, line: 3549, baseType: !1471, size: 64, align: 64, offset: 1152)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !1450}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1415, file: !4, line: 3551, baseType: !1452, size: 64, align: 64, offset: 1216)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1415, file: !4, line: 3552, baseType: !1476, size: 64, align: 64, offset: 1280)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64, align: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!1053, !1405, !1110, !1053, !1479}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1519}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1481, file: !4, line: 3921, baseType: !1122, size: 16, align: 16)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1481, file: !4, line: 3922, baseType: !1049, size: 32, align: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1481, file: !4, line: 3923, baseType: !1049, size: 32, align: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1481, file: !4, line: 3924, baseType: !1050, size: 32, align: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1481, file: !4, line: 3925, baseType: !1488, size: 64, align: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64, align: 64)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1508, !1512, !1514, !1515, !1517, !1518}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1491, file: !4, line: 3886, baseType: !1053, size: 32, align: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1491, file: !4, line: 3887, baseType: !1053, size: 32, align: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1491, file: !4, line: 3888, baseType: !1053, size: 32, align: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1491, file: !4, line: 3889, baseType: !1053, size: 32, align: 32, offset: 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1491, file: !4, line: 3890, baseType: !1053, size: 32, align: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1491, file: !4, line: 3897, baseType: !1499, size: 768, align: 64, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1501)
!1501 = !{!1502, !1506}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1500, file: !4, line: 3855, baseType: !1503, size: 512, align: 64)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 512, align: 64, elements: !1504)
!1504 = !{!1505}
!1505 = !DISubrange(count: 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1500, file: !4, line: 3857, baseType: !1507, size: 256, align: 32, offset: 512)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 256, align: 32, elements: !1504)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1491, file: !4, line: 3903, baseType: !1509, size: 256, align: 64, offset: 960)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 256, align: 64, elements: !1510)
!1510 = !{!1511}
!1511 = !DISubrange(count: 4)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1491, file: !4, line: 3904, baseType: !1513, size: 128, align: 32, offset: 1216)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 128, align: 32, elements: !1510)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1491, file: !4, line: 3906, baseType: !772, size: 32, align: 32, offset: 1344)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1491, file: !4, line: 3908, baseType: !1516, size: 64, align: 64, offset: 1408)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1491, file: !4, line: 3915, baseType: !1516, size: 64, align: 64, offset: 1472)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1491, file: !4, line: 3917, baseType: !1053, size: 32, align: 32, offset: 1536)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1481, file: !4, line: 3926, baseType: !1051, size: 64, align: 64, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1415, file: !4, line: 3564, baseType: !1521, size: 64, align: 64, offset: 1344)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!1053, !1405, !1266, !1524, !1606}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, align: 64)
!1525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !789, line: 646, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !789, line: 268, size: 4288, align: 64, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1558, !1560, !1561, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1594, !1595, !1596, !1597, !1598, !1599, !1602, !1603, !1604, !1605}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1527, file: !789, line: 282, baseType: !1503, size: 512, align: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1527, file: !789, line: 299, baseType: !1507, size: 256, align: 32, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1527, file: !789, line: 315, baseType: !1532, size: 64, align: 64, offset: 768)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1527, file: !789, line: 326, baseType: !1053, size: 32, align: 32, offset: 832)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1527, file: !789, line: 326, baseType: !1053, size: 32, align: 32, offset: 864)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1527, file: !789, line: 334, baseType: !1053, size: 32, align: 32, offset: 896)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1527, file: !789, line: 341, baseType: !1053, size: 32, align: 32, offset: 928)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1527, file: !789, line: 346, baseType: !1053, size: 32, align: 32, offset: 960)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1527, file: !789, line: 351, baseType: !778, size: 32, align: 32, offset: 992)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1527, file: !789, line: 356, baseType: !1076, size: 64, align: 32, offset: 1024)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1527, file: !789, line: 361, baseType: !1051, size: 64, align: 64, offset: 1088)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1527, file: !789, line: 369, baseType: !1051, size: 64, align: 64, offset: 1152)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1527, file: !789, line: 377, baseType: !1051, size: 64, align: 64, offset: 1216)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1527, file: !789, line: 382, baseType: !1053, size: 32, align: 32, offset: 1280)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1527, file: !789, line: 386, baseType: !1053, size: 32, align: 32, offset: 1312)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1527, file: !789, line: 391, baseType: !1053, size: 32, align: 32, offset: 1344)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1527, file: !789, line: 396, baseType: !1044, size: 64, align: 64, offset: 1408)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1527, file: !789, line: 403, baseType: !1548, size: 512, align: 64, offset: 1472)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 512, align: 64, elements: !1504)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1527, file: !789, line: 410, baseType: !1053, size: 32, align: 32, offset: 1984)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1527, file: !789, line: 415, baseType: !1053, size: 32, align: 32, offset: 2016)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1527, file: !789, line: 420, baseType: !1053, size: 32, align: 32, offset: 2048)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1527, file: !789, line: 425, baseType: !1053, size: 32, align: 32, offset: 2080)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1527, file: !789, line: 435, baseType: !1051, size: 64, align: 64, offset: 2112)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1527, file: !789, line: 440, baseType: !1053, size: 32, align: 32, offset: 2176)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1527, file: !789, line: 445, baseType: !1039, size: 64, align: 64, offset: 2240)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1527, file: !789, line: 459, baseType: !1557, size: 512, align: 64, offset: 2304)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1271, size: 512, align: 64, elements: !1504)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1527, file: !789, line: 473, baseType: !1559, size: 64, align: 64, offset: 2816)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1527, file: !789, line: 477, baseType: !1053, size: 32, align: 32, offset: 2880)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1527, file: !789, line: 479, baseType: !1562, size: 64, align: 64, offset: 2944)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64, align: 64)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !789, line: 207, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !789, line: 201, size: 320, align: 64, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1575}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1565, file: !789, line: 202, baseType: !788, size: 32, align: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1565, file: !789, line: 203, baseType: !1110, size: 64, align: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1565, file: !789, line: 204, baseType: !1053, size: 32, align: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1565, file: !789, line: 205, baseType: !1571, size: 64, align: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64, align: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1573, line: 86, baseType: !1574)
!1573 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1574 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1573, line: 86, flags: DIFlagFwdDecl)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1565, file: !789, line: 206, baseType: !1271, size: 64, align: 64, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1527, file: !789, line: 480, baseType: !1053, size: 32, align: 32, offset: 3008)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1527, file: !789, line: 505, baseType: !1053, size: 32, align: 32, offset: 3040)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1527, file: !789, line: 512, baseType: !812, size: 32, align: 32, offset: 3072)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1527, file: !789, line: 514, baseType: !818, size: 32, align: 32, offset: 3104)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1527, file: !789, line: 516, baseType: !836, size: 32, align: 32, offset: 3136)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1527, file: !789, line: 523, baseType: !860, size: 32, align: 32, offset: 3168)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1527, file: !789, line: 525, baseType: !879, size: 32, align: 32, offset: 3200)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1527, file: !789, line: 532, baseType: !1051, size: 64, align: 64, offset: 3264)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1527, file: !789, line: 539, baseType: !1051, size: 64, align: 64, offset: 3328)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1527, file: !789, line: 547, baseType: !1051, size: 64, align: 64, offset: 3392)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1527, file: !789, line: 554, baseType: !1571, size: 64, align: 64, offset: 3456)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1527, file: !789, line: 563, baseType: !1053, size: 32, align: 32, offset: 3520)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1527, file: !789, line: 572, baseType: !1053, size: 32, align: 32, offset: 3552)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1527, file: !789, line: 581, baseType: !1053, size: 32, align: 32, offset: 3584)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1527, file: !789, line: 588, baseType: !1591, size: 64, align: 64, offset: 3648)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1040, line: 36, baseType: !1593)
!1593 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1527, file: !789, line: 593, baseType: !1053, size: 32, align: 32, offset: 3712)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1527, file: !789, line: 596, baseType: !1053, size: 32, align: 32, offset: 3744)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1527, file: !789, line: 599, baseType: !1271, size: 64, align: 64, offset: 3776)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1527, file: !789, line: 605, baseType: !1271, size: 64, align: 64, offset: 3840)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1527, file: !789, line: 616, baseType: !1271, size: 64, align: 64, offset: 3904)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1527, file: !789, line: 626, baseType: !1600, size: 64, align: 64, offset: 3968)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1601, line: 216, baseType: !1041)
!1601 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1527, file: !789, line: 627, baseType: !1600, size: 64, align: 64, offset: 4032)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1527, file: !789, line: 628, baseType: !1600, size: 64, align: 64, offset: 4096)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1527, file: !789, line: 629, baseType: !1600, size: 64, align: 64, offset: 4160)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1527, file: !789, line: 645, baseType: !1271, size: 64, align: 64, offset: 4224)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1415, file: !4, line: 3566, baseType: !1608, size: 64, align: 64, offset: 1408)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1053, !1405, !1044, !1606, !1266}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1415, file: !4, line: 3567, baseType: !1452, size: 64, align: 64, offset: 1472)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1415, file: !4, line: 3576, baseType: !1613, size: 64, align: 64, offset: 1536)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!1053, !1405, !1524}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1415, file: !4, line: 3577, baseType: !1617, size: 64, align: 64, offset: 1600)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!1053, !1405, !1266}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1415, file: !4, line: 3584, baseType: !1621, size: 64, align: 64, offset: 1664)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!1053, !1405, !1624}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1415, file: !4, line: 3589, baseType: !1626, size: 64, align: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null, !1405}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1415, file: !4, line: 3594, baseType: !1053, size: 32, align: 32, offset: 1792)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1415, file: !4, line: 3600, baseType: !1131, size: 64, align: 64, offset: 1856)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1415, file: !4, line: 3609, baseType: !1632, size: 64, align: 64, offset: 1920)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64, align: 64)
!1634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1635)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1407, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1407, file: !4, line: 1581, baseType: !1050, size: 32, align: 32, offset: 224)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1407, file: !4, line: 1583, baseType: !1044, size: 64, align: 64, offset: 256)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1407, file: !4, line: 1591, baseType: !1640, size: 64, align: 64, offset: 320)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1466, line: 129, size: 1664, align: 64, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646, !1647, !1665, !1666, !1672, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1641, file: !1466, line: 136, baseType: !1053, size: 32, align: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1641, file: !1466, line: 151, baseType: !1053, size: 32, align: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1641, file: !1466, line: 157, baseType: !1053, size: 32, align: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1641, file: !1466, line: 159, baseType: !1624, size: 64, align: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1641, file: !1466, line: 161, baseType: !1648, size: 64, align: 64, offset: 192)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1466, line: 117, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1466, line: 100, size: 832, align: 64, elements: !1651)
!1651 = !{!1652, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1650, file: !1466, line: 105, baseType: !1653, size: 256, align: 64)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1654, size: 256, align: 64, elements: !1510)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1273, line: 238, baseType: !1656)
!1656 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1273, line: 238, flags: DIFlagFwdDecl)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1650, file: !1466, line: 110, baseType: !1053, size: 32, align: 32, offset: 256)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1650, file: !1466, line: 111, baseType: !1053, size: 32, align: 32, offset: 288)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1650, file: !1466, line: 111, baseType: !1053, size: 32, align: 32, offset: 320)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1650, file: !1466, line: 112, baseType: !1507, size: 256, align: 32, offset: 352)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1650, file: !1466, line: 113, baseType: !1513, size: 128, align: 32, offset: 608)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1650, file: !1466, line: 114, baseType: !1053, size: 32, align: 32, offset: 736)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1650, file: !1466, line: 115, baseType: !1053, size: 32, align: 32, offset: 768)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1650, file: !1466, line: 116, baseType: !1053, size: 32, align: 32, offset: 800)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1641, file: !1466, line: 163, baseType: !1044, size: 64, align: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1641, file: !1466, line: 165, baseType: !1667, size: 128, align: 64, offset: 320)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1466, line: 122, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1466, line: 119, size: 128, align: 64, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1668, file: !1466, line: 120, baseType: !1266, size: 64, align: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1668, file: !1466, line: 121, baseType: !1624, size: 64, align: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1641, file: !1466, line: 166, baseType: !1673, size: 128, align: 64, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1466, line: 127, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1466, line: 124, size: 128, align: 64, elements: !1675)
!1675 = !{!1676, !1749}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1674, file: !1466, line: 125, baseType: !1677, size: 64, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64, align: 64)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !1681)
!1681 = !{!1682, !1683, !1707, !1711, !1712, !1746, !1747, !1748}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1680, file: !4, line: 5751, baseType: !1152, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1680, file: !4, line: 5756, baseType: !1684, size: 64, align: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !1687)
!1687 = !{!1688, !1689, !1692, !1693, !1694, !1698, !1702, !1706}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1686, file: !4, line: 5797, baseType: !1131, size: 64, align: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1686, file: !4, line: 5804, baseType: !1690, size: 64, align: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1686, file: !4, line: 5815, baseType: !1152, size: 64, align: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1686, file: !4, line: 5825, baseType: !1053, size: 32, align: 32, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1686, file: !4, line: 5826, baseType: !1695, size: 64, align: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!1053, !1678}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1686, file: !4, line: 5827, baseType: !1699, size: 64, align: 64, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!1053, !1678, !1266}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1686, file: !4, line: 5828, baseType: !1703, size: 64, align: 64, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64, align: 64)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1678}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1686, file: !4, line: 5829, baseType: !1703, size: 64, align: 64, offset: 448)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1680, file: !4, line: 5762, baseType: !1708, size: 64, align: 64, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64, align: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !1710)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1680, file: !4, line: 5768, baseType: !1044, size: 64, align: 64, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1680, file: !4, line: 5775, baseType: !1713, size: 64, align: 64, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1715, file: !4, line: 3940, baseType: !545, size: 32, align: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1715, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1715, file: !4, line: 3948, baseType: !1049, size: 32, align: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1715, file: !4, line: 3958, baseType: !1110, size: 64, align: 64, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1715, file: !4, line: 3962, baseType: !1053, size: 32, align: 32, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1715, file: !4, line: 3968, baseType: !1053, size: 32, align: 32, offset: 224)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1715, file: !4, line: 3973, baseType: !1051, size: 64, align: 64, offset: 256)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1715, file: !4, line: 3986, baseType: !1053, size: 32, align: 32, offset: 320)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1715, file: !4, line: 3999, baseType: !1053, size: 32, align: 32, offset: 352)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1715, file: !4, line: 4004, baseType: !1053, size: 32, align: 32, offset: 384)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1715, file: !4, line: 4005, baseType: !1053, size: 32, align: 32, offset: 416)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1715, file: !4, line: 4010, baseType: !1053, size: 32, align: 32, offset: 448)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1715, file: !4, line: 4011, baseType: !1053, size: 32, align: 32, offset: 480)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1715, file: !4, line: 4020, baseType: !1076, size: 64, align: 32, offset: 512)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1715, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1715, file: !4, line: 4030, baseType: !812, size: 32, align: 32, offset: 608)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1715, file: !4, line: 4031, baseType: !818, size: 32, align: 32, offset: 640)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1715, file: !4, line: 4032, baseType: !836, size: 32, align: 32, offset: 672)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1715, file: !4, line: 4033, baseType: !860, size: 32, align: 32, offset: 704)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1715, file: !4, line: 4034, baseType: !879, size: 32, align: 32, offset: 736)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1715, file: !4, line: 4039, baseType: !1053, size: 32, align: 32, offset: 768)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1715, file: !4, line: 4046, baseType: !1039, size: 64, align: 64, offset: 832)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1715, file: !4, line: 4050, baseType: !1053, size: 32, align: 32, offset: 896)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1715, file: !4, line: 4054, baseType: !1053, size: 32, align: 32, offset: 928)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1715, file: !4, line: 4061, baseType: !1053, size: 32, align: 32, offset: 960)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1715, file: !4, line: 4065, baseType: !1053, size: 32, align: 32, offset: 992)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1715, file: !4, line: 4073, baseType: !1053, size: 32, align: 32, offset: 1024)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1715, file: !4, line: 4080, baseType: !1053, size: 32, align: 32, offset: 1056)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1715, file: !4, line: 4084, baseType: !1053, size: 32, align: 32, offset: 1088)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1680, file: !4, line: 5781, baseType: !1713, size: 64, align: 64, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1680, file: !4, line: 5787, baseType: !1076, size: 64, align: 32, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1680, file: !4, line: 5793, baseType: !1076, size: 64, align: 32, offset: 448)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1674, file: !1466, line: 126, baseType: !1053, size: 32, align: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1641, file: !1466, line: 172, baseType: !1266, size: 64, align: 64, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1641, file: !1466, line: 177, baseType: !1110, size: 64, align: 64, offset: 640)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1641, file: !1466, line: 178, baseType: !1050, size: 32, align: 32, offset: 704)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1641, file: !1466, line: 180, baseType: !1044, size: 64, align: 64, offset: 768)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1641, file: !1466, line: 185, baseType: !1053, size: 32, align: 32, offset: 832)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1641, file: !1466, line: 190, baseType: !1044, size: 64, align: 64, offset: 896)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1641, file: !1466, line: 195, baseType: !1053, size: 32, align: 32, offset: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1641, file: !1466, line: 200, baseType: !1266, size: 64, align: 64, offset: 1024)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1641, file: !1466, line: 201, baseType: !1053, size: 32, align: 32, offset: 1088)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1641, file: !1466, line: 202, baseType: !1624, size: 64, align: 64, offset: 1152)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1641, file: !1466, line: 203, baseType: !1053, size: 32, align: 32, offset: 1216)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1641, file: !1466, line: 205, baseType: !1053, size: 32, align: 32, offset: 1248)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1641, file: !1466, line: 206, baseType: !1053, size: 32, align: 32, offset: 1280)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1641, file: !1466, line: 209, baseType: !1600, size: 64, align: 64, offset: 1344)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1641, file: !1466, line: 212, baseType: !1600, size: 64, align: 64, offset: 1408)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1641, file: !1466, line: 213, baseType: !1624, size: 64, align: 64, offset: 1472)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1641, file: !1466, line: 215, baseType: !1053, size: 32, align: 32, offset: 1536)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1641, file: !1466, line: 217, baseType: !1053, size: 32, align: 32, offset: 1568)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1641, file: !1466, line: 220, baseType: !1053, size: 32, align: 32, offset: 1600)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1407, file: !4, line: 1598, baseType: !1044, size: 64, align: 64, offset: 384)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1407, file: !4, line: 1606, baseType: !1051, size: 64, align: 64, offset: 448)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1407, file: !4, line: 1614, baseType: !1053, size: 32, align: 32, offset: 512)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1407, file: !4, line: 1622, baseType: !1053, size: 32, align: 32, offset: 544)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1407, file: !4, line: 1628, baseType: !1053, size: 32, align: 32, offset: 576)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1407, file: !4, line: 1636, baseType: !1053, size: 32, align: 32, offset: 608)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1407, file: !4, line: 1643, baseType: !1053, size: 32, align: 32, offset: 640)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1407, file: !4, line: 1657, baseType: !1110, size: 64, align: 64, offset: 704)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1407, file: !4, line: 1658, baseType: !1053, size: 32, align: 32, offset: 768)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1407, file: !4, line: 1679, baseType: !1076, size: 64, align: 32, offset: 800)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1407, file: !4, line: 1688, baseType: !1053, size: 32, align: 32, offset: 864)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1407, file: !4, line: 1712, baseType: !1053, size: 32, align: 32, offset: 896)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1407, file: !4, line: 1729, baseType: !1053, size: 32, align: 32, offset: 928)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1407, file: !4, line: 1729, baseType: !1053, size: 32, align: 32, offset: 960)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1407, file: !4, line: 1744, baseType: !1053, size: 32, align: 32, offset: 992)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1407, file: !4, line: 1744, baseType: !1053, size: 32, align: 32, offset: 1024)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1407, file: !4, line: 1751, baseType: !1053, size: 32, align: 32, offset: 1056)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1407, file: !4, line: 1766, baseType: !555, size: 32, align: 32, offset: 1088)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1407, file: !4, line: 1791, baseType: !1788, size: 64, align: 64, offset: 1152)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64, align: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{null, !1791, !1524, !1606, !1053, !1053, !1053}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1407, file: !4, line: 1808, baseType: !1793, size: 64, align: 64, offset: 1216)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!555, !1791, !1426}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1407, file: !4, line: 1816, baseType: !1053, size: 32, align: 32, offset: 1280)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1407, file: !4, line: 1825, baseType: !1798, size: 32, align: 32, offset: 1312)
!1798 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1407, file: !4, line: 1830, baseType: !1053, size: 32, align: 32, offset: 1344)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1407, file: !4, line: 1838, baseType: !1798, size: 32, align: 32, offset: 1376)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1407, file: !4, line: 1846, baseType: !1053, size: 32, align: 32, offset: 1408)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1407, file: !4, line: 1851, baseType: !1053, size: 32, align: 32, offset: 1440)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1407, file: !4, line: 1861, baseType: !1798, size: 32, align: 32, offset: 1472)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1407, file: !4, line: 1868, baseType: !1798, size: 32, align: 32, offset: 1504)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1407, file: !4, line: 1875, baseType: !1798, size: 32, align: 32, offset: 1536)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1407, file: !4, line: 1882, baseType: !1798, size: 32, align: 32, offset: 1568)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1407, file: !4, line: 1889, baseType: !1798, size: 32, align: 32, offset: 1600)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1407, file: !4, line: 1896, baseType: !1798, size: 32, align: 32, offset: 1632)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1407, file: !4, line: 1903, baseType: !1798, size: 32, align: 32, offset: 1664)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1407, file: !4, line: 1910, baseType: !1053, size: 32, align: 32, offset: 1696)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1407, file: !4, line: 1915, baseType: !1053, size: 32, align: 32, offset: 1728)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1407, file: !4, line: 1926, baseType: !1606, size: 64, align: 64, offset: 1792)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1407, file: !4, line: 1935, baseType: !1076, size: 64, align: 32, offset: 1856)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1407, file: !4, line: 1942, baseType: !1053, size: 32, align: 32, offset: 1920)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1407, file: !4, line: 1948, baseType: !1053, size: 32, align: 32, offset: 1952)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1407, file: !4, line: 1954, baseType: !1053, size: 32, align: 32, offset: 1984)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1407, file: !4, line: 1960, baseType: !1053, size: 32, align: 32, offset: 2016)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1407, file: !4, line: 1984, baseType: !1053, size: 32, align: 32, offset: 2048)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1407, file: !4, line: 1991, baseType: !1053, size: 32, align: 32, offset: 2080)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1407, file: !4, line: 1996, baseType: !1053, size: 32, align: 32, offset: 2112)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1407, file: !4, line: 2004, baseType: !1053, size: 32, align: 32, offset: 2144)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1407, file: !4, line: 2011, baseType: !1053, size: 32, align: 32, offset: 2176)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1407, file: !4, line: 2018, baseType: !1053, size: 32, align: 32, offset: 2208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1407, file: !4, line: 2027, baseType: !1053, size: 32, align: 32, offset: 2240)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1407, file: !4, line: 2034, baseType: !1053, size: 32, align: 32, offset: 2272)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1407, file: !4, line: 2044, baseType: !1053, size: 32, align: 32, offset: 2304)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1407, file: !4, line: 2054, baseType: !1828, size: 64, align: 64, offset: 2368)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1407, file: !4, line: 2061, baseType: !1828, size: 64, align: 64, offset: 2432)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1407, file: !4, line: 2066, baseType: !1053, size: 32, align: 32, offset: 2496)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1407, file: !4, line: 2070, baseType: !1053, size: 32, align: 32, offset: 2528)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1407, file: !4, line: 2078, baseType: !1053, size: 32, align: 32, offset: 2560)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1407, file: !4, line: 2085, baseType: !1053, size: 32, align: 32, offset: 2592)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1407, file: !4, line: 2092, baseType: !1053, size: 32, align: 32, offset: 2624)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1407, file: !4, line: 2099, baseType: !1053, size: 32, align: 32, offset: 2656)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1407, file: !4, line: 2106, baseType: !1053, size: 32, align: 32, offset: 2688)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1407, file: !4, line: 2113, baseType: !1053, size: 32, align: 32, offset: 2720)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1407, file: !4, line: 2120, baseType: !1053, size: 32, align: 32, offset: 2752)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1407, file: !4, line: 2125, baseType: !1053, size: 32, align: 32, offset: 2784)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1407, file: !4, line: 2133, baseType: !1053, size: 32, align: 32, offset: 2816)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1407, file: !4, line: 2140, baseType: !1053, size: 32, align: 32, offset: 2848)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1407, file: !4, line: 2145, baseType: !1053, size: 32, align: 32, offset: 2880)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1407, file: !4, line: 2153, baseType: !1053, size: 32, align: 32, offset: 2912)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1407, file: !4, line: 2158, baseType: !1053, size: 32, align: 32, offset: 2944)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1407, file: !4, line: 2166, baseType: !818, size: 32, align: 32, offset: 2976)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1407, file: !4, line: 2173, baseType: !836, size: 32, align: 32, offset: 3008)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1407, file: !4, line: 2180, baseType: !860, size: 32, align: 32, offset: 3040)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1407, file: !4, line: 2187, baseType: !812, size: 32, align: 32, offset: 3072)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1407, file: !4, line: 2194, baseType: !879, size: 32, align: 32, offset: 3104)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1407, file: !4, line: 2203, baseType: !1053, size: 32, align: 32, offset: 3136)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1407, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1407, file: !4, line: 2212, baseType: !1053, size: 32, align: 32, offset: 3200)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1407, file: !4, line: 2213, baseType: !1053, size: 32, align: 32, offset: 3232)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1407, file: !4, line: 2220, baseType: !755, size: 32, align: 32, offset: 3264)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1407, file: !4, line: 2232, baseType: !1053, size: 32, align: 32, offset: 3296)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1407, file: !4, line: 2243, baseType: !1053, size: 32, align: 32, offset: 3328)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1407, file: !4, line: 2249, baseType: !1053, size: 32, align: 32, offset: 3360)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1407, file: !4, line: 2256, baseType: !1053, size: 32, align: 32, offset: 3392)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1407, file: !4, line: 2263, baseType: !1039, size: 64, align: 64, offset: 3456)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1407, file: !4, line: 2270, baseType: !1039, size: 64, align: 64, offset: 3520)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1407, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1407, file: !4, line: 2285, baseType: !755, size: 32, align: 32, offset: 3616)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1407, file: !4, line: 2367, baseType: !1864, size: 64, align: 64, offset: 3648)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!1053, !1791, !1624, !1053}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1407, file: !4, line: 2383, baseType: !1053, size: 32, align: 32, offset: 3712)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1407, file: !4, line: 2386, baseType: !1798, size: 32, align: 32, offset: 3744)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1407, file: !4, line: 2387, baseType: !1798, size: 32, align: 32, offset: 3776)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1407, file: !4, line: 2394, baseType: !1053, size: 32, align: 32, offset: 3808)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1407, file: !4, line: 2401, baseType: !1053, size: 32, align: 32, offset: 3840)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1407, file: !4, line: 2408, baseType: !1053, size: 32, align: 32, offset: 3872)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1407, file: !4, line: 2415, baseType: !1053, size: 32, align: 32, offset: 3904)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1407, file: !4, line: 2422, baseType: !1053, size: 32, align: 32, offset: 3936)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1407, file: !4, line: 2423, baseType: !1876, size: 64, align: 64, offset: 3968)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1879)
!1879 = !{!1880, !1881, !1882, !1883}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1878, file: !4, line: 827, baseType: !1053, size: 32, align: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1878, file: !4, line: 828, baseType: !1053, size: 32, align: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1878, file: !4, line: 829, baseType: !1053, size: 32, align: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1878, file: !4, line: 830, baseType: !1798, size: 32, align: 32, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1407, file: !4, line: 2430, baseType: !1051, size: 64, align: 64, offset: 4032)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1407, file: !4, line: 2437, baseType: !1051, size: 64, align: 64, offset: 4096)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1407, file: !4, line: 2444, baseType: !1798, size: 32, align: 32, offset: 4160)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1407, file: !4, line: 2451, baseType: !1798, size: 32, align: 32, offset: 4192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1407, file: !4, line: 2458, baseType: !1053, size: 32, align: 32, offset: 4224)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1407, file: !4, line: 2469, baseType: !1053, size: 32, align: 32, offset: 4256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1407, file: !4, line: 2475, baseType: !1053, size: 32, align: 32, offset: 4288)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1407, file: !4, line: 2481, baseType: !1053, size: 32, align: 32, offset: 4320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1407, file: !4, line: 2485, baseType: !1053, size: 32, align: 32, offset: 4352)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1407, file: !4, line: 2489, baseType: !1053, size: 32, align: 32, offset: 4384)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1407, file: !4, line: 2493, baseType: !1053, size: 32, align: 32, offset: 4416)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1407, file: !4, line: 2501, baseType: !1053, size: 32, align: 32, offset: 4448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1407, file: !4, line: 2506, baseType: !1053, size: 32, align: 32, offset: 4480)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1407, file: !4, line: 2510, baseType: !1053, size: 32, align: 32, offset: 4512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1407, file: !4, line: 2514, baseType: !1051, size: 64, align: 64, offset: 4544)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1407, file: !4, line: 2528, baseType: !1900, size: 64, align: 64, offset: 4608)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1791, !1044, !1053, !1053}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1407, file: !4, line: 2534, baseType: !1053, size: 32, align: 32, offset: 4672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1407, file: !4, line: 2545, baseType: !1053, size: 32, align: 32, offset: 4704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1407, file: !4, line: 2547, baseType: !1053, size: 32, align: 32, offset: 4736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1407, file: !4, line: 2549, baseType: !1053, size: 32, align: 32, offset: 4768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1407, file: !4, line: 2551, baseType: !1053, size: 32, align: 32, offset: 4800)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1407, file: !4, line: 2553, baseType: !1053, size: 32, align: 32, offset: 4832)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1407, file: !4, line: 2555, baseType: !1053, size: 32, align: 32, offset: 4864)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1407, file: !4, line: 2557, baseType: !1053, size: 32, align: 32, offset: 4896)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1407, file: !4, line: 2559, baseType: !1053, size: 32, align: 32, offset: 4928)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1407, file: !4, line: 2563, baseType: !1053, size: 32, align: 32, offset: 4960)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1407, file: !4, line: 2571, baseType: !1516, size: 64, align: 64, offset: 4992)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1407, file: !4, line: 2579, baseType: !1516, size: 64, align: 64, offset: 5056)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1407, file: !4, line: 2586, baseType: !1053, size: 32, align: 32, offset: 5120)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1407, file: !4, line: 2615, baseType: !1053, size: 32, align: 32, offset: 5152)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1407, file: !4, line: 2627, baseType: !1053, size: 32, align: 32, offset: 5184)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1407, file: !4, line: 2637, baseType: !1053, size: 32, align: 32, offset: 5216)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1407, file: !4, line: 2681, baseType: !1053, size: 32, align: 32, offset: 5248)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1407, file: !4, line: 2709, baseType: !1051, size: 64, align: 64, offset: 5312)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1407, file: !4, line: 2716, baseType: !1922, size: 64, align: 64, offset: 5376)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1930, !1931, !1932, !1936, !1940, !1941, !1942, !1943, !1949, !1950, !1951, !1952, !1953}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1924, file: !4, line: 3642, baseType: !1131, size: 64, align: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1924, file: !4, line: 3649, baseType: !545, size: 32, align: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1924, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1924, file: !4, line: 3663, baseType: !555, size: 32, align: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1924, file: !4, line: 3669, baseType: !1053, size: 32, align: 32, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1924, file: !4, line: 3682, baseType: !1621, size: 64, align: 64, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1924, file: !4, line: 3698, baseType: !1933, size: 64, align: 64, offset: 256)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64, align: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!1053, !1405, !1113, !1049}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1924, file: !4, line: 3712, baseType: !1937, size: 64, align: 64, offset: 320)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64, align: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!1053, !1405, !1053, !1113, !1049}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1924, file: !4, line: 3726, baseType: !1933, size: 64, align: 64, offset: 384)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1924, file: !4, line: 3737, baseType: !1452, size: 64, align: 64, offset: 448)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1924, file: !4, line: 3746, baseType: !1053, size: 32, align: 32, offset: 512)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1924, file: !4, line: 3757, baseType: !1944, size: 64, align: 64, offset: 576)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64, align: 64)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{null, !1947}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64, align: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1924, file: !4, line: 3766, baseType: !1452, size: 64, align: 64, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1924, file: !4, line: 3774, baseType: !1452, size: 64, align: 64, offset: 704)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1924, file: !4, line: 3780, baseType: !1053, size: 32, align: 32, offset: 768)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1924, file: !4, line: 3785, baseType: !1053, size: 32, align: 32, offset: 800)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1924, file: !4, line: 3795, baseType: !1954, size: 64, align: 64, offset: 832)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64, align: 64)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!1053, !1405, !1271}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1407, file: !4, line: 2728, baseType: !1044, size: 64, align: 64, offset: 5440)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1407, file: !4, line: 2735, baseType: !1548, size: 512, align: 64, offset: 5504)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1407, file: !4, line: 2742, baseType: !1053, size: 32, align: 32, offset: 6016)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1407, file: !4, line: 2755, baseType: !1053, size: 32, align: 32, offset: 6048)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1407, file: !4, line: 2776, baseType: !1053, size: 32, align: 32, offset: 6080)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1407, file: !4, line: 2783, baseType: !1053, size: 32, align: 32, offset: 6112)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1407, file: !4, line: 2791, baseType: !1053, size: 32, align: 32, offset: 6144)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1407, file: !4, line: 2802, baseType: !1624, size: 64, align: 64, offset: 6208)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1407, file: !4, line: 2811, baseType: !1053, size: 32, align: 32, offset: 6272)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1407, file: !4, line: 2821, baseType: !1053, size: 32, align: 32, offset: 6304)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1407, file: !4, line: 2830, baseType: !1053, size: 32, align: 32, offset: 6336)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1407, file: !4, line: 2840, baseType: !1053, size: 32, align: 32, offset: 6368)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1407, file: !4, line: 2851, baseType: !1970, size: 64, align: 64, offset: 6400)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64, align: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1053, !1791, !1973, !1044, !1606, !1053, !1053}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64, align: 64)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!1053, !1791, !1044}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1407, file: !4, line: 2871, baseType: !1977, size: 64, align: 64, offset: 6464)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64, align: 64)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!1053, !1791, !1980, !1044, !1606, !1053}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64, align: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!1053, !1791, !1044, !1053, !1053}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1407, file: !4, line: 2878, baseType: !1053, size: 32, align: 32, offset: 6528)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1407, file: !4, line: 2885, baseType: !1053, size: 32, align: 32, offset: 6560)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1407, file: !4, line: 3005, baseType: !1053, size: 32, align: 32, offset: 6592)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1407, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1407, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1407, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1407, file: !4, line: 3037, baseType: !1110, size: 64, align: 64, offset: 6720)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1407, file: !4, line: 3038, baseType: !1053, size: 32, align: 32, offset: 6784)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1407, file: !4, line: 3050, baseType: !1039, size: 64, align: 64, offset: 6848)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1407, file: !4, line: 3065, baseType: !1053, size: 32, align: 32, offset: 6912)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1407, file: !4, line: 3083, baseType: !1053, size: 32, align: 32, offset: 6944)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1407, file: !4, line: 3092, baseType: !1076, size: 64, align: 32, offset: 6976)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1407, file: !4, line: 3099, baseType: !555, size: 32, align: 32, offset: 7040)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1407, file: !4, line: 3106, baseType: !1076, size: 64, align: 32, offset: 7072)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1407, file: !4, line: 3113, baseType: !1998, size: 64, align: 64, offset: 7168)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2011}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2001, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2001, file: !4, line: 714, baseType: !545, size: 32, align: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2001, file: !4, line: 720, baseType: !1131, size: 64, align: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2001, file: !4, line: 724, baseType: !1131, size: 64, align: 64, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2001, file: !4, line: 728, baseType: !1053, size: 32, align: 32, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2001, file: !4, line: 734, baseType: !2009, size: 64, align: 64, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64, align: 64)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2001, file: !4, line: 739, baseType: !2012, size: 64, align: 64, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1407, file: !4, line: 3129, baseType: !1051, size: 64, align: 64, offset: 7232)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1407, file: !4, line: 3130, baseType: !1051, size: 64, align: 64, offset: 7296)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1407, file: !4, line: 3131, baseType: !1051, size: 64, align: 64, offset: 7360)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1407, file: !4, line: 3132, baseType: !1051, size: 64, align: 64, offset: 7424)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1407, file: !4, line: 3139, baseType: !1516, size: 64, align: 64, offset: 7488)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1407, file: !4, line: 3147, baseType: !1053, size: 32, align: 32, offset: 7552)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1407, file: !4, line: 3165, baseType: !1053, size: 32, align: 32, offset: 7584)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1407, file: !4, line: 3172, baseType: !1053, size: 32, align: 32, offset: 7616)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1407, file: !4, line: 3180, baseType: !1053, size: 32, align: 32, offset: 7648)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1407, file: !4, line: 3191, baseType: !1828, size: 64, align: 64, offset: 7680)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1407, file: !4, line: 3199, baseType: !1110, size: 64, align: 64, offset: 7744)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1407, file: !4, line: 3207, baseType: !1516, size: 64, align: 64, offset: 7808)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1407, file: !4, line: 3214, baseType: !1050, size: 32, align: 32, offset: 7872)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1407, file: !4, line: 3224, baseType: !1289, size: 64, align: 64, offset: 7936)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1407, file: !4, line: 3225, baseType: !1053, size: 32, align: 32, offset: 8000)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1407, file: !4, line: 3249, baseType: !1271, size: 64, align: 64, offset: 8064)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1407, file: !4, line: 3256, baseType: !1053, size: 32, align: 32, offset: 8128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1407, file: !4, line: 3271, baseType: !1053, size: 32, align: 32, offset: 8160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1407, file: !4, line: 3279, baseType: !1051, size: 64, align: 64, offset: 8192)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1407, file: !4, line: 3301, baseType: !1271, size: 64, align: 64, offset: 8256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1407, file: !4, line: 3310, baseType: !1053, size: 32, align: 32, offset: 8320)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1407, file: !4, line: 3337, baseType: !1053, size: 32, align: 32, offset: 8352)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1407, file: !4, line: 3351, baseType: !1053, size: 32, align: 32, offset: 8384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1407, file: !4, line: 3359, baseType: !1053, size: 32, align: 32, offset: 8416)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1400, file: !919, line: 880, baseType: !1044, size: 64, align: 64, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1400, file: !919, line: 894, baseType: !1076, size: 64, align: 32, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1400, file: !919, line: 904, baseType: !1051, size: 64, align: 64, offset: 256)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1400, file: !919, line: 914, baseType: !1051, size: 64, align: 64, offset: 320)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1400, file: !919, line: 916, baseType: !1051, size: 64, align: 64, offset: 384)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1400, file: !919, line: 918, baseType: !1053, size: 32, align: 32, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1400, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1400, file: !919, line: 927, baseType: !1076, size: 64, align: 32, offset: 512)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1400, file: !919, line: 929, baseType: !1571, size: 64, align: 64, offset: 576)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1400, file: !919, line: 938, baseType: !1076, size: 64, align: 32, offset: 640)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1400, file: !919, line: 947, baseType: !1267, size: 704, align: 64, offset: 704)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1400, file: !919, line: 967, baseType: !1289, size: 64, align: 64, offset: 1408)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1400, file: !919, line: 971, baseType: !1053, size: 32, align: 32, offset: 1472)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1400, file: !919, line: 978, baseType: !1053, size: 32, align: 32, offset: 1504)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1400, file: !919, line: 989, baseType: !1076, size: 64, align: 32, offset: 1536)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1400, file: !919, line: 1000, baseType: !1516, size: 64, align: 64, offset: 1600)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1400, file: !919, line: 1012, baseType: !1713, size: 64, align: 64, offset: 1664)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1400, file: !919, line: 1055, baseType: !2056, size: 64, align: 64, offset: 1728)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64, align: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !919, line: 1028, size: 832, align: 64, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2057, file: !919, line: 1029, baseType: !1051, size: 64, align: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2057, file: !919, line: 1030, baseType: !1051, size: 64, align: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2057, file: !919, line: 1031, baseType: !1053, size: 32, align: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2057, file: !919, line: 1032, baseType: !1051, size: 64, align: 64, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2057, file: !919, line: 1033, baseType: !2064, size: 64, align: 64, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64, align: 64)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1092, size: 51072, align: 64, elements: !2066)
!2066 = !{!1084, !2067}
!2067 = !DISubrange(count: 399)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2057, file: !919, line: 1034, baseType: !1051, size: 64, align: 64, offset: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2057, file: !919, line: 1035, baseType: !1051, size: 64, align: 64, offset: 384)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2057, file: !919, line: 1036, baseType: !1053, size: 32, align: 32, offset: 448)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2057, file: !919, line: 1043, baseType: !1053, size: 32, align: 32, offset: 480)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2057, file: !919, line: 1045, baseType: !1051, size: 64, align: 64, offset: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2057, file: !919, line: 1050, baseType: !1051, size: 64, align: 64, offset: 576)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2057, file: !919, line: 1051, baseType: !1053, size: 32, align: 32, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2057, file: !919, line: 1052, baseType: !1051, size: 64, align: 64, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2057, file: !919, line: 1053, baseType: !1053, size: 32, align: 32, offset: 768)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1400, file: !919, line: 1057, baseType: !1053, size: 32, align: 32, offset: 1792)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1400, file: !919, line: 1067, baseType: !1051, size: 64, align: 64, offset: 1856)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1400, file: !919, line: 1068, baseType: !1051, size: 64, align: 64, offset: 1920)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1400, file: !919, line: 1069, baseType: !1051, size: 64, align: 64, offset: 1984)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1400, file: !919, line: 1070, baseType: !1053, size: 32, align: 32, offset: 2048)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1400, file: !919, line: 1075, baseType: !1053, size: 32, align: 32, offset: 2080)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1400, file: !919, line: 1080, baseType: !1053, size: 32, align: 32, offset: 2112)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1400, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1400, file: !919, line: 1084, baseType: !2086, size: 64, align: 64, offset: 2176)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64, align: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !2088)
!2088 = !{!2089, !2090, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2087, file: !4, line: 5093, baseType: !1044, size: 64, align: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2087, file: !4, line: 5094, baseType: !2091, size: 64, align: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64, align: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !2093)
!2093 = !{!2094, !2098, !2099, !2105, !2110, !2114, !2118}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2092, file: !4, line: 5260, baseType: !2095, size: 160, align: 32)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 160, align: 32, elements: !2096)
!2096 = !{!2097}
!2097 = !DISubrange(count: 5)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2092, file: !4, line: 5261, baseType: !1053, size: 32, align: 32, offset: 160)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2092, file: !4, line: 5262, baseType: !2100, size: 64, align: 64, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64, align: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!1053, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64, align: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !2087)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2092, file: !4, line: 5265, baseType: !2106, size: 64, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!1053, !2103, !1405, !2109, !1606, !1113, !1053}
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2092, file: !4, line: 5269, baseType: !2111, size: 64, align: 64, offset: 320)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64, align: 64)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{null, !2103}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2092, file: !4, line: 5270, baseType: !2115, size: 64, align: 64, offset: 384)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64, align: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!1053, !1405, !1113, !1053}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2092, file: !4, line: 5271, baseType: !2091, size: 64, align: 64, offset: 448)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2087, file: !4, line: 5095, baseType: !1051, size: 64, align: 64, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2087, file: !4, line: 5096, baseType: !1051, size: 64, align: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2087, file: !4, line: 5098, baseType: !1051, size: 64, align: 64, offset: 256)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2087, file: !4, line: 5100, baseType: !1053, size: 32, align: 32, offset: 320)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2087, file: !4, line: 5110, baseType: !1053, size: 32, align: 32, offset: 352)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2087, file: !4, line: 5111, baseType: !1051, size: 64, align: 64, offset: 384)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2087, file: !4, line: 5112, baseType: !1051, size: 64, align: 64, offset: 448)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2087, file: !4, line: 5115, baseType: !1051, size: 64, align: 64, offset: 512)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2087, file: !4, line: 5116, baseType: !1051, size: 64, align: 64, offset: 576)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2087, file: !4, line: 5117, baseType: !1053, size: 32, align: 32, offset: 640)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2087, file: !4, line: 5120, baseType: !1053, size: 32, align: 32, offset: 672)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2087, file: !4, line: 5121, baseType: !2131, size: 256, align: 64, offset: 704)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 256, align: 64, elements: !1510)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2087, file: !4, line: 5122, baseType: !2131, size: 256, align: 64, offset: 960)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2087, file: !4, line: 5123, baseType: !2131, size: 256, align: 64, offset: 1216)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2087, file: !4, line: 5125, baseType: !1053, size: 32, align: 32, offset: 1472)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2087, file: !4, line: 5132, baseType: !1051, size: 64, align: 64, offset: 1536)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2087, file: !4, line: 5133, baseType: !2131, size: 256, align: 64, offset: 1600)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2087, file: !4, line: 5141, baseType: !1053, size: 32, align: 32, offset: 1856)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2087, file: !4, line: 5148, baseType: !1051, size: 64, align: 64, offset: 1920)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2087, file: !4, line: 5161, baseType: !1053, size: 32, align: 32, offset: 1984)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2087, file: !4, line: 5176, baseType: !1053, size: 32, align: 32, offset: 2016)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2087, file: !4, line: 5190, baseType: !1053, size: 32, align: 32, offset: 2048)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2087, file: !4, line: 5197, baseType: !2131, size: 256, align: 64, offset: 2112)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2087, file: !4, line: 5202, baseType: !1051, size: 64, align: 64, offset: 2368)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2087, file: !4, line: 5207, baseType: !1051, size: 64, align: 64, offset: 2432)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2087, file: !4, line: 5214, baseType: !1053, size: 32, align: 32, offset: 2496)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2087, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2087, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2087, file: !4, line: 5234, baseType: !1053, size: 32, align: 32, offset: 2592)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2087, file: !4, line: 5239, baseType: !1053, size: 32, align: 32, offset: 2624)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2087, file: !4, line: 5240, baseType: !1053, size: 32, align: 32, offset: 2656)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2087, file: !4, line: 5245, baseType: !1053, size: 32, align: 32, offset: 2688)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2087, file: !4, line: 5246, baseType: !1053, size: 32, align: 32, offset: 2720)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2087, file: !4, line: 5256, baseType: !1053, size: 32, align: 32, offset: 2752)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1400, file: !919, line: 1089, baseType: !2155, size: 64, align: 64, offset: 2240)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64, align: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2156, file: !919, line: 2004, baseType: !1267, size: 704, align: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2156, file: !919, line: 2005, baseType: !2155, size: 64, align: 64, offset: 704)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1400, file: !919, line: 1090, baseType: !1253, size: 256, align: 64, offset: 2304)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1400, file: !919, line: 1092, baseType: !2162, size: 1088, align: 64, offset: 2560)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 1088, align: 64, elements: !2163)
!2163 = !{!2164}
!2164 = !DISubrange(count: 17)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1400, file: !919, line: 1094, baseType: !2166, size: 64, align: 64, offset: 3648)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64, align: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !2169)
!2169 = !{!2170, !2171, !2172, !2173, !2174}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2168, file: !919, line: 794, baseType: !1051, size: 64, align: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2168, file: !919, line: 795, baseType: !1051, size: 64, align: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2168, file: !919, line: 805, baseType: !1053, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2168, file: !919, line: 806, baseType: !1053, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2168, file: !919, line: 807, baseType: !1053, size: 32, align: 32, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1400, file: !919, line: 1096, baseType: !1053, size: 32, align: 32, offset: 3712)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1400, file: !919, line: 1097, baseType: !1050, size: 32, align: 32, offset: 3744)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1400, file: !919, line: 1104, baseType: !1053, size: 32, align: 32, offset: 3776)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1400, file: !919, line: 1109, baseType: !1053, size: 32, align: 32, offset: 3808)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1400, file: !919, line: 1110, baseType: !1053, size: 32, align: 32, offset: 3840)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1400, file: !919, line: 1111, baseType: !1053, size: 32, align: 32, offset: 3872)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1400, file: !919, line: 1113, baseType: !1051, size: 64, align: 64, offset: 3904)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1400, file: !919, line: 1114, baseType: !1051, size: 64, align: 64, offset: 3968)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1400, file: !919, line: 1123, baseType: !1053, size: 32, align: 32, offset: 4032)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1400, file: !919, line: 1128, baseType: !1053, size: 32, align: 32, offset: 4064)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1400, file: !919, line: 1133, baseType: !1053, size: 32, align: 32, offset: 4096)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1400, file: !919, line: 1142, baseType: !1051, size: 64, align: 64, offset: 4160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1400, file: !919, line: 1150, baseType: !1051, size: 64, align: 64, offset: 4224)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1400, file: !919, line: 1157, baseType: !1051, size: 64, align: 64, offset: 4288)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1400, file: !919, line: 1163, baseType: !1053, size: 32, align: 32, offset: 4352)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1400, file: !919, line: 1169, baseType: !1051, size: 64, align: 64, offset: 4416)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1400, file: !919, line: 1174, baseType: !1051, size: 64, align: 64, offset: 4480)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1400, file: !919, line: 1186, baseType: !1053, size: 32, align: 32, offset: 4544)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1400, file: !919, line: 1191, baseType: !1053, size: 32, align: 32, offset: 4576)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1400, file: !919, line: 1196, baseType: !2162, size: 1088, align: 64, offset: 4608)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1400, file: !919, line: 1197, baseType: !2196, size: 136, align: 8, offset: 5696)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 136, align: 8, elements: !2163)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1400, file: !919, line: 1202, baseType: !1051, size: 64, align: 64, offset: 5888)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1400, file: !919, line: 1203, baseType: !1042, size: 8, align: 8, offset: 5952)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1400, file: !919, line: 1204, baseType: !1042, size: 8, align: 8, offset: 5960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1400, file: !919, line: 1209, baseType: !1053, size: 32, align: 32, offset: 5984)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1400, file: !919, line: 1216, baseType: !1076, size: 64, align: 32, offset: 6016)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1400, file: !919, line: 1222, baseType: !2203, size: 64, align: 64, offset: 6080)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64, align: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !1147, line: 149, size: 640, align: 64, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2220, !2221}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !2205, file: !1147, line: 154, baseType: !1053, size: 32, align: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !2205, file: !1147, line: 161, baseType: !1677, size: 64, align: 64, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !2205, file: !1147, line: 162, baseType: !1053, size: 32, align: 32, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !2205, file: !1147, line: 167, baseType: !1053, size: 32, align: 32, offset: 160)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2205, file: !1147, line: 172, baseType: !1405, size: 64, align: 64, offset: 192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !2205, file: !1147, line: 176, baseType: !1053, size: 32, align: 32, offset: 256)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !2205, file: !1147, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !2205, file: !1147, line: 187, baseType: !2215, size: 192, align: 64, offset: 320)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2205, file: !1147, line: 183, size: 192, align: 64, elements: !2216)
!2216 = !{!2217, !2218, !2219}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2215, file: !1147, line: 184, baseType: !1678, size: 64, align: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2215, file: !1147, line: 185, baseType: !1266, size: 64, align: 64, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2215, file: !1147, line: 186, baseType: !1053, size: 32, align: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !2205, file: !1147, line: 192, baseType: !1053, size: 32, align: 32, offset: 512)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !2205, file: !1147, line: 194, baseType: !2222, size: 64, align: 64, offset: 576)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64, align: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !1147, line: 63, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !1147, line: 61, size: 192, align: 64, elements: !2225)
!2225 = !{!2226, !2227, !2228}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2224, file: !1147, line: 62, baseType: !1051, size: 64, align: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2224, file: !1147, line: 62, baseType: !1051, size: 64, align: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2224, file: !1147, line: 62, baseType: !1051, size: 64, align: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1231, file: !919, line: 1417, baseType: !2230, size: 8192, align: 8, offset: 448)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1133, size: 8192, align: 8, elements: !2231)
!2231 = !{!2232}
!2232 = !DISubrange(count: 1024)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1231, file: !919, line: 1433, baseType: !1516, size: 64, align: 64, offset: 8640)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1231, file: !919, line: 1442, baseType: !1051, size: 64, align: 64, offset: 8704)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1231, file: !919, line: 1452, baseType: !1051, size: 64, align: 64, offset: 8768)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1231, file: !919, line: 1459, baseType: !1051, size: 64, align: 64, offset: 8832)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1231, file: !919, line: 1461, baseType: !1050, size: 32, align: 32, offset: 8896)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1231, file: !919, line: 1462, baseType: !1053, size: 32, align: 32, offset: 8928)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !919, line: 1468, baseType: !1053, size: 32, align: 32, offset: 8960)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1231, file: !919, line: 1503, baseType: !1051, size: 64, align: 64, offset: 9024)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1231, file: !919, line: 1511, baseType: !1051, size: 64, align: 64, offset: 9088)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1231, file: !919, line: 1513, baseType: !1113, size: 64, align: 64, offset: 9152)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1231, file: !919, line: 1514, baseType: !1053, size: 32, align: 32, offset: 9216)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1231, file: !919, line: 1516, baseType: !1050, size: 32, align: 32, offset: 9248)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1231, file: !919, line: 1517, baseType: !2246, size: 64, align: 64, offset: 9280)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64, align: 64)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64, align: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2254, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2249, file: !919, line: 1260, baseType: !1053, size: 32, align: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2249, file: !919, line: 1261, baseType: !1053, size: 32, align: 32, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2249, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2249, file: !919, line: 1263, baseType: !2255, size: 64, align: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2249, file: !919, line: 1264, baseType: !1050, size: 32, align: 32, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2249, file: !919, line: 1265, baseType: !1571, size: 64, align: 64, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2249, file: !919, line: 1267, baseType: !1053, size: 32, align: 32, offset: 320)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2249, file: !919, line: 1268, baseType: !1053, size: 32, align: 32, offset: 352)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2249, file: !919, line: 1269, baseType: !1053, size: 32, align: 32, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2249, file: !919, line: 1270, baseType: !1053, size: 32, align: 32, offset: 416)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2249, file: !919, line: 1279, baseType: !1051, size: 64, align: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2249, file: !919, line: 1280, baseType: !1051, size: 64, align: 64, offset: 512)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2249, file: !919, line: 1282, baseType: !1051, size: 64, align: 64, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2249, file: !919, line: 1283, baseType: !1053, size: 32, align: 32, offset: 640)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1231, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1231, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1231, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1231, file: !919, line: 1547, baseType: !1050, size: 32, align: 32, offset: 9440)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1231, file: !919, line: 1553, baseType: !1050, size: 32, align: 32, offset: 9472)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1231, file: !919, line: 1566, baseType: !1050, size: 32, align: 32, offset: 9504)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1231, file: !919, line: 1567, baseType: !2273, size: 64, align: 64, offset: 9536)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64, align: 64)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64, align: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2276, file: !919, line: 1295, baseType: !1053, size: 32, align: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2276, file: !919, line: 1296, baseType: !1076, size: 64, align: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2276, file: !919, line: 1297, baseType: !1051, size: 64, align: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2276, file: !919, line: 1297, baseType: !1051, size: 64, align: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2276, file: !919, line: 1298, baseType: !1571, size: 64, align: 64, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1231, file: !919, line: 1577, baseType: !1571, size: 64, align: 64, offset: 9600)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1231, file: !919, line: 1590, baseType: !1051, size: 64, align: 64, offset: 9664)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1231, file: !919, line: 1597, baseType: !1053, size: 32, align: 32, offset: 9728)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1231, file: !919, line: 1604, baseType: !1053, size: 32, align: 32, offset: 9760)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1231, file: !919, line: 1615, baseType: !2288, size: 128, align: 64, offset: 9792)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !537, line: 61, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !537, line: 58, size: 128, align: 64, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2289, file: !537, line: 59, baseType: !1388, size: 64, align: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2289, file: !537, line: 60, baseType: !1044, size: 64, align: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1231, file: !919, line: 1620, baseType: !1053, size: 32, align: 32, offset: 9920)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1231, file: !919, line: 1639, baseType: !1051, size: 64, align: 64, offset: 9984)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1231, file: !919, line: 1645, baseType: !1053, size: 32, align: 32, offset: 10048)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1231, file: !919, line: 1652, baseType: !1053, size: 32, align: 32, offset: 10080)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1231, file: !919, line: 1659, baseType: !1053, size: 32, align: 32, offset: 10112)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1231, file: !919, line: 1668, baseType: !1053, size: 32, align: 32, offset: 10144)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1231, file: !919, line: 1677, baseType: !1053, size: 32, align: 32, offset: 10176)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1231, file: !919, line: 1685, baseType: !1053, size: 32, align: 32, offset: 10208)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1231, file: !919, line: 1693, baseType: !1053, size: 32, align: 32, offset: 10240)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1231, file: !919, line: 1701, baseType: !1053, size: 32, align: 32, offset: 10272)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1231, file: !919, line: 1709, baseType: !1053, size: 32, align: 32, offset: 10304)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1231, file: !919, line: 1716, baseType: !1053, size: 32, align: 32, offset: 10336)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1231, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1231, file: !919, line: 1731, baseType: !1051, size: 64, align: 64, offset: 10432)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1231, file: !919, line: 1738, baseType: !1050, size: 32, align: 32, offset: 10496)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1231, file: !919, line: 1745, baseType: !1053, size: 32, align: 32, offset: 10528)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1231, file: !919, line: 1752, baseType: !1053, size: 32, align: 32, offset: 10560)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1231, file: !919, line: 1761, baseType: !1053, size: 32, align: 32, offset: 10592)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1231, file: !919, line: 1768, baseType: !1053, size: 32, align: 32, offset: 10624)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1231, file: !919, line: 1776, baseType: !1516, size: 64, align: 64, offset: 10688)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1231, file: !919, line: 1784, baseType: !1516, size: 64, align: 64, offset: 10752)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1231, file: !919, line: 1790, baseType: !2315, size: 64, align: 64, offset: 10816)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64, align: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !1147, line: 66, size: 1088, align: 64, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2317, file: !1147, line: 71, baseType: !1053, size: 32, align: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2317, file: !1147, line: 78, baseType: !2155, size: 64, align: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2317, file: !1147, line: 79, baseType: !2155, size: 64, align: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2317, file: !1147, line: 82, baseType: !1051, size: 64, align: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2317, file: !1147, line: 90, baseType: !2155, size: 64, align: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2317, file: !1147, line: 91, baseType: !2155, size: 64, align: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2317, file: !1147, line: 95, baseType: !2155, size: 64, align: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2317, file: !1147, line: 96, baseType: !2155, size: 64, align: 64, offset: 448)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2317, file: !1147, line: 101, baseType: !1053, size: 32, align: 32, offset: 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2317, file: !1147, line: 108, baseType: !1051, size: 64, align: 64, offset: 576)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2317, file: !1147, line: 113, baseType: !1076, size: 64, align: 32, offset: 640)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2317, file: !1147, line: 116, baseType: !1053, size: 32, align: 32, offset: 704)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2317, file: !1147, line: 119, baseType: !1053, size: 32, align: 32, offset: 736)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2317, file: !1147, line: 121, baseType: !1053, size: 32, align: 32, offset: 768)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2317, file: !1147, line: 126, baseType: !1051, size: 64, align: 64, offset: 832)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2317, file: !1147, line: 131, baseType: !1053, size: 32, align: 32, offset: 896)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2317, file: !1147, line: 136, baseType: !1053, size: 32, align: 32, offset: 928)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2317, file: !1147, line: 141, baseType: !1571, size: 64, align: 64, offset: 960)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2317, file: !1147, line: 146, baseType: !1053, size: 32, align: 32, offset: 1024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1231, file: !919, line: 1798, baseType: !1053, size: 32, align: 32, offset: 10880)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1231, file: !919, line: 1806, baseType: !2340, size: 64, align: 64, offset: 10944)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64, align: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1415)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1231, file: !919, line: 1814, baseType: !2340, size: 64, align: 64, offset: 11008)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1231, file: !919, line: 1822, baseType: !2340, size: 64, align: 64, offset: 11072)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1231, file: !919, line: 1830, baseType: !2340, size: 64, align: 64, offset: 11136)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1231, file: !919, line: 1837, baseType: !1053, size: 32, align: 32, offset: 11200)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1231, file: !919, line: 1843, baseType: !1044, size: 64, align: 64, offset: 11264)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1231, file: !919, line: 1848, baseType: !2348, size: 64, align: 64, offset: 11328)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !2349)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64, align: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!1053, !1230, !1053, !1044, !1600}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1231, file: !919, line: 1854, baseType: !1051, size: 64, align: 64, offset: 11392)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1231, file: !919, line: 1862, baseType: !1110, size: 64, align: 64, offset: 11456)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1231, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1231, file: !919, line: 1889, baseType: !2356, size: 64, align: 64, offset: 11584)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64, align: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!1053, !1230, !2359, !1131, !1053, !2360, !2362}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64, align: 64)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64, align: 64)
!2361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2288)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1231, file: !919, line: 1897, baseType: !1516, size: 64, align: 64, offset: 11648)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1231, file: !919, line: 1919, baseType: !2365, size: 64, align: 64, offset: 11712)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64, align: 64)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!1053, !1230, !2359, !1131, !1053, !2362}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1231, file: !919, line: 1925, baseType: !2369, size: 64, align: 64, offset: 11776)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64, align: 64)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{null, !1230, !1332}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1231, file: !919, line: 1932, baseType: !1516, size: 64, align: 64, offset: 11840)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1231, file: !919, line: 1939, baseType: !1053, size: 32, align: 32, offset: 11904)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1231, file: !919, line: 1946, baseType: !1053, size: 32, align: 32, offset: 11936)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1128, file: !919, line: 549, baseType: !1263, size: 64, align: 64, offset: 704)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1128, file: !919, line: 550, baseType: !1227, size: 64, align: 64, offset: 768)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1128, file: !919, line: 554, baseType: !2378, size: 64, align: 64, offset: 832)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64, align: 64)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!1053, !1230, !1266, !1266, !1053}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1128, file: !919, line: 563, baseType: !2382, size: 64, align: 64, offset: 896)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64, align: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!1053, !3, !1053}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1128, file: !919, line: 565, baseType: !2386, size: 64, align: 64, offset: 960)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64, align: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{null, !1230, !1053, !1309, !1309}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1128, file: !919, line: 570, baseType: !2349, size: 64, align: 64, offset: 1024)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1128, file: !919, line: 581, baseType: !2391, size: 64, align: 64, offset: 1088)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64, align: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!1053, !1230, !1053, !2394, !1050}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1128, file: !919, line: 587, baseType: !1317, size: 64, align: 64, offset: 1152)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1128, file: !919, line: 592, baseType: !1323, size: 64, align: 64, offset: 1216)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1128, file: !919, line: 597, baseType: !1323, size: 64, align: 64, offset: 1280)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1128, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1128, file: !919, line: 608, baseType: !1227, size: 64, align: 64, offset: 1408)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1128, file: !919, line: 617, baseType: !2401, size: 64, align: 64, offset: 1472)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64, align: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{null, !1230}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1128, file: !919, line: 623, baseType: !2405, size: 64, align: 64, offset: 1536)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64, align: 64)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!1053, !1230, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64, align: 64)
!2409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!2410 = distinct !DIGlobalVariable(name: "ff_webm_muxer", scope: !0, file: !1126, line: 2845, type: !1127, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_webm_muxer)
!2411 = distinct !DIGlobalVariable(name: "ff_matroska_audio_muxer", scope: !0, file: !1126, line: 2873, type: !1127, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_matroska_audio_muxer)
!2412 = distinct !DIGlobalVariable(name: "additional_audio_tags", scope: !0, file: !1126, line: 2759, type: !2413, isLocal: true, isDefinition: true, variable: [13 x %struct.AVCodecTag]* @additional_audio_tags)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2414, size: 832, align: 32, elements: !2416)
!2414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2415)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecTag", file: !1147, line: 47, baseType: !1146)
!2416 = !{!2417}
!2417 = !DISubrange(count: 13)
!2418 = distinct !DIGlobalVariable(name: "additional_video_tags", scope: !0, file: !1126, line: 2775, type: !2419, isLocal: true, isDefinition: true, variable: [4 x %struct.AVCodecTag]* @additional_video_tags)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2414, size: 256, align: 32, elements: !1510)
!2420 = distinct !DIGlobalVariable(name: "additional_subtitle_tags", scope: !0, file: !1126, line: 2782, type: !2421, isLocal: true, isDefinition: true, variable: [3 x %struct.AVCodecTag]* @additional_subtitle_tags)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2414, size: 192, align: 32, elements: !2422)
!2422 = !{!1083}
!2423 = distinct !DIGlobalVariable(name: "matroska_class", scope: !0, file: !1126, line: 2803, type: !1153, isLocal: true, isDefinition: true, variable: %struct.AVClass* @matroska_class)
!2424 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !1126, line: 2790, type: !2425, isLocal: true, isDefinition: true, variable: [9 x %struct.AVOption]* @options)
!2425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2426, size: 4608, align: 64, elements: !2428)
!2426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2427)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1165)
!2428 = !{!2429}
!2429 = !DISubrange(count: 9)
!2430 = distinct !DIGlobalVariable(name: "webm_class", scope: !0, file: !1126, line: 2838, type: !1153, isLocal: true, isDefinition: true, variable: %struct.AVClass* @webm_class)
!2431 = distinct !DIGlobalVariable(name: "mka_class", scope: !0, file: !1126, line: 2867, type: !1153, isLocal: true, isDefinition: true, variable: %struct.AVClass* @mka_class)
!2432 = !{i32 2, !"Dwarf Version", i32 4}
!2433 = !{i32 2, !"Debug Info Version", i32 3}
!2434 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2435 = distinct !DISubprogram(name: "mkv_write_header", scope: !1126, file: !1126, line: 1856, type: !2436, isLocal: true, isDefinition: true, scopeLine: 1857, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!1053, !2438}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64, align: 64)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1231)
!2440 = !{}
!2441 = !DILocalVariable(name: "s", arg: 1, scope: !2442, file: !537, line: 557, type: !1332)
!2442 = distinct !DISubprogram(name: "avio_tell", scope: !537, file: !537, line: 557, type: !2443, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!1051, !1332}
!2445 = !DIExpression()
!2446 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 2023, column: 25, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !1126, line: 2022, column: 63)
!2449 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2022, column: 9)
!2450 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !2451)
!2451 = distinct !DILocation(line: 1956, column: 28, scope: !2435)
!2452 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !2453)
!2453 = distinct !DILocation(line: 1911, column: 66, scope: !2435)
!2454 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !2455)
!2455 = distinct !DILocation(line: 1898, column: 27, scope: !2435)
!2456 = !DILocalVariable(name: "s", arg: 1, scope: !2435, file: !1126, line: 1856, type: !2438)
!2457 = !DILocation(line: 1856, column: 46, scope: !2435)
!2458 = !DILocalVariable(name: "mkv", scope: !2435, file: !1126, line: 1858, type: !2459)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaMuxContext", file: !1126, line: 165, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaMuxContext", file: !1126, line: 120, size: 11008, align: 64, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2501, !2519, !2530, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2560, !2561, !2562}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2461, file: !1126, line: 121, baseType: !1152, size: 64, align: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2461, file: !1126, line: 122, baseType: !1053, size: 32, align: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_bc", scope: !2461, file: !1126, line: 123, baseType: !1332, size: 64, align: 64, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "tags_bc", scope: !2461, file: !1126, line: 124, baseType: !1332, size: 64, align: 64, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2461, file: !1126, line: 125, baseType: !2468, size: 128, align: 64, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "ebml_master", file: !1126, line: 63, baseType: !2469)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ebml_master", file: !1126, line: 60, size: 128, align: 64, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2469, file: !1126, line: 61, baseType: !1051, size: 64, align: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "sizebytes", scope: !2469, file: !1126, line: 62, baseType: !1053, size: 32, align: 32, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "info_bc", scope: !2461, file: !1126, line: 126, baseType: !1332, size: 64, align: 64, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2461, file: !1126, line: 127, baseType: !2468, size: 128, align: 64, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "tracks_bc", scope: !2461, file: !1126, line: 128, baseType: !1332, size: 64, align: 64, offset: 576)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tracks_master", scope: !2461, file: !1126, line: 129, baseType: !2468, size: 128, align: 64, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "segment", scope: !2461, file: !1126, line: 130, baseType: !2468, size: 128, align: 64, offset: 768)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "segment_offset", scope: !2461, file: !1126, line: 131, baseType: !1051, size: 64, align: 64, offset: 896)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "cluster", scope: !2461, file: !1126, line: 132, baseType: !2468, size: 128, align: 64, offset: 960)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_pos", scope: !2461, file: !1126, line: 133, baseType: !1051, size: 64, align: 64, offset: 1088)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_pts", scope: !2461, file: !1126, line: 134, baseType: !1051, size: 64, align: 64, offset: 1152)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "duration_offset", scope: !2461, file: !1126, line: 135, baseType: !1051, size: 64, align: 64, offset: 1216)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2461, file: !1126, line: 136, baseType: !1051, size: 64, align: 64, offset: 1280)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "main_seekhead", scope: !2461, file: !1126, line: 137, baseType: !2485, size: 64, align: 64, offset: 1344)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64, align: 64)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_seekhead", file: !1126, line: 77, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_seekhead", file: !1126, line: 70, size: 320, align: 64, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2500}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "filepos", scope: !2487, file: !1126, line: 71, baseType: !1051, size: 64, align: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "segment_offset", scope: !2487, file: !1126, line: 72, baseType: !1051, size: 64, align: 64, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_size", scope: !2487, file: !1126, line: 73, baseType: !1053, size: 32, align: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !2487, file: !1126, line: 74, baseType: !1053, size: 32, align: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2487, file: !1126, line: 75, baseType: !2494, size: 64, align: 64, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64, align: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_seekhead_entry", file: !1126, line: 68, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_seekhead_entry", file: !1126, line: 65, size: 128, align: 64, elements: !2497)
!2497 = !{!2498, !2499}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "elementid", scope: !2496, file: !1126, line: 66, baseType: !1050, size: 32, align: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "segmentpos", scope: !2496, file: !1126, line: 67, baseType: !1039, size: 64, align: 64, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2487, file: !1126, line: 76, baseType: !1053, size: 32, align: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "cues", scope: !2461, file: !1126, line: 138, baseType: !2502, size: 64, align: 64, offset: 1408)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64, align: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_cues", file: !1126, line: 92, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_cues", file: !1126, line: 88, size: 192, align: 64, elements: !2505)
!2505 = !{!2506, !2507, !2518}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "segment_offset", scope: !2504, file: !1126, line: 89, baseType: !1051, size: 64, align: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2504, file: !1126, line: 90, baseType: !2508, size: 64, align: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64, align: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_cuepoint", file: !1126, line: 86, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_cuepoint", file: !1126, line: 79, size: 320, align: 64, elements: !2511)
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2510, file: !1126, line: 80, baseType: !1039, size: 64, align: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "stream_idx", scope: !2510, file: !1126, line: 81, baseType: !1053, size: 32, align: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tracknum", scope: !2510, file: !1126, line: 82, baseType: !1053, size: 32, align: 32, offset: 96)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_pos", scope: !2510, file: !1126, line: 83, baseType: !1051, size: 64, align: 64, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "relative_pos", scope: !2510, file: !1126, line: 84, baseType: !1051, size: 64, align: 64, offset: 192)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2510, file: !1126, line: 85, baseType: !1051, size: 64, align: 64, offset: 256)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2504, file: !1126, line: 91, baseType: !1053, size: 32, align: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2461, file: !1126, line: 139, baseType: !2520, size: 64, align: 64, offset: 1472)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64, align: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_track", file: !1126, line: 101, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_track", file: !1126, line: 94, size: 320, align: 64, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "write_dts", scope: !2522, file: !1126, line: 95, baseType: !1053, size: 32, align: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "has_cue", scope: !2522, file: !1126, line: 96, baseType: !1053, size: 32, align: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2522, file: !1126, line: 97, baseType: !1053, size: 32, align: 32, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_offset", scope: !2522, file: !1126, line: 98, baseType: !1051, size: 64, align: 64, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "codecpriv_offset", scope: !2522, file: !1126, line: 99, baseType: !1051, size: 64, align: 64, offset: 192)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ts_offset", scope: !2522, file: !1126, line: 100, baseType: !1051, size: 64, align: 64, offset: 256)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "attachments", scope: !2461, file: !1126, line: 140, baseType: !2531, size: 64, align: 64, offset: 1536)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_attachments", file: !1126, line: 111, baseType: !2533)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_attachments", file: !1126, line: 108, size: 128, align: 64, elements: !2534)
!2534 = !{!2535, !2542}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2533, file: !1126, line: 109, baseType: !2536, size: 64, align: 64)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64, align: 64)
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "mkv_attachment", file: !1126, line: 106, baseType: !2538)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mkv_attachment", file: !1126, line: 103, size: 64, align: 32, elements: !2539)
!2539 = !{!2540, !2541}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "stream_idx", scope: !2538, file: !1126, line: 104, baseType: !1053, size: 32, align: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "fileuid", scope: !2538, file: !1126, line: 105, baseType: !1049, size: 32, align: 32, offset: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2533, file: !1126, line: 110, baseType: !1053, size: 32, align: 32, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "cur_audio_pkt", scope: !2461, file: !1126, line: 142, baseType: !1267, size: 704, align: 64, offset: 1600)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "have_attachments", scope: !2461, file: !1126, line: 144, baseType: !1053, size: 32, align: 32, offset: 2304)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "have_video", scope: !2461, file: !1126, line: 145, baseType: !1053, size: 32, align: 32, offset: 2336)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "reserve_cues_space", scope: !2461, file: !1126, line: 147, baseType: !1053, size: 32, align: 32, offset: 2368)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_size_limit", scope: !2461, file: !1126, line: 148, baseType: !1053, size: 32, align: 32, offset: 2400)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "cues_pos", scope: !2461, file: !1126, line: 149, baseType: !1051, size: 64, align: 64, offset: 2432)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_time_limit", scope: !2461, file: !1126, line: 150, baseType: !1051, size: 64, align: 64, offset: 2496)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "is_dash", scope: !2461, file: !1126, line: 151, baseType: !1053, size: 32, align: 32, offset: 2560)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dash_track_number", scope: !2461, file: !1126, line: 152, baseType: !1053, size: 32, align: 32, offset: 2592)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "is_live", scope: !2461, file: !1126, line: 153, baseType: !1053, size: 32, align: 32, offset: 2624)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "write_crc", scope: !2461, file: !1126, line: 154, baseType: !1053, size: 32, align: 32, offset: 2656)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "chapter_id_offset", scope: !2461, file: !1126, line: 156, baseType: !1049, size: 32, align: 32, offset: 2688)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "wrote_chapters", scope: !2461, file: !1126, line: 157, baseType: !1053, size: 32, align: 32, offset: 2720)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "last_track_timestamp", scope: !2461, file: !1126, line: 159, baseType: !2557, size: 8064, align: 64, offset: 2752)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 8064, align: 64, elements: !2558)
!2558 = !{!2559}
!2559 = !DISubrange(count: 126)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "stream_durations", scope: !2461, file: !1126, line: 161, baseType: !1309, size: 64, align: 64, offset: 10816)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "stream_duration_offsets", scope: !2461, file: !1126, line: 162, baseType: !1309, size: 64, align: 64, offset: 10880)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "allow_raw_vfw", scope: !2461, file: !1126, line: 164, baseType: !1053, size: 32, align: 32, offset: 10944)
!2563 = !DILocation(line: 1858, column: 25, scope: !2435)
!2564 = !DILocation(line: 1858, column: 31, scope: !2435)
!2565 = !DILocation(line: 1858, column: 34, scope: !2435)
!2566 = !DILocalVariable(name: "pb", scope: !2435, file: !1126, line: 1859, type: !1332)
!2567 = !DILocation(line: 1859, column: 18, scope: !2435)
!2568 = !DILocation(line: 1859, column: 23, scope: !2435)
!2569 = !DILocation(line: 1859, column: 26, scope: !2435)
!2570 = !DILocalVariable(name: "ebml_header", scope: !2435, file: !1126, line: 1860, type: !2468)
!2571 = !DILocation(line: 1860, column: 17, scope: !2435)
!2572 = !DILocalVariable(name: "tag", scope: !2435, file: !1126, line: 1861, type: !2573)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64, align: 64)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1573, line: 84, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1573, line: 81, size: 128, align: 64, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2575, file: !1573, line: 82, baseType: !1516, size: 64, align: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2575, file: !1573, line: 83, baseType: !1516, size: 64, align: 64, offset: 64)
!2579 = !DILocation(line: 1861, column: 24, scope: !2435)
!2580 = !DILocalVariable(name: "ret", scope: !2435, file: !1126, line: 1862, type: !1053)
!2581 = !DILocation(line: 1862, column: 9, scope: !2435)
!2582 = !DILocalVariable(name: "i", scope: !2435, file: !1126, line: 1862, type: !1053)
!2583 = !DILocation(line: 1862, column: 14, scope: !2435)
!2584 = !DILocalVariable(name: "version", scope: !2435, file: !1126, line: 1862, type: !1053)
!2585 = !DILocation(line: 1862, column: 17, scope: !2435)
!2586 = !DILocalVariable(name: "creation_time", scope: !2435, file: !1126, line: 1863, type: !1051)
!2587 = !DILocation(line: 1863, column: 13, scope: !2435)
!2588 = !DILocation(line: 1865, column: 17, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1865, column: 9)
!2590 = !DILocation(line: 1865, column: 20, scope: !2589)
!2591 = !DILocation(line: 1865, column: 29, scope: !2589)
!2592 = !DILocation(line: 1865, column: 10, scope: !2589)
!2593 = !DILocation(line: 1865, column: 9, scope: !2435)
!2594 = !DILocation(line: 1866, column: 9, scope: !2589)
!2595 = !DILocation(line: 1866, column: 14, scope: !2589)
!2596 = !DILocation(line: 1866, column: 19, scope: !2589)
!2597 = !DILocation(line: 1868, column: 9, scope: !2589)
!2598 = !DILocation(line: 1868, column: 14, scope: !2589)
!2599 = !DILocation(line: 1868, column: 19, scope: !2589)
!2600 = !DILocation(line: 1870, column: 9, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1870, column: 9)
!2602 = !DILocation(line: 1870, column: 14, scope: !2601)
!2603 = !DILocation(line: 1870, column: 19, scope: !2601)
!2604 = !DILocation(line: 1870, column: 27, scope: !2601)
!2605 = !DILocation(line: 1871, column: 21, scope: !2601)
!2606 = !DILocation(line: 1871, column: 24, scope: !2601)
!2607 = !DILocation(line: 1871, column: 9, scope: !2601)
!2608 = !DILocation(line: 1871, column: 57, scope: !2601)
!2609 = !DILocation(line: 1872, column: 21, scope: !2601)
!2610 = !DILocation(line: 1872, column: 24, scope: !2601)
!2611 = !DILocation(line: 1872, column: 9, scope: !2601)
!2612 = !DILocation(line: 1870, column: 9, scope: !2613)
!2613 = !DILexicalBlockFile(scope: !2435, file: !1126, discriminator: 1)
!2614 = !DILocation(line: 1873, column: 17, scope: !2601)
!2615 = !DILocation(line: 1873, column: 9, scope: !2601)
!2616 = !DILocation(line: 1875, column: 12, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1875, column: 5)
!2618 = !DILocation(line: 1875, column: 10, scope: !2617)
!2619 = !DILocation(line: 1875, column: 17, scope: !2620)
!2620 = !DILexicalBlockFile(scope: !2621, file: !1126, discriminator: 1)
!2621 = distinct !DILexicalBlock(scope: !2617, file: !1126, line: 1875, column: 5)
!2622 = !DILocation(line: 1875, column: 21, scope: !2620)
!2623 = !DILocation(line: 1875, column: 24, scope: !2620)
!2624 = !DILocation(line: 1875, column: 19, scope: !2620)
!2625 = !DILocation(line: 1875, column: 5, scope: !2620)
!2626 = !DILocation(line: 1876, column: 24, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2628, file: !1126, line: 1876, column: 13)
!2628 = distinct !DILexicalBlock(scope: !2621, file: !1126, line: 1875, column: 41)
!2629 = !DILocation(line: 1876, column: 13, scope: !2627)
!2630 = !DILocation(line: 1876, column: 16, scope: !2627)
!2631 = !DILocation(line: 1876, column: 28, scope: !2627)
!2632 = !DILocation(line: 1876, column: 38, scope: !2627)
!2633 = !DILocation(line: 1876, column: 47, scope: !2627)
!2634 = !DILocation(line: 1876, column: 67, scope: !2627)
!2635 = !DILocation(line: 1877, column: 36, scope: !2627)
!2636 = !DILocation(line: 1877, column: 25, scope: !2627)
!2637 = !DILocation(line: 1877, column: 28, scope: !2627)
!2638 = !DILocation(line: 1877, column: 40, scope: !2627)
!2639 = !DILocation(line: 1877, column: 13, scope: !2627)
!2640 = !DILocation(line: 1877, column: 73, scope: !2627)
!2641 = !DILocation(line: 1878, column: 36, scope: !2627)
!2642 = !DILocation(line: 1878, column: 25, scope: !2627)
!2643 = !DILocation(line: 1878, column: 28, scope: !2627)
!2644 = !DILocation(line: 1878, column: 40, scope: !2627)
!2645 = !DILocation(line: 1878, column: 13, scope: !2627)
!2646 = !DILocation(line: 1876, column: 13, scope: !2647)
!2647 = !DILexicalBlockFile(scope: !2628, file: !1126, discriminator: 1)
!2648 = !DILocation(line: 1879, column: 21, scope: !2627)
!2649 = !DILocation(line: 1879, column: 13, scope: !2627)
!2650 = !DILocation(line: 1880, column: 5, scope: !2628)
!2651 = !DILocation(line: 1875, column: 37, scope: !2652)
!2652 = !DILexicalBlockFile(scope: !2621, file: !1126, discriminator: 2)
!2653 = !DILocation(line: 1875, column: 5, scope: !2652)
!2654 = distinct !{!2654, !2655}
!2655 = !DILocation(line: 1875, column: 5, scope: !2435)
!2656 = !DILocation(line: 1882, column: 36, scope: !2435)
!2657 = !DILocation(line: 1882, column: 39, scope: !2435)
!2658 = !DILocation(line: 1882, column: 19, scope: !2435)
!2659 = !DILocation(line: 1882, column: 5, scope: !2435)
!2660 = !DILocation(line: 1882, column: 10, scope: !2435)
!2661 = !DILocation(line: 1882, column: 17, scope: !2435)
!2662 = !DILocation(line: 1883, column: 10, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1883, column: 9)
!2664 = !DILocation(line: 1883, column: 15, scope: !2663)
!2665 = !DILocation(line: 1883, column: 9, scope: !2435)
!2666 = !DILocation(line: 1884, column: 13, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2663, file: !1126, line: 1883, column: 23)
!2668 = !DILocation(line: 1885, column: 9, scope: !2667)
!2669 = !DILocation(line: 1887, column: 37, scope: !2435)
!2670 = !DILocation(line: 1887, column: 19, scope: !2435)
!2671 = !DILocation(line: 1887, column: 19, scope: !2613)
!2672 = !DILocation(line: 1888, column: 20, scope: !2435)
!2673 = !DILocation(line: 1888, column: 5, scope: !2435)
!2674 = !DILocation(line: 1889, column: 20, scope: !2435)
!2675 = !DILocation(line: 1889, column: 5, scope: !2435)
!2676 = !DILocation(line: 1890, column: 20, scope: !2435)
!2677 = !DILocation(line: 1890, column: 5, scope: !2435)
!2678 = !DILocation(line: 1891, column: 20, scope: !2435)
!2679 = !DILocation(line: 1891, column: 5, scope: !2435)
!2680 = !DILocation(line: 1892, column: 22, scope: !2435)
!2681 = !DILocation(line: 1892, column: 35, scope: !2435)
!2682 = !DILocation(line: 1892, column: 38, scope: !2435)
!2683 = !DILocation(line: 1892, column: 47, scope: !2435)
!2684 = !DILocation(line: 1892, column: 5, scope: !2435)
!2685 = !DILocation(line: 1893, column: 20, scope: !2435)
!2686 = !DILocation(line: 1893, column: 33, scope: !2435)
!2687 = !DILocation(line: 1893, column: 5, scope: !2435)
!2688 = !DILocation(line: 1894, column: 20, scope: !2435)
!2689 = !DILocation(line: 1894, column: 5, scope: !2435)
!2690 = !DILocation(line: 1895, column: 21, scope: !2435)
!2691 = !DILocation(line: 1895, column: 5, scope: !2435)
!2692 = !DILocation(line: 1897, column: 5, scope: !2435)
!2693 = !DILocation(line: 1897, column: 10, scope: !2435)
!2694 = !DILocation(line: 1897, column: 38, scope: !2435)
!2695 = !DILocation(line: 1897, column: 20, scope: !2435)
!2696 = !DILocation(line: 1897, column: 20, scope: !2613)
!2697 = !DILocation(line: 1898, column: 37, scope: !2435)
!2698 = !DILocation(line: 1898, column: 27, scope: !2435)
!2699 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !2455)
!2700 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !2455)
!2701 = !DILocation(line: 1898, column: 5, scope: !2435)
!2702 = !DILocation(line: 1898, column: 10, scope: !2435)
!2703 = !DILocation(line: 1898, column: 25, scope: !2435)
!2704 = !DILocation(line: 1905, column: 45, scope: !2435)
!2705 = !DILocation(line: 1905, column: 49, scope: !2435)
!2706 = !DILocation(line: 1905, column: 54, scope: !2435)
!2707 = !DILocation(line: 1905, column: 26, scope: !2435)
!2708 = !DILocation(line: 1905, column: 5, scope: !2435)
!2709 = !DILocation(line: 1905, column: 10, scope: !2435)
!2710 = !DILocation(line: 1905, column: 24, scope: !2435)
!2711 = !DILocation(line: 1906, column: 10, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1906, column: 9)
!2713 = !DILocation(line: 1906, column: 15, scope: !2712)
!2714 = !DILocation(line: 1906, column: 9, scope: !2435)
!2715 = !DILocation(line: 1907, column: 13, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2712, file: !1126, line: 1906, column: 30)
!2717 = !DILocation(line: 1908, column: 9, scope: !2716)
!2718 = !DILocation(line: 1911, column: 34, scope: !2435)
!2719 = !DILocation(line: 1911, column: 39, scope: !2435)
!2720 = !DILocation(line: 1911, column: 76, scope: !2435)
!2721 = !DILocation(line: 1911, column: 66, scope: !2435)
!2722 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !2453)
!2723 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !2453)
!2724 = !DILocation(line: 1911, column: 11, scope: !2613)
!2725 = !DILocation(line: 1911, column: 9, scope: !2435)
!2726 = !DILocation(line: 1912, column: 9, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1912, column: 9)
!2728 = !DILocation(line: 1912, column: 13, scope: !2727)
!2729 = !DILocation(line: 1912, column: 9, scope: !2435)
!2730 = !DILocation(line: 1912, column: 18, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2727, file: !1126, discriminator: 1)
!2732 = !DILocation(line: 1914, column: 35, scope: !2435)
!2733 = !DILocation(line: 1914, column: 40, scope: !2435)
!2734 = !DILocation(line: 1914, column: 45, scope: !2435)
!2735 = !DILocation(line: 1914, column: 54, scope: !2435)
!2736 = !DILocation(line: 1914, column: 60, scope: !2435)
!2737 = !DILocation(line: 1914, column: 65, scope: !2435)
!2738 = !DILocation(line: 1914, column: 11, scope: !2435)
!2739 = !DILocation(line: 1914, column: 9, scope: !2435)
!2740 = !DILocation(line: 1915, column: 9, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1915, column: 9)
!2742 = !DILocation(line: 1915, column: 13, scope: !2741)
!2743 = !DILocation(line: 1915, column: 9, scope: !2435)
!2744 = !DILocation(line: 1916, column: 16, scope: !2741)
!2745 = !DILocation(line: 1916, column: 9, scope: !2741)
!2746 = !DILocation(line: 1917, column: 10, scope: !2435)
!2747 = !DILocation(line: 1917, column: 15, scope: !2435)
!2748 = !DILocation(line: 1917, column: 8, scope: !2435)
!2749 = !DILocation(line: 1919, column: 19, scope: !2435)
!2750 = !DILocation(line: 1919, column: 5, scope: !2435)
!2751 = !DILocation(line: 1920, column: 28, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1920, column: 9)
!2753 = !DILocation(line: 1920, column: 31, scope: !2752)
!2754 = !DILocation(line: 1920, column: 16, scope: !2752)
!2755 = !DILocation(line: 1920, column: 14, scope: !2752)
!2756 = !DILocation(line: 1920, column: 9, scope: !2435)
!2757 = !DILocation(line: 1921, column: 25, scope: !2752)
!2758 = !DILocation(line: 1921, column: 37, scope: !2752)
!2759 = !DILocation(line: 1921, column: 42, scope: !2752)
!2760 = !DILocation(line: 1921, column: 9, scope: !2752)
!2761 = !DILocation(line: 1922, column: 11, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1922, column: 9)
!2763 = !DILocation(line: 1922, column: 14, scope: !2762)
!2764 = !DILocation(line: 1922, column: 20, scope: !2762)
!2765 = !DILocation(line: 1922, column: 9, scope: !2435)
!2766 = !DILocation(line: 1923, column: 25, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2762, file: !1126, line: 1922, column: 31)
!2768 = !DILocation(line: 1923, column: 9, scope: !2767)
!2769 = !DILocation(line: 1924, column: 32, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2767, file: !1126, line: 1924, column: 13)
!2771 = !DILocation(line: 1924, column: 35, scope: !2770)
!2772 = !DILocation(line: 1924, column: 20, scope: !2770)
!2773 = !DILocation(line: 1924, column: 18, scope: !2770)
!2774 = !DILocation(line: 1924, column: 13, scope: !2767)
!2775 = !DILocation(line: 1925, column: 29, scope: !2770)
!2776 = !DILocation(line: 1925, column: 41, scope: !2770)
!2777 = !DILocation(line: 1925, column: 46, scope: !2770)
!2778 = !DILocation(line: 1925, column: 13, scope: !2770)
!2779 = !DILocation(line: 1927, column: 29, scope: !2770)
!2780 = !DILocation(line: 1927, column: 13, scope: !2770)
!2781 = !DILocation(line: 1929, column: 13, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2767, file: !1126, line: 1929, column: 13)
!2783 = !DILocation(line: 1929, column: 18, scope: !2782)
!2784 = !DILocation(line: 1929, column: 23, scope: !2782)
!2785 = !DILocation(line: 1929, column: 13, scope: !2767)
!2786 = !DILocalVariable(name: "segment_uid", scope: !2787, file: !1126, line: 1930, type: !2788)
!2787 = distinct !DILexicalBlock(scope: !2782, file: !1126, line: 1929, column: 32)
!2788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 128, align: 32, elements: !1510)
!2789 = !DILocation(line: 1930, column: 22, scope: !2787)
!2790 = !DILocalVariable(name: "lfg", scope: !2787, file: !1126, line: 1931, type: !2791)
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !2792, line: 30, baseType: !2793)
!2792 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !2792, line: 27, size: 2080, align: 32, elements: !2794)
!2794 = !{!2795, !2799}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2793, file: !2792, line: 28, baseType: !2796, size: 2048, align: 32)
!2796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 2048, align: 32, elements: !2797)
!2797 = !{!2798}
!2798 = !DISubrange(count: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2793, file: !2792, line: 29, baseType: !1053, size: 32, align: 32, offset: 2048)
!2800 = !DILocation(line: 1931, column: 19, scope: !2787)
!2801 = !DILocation(line: 1933, column: 31, scope: !2787)
!2802 = !DILocation(line: 1933, column: 13, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2787, file: !1126, discriminator: 1)
!2804 = !DILocation(line: 1935, column: 20, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2787, file: !1126, line: 1935, column: 13)
!2806 = !DILocation(line: 1935, column: 18, scope: !2805)
!2807 = !DILocation(line: 1935, column: 25, scope: !2808)
!2808 = !DILexicalBlockFile(scope: !2809, file: !1126, discriminator: 1)
!2809 = distinct !DILexicalBlock(scope: !2805, file: !1126, line: 1935, column: 13)
!2810 = !DILocation(line: 1935, column: 27, scope: !2808)
!2811 = !DILocation(line: 1935, column: 13, scope: !2808)
!2812 = !DILocation(line: 1936, column: 34, scope: !2809)
!2813 = !DILocation(line: 1936, column: 29, scope: !2809)
!2814 = !DILocation(line: 1936, column: 17, scope: !2809)
!2815 = !DILocation(line: 1936, column: 32, scope: !2809)
!2816 = !DILocation(line: 1935, column: 33, scope: !2817)
!2817 = !DILexicalBlockFile(scope: !2809, file: !1126, discriminator: 2)
!2818 = !DILocation(line: 1935, column: 13, scope: !2817)
!2819 = distinct !{!2819, !2820}
!2820 = !DILocation(line: 1935, column: 13, scope: !2787)
!2821 = !DILocation(line: 1938, column: 29, scope: !2787)
!2822 = !DILocation(line: 1938, column: 41, scope: !2787)
!2823 = !DILocation(line: 1938, column: 13, scope: !2787)
!2824 = !DILocation(line: 1939, column: 9, scope: !2787)
!2825 = !DILocation(line: 1940, column: 5, scope: !2767)
!2826 = !DILocalVariable(name: "ident", scope: !2827, file: !1126, line: 1941, type: !1131)
!2827 = distinct !DILexicalBlock(scope: !2762, file: !1126, line: 1940, column: 12)
!2828 = !DILocation(line: 1941, column: 21, scope: !2827)
!2829 = !DILocation(line: 1942, column: 25, scope: !2827)
!2830 = !DILocation(line: 1942, column: 38, scope: !2827)
!2831 = !DILocation(line: 1942, column: 9, scope: !2827)
!2832 = !DILocation(line: 1943, column: 25, scope: !2827)
!2833 = !DILocation(line: 1943, column: 37, scope: !2827)
!2834 = !DILocation(line: 1943, column: 9, scope: !2827)
!2835 = !DILocation(line: 1946, column: 41, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1946, column: 9)
!2837 = !DILocation(line: 1946, column: 9, scope: !2836)
!2838 = !DILocation(line: 1946, column: 63, scope: !2836)
!2839 = !DILocation(line: 1946, column: 9, scope: !2435)
!2840 = !DILocalVariable(name: "date_utc", scope: !2841, file: !1126, line: 1948, type: !1051)
!2841 = distinct !DILexicalBlock(scope: !2836, file: !1126, line: 1946, column: 68)
!2842 = !DILocation(line: 1948, column: 17, scope: !2841)
!2843 = !DILocation(line: 1948, column: 29, scope: !2841)
!2844 = !DILocation(line: 1948, column: 43, scope: !2841)
!2845 = !DILocation(line: 1948, column: 64, scope: !2841)
!2846 = !DILocalVariable(name: "date_utc_buf", scope: !2841, file: !1126, line: 1949, type: !2847)
!2847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 64, align: 8, elements: !1504)
!2848 = !DILocation(line: 1949, column: 17, scope: !2841)
!2849 = !DILocation(line: 1950, column: 69, scope: !2841)
!2850 = !DILocation(line: 1950, column: 58, scope: !2841)
!2851 = !DILocation(line: 1950, column: 52, scope: !2841)
!2852 = !DILocation(line: 1950, column: 55, scope: !2841)
!2853 = !DILocation(line: 1951, column: 25, scope: !2841)
!2854 = !DILocation(line: 1951, column: 37, scope: !2841)
!2855 = !DILocation(line: 1951, column: 9, scope: !2841)
!2856 = !DILocation(line: 1952, column: 5, scope: !2841)
!2857 = !DILocation(line: 1955, column: 5, scope: !2435)
!2858 = !DILocation(line: 1955, column: 10, scope: !2435)
!2859 = !DILocation(line: 1955, column: 19, scope: !2435)
!2860 = !DILocation(line: 1956, column: 38, scope: !2435)
!2861 = !DILocation(line: 1956, column: 28, scope: !2435)
!2862 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !2451)
!2863 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !2451)
!2864 = !DILocation(line: 1956, column: 5, scope: !2435)
!2865 = !DILocation(line: 1956, column: 10, scope: !2435)
!2866 = !DILocation(line: 1956, column: 26, scope: !2435)
!2867 = !DILocation(line: 1957, column: 10, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1957, column: 9)
!2869 = !DILocation(line: 1957, column: 15, scope: !2868)
!2870 = !DILocation(line: 1957, column: 9, scope: !2435)
!2871 = !DILocalVariable(name: "metadata_duration", scope: !2872, file: !1126, line: 1958, type: !1051)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !1126, line: 1957, column: 24)
!2873 = !DILocation(line: 1958, column: 17, scope: !2872)
!2874 = !DILocation(line: 1958, column: 59, scope: !2872)
!2875 = !DILocation(line: 1958, column: 37, scope: !2872)
!2876 = !DILocation(line: 1960, column: 13, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !1126, line: 1960, column: 13)
!2878 = !DILocation(line: 1960, column: 16, scope: !2877)
!2879 = !DILocation(line: 1960, column: 25, scope: !2877)
!2880 = !DILocation(line: 1960, column: 13, scope: !2872)
!2881 = !DILocalVariable(name: "scaledDuration", scope: !2882, file: !1126, line: 1961, type: !1051)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !1126, line: 1960, column: 30)
!2883 = !DILocation(line: 1961, column: 21, scope: !2882)
!2884 = !DILocation(line: 1961, column: 49, scope: !2882)
!2885 = !DILocation(line: 1961, column: 52, scope: !2882)
!2886 = !DILocation(line: 1961, column: 38, scope: !2882)
!2887 = !DILocation(line: 1962, column: 28, scope: !2882)
!2888 = !DILocation(line: 1962, column: 40, scope: !2882)
!2889 = !DILocation(line: 1962, column: 13, scope: !2882)
!2890 = !DILocation(line: 1963, column: 20, scope: !2882)
!2891 = !DILocation(line: 1963, column: 96, scope: !2882)
!2892 = !DILocation(line: 1963, column: 13, scope: !2882)
!2893 = !DILocation(line: 1964, column: 9, scope: !2882)
!2894 = !DILocation(line: 1964, column: 20, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2896, file: !1126, discriminator: 1)
!2896 = distinct !DILexicalBlock(scope: !2877, file: !1126, line: 1964, column: 20)
!2897 = !DILocation(line: 1964, column: 38, scope: !2895)
!2898 = !DILocalVariable(name: "scaledDuration", scope: !2899, file: !1126, line: 1965, type: !1051)
!2899 = distinct !DILexicalBlock(scope: !2896, file: !1126, line: 1964, column: 43)
!2900 = !DILocation(line: 1965, column: 21, scope: !2899)
!2901 = !DILocation(line: 1965, column: 49, scope: !2899)
!2902 = !DILocation(line: 1965, column: 38, scope: !2899)
!2903 = !DILocation(line: 1966, column: 28, scope: !2899)
!2904 = !DILocation(line: 1966, column: 40, scope: !2899)
!2905 = !DILocation(line: 1966, column: 13, scope: !2899)
!2906 = !DILocation(line: 1967, column: 20, scope: !2899)
!2907 = !DILocation(line: 1967, column: 90, scope: !2899)
!2908 = !DILocation(line: 1967, column: 13, scope: !2899)
!2909 = !DILocation(line: 1968, column: 9, scope: !2899)
!2910 = !DILocation(line: 1969, column: 27, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2896, file: !1126, line: 1968, column: 16)
!2912 = !DILocation(line: 1969, column: 13, scope: !2911)
!2913 = !DILocation(line: 1971, column: 5, scope: !2872)
!2914 = !DILocation(line: 1972, column: 10, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1972, column: 9)
!2916 = !DILocation(line: 1972, column: 13, scope: !2915)
!2917 = !DILocation(line: 1972, column: 17, scope: !2915)
!2918 = !DILocation(line: 1972, column: 26, scope: !2915)
!2919 = !DILocation(line: 1972, column: 38, scope: !2915)
!2920 = !DILocation(line: 1972, column: 42, scope: !2921)
!2921 = !DILexicalBlockFile(scope: !2915, file: !1126, discriminator: 1)
!2922 = !DILocation(line: 1972, column: 47, scope: !2921)
!2923 = !DILocation(line: 1972, column: 9, scope: !2921)
!2924 = !DILocation(line: 1973, column: 43, scope: !2915)
!2925 = !DILocation(line: 1973, column: 46, scope: !2915)
!2926 = !DILocation(line: 1973, column: 51, scope: !2915)
!2927 = !DILocation(line: 1973, column: 56, scope: !2915)
!2928 = !DILocation(line: 1973, column: 65, scope: !2915)
!2929 = !DILocation(line: 1973, column: 70, scope: !2915)
!2930 = !DILocation(line: 1973, column: 75, scope: !2915)
!2931 = !DILocation(line: 1973, column: 9, scope: !2915)
!2932 = !DILocation(line: 1975, column: 31, scope: !2915)
!2933 = !DILocation(line: 1975, column: 34, scope: !2915)
!2934 = !DILocation(line: 1975, column: 39, scope: !2915)
!2935 = !DILocation(line: 1975, column: 44, scope: !2915)
!2936 = !DILocation(line: 1975, column: 53, scope: !2915)
!2937 = !DILocation(line: 1975, column: 58, scope: !2915)
!2938 = !DILocation(line: 1975, column: 63, scope: !2915)
!2939 = !DILocation(line: 1975, column: 9, scope: !2915)
!2940 = !DILocation(line: 1976, column: 10, scope: !2435)
!2941 = !DILocation(line: 1976, column: 13, scope: !2435)
!2942 = !DILocation(line: 1976, column: 8, scope: !2435)
!2943 = !DILocation(line: 1979, column: 40, scope: !2435)
!2944 = !DILocation(line: 1979, column: 43, scope: !2435)
!2945 = !DILocation(line: 1979, column: 54, scope: !2435)
!2946 = !DILocation(line: 1979, column: 29, scope: !2435)
!2947 = !DILocation(line: 1979, column: 5, scope: !2435)
!2948 = !DILocation(line: 1979, column: 10, scope: !2435)
!2949 = !DILocation(line: 1979, column: 27, scope: !2435)
!2950 = !DILocation(line: 1980, column: 47, scope: !2435)
!2951 = !DILocation(line: 1980, column: 50, scope: !2435)
!2952 = !DILocation(line: 1980, column: 61, scope: !2435)
!2953 = !DILocation(line: 1980, column: 36, scope: !2435)
!2954 = !DILocation(line: 1980, column: 5, scope: !2435)
!2955 = !DILocation(line: 1980, column: 10, scope: !2435)
!2956 = !DILocation(line: 1980, column: 34, scope: !2435)
!2957 = !DILocation(line: 1981, column: 10, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1981, column: 9)
!2959 = !DILocation(line: 1981, column: 15, scope: !2958)
!2960 = !DILocation(line: 1981, column: 32, scope: !2958)
!2961 = !DILocation(line: 1981, column: 36, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2958, file: !1126, discriminator: 1)
!2963 = !DILocation(line: 1981, column: 41, scope: !2962)
!2964 = !DILocation(line: 1981, column: 9, scope: !2962)
!2965 = !DILocation(line: 1982, column: 13, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2958, file: !1126, line: 1981, column: 66)
!2967 = !DILocation(line: 1983, column: 9, scope: !2966)
!2968 = !DILocation(line: 1986, column: 28, scope: !2435)
!2969 = !DILocation(line: 1986, column: 11, scope: !2435)
!2970 = !DILocation(line: 1986, column: 9, scope: !2435)
!2971 = !DILocation(line: 1987, column: 9, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1987, column: 9)
!2973 = !DILocation(line: 1987, column: 13, scope: !2972)
!2974 = !DILocation(line: 1987, column: 9, scope: !2435)
!2975 = !DILocation(line: 1988, column: 9, scope: !2972)
!2976 = !DILocation(line: 1990, column: 12, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1990, column: 5)
!2978 = !DILocation(line: 1990, column: 10, scope: !2977)
!2979 = !DILocation(line: 1990, column: 17, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2981, file: !1126, discriminator: 1)
!2981 = distinct !DILexicalBlock(scope: !2977, file: !1126, line: 1990, column: 5)
!2982 = !DILocation(line: 1990, column: 21, scope: !2980)
!2983 = !DILocation(line: 1990, column: 24, scope: !2980)
!2984 = !DILocation(line: 1990, column: 19, scope: !2980)
!2985 = !DILocation(line: 1990, column: 5, scope: !2980)
!2986 = !DILocation(line: 1991, column: 36, scope: !2981)
!2987 = !DILocation(line: 1991, column: 41, scope: !2981)
!2988 = !DILocation(line: 1991, column: 35, scope: !2981)
!2989 = !DILocation(line: 1991, column: 81, scope: !2981)
!2990 = !DILocation(line: 1991, column: 69, scope: !2981)
!2991 = !DILocation(line: 1991, column: 72, scope: !2981)
!2992 = !DILocation(line: 1991, column: 85, scope: !2981)
!2993 = !DILocation(line: 1991, column: 67, scope: !2981)
!2994 = !DILocation(line: 1991, column: 60, scope: !2981)
!2995 = !DILocation(line: 1991, column: 92, scope: !2980)
!2996 = !DILocation(line: 1991, column: 97, scope: !2980)
!2997 = !DILocation(line: 1991, column: 91, scope: !2980)
!2998 = !DILocation(line: 1991, column: 35, scope: !2980)
!2999 = !DILocation(line: 1991, column: 137, scope: !3000)
!3000 = !DILexicalBlockFile(scope: !2981, file: !1126, discriminator: 2)
!3001 = !DILocation(line: 1991, column: 125, scope: !3000)
!3002 = !DILocation(line: 1991, column: 128, scope: !3000)
!3003 = !DILocation(line: 1991, column: 141, scope: !3000)
!3004 = !DILocation(line: 1991, column: 123, scope: !3000)
!3005 = !DILocation(line: 1991, column: 35, scope: !3000)
!3006 = !DILocation(line: 1991, column: 35, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !2981, file: !1126, discriminator: 3)
!3008 = !DILocation(line: 1991, column: 34, scope: !3007)
!3009 = !DILocation(line: 1991, column: 9, scope: !3007)
!3010 = !DILocation(line: 1991, column: 14, scope: !3007)
!3011 = !DILocation(line: 1991, column: 32, scope: !3007)
!3012 = !DILocation(line: 1990, column: 38, scope: !3000)
!3013 = !DILocation(line: 1990, column: 5, scope: !3000)
!3014 = distinct !{!3014, !3015}
!3015 = !DILocation(line: 1990, column: 5, scope: !2435)
!3016 = !DILocation(line: 1993, column: 30, scope: !2435)
!3017 = !DILocation(line: 1993, column: 11, scope: !2435)
!3018 = !DILocation(line: 1993, column: 9, scope: !2435)
!3019 = !DILocation(line: 1994, column: 9, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1994, column: 9)
!3021 = !DILocation(line: 1994, column: 13, scope: !3020)
!3022 = !DILocation(line: 1994, column: 9, scope: !2435)
!3023 = !DILocation(line: 1995, column: 9, scope: !3020)
!3024 = !DILocation(line: 1997, column: 9, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 1997, column: 9)
!3026 = !DILocation(line: 1997, column: 14, scope: !3025)
!3027 = !DILocation(line: 1997, column: 19, scope: !3025)
!3028 = !DILocation(line: 1997, column: 9, scope: !2435)
!3029 = !DILocation(line: 1998, column: 37, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3025, file: !1126, line: 1997, column: 28)
!3031 = !DILocation(line: 1998, column: 15, scope: !3030)
!3032 = !DILocation(line: 1998, column: 13, scope: !3030)
!3033 = !DILocation(line: 1999, column: 13, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3030, file: !1126, line: 1999, column: 13)
!3035 = !DILocation(line: 1999, column: 17, scope: !3034)
!3036 = !DILocation(line: 1999, column: 13, scope: !3030)
!3037 = !DILocation(line: 2000, column: 13, scope: !3034)
!3038 = !DILocation(line: 2001, column: 5, scope: !3030)
!3039 = !DILocation(line: 2003, column: 26, scope: !2435)
!3040 = !DILocation(line: 2003, column: 11, scope: !2435)
!3041 = !DILocation(line: 2003, column: 9, scope: !2435)
!3042 = !DILocation(line: 2004, column: 9, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2004, column: 9)
!3044 = !DILocation(line: 2004, column: 13, scope: !3043)
!3045 = !DILocation(line: 2004, column: 9, scope: !2435)
!3046 = !DILocation(line: 2005, column: 9, scope: !3043)
!3047 = !DILocation(line: 2007, column: 11, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2007, column: 9)
!3049 = !DILocation(line: 2007, column: 14, scope: !3048)
!3050 = !DILocation(line: 2007, column: 18, scope: !3048)
!3051 = !DILocation(line: 2007, column: 27, scope: !3048)
!3052 = !DILocation(line: 2007, column: 39, scope: !3048)
!3053 = !DILocation(line: 2007, column: 43, scope: !3054)
!3054 = !DILexicalBlockFile(scope: !3048, file: !1126, discriminator: 1)
!3055 = !DILocation(line: 2007, column: 48, scope: !3054)
!3056 = !DILocation(line: 2007, column: 9, scope: !3054)
!3057 = !DILocation(line: 2008, column: 28, scope: !3048)
!3058 = !DILocation(line: 2008, column: 32, scope: !3048)
!3059 = !DILocation(line: 2008, column: 9, scope: !3048)
!3060 = !DILocation(line: 2010, column: 32, scope: !2435)
!3061 = !DILocation(line: 2010, column: 37, scope: !2435)
!3062 = !DILocation(line: 2010, column: 17, scope: !2435)
!3063 = !DILocation(line: 2010, column: 5, scope: !2435)
!3064 = !DILocation(line: 2010, column: 10, scope: !2435)
!3065 = !DILocation(line: 2010, column: 15, scope: !2435)
!3066 = !DILocation(line: 2011, column: 10, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2011, column: 9)
!3068 = !DILocation(line: 2011, column: 15, scope: !3067)
!3069 = !DILocation(line: 2011, column: 9, scope: !2435)
!3070 = !DILocation(line: 2012, column: 13, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !1126, line: 2011, column: 21)
!3072 = !DILocation(line: 2013, column: 9, scope: !3071)
!3073 = !DILocation(line: 2016, column: 9, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2016, column: 9)
!3075 = !DILocation(line: 2016, column: 12, scope: !3074)
!3076 = !DILocation(line: 2016, column: 36, scope: !3074)
!3077 = !DILocation(line: 2016, column: 9, scope: !2435)
!3078 = !DILocation(line: 2017, column: 13, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !1126, line: 2017, column: 13)
!3080 = distinct !DILexicalBlock(scope: !3074, file: !1126, line: 2016, column: 41)
!3081 = !DILocation(line: 2017, column: 16, scope: !3079)
!3082 = !DILocation(line: 2017, column: 40, scope: !3079)
!3083 = !DILocation(line: 2017, column: 13, scope: !3080)
!3084 = !DILocation(line: 2018, column: 13, scope: !3079)
!3085 = !DILocation(line: 2018, column: 16, scope: !3079)
!3086 = !DILocation(line: 2018, column: 39, scope: !3079)
!3087 = !DILocation(line: 2019, column: 23, scope: !3080)
!3088 = !DILocation(line: 2019, column: 27, scope: !3080)
!3089 = !DILocation(line: 2019, column: 30, scope: !3080)
!3090 = !DILocation(line: 2019, column: 9, scope: !3080)
!3091 = !DILocation(line: 2020, column: 5, scope: !3080)
!3092 = !DILocation(line: 2022, column: 10, scope: !2449)
!3093 = !DILocation(line: 2022, column: 14, scope: !2449)
!3094 = !DILocation(line: 2022, column: 23, scope: !2449)
!3095 = !DILocation(line: 2022, column: 35, scope: !2449)
!3096 = !DILocation(line: 2022, column: 38, scope: !3097)
!3097 = !DILexicalBlockFile(scope: !2449, file: !1126, discriminator: 1)
!3098 = !DILocation(line: 2022, column: 43, scope: !3097)
!3099 = !DILocation(line: 2022, column: 9, scope: !3097)
!3100 = !DILocation(line: 2023, column: 35, scope: !2448)
!3101 = !DILocation(line: 2023, column: 25, scope: !2448)
!3102 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !2447)
!3103 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !2447)
!3104 = !DILocation(line: 2023, column: 9, scope: !2448)
!3105 = !DILocation(line: 2023, column: 14, scope: !2448)
!3106 = !DILocation(line: 2023, column: 23, scope: !2448)
!3107 = !DILocation(line: 2024, column: 13, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !2448, file: !1126, line: 2024, column: 13)
!3109 = !DILocation(line: 2024, column: 18, scope: !3108)
!3110 = !DILocation(line: 2024, column: 37, scope: !3108)
!3111 = !DILocation(line: 2024, column: 13, scope: !2448)
!3112 = !DILocation(line: 2025, column: 13, scope: !3108)
!3113 = !DILocation(line: 2025, column: 18, scope: !3108)
!3114 = !DILocation(line: 2025, column: 36, scope: !3108)
!3115 = !DILocation(line: 2026, column: 23, scope: !2448)
!3116 = !DILocation(line: 2026, column: 27, scope: !2448)
!3117 = !DILocation(line: 2026, column: 32, scope: !2448)
!3118 = !DILocation(line: 2026, column: 9, scope: !2448)
!3119 = !DILocation(line: 2027, column: 5, scope: !2448)
!3120 = !DILocation(line: 2029, column: 21, scope: !2435)
!3121 = !DILocation(line: 2029, column: 26, scope: !2435)
!3122 = !DILocation(line: 2029, column: 5, scope: !2435)
!3123 = !DILocation(line: 2030, column: 5, scope: !2435)
!3124 = !DILocation(line: 2030, column: 10, scope: !2435)
!3125 = !DILocation(line: 2030, column: 24, scope: !2435)
!3126 = !DILocation(line: 2030, column: 29, scope: !2435)
!3127 = !DILocation(line: 2031, column: 5, scope: !2435)
!3128 = !DILocation(line: 2031, column: 10, scope: !2435)
!3129 = !DILocation(line: 2031, column: 22, scope: !2435)
!3130 = !DILocation(line: 2033, column: 16, scope: !2435)
!3131 = !DILocation(line: 2033, column: 5, scope: !2435)
!3132 = !DILocation(line: 2037, column: 9, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !2435, file: !1126, line: 2037, column: 9)
!3134 = !DILocation(line: 2037, column: 13, scope: !3133)
!3135 = !DILocation(line: 2037, column: 22, scope: !3133)
!3136 = !DILocation(line: 2037, column: 9, scope: !2435)
!3137 = !DILocation(line: 2038, column: 13, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !1126, line: 2038, column: 13)
!3139 = distinct !DILexicalBlock(scope: !3133, file: !1126, line: 2037, column: 34)
!3140 = !DILocation(line: 2038, column: 18, scope: !3138)
!3141 = !DILocation(line: 2038, column: 37, scope: !3138)
!3142 = !DILocation(line: 2038, column: 13, scope: !3139)
!3143 = !DILocation(line: 2039, column: 13, scope: !3138)
!3144 = !DILocation(line: 2039, column: 18, scope: !3138)
!3145 = !DILocation(line: 2039, column: 37, scope: !3138)
!3146 = !DILocation(line: 2040, column: 13, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3139, file: !1126, line: 2040, column: 13)
!3148 = !DILocation(line: 2040, column: 18, scope: !3147)
!3149 = !DILocation(line: 2040, column: 37, scope: !3147)
!3150 = !DILocation(line: 2040, column: 13, scope: !3139)
!3151 = !DILocation(line: 2041, column: 13, scope: !3147)
!3152 = !DILocation(line: 2041, column: 18, scope: !3147)
!3153 = !DILocation(line: 2041, column: 37, scope: !3147)
!3154 = !DILocation(line: 2042, column: 5, scope: !3139)
!3155 = !DILocation(line: 2043, column: 13, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !1126, line: 2043, column: 13)
!3157 = distinct !DILexicalBlock(scope: !3133, file: !1126, line: 2042, column: 12)
!3158 = !DILocation(line: 2043, column: 18, scope: !3156)
!3159 = !DILocation(line: 2043, column: 37, scope: !3156)
!3160 = !DILocation(line: 2043, column: 13, scope: !3157)
!3161 = !DILocation(line: 2044, column: 13, scope: !3156)
!3162 = !DILocation(line: 2044, column: 18, scope: !3156)
!3163 = !DILocation(line: 2044, column: 37, scope: !3156)
!3164 = !DILocation(line: 2045, column: 13, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3157, file: !1126, line: 2045, column: 13)
!3166 = !DILocation(line: 2045, column: 18, scope: !3165)
!3167 = !DILocation(line: 2045, column: 37, scope: !3165)
!3168 = !DILocation(line: 2045, column: 13, scope: !3157)
!3169 = !DILocation(line: 2046, column: 13, scope: !3165)
!3170 = !DILocation(line: 2046, column: 18, scope: !3165)
!3171 = !DILocation(line: 2046, column: 37, scope: !3165)
!3172 = !DILocation(line: 2049, column: 5, scope: !2435)
!3173 = !DILocation(line: 2051, column: 14, scope: !2435)
!3174 = !DILocation(line: 2051, column: 5, scope: !2435)
!3175 = !DILocation(line: 2052, column: 12, scope: !2435)
!3176 = !DILocation(line: 2052, column: 5, scope: !2435)
!3177 = !DILocation(line: 2053, column: 1, scope: !2435)
!3178 = distinct !DISubprogram(name: "mkv_write_flush_packet", scope: !1126, file: !1126, line: 2543, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2544, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!1053, !2438, !1266}
!3181 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 2554, column: 24, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3184, file: !1126, line: 2551, column: 17)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !1126, line: 2548, column: 37)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !1126, line: 2548, column: 13)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !1126, line: 2547, column: 15)
!3187 = distinct !DILexicalBlock(scope: !3178, file: !1126, line: 2547, column: 9)
!3188 = !DILocalVariable(name: "s", arg: 1, scope: !3178, file: !1126, line: 2543, type: !2438)
!3189 = !DILocation(line: 2543, column: 52, scope: !3178)
!3190 = !DILocalVariable(name: "pkt", arg: 2, scope: !3178, file: !1126, line: 2543, type: !1266)
!3191 = !DILocation(line: 2543, column: 65, scope: !3178)
!3192 = !DILocalVariable(name: "mkv", scope: !3178, file: !1126, line: 2545, type: !2459)
!3193 = !DILocation(line: 2545, column: 25, scope: !3178)
!3194 = !DILocation(line: 2545, column: 31, scope: !3178)
!3195 = !DILocation(line: 2545, column: 34, scope: !3178)
!3196 = !DILocation(line: 2547, column: 10, scope: !3187)
!3197 = !DILocation(line: 2547, column: 9, scope: !3178)
!3198 = !DILocation(line: 2548, column: 13, scope: !3185)
!3199 = !DILocation(line: 2548, column: 18, scope: !3185)
!3200 = !DILocation(line: 2548, column: 30, scope: !3185)
!3201 = !DILocation(line: 2548, column: 13, scope: !3186)
!3202 = !DILocation(line: 2549, column: 35, scope: !3184)
!3203 = !DILocation(line: 2549, column: 38, scope: !3184)
!3204 = !DILocation(line: 2549, column: 43, scope: !3184)
!3205 = !DILocation(line: 2549, column: 48, scope: !3184)
!3206 = !DILocation(line: 2549, column: 56, scope: !3184)
!3207 = !DILocation(line: 2549, column: 61, scope: !3184)
!3208 = !DILocation(line: 2549, column: 66, scope: !3184)
!3209 = !DILocation(line: 2549, column: 13, scope: !3184)
!3210 = !DILocation(line: 2550, column: 13, scope: !3184)
!3211 = !DILocation(line: 2550, column: 18, scope: !3184)
!3212 = !DILocation(line: 2550, column: 30, scope: !3184)
!3213 = !DILocation(line: 2551, column: 17, scope: !3183)
!3214 = !DILocation(line: 2551, column: 20, scope: !3183)
!3215 = !DILocation(line: 2551, column: 24, scope: !3183)
!3216 = !DILocation(line: 2551, column: 33, scope: !3183)
!3217 = !DILocation(line: 2551, column: 17, scope: !3184)
!3218 = !DILocation(line: 2552, column: 24, scope: !3183)
!3219 = !DILocation(line: 2554, column: 34, scope: !3183)
!3220 = !DILocation(line: 2554, column: 37, scope: !3183)
!3221 = !DILocation(line: 2554, column: 24, scope: !3183)
!3222 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3182)
!3223 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3182)
!3224 = !DILocation(line: 2552, column: 17, scope: !3183)
!3225 = !DILocation(line: 2556, column: 24, scope: !3183)
!3226 = !DILocation(line: 2556, column: 17, scope: !3183)
!3227 = !DILocation(line: 2557, column: 24, scope: !3184)
!3228 = !DILocation(line: 2557, column: 27, scope: !3184)
!3229 = !DILocation(line: 2557, column: 13, scope: !3184)
!3230 = !DILocation(line: 2558, column: 9, scope: !3184)
!3231 = !DILocation(line: 2559, column: 9, scope: !3186)
!3232 = !DILocation(line: 2561, column: 29, scope: !3178)
!3233 = !DILocation(line: 2561, column: 32, scope: !3178)
!3234 = !DILocation(line: 2561, column: 12, scope: !3178)
!3235 = !DILocation(line: 2561, column: 5, scope: !3178)
!3236 = !DILocation(line: 2562, column: 1, scope: !3178)
!3237 = distinct !DISubprogram(name: "mkv_write_trailer", scope: !1126, file: !1126, line: 2564, type: !2436, isLocal: true, isDefinition: true, scopeLine: 2565, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3238 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3239)
!3239 = distinct !DILocation(line: 2641, column: 28, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !1126, line: 2639, column: 53)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !1126, line: 2639, column: 13)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !1126, line: 2591, column: 53)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !1126, line: 2591, column: 9)
!3244 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 2628, column: 22, scope: !3242)
!3246 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3247)
!3247 = distinct !DILocation(line: 2600, column: 28, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !1126, line: 2593, column: 42)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !1126, line: 2593, column: 17)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !1126, line: 2592, column: 37)
!3251 = distinct !DILexicalBlock(scope: !3242, file: !1126, line: 2592, column: 13)
!3252 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3253)
!3253 = distinct !DILocation(line: 2596, column: 30, scope: !3248)
!3254 = !DILocalVariable(name: "s", arg: 1, scope: !3237, file: !1126, line: 2564, type: !2438)
!3255 = !DILocation(line: 2564, column: 47, scope: !3237)
!3256 = !DILocalVariable(name: "mkv", scope: !3237, file: !1126, line: 2566, type: !2459)
!3257 = !DILocation(line: 2566, column: 25, scope: !3237)
!3258 = !DILocation(line: 2566, column: 31, scope: !3237)
!3259 = !DILocation(line: 2566, column: 34, scope: !3237)
!3260 = !DILocalVariable(name: "pb", scope: !3237, file: !1126, line: 2567, type: !1332)
!3261 = !DILocation(line: 2567, column: 18, scope: !3237)
!3262 = !DILocation(line: 2567, column: 23, scope: !3237)
!3263 = !DILocation(line: 2567, column: 26, scope: !3237)
!3264 = !DILocalVariable(name: "currentpos", scope: !3237, file: !1126, line: 2568, type: !1051)
!3265 = !DILocation(line: 2568, column: 13, scope: !3237)
!3266 = !DILocalVariable(name: "cuespos", scope: !3237, file: !1126, line: 2568, type: !1051)
!3267 = !DILocation(line: 2568, column: 25, scope: !3237)
!3268 = !DILocalVariable(name: "ret", scope: !3237, file: !1126, line: 2569, type: !1053)
!3269 = !DILocation(line: 2569, column: 9, scope: !3237)
!3270 = !DILocation(line: 2572, column: 9, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3237, file: !1126, line: 2572, column: 9)
!3272 = !DILocation(line: 2572, column: 14, scope: !3271)
!3273 = !DILocation(line: 2572, column: 28, scope: !3271)
!3274 = !DILocation(line: 2572, column: 33, scope: !3271)
!3275 = !DILocation(line: 2572, column: 9, scope: !3237)
!3276 = !DILocation(line: 2573, column: 41, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3271, file: !1126, line: 2572, column: 38)
!3278 = !DILocation(line: 2573, column: 45, scope: !3277)
!3279 = !DILocation(line: 2573, column: 50, scope: !3277)
!3280 = !DILocation(line: 2573, column: 15, scope: !3277)
!3281 = !DILocation(line: 2573, column: 13, scope: !3277)
!3282 = !DILocation(line: 2574, column: 26, scope: !3277)
!3283 = !DILocation(line: 2574, column: 31, scope: !3277)
!3284 = !DILocation(line: 2574, column: 9, scope: !3277)
!3285 = !DILocation(line: 2575, column: 13, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3277, file: !1126, line: 2575, column: 13)
!3287 = !DILocation(line: 2575, column: 17, scope: !3286)
!3288 = !DILocation(line: 2575, column: 13, scope: !3277)
!3289 = !DILocation(line: 2576, column: 20, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !1126, line: 2575, column: 22)
!3291 = !DILocation(line: 2577, column: 68, scope: !3290)
!3292 = !DILocation(line: 2576, column: 13, scope: !3290)
!3293 = !DILocation(line: 2578, column: 20, scope: !3290)
!3294 = !DILocation(line: 2578, column: 13, scope: !3290)
!3295 = !DILocation(line: 2580, column: 5, scope: !3277)
!3296 = !DILocation(line: 2582, column: 9, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3237, file: !1126, line: 2582, column: 9)
!3298 = !DILocation(line: 2582, column: 14, scope: !3297)
!3299 = !DILocation(line: 2582, column: 9, scope: !3237)
!3300 = !DILocation(line: 2583, column: 31, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !1126, line: 2582, column: 22)
!3302 = !DILocation(line: 2583, column: 36, scope: !3301)
!3303 = !DILocation(line: 2583, column: 41, scope: !3301)
!3304 = !DILocation(line: 2583, column: 49, scope: !3301)
!3305 = !DILocation(line: 2583, column: 54, scope: !3301)
!3306 = !DILocation(line: 2583, column: 59, scope: !3301)
!3307 = !DILocation(line: 2583, column: 9, scope: !3301)
!3308 = !DILocation(line: 2584, column: 5, scope: !3301)
!3309 = !DILocation(line: 2586, column: 30, scope: !3237)
!3310 = !DILocation(line: 2586, column: 11, scope: !3237)
!3311 = !DILocation(line: 2586, column: 9, scope: !3237)
!3312 = !DILocation(line: 2587, column: 9, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3237, file: !1126, line: 2587, column: 9)
!3314 = !DILocation(line: 2587, column: 13, scope: !3313)
!3315 = !DILocation(line: 2587, column: 9, scope: !3237)
!3316 = !DILocation(line: 2588, column: 16, scope: !3313)
!3317 = !DILocation(line: 2588, column: 9, scope: !3313)
!3318 = !DILocation(line: 2591, column: 10, scope: !3243)
!3319 = !DILocation(line: 2591, column: 14, scope: !3243)
!3320 = !DILocation(line: 2591, column: 23, scope: !3243)
!3321 = !DILocation(line: 2591, column: 35, scope: !3243)
!3322 = !DILocation(line: 2591, column: 39, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3243, file: !1126, discriminator: 1)
!3324 = !DILocation(line: 2591, column: 44, scope: !3323)
!3325 = !DILocation(line: 2591, column: 9, scope: !3323)
!3326 = !DILocation(line: 2592, column: 13, scope: !3251)
!3327 = !DILocation(line: 2592, column: 18, scope: !3251)
!3328 = !DILocation(line: 2592, column: 24, scope: !3251)
!3329 = !DILocation(line: 2592, column: 13, scope: !3242)
!3330 = !DILocation(line: 2593, column: 17, scope: !3249)
!3331 = !DILocation(line: 2593, column: 22, scope: !3249)
!3332 = !DILocation(line: 2593, column: 17, scope: !3250)
!3333 = !DILocalVariable(name: "cues_end", scope: !3248, file: !1126, line: 2594, type: !1051)
!3334 = !DILocation(line: 2594, column: 25, scope: !3248)
!3335 = !DILocation(line: 2596, column: 40, scope: !3248)
!3336 = !DILocation(line: 2596, column: 30, scope: !3248)
!3337 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3253)
!3338 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3253)
!3339 = !DILocation(line: 2596, column: 28, scope: !3248)
!3340 = !DILocation(line: 2597, column: 27, scope: !3248)
!3341 = !DILocation(line: 2597, column: 31, scope: !3248)
!3342 = !DILocation(line: 2597, column: 36, scope: !3248)
!3343 = !DILocation(line: 2597, column: 17, scope: !3248)
!3344 = !DILocation(line: 2599, column: 42, scope: !3248)
!3345 = !DILocation(line: 2599, column: 45, scope: !3248)
!3346 = !DILocation(line: 2599, column: 50, scope: !3248)
!3347 = !DILocation(line: 2599, column: 56, scope: !3248)
!3348 = !DILocation(line: 2599, column: 61, scope: !3248)
!3349 = !DILocation(line: 2599, column: 69, scope: !3248)
!3350 = !DILocation(line: 2599, column: 72, scope: !3248)
!3351 = !DILocation(line: 2599, column: 27, scope: !3248)
!3352 = !DILocation(line: 2599, column: 25, scope: !3248)
!3353 = !DILocation(line: 2600, column: 38, scope: !3248)
!3354 = !DILocation(line: 2600, column: 28, scope: !3248)
!3355 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3247)
!3356 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3247)
!3357 = !DILocation(line: 2600, column: 26, scope: !3248)
!3358 = !DILocation(line: 2601, column: 21, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3248, file: !1126, line: 2601, column: 21)
!3360 = !DILocation(line: 2601, column: 32, scope: !3359)
!3361 = !DILocation(line: 2601, column: 42, scope: !3359)
!3362 = !DILocation(line: 2601, column: 47, scope: !3359)
!3363 = !DILocation(line: 2601, column: 40, scope: !3359)
!3364 = !DILocation(line: 2601, column: 30, scope: !3359)
!3365 = !DILocation(line: 2601, column: 21, scope: !3248)
!3366 = !DILocation(line: 2602, column: 28, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3359, file: !1126, line: 2601, column: 67)
!3368 = !DILocation(line: 2605, column: 28, scope: !3367)
!3369 = !DILocation(line: 2605, column: 33, scope: !3367)
!3370 = !DILocation(line: 2605, column: 53, scope: !3367)
!3371 = !DILocation(line: 2605, column: 64, scope: !3367)
!3372 = !DILocation(line: 2605, column: 62, scope: !3367)
!3373 = !DILocation(line: 2602, column: 21, scope: !3367)
!3374 = !DILocation(line: 2606, column: 21, scope: !3367)
!3375 = !DILocation(line: 2609, column: 21, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3248, file: !1126, line: 2609, column: 21)
!3377 = !DILocation(line: 2609, column: 32, scope: !3376)
!3378 = !DILocation(line: 2609, column: 42, scope: !3376)
!3379 = !DILocation(line: 2609, column: 47, scope: !3376)
!3380 = !DILocation(line: 2609, column: 40, scope: !3376)
!3381 = !DILocation(line: 2609, column: 30, scope: !3376)
!3382 = !DILocation(line: 2609, column: 21, scope: !3248)
!3383 = !DILocation(line: 2610, column: 35, scope: !3376)
!3384 = !DILocation(line: 2610, column: 39, scope: !3376)
!3385 = !DILocation(line: 2610, column: 44, scope: !3376)
!3386 = !DILocation(line: 2611, column: 36, scope: !3376)
!3387 = !DILocation(line: 2611, column: 47, scope: !3376)
!3388 = !DILocation(line: 2611, column: 45, scope: !3376)
!3389 = !DILocation(line: 2610, column: 63, scope: !3376)
!3390 = !DILocation(line: 2610, column: 21, scope: !3376)
!3391 = !DILocation(line: 2613, column: 27, scope: !3248)
!3392 = !DILocation(line: 2613, column: 31, scope: !3248)
!3393 = !DILocation(line: 2613, column: 17, scope: !3248)
!3394 = !DILocation(line: 2614, column: 13, scope: !3248)
!3395 = !DILocation(line: 2615, column: 42, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3249, file: !1126, line: 2614, column: 20)
!3397 = !DILocation(line: 2615, column: 45, scope: !3396)
!3398 = !DILocation(line: 2615, column: 50, scope: !3396)
!3399 = !DILocation(line: 2615, column: 56, scope: !3396)
!3400 = !DILocation(line: 2615, column: 61, scope: !3396)
!3401 = !DILocation(line: 2615, column: 69, scope: !3396)
!3402 = !DILocation(line: 2615, column: 72, scope: !3396)
!3403 = !DILocation(line: 2615, column: 27, scope: !3396)
!3404 = !DILocation(line: 2615, column: 25, scope: !3396)
!3405 = !DILocation(line: 2618, column: 42, scope: !3250)
!3406 = !DILocation(line: 2618, column: 47, scope: !3250)
!3407 = !DILocation(line: 2619, column: 42, scope: !3250)
!3408 = !DILocation(line: 2618, column: 19, scope: !3250)
!3409 = !DILocation(line: 2618, column: 17, scope: !3250)
!3410 = !DILocation(line: 2620, column: 17, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3250, file: !1126, line: 2620, column: 17)
!3412 = !DILocation(line: 2620, column: 21, scope: !3411)
!3413 = !DILocation(line: 2620, column: 17, scope: !3250)
!3414 = !DILocation(line: 2621, column: 24, scope: !3411)
!3415 = !DILocation(line: 2621, column: 17, scope: !3411)
!3416 = !DILocation(line: 2622, column: 9, scope: !3250)
!3417 = !DILocation(line: 2624, column: 28, scope: !3242)
!3418 = !DILocation(line: 2624, column: 32, scope: !3242)
!3419 = !DILocation(line: 2624, column: 9, scope: !3242)
!3420 = !DILocation(line: 2627, column: 16, scope: !3242)
!3421 = !DILocation(line: 2627, column: 64, scope: !3242)
!3422 = !DILocation(line: 2627, column: 69, scope: !3242)
!3423 = !DILocation(line: 2627, column: 9, scope: !3242)
!3424 = !DILocation(line: 2628, column: 32, scope: !3242)
!3425 = !DILocation(line: 2628, column: 22, scope: !3242)
!3426 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3245)
!3427 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3245)
!3428 = !DILocation(line: 2628, column: 20, scope: !3242)
!3429 = !DILocation(line: 2629, column: 19, scope: !3242)
!3430 = !DILocation(line: 2629, column: 24, scope: !3242)
!3431 = !DILocation(line: 2629, column: 33, scope: !3242)
!3432 = !DILocation(line: 2629, column: 38, scope: !3242)
!3433 = !DILocation(line: 2629, column: 9, scope: !3242)
!3434 = !DILocation(line: 2630, column: 24, scope: !3242)
!3435 = !DILocation(line: 2630, column: 29, scope: !3242)
!3436 = !DILocation(line: 2630, column: 46, scope: !3242)
!3437 = !DILocation(line: 2630, column: 51, scope: !3242)
!3438 = !DILocation(line: 2630, column: 9, scope: !3242)
!3439 = !DILocation(line: 2631, column: 19, scope: !3242)
!3440 = !DILocation(line: 2631, column: 23, scope: !3242)
!3441 = !DILocation(line: 2631, column: 28, scope: !3242)
!3442 = !DILocation(line: 2631, column: 33, scope: !3242)
!3443 = !DILocation(line: 2631, column: 9, scope: !3242)
!3444 = !DILocation(line: 2632, column: 31, scope: !3242)
!3445 = !DILocation(line: 2632, column: 36, scope: !3242)
!3446 = !DILocation(line: 2632, column: 41, scope: !3242)
!3447 = !DILocation(line: 2632, column: 50, scope: !3242)
!3448 = !DILocation(line: 2632, column: 55, scope: !3242)
!3449 = !DILocation(line: 2632, column: 60, scope: !3242)
!3450 = !DILocation(line: 2632, column: 9, scope: !3242)
!3451 = !DILocation(line: 2635, column: 19, scope: !3242)
!3452 = !DILocation(line: 2635, column: 23, scope: !3242)
!3453 = !DILocation(line: 2635, column: 28, scope: !3242)
!3454 = !DILocation(line: 2635, column: 42, scope: !3242)
!3455 = !DILocation(line: 2635, column: 9, scope: !3242)
!3456 = !DILocation(line: 2636, column: 31, scope: !3242)
!3457 = !DILocation(line: 2636, column: 36, scope: !3242)
!3458 = !DILocation(line: 2636, column: 41, scope: !3242)
!3459 = !DILocation(line: 2636, column: 52, scope: !3242)
!3460 = !DILocation(line: 2636, column: 57, scope: !3242)
!3461 = !DILocation(line: 2636, column: 62, scope: !3242)
!3462 = !DILocation(line: 2636, column: 9, scope: !3242)
!3463 = !DILocation(line: 2639, column: 14, scope: !3241)
!3464 = !DILocation(line: 2639, column: 19, scope: !3241)
!3465 = !DILocation(line: 2639, column: 27, scope: !3241)
!3466 = !DILocation(line: 2639, column: 30, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3241, file: !1126, discriminator: 1)
!3468 = !DILocation(line: 2639, column: 35, scope: !3467)
!3469 = !DILocation(line: 2639, column: 13, scope: !3467)
!3470 = !DILocalVariable(name: "i", scope: !3240, file: !1126, line: 2640, type: !1053)
!3471 = !DILocation(line: 2640, column: 17, scope: !3240)
!3472 = !DILocalVariable(name: "curr", scope: !3240, file: !1126, line: 2641, type: !1051)
!3473 = !DILocation(line: 2641, column: 21, scope: !3240)
!3474 = !DILocation(line: 2641, column: 38, scope: !3240)
!3475 = !DILocation(line: 2641, column: 43, scope: !3240)
!3476 = !DILocation(line: 2641, column: 28, scope: !3240)
!3477 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3239)
!3478 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3239)
!3479 = !DILocation(line: 2642, column: 20, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3240, file: !1126, line: 2642, column: 13)
!3481 = !DILocation(line: 2642, column: 18, scope: !3480)
!3482 = !DILocation(line: 2642, column: 25, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !3484, file: !1126, discriminator: 1)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !1126, line: 2642, column: 13)
!3485 = !DILocation(line: 2642, column: 29, scope: !3483)
!3486 = !DILocation(line: 2642, column: 32, scope: !3483)
!3487 = !DILocation(line: 2642, column: 27, scope: !3483)
!3488 = !DILocation(line: 2642, column: 13, scope: !3483)
!3489 = !DILocalVariable(name: "st", scope: !3490, file: !1126, line: 2643, type: !1398)
!3490 = distinct !DILexicalBlock(scope: !3484, file: !1126, line: 2642, column: 49)
!3491 = !DILocation(line: 2643, column: 27, scope: !3490)
!3492 = !DILocation(line: 2643, column: 43, scope: !3490)
!3493 = !DILocation(line: 2643, column: 32, scope: !3490)
!3494 = !DILocation(line: 2643, column: 35, scope: !3490)
!3495 = !DILocation(line: 2645, column: 50, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3490, file: !1126, line: 2645, column: 21)
!3497 = !DILocation(line: 2645, column: 21, scope: !3496)
!3498 = !DILocation(line: 2645, column: 26, scope: !3496)
!3499 = !DILocation(line: 2645, column: 53, scope: !3496)
!3500 = !DILocation(line: 2645, column: 21, scope: !3490)
!3501 = !DILocalVariable(name: "duration_sec", scope: !3502, file: !1126, line: 2646, type: !1092)
!3502 = distinct !DILexicalBlock(scope: !3496, file: !1126, line: 2645, column: 58)
!3503 = !DILocation(line: 2646, column: 28, scope: !3502)
!3504 = !DILocation(line: 2646, column: 65, scope: !3502)
!3505 = !DILocation(line: 2646, column: 43, scope: !3502)
!3506 = !DILocation(line: 2646, column: 48, scope: !3502)
!3507 = !DILocation(line: 2646, column: 77, scope: !3502)
!3508 = !DILocation(line: 2646, column: 81, scope: !3502)
!3509 = !DILocation(line: 2646, column: 70, scope: !3502)
!3510 = !DILocation(line: 2646, column: 68, scope: !3502)
!3511 = !DILocalVariable(name: "duration_string", scope: !3502, file: !1126, line: 2647, type: !3512)
!3512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1133, size: 160, align: 8, elements: !3513)
!3513 = !{!3514}
!3514 = !DISubrange(count: 20)
!3515 = !DILocation(line: 2647, column: 26, scope: !3502)
!3516 = !DILocation(line: 2649, column: 28, scope: !3502)
!3517 = !DILocation(line: 2649, column: 86, scope: !3502)
!3518 = !DILocation(line: 2650, column: 50, scope: !3502)
!3519 = !DILocation(line: 2650, column: 28, scope: !3502)
!3520 = !DILocation(line: 2650, column: 33, scope: !3502)
!3521 = !DILocation(line: 2649, column: 21, scope: !3502)
!3522 = !DILocation(line: 2652, column: 31, scope: !3502)
!3523 = !DILocation(line: 2652, column: 36, scope: !3502)
!3524 = !DILocation(line: 2652, column: 74, scope: !3502)
!3525 = !DILocation(line: 2652, column: 45, scope: !3502)
!3526 = !DILocation(line: 2652, column: 50, scope: !3502)
!3527 = !DILocation(line: 2652, column: 21, scope: !3502)
!3528 = !DILocation(line: 2654, column: 30, scope: !3502)
!3529 = !DILocation(line: 2655, column: 36, scope: !3502)
!3530 = !DILocation(line: 2655, column: 30, scope: !3502)
!3531 = !DILocation(line: 2655, column: 49, scope: !3502)
!3532 = !DILocation(line: 2655, column: 64, scope: !3502)
!3533 = !DILocation(line: 2655, column: 58, scope: !3502)
!3534 = !DILocation(line: 2655, column: 77, scope: !3502)
!3535 = !DILocation(line: 2655, column: 83, scope: !3502)
!3536 = !DILocation(line: 2656, column: 35, scope: !3502)
!3537 = !DILocation(line: 2656, column: 30, scope: !3502)
!3538 = !DILocation(line: 2654, column: 21, scope: !3502)
!3539 = !DILocation(line: 2658, column: 37, scope: !3502)
!3540 = !DILocation(line: 2658, column: 42, scope: !3502)
!3541 = !DILocation(line: 2658, column: 59, scope: !3502)
!3542 = !DILocation(line: 2658, column: 21, scope: !3502)
!3543 = !DILocation(line: 2659, column: 17, scope: !3502)
!3544 = !DILocation(line: 2660, column: 13, scope: !3490)
!3545 = !DILocation(line: 2642, column: 44, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3484, file: !1126, discriminator: 2)
!3547 = !DILocation(line: 2642, column: 13, scope: !3546)
!3548 = distinct !{!3548, !3549}
!3549 = !DILocation(line: 2642, column: 13, scope: !3240)
!3550 = !DILocation(line: 2661, column: 23, scope: !3240)
!3551 = !DILocation(line: 2661, column: 28, scope: !3240)
!3552 = !DILocation(line: 2661, column: 37, scope: !3240)
!3553 = !DILocation(line: 2661, column: 13, scope: !3240)
!3554 = !DILocation(line: 2662, column: 9, scope: !3240)
!3555 = !DILocation(line: 2663, column: 13, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3242, file: !1126, line: 2663, column: 13)
!3557 = !DILocation(line: 2663, column: 18, scope: !3556)
!3558 = !DILocation(line: 2663, column: 23, scope: !3556)
!3559 = !DILocation(line: 2663, column: 27, scope: !3556)
!3560 = !DILocation(line: 2663, column: 31, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3556, file: !1126, discriminator: 1)
!3562 = !DILocation(line: 2663, column: 36, scope: !3561)
!3563 = !DILocation(line: 2663, column: 13, scope: !3561)
!3564 = !DILocation(line: 2664, column: 23, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3556, file: !1126, line: 2663, column: 45)
!3566 = !DILocation(line: 2664, column: 27, scope: !3565)
!3567 = !DILocation(line: 2664, column: 32, scope: !3565)
!3568 = !DILocation(line: 2664, column: 37, scope: !3565)
!3569 = !DILocation(line: 2664, column: 13, scope: !3565)
!3570 = !DILocation(line: 2665, column: 35, scope: !3565)
!3571 = !DILocation(line: 2665, column: 40, scope: !3565)
!3572 = !DILocation(line: 2665, column: 45, scope: !3565)
!3573 = !DILocation(line: 2665, column: 54, scope: !3565)
!3574 = !DILocation(line: 2665, column: 59, scope: !3565)
!3575 = !DILocation(line: 2665, column: 64, scope: !3565)
!3576 = !DILocation(line: 2665, column: 13, scope: !3565)
!3577 = !DILocation(line: 2666, column: 9, scope: !3565)
!3578 = !DILocation(line: 2668, column: 19, scope: !3242)
!3579 = !DILocation(line: 2668, column: 23, scope: !3242)
!3580 = !DILocation(line: 2668, column: 9, scope: !3242)
!3581 = !DILocation(line: 2669, column: 5, scope: !3242)
!3582 = !DILocation(line: 2671, column: 10, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3237, file: !1126, line: 2671, column: 9)
!3584 = !DILocation(line: 2671, column: 15, scope: !3583)
!3585 = !DILocation(line: 2671, column: 9, scope: !3237)
!3586 = !DILocation(line: 2672, column: 25, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3583, file: !1126, line: 2671, column: 24)
!3588 = !DILocation(line: 2672, column: 29, scope: !3587)
!3589 = !DILocation(line: 2672, column: 34, scope: !3587)
!3590 = !DILocation(line: 2672, column: 9, scope: !3587)
!3591 = !DILocation(line: 2673, column: 5, scope: !3587)
!3592 = !DILocation(line: 2675, column: 14, scope: !3237)
!3593 = !DILocation(line: 2675, column: 5, scope: !3237)
!3594 = !DILocation(line: 2676, column: 5, scope: !3237)
!3595 = !DILocation(line: 2677, column: 1, scope: !3237)
!3596 = distinct !DISubprogram(name: "mkv_query_codec", scope: !1126, file: !1126, line: 2679, type: !2383, isLocal: true, isDefinition: true, scopeLine: 2680, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3597 = !DILocalVariable(name: "codec_id", arg: 1, scope: !3596, file: !1126, line: 2679, type: !3)
!3598 = !DILocation(line: 2679, column: 43, scope: !3596)
!3599 = !DILocalVariable(name: "std_compliance", arg: 2, scope: !3596, file: !1126, line: 2679, type: !1053)
!3600 = !DILocation(line: 2679, column: 57, scope: !3596)
!3601 = !DILocalVariable(name: "i", scope: !3596, file: !1126, line: 2681, type: !1053)
!3602 = !DILocation(line: 2681, column: 9, scope: !3596)
!3603 = !DILocation(line: 2682, column: 12, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3596, file: !1126, line: 2682, column: 5)
!3605 = !DILocation(line: 2682, column: 10, scope: !3604)
!3606 = !DILocation(line: 2682, column: 35, scope: !3607)
!3607 = !DILexicalBlockFile(scope: !3608, file: !1126, discriminator: 1)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !1126, line: 2682, column: 5)
!3609 = !DILocation(line: 2682, column: 17, scope: !3607)
!3610 = !DILocation(line: 2682, column: 38, scope: !3607)
!3611 = !DILocation(line: 2682, column: 41, scope: !3607)
!3612 = !DILocation(line: 2682, column: 5, scope: !3607)
!3613 = !DILocation(line: 2683, column: 31, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !1126, line: 2683, column: 13)
!3615 = !DILocation(line: 2683, column: 13, scope: !3614)
!3616 = !DILocation(line: 2683, column: 34, scope: !3614)
!3617 = !DILocation(line: 2683, column: 40, scope: !3614)
!3618 = !DILocation(line: 2683, column: 37, scope: !3614)
!3619 = !DILocation(line: 2683, column: 13, scope: !3608)
!3620 = !DILocation(line: 2684, column: 13, scope: !3614)
!3621 = !DILocation(line: 2683, column: 40, scope: !3622)
!3622 = !DILexicalBlockFile(scope: !3614, file: !1126, discriminator: 1)
!3623 = !DILocation(line: 2682, column: 63, scope: !3624)
!3624 = !DILexicalBlockFile(scope: !3608, file: !1126, discriminator: 2)
!3625 = !DILocation(line: 2682, column: 5, scope: !3624)
!3626 = distinct !{!3626, !3627}
!3627 = !DILocation(line: 2682, column: 5, scope: !3596)
!3628 = !DILocation(line: 2686, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3596, file: !1126, line: 2686, column: 9)
!3630 = !DILocation(line: 2686, column: 24, scope: !3629)
!3631 = !DILocation(line: 2686, column: 9, scope: !3596)
!3632 = !DILocalVariable(name: "type", scope: !3633, file: !1126, line: 2687, type: !545)
!3633 = distinct !DILexicalBlock(scope: !3629, file: !1126, line: 2686, column: 29)
!3634 = !DILocation(line: 2687, column: 26, scope: !3633)
!3635 = !DILocation(line: 2687, column: 50, scope: !3633)
!3636 = !DILocation(line: 2687, column: 33, scope: !3633)
!3637 = !DILocation(line: 2689, column: 13, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3633, file: !1126, line: 2689, column: 13)
!3639 = !DILocation(line: 2689, column: 18, scope: !3638)
!3640 = !DILocation(line: 2689, column: 40, scope: !3638)
!3641 = !DILocation(line: 2689, column: 43, scope: !3642)
!3642 = !DILexicalBlockFile(scope: !3638, file: !1126, discriminator: 1)
!3643 = !DILocation(line: 2689, column: 48, scope: !3642)
!3644 = !DILocation(line: 2689, column: 13, scope: !3642)
!3645 = !DILocation(line: 2690, column: 13, scope: !3638)
!3646 = !DILocation(line: 2691, column: 5, scope: !3633)
!3647 = !DILocation(line: 2693, column: 5, scope: !3596)
!3648 = !DILocation(line: 2694, column: 1, scope: !3596)
!3649 = distinct !DISubprogram(name: "mkv_init", scope: !1126, file: !1126, line: 2706, type: !1228, isLocal: true, isDefinition: true, scopeLine: 2707, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3650 = !DILocalVariable(name: "s", arg: 1, scope: !3649, file: !1126, line: 2706, type: !1230)
!3651 = !DILocation(line: 2706, column: 45, scope: !3649)
!3652 = !DILocalVariable(name: "i", scope: !3649, file: !1126, line: 2708, type: !1053)
!3653 = !DILocation(line: 2708, column: 9, scope: !3649)
!3654 = !DILocation(line: 2710, column: 9, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3649, file: !1126, line: 2710, column: 9)
!3656 = !DILocation(line: 2710, column: 12, scope: !3655)
!3657 = !DILocation(line: 2710, column: 23, scope: !3655)
!3658 = !DILocation(line: 2710, column: 9, scope: !3649)
!3659 = !DILocation(line: 2711, column: 16, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3655, file: !1126, line: 2710, column: 30)
!3661 = !DILocation(line: 2711, column: 9, scope: !3660)
!3662 = !DILocation(line: 2714, column: 9, scope: !3660)
!3663 = !DILocation(line: 2717, column: 12, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3649, file: !1126, line: 2717, column: 5)
!3665 = !DILocation(line: 2717, column: 10, scope: !3664)
!3666 = !DILocation(line: 2717, column: 17, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !3668, file: !1126, discriminator: 1)
!3668 = distinct !DILexicalBlock(scope: !3664, file: !1126, line: 2717, column: 5)
!3669 = !DILocation(line: 2717, column: 21, scope: !3667)
!3670 = !DILocation(line: 2717, column: 24, scope: !3667)
!3671 = !DILocation(line: 2717, column: 19, scope: !3667)
!3672 = !DILocation(line: 2717, column: 5, scope: !3667)
!3673 = !DILocation(line: 2718, column: 24, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !1126, line: 2718, column: 13)
!3675 = distinct !DILexicalBlock(scope: !3668, file: !1126, line: 2717, column: 41)
!3676 = !DILocation(line: 2718, column: 13, scope: !3674)
!3677 = !DILocation(line: 2718, column: 16, scope: !3674)
!3678 = !DILocation(line: 2718, column: 28, scope: !3674)
!3679 = !DILocation(line: 2718, column: 38, scope: !3674)
!3680 = !DILocation(line: 2718, column: 47, scope: !3674)
!3681 = !DILocation(line: 2718, column: 69, scope: !3674)
!3682 = !DILocation(line: 2719, column: 24, scope: !3674)
!3683 = !DILocation(line: 2719, column: 13, scope: !3674)
!3684 = !DILocation(line: 2719, column: 16, scope: !3674)
!3685 = !DILocation(line: 2719, column: 28, scope: !3674)
!3686 = !DILocation(line: 2719, column: 38, scope: !3674)
!3687 = !DILocation(line: 2719, column: 47, scope: !3674)
!3688 = !DILocation(line: 2719, column: 67, scope: !3674)
!3689 = !DILocation(line: 2720, column: 24, scope: !3674)
!3690 = !DILocation(line: 2720, column: 13, scope: !3674)
!3691 = !DILocation(line: 2720, column: 16, scope: !3674)
!3692 = !DILocation(line: 2720, column: 28, scope: !3674)
!3693 = !DILocation(line: 2720, column: 38, scope: !3674)
!3694 = !DILocation(line: 2720, column: 47, scope: !3674)
!3695 = !DILocation(line: 2720, column: 69, scope: !3674)
!3696 = !DILocation(line: 2721, column: 24, scope: !3674)
!3697 = !DILocation(line: 2721, column: 13, scope: !3674)
!3698 = !DILocation(line: 2721, column: 16, scope: !3674)
!3699 = !DILocation(line: 2721, column: 28, scope: !3674)
!3700 = !DILocation(line: 2721, column: 38, scope: !3674)
!3701 = !DILocation(line: 2721, column: 47, scope: !3674)
!3702 = !DILocation(line: 2721, column: 67, scope: !3674)
!3703 = !DILocation(line: 2722, column: 24, scope: !3674)
!3704 = !DILocation(line: 2722, column: 13, scope: !3674)
!3705 = !DILocation(line: 2722, column: 16, scope: !3674)
!3706 = !DILocation(line: 2722, column: 28, scope: !3674)
!3707 = !DILocation(line: 2722, column: 38, scope: !3674)
!3708 = !DILocation(line: 2722, column: 47, scope: !3674)
!3709 = !DILocation(line: 2722, column: 67, scope: !3674)
!3710 = !DILocation(line: 2723, column: 24, scope: !3674)
!3711 = !DILocation(line: 2723, column: 13, scope: !3674)
!3712 = !DILocation(line: 2723, column: 16, scope: !3674)
!3713 = !DILocation(line: 2723, column: 28, scope: !3674)
!3714 = !DILocation(line: 2723, column: 38, scope: !3674)
!3715 = !DILocation(line: 2723, column: 47, scope: !3674)
!3716 = !DILocation(line: 2718, column: 13, scope: !3717)
!3717 = !DILexicalBlockFile(scope: !3675, file: !1126, discriminator: 1)
!3718 = !DILocation(line: 2724, column: 20, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3674, file: !1126, line: 2723, column: 68)
!3720 = !DILocation(line: 2726, column: 48, scope: !3719)
!3721 = !DILocation(line: 2726, column: 37, scope: !3719)
!3722 = !DILocation(line: 2726, column: 40, scope: !3719)
!3723 = !DILocation(line: 2726, column: 52, scope: !3719)
!3724 = !DILocation(line: 2726, column: 62, scope: !3719)
!3725 = !DILocation(line: 2726, column: 20, scope: !3719)
!3726 = !DILocation(line: 2724, column: 13, scope: !3719)
!3727 = !DILocation(line: 2727, column: 13, scope: !3719)
!3728 = !DILocation(line: 2729, column: 5, scope: !3675)
!3729 = !DILocation(line: 2717, column: 37, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3668, file: !1126, discriminator: 2)
!3731 = !DILocation(line: 2717, column: 5, scope: !3730)
!3732 = distinct !{!3732, !3733}
!3733 = !DILocation(line: 2717, column: 5, scope: !3649)
!3734 = !DILocation(line: 2731, column: 9, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3649, file: !1126, line: 2731, column: 9)
!3736 = !DILocation(line: 2731, column: 12, scope: !3735)
!3737 = !DILocation(line: 2731, column: 30, scope: !3735)
!3738 = !DILocation(line: 2731, column: 9, scope: !3649)
!3739 = !DILocation(line: 2732, column: 9, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3735, file: !1126, line: 2731, column: 35)
!3741 = !DILocation(line: 2732, column: 12, scope: !3740)
!3742 = !DILocation(line: 2732, column: 30, scope: !3740)
!3743 = !DILocation(line: 2733, column: 9, scope: !3740)
!3744 = !DILocation(line: 2733, column: 12, scope: !3740)
!3745 = !DILocation(line: 2733, column: 22, scope: !3740)
!3746 = !DILocation(line: 2733, column: 48, scope: !3740)
!3747 = !DILocation(line: 2734, column: 5, scope: !3740)
!3748 = !DILocation(line: 2736, column: 12, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3649, file: !1126, line: 2736, column: 5)
!3750 = !DILocation(line: 2736, column: 10, scope: !3749)
!3751 = !DILocation(line: 2736, column: 17, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3753, file: !1126, discriminator: 1)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !1126, line: 2736, column: 5)
!3754 = !DILocation(line: 2736, column: 21, scope: !3752)
!3755 = !DILocation(line: 2736, column: 24, scope: !3752)
!3756 = !DILocation(line: 2736, column: 19, scope: !3752)
!3757 = !DILocation(line: 2736, column: 5, scope: !3752)
!3758 = !DILocation(line: 2738, column: 40, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3753, file: !1126, line: 2736, column: 41)
!3760 = !DILocation(line: 2738, column: 29, scope: !3759)
!3761 = !DILocation(line: 2738, column: 32, scope: !3759)
!3762 = !DILocation(line: 2738, column: 9, scope: !3759)
!3763 = !DILocation(line: 2739, column: 5, scope: !3759)
!3764 = !DILocation(line: 2736, column: 37, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !3753, file: !1126, discriminator: 2)
!3766 = !DILocation(line: 2736, column: 5, scope: !3765)
!3767 = distinct !{!3767, !3768}
!3768 = !DILocation(line: 2736, column: 5, scope: !3649)
!3769 = !DILocation(line: 2741, column: 5, scope: !3649)
!3770 = !DILocation(line: 2742, column: 1, scope: !3649)
!3771 = distinct !DISubprogram(name: "mkv_check_bitstream", scope: !1126, file: !1126, line: 2744, type: !2406, isLocal: true, isDefinition: true, scopeLine: 2745, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3772 = !DILocalVariable(name: "x", arg: 1, scope: !3773, file: !3774, line: 58, type: !1122)
!3773 = distinct !DISubprogram(name: "av_bswap16", scope: !3774, file: !3774, line: 58, type: !3775, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3774 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!1122, !1122}
!3777 = !DILocation(line: 58, column: 98, scope: !3773, inlinedAt: !3778)
!3778 = distinct !DILocation(line: 2750, column: 31, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !3780, file: !1126, discriminator: 1)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !1126, line: 2750, column: 13)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !1126, line: 2749, column: 52)
!3782 = distinct !DILexicalBlock(scope: !3771, file: !1126, line: 2749, column: 9)
!3783 = !DILocalVariable(name: "s", arg: 1, scope: !3771, file: !1126, line: 2744, type: !1230)
!3784 = !DILocation(line: 2744, column: 56, scope: !3771)
!3785 = !DILocalVariable(name: "pkt", arg: 2, scope: !3771, file: !1126, line: 2744, type: !2408)
!3786 = !DILocation(line: 2744, column: 75, scope: !3771)
!3787 = !DILocalVariable(name: "ret", scope: !3771, file: !1126, line: 2746, type: !1053)
!3788 = !DILocation(line: 2746, column: 9, scope: !3771)
!3789 = !DILocalVariable(name: "st", scope: !3771, file: !1126, line: 2747, type: !1398)
!3790 = !DILocation(line: 2747, column: 15, scope: !3771)
!3791 = !DILocation(line: 2747, column: 31, scope: !3771)
!3792 = !DILocation(line: 2747, column: 36, scope: !3771)
!3793 = !DILocation(line: 2747, column: 20, scope: !3771)
!3794 = !DILocation(line: 2747, column: 23, scope: !3771)
!3795 = !DILocation(line: 2749, column: 9, scope: !3782)
!3796 = !DILocation(line: 2749, column: 13, scope: !3782)
!3797 = !DILocation(line: 2749, column: 23, scope: !3782)
!3798 = !DILocation(line: 2749, column: 32, scope: !3782)
!3799 = !DILocation(line: 2749, column: 9, scope: !3771)
!3800 = !DILocation(line: 2750, column: 13, scope: !3780)
!3801 = !DILocation(line: 2750, column: 18, scope: !3780)
!3802 = !DILocation(line: 2750, column: 23, scope: !3780)
!3803 = !DILocation(line: 2750, column: 27, scope: !3780)
!3804 = !DILocation(line: 2750, column: 74, scope: !3779)
!3805 = !DILocation(line: 2750, column: 79, scope: !3779)
!3806 = !DILocation(line: 2750, column: 87, scope: !3779)
!3807 = !DILocation(line: 2750, column: 31, scope: !3779)
!3808 = !DILocation(line: 60, column: 9, scope: !3773, inlinedAt: !3778)
!3809 = !DILocation(line: 60, column: 10, scope: !3773, inlinedAt: !3778)
!3810 = !DILocation(line: 60, column: 18, scope: !3773, inlinedAt: !3778)
!3811 = !DILocation(line: 60, column: 19, scope: !3773, inlinedAt: !3778)
!3812 = !DILocation(line: 60, column: 15, scope: !3773, inlinedAt: !3778)
!3813 = !DILocation(line: 60, column: 8, scope: !3773, inlinedAt: !3778)
!3814 = !DILocation(line: 60, column: 6, scope: !3773, inlinedAt: !3778)
!3815 = !DILocation(line: 61, column: 12, scope: !3773, inlinedAt: !3778)
!3816 = !DILocation(line: 2750, column: 91, scope: !3779)
!3817 = !DILocation(line: 2750, column: 101, scope: !3779)
!3818 = !DILocation(line: 2750, column: 13, scope: !3779)
!3819 = !DILocation(line: 2751, column: 50, scope: !3780)
!3820 = !DILocation(line: 2751, column: 19, scope: !3780)
!3821 = !DILocation(line: 2751, column: 17, scope: !3780)
!3822 = !DILocation(line: 2751, column: 13, scope: !3780)
!3823 = !DILocation(line: 2752, column: 5, scope: !3781)
!3824 = !DILocation(line: 2752, column: 16, scope: !3825)
!3825 = !DILexicalBlockFile(scope: !3826, file: !1126, discriminator: 1)
!3826 = distinct !DILexicalBlock(scope: !3782, file: !1126, line: 2752, column: 16)
!3827 = !DILocation(line: 2752, column: 20, scope: !3825)
!3828 = !DILocation(line: 2752, column: 30, scope: !3825)
!3829 = !DILocation(line: 2752, column: 39, scope: !3825)
!3830 = !DILocation(line: 2753, column: 46, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3826, file: !1126, line: 2752, column: 59)
!3832 = !DILocation(line: 2753, column: 15, scope: !3831)
!3833 = !DILocation(line: 2753, column: 13, scope: !3831)
!3834 = !DILocation(line: 2754, column: 5, scope: !3831)
!3835 = !DILocation(line: 2756, column: 12, scope: !3771)
!3836 = !DILocation(line: 2756, column: 5, scope: !3771)
!3837 = distinct !DISubprogram(name: "webm_query_codec", scope: !1126, file: !1126, line: 2696, type: !2383, isLocal: true, isDefinition: true, scopeLine: 2697, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3838 = !DILocalVariable(name: "codec_id", arg: 1, scope: !3837, file: !1126, line: 2696, type: !3)
!3839 = !DILocation(line: 2696, column: 44, scope: !3837)
!3840 = !DILocalVariable(name: "std_compliance", arg: 2, scope: !3837, file: !1126, line: 2696, type: !1053)
!3841 = !DILocation(line: 2696, column: 58, scope: !3837)
!3842 = !DILocalVariable(name: "i", scope: !3837, file: !1126, line: 2698, type: !1053)
!3843 = !DILocation(line: 2698, column: 9, scope: !3837)
!3844 = !DILocation(line: 2699, column: 12, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3837, file: !1126, line: 2699, column: 5)
!3846 = !DILocation(line: 2699, column: 10, scope: !3845)
!3847 = !DILocation(line: 2699, column: 36, scope: !3848)
!3848 = !DILexicalBlockFile(scope: !3849, file: !1126, discriminator: 1)
!3849 = distinct !DILexicalBlock(scope: !3845, file: !1126, line: 2699, column: 5)
!3850 = !DILocation(line: 2699, column: 17, scope: !3848)
!3851 = !DILocation(line: 2699, column: 39, scope: !3848)
!3852 = !DILocation(line: 2699, column: 42, scope: !3848)
!3853 = !DILocation(line: 2699, column: 5, scope: !3848)
!3854 = !DILocation(line: 2700, column: 32, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3849, file: !1126, line: 2700, column: 13)
!3856 = !DILocation(line: 2700, column: 13, scope: !3855)
!3857 = !DILocation(line: 2700, column: 35, scope: !3855)
!3858 = !DILocation(line: 2700, column: 41, scope: !3855)
!3859 = !DILocation(line: 2700, column: 38, scope: !3855)
!3860 = !DILocation(line: 2700, column: 13, scope: !3849)
!3861 = !DILocation(line: 2701, column: 13, scope: !3855)
!3862 = !DILocation(line: 2700, column: 41, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3855, file: !1126, discriminator: 1)
!3864 = !DILocation(line: 2699, column: 64, scope: !3865)
!3865 = !DILexicalBlockFile(scope: !3849, file: !1126, discriminator: 2)
!3866 = !DILocation(line: 2699, column: 5, scope: !3865)
!3867 = distinct !{!3867, !3868}
!3868 = !DILocation(line: 2699, column: 5, scope: !3837)
!3869 = !DILocation(line: 2703, column: 5, scope: !3837)
!3870 = !DILocation(line: 2704, column: 1, scope: !3837)
!3871 = distinct !DISubprogram(name: "start_ebml_master", scope: !1126, file: !1126, line: 312, type: !3872, isLocal: true, isDefinition: true, scopeLine: 314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!2468, !1332, !1050, !1039}
!3874 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3875)
!3875 = distinct !DILocation(line: 318, column: 27, scope: !3871)
!3876 = !DILocalVariable(name: "pb", arg: 1, scope: !3871, file: !1126, line: 312, type: !1332)
!3877 = !DILocation(line: 312, column: 51, scope: !3871)
!3878 = !DILocalVariable(name: "elementid", arg: 2, scope: !3871, file: !1126, line: 312, type: !1050)
!3879 = !DILocation(line: 312, column: 68, scope: !3871)
!3880 = !DILocalVariable(name: "expectedsize", arg: 3, scope: !3871, file: !1126, line: 313, type: !1039)
!3881 = !DILocation(line: 313, column: 47, scope: !3871)
!3882 = !DILocalVariable(name: "bytes", scope: !3871, file: !1126, line: 315, type: !1053)
!3883 = !DILocation(line: 315, column: 9, scope: !3871)
!3884 = !DILocation(line: 315, column: 17, scope: !3871)
!3885 = !DILocation(line: 315, column: 46, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3871, file: !1126, discriminator: 1)
!3887 = !DILocation(line: 315, column: 32, scope: !3886)
!3888 = !DILocation(line: 315, column: 17, scope: !3886)
!3889 = !DILocation(line: 315, column: 17, scope: !3890)
!3890 = !DILexicalBlockFile(scope: !3871, file: !1126, discriminator: 2)
!3891 = !DILocation(line: 315, column: 17, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3871, file: !1126, discriminator: 3)
!3893 = !DILocation(line: 315, column: 9, scope: !3892)
!3894 = !DILocation(line: 316, column: 17, scope: !3871)
!3895 = !DILocation(line: 316, column: 21, scope: !3871)
!3896 = !DILocation(line: 316, column: 5, scope: !3871)
!3897 = !DILocation(line: 317, column: 27, scope: !3871)
!3898 = !DILocation(line: 317, column: 31, scope: !3871)
!3899 = !DILocation(line: 317, column: 5, scope: !3871)
!3900 = !DILocation(line: 318, column: 26, scope: !3871)
!3901 = !DILocation(line: 318, column: 37, scope: !3871)
!3902 = !DILocation(line: 318, column: 27, scope: !3871)
!3903 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3875)
!3904 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3875)
!3905 = !DILocation(line: 318, column: 42, scope: !3871)
!3906 = !DILocation(line: 318, column: 5, scope: !3871)
!3907 = distinct !DISubprogram(name: "put_ebml_uint", scope: !1126, file: !1126, line: 242, type: !3908, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{null, !1332, !1050, !1039}
!3910 = !DILocalVariable(name: "pb", arg: 1, scope: !3907, file: !1126, line: 242, type: !1332)
!3911 = !DILocation(line: 242, column: 40, scope: !3907)
!3912 = !DILocalVariable(name: "elementid", arg: 2, scope: !3907, file: !1126, line: 242, type: !1050)
!3913 = !DILocation(line: 242, column: 57, scope: !3907)
!3914 = !DILocalVariable(name: "val", arg: 3, scope: !3907, file: !1126, line: 242, type: !1039)
!3915 = !DILocation(line: 242, column: 77, scope: !3907)
!3916 = !DILocalVariable(name: "i", scope: !3907, file: !1126, line: 244, type: !1053)
!3917 = !DILocation(line: 244, column: 9, scope: !3907)
!3918 = !DILocalVariable(name: "bytes", scope: !3907, file: !1126, line: 244, type: !1053)
!3919 = !DILocation(line: 244, column: 12, scope: !3907)
!3920 = !DILocalVariable(name: "tmp", scope: !3907, file: !1126, line: 245, type: !1039)
!3921 = !DILocation(line: 245, column: 14, scope: !3907)
!3922 = !DILocation(line: 245, column: 20, scope: !3907)
!3923 = !DILocation(line: 246, column: 5, scope: !3907)
!3924 = !DILocation(line: 246, column: 16, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3907, file: !1126, discriminator: 1)
!3926 = !DILocation(line: 246, column: 5, scope: !3925)
!3927 = !DILocation(line: 247, column: 14, scope: !3907)
!3928 = !DILocation(line: 246, column: 5, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3907, file: !1126, discriminator: 2)
!3930 = distinct !{!3930, !3923}
!3931 = !DILocation(line: 249, column: 17, scope: !3907)
!3932 = !DILocation(line: 249, column: 21, scope: !3907)
!3933 = !DILocation(line: 249, column: 5, scope: !3907)
!3934 = !DILocation(line: 250, column: 18, scope: !3907)
!3935 = !DILocation(line: 250, column: 22, scope: !3907)
!3936 = !DILocation(line: 250, column: 5, scope: !3907)
!3937 = !DILocation(line: 251, column: 14, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3907, file: !1126, line: 251, column: 5)
!3939 = !DILocation(line: 251, column: 20, scope: !3938)
!3940 = !DILocation(line: 251, column: 12, scope: !3938)
!3941 = !DILocation(line: 251, column: 10, scope: !3938)
!3942 = !DILocation(line: 251, column: 25, scope: !3943)
!3943 = !DILexicalBlockFile(scope: !3944, file: !1126, discriminator: 1)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !1126, line: 251, column: 5)
!3945 = !DILocation(line: 251, column: 27, scope: !3943)
!3946 = !DILocation(line: 251, column: 5, scope: !3943)
!3947 = !DILocation(line: 252, column: 17, scope: !3944)
!3948 = !DILocation(line: 252, column: 31, scope: !3944)
!3949 = !DILocation(line: 252, column: 38, scope: !3944)
!3950 = !DILocation(line: 252, column: 40, scope: !3944)
!3951 = !DILocation(line: 252, column: 35, scope: !3944)
!3952 = !DILocation(line: 252, column: 21, scope: !3944)
!3953 = !DILocation(line: 252, column: 9, scope: !3944)
!3954 = !DILocation(line: 251, column: 34, scope: !3955)
!3955 = !DILexicalBlockFile(scope: !3944, file: !1126, discriminator: 2)
!3956 = !DILocation(line: 251, column: 5, scope: !3955)
!3957 = distinct !{!3957, !3958}
!3958 = !DILocation(line: 251, column: 5, scope: !3907)
!3959 = !DILocation(line: 253, column: 1, scope: !3907)
!3960 = distinct !DISubprogram(name: "put_ebml_string", scope: !1126, file: !1126, line: 283, type: !3961, isLocal: true, isDefinition: true, scopeLine: 285, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !1332, !1050, !1131}
!3963 = !DILocalVariable(name: "pb", arg: 1, scope: !3960, file: !1126, line: 283, type: !1332)
!3964 = !DILocation(line: 283, column: 42, scope: !3960)
!3965 = !DILocalVariable(name: "elementid", arg: 2, scope: !3960, file: !1126, line: 283, type: !1050)
!3966 = !DILocation(line: 283, column: 59, scope: !3960)
!3967 = !DILocalVariable(name: "str", arg: 3, scope: !3960, file: !1126, line: 284, type: !1131)
!3968 = !DILocation(line: 284, column: 41, scope: !3960)
!3969 = !DILocation(line: 286, column: 21, scope: !3960)
!3970 = !DILocation(line: 286, column: 25, scope: !3960)
!3971 = !DILocation(line: 286, column: 36, scope: !3960)
!3972 = !DILocation(line: 286, column: 48, scope: !3960)
!3973 = !DILocation(line: 286, column: 41, scope: !3960)
!3974 = !DILocation(line: 286, column: 5, scope: !3975)
!3975 = !DILexicalBlockFile(scope: !3960, file: !1126, discriminator: 1)
!3976 = !DILocation(line: 287, column: 1, scope: !3960)
!3977 = distinct !DISubprogram(name: "end_ebml_master", scope: !1126, file: !1126, line: 321, type: !3978, isLocal: true, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !1332, !2468}
!3980 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !3981)
!3981 = distinct !DILocation(line: 323, column: 19, scope: !3977)
!3982 = !DILocalVariable(name: "pb", arg: 1, scope: !3977, file: !1126, line: 321, type: !1332)
!3983 = !DILocation(line: 321, column: 42, scope: !3977)
!3984 = !DILocalVariable(name: "master", arg: 2, scope: !3977, file: !1126, line: 321, type: !2468)
!3985 = !DILocation(line: 321, column: 58, scope: !3977)
!3986 = !DILocalVariable(name: "pos", scope: !3977, file: !1126, line: 323, type: !1051)
!3987 = !DILocation(line: 323, column: 13, scope: !3977)
!3988 = !DILocation(line: 323, column: 29, scope: !3977)
!3989 = !DILocation(line: 323, column: 19, scope: !3977)
!3990 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !3981)
!3991 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !3981)
!3992 = !DILocation(line: 325, column: 19, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3977, file: !1126, line: 325, column: 9)
!3994 = !DILocation(line: 325, column: 30, scope: !3993)
!3995 = !DILocation(line: 325, column: 43, scope: !3993)
!3996 = !DILocation(line: 325, column: 36, scope: !3993)
!3997 = !DILocation(line: 325, column: 34, scope: !3993)
!3998 = !DILocation(line: 325, column: 9, scope: !3993)
!3999 = !DILocation(line: 325, column: 63, scope: !3993)
!4000 = !DILocation(line: 325, column: 9, scope: !3977)
!4001 = !DILocation(line: 326, column: 9, scope: !3993)
!4002 = !DILocation(line: 327, column: 18, scope: !3977)
!4003 = !DILocation(line: 327, column: 22, scope: !3977)
!4004 = !DILocation(line: 327, column: 35, scope: !3977)
!4005 = !DILocation(line: 327, column: 26, scope: !3977)
!4006 = !DILocation(line: 327, column: 47, scope: !3977)
!4007 = !DILocation(line: 327, column: 5, scope: !3977)
!4008 = !DILocation(line: 328, column: 15, scope: !3977)
!4009 = !DILocation(line: 328, column: 19, scope: !3977)
!4010 = !DILocation(line: 328, column: 5, scope: !3977)
!4011 = !DILocation(line: 329, column: 1, scope: !3977)
!4012 = !DILocation(line: 329, column: 1, scope: !4013)
!4013 = !DILexicalBlockFile(scope: !3977, file: !1126, discriminator: 1)
!4014 = distinct !DISubprogram(name: "mkv_start_seekhead", scope: !1126, file: !1126, line: 444, type: !4015, isLocal: true, isDefinition: true, scopeLine: 446, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!2485, !1332, !1051, !1053}
!4017 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4018)
!4018 = distinct !DILocation(line: 454, column: 33, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !1126, line: 453, column: 26)
!4020 = distinct !DILexicalBlock(scope: !4014, file: !1126, line: 453, column: 9)
!4021 = !DILocalVariable(name: "pb", arg: 1, scope: !4014, file: !1126, line: 444, type: !1332)
!4022 = !DILocation(line: 444, column: 54, scope: !4014)
!4023 = !DILocalVariable(name: "segment_offset", arg: 2, scope: !4014, file: !1126, line: 444, type: !1051)
!4024 = !DILocation(line: 444, column: 66, scope: !4014)
!4025 = !DILocalVariable(name: "numelements", arg: 3, scope: !4014, file: !1126, line: 445, type: !1053)
!4026 = !DILocation(line: 445, column: 45, scope: !4014)
!4027 = !DILocalVariable(name: "new_seekhead", scope: !4014, file: !1126, line: 447, type: !2485)
!4028 = !DILocation(line: 447, column: 19, scope: !4014)
!4029 = !DILocation(line: 447, column: 34, scope: !4014)
!4030 = !DILocation(line: 448, column: 10, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4014, file: !1126, line: 448, column: 9)
!4032 = !DILocation(line: 448, column: 9, scope: !4014)
!4033 = !DILocation(line: 449, column: 9, scope: !4031)
!4034 = !DILocation(line: 451, column: 36, scope: !4014)
!4035 = !DILocation(line: 451, column: 5, scope: !4014)
!4036 = !DILocation(line: 451, column: 19, scope: !4014)
!4037 = !DILocation(line: 451, column: 34, scope: !4014)
!4038 = !DILocation(line: 453, column: 9, scope: !4020)
!4039 = !DILocation(line: 453, column: 21, scope: !4020)
!4040 = !DILocation(line: 453, column: 9, scope: !4014)
!4041 = !DILocation(line: 454, column: 43, scope: !4019)
!4042 = !DILocation(line: 454, column: 33, scope: !4019)
!4043 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4018)
!4044 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4018)
!4045 = !DILocation(line: 454, column: 9, scope: !4019)
!4046 = !DILocation(line: 454, column: 23, scope: !4019)
!4047 = !DILocation(line: 454, column: 31, scope: !4019)
!4048 = !DILocation(line: 458, column: 39, scope: !4019)
!4049 = !DILocation(line: 458, column: 51, scope: !4019)
!4050 = !DILocation(line: 458, column: 56, scope: !4019)
!4051 = !DILocation(line: 458, column: 9, scope: !4019)
!4052 = !DILocation(line: 458, column: 23, scope: !4019)
!4053 = !DILocation(line: 458, column: 37, scope: !4019)
!4054 = !DILocation(line: 459, column: 37, scope: !4019)
!4055 = !DILocation(line: 459, column: 9, scope: !4019)
!4056 = !DILocation(line: 459, column: 23, scope: !4019)
!4057 = !DILocation(line: 459, column: 35, scope: !4019)
!4058 = !DILocation(line: 460, column: 23, scope: !4019)
!4059 = !DILocation(line: 460, column: 27, scope: !4019)
!4060 = !DILocation(line: 460, column: 41, scope: !4019)
!4061 = !DILocation(line: 460, column: 9, scope: !4019)
!4062 = !DILocation(line: 461, column: 5, scope: !4019)
!4063 = !DILocation(line: 462, column: 12, scope: !4014)
!4064 = !DILocation(line: 462, column: 5, scope: !4014)
!4065 = !DILocation(line: 463, column: 1, scope: !4014)
!4066 = distinct !DISubprogram(name: "mkv_add_seekhead_entry", scope: !1126, file: !1126, line: 465, type: !4067, isLocal: true, isDefinition: true, scopeLine: 466, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!1053, !2485, !1050, !1039}
!4069 = !DILocalVariable(name: "seekhead", arg: 1, scope: !4066, file: !1126, line: 465, type: !2485)
!4070 = !DILocation(line: 465, column: 49, scope: !4066)
!4071 = !DILocalVariable(name: "elementid", arg: 2, scope: !4066, file: !1126, line: 465, type: !1050)
!4072 = !DILocation(line: 465, column: 72, scope: !4066)
!4073 = !DILocalVariable(name: "filepos", arg: 3, scope: !4066, file: !1126, line: 465, type: !1039)
!4074 = !DILocation(line: 465, column: 92, scope: !4066)
!4075 = !DILocalVariable(name: "entries", scope: !4066, file: !1126, line: 467, type: !2494)
!4076 = !DILocation(line: 467, column: 25, scope: !4066)
!4077 = !DILocation(line: 467, column: 35, scope: !4066)
!4078 = !DILocation(line: 467, column: 45, scope: !4066)
!4079 = !DILocation(line: 470, column: 9, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4066, file: !1126, line: 470, column: 9)
!4081 = !DILocation(line: 470, column: 19, scope: !4080)
!4082 = !DILocation(line: 470, column: 31, scope: !4080)
!4083 = !DILocation(line: 470, column: 35, scope: !4080)
!4084 = !DILocation(line: 470, column: 38, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4080, file: !1126, discriminator: 1)
!4086 = !DILocation(line: 470, column: 48, scope: !4085)
!4087 = !DILocation(line: 470, column: 63, scope: !4085)
!4088 = !DILocation(line: 470, column: 73, scope: !4085)
!4089 = !DILocation(line: 470, column: 60, scope: !4085)
!4090 = !DILocation(line: 470, column: 9, scope: !4085)
!4091 = !DILocation(line: 471, column: 9, scope: !4080)
!4092 = !DILocation(line: 473, column: 32, scope: !4066)
!4093 = !DILocation(line: 473, column: 41, scope: !4066)
!4094 = !DILocation(line: 473, column: 51, scope: !4066)
!4095 = !DILocation(line: 473, column: 63, scope: !4066)
!4096 = !DILocation(line: 473, column: 15, scope: !4066)
!4097 = !DILocation(line: 473, column: 13, scope: !4066)
!4098 = !DILocation(line: 474, column: 10, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4066, file: !1126, line: 474, column: 9)
!4100 = !DILocation(line: 474, column: 9, scope: !4066)
!4101 = !DILocation(line: 475, column: 9, scope: !4099)
!4102 = !DILocation(line: 476, column: 25, scope: !4066)
!4103 = !DILocation(line: 476, column: 5, scope: !4066)
!4104 = !DILocation(line: 476, column: 15, scope: !4066)
!4105 = !DILocation(line: 476, column: 23, scope: !4066)
!4106 = !DILocation(line: 478, column: 58, scope: !4066)
!4107 = !DILocation(line: 478, column: 23, scope: !4066)
!4108 = !DILocation(line: 478, column: 33, scope: !4066)
!4109 = !DILocation(line: 478, column: 5, scope: !4066)
!4110 = !DILocation(line: 478, column: 15, scope: !4066)
!4111 = !DILocation(line: 478, column: 46, scope: !4066)
!4112 = !DILocation(line: 478, column: 56, scope: !4066)
!4113 = !DILocation(line: 479, column: 61, scope: !4066)
!4114 = !DILocation(line: 479, column: 71, scope: !4066)
!4115 = !DILocation(line: 479, column: 81, scope: !4066)
!4116 = !DILocation(line: 479, column: 69, scope: !4066)
!4117 = !DILocation(line: 479, column: 23, scope: !4066)
!4118 = !DILocation(line: 479, column: 33, scope: !4066)
!4119 = !DILocation(line: 479, column: 44, scope: !4066)
!4120 = !DILocation(line: 479, column: 5, scope: !4066)
!4121 = !DILocation(line: 479, column: 15, scope: !4066)
!4122 = !DILocation(line: 479, column: 48, scope: !4066)
!4123 = !DILocation(line: 479, column: 59, scope: !4066)
!4124 = !DILocation(line: 481, column: 5, scope: !4066)
!4125 = !DILocation(line: 482, column: 1, scope: !4066)
!4126 = distinct !DISubprogram(name: "start_ebml_master_crc32", scope: !1126, file: !1126, line: 331, type: !4127, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!1053, !1332, !2359, !2459, !4129, !1050, !1039}
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64, align: 64)
!4130 = !DILocalVariable(name: "pb", arg: 1, scope: !4126, file: !1126, line: 331, type: !1332)
!4131 = !DILocation(line: 331, column: 49, scope: !4126)
!4132 = !DILocalVariable(name: "dyn_cp", arg: 2, scope: !4126, file: !1126, line: 331, type: !2359)
!4133 = !DILocation(line: 331, column: 67, scope: !4126)
!4134 = !DILocalVariable(name: "mkv", arg: 3, scope: !4126, file: !1126, line: 331, type: !2459)
!4135 = !DILocation(line: 331, column: 95, scope: !4126)
!4136 = !DILocalVariable(name: "master", arg: 4, scope: !4126, file: !1126, line: 332, type: !4129)
!4137 = !DILocation(line: 332, column: 49, scope: !4126)
!4138 = !DILocalVariable(name: "elementid", arg: 5, scope: !4126, file: !1126, line: 332, type: !1050)
!4139 = !DILocation(line: 332, column: 70, scope: !4126)
!4140 = !DILocalVariable(name: "expectedsize", arg: 6, scope: !4126, file: !1126, line: 332, type: !1039)
!4141 = !DILocation(line: 332, column: 90, scope: !4126)
!4142 = !DILocalVariable(name: "ret", scope: !4126, file: !1126, line: 334, type: !1053)
!4143 = !DILocation(line: 334, column: 9, scope: !4126)
!4144 = !DILocation(line: 336, column: 34, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4126, file: !1126, line: 336, column: 9)
!4146 = !DILocation(line: 336, column: 16, scope: !4145)
!4147 = !DILocation(line: 336, column: 14, scope: !4145)
!4148 = !DILocation(line: 336, column: 43, scope: !4145)
!4149 = !DILocation(line: 336, column: 9, scope: !4126)
!4150 = !DILocation(line: 337, column: 16, scope: !4145)
!4151 = !DILocation(line: 337, column: 9, scope: !4145)
!4152 = !DILocation(line: 339, column: 9, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4126, file: !1126, line: 339, column: 9)
!4154 = !DILocation(line: 339, column: 13, scope: !4153)
!4155 = !DILocation(line: 339, column: 22, scope: !4153)
!4156 = !DILocation(line: 339, column: 9, scope: !4126)
!4157 = !DILocation(line: 340, column: 10, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4153, file: !1126, line: 339, column: 34)
!4159 = !DILocation(line: 340, column: 37, scope: !4158)
!4160 = !DILocation(line: 340, column: 41, scope: !4158)
!4161 = !DILocation(line: 340, column: 52, scope: !4158)
!4162 = !DILocation(line: 340, column: 19, scope: !4158)
!4163 = !DILocation(line: 340, column: 19, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !4158, file: !1126, discriminator: 1)
!4165 = !DILocation(line: 341, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4158, file: !1126, line: 341, column: 13)
!4167 = !DILocation(line: 341, column: 18, scope: !4166)
!4168 = !DILocation(line: 341, column: 28, scope: !4166)
!4169 = !DILocation(line: 341, column: 31, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4166, file: !1126, discriminator: 1)
!4171 = !DILocation(line: 341, column: 36, scope: !4170)
!4172 = !DILocation(line: 341, column: 41, scope: !4170)
!4173 = !DILocation(line: 341, column: 13, scope: !4170)
!4174 = !DILocation(line: 342, column: 28, scope: !4166)
!4175 = !DILocation(line: 342, column: 27, scope: !4166)
!4176 = !DILocation(line: 342, column: 13, scope: !4166)
!4177 = !DILocation(line: 343, column: 5, scope: !4158)
!4178 = !DILocation(line: 344, column: 10, scope: !4153)
!4179 = !DILocation(line: 344, column: 38, scope: !4153)
!4180 = !DILocation(line: 344, column: 37, scope: !4153)
!4181 = !DILocation(line: 344, column: 46, scope: !4153)
!4182 = !DILocation(line: 344, column: 57, scope: !4153)
!4183 = !DILocation(line: 344, column: 19, scope: !4153)
!4184 = !DILocation(line: 344, column: 19, scope: !4185)
!4185 = !DILexicalBlockFile(scope: !4153, file: !1126, discriminator: 1)
!4186 = !DILocation(line: 346, column: 5, scope: !4126)
!4187 = !DILocation(line: 347, column: 1, scope: !4126)
!4188 = distinct !DISubprogram(name: "av_lfg_get", scope: !2792, file: !2792, line: 47, type: !4189, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!1050, !4191}
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64, align: 64)
!4192 = !DILocalVariable(name: "c", arg: 1, scope: !4188, file: !2792, line: 47, type: !4191)
!4193 = !DILocation(line: 47, column: 46, scope: !4188)
!4194 = !DILocation(line: 48, column: 41, scope: !4188)
!4195 = !DILocation(line: 48, column: 44, scope: !4188)
!4196 = !DILocation(line: 48, column: 49, scope: !4188)
!4197 = !DILocation(line: 48, column: 54, scope: !4188)
!4198 = !DILocation(line: 48, column: 31, scope: !4188)
!4199 = !DILocation(line: 48, column: 34, scope: !4188)
!4200 = !DILocation(line: 48, column: 72, scope: !4188)
!4201 = !DILocation(line: 48, column: 75, scope: !4188)
!4202 = !DILocation(line: 48, column: 80, scope: !4188)
!4203 = !DILocation(line: 48, column: 85, scope: !4188)
!4204 = !DILocation(line: 48, column: 62, scope: !4188)
!4205 = !DILocation(line: 48, column: 65, scope: !4188)
!4206 = !DILocation(line: 48, column: 60, scope: !4188)
!4207 = !DILocation(line: 48, column: 14, scope: !4188)
!4208 = !DILocation(line: 48, column: 17, scope: !4188)
!4209 = !DILocation(line: 48, column: 23, scope: !4188)
!4210 = !DILocation(line: 48, column: 5, scope: !4188)
!4211 = !DILocation(line: 48, column: 8, scope: !4188)
!4212 = !DILocation(line: 48, column: 29, scope: !4188)
!4213 = !DILocation(line: 49, column: 21, scope: !4188)
!4214 = !DILocation(line: 49, column: 24, scope: !4188)
!4215 = !DILocation(line: 49, column: 29, scope: !4188)
!4216 = !DILocation(line: 49, column: 32, scope: !4188)
!4217 = !DILocation(line: 49, column: 12, scope: !4188)
!4218 = !DILocation(line: 49, column: 15, scope: !4188)
!4219 = !DILocation(line: 49, column: 5, scope: !4188)
!4220 = distinct !DISubprogram(name: "put_ebml_binary", scope: !1126, file: !1126, line: 275, type: !4221, isLocal: true, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{null, !1332, !1050, !4223, !1053}
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64, align: 64)
!4224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4225 = !DILocalVariable(name: "pb", arg: 1, scope: !4220, file: !1126, line: 275, type: !1332)
!4226 = !DILocation(line: 275, column: 42, scope: !4220)
!4227 = !DILocalVariable(name: "elementid", arg: 2, scope: !4220, file: !1126, line: 275, type: !1050)
!4228 = !DILocation(line: 275, column: 59, scope: !4220)
!4229 = !DILocalVariable(name: "buf", arg: 3, scope: !4220, file: !1126, line: 276, type: !4223)
!4230 = !DILocation(line: 276, column: 41, scope: !4220)
!4231 = !DILocalVariable(name: "size", arg: 4, scope: !4220, file: !1126, line: 276, type: !1053)
!4232 = !DILocation(line: 276, column: 50, scope: !4220)
!4233 = !DILocation(line: 278, column: 17, scope: !4220)
!4234 = !DILocation(line: 278, column: 21, scope: !4220)
!4235 = !DILocation(line: 278, column: 5, scope: !4220)
!4236 = !DILocation(line: 279, column: 18, scope: !4220)
!4237 = !DILocation(line: 279, column: 22, scope: !4220)
!4238 = !DILocation(line: 279, column: 5, scope: !4220)
!4239 = !DILocation(line: 280, column: 16, scope: !4220)
!4240 = !DILocation(line: 280, column: 20, scope: !4220)
!4241 = !DILocation(line: 280, column: 25, scope: !4220)
!4242 = !DILocation(line: 280, column: 5, scope: !4220)
!4243 = !DILocation(line: 281, column: 1, scope: !4220)
!4244 = distinct !DISubprogram(name: "av_bswap64", scope: !3774, file: !3774, line: 73, type: !4245, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!1039, !1039}
!4247 = !DILocalVariable(name: "x", arg: 1, scope: !4248, file: !3774, line: 66, type: !1049)
!4248 = distinct !DISubprogram(name: "av_bswap32", scope: !3774, file: !3774, line: 66, type: !4249, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!1049, !1049}
!4251 = !DILocation(line: 66, column: 98, scope: !4248, inlinedAt: !4252)
!4252 = distinct !DILocation(line: 75, column: 44, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4244, file: !3774, discriminator: 1)
!4254 = !DILocation(line: 66, column: 98, scope: !4248, inlinedAt: !4255)
!4255 = distinct !DILocation(line: 75, column: 22, scope: !4244)
!4256 = !DILocalVariable(name: "x", arg: 1, scope: !4244, file: !3774, line: 73, type: !1039)
!4257 = !DILocation(line: 73, column: 67, scope: !4244)
!4258 = !DILocation(line: 75, column: 33, scope: !4244)
!4259 = !DILocation(line: 75, column: 22, scope: !4244)
!4260 = !DILocation(line: 68, column: 16, scope: !4248, inlinedAt: !4255)
!4261 = !DILocation(line: 68, column: 19, scope: !4248, inlinedAt: !4255)
!4262 = !DILocation(line: 68, column: 24, scope: !4248, inlinedAt: !4255)
!4263 = !DILocation(line: 68, column: 38, scope: !4248, inlinedAt: !4255)
!4264 = !DILocation(line: 68, column: 41, scope: !4248, inlinedAt: !4255)
!4265 = !DILocation(line: 68, column: 46, scope: !4248, inlinedAt: !4255)
!4266 = !DILocation(line: 68, column: 34, scope: !4248, inlinedAt: !4255)
!4267 = !DILocation(line: 68, column: 57, scope: !4248, inlinedAt: !4255)
!4268 = !DILocation(line: 68, column: 69, scope: !4248, inlinedAt: !4255)
!4269 = !DILocation(line: 68, column: 72, scope: !4248, inlinedAt: !4255)
!4270 = !DILocation(line: 68, column: 79, scope: !4248, inlinedAt: !4255)
!4271 = !DILocation(line: 68, column: 84, scope: !4248, inlinedAt: !4255)
!4272 = !DILocation(line: 68, column: 99, scope: !4248, inlinedAt: !4255)
!4273 = !DILocation(line: 68, column: 102, scope: !4248, inlinedAt: !4255)
!4274 = !DILocation(line: 68, column: 109, scope: !4248, inlinedAt: !4255)
!4275 = !DILocation(line: 68, column: 114, scope: !4248, inlinedAt: !4255)
!4276 = !DILocation(line: 68, column: 94, scope: !4248, inlinedAt: !4255)
!4277 = !DILocation(line: 68, column: 63, scope: !4248, inlinedAt: !4255)
!4278 = !DILocation(line: 75, column: 12, scope: !4244)
!4279 = !DILocation(line: 75, column: 36, scope: !4244)
!4280 = !DILocation(line: 75, column: 55, scope: !4244)
!4281 = !DILocation(line: 75, column: 57, scope: !4244)
!4282 = !DILocation(line: 75, column: 44, scope: !4253)
!4283 = !DILocation(line: 68, column: 16, scope: !4248, inlinedAt: !4252)
!4284 = !DILocation(line: 68, column: 19, scope: !4248, inlinedAt: !4252)
!4285 = !DILocation(line: 68, column: 24, scope: !4248, inlinedAt: !4252)
!4286 = !DILocation(line: 68, column: 38, scope: !4248, inlinedAt: !4252)
!4287 = !DILocation(line: 68, column: 41, scope: !4248, inlinedAt: !4252)
!4288 = !DILocation(line: 68, column: 46, scope: !4248, inlinedAt: !4252)
!4289 = !DILocation(line: 68, column: 34, scope: !4248, inlinedAt: !4252)
!4290 = !DILocation(line: 68, column: 57, scope: !4248, inlinedAt: !4252)
!4291 = !DILocation(line: 68, column: 69, scope: !4248, inlinedAt: !4252)
!4292 = !DILocation(line: 68, column: 72, scope: !4248, inlinedAt: !4252)
!4293 = !DILocation(line: 68, column: 79, scope: !4248, inlinedAt: !4252)
!4294 = !DILocation(line: 68, column: 84, scope: !4248, inlinedAt: !4252)
!4295 = !DILocation(line: 68, column: 99, scope: !4248, inlinedAt: !4252)
!4296 = !DILocation(line: 68, column: 102, scope: !4248, inlinedAt: !4252)
!4297 = !DILocation(line: 68, column: 109, scope: !4248, inlinedAt: !4252)
!4298 = !DILocation(line: 68, column: 114, scope: !4248, inlinedAt: !4252)
!4299 = !DILocation(line: 68, column: 94, scope: !4248, inlinedAt: !4252)
!4300 = !DILocation(line: 68, column: 63, scope: !4248, inlinedAt: !4252)
!4301 = !DILocation(line: 75, column: 44, scope: !4244)
!4302 = !DILocation(line: 75, column: 42, scope: !4244)
!4303 = !DILocation(line: 75, column: 5, scope: !4244)
!4304 = distinct !DISubprogram(name: "get_metadata_duration", scope: !1126, file: !1126, line: 1832, type: !4305, isLocal: true, isDefinition: true, scopeLine: 1833, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!1051, !2438}
!4307 = !DILocalVariable(name: "s", arg: 1, scope: !4304, file: !1126, line: 1832, type: !2438)
!4308 = !DILocation(line: 1832, column: 55, scope: !4304)
!4309 = !DILocalVariable(name: "i", scope: !4304, file: !1126, line: 1834, type: !1053)
!4310 = !DILocation(line: 1834, column: 9, scope: !4304)
!4311 = !DILocalVariable(name: "max", scope: !4304, file: !1126, line: 1835, type: !1051)
!4312 = !DILocation(line: 1835, column: 13, scope: !4304)
!4313 = !DILocalVariable(name: "us", scope: !4304, file: !1126, line: 1836, type: !1051)
!4314 = !DILocation(line: 1836, column: 13, scope: !4304)
!4315 = !DILocalVariable(name: "explicitDuration", scope: !4304, file: !1126, line: 1838, type: !2573)
!4316 = !DILocation(line: 1838, column: 24, scope: !4304)
!4317 = !DILocation(line: 1838, column: 55, scope: !4304)
!4318 = !DILocation(line: 1838, column: 58, scope: !4304)
!4319 = !DILocation(line: 1838, column: 43, scope: !4304)
!4320 = !DILocation(line: 1839, column: 9, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4304, file: !1126, line: 1839, column: 9)
!4322 = !DILocation(line: 1839, column: 26, scope: !4321)
!4323 = !DILocation(line: 1839, column: 49, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !4321, file: !1126, discriminator: 1)
!4325 = !DILocation(line: 1839, column: 67, scope: !4324)
!4326 = !DILocation(line: 1839, column: 30, scope: !4324)
!4327 = !DILocation(line: 1839, column: 77, scope: !4324)
!4328 = !DILocation(line: 1839, column: 83, scope: !4324)
!4329 = !DILocation(line: 1839, column: 86, scope: !4330)
!4330 = !DILexicalBlockFile(scope: !4321, file: !1126, discriminator: 2)
!4331 = !DILocation(line: 1839, column: 89, scope: !4330)
!4332 = !DILocation(line: 1839, column: 9, scope: !4330)
!4333 = !DILocation(line: 1840, column: 16, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4321, file: !1126, line: 1839, column: 94)
!4335 = !DILocation(line: 1840, column: 107, scope: !4334)
!4336 = !DILocation(line: 1840, column: 9, scope: !4334)
!4337 = !DILocation(line: 1841, column: 16, scope: !4334)
!4338 = !DILocation(line: 1841, column: 9, scope: !4334)
!4339 = !DILocation(line: 1844, column: 12, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4304, file: !1126, line: 1844, column: 5)
!4341 = !DILocation(line: 1844, column: 10, scope: !4340)
!4342 = !DILocation(line: 1844, column: 17, scope: !4343)
!4343 = !DILexicalBlockFile(scope: !4344, file: !1126, discriminator: 1)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !1126, line: 1844, column: 5)
!4345 = !DILocation(line: 1844, column: 21, scope: !4343)
!4346 = !DILocation(line: 1844, column: 24, scope: !4343)
!4347 = !DILocation(line: 1844, column: 19, scope: !4343)
!4348 = !DILocation(line: 1844, column: 5, scope: !4343)
!4349 = !DILocalVariable(name: "us", scope: !4350, file: !1126, line: 1845, type: !1051)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !1126, line: 1844, column: 41)
!4351 = !DILocation(line: 1845, column: 17, scope: !4350)
!4352 = !DILocalVariable(name: "duration", scope: !4350, file: !1126, line: 1846, type: !2573)
!4353 = !DILocation(line: 1846, column: 28, scope: !4350)
!4354 = !DILocation(line: 1846, column: 62, scope: !4350)
!4355 = !DILocation(line: 1846, column: 51, scope: !4350)
!4356 = !DILocation(line: 1846, column: 54, scope: !4350)
!4357 = !DILocation(line: 1846, column: 66, scope: !4350)
!4358 = !DILocation(line: 1846, column: 39, scope: !4350)
!4359 = !DILocation(line: 1848, column: 13, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4350, file: !1126, line: 1848, column: 13)
!4361 = !DILocation(line: 1848, column: 22, scope: !4360)
!4362 = !DILocation(line: 1848, column: 45, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !4360, file: !1126, discriminator: 1)
!4364 = !DILocation(line: 1848, column: 55, scope: !4363)
!4365 = !DILocation(line: 1848, column: 26, scope: !4363)
!4366 = !DILocation(line: 1848, column: 65, scope: !4363)
!4367 = !DILocation(line: 1848, column: 13, scope: !4363)
!4368 = !DILocation(line: 1849, column: 21, scope: !4360)
!4369 = !DILocation(line: 1849, column: 29, scope: !4360)
!4370 = !DILocation(line: 1849, column: 26, scope: !4360)
!4371 = !DILocation(line: 1849, column: 20, scope: !4360)
!4372 = !DILocation(line: 1849, column: 36, scope: !4363)
!4373 = !DILocation(line: 1849, column: 20, scope: !4363)
!4374 = !DILocation(line: 1849, column: 44, scope: !4375)
!4375 = !DILexicalBlockFile(scope: !4360, file: !1126, discriminator: 2)
!4376 = !DILocation(line: 1849, column: 20, scope: !4375)
!4377 = !DILocation(line: 1849, column: 20, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !4360, file: !1126, discriminator: 3)
!4379 = !DILocation(line: 1849, column: 17, scope: !4378)
!4380 = !DILocation(line: 1849, column: 13, scope: !4378)
!4381 = !DILocation(line: 1850, column: 5, scope: !4350)
!4382 = !DILocation(line: 1844, column: 37, scope: !4383)
!4383 = !DILexicalBlockFile(scope: !4344, file: !1126, discriminator: 2)
!4384 = !DILocation(line: 1844, column: 5, scope: !4383)
!4385 = distinct !{!4385, !4386}
!4386 = !DILocation(line: 1844, column: 5, scope: !4304)
!4387 = !DILocation(line: 1852, column: 12, scope: !4304)
!4388 = !DILocation(line: 1852, column: 77, scope: !4304)
!4389 = !DILocation(line: 1852, column: 5, scope: !4304)
!4390 = !DILocation(line: 1853, column: 12, scope: !4304)
!4391 = !DILocation(line: 1853, column: 5, scope: !4304)
!4392 = !DILocation(line: 1854, column: 1, scope: !4304)
!4393 = distinct !DISubprogram(name: "put_ebml_float", scope: !1126, file: !1126, line: 268, type: !4394, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{null, !1332, !1050, !1092}
!4396 = !DILocalVariable(name: "f", arg: 1, scope: !4397, file: !4398, line: 70, type: !1092)
!4397 = distinct !DISubprogram(name: "av_double2int", scope: !4398, file: !4398, line: 70, type: !4399, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4398 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!1039, !1092}
!4401 = !DILocation(line: 70, column: 76, scope: !4397, inlinedAt: !4402)
!4402 = distinct !DILocation(line: 272, column: 19, scope: !4393)
!4403 = !DILocalVariable(name: "v", scope: !4397, file: !4398, line: 72, type: !4404)
!4404 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat64", file: !4398, line: 32, size: 64, align: 64, elements: !4405)
!4405 = !{!4406, !4407}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4404, file: !4398, line: 33, baseType: !1039, size: 64, align: 64)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4404, file: !4398, line: 34, baseType: !1092, size: 64, align: 64)
!4408 = !DILocation(line: 72, column: 25, scope: !4397, inlinedAt: !4402)
!4409 = !DILocalVariable(name: "pb", arg: 1, scope: !4393, file: !1126, line: 268, type: !1332)
!4410 = !DILocation(line: 268, column: 41, scope: !4393)
!4411 = !DILocalVariable(name: "elementid", arg: 2, scope: !4393, file: !1126, line: 268, type: !1050)
!4412 = !DILocation(line: 268, column: 58, scope: !4393)
!4413 = !DILocalVariable(name: "val", arg: 3, scope: !4393, file: !1126, line: 268, type: !1092)
!4414 = !DILocation(line: 268, column: 76, scope: !4393)
!4415 = !DILocation(line: 270, column: 17, scope: !4393)
!4416 = !DILocation(line: 270, column: 21, scope: !4393)
!4417 = !DILocation(line: 270, column: 5, scope: !4393)
!4418 = !DILocation(line: 271, column: 18, scope: !4393)
!4419 = !DILocation(line: 271, column: 5, scope: !4393)
!4420 = !DILocation(line: 272, column: 15, scope: !4393)
!4421 = !DILocation(line: 272, column: 33, scope: !4393)
!4422 = !DILocation(line: 272, column: 19, scope: !4393)
!4423 = !DILocation(line: 73, column: 11, scope: !4397, inlinedAt: !4402)
!4424 = !DILocation(line: 73, column: 7, scope: !4397, inlinedAt: !4402)
!4425 = !DILocation(line: 73, column: 9, scope: !4397, inlinedAt: !4402)
!4426 = !DILocation(line: 74, column: 14, scope: !4397, inlinedAt: !4402)
!4427 = !DILocation(line: 272, column: 5, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !4393, file: !1126, discriminator: 1)
!4429 = !DILocation(line: 273, column: 1, scope: !4393)
!4430 = distinct !DISubprogram(name: "put_ebml_void", scope: !1126, file: !1126, line: 295, type: !4431, isLocal: true, isDefinition: true, scopeLine: 296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !1332, !1039}
!4433 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4434)
!4434 = distinct !DILocation(line: 309, column: 42, scope: !4430)
!4435 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4436)
!4436 = distinct !DILocation(line: 297, column: 26, scope: !4430)
!4437 = !DILocalVariable(name: "pb", arg: 1, scope: !4430, file: !1126, line: 295, type: !1332)
!4438 = !DILocation(line: 295, column: 40, scope: !4430)
!4439 = !DILocalVariable(name: "size", arg: 2, scope: !4430, file: !1126, line: 295, type: !1039)
!4440 = !DILocation(line: 295, column: 53, scope: !4430)
!4441 = !DILocalVariable(name: "currentpos", scope: !4430, file: !1126, line: 297, type: !1051)
!4442 = !DILocation(line: 297, column: 13, scope: !4430)
!4443 = !DILocation(line: 297, column: 36, scope: !4430)
!4444 = !DILocation(line: 297, column: 26, scope: !4430)
!4445 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4436)
!4446 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4436)
!4447 = !DILocation(line: 299, column: 5, scope: !4430)
!4448 = distinct !{!4448, !4447}
!4449 = !DILocation(line: 299, column: 16, scope: !4450)
!4450 = !DILexicalBlockFile(scope: !4451, file: !1126, discriminator: 1)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !1126, line: 299, column: 14)
!4452 = distinct !DILexicalBlock(scope: !4430, file: !1126, line: 299, column: 8)
!4453 = !DILocation(line: 299, column: 21, scope: !4450)
!4454 = !DILocation(line: 299, column: 14, scope: !4450)
!4455 = !DILocation(line: 299, column: 30, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !4457, file: !1126, discriminator: 2)
!4457 = distinct !DILexicalBlock(scope: !4451, file: !1126, line: 299, column: 28)
!4458 = !DILocation(line: 299, column: 91, scope: !4459)
!4459 = !DILexicalBlockFile(scope: !4456, file: !1126, discriminator: 4)
!4460 = !DILocation(line: 299, column: 91, scope: !4456)
!4461 = !DILocation(line: 299, column: 102, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4452, file: !1126, discriminator: 3)
!4463 = !DILocation(line: 301, column: 17, scope: !4430)
!4464 = !DILocation(line: 301, column: 5, scope: !4430)
!4465 = !DILocation(line: 305, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4430, file: !1126, line: 305, column: 9)
!4467 = !DILocation(line: 305, column: 14, scope: !4466)
!4468 = !DILocation(line: 305, column: 9, scope: !4430)
!4469 = !DILocation(line: 306, column: 22, scope: !4466)
!4470 = !DILocation(line: 306, column: 26, scope: !4466)
!4471 = !DILocation(line: 306, column: 31, scope: !4466)
!4472 = !DILocation(line: 306, column: 9, scope: !4466)
!4473 = !DILocation(line: 308, column: 22, scope: !4466)
!4474 = !DILocation(line: 308, column: 26, scope: !4466)
!4475 = !DILocation(line: 308, column: 31, scope: !4466)
!4476 = !DILocation(line: 308, column: 9, scope: !4466)
!4477 = !DILocation(line: 309, column: 15, scope: !4430)
!4478 = !DILocation(line: 309, column: 22, scope: !4430)
!4479 = !DILocation(line: 309, column: 35, scope: !4430)
!4480 = !DILocation(line: 309, column: 33, scope: !4430)
!4481 = !DILocation(line: 309, column: 52, scope: !4430)
!4482 = !DILocation(line: 309, column: 42, scope: !4430)
!4483 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4434)
!4484 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4434)
!4485 = !DILocation(line: 309, column: 40, scope: !4430)
!4486 = !DILocation(line: 309, column: 5, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4430, file: !1126, discriminator: 1)
!4488 = !DILocation(line: 310, column: 1, scope: !4430)
!4489 = distinct !DISubprogram(name: "end_ebml_master_crc32_preliminary", scope: !1126, file: !1126, line: 376, type: !4490, isLocal: true, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{null, !1332, !2359, !2459, !2468}
!4492 = !DILocalVariable(name: "pb", arg: 1, scope: !4489, file: !1126, line: 376, type: !1332)
!4493 = !DILocation(line: 376, column: 60, scope: !4489)
!4494 = !DILocalVariable(name: "dyn_cp", arg: 2, scope: !4489, file: !1126, line: 376, type: !2359)
!4495 = !DILocation(line: 376, column: 78, scope: !4489)
!4496 = !DILocalVariable(name: "mkv", arg: 3, scope: !4489, file: !1126, line: 376, type: !2459)
!4497 = !DILocation(line: 376, column: 106, scope: !4489)
!4498 = !DILocalVariable(name: "master", arg: 4, scope: !4489, file: !1126, line: 377, type: !2468)
!4499 = !DILocation(line: 377, column: 17, scope: !4489)
!4500 = !DILocation(line: 379, column: 9, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4489, file: !1126, line: 379, column: 9)
!4502 = !DILocation(line: 379, column: 13, scope: !4501)
!4503 = !DILocation(line: 379, column: 22, scope: !4501)
!4504 = !DILocation(line: 379, column: 9, scope: !4489)
!4505 = !DILocalVariable(name: "buf", scope: !4506, file: !1126, line: 381, type: !1110)
!4506 = distinct !DILexicalBlock(scope: !4501, file: !1126, line: 379, column: 34)
!4507 = !DILocation(line: 381, column: 18, scope: !4506)
!4508 = !DILocalVariable(name: "size", scope: !4506, file: !1126, line: 382, type: !1053)
!4509 = !DILocation(line: 382, column: 13, scope: !4506)
!4510 = !DILocation(line: 382, column: 38, scope: !4506)
!4511 = !DILocation(line: 382, column: 37, scope: !4506)
!4512 = !DILocation(line: 382, column: 20, scope: !4506)
!4513 = !DILocation(line: 384, column: 20, scope: !4506)
!4514 = !DILocation(line: 384, column: 24, scope: !4506)
!4515 = !DILocation(line: 384, column: 29, scope: !4506)
!4516 = !DILocation(line: 384, column: 9, scope: !4506)
!4517 = !DILocation(line: 385, column: 25, scope: !4506)
!4518 = !DILocation(line: 385, column: 9, scope: !4506)
!4519 = !DILocation(line: 386, column: 5, scope: !4506)
!4520 = !DILocation(line: 387, column: 1, scope: !4489)
!4521 = distinct !DISubprogram(name: "end_ebml_master_crc32", scope: !1126, file: !1126, line: 349, type: !4490, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4522 = !DILocalVariable(name: "pb", arg: 1, scope: !4521, file: !1126, line: 349, type: !1332)
!4523 = !DILocation(line: 349, column: 48, scope: !4521)
!4524 = !DILocalVariable(name: "dyn_cp", arg: 2, scope: !4521, file: !1126, line: 349, type: !2359)
!4525 = !DILocation(line: 349, column: 66, scope: !4521)
!4526 = !DILocalVariable(name: "mkv", arg: 3, scope: !4521, file: !1126, line: 349, type: !2459)
!4527 = !DILocation(line: 349, column: 94, scope: !4521)
!4528 = !DILocalVariable(name: "master", arg: 4, scope: !4521, file: !1126, line: 350, type: !2468)
!4529 = !DILocation(line: 350, column: 47, scope: !4521)
!4530 = !DILocalVariable(name: "buf", scope: !4521, file: !1126, line: 352, type: !1110)
!4531 = !DILocation(line: 352, column: 14, scope: !4521)
!4532 = !DILocalVariable(name: "crc", scope: !4521, file: !1126, line: 352, type: !4533)
!4533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 32, align: 8, elements: !1510)
!4534 = !DILocation(line: 352, column: 19, scope: !4521)
!4535 = !DILocalVariable(name: "size", scope: !4521, file: !1126, line: 353, type: !1053)
!4536 = !DILocation(line: 353, column: 9, scope: !4521)
!4537 = !DILocalVariable(name: "skip", scope: !4521, file: !1126, line: 353, type: !1053)
!4538 = !DILocation(line: 353, column: 15, scope: !4521)
!4539 = !DILocation(line: 355, column: 9, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4521, file: !1126, line: 355, column: 9)
!4541 = !DILocation(line: 355, column: 13, scope: !4540)
!4542 = !DILocation(line: 355, column: 22, scope: !4540)
!4543 = !DILocation(line: 355, column: 9, scope: !4521)
!4544 = !DILocation(line: 356, column: 36, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4540, file: !1126, line: 355, column: 34)
!4546 = !DILocation(line: 356, column: 35, scope: !4545)
!4547 = !DILocation(line: 356, column: 16, scope: !4545)
!4548 = !DILocation(line: 356, column: 14, scope: !4545)
!4549 = !DILocation(line: 357, column: 13, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4545, file: !1126, line: 357, column: 13)
!4551 = !DILocation(line: 357, column: 18, scope: !4550)
!4552 = !DILocation(line: 357, column: 28, scope: !4550)
!4553 = !DILocation(line: 357, column: 31, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !4550, file: !1126, discriminator: 1)
!4555 = !DILocation(line: 357, column: 36, scope: !4554)
!4556 = !DILocation(line: 357, column: 41, scope: !4554)
!4557 = !DILocation(line: 357, column: 13, scope: !4554)
!4558 = !DILocation(line: 358, column: 18, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4550, file: !1126, line: 357, column: 50)
!4560 = !DILocation(line: 359, column: 60, scope: !4559)
!4561 = !DILocation(line: 359, column: 14, scope: !4559)
!4562 = !DILocation(line: 359, column: 20, scope: !4559)
!4563 = !DILocation(line: 359, column: 18, scope: !4559)
!4564 = !DILocation(line: 359, column: 26, scope: !4559)
!4565 = !DILocation(line: 359, column: 33, scope: !4559)
!4566 = !DILocation(line: 359, column: 31, scope: !4559)
!4567 = !DILocation(line: 359, column: 53, scope: !4568)
!4568 = !DILexicalBlockFile(scope: !4559, file: !1126, discriminator: 1)
!4569 = !DILocation(line: 359, column: 39, scope: !4559)
!4570 = !DILocation(line: 359, column: 47, scope: !4559)
!4571 = !DILocation(line: 359, column: 50, scope: !4559)
!4572 = !DILocation(line: 360, column: 29, scope: !4559)
!4573 = !DILocation(line: 360, column: 39, scope: !4559)
!4574 = !DILocation(line: 360, column: 13, scope: !4559)
!4575 = !DILocation(line: 361, column: 9, scope: !4559)
!4576 = !DILocation(line: 362, column: 20, scope: !4545)
!4577 = !DILocation(line: 362, column: 24, scope: !4545)
!4578 = !DILocation(line: 362, column: 30, scope: !4545)
!4579 = !DILocation(line: 362, column: 28, scope: !4545)
!4580 = !DILocation(line: 362, column: 36, scope: !4545)
!4581 = !DILocation(line: 362, column: 43, scope: !4545)
!4582 = !DILocation(line: 362, column: 41, scope: !4545)
!4583 = !DILocation(line: 362, column: 9, scope: !4545)
!4584 = !DILocation(line: 363, column: 25, scope: !4545)
!4585 = !DILocation(line: 363, column: 9, scope: !4545)
!4586 = !DILocation(line: 364, column: 5, scope: !4545)
!4587 = !DILocation(line: 365, column: 26, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4540, file: !1126, line: 364, column: 12)
!4589 = !DILocation(line: 365, column: 25, scope: !4588)
!4590 = !DILocation(line: 365, column: 9, scope: !4588)
!4591 = !DILocation(line: 366, column: 36, scope: !4588)
!4592 = !DILocation(line: 366, column: 35, scope: !4588)
!4593 = !DILocation(line: 366, column: 16, scope: !4588)
!4594 = !DILocation(line: 366, column: 14, scope: !4588)
!4595 = !DILocation(line: 367, column: 20, scope: !4588)
!4596 = !DILocation(line: 367, column: 24, scope: !4588)
!4597 = !DILocation(line: 367, column: 29, scope: !4588)
!4598 = !DILocation(line: 367, column: 9, scope: !4588)
!4599 = !DILocation(line: 369, column: 13, scope: !4521)
!4600 = !DILocation(line: 369, column: 5, scope: !4521)
!4601 = !DILocation(line: 370, column: 6, scope: !4521)
!4602 = !DILocation(line: 370, column: 13, scope: !4521)
!4603 = !DILocation(line: 371, column: 1, scope: !4521)
!4604 = distinct !DISubprogram(name: "mkv_write_tracks", scope: !1126, file: !1126, line: 1450, type: !2436, isLocal: true, isDefinition: true, scopeLine: 1451, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4605 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4606)
!4606 = distinct !DILocation(line: 1456, column: 66, scope: !4604)
!4607 = !DILocalVariable(name: "s", arg: 1, scope: !4604, file: !1126, line: 1450, type: !2438)
!4608 = !DILocation(line: 1450, column: 46, scope: !4604)
!4609 = !DILocalVariable(name: "mkv", scope: !4604, file: !1126, line: 1452, type: !2459)
!4610 = !DILocation(line: 1452, column: 25, scope: !4604)
!4611 = !DILocation(line: 1452, column: 31, scope: !4604)
!4612 = !DILocation(line: 1452, column: 34, scope: !4604)
!4613 = !DILocalVariable(name: "pb", scope: !4604, file: !1126, line: 1453, type: !1332)
!4614 = !DILocation(line: 1453, column: 18, scope: !4604)
!4615 = !DILocation(line: 1453, column: 23, scope: !4604)
!4616 = !DILocation(line: 1453, column: 26, scope: !4604)
!4617 = !DILocalVariable(name: "i", scope: !4604, file: !1126, line: 1454, type: !1053)
!4618 = !DILocation(line: 1454, column: 9, scope: !4604)
!4619 = !DILocalVariable(name: "ret", scope: !4604, file: !1126, line: 1454, type: !1053)
!4620 = !DILocation(line: 1454, column: 12, scope: !4604)
!4621 = !DILocalVariable(name: "default_stream_exists", scope: !4604, file: !1126, line: 1454, type: !1053)
!4622 = !DILocation(line: 1454, column: 17, scope: !4604)
!4623 = !DILocation(line: 1456, column: 34, scope: !4604)
!4624 = !DILocation(line: 1456, column: 39, scope: !4604)
!4625 = !DILocation(line: 1456, column: 76, scope: !4604)
!4626 = !DILocation(line: 1456, column: 66, scope: !4604)
!4627 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4606)
!4628 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4606)
!4629 = !DILocation(line: 1456, column: 11, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4604, file: !1126, discriminator: 1)
!4631 = !DILocation(line: 1456, column: 9, scope: !4604)
!4632 = !DILocation(line: 1457, column: 9, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4604, file: !1126, line: 1457, column: 9)
!4634 = !DILocation(line: 1457, column: 13, scope: !4633)
!4635 = !DILocation(line: 1457, column: 9, scope: !4604)
!4636 = !DILocation(line: 1458, column: 16, scope: !4633)
!4637 = !DILocation(line: 1458, column: 9, scope: !4633)
!4638 = !DILocation(line: 1460, column: 35, scope: !4604)
!4639 = !DILocation(line: 1460, column: 40, scope: !4604)
!4640 = !DILocation(line: 1460, column: 45, scope: !4604)
!4641 = !DILocation(line: 1460, column: 56, scope: !4604)
!4642 = !DILocation(line: 1460, column: 62, scope: !4604)
!4643 = !DILocation(line: 1460, column: 67, scope: !4604)
!4644 = !DILocation(line: 1460, column: 11, scope: !4604)
!4645 = !DILocation(line: 1460, column: 9, scope: !4604)
!4646 = !DILocation(line: 1461, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4604, file: !1126, line: 1461, column: 9)
!4648 = !DILocation(line: 1461, column: 13, scope: !4647)
!4649 = !DILocation(line: 1461, column: 9, scope: !4604)
!4650 = !DILocation(line: 1462, column: 16, scope: !4647)
!4651 = !DILocation(line: 1462, column: 9, scope: !4647)
!4652 = !DILocation(line: 1464, column: 12, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4604, file: !1126, line: 1464, column: 5)
!4654 = !DILocation(line: 1464, column: 10, scope: !4653)
!4655 = !DILocation(line: 1464, column: 17, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4657, file: !1126, discriminator: 1)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !1126, line: 1464, column: 5)
!4658 = !DILocation(line: 1464, column: 21, scope: !4656)
!4659 = !DILocation(line: 1464, column: 24, scope: !4656)
!4660 = !DILocation(line: 1464, column: 19, scope: !4656)
!4661 = !DILocation(line: 1464, column: 5, scope: !4656)
!4662 = !DILocalVariable(name: "st", scope: !4663, file: !1126, line: 1465, type: !1398)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !1126, line: 1464, column: 41)
!4664 = !DILocation(line: 1465, column: 19, scope: !4663)
!4665 = !DILocation(line: 1465, column: 35, scope: !4663)
!4666 = !DILocation(line: 1465, column: 24, scope: !4663)
!4667 = !DILocation(line: 1465, column: 27, scope: !4663)
!4668 = !DILocation(line: 1466, column: 34, scope: !4663)
!4669 = !DILocation(line: 1466, column: 38, scope: !4663)
!4670 = !DILocation(line: 1466, column: 50, scope: !4663)
!4671 = !DILocation(line: 1466, column: 31, scope: !4663)
!4672 = !DILocation(line: 1467, column: 5, scope: !4663)
!4673 = !DILocation(line: 1464, column: 37, scope: !4674)
!4674 = !DILexicalBlockFile(scope: !4657, file: !1126, discriminator: 2)
!4675 = !DILocation(line: 1464, column: 5, scope: !4674)
!4676 = distinct !{!4676, !4677}
!4677 = !DILocation(line: 1464, column: 5, scope: !4604)
!4678 = !DILocation(line: 1468, column: 12, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4604, file: !1126, line: 1468, column: 5)
!4680 = !DILocation(line: 1468, column: 10, scope: !4679)
!4681 = !DILocation(line: 1468, column: 17, scope: !4682)
!4682 = !DILexicalBlockFile(scope: !4683, file: !1126, discriminator: 1)
!4683 = distinct !DILexicalBlock(scope: !4679, file: !1126, line: 1468, column: 5)
!4684 = !DILocation(line: 1468, column: 21, scope: !4682)
!4685 = !DILocation(line: 1468, column: 24, scope: !4682)
!4686 = !DILocation(line: 1468, column: 19, scope: !4682)
!4687 = !DILocation(line: 1468, column: 5, scope: !4682)
!4688 = !DILocation(line: 1469, column: 31, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4683, file: !1126, line: 1468, column: 41)
!4690 = !DILocation(line: 1469, column: 34, scope: !4689)
!4691 = !DILocation(line: 1469, column: 39, scope: !4689)
!4692 = !DILocation(line: 1469, column: 42, scope: !4689)
!4693 = !DILocation(line: 1469, column: 47, scope: !4689)
!4694 = !DILocation(line: 1469, column: 58, scope: !4689)
!4695 = !DILocation(line: 1469, column: 15, scope: !4689)
!4696 = !DILocation(line: 1469, column: 13, scope: !4689)
!4697 = !DILocation(line: 1470, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4689, file: !1126, line: 1470, column: 13)
!4699 = !DILocation(line: 1470, column: 17, scope: !4698)
!4700 = !DILocation(line: 1470, column: 13, scope: !4689)
!4701 = !DILocation(line: 1471, column: 20, scope: !4698)
!4702 = !DILocation(line: 1471, column: 13, scope: !4698)
!4703 = !DILocation(line: 1472, column: 5, scope: !4689)
!4704 = !DILocation(line: 1468, column: 37, scope: !4705)
!4705 = !DILexicalBlockFile(scope: !4683, file: !1126, discriminator: 2)
!4706 = !DILocation(line: 1468, column: 5, scope: !4705)
!4707 = distinct !{!4707, !4708}
!4708 = !DILocation(line: 1468, column: 5, scope: !4604)
!4709 = !DILocation(line: 1474, column: 10, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4604, file: !1126, line: 1474, column: 9)
!4711 = !DILocation(line: 1474, column: 14, scope: !4710)
!4712 = !DILocation(line: 1474, column: 23, scope: !4710)
!4713 = !DILocation(line: 1474, column: 35, scope: !4710)
!4714 = !DILocation(line: 1474, column: 39, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4710, file: !1126, discriminator: 1)
!4716 = !DILocation(line: 1474, column: 44, scope: !4715)
!4717 = !DILocation(line: 1474, column: 9, scope: !4715)
!4718 = !DILocation(line: 1475, column: 43, scope: !4710)
!4719 = !DILocation(line: 1475, column: 48, scope: !4710)
!4720 = !DILocation(line: 1475, column: 53, scope: !4710)
!4721 = !DILocation(line: 1475, column: 64, scope: !4710)
!4722 = !DILocation(line: 1475, column: 69, scope: !4710)
!4723 = !DILocation(line: 1475, column: 74, scope: !4710)
!4724 = !DILocation(line: 1475, column: 9, scope: !4710)
!4725 = !DILocation(line: 1477, column: 31, scope: !4710)
!4726 = !DILocation(line: 1477, column: 36, scope: !4710)
!4727 = !DILocation(line: 1477, column: 41, scope: !4710)
!4728 = !DILocation(line: 1477, column: 52, scope: !4710)
!4729 = !DILocation(line: 1477, column: 57, scope: !4710)
!4730 = !DILocation(line: 1477, column: 62, scope: !4710)
!4731 = !DILocation(line: 1477, column: 9, scope: !4710)
!4732 = !DILocation(line: 1479, column: 5, scope: !4604)
!4733 = !DILocation(line: 1480, column: 1, scope: !4604)
!4734 = distinct !DISubprogram(name: "mkv_write_chapters", scope: !1126, file: !1126, line: 1482, type: !2436, isLocal: true, isDefinition: true, scopeLine: 1483, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4735 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4736)
!4736 = distinct !DILocation(line: 1493, column: 66, scope: !4734)
!4737 = !DILocalVariable(name: "s", arg: 1, scope: !4734, file: !1126, line: 1482, type: !2438)
!4738 = !DILocation(line: 1482, column: 48, scope: !4734)
!4739 = !DILocalVariable(name: "mkv", scope: !4734, file: !1126, line: 1484, type: !2459)
!4740 = !DILocation(line: 1484, column: 25, scope: !4734)
!4741 = !DILocation(line: 1484, column: 31, scope: !4734)
!4742 = !DILocation(line: 1484, column: 34, scope: !4734)
!4743 = !DILocalVariable(name: "dyn_cp", scope: !4734, file: !1126, line: 1485, type: !1332)
!4744 = !DILocation(line: 1485, column: 18, scope: !4734)
!4745 = !DILocalVariable(name: "pb", scope: !4734, file: !1126, line: 1485, type: !1332)
!4746 = !DILocation(line: 1485, column: 27, scope: !4734)
!4747 = !DILocation(line: 1485, column: 32, scope: !4734)
!4748 = !DILocation(line: 1485, column: 35, scope: !4734)
!4749 = !DILocalVariable(name: "chapters", scope: !4734, file: !1126, line: 1486, type: !2468)
!4750 = !DILocation(line: 1486, column: 17, scope: !4734)
!4751 = !DILocalVariable(name: "editionentry", scope: !4734, file: !1126, line: 1486, type: !2468)
!4752 = !DILocation(line: 1486, column: 27, scope: !4734)
!4753 = !DILocalVariable(name: "scale", scope: !4734, file: !1126, line: 1487, type: !1076)
!4754 = !DILocation(line: 1487, column: 16, scope: !4734)
!4755 = !DILocalVariable(name: "i", scope: !4734, file: !1126, line: 1488, type: !1053)
!4756 = !DILocation(line: 1488, column: 9, scope: !4734)
!4757 = !DILocalVariable(name: "ret", scope: !4734, file: !1126, line: 1488, type: !1053)
!4758 = !DILocation(line: 1488, column: 12, scope: !4734)
!4759 = !DILocation(line: 1490, column: 10, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4734, file: !1126, line: 1490, column: 9)
!4761 = !DILocation(line: 1490, column: 13, scope: !4760)
!4762 = !DILocation(line: 1490, column: 25, scope: !4760)
!4763 = !DILocation(line: 1490, column: 28, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4760, file: !1126, discriminator: 1)
!4765 = !DILocation(line: 1490, column: 33, scope: !4764)
!4766 = !DILocation(line: 1490, column: 9, scope: !4764)
!4767 = !DILocation(line: 1491, column: 9, scope: !4760)
!4768 = !DILocation(line: 1493, column: 34, scope: !4734)
!4769 = !DILocation(line: 1493, column: 39, scope: !4734)
!4770 = !DILocation(line: 1493, column: 76, scope: !4734)
!4771 = !DILocation(line: 1493, column: 66, scope: !4734)
!4772 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4736)
!4773 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4736)
!4774 = !DILocation(line: 1493, column: 11, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4734, file: !1126, discriminator: 1)
!4776 = !DILocation(line: 1493, column: 9, scope: !4734)
!4777 = !DILocation(line: 1494, column: 9, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4734, file: !1126, line: 1494, column: 9)
!4779 = !DILocation(line: 1494, column: 13, scope: !4778)
!4780 = !DILocation(line: 1494, column: 9, scope: !4734)
!4781 = !DILocation(line: 1494, column: 25, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4778, file: !1126, discriminator: 1)
!4783 = !DILocation(line: 1494, column: 18, scope: !4782)
!4784 = !DILocation(line: 1496, column: 35, scope: !4734)
!4785 = !DILocation(line: 1496, column: 48, scope: !4734)
!4786 = !DILocation(line: 1496, column: 11, scope: !4734)
!4787 = !DILocation(line: 1496, column: 9, scope: !4734)
!4788 = !DILocation(line: 1497, column: 9, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4734, file: !1126, line: 1497, column: 9)
!4790 = !DILocation(line: 1497, column: 13, scope: !4789)
!4791 = !DILocation(line: 1497, column: 9, scope: !4734)
!4792 = !DILocation(line: 1497, column: 25, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4789, file: !1126, discriminator: 1)
!4794 = !DILocation(line: 1497, column: 18, scope: !4793)
!4795 = !DILocation(line: 1499, column: 38, scope: !4734)
!4796 = !DILocation(line: 1499, column: 20, scope: !4734)
!4797 = !DILocation(line: 1499, column: 20, scope: !4775)
!4798 = !DILocation(line: 1500, column: 9, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4734, file: !1126, line: 1500, column: 9)
!4800 = !DILocation(line: 1500, column: 14, scope: !4799)
!4801 = !DILocation(line: 1500, column: 19, scope: !4799)
!4802 = !DILocation(line: 1500, column: 9, scope: !4734)
!4803 = !DILocation(line: 1501, column: 23, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4799, file: !1126, line: 1500, column: 28)
!4805 = !DILocation(line: 1501, column: 9, scope: !4804)
!4806 = !DILocation(line: 1502, column: 23, scope: !4804)
!4807 = !DILocation(line: 1502, column: 9, scope: !4804)
!4808 = !DILocation(line: 1503, column: 5, scope: !4804)
!4809 = !DILocation(line: 1504, column: 12, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4734, file: !1126, line: 1504, column: 5)
!4811 = !DILocation(line: 1504, column: 10, scope: !4810)
!4812 = !DILocation(line: 1504, column: 17, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !4814, file: !1126, discriminator: 1)
!4814 = distinct !DILexicalBlock(scope: !4810, file: !1126, line: 1504, column: 5)
!4815 = !DILocation(line: 1504, column: 21, scope: !4813)
!4816 = !DILocation(line: 1504, column: 24, scope: !4813)
!4817 = !DILocation(line: 1504, column: 19, scope: !4813)
!4818 = !DILocation(line: 1504, column: 5, scope: !4813)
!4819 = !DILocalVariable(name: "chapteratom", scope: !4820, file: !1126, line: 1505, type: !2468)
!4820 = distinct !DILexicalBlock(scope: !4814, file: !1126, line: 1504, column: 42)
!4821 = !DILocation(line: 1505, column: 21, scope: !4820)
!4822 = !DILocalVariable(name: "chapterdisplay", scope: !4820, file: !1126, line: 1505, type: !2468)
!4823 = !DILocation(line: 1505, column: 34, scope: !4820)
!4824 = !DILocalVariable(name: "c", scope: !4820, file: !1126, line: 1506, type: !2274)
!4825 = !DILocation(line: 1506, column: 20, scope: !4820)
!4826 = !DILocation(line: 1506, column: 36, scope: !4820)
!4827 = !DILocation(line: 1506, column: 24, scope: !4820)
!4828 = !DILocation(line: 1506, column: 27, scope: !4820)
!4829 = !DILocalVariable(name: "chapterstart", scope: !4820, file: !1126, line: 1507, type: !1051)
!4830 = !DILocation(line: 1507, column: 17, scope: !4820)
!4831 = !DILocation(line: 1507, column: 45, scope: !4820)
!4832 = !DILocation(line: 1507, column: 48, scope: !4820)
!4833 = !DILocation(line: 1507, column: 55, scope: !4820)
!4834 = !DILocation(line: 1507, column: 58, scope: !4820)
!4835 = !DILocation(line: 1507, column: 32, scope: !4820)
!4836 = !DILocalVariable(name: "chapterend", scope: !4820, file: !1126, line: 1508, type: !1051)
!4837 = !DILocation(line: 1508, column: 17, scope: !4820)
!4838 = !DILocation(line: 1508, column: 43, scope: !4820)
!4839 = !DILocation(line: 1508, column: 46, scope: !4820)
!4840 = !DILocation(line: 1508, column: 51, scope: !4820)
!4841 = !DILocation(line: 1508, column: 54, scope: !4820)
!4842 = !DILocation(line: 1508, column: 30, scope: !4820)
!4843 = !DILocalVariable(name: "t", scope: !4820, file: !1126, line: 1509, type: !2573)
!4844 = !DILocation(line: 1509, column: 28, scope: !4820)
!4845 = !DILocation(line: 1510, column: 13, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4820, file: !1126, line: 1510, column: 13)
!4847 = !DILocation(line: 1510, column: 26, scope: !4846)
!4848 = !DILocation(line: 1510, column: 30, scope: !4846)
!4849 = !DILocation(line: 1510, column: 33, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4846, file: !1126, discriminator: 1)
!4851 = !DILocation(line: 1510, column: 48, scope: !4850)
!4852 = !DILocation(line: 1510, column: 46, scope: !4850)
!4853 = !DILocation(line: 1510, column: 59, scope: !4850)
!4854 = !DILocation(line: 1510, column: 62, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4846, file: !1126, discriminator: 2)
!4856 = !DILocation(line: 1510, column: 73, scope: !4855)
!4857 = !DILocation(line: 1510, column: 13, scope: !4855)
!4858 = !DILocation(line: 1511, column: 20, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4846, file: !1126, line: 1510, column: 78)
!4860 = !DILocation(line: 1513, column: 20, scope: !4859)
!4861 = !DILocation(line: 1513, column: 34, scope: !4859)
!4862 = !DILocation(line: 1511, column: 13, scope: !4859)
!4863 = !DILocation(line: 1514, column: 13, scope: !4859)
!4864 = !DILocation(line: 1517, column: 41, scope: !4820)
!4865 = !DILocation(line: 1517, column: 23, scope: !4820)
!4866 = !DILocation(line: 1517, column: 23, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !4820, file: !1126, discriminator: 1)
!4868 = !DILocation(line: 1518, column: 23, scope: !4820)
!4869 = !DILocation(line: 1518, column: 39, scope: !4820)
!4870 = !DILocation(line: 1518, column: 42, scope: !4820)
!4871 = !DILocation(line: 1518, column: 47, scope: !4820)
!4872 = !DILocation(line: 1518, column: 52, scope: !4820)
!4873 = !DILocation(line: 1518, column: 45, scope: !4820)
!4874 = !DILocation(line: 1518, column: 9, scope: !4820)
!4875 = !DILocation(line: 1519, column: 23, scope: !4820)
!4876 = !DILocation(line: 1519, column: 37, scope: !4820)
!4877 = !DILocation(line: 1519, column: 9, scope: !4820)
!4878 = !DILocation(line: 1520, column: 23, scope: !4820)
!4879 = !DILocation(line: 1520, column: 37, scope: !4820)
!4880 = !DILocation(line: 1520, column: 9, scope: !4820)
!4881 = !DILocation(line: 1521, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4820, file: !1126, line: 1521, column: 13)
!4883 = !DILocation(line: 1521, column: 18, scope: !4882)
!4884 = !DILocation(line: 1521, column: 23, scope: !4882)
!4885 = !DILocation(line: 1521, column: 13, scope: !4820)
!4886 = !DILocation(line: 1522, column: 27, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4882, file: !1126, line: 1521, column: 32)
!4888 = !DILocation(line: 1522, column: 13, scope: !4887)
!4889 = !DILocation(line: 1523, column: 27, scope: !4887)
!4890 = !DILocation(line: 1523, column: 13, scope: !4887)
!4891 = !DILocation(line: 1524, column: 9, scope: !4887)
!4892 = !DILocation(line: 1525, column: 30, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4820, file: !1126, line: 1525, column: 13)
!4894 = !DILocation(line: 1525, column: 33, scope: !4893)
!4895 = !DILocation(line: 1525, column: 18, scope: !4893)
!4896 = !DILocation(line: 1525, column: 16, scope: !4893)
!4897 = !DILocation(line: 1525, column: 13, scope: !4820)
!4898 = !DILocation(line: 1526, column: 48, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4893, file: !1126, line: 1525, column: 62)
!4900 = !DILocation(line: 1526, column: 30, scope: !4899)
!4901 = !DILocation(line: 1526, column: 30, scope: !4902)
!4902 = !DILexicalBlockFile(scope: !4899, file: !1126, discriminator: 1)
!4903 = !DILocation(line: 1527, column: 29, scope: !4899)
!4904 = !DILocation(line: 1527, column: 43, scope: !4899)
!4905 = !DILocation(line: 1527, column: 46, scope: !4899)
!4906 = !DILocation(line: 1527, column: 13, scope: !4899)
!4907 = !DILocation(line: 1528, column: 29, scope: !4899)
!4908 = !DILocation(line: 1528, column: 13, scope: !4899)
!4909 = !DILocation(line: 1529, column: 29, scope: !4899)
!4910 = !DILocation(line: 1529, column: 13, scope: !4899)
!4911 = !DILocation(line: 1530, column: 9, scope: !4899)
!4912 = !DILocation(line: 1531, column: 25, scope: !4820)
!4913 = !DILocation(line: 1531, column: 9, scope: !4820)
!4914 = !DILocation(line: 1532, column: 5, scope: !4820)
!4915 = !DILocation(line: 1504, column: 38, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4814, file: !1126, discriminator: 2)
!4917 = !DILocation(line: 1504, column: 5, scope: !4916)
!4918 = distinct !{!4918, !4919}
!4919 = !DILocation(line: 1504, column: 5, scope: !4734)
!4920 = !DILocation(line: 1533, column: 21, scope: !4734)
!4921 = !DILocation(line: 1533, column: 5, scope: !4734)
!4922 = !DILocation(line: 1534, column: 27, scope: !4734)
!4923 = !DILocation(line: 1534, column: 40, scope: !4734)
!4924 = !DILocation(line: 1534, column: 5, scope: !4734)
!4925 = !DILocation(line: 1536, column: 5, scope: !4734)
!4926 = !DILocation(line: 1536, column: 10, scope: !4734)
!4927 = !DILocation(line: 1536, column: 25, scope: !4734)
!4928 = !DILocation(line: 1537, column: 5, scope: !4734)
!4929 = !DILocation(line: 1538, column: 1, scope: !4734)
!4930 = distinct !DISubprogram(name: "mkv_write_attachments", scope: !1126, file: !1126, line: 1734, type: !2436, isLocal: true, isDefinition: true, scopeLine: 1735, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!4931 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !4932)
!4932 = distinct !DILocation(line: 1751, column: 66, scope: !4930)
!4933 = !DILocalVariable(name: "s", arg: 1, scope: !4930, file: !1126, line: 1734, type: !2438)
!4934 = !DILocation(line: 1734, column: 51, scope: !4930)
!4935 = !DILocalVariable(name: "mkv", scope: !4930, file: !1126, line: 1736, type: !2459)
!4936 = !DILocation(line: 1736, column: 25, scope: !4930)
!4937 = !DILocation(line: 1736, column: 31, scope: !4930)
!4938 = !DILocation(line: 1736, column: 34, scope: !4930)
!4939 = !DILocalVariable(name: "dyn_cp", scope: !4930, file: !1126, line: 1737, type: !1332)
!4940 = !DILocation(line: 1737, column: 18, scope: !4930)
!4941 = !DILocalVariable(name: "pb", scope: !4930, file: !1126, line: 1737, type: !1332)
!4942 = !DILocation(line: 1737, column: 27, scope: !4930)
!4943 = !DILocation(line: 1737, column: 32, scope: !4930)
!4944 = !DILocation(line: 1737, column: 35, scope: !4930)
!4945 = !DILocalVariable(name: "attachments", scope: !4930, file: !1126, line: 1738, type: !2468)
!4946 = !DILocation(line: 1738, column: 17, scope: !4930)
!4947 = !DILocalVariable(name: "c", scope: !4930, file: !1126, line: 1739, type: !2791)
!4948 = !DILocation(line: 1739, column: 11, scope: !4930)
!4949 = !DILocalVariable(name: "i", scope: !4930, file: !1126, line: 1740, type: !1053)
!4950 = !DILocation(line: 1740, column: 9, scope: !4930)
!4951 = !DILocalVariable(name: "ret", scope: !4930, file: !1126, line: 1740, type: !1053)
!4952 = !DILocation(line: 1740, column: 12, scope: !4930)
!4953 = !DILocation(line: 1742, column: 10, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4930, file: !1126, line: 1742, column: 9)
!4955 = !DILocation(line: 1742, column: 15, scope: !4954)
!4956 = !DILocation(line: 1742, column: 9, scope: !4930)
!4957 = !DILocation(line: 1743, column: 9, scope: !4954)
!4958 = !DILocation(line: 1745, column: 24, scope: !4930)
!4959 = !DILocation(line: 1745, column: 5, scope: !4930)
!4960 = !DILocation(line: 1745, column: 10, scope: !4930)
!4961 = !DILocation(line: 1745, column: 22, scope: !4930)
!4962 = !DILocation(line: 1746, column: 10, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4930, file: !1126, line: 1746, column: 9)
!4964 = !DILocation(line: 1746, column: 15, scope: !4963)
!4965 = !DILocation(line: 1746, column: 9, scope: !4930)
!4966 = !DILocation(line: 1747, column: 9, scope: !4963)
!4967 = !DILocation(line: 1749, column: 21, scope: !4930)
!4968 = !DILocation(line: 1749, column: 5, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !4930, file: !1126, discriminator: 1)
!4970 = !DILocation(line: 1751, column: 34, scope: !4930)
!4971 = !DILocation(line: 1751, column: 39, scope: !4930)
!4972 = !DILocation(line: 1751, column: 76, scope: !4930)
!4973 = !DILocation(line: 1751, column: 66, scope: !4930)
!4974 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !4932)
!4975 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !4932)
!4976 = !DILocation(line: 1751, column: 11, scope: !4969)
!4977 = !DILocation(line: 1751, column: 9, scope: !4930)
!4978 = !DILocation(line: 1752, column: 9, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4930, file: !1126, line: 1752, column: 9)
!4980 = !DILocation(line: 1752, column: 13, scope: !4979)
!4981 = !DILocation(line: 1752, column: 9, scope: !4930)
!4982 = !DILocation(line: 1752, column: 25, scope: !4983)
!4983 = !DILexicalBlockFile(scope: !4979, file: !1126, discriminator: 1)
!4984 = !DILocation(line: 1752, column: 18, scope: !4983)
!4985 = !DILocation(line: 1754, column: 35, scope: !4930)
!4986 = !DILocation(line: 1754, column: 48, scope: !4930)
!4987 = !DILocation(line: 1754, column: 11, scope: !4930)
!4988 = !DILocation(line: 1754, column: 9, scope: !4930)
!4989 = !DILocation(line: 1755, column: 9, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4930, file: !1126, line: 1755, column: 9)
!4991 = !DILocation(line: 1755, column: 13, scope: !4990)
!4992 = !DILocation(line: 1755, column: 9, scope: !4930)
!4993 = !DILocation(line: 1755, column: 25, scope: !4994)
!4994 = !DILexicalBlockFile(scope: !4990, file: !1126, discriminator: 1)
!4995 = !DILocation(line: 1755, column: 18, scope: !4994)
!4996 = !DILocation(line: 1757, column: 12, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4930, file: !1126, line: 1757, column: 5)
!4998 = !DILocation(line: 1757, column: 10, scope: !4997)
!4999 = !DILocation(line: 1757, column: 17, scope: !5000)
!5000 = !DILexicalBlockFile(scope: !5001, file: !1126, discriminator: 1)
!5001 = distinct !DILexicalBlock(scope: !4997, file: !1126, line: 1757, column: 5)
!5002 = !DILocation(line: 1757, column: 21, scope: !5000)
!5003 = !DILocation(line: 1757, column: 24, scope: !5000)
!5004 = !DILocation(line: 1757, column: 19, scope: !5000)
!5005 = !DILocation(line: 1757, column: 5, scope: !5000)
!5006 = !DILocalVariable(name: "st", scope: !5007, file: !1126, line: 1758, type: !1398)
!5007 = distinct !DILexicalBlock(scope: !5001, file: !1126, line: 1757, column: 41)
!5008 = !DILocation(line: 1758, column: 19, scope: !5007)
!5009 = !DILocation(line: 1758, column: 35, scope: !5007)
!5010 = !DILocation(line: 1758, column: 24, scope: !5007)
!5011 = !DILocation(line: 1758, column: 27, scope: !5007)
!5012 = !DILocalVariable(name: "attached_file", scope: !5007, file: !1126, line: 1759, type: !2468)
!5013 = !DILocation(line: 1759, column: 21, scope: !5007)
!5014 = !DILocalVariable(name: "attachment", scope: !5007, file: !1126, line: 1760, type: !2536)
!5015 = !DILocation(line: 1760, column: 25, scope: !5007)
!5016 = !DILocation(line: 1760, column: 38, scope: !5007)
!5017 = !DILocation(line: 1760, column: 43, scope: !5007)
!5018 = !DILocation(line: 1760, column: 56, scope: !5007)
!5019 = !DILocalVariable(name: "t", scope: !5007, file: !1126, line: 1761, type: !2573)
!5020 = !DILocation(line: 1761, column: 28, scope: !5007)
!5021 = !DILocalVariable(name: "mimetype", scope: !5007, file: !1126, line: 1762, type: !1131)
!5022 = !DILocation(line: 1762, column: 21, scope: !5007)
!5023 = !DILocalVariable(name: "fileuid", scope: !5007, file: !1126, line: 1763, type: !1049)
!5024 = !DILocation(line: 1763, column: 18, scope: !5007)
!5025 = !DILocation(line: 1765, column: 13, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1765, column: 13)
!5027 = !DILocation(line: 1765, column: 17, scope: !5026)
!5028 = !DILocation(line: 1765, column: 27, scope: !5026)
!5029 = !DILocation(line: 1765, column: 38, scope: !5026)
!5030 = !DILocation(line: 1765, column: 13, scope: !5007)
!5031 = !DILocation(line: 1766, column: 13, scope: !5026)
!5032 = !DILocation(line: 1768, column: 39, scope: !5007)
!5033 = !DILocation(line: 1768, column: 51, scope: !5007)
!5034 = !DILocation(line: 1768, column: 56, scope: !5007)
!5035 = !DILocation(line: 1768, column: 69, scope: !5007)
!5036 = !DILocation(line: 1768, column: 81, scope: !5007)
!5037 = !DILocation(line: 1768, column: 22, scope: !5007)
!5038 = !DILocation(line: 1768, column: 20, scope: !5007)
!5039 = !DILocation(line: 1769, column: 14, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1769, column: 13)
!5041 = !DILocation(line: 1769, column: 13, scope: !5007)
!5042 = !DILocation(line: 1770, column: 13, scope: !5040)
!5043 = !DILocation(line: 1771, column: 37, scope: !5007)
!5044 = !DILocation(line: 1771, column: 9, scope: !5007)
!5045 = !DILocation(line: 1771, column: 14, scope: !5007)
!5046 = !DILocation(line: 1771, column: 27, scope: !5007)
!5047 = !DILocation(line: 1771, column: 35, scope: !5007)
!5048 = !DILocation(line: 1773, column: 43, scope: !5007)
!5049 = !DILocation(line: 1773, column: 25, scope: !5007)
!5050 = !DILocation(line: 1773, column: 25, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5007, file: !1126, discriminator: 1)
!5052 = !DILocation(line: 1775, column: 29, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1775, column: 13)
!5054 = !DILocation(line: 1775, column: 33, scope: !5053)
!5055 = !DILocation(line: 1775, column: 17, scope: !5053)
!5056 = !DILocation(line: 1775, column: 15, scope: !5053)
!5057 = !DILocation(line: 1775, column: 13, scope: !5007)
!5058 = !DILocation(line: 1776, column: 29, scope: !5053)
!5059 = !DILocation(line: 1776, column: 45, scope: !5053)
!5060 = !DILocation(line: 1776, column: 48, scope: !5053)
!5061 = !DILocation(line: 1776, column: 13, scope: !5053)
!5062 = !DILocation(line: 1777, column: 31, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1777, column: 13)
!5064 = !DILocation(line: 1777, column: 35, scope: !5063)
!5065 = !DILocation(line: 1777, column: 19, scope: !5063)
!5066 = !DILocation(line: 1777, column: 17, scope: !5063)
!5067 = !DILocation(line: 1777, column: 13, scope: !5007)
!5068 = !DILocation(line: 1778, column: 20, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5063, file: !1126, line: 1777, column: 67)
!5070 = !DILocation(line: 1778, column: 74, scope: !5069)
!5071 = !DILocation(line: 1778, column: 13, scope: !5069)
!5072 = !DILocation(line: 1779, column: 13, scope: !5069)
!5073 = !DILocation(line: 1781, column: 25, scope: !5007)
!5074 = !DILocation(line: 1781, column: 41, scope: !5007)
!5075 = !DILocation(line: 1781, column: 44, scope: !5007)
!5076 = !DILocation(line: 1781, column: 9, scope: !5007)
!5077 = !DILocation(line: 1782, column: 29, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1782, column: 13)
!5079 = !DILocation(line: 1782, column: 33, scope: !5078)
!5080 = !DILocation(line: 1782, column: 17, scope: !5078)
!5081 = !DILocation(line: 1782, column: 15, scope: !5078)
!5082 = !DILocation(line: 1782, column: 13, scope: !5007)
!5083 = !DILocation(line: 1783, column: 24, scope: !5078)
!5084 = !DILocation(line: 1783, column: 27, scope: !5078)
!5085 = !DILocation(line: 1783, column: 22, scope: !5078)
!5086 = !DILocation(line: 1783, column: 13, scope: !5078)
!5087 = !DILocation(line: 1784, column: 18, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5078, file: !1126, line: 1784, column: 18)
!5089 = !DILocation(line: 1784, column: 22, scope: !5088)
!5090 = !DILocation(line: 1784, column: 32, scope: !5088)
!5091 = !DILocation(line: 1784, column: 41, scope: !5088)
!5092 = !DILocation(line: 1784, column: 18, scope: !5078)
!5093 = !DILocalVariable(name: "i", scope: !5094, file: !1126, line: 1785, type: !1053)
!5094 = distinct !DILexicalBlock(scope: !5088, file: !1126, line: 1784, column: 63)
!5095 = !DILocation(line: 1785, column: 17, scope: !5094)
!5096 = !DILocation(line: 1786, column: 20, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !1126, line: 1786, column: 13)
!5098 = !DILocation(line: 1786, column: 18, scope: !5097)
!5099 = !DILocation(line: 1786, column: 42, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5101, file: !1126, discriminator: 1)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !1126, line: 1786, column: 13)
!5102 = !DILocation(line: 1786, column: 25, scope: !5100)
!5103 = !DILocation(line: 1786, column: 45, scope: !5100)
!5104 = !DILocation(line: 1786, column: 48, scope: !5100)
!5105 = !DILocation(line: 1786, column: 13, scope: !5100)
!5106 = !DILocation(line: 1787, column: 38, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5101, file: !1126, line: 1787, column: 21)
!5108 = !DILocation(line: 1787, column: 21, scope: !5107)
!5109 = !DILocation(line: 1787, column: 41, scope: !5107)
!5110 = !DILocation(line: 1787, column: 47, scope: !5107)
!5111 = !DILocation(line: 1787, column: 51, scope: !5107)
!5112 = !DILocation(line: 1787, column: 61, scope: !5107)
!5113 = !DILocation(line: 1787, column: 44, scope: !5107)
!5114 = !DILocation(line: 1787, column: 21, scope: !5101)
!5115 = !DILocation(line: 1788, column: 49, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5107, file: !1126, line: 1787, column: 71)
!5117 = !DILocation(line: 1788, column: 32, scope: !5116)
!5118 = !DILocation(line: 1788, column: 52, scope: !5116)
!5119 = !DILocation(line: 1788, column: 30, scope: !5116)
!5120 = !DILocation(line: 1789, column: 21, scope: !5116)
!5121 = !DILocation(line: 1787, column: 61, scope: !5122)
!5122 = !DILexicalBlockFile(scope: !5107, file: !1126, discriminator: 1)
!5123 = !DILocation(line: 1786, column: 70, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !5101, file: !1126, discriminator: 2)
!5125 = !DILocation(line: 1786, column: 13, scope: !5124)
!5126 = distinct !{!5126, !5127}
!5127 = !DILocation(line: 1786, column: 13, scope: !5094)
!5128 = !DILocation(line: 1791, column: 20, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5094, file: !1126, line: 1791, column: 13)
!5130 = !DILocation(line: 1791, column: 18, scope: !5129)
!5131 = !DILocation(line: 1791, column: 48, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5133, file: !1126, discriminator: 1)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !1126, line: 1791, column: 13)
!5134 = !DILocation(line: 1791, column: 25, scope: !5132)
!5135 = !DILocation(line: 1791, column: 51, scope: !5132)
!5136 = !DILocation(line: 1791, column: 54, scope: !5132)
!5137 = !DILocation(line: 1791, column: 13, scope: !5132)
!5138 = !DILocation(line: 1792, column: 44, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5133, file: !1126, line: 1792, column: 21)
!5140 = !DILocation(line: 1792, column: 21, scope: !5139)
!5141 = !DILocation(line: 1792, column: 47, scope: !5139)
!5142 = !DILocation(line: 1792, column: 53, scope: !5139)
!5143 = !DILocation(line: 1792, column: 57, scope: !5139)
!5144 = !DILocation(line: 1792, column: 67, scope: !5139)
!5145 = !DILocation(line: 1792, column: 50, scope: !5139)
!5146 = !DILocation(line: 1792, column: 21, scope: !5133)
!5147 = !DILocation(line: 1793, column: 55, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5139, file: !1126, line: 1792, column: 77)
!5149 = !DILocation(line: 1793, column: 32, scope: !5148)
!5150 = !DILocation(line: 1793, column: 58, scope: !5148)
!5151 = !DILocation(line: 1793, column: 30, scope: !5148)
!5152 = !DILocation(line: 1794, column: 21, scope: !5148)
!5153 = !DILocation(line: 1792, column: 67, scope: !5154)
!5154 = !DILexicalBlockFile(scope: !5139, file: !1126, discriminator: 1)
!5155 = !DILocation(line: 1791, column: 76, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5133, file: !1126, discriminator: 2)
!5157 = !DILocation(line: 1791, column: 13, scope: !5156)
!5158 = distinct !{!5158, !5159}
!5159 = !DILocation(line: 1791, column: 13, scope: !5094)
!5160 = !DILocation(line: 1796, column: 9, scope: !5094)
!5161 = !DILocation(line: 1797, column: 14, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1797, column: 13)
!5163 = !DILocation(line: 1797, column: 13, scope: !5007)
!5164 = !DILocation(line: 1798, column: 20, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5162, file: !1126, line: 1797, column: 24)
!5166 = !DILocation(line: 1799, column: 82, scope: !5165)
!5167 = !DILocation(line: 1798, column: 13, scope: !5165)
!5168 = !DILocation(line: 1800, column: 13, scope: !5165)
!5169 = !DILocation(line: 1803, column: 13, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5007, file: !1126, line: 1803, column: 13)
!5171 = !DILocation(line: 1803, column: 16, scope: !5170)
!5172 = !DILocation(line: 1803, column: 22, scope: !5170)
!5173 = !DILocation(line: 1803, column: 13, scope: !5007)
!5174 = !DILocalVariable(name: "sha", scope: !5175, file: !1126, line: 1804, type: !5176)
!5175 = distinct !DILexicalBlock(scope: !5170, file: !1126, line: 1803, column: 32)
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 64, align: 64)
!5177 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVSHA", file: !5178, line: 54, flags: DIFlagFwdDecl)
!5178 = !DIFile(filename: "./libavutil/sha.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5179 = !DILocation(line: 1804, column: 27, scope: !5175)
!5180 = !DILocation(line: 1804, column: 33, scope: !5175)
!5181 = !DILocalVariable(name: "digest", scope: !5175, file: !1126, line: 1805, type: !5182)
!5182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 160, align: 8, elements: !3513)
!5183 = !DILocation(line: 1805, column: 21, scope: !5175)
!5184 = !DILocation(line: 1806, column: 18, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5175, file: !1126, line: 1806, column: 17)
!5186 = !DILocation(line: 1806, column: 17, scope: !5175)
!5187 = !DILocation(line: 1807, column: 17, scope: !5185)
!5188 = !DILocation(line: 1808, column: 25, scope: !5175)
!5189 = !DILocation(line: 1808, column: 13, scope: !5175)
!5190 = !DILocation(line: 1809, column: 27, scope: !5175)
!5191 = !DILocation(line: 1809, column: 32, scope: !5175)
!5192 = !DILocation(line: 1809, column: 36, scope: !5175)
!5193 = !DILocation(line: 1809, column: 46, scope: !5175)
!5194 = !DILocation(line: 1809, column: 57, scope: !5175)
!5195 = !DILocation(line: 1809, column: 61, scope: !5175)
!5196 = !DILocation(line: 1809, column: 71, scope: !5175)
!5197 = !DILocation(line: 1809, column: 13, scope: !5175)
!5198 = !DILocation(line: 1810, column: 26, scope: !5175)
!5199 = !DILocation(line: 1810, column: 31, scope: !5175)
!5200 = !DILocation(line: 1810, column: 13, scope: !5175)
!5201 = !DILocation(line: 1811, column: 21, scope: !5175)
!5202 = !DILocation(line: 1811, column: 13, scope: !5175)
!5203 = !DILocation(line: 1812, column: 65, scope: !5175)
!5204 = !DILocation(line: 1812, column: 21, scope: !5175)
!5205 = !DILocation(line: 1813, column: 9, scope: !5175)
!5206 = !DILocation(line: 1814, column: 23, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5170, file: !1126, line: 1813, column: 16)
!5208 = !DILocation(line: 1814, column: 21, scope: !5207)
!5209 = !DILocation(line: 1816, column: 16, scope: !5007)
!5210 = !DILocation(line: 1817, column: 16, scope: !5007)
!5211 = !DILocation(line: 1817, column: 25, scope: !5007)
!5212 = !DILocation(line: 1817, column: 30, scope: !5007)
!5213 = !DILocation(line: 1817, column: 43, scope: !5007)
!5214 = !DILocation(line: 1816, column: 9, scope: !5007)
!5215 = !DILocation(line: 1819, column: 25, scope: !5007)
!5216 = !DILocation(line: 1819, column: 41, scope: !5007)
!5217 = !DILocation(line: 1819, column: 9, scope: !5007)
!5218 = !DILocation(line: 1820, column: 25, scope: !5007)
!5219 = !DILocation(line: 1820, column: 41, scope: !5007)
!5220 = !DILocation(line: 1820, column: 45, scope: !5007)
!5221 = !DILocation(line: 1820, column: 55, scope: !5007)
!5222 = !DILocation(line: 1820, column: 66, scope: !5007)
!5223 = !DILocation(line: 1820, column: 70, scope: !5007)
!5224 = !DILocation(line: 1820, column: 80, scope: !5007)
!5225 = !DILocation(line: 1820, column: 9, scope: !5007)
!5226 = !DILocation(line: 1821, column: 23, scope: !5007)
!5227 = !DILocation(line: 1821, column: 39, scope: !5007)
!5228 = !DILocation(line: 1821, column: 9, scope: !5007)
!5229 = !DILocation(line: 1822, column: 25, scope: !5007)
!5230 = !DILocation(line: 1822, column: 9, scope: !5007)
!5231 = !DILocation(line: 1824, column: 79, scope: !5007)
!5232 = !DILocation(line: 1824, column: 35, scope: !5007)
!5233 = !DILocation(line: 1824, column: 40, scope: !5007)
!5234 = !DILocation(line: 1824, column: 53, scope: !5007)
!5235 = !DILocation(line: 1824, column: 9, scope: !5007)
!5236 = !DILocation(line: 1824, column: 14, scope: !5007)
!5237 = !DILocation(line: 1824, column: 27, scope: !5007)
!5238 = !DILocation(line: 1824, column: 66, scope: !5007)
!5239 = !DILocation(line: 1824, column: 77, scope: !5007)
!5240 = !DILocation(line: 1825, column: 78, scope: !5007)
!5241 = !DILocation(line: 1825, column: 35, scope: !5007)
!5242 = !DILocation(line: 1825, column: 40, scope: !5007)
!5243 = !DILocation(line: 1825, column: 53, scope: !5007)
!5244 = !DILocation(line: 1825, column: 64, scope: !5007)
!5245 = !DILocation(line: 1825, column: 9, scope: !5007)
!5246 = !DILocation(line: 1825, column: 14, scope: !5007)
!5247 = !DILocation(line: 1825, column: 27, scope: !5007)
!5248 = !DILocation(line: 1825, column: 68, scope: !5007)
!5249 = !DILocation(line: 1825, column: 76, scope: !5007)
!5250 = !DILocation(line: 1826, column: 5, scope: !5007)
!5251 = !DILocation(line: 1757, column: 37, scope: !5252)
!5252 = !DILexicalBlockFile(scope: !5001, file: !1126, discriminator: 2)
!5253 = !DILocation(line: 1757, column: 5, scope: !5252)
!5254 = distinct !{!5254, !5255}
!5255 = !DILocation(line: 1757, column: 5, scope: !4930)
!5256 = !DILocation(line: 1827, column: 27, scope: !4930)
!5257 = !DILocation(line: 1827, column: 40, scope: !4930)
!5258 = !DILocation(line: 1827, column: 5, scope: !4930)
!5259 = !DILocation(line: 1829, column: 5, scope: !4930)
!5260 = !DILocation(line: 1830, column: 1, scope: !4930)
!5261 = distinct !DISubprogram(name: "mkv_write_tags", scope: !1126, file: !1126, line: 1648, type: !2436, isLocal: true, isDefinition: true, scopeLine: 1649, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5262 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !5263)
!5263 = distinct !DILocation(line: 1688, column: 47, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !1126, line: 1674, column: 45)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !1126, line: 1674, column: 9)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !1126, line: 1674, column: 9)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !1126, line: 1673, column: 56)
!5268 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1673, column: 9)
!5269 = !DILocalVariable(name: "s", arg: 1, scope: !5261, file: !1126, line: 1648, type: !2438)
!5270 = !DILocation(line: 1648, column: 44, scope: !5261)
!5271 = !DILocalVariable(name: "mkv", scope: !5261, file: !1126, line: 1650, type: !2459)
!5272 = !DILocation(line: 1650, column: 25, scope: !5261)
!5273 = !DILocation(line: 1650, column: 31, scope: !5261)
!5274 = !DILocation(line: 1650, column: 34, scope: !5261)
!5275 = !DILocalVariable(name: "i", scope: !5261, file: !1126, line: 1651, type: !1053)
!5276 = !DILocation(line: 1651, column: 9, scope: !5261)
!5277 = !DILocalVariable(name: "ret", scope: !5261, file: !1126, line: 1651, type: !1053)
!5278 = !DILocation(line: 1651, column: 12, scope: !5261)
!5279 = !DILocation(line: 1653, column: 26, scope: !5261)
!5280 = !DILocation(line: 1653, column: 5, scope: !5261)
!5281 = !DILocation(line: 1655, column: 23, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1655, column: 9)
!5283 = !DILocation(line: 1655, column: 26, scope: !5282)
!5284 = !DILocation(line: 1655, column: 9, scope: !5282)
!5285 = !DILocation(line: 1655, column: 9, scope: !5261)
!5286 = !DILocation(line: 1656, column: 29, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !1126, line: 1655, column: 40)
!5288 = !DILocation(line: 1656, column: 32, scope: !5287)
!5289 = !DILocation(line: 1656, column: 35, scope: !5287)
!5290 = !DILocation(line: 1656, column: 52, scope: !5287)
!5291 = !DILocation(line: 1656, column: 57, scope: !5287)
!5292 = !DILocation(line: 1656, column: 15, scope: !5287)
!5293 = !DILocation(line: 1656, column: 13, scope: !5287)
!5294 = !DILocation(line: 1657, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !1126, line: 1657, column: 13)
!5296 = !DILocation(line: 1657, column: 17, scope: !5295)
!5297 = !DILocation(line: 1657, column: 13, scope: !5287)
!5298 = !DILocation(line: 1657, column: 29, scope: !5299)
!5299 = !DILexicalBlockFile(scope: !5295, file: !1126, discriminator: 1)
!5300 = !DILocation(line: 1657, column: 22, scope: !5299)
!5301 = !DILocation(line: 1658, column: 5, scope: !5287)
!5302 = !DILocation(line: 1660, column: 12, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1660, column: 5)
!5304 = !DILocation(line: 1660, column: 10, scope: !5303)
!5305 = !DILocation(line: 1660, column: 17, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !5307, file: !1126, discriminator: 1)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !1126, line: 1660, column: 5)
!5308 = !DILocation(line: 1660, column: 21, scope: !5306)
!5309 = !DILocation(line: 1660, column: 24, scope: !5306)
!5310 = !DILocation(line: 1660, column: 19, scope: !5306)
!5311 = !DILocation(line: 1660, column: 5, scope: !5306)
!5312 = !DILocalVariable(name: "st", scope: !5313, file: !1126, line: 1661, type: !1398)
!5313 = distinct !DILexicalBlock(scope: !5307, file: !1126, line: 1660, column: 41)
!5314 = !DILocation(line: 1661, column: 19, scope: !5313)
!5315 = !DILocation(line: 1661, column: 35, scope: !5313)
!5316 = !DILocation(line: 1661, column: 24, scope: !5313)
!5317 = !DILocation(line: 1661, column: 27, scope: !5313)
!5318 = !DILocation(line: 1663, column: 13, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5313, file: !1126, line: 1663, column: 13)
!5320 = !DILocation(line: 1663, column: 17, scope: !5319)
!5321 = !DILocation(line: 1663, column: 27, scope: !5319)
!5322 = !DILocation(line: 1663, column: 38, scope: !5319)
!5323 = !DILocation(line: 1663, column: 13, scope: !5313)
!5324 = !DILocation(line: 1664, column: 13, scope: !5319)
!5325 = !DILocation(line: 1666, column: 28, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5313, file: !1126, line: 1666, column: 13)
!5327 = !DILocation(line: 1666, column: 32, scope: !5326)
!5328 = !DILocation(line: 1666, column: 14, scope: !5326)
!5329 = !DILocation(line: 1666, column: 13, scope: !5313)
!5330 = !DILocation(line: 1667, column: 13, scope: !5326)
!5331 = !DILocation(line: 1669, column: 29, scope: !5313)
!5332 = !DILocation(line: 1669, column: 32, scope: !5313)
!5333 = !DILocation(line: 1669, column: 36, scope: !5313)
!5334 = !DILocation(line: 1669, column: 54, scope: !5313)
!5335 = !DILocation(line: 1669, column: 56, scope: !5313)
!5336 = !DILocation(line: 1669, column: 62, scope: !5313)
!5337 = !DILocation(line: 1669, column: 67, scope: !5313)
!5338 = !DILocation(line: 1669, column: 15, scope: !5313)
!5339 = !DILocation(line: 1669, column: 13, scope: !5313)
!5340 = !DILocation(line: 1670, column: 13, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5313, file: !1126, line: 1670, column: 13)
!5342 = !DILocation(line: 1670, column: 17, scope: !5341)
!5343 = !DILocation(line: 1670, column: 13, scope: !5313)
!5344 = !DILocation(line: 1670, column: 29, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !5341, file: !1126, discriminator: 1)
!5346 = !DILocation(line: 1670, column: 22, scope: !5345)
!5347 = !DILocation(line: 1671, column: 5, scope: !5313)
!5348 = !DILocation(line: 1660, column: 37, scope: !5349)
!5349 = !DILexicalBlockFile(scope: !5307, file: !1126, discriminator: 2)
!5350 = !DILocation(line: 1660, column: 5, scope: !5349)
!5351 = distinct !{!5351, !5352}
!5352 = !DILocation(line: 1660, column: 5, scope: !5261)
!5353 = !DILocation(line: 1673, column: 10, scope: !5268)
!5354 = !DILocation(line: 1673, column: 13, scope: !5268)
!5355 = !DILocation(line: 1673, column: 17, scope: !5268)
!5356 = !DILocation(line: 1673, column: 26, scope: !5268)
!5357 = !DILocation(line: 1673, column: 38, scope: !5268)
!5358 = !DILocation(line: 1673, column: 42, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5268, file: !1126, discriminator: 1)
!5360 = !DILocation(line: 1673, column: 47, scope: !5359)
!5361 = !DILocation(line: 1673, column: 9, scope: !5359)
!5362 = !DILocation(line: 1674, column: 16, scope: !5266)
!5363 = !DILocation(line: 1674, column: 14, scope: !5266)
!5364 = !DILocation(line: 1674, column: 21, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !5265, file: !1126, discriminator: 1)
!5366 = !DILocation(line: 1674, column: 25, scope: !5365)
!5367 = !DILocation(line: 1674, column: 28, scope: !5365)
!5368 = !DILocation(line: 1674, column: 23, scope: !5365)
!5369 = !DILocation(line: 1674, column: 9, scope: !5365)
!5370 = !DILocalVariable(name: "pb", scope: !5264, file: !1126, line: 1675, type: !1332)
!5371 = !DILocation(line: 1675, column: 26, scope: !5264)
!5372 = !DILocalVariable(name: "st", scope: !5264, file: !1126, line: 1676, type: !1398)
!5373 = !DILocation(line: 1676, column: 23, scope: !5264)
!5374 = !DILocation(line: 1676, column: 39, scope: !5264)
!5375 = !DILocation(line: 1676, column: 28, scope: !5264)
!5376 = !DILocation(line: 1676, column: 31, scope: !5264)
!5377 = !DILocalVariable(name: "tag_target", scope: !5264, file: !1126, line: 1677, type: !2468)
!5378 = !DILocation(line: 1677, column: 25, scope: !5264)
!5379 = !DILocalVariable(name: "tag", scope: !5264, file: !1126, line: 1678, type: !2468)
!5380 = !DILocation(line: 1678, column: 25, scope: !5264)
!5381 = !DILocation(line: 1680, column: 17, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5264, file: !1126, line: 1680, column: 17)
!5383 = !DILocation(line: 1680, column: 21, scope: !5382)
!5384 = !DILocation(line: 1680, column: 31, scope: !5382)
!5385 = !DILocation(line: 1680, column: 42, scope: !5382)
!5386 = !DILocation(line: 1680, column: 17, scope: !5264)
!5387 = !DILocation(line: 1681, column: 17, scope: !5382)
!5388 = !DILocation(line: 1683, column: 35, scope: !5264)
!5389 = !DILocation(line: 1683, column: 46, scope: !5264)
!5390 = !DILocation(line: 1683, column: 48, scope: !5264)
!5391 = !DILocation(line: 1683, column: 54, scope: !5264)
!5392 = !DILocation(line: 1683, column: 59, scope: !5264)
!5393 = !DILocation(line: 1683, column: 13, scope: !5264)
!5394 = !DILocation(line: 1684, column: 18, scope: !5264)
!5395 = !DILocation(line: 1684, column: 23, scope: !5264)
!5396 = !DILocation(line: 1684, column: 16, scope: !5264)
!5397 = !DILocation(line: 1686, column: 37, scope: !5264)
!5398 = !DILocation(line: 1686, column: 19, scope: !5264)
!5399 = !DILocation(line: 1686, column: 19, scope: !5400)
!5400 = !DILexicalBlockFile(scope: !5264, file: !1126, discriminator: 1)
!5401 = !DILocation(line: 1687, column: 29, scope: !5264)
!5402 = !DILocation(line: 1687, column: 13, scope: !5264)
!5403 = !DILocation(line: 1688, column: 57, scope: !5264)
!5404 = !DILocation(line: 1688, column: 47, scope: !5264)
!5405 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !5263)
!5406 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !5263)
!5407 = !DILocation(line: 1688, column: 42, scope: !5264)
!5408 = !DILocation(line: 1688, column: 13, scope: !5264)
!5409 = !DILocation(line: 1688, column: 18, scope: !5264)
!5410 = !DILocation(line: 1688, column: 45, scope: !5264)
!5411 = !DILocation(line: 1692, column: 27, scope: !5264)
!5412 = !DILocation(line: 1692, column: 13, scope: !5264)
!5413 = !DILocation(line: 1693, column: 29, scope: !5264)
!5414 = !DILocation(line: 1693, column: 13, scope: !5264)
!5415 = !DILocation(line: 1694, column: 29, scope: !5264)
!5416 = !DILocation(line: 1694, column: 13, scope: !5264)
!5417 = !DILocation(line: 1695, column: 9, scope: !5264)
!5418 = !DILocation(line: 1674, column: 41, scope: !5419)
!5419 = !DILexicalBlockFile(scope: !5265, file: !1126, discriminator: 2)
!5420 = !DILocation(line: 1674, column: 9, scope: !5419)
!5421 = distinct !{!5421, !5422}
!5422 = !DILocation(line: 1674, column: 9, scope: !5267)
!5423 = !DILocation(line: 1696, column: 5, scope: !5267)
!5424 = !DILocation(line: 1698, column: 9, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1698, column: 9)
!5426 = !DILocation(line: 1698, column: 14, scope: !5425)
!5427 = !DILocation(line: 1698, column: 19, scope: !5425)
!5428 = !DILocation(line: 1698, column: 9, scope: !5261)
!5429 = !DILocation(line: 1699, column: 16, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !1126, line: 1699, column: 9)
!5431 = distinct !DILexicalBlock(scope: !5425, file: !1126, line: 1698, column: 28)
!5432 = !DILocation(line: 1699, column: 14, scope: !5430)
!5433 = !DILocation(line: 1699, column: 21, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !5435, file: !1126, discriminator: 1)
!5435 = distinct !DILexicalBlock(scope: !5430, file: !1126, line: 1699, column: 9)
!5436 = !DILocation(line: 1699, column: 25, scope: !5434)
!5437 = !DILocation(line: 1699, column: 28, scope: !5434)
!5438 = !DILocation(line: 1699, column: 23, scope: !5434)
!5439 = !DILocation(line: 1699, column: 9, scope: !5434)
!5440 = !DILocalVariable(name: "ch", scope: !5441, file: !1126, line: 1700, type: !2274)
!5441 = distinct !DILexicalBlock(scope: !5435, file: !1126, line: 1699, column: 46)
!5442 = !DILocation(line: 1700, column: 24, scope: !5441)
!5443 = !DILocation(line: 1700, column: 41, scope: !5441)
!5444 = !DILocation(line: 1700, column: 29, scope: !5441)
!5445 = !DILocation(line: 1700, column: 32, scope: !5441)
!5446 = !DILocation(line: 1702, column: 32, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5441, file: !1126, line: 1702, column: 17)
!5448 = !DILocation(line: 1702, column: 36, scope: !5447)
!5449 = !DILocation(line: 1702, column: 18, scope: !5447)
!5450 = !DILocation(line: 1702, column: 17, scope: !5441)
!5451 = !DILocation(line: 1703, column: 17, scope: !5447)
!5452 = !DILocation(line: 1705, column: 33, scope: !5441)
!5453 = !DILocation(line: 1705, column: 36, scope: !5441)
!5454 = !DILocation(line: 1705, column: 40, scope: !5441)
!5455 = !DILocation(line: 1705, column: 58, scope: !5441)
!5456 = !DILocation(line: 1705, column: 62, scope: !5441)
!5457 = !DILocation(line: 1705, column: 67, scope: !5441)
!5458 = !DILocation(line: 1705, column: 72, scope: !5441)
!5459 = !DILocation(line: 1705, column: 65, scope: !5441)
!5460 = !DILocation(line: 1705, column: 92, scope: !5441)
!5461 = !DILocation(line: 1705, column: 97, scope: !5441)
!5462 = !DILocation(line: 1705, column: 19, scope: !5441)
!5463 = !DILocation(line: 1705, column: 17, scope: !5441)
!5464 = !DILocation(line: 1706, column: 17, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5441, file: !1126, line: 1706, column: 17)
!5466 = !DILocation(line: 1706, column: 21, scope: !5465)
!5467 = !DILocation(line: 1706, column: 17, scope: !5441)
!5468 = !DILocation(line: 1707, column: 24, scope: !5465)
!5469 = !DILocation(line: 1707, column: 17, scope: !5465)
!5470 = !DILocation(line: 1708, column: 9, scope: !5441)
!5471 = !DILocation(line: 1699, column: 42, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !5435, file: !1126, discriminator: 2)
!5473 = !DILocation(line: 1699, column: 9, scope: !5472)
!5474 = distinct !{!5474, !5475}
!5475 = !DILocation(line: 1699, column: 9, scope: !5431)
!5476 = !DILocation(line: 1709, column: 5, scope: !5431)
!5477 = !DILocation(line: 1711, column: 9, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1711, column: 9)
!5479 = !DILocation(line: 1711, column: 14, scope: !5478)
!5480 = !DILocation(line: 1711, column: 31, scope: !5478)
!5481 = !DILocation(line: 1711, column: 34, scope: !5482)
!5482 = !DILexicalBlockFile(scope: !5478, file: !1126, discriminator: 1)
!5483 = !DILocation(line: 1711, column: 39, scope: !5482)
!5484 = !DILocation(line: 1711, column: 44, scope: !5482)
!5485 = !DILocation(line: 1711, column: 9, scope: !5482)
!5486 = !DILocation(line: 1712, column: 16, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !1126, line: 1712, column: 9)
!5488 = distinct !DILexicalBlock(scope: !5478, file: !1126, line: 1711, column: 53)
!5489 = !DILocation(line: 1712, column: 14, scope: !5487)
!5490 = !DILocation(line: 1712, column: 21, scope: !5491)
!5491 = !DILexicalBlockFile(scope: !5492, file: !1126, discriminator: 1)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !1126, line: 1712, column: 9)
!5493 = !DILocation(line: 1712, column: 25, scope: !5491)
!5494 = !DILocation(line: 1712, column: 30, scope: !5491)
!5495 = !DILocation(line: 1712, column: 43, scope: !5491)
!5496 = !DILocation(line: 1712, column: 23, scope: !5491)
!5497 = !DILocation(line: 1712, column: 9, scope: !5491)
!5498 = !DILocalVariable(name: "attachment", scope: !5499, file: !1126, line: 1713, type: !2536)
!5499 = distinct !DILexicalBlock(scope: !5492, file: !1126, line: 1712, column: 61)
!5500 = !DILocation(line: 1713, column: 29, scope: !5499)
!5501 = !DILocation(line: 1713, column: 69, scope: !5499)
!5502 = !DILocation(line: 1713, column: 43, scope: !5499)
!5503 = !DILocation(line: 1713, column: 48, scope: !5499)
!5504 = !DILocation(line: 1713, column: 61, scope: !5499)
!5505 = !DILocalVariable(name: "st", scope: !5499, file: !1126, line: 1714, type: !1398)
!5506 = !DILocation(line: 1714, column: 23, scope: !5499)
!5507 = !DILocation(line: 1714, column: 39, scope: !5499)
!5508 = !DILocation(line: 1714, column: 51, scope: !5499)
!5509 = !DILocation(line: 1714, column: 28, scope: !5499)
!5510 = !DILocation(line: 1714, column: 31, scope: !5499)
!5511 = !DILocation(line: 1716, column: 32, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5499, file: !1126, line: 1716, column: 17)
!5513 = !DILocation(line: 1716, column: 36, scope: !5512)
!5514 = !DILocation(line: 1716, column: 18, scope: !5512)
!5515 = !DILocation(line: 1716, column: 17, scope: !5499)
!5516 = !DILocation(line: 1717, column: 17, scope: !5512)
!5517 = !DILocation(line: 1719, column: 33, scope: !5499)
!5518 = !DILocation(line: 1719, column: 36, scope: !5499)
!5519 = !DILocation(line: 1719, column: 40, scope: !5499)
!5520 = !DILocation(line: 1719, column: 58, scope: !5499)
!5521 = !DILocation(line: 1719, column: 70, scope: !5499)
!5522 = !DILocation(line: 1719, column: 80, scope: !5499)
!5523 = !DILocation(line: 1719, column: 85, scope: !5499)
!5524 = !DILocation(line: 1719, column: 19, scope: !5499)
!5525 = !DILocation(line: 1719, column: 17, scope: !5499)
!5526 = !DILocation(line: 1720, column: 17, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5499, file: !1126, line: 1720, column: 17)
!5528 = !DILocation(line: 1720, column: 21, scope: !5527)
!5529 = !DILocation(line: 1720, column: 17, scope: !5499)
!5530 = !DILocation(line: 1721, column: 24, scope: !5527)
!5531 = !DILocation(line: 1721, column: 17, scope: !5527)
!5532 = !DILocation(line: 1722, column: 9, scope: !5499)
!5533 = !DILocation(line: 1712, column: 57, scope: !5534)
!5534 = !DILexicalBlockFile(scope: !5492, file: !1126, discriminator: 2)
!5535 = !DILocation(line: 1712, column: 9, scope: !5534)
!5536 = distinct !{!5536, !5537}
!5537 = !DILocation(line: 1712, column: 9, scope: !5488)
!5538 = !DILocation(line: 1723, column: 5, scope: !5488)
!5539 = !DILocation(line: 1725, column: 9, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5261, file: !1126, line: 1725, column: 9)
!5541 = !DILocation(line: 1725, column: 14, scope: !5540)
!5542 = !DILocation(line: 1725, column: 19, scope: !5540)
!5543 = !DILocation(line: 1725, column: 9, scope: !5261)
!5544 = !DILocation(line: 1726, column: 14, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !1126, line: 1726, column: 13)
!5546 = distinct !DILexicalBlock(scope: !5540, file: !1126, line: 1725, column: 24)
!5547 = !DILocation(line: 1726, column: 17, scope: !5545)
!5548 = !DILocation(line: 1726, column: 21, scope: !5545)
!5549 = !DILocation(line: 1726, column: 30, scope: !5545)
!5550 = !DILocation(line: 1726, column: 42, scope: !5545)
!5551 = !DILocation(line: 1726, column: 46, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !5545, file: !1126, discriminator: 1)
!5553 = !DILocation(line: 1726, column: 51, scope: !5552)
!5554 = !DILocation(line: 1726, column: 13, scope: !5552)
!5555 = !DILocation(line: 1727, column: 47, scope: !5545)
!5556 = !DILocation(line: 1727, column: 50, scope: !5545)
!5557 = !DILocation(line: 1727, column: 55, scope: !5545)
!5558 = !DILocation(line: 1727, column: 60, scope: !5545)
!5559 = !DILocation(line: 1727, column: 69, scope: !5545)
!5560 = !DILocation(line: 1727, column: 74, scope: !5545)
!5561 = !DILocation(line: 1727, column: 79, scope: !5545)
!5562 = !DILocation(line: 1727, column: 13, scope: !5545)
!5563 = !DILocation(line: 1729, column: 35, scope: !5545)
!5564 = !DILocation(line: 1729, column: 38, scope: !5545)
!5565 = !DILocation(line: 1729, column: 43, scope: !5545)
!5566 = !DILocation(line: 1729, column: 48, scope: !5545)
!5567 = !DILocation(line: 1729, column: 57, scope: !5545)
!5568 = !DILocation(line: 1729, column: 62, scope: !5545)
!5569 = !DILocation(line: 1729, column: 67, scope: !5545)
!5570 = !DILocation(line: 1729, column: 13, scope: !5545)
!5571 = !DILocation(line: 1730, column: 5, scope: !5546)
!5572 = !DILocation(line: 1731, column: 5, scope: !5261)
!5573 = !DILocation(line: 1732, column: 1, scope: !5261)
!5574 = distinct !DISubprogram(name: "mkv_write_seekhead", scope: !1126, file: !1126, line: 493, type: !5575, isLocal: true, isDefinition: true, scopeLine: 494, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!1051, !1332, !2459}
!5577 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !5578)
!5578 = distinct !DILocation(line: 531, column: 76, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !1126, line: 530, column: 38)
!5580 = distinct !DILexicalBlock(scope: !5574, file: !1126, line: 530, column: 9)
!5581 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 501, column: 18, scope: !5574)
!5583 = !DILocalVariable(name: "pb", arg: 1, scope: !5574, file: !1126, line: 493, type: !1332)
!5584 = !DILocation(line: 493, column: 48, scope: !5574)
!5585 = !DILocalVariable(name: "mkv", arg: 2, scope: !5574, file: !1126, line: 493, type: !2459)
!5586 = !DILocation(line: 493, column: 72, scope: !5574)
!5587 = !DILocalVariable(name: "dyn_cp", scope: !5574, file: !1126, line: 495, type: !1332)
!5588 = !DILocation(line: 495, column: 18, scope: !5574)
!5589 = !DILocalVariable(name: "seekhead", scope: !5574, file: !1126, line: 496, type: !2485)
!5590 = !DILocation(line: 496, column: 19, scope: !5574)
!5591 = !DILocation(line: 496, column: 30, scope: !5574)
!5592 = !DILocation(line: 496, column: 35, scope: !5574)
!5593 = !DILocalVariable(name: "metaseek", scope: !5574, file: !1126, line: 497, type: !2468)
!5594 = !DILocation(line: 497, column: 17, scope: !5574)
!5595 = !DILocalVariable(name: "seekentry", scope: !5574, file: !1126, line: 497, type: !2468)
!5596 = !DILocation(line: 497, column: 27, scope: !5574)
!5597 = !DILocalVariable(name: "currentpos", scope: !5574, file: !1126, line: 498, type: !1051)
!5598 = !DILocation(line: 498, column: 13, scope: !5574)
!5599 = !DILocalVariable(name: "i", scope: !5574, file: !1126, line: 499, type: !1053)
!5600 = !DILocation(line: 499, column: 9, scope: !5574)
!5601 = !DILocation(line: 501, column: 28, scope: !5574)
!5602 = !DILocation(line: 501, column: 18, scope: !5574)
!5603 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !5582)
!5604 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !5582)
!5605 = !DILocation(line: 501, column: 16, scope: !5574)
!5606 = !DILocation(line: 503, column: 9, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5574, file: !1126, line: 503, column: 9)
!5608 = !DILocation(line: 503, column: 19, scope: !5607)
!5609 = !DILocation(line: 503, column: 33, scope: !5607)
!5610 = !DILocation(line: 503, column: 9, scope: !5574)
!5611 = !DILocation(line: 504, column: 23, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !1126, line: 504, column: 13)
!5613 = distinct !DILexicalBlock(scope: !5607, file: !1126, line: 503, column: 38)
!5614 = !DILocation(line: 504, column: 27, scope: !5612)
!5615 = !DILocation(line: 504, column: 37, scope: !5612)
!5616 = !DILocation(line: 504, column: 13, scope: !5612)
!5617 = !DILocation(line: 504, column: 55, scope: !5612)
!5618 = !DILocation(line: 504, column: 13, scope: !5613)
!5619 = !DILocation(line: 505, column: 24, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5612, file: !1126, line: 504, column: 60)
!5621 = !DILocation(line: 506, column: 13, scope: !5620)
!5622 = !DILocation(line: 508, column: 5, scope: !5613)
!5623 = !DILocation(line: 510, column: 33, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5574, file: !1126, line: 510, column: 9)
!5625 = !DILocation(line: 510, column: 46, scope: !5624)
!5626 = !DILocation(line: 511, column: 33, scope: !5624)
!5627 = !DILocation(line: 511, column: 43, scope: !5624)
!5628 = !DILocation(line: 510, column: 9, scope: !5624)
!5629 = !DILocation(line: 511, column: 58, scope: !5624)
!5630 = !DILocation(line: 510, column: 9, scope: !5574)
!5631 = !DILocation(line: 512, column: 20, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5624, file: !1126, line: 511, column: 63)
!5633 = !DILocation(line: 513, column: 9, scope: !5632)
!5634 = !DILocation(line: 516, column: 12, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5574, file: !1126, line: 516, column: 5)
!5636 = !DILocation(line: 516, column: 10, scope: !5635)
!5637 = !DILocation(line: 516, column: 17, scope: !5638)
!5638 = !DILexicalBlockFile(scope: !5639, file: !1126, discriminator: 1)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !1126, line: 516, column: 5)
!5640 = !DILocation(line: 516, column: 21, scope: !5638)
!5641 = !DILocation(line: 516, column: 31, scope: !5638)
!5642 = !DILocation(line: 516, column: 19, scope: !5638)
!5643 = !DILocation(line: 516, column: 5, scope: !5638)
!5644 = !DILocalVariable(name: "entry", scope: !5645, file: !1126, line: 517, type: !2494)
!5645 = distinct !DILexicalBlock(scope: !5639, file: !1126, line: 516, column: 49)
!5646 = !DILocation(line: 517, column: 29, scope: !5645)
!5647 = !DILocation(line: 517, column: 56, scope: !5645)
!5648 = !DILocation(line: 517, column: 38, scope: !5645)
!5649 = !DILocation(line: 517, column: 48, scope: !5645)
!5650 = !DILocation(line: 519, column: 39, scope: !5645)
!5651 = !DILocation(line: 519, column: 21, scope: !5645)
!5652 = !DILocation(line: 519, column: 21, scope: !5653)
!5653 = !DILexicalBlockFile(scope: !5645, file: !1126, discriminator: 1)
!5654 = !DILocation(line: 521, column: 21, scope: !5645)
!5655 = !DILocation(line: 521, column: 9, scope: !5645)
!5656 = !DILocation(line: 522, column: 22, scope: !5645)
!5657 = !DILocation(line: 522, column: 43, scope: !5645)
!5658 = !DILocation(line: 522, column: 50, scope: !5645)
!5659 = !DILocation(line: 522, column: 30, scope: !5645)
!5660 = !DILocation(line: 522, column: 9, scope: !5653)
!5661 = !DILocation(line: 523, column: 21, scope: !5645)
!5662 = !DILocation(line: 523, column: 29, scope: !5645)
!5663 = !DILocation(line: 523, column: 36, scope: !5645)
!5664 = !DILocation(line: 523, column: 9, scope: !5645)
!5665 = !DILocation(line: 525, column: 23, scope: !5645)
!5666 = !DILocation(line: 525, column: 39, scope: !5645)
!5667 = !DILocation(line: 525, column: 46, scope: !5645)
!5668 = !DILocation(line: 525, column: 9, scope: !5645)
!5669 = !DILocation(line: 526, column: 25, scope: !5645)
!5670 = !DILocation(line: 526, column: 9, scope: !5645)
!5671 = !DILocation(line: 527, column: 5, scope: !5645)
!5672 = !DILocation(line: 516, column: 45, scope: !5673)
!5673 = !DILexicalBlockFile(scope: !5639, file: !1126, discriminator: 2)
!5674 = !DILocation(line: 516, column: 5, scope: !5673)
!5675 = distinct !{!5675, !5676}
!5676 = !DILocation(line: 516, column: 5, scope: !5574)
!5677 = !DILocation(line: 528, column: 27, scope: !5574)
!5678 = !DILocation(line: 528, column: 40, scope: !5574)
!5679 = !DILocation(line: 528, column: 5, scope: !5574)
!5680 = !DILocation(line: 530, column: 9, scope: !5580)
!5681 = !DILocation(line: 530, column: 19, scope: !5580)
!5682 = !DILocation(line: 530, column: 33, scope: !5580)
!5683 = !DILocation(line: 530, column: 9, scope: !5574)
!5684 = !DILocalVariable(name: "remaining", scope: !5579, file: !1126, line: 531, type: !1039)
!5685 = !DILocation(line: 531, column: 18, scope: !5579)
!5686 = !DILocation(line: 531, column: 30, scope: !5579)
!5687 = !DILocation(line: 531, column: 40, scope: !5579)
!5688 = !DILocation(line: 531, column: 50, scope: !5579)
!5689 = !DILocation(line: 531, column: 60, scope: !5579)
!5690 = !DILocation(line: 531, column: 48, scope: !5579)
!5691 = !DILocation(line: 531, column: 86, scope: !5579)
!5692 = !DILocation(line: 531, column: 76, scope: !5579)
!5693 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !5578)
!5694 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !5578)
!5695 = !DILocation(line: 531, column: 74, scope: !5579)
!5696 = !DILocation(line: 532, column: 23, scope: !5579)
!5697 = !DILocation(line: 532, column: 27, scope: !5579)
!5698 = !DILocation(line: 532, column: 9, scope: !5579)
!5699 = !DILocation(line: 533, column: 19, scope: !5579)
!5700 = !DILocation(line: 533, column: 23, scope: !5579)
!5701 = !DILocation(line: 533, column: 9, scope: !5579)
!5702 = !DILocation(line: 535, column: 22, scope: !5579)
!5703 = !DILocation(line: 535, column: 32, scope: !5579)
!5704 = !DILocation(line: 535, column: 20, scope: !5579)
!5705 = !DILocation(line: 536, column: 5, scope: !5579)
!5706 = !DILocation(line: 530, column: 35, scope: !5707)
!5707 = !DILexicalBlockFile(scope: !5580, file: !1126, discriminator: 1)
!5708 = !DILocation(line: 538, column: 15, scope: !5574)
!5709 = !DILocation(line: 538, column: 20, scope: !5574)
!5710 = !DILocation(line: 538, column: 35, scope: !5574)
!5711 = !DILocation(line: 538, column: 14, scope: !5574)
!5712 = !DILocation(line: 538, column: 5, scope: !5574)
!5713 = !DILocation(line: 539, column: 15, scope: !5574)
!5714 = !DILocation(line: 539, column: 20, scope: !5574)
!5715 = !DILocation(line: 539, column: 14, scope: !5574)
!5716 = !DILocation(line: 539, column: 5, scope: !5574)
!5717 = !DILocation(line: 541, column: 12, scope: !5574)
!5718 = !DILocation(line: 541, column: 5, scope: !5574)
!5719 = distinct !DISubprogram(name: "mkv_start_cues", scope: !1126, file: !1126, line: 544, type: !5720, isLocal: true, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!2502, !1051}
!5722 = !DILocalVariable(name: "segment_offset", arg: 1, scope: !5719, file: !1126, line: 544, type: !1051)
!5723 = !DILocation(line: 544, column: 41, scope: !5719)
!5724 = !DILocalVariable(name: "cues", scope: !5719, file: !1126, line: 546, type: !2502)
!5725 = !DILocation(line: 546, column: 15, scope: !5719)
!5726 = !DILocation(line: 546, column: 22, scope: !5719)
!5727 = !DILocation(line: 547, column: 10, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5719, file: !1126, line: 547, column: 9)
!5729 = !DILocation(line: 547, column: 9, scope: !5719)
!5730 = !DILocation(line: 548, column: 9, scope: !5728)
!5731 = !DILocation(line: 550, column: 28, scope: !5719)
!5732 = !DILocation(line: 550, column: 5, scope: !5719)
!5733 = !DILocation(line: 550, column: 11, scope: !5719)
!5734 = !DILocation(line: 550, column: 26, scope: !5719)
!5735 = !DILocation(line: 551, column: 12, scope: !5719)
!5736 = !DILocation(line: 551, column: 5, scope: !5719)
!5737 = !DILocation(line: 552, column: 1, scope: !5719)
!5738 = distinct !DISubprogram(name: "mkv_free", scope: !1126, file: !1126, line: 398, type: !5739, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5739 = !DISubroutineType(types: !5740)
!5740 = !{null, !2459}
!5741 = !DILocalVariable(name: "mkv", arg: 1, scope: !5738, file: !1126, line: 398, type: !2459)
!5742 = !DILocation(line: 398, column: 42, scope: !5738)
!5743 = !DILocalVariable(name: "buf", scope: !5738, file: !1126, line: 399, type: !1110)
!5744 = !DILocation(line: 399, column: 14, scope: !5738)
!5745 = !DILocation(line: 400, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 400, column: 9)
!5747 = !DILocation(line: 400, column: 14, scope: !5746)
!5748 = !DILocation(line: 400, column: 9, scope: !5738)
!5749 = !DILocation(line: 401, column: 28, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5746, file: !1126, line: 400, column: 22)
!5751 = !DILocation(line: 401, column: 33, scope: !5750)
!5752 = !DILocation(line: 401, column: 9, scope: !5750)
!5753 = !DILocation(line: 402, column: 17, scope: !5750)
!5754 = !DILocation(line: 402, column: 9, scope: !5750)
!5755 = !DILocation(line: 403, column: 5, scope: !5750)
!5756 = !DILocation(line: 404, column: 9, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 404, column: 9)
!5758 = !DILocation(line: 404, column: 14, scope: !5757)
!5759 = !DILocation(line: 404, column: 9, scope: !5738)
!5760 = !DILocation(line: 405, column: 28, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !1126, line: 404, column: 23)
!5762 = !DILocation(line: 405, column: 33, scope: !5761)
!5763 = !DILocation(line: 405, column: 9, scope: !5761)
!5764 = !DILocation(line: 406, column: 17, scope: !5761)
!5765 = !DILocation(line: 406, column: 9, scope: !5761)
!5766 = !DILocation(line: 407, column: 5, scope: !5761)
!5767 = !DILocation(line: 408, column: 9, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 408, column: 9)
!5769 = !DILocation(line: 408, column: 14, scope: !5768)
!5770 = !DILocation(line: 408, column: 9, scope: !5738)
!5771 = !DILocation(line: 409, column: 28, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !1126, line: 408, column: 25)
!5773 = !DILocation(line: 409, column: 33, scope: !5772)
!5774 = !DILocation(line: 409, column: 9, scope: !5772)
!5775 = !DILocation(line: 410, column: 17, scope: !5772)
!5776 = !DILocation(line: 410, column: 9, scope: !5772)
!5777 = !DILocation(line: 411, column: 5, scope: !5772)
!5778 = !DILocation(line: 412, column: 9, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 412, column: 9)
!5780 = !DILocation(line: 412, column: 14, scope: !5779)
!5781 = !DILocation(line: 412, column: 9, scope: !5738)
!5782 = !DILocation(line: 413, column: 28, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5779, file: !1126, line: 412, column: 23)
!5784 = !DILocation(line: 413, column: 33, scope: !5783)
!5785 = !DILocation(line: 413, column: 9, scope: !5783)
!5786 = !DILocation(line: 414, column: 17, scope: !5783)
!5787 = !DILocation(line: 414, column: 9, scope: !5783)
!5788 = !DILocation(line: 415, column: 5, scope: !5783)
!5789 = !DILocation(line: 416, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 416, column: 9)
!5791 = !DILocation(line: 416, column: 14, scope: !5790)
!5792 = !DILocation(line: 416, column: 9, scope: !5738)
!5793 = !DILocation(line: 417, column: 19, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5790, file: !1126, line: 416, column: 29)
!5795 = !DILocation(line: 417, column: 24, scope: !5794)
!5796 = !DILocation(line: 417, column: 39, scope: !5794)
!5797 = !DILocation(line: 417, column: 18, scope: !5794)
!5798 = !DILocation(line: 417, column: 9, scope: !5794)
!5799 = !DILocation(line: 418, column: 19, scope: !5794)
!5800 = !DILocation(line: 418, column: 24, scope: !5794)
!5801 = !DILocation(line: 418, column: 18, scope: !5794)
!5802 = !DILocation(line: 418, column: 9, scope: !5794)
!5803 = !DILocation(line: 419, column: 5, scope: !5794)
!5804 = !DILocation(line: 420, column: 9, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 420, column: 9)
!5806 = !DILocation(line: 420, column: 14, scope: !5805)
!5807 = !DILocation(line: 420, column: 9, scope: !5738)
!5808 = !DILocation(line: 421, column: 19, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5805, file: !1126, line: 420, column: 20)
!5810 = !DILocation(line: 421, column: 24, scope: !5809)
!5811 = !DILocation(line: 421, column: 30, scope: !5809)
!5812 = !DILocation(line: 421, column: 18, scope: !5809)
!5813 = !DILocation(line: 421, column: 9, scope: !5809)
!5814 = !DILocation(line: 422, column: 19, scope: !5809)
!5815 = !DILocation(line: 422, column: 24, scope: !5809)
!5816 = !DILocation(line: 422, column: 18, scope: !5809)
!5817 = !DILocation(line: 422, column: 9, scope: !5809)
!5818 = !DILocation(line: 423, column: 5, scope: !5809)
!5819 = !DILocation(line: 424, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5738, file: !1126, line: 424, column: 9)
!5821 = !DILocation(line: 424, column: 14, scope: !5820)
!5822 = !DILocation(line: 424, column: 9, scope: !5738)
!5823 = !DILocation(line: 425, column: 19, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5820, file: !1126, line: 424, column: 27)
!5825 = !DILocation(line: 425, column: 24, scope: !5824)
!5826 = !DILocation(line: 425, column: 37, scope: !5824)
!5827 = !DILocation(line: 425, column: 18, scope: !5824)
!5828 = !DILocation(line: 425, column: 9, scope: !5824)
!5829 = !DILocation(line: 426, column: 19, scope: !5824)
!5830 = !DILocation(line: 426, column: 24, scope: !5824)
!5831 = !DILocation(line: 426, column: 18, scope: !5824)
!5832 = !DILocation(line: 426, column: 9, scope: !5824)
!5833 = !DILocation(line: 427, column: 5, scope: !5824)
!5834 = !DILocation(line: 428, column: 15, scope: !5738)
!5835 = !DILocation(line: 428, column: 20, scope: !5738)
!5836 = !DILocation(line: 428, column: 14, scope: !5738)
!5837 = !DILocation(line: 428, column: 5, scope: !5738)
!5838 = !DILocation(line: 429, column: 15, scope: !5738)
!5839 = !DILocation(line: 429, column: 20, scope: !5738)
!5840 = !DILocation(line: 429, column: 14, scope: !5738)
!5841 = !DILocation(line: 429, column: 5, scope: !5738)
!5842 = !DILocation(line: 430, column: 15, scope: !5738)
!5843 = !DILocation(line: 430, column: 20, scope: !5738)
!5844 = !DILocation(line: 430, column: 14, scope: !5738)
!5845 = !DILocation(line: 430, column: 5, scope: !5738)
!5846 = !DILocation(line: 431, column: 1, scope: !5738)
!5847 = distinct !DISubprogram(name: "ebml_num_size", scope: !1126, file: !1126, line: 209, type: !5848, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!1053, !1039}
!5850 = !DILocalVariable(name: "num", arg: 1, scope: !5847, file: !1126, line: 209, type: !1039)
!5851 = !DILocation(line: 209, column: 35, scope: !5847)
!5852 = !DILocalVariable(name: "bytes", scope: !5847, file: !1126, line: 211, type: !1053)
!5853 = !DILocation(line: 211, column: 9, scope: !5847)
!5854 = !DILocation(line: 212, column: 5, scope: !5847)
!5855 = !DILocation(line: 212, column: 13, scope: !5856)
!5856 = !DILexicalBlockFile(scope: !5847, file: !1126, discriminator: 1)
!5857 = !DILocation(line: 212, column: 17, scope: !5856)
!5858 = !DILocation(line: 212, column: 25, scope: !5856)
!5859 = !DILocation(line: 212, column: 31, scope: !5856)
!5860 = !DILocation(line: 212, column: 22, scope: !5856)
!5861 = !DILocation(line: 212, column: 5, scope: !5856)
!5862 = !DILocation(line: 213, column: 14, scope: !5847)
!5863 = !DILocation(line: 212, column: 5, scope: !5864)
!5864 = !DILexicalBlockFile(scope: !5847, file: !1126, discriminator: 2)
!5865 = distinct !{!5865, !5854}
!5866 = !DILocation(line: 214, column: 12, scope: !5847)
!5867 = !DILocation(line: 214, column: 5, scope: !5847)
!5868 = distinct !DISubprogram(name: "put_ebml_id", scope: !1126, file: !1126, line: 187, type: !5869, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{null, !1332, !1050}
!5871 = !DILocalVariable(name: "pb", arg: 1, scope: !5868, file: !1126, line: 187, type: !1332)
!5872 = !DILocation(line: 187, column: 38, scope: !5868)
!5873 = !DILocalVariable(name: "id", arg: 2, scope: !5868, file: !1126, line: 187, type: !1050)
!5874 = !DILocation(line: 187, column: 55, scope: !5868)
!5875 = !DILocalVariable(name: "i", scope: !5868, file: !1126, line: 189, type: !1053)
!5876 = !DILocation(line: 189, column: 9, scope: !5868)
!5877 = !DILocation(line: 189, column: 26, scope: !5868)
!5878 = !DILocation(line: 189, column: 13, scope: !5868)
!5879 = !DILocation(line: 190, column: 5, scope: !5868)
!5880 = !DILocation(line: 190, column: 13, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5868, file: !1126, discriminator: 1)
!5882 = !DILocation(line: 190, column: 5, scope: !5881)
!5883 = !DILocation(line: 191, column: 17, scope: !5868)
!5884 = !DILocation(line: 191, column: 31, scope: !5868)
!5885 = !DILocation(line: 191, column: 38, scope: !5868)
!5886 = !DILocation(line: 191, column: 40, scope: !5868)
!5887 = !DILocation(line: 191, column: 34, scope: !5868)
!5888 = !DILocation(line: 191, column: 21, scope: !5868)
!5889 = !DILocation(line: 191, column: 9, scope: !5868)
!5890 = !DILocation(line: 190, column: 5, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !5868, file: !1126, discriminator: 2)
!5892 = distinct !{!5892, !5879}
!5893 = !DILocation(line: 192, column: 1, scope: !5868)
!5894 = distinct !DISubprogram(name: "put_ebml_size_unknown", scope: !1126, file: !1126, line: 199, type: !5895, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{null, !1332, !1053}
!5897 = !DILocalVariable(name: "pb", arg: 1, scope: !5894, file: !1126, line: 199, type: !1332)
!5898 = !DILocation(line: 199, column: 48, scope: !5894)
!5899 = !DILocalVariable(name: "bytes", arg: 2, scope: !5894, file: !1126, line: 199, type: !1053)
!5900 = !DILocation(line: 199, column: 56, scope: !5894)
!5901 = !DILocation(line: 201, column: 5, scope: !5894)
!5902 = distinct !{!5902, !5901}
!5903 = !DILocation(line: 201, column: 16, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !5905, file: !1126, discriminator: 1)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !1126, line: 201, column: 14)
!5906 = distinct !DILexicalBlock(scope: !5894, file: !1126, line: 201, column: 8)
!5907 = !DILocation(line: 201, column: 22, scope: !5904)
!5908 = !DILocation(line: 201, column: 14, scope: !5904)
!5909 = !DILocation(line: 201, column: 31, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !5911, file: !1126, discriminator: 2)
!5911 = distinct !DILexicalBlock(scope: !5905, file: !1126, line: 201, column: 29)
!5912 = !DILocation(line: 201, column: 92, scope: !5913)
!5913 = !DILexicalBlockFile(scope: !5910, file: !1126, discriminator: 4)
!5914 = !DILocation(line: 201, column: 92, scope: !5910)
!5915 = !DILocation(line: 201, column: 103, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !5906, file: !1126, discriminator: 3)
!5917 = !DILocation(line: 202, column: 13, scope: !5894)
!5918 = !DILocation(line: 202, column: 26, scope: !5894)
!5919 = !DILocation(line: 202, column: 23, scope: !5894)
!5920 = !DILocation(line: 202, column: 5, scope: !5894)
!5921 = !DILocation(line: 203, column: 15, scope: !5894)
!5922 = !DILocation(line: 203, column: 25, scope: !5894)
!5923 = !DILocation(line: 203, column: 31, scope: !5894)
!5924 = !DILocation(line: 203, column: 5, scope: !5894)
!5925 = !DILocation(line: 204, column: 1, scope: !5894)
!5926 = distinct !DISubprogram(name: "ebml_id_size", scope: !1126, file: !1126, line: 182, type: !5927, isLocal: true, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{!1053, !1050}
!5929 = !DILocalVariable(name: "id", arg: 1, scope: !5926, file: !1126, line: 182, type: !1050)
!5930 = !DILocation(line: 182, column: 38, scope: !5926)
!5931 = !DILocation(line: 184, column: 34, scope: !5926)
!5932 = !DILocation(line: 184, column: 37, scope: !5926)
!5933 = !DILocation(line: 184, column: 41, scope: !5926)
!5934 = !DILocation(line: 184, column: 19, scope: !5926)
!5935 = !DILocation(line: 184, column: 17, scope: !5926)
!5936 = !DILocation(line: 184, column: 46, scope: !5926)
!5937 = !DILocation(line: 184, column: 51, scope: !5926)
!5938 = !DILocation(line: 184, column: 55, scope: !5926)
!5939 = !DILocation(line: 184, column: 5, scope: !5926)
!5940 = distinct !DISubprogram(name: "put_ebml_num", scope: !1126, file: !1126, line: 223, type: !5941, isLocal: true, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{null, !1332, !1039, !1053}
!5943 = !DILocalVariable(name: "pb", arg: 1, scope: !5940, file: !1126, line: 223, type: !1332)
!5944 = !DILocation(line: 223, column: 39, scope: !5940)
!5945 = !DILocalVariable(name: "num", arg: 2, scope: !5940, file: !1126, line: 223, type: !1039)
!5946 = !DILocation(line: 223, column: 52, scope: !5940)
!5947 = !DILocalVariable(name: "bytes", arg: 3, scope: !5940, file: !1126, line: 223, type: !1053)
!5948 = !DILocation(line: 223, column: 61, scope: !5940)
!5949 = !DILocalVariable(name: "i", scope: !5940, file: !1126, line: 225, type: !1053)
!5950 = !DILocation(line: 225, column: 9, scope: !5940)
!5951 = !DILocalVariable(name: "needed_bytes", scope: !5940, file: !1126, line: 225, type: !1053)
!5952 = !DILocation(line: 225, column: 12, scope: !5940)
!5953 = !DILocation(line: 225, column: 41, scope: !5940)
!5954 = !DILocation(line: 225, column: 27, scope: !5940)
!5955 = !DILocation(line: 228, column: 5, scope: !5940)
!5956 = distinct !{!5956, !5955}
!5957 = !DILocation(line: 228, column: 16, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !5959, file: !1126, discriminator: 1)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !1126, line: 228, column: 14)
!5960 = distinct !DILexicalBlock(scope: !5940, file: !1126, line: 228, column: 8)
!5961 = !DILocation(line: 228, column: 20, scope: !5958)
!5962 = !DILocation(line: 228, column: 14, scope: !5958)
!5963 = !DILocation(line: 228, column: 43, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5965, file: !1126, discriminator: 2)
!5965 = distinct !DILexicalBlock(scope: !5959, file: !1126, line: 228, column: 41)
!5966 = !DILocation(line: 228, column: 104, scope: !5967)
!5967 = !DILexicalBlockFile(scope: !5964, file: !1126, discriminator: 4)
!5968 = !DILocation(line: 228, column: 104, scope: !5964)
!5969 = !DILocation(line: 228, column: 115, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !5960, file: !1126, discriminator: 3)
!5971 = !DILocation(line: 230, column: 9, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5940, file: !1126, line: 230, column: 9)
!5973 = !DILocation(line: 230, column: 15, scope: !5972)
!5974 = !DILocation(line: 230, column: 9, scope: !5940)
!5975 = !DILocation(line: 232, column: 17, scope: !5972)
!5976 = !DILocation(line: 232, column: 15, scope: !5972)
!5977 = !DILocation(line: 232, column: 9, scope: !5972)
!5978 = !DILocation(line: 235, column: 5, scope: !5940)
!5979 = distinct !{!5979, !5978}
!5980 = !DILocation(line: 235, column: 16, scope: !5981)
!5981 = !DILexicalBlockFile(scope: !5982, file: !1126, discriminator: 1)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !1126, line: 235, column: 14)
!5983 = distinct !DILexicalBlock(scope: !5940, file: !1126, line: 235, column: 8)
!5984 = !DILocation(line: 235, column: 25, scope: !5981)
!5985 = !DILocation(line: 235, column: 22, scope: !5981)
!5986 = !DILocation(line: 235, column: 14, scope: !5981)
!5987 = !DILocation(line: 235, column: 42, scope: !5988)
!5988 = !DILexicalBlockFile(scope: !5989, file: !1126, discriminator: 2)
!5989 = distinct !DILexicalBlock(scope: !5982, file: !1126, line: 235, column: 40)
!5990 = !DILocation(line: 235, column: 103, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !5988, file: !1126, discriminator: 4)
!5992 = !DILocation(line: 235, column: 103, scope: !5988)
!5993 = !DILocation(line: 235, column: 114, scope: !5994)
!5994 = !DILexicalBlockFile(scope: !5983, file: !1126, discriminator: 3)
!5995 = !DILocation(line: 237, column: 20, scope: !5940)
!5996 = !DILocation(line: 237, column: 26, scope: !5940)
!5997 = !DILocation(line: 237, column: 17, scope: !5940)
!5998 = !DILocation(line: 237, column: 9, scope: !5940)
!5999 = !DILocation(line: 238, column: 14, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5940, file: !1126, line: 238, column: 5)
!6001 = !DILocation(line: 238, column: 20, scope: !6000)
!6002 = !DILocation(line: 238, column: 12, scope: !6000)
!6003 = !DILocation(line: 238, column: 10, scope: !6000)
!6004 = !DILocation(line: 238, column: 25, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !6006, file: !1126, discriminator: 1)
!6006 = distinct !DILexicalBlock(scope: !6000, file: !1126, line: 238, column: 5)
!6007 = !DILocation(line: 238, column: 27, scope: !6005)
!6008 = !DILocation(line: 238, column: 5, scope: !6005)
!6009 = !DILocation(line: 239, column: 17, scope: !6006)
!6010 = !DILocation(line: 239, column: 31, scope: !6006)
!6011 = !DILocation(line: 239, column: 38, scope: !6006)
!6012 = !DILocation(line: 239, column: 40, scope: !6006)
!6013 = !DILocation(line: 239, column: 35, scope: !6006)
!6014 = !DILocation(line: 239, column: 21, scope: !6006)
!6015 = !DILocation(line: 239, column: 9, scope: !6006)
!6016 = !DILocation(line: 238, column: 34, scope: !6017)
!6017 = !DILexicalBlockFile(scope: !6006, file: !1126, discriminator: 2)
!6018 = !DILocation(line: 238, column: 5, scope: !6017)
!6019 = distinct !{!6019, !6020}
!6020 = !DILocation(line: 238, column: 5, scope: !5940)
!6021 = !DILocation(line: 240, column: 1, scope: !5940)
!6022 = distinct !DISubprogram(name: "mkv_write_track", scope: !1126, file: !1126, line: 1178, type: !6023, isLocal: true, isDefinition: true, scopeLine: 1180, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!1053, !2438, !2459, !1053, !1332, !1053}
!6025 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !6026)
!6026 = distinct !DILocation(line: 1439, column: 43, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !1126, line: 1438, column: 67)
!6028 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1438, column: 9)
!6029 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !6030)
!6030 = distinct !DILocation(line: 1413, column: 45, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1314, column: 30)
!6032 = !DILocalVariable(name: "q", arg: 1, scope: !6033, file: !1077, line: 159, type: !1076)
!6033 = distinct !DISubprogram(name: "av_inv_q", scope: !1077, file: !1077, line: 159, type: !6034, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!1076, !1076}
!6036 = !DILocation(line: 159, column: 77, scope: !6033, inlinedAt: !6037)
!6037 = distinct !DILocation(line: 1320, column: 24, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6039, file: !1126, discriminator: 1)
!6039 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1319, column: 13)
!6040 = !DILocalVariable(name: "r", scope: !6033, file: !1077, line: 161, type: !1076)
!6041 = !DILocation(line: 161, column: 16, scope: !6033, inlinedAt: !6037)
!6042 = !DILocalVariable(name: "s", arg: 1, scope: !6022, file: !1126, line: 1178, type: !2438)
!6043 = !DILocation(line: 1178, column: 45, scope: !6022)
!6044 = !DILocalVariable(name: "mkv", arg: 2, scope: !6022, file: !1126, line: 1178, type: !2459)
!6045 = !DILocation(line: 1178, column: 68, scope: !6022)
!6046 = !DILocalVariable(name: "i", arg: 3, scope: !6022, file: !1126, line: 1179, type: !1053)
!6047 = !DILocation(line: 1179, column: 32, scope: !6022)
!6048 = !DILocalVariable(name: "pb", arg: 4, scope: !6022, file: !1126, line: 1179, type: !1332)
!6049 = !DILocation(line: 1179, column: 48, scope: !6022)
!6050 = !DILocalVariable(name: "default_stream_exists", arg: 5, scope: !6022, file: !1126, line: 1179, type: !1053)
!6051 = !DILocation(line: 1179, column: 56, scope: !6022)
!6052 = !DILocalVariable(name: "st", scope: !6022, file: !1126, line: 1181, type: !1398)
!6053 = !DILocation(line: 1181, column: 15, scope: !6022)
!6054 = !DILocation(line: 1181, column: 31, scope: !6022)
!6055 = !DILocation(line: 1181, column: 20, scope: !6022)
!6056 = !DILocation(line: 1181, column: 23, scope: !6022)
!6057 = !DILocalVariable(name: "par", scope: !6022, file: !1126, line: 1182, type: !1713)
!6058 = !DILocation(line: 1182, column: 24, scope: !6022)
!6059 = !DILocation(line: 1182, column: 30, scope: !6022)
!6060 = !DILocation(line: 1182, column: 34, scope: !6022)
!6061 = !DILocalVariable(name: "subinfo", scope: !6022, file: !1126, line: 1183, type: !2468)
!6062 = !DILocation(line: 1183, column: 17, scope: !6022)
!6063 = !DILocalVariable(name: "track", scope: !6022, file: !1126, line: 1183, type: !2468)
!6064 = !DILocation(line: 1183, column: 26, scope: !6022)
!6065 = !DILocalVariable(name: "native_id", scope: !6022, file: !1126, line: 1184, type: !1053)
!6066 = !DILocation(line: 1184, column: 9, scope: !6022)
!6067 = !DILocalVariable(name: "qt_id", scope: !6022, file: !1126, line: 1185, type: !1053)
!6068 = !DILocation(line: 1185, column: 9, scope: !6022)
!6069 = !DILocalVariable(name: "bit_depth", scope: !6022, file: !1126, line: 1186, type: !1053)
!6070 = !DILocation(line: 1186, column: 9, scope: !6022)
!6071 = !DILocation(line: 1186, column: 44, scope: !6022)
!6072 = !DILocation(line: 1186, column: 49, scope: !6022)
!6073 = !DILocation(line: 1186, column: 21, scope: !6022)
!6074 = !DILocalVariable(name: "sample_rate", scope: !6022, file: !1126, line: 1187, type: !1053)
!6075 = !DILocation(line: 1187, column: 9, scope: !6022)
!6076 = !DILocation(line: 1187, column: 23, scope: !6022)
!6077 = !DILocation(line: 1187, column: 28, scope: !6022)
!6078 = !DILocalVariable(name: "output_sample_rate", scope: !6022, file: !1126, line: 1188, type: !1053)
!6079 = !DILocation(line: 1188, column: 9, scope: !6022)
!6080 = !DILocalVariable(name: "display_width_div", scope: !6022, file: !1126, line: 1189, type: !1053)
!6081 = !DILocation(line: 1189, column: 9, scope: !6022)
!6082 = !DILocalVariable(name: "display_height_div", scope: !6022, file: !1126, line: 1190, type: !1053)
!6083 = !DILocation(line: 1190, column: 9, scope: !6022)
!6084 = !DILocalVariable(name: "j", scope: !6022, file: !1126, line: 1191, type: !1053)
!6085 = !DILocation(line: 1191, column: 9, scope: !6022)
!6086 = !DILocalVariable(name: "ret", scope: !6022, file: !1126, line: 1191, type: !1053)
!6087 = !DILocation(line: 1191, column: 12, scope: !6022)
!6088 = !DILocalVariable(name: "tag", scope: !6022, file: !1126, line: 1192, type: !2573)
!6089 = !DILocation(line: 1192, column: 24, scope: !6022)
!6090 = !DILocation(line: 1194, column: 9, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1194, column: 9)
!6092 = !DILocation(line: 1194, column: 14, scope: !6091)
!6093 = !DILocation(line: 1194, column: 25, scope: !6091)
!6094 = !DILocation(line: 1194, column: 9, scope: !6022)
!6095 = !DILocation(line: 1195, column: 9, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !1126, line: 1194, column: 53)
!6097 = !DILocation(line: 1195, column: 14, scope: !6096)
!6098 = !DILocation(line: 1195, column: 31, scope: !6096)
!6099 = !DILocation(line: 1196, column: 9, scope: !6096)
!6100 = !DILocation(line: 1199, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1199, column: 9)
!6102 = !DILocation(line: 1199, column: 14, scope: !6101)
!6103 = !DILocation(line: 1199, column: 25, scope: !6101)
!6104 = !DILocation(line: 1199, column: 9, scope: !6022)
!6105 = !DILocation(line: 1200, column: 14, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !1126, line: 1200, column: 13)
!6107 = distinct !DILexicalBlock(scope: !6101, file: !1126, line: 1199, column: 48)
!6108 = !DILocation(line: 1200, column: 24, scope: !6106)
!6109 = !DILocation(line: 1200, column: 27, scope: !6110)
!6110 = !DILexicalBlockFile(scope: !6106, file: !1126, discriminator: 1)
!6111 = !DILocation(line: 1200, column: 32, scope: !6110)
!6112 = !DILocation(line: 1200, column: 41, scope: !6110)
!6113 = !DILocation(line: 1200, column: 13, scope: !6110)
!6114 = !DILocation(line: 1201, column: 17, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !1126, line: 1201, column: 17)
!6116 = distinct !DILexicalBlock(scope: !6106, file: !1126, line: 1200, column: 68)
!6117 = !DILocation(line: 1201, column: 22, scope: !6115)
!6118 = !DILocation(line: 1201, column: 17, scope: !6116)
!6119 = !DILocation(line: 1202, column: 29, scope: !6115)
!6120 = !DILocation(line: 1202, column: 34, scope: !6115)
!6121 = !DILocation(line: 1202, column: 27, scope: !6115)
!6122 = !DILocation(line: 1202, column: 17, scope: !6115)
!6123 = !DILocation(line: 1204, column: 53, scope: !6115)
!6124 = !DILocation(line: 1204, column: 58, scope: !6115)
!6125 = !DILocation(line: 1204, column: 29, scope: !6115)
!6126 = !DILocation(line: 1204, column: 66, scope: !6115)
!6127 = !DILocation(line: 1204, column: 27, scope: !6115)
!6128 = !DILocation(line: 1205, column: 9, scope: !6116)
!6129 = !DILocation(line: 1206, column: 14, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6107, file: !1126, line: 1206, column: 13)
!6131 = !DILocation(line: 1206, column: 13, scope: !6107)
!6132 = !DILocation(line: 1207, column: 25, scope: !6130)
!6133 = !DILocation(line: 1207, column: 30, scope: !6130)
!6134 = !DILocation(line: 1207, column: 23, scope: !6130)
!6135 = !DILocation(line: 1207, column: 13, scope: !6130)
!6136 = !DILocation(line: 1208, column: 5, scope: !6107)
!6137 = !DILocation(line: 1210, column: 9, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1210, column: 9)
!6139 = !DILocation(line: 1210, column: 14, scope: !6138)
!6140 = !DILocation(line: 1210, column: 23, scope: !6138)
!6141 = !DILocation(line: 1210, column: 9, scope: !6022)
!6142 = !DILocation(line: 1211, column: 36, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !1126, line: 1210, column: 43)
!6144 = !DILocation(line: 1211, column: 39, scope: !6143)
!6145 = !DILocation(line: 1211, column: 44, scope: !6143)
!6146 = !DILocation(line: 1211, column: 55, scope: !6143)
!6147 = !DILocation(line: 1211, column: 60, scope: !6143)
!6148 = !DILocation(line: 1211, column: 15, scope: !6143)
!6149 = !DILocation(line: 1211, column: 13, scope: !6143)
!6150 = !DILocation(line: 1213, column: 13, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6143, file: !1126, line: 1213, column: 13)
!6152 = !DILocation(line: 1213, column: 17, scope: !6151)
!6153 = !DILocation(line: 1213, column: 13, scope: !6143)
!6154 = !DILocation(line: 1214, column: 20, scope: !6151)
!6155 = !DILocation(line: 1214, column: 13, scope: !6151)
!6156 = !DILocation(line: 1215, column: 5, scope: !6143)
!6157 = !DILocation(line: 1217, column: 31, scope: !6022)
!6158 = !DILocation(line: 1217, column: 13, scope: !6022)
!6159 = !DILocation(line: 1217, column: 13, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !6022, file: !1126, discriminator: 1)
!6161 = !DILocation(line: 1218, column: 20, scope: !6022)
!6162 = !DILocation(line: 1219, column: 20, scope: !6022)
!6163 = !DILocation(line: 1219, column: 25, scope: !6022)
!6164 = !DILocation(line: 1219, column: 35, scope: !6160)
!6165 = !DILocation(line: 1219, column: 40, scope: !6160)
!6166 = !DILocation(line: 1219, column: 20, scope: !6160)
!6167 = !DILocation(line: 1219, column: 60, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6022, file: !1126, discriminator: 2)
!6169 = !DILocation(line: 1219, column: 62, scope: !6168)
!6170 = !DILocation(line: 1219, column: 20, scope: !6168)
!6171 = !DILocation(line: 1219, column: 20, scope: !6172)
!6172 = !DILexicalBlockFile(scope: !6022, file: !1126, discriminator: 3)
!6173 = !DILocation(line: 1218, column: 5, scope: !6160)
!6174 = !DILocation(line: 1220, column: 20, scope: !6022)
!6175 = !DILocation(line: 1221, column: 20, scope: !6022)
!6176 = !DILocation(line: 1221, column: 25, scope: !6022)
!6177 = !DILocation(line: 1221, column: 35, scope: !6160)
!6178 = !DILocation(line: 1221, column: 40, scope: !6160)
!6179 = !DILocation(line: 1221, column: 20, scope: !6160)
!6180 = !DILocation(line: 1221, column: 60, scope: !6168)
!6181 = !DILocation(line: 1221, column: 62, scope: !6168)
!6182 = !DILocation(line: 1221, column: 20, scope: !6168)
!6183 = !DILocation(line: 1221, column: 20, scope: !6172)
!6184 = !DILocation(line: 1220, column: 5, scope: !6160)
!6185 = !DILocation(line: 1222, column: 20, scope: !6022)
!6186 = !DILocation(line: 1222, column: 5, scope: !6022)
!6187 = !DILocation(line: 1224, column: 28, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1224, column: 9)
!6189 = !DILocation(line: 1224, column: 32, scope: !6188)
!6190 = !DILocation(line: 1224, column: 16, scope: !6188)
!6191 = !DILocation(line: 1224, column: 14, scope: !6188)
!6192 = !DILocation(line: 1224, column: 9, scope: !6022)
!6193 = !DILocation(line: 1225, column: 25, scope: !6188)
!6194 = !DILocation(line: 1225, column: 37, scope: !6188)
!6195 = !DILocation(line: 1225, column: 42, scope: !6188)
!6196 = !DILocation(line: 1225, column: 9, scope: !6188)
!6197 = !DILocation(line: 1226, column: 23, scope: !6022)
!6198 = !DILocation(line: 1226, column: 27, scope: !6022)
!6199 = !DILocation(line: 1226, column: 11, scope: !6022)
!6200 = !DILocation(line: 1226, column: 9, scope: !6022)
!6201 = !DILocation(line: 1227, column: 9, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1227, column: 9)
!6203 = !DILocation(line: 1227, column: 14, scope: !6202)
!6204 = !DILocation(line: 1227, column: 19, scope: !6202)
!6205 = !DILocation(line: 1227, column: 27, scope: !6202)
!6206 = !DILocation(line: 1227, column: 30, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6202, file: !1126, discriminator: 1)
!6208 = !DILocation(line: 1227, column: 35, scope: !6207)
!6209 = !DILocation(line: 1227, column: 44, scope: !6207)
!6210 = !DILocation(line: 1227, column: 9, scope: !6207)
!6211 = !DILocation(line: 1228, column: 25, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6202, file: !1126, line: 1227, column: 67)
!6213 = !DILocation(line: 1228, column: 39, scope: !6212)
!6214 = !DILocation(line: 1228, column: 43, scope: !6212)
!6215 = !DILocation(line: 1228, column: 46, scope: !6216)
!6216 = !DILexicalBlockFile(scope: !6212, file: !1126, discriminator: 1)
!6217 = !DILocation(line: 1228, column: 51, scope: !6216)
!6218 = !DILocation(line: 1228, column: 39, scope: !6216)
!6219 = !DILocation(line: 1228, column: 59, scope: !6220)
!6220 = !DILexicalBlockFile(scope: !6212, file: !1126, discriminator: 2)
!6221 = !DILocation(line: 1228, column: 64, scope: !6220)
!6222 = !DILocation(line: 1228, column: 39, scope: !6220)
!6223 = !DILocation(line: 1228, column: 39, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6212, file: !1126, discriminator: 3)
!6225 = !DILocation(line: 1228, column: 39, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6212, file: !1126, discriminator: 4)
!6227 = !DILocation(line: 1228, column: 9, scope: !6226)
!6228 = !DILocation(line: 1229, column: 5, scope: !6212)
!6229 = !DILocation(line: 1229, column: 16, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6231, file: !1126, discriminator: 1)
!6231 = distinct !DILexicalBlock(scope: !6202, file: !1126, line: 1229, column: 16)
!6232 = !DILocation(line: 1229, column: 20, scope: !6230)
!6233 = !DILocation(line: 1229, column: 23, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6231, file: !1126, discriminator: 2)
!6235 = !DILocation(line: 1229, column: 28, scope: !6234)
!6236 = !DILocation(line: 1229, column: 16, scope: !6234)
!6237 = !DILocation(line: 1230, column: 25, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6231, file: !1126, line: 1229, column: 35)
!6239 = !DILocation(line: 1230, column: 39, scope: !6238)
!6240 = !DILocation(line: 1230, column: 44, scope: !6238)
!6241 = !DILocation(line: 1230, column: 9, scope: !6238)
!6242 = !DILocation(line: 1231, column: 5, scope: !6238)
!6243 = !DILocation(line: 1235, column: 9, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1235, column: 9)
!6245 = !DILocation(line: 1235, column: 31, scope: !6244)
!6246 = !DILocation(line: 1235, column: 36, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6244, file: !1126, discriminator: 1)
!6248 = !DILocation(line: 1235, column: 40, scope: !6247)
!6249 = !DILocation(line: 1235, column: 52, scope: !6247)
!6250 = !DILocation(line: 1235, column: 9, scope: !6247)
!6251 = !DILocation(line: 1236, column: 23, scope: !6244)
!6252 = !DILocation(line: 1236, column: 36, scope: !6244)
!6253 = !DILocation(line: 1236, column: 40, scope: !6244)
!6254 = !DILocation(line: 1236, column: 52, scope: !6244)
!6255 = !DILocation(line: 1236, column: 34, scope: !6244)
!6256 = !DILocation(line: 1236, column: 33, scope: !6244)
!6257 = !DILocation(line: 1236, column: 9, scope: !6244)
!6258 = !DILocation(line: 1238, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1238, column: 9)
!6260 = !DILocation(line: 1238, column: 13, scope: !6259)
!6261 = !DILocation(line: 1238, column: 25, scope: !6259)
!6262 = !DILocation(line: 1238, column: 9, scope: !6022)
!6263 = !DILocation(line: 1239, column: 23, scope: !6259)
!6264 = !DILocation(line: 1239, column: 9, scope: !6259)
!6265 = !DILocation(line: 1241, column: 9, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1241, column: 9)
!6267 = !DILocation(line: 1241, column: 14, scope: !6266)
!6268 = !DILocation(line: 1241, column: 19, scope: !6266)
!6269 = !DILocation(line: 1241, column: 9, scope: !6022)
!6270 = !DILocalVariable(name: "codec_id", scope: !6271, file: !1126, line: 1242, type: !1131)
!6271 = distinct !DILexicalBlock(scope: !6266, file: !1126, line: 1241, column: 28)
!6272 = !DILocation(line: 1242, column: 21, scope: !6271)
!6273 = !DILocation(line: 1243, column: 13, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !1126, line: 1243, column: 13)
!6275 = !DILocation(line: 1243, column: 18, scope: !6274)
!6276 = !DILocation(line: 1243, column: 29, scope: !6274)
!6277 = !DILocation(line: 1243, column: 13, scope: !6271)
!6278 = !DILocation(line: 1244, column: 20, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !1126, line: 1244, column: 13)
!6280 = distinct !DILexicalBlock(scope: !6274, file: !1126, line: 1243, column: 55)
!6281 = !DILocation(line: 1244, column: 18, scope: !6279)
!6282 = !DILocation(line: 1244, column: 44, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !6284, file: !1126, discriminator: 1)
!6284 = distinct !DILexicalBlock(scope: !6279, file: !1126, line: 1244, column: 13)
!6285 = !DILocation(line: 1244, column: 25, scope: !6283)
!6286 = !DILocation(line: 1244, column: 47, scope: !6283)
!6287 = !DILocation(line: 1244, column: 50, scope: !6283)
!6288 = !DILocation(line: 1244, column: 13, scope: !6283)
!6289 = !DILocation(line: 1245, column: 40, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !1126, line: 1245, column: 21)
!6291 = distinct !DILexicalBlock(scope: !6284, file: !1126, line: 1244, column: 76)
!6292 = !DILocation(line: 1245, column: 21, scope: !6290)
!6293 = !DILocation(line: 1245, column: 43, scope: !6290)
!6294 = !DILocation(line: 1245, column: 49, scope: !6290)
!6295 = !DILocation(line: 1245, column: 54, scope: !6290)
!6296 = !DILocation(line: 1245, column: 46, scope: !6290)
!6297 = !DILocation(line: 1245, column: 21, scope: !6291)
!6298 = !DILocation(line: 1246, column: 51, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6290, file: !1126, line: 1245, column: 64)
!6300 = !DILocation(line: 1246, column: 32, scope: !6299)
!6301 = !DILocation(line: 1246, column: 54, scope: !6299)
!6302 = !DILocation(line: 1246, column: 30, scope: !6299)
!6303 = !DILocation(line: 1247, column: 31, scope: !6299)
!6304 = !DILocation(line: 1248, column: 21, scope: !6299)
!6305 = !DILocation(line: 1250, column: 13, scope: !6291)
!6306 = !DILocation(line: 1244, column: 72, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6284, file: !1126, discriminator: 2)
!6308 = !DILocation(line: 1244, column: 13, scope: !6307)
!6309 = distinct !{!6309, !6310}
!6310 = !DILocation(line: 1244, column: 13, scope: !6280)
!6311 = !DILocation(line: 1251, column: 9, scope: !6280)
!6312 = !DILocation(line: 1251, column: 20, scope: !6313)
!6313 = !DILexicalBlockFile(scope: !6314, file: !1126, discriminator: 1)
!6314 = distinct !DILexicalBlock(scope: !6274, file: !1126, line: 1251, column: 20)
!6315 = !DILocation(line: 1251, column: 25, scope: !6313)
!6316 = !DILocation(line: 1251, column: 34, scope: !6313)
!6317 = !DILocation(line: 1252, column: 17, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !1126, line: 1252, column: 17)
!6319 = distinct !DILexicalBlock(scope: !6314, file: !1126, line: 1251, column: 57)
!6320 = !DILocation(line: 1252, column: 21, scope: !6318)
!6321 = !DILocation(line: 1252, column: 33, scope: !6318)
!6322 = !DILocation(line: 1252, column: 17, scope: !6319)
!6323 = !DILocation(line: 1253, column: 26, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6318, file: !1126, line: 1252, column: 44)
!6325 = !DILocation(line: 1254, column: 27, scope: !6324)
!6326 = !DILocation(line: 1255, column: 13, scope: !6324)
!6327 = !DILocation(line: 1255, column: 24, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6329, file: !1126, discriminator: 1)
!6329 = distinct !DILexicalBlock(scope: !6318, file: !1126, line: 1255, column: 24)
!6330 = !DILocation(line: 1255, column: 28, scope: !6328)
!6331 = !DILocation(line: 1255, column: 40, scope: !6328)
!6332 = !DILocation(line: 1256, column: 26, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !1126, line: 1255, column: 51)
!6334 = !DILocation(line: 1257, column: 27, scope: !6333)
!6335 = !DILocation(line: 1258, column: 13, scope: !6333)
!6336 = !DILocation(line: 1258, column: 24, scope: !6337)
!6337 = !DILexicalBlockFile(scope: !6338, file: !1126, discriminator: 1)
!6338 = distinct !DILexicalBlock(scope: !6329, file: !1126, line: 1258, column: 24)
!6339 = !DILocation(line: 1258, column: 28, scope: !6337)
!6340 = !DILocation(line: 1258, column: 40, scope: !6337)
!6341 = !DILocation(line: 1259, column: 26, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !1126, line: 1258, column: 51)
!6343 = !DILocation(line: 1260, column: 27, scope: !6342)
!6344 = !DILocation(line: 1261, column: 13, scope: !6342)
!6345 = !DILocation(line: 1262, column: 26, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6338, file: !1126, line: 1261, column: 20)
!6347 = !DILocation(line: 1263, column: 27, scope: !6346)
!6348 = !DILocation(line: 1265, column: 9, scope: !6319)
!6349 = !DILocation(line: 1267, column: 14, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6271, file: !1126, line: 1267, column: 13)
!6351 = !DILocation(line: 1267, column: 13, scope: !6271)
!6352 = !DILocation(line: 1268, column: 20, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6350, file: !1126, line: 1267, column: 25)
!6354 = !DILocation(line: 1268, column: 13, scope: !6353)
!6355 = !DILocation(line: 1270, column: 13, scope: !6353)
!6356 = !DILocation(line: 1273, column: 25, scope: !6271)
!6357 = !DILocation(line: 1273, column: 35, scope: !6271)
!6358 = !DILocation(line: 1273, column: 9, scope: !6271)
!6359 = !DILocation(line: 1274, column: 5, scope: !6271)
!6360 = !DILocation(line: 1277, column: 13, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !1126, line: 1277, column: 13)
!6362 = distinct !DILexicalBlock(scope: !6266, file: !1126, line: 1274, column: 12)
!6363 = !DILocation(line: 1277, column: 18, scope: !6361)
!6364 = !DILocation(line: 1277, column: 27, scope: !6361)
!6365 = !DILocation(line: 1277, column: 51, scope: !6361)
!6366 = !DILocation(line: 1277, column: 54, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !6361, file: !1126, discriminator: 1)
!6368 = !DILocation(line: 1277, column: 59, scope: !6367)
!6369 = !DILocation(line: 1277, column: 13, scope: !6367)
!6370 = !DILocation(line: 1278, column: 20, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !1126, line: 1278, column: 13)
!6372 = distinct !DILexicalBlock(scope: !6361, file: !1126, line: 1277, column: 70)
!6373 = !DILocation(line: 1278, column: 18, scope: !6371)
!6374 = !DILocation(line: 1278, column: 43, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !6376, file: !1126, discriminator: 1)
!6376 = distinct !DILexicalBlock(scope: !6371, file: !1126, line: 1278, column: 13)
!6377 = !DILocation(line: 1278, column: 25, scope: !6375)
!6378 = !DILocation(line: 1278, column: 46, scope: !6375)
!6379 = !DILocation(line: 1278, column: 49, scope: !6375)
!6380 = !DILocation(line: 1278, column: 13, scope: !6375)
!6381 = !DILocation(line: 1279, column: 39, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !1126, line: 1279, column: 21)
!6383 = distinct !DILexicalBlock(scope: !6376, file: !1126, line: 1278, column: 75)
!6384 = !DILocation(line: 1279, column: 21, scope: !6382)
!6385 = !DILocation(line: 1279, column: 42, scope: !6382)
!6386 = !DILocation(line: 1279, column: 48, scope: !6382)
!6387 = !DILocation(line: 1279, column: 53, scope: !6382)
!6388 = !DILocation(line: 1279, column: 45, scope: !6382)
!6389 = !DILocation(line: 1279, column: 62, scope: !6382)
!6390 = !DILocation(line: 1279, column: 65, scope: !6391)
!6391 = !DILexicalBlockFile(scope: !6382, file: !1126, discriminator: 1)
!6392 = !DILocation(line: 1279, column: 70, scope: !6391)
!6393 = !DILocation(line: 1279, column: 79, scope: !6391)
!6394 = !DILocation(line: 1279, column: 21, scope: !6391)
!6395 = !DILocation(line: 1280, column: 37, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6382, file: !1126, line: 1279, column: 100)
!6397 = !DILocation(line: 1280, column: 65, scope: !6396)
!6398 = !DILocation(line: 1280, column: 47, scope: !6396)
!6399 = !DILocation(line: 1280, column: 68, scope: !6396)
!6400 = !DILocation(line: 1280, column: 21, scope: !6396)
!6401 = !DILocation(line: 1281, column: 31, scope: !6396)
!6402 = !DILocation(line: 1282, column: 21, scope: !6396)
!6403 = !DILocation(line: 1284, column: 13, scope: !6383)
!6404 = !DILocation(line: 1278, column: 71, scope: !6405)
!6405 = !DILexicalBlockFile(scope: !6376, file: !1126, discriminator: 2)
!6406 = !DILocation(line: 1278, column: 13, scope: !6405)
!6407 = distinct !{!6407, !6408}
!6408 = !DILocation(line: 1278, column: 13, scope: !6372)
!6409 = !DILocation(line: 1285, column: 9, scope: !6372)
!6410 = !DILocation(line: 1286, column: 17, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !1126, line: 1286, column: 17)
!6412 = distinct !DILexicalBlock(scope: !6361, file: !1126, line: 1285, column: 16)
!6413 = !DILocation(line: 1286, column: 22, scope: !6411)
!6414 = !DILocation(line: 1286, column: 17, scope: !6412)
!6415 = !DILocation(line: 1287, column: 27, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6411, file: !1126, line: 1286, column: 37)
!6417 = !DILocation(line: 1288, column: 13, scope: !6416)
!6418 = !DILocation(line: 1289, column: 24, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6411, file: !1126, line: 1288, column: 20)
!6420 = !DILocation(line: 1289, column: 17, scope: !6419)
!6421 = !DILocation(line: 1291, column: 17, scope: !6419)
!6422 = !DILocation(line: 1296, column: 9, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1296, column: 9)
!6424 = !DILocation(line: 1296, column: 14, scope: !6423)
!6425 = !DILocation(line: 1296, column: 25, scope: !6423)
!6426 = !DILocation(line: 1296, column: 47, scope: !6423)
!6427 = !DILocation(line: 1296, column: 50, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !6423, file: !1126, discriminator: 1)
!6429 = !DILocation(line: 1296, column: 55, scope: !6428)
!6430 = !DILocation(line: 1296, column: 71, scope: !6428)
!6431 = !DILocation(line: 1296, column: 74, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !6423, file: !1126, discriminator: 2)
!6433 = !DILocation(line: 1296, column: 79, scope: !6432)
!6434 = !DILocation(line: 1296, column: 88, scope: !6432)
!6435 = !DILocation(line: 1296, column: 9, scope: !6432)
!6436 = !DILocalVariable(name: "codecdelay", scope: !6437, file: !1126, line: 1297, type: !1051)
!6437 = distinct !DILexicalBlock(scope: !6423, file: !1126, line: 1296, column: 109)
!6438 = !DILocation(line: 1297, column: 17, scope: !6437)
!6439 = !DILocation(line: 1297, column: 43, scope: !6437)
!6440 = !DILocation(line: 1297, column: 48, scope: !6437)
!6441 = !DILocation(line: 1298, column: 55, scope: !6437)
!6442 = !DILocation(line: 1299, column: 55, scope: !6437)
!6443 = !DILocation(line: 1297, column: 30, scope: !6437)
!6444 = !DILocation(line: 1300, column: 13, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6437, file: !1126, line: 1300, column: 13)
!6446 = !DILocation(line: 1300, column: 24, scope: !6445)
!6447 = !DILocation(line: 1300, column: 13, scope: !6437)
!6448 = !DILocation(line: 1301, column: 20, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6445, file: !1126, line: 1300, column: 29)
!6450 = !DILocation(line: 1301, column: 13, scope: !6449)
!6451 = !DILocation(line: 1302, column: 13, scope: !6449)
!6452 = !DILocation(line: 1308, column: 23, scope: !6437)
!6453 = !DILocation(line: 1308, column: 35, scope: !6437)
!6454 = !DILocation(line: 1308, column: 9, scope: !6437)
!6455 = !DILocation(line: 1309, column: 5, scope: !6437)
!6456 = !DILocation(line: 1310, column: 9, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6022, file: !1126, line: 1310, column: 9)
!6458 = !DILocation(line: 1310, column: 14, scope: !6457)
!6459 = !DILocation(line: 1310, column: 23, scope: !6457)
!6460 = !DILocation(line: 1310, column: 9, scope: !6022)
!6461 = !DILocation(line: 1311, column: 23, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6457, file: !1126, line: 1310, column: 44)
!6463 = !DILocation(line: 1311, column: 9, scope: !6462)
!6464 = !DILocation(line: 1312, column: 5, scope: !6462)
!6465 = !DILocation(line: 1314, column: 13, scope: !6022)
!6466 = !DILocation(line: 1314, column: 18, scope: !6022)
!6467 = !DILocation(line: 1314, column: 5, scope: !6022)
!6468 = !DILocation(line: 1316, column: 9, scope: !6031)
!6469 = !DILocation(line: 1316, column: 14, scope: !6031)
!6470 = !DILocation(line: 1316, column: 25, scope: !6031)
!6471 = !DILocation(line: 1317, column: 23, scope: !6031)
!6472 = !DILocation(line: 1317, column: 9, scope: !6031)
!6473 = !DILocation(line: 1319, column: 13, scope: !6039)
!6474 = !DILocation(line: 1319, column: 17, scope: !6039)
!6475 = !DILocation(line: 1319, column: 32, scope: !6039)
!6476 = !DILocation(line: 1319, column: 36, scope: !6039)
!6477 = !DILocation(line: 1319, column: 40, scope: !6039)
!6478 = !DILocation(line: 1319, column: 43, scope: !6038)
!6479 = !DILocation(line: 1319, column: 47, scope: !6038)
!6480 = !DILocation(line: 1319, column: 62, scope: !6038)
!6481 = !DILocation(line: 1319, column: 66, scope: !6038)
!6482 = !DILocation(line: 1320, column: 12, scope: !6039)
!6483 = !DILocation(line: 1320, column: 33, scope: !6038)
!6484 = !DILocation(line: 1320, column: 37, scope: !6038)
!6485 = !DILocation(line: 1320, column: 24, scope: !6038)
!6486 = !DILocation(line: 161, column: 20, scope: !6033, inlinedAt: !6037)
!6487 = !DILocation(line: 161, column: 24, scope: !6033, inlinedAt: !6037)
!6488 = !DILocation(line: 161, column: 31, scope: !6033, inlinedAt: !6037)
!6489 = !DILocation(line: 162, column: 12, scope: !6033, inlinedAt: !6037)
!6490 = !DILocation(line: 162, column: 5, scope: !6033, inlinedAt: !6037)
!6491 = !DILocation(line: 1320, column: 54, scope: !6038)
!6492 = !DILocation(line: 1320, column: 58, scope: !6038)
!6493 = !DILocation(line: 1320, column: 15, scope: !6038)
!6494 = !DILocation(line: 1320, column: 15, scope: !6495)
!6495 = !DILexicalBlockFile(scope: !6038, file: !1126, discriminator: 2)
!6496 = !DILocation(line: 1320, column: 69, scope: !6038)
!6497 = !DILocation(line: 1319, column: 13, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !6031, file: !1126, discriminator: 2)
!6499 = !DILocation(line: 1321, column: 27, scope: !6039)
!6500 = !DILocation(line: 1321, column: 56, scope: !6039)
!6501 = !DILocation(line: 1321, column: 60, scope: !6039)
!6502 = !DILocation(line: 1321, column: 75, scope: !6039)
!6503 = !DILocation(line: 1321, column: 54, scope: !6039)
!6504 = !DILocation(line: 1321, column: 81, scope: !6039)
!6505 = !DILocation(line: 1321, column: 85, scope: !6039)
!6506 = !DILocation(line: 1321, column: 100, scope: !6039)
!6507 = !DILocation(line: 1321, column: 79, scope: !6039)
!6508 = !DILocation(line: 1321, column: 13, scope: !6039)
!6509 = !DILocation(line: 1323, column: 14, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1323, column: 13)
!6511 = !DILocation(line: 1323, column: 24, scope: !6510)
!6512 = !DILocation(line: 1324, column: 54, scope: !6510)
!6513 = !DILocation(line: 1324, column: 59, scope: !6510)
!6514 = !DILocation(line: 1324, column: 13, scope: !6510)
!6515 = !DILocation(line: 1324, column: 69, scope: !6510)
!6516 = !DILocation(line: 1325, column: 52, scope: !6510)
!6517 = !DILocation(line: 1325, column: 57, scope: !6510)
!6518 = !DILocation(line: 1325, column: 16, scope: !6510)
!6519 = !DILocation(line: 1325, column: 67, scope: !6510)
!6520 = !DILocation(line: 1325, column: 70, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !6510, file: !1126, discriminator: 1)
!6522 = !DILocation(line: 1325, column: 75, scope: !6521)
!6523 = !DILocation(line: 1325, column: 84, scope: !6521)
!6524 = !DILocation(line: 1325, column: 109, scope: !6521)
!6525 = !DILocation(line: 1326, column: 14, scope: !6510)
!6526 = !DILocation(line: 1326, column: 19, scope: !6510)
!6527 = !DILocation(line: 1326, column: 28, scope: !6510)
!6528 = !DILocation(line: 1326, column: 48, scope: !6510)
!6529 = !DILocation(line: 1327, column: 14, scope: !6510)
!6530 = !DILocation(line: 1327, column: 19, scope: !6510)
!6531 = !DILocation(line: 1327, column: 28, scope: !6510)
!6532 = !DILocation(line: 1327, column: 48, scope: !6510)
!6533 = !DILocation(line: 1328, column: 14, scope: !6510)
!6534 = !DILocation(line: 1328, column: 19, scope: !6510)
!6535 = !DILocation(line: 1328, column: 28, scope: !6510)
!6536 = !DILocation(line: 1323, column: 13, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6031, file: !1126, discriminator: 1)
!6538 = !DILocation(line: 1329, column: 19, scope: !6510)
!6539 = !DILocation(line: 1329, column: 13, scope: !6510)
!6540 = !DILocation(line: 1331, column: 13, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1331, column: 13)
!6542 = !DILocation(line: 1331, column: 13, scope: !6031)
!6543 = !DILocation(line: 1332, column: 29, scope: !6541)
!6544 = !DILocation(line: 1332, column: 13, scope: !6541)
!6545 = !DILocation(line: 1333, column: 19, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !1126, line: 1333, column: 18)
!6547 = !DILocation(line: 1333, column: 18, scope: !6541)
!6548 = !DILocation(line: 1335, column: 29, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6546, file: !1126, line: 1333, column: 30)
!6550 = !DILocation(line: 1335, column: 13, scope: !6549)
!6551 = !DILocation(line: 1336, column: 25, scope: !6549)
!6552 = !DILocation(line: 1336, column: 13, scope: !6549)
!6553 = !DILocation(line: 1336, column: 18, scope: !6549)
!6554 = !DILocation(line: 1336, column: 28, scope: !6549)
!6555 = !DILocation(line: 1336, column: 38, scope: !6549)
!6556 = !DILocation(line: 1337, column: 13, scope: !6549)
!6557 = !DILocation(line: 1337, column: 16, scope: !6549)
!6558 = !DILocation(line: 1337, column: 26, scope: !6549)
!6559 = !DILocation(line: 1337, column: 52, scope: !6549)
!6560 = !DILocation(line: 1338, column: 9, scope: !6549)
!6561 = !DILocation(line: 1340, column: 37, scope: !6031)
!6562 = !DILocation(line: 1340, column: 19, scope: !6031)
!6563 = !DILocation(line: 1340, column: 19, scope: !6537)
!6564 = !DILocation(line: 1342, column: 24, scope: !6031)
!6565 = !DILocation(line: 1342, column: 35, scope: !6031)
!6566 = !DILocation(line: 1342, column: 40, scope: !6031)
!6567 = !DILocation(line: 1342, column: 9, scope: !6031)
!6568 = !DILocation(line: 1343, column: 24, scope: !6031)
!6569 = !DILocation(line: 1343, column: 34, scope: !6031)
!6570 = !DILocation(line: 1343, column: 39, scope: !6031)
!6571 = !DILocation(line: 1343, column: 9, scope: !6031)
!6572 = !DILocation(line: 1345, column: 31, scope: !6031)
!6573 = !DILocation(line: 1345, column: 35, scope: !6031)
!6574 = !DILocation(line: 1345, column: 40, scope: !6031)
!6575 = !DILocation(line: 1345, column: 46, scope: !6031)
!6576 = !DILocation(line: 1345, column: 51, scope: !6031)
!6577 = !DILocation(line: 1345, column: 9, scope: !6031)
!6578 = !DILocation(line: 1349, column: 37, scope: !6031)
!6579 = !DILocation(line: 1349, column: 40, scope: !6031)
!6580 = !DILocation(line: 1349, column: 44, scope: !6031)
!6581 = !DILocation(line: 1349, column: 48, scope: !6031)
!6582 = !DILocation(line: 1349, column: 53, scope: !6031)
!6583 = !DILocation(line: 1349, column: 15, scope: !6031)
!6584 = !DILocation(line: 1349, column: 13, scope: !6031)
!6585 = !DILocation(line: 1352, column: 13, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1352, column: 13)
!6587 = !DILocation(line: 1352, column: 17, scope: !6586)
!6588 = !DILocation(line: 1352, column: 13, scope: !6031)
!6589 = !DILocation(line: 1353, column: 20, scope: !6586)
!6590 = !DILocation(line: 1353, column: 13, scope: !6586)
!6591 = !DILocation(line: 1355, column: 33, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1355, column: 13)
!6593 = !DILocation(line: 1355, column: 37, scope: !6592)
!6594 = !DILocation(line: 1355, column: 21, scope: !6592)
!6595 = !DILocation(line: 1355, column: 19, scope: !6592)
!6596 = !DILocation(line: 1355, column: 70, scope: !6592)
!6597 = !DILocation(line: 1355, column: 78, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !6592, file: !1126, discriminator: 1)
!6599 = !DILocation(line: 1355, column: 83, scope: !6598)
!6600 = !DILocation(line: 1355, column: 73, scope: !6598)
!6601 = !DILocation(line: 1355, column: 91, scope: !6598)
!6602 = !DILocation(line: 1356, column: 34, scope: !6592)
!6603 = !DILocation(line: 1356, column: 37, scope: !6592)
!6604 = !DILocation(line: 1356, column: 21, scope: !6592)
!6605 = !DILocation(line: 1356, column: 19, scope: !6592)
!6606 = !DILocation(line: 1356, column: 70, scope: !6592)
!6607 = !DILocation(line: 1356, column: 78, scope: !6598)
!6608 = !DILocation(line: 1356, column: 83, scope: !6598)
!6609 = !DILocation(line: 1356, column: 73, scope: !6598)
!6610 = !DILocation(line: 1356, column: 91, scope: !6598)
!6611 = !DILocation(line: 1357, column: 14, scope: !6592)
!6612 = !DILocation(line: 1357, column: 19, scope: !6592)
!6613 = !DILocation(line: 1357, column: 26, scope: !6592)
!6614 = !DILocation(line: 1355, column: 13, scope: !6498)
!6615 = !DILocation(line: 1358, column: 27, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6592, file: !1126, line: 1357, column: 51)
!6617 = !DILocation(line: 1358, column: 13, scope: !6616)
!6618 = !DILocation(line: 1359, column: 9, scope: !6616)
!6619 = !DILocation(line: 1363, column: 13, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1363, column: 13)
!6621 = !DILocation(line: 1363, column: 17, scope: !6620)
!6622 = !DILocation(line: 1363, column: 37, scope: !6620)
!6623 = !DILocation(line: 1363, column: 13, scope: !6031)
!6624 = !DILocalVariable(name: "d_width", scope: !6625, file: !1126, line: 1364, type: !1051)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !1126, line: 1363, column: 42)
!6626 = !DILocation(line: 1364, column: 21, scope: !6625)
!6627 = !DILocation(line: 1364, column: 42, scope: !6625)
!6628 = !DILocation(line: 1364, column: 47, scope: !6625)
!6629 = !DILocation(line: 1364, column: 54, scope: !6625)
!6630 = !DILocation(line: 1364, column: 58, scope: !6625)
!6631 = !DILocation(line: 1364, column: 78, scope: !6625)
!6632 = !DILocation(line: 1364, column: 83, scope: !6625)
!6633 = !DILocation(line: 1364, column: 87, scope: !6625)
!6634 = !DILocation(line: 1364, column: 107, scope: !6625)
!6635 = !DILocation(line: 1364, column: 31, scope: !6625)
!6636 = !DILocation(line: 1365, column: 17, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6625, file: !1126, line: 1365, column: 17)
!6638 = !DILocation(line: 1365, column: 25, scope: !6637)
!6639 = !DILocation(line: 1365, column: 17, scope: !6625)
!6640 = !DILocation(line: 1366, column: 24, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6637, file: !1126, line: 1365, column: 39)
!6642 = !DILocation(line: 1366, column: 17, scope: !6641)
!6643 = !DILocation(line: 1367, column: 17, scope: !6641)
!6644 = !DILocation(line: 1369, column: 17, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6625, file: !1126, line: 1369, column: 17)
!6646 = !DILocation(line: 1369, column: 28, scope: !6645)
!6647 = !DILocation(line: 1369, column: 33, scope: !6645)
!6648 = !DILocation(line: 1369, column: 25, scope: !6645)
!6649 = !DILocation(line: 1369, column: 39, scope: !6645)
!6650 = !DILocation(line: 1369, column: 42, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6645, file: !1126, discriminator: 1)
!6652 = !DILocation(line: 1369, column: 60, scope: !6651)
!6653 = !DILocation(line: 1369, column: 65, scope: !6651)
!6654 = !DILocation(line: 1369, column: 68, scope: !6655)
!6655 = !DILexicalBlockFile(scope: !6645, file: !1126, discriminator: 2)
!6656 = !DILocation(line: 1369, column: 87, scope: !6655)
!6657 = !DILocation(line: 1369, column: 17, scope: !6655)
!6658 = !DILocation(line: 1370, column: 21, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !1126, line: 1370, column: 21)
!6660 = distinct !DILexicalBlock(scope: !6645, file: !1126, line: 1369, column: 93)
!6661 = !DILocation(line: 1370, column: 26, scope: !6659)
!6662 = !DILocation(line: 1370, column: 31, scope: !6659)
!6663 = !DILocation(line: 1370, column: 39, scope: !6659)
!6664 = !DILocation(line: 1370, column: 42, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6659, file: !1126, discriminator: 1)
!6666 = !DILocation(line: 1370, column: 60, scope: !6665)
!6667 = !DILocation(line: 1370, column: 65, scope: !6665)
!6668 = !DILocation(line: 1370, column: 68, scope: !6669)
!6669 = !DILexicalBlockFile(scope: !6659, file: !1126, discriminator: 2)
!6670 = !DILocation(line: 1370, column: 87, scope: !6669)
!6671 = !DILocation(line: 1370, column: 21, scope: !6669)
!6672 = !DILocation(line: 1371, column: 35, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6659, file: !1126, line: 1370, column: 93)
!6674 = !DILocation(line: 1371, column: 48, scope: !6673)
!6675 = !DILocation(line: 1371, column: 58, scope: !6673)
!6676 = !DILocation(line: 1371, column: 56, scope: !6673)
!6677 = !DILocation(line: 1371, column: 21, scope: !6673)
!6678 = !DILocation(line: 1372, column: 35, scope: !6673)
!6679 = !DILocation(line: 1372, column: 47, scope: !6673)
!6680 = !DILocation(line: 1372, column: 52, scope: !6673)
!6681 = !DILocation(line: 1372, column: 61, scope: !6673)
!6682 = !DILocation(line: 1372, column: 59, scope: !6673)
!6683 = !DILocation(line: 1372, column: 21, scope: !6673)
!6684 = !DILocation(line: 1373, column: 17, scope: !6673)
!6685 = !DILocalVariable(name: "display_aspect_ratio", scope: !6686, file: !1126, line: 1374, type: !1076)
!6686 = distinct !DILexicalBlock(scope: !6659, file: !1126, line: 1373, column: 24)
!6687 = !DILocation(line: 1374, column: 32, scope: !6686)
!6688 = !DILocation(line: 1375, column: 53, scope: !6686)
!6689 = !DILocation(line: 1375, column: 80, scope: !6686)
!6690 = !DILocation(line: 1376, column: 31, scope: !6686)
!6691 = !DILocation(line: 1376, column: 36, scope: !6686)
!6692 = !DILocation(line: 1376, column: 53, scope: !6686)
!6693 = !DILocation(line: 1376, column: 57, scope: !6686)
!6694 = !DILocation(line: 1376, column: 77, scope: !6686)
!6695 = !DILocation(line: 1376, column: 44, scope: !6686)
!6696 = !DILocation(line: 1376, column: 42, scope: !6686)
!6697 = !DILocation(line: 1377, column: 31, scope: !6686)
!6698 = !DILocation(line: 1377, column: 36, scope: !6686)
!6699 = !DILocation(line: 1377, column: 54, scope: !6686)
!6700 = !DILocation(line: 1377, column: 58, scope: !6686)
!6701 = !DILocation(line: 1377, column: 78, scope: !6686)
!6702 = !DILocation(line: 1377, column: 45, scope: !6686)
!6703 = !DILocation(line: 1377, column: 43, scope: !6686)
!6704 = !DILocation(line: 1375, column: 21, scope: !6686)
!6705 = !DILocation(line: 1379, column: 35, scope: !6686)
!6706 = !DILocation(line: 1379, column: 68, scope: !6686)
!6707 = !DILocation(line: 1379, column: 47, scope: !6686)
!6708 = !DILocation(line: 1379, column: 21, scope: !6686)
!6709 = !DILocation(line: 1380, column: 35, scope: !6686)
!6710 = !DILocation(line: 1380, column: 68, scope: !6686)
!6711 = !DILocation(line: 1380, column: 47, scope: !6686)
!6712 = !DILocation(line: 1380, column: 21, scope: !6686)
!6713 = !DILocation(line: 1381, column: 35, scope: !6686)
!6714 = !DILocation(line: 1381, column: 21, scope: !6686)
!6715 = !DILocation(line: 1383, column: 13, scope: !6660)
!6716 = !DILocation(line: 1384, column: 9, scope: !6625)
!6717 = !DILocation(line: 1384, column: 20, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6719, file: !1126, discriminator: 1)
!6719 = distinct !DILexicalBlock(scope: !6620, file: !1126, line: 1384, column: 20)
!6720 = !DILocation(line: 1384, column: 38, scope: !6718)
!6721 = !DILocation(line: 1384, column: 43, scope: !6718)
!6722 = !DILocation(line: 1384, column: 46, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6719, file: !1126, discriminator: 2)
!6724 = !DILocation(line: 1384, column: 65, scope: !6723)
!6725 = !DILocation(line: 1384, column: 20, scope: !6723)
!6726 = !DILocation(line: 1385, column: 27, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !1126, line: 1384, column: 71)
!6728 = !DILocation(line: 1385, column: 40, scope: !6727)
!6729 = !DILocation(line: 1385, column: 45, scope: !6727)
!6730 = !DILocation(line: 1385, column: 53, scope: !6727)
!6731 = !DILocation(line: 1385, column: 51, scope: !6727)
!6732 = !DILocation(line: 1385, column: 13, scope: !6727)
!6733 = !DILocation(line: 1386, column: 27, scope: !6727)
!6734 = !DILocation(line: 1386, column: 39, scope: !6727)
!6735 = !DILocation(line: 1386, column: 44, scope: !6727)
!6736 = !DILocation(line: 1386, column: 53, scope: !6727)
!6737 = !DILocation(line: 1386, column: 51, scope: !6727)
!6738 = !DILocation(line: 1386, column: 13, scope: !6727)
!6739 = !DILocation(line: 1387, column: 9, scope: !6727)
!6740 = !DILocation(line: 1387, column: 20, scope: !6741)
!6741 = !DILexicalBlockFile(scope: !6742, file: !1126, discriminator: 1)
!6742 = distinct !DILexicalBlock(scope: !6719, file: !1126, line: 1387, column: 20)
!6743 = !DILocation(line: 1387, column: 25, scope: !6741)
!6744 = !DILocation(line: 1387, column: 30, scope: !6741)
!6745 = !DILocation(line: 1388, column: 27, scope: !6742)
!6746 = !DILocation(line: 1388, column: 13, scope: !6742)
!6747 = !DILocation(line: 1390, column: 13, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1390, column: 13)
!6749 = !DILocation(line: 1390, column: 18, scope: !6748)
!6750 = !DILocation(line: 1390, column: 27, scope: !6748)
!6751 = !DILocation(line: 1390, column: 13, scope: !6031)
!6752 = !DILocalVariable(name: "color_space", scope: !6753, file: !1126, line: 1391, type: !1049)
!6753 = distinct !DILexicalBlock(scope: !6748, file: !1126, line: 1390, column: 52)
!6754 = !DILocation(line: 1391, column: 22, scope: !6753)
!6755 = !DILocation(line: 1391, column: 37, scope: !6753)
!6756 = !DILocation(line: 1391, column: 42, scope: !6753)
!6757 = !DILocation(line: 1392, column: 29, scope: !6753)
!6758 = !DILocation(line: 1392, column: 43, scope: !6753)
!6759 = !DILocation(line: 1392, column: 13, scope: !6753)
!6760 = !DILocation(line: 1393, column: 9, scope: !6753)
!6761 = !DILocation(line: 1394, column: 37, scope: !6031)
!6762 = !DILocation(line: 1394, column: 41, scope: !6031)
!6763 = !DILocation(line: 1394, column: 46, scope: !6031)
!6764 = !DILocation(line: 1394, column: 15, scope: !6031)
!6765 = !DILocation(line: 1394, column: 13, scope: !6031)
!6766 = !DILocation(line: 1395, column: 13, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1395, column: 13)
!6768 = !DILocation(line: 1395, column: 17, scope: !6767)
!6769 = !DILocation(line: 1395, column: 13, scope: !6031)
!6770 = !DILocation(line: 1396, column: 20, scope: !6767)
!6771 = !DILocation(line: 1396, column: 13, scope: !6767)
!6772 = !DILocation(line: 1397, column: 42, scope: !6031)
!6773 = !DILocation(line: 1397, column: 45, scope: !6031)
!6774 = !DILocation(line: 1397, column: 49, scope: !6031)
!6775 = !DILocation(line: 1397, column: 15, scope: !6031)
!6776 = !DILocation(line: 1397, column: 13, scope: !6031)
!6777 = !DILocation(line: 1398, column: 13, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1398, column: 13)
!6779 = !DILocation(line: 1398, column: 17, scope: !6778)
!6780 = !DILocation(line: 1398, column: 13, scope: !6031)
!6781 = !DILocation(line: 1399, column: 20, scope: !6778)
!6782 = !DILocation(line: 1399, column: 13, scope: !6778)
!6783 = !DILocation(line: 1400, column: 25, scope: !6031)
!6784 = !DILocation(line: 1400, column: 9, scope: !6031)
!6785 = !DILocation(line: 1401, column: 9, scope: !6031)
!6786 = !DILocation(line: 1404, column: 23, scope: !6031)
!6787 = !DILocation(line: 1404, column: 9, scope: !6031)
!6788 = !DILocation(line: 1406, column: 14, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1406, column: 13)
!6790 = !DILocation(line: 1406, column: 13, scope: !6031)
!6791 = !DILocation(line: 1408, column: 29, scope: !6789)
!6792 = !DILocation(line: 1408, column: 13, scope: !6789)
!6793 = !DILocation(line: 1410, column: 37, scope: !6031)
!6794 = !DILocation(line: 1410, column: 19, scope: !6031)
!6795 = !DILocation(line: 1410, column: 19, scope: !6537)
!6796 = !DILocation(line: 1411, column: 24, scope: !6031)
!6797 = !DILocation(line: 1411, column: 35, scope: !6031)
!6798 = !DILocation(line: 1411, column: 40, scope: !6031)
!6799 = !DILocation(line: 1411, column: 9, scope: !6031)
!6800 = !DILocation(line: 1413, column: 55, scope: !6031)
!6801 = !DILocation(line: 1413, column: 45, scope: !6031)
!6802 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !6030)
!6803 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !6030)
!6804 = !DILocation(line: 1413, column: 21, scope: !6031)
!6805 = !DILocation(line: 1413, column: 9, scope: !6031)
!6806 = !DILocation(line: 1413, column: 14, scope: !6031)
!6807 = !DILocation(line: 1413, column: 24, scope: !6031)
!6808 = !DILocation(line: 1413, column: 43, scope: !6031)
!6809 = !DILocation(line: 1414, column: 25, scope: !6031)
!6810 = !DILocation(line: 1414, column: 35, scope: !6031)
!6811 = !DILocation(line: 1414, column: 9, scope: !6031)
!6812 = !DILocation(line: 1415, column: 13, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1415, column: 13)
!6814 = !DILocation(line: 1415, column: 13, scope: !6031)
!6815 = !DILocation(line: 1416, column: 28, scope: !6813)
!6816 = !DILocation(line: 1416, column: 40, scope: !6813)
!6817 = !DILocation(line: 1416, column: 13, scope: !6813)
!6818 = !DILocation(line: 1417, column: 13, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1417, column: 13)
!6820 = !DILocation(line: 1417, column: 13, scope: !6031)
!6821 = !DILocation(line: 1418, column: 27, scope: !6819)
!6822 = !DILocation(line: 1418, column: 39, scope: !6819)
!6823 = !DILocation(line: 1418, column: 13, scope: !6819)
!6824 = !DILocation(line: 1419, column: 25, scope: !6031)
!6825 = !DILocation(line: 1419, column: 9, scope: !6031)
!6826 = !DILocation(line: 1420, column: 9, scope: !6031)
!6827 = !DILocation(line: 1423, column: 14, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1423, column: 13)
!6829 = !DILocation(line: 1423, column: 13, scope: !6031)
!6830 = !DILocation(line: 1424, column: 20, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6828, file: !1126, line: 1423, column: 25)
!6832 = !DILocation(line: 1424, column: 68, scope: !6831)
!6833 = !DILocation(line: 1424, column: 73, scope: !6831)
!6834 = !DILocation(line: 1424, column: 13, scope: !6831)
!6835 = !DILocation(line: 1425, column: 13, scope: !6831)
!6836 = !DILocation(line: 1428, column: 13, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6031, file: !1126, line: 1428, column: 13)
!6838 = !DILocation(line: 1428, column: 18, scope: !6837)
!6839 = !DILocation(line: 1428, column: 23, scope: !6837)
!6840 = !DILocation(line: 1428, column: 31, scope: !6837)
!6841 = !DILocation(line: 1428, column: 34, scope: !6842)
!6842 = !DILexicalBlockFile(scope: !6837, file: !1126, discriminator: 1)
!6843 = !DILocation(line: 1428, column: 39, scope: !6842)
!6844 = !DILocation(line: 1428, column: 48, scope: !6842)
!6845 = !DILocation(line: 1428, column: 13, scope: !6842)
!6846 = !DILocation(line: 1429, column: 23, scope: !6837)
!6847 = !DILocation(line: 1429, column: 13, scope: !6837)
!6848 = !DILocation(line: 1431, column: 23, scope: !6031)
!6849 = !DILocation(line: 1431, column: 33, scope: !6031)
!6850 = !DILocation(line: 1431, column: 9, scope: !6031)
!6851 = !DILocation(line: 1432, column: 9, scope: !6031)
!6852 = !DILocation(line: 1434, column: 16, scope: !6031)
!6853 = !DILocation(line: 1434, column: 9, scope: !6031)
!6854 = !DILocation(line: 1435, column: 9, scope: !6031)
!6855 = !DILocation(line: 1438, column: 9, scope: !6028)
!6856 = !DILocation(line: 1438, column: 14, scope: !6028)
!6857 = !DILocation(line: 1438, column: 19, scope: !6028)
!6858 = !DILocation(line: 1438, column: 27, scope: !6028)
!6859 = !DILocation(line: 1438, column: 30, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6028, file: !1126, discriminator: 1)
!6861 = !DILocation(line: 1438, column: 35, scope: !6860)
!6862 = !DILocation(line: 1438, column: 44, scope: !6860)
!6863 = !DILocation(line: 1438, column: 9, scope: !6860)
!6864 = !DILocation(line: 1439, column: 53, scope: !6027)
!6865 = !DILocation(line: 1439, column: 43, scope: !6027)
!6866 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !6026)
!6867 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !6026)
!6868 = !DILocation(line: 1439, column: 21, scope: !6027)
!6869 = !DILocation(line: 1439, column: 9, scope: !6027)
!6870 = !DILocation(line: 1439, column: 14, scope: !6027)
!6871 = !DILocation(line: 1439, column: 24, scope: !6027)
!6872 = !DILocation(line: 1439, column: 41, scope: !6027)
!6873 = !DILocation(line: 1440, column: 38, scope: !6027)
!6874 = !DILocation(line: 1440, column: 41, scope: !6027)
!6875 = !DILocation(line: 1440, column: 45, scope: !6027)
!6876 = !DILocation(line: 1440, column: 50, scope: !6027)
!6877 = !DILocation(line: 1440, column: 61, scope: !6027)
!6878 = !DILocation(line: 1440, column: 15, scope: !6027)
!6879 = !DILocation(line: 1440, column: 13, scope: !6027)
!6880 = !DILocation(line: 1441, column: 13, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6027, file: !1126, line: 1441, column: 13)
!6882 = !DILocation(line: 1441, column: 17, scope: !6881)
!6883 = !DILocation(line: 1441, column: 13, scope: !6027)
!6884 = !DILocation(line: 1442, column: 20, scope: !6881)
!6885 = !DILocation(line: 1442, column: 13, scope: !6881)
!6886 = !DILocation(line: 1443, column: 5, scope: !6027)
!6887 = !DILocation(line: 1445, column: 21, scope: !6022)
!6888 = !DILocation(line: 1445, column: 5, scope: !6022)
!6889 = !DILocation(line: 1447, column: 5, scope: !6022)
!6890 = !DILocation(line: 1448, column: 1, scope: !6022)
!6891 = distinct !DISubprogram(name: "get_aac_sample_rates", scope: !1126, file: !1126, line: 721, type: !6892, isLocal: true, isDefinition: true, scopeLine: 723, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!6892 = !DISubroutineType(types: !6893)
!6893 = !{!1053, !2438, !1110, !1053, !1606, !1606}
!6894 = !DILocalVariable(name: "s", arg: 1, scope: !6891, file: !1126, line: 721, type: !2438)
!6895 = !DILocation(line: 721, column: 50, scope: !6891)
!6896 = !DILocalVariable(name: "extradata", arg: 2, scope: !6891, file: !1126, line: 721, type: !1110)
!6897 = !DILocation(line: 721, column: 62, scope: !6891)
!6898 = !DILocalVariable(name: "extradata_size", arg: 3, scope: !6891, file: !1126, line: 721, type: !1053)
!6899 = !DILocation(line: 721, column: 77, scope: !6891)
!6900 = !DILocalVariable(name: "sample_rate", arg: 4, scope: !6891, file: !1126, line: 722, type: !1606)
!6901 = !DILocation(line: 722, column: 38, scope: !6891)
!6902 = !DILocalVariable(name: "output_sample_rate", arg: 5, scope: !6891, file: !1126, line: 722, type: !1606)
!6903 = !DILocation(line: 722, column: 56, scope: !6891)
!6904 = !DILocalVariable(name: "mp4ac", scope: !6891, file: !1126, line: 724, type: !6905)
!6905 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !6906, line: 46, baseType: !6907)
!6906 = !DIFile(filename: "./libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !6906, line: 33, size: 384, align: 32, elements: !6908)
!6908 = !{!6909, !6910, !6911, !6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919, !6920}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !6907, file: !6906, line: 34, baseType: !1053, size: 32, align: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !6907, file: !6906, line: 35, baseType: !1053, size: 32, align: 32, offset: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !6907, file: !6906, line: 36, baseType: !1053, size: 32, align: 32, offset: 64)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !6907, file: !6906, line: 37, baseType: !1053, size: 32, align: 32, offset: 96)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !6907, file: !6906, line: 38, baseType: !1053, size: 32, align: 32, offset: 128)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !6907, file: !6906, line: 39, baseType: !1053, size: 32, align: 32, offset: 160)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !6907, file: !6906, line: 40, baseType: !1053, size: 32, align: 32, offset: 192)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !6907, file: !6906, line: 41, baseType: !1053, size: 32, align: 32, offset: 224)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !6907, file: !6906, line: 42, baseType: !1053, size: 32, align: 32, offset: 256)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !6907, file: !6906, line: 43, baseType: !1053, size: 32, align: 32, offset: 288)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !6907, file: !6906, line: 44, baseType: !1053, size: 32, align: 32, offset: 320)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !6907, file: !6906, line: 45, baseType: !1053, size: 32, align: 32, offset: 352)
!6921 = !DILocation(line: 724, column: 22, scope: !6891)
!6922 = !DILocalVariable(name: "ret", scope: !6891, file: !1126, line: 725, type: !1053)
!6923 = !DILocation(line: 725, column: 9, scope: !6891)
!6924 = !DILocation(line: 727, column: 48, scope: !6891)
!6925 = !DILocation(line: 728, column: 40, scope: !6891)
!6926 = !DILocation(line: 728, column: 55, scope: !6891)
!6927 = !DILocation(line: 727, column: 11, scope: !6891)
!6928 = !DILocation(line: 727, column: 9, scope: !6891)
!6929 = !DILocation(line: 734, column: 9, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6891, file: !1126, line: 734, column: 9)
!6931 = !DILocation(line: 734, column: 13, scope: !6930)
!6932 = !DILocation(line: 734, column: 17, scope: !6930)
!6933 = !DILocation(line: 734, column: 21, scope: !6934)
!6934 = !DILexicalBlockFile(scope: !6930, file: !1126, discriminator: 1)
!6935 = !DILocation(line: 734, column: 36, scope: !6934)
!6936 = !DILocation(line: 734, column: 41, scope: !6937)
!6937 = !DILexicalBlockFile(scope: !6930, file: !1126, discriminator: 2)
!6938 = !DILocation(line: 734, column: 44, scope: !6937)
!6939 = !DILocation(line: 734, column: 48, scope: !6937)
!6940 = !DILocation(line: 734, column: 57, scope: !6937)
!6941 = !DILocation(line: 734, column: 9, scope: !6937)
!6942 = !DILocation(line: 735, column: 16, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6930, file: !1126, line: 734, column: 71)
!6944 = !DILocation(line: 735, column: 9, scope: !6943)
!6945 = !DILocation(line: 737, column: 9, scope: !6943)
!6946 = !DILocation(line: 740, column: 9, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6891, file: !1126, line: 740, column: 9)
!6948 = !DILocation(line: 740, column: 13, scope: !6947)
!6949 = !DILocation(line: 740, column: 9, scope: !6891)
!6950 = !DILocation(line: 746, column: 32, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6947, file: !1126, line: 740, column: 18)
!6952 = !DILocation(line: 746, column: 31, scope: !6951)
!6953 = !DILocation(line: 746, column: 10, scope: !6951)
!6954 = !DILocation(line: 746, column: 29, scope: !6951)
!6955 = !DILocation(line: 747, column: 5, scope: !6951)
!6956 = !DILocation(line: 748, column: 30, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6947, file: !1126, line: 747, column: 12)
!6958 = !DILocation(line: 748, column: 10, scope: !6957)
!6959 = !DILocation(line: 748, column: 22, scope: !6957)
!6960 = !DILocation(line: 749, column: 37, scope: !6957)
!6961 = !DILocation(line: 749, column: 10, scope: !6957)
!6962 = !DILocation(line: 749, column: 29, scope: !6957)
!6963 = !DILocation(line: 751, column: 5, scope: !6891)
!6964 = !DILocation(line: 752, column: 1, scope: !6891)
!6965 = distinct !DISubprogram(name: "av_cmp_q", scope: !1077, file: !1077, line: 89, type: !6966, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{!1053, !1076, !1076}
!6968 = !DILocalVariable(name: "a", arg: 1, scope: !6965, file: !1077, line: 89, type: !1076)
!6969 = !DILocation(line: 89, column: 39, scope: !6965)
!6970 = !DILocalVariable(name: "b", arg: 2, scope: !6965, file: !1077, line: 89, type: !1076)
!6971 = !DILocation(line: 89, column: 53, scope: !6965)
!6972 = !DILocalVariable(name: "tmp", scope: !6965, file: !1077, line: 90, type: !6973)
!6973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!6974 = !DILocation(line: 90, column: 19, scope: !6965)
!6975 = !DILocation(line: 90, column: 26, scope: !6965)
!6976 = !DILocation(line: 90, column: 24, scope: !6965)
!6977 = !DILocation(line: 90, column: 43, scope: !6965)
!6978 = !DILocation(line: 90, column: 32, scope: !6965)
!6979 = !DILocation(line: 90, column: 30, scope: !6965)
!6980 = !DILocation(line: 90, column: 51, scope: !6965)
!6981 = !DILocation(line: 90, column: 49, scope: !6965)
!6982 = !DILocation(line: 90, column: 68, scope: !6965)
!6983 = !DILocation(line: 90, column: 57, scope: !6965)
!6984 = !DILocation(line: 90, column: 55, scope: !6965)
!6985 = !DILocation(line: 90, column: 47, scope: !6965)
!6986 = !DILocation(line: 92, column: 8, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6965, file: !1077, line: 92, column: 8)
!6988 = !DILocation(line: 92, column: 8, scope: !6965)
!6989 = !DILocation(line: 92, column: 27, scope: !6990)
!6990 = !DILexicalBlockFile(scope: !6987, file: !1077, discriminator: 1)
!6991 = !DILocation(line: 92, column: 35, scope: !6990)
!6992 = !DILocation(line: 92, column: 33, scope: !6990)
!6993 = !DILocation(line: 92, column: 31, scope: !6990)
!6994 = !DILocation(line: 92, column: 43, scope: !6990)
!6995 = !DILocation(line: 92, column: 41, scope: !6990)
!6996 = !DILocation(line: 92, column: 39, scope: !6990)
!6997 = !DILocation(line: 92, column: 47, scope: !6990)
!6998 = !DILocation(line: 92, column: 20, scope: !6990)
!6999 = !DILocation(line: 92, column: 52, scope: !6990)
!7000 = !DILocation(line: 92, column: 13, scope: !6990)
!7001 = !DILocation(line: 93, column: 15, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6987, file: !1077, line: 93, column: 13)
!7003 = !DILocation(line: 93, column: 13, scope: !7002)
!7004 = !DILocation(line: 93, column: 19, scope: !7002)
!7005 = !DILocation(line: 93, column: 24, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !7002, file: !1077, discriminator: 1)
!7007 = !DILocation(line: 93, column: 22, scope: !7006)
!7008 = !DILocation(line: 93, column: 13, scope: !7006)
!7009 = !DILocation(line: 93, column: 29, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !7002, file: !1077, discriminator: 2)
!7011 = !DILocation(line: 94, column: 15, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7002, file: !1077, line: 94, column: 13)
!7013 = !DILocation(line: 94, column: 13, scope: !7012)
!7014 = !DILocation(line: 94, column: 19, scope: !7012)
!7015 = !DILocation(line: 94, column: 24, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !7012, file: !1077, discriminator: 1)
!7017 = !DILocation(line: 94, column: 22, scope: !7016)
!7018 = !DILocation(line: 94, column: 13, scope: !7016)
!7019 = !DILocation(line: 94, column: 39, scope: !7020)
!7020 = !DILexicalBlockFile(scope: !7012, file: !1077, discriminator: 2)
!7021 = !DILocation(line: 94, column: 42, scope: !7020)
!7022 = !DILocation(line: 94, column: 53, scope: !7020)
!7023 = !DILocation(line: 94, column: 56, scope: !7020)
!7024 = !DILocation(line: 94, column: 48, scope: !7020)
!7025 = !DILocation(line: 94, column: 29, scope: !7020)
!7026 = !DILocation(line: 95, column: 10, scope: !7012)
!7027 = !DILocation(line: 96, column: 1, scope: !6965)
!7028 = distinct !DISubprogram(name: "mkv_write_field_order", scope: !1126, file: !1126, line: 1041, type: !7029, isLocal: true, isDefinition: true, scopeLine: 1043, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{null, !1332, !1053, !889}
!7031 = !DILocalVariable(name: "pb", arg: 1, scope: !7028, file: !1126, line: 1041, type: !1332)
!7032 = !DILocation(line: 1041, column: 48, scope: !7028)
!7033 = !DILocalVariable(name: "mode", arg: 2, scope: !7028, file: !1126, line: 1041, type: !1053)
!7034 = !DILocation(line: 1041, column: 56, scope: !7028)
!7035 = !DILocalVariable(name: "field_order", arg: 3, scope: !7028, file: !1126, line: 1042, type: !889)
!7036 = !DILocation(line: 1042, column: 53, scope: !7028)
!7037 = !DILocation(line: 1044, column: 13, scope: !7028)
!7038 = !DILocation(line: 1044, column: 5, scope: !7028)
!7039 = !DILocation(line: 1046, column: 9, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7028, file: !1126, line: 1044, column: 26)
!7041 = !DILocation(line: 1048, column: 23, scope: !7040)
!7042 = !DILocation(line: 1048, column: 9, scope: !7040)
!7043 = !DILocation(line: 1050, column: 9, scope: !7040)
!7044 = !DILocation(line: 1055, column: 23, scope: !7040)
!7045 = !DILocation(line: 1055, column: 9, scope: !7040)
!7046 = !DILocation(line: 1057, column: 13, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7040, file: !1126, line: 1057, column: 13)
!7048 = !DILocation(line: 1057, column: 18, scope: !7047)
!7049 = !DILocation(line: 1057, column: 13, scope: !7040)
!7050 = !DILocation(line: 1058, column: 21, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7047, file: !1126, line: 1057, column: 27)
!7052 = !DILocation(line: 1058, column: 13, scope: !7051)
!7053 = !DILocation(line: 1060, column: 31, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7051, file: !1126, line: 1058, column: 34)
!7055 = !DILocation(line: 1060, column: 17, scope: !7054)
!7056 = !DILocation(line: 1062, column: 17, scope: !7054)
!7057 = !DILocation(line: 1064, column: 31, scope: !7054)
!7058 = !DILocation(line: 1064, column: 17, scope: !7054)
!7059 = !DILocation(line: 1066, column: 17, scope: !7054)
!7060 = !DILocation(line: 1068, column: 31, scope: !7054)
!7061 = !DILocation(line: 1068, column: 17, scope: !7054)
!7062 = !DILocation(line: 1070, column: 17, scope: !7054)
!7063 = !DILocation(line: 1072, column: 31, scope: !7054)
!7064 = !DILocation(line: 1072, column: 17, scope: !7054)
!7065 = !DILocation(line: 1074, column: 17, scope: !7054)
!7066 = !DILocation(line: 1076, column: 9, scope: !7051)
!7067 = !DILocation(line: 1077, column: 5, scope: !7040)
!7068 = !DILocation(line: 1078, column: 1, scope: !7028)
!7069 = distinct !DISubprogram(name: "mkv_write_stereo_mode", scope: !1126, file: !1126, line: 1080, type: !7070, isLocal: true, isDefinition: true, scopeLine: 1082, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{!1053, !2438, !1332, !1398, !1053, !1606, !1606}
!7072 = !DILocalVariable(name: "s", arg: 1, scope: !7069, file: !1126, line: 1080, type: !2438)
!7073 = !DILocation(line: 1080, column: 51, scope: !7069)
!7074 = !DILocalVariable(name: "pb", arg: 2, scope: !7069, file: !1126, line: 1080, type: !1332)
!7075 = !DILocation(line: 1080, column: 67, scope: !7069)
!7076 = !DILocalVariable(name: "st", arg: 3, scope: !7069, file: !1126, line: 1081, type: !1398)
!7077 = !DILocation(line: 1081, column: 44, scope: !7069)
!7078 = !DILocalVariable(name: "mode", arg: 4, scope: !7069, file: !1126, line: 1081, type: !1053)
!7079 = !DILocation(line: 1081, column: 52, scope: !7069)
!7080 = !DILocalVariable(name: "h_width", arg: 5, scope: !7069, file: !1126, line: 1081, type: !1606)
!7081 = !DILocation(line: 1081, column: 63, scope: !7069)
!7082 = !DILocalVariable(name: "h_height", arg: 6, scope: !7069, file: !1126, line: 1081, type: !1606)
!7083 = !DILocation(line: 1081, column: 77, scope: !7069)
!7084 = !DILocalVariable(name: "i", scope: !7069, file: !1126, line: 1083, type: !1053)
!7085 = !DILocation(line: 1083, column: 9, scope: !7069)
!7086 = !DILocalVariable(name: "ret", scope: !7069, file: !1126, line: 1084, type: !1053)
!7087 = !DILocation(line: 1084, column: 9, scope: !7069)
!7088 = !DILocalVariable(name: "tag", scope: !7069, file: !1126, line: 1085, type: !2573)
!7089 = !DILocation(line: 1085, column: 24, scope: !7069)
!7090 = !DILocalVariable(name: "format", scope: !7069, file: !1126, line: 1086, type: !7091)
!7091 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaVideoStereoModeType", file: !951, line: 317, baseType: !981)
!7092 = !DILocation(line: 1086, column: 33, scope: !7069)
!7093 = !DILocation(line: 1088, column: 6, scope: !7069)
!7094 = !DILocation(line: 1088, column: 14, scope: !7069)
!7095 = !DILocation(line: 1089, column: 6, scope: !7069)
!7096 = !DILocation(line: 1089, column: 15, scope: !7069)
!7097 = !DILocation(line: 1091, column: 28, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7069, file: !1126, line: 1091, column: 9)
!7099 = !DILocation(line: 1091, column: 32, scope: !7098)
!7100 = !DILocation(line: 1091, column: 16, scope: !7098)
!7101 = !DILocation(line: 1091, column: 14, scope: !7098)
!7102 = !DILocation(line: 1091, column: 66, scope: !7098)
!7103 = !DILocation(line: 1092, column: 29, scope: !7098)
!7104 = !DILocation(line: 1092, column: 32, scope: !7098)
!7105 = !DILocation(line: 1092, column: 16, scope: !7098)
!7106 = !DILocation(line: 1092, column: 14, scope: !7098)
!7107 = !DILocation(line: 1091, column: 9, scope: !7108)
!7108 = !DILexicalBlockFile(scope: !7069, file: !1126, discriminator: 1)
!7109 = !DILocalVariable(name: "stereo_mode", scope: !7110, file: !1126, line: 1093, type: !1053)
!7110 = distinct !DILexicalBlock(scope: !7098, file: !1126, line: 1092, column: 67)
!7111 = !DILocation(line: 1093, column: 13, scope: !7110)
!7112 = !DILocation(line: 1093, column: 32, scope: !7110)
!7113 = !DILocation(line: 1093, column: 37, scope: !7110)
!7114 = !DILocation(line: 1093, column: 27, scope: !7110)
!7115 = !DILocation(line: 1095, column: 15, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7110, file: !1126, line: 1095, column: 9)
!7117 = !DILocation(line: 1095, column: 14, scope: !7116)
!7118 = !DILocation(line: 1095, column: 19, scope: !7119)
!7119 = !DILexicalBlockFile(scope: !7120, file: !1126, discriminator: 1)
!7120 = distinct !DILexicalBlock(scope: !7116, file: !1126, line: 1095, column: 9)
!7121 = !DILocation(line: 1095, column: 20, scope: !7119)
!7122 = !DILocation(line: 1095, column: 9, scope: !7119)
!7123 = !DILocation(line: 1096, column: 25, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !1126, line: 1096, column: 17)
!7125 = !DILocation(line: 1096, column: 30, scope: !7124)
!7126 = !DILocation(line: 1096, column: 67, scope: !7124)
!7127 = !DILocation(line: 1096, column: 37, scope: !7124)
!7128 = !DILocation(line: 1096, column: 18, scope: !7124)
!7129 = !DILocation(line: 1096, column: 17, scope: !7120)
!7130 = !DILocation(line: 1097, column: 31, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7124, file: !1126, line: 1096, column: 71)
!7132 = !DILocation(line: 1097, column: 29, scope: !7131)
!7133 = !DILocation(line: 1098, column: 17, scope: !7131)
!7134 = !DILocation(line: 1096, column: 69, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !7124, file: !1126, discriminator: 1)
!7136 = !DILocation(line: 1095, column: 57, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !7120, file: !1126, discriminator: 2)
!7138 = !DILocation(line: 1095, column: 9, scope: !7137)
!7139 = distinct !{!7139, !7140}
!7140 = !DILocation(line: 1095, column: 9, scope: !7110)
!7141 = !DILocation(line: 1101, column: 13, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7110, file: !1126, line: 1101, column: 13)
!7143 = !DILocation(line: 1101, column: 25, scope: !7142)
!7144 = !DILocation(line: 1101, column: 61, scope: !7142)
!7145 = !DILocation(line: 1102, column: 13, scope: !7142)
!7146 = !DILocation(line: 1102, column: 25, scope: !7142)
!7147 = !DILocation(line: 1102, column: 31, scope: !7142)
!7148 = !DILocation(line: 1102, column: 34, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !7142, file: !1126, discriminator: 1)
!7150 = !DILocation(line: 1102, column: 46, scope: !7149)
!7151 = !DILocation(line: 1101, column: 13, scope: !7152)
!7152 = !DILexicalBlockFile(scope: !7110, file: !1126, discriminator: 1)
!7153 = !DILocalVariable(name: "ret", scope: !7154, file: !1126, line: 1103, type: !1053)
!7154 = distinct !DILexicalBlock(scope: !7142, file: !1126, line: 1102, column: 53)
!7155 = !DILocation(line: 1103, column: 17, scope: !7154)
!7156 = !DILocation(line: 1103, column: 44, scope: !7154)
!7157 = !DILocation(line: 1103, column: 48, scope: !7154)
!7158 = !DILocation(line: 1103, column: 23, scope: !7154)
!7159 = !DILocation(line: 1104, column: 17, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7154, file: !1126, line: 1104, column: 17)
!7161 = !DILocation(line: 1104, column: 21, scope: !7160)
!7162 = !DILocation(line: 1104, column: 17, scope: !7154)
!7163 = !DILocation(line: 1105, column: 24, scope: !7160)
!7164 = !DILocation(line: 1105, column: 17, scope: !7160)
!7165 = !DILocation(line: 1106, column: 9, scope: !7154)
!7166 = !DILocation(line: 1107, column: 5, scope: !7110)
!7167 = !DILocation(line: 1110, column: 12, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7069, file: !1126, line: 1110, column: 5)
!7169 = !DILocation(line: 1110, column: 10, scope: !7168)
!7170 = !DILocation(line: 1110, column: 17, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7172, file: !1126, discriminator: 1)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !1126, line: 1110, column: 5)
!7173 = !DILocation(line: 1110, column: 21, scope: !7171)
!7174 = !DILocation(line: 1110, column: 25, scope: !7171)
!7175 = !DILocation(line: 1110, column: 19, scope: !7171)
!7176 = !DILocation(line: 1110, column: 5, scope: !7171)
!7177 = !DILocalVariable(name: "sd", scope: !7178, file: !1126, line: 1111, type: !1290)
!7178 = distinct !DILexicalBlock(scope: !7172, file: !1126, line: 1110, column: 44)
!7179 = !DILocation(line: 1111, column: 26, scope: !7178)
!7180 = !DILocation(line: 1111, column: 45, scope: !7178)
!7181 = !DILocation(line: 1111, column: 31, scope: !7178)
!7182 = !DILocation(line: 1111, column: 35, scope: !7178)
!7183 = !DILocation(line: 1112, column: 16, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7178, file: !1126, line: 1112, column: 13)
!7185 = !DILocation(line: 1112, column: 21, scope: !7184)
!7186 = !DILocation(line: 1112, column: 13, scope: !7178)
!7187 = !DILocalVariable(name: "stereo", scope: !7188, file: !1126, line: 1113, type: !1054)
!7188 = distinct !DILexicalBlock(scope: !7184, file: !1126, line: 1112, column: 46)
!7189 = !DILocation(line: 1113, column: 25, scope: !7188)
!7190 = !DILocation(line: 1113, column: 51, scope: !7188)
!7191 = !DILocation(line: 1113, column: 34, scope: !7188)
!7192 = !DILocation(line: 1115, column: 21, scope: !7188)
!7193 = !DILocation(line: 1115, column: 29, scope: !7188)
!7194 = !DILocation(line: 1115, column: 13, scope: !7188)
!7195 = !DILocation(line: 1117, column: 24, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7188, file: !1126, line: 1115, column: 35)
!7197 = !DILocation(line: 1118, column: 17, scope: !7196)
!7198 = !DILocation(line: 1120, column: 27, scope: !7196)
!7199 = !DILocation(line: 1120, column: 35, scope: !7196)
!7200 = !DILocation(line: 1120, column: 41, scope: !7196)
!7201 = !DILocation(line: 1120, column: 26, scope: !7196)
!7202 = !DILocation(line: 1120, column: 24, scope: !7196)
!7203 = !DILocation(line: 1123, column: 18, scope: !7196)
!7204 = !DILocation(line: 1123, column: 26, scope: !7196)
!7205 = !DILocation(line: 1124, column: 17, scope: !7196)
!7206 = !DILocation(line: 1126, column: 24, scope: !7196)
!7207 = !DILocation(line: 1127, column: 21, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7196, file: !1126, line: 1127, column: 21)
!7209 = !DILocation(line: 1127, column: 29, scope: !7208)
!7210 = !DILocation(line: 1127, column: 35, scope: !7208)
!7211 = !DILocation(line: 1127, column: 21, scope: !7196)
!7212 = !DILocation(line: 1128, column: 27, scope: !7208)
!7213 = !DILocation(line: 1128, column: 21, scope: !7208)
!7214 = !DILocation(line: 1129, column: 18, scope: !7196)
!7215 = !DILocation(line: 1129, column: 27, scope: !7196)
!7216 = !DILocation(line: 1130, column: 17, scope: !7196)
!7217 = !DILocation(line: 1132, column: 24, scope: !7196)
!7218 = !DILocation(line: 1133, column: 21, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7196, file: !1126, line: 1133, column: 21)
!7220 = !DILocation(line: 1133, column: 29, scope: !7219)
!7221 = !DILocation(line: 1133, column: 35, scope: !7219)
!7222 = !DILocation(line: 1133, column: 21, scope: !7196)
!7223 = !DILocation(line: 1134, column: 27, scope: !7219)
!7224 = !DILocation(line: 1134, column: 21, scope: !7219)
!7225 = !DILocation(line: 1135, column: 17, scope: !7196)
!7226 = !DILocation(line: 1137, column: 24, scope: !7196)
!7227 = !DILocation(line: 1138, column: 21, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7196, file: !1126, line: 1138, column: 21)
!7229 = !DILocation(line: 1138, column: 29, scope: !7228)
!7230 = !DILocation(line: 1138, column: 35, scope: !7228)
!7231 = !DILocation(line: 1138, column: 21, scope: !7196)
!7232 = !DILocation(line: 1139, column: 27, scope: !7228)
!7233 = !DILocation(line: 1139, column: 21, scope: !7228)
!7234 = !DILocation(line: 1140, column: 18, scope: !7196)
!7235 = !DILocation(line: 1140, column: 27, scope: !7196)
!7236 = !DILocation(line: 1141, column: 17, scope: !7196)
!7237 = !DILocation(line: 1143, column: 24, scope: !7196)
!7238 = !DILocation(line: 1144, column: 21, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7196, file: !1126, line: 1144, column: 21)
!7240 = !DILocation(line: 1144, column: 29, scope: !7239)
!7241 = !DILocation(line: 1144, column: 35, scope: !7239)
!7242 = !DILocation(line: 1144, column: 21, scope: !7196)
!7243 = !DILocation(line: 1145, column: 27, scope: !7239)
!7244 = !DILocation(line: 1145, column: 21, scope: !7239)
!7245 = !DILocation(line: 1146, column: 18, scope: !7196)
!7246 = !DILocation(line: 1146, column: 26, scope: !7196)
!7247 = !DILocation(line: 1147, column: 17, scope: !7196)
!7248 = !DILocation(line: 1149, column: 24, scope: !7196)
!7249 = !DILocation(line: 1150, column: 21, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7196, file: !1126, line: 1150, column: 21)
!7251 = !DILocation(line: 1150, column: 29, scope: !7250)
!7252 = !DILocation(line: 1150, column: 35, scope: !7250)
!7253 = !DILocation(line: 1150, column: 21, scope: !7196)
!7254 = !DILocation(line: 1151, column: 27, scope: !7250)
!7255 = !DILocation(line: 1151, column: 21, scope: !7250)
!7256 = !DILocation(line: 1152, column: 17, scope: !7196)
!7257 = !DILocation(line: 1154, column: 13, scope: !7188)
!7258 = !DILocation(line: 1156, column: 5, scope: !7178)
!7259 = !DILocation(line: 1110, column: 40, scope: !7260)
!7260 = !DILexicalBlockFile(scope: !7172, file: !1126, discriminator: 2)
!7261 = !DILocation(line: 1110, column: 5, scope: !7260)
!7262 = distinct !{!7262, !7263}
!7263 = !DILocation(line: 1110, column: 5, scope: !7069)
!7264 = !DILocation(line: 1158, column: 9, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7069, file: !1126, line: 1158, column: 9)
!7266 = !DILocation(line: 1158, column: 16, scope: !7265)
!7267 = !DILocation(line: 1158, column: 9, scope: !7069)
!7268 = !DILocation(line: 1159, column: 16, scope: !7265)
!7269 = !DILocation(line: 1159, column: 9, scope: !7265)
!7270 = !DILocation(line: 1162, column: 10, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7069, file: !1126, line: 1162, column: 9)
!7272 = !DILocation(line: 1162, column: 15, scope: !7271)
!7273 = !DILocation(line: 1162, column: 23, scope: !7271)
!7274 = !DILocation(line: 1163, column: 9, scope: !7271)
!7275 = !DILocation(line: 1163, column: 16, scope: !7271)
!7276 = !DILocation(line: 1163, column: 60, scope: !7271)
!7277 = !DILocation(line: 1164, column: 9, scope: !7271)
!7278 = !DILocation(line: 1164, column: 16, scope: !7271)
!7279 = !DILocation(line: 1165, column: 9, scope: !7271)
!7280 = !DILocation(line: 1165, column: 12, scope: !7281)
!7281 = !DILexicalBlockFile(scope: !7271, file: !1126, discriminator: 1)
!7282 = !DILocation(line: 1165, column: 19, scope: !7281)
!7283 = !DILocation(line: 1162, column: 9, scope: !7108)
!7284 = !DILocation(line: 1166, column: 16, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7271, file: !1126, line: 1165, column: 57)
!7286 = !DILocation(line: 1166, column: 9, scope: !7285)
!7287 = !DILocation(line: 1168, column: 16, scope: !7285)
!7288 = !DILocation(line: 1169, column: 9, scope: !7285)
!7289 = !DILocation(line: 1173, column: 19, scope: !7069)
!7290 = !DILocation(line: 1173, column: 31, scope: !7069)
!7291 = !DILocation(line: 1173, column: 5, scope: !7069)
!7292 = !DILocation(line: 1175, column: 12, scope: !7069)
!7293 = !DILocation(line: 1175, column: 5, scope: !7069)
!7294 = !DILocation(line: 1176, column: 1, scope: !7069)
!7295 = distinct !DISubprogram(name: "mkv_write_video_color", scope: !1126, file: !1126, line: 874, type: !7296, isLocal: true, isDefinition: true, scopeLine: 874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{!1053, !1332, !1713, !1398}
!7298 = !DILocalVariable(name: "pb", arg: 1, scope: !7295, file: !1126, line: 874, type: !1332)
!7299 = !DILocation(line: 874, column: 47, scope: !7295)
!7300 = !DILocalVariable(name: "par", arg: 2, scope: !7295, file: !1126, line: 874, type: !1713)
!7301 = !DILocation(line: 874, column: 70, scope: !7295)
!7302 = !DILocalVariable(name: "st", arg: 3, scope: !7295, file: !1126, line: 874, type: !1398)
!7303 = !DILocation(line: 874, column: 85, scope: !7295)
!7304 = !DILocalVariable(name: "dyn_cp", scope: !7295, file: !1126, line: 875, type: !1332)
!7305 = !DILocation(line: 875, column: 18, scope: !7295)
!7306 = !DILocalVariable(name: "colorinfo_ptr", scope: !7295, file: !1126, line: 876, type: !1110)
!7307 = !DILocation(line: 876, column: 14, scope: !7295)
!7308 = !DILocalVariable(name: "side_data_size", scope: !7295, file: !1126, line: 877, type: !1053)
!7309 = !DILocation(line: 877, column: 9, scope: !7295)
!7310 = !DILocalVariable(name: "ret", scope: !7295, file: !1126, line: 878, type: !1053)
!7311 = !DILocation(line: 878, column: 9, scope: !7295)
!7312 = !DILocalVariable(name: "colorinfo_size", scope: !7295, file: !1126, line: 878, type: !1053)
!7313 = !DILocation(line: 878, column: 14, scope: !7295)
!7314 = !DILocalVariable(name: "side_data", scope: !7295, file: !1126, line: 879, type: !1113)
!7315 = !DILocation(line: 879, column: 20, scope: !7295)
!7316 = !DILocation(line: 881, column: 11, scope: !7295)
!7317 = !DILocation(line: 881, column: 9, scope: !7295)
!7318 = !DILocation(line: 882, column: 9, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 882, column: 9)
!7320 = !DILocation(line: 882, column: 13, scope: !7319)
!7321 = !DILocation(line: 882, column: 9, scope: !7295)
!7322 = !DILocation(line: 883, column: 16, scope: !7319)
!7323 = !DILocation(line: 883, column: 9, scope: !7319)
!7324 = !DILocation(line: 885, column: 9, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 885, column: 9)
!7326 = !DILocation(line: 885, column: 14, scope: !7325)
!7327 = !DILocation(line: 885, column: 24, scope: !7325)
!7328 = !DILocation(line: 885, column: 49, scope: !7325)
!7329 = !DILocation(line: 886, column: 9, scope: !7325)
!7330 = !DILocation(line: 886, column: 14, scope: !7325)
!7331 = !DILocation(line: 886, column: 24, scope: !7325)
!7332 = !DILocation(line: 885, column: 9, scope: !7333)
!7333 = !DILexicalBlockFile(scope: !7295, file: !1126, discriminator: 1)
!7334 = !DILocation(line: 887, column: 23, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7325, file: !1126, line: 886, column: 40)
!7336 = !DILocation(line: 888, column: 23, scope: !7335)
!7337 = !DILocation(line: 888, column: 28, scope: !7335)
!7338 = !DILocation(line: 887, column: 9, scope: !7335)
!7339 = !DILocation(line: 889, column: 5, scope: !7335)
!7340 = !DILocation(line: 890, column: 9, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 890, column: 9)
!7342 = !DILocation(line: 890, column: 14, scope: !7341)
!7343 = !DILocation(line: 890, column: 26, scope: !7341)
!7344 = !DILocation(line: 890, column: 51, scope: !7341)
!7345 = !DILocation(line: 891, column: 9, scope: !7341)
!7346 = !DILocation(line: 891, column: 14, scope: !7341)
!7347 = !DILocation(line: 891, column: 26, scope: !7341)
!7348 = !DILocation(line: 890, column: 9, scope: !7333)
!7349 = !DILocation(line: 892, column: 23, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7341, file: !1126, line: 891, column: 42)
!7351 = !DILocation(line: 892, column: 39, scope: !7350)
!7352 = !DILocation(line: 892, column: 44, scope: !7350)
!7353 = !DILocation(line: 892, column: 9, scope: !7350)
!7354 = !DILocation(line: 893, column: 5, scope: !7350)
!7355 = !DILocation(line: 894, column: 9, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 894, column: 9)
!7357 = !DILocation(line: 894, column: 14, scope: !7356)
!7358 = !DILocation(line: 894, column: 30, scope: !7356)
!7359 = !DILocation(line: 894, column: 55, scope: !7356)
!7360 = !DILocation(line: 895, column: 9, scope: !7356)
!7361 = !DILocation(line: 895, column: 14, scope: !7356)
!7362 = !DILocation(line: 895, column: 30, scope: !7356)
!7363 = !DILocation(line: 894, column: 9, scope: !7333)
!7364 = !DILocation(line: 896, column: 23, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7356, file: !1126, line: 895, column: 46)
!7366 = !DILocation(line: 896, column: 39, scope: !7365)
!7367 = !DILocation(line: 896, column: 44, scope: !7365)
!7368 = !DILocation(line: 896, column: 9, scope: !7365)
!7369 = !DILocation(line: 897, column: 5, scope: !7365)
!7370 = !DILocation(line: 898, column: 9, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 898, column: 9)
!7372 = !DILocation(line: 898, column: 14, scope: !7371)
!7373 = !DILocation(line: 898, column: 26, scope: !7371)
!7374 = !DILocation(line: 898, column: 53, scope: !7371)
!7375 = !DILocation(line: 899, column: 9, scope: !7371)
!7376 = !DILocation(line: 899, column: 14, scope: !7371)
!7377 = !DILocation(line: 899, column: 26, scope: !7371)
!7378 = !DILocation(line: 898, column: 9, scope: !7333)
!7379 = !DILocation(line: 900, column: 23, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7371, file: !1126, line: 899, column: 44)
!7381 = !DILocation(line: 900, column: 39, scope: !7380)
!7382 = !DILocation(line: 900, column: 44, scope: !7380)
!7383 = !DILocation(line: 900, column: 9, scope: !7380)
!7384 = !DILocation(line: 901, column: 5, scope: !7380)
!7385 = !DILocation(line: 902, column: 9, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 902, column: 9)
!7387 = !DILocation(line: 902, column: 14, scope: !7386)
!7388 = !DILocation(line: 902, column: 30, scope: !7386)
!7389 = !DILocation(line: 902, column: 58, scope: !7386)
!7390 = !DILocation(line: 903, column: 9, scope: !7386)
!7391 = !DILocation(line: 903, column: 14, scope: !7386)
!7392 = !DILocation(line: 903, column: 30, scope: !7386)
!7393 = !DILocation(line: 902, column: 9, scope: !7333)
!7394 = !DILocalVariable(name: "xpos", scope: !7395, file: !1126, line: 904, type: !1053)
!7395 = distinct !DILexicalBlock(scope: !7386, file: !1126, line: 903, column: 51)
!7396 = !DILocation(line: 904, column: 13, scope: !7395)
!7397 = !DILocalVariable(name: "ypos", scope: !7395, file: !1126, line: 904, type: !1053)
!7398 = !DILocation(line: 904, column: 19, scope: !7395)
!7399 = !DILocation(line: 906, column: 50, scope: !7395)
!7400 = !DILocation(line: 906, column: 55, scope: !7395)
!7401 = !DILocation(line: 906, column: 9, scope: !7395)
!7402 = !DILocation(line: 907, column: 23, scope: !7395)
!7403 = !DILocation(line: 907, column: 40, scope: !7395)
!7404 = !DILocation(line: 907, column: 45, scope: !7395)
!7405 = !DILocation(line: 907, column: 51, scope: !7395)
!7406 = !DILocation(line: 907, column: 39, scope: !7395)
!7407 = !DILocation(line: 907, column: 9, scope: !7395)
!7408 = !DILocation(line: 908, column: 23, scope: !7395)
!7409 = !DILocation(line: 908, column: 40, scope: !7395)
!7410 = !DILocation(line: 908, column: 45, scope: !7395)
!7411 = !DILocation(line: 908, column: 51, scope: !7395)
!7412 = !DILocation(line: 908, column: 39, scope: !7395)
!7413 = !DILocation(line: 908, column: 9, scope: !7395)
!7414 = !DILocation(line: 909, column: 5, scope: !7395)
!7415 = !DILocation(line: 911, column: 41, scope: !7295)
!7416 = !DILocation(line: 911, column: 17, scope: !7295)
!7417 = !DILocation(line: 911, column: 15, scope: !7295)
!7418 = !DILocation(line: 913, column: 9, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 913, column: 9)
!7420 = !DILocation(line: 913, column: 9, scope: !7295)
!7421 = !DILocalVariable(name: "metadata", scope: !7422, file: !1126, line: 914, type: !1061)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !1126, line: 913, column: 25)
!7423 = !DILocation(line: 914, column: 39, scope: !7422)
!7424 = !DILocation(line: 915, column: 44, scope: !7422)
!7425 = !DILocation(line: 915, column: 13, scope: !7422)
!7426 = !DILocation(line: 916, column: 23, scope: !7422)
!7427 = !DILocation(line: 916, column: 39, scope: !7422)
!7428 = !DILocation(line: 916, column: 49, scope: !7422)
!7429 = !DILocation(line: 916, column: 9, scope: !7422)
!7430 = !DILocation(line: 917, column: 23, scope: !7422)
!7431 = !DILocation(line: 917, column: 39, scope: !7422)
!7432 = !DILocation(line: 917, column: 49, scope: !7422)
!7433 = !DILocation(line: 917, column: 9, scope: !7422)
!7434 = !DILocation(line: 918, column: 5, scope: !7422)
!7435 = !DILocation(line: 920, column: 41, scope: !7295)
!7436 = !DILocation(line: 920, column: 17, scope: !7295)
!7437 = !DILocation(line: 920, column: 15, scope: !7295)
!7438 = !DILocation(line: 922, column: 9, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 922, column: 9)
!7440 = !DILocation(line: 922, column: 24, scope: !7439)
!7441 = !DILocation(line: 922, column: 9, scope: !7295)
!7442 = !DILocalVariable(name: "meta_element", scope: !7443, file: !1126, line: 923, type: !2468)
!7443 = distinct !DILexicalBlock(scope: !7439, file: !1126, line: 922, column: 63)
!7444 = !DILocation(line: 923, column: 21, scope: !7443)
!7445 = !DILocation(line: 924, column: 13, scope: !7443)
!7446 = !DILocation(line: 923, column: 36, scope: !7443)
!7447 = !DILocalVariable(name: "metadata", scope: !7443, file: !1126, line: 925, type: !1069)
!7448 = !DILocation(line: 925, column: 43, scope: !7443)
!7449 = !DILocation(line: 926, column: 48, scope: !7443)
!7450 = !DILocation(line: 926, column: 13, scope: !7443)
!7451 = !DILocation(line: 927, column: 13, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7443, file: !1126, line: 927, column: 13)
!7453 = !DILocation(line: 927, column: 23, scope: !7452)
!7454 = !DILocation(line: 927, column: 13, scope: !7443)
!7455 = !DILocation(line: 928, column: 28, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7452, file: !1126, line: 927, column: 38)
!7457 = !DILocation(line: 929, column: 35, scope: !7456)
!7458 = !DILocation(line: 929, column: 45, scope: !7456)
!7459 = !DILocation(line: 929, column: 28, scope: !7456)
!7460 = !DILocation(line: 928, column: 13, scope: !7456)
!7461 = !DILocation(line: 930, column: 28, scope: !7456)
!7462 = !DILocation(line: 931, column: 35, scope: !7456)
!7463 = !DILocation(line: 931, column: 45, scope: !7456)
!7464 = !DILocation(line: 931, column: 28, scope: !7456)
!7465 = !DILocation(line: 930, column: 13, scope: !7456)
!7466 = !DILocation(line: 932, column: 28, scope: !7456)
!7467 = !DILocation(line: 933, column: 35, scope: !7456)
!7468 = !DILocation(line: 933, column: 45, scope: !7456)
!7469 = !DILocation(line: 933, column: 28, scope: !7456)
!7470 = !DILocation(line: 932, column: 13, scope: !7456)
!7471 = !DILocation(line: 934, column: 28, scope: !7456)
!7472 = !DILocation(line: 935, column: 35, scope: !7456)
!7473 = !DILocation(line: 935, column: 45, scope: !7456)
!7474 = !DILocation(line: 935, column: 28, scope: !7456)
!7475 = !DILocation(line: 934, column: 13, scope: !7456)
!7476 = !DILocation(line: 936, column: 28, scope: !7456)
!7477 = !DILocation(line: 937, column: 35, scope: !7456)
!7478 = !DILocation(line: 937, column: 45, scope: !7456)
!7479 = !DILocation(line: 937, column: 28, scope: !7456)
!7480 = !DILocation(line: 936, column: 13, scope: !7456)
!7481 = !DILocation(line: 938, column: 28, scope: !7456)
!7482 = !DILocation(line: 939, column: 35, scope: !7456)
!7483 = !DILocation(line: 939, column: 45, scope: !7456)
!7484 = !DILocation(line: 939, column: 28, scope: !7456)
!7485 = !DILocation(line: 938, column: 13, scope: !7456)
!7486 = !DILocation(line: 940, column: 28, scope: !7456)
!7487 = !DILocation(line: 941, column: 35, scope: !7456)
!7488 = !DILocation(line: 941, column: 45, scope: !7456)
!7489 = !DILocation(line: 941, column: 28, scope: !7456)
!7490 = !DILocation(line: 940, column: 13, scope: !7456)
!7491 = !DILocation(line: 942, column: 28, scope: !7456)
!7492 = !DILocation(line: 943, column: 35, scope: !7456)
!7493 = !DILocation(line: 943, column: 45, scope: !7456)
!7494 = !DILocation(line: 943, column: 28, scope: !7456)
!7495 = !DILocation(line: 942, column: 13, scope: !7456)
!7496 = !DILocation(line: 944, column: 9, scope: !7456)
!7497 = !DILocation(line: 945, column: 13, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7443, file: !1126, line: 945, column: 13)
!7499 = !DILocation(line: 945, column: 23, scope: !7498)
!7500 = !DILocation(line: 945, column: 13, scope: !7443)
!7501 = !DILocation(line: 946, column: 28, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7498, file: !1126, line: 945, column: 38)
!7503 = !DILocation(line: 947, column: 35, scope: !7502)
!7504 = !DILocation(line: 947, column: 45, scope: !7502)
!7505 = !DILocation(line: 947, column: 28, scope: !7502)
!7506 = !DILocation(line: 946, column: 13, scope: !7502)
!7507 = !DILocation(line: 948, column: 28, scope: !7502)
!7508 = !DILocation(line: 949, column: 35, scope: !7502)
!7509 = !DILocation(line: 949, column: 45, scope: !7502)
!7510 = !DILocation(line: 949, column: 28, scope: !7502)
!7511 = !DILocation(line: 948, column: 13, scope: !7502)
!7512 = !DILocation(line: 950, column: 9, scope: !7502)
!7513 = !DILocation(line: 951, column: 25, scope: !7443)
!7514 = !DILocation(line: 951, column: 9, scope: !7443)
!7515 = !DILocation(line: 952, column: 5, scope: !7443)
!7516 = !DILocation(line: 954, column: 41, scope: !7295)
!7517 = !DILocation(line: 954, column: 22, scope: !7295)
!7518 = !DILocation(line: 954, column: 20, scope: !7295)
!7519 = !DILocation(line: 955, column: 9, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7295, file: !1126, line: 955, column: 9)
!7521 = !DILocation(line: 955, column: 9, scope: !7295)
!7522 = !DILocalVariable(name: "colorinfo", scope: !7523, file: !1126, line: 956, type: !2468)
!7523 = distinct !DILexicalBlock(scope: !7520, file: !1126, line: 955, column: 25)
!7524 = !DILocation(line: 956, column: 21, scope: !7523)
!7525 = !DILocation(line: 956, column: 51, scope: !7523)
!7526 = !DILocation(line: 956, column: 63, scope: !7523)
!7527 = !DILocation(line: 956, column: 33, scope: !7523)
!7528 = !DILocation(line: 957, column: 20, scope: !7523)
!7529 = !DILocation(line: 957, column: 24, scope: !7523)
!7530 = !DILocation(line: 957, column: 39, scope: !7523)
!7531 = !DILocation(line: 957, column: 9, scope: !7523)
!7532 = !DILocation(line: 958, column: 25, scope: !7523)
!7533 = !DILocation(line: 958, column: 9, scope: !7523)
!7534 = !DILocation(line: 959, column: 5, scope: !7523)
!7535 = !DILocation(line: 960, column: 13, scope: !7295)
!7536 = !DILocation(line: 960, column: 5, scope: !7295)
!7537 = !DILocation(line: 961, column: 5, scope: !7295)
!7538 = !DILocation(line: 962, column: 1, scope: !7295)
!7539 = distinct !DISubprogram(name: "mkv_write_video_projection", scope: !1126, file: !1126, line: 964, type: !7540, isLocal: true, isDefinition: true, scopeLine: 966, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!1053, !2438, !1332, !1398}
!7542 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !7543)
!7543 = distinct !DILocation(line: 1010, column: 34, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 985, column: 36)
!7545 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !7546)
!7546 = distinct !DILocation(line: 1000, column: 34, scope: !7544)
!7547 = !DILocalVariable(name: "s", arg: 1, scope: !7539, file: !1126, line: 964, type: !2438)
!7548 = !DILocation(line: 964, column: 56, scope: !7539)
!7549 = !DILocalVariable(name: "pb", arg: 2, scope: !7539, file: !1126, line: 964, type: !1332)
!7550 = !DILocation(line: 964, column: 72, scope: !7539)
!7551 = !DILocalVariable(name: "st", arg: 3, scope: !7539, file: !1126, line: 965, type: !1398)
!7552 = !DILocation(line: 965, column: 49, scope: !7539)
!7553 = !DILocalVariable(name: "b", scope: !7539, file: !1126, line: 967, type: !1333)
!7554 = !DILocation(line: 967, column: 17, scope: !7539)
!7555 = !DILocalVariable(name: "dyn_cp", scope: !7539, file: !1126, line: 968, type: !1332)
!7556 = !DILocation(line: 968, column: 18, scope: !7539)
!7557 = !DILocalVariable(name: "side_data_size", scope: !7539, file: !1126, line: 969, type: !1053)
!7558 = !DILocation(line: 969, column: 9, scope: !7539)
!7559 = !DILocalVariable(name: "ret", scope: !7539, file: !1126, line: 970, type: !1053)
!7560 = !DILocation(line: 970, column: 9, scope: !7539)
!7561 = !DILocalVariable(name: "projection_size", scope: !7539, file: !1126, line: 970, type: !1053)
!7562 = !DILocation(line: 970, column: 14, scope: !7539)
!7563 = !DILocalVariable(name: "projection_ptr", scope: !7539, file: !1126, line: 971, type: !1110)
!7564 = !DILocation(line: 971, column: 14, scope: !7539)
!7565 = !DILocalVariable(name: "private", scope: !7539, file: !1126, line: 972, type: !5182)
!7566 = !DILocation(line: 972, column: 13, scope: !7539)
!7567 = !DILocalVariable(name: "spherical", scope: !7539, file: !1126, line: 974, type: !1093)
!7568 = !DILocation(line: 974, column: 31, scope: !7539)
!7569 = !DILocation(line: 975, column: 61, scope: !7539)
!7570 = !DILocation(line: 975, column: 37, scope: !7539)
!7571 = !DILocation(line: 975, column: 9, scope: !7539)
!7572 = !DILocation(line: 978, column: 10, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 978, column: 9)
!7574 = !DILocation(line: 978, column: 9, scope: !7539)
!7575 = !DILocation(line: 979, column: 9, scope: !7573)
!7576 = !DILocation(line: 981, column: 11, scope: !7539)
!7577 = !DILocation(line: 981, column: 9, scope: !7539)
!7578 = !DILocation(line: 982, column: 9, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 982, column: 9)
!7580 = !DILocation(line: 982, column: 13, scope: !7579)
!7581 = !DILocation(line: 982, column: 9, scope: !7539)
!7582 = !DILocation(line: 983, column: 16, scope: !7579)
!7583 = !DILocation(line: 983, column: 9, scope: !7579)
!7584 = !DILocation(line: 985, column: 13, scope: !7539)
!7585 = !DILocation(line: 985, column: 24, scope: !7539)
!7586 = !DILocation(line: 985, column: 5, scope: !7539)
!7587 = !DILocation(line: 987, column: 23, scope: !7544)
!7588 = !DILocation(line: 987, column: 9, scope: !7544)
!7589 = !DILocation(line: 989, column: 9, scope: !7544)
!7590 = !DILocation(line: 991, column: 31, scope: !7544)
!7591 = !DILocation(line: 991, column: 9, scope: !7544)
!7592 = !DILocation(line: 992, column: 23, scope: !7544)
!7593 = !DILocation(line: 992, column: 9, scope: !7544)
!7594 = !DILocation(line: 994, column: 9, scope: !7544)
!7595 = !DILocation(line: 995, column: 23, scope: !7544)
!7596 = !DILocation(line: 995, column: 34, scope: !7544)
!7597 = !DILocation(line: 995, column: 9, scope: !7544)
!7598 = !DILocation(line: 996, column: 23, scope: !7544)
!7599 = !DILocation(line: 996, column: 34, scope: !7544)
!7600 = !DILocation(line: 996, column: 9, scope: !7544)
!7601 = !DILocation(line: 997, column: 23, scope: !7544)
!7602 = !DILocation(line: 997, column: 34, scope: !7544)
!7603 = !DILocation(line: 997, column: 9, scope: !7544)
!7604 = !DILocation(line: 998, column: 23, scope: !7544)
!7605 = !DILocation(line: 998, column: 34, scope: !7544)
!7606 = !DILocation(line: 998, column: 9, scope: !7544)
!7607 = !DILocation(line: 999, column: 25, scope: !7544)
!7608 = !DILocation(line: 1000, column: 25, scope: !7544)
!7609 = !DILocation(line: 1000, column: 34, scope: !7544)
!7610 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !7546)
!7611 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !7546)
!7612 = !DILocation(line: 999, column: 9, scope: !7544)
!7613 = !DILocation(line: 1001, column: 9, scope: !7544)
!7614 = !DILocation(line: 1003, column: 31, scope: !7544)
!7615 = !DILocation(line: 1003, column: 9, scope: !7544)
!7616 = !DILocation(line: 1004, column: 23, scope: !7544)
!7617 = !DILocation(line: 1004, column: 9, scope: !7544)
!7618 = !DILocation(line: 1006, column: 9, scope: !7544)
!7619 = !DILocation(line: 1007, column: 9, scope: !7544)
!7620 = !DILocation(line: 1008, column: 23, scope: !7544)
!7621 = !DILocation(line: 1008, column: 34, scope: !7544)
!7622 = !DILocation(line: 1008, column: 9, scope: !7544)
!7623 = !DILocation(line: 1009, column: 25, scope: !7544)
!7624 = !DILocation(line: 1010, column: 25, scope: !7544)
!7625 = !DILocation(line: 1010, column: 34, scope: !7544)
!7626 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !7543)
!7627 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !7543)
!7628 = !DILocation(line: 1009, column: 9, scope: !7544)
!7629 = !DILocation(line: 1011, column: 9, scope: !7544)
!7630 = !DILocation(line: 1013, column: 16, scope: !7544)
!7631 = !DILocation(line: 1013, column: 9, scope: !7544)
!7632 = !DILocation(line: 1014, column: 9, scope: !7544)
!7633 = !DILocation(line: 1017, column: 9, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 1017, column: 9)
!7635 = !DILocation(line: 1017, column: 20, scope: !7634)
!7636 = !DILocation(line: 1017, column: 9, scope: !7539)
!7637 = !DILocation(line: 1018, column: 24, scope: !7634)
!7638 = !DILocation(line: 1019, column: 33, scope: !7634)
!7639 = !DILocation(line: 1019, column: 44, scope: !7634)
!7640 = !DILocation(line: 1019, column: 24, scope: !7634)
!7641 = !DILocation(line: 1019, column: 48, scope: !7634)
!7642 = !DILocation(line: 1018, column: 9, scope: !7634)
!7643 = !DILocation(line: 1020, column: 9, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 1020, column: 9)
!7645 = !DILocation(line: 1020, column: 20, scope: !7644)
!7646 = !DILocation(line: 1020, column: 9, scope: !7539)
!7647 = !DILocation(line: 1021, column: 24, scope: !7644)
!7648 = !DILocation(line: 1022, column: 33, scope: !7644)
!7649 = !DILocation(line: 1022, column: 44, scope: !7644)
!7650 = !DILocation(line: 1022, column: 24, scope: !7644)
!7651 = !DILocation(line: 1022, column: 50, scope: !7644)
!7652 = !DILocation(line: 1021, column: 9, scope: !7644)
!7653 = !DILocation(line: 1023, column: 9, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 1023, column: 9)
!7655 = !DILocation(line: 1023, column: 20, scope: !7654)
!7656 = !DILocation(line: 1023, column: 9, scope: !7539)
!7657 = !DILocation(line: 1024, column: 24, scope: !7654)
!7658 = !DILocation(line: 1025, column: 33, scope: !7654)
!7659 = !DILocation(line: 1025, column: 44, scope: !7654)
!7660 = !DILocation(line: 1025, column: 24, scope: !7654)
!7661 = !DILocation(line: 1025, column: 49, scope: !7654)
!7662 = !DILocation(line: 1024, column: 9, scope: !7654)
!7663 = !DILocation(line: 1023, column: 20, scope: !7664)
!7664 = !DILexicalBlockFile(scope: !7654, file: !1126, discriminator: 1)
!7665 = !DILocation(line: 1028, column: 42, scope: !7539)
!7666 = !DILocation(line: 1028, column: 23, scope: !7539)
!7667 = !DILocation(line: 1028, column: 21, scope: !7539)
!7668 = !DILocation(line: 1029, column: 9, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7539, file: !1126, line: 1029, column: 9)
!7670 = !DILocation(line: 1029, column: 9, scope: !7539)
!7671 = !DILocalVariable(name: "projection", scope: !7672, file: !1126, line: 1030, type: !2468)
!7672 = distinct !DILexicalBlock(scope: !7669, file: !1126, line: 1029, column: 26)
!7673 = !DILocation(line: 1030, column: 21, scope: !7672)
!7674 = !DILocation(line: 1030, column: 52, scope: !7672)
!7675 = !DILocation(line: 1032, column: 52, scope: !7672)
!7676 = !DILocation(line: 1030, column: 34, scope: !7672)
!7677 = !DILocation(line: 1033, column: 20, scope: !7672)
!7678 = !DILocation(line: 1033, column: 24, scope: !7672)
!7679 = !DILocation(line: 1033, column: 40, scope: !7672)
!7680 = !DILocation(line: 1033, column: 9, scope: !7672)
!7681 = !DILocation(line: 1034, column: 25, scope: !7672)
!7682 = !DILocation(line: 1034, column: 9, scope: !7672)
!7683 = !DILocation(line: 1035, column: 5, scope: !7672)
!7684 = !DILocation(line: 1036, column: 14, scope: !7539)
!7685 = !DILocation(line: 1036, column: 5, scope: !7539)
!7686 = !DILocation(line: 1038, column: 5, scope: !7539)
!7687 = !DILocation(line: 1039, column: 1, scope: !7539)
!7688 = distinct !DISubprogram(name: "mkv_write_codecprivate", scope: !1126, file: !1126, line: 807, type: !7689, isLocal: true, isDefinition: true, scopeLine: 810, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!1053, !2438, !1332, !1713, !1053, !1053}
!7691 = !DILocalVariable(name: "s", arg: 1, scope: !7688, file: !1126, line: 807, type: !2438)
!7692 = !DILocation(line: 807, column: 52, scope: !7688)
!7693 = !DILocalVariable(name: "pb", arg: 2, scope: !7688, file: !1126, line: 807, type: !1332)
!7694 = !DILocation(line: 807, column: 68, scope: !7688)
!7695 = !DILocalVariable(name: "par", arg: 3, scope: !7688, file: !1126, line: 808, type: !1713)
!7696 = !DILocation(line: 808, column: 54, scope: !7688)
!7697 = !DILocalVariable(name: "native_id", arg: 4, scope: !7688, file: !1126, line: 809, type: !1053)
!7698 = !DILocation(line: 809, column: 39, scope: !7688)
!7699 = !DILocalVariable(name: "qt_id", arg: 5, scope: !7688, file: !1126, line: 809, type: !1053)
!7700 = !DILocation(line: 809, column: 54, scope: !7688)
!7701 = !DILocalVariable(name: "dyn_cp", scope: !7688, file: !1126, line: 811, type: !1332)
!7702 = !DILocation(line: 811, column: 18, scope: !7688)
!7703 = !DILocalVariable(name: "codecpriv", scope: !7688, file: !1126, line: 812, type: !1110)
!7704 = !DILocation(line: 812, column: 14, scope: !7688)
!7705 = !DILocalVariable(name: "ret", scope: !7688, file: !1126, line: 813, type: !1053)
!7706 = !DILocation(line: 813, column: 9, scope: !7688)
!7707 = !DILocalVariable(name: "codecpriv_size", scope: !7688, file: !1126, line: 813, type: !1053)
!7708 = !DILocation(line: 813, column: 14, scope: !7688)
!7709 = !DILocation(line: 815, column: 11, scope: !7688)
!7710 = !DILocation(line: 815, column: 9, scope: !7688)
!7711 = !DILocation(line: 816, column: 9, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7688, file: !1126, line: 816, column: 9)
!7713 = !DILocation(line: 816, column: 13, scope: !7712)
!7714 = !DILocation(line: 816, column: 9, scope: !7688)
!7715 = !DILocation(line: 817, column: 16, scope: !7712)
!7716 = !DILocation(line: 817, column: 9, scope: !7712)
!7717 = !DILocation(line: 819, column: 9, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7688, file: !1126, line: 819, column: 9)
!7719 = !DILocation(line: 819, column: 9, scope: !7688)
!7720 = !DILocation(line: 820, column: 45, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7718, file: !1126, line: 819, column: 20)
!7722 = !DILocation(line: 820, column: 48, scope: !7721)
!7723 = !DILocation(line: 820, column: 52, scope: !7721)
!7724 = !DILocation(line: 820, column: 57, scope: !7721)
!7725 = !DILocation(line: 820, column: 15, scope: !7721)
!7726 = !DILocation(line: 820, column: 13, scope: !7721)
!7727 = !DILocation(line: 821, column: 5, scope: !7721)
!7728 = !DILocation(line: 821, column: 16, scope: !7729)
!7729 = !DILexicalBlockFile(scope: !7730, file: !1126, discriminator: 1)
!7730 = distinct !DILexicalBlock(scope: !7718, file: !1126, line: 821, column: 16)
!7731 = !DILocation(line: 821, column: 21, scope: !7729)
!7732 = !DILocation(line: 821, column: 32, scope: !7729)
!7733 = !DILocation(line: 822, column: 13, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !1126, line: 822, column: 13)
!7735 = distinct !DILexicalBlock(scope: !7730, file: !1126, line: 821, column: 55)
!7736 = !DILocation(line: 822, column: 13, scope: !7735)
!7737 = !DILocation(line: 823, column: 18, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !1126, line: 823, column: 17)
!7739 = distinct !DILexicalBlock(scope: !7734, file: !1126, line: 822, column: 20)
!7740 = !DILocation(line: 823, column: 23, scope: !7738)
!7741 = !DILocation(line: 823, column: 17, scope: !7739)
!7742 = !DILocation(line: 825, column: 53, scope: !7738)
!7743 = !DILocation(line: 825, column: 58, scope: !7738)
!7744 = !DILocation(line: 824, column: 34, scope: !7738)
!7745 = !DILocation(line: 824, column: 17, scope: !7738)
!7746 = !DILocation(line: 824, column: 22, scope: !7738)
!7747 = !DILocation(line: 824, column: 32, scope: !7738)
!7748 = !DILocation(line: 826, column: 58, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7739, file: !1126, line: 826, column: 18)
!7750 = !DILocation(line: 826, column: 63, scope: !7749)
!7751 = !DILocation(line: 826, column: 18, scope: !7749)
!7752 = !DILocation(line: 826, column: 77, scope: !7749)
!7753 = !DILocation(line: 826, column: 82, scope: !7749)
!7754 = !DILocation(line: 826, column: 74, scope: !7749)
!7755 = !DILocation(line: 827, column: 17, scope: !7749)
!7756 = !DILocation(line: 827, column: 22, scope: !7757)
!7757 = !DILexicalBlockFile(scope: !7749, file: !1126, discriminator: 1)
!7758 = !DILocation(line: 827, column: 27, scope: !7757)
!7759 = !DILocation(line: 827, column: 42, scope: !7757)
!7760 = !DILocation(line: 827, column: 117, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !7749, file: !1126, discriminator: 2)
!7762 = !DILocation(line: 827, column: 122, scope: !7761)
!7763 = !DILocation(line: 827, column: 132, scope: !7761)
!7764 = !DILocation(line: 827, column: 139, scope: !7761)
!7765 = !DILocation(line: 827, column: 45, scope: !7761)
!7766 = !DILocation(line: 827, column: 146, scope: !7761)
!7767 = !DILocation(line: 827, column: 151, scope: !7761)
!7768 = !DILocation(line: 827, column: 143, scope: !7761)
!7769 = !DILocation(line: 826, column: 18, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !7739, file: !1126, discriminator: 1)
!7771 = !DILocalVariable(name: "i", scope: !7772, file: !1126, line: 829, type: !1053)
!7772 = distinct !DILexicalBlock(scope: !7749, file: !1126, line: 828, column: 15)
!7773 = !DILocation(line: 829, column: 21, scope: !7772)
!7774 = !DILocation(line: 830, column: 27, scope: !7772)
!7775 = !DILocation(line: 830, column: 42, scope: !7772)
!7776 = !DILocation(line: 830, column: 47, scope: !7772)
!7777 = !DILocation(line: 830, column: 40, scope: !7772)
!7778 = !DILocation(line: 830, column: 17, scope: !7772)
!7779 = !DILocation(line: 831, column: 27, scope: !7772)
!7780 = !DILocation(line: 831, column: 35, scope: !7772)
!7781 = !DILocation(line: 831, column: 40, scope: !7772)
!7782 = !DILocation(line: 831, column: 17, scope: !7772)
!7783 = !DILocation(line: 832, column: 23, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7772, file: !1126, line: 832, column: 17)
!7785 = !DILocation(line: 832, column: 21, scope: !7784)
!7786 = !DILocation(line: 832, column: 28, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !7788, file: !1126, discriminator: 1)
!7788 = distinct !DILexicalBlock(scope: !7784, file: !1126, line: 832, column: 17)
!7789 = !DILocation(line: 832, column: 30, scope: !7787)
!7790 = !DILocation(line: 832, column: 17, scope: !7787)
!7791 = !DILocation(line: 833, column: 29, scope: !7788)
!7792 = !DILocation(line: 833, column: 21, scope: !7788)
!7793 = !DILocation(line: 832, column: 43, scope: !7794)
!7794 = !DILexicalBlockFile(scope: !7788, file: !1126, discriminator: 2)
!7795 = !DILocation(line: 832, column: 17, scope: !7794)
!7796 = distinct !{!7796, !7797}
!7797 = !DILocation(line: 832, column: 17, scope: !7772)
!7798 = !DILocation(line: 834, column: 13, scope: !7772)
!7799 = !DILocation(line: 835, column: 24, scope: !7739)
!7800 = !DILocation(line: 835, column: 32, scope: !7739)
!7801 = !DILocation(line: 835, column: 37, scope: !7739)
!7802 = !DILocation(line: 835, column: 48, scope: !7739)
!7803 = !DILocation(line: 835, column: 53, scope: !7739)
!7804 = !DILocation(line: 835, column: 13, scope: !7739)
!7805 = !DILocation(line: 836, column: 9, scope: !7739)
!7806 = !DILocation(line: 837, column: 54, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !1126, line: 837, column: 17)
!7808 = distinct !DILexicalBlock(scope: !7734, file: !1126, line: 836, column: 16)
!7809 = !DILocation(line: 837, column: 59, scope: !7807)
!7810 = !DILocation(line: 837, column: 18, scope: !7807)
!7811 = !DILocation(line: 837, column: 17, scope: !7808)
!7812 = !DILocation(line: 838, column: 24, scope: !7807)
!7813 = !DILocation(line: 839, column: 41, scope: !7807)
!7814 = !DILocation(line: 839, column: 46, scope: !7807)
!7815 = !DILocation(line: 839, column: 24, scope: !7807)
!7816 = !DILocation(line: 838, column: 17, scope: !7807)
!7817 = !DILocation(line: 841, column: 18, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7808, file: !1126, line: 841, column: 17)
!7819 = !DILocation(line: 841, column: 23, scope: !7818)
!7820 = !DILocation(line: 841, column: 17, scope: !7808)
!7821 = !DILocation(line: 843, column: 51, scope: !7818)
!7822 = !DILocation(line: 843, column: 56, scope: !7818)
!7823 = !DILocation(line: 842, column: 34, scope: !7818)
!7824 = !DILocation(line: 842, column: 17, scope: !7818)
!7825 = !DILocation(line: 842, column: 22, scope: !7818)
!7826 = !DILocation(line: 842, column: 32, scope: !7818)
!7827 = !DILocation(line: 844, column: 18, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7808, file: !1126, line: 844, column: 17)
!7829 = !DILocation(line: 844, column: 23, scope: !7828)
!7830 = !DILocation(line: 844, column: 33, scope: !7828)
!7831 = !DILocation(line: 844, column: 36, scope: !7832)
!7832 = !DILexicalBlockFile(scope: !7828, file: !1126, discriminator: 1)
!7833 = !DILocation(line: 844, column: 41, scope: !7832)
!7834 = !DILocation(line: 844, column: 50, scope: !7832)
!7835 = !DILocation(line: 844, column: 17, scope: !7832)
!7836 = !DILocation(line: 845, column: 24, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7828, file: !1126, line: 844, column: 75)
!7838 = !DILocation(line: 846, column: 41, scope: !7837)
!7839 = !DILocation(line: 846, column: 46, scope: !7837)
!7840 = !DILocation(line: 846, column: 24, scope: !7837)
!7841 = !DILocation(line: 845, column: 17, scope: !7837)
!7842 = !DILocation(line: 847, column: 21, scope: !7837)
!7843 = !DILocation(line: 848, column: 13, scope: !7837)
!7844 = !DILocation(line: 850, column: 31, scope: !7808)
!7845 = !DILocation(line: 850, column: 39, scope: !7808)
!7846 = !DILocation(line: 850, column: 13, scope: !7808)
!7847 = !DILocation(line: 852, column: 5, scope: !7735)
!7848 = !DILocation(line: 852, column: 16, scope: !7849)
!7849 = !DILexicalBlockFile(scope: !7850, file: !1126, discriminator: 1)
!7850 = distinct !DILexicalBlock(scope: !7730, file: !1126, line: 852, column: 16)
!7851 = !DILocation(line: 852, column: 21, scope: !7849)
!7852 = !DILocation(line: 852, column: 32, scope: !7849)
!7853 = !DILocalVariable(name: "tag", scope: !7854, file: !1126, line: 853, type: !1050)
!7854 = distinct !DILexicalBlock(scope: !7850, file: !1126, line: 852, column: 55)
!7855 = !DILocation(line: 853, column: 22, scope: !7854)
!7856 = !DILocation(line: 854, column: 51, scope: !7854)
!7857 = !DILocation(line: 854, column: 56, scope: !7854)
!7858 = !DILocation(line: 854, column: 15, scope: !7854)
!7859 = !DILocation(line: 854, column: 13, scope: !7854)
!7860 = !DILocation(line: 855, column: 14, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7854, file: !1126, line: 855, column: 13)
!7862 = !DILocation(line: 855, column: 13, scope: !7854)
!7863 = !DILocation(line: 856, column: 20, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7861, file: !1126, line: 855, column: 19)
!7865 = !DILocation(line: 857, column: 37, scope: !7864)
!7866 = !DILocation(line: 857, column: 42, scope: !7864)
!7867 = !DILocation(line: 857, column: 20, scope: !7864)
!7868 = !DILocation(line: 856, column: 13, scope: !7864)
!7869 = !DILocation(line: 858, column: 17, scope: !7864)
!7870 = !DILocation(line: 859, column: 9, scope: !7864)
!7871 = !DILocation(line: 860, column: 14, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7854, file: !1126, line: 860, column: 13)
!7873 = !DILocation(line: 860, column: 19, scope: !7872)
!7874 = !DILocation(line: 860, column: 13, scope: !7854)
!7875 = !DILocation(line: 861, column: 30, scope: !7872)
!7876 = !DILocation(line: 861, column: 13, scope: !7872)
!7877 = !DILocation(line: 861, column: 18, scope: !7872)
!7878 = !DILocation(line: 861, column: 28, scope: !7872)
!7879 = !DILocation(line: 863, column: 27, scope: !7854)
!7880 = !DILocation(line: 863, column: 30, scope: !7854)
!7881 = !DILocation(line: 863, column: 38, scope: !7854)
!7882 = !DILocation(line: 863, column: 9, scope: !7854)
!7883 = !DILocation(line: 864, column: 5, scope: !7854)
!7884 = !DILocation(line: 866, column: 41, scope: !7688)
!7885 = !DILocation(line: 866, column: 22, scope: !7688)
!7886 = !DILocation(line: 866, column: 20, scope: !7688)
!7887 = !DILocation(line: 867, column: 9, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7688, file: !1126, line: 867, column: 9)
!7889 = !DILocation(line: 867, column: 9, scope: !7688)
!7890 = !DILocation(line: 868, column: 25, scope: !7888)
!7891 = !DILocation(line: 868, column: 37, scope: !7888)
!7892 = !DILocation(line: 869, column: 25, scope: !7888)
!7893 = !DILocation(line: 868, column: 9, scope: !7888)
!7894 = !DILocation(line: 870, column: 13, scope: !7688)
!7895 = !DILocation(line: 870, column: 5, scope: !7688)
!7896 = !DILocation(line: 871, column: 12, scope: !7688)
!7897 = !DILocation(line: 871, column: 5, scope: !7688)
!7898 = !DILocation(line: 872, column: 1, scope: !7688)
!7899 = distinct !DISubprogram(name: "av_q2d", scope: !1077, file: !1077, line: 104, type: !7900, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!1092, !1076}
!7902 = !DILocalVariable(name: "a", arg: 1, scope: !7899, file: !1077, line: 104, type: !1076)
!7903 = !DILocation(line: 104, column: 40, scope: !7899)
!7904 = !DILocation(line: 105, column: 14, scope: !7899)
!7905 = !DILocation(line: 105, column: 12, scope: !7899)
!7906 = !DILocation(line: 105, column: 31, scope: !7899)
!7907 = !DILocation(line: 105, column: 20, scope: !7899)
!7908 = !DILocation(line: 105, column: 18, scope: !7899)
!7909 = !DILocation(line: 105, column: 5, scope: !7899)
!7910 = distinct !DISubprogram(name: "mkv_write_native_codecprivate", scope: !1126, file: !1126, line: 754, type: !7911, isLocal: true, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!1053, !2438, !1332, !1713, !1332}
!7913 = !DILocalVariable(name: "s", arg: 1, scope: !7910, file: !1126, line: 754, type: !2438)
!7914 = !DILocation(line: 754, column: 59, scope: !7910)
!7915 = !DILocalVariable(name: "pb", arg: 2, scope: !7910, file: !1126, line: 754, type: !1332)
!7916 = !DILocation(line: 754, column: 75, scope: !7910)
!7917 = !DILocalVariable(name: "par", arg: 3, scope: !7910, file: !1126, line: 755, type: !1713)
!7918 = !DILocation(line: 755, column: 61, scope: !7910)
!7919 = !DILocalVariable(name: "dyn_cp", arg: 4, scope: !7910, file: !1126, line: 756, type: !1332)
!7920 = !DILocation(line: 756, column: 55, scope: !7910)
!7921 = !DILocation(line: 758, column: 13, scope: !7910)
!7922 = !DILocation(line: 758, column: 18, scope: !7910)
!7923 = !DILocation(line: 758, column: 5, scope: !7910)
!7924 = !DILocation(line: 761, column: 35, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7910, file: !1126, line: 758, column: 28)
!7926 = !DILocation(line: 761, column: 38, scope: !7925)
!7927 = !DILocation(line: 761, column: 46, scope: !7925)
!7928 = !DILocation(line: 761, column: 16, scope: !7925)
!7929 = !DILocation(line: 761, column: 9, scope: !7925)
!7930 = !DILocation(line: 763, column: 35, scope: !7925)
!7931 = !DILocation(line: 763, column: 38, scope: !7925)
!7932 = !DILocation(line: 763, column: 46, scope: !7925)
!7933 = !DILocation(line: 763, column: 16, scope: !7925)
!7934 = !DILocation(line: 763, column: 9, scope: !7925)
!7935 = !DILocation(line: 765, column: 33, scope: !7925)
!7936 = !DILocation(line: 765, column: 41, scope: !7925)
!7937 = !DILocation(line: 765, column: 16, scope: !7925)
!7938 = !DILocation(line: 765, column: 9, scope: !7925)
!7939 = !DILocation(line: 767, column: 35, scope: !7925)
!7940 = !DILocation(line: 767, column: 43, scope: !7925)
!7941 = !DILocation(line: 767, column: 48, scope: !7925)
!7942 = !DILocation(line: 768, column: 35, scope: !7925)
!7943 = !DILocation(line: 768, column: 40, scope: !7925)
!7944 = !DILocation(line: 767, column: 16, scope: !7925)
!7945 = !DILocation(line: 767, column: 9, scope: !7925)
!7946 = !DILocation(line: 770, column: 28, scope: !7925)
!7947 = !DILocation(line: 770, column: 36, scope: !7925)
!7948 = !DILocation(line: 770, column: 41, scope: !7925)
!7949 = !DILocation(line: 771, column: 28, scope: !7925)
!7950 = !DILocation(line: 771, column: 33, scope: !7925)
!7951 = !DILocation(line: 770, column: 9, scope: !7925)
!7952 = !DILocation(line: 772, column: 9, scope: !7925)
!7953 = !DILocation(line: 774, column: 13, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7925, file: !1126, line: 774, column: 13)
!7955 = !DILocation(line: 774, column: 18, scope: !7954)
!7956 = !DILocation(line: 774, column: 13, scope: !7925)
!7957 = !DILocation(line: 775, column: 39, scope: !7954)
!7958 = !DILocation(line: 775, column: 47, scope: !7954)
!7959 = !DILocation(line: 775, column: 52, scope: !7954)
!7960 = !DILocation(line: 776, column: 39, scope: !7954)
!7961 = !DILocation(line: 776, column: 44, scope: !7954)
!7962 = !DILocation(line: 775, column: 20, scope: !7954)
!7963 = !DILocation(line: 775, column: 13, scope: !7954)
!7964 = !DILocation(line: 778, column: 27, scope: !7954)
!7965 = !DILocation(line: 778, column: 13, scope: !7954)
!7966 = !DILocation(line: 779, column: 9, scope: !7925)
!7967 = !DILocation(line: 781, column: 13, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7925, file: !1126, line: 781, column: 13)
!7969 = !DILocation(line: 781, column: 18, scope: !7968)
!7970 = !DILocation(line: 781, column: 33, scope: !7968)
!7971 = !DILocation(line: 781, column: 13, scope: !7925)
!7972 = !DILocation(line: 782, column: 20, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7968, file: !1126, line: 781, column: 39)
!7974 = !DILocation(line: 782, column: 13, scope: !7973)
!7975 = !DILocation(line: 785, column: 13, scope: !7973)
!7976 = !DILocation(line: 787, column: 24, scope: !7968)
!7977 = !DILocation(line: 787, column: 32, scope: !7968)
!7978 = !DILocation(line: 787, column: 37, scope: !7968)
!7979 = !DILocation(line: 787, column: 47, scope: !7968)
!7980 = !DILocation(line: 788, column: 24, scope: !7968)
!7981 = !DILocation(line: 788, column: 29, scope: !7968)
!7982 = !DILocation(line: 788, column: 44, scope: !7968)
!7983 = !DILocation(line: 787, column: 13, scope: !7968)
!7984 = !DILocation(line: 789, column: 9, scope: !7925)
!7985 = !DILocation(line: 791, column: 13, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7925, file: !1126, line: 791, column: 13)
!7987 = !DILocation(line: 791, column: 18, scope: !7986)
!7988 = !DILocation(line: 791, column: 13, scope: !7925)
!7989 = !DILocation(line: 792, column: 24, scope: !7986)
!7990 = !DILocation(line: 792, column: 32, scope: !7986)
!7991 = !DILocation(line: 792, column: 37, scope: !7986)
!7992 = !DILocation(line: 792, column: 48, scope: !7986)
!7993 = !DILocation(line: 792, column: 53, scope: !7986)
!7994 = !DILocation(line: 792, column: 13, scope: !7986)
!7995 = !DILocation(line: 794, column: 27, scope: !7986)
!7996 = !DILocation(line: 794, column: 13, scope: !7986)
!7997 = !DILocation(line: 795, column: 9, scope: !7925)
!7998 = !DILocation(line: 797, column: 13, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7925, file: !1126, line: 797, column: 13)
!8000 = !DILocation(line: 797, column: 18, scope: !7999)
!8001 = !DILocation(line: 797, column: 27, scope: !7999)
!8002 = !DILocation(line: 797, column: 49, scope: !7999)
!8003 = !DILocation(line: 798, column: 53, scope: !7999)
!8004 = !DILocation(line: 798, column: 58, scope: !7999)
!8005 = !DILocation(line: 798, column: 13, scope: !7999)
!8006 = !DILocation(line: 798, column: 69, scope: !7999)
!8007 = !DILocation(line: 797, column: 13, scope: !8008)
!8008 = !DILexicalBlockFile(scope: !7925, file: !1126, discriminator: 1)
!8009 = !DILocation(line: 799, column: 23, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7999, file: !1126, line: 798, column: 92)
!8011 = !DILocation(line: 799, column: 31, scope: !8010)
!8012 = !DILocation(line: 799, column: 36, scope: !8010)
!8013 = !DILocation(line: 799, column: 13, scope: !8010)
!8014 = !DILocation(line: 800, column: 9, scope: !8010)
!8015 = !DILocation(line: 800, column: 20, scope: !8016)
!8016 = !DILexicalBlockFile(scope: !8017, file: !1126, discriminator: 1)
!8017 = distinct !DILexicalBlock(scope: !7999, file: !1126, line: 800, column: 20)
!8018 = !DILocation(line: 800, column: 25, scope: !8016)
!8019 = !DILocation(line: 800, column: 40, scope: !8016)
!8020 = !DILocation(line: 800, column: 43, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8017, file: !1126, discriminator: 2)
!8022 = !DILocation(line: 800, column: 48, scope: !8021)
!8023 = !DILocation(line: 800, column: 57, scope: !8021)
!8024 = !DILocation(line: 800, column: 20, scope: !8021)
!8025 = !DILocation(line: 801, column: 24, scope: !8017)
!8026 = !DILocation(line: 801, column: 32, scope: !8017)
!8027 = !DILocation(line: 801, column: 37, scope: !8017)
!8028 = !DILocation(line: 801, column: 48, scope: !8017)
!8029 = !DILocation(line: 801, column: 53, scope: !8017)
!8030 = !DILocation(line: 801, column: 13, scope: !8017)
!8031 = !DILocation(line: 802, column: 5, scope: !7925)
!8032 = !DILocation(line: 804, column: 5, scope: !7910)
!8033 = !DILocation(line: 805, column: 1, scope: !7910)
!8034 = distinct !DISubprogram(name: "put_xiph_codecpriv", scope: !1126, file: !1126, line: 637, type: !8035, isLocal: true, isDefinition: true, scopeLine: 638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8035 = !DISubroutineType(types: !8036)
!8036 = !{!1053, !2438, !1332, !1713}
!8037 = !DILocalVariable(name: "s", arg: 1, scope: !8034, file: !1126, line: 637, type: !2438)
!8038 = !DILocation(line: 637, column: 48, scope: !8034)
!8039 = !DILocalVariable(name: "pb", arg: 2, scope: !8034, file: !1126, line: 637, type: !1332)
!8040 = !DILocation(line: 637, column: 64, scope: !8034)
!8041 = !DILocalVariable(name: "par", arg: 3, scope: !8034, file: !1126, line: 637, type: !1713)
!8042 = !DILocation(line: 637, column: 87, scope: !8034)
!8043 = !DILocalVariable(name: "header_start", scope: !8034, file: !1126, line: 639, type: !8044)
!8044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1113, size: 192, align: 64, elements: !2422)
!8045 = !DILocation(line: 639, column: 20, scope: !8034)
!8046 = !DILocalVariable(name: "header_len", scope: !8034, file: !1126, line: 640, type: !8047)
!8047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 96, align: 32, elements: !2422)
!8048 = !DILocation(line: 640, column: 9, scope: !8034)
!8049 = !DILocalVariable(name: "first_header_size", scope: !8034, file: !1126, line: 641, type: !1053)
!8050 = !DILocation(line: 641, column: 9, scope: !8034)
!8051 = !DILocalVariable(name: "j", scope: !8034, file: !1126, line: 642, type: !1053)
!8052 = !DILocation(line: 642, column: 9, scope: !8034)
!8053 = !DILocation(line: 644, column: 9, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8034, file: !1126, line: 644, column: 9)
!8055 = !DILocation(line: 644, column: 14, scope: !8054)
!8056 = !DILocation(line: 644, column: 23, scope: !8054)
!8057 = !DILocation(line: 644, column: 9, scope: !8034)
!8058 = !DILocation(line: 645, column: 27, scope: !8054)
!8059 = !DILocation(line: 645, column: 9, scope: !8054)
!8060 = !DILocation(line: 647, column: 27, scope: !8054)
!8061 = !DILocation(line: 649, column: 35, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8034, file: !1126, line: 649, column: 9)
!8063 = !DILocation(line: 649, column: 40, scope: !8062)
!8064 = !DILocation(line: 649, column: 51, scope: !8062)
!8065 = !DILocation(line: 649, column: 56, scope: !8062)
!8066 = !DILocation(line: 650, column: 31, scope: !8062)
!8067 = !DILocation(line: 650, column: 50, scope: !8062)
!8068 = !DILocation(line: 650, column: 64, scope: !8062)
!8069 = !DILocation(line: 649, column: 9, scope: !8062)
!8070 = !DILocation(line: 650, column: 76, scope: !8062)
!8071 = !DILocation(line: 649, column: 9, scope: !8034)
!8072 = !DILocation(line: 651, column: 16, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8062, file: !1126, line: 650, column: 81)
!8074 = !DILocation(line: 651, column: 9, scope: !8073)
!8075 = !DILocation(line: 652, column: 9, scope: !8073)
!8076 = !DILocation(line: 655, column: 13, scope: !8034)
!8077 = !DILocation(line: 655, column: 5, scope: !8034)
!8078 = !DILocation(line: 656, column: 12, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8034, file: !1126, line: 656, column: 5)
!8080 = !DILocation(line: 656, column: 10, scope: !8079)
!8081 = !DILocation(line: 656, column: 17, scope: !8082)
!8082 = !DILexicalBlockFile(scope: !8083, file: !1126, discriminator: 1)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !1126, line: 656, column: 5)
!8084 = !DILocation(line: 656, column: 19, scope: !8082)
!8085 = !DILocation(line: 656, column: 5, scope: !8082)
!8086 = !DILocation(line: 657, column: 23, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !1126, line: 656, column: 29)
!8088 = !DILocation(line: 657, column: 38, scope: !8087)
!8089 = !DILocation(line: 657, column: 27, scope: !8087)
!8090 = !DILocation(line: 657, column: 9, scope: !8087)
!8091 = !DILocation(line: 658, column: 5, scope: !8087)
!8092 = !DILocation(line: 656, column: 25, scope: !8093)
!8093 = !DILexicalBlockFile(scope: !8083, file: !1126, discriminator: 2)
!8094 = !DILocation(line: 656, column: 5, scope: !8093)
!8095 = distinct !{!8095, !8096}
!8096 = !DILocation(line: 656, column: 5, scope: !8034)
!8097 = !DILocation(line: 659, column: 12, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8034, file: !1126, line: 659, column: 5)
!8099 = !DILocation(line: 659, column: 10, scope: !8098)
!8100 = !DILocation(line: 659, column: 17, scope: !8101)
!8101 = !DILexicalBlockFile(scope: !8102, file: !1126, discriminator: 1)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !1126, line: 659, column: 5)
!8103 = !DILocation(line: 659, column: 19, scope: !8101)
!8104 = !DILocation(line: 659, column: 5, scope: !8101)
!8105 = !DILocation(line: 660, column: 20, scope: !8102)
!8106 = !DILocation(line: 660, column: 37, scope: !8102)
!8107 = !DILocation(line: 660, column: 24, scope: !8102)
!8108 = !DILocation(line: 660, column: 52, scope: !8102)
!8109 = !DILocation(line: 660, column: 41, scope: !8102)
!8110 = !DILocation(line: 660, column: 9, scope: !8102)
!8111 = !DILocation(line: 659, column: 25, scope: !8112)
!8112 = !DILexicalBlockFile(scope: !8102, file: !1126, discriminator: 2)
!8113 = !DILocation(line: 659, column: 5, scope: !8112)
!8114 = distinct !{!8114, !8115}
!8115 = !DILocation(line: 659, column: 5, scope: !8034)
!8116 = !DILocation(line: 662, column: 5, scope: !8034)
!8117 = !DILocation(line: 663, column: 1, scope: !8034)
!8118 = distinct !DISubprogram(name: "put_flac_codecpriv", scope: !1126, file: !1126, line: 674, type: !8035, isLocal: true, isDefinition: true, scopeLine: 676, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8119 = !DILocalVariable(name: "s", arg: 1, scope: !8118, file: !1126, line: 674, type: !2438)
!8120 = !DILocation(line: 674, column: 48, scope: !8118)
!8121 = !DILocalVariable(name: "pb", arg: 2, scope: !8118, file: !1126, line: 675, type: !1332)
!8122 = !DILocation(line: 675, column: 44, scope: !8118)
!8123 = !DILocalVariable(name: "par", arg: 3, scope: !8118, file: !1126, line: 675, type: !1713)
!8124 = !DILocation(line: 675, column: 67, scope: !8118)
!8125 = !DILocalVariable(name: "write_comment", scope: !8118, file: !1126, line: 677, type: !1053)
!8126 = !DILocation(line: 677, column: 9, scope: !8118)
!8127 = !DILocation(line: 677, column: 26, scope: !8118)
!8128 = !DILocation(line: 677, column: 31, scope: !8118)
!8129 = !DILocation(line: 677, column: 46, scope: !8118)
!8130 = !DILocation(line: 678, column: 28, scope: !8118)
!8131 = !DILocation(line: 678, column: 33, scope: !8118)
!8132 = !DILocation(line: 678, column: 48, scope: !8118)
!8133 = !DILocation(line: 678, column: 63, scope: !8118)
!8134 = !DILocation(line: 679, column: 52, scope: !8118)
!8135 = !DILocation(line: 679, column: 57, scope: !8118)
!8136 = !DILocation(line: 679, column: 27, scope: !8118)
!8137 = !DILocation(line: 679, column: 26, scope: !8118)
!8138 = !DILocation(line: 678, column: 63, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8118, file: !1126, discriminator: 1)
!8140 = !DILocation(line: 677, column: 9, scope: !8139)
!8141 = !DILocalVariable(name: "ret", scope: !8118, file: !1126, line: 680, type: !1053)
!8142 = !DILocation(line: 680, column: 9, scope: !8118)
!8143 = !DILocation(line: 680, column: 36, scope: !8118)
!8144 = !DILocation(line: 680, column: 40, scope: !8118)
!8145 = !DILocation(line: 680, column: 45, scope: !8118)
!8146 = !DILocation(line: 680, column: 56, scope: !8118)
!8147 = !DILocation(line: 680, column: 61, scope: !8118)
!8148 = !DILocation(line: 681, column: 37, scope: !8118)
!8149 = !DILocation(line: 681, column: 36, scope: !8118)
!8150 = !DILocation(line: 680, column: 15, scope: !8118)
!8151 = !DILocation(line: 683, column: 9, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8118, file: !1126, line: 683, column: 9)
!8153 = !DILocation(line: 683, column: 13, scope: !8152)
!8154 = !DILocation(line: 683, column: 9, scope: !8118)
!8155 = !DILocation(line: 684, column: 16, scope: !8152)
!8156 = !DILocation(line: 684, column: 9, scope: !8152)
!8157 = !DILocation(line: 686, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8118, file: !1126, line: 686, column: 9)
!8159 = !DILocation(line: 686, column: 9, scope: !8118)
!8160 = !DILocalVariable(name: "vendor", scope: !8161, file: !1126, line: 687, type: !1131)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !1126, line: 686, column: 24)
!8162 = !DILocation(line: 687, column: 21, scope: !8161)
!8163 = !DILocation(line: 687, column: 31, scope: !8161)
!8164 = !DILocation(line: 687, column: 34, scope: !8161)
!8165 = !DILocation(line: 687, column: 40, scope: !8161)
!8166 = !DILocation(line: 687, column: 30, scope: !8161)
!8167 = !DILocalVariable(name: "dict", scope: !8161, file: !1126, line: 689, type: !1571)
!8168 = !DILocation(line: 689, column: 23, scope: !8161)
!8169 = !DILocalVariable(name: "buf", scope: !8161, file: !1126, line: 690, type: !8170)
!8170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 256, align: 8, elements: !8171)
!8171 = !{!8172}
!8172 = !DISubrange(count: 32)
!8173 = !DILocation(line: 690, column: 17, scope: !8161)
!8174 = !DILocalVariable(name: "data", scope: !8161, file: !1126, line: 690, type: !1110)
!8175 = !DILocation(line: 690, column: 27, scope: !8161)
!8176 = !DILocalVariable(name: "p", scope: !8161, file: !1126, line: 690, type: !1110)
!8177 = !DILocation(line: 690, column: 34, scope: !8161)
!8178 = !DILocalVariable(name: "len", scope: !8161, file: !1126, line: 691, type: !1051)
!8179 = !DILocation(line: 691, column: 17, scope: !8161)
!8180 = !DILocation(line: 693, column: 18, scope: !8161)
!8181 = !DILocation(line: 693, column: 48, scope: !8161)
!8182 = !DILocation(line: 693, column: 53, scope: !8161)
!8183 = !DILocation(line: 693, column: 9, scope: !8161)
!8184 = !DILocation(line: 694, column: 65, scope: !8161)
!8185 = !DILocation(line: 694, column: 9, scope: !8161)
!8186 = !DILocation(line: 696, column: 39, scope: !8161)
!8187 = !DILocation(line: 696, column: 45, scope: !8161)
!8188 = !DILocation(line: 696, column: 15, scope: !8161)
!8189 = !DILocation(line: 696, column: 13, scope: !8161)
!8190 = !DILocation(line: 697, column: 13, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8161, file: !1126, line: 697, column: 13)
!8192 = !DILocation(line: 697, column: 17, scope: !8191)
!8193 = !DILocation(line: 697, column: 13, scope: !8161)
!8194 = !DILocation(line: 698, column: 13, scope: !8191)
!8195 = !DILocation(line: 700, column: 26, scope: !8161)
!8196 = !DILocation(line: 700, column: 30, scope: !8161)
!8197 = !DILocation(line: 700, column: 16, scope: !8161)
!8198 = !DILocation(line: 700, column: 14, scope: !8161)
!8199 = !DILocation(line: 701, column: 14, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8161, file: !1126, line: 701, column: 13)
!8201 = !DILocation(line: 701, column: 13, scope: !8161)
!8202 = !DILocation(line: 702, column: 13, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !1126, line: 701, column: 20)
!8204 = !DILocation(line: 703, column: 13, scope: !8203)
!8205 = !DILocation(line: 706, column: 9, scope: !8161)
!8206 = !DILocation(line: 706, column: 17, scope: !8161)
!8207 = !DILocation(line: 707, column: 9, scope: !8161)
!8208 = distinct !{!8208, !8207}
!8209 = !DILocation(line: 707, column: 43, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !8211, file: !1126, discriminator: 1)
!8211 = distinct !DILexicalBlock(scope: !8161, file: !1126, line: 707, column: 12)
!8212 = !DILocation(line: 707, column: 42, scope: !8210)
!8213 = !DILocation(line: 707, column: 26, scope: !8210)
!8214 = !DILocation(line: 707, column: 31, scope: !8210)
!8215 = !DILocation(line: 707, column: 14, scope: !8210)
!8216 = !DILocation(line: 707, column: 40, scope: !8210)
!8217 = !DILocation(line: 707, column: 78, scope: !8210)
!8218 = !DILocation(line: 707, column: 82, scope: !8210)
!8219 = !DILocation(line: 707, column: 77, scope: !8210)
!8220 = !DILocation(line: 707, column: 61, scope: !8210)
!8221 = !DILocation(line: 707, column: 66, scope: !8210)
!8222 = !DILocation(line: 707, column: 49, scope: !8210)
!8223 = !DILocation(line: 707, column: 75, scope: !8210)
!8224 = !DILocation(line: 707, column: 116, scope: !8210)
!8225 = !DILocation(line: 707, column: 120, scope: !8210)
!8226 = !DILocation(line: 707, column: 115, scope: !8210)
!8227 = !DILocation(line: 707, column: 99, scope: !8210)
!8228 = !DILocation(line: 707, column: 104, scope: !8210)
!8229 = !DILocation(line: 707, column: 87, scope: !8210)
!8230 = !DILocation(line: 707, column: 113, scope: !8210)
!8231 = !DILocation(line: 707, column: 126, scope: !8210)
!8232 = !DILocation(line: 709, column: 13, scope: !8161)
!8233 = !DILocation(line: 709, column: 18, scope: !8161)
!8234 = !DILocation(line: 709, column: 11, scope: !8161)
!8235 = !DILocation(line: 710, column: 43, scope: !8161)
!8236 = !DILocation(line: 710, column: 9, scope: !8161)
!8237 = !DILocation(line: 712, column: 20, scope: !8161)
!8238 = !DILocation(line: 712, column: 24, scope: !8161)
!8239 = !DILocation(line: 712, column: 30, scope: !8161)
!8240 = !DILocation(line: 712, column: 34, scope: !8161)
!8241 = !DILocation(line: 712, column: 9, scope: !8161)
!8242 = !DILocation(line: 714, column: 18, scope: !8161)
!8243 = !DILocation(line: 714, column: 9, scope: !8161)
!8244 = !DILocation(line: 715, column: 9, scope: !8161)
!8245 = !DILocation(line: 716, column: 5, scope: !8161)
!8246 = !DILocation(line: 718, column: 5, scope: !8118)
!8247 = !DILocation(line: 719, column: 1, scope: !8118)
!8248 = distinct !DISubprogram(name: "put_wv_codecpriv", scope: !1126, file: !1126, line: 665, type: !8249, isLocal: true, isDefinition: true, scopeLine: 666, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{!1053, !1332, !1713}
!8251 = !DILocalVariable(name: "pb", arg: 1, scope: !8248, file: !1126, line: 665, type: !1332)
!8252 = !DILocation(line: 665, column: 42, scope: !8248)
!8253 = !DILocalVariable(name: "par", arg: 2, scope: !8248, file: !1126, line: 665, type: !1713)
!8254 = !DILocation(line: 665, column: 65, scope: !8248)
!8255 = !DILocation(line: 667, column: 9, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8248, file: !1126, line: 667, column: 9)
!8257 = !DILocation(line: 667, column: 14, scope: !8256)
!8258 = !DILocation(line: 667, column: 24, scope: !8256)
!8259 = !DILocation(line: 667, column: 27, scope: !8260)
!8260 = !DILexicalBlockFile(scope: !8256, file: !1126, discriminator: 1)
!8261 = !DILocation(line: 667, column: 32, scope: !8260)
!8262 = !DILocation(line: 667, column: 47, scope: !8260)
!8263 = !DILocation(line: 667, column: 9, scope: !8260)
!8264 = !DILocation(line: 668, column: 20, scope: !8256)
!8265 = !DILocation(line: 668, column: 24, scope: !8256)
!8266 = !DILocation(line: 668, column: 29, scope: !8256)
!8267 = !DILocation(line: 668, column: 9, scope: !8256)
!8268 = !DILocation(line: 670, column: 19, scope: !8256)
!8269 = !DILocation(line: 670, column: 9, scope: !8256)
!8270 = !DILocation(line: 671, column: 5, scope: !8248)
!8271 = distinct !DISubprogram(name: "put_xiph_size", scope: !1126, file: !1126, line: 389, type: !5895, isLocal: true, isDefinition: true, scopeLine: 390, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8272 = !DILocalVariable(name: "pb", arg: 1, scope: !8271, file: !1126, line: 389, type: !1332)
!8273 = !DILocation(line: 389, column: 40, scope: !8271)
!8274 = !DILocalVariable(name: "size", arg: 2, scope: !8271, file: !1126, line: 389, type: !1053)
!8275 = !DILocation(line: 389, column: 48, scope: !8271)
!8276 = !DILocation(line: 391, column: 15, scope: !8271)
!8277 = !DILocation(line: 391, column: 24, scope: !8271)
!8278 = !DILocation(line: 391, column: 29, scope: !8271)
!8279 = !DILocation(line: 391, column: 5, scope: !8271)
!8280 = !DILocation(line: 392, column: 13, scope: !8271)
!8281 = !DILocation(line: 392, column: 17, scope: !8271)
!8282 = !DILocation(line: 392, column: 22, scope: !8271)
!8283 = !DILocation(line: 392, column: 5, scope: !8271)
!8284 = !DILocation(line: 393, column: 1, scope: !8271)
!8285 = distinct !DISubprogram(name: "mkv_check_tag", scope: !1126, file: !1126, line: 1637, type: !8286, isLocal: true, isDefinition: true, scopeLine: 1638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!1053, !1571, !1050}
!8288 = !DILocalVariable(name: "m", arg: 1, scope: !8285, file: !1126, line: 1637, type: !1571)
!8289 = !DILocation(line: 1637, column: 40, scope: !8285)
!8290 = !DILocalVariable(name: "elementid", arg: 2, scope: !8285, file: !1126, line: 1637, type: !1050)
!8291 = !DILocation(line: 1637, column: 56, scope: !8285)
!8292 = !DILocalVariable(name: "t", scope: !8285, file: !1126, line: 1639, type: !2573)
!8293 = !DILocation(line: 1639, column: 24, scope: !8285)
!8294 = !DILocation(line: 1641, column: 5, scope: !8285)
!8295 = !DILocation(line: 1641, column: 29, scope: !8296)
!8296 = !DILexicalBlockFile(scope: !8285, file: !1126, discriminator: 1)
!8297 = !DILocation(line: 1641, column: 36, scope: !8296)
!8298 = !DILocation(line: 1641, column: 17, scope: !8296)
!8299 = !DILocation(line: 1641, column: 15, scope: !8296)
!8300 = !DILocation(line: 1641, column: 5, scope: !8296)
!8301 = !DILocation(line: 1642, column: 32, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8285, file: !1126, line: 1642, column: 13)
!8303 = !DILocation(line: 1642, column: 35, scope: !8302)
!8304 = !DILocation(line: 1642, column: 40, scope: !8302)
!8305 = !DILocation(line: 1642, column: 13, scope: !8302)
!8306 = !DILocation(line: 1642, column: 13, scope: !8285)
!8307 = !DILocation(line: 1643, column: 13, scope: !8302)
!8308 = !DILocation(line: 1641, column: 5, scope: !8309)
!8309 = !DILexicalBlockFile(scope: !8285, file: !1126, discriminator: 2)
!8310 = distinct !{!8310, !8294}
!8311 = !DILocation(line: 1645, column: 5, scope: !8285)
!8312 = !DILocation(line: 1646, column: 1, scope: !8285)
!8313 = distinct !DISubprogram(name: "mkv_write_tag", scope: !1126, file: !1126, line: 1613, type: !8314, isLocal: true, isDefinition: true, scopeLine: 1615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!1053, !2438, !1571, !1050, !1050, !4129}
!8316 = !DILocalVariable(name: "s", arg: 1, scope: !8313, file: !1126, line: 1613, type: !2438)
!8317 = !DILocation(line: 1613, column: 43, scope: !8313)
!8318 = !DILocalVariable(name: "m", arg: 2, scope: !8313, file: !1126, line: 1613, type: !1571)
!8319 = !DILocation(line: 1613, column: 60, scope: !8313)
!8320 = !DILocalVariable(name: "elementid", arg: 3, scope: !8313, file: !1126, line: 1613, type: !1050)
!8321 = !DILocation(line: 1613, column: 76, scope: !8313)
!8322 = !DILocalVariable(name: "uid", arg: 4, scope: !8313, file: !1126, line: 1614, type: !1050)
!8323 = !DILocation(line: 1614, column: 39, scope: !8313)
!8324 = !DILocalVariable(name: "tags", arg: 5, scope: !8313, file: !1126, line: 1614, type: !4129)
!8325 = !DILocation(line: 1614, column: 57, scope: !8313)
!8326 = !DILocalVariable(name: "mkv", scope: !8313, file: !1126, line: 1616, type: !2459)
!8327 = !DILocation(line: 1616, column: 25, scope: !8313)
!8328 = !DILocation(line: 1616, column: 31, scope: !8313)
!8329 = !DILocation(line: 1616, column: 34, scope: !8313)
!8330 = !DILocalVariable(name: "tag", scope: !8313, file: !1126, line: 1617, type: !2468)
!8331 = !DILocation(line: 1617, column: 17, scope: !8313)
!8332 = !DILocalVariable(name: "ret", scope: !8313, file: !1126, line: 1618, type: !1053)
!8333 = !DILocation(line: 1618, column: 9, scope: !8313)
!8334 = !DILocalVariable(name: "t", scope: !8313, file: !1126, line: 1619, type: !2573)
!8335 = !DILocation(line: 1619, column: 24, scope: !8313)
!8336 = !DILocation(line: 1621, column: 33, scope: !8313)
!8337 = !DILocation(line: 1621, column: 36, scope: !8313)
!8338 = !DILocation(line: 1621, column: 47, scope: !8313)
!8339 = !DILocation(line: 1621, column: 52, scope: !8313)
!8340 = !DILocation(line: 1621, column: 11, scope: !8313)
!8341 = !DILocation(line: 1621, column: 9, scope: !8313)
!8342 = !DILocation(line: 1622, column: 9, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8313, file: !1126, line: 1622, column: 9)
!8344 = !DILocation(line: 1622, column: 13, scope: !8343)
!8345 = !DILocation(line: 1622, column: 9, scope: !8313)
!8346 = !DILocation(line: 1623, column: 16, scope: !8343)
!8347 = !DILocation(line: 1623, column: 9, scope: !8343)
!8348 = !DILocation(line: 1625, column: 5, scope: !8313)
!8349 = !DILocation(line: 1625, column: 29, scope: !8350)
!8350 = !DILexicalBlockFile(scope: !8313, file: !1126, discriminator: 1)
!8351 = !DILocation(line: 1625, column: 36, scope: !8350)
!8352 = !DILocation(line: 1625, column: 17, scope: !8350)
!8353 = !DILocation(line: 1625, column: 15, scope: !8350)
!8354 = !DILocation(line: 1625, column: 5, scope: !8350)
!8355 = !DILocation(line: 1626, column: 32, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !1126, line: 1626, column: 13)
!8357 = distinct !DILexicalBlock(scope: !8313, file: !1126, line: 1625, column: 44)
!8358 = !DILocation(line: 1626, column: 35, scope: !8356)
!8359 = !DILocation(line: 1626, column: 40, scope: !8356)
!8360 = !DILocation(line: 1626, column: 13, scope: !8356)
!8361 = !DILocation(line: 1626, column: 13, scope: !8357)
!8362 = !DILocation(line: 1627, column: 39, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8356, file: !1126, line: 1626, column: 52)
!8364 = !DILocation(line: 1627, column: 44, scope: !8363)
!8365 = !DILocation(line: 1627, column: 53, scope: !8363)
!8366 = !DILocation(line: 1627, column: 19, scope: !8363)
!8367 = !DILocation(line: 1627, column: 17, scope: !8363)
!8368 = !DILocation(line: 1628, column: 17, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8363, file: !1126, line: 1628, column: 17)
!8370 = !DILocation(line: 1628, column: 21, scope: !8369)
!8371 = !DILocation(line: 1628, column: 17, scope: !8363)
!8372 = !DILocation(line: 1629, column: 24, scope: !8369)
!8373 = !DILocation(line: 1629, column: 17, scope: !8369)
!8374 = !DILocation(line: 1630, column: 9, scope: !8363)
!8375 = !DILocation(line: 1625, column: 5, scope: !8376)
!8376 = !DILexicalBlockFile(scope: !8313, file: !1126, discriminator: 2)
!8377 = distinct !{!8377, !8348}
!8378 = !DILocation(line: 1633, column: 21, scope: !8313)
!8379 = !DILocation(line: 1633, column: 26, scope: !8313)
!8380 = !DILocation(line: 1633, column: 5, scope: !8313)
!8381 = !DILocation(line: 1634, column: 5, scope: !8313)
!8382 = !DILocation(line: 1635, column: 1, scope: !8313)
!8383 = distinct !DISubprogram(name: "mkv_write_tag_targets", scope: !1126, file: !1126, line: 1574, type: !8384, isLocal: true, isDefinition: true, scopeLine: 1577, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!1053, !2438, !1050, !1050, !4129, !4129}
!8386 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8387)
!8387 = distinct !DILocation(line: 1584, column: 70, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !1126, line: 1583, column: 21)
!8389 = distinct !DILexicalBlock(scope: !8383, file: !1126, line: 1583, column: 9)
!8390 = !DILocalVariable(name: "s", arg: 1, scope: !8383, file: !1126, line: 1574, type: !2438)
!8391 = !DILocation(line: 1574, column: 51, scope: !8383)
!8392 = !DILocalVariable(name: "elementid", arg: 2, scope: !8383, file: !1126, line: 1575, type: !1050)
!8393 = !DILocation(line: 1575, column: 47, scope: !8383)
!8394 = !DILocalVariable(name: "uid", arg: 3, scope: !8383, file: !1126, line: 1575, type: !1050)
!8395 = !DILocation(line: 1575, column: 71, scope: !8383)
!8396 = !DILocalVariable(name: "tags", arg: 4, scope: !8383, file: !1126, line: 1576, type: !4129)
!8397 = !DILocation(line: 1576, column: 47, scope: !8383)
!8398 = !DILocalVariable(name: "tag", arg: 5, scope: !8383, file: !1126, line: 1576, type: !4129)
!8399 = !DILocation(line: 1576, column: 66, scope: !8383)
!8400 = !DILocalVariable(name: "pb", scope: !8383, file: !1126, line: 1578, type: !1332)
!8401 = !DILocation(line: 1578, column: 18, scope: !8383)
!8402 = !DILocalVariable(name: "mkv", scope: !8383, file: !1126, line: 1579, type: !2459)
!8403 = !DILocation(line: 1579, column: 25, scope: !8383)
!8404 = !DILocation(line: 1579, column: 31, scope: !8383)
!8405 = !DILocation(line: 1579, column: 34, scope: !8383)
!8406 = !DILocalVariable(name: "targets", scope: !8383, file: !1126, line: 1580, type: !2468)
!8407 = !DILocation(line: 1580, column: 17, scope: !8383)
!8408 = !DILocalVariable(name: "ret", scope: !8383, file: !1126, line: 1581, type: !1053)
!8409 = !DILocation(line: 1581, column: 9, scope: !8383)
!8410 = !DILocation(line: 1583, column: 10, scope: !8389)
!8411 = !DILocation(line: 1583, column: 16, scope: !8389)
!8412 = !DILocation(line: 1583, column: 9, scope: !8383)
!8413 = !DILocation(line: 1584, column: 38, scope: !8388)
!8414 = !DILocation(line: 1584, column: 43, scope: !8388)
!8415 = !DILocation(line: 1584, column: 80, scope: !8388)
!8416 = !DILocation(line: 1584, column: 83, scope: !8388)
!8417 = !DILocation(line: 1584, column: 70, scope: !8388)
!8418 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8387)
!8419 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8387)
!8420 = !DILocation(line: 1584, column: 15, scope: !8421)
!8421 = !DILexicalBlockFile(scope: !8388, file: !1126, discriminator: 1)
!8422 = !DILocation(line: 1584, column: 13, scope: !8388)
!8423 = !DILocation(line: 1585, column: 13, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8388, file: !1126, line: 1585, column: 13)
!8425 = !DILocation(line: 1585, column: 17, scope: !8424)
!8426 = !DILocation(line: 1585, column: 13, scope: !8388)
!8427 = !DILocation(line: 1585, column: 29, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !8424, file: !1126, discriminator: 1)
!8429 = !DILocation(line: 1585, column: 22, scope: !8428)
!8430 = !DILocation(line: 1587, column: 33, scope: !8388)
!8431 = !DILocation(line: 1587, column: 36, scope: !8388)
!8432 = !DILocation(line: 1587, column: 41, scope: !8388)
!8433 = !DILocation(line: 1587, column: 46, scope: !8388)
!8434 = !DILocation(line: 1587, column: 55, scope: !8388)
!8435 = !DILocation(line: 1587, column: 60, scope: !8388)
!8436 = !DILocation(line: 1587, column: 9, scope: !8388)
!8437 = !DILocation(line: 1588, column: 5, scope: !8388)
!8438 = !DILocation(line: 1589, column: 10, scope: !8383)
!8439 = !DILocation(line: 1589, column: 15, scope: !8383)
!8440 = !DILocation(line: 1589, column: 8, scope: !8383)
!8441 = !DILocation(line: 1591, column: 6, scope: !8383)
!8442 = !DILocation(line: 1591, column: 30, scope: !8383)
!8443 = !DILocation(line: 1591, column: 12, scope: !8383)
!8444 = !DILocation(line: 1591, column: 12, scope: !8445)
!8445 = !DILexicalBlockFile(scope: !8383, file: !1126, discriminator: 1)
!8446 = !DILocation(line: 1592, column: 33, scope: !8383)
!8447 = !DILocation(line: 1592, column: 15, scope: !8383)
!8448 = !DILocation(line: 1592, column: 15, scope: !8445)
!8449 = !DILocation(line: 1593, column: 9, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8383, file: !1126, line: 1593, column: 9)
!8451 = !DILocation(line: 1593, column: 9, scope: !8383)
!8452 = !DILocation(line: 1594, column: 23, scope: !8450)
!8453 = !DILocation(line: 1594, column: 27, scope: !8450)
!8454 = !DILocation(line: 1594, column: 38, scope: !8450)
!8455 = !DILocation(line: 1594, column: 9, scope: !8450)
!8456 = !DILocation(line: 1595, column: 21, scope: !8383)
!8457 = !DILocation(line: 1595, column: 5, scope: !8383)
!8458 = !DILocation(line: 1596, column: 5, scope: !8383)
!8459 = !DILocation(line: 1597, column: 1, scope: !8383)
!8460 = distinct !DISubprogram(name: "mkv_check_tag_name", scope: !1126, file: !1126, line: 1599, type: !8461, isLocal: true, isDefinition: true, scopeLine: 1600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!1053, !1131, !1050}
!8463 = !DILocalVariable(name: "name", arg: 1, scope: !8460, file: !1126, line: 1599, type: !1131)
!8464 = !DILocation(line: 1599, column: 43, scope: !8460)
!8465 = !DILocalVariable(name: "elementid", arg: 2, scope: !8460, file: !1126, line: 1599, type: !1050)
!8466 = !DILocation(line: 1599, column: 62, scope: !8460)
!8467 = !DILocation(line: 1601, column: 26, scope: !8460)
!8468 = !DILocation(line: 1601, column: 12, scope: !8460)
!8469 = !DILocation(line: 1601, column: 41, scope: !8460)
!8470 = !DILocation(line: 1602, column: 26, scope: !8460)
!8471 = !DILocation(line: 1602, column: 12, scope: !8460)
!8472 = !DILocation(line: 1602, column: 47, scope: !8460)
!8473 = !DILocation(line: 1603, column: 26, scope: !8460)
!8474 = !DILocation(line: 1603, column: 12, scope: !8460)
!8475 = !DILocation(line: 1603, column: 49, scope: !8460)
!8476 = !DILocation(line: 1604, column: 26, scope: !8460)
!8477 = !DILocation(line: 1604, column: 12, scope: !8460)
!8478 = !DILocation(line: 1604, column: 49, scope: !8460)
!8479 = !DILocation(line: 1605, column: 26, scope: !8460)
!8480 = !DILocation(line: 1605, column: 12, scope: !8460)
!8481 = !DILocation(line: 1605, column: 44, scope: !8460)
!8482 = !DILocation(line: 1606, column: 13, scope: !8460)
!8483 = !DILocation(line: 1606, column: 23, scope: !8460)
!8484 = !DILocation(line: 1606, column: 33, scope: !8460)
!8485 = !DILocation(line: 1607, column: 27, scope: !8460)
!8486 = !DILocation(line: 1607, column: 13, scope: !8460)
!8487 = !DILocation(line: 1607, column: 46, scope: !8460)
!8488 = !DILocation(line: 1608, column: 13, scope: !8460)
!8489 = !DILocation(line: 1608, column: 23, scope: !8460)
!8490 = !DILocation(line: 1608, column: 33, scope: !8460)
!8491 = !DILocation(line: 1609, column: 28, scope: !8460)
!8492 = !DILocation(line: 1609, column: 14, scope: !8460)
!8493 = !DILocation(line: 1609, column: 46, scope: !8460)
!8494 = !DILocation(line: 1610, column: 28, scope: !8460)
!8495 = !DILocation(line: 1610, column: 14, scope: !8460)
!8496 = !DILocation(line: 1609, column: 46, scope: !8497)
!8497 = !DILexicalBlockFile(scope: !8460, file: !1126, discriminator: 1)
!8498 = !DILocation(line: 1608, column: 33, scope: !8497)
!8499 = !DILocation(line: 1607, column: 46, scope: !8497)
!8500 = !DILocation(line: 1601, column: 5, scope: !8497)
!8501 = distinct !DISubprogram(name: "mkv_write_simpletag", scope: !1126, file: !1126, line: 1540, type: !8502, isLocal: true, isDefinition: true, scopeLine: 1541, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{!1053, !1332, !2573}
!8504 = !DILocalVariable(name: "pb", arg: 1, scope: !8501, file: !1126, line: 1540, type: !1332)
!8505 = !DILocation(line: 1540, column: 45, scope: !8501)
!8506 = !DILocalVariable(name: "t", arg: 2, scope: !8501, file: !1126, line: 1540, type: !2573)
!8507 = !DILocation(line: 1540, column: 68, scope: !8501)
!8508 = !DILocalVariable(name: "key", scope: !8501, file: !1126, line: 1542, type: !1110)
!8509 = !DILocation(line: 1542, column: 14, scope: !8501)
!8510 = !DILocation(line: 1542, column: 30, scope: !8501)
!8511 = !DILocation(line: 1542, column: 33, scope: !8501)
!8512 = !DILocation(line: 1542, column: 20, scope: !8501)
!8513 = !DILocalVariable(name: "p", scope: !8501, file: !1126, line: 1543, type: !1110)
!8514 = !DILocation(line: 1543, column: 14, scope: !8501)
!8515 = !DILocation(line: 1543, column: 18, scope: !8501)
!8516 = !DILocalVariable(name: "lang", scope: !8501, file: !1126, line: 1544, type: !1113)
!8517 = !DILocation(line: 1544, column: 20, scope: !8501)
!8518 = !DILocalVariable(name: "tag", scope: !8501, file: !1126, line: 1545, type: !2468)
!8519 = !DILocation(line: 1545, column: 17, scope: !8501)
!8520 = !DILocation(line: 1547, column: 10, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8501, file: !1126, line: 1547, column: 9)
!8522 = !DILocation(line: 1547, column: 9, scope: !8501)
!8523 = !DILocation(line: 1548, column: 9, scope: !8521)
!8524 = !DILocation(line: 1550, column: 22, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8501, file: !1126, line: 1550, column: 9)
!8526 = !DILocation(line: 1550, column: 14, scope: !8525)
!8527 = !DILocation(line: 1550, column: 12, scope: !8525)
!8528 = !DILocation(line: 1550, column: 31, scope: !8525)
!8529 = !DILocation(line: 1551, column: 36, scope: !8525)
!8530 = !DILocation(line: 1551, column: 38, scope: !8525)
!8531 = !DILocation(line: 1551, column: 17, scope: !8525)
!8532 = !DILocation(line: 1551, column: 15, scope: !8525)
!8533 = !DILocation(line: 1550, column: 9, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8501, file: !1126, discriminator: 1)
!8535 = !DILocation(line: 1552, column: 10, scope: !8525)
!8536 = !DILocation(line: 1552, column: 12, scope: !8525)
!8537 = !DILocation(line: 1552, column: 9, scope: !8525)
!8538 = !DILocation(line: 1554, column: 9, scope: !8501)
!8539 = !DILocation(line: 1554, column: 7, scope: !8501)
!8540 = !DILocation(line: 1555, column: 5, scope: !8501)
!8541 = !DILocation(line: 1555, column: 13, scope: !8534)
!8542 = !DILocation(line: 1555, column: 12, scope: !8534)
!8543 = !DILocation(line: 1555, column: 5, scope: !8534)
!8544 = !DILocation(line: 1556, column: 14, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !1126, line: 1556, column: 13)
!8546 = distinct !DILexicalBlock(scope: !8501, file: !1126, line: 1555, column: 16)
!8547 = !DILocation(line: 1556, column: 13, scope: !8545)
!8548 = !DILocation(line: 1556, column: 16, scope: !8545)
!8549 = !DILocation(line: 1556, column: 13, scope: !8546)
!8550 = !DILocation(line: 1557, column: 14, scope: !8545)
!8551 = !DILocation(line: 1557, column: 16, scope: !8545)
!8552 = !DILocation(line: 1557, column: 13, scope: !8545)
!8553 = !DILocation(line: 1558, column: 19, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8545, file: !1126, line: 1558, column: 18)
!8555 = !DILocation(line: 1558, column: 18, scope: !8554)
!8556 = !DILocation(line: 1558, column: 21, scope: !8554)
!8557 = !DILocation(line: 1558, column: 28, scope: !8554)
!8558 = !DILocation(line: 1558, column: 32, scope: !8559)
!8559 = !DILexicalBlockFile(scope: !8554, file: !1126, discriminator: 1)
!8560 = !DILocation(line: 1558, column: 31, scope: !8559)
!8561 = !DILocation(line: 1558, column: 34, scope: !8559)
!8562 = !DILocation(line: 1558, column: 18, scope: !8559)
!8563 = !DILocation(line: 1559, column: 14, scope: !8554)
!8564 = !DILocation(line: 1559, column: 16, scope: !8554)
!8565 = !DILocation(line: 1559, column: 13, scope: !8554)
!8566 = !DILocation(line: 1560, column: 10, scope: !8546)
!8567 = !DILocation(line: 1555, column: 5, scope: !8568)
!8568 = !DILexicalBlockFile(scope: !8501, file: !1126, discriminator: 2)
!8569 = distinct !{!8569, !8540}
!8570 = !DILocation(line: 1563, column: 29, scope: !8501)
!8571 = !DILocation(line: 1563, column: 11, scope: !8501)
!8572 = !DILocation(line: 1563, column: 11, scope: !8534)
!8573 = !DILocation(line: 1564, column: 21, scope: !8501)
!8574 = !DILocation(line: 1564, column: 33, scope: !8501)
!8575 = !DILocation(line: 1564, column: 5, scope: !8501)
!8576 = !DILocation(line: 1565, column: 9, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8501, file: !1126, line: 1565, column: 9)
!8578 = !DILocation(line: 1565, column: 9, scope: !8501)
!8579 = !DILocation(line: 1566, column: 25, scope: !8577)
!8580 = !DILocation(line: 1566, column: 37, scope: !8577)
!8581 = !DILocation(line: 1566, column: 9, scope: !8577)
!8582 = !DILocation(line: 1567, column: 21, scope: !8501)
!8583 = !DILocation(line: 1567, column: 33, scope: !8501)
!8584 = !DILocation(line: 1567, column: 36, scope: !8501)
!8585 = !DILocation(line: 1567, column: 5, scope: !8501)
!8586 = !DILocation(line: 1568, column: 21, scope: !8501)
!8587 = !DILocation(line: 1568, column: 5, scope: !8501)
!8588 = !DILocation(line: 1570, column: 14, scope: !8501)
!8589 = !DILocation(line: 1570, column: 5, scope: !8501)
!8590 = !DILocation(line: 1571, column: 5, scope: !8501)
!8591 = !DILocation(line: 1572, column: 1, scope: !8501)
!8592 = distinct !DISubprogram(name: "mkv_write_packet", scope: !1126, file: !1126, line: 2468, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2469, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8593 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8594)
!8594 = distinct !DILocation(line: 2490, column: 20, scope: !8592)
!8595 = !DILocalVariable(name: "s", arg: 1, scope: !8592, file: !1126, line: 2468, type: !2438)
!8596 = !DILocation(line: 2468, column: 46, scope: !8592)
!8597 = !DILocalVariable(name: "pkt", arg: 2, scope: !8592, file: !1126, line: 2468, type: !1266)
!8598 = !DILocation(line: 2468, column: 59, scope: !8592)
!8599 = !DILocalVariable(name: "mkv", scope: !8592, file: !1126, line: 2470, type: !2459)
!8600 = !DILocation(line: 2470, column: 25, scope: !8592)
!8601 = !DILocation(line: 2470, column: 31, scope: !8592)
!8602 = !DILocation(line: 2470, column: 34, scope: !8592)
!8603 = !DILocalVariable(name: "codec_type", scope: !8592, file: !1126, line: 2471, type: !1053)
!8604 = !DILocation(line: 2471, column: 9, scope: !8592)
!8605 = !DILocation(line: 2471, column: 33, scope: !8592)
!8606 = !DILocation(line: 2471, column: 38, scope: !8592)
!8607 = !DILocation(line: 2471, column: 22, scope: !8592)
!8608 = !DILocation(line: 2471, column: 25, scope: !8592)
!8609 = !DILocation(line: 2471, column: 53, scope: !8592)
!8610 = !DILocation(line: 2471, column: 63, scope: !8592)
!8611 = !DILocalVariable(name: "keyframe", scope: !8592, file: !1126, line: 2472, type: !1053)
!8612 = !DILocation(line: 2472, column: 9, scope: !8592)
!8613 = !DILocation(line: 2472, column: 23, scope: !8592)
!8614 = !DILocation(line: 2472, column: 28, scope: !8592)
!8615 = !DILocation(line: 2472, column: 34, scope: !8592)
!8616 = !DILocation(line: 2472, column: 21, scope: !8592)
!8617 = !DILocation(line: 2472, column: 20, scope: !8592)
!8618 = !DILocalVariable(name: "cluster_size", scope: !8592, file: !1126, line: 2473, type: !1053)
!8619 = !DILocation(line: 2473, column: 9, scope: !8592)
!8620 = !DILocalVariable(name: "cluster_time", scope: !8592, file: !1126, line: 2474, type: !1051)
!8621 = !DILocation(line: 2474, column: 13, scope: !8592)
!8622 = !DILocalVariable(name: "ret", scope: !8592, file: !1126, line: 2475, type: !1053)
!8623 = !DILocation(line: 2475, column: 9, scope: !8592)
!8624 = !DILocalVariable(name: "start_new_cluster", scope: !8592, file: !1126, line: 2476, type: !1053)
!8625 = !DILocation(line: 2476, column: 9, scope: !8592)
!8626 = !DILocation(line: 2478, column: 36, scope: !8592)
!8627 = !DILocation(line: 2478, column: 39, scope: !8592)
!8628 = !DILocation(line: 2478, column: 11, scope: !8592)
!8629 = !DILocation(line: 2478, column: 9, scope: !8592)
!8630 = !DILocation(line: 2479, column: 9, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2479, column: 9)
!8632 = !DILocation(line: 2479, column: 13, scope: !8631)
!8633 = !DILocation(line: 2479, column: 9, scope: !8592)
!8634 = !DILocation(line: 2480, column: 16, scope: !8631)
!8635 = !DILocation(line: 2480, column: 9, scope: !8631)
!8636 = !DILocation(line: 2482, column: 21, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2482, column: 9)
!8638 = !DILocation(line: 2482, column: 26, scope: !8637)
!8639 = !DILocation(line: 2482, column: 9, scope: !8637)
!8640 = !DILocation(line: 2482, column: 14, scope: !8637)
!8641 = !DILocation(line: 2482, column: 40, scope: !8637)
!8642 = !DILocation(line: 2482, column: 9, scope: !8592)
!8643 = !DILocation(line: 2483, column: 24, scope: !8637)
!8644 = !DILocation(line: 2483, column: 29, scope: !8637)
!8645 = !DILocation(line: 2483, column: 35, scope: !8637)
!8646 = !DILocation(line: 2483, column: 40, scope: !8637)
!8647 = !DILocation(line: 2483, column: 33, scope: !8637)
!8648 = !DILocation(line: 2483, column: 22, scope: !8637)
!8649 = !DILocation(line: 2483, column: 9, scope: !8637)
!8650 = !DILocation(line: 2485, column: 24, scope: !8637)
!8651 = !DILocation(line: 2485, column: 29, scope: !8637)
!8652 = !DILocation(line: 2485, column: 35, scope: !8637)
!8653 = !DILocation(line: 2485, column: 40, scope: !8637)
!8654 = !DILocation(line: 2485, column: 33, scope: !8637)
!8655 = !DILocation(line: 2485, column: 22, scope: !8637)
!8656 = !DILocation(line: 2486, column: 33, scope: !8592)
!8657 = !DILocation(line: 2486, column: 38, scope: !8592)
!8658 = !DILocation(line: 2486, column: 21, scope: !8592)
!8659 = !DILocation(line: 2486, column: 26, scope: !8592)
!8660 = !DILocation(line: 2486, column: 52, scope: !8592)
!8661 = !DILocation(line: 2486, column: 18, scope: !8592)
!8662 = !DILocation(line: 2490, column: 30, scope: !8592)
!8663 = !DILocation(line: 2490, column: 35, scope: !8592)
!8664 = !DILocation(line: 2490, column: 20, scope: !8592)
!8665 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8594)
!8666 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8594)
!8667 = !DILocation(line: 2490, column: 18, scope: !8592)
!8668 = !DILocation(line: 2492, column: 9, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2492, column: 9)
!8670 = !DILocation(line: 2492, column: 14, scope: !8669)
!8671 = !DILocation(line: 2492, column: 22, scope: !8669)
!8672 = !DILocation(line: 2492, column: 25, scope: !8673)
!8673 = !DILexicalBlockFile(scope: !8669, file: !1126, discriminator: 1)
!8674 = !DILocation(line: 2492, column: 36, scope: !8673)
!8675 = !DILocation(line: 2492, column: 9, scope: !8673)
!8676 = !DILocation(line: 2496, column: 29, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8669, file: !1126, line: 2492, column: 59)
!8678 = !DILocation(line: 2496, column: 27, scope: !8677)
!8679 = !DILocation(line: 2497, column: 5, scope: !8677)
!8680 = !DILocation(line: 2497, column: 16, scope: !8681)
!8681 = !DILexicalBlockFile(scope: !8682, file: !1126, discriminator: 1)
!8682 = distinct !DILexicalBlock(scope: !8669, file: !1126, line: 2497, column: 16)
!8683 = !DILocation(line: 2497, column: 21, scope: !8681)
!8684 = !DILocation(line: 2497, column: 29, scope: !8681)
!8685 = !DILocation(line: 2497, column: 32, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !8682, file: !1126, discriminator: 2)
!8687 = !DILocation(line: 2497, column: 43, scope: !8686)
!8688 = !DILocation(line: 2497, column: 65, scope: !8686)
!8689 = !DILocation(line: 2498, column: 17, scope: !8682)
!8690 = !DILocation(line: 2498, column: 22, scope: !8682)
!8691 = !DILocation(line: 2498, column: 34, scope: !8682)
!8692 = !DILocation(line: 2498, column: 40, scope: !8682)
!8693 = !DILocation(line: 2499, column: 17, scope: !8682)
!8694 = !DILocation(line: 2499, column: 32, scope: !8682)
!8695 = !DILocation(line: 2499, column: 37, scope: !8682)
!8696 = !DILocation(line: 2499, column: 30, scope: !8682)
!8697 = !DILocation(line: 2497, column: 16, scope: !8698)
!8698 = !DILexicalBlockFile(scope: !8669, file: !1126, discriminator: 3)
!8699 = !DILocation(line: 2501, column: 27, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8682, file: !1126, line: 2499, column: 58)
!8701 = !DILocation(line: 2502, column: 5, scope: !8700)
!8702 = !DILocation(line: 2502, column: 17, scope: !8703)
!8703 = !DILexicalBlockFile(scope: !8704, file: !1126, discriminator: 1)
!8704 = distinct !DILexicalBlock(scope: !8682, file: !1126, line: 2502, column: 16)
!8705 = !DILocation(line: 2502, column: 22, scope: !8703)
!8706 = !DILocation(line: 2502, column: 30, scope: !8703)
!8707 = !DILocation(line: 2503, column: 17, scope: !8704)
!8708 = !DILocation(line: 2503, column: 32, scope: !8704)
!8709 = !DILocation(line: 2503, column: 37, scope: !8704)
!8710 = !DILocation(line: 2503, column: 30, scope: !8704)
!8711 = !DILocation(line: 2503, column: 56, scope: !8704)
!8712 = !DILocation(line: 2504, column: 17, scope: !8704)
!8713 = !DILocation(line: 2504, column: 32, scope: !8704)
!8714 = !DILocation(line: 2504, column: 37, scope: !8704)
!8715 = !DILocation(line: 2504, column: 30, scope: !8704)
!8716 = !DILocation(line: 2504, column: 56, scope: !8704)
!8717 = !DILocation(line: 2505, column: 18, scope: !8704)
!8718 = !DILocation(line: 2505, column: 29, scope: !8704)
!8719 = !DILocation(line: 2505, column: 51, scope: !8704)
!8720 = !DILocation(line: 2505, column: 54, scope: !8703)
!8721 = !DILocation(line: 2505, column: 63, scope: !8703)
!8722 = !DILocation(line: 2506, column: 18, scope: !8704)
!8723 = !DILocation(line: 2506, column: 31, scope: !8704)
!8724 = !DILocation(line: 2502, column: 16, scope: !8686)
!8725 = !DILocation(line: 2507, column: 27, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8704, file: !1126, line: 2506, column: 45)
!8727 = !DILocation(line: 2508, column: 5, scope: !8726)
!8728 = !DILocation(line: 2509, column: 27, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8704, file: !1126, line: 2508, column: 12)
!8730 = !DILocation(line: 2512, column: 9, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2512, column: 9)
!8732 = !DILocation(line: 2512, column: 14, scope: !8731)
!8733 = !DILocation(line: 2512, column: 26, scope: !8731)
!8734 = !DILocation(line: 2512, column: 32, scope: !8731)
!8735 = !DILocation(line: 2512, column: 35, scope: !8736)
!8736 = !DILexicalBlockFile(scope: !8731, file: !1126, discriminator: 1)
!8737 = !DILocation(line: 2512, column: 9, scope: !8736)
!8738 = !DILocation(line: 2513, column: 31, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8731, file: !1126, line: 2512, column: 54)
!8740 = !DILocation(line: 2513, column: 34, scope: !8739)
!8741 = !DILocation(line: 2513, column: 9, scope: !8739)
!8742 = !DILocation(line: 2514, column: 5, scope: !8739)
!8743 = !DILocation(line: 2516, column: 10, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2516, column: 9)
!8745 = !DILocation(line: 2516, column: 15, scope: !8744)
!8746 = !DILocation(line: 2516, column: 9, scope: !8592)
!8747 = !DILocation(line: 2517, column: 27, scope: !8744)
!8748 = !DILocation(line: 2517, column: 30, scope: !8744)
!8749 = !DILocation(line: 2518, column: 40, scope: !8744)
!8750 = !DILocation(line: 2518, column: 45, scope: !8744)
!8751 = !DILocation(line: 2518, column: 61, scope: !8744)
!8752 = !DILocation(line: 2518, column: 66, scope: !8744)
!8753 = !DILocation(line: 2518, column: 50, scope: !8744)
!8754 = !DILocation(line: 2518, column: 53, scope: !8744)
!8755 = !DILocation(line: 2518, column: 81, scope: !8744)
!8756 = !DILocation(line: 2518, column: 104, scope: !8744)
!8757 = !DILocation(line: 2518, column: 27, scope: !8744)
!8758 = !DILocation(line: 2519, column: 27, scope: !8744)
!8759 = !DILocation(line: 2519, column: 36, scope: !8744)
!8760 = !DILocation(line: 2519, column: 40, scope: !8761)
!8761 = !DILexicalBlockFile(scope: !8744, file: !1126, discriminator: 1)
!8762 = !DILocation(line: 2519, column: 45, scope: !8761)
!8763 = !DILocation(line: 2519, column: 58, scope: !8764)
!8764 = !DILexicalBlockFile(scope: !8744, file: !1126, discriminator: 2)
!8765 = !DILocation(line: 2519, column: 69, scope: !8764)
!8766 = !DILocation(line: 2519, column: 40, scope: !8764)
!8767 = !DILocation(line: 2519, column: 40, scope: !8768)
!8768 = !DILexicalBlockFile(scope: !8744, file: !1126, discriminator: 3)
!8769 = !DILocation(line: 2519, column: 40, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8744, file: !1126, discriminator: 4)
!8771 = !DILocation(line: 2519, column: 36, scope: !8770)
!8772 = !DILocation(line: 2519, column: 27, scope: !8773)
!8773 = !DILexicalBlockFile(scope: !8744, file: !1126, discriminator: 5)
!8774 = !DILocation(line: 2517, column: 9, scope: !8761)
!8775 = !DILocation(line: 2522, column: 9, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2522, column: 9)
!8777 = !DILocation(line: 2522, column: 14, scope: !8776)
!8778 = !DILocation(line: 2522, column: 28, scope: !8776)
!8779 = !DILocation(line: 2522, column: 33, scope: !8776)
!8780 = !DILocation(line: 2522, column: 9, scope: !8592)
!8781 = !DILocation(line: 2524, column: 41, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8776, file: !1126, line: 2522, column: 38)
!8783 = !DILocation(line: 2524, column: 45, scope: !8782)
!8784 = !DILocation(line: 2524, column: 50, scope: !8782)
!8785 = !DILocation(line: 2525, column: 41, scope: !8782)
!8786 = !DILocation(line: 2525, column: 46, scope: !8782)
!8787 = !DILocation(line: 2525, column: 56, scope: !8788)
!8788 = !DILexicalBlockFile(scope: !8782, file: !1126, discriminator: 1)
!8789 = !DILocation(line: 2525, column: 41, scope: !8788)
!8790 = !DILocation(line: 2525, column: 41, scope: !8791)
!8791 = !DILexicalBlockFile(scope: !8782, file: !1126, discriminator: 2)
!8792 = !DILocation(line: 2525, column: 41, scope: !8793)
!8793 = !DILexicalBlockFile(scope: !8782, file: !1126, discriminator: 3)
!8794 = !DILocation(line: 2524, column: 15, scope: !8788)
!8795 = !DILocation(line: 2524, column: 13, scope: !8788)
!8796 = !DILocation(line: 2526, column: 26, scope: !8782)
!8797 = !DILocation(line: 2526, column: 31, scope: !8782)
!8798 = !DILocation(line: 2526, column: 9, scope: !8782)
!8799 = !DILocation(line: 2527, column: 13, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8782, file: !1126, line: 2527, column: 13)
!8801 = !DILocation(line: 2527, column: 17, scope: !8800)
!8802 = !DILocation(line: 2527, column: 13, scope: !8782)
!8803 = !DILocation(line: 2528, column: 20, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !1126, line: 2527, column: 22)
!8805 = !DILocation(line: 2529, column: 68, scope: !8804)
!8806 = !DILocation(line: 2528, column: 13, scope: !8804)
!8807 = !DILocation(line: 2530, column: 20, scope: !8804)
!8808 = !DILocation(line: 2530, column: 13, scope: !8804)
!8809 = !DILocation(line: 2532, column: 5, scope: !8782)
!8810 = !DILocation(line: 2536, column: 9, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8592, file: !1126, line: 2536, column: 9)
!8812 = !DILocation(line: 2536, column: 20, scope: !8811)
!8813 = !DILocation(line: 2536, column: 9, scope: !8592)
!8814 = !DILocation(line: 2537, column: 30, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8811, file: !1126, line: 2536, column: 43)
!8816 = !DILocation(line: 2537, column: 35, scope: !8815)
!8817 = !DILocation(line: 2537, column: 50, scope: !8815)
!8818 = !DILocation(line: 2537, column: 15, scope: !8815)
!8819 = !DILocation(line: 2537, column: 13, scope: !8815)
!8820 = !DILocation(line: 2538, column: 5, scope: !8815)
!8821 = !DILocation(line: 2539, column: 41, scope: !8811)
!8822 = !DILocation(line: 2539, column: 44, scope: !8811)
!8823 = !DILocation(line: 2539, column: 15, scope: !8811)
!8824 = !DILocation(line: 2539, column: 13, scope: !8811)
!8825 = !DILocation(line: 2540, column: 12, scope: !8592)
!8826 = !DILocation(line: 2540, column: 5, scope: !8592)
!8827 = !DILocation(line: 2541, column: 1, scope: !8592)
!8828 = distinct !DISubprogram(name: "mkv_check_new_extra_data", scope: !1126, file: !1126, line: 2278, type: !3179, isLocal: true, isDefinition: true, scopeLine: 2279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!8829 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8830)
!8830 = distinct !DILocation(line: 2364, column: 22, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !1126, line: 2350, column: 35)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !1126, line: 2349, column: 13)
!8833 = distinct !DILexicalBlock(scope: !8828, file: !1126, line: 2289, column: 28)
!8834 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8835)
!8835 = distinct !DILocation(line: 2339, column: 22, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !1126, line: 2322, column: 78)
!8837 = distinct !DILexicalBlock(scope: !8833, file: !1126, line: 2322, column: 13)
!8838 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 2308, column: 37, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !1126, line: 2291, column: 78)
!8841 = distinct !DILexicalBlock(scope: !8833, file: !1126, line: 2291, column: 13)
!8842 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !8843)
!8843 = distinct !DILocation(line: 2305, column: 22, scope: !8840)
!8844 = !DILocalVariable(name: "s", arg: 1, scope: !8828, file: !1126, line: 2278, type: !2438)
!8845 = !DILocation(line: 2278, column: 54, scope: !8828)
!8846 = !DILocalVariable(name: "pkt", arg: 2, scope: !8828, file: !1126, line: 2278, type: !1266)
!8847 = !DILocation(line: 2278, column: 67, scope: !8828)
!8848 = !DILocalVariable(name: "mkv", scope: !8828, file: !1126, line: 2280, type: !2459)
!8849 = !DILocation(line: 2280, column: 25, scope: !8828)
!8850 = !DILocation(line: 2280, column: 31, scope: !8828)
!8851 = !DILocation(line: 2280, column: 34, scope: !8828)
!8852 = !DILocalVariable(name: "track", scope: !8828, file: !1126, line: 2281, type: !2520)
!8853 = !DILocation(line: 2281, column: 16, scope: !8828)
!8854 = !DILocation(line: 2281, column: 37, scope: !8828)
!8855 = !DILocation(line: 2281, column: 42, scope: !8828)
!8856 = !DILocation(line: 2281, column: 25, scope: !8828)
!8857 = !DILocation(line: 2281, column: 30, scope: !8828)
!8858 = !DILocalVariable(name: "par", scope: !8828, file: !1126, line: 2282, type: !1713)
!8859 = !DILocation(line: 2282, column: 24, scope: !8828)
!8860 = !DILocation(line: 2282, column: 41, scope: !8828)
!8861 = !DILocation(line: 2282, column: 46, scope: !8828)
!8862 = !DILocation(line: 2282, column: 30, scope: !8828)
!8863 = !DILocation(line: 2282, column: 33, scope: !8828)
!8864 = !DILocation(line: 2282, column: 61, scope: !8828)
!8865 = !DILocalVariable(name: "side_data", scope: !8828, file: !1126, line: 2283, type: !1110)
!8866 = !DILocation(line: 2283, column: 14, scope: !8828)
!8867 = !DILocalVariable(name: "side_data_size", scope: !8828, file: !1126, line: 2284, type: !1053)
!8868 = !DILocation(line: 2284, column: 9, scope: !8828)
!8869 = !DILocalVariable(name: "ret", scope: !8828, file: !1126, line: 2284, type: !1053)
!8870 = !DILocation(line: 2284, column: 29, scope: !8828)
!8871 = !DILocation(line: 2286, column: 41, scope: !8828)
!8872 = !DILocation(line: 2286, column: 17, scope: !8828)
!8873 = !DILocation(line: 2286, column: 15, scope: !8828)
!8874 = !DILocation(line: 2289, column: 13, scope: !8828)
!8875 = !DILocation(line: 2289, column: 18, scope: !8828)
!8876 = !DILocation(line: 2289, column: 5, scope: !8828)
!8877 = !DILocation(line: 2291, column: 13, scope: !8841)
!8878 = !DILocation(line: 2291, column: 28, scope: !8841)
!8879 = !DILocation(line: 2291, column: 32, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !8841, file: !1126, discriminator: 1)
!8881 = !DILocation(line: 2291, column: 35, scope: !8880)
!8882 = !DILocation(line: 2291, column: 39, scope: !8880)
!8883 = !DILocation(line: 2291, column: 48, scope: !8880)
!8884 = !DILocation(line: 2291, column: 60, scope: !8880)
!8885 = !DILocation(line: 2291, column: 64, scope: !8886)
!8886 = !DILexicalBlockFile(scope: !8841, file: !1126, discriminator: 2)
!8887 = !DILocation(line: 2291, column: 69, scope: !8886)
!8888 = !DILocation(line: 2291, column: 13, scope: !8886)
!8889 = !DILocalVariable(name: "filler", scope: !8840, file: !1126, line: 2292, type: !1053)
!8890 = !DILocation(line: 2292, column: 17, scope: !8840)
!8891 = !DILocalVariable(name: "output_sample_rate", scope: !8840, file: !1126, line: 2292, type: !1053)
!8892 = !DILocation(line: 2292, column: 25, scope: !8840)
!8893 = !DILocalVariable(name: "curpos", scope: !8840, file: !1126, line: 2293, type: !1051)
!8894 = !DILocation(line: 2293, column: 21, scope: !8840)
!8895 = !DILocation(line: 2294, column: 40, scope: !8840)
!8896 = !DILocation(line: 2294, column: 43, scope: !8840)
!8897 = !DILocation(line: 2294, column: 54, scope: !8840)
!8898 = !DILocation(line: 2294, column: 71, scope: !8840)
!8899 = !DILocation(line: 2294, column: 78, scope: !8840)
!8900 = !DILocation(line: 2294, column: 19, scope: !8840)
!8901 = !DILocation(line: 2294, column: 17, scope: !8840)
!8902 = !DILocation(line: 2296, column: 17, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8840, file: !1126, line: 2296, column: 17)
!8904 = !DILocation(line: 2296, column: 21, scope: !8903)
!8905 = !DILocation(line: 2296, column: 17, scope: !8840)
!8906 = !DILocation(line: 2297, column: 24, scope: !8903)
!8907 = !DILocation(line: 2297, column: 17, scope: !8903)
!8908 = !DILocation(line: 2298, column: 18, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8840, file: !1126, line: 2298, column: 17)
!8910 = !DILocation(line: 2298, column: 17, scope: !8840)
!8911 = !DILocation(line: 2299, column: 38, scope: !8909)
!8912 = !DILocation(line: 2299, column: 45, scope: !8909)
!8913 = !DILocation(line: 2299, column: 36, scope: !8909)
!8914 = !DILocation(line: 2299, column: 17, scope: !8909)
!8915 = !DILocation(line: 2300, column: 23, scope: !8840)
!8916 = !DILocation(line: 2300, column: 28, scope: !8840)
!8917 = !DILocation(line: 2300, column: 22, scope: !8840)
!8918 = !DILocation(line: 2300, column: 13, scope: !8840)
!8919 = !DILocation(line: 2301, column: 38, scope: !8840)
!8920 = !DILocation(line: 2301, column: 43, scope: !8840)
!8921 = !DILocation(line: 2301, column: 19, scope: !8840)
!8922 = !DILocation(line: 2301, column: 17, scope: !8840)
!8923 = !DILocation(line: 2302, column: 17, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8840, file: !1126, line: 2302, column: 17)
!8925 = !DILocation(line: 2302, column: 21, scope: !8924)
!8926 = !DILocation(line: 2302, column: 17, scope: !8840)
!8927 = !DILocation(line: 2303, column: 24, scope: !8924)
!8928 = !DILocation(line: 2303, column: 17, scope: !8924)
!8929 = !DILocation(line: 2304, column: 20, scope: !8840)
!8930 = !DILocation(line: 2304, column: 25, scope: !8840)
!8931 = !DILocation(line: 2304, column: 36, scope: !8840)
!8932 = !DILocation(line: 2304, column: 47, scope: !8840)
!8933 = !DILocation(line: 2304, column: 13, scope: !8840)
!8934 = !DILocation(line: 2305, column: 32, scope: !8840)
!8935 = !DILocation(line: 2305, column: 37, scope: !8840)
!8936 = !DILocation(line: 2305, column: 22, scope: !8840)
!8937 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8843)
!8938 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8843)
!8939 = !DILocation(line: 2305, column: 20, scope: !8840)
!8940 = !DILocation(line: 2306, column: 23, scope: !8840)
!8941 = !DILocation(line: 2306, column: 28, scope: !8840)
!8942 = !DILocation(line: 2306, column: 39, scope: !8840)
!8943 = !DILocation(line: 2306, column: 46, scope: !8840)
!8944 = !DILocation(line: 2306, column: 13, scope: !8840)
!8945 = !DILocation(line: 2307, column: 36, scope: !8840)
!8946 = !DILocation(line: 2307, column: 39, scope: !8840)
!8947 = !DILocation(line: 2307, column: 44, scope: !8840)
!8948 = !DILocation(line: 2307, column: 55, scope: !8840)
!8949 = !DILocation(line: 2307, column: 13, scope: !8840)
!8950 = !DILocation(line: 2308, column: 47, scope: !8840)
!8951 = !DILocation(line: 2308, column: 52, scope: !8840)
!8952 = !DILocation(line: 2308, column: 37, scope: !8840)
!8953 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8839)
!8954 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8839)
!8955 = !DILocation(line: 2308, column: 65, scope: !8840)
!8956 = !DILocation(line: 2308, column: 72, scope: !8840)
!8957 = !DILocation(line: 2308, column: 63, scope: !8840)
!8958 = !DILocation(line: 2308, column: 34, scope: !8840)
!8959 = !DILocation(line: 2308, column: 22, scope: !8840)
!8960 = !DILocation(line: 2308, column: 20, scope: !8840)
!8961 = !DILocation(line: 2309, column: 17, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8840, file: !1126, line: 2309, column: 17)
!8963 = !DILocation(line: 2309, column: 17, scope: !8840)
!8964 = !DILocation(line: 2310, column: 31, scope: !8962)
!8965 = !DILocation(line: 2310, column: 36, scope: !8962)
!8966 = !DILocation(line: 2310, column: 47, scope: !8962)
!8967 = !DILocation(line: 2310, column: 17, scope: !8962)
!8968 = !DILocation(line: 2311, column: 23, scope: !8840)
!8969 = !DILocation(line: 2311, column: 28, scope: !8840)
!8970 = !DILocation(line: 2311, column: 39, scope: !8840)
!8971 = !DILocation(line: 2311, column: 46, scope: !8840)
!8972 = !DILocation(line: 2311, column: 13, scope: !8840)
!8973 = !DILocation(line: 2312, column: 28, scope: !8840)
!8974 = !DILocation(line: 2312, column: 33, scope: !8840)
!8975 = !DILocation(line: 2312, column: 50, scope: !8840)
!8976 = !DILocation(line: 2312, column: 57, scope: !8840)
!8977 = !DILocation(line: 2312, column: 13, scope: !8840)
!8978 = !DILocation(line: 2313, column: 28, scope: !8840)
!8979 = !DILocation(line: 2313, column: 33, scope: !8840)
!8980 = !DILocation(line: 2313, column: 52, scope: !8840)
!8981 = !DILocation(line: 2313, column: 13, scope: !8840)
!8982 = !DILocation(line: 2314, column: 23, scope: !8840)
!8983 = !DILocation(line: 2314, column: 28, scope: !8840)
!8984 = !DILocation(line: 2314, column: 39, scope: !8840)
!8985 = !DILocation(line: 2314, column: 13, scope: !8840)
!8986 = !DILocation(line: 2315, column: 9, scope: !8840)
!8987 = !DILocation(line: 2315, column: 21, scope: !8988)
!8988 = !DILexicalBlockFile(scope: !8989, file: !1126, discriminator: 1)
!8989 = distinct !DILexicalBlock(scope: !8841, file: !1126, line: 2315, column: 20)
!8990 = !DILocation(line: 2315, column: 26, scope: !8988)
!8991 = !DILocation(line: 2315, column: 41, scope: !8988)
!8992 = !DILocation(line: 2315, column: 45, scope: !8993)
!8993 = !DILexicalBlockFile(scope: !8989, file: !1126, discriminator: 2)
!8994 = !DILocation(line: 2315, column: 52, scope: !8993)
!8995 = !DILocation(line: 2315, column: 20, scope: !8993)
!8996 = !DILocation(line: 2317, column: 20, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8989, file: !1126, line: 2315, column: 65)
!8998 = !DILocation(line: 2317, column: 13, scope: !8997)
!8999 = !DILocation(line: 2318, column: 13, scope: !8997)
!9000 = !DILocation(line: 2320, column: 9, scope: !8833)
!9001 = !DILocation(line: 2322, column: 13, scope: !8837)
!9002 = !DILocation(line: 2322, column: 28, scope: !8837)
!9003 = !DILocation(line: 2322, column: 32, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !8837, file: !1126, discriminator: 1)
!9005 = !DILocation(line: 2322, column: 35, scope: !9004)
!9006 = !DILocation(line: 2322, column: 39, scope: !9004)
!9007 = !DILocation(line: 2322, column: 48, scope: !9004)
!9008 = !DILocation(line: 2322, column: 60, scope: !9004)
!9009 = !DILocation(line: 2322, column: 64, scope: !9010)
!9010 = !DILexicalBlockFile(scope: !8837, file: !1126, discriminator: 2)
!9011 = !DILocation(line: 2322, column: 69, scope: !9010)
!9012 = !DILocation(line: 2322, column: 13, scope: !9010)
!9013 = !DILocalVariable(name: "codecpriv_par", scope: !8836, file: !1126, line: 2323, type: !1713)
!9014 = !DILocation(line: 2323, column: 32, scope: !8836)
!9015 = !DILocalVariable(name: "curpos", scope: !8836, file: !1126, line: 2324, type: !1051)
!9016 = !DILocation(line: 2324, column: 21, scope: !8836)
!9017 = !DILocation(line: 2325, column: 17, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8836, file: !1126, line: 2325, column: 17)
!9019 = !DILocation(line: 2325, column: 35, scope: !9018)
!9020 = !DILocation(line: 2325, column: 40, scope: !9018)
!9021 = !DILocation(line: 2325, column: 32, scope: !9018)
!9022 = !DILocation(line: 2325, column: 17, scope: !8836)
!9023 = !DILocation(line: 2326, column: 24, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9018, file: !1126, line: 2325, column: 56)
!9025 = !DILocation(line: 2327, column: 24, scope: !9024)
!9026 = !DILocation(line: 2327, column: 29, scope: !9024)
!9027 = !DILocation(line: 2326, column: 17, scope: !9024)
!9028 = !DILocation(line: 2328, column: 17, scope: !9024)
!9029 = !DILocation(line: 2330, column: 29, scope: !8836)
!9030 = !DILocation(line: 2330, column: 27, scope: !8836)
!9031 = !DILocation(line: 2331, column: 18, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !8836, file: !1126, line: 2331, column: 17)
!9033 = !DILocation(line: 2331, column: 17, scope: !8836)
!9034 = !DILocation(line: 2332, column: 17, scope: !9032)
!9035 = !DILocation(line: 2333, column: 43, scope: !8836)
!9036 = !DILocation(line: 2333, column: 58, scope: !8836)
!9037 = !DILocation(line: 2333, column: 19, scope: !8836)
!9038 = !DILocation(line: 2333, column: 17, scope: !8836)
!9039 = !DILocation(line: 2334, column: 17, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8836, file: !1126, line: 2334, column: 17)
!9041 = !DILocation(line: 2334, column: 21, scope: !9040)
!9042 = !DILocation(line: 2334, column: 17, scope: !8836)
!9043 = !DILocation(line: 2335, column: 17, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9040, file: !1126, line: 2334, column: 26)
!9045 = !DILocation(line: 2336, column: 24, scope: !9044)
!9046 = !DILocation(line: 2336, column: 17, scope: !9044)
!9047 = !DILocation(line: 2338, column: 20, scope: !8836)
!9048 = !DILocation(line: 2338, column: 35, scope: !8836)
!9049 = !DILocation(line: 2338, column: 46, scope: !8836)
!9050 = !DILocation(line: 2338, column: 57, scope: !8836)
!9051 = !DILocation(line: 2338, column: 13, scope: !8836)
!9052 = !DILocation(line: 2339, column: 32, scope: !8836)
!9053 = !DILocation(line: 2339, column: 37, scope: !8836)
!9054 = !DILocation(line: 2339, column: 22, scope: !8836)
!9055 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8835)
!9056 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8835)
!9057 = !DILocation(line: 2339, column: 20, scope: !8836)
!9058 = !DILocation(line: 2340, column: 23, scope: !8836)
!9059 = !DILocation(line: 2340, column: 28, scope: !8836)
!9060 = !DILocation(line: 2340, column: 39, scope: !8836)
!9061 = !DILocation(line: 2340, column: 46, scope: !8836)
!9062 = !DILocation(line: 2340, column: 13, scope: !8836)
!9063 = !DILocation(line: 2341, column: 36, scope: !8836)
!9064 = !DILocation(line: 2341, column: 39, scope: !8836)
!9065 = !DILocation(line: 2341, column: 44, scope: !8836)
!9066 = !DILocation(line: 2341, column: 55, scope: !8836)
!9067 = !DILocation(line: 2341, column: 13, scope: !8836)
!9068 = !DILocation(line: 2342, column: 23, scope: !8836)
!9069 = !DILocation(line: 2342, column: 28, scope: !8836)
!9070 = !DILocation(line: 2342, column: 39, scope: !8836)
!9071 = !DILocation(line: 2342, column: 13, scope: !8836)
!9072 = !DILocation(line: 2343, column: 13, scope: !8836)
!9073 = !DILocation(line: 2344, column: 9, scope: !8836)
!9074 = !DILocation(line: 2345, column: 9, scope: !8833)
!9075 = !DILocation(line: 2349, column: 13, scope: !8832)
!9076 = !DILocation(line: 2349, column: 28, scope: !8832)
!9077 = !DILocation(line: 2349, column: 32, scope: !9078)
!9078 = !DILexicalBlockFile(scope: !8832, file: !1126, discriminator: 1)
!9079 = !DILocation(line: 2349, column: 35, scope: !9078)
!9080 = !DILocation(line: 2349, column: 39, scope: !9078)
!9081 = !DILocation(line: 2349, column: 48, scope: !9078)
!9082 = !DILocation(line: 2349, column: 60, scope: !9078)
!9083 = !DILocation(line: 2349, column: 64, scope: !9084)
!9084 = !DILexicalBlockFile(scope: !8832, file: !1126, discriminator: 2)
!9085 = !DILocation(line: 2349, column: 69, scope: !9084)
!9086 = !DILocation(line: 2349, column: 77, scope: !9084)
!9087 = !DILocation(line: 2350, column: 14, scope: !8832)
!9088 = !DILocation(line: 2350, column: 19, scope: !8832)
!9089 = !DILocation(line: 2349, column: 13, scope: !9090)
!9090 = !DILexicalBlockFile(scope: !8833, file: !1126, discriminator: 3)
!9091 = !DILocalVariable(name: "dyn_cp", scope: !8831, file: !1126, line: 2351, type: !1332)
!9092 = !DILocation(line: 2351, column: 26, scope: !8831)
!9093 = !DILocalVariable(name: "codecpriv", scope: !8831, file: !1126, line: 2352, type: !1110)
!9094 = !DILocation(line: 2352, column: 22, scope: !8831)
!9095 = !DILocalVariable(name: "codecpriv_size", scope: !8831, file: !1126, line: 2353, type: !1053)
!9096 = !DILocation(line: 2353, column: 17, scope: !8831)
!9097 = !DILocalVariable(name: "curpos", scope: !8831, file: !1126, line: 2354, type: !1051)
!9098 = !DILocation(line: 2354, column: 21, scope: !8831)
!9099 = !DILocation(line: 2355, column: 19, scope: !8831)
!9100 = !DILocation(line: 2355, column: 17, scope: !8831)
!9101 = !DILocation(line: 2356, column: 17, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !8831, file: !1126, line: 2356, column: 17)
!9103 = !DILocation(line: 2356, column: 21, scope: !9102)
!9104 = !DILocation(line: 2356, column: 17, scope: !8831)
!9105 = !DILocation(line: 2357, column: 24, scope: !9102)
!9106 = !DILocation(line: 2357, column: 17, scope: !9102)
!9107 = !DILocation(line: 2358, column: 32, scope: !8831)
!9108 = !DILocation(line: 2358, column: 40, scope: !8831)
!9109 = !DILocation(line: 2358, column: 51, scope: !8831)
!9110 = !DILocation(line: 2358, column: 13, scope: !8831)
!9111 = !DILocation(line: 2359, column: 49, scope: !8831)
!9112 = !DILocation(line: 2359, column: 30, scope: !8831)
!9113 = !DILocation(line: 2359, column: 28, scope: !8831)
!9114 = !DILocation(line: 2360, column: 18, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !8831, file: !1126, line: 2360, column: 17)
!9116 = !DILocation(line: 2360, column: 17, scope: !8831)
!9117 = !DILocation(line: 2361, column: 25, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9115, file: !1126, line: 2360, column: 34)
!9119 = !DILocation(line: 2361, column: 17, scope: !9118)
!9120 = !DILocation(line: 2362, column: 17, scope: !9118)
!9121 = !DILocation(line: 2364, column: 32, scope: !8831)
!9122 = !DILocation(line: 2364, column: 37, scope: !8831)
!9123 = !DILocation(line: 2364, column: 22, scope: !8831)
!9124 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !8830)
!9125 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !8830)
!9126 = !DILocation(line: 2364, column: 20, scope: !8831)
!9127 = !DILocation(line: 2365, column: 23, scope: !8831)
!9128 = !DILocation(line: 2365, column: 28, scope: !8831)
!9129 = !DILocation(line: 2365, column: 39, scope: !8831)
!9130 = !DILocation(line: 2365, column: 46, scope: !8831)
!9131 = !DILocation(line: 2365, column: 13, scope: !8831)
!9132 = !DILocation(line: 2367, column: 29, scope: !8831)
!9133 = !DILocation(line: 2367, column: 34, scope: !8831)
!9134 = !DILocation(line: 2367, column: 53, scope: !8831)
!9135 = !DILocation(line: 2367, column: 13, scope: !8831)
!9136 = !DILocation(line: 2368, column: 21, scope: !8831)
!9137 = !DILocation(line: 2368, column: 13, scope: !8831)
!9138 = !DILocation(line: 2369, column: 23, scope: !8831)
!9139 = !DILocation(line: 2369, column: 28, scope: !8831)
!9140 = !DILocation(line: 2369, column: 39, scope: !8831)
!9141 = !DILocation(line: 2369, column: 13, scope: !8831)
!9142 = !DILocation(line: 2370, column: 38, scope: !8831)
!9143 = !DILocation(line: 2370, column: 43, scope: !8831)
!9144 = !DILocation(line: 2370, column: 19, scope: !8831)
!9145 = !DILocation(line: 2370, column: 17, scope: !8831)
!9146 = !DILocation(line: 2371, column: 17, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !8831, file: !1126, line: 2371, column: 17)
!9148 = !DILocation(line: 2371, column: 21, scope: !9147)
!9149 = !DILocation(line: 2371, column: 17, scope: !8831)
!9150 = !DILocation(line: 2372, column: 24, scope: !9147)
!9151 = !DILocation(line: 2372, column: 17, scope: !9147)
!9152 = !DILocation(line: 2373, column: 20, scope: !8831)
!9153 = !DILocation(line: 2373, column: 25, scope: !8831)
!9154 = !DILocation(line: 2373, column: 36, scope: !8831)
!9155 = !DILocation(line: 2373, column: 47, scope: !8831)
!9156 = !DILocation(line: 2373, column: 13, scope: !8831)
!9157 = !DILocation(line: 2374, column: 9, scope: !8831)
!9158 = !DILocation(line: 2374, column: 21, scope: !9159)
!9159 = !DILexicalBlockFile(scope: !9160, file: !1126, discriminator: 1)
!9160 = distinct !DILexicalBlock(scope: !8832, file: !1126, line: 2374, column: 20)
!9161 = !DILocation(line: 2374, column: 26, scope: !9159)
!9162 = !DILocation(line: 2374, column: 20, scope: !9159)
!9163 = !DILocation(line: 2375, column: 13, scope: !9160)
!9164 = !DILocation(line: 2376, column: 9, scope: !8833)
!9165 = !DILocation(line: 2378, column: 13, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !8833, file: !1126, line: 2378, column: 13)
!9167 = !DILocation(line: 2378, column: 13, scope: !8833)
!9168 = !DILocation(line: 2379, column: 20, scope: !9166)
!9169 = !DILocation(line: 2379, column: 82, scope: !9166)
!9170 = !DILocation(line: 2379, column: 87, scope: !9166)
!9171 = !DILocation(line: 2379, column: 13, scope: !9166)
!9172 = !DILocation(line: 2380, column: 9, scope: !8833)
!9173 = !DILocation(line: 2383, column: 5, scope: !8828)
!9174 = !DILocation(line: 2384, column: 1, scope: !8828)
!9175 = distinct !DISubprogram(name: "mkv_start_new_cluster", scope: !1126, file: !1126, line: 2260, type: !9176, isLocal: true, isDefinition: true, scopeLine: 2261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{null, !2438, !1266}
!9178 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !9179)
!9179 = distinct !DILocation(line: 2270, column: 16, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9175, file: !1126, line: 2266, column: 9)
!9181 = !DILocalVariable(name: "s", arg: 1, scope: !9175, file: !1126, line: 2260, type: !2438)
!9182 = !DILocation(line: 2260, column: 52, scope: !9175)
!9183 = !DILocalVariable(name: "pkt", arg: 2, scope: !9175, file: !1126, line: 2260, type: !1266)
!9184 = !DILocation(line: 2260, column: 65, scope: !9175)
!9185 = !DILocalVariable(name: "mkv", scope: !9175, file: !1126, line: 2262, type: !2459)
!9186 = !DILocation(line: 2262, column: 25, scope: !9175)
!9187 = !DILocation(line: 2262, column: 31, scope: !9175)
!9188 = !DILocation(line: 2262, column: 34, scope: !9175)
!9189 = !DILocation(line: 2264, column: 27, scope: !9175)
!9190 = !DILocation(line: 2264, column: 30, scope: !9175)
!9191 = !DILocation(line: 2264, column: 35, scope: !9175)
!9192 = !DILocation(line: 2264, column: 40, scope: !9175)
!9193 = !DILocation(line: 2264, column: 48, scope: !9175)
!9194 = !DILocation(line: 2264, column: 53, scope: !9175)
!9195 = !DILocation(line: 2264, column: 58, scope: !9175)
!9196 = !DILocation(line: 2264, column: 5, scope: !9175)
!9197 = !DILocation(line: 2265, column: 5, scope: !9175)
!9198 = !DILocation(line: 2265, column: 10, scope: !9175)
!9199 = !DILocation(line: 2265, column: 22, scope: !9175)
!9200 = !DILocation(line: 2266, column: 9, scope: !9180)
!9201 = !DILocation(line: 2266, column: 12, scope: !9180)
!9202 = !DILocation(line: 2266, column: 16, scope: !9180)
!9203 = !DILocation(line: 2266, column: 25, scope: !9180)
!9204 = !DILocation(line: 2266, column: 9, scope: !9175)
!9205 = !DILocation(line: 2267, column: 16, scope: !9180)
!9206 = !DILocation(line: 2270, column: 26, scope: !9180)
!9207 = !DILocation(line: 2270, column: 29, scope: !9180)
!9208 = !DILocation(line: 2270, column: 16, scope: !9180)
!9209 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !9179)
!9210 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !9179)
!9211 = !DILocation(line: 2270, column: 34, scope: !9180)
!9212 = !DILocation(line: 2270, column: 39, scope: !9180)
!9213 = !DILocation(line: 2270, column: 44, scope: !9180)
!9214 = !DILocation(line: 2270, column: 49, scope: !9180)
!9215 = !DILocation(line: 2267, column: 9, scope: !9180)
!9216 = !DILocation(line: 2272, column: 16, scope: !9180)
!9217 = !DILocation(line: 2274, column: 16, scope: !9180)
!9218 = !DILocation(line: 2274, column: 21, scope: !9180)
!9219 = !DILocation(line: 2274, column: 26, scope: !9180)
!9220 = !DILocation(line: 2274, column: 31, scope: !9180)
!9221 = !DILocation(line: 2272, column: 9, scope: !9180)
!9222 = !DILocation(line: 2275, column: 16, scope: !9175)
!9223 = !DILocation(line: 2275, column: 19, scope: !9175)
!9224 = !DILocation(line: 2275, column: 5, scope: !9175)
!9225 = !DILocation(line: 2276, column: 1, scope: !9175)
!9226 = distinct !DISubprogram(name: "mkv_write_packet_internal", scope: !1126, file: !1126, line: 2386, type: !9227, isLocal: true, isDefinition: true, scopeLine: 2387, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!1053, !2438, !1266, !1053}
!9229 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !9230)
!9230 = distinct !DILocation(line: 2422, column: 27, scope: !9226)
!9231 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !9232)
!9232 = distinct !DILocation(line: 2413, column: 28, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9234, file: !1126, line: 2412, column: 33)
!9234 = distinct !DILexicalBlock(scope: !9226, file: !1126, line: 2412, column: 9)
!9235 = !DILocalVariable(name: "s", arg: 1, scope: !9226, file: !1126, line: 2386, type: !2438)
!9236 = !DILocation(line: 2386, column: 55, scope: !9226)
!9237 = !DILocalVariable(name: "pkt", arg: 2, scope: !9226, file: !1126, line: 2386, type: !1266)
!9238 = !DILocation(line: 2386, column: 68, scope: !9226)
!9239 = !DILocalVariable(name: "add_cue", arg: 3, scope: !9226, file: !1126, line: 2386, type: !1053)
!9240 = !DILocation(line: 2386, column: 77, scope: !9226)
!9241 = !DILocalVariable(name: "mkv", scope: !9226, file: !1126, line: 2388, type: !2459)
!9242 = !DILocation(line: 2388, column: 25, scope: !9226)
!9243 = !DILocation(line: 2388, column: 31, scope: !9226)
!9244 = !DILocation(line: 2388, column: 34, scope: !9226)
!9245 = !DILocalVariable(name: "pb", scope: !9226, file: !1126, line: 2389, type: !1332)
!9246 = !DILocation(line: 2389, column: 18, scope: !9226)
!9247 = !DILocation(line: 2389, column: 23, scope: !9226)
!9248 = !DILocation(line: 2389, column: 26, scope: !9226)
!9249 = !DILocalVariable(name: "par", scope: !9226, file: !1126, line: 2390, type: !1713)
!9250 = !DILocation(line: 2390, column: 24, scope: !9226)
!9251 = !DILocation(line: 2390, column: 41, scope: !9226)
!9252 = !DILocation(line: 2390, column: 46, scope: !9226)
!9253 = !DILocation(line: 2390, column: 30, scope: !9226)
!9254 = !DILocation(line: 2390, column: 33, scope: !9226)
!9255 = !DILocation(line: 2390, column: 61, scope: !9226)
!9256 = !DILocalVariable(name: "keyframe", scope: !9226, file: !1126, line: 2391, type: !1053)
!9257 = !DILocation(line: 2391, column: 9, scope: !9226)
!9258 = !DILocation(line: 2391, column: 23, scope: !9226)
!9259 = !DILocation(line: 2391, column: 28, scope: !9226)
!9260 = !DILocation(line: 2391, column: 34, scope: !9226)
!9261 = !DILocation(line: 2391, column: 21, scope: !9226)
!9262 = !DILocation(line: 2391, column: 20, scope: !9226)
!9263 = !DILocalVariable(name: "duration", scope: !9226, file: !1126, line: 2392, type: !1053)
!9264 = !DILocation(line: 2392, column: 9, scope: !9226)
!9265 = !DILocation(line: 2392, column: 20, scope: !9226)
!9266 = !DILocation(line: 2392, column: 25, scope: !9226)
!9267 = !DILocalVariable(name: "ret", scope: !9226, file: !1126, line: 2393, type: !1053)
!9268 = !DILocation(line: 2393, column: 9, scope: !9226)
!9269 = !DILocalVariable(name: "ts", scope: !9226, file: !1126, line: 2394, type: !1051)
!9270 = !DILocation(line: 2394, column: 13, scope: !9226)
!9271 = !DILocation(line: 2394, column: 30, scope: !9226)
!9272 = !DILocation(line: 2394, column: 35, scope: !9226)
!9273 = !DILocation(line: 2394, column: 18, scope: !9226)
!9274 = !DILocation(line: 2394, column: 23, scope: !9226)
!9275 = !DILocation(line: 2394, column: 49, scope: !9226)
!9276 = !DILocation(line: 2394, column: 61, scope: !9277)
!9277 = !DILexicalBlockFile(scope: !9226, file: !1126, discriminator: 1)
!9278 = !DILocation(line: 2394, column: 66, scope: !9277)
!9279 = !DILocation(line: 2394, column: 18, scope: !9277)
!9280 = !DILocation(line: 2394, column: 72, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !9226, file: !1126, discriminator: 2)
!9282 = !DILocation(line: 2394, column: 77, scope: !9281)
!9283 = !DILocation(line: 2394, column: 18, scope: !9281)
!9284 = !DILocation(line: 2394, column: 18, scope: !9285)
!9285 = !DILexicalBlockFile(scope: !9226, file: !1126, discriminator: 3)
!9286 = !DILocation(line: 2394, column: 13, scope: !9285)
!9287 = !DILocalVariable(name: "relative_packet_pos", scope: !9226, file: !1126, line: 2395, type: !1051)
!9288 = !DILocation(line: 2395, column: 13, scope: !9226)
!9289 = !DILocalVariable(name: "dash_tracknum", scope: !9226, file: !1126, line: 2396, type: !1053)
!9290 = !DILocation(line: 2396, column: 9, scope: !9226)
!9291 = !DILocation(line: 2396, column: 25, scope: !9226)
!9292 = !DILocation(line: 2396, column: 30, scope: !9226)
!9293 = !DILocation(line: 2396, column: 40, scope: !9277)
!9294 = !DILocation(line: 2396, column: 45, scope: !9277)
!9295 = !DILocation(line: 2396, column: 25, scope: !9277)
!9296 = !DILocation(line: 2396, column: 65, scope: !9281)
!9297 = !DILocation(line: 2396, column: 70, scope: !9281)
!9298 = !DILocation(line: 2396, column: 83, scope: !9281)
!9299 = !DILocation(line: 2396, column: 25, scope: !9281)
!9300 = !DILocation(line: 2396, column: 25, scope: !9285)
!9301 = !DILocation(line: 2396, column: 9, scope: !9285)
!9302 = !DILocation(line: 2398, column: 9, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9226, file: !1126, line: 2398, column: 9)
!9304 = !DILocation(line: 2398, column: 12, scope: !9303)
!9305 = !DILocation(line: 2398, column: 9, scope: !9226)
!9306 = !DILocation(line: 2399, column: 16, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9303, file: !1126, line: 2398, column: 48)
!9308 = !DILocation(line: 2399, column: 9, scope: !9307)
!9309 = !DILocation(line: 2400, column: 9, scope: !9307)
!9310 = !DILocation(line: 2402, column: 23, scope: !9226)
!9311 = !DILocation(line: 2402, column: 28, scope: !9226)
!9312 = !DILocation(line: 2402, column: 11, scope: !9226)
!9313 = !DILocation(line: 2402, column: 16, scope: !9226)
!9314 = !DILocation(line: 2402, column: 42, scope: !9226)
!9315 = !DILocation(line: 2402, column: 8, scope: !9226)
!9316 = !DILocation(line: 2404, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9226, file: !1126, line: 2404, column: 9)
!9318 = !DILocation(line: 2404, column: 14, scope: !9317)
!9319 = !DILocation(line: 2404, column: 26, scope: !9317)
!9320 = !DILocation(line: 2404, column: 9, scope: !9226)
!9321 = !DILocalVariable(name: "cluster_time", scope: !9322, file: !1126, line: 2405, type: !1051)
!9322 = distinct !DILexicalBlock(scope: !9317, file: !1126, line: 2404, column: 33)
!9323 = !DILocation(line: 2405, column: 17, scope: !9322)
!9324 = !DILocation(line: 2405, column: 32, scope: !9322)
!9325 = !DILocation(line: 2405, column: 37, scope: !9322)
!9326 = !DILocation(line: 2405, column: 42, scope: !9322)
!9327 = !DILocation(line: 2405, column: 35, scope: !9322)
!9328 = !DILocation(line: 2405, column: 68, scope: !9322)
!9329 = !DILocation(line: 2405, column: 73, scope: !9322)
!9330 = !DILocation(line: 2405, column: 56, scope: !9322)
!9331 = !DILocation(line: 2405, column: 61, scope: !9322)
!9332 = !DILocation(line: 2405, column: 87, scope: !9322)
!9333 = !DILocation(line: 2405, column: 54, scope: !9322)
!9334 = !DILocation(line: 2406, column: 22, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9322, file: !1126, line: 2406, column: 13)
!9336 = !DILocation(line: 2406, column: 13, scope: !9335)
!9337 = !DILocation(line: 2406, column: 38, scope: !9335)
!9338 = !DILocation(line: 2406, column: 35, scope: !9335)
!9339 = !DILocation(line: 2406, column: 13, scope: !9322)
!9340 = !DILocation(line: 2407, column: 20, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9335, file: !1126, line: 2406, column: 52)
!9342 = !DILocation(line: 2407, column: 13, scope: !9341)
!9343 = !DILocation(line: 2408, column: 35, scope: !9341)
!9344 = !DILocation(line: 2408, column: 38, scope: !9341)
!9345 = !DILocation(line: 2408, column: 13, scope: !9341)
!9346 = !DILocation(line: 2409, column: 9, scope: !9341)
!9347 = !DILocation(line: 2410, column: 5, scope: !9322)
!9348 = !DILocation(line: 2412, column: 9, scope: !9234)
!9349 = !DILocation(line: 2412, column: 14, scope: !9234)
!9350 = !DILocation(line: 2412, column: 26, scope: !9234)
!9351 = !DILocation(line: 2412, column: 9, scope: !9226)
!9352 = !DILocation(line: 2413, column: 38, scope: !9233)
!9353 = !DILocation(line: 2413, column: 41, scope: !9233)
!9354 = !DILocation(line: 2413, column: 28, scope: !9233)
!9355 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !9232)
!9356 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !9232)
!9357 = !DILocation(line: 2413, column: 9, scope: !9233)
!9358 = !DILocation(line: 2413, column: 14, scope: !9233)
!9359 = !DILocation(line: 2413, column: 26, scope: !9233)
!9360 = !DILocation(line: 2414, column: 39, scope: !9233)
!9361 = !DILocation(line: 2414, column: 42, scope: !9233)
!9362 = !DILocation(line: 2414, column: 47, scope: !9233)
!9363 = !DILocation(line: 2414, column: 52, scope: !9233)
!9364 = !DILocation(line: 2414, column: 60, scope: !9233)
!9365 = !DILocation(line: 2414, column: 66, scope: !9233)
!9366 = !DILocation(line: 2414, column: 71, scope: !9233)
!9367 = !DILocation(line: 2414, column: 15, scope: !9233)
!9368 = !DILocation(line: 2414, column: 13, scope: !9233)
!9369 = !DILocation(line: 2415, column: 13, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9233, file: !1126, line: 2415, column: 13)
!9371 = !DILocation(line: 2415, column: 17, scope: !9370)
!9372 = !DILocation(line: 2415, column: 13, scope: !9233)
!9373 = !DILocation(line: 2416, column: 20, scope: !9370)
!9374 = !DILocation(line: 2416, column: 13, scope: !9370)
!9375 = !DILocation(line: 2417, column: 23, scope: !9233)
!9376 = !DILocation(line: 2417, column: 28, scope: !9233)
!9377 = !DILocation(line: 2417, column: 50, scope: !9233)
!9378 = !DILocation(line: 2417, column: 47, scope: !9233)
!9379 = !DILocation(line: 2417, column: 43, scope: !9233)
!9380 = !DILocation(line: 2417, column: 43, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9233, file: !1126, discriminator: 1)
!9382 = !DILocation(line: 2417, column: 63, scope: !9383)
!9383 = !DILexicalBlockFile(scope: !9233, file: !1126, discriminator: 2)
!9384 = !DILocation(line: 2417, column: 43, scope: !9383)
!9385 = !DILocation(line: 2417, column: 43, scope: !9386)
!9386 = !DILexicalBlockFile(scope: !9233, file: !1126, discriminator: 3)
!9387 = !DILocation(line: 2417, column: 9, scope: !9386)
!9388 = !DILocation(line: 2418, column: 36, scope: !9233)
!9389 = !DILocation(line: 2418, column: 33, scope: !9233)
!9390 = !DILocation(line: 2418, column: 29, scope: !9233)
!9391 = !DILocation(line: 2418, column: 29, scope: !9381)
!9392 = !DILocation(line: 2418, column: 49, scope: !9383)
!9393 = !DILocation(line: 2418, column: 29, scope: !9383)
!9394 = !DILocation(line: 2418, column: 29, scope: !9386)
!9395 = !DILocation(line: 2418, column: 9, scope: !9386)
!9396 = !DILocation(line: 2418, column: 14, scope: !9386)
!9397 = !DILocation(line: 2418, column: 26, scope: !9386)
!9398 = !DILocation(line: 2419, column: 5, scope: !9233)
!9399 = !DILocation(line: 2420, column: 10, scope: !9226)
!9400 = !DILocation(line: 2420, column: 15, scope: !9226)
!9401 = !DILocation(line: 2420, column: 8, scope: !9226)
!9402 = !DILocation(line: 2422, column: 37, scope: !9226)
!9403 = !DILocation(line: 2422, column: 27, scope: !9226)
!9404 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !9230)
!9405 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !9230)
!9406 = !DILocation(line: 2422, column: 25, scope: !9226)
!9407 = !DILocation(line: 2424, column: 9, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9226, file: !1126, line: 2424, column: 9)
!9409 = !DILocation(line: 2424, column: 14, scope: !9408)
!9410 = !DILocation(line: 2424, column: 25, scope: !9408)
!9411 = !DILocation(line: 2424, column: 9, scope: !9226)
!9412 = !DILocation(line: 2425, column: 25, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9408, file: !1126, line: 2424, column: 51)
!9414 = !DILocation(line: 2425, column: 28, scope: !9413)
!9415 = !DILocation(line: 2425, column: 38, scope: !9413)
!9416 = !DILocation(line: 2425, column: 43, scope: !9413)
!9417 = !DILocation(line: 2425, column: 9, scope: !9413)
!9418 = !DILocation(line: 2426, column: 14, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9413, file: !1126, line: 2426, column: 13)
!9420 = !DILocation(line: 2426, column: 17, scope: !9419)
!9421 = !DILocation(line: 2426, column: 21, scope: !9419)
!9422 = !DILocation(line: 2426, column: 30, scope: !9419)
!9423 = !DILocation(line: 2426, column: 42, scope: !9419)
!9424 = !DILocation(line: 2426, column: 46, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !9419, file: !1126, discriminator: 1)
!9426 = !DILocation(line: 2426, column: 51, scope: !9425)
!9427 = !DILocation(line: 2426, column: 62, scope: !9425)
!9428 = !DILocation(line: 2426, column: 84, scope: !9425)
!9429 = !DILocation(line: 2426, column: 87, scope: !9430)
!9430 = !DILexicalBlockFile(scope: !9419, file: !1126, discriminator: 2)
!9431 = !DILocation(line: 2426, column: 96, scope: !9430)
!9432 = !DILocation(line: 2426, column: 99, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !9419, file: !1126, discriminator: 3)
!9434 = !DILocation(line: 2426, column: 13, scope: !9433)
!9435 = !DILocation(line: 2427, column: 36, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9419, file: !1126, line: 2426, column: 109)
!9437 = !DILocation(line: 2427, column: 41, scope: !9436)
!9438 = !DILocation(line: 2427, column: 47, scope: !9436)
!9439 = !DILocation(line: 2427, column: 52, scope: !9436)
!9440 = !DILocation(line: 2427, column: 66, scope: !9436)
!9441 = !DILocation(line: 2427, column: 81, scope: !9436)
!9442 = !DILocation(line: 2427, column: 85, scope: !9436)
!9443 = !DILocation(line: 2427, column: 90, scope: !9436)
!9444 = !DILocation(line: 2427, column: 103, scope: !9436)
!9445 = !DILocation(line: 2427, column: 19, scope: !9436)
!9446 = !DILocation(line: 2427, column: 17, scope: !9436)
!9447 = !DILocation(line: 2428, column: 17, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9436, file: !1126, line: 2428, column: 17)
!9449 = !DILocation(line: 2428, column: 21, scope: !9448)
!9450 = !DILocation(line: 2428, column: 17, scope: !9436)
!9451 = !DILocation(line: 2428, column: 33, scope: !9452)
!9452 = !DILexicalBlockFile(scope: !9448, file: !1126, discriminator: 1)
!9453 = !DILocation(line: 2428, column: 26, scope: !9452)
!9454 = !DILocation(line: 2429, column: 9, scope: !9436)
!9455 = !DILocation(line: 2430, column: 5, scope: !9413)
!9456 = !DILocation(line: 2431, column: 13, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !1126, line: 2431, column: 13)
!9458 = distinct !DILexicalBlock(scope: !9408, file: !1126, line: 2430, column: 12)
!9459 = !DILocation(line: 2431, column: 18, scope: !9457)
!9460 = !DILocation(line: 2431, column: 27, scope: !9457)
!9461 = !DILocation(line: 2431, column: 13, scope: !9458)
!9462 = !DILocation(line: 2432, column: 45, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9457, file: !1126, line: 2431, column: 50)
!9464 = !DILocation(line: 2432, column: 48, scope: !9463)
!9465 = !DILocation(line: 2432, column: 52, scope: !9463)
!9466 = !DILocation(line: 2432, column: 24, scope: !9463)
!9467 = !DILocation(line: 2432, column: 22, scope: !9463)
!9468 = !DILocation(line: 2433, column: 9, scope: !9463)
!9469 = !DILocalVariable(name: "blockgroup", scope: !9470, file: !1126, line: 2434, type: !2468)
!9470 = distinct !DILexicalBlock(scope: !9457, file: !1126, line: 2433, column: 16)
!9471 = !DILocation(line: 2434, column: 25, scope: !9470)
!9472 = !DILocation(line: 2434, column: 56, scope: !9470)
!9473 = !DILocation(line: 2435, column: 76, scope: !9470)
!9474 = !DILocation(line: 2435, column: 81, scope: !9470)
!9475 = !DILocation(line: 2435, column: 56, scope: !9470)
!9476 = !DILocation(line: 2434, column: 38, scope: !9470)
!9477 = !DILocation(line: 2440, column: 17, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9470, file: !1126, line: 2440, column: 17)
!9479 = !DILocation(line: 2440, column: 22, scope: !9478)
!9480 = !DILocation(line: 2440, column: 43, scope: !9478)
!9481 = !DILocation(line: 2440, column: 17, scope: !9470)
!9482 = !DILocation(line: 2441, column: 28, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9478, file: !1126, line: 2440, column: 48)
!9484 = !DILocation(line: 2441, column: 33, scope: !9483)
!9485 = !DILocation(line: 2441, column: 26, scope: !9483)
!9486 = !DILocation(line: 2442, column: 13, scope: !9483)
!9487 = !DILocation(line: 2446, column: 29, scope: !9470)
!9488 = !DILocation(line: 2446, column: 32, scope: !9470)
!9489 = !DILocation(line: 2446, column: 42, scope: !9470)
!9490 = !DILocation(line: 2446, column: 13, scope: !9470)
!9491 = !DILocation(line: 2447, column: 27, scope: !9470)
!9492 = !DILocation(line: 2447, column: 37, scope: !9470)
!9493 = !DILocation(line: 2447, column: 13, scope: !9470)
!9494 = !DILocation(line: 2448, column: 29, scope: !9470)
!9495 = !DILocation(line: 2448, column: 13, scope: !9470)
!9496 = !DILocation(line: 2451, column: 13, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9458, file: !1126, line: 2451, column: 13)
!9498 = !DILocation(line: 2451, column: 16, scope: !9497)
!9499 = !DILocation(line: 2451, column: 20, scope: !9497)
!9500 = !DILocation(line: 2451, column: 29, scope: !9497)
!9501 = !DILocation(line: 2451, column: 13, scope: !9458)
!9502 = !DILocation(line: 2452, column: 36, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !1126, line: 2451, column: 41)
!9504 = !DILocation(line: 2452, column: 41, scope: !9503)
!9505 = !DILocation(line: 2452, column: 47, scope: !9503)
!9506 = !DILocation(line: 2452, column: 52, scope: !9503)
!9507 = !DILocation(line: 2452, column: 66, scope: !9503)
!9508 = !DILocation(line: 2452, column: 81, scope: !9503)
!9509 = !DILocation(line: 2453, column: 36, scope: !9503)
!9510 = !DILocation(line: 2453, column: 41, scope: !9503)
!9511 = !DILocation(line: 2453, column: 54, scope: !9503)
!9512 = !DILocation(line: 2453, column: 75, scope: !9503)
!9513 = !DILocation(line: 2452, column: 19, scope: !9503)
!9514 = !DILocation(line: 2452, column: 17, scope: !9503)
!9515 = !DILocation(line: 2454, column: 17, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9503, file: !1126, line: 2454, column: 17)
!9517 = !DILocation(line: 2454, column: 21, scope: !9516)
!9518 = !DILocation(line: 2454, column: 17, scope: !9503)
!9519 = !DILocation(line: 2455, column: 24, scope: !9516)
!9520 = !DILocation(line: 2455, column: 17, scope: !9516)
!9521 = !DILocation(line: 2456, column: 9, scope: !9503)
!9522 = !DILocation(line: 2459, column: 23, scope: !9226)
!9523 = !DILocation(line: 2459, column: 28, scope: !9226)
!9524 = !DILocation(line: 2459, column: 41, scope: !9226)
!9525 = !DILocation(line: 2459, column: 46, scope: !9226)
!9526 = !DILocation(line: 2459, column: 44, scope: !9226)
!9527 = !DILocation(line: 2459, column: 38, scope: !9226)
!9528 = !DILocation(line: 2459, column: 22, scope: !9226)
!9529 = !DILocation(line: 2459, column: 59, scope: !9277)
!9530 = !DILocation(line: 2459, column: 64, scope: !9277)
!9531 = !DILocation(line: 2459, column: 22, scope: !9277)
!9532 = !DILocation(line: 2459, column: 77, scope: !9281)
!9533 = !DILocation(line: 2459, column: 82, scope: !9281)
!9534 = !DILocation(line: 2459, column: 80, scope: !9281)
!9535 = !DILocation(line: 2459, column: 22, scope: !9281)
!9536 = !DILocation(line: 2459, column: 22, scope: !9285)
!9537 = !DILocation(line: 2459, column: 5, scope: !9285)
!9538 = !DILocation(line: 2459, column: 10, scope: !9285)
!9539 = !DILocation(line: 2459, column: 19, scope: !9285)
!9540 = !DILocation(line: 2461, column: 9, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9226, file: !1126, line: 2461, column: 9)
!9542 = !DILocation(line: 2461, column: 14, scope: !9541)
!9543 = !DILocation(line: 2461, column: 9, scope: !9226)
!9544 = !DILocation(line: 2463, column: 37, scope: !9541)
!9545 = !DILocation(line: 2463, column: 42, scope: !9541)
!9546 = !DILocation(line: 2463, column: 15, scope: !9541)
!9547 = !DILocation(line: 2463, column: 20, scope: !9541)
!9548 = !DILocation(line: 2463, column: 60, scope: !9541)
!9549 = !DILocation(line: 2463, column: 65, scope: !9541)
!9550 = !DILocation(line: 2463, column: 63, scope: !9541)
!9551 = !DILocation(line: 2463, column: 57, scope: !9541)
!9552 = !DILocation(line: 2463, column: 14, scope: !9541)
!9553 = !DILocation(line: 2463, column: 100, scope: !9554)
!9554 = !DILexicalBlockFile(scope: !9541, file: !1126, discriminator: 1)
!9555 = !DILocation(line: 2463, column: 105, scope: !9554)
!9556 = !DILocation(line: 2463, column: 78, scope: !9554)
!9557 = !DILocation(line: 2463, column: 83, scope: !9554)
!9558 = !DILocation(line: 2463, column: 14, scope: !9554)
!9559 = !DILocation(line: 2463, column: 123, scope: !9560)
!9560 = !DILexicalBlockFile(scope: !9541, file: !1126, discriminator: 2)
!9561 = !DILocation(line: 2463, column: 128, scope: !9560)
!9562 = !DILocation(line: 2463, column: 126, scope: !9560)
!9563 = !DILocation(line: 2463, column: 14, scope: !9560)
!9564 = !DILocation(line: 2463, column: 14, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9541, file: !1126, discriminator: 3)
!9566 = !DILocation(line: 2462, column: 31, scope: !9541)
!9567 = !DILocation(line: 2462, column: 36, scope: !9541)
!9568 = !DILocation(line: 2462, column: 9, scope: !9541)
!9569 = !DILocation(line: 2462, column: 14, scope: !9541)
!9570 = !DILocation(line: 2462, column: 50, scope: !9541)
!9571 = !DILocation(line: 2465, column: 5, scope: !9226)
!9572 = !DILocation(line: 2466, column: 1, scope: !9226)
!9573 = distinct !DISubprogram(name: "mkv_write_block", scope: !1126, file: !1126, line: 2119, type: !9574, isLocal: true, isDefinition: true, scopeLine: 2121, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{null, !2438, !1332, !1050, !1266, !1053}
!9576 = !DILocation(line: 66, column: 98, scope: !4248, inlinedAt: !9577)
!9577 = distinct !DILocation(line: 2142, column: 158, scope: !9578)
!9578 = !DILexicalBlockFile(scope: !9579, file: !1126, discriminator: 1)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !1126, line: 2141, column: 14)
!9580 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2138, column: 9)
!9581 = !DILocation(line: 66, column: 98, scope: !4248, inlinedAt: !9582)
!9582 = distinct !DILocation(line: 2139, column: 153, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9580, file: !1126, discriminator: 1)
!9584 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !9585)
!9585 = distinct !DILocation(line: 2136, column: 12, scope: !9573)
!9586 = !DILocalVariable(name: "s", arg: 1, scope: !9573, file: !1126, line: 2119, type: !2438)
!9587 = !DILocation(line: 2119, column: 46, scope: !9573)
!9588 = !DILocalVariable(name: "pb", arg: 2, scope: !9573, file: !1126, line: 2119, type: !1332)
!9589 = !DILocation(line: 2119, column: 62, scope: !9573)
!9590 = !DILocalVariable(name: "blockid", arg: 3, scope: !9573, file: !1126, line: 2120, type: !1050)
!9591 = !DILocation(line: 2120, column: 42, scope: !9573)
!9592 = !DILocalVariable(name: "pkt", arg: 4, scope: !9573, file: !1126, line: 2120, type: !1266)
!9593 = !DILocation(line: 2120, column: 61, scope: !9573)
!9594 = !DILocalVariable(name: "keyframe", arg: 5, scope: !9573, file: !1126, line: 2120, type: !1053)
!9595 = !DILocation(line: 2120, column: 70, scope: !9573)
!9596 = !DILocalVariable(name: "mkv", scope: !9573, file: !1126, line: 2122, type: !2459)
!9597 = !DILocation(line: 2122, column: 25, scope: !9573)
!9598 = !DILocation(line: 2122, column: 31, scope: !9573)
!9599 = !DILocation(line: 2122, column: 34, scope: !9573)
!9600 = !DILocalVariable(name: "par", scope: !9573, file: !1126, line: 2123, type: !1713)
!9601 = !DILocation(line: 2123, column: 24, scope: !9573)
!9602 = !DILocation(line: 2123, column: 41, scope: !9573)
!9603 = !DILocation(line: 2123, column: 46, scope: !9573)
!9604 = !DILocation(line: 2123, column: 30, scope: !9573)
!9605 = !DILocation(line: 2123, column: 33, scope: !9573)
!9606 = !DILocation(line: 2123, column: 61, scope: !9573)
!9607 = !DILocalVariable(name: "data", scope: !9573, file: !1126, line: 2124, type: !1110)
!9608 = !DILocation(line: 2124, column: 14, scope: !9573)
!9609 = !DILocalVariable(name: "side_data", scope: !9573, file: !1126, line: 2124, type: !1110)
!9610 = !DILocation(line: 2124, column: 27, scope: !9573)
!9611 = !DILocalVariable(name: "offset", scope: !9573, file: !1126, line: 2125, type: !1053)
!9612 = !DILocation(line: 2125, column: 9, scope: !9573)
!9613 = !DILocalVariable(name: "size", scope: !9573, file: !1126, line: 2125, type: !1053)
!9614 = !DILocation(line: 2125, column: 21, scope: !9573)
!9615 = !DILocation(line: 2125, column: 28, scope: !9573)
!9616 = !DILocation(line: 2125, column: 33, scope: !9573)
!9617 = !DILocalVariable(name: "side_data_size", scope: !9573, file: !1126, line: 2125, type: !1053)
!9618 = !DILocation(line: 2125, column: 39, scope: !9573)
!9619 = !DILocalVariable(name: "ts", scope: !9573, file: !1126, line: 2126, type: !1051)
!9620 = !DILocation(line: 2126, column: 13, scope: !9573)
!9621 = !DILocation(line: 2126, column: 30, scope: !9573)
!9622 = !DILocation(line: 2126, column: 35, scope: !9573)
!9623 = !DILocation(line: 2126, column: 18, scope: !9573)
!9624 = !DILocation(line: 2126, column: 23, scope: !9573)
!9625 = !DILocation(line: 2126, column: 49, scope: !9573)
!9626 = !DILocation(line: 2126, column: 61, scope: !9627)
!9627 = !DILexicalBlockFile(scope: !9573, file: !1126, discriminator: 1)
!9628 = !DILocation(line: 2126, column: 66, scope: !9627)
!9629 = !DILocation(line: 2126, column: 18, scope: !9627)
!9630 = !DILocation(line: 2126, column: 72, scope: !9631)
!9631 = !DILexicalBlockFile(scope: !9573, file: !1126, discriminator: 2)
!9632 = !DILocation(line: 2126, column: 77, scope: !9631)
!9633 = !DILocation(line: 2126, column: 18, scope: !9631)
!9634 = !DILocation(line: 2126, column: 18, scope: !9635)
!9635 = !DILexicalBlockFile(scope: !9573, file: !1126, discriminator: 3)
!9636 = !DILocation(line: 2126, column: 13, scope: !9635)
!9637 = !DILocalVariable(name: "additional_id", scope: !9573, file: !1126, line: 2127, type: !1039)
!9638 = !DILocation(line: 2127, column: 14, scope: !9573)
!9639 = !DILocalVariable(name: "discard_padding", scope: !9573, file: !1126, line: 2128, type: !1051)
!9640 = !DILocation(line: 2128, column: 13, scope: !9573)
!9641 = !DILocalVariable(name: "track_number", scope: !9573, file: !1126, line: 2129, type: !1042)
!9642 = !DILocation(line: 2129, column: 13, scope: !9573)
!9643 = !DILocation(line: 2129, column: 29, scope: !9573)
!9644 = !DILocation(line: 2129, column: 34, scope: !9573)
!9645 = !DILocation(line: 2129, column: 44, scope: !9627)
!9646 = !DILocation(line: 2129, column: 49, scope: !9627)
!9647 = !DILocation(line: 2129, column: 29, scope: !9627)
!9648 = !DILocation(line: 2129, column: 70, scope: !9631)
!9649 = !DILocation(line: 2129, column: 75, scope: !9631)
!9650 = !DILocation(line: 2129, column: 88, scope: !9631)
!9651 = !DILocation(line: 2129, column: 29, scope: !9631)
!9652 = !DILocation(line: 2129, column: 29, scope: !9635)
!9653 = !DILocation(line: 2129, column: 28, scope: !9635)
!9654 = !DILocation(line: 2129, column: 13, scope: !9635)
!9655 = !DILocalVariable(name: "block_group", scope: !9573, file: !1126, line: 2130, type: !2468)
!9656 = !DILocation(line: 2130, column: 17, scope: !9573)
!9657 = !DILocalVariable(name: "block_additions", scope: !9573, file: !1126, line: 2130, type: !2468)
!9658 = !DILocation(line: 2130, column: 30, scope: !9573)
!9659 = !DILocalVariable(name: "block_more", scope: !9573, file: !1126, line: 2130, type: !2468)
!9660 = !DILocation(line: 2130, column: 47, scope: !9573)
!9661 = !DILocation(line: 2132, column: 23, scope: !9573)
!9662 = !DILocation(line: 2132, column: 28, scope: !9573)
!9663 = !DILocation(line: 2132, column: 11, scope: !9573)
!9664 = !DILocation(line: 2132, column: 16, scope: !9573)
!9665 = !DILocation(line: 2132, column: 42, scope: !9573)
!9666 = !DILocation(line: 2132, column: 8, scope: !9573)
!9667 = !DILocation(line: 2134, column: 12, scope: !9573)
!9668 = !DILocation(line: 2136, column: 22, scope: !9573)
!9669 = !DILocation(line: 2136, column: 12, scope: !9573)
!9670 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !9585)
!9671 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !9585)
!9672 = !DILocation(line: 2136, column: 27, scope: !9573)
!9673 = !DILocation(line: 2136, column: 32, scope: !9573)
!9674 = !DILocation(line: 2136, column: 38, scope: !9573)
!9675 = !DILocation(line: 2136, column: 43, scope: !9573)
!9676 = !DILocation(line: 2136, column: 48, scope: !9573)
!9677 = !DILocation(line: 2136, column: 53, scope: !9573)
!9678 = !DILocation(line: 2136, column: 58, scope: !9573)
!9679 = !DILocation(line: 2136, column: 63, scope: !9573)
!9680 = !DILocation(line: 2137, column: 12, scope: !9573)
!9681 = !DILocation(line: 2137, column: 21, scope: !9573)
!9682 = !DILocation(line: 2134, column: 5, scope: !9573)
!9683 = !DILocation(line: 2138, column: 9, scope: !9580)
!9684 = !DILocation(line: 2138, column: 14, scope: !9580)
!9685 = !DILocation(line: 2138, column: 23, scope: !9580)
!9686 = !DILocation(line: 2138, column: 43, scope: !9580)
!9687 = !DILocation(line: 2138, column: 46, scope: !9583)
!9688 = !DILocation(line: 2138, column: 51, scope: !9583)
!9689 = !DILocation(line: 2138, column: 66, scope: !9583)
!9690 = !DILocation(line: 2138, column: 70, scope: !9583)
!9691 = !DILocation(line: 2139, column: 30, scope: !9580)
!9692 = !DILocation(line: 2139, column: 35, scope: !9580)
!9693 = !DILocation(line: 2139, column: 12, scope: !9580)
!9694 = !DILocation(line: 2139, column: 50, scope: !9580)
!9695 = !DILocation(line: 2139, column: 78, scope: !9580)
!9696 = !DILocation(line: 2139, column: 83, scope: !9580)
!9697 = !DILocation(line: 2139, column: 60, scope: !9580)
!9698 = !DILocation(line: 2139, column: 98, scope: !9580)
!9699 = !DILocation(line: 2139, column: 57, scope: !9580)
!9700 = !DILocation(line: 2139, column: 124, scope: !9580)
!9701 = !DILocation(line: 2139, column: 129, scope: !9580)
!9702 = !DILocation(line: 2139, column: 106, scope: !9580)
!9703 = !DILocation(line: 2139, column: 104, scope: !9580)
!9704 = !DILocation(line: 2139, column: 145, scope: !9580)
!9705 = !DILocation(line: 2139, column: 150, scope: !9580)
!9706 = !DILocation(line: 2139, column: 196, scope: !9583)
!9707 = !DILocation(line: 2139, column: 201, scope: !9583)
!9708 = !DILocation(line: 2139, column: 214, scope: !9583)
!9709 = !DILocation(line: 2139, column: 153, scope: !9583)
!9710 = !DILocation(line: 68, column: 16, scope: !4248, inlinedAt: !9582)
!9711 = !DILocation(line: 68, column: 19, scope: !4248, inlinedAt: !9582)
!9712 = !DILocation(line: 68, column: 24, scope: !4248, inlinedAt: !9582)
!9713 = !DILocation(line: 68, column: 38, scope: !4248, inlinedAt: !9582)
!9714 = !DILocation(line: 68, column: 41, scope: !4248, inlinedAt: !9582)
!9715 = !DILocation(line: 68, column: 46, scope: !4248, inlinedAt: !9582)
!9716 = !DILocation(line: 68, column: 34, scope: !4248, inlinedAt: !9582)
!9717 = !DILocation(line: 68, column: 57, scope: !4248, inlinedAt: !9582)
!9718 = !DILocation(line: 68, column: 69, scope: !4248, inlinedAt: !9582)
!9719 = !DILocation(line: 68, column: 72, scope: !4248, inlinedAt: !9582)
!9720 = !DILocation(line: 68, column: 79, scope: !4248, inlinedAt: !9582)
!9721 = !DILocation(line: 68, column: 84, scope: !4248, inlinedAt: !9582)
!9722 = !DILocation(line: 68, column: 99, scope: !4248, inlinedAt: !9582)
!9723 = !DILocation(line: 68, column: 102, scope: !4248, inlinedAt: !9582)
!9724 = !DILocation(line: 68, column: 109, scope: !4248, inlinedAt: !9582)
!9725 = !DILocation(line: 68, column: 114, scope: !4248, inlinedAt: !9582)
!9726 = !DILocation(line: 68, column: 94, scope: !4248, inlinedAt: !9582)
!9727 = !DILocation(line: 68, column: 63, scope: !4248, inlinedAt: !9582)
!9728 = !DILocation(line: 2139, column: 218, scope: !9583)
!9729 = !DILocation(line: 2138, column: 9, scope: !9631)
!9730 = !DILocation(line: 2140, column: 36, scope: !9580)
!9731 = !DILocation(line: 2140, column: 41, scope: !9580)
!9732 = !DILocation(line: 2140, column: 9, scope: !9580)
!9733 = !DILocation(line: 2141, column: 14, scope: !9579)
!9734 = !DILocation(line: 2141, column: 19, scope: !9579)
!9735 = !DILocation(line: 2141, column: 28, scope: !9579)
!9736 = !DILocation(line: 2141, column: 48, scope: !9579)
!9737 = !DILocation(line: 2141, column: 51, scope: !9578)
!9738 = !DILocation(line: 2141, column: 56, scope: !9578)
!9739 = !DILocation(line: 2141, column: 71, scope: !9578)
!9740 = !DILocation(line: 2141, column: 75, scope: !9578)
!9741 = !DILocation(line: 2142, column: 35, scope: !9579)
!9742 = !DILocation(line: 2142, column: 40, scope: !9579)
!9743 = !DILocation(line: 2142, column: 17, scope: !9579)
!9744 = !DILocation(line: 2142, column: 55, scope: !9579)
!9745 = !DILocation(line: 2142, column: 83, scope: !9579)
!9746 = !DILocation(line: 2142, column: 88, scope: !9579)
!9747 = !DILocation(line: 2142, column: 65, scope: !9579)
!9748 = !DILocation(line: 2142, column: 103, scope: !9579)
!9749 = !DILocation(line: 2142, column: 62, scope: !9579)
!9750 = !DILocation(line: 2142, column: 129, scope: !9579)
!9751 = !DILocation(line: 2142, column: 134, scope: !9579)
!9752 = !DILocation(line: 2142, column: 111, scope: !9579)
!9753 = !DILocation(line: 2142, column: 109, scope: !9579)
!9754 = !DILocation(line: 2142, column: 150, scope: !9579)
!9755 = !DILocation(line: 2142, column: 155, scope: !9579)
!9756 = !DILocation(line: 2142, column: 201, scope: !9578)
!9757 = !DILocation(line: 2142, column: 206, scope: !9578)
!9758 = !DILocation(line: 2142, column: 219, scope: !9578)
!9759 = !DILocation(line: 2142, column: 158, scope: !9578)
!9760 = !DILocation(line: 68, column: 16, scope: !4248, inlinedAt: !9577)
!9761 = !DILocation(line: 68, column: 19, scope: !4248, inlinedAt: !9577)
!9762 = !DILocation(line: 68, column: 24, scope: !4248, inlinedAt: !9577)
!9763 = !DILocation(line: 68, column: 38, scope: !4248, inlinedAt: !9577)
!9764 = !DILocation(line: 68, column: 41, scope: !4248, inlinedAt: !9577)
!9765 = !DILocation(line: 68, column: 46, scope: !4248, inlinedAt: !9577)
!9766 = !DILocation(line: 68, column: 34, scope: !4248, inlinedAt: !9577)
!9767 = !DILocation(line: 68, column: 57, scope: !4248, inlinedAt: !9577)
!9768 = !DILocation(line: 68, column: 69, scope: !4248, inlinedAt: !9577)
!9769 = !DILocation(line: 68, column: 72, scope: !4248, inlinedAt: !9577)
!9770 = !DILocation(line: 68, column: 79, scope: !4248, inlinedAt: !9577)
!9771 = !DILocation(line: 68, column: 84, scope: !4248, inlinedAt: !9577)
!9772 = !DILocation(line: 68, column: 99, scope: !4248, inlinedAt: !9577)
!9773 = !DILocation(line: 68, column: 102, scope: !4248, inlinedAt: !9577)
!9774 = !DILocation(line: 68, column: 109, scope: !4248, inlinedAt: !9577)
!9775 = !DILocation(line: 68, column: 114, scope: !4248, inlinedAt: !9577)
!9776 = !DILocation(line: 68, column: 94, scope: !4248, inlinedAt: !9577)
!9777 = !DILocation(line: 68, column: 63, scope: !4248, inlinedAt: !9577)
!9778 = !DILocation(line: 2142, column: 223, scope: !9578)
!9779 = !DILocation(line: 2141, column: 14, scope: !9780)
!9780 = !DILexicalBlockFile(scope: !9580, file: !1126, discriminator: 2)
!9781 = !DILocation(line: 2144, column: 32, scope: !9579)
!9782 = !DILocation(line: 2144, column: 37, scope: !9579)
!9783 = !DILocation(line: 2144, column: 9, scope: !9579)
!9784 = !DILocation(line: 2145, column: 14, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9579, file: !1126, line: 2145, column: 14)
!9786 = !DILocation(line: 2145, column: 19, scope: !9785)
!9787 = !DILocation(line: 2145, column: 28, scope: !9785)
!9788 = !DILocation(line: 2145, column: 14, scope: !9579)
!9789 = !DILocation(line: 2146, column: 32, scope: !9785)
!9790 = !DILocation(line: 2146, column: 37, scope: !9785)
!9791 = !DILocation(line: 2146, column: 9, scope: !9785)
!9792 = !DILocation(line: 2147, column: 14, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9785, file: !1126, line: 2147, column: 14)
!9794 = !DILocation(line: 2147, column: 19, scope: !9793)
!9795 = !DILocation(line: 2147, column: 28, scope: !9793)
!9796 = !DILocation(line: 2147, column: 14, scope: !9785)
!9797 = !DILocalVariable(name: "ret", scope: !9798, file: !1126, line: 2148, type: !1053)
!9798 = distinct !DILexicalBlock(scope: !9793, file: !1126, line: 2147, column: 52)
!9799 = !DILocation(line: 2148, column: 13, scope: !9798)
!9800 = !DILocation(line: 2148, column: 37, scope: !9798)
!9801 = !DILocation(line: 2148, column: 42, scope: !9798)
!9802 = !DILocation(line: 2148, column: 19, scope: !9798)
!9803 = !DILocation(line: 2149, column: 13, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9798, file: !1126, line: 2149, column: 13)
!9805 = !DILocation(line: 2149, column: 17, scope: !9804)
!9806 = !DILocation(line: 2149, column: 13, scope: !9798)
!9807 = !DILocation(line: 2150, column: 20, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9804, file: !1126, line: 2149, column: 22)
!9809 = !DILocation(line: 2150, column: 13, scope: !9808)
!9810 = !DILocation(line: 2151, column: 13, scope: !9808)
!9811 = !DILocation(line: 2153, column: 5, scope: !9798)
!9812 = !DILocation(line: 2154, column: 16, scope: !9793)
!9813 = !DILocation(line: 2154, column: 21, scope: !9793)
!9814 = !DILocation(line: 2154, column: 14, scope: !9793)
!9815 = !DILocation(line: 2156, column: 9, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2156, column: 9)
!9817 = !DILocation(line: 2156, column: 14, scope: !9816)
!9818 = !DILocation(line: 2156, column: 23, scope: !9816)
!9819 = !DILocation(line: 2156, column: 45, scope: !9816)
!9820 = !DILocation(line: 2156, column: 48, scope: !9821)
!9821 = !DILexicalBlockFile(scope: !9816, file: !1126, discriminator: 1)
!9822 = !DILocation(line: 2156, column: 53, scope: !9821)
!9823 = !DILocation(line: 2156, column: 9, scope: !9821)
!9824 = !DILocation(line: 2159, column: 14, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9816, file: !1126, line: 2156, column: 59)
!9826 = !DILocation(line: 2160, column: 16, scope: !9825)
!9827 = !DILocation(line: 2161, column: 5, scope: !9825)
!9828 = !DILocation(line: 2163, column: 41, scope: !9573)
!9829 = !DILocation(line: 2163, column: 17, scope: !9573)
!9830 = !DILocation(line: 2163, column: 15, scope: !9573)
!9831 = !DILocation(line: 2167, column: 9, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2167, column: 9)
!9833 = !DILocation(line: 2167, column: 19, scope: !9832)
!9834 = !DILocation(line: 2167, column: 22, scope: !9835)
!9835 = !DILexicalBlockFile(scope: !9832, file: !1126, discriminator: 1)
!9836 = !DILocation(line: 2167, column: 37, scope: !9835)
!9837 = !DILocation(line: 2167, column: 9, scope: !9835)
!9838 = !DILocation(line: 2168, column: 72, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9832, file: !1126, line: 2167, column: 44)
!9840 = !DILocation(line: 2168, column: 82, scope: !9839)
!9841 = !DILocation(line: 2168, column: 89, scope: !9839)
!9842 = !DILocation(line: 2168, column: 40, scope: !9839)
!9843 = !DILocation(line: 2169, column: 52, scope: !9839)
!9844 = !DILocation(line: 2169, column: 56, scope: !9839)
!9845 = !DILocation(line: 2169, column: 61, scope: !9839)
!9846 = !DILocation(line: 2170, column: 52, scope: !9839)
!9847 = !DILocation(line: 2168, column: 27, scope: !9839)
!9848 = !DILocation(line: 2168, column: 25, scope: !9839)
!9849 = !DILocation(line: 2171, column: 5, scope: !9839)
!9850 = !DILocation(line: 2173, column: 41, scope: !9573)
!9851 = !DILocation(line: 2173, column: 17, scope: !9573)
!9852 = !DILocation(line: 2173, column: 15, scope: !9573)
!9853 = !DILocation(line: 2176, column: 9, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2176, column: 9)
!9855 = !DILocation(line: 2176, column: 9, scope: !9573)
!9856 = !DILocation(line: 2177, column: 68, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9854, file: !1126, line: 2176, column: 20)
!9858 = !DILocation(line: 2177, column: 81, scope: !9857)
!9859 = !DILocation(line: 2177, column: 25, scope: !9857)
!9860 = !DILocation(line: 2177, column: 23, scope: !9857)
!9861 = !DILocation(line: 2178, column: 19, scope: !9857)
!9862 = !DILocation(line: 2179, column: 24, scope: !9857)
!9863 = !DILocation(line: 2180, column: 5, scope: !9857)
!9864 = !DILocation(line: 2182, column: 10, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2182, column: 9)
!9866 = !DILocation(line: 2182, column: 25, scope: !9865)
!9867 = !DILocation(line: 2182, column: 28, scope: !9868)
!9868 = !DILexicalBlockFile(scope: !9865, file: !1126, discriminator: 1)
!9869 = !DILocation(line: 2182, column: 42, scope: !9868)
!9870 = !DILocation(line: 2182, column: 48, scope: !9868)
!9871 = !DILocation(line: 2182, column: 51, scope: !9872)
!9872 = !DILexicalBlockFile(scope: !9865, file: !1126, discriminator: 2)
!9873 = !DILocation(line: 2182, column: 9, scope: !9872)
!9874 = !DILocation(line: 2183, column: 41, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9865, file: !1126, line: 2182, column: 68)
!9876 = !DILocation(line: 2183, column: 23, scope: !9875)
!9877 = !DILocation(line: 2183, column: 23, scope: !9878)
!9878 = !DILexicalBlockFile(scope: !9875, file: !1126, discriminator: 1)
!9879 = !DILocation(line: 2184, column: 17, scope: !9875)
!9880 = !DILocation(line: 2185, column: 5, scope: !9875)
!9881 = !DILocation(line: 2187, column: 17, scope: !9573)
!9882 = !DILocation(line: 2187, column: 21, scope: !9573)
!9883 = !DILocation(line: 2187, column: 5, scope: !9573)
!9884 = !DILocation(line: 2188, column: 18, scope: !9573)
!9885 = !DILocation(line: 2188, column: 22, scope: !9573)
!9886 = !DILocation(line: 2188, column: 27, scope: !9573)
!9887 = !DILocation(line: 2188, column: 5, scope: !9573)
!9888 = !DILocation(line: 2190, column: 13, scope: !9573)
!9889 = !DILocation(line: 2190, column: 24, scope: !9573)
!9890 = !DILocation(line: 2190, column: 22, scope: !9573)
!9891 = !DILocation(line: 2190, column: 5, scope: !9573)
!9892 = !DILocation(line: 2191, column: 15, scope: !9573)
!9893 = !DILocation(line: 2191, column: 19, scope: !9573)
!9894 = !DILocation(line: 2191, column: 24, scope: !9573)
!9895 = !DILocation(line: 2191, column: 29, scope: !9573)
!9896 = !DILocation(line: 2191, column: 22, scope: !9573)
!9897 = !DILocation(line: 2191, column: 5, scope: !9573)
!9898 = !DILocation(line: 2192, column: 13, scope: !9573)
!9899 = !DILocation(line: 2192, column: 18, scope: !9573)
!9900 = !DILocation(line: 2192, column: 26, scope: !9573)
!9901 = !DILocation(line: 2192, column: 34, scope: !9573)
!9902 = !DILocation(line: 2192, column: 37, scope: !9627)
!9903 = !DILocation(line: 2192, column: 34, scope: !9627)
!9904 = !DILocation(line: 2192, column: 17, scope: !9631)
!9905 = !DILocation(line: 2192, column: 5, scope: !9631)
!9906 = !DILocation(line: 2193, column: 16, scope: !9573)
!9907 = !DILocation(line: 2193, column: 20, scope: !9573)
!9908 = !DILocation(line: 2193, column: 27, scope: !9573)
!9909 = !DILocation(line: 2193, column: 25, scope: !9573)
!9910 = !DILocation(line: 2193, column: 35, scope: !9573)
!9911 = !DILocation(line: 2193, column: 5, scope: !9573)
!9912 = !DILocation(line: 2194, column: 9, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2194, column: 9)
!9914 = !DILocation(line: 2194, column: 17, scope: !9913)
!9915 = !DILocation(line: 2194, column: 22, scope: !9913)
!9916 = !DILocation(line: 2194, column: 14, scope: !9913)
!9917 = !DILocation(line: 2194, column: 9, scope: !9573)
!9918 = !DILocation(line: 2195, column: 17, scope: !9913)
!9919 = !DILocation(line: 2195, column: 9, scope: !9913)
!9920 = !DILocation(line: 2197, column: 9, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2197, column: 9)
!9922 = !DILocation(line: 2197, column: 17, scope: !9921)
!9923 = !DILocation(line: 2197, column: 25, scope: !9921)
!9924 = !DILocation(line: 2197, column: 29, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !9921, file: !1126, discriminator: 1)
!9926 = !DILocation(line: 2197, column: 9, scope: !9925)
!9927 = !DILocation(line: 2198, column: 23, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9921, file: !1126, line: 2197, column: 39)
!9929 = !DILocation(line: 2199, column: 49, scope: !9928)
!9930 = !DILocation(line: 2199, column: 62, scope: !9928)
!9931 = !DILocation(line: 2199, column: 23, scope: !9928)
!9932 = !DILocation(line: 2199, column: 28, scope: !9928)
!9933 = !DILocation(line: 2198, column: 9, scope: !9928)
!9934 = !DILocation(line: 2200, column: 5, scope: !9928)
!9935 = !DILocation(line: 2201, column: 51, scope: !9573)
!9936 = !DILocation(line: 2201, column: 56, scope: !9573)
!9937 = !DILocation(line: 2201, column: 61, scope: !9573)
!9938 = !DILocation(line: 2201, column: 54, scope: !9573)
!9939 = !DILocation(line: 2201, column: 31, scope: !9573)
!9940 = !DILocation(line: 2201, column: 44, scope: !9573)
!9941 = !DILocation(line: 2201, column: 5, scope: !9573)
!9942 = !DILocation(line: 2201, column: 10, scope: !9573)
!9943 = !DILocation(line: 2201, column: 49, scope: !9573)
!9944 = !DILocation(line: 2203, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2203, column: 9)
!9946 = !DILocation(line: 2203, column: 9, scope: !9573)
!9947 = !DILocation(line: 2204, column: 23, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9945, file: !1126, line: 2203, column: 26)
!9949 = !DILocation(line: 2204, column: 35, scope: !9948)
!9950 = !DILocation(line: 2204, column: 9, scope: !9948)
!9951 = !DILocation(line: 2205, column: 5, scope: !9948)
!9952 = !DILocation(line: 2207, column: 9, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2207, column: 9)
!9954 = !DILocation(line: 2207, column: 24, scope: !9953)
!9955 = !DILocation(line: 2207, column: 27, scope: !9956)
!9956 = !DILexicalBlockFile(scope: !9953, file: !1126, discriminator: 1)
!9957 = !DILocation(line: 2207, column: 41, scope: !9956)
!9958 = !DILocation(line: 2207, column: 9, scope: !9956)
!9959 = !DILocation(line: 2208, column: 45, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9953, file: !1126, line: 2207, column: 47)
!9961 = !DILocation(line: 2208, column: 27, scope: !9960)
!9962 = !DILocation(line: 2208, column: 27, scope: !9963)
!9963 = !DILexicalBlockFile(scope: !9960, file: !1126, discriminator: 1)
!9964 = !DILocation(line: 2209, column: 40, scope: !9960)
!9965 = !DILocation(line: 2209, column: 22, scope: !9960)
!9966 = !DILocation(line: 2209, column: 22, scope: !9963)
!9967 = !DILocation(line: 2210, column: 23, scope: !9960)
!9968 = !DILocation(line: 2210, column: 9, scope: !9960)
!9969 = !DILocation(line: 2211, column: 21, scope: !9960)
!9970 = !DILocation(line: 2211, column: 9, scope: !9960)
!9971 = !DILocation(line: 2212, column: 22, scope: !9960)
!9972 = !DILocation(line: 2212, column: 26, scope: !9960)
!9973 = !DILocation(line: 2212, column: 9, scope: !9960)
!9974 = !DILocation(line: 2213, column: 20, scope: !9960)
!9975 = !DILocation(line: 2213, column: 24, scope: !9960)
!9976 = !DILocation(line: 2213, column: 35, scope: !9960)
!9977 = !DILocation(line: 2213, column: 9, scope: !9960)
!9978 = !DILocation(line: 2214, column: 25, scope: !9960)
!9979 = !DILocation(line: 2214, column: 9, scope: !9960)
!9980 = !DILocation(line: 2215, column: 25, scope: !9960)
!9981 = !DILocation(line: 2215, column: 9, scope: !9960)
!9982 = !DILocation(line: 2216, column: 5, scope: !9960)
!9983 = !DILocation(line: 2217, column: 10, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9573, file: !1126, line: 2217, column: 9)
!9985 = !DILocation(line: 2217, column: 25, scope: !9984)
!9986 = !DILocation(line: 2217, column: 28, scope: !9987)
!9987 = !DILexicalBlockFile(scope: !9984, file: !1126, discriminator: 1)
!9988 = !DILocation(line: 2217, column: 42, scope: !9987)
!9989 = !DILocation(line: 2217, column: 48, scope: !9987)
!9990 = !DILocation(line: 2217, column: 51, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !9984, file: !1126, discriminator: 2)
!9992 = !DILocation(line: 2217, column: 9, scope: !9991)
!9993 = !DILocation(line: 2218, column: 25, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !1126, line: 2217, column: 68)
!9995 = !DILocation(line: 2218, column: 9, scope: !9994)
!9996 = !DILocation(line: 2219, column: 5, scope: !9994)
!9997 = !DILocation(line: 2220, column: 1, scope: !9573)
!9998 = distinct !DISubprogram(name: "mkv_add_cuepoint", scope: !1126, file: !1126, line: 554, type: !9999, isLocal: true, isDefinition: true, scopeLine: 556, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!1053, !2502, !1053, !1053, !1051, !1051, !1051, !1051}
!10001 = !DILocalVariable(name: "cues", arg: 1, scope: !9998, file: !1126, line: 554, type: !2502)
!10002 = !DILocation(line: 554, column: 39, scope: !9998)
!10003 = !DILocalVariable(name: "stream", arg: 2, scope: !9998, file: !1126, line: 554, type: !1053)
!10004 = !DILocation(line: 554, column: 49, scope: !9998)
!10005 = !DILocalVariable(name: "tracknum", arg: 3, scope: !9998, file: !1126, line: 554, type: !1053)
!10006 = !DILocation(line: 554, column: 61, scope: !9998)
!10007 = !DILocalVariable(name: "ts", arg: 4, scope: !9998, file: !1126, line: 554, type: !1051)
!10008 = !DILocation(line: 554, column: 79, scope: !9998)
!10009 = !DILocalVariable(name: "cluster_pos", arg: 5, scope: !9998, file: !1126, line: 555, type: !1051)
!10010 = !DILocation(line: 555, column: 37, scope: !9998)
!10011 = !DILocalVariable(name: "relative_pos", arg: 6, scope: !9998, file: !1126, line: 555, type: !1051)
!10012 = !DILocation(line: 555, column: 58, scope: !9998)
!10013 = !DILocalVariable(name: "duration", arg: 7, scope: !9998, file: !1126, line: 555, type: !1051)
!10014 = !DILocation(line: 555, column: 80, scope: !9998)
!10015 = !DILocalVariable(name: "entries", scope: !9998, file: !1126, line: 557, type: !2508)
!10016 = !DILocation(line: 557, column: 19, scope: !9998)
!10017 = !DILocation(line: 557, column: 29, scope: !9998)
!10018 = !DILocation(line: 557, column: 35, scope: !9998)
!10019 = !DILocation(line: 559, column: 9, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9998, file: !1126, line: 559, column: 9)
!10021 = !DILocation(line: 559, column: 12, scope: !10020)
!10022 = !DILocation(line: 559, column: 9, scope: !9998)
!10023 = !DILocation(line: 560, column: 9, scope: !10020)
!10024 = !DILocation(line: 562, column: 32, scope: !9998)
!10025 = !DILocation(line: 562, column: 41, scope: !9998)
!10026 = !DILocation(line: 562, column: 47, scope: !9998)
!10027 = !DILocation(line: 562, column: 59, scope: !9998)
!10028 = !DILocation(line: 562, column: 15, scope: !9998)
!10029 = !DILocation(line: 562, column: 13, scope: !9998)
!10030 = !DILocation(line: 563, column: 10, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !9998, file: !1126, line: 563, column: 9)
!10032 = !DILocation(line: 563, column: 9, scope: !9998)
!10033 = !DILocation(line: 564, column: 9, scope: !10031)
!10034 = !DILocation(line: 565, column: 21, scope: !9998)
!10035 = !DILocation(line: 565, column: 5, scope: !9998)
!10036 = !DILocation(line: 565, column: 11, scope: !9998)
!10037 = !DILocation(line: 565, column: 19, scope: !9998)
!10038 = !DILocation(line: 567, column: 44, scope: !9998)
!10039 = !DILocation(line: 567, column: 19, scope: !9998)
!10040 = !DILocation(line: 567, column: 25, scope: !9998)
!10041 = !DILocation(line: 567, column: 5, scope: !9998)
!10042 = !DILocation(line: 567, column: 11, scope: !9998)
!10043 = !DILocation(line: 567, column: 38, scope: !9998)
!10044 = !DILocation(line: 567, column: 42, scope: !9998)
!10045 = !DILocation(line: 568, column: 51, scope: !9998)
!10046 = !DILocation(line: 568, column: 19, scope: !9998)
!10047 = !DILocation(line: 568, column: 25, scope: !9998)
!10048 = !DILocation(line: 568, column: 5, scope: !9998)
!10049 = !DILocation(line: 568, column: 11, scope: !9998)
!10050 = !DILocation(line: 568, column: 38, scope: !9998)
!10051 = !DILocation(line: 568, column: 49, scope: !9998)
!10052 = !DILocation(line: 569, column: 49, scope: !9998)
!10053 = !DILocation(line: 569, column: 19, scope: !9998)
!10054 = !DILocation(line: 569, column: 25, scope: !9998)
!10055 = !DILocation(line: 569, column: 5, scope: !9998)
!10056 = !DILocation(line: 569, column: 11, scope: !9998)
!10057 = !DILocation(line: 569, column: 38, scope: !9998)
!10058 = !DILocation(line: 569, column: 47, scope: !9998)
!10059 = !DILocation(line: 570, column: 52, scope: !9998)
!10060 = !DILocation(line: 570, column: 66, scope: !9998)
!10061 = !DILocation(line: 570, column: 72, scope: !9998)
!10062 = !DILocation(line: 570, column: 64, scope: !9998)
!10063 = !DILocation(line: 570, column: 19, scope: !9998)
!10064 = !DILocation(line: 570, column: 25, scope: !9998)
!10065 = !DILocation(line: 570, column: 5, scope: !9998)
!10066 = !DILocation(line: 570, column: 11, scope: !9998)
!10067 = !DILocation(line: 570, column: 38, scope: !9998)
!10068 = !DILocation(line: 570, column: 50, scope: !9998)
!10069 = !DILocation(line: 571, column: 53, scope: !9998)
!10070 = !DILocation(line: 571, column: 19, scope: !9998)
!10071 = !DILocation(line: 571, column: 25, scope: !9998)
!10072 = !DILocation(line: 571, column: 5, scope: !9998)
!10073 = !DILocation(line: 571, column: 11, scope: !9998)
!10074 = !DILocation(line: 571, column: 38, scope: !9998)
!10075 = !DILocation(line: 571, column: 51, scope: !9998)
!10076 = !DILocation(line: 572, column: 51, scope: !9998)
!10077 = !DILocation(line: 572, column: 19, scope: !9998)
!10078 = !DILocation(line: 572, column: 25, scope: !9998)
!10079 = !DILocation(line: 572, column: 36, scope: !9998)
!10080 = !DILocation(line: 572, column: 5, scope: !9998)
!10081 = !DILocation(line: 572, column: 11, scope: !9998)
!10082 = !DILocation(line: 572, column: 40, scope: !9998)
!10083 = !DILocation(line: 572, column: 49, scope: !9998)
!10084 = !DILocation(line: 574, column: 5, scope: !9998)
!10085 = !DILocation(line: 575, column: 1, scope: !9998)
!10086 = distinct !DISubprogram(name: "mkv_write_vtt_blocks", scope: !1126, file: !1126, line: 2222, type: !10087, isLocal: true, isDefinition: true, scopeLine: 2223, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!1053, !2438, !1332, !1266}
!10089 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !10090)
!10090 = distinct !DILocation(line: 2243, column: 12, scope: !10086)
!10091 = !DILocalVariable(name: "s", arg: 1, scope: !10086, file: !1126, line: 2222, type: !2438)
!10092 = !DILocation(line: 2222, column: 50, scope: !10086)
!10093 = !DILocalVariable(name: "pb", arg: 2, scope: !10086, file: !1126, line: 2222, type: !1332)
!10094 = !DILocation(line: 2222, column: 66, scope: !10086)
!10095 = !DILocalVariable(name: "pkt", arg: 3, scope: !10086, file: !1126, line: 2222, type: !1266)
!10096 = !DILocation(line: 2222, column: 80, scope: !10086)
!10097 = !DILocalVariable(name: "mkv", scope: !10086, file: !1126, line: 2224, type: !2459)
!10098 = !DILocation(line: 2224, column: 25, scope: !10086)
!10099 = !DILocation(line: 2224, column: 31, scope: !10086)
!10100 = !DILocation(line: 2224, column: 34, scope: !10086)
!10101 = !DILocalVariable(name: "blockgroup", scope: !10086, file: !1126, line: 2225, type: !2468)
!10102 = !DILocation(line: 2225, column: 17, scope: !10086)
!10103 = !DILocalVariable(name: "id_size", scope: !10086, file: !1126, line: 2226, type: !1053)
!10104 = !DILocation(line: 2226, column: 9, scope: !10086)
!10105 = !DILocalVariable(name: "settings_size", scope: !10086, file: !1126, line: 2226, type: !1053)
!10106 = !DILocation(line: 2226, column: 18, scope: !10086)
!10107 = !DILocalVariable(name: "size", scope: !10086, file: !1126, line: 2226, type: !1053)
!10108 = !DILocation(line: 2226, column: 33, scope: !10086)
!10109 = !DILocalVariable(name: "id", scope: !10086, file: !1126, line: 2227, type: !1110)
!10110 = !DILocation(line: 2227, column: 14, scope: !10086)
!10111 = !DILocalVariable(name: "settings", scope: !10086, file: !1126, line: 2227, type: !1110)
!10112 = !DILocation(line: 2227, column: 19, scope: !10086)
!10113 = !DILocalVariable(name: "ts", scope: !10086, file: !1126, line: 2228, type: !1051)
!10114 = !DILocation(line: 2228, column: 13, scope: !10086)
!10115 = !DILocation(line: 2228, column: 30, scope: !10086)
!10116 = !DILocation(line: 2228, column: 35, scope: !10086)
!10117 = !DILocation(line: 2228, column: 18, scope: !10086)
!10118 = !DILocation(line: 2228, column: 23, scope: !10086)
!10119 = !DILocation(line: 2228, column: 49, scope: !10086)
!10120 = !DILocation(line: 2228, column: 61, scope: !10121)
!10121 = !DILexicalBlockFile(scope: !10086, file: !1126, discriminator: 1)
!10122 = !DILocation(line: 2228, column: 66, scope: !10121)
!10123 = !DILocation(line: 2228, column: 18, scope: !10121)
!10124 = !DILocation(line: 2228, column: 72, scope: !10125)
!10125 = !DILexicalBlockFile(scope: !10086, file: !1126, discriminator: 2)
!10126 = !DILocation(line: 2228, column: 77, scope: !10125)
!10127 = !DILocation(line: 2228, column: 18, scope: !10125)
!10128 = !DILocation(line: 2228, column: 18, scope: !10129)
!10129 = !DILexicalBlockFile(scope: !10086, file: !1126, discriminator: 3)
!10130 = !DILocation(line: 2228, column: 13, scope: !10129)
!10131 = !DILocalVariable(name: "flags", scope: !10086, file: !1126, line: 2229, type: !1430)
!10132 = !DILocation(line: 2229, column: 15, scope: !10086)
!10133 = !DILocation(line: 2231, column: 13, scope: !10086)
!10134 = !DILocation(line: 2232, column: 34, scope: !10086)
!10135 = !DILocation(line: 2232, column: 10, scope: !10086)
!10136 = !DILocation(line: 2232, column: 8, scope: !10086)
!10137 = !DILocation(line: 2235, column: 19, scope: !10086)
!10138 = !DILocation(line: 2236, column: 40, scope: !10086)
!10139 = !DILocation(line: 2236, column: 16, scope: !10086)
!10140 = !DILocation(line: 2236, column: 14, scope: !10086)
!10141 = !DILocation(line: 2239, column: 12, scope: !10086)
!10142 = !DILocation(line: 2239, column: 20, scope: !10086)
!10143 = !DILocation(line: 2239, column: 26, scope: !10086)
!10144 = !DILocation(line: 2239, column: 24, scope: !10086)
!10145 = !DILocation(line: 2239, column: 40, scope: !10086)
!10146 = !DILocation(line: 2239, column: 46, scope: !10086)
!10147 = !DILocation(line: 2239, column: 51, scope: !10086)
!10148 = !DILocation(line: 2239, column: 44, scope: !10086)
!10149 = !DILocation(line: 2239, column: 10, scope: !10086)
!10150 = !DILocation(line: 2241, column: 12, scope: !10086)
!10151 = !DILocation(line: 2243, column: 22, scope: !10086)
!10152 = !DILocation(line: 2243, column: 12, scope: !10086)
!10153 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !10090)
!10154 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !10090)
!10155 = !DILocation(line: 2243, column: 27, scope: !10086)
!10156 = !DILocation(line: 2243, column: 33, scope: !10086)
!10157 = !DILocation(line: 2243, column: 38, scope: !10086)
!10158 = !DILocation(line: 2243, column: 43, scope: !10086)
!10159 = !DILocation(line: 2243, column: 48, scope: !10086)
!10160 = !DILocation(line: 2243, column: 53, scope: !10086)
!10161 = !DILocation(line: 2243, column: 58, scope: !10086)
!10162 = !DILocation(line: 2241, column: 5, scope: !10086)
!10163 = !DILocation(line: 2245, column: 36, scope: !10086)
!10164 = !DILocation(line: 2245, column: 66, scope: !10086)
!10165 = !DILocation(line: 2245, column: 46, scope: !10086)
!10166 = !DILocation(line: 2245, column: 18, scope: !10121)
!10167 = !DILocation(line: 2245, column: 18, scope: !10086)
!10168 = !DILocation(line: 2245, column: 18, scope: !10125)
!10169 = !DILocation(line: 2247, column: 17, scope: !10086)
!10170 = !DILocation(line: 2247, column: 5, scope: !10086)
!10171 = !DILocation(line: 2248, column: 18, scope: !10086)
!10172 = !DILocation(line: 2248, column: 22, scope: !10086)
!10173 = !DILocation(line: 2248, column: 27, scope: !10086)
!10174 = !DILocation(line: 2248, column: 5, scope: !10086)
!10175 = !DILocation(line: 2249, column: 13, scope: !10086)
!10176 = !DILocation(line: 2249, column: 25, scope: !10086)
!10177 = !DILocation(line: 2249, column: 30, scope: !10086)
!10178 = !DILocation(line: 2249, column: 43, scope: !10086)
!10179 = !DILocation(line: 2249, column: 22, scope: !10086)
!10180 = !DILocation(line: 2249, column: 5, scope: !10086)
!10181 = !DILocation(line: 2250, column: 15, scope: !10086)
!10182 = !DILocation(line: 2250, column: 19, scope: !10086)
!10183 = !DILocation(line: 2250, column: 24, scope: !10086)
!10184 = !DILocation(line: 2250, column: 29, scope: !10086)
!10185 = !DILocation(line: 2250, column: 22, scope: !10086)
!10186 = !DILocation(line: 2250, column: 5, scope: !10086)
!10187 = !DILocation(line: 2251, column: 13, scope: !10086)
!10188 = !DILocation(line: 2251, column: 5, scope: !10086)
!10189 = !DILocation(line: 2252, column: 17, scope: !10086)
!10190 = !DILocation(line: 2252, column: 41, scope: !10086)
!10191 = !DILocation(line: 2252, column: 50, scope: !10086)
!10192 = !DILocation(line: 2252, column: 54, scope: !10086)
!10193 = !DILocation(line: 2252, column: 69, scope: !10086)
!10194 = !DILocation(line: 2252, column: 79, scope: !10086)
!10195 = !DILocation(line: 2252, column: 84, scope: !10086)
!10196 = !DILocation(line: 2252, column: 90, scope: !10086)
!10197 = !DILocation(line: 2252, column: 95, scope: !10086)
!10198 = !DILocation(line: 2252, column: 5, scope: !10086)
!10199 = !DILocation(line: 2254, column: 19, scope: !10086)
!10200 = !DILocation(line: 2254, column: 29, scope: !10086)
!10201 = !DILocation(line: 2254, column: 34, scope: !10086)
!10202 = !DILocation(line: 2254, column: 5, scope: !10086)
!10203 = !DILocation(line: 2255, column: 21, scope: !10086)
!10204 = !DILocation(line: 2255, column: 5, scope: !10086)
!10205 = !DILocation(line: 2257, column: 12, scope: !10086)
!10206 = !DILocation(line: 2257, column: 17, scope: !10086)
!10207 = !DILocation(line: 2257, column: 5, scope: !10086)
!10208 = distinct !DISubprogram(name: "mkv_blockgroup_size", scope: !1126, file: !1126, line: 2055, type: !10209, isLocal: true, isDefinition: true, scopeLine: 2056, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{!1053, !1053}
!10211 = !DILocalVariable(name: "pkt_size", arg: 1, scope: !10208, file: !1126, line: 2055, type: !1053)
!10212 = !DILocation(line: 2055, column: 36, scope: !10208)
!10213 = !DILocalVariable(name: "size", scope: !10208, file: !1126, line: 2057, type: !1053)
!10214 = !DILocation(line: 2057, column: 9, scope: !10208)
!10215 = !DILocation(line: 2057, column: 16, scope: !10208)
!10216 = !DILocation(line: 2057, column: 25, scope: !10208)
!10217 = !DILocation(line: 2058, column: 27, scope: !10208)
!10218 = !DILocation(line: 2058, column: 13, scope: !10208)
!10219 = !DILocation(line: 2058, column: 10, scope: !10208)
!10220 = !DILocation(line: 2059, column: 10, scope: !10208)
!10221 = !DILocation(line: 2060, column: 10, scope: !10208)
!10222 = !DILocation(line: 2061, column: 27, scope: !10208)
!10223 = !DILocation(line: 2061, column: 13, scope: !10208)
!10224 = !DILocation(line: 2061, column: 10, scope: !10208)
!10225 = !DILocation(line: 2062, column: 10, scope: !10208)
!10226 = !DILocation(line: 2063, column: 12, scope: !10208)
!10227 = !DILocation(line: 2063, column: 5, scope: !10208)
!10228 = distinct !DISubprogram(name: "mkv_strip_wavpack", scope: !1126, file: !1126, line: 2066, type: !10229, isLocal: true, isDefinition: true, scopeLine: 2067, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!1053, !1113, !1532, !1606}
!10231 = !DILocalVariable(name: "src", arg: 1, scope: !10228, file: !1126, line: 2066, type: !1113)
!10232 = !DILocation(line: 2066, column: 45, scope: !10228)
!10233 = !DILocalVariable(name: "pdst", arg: 2, scope: !10228, file: !1126, line: 2066, type: !1532)
!10234 = !DILocation(line: 2066, column: 60, scope: !10228)
!10235 = !DILocalVariable(name: "size", arg: 3, scope: !10228, file: !1126, line: 2066, type: !1606)
!10236 = !DILocation(line: 2066, column: 71, scope: !10228)
!10237 = !DILocalVariable(name: "dst", scope: !10228, file: !1126, line: 2068, type: !1110)
!10238 = !DILocation(line: 2068, column: 14, scope: !10228)
!10239 = !DILocalVariable(name: "srclen", scope: !10228, file: !1126, line: 2069, type: !1053)
!10240 = !DILocation(line: 2069, column: 9, scope: !10228)
!10241 = !DILocation(line: 2069, column: 19, scope: !10228)
!10242 = !DILocation(line: 2069, column: 18, scope: !10228)
!10243 = !DILocalVariable(name: "offset", scope: !10228, file: !1126, line: 2070, type: !1053)
!10244 = !DILocation(line: 2070, column: 9, scope: !10228)
!10245 = !DILocalVariable(name: "ret", scope: !10228, file: !1126, line: 2071, type: !1053)
!10246 = !DILocation(line: 2071, column: 9, scope: !10228)
!10247 = !DILocation(line: 2073, column: 21, scope: !10228)
!10248 = !DILocation(line: 2073, column: 11, scope: !10228)
!10249 = !DILocation(line: 2073, column: 9, scope: !10228)
!10250 = !DILocation(line: 2074, column: 10, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10228, file: !1126, line: 2074, column: 9)
!10252 = !DILocation(line: 2074, column: 9, scope: !10228)
!10253 = !DILocation(line: 2075, column: 9, scope: !10251)
!10254 = !DILocation(line: 2077, column: 5, scope: !10228)
!10255 = !DILocation(line: 2077, column: 12, scope: !10256)
!10256 = !DILexicalBlockFile(scope: !10228, file: !1126, discriminator: 1)
!10257 = !DILocation(line: 2077, column: 19, scope: !10256)
!10258 = !DILocation(line: 2077, column: 5, scope: !10256)
!10259 = !DILocalVariable(name: "header", scope: !10260, file: !1126, line: 2078, type: !10261)
!10260 = distinct !DILexicalBlock(scope: !10228, file: !1126, line: 2077, column: 26)
!10261 = !DIDerivedType(tag: DW_TAG_typedef, name: "WvHeader", file: !10262, line: 44, baseType: !10263)
!10262 = !DIFile(filename: "libavformat/wv.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!10263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WvHeader", file: !10262, line: 34, size: 288, align: 32, elements: !10264)
!10264 = !{!10265, !10266, !10267, !10268, !10269, !10270, !10271, !10272, !10273}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !10263, file: !10262, line: 35, baseType: !1049, size: 32, align: 32)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10263, file: !10262, line: 36, baseType: !1122, size: 16, align: 16, offset: 32)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "total_samples", scope: !10263, file: !10262, line: 37, baseType: !1049, size: 32, align: 32, offset: 64)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "block_idx", scope: !10263, file: !10262, line: 38, baseType: !1049, size: 32, align: 32, offset: 96)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !10263, file: !10262, line: 39, baseType: !1049, size: 32, align: 32, offset: 128)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10263, file: !10262, line: 40, baseType: !1049, size: 32, align: 32, offset: 160)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !10263, file: !10262, line: 41, baseType: !1049, size: 32, align: 32, offset: 192)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !10263, file: !10262, line: 43, baseType: !1053, size: 32, align: 32, offset: 224)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !10263, file: !10262, line: 43, baseType: !1053, size: 32, align: 32, offset: 256)
!10274 = !DILocation(line: 2078, column: 18, scope: !10260)
!10275 = !DILocation(line: 2080, column: 43, scope: !10260)
!10276 = !DILocation(line: 2080, column: 15, scope: !10260)
!10277 = !DILocation(line: 2080, column: 13, scope: !10260)
!10278 = !DILocation(line: 2081, column: 13, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10260, file: !1126, line: 2081, column: 13)
!10280 = !DILocation(line: 2081, column: 17, scope: !10279)
!10281 = !DILocation(line: 2081, column: 13, scope: !10260)
!10282 = !DILocation(line: 2082, column: 13, scope: !10279)
!10283 = !DILocation(line: 2083, column: 13, scope: !10260)
!10284 = !DILocation(line: 2084, column: 16, scope: !10260)
!10285 = !DILocation(line: 2086, column: 13, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10260, file: !1126, line: 2086, column: 13)
!10287 = !DILocation(line: 2086, column: 29, scope: !10286)
!10288 = !DILocation(line: 2086, column: 20, scope: !10286)
!10289 = !DILocation(line: 2086, column: 13, scope: !10260)
!10290 = !DILocation(line: 2087, column: 17, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10286, file: !1126, line: 2086, column: 40)
!10292 = !DILocation(line: 2088, column: 13, scope: !10291)
!10293 = !DILocation(line: 2091, column: 20, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10260, file: !1126, line: 2091, column: 13)
!10295 = !DILocation(line: 2091, column: 13, scope: !10294)
!10296 = !DILocation(line: 2091, column: 13, scope: !10260)
!10297 = !DILocation(line: 2092, column: 69, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10294, file: !1126, line: 2091, column: 29)
!10299 = !DILocation(line: 2092, column: 40, scope: !10298)
!10300 = !DILocation(line: 2092, column: 46, scope: !10298)
!10301 = !DILocation(line: 2092, column: 44, scope: !10298)
!10302 = !DILocation(line: 2092, column: 56, scope: !10298)
!10303 = !DILocation(line: 2092, column: 59, scope: !10298)
!10304 = !DILocation(line: 2093, column: 20, scope: !10298)
!10305 = !DILocation(line: 2094, column: 9, scope: !10298)
!10306 = !DILocation(line: 2095, column: 65, scope: !10260)
!10307 = !DILocation(line: 2095, column: 36, scope: !10260)
!10308 = !DILocation(line: 2095, column: 42, scope: !10260)
!10309 = !DILocation(line: 2095, column: 40, scope: !10260)
!10310 = !DILocation(line: 2095, column: 52, scope: !10260)
!10311 = !DILocation(line: 2095, column: 55, scope: !10260)
!10312 = !DILocation(line: 2096, column: 69, scope: !10260)
!10313 = !DILocation(line: 2096, column: 36, scope: !10260)
!10314 = !DILocation(line: 2096, column: 42, scope: !10260)
!10315 = !DILocation(line: 2096, column: 40, scope: !10260)
!10316 = !DILocation(line: 2096, column: 49, scope: !10260)
!10317 = !DILocation(line: 2096, column: 56, scope: !10260)
!10318 = !DILocation(line: 2096, column: 59, scope: !10260)
!10319 = !DILocation(line: 2097, column: 16, scope: !10260)
!10320 = !DILocation(line: 2099, column: 22, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10260, file: !1126, line: 2099, column: 13)
!10322 = !DILocation(line: 2099, column: 15, scope: !10321)
!10323 = !DILocation(line: 2099, column: 30, scope: !10321)
!10324 = !DILocation(line: 2099, column: 40, scope: !10325)
!10325 = !DILexicalBlockFile(scope: !10321, file: !1126, discriminator: 1)
!10326 = !DILocation(line: 2099, column: 33, scope: !10325)
!10327 = !DILocation(line: 2099, column: 13, scope: !10325)
!10328 = !DILocation(line: 2100, column: 69, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10321, file: !1126, line: 2099, column: 48)
!10330 = !DILocation(line: 2100, column: 40, scope: !10329)
!10331 = !DILocation(line: 2100, column: 46, scope: !10329)
!10332 = !DILocation(line: 2100, column: 44, scope: !10329)
!10333 = !DILocation(line: 2100, column: 56, scope: !10329)
!10334 = !DILocation(line: 2100, column: 59, scope: !10329)
!10335 = !DILocation(line: 2101, column: 20, scope: !10329)
!10336 = !DILocation(line: 2102, column: 9, scope: !10329)
!10337 = !DILocation(line: 2104, column: 16, scope: !10260)
!10338 = !DILocation(line: 2104, column: 22, scope: !10260)
!10339 = !DILocation(line: 2104, column: 20, scope: !10260)
!10340 = !DILocation(line: 2104, column: 30, scope: !10260)
!10341 = !DILocation(line: 2104, column: 42, scope: !10260)
!10342 = !DILocation(line: 2104, column: 35, scope: !10260)
!10343 = !DILocation(line: 2104, column: 9, scope: !10260)
!10344 = !DILocation(line: 2105, column: 23, scope: !10260)
!10345 = !DILocation(line: 2105, column: 13, scope: !10260)
!10346 = !DILocation(line: 2106, column: 26, scope: !10260)
!10347 = !DILocation(line: 2106, column: 16, scope: !10260)
!10348 = !DILocation(line: 2107, column: 26, scope: !10260)
!10349 = !DILocation(line: 2107, column: 16, scope: !10260)
!10350 = !DILocation(line: 2077, column: 5, scope: !10351)
!10351 = !DILexicalBlockFile(scope: !10228, file: !1126, discriminator: 2)
!10352 = distinct !{!10352, !10254}
!10353 = !DILocation(line: 2110, column: 13, scope: !10228)
!10354 = !DILocation(line: 2110, column: 6, scope: !10228)
!10355 = !DILocation(line: 2110, column: 11, scope: !10228)
!10356 = !DILocation(line: 2111, column: 13, scope: !10228)
!10357 = !DILocation(line: 2111, column: 6, scope: !10228)
!10358 = !DILocation(line: 2111, column: 11, scope: !10228)
!10359 = !DILocation(line: 2113, column: 5, scope: !10228)
!10360 = !DILocation(line: 2115, column: 14, scope: !10228)
!10361 = !DILocation(line: 2115, column: 5, scope: !10228)
!10362 = !DILocation(line: 2116, column: 12, scope: !10228)
!10363 = !DILocation(line: 2116, column: 5, scope: !10228)
!10364 = !DILocation(line: 2117, column: 1, scope: !10228)
!10365 = distinct !DISubprogram(name: "put_ebml_sint", scope: !1126, file: !1126, line: 255, type: !10366, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!10366 = !DISubroutineType(types: !10367)
!10367 = !{null, !1332, !1050, !1051}
!10368 = !DILocalVariable(name: "pb", arg: 1, scope: !10365, file: !1126, line: 255, type: !1332)
!10369 = !DILocation(line: 255, column: 40, scope: !10365)
!10370 = !DILocalVariable(name: "elementid", arg: 2, scope: !10365, file: !1126, line: 255, type: !1050)
!10371 = !DILocation(line: 255, column: 57, scope: !10365)
!10372 = !DILocalVariable(name: "val", arg: 3, scope: !10365, file: !1126, line: 255, type: !1051)
!10373 = !DILocation(line: 255, column: 76, scope: !10365)
!10374 = !DILocalVariable(name: "i", scope: !10365, file: !1126, line: 257, type: !1053)
!10375 = !DILocation(line: 257, column: 9, scope: !10365)
!10376 = !DILocalVariable(name: "bytes", scope: !10365, file: !1126, line: 257, type: !1053)
!10377 = !DILocation(line: 257, column: 12, scope: !10365)
!10378 = !DILocalVariable(name: "tmp", scope: !10365, file: !1126, line: 258, type: !1039)
!10379 = !DILocation(line: 258, column: 14, scope: !10365)
!10380 = !DILocation(line: 258, column: 23, scope: !10365)
!10381 = !DILocation(line: 258, column: 27, scope: !10365)
!10382 = !DILocation(line: 258, column: 33, scope: !10383)
!10383 = !DILexicalBlockFile(scope: !10365, file: !1126, discriminator: 1)
!10384 = !DILocation(line: 258, column: 36, scope: !10383)
!10385 = !DILocation(line: 258, column: 23, scope: !10383)
!10386 = !DILocation(line: 258, column: 42, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !10365, file: !1126, discriminator: 2)
!10388 = !DILocation(line: 258, column: 23, scope: !10387)
!10389 = !DILocation(line: 258, column: 23, scope: !10390)
!10390 = !DILexicalBlockFile(scope: !10365, file: !1126, discriminator: 3)
!10391 = !DILocation(line: 258, column: 21, scope: !10390)
!10392 = !DILocation(line: 258, column: 14, scope: !10390)
!10393 = !DILocation(line: 260, column: 5, scope: !10365)
!10394 = !DILocation(line: 260, column: 15, scope: !10383)
!10395 = !DILocation(line: 260, column: 5, scope: !10383)
!10396 = !DILocation(line: 260, column: 26, scope: !10387)
!10397 = !DILocation(line: 260, column: 5, scope: !10387)
!10398 = distinct !{!10398, !10393}
!10399 = !DILocation(line: 262, column: 17, scope: !10365)
!10400 = !DILocation(line: 262, column: 21, scope: !10365)
!10401 = !DILocation(line: 262, column: 5, scope: !10365)
!10402 = !DILocation(line: 263, column: 18, scope: !10365)
!10403 = !DILocation(line: 263, column: 22, scope: !10365)
!10404 = !DILocation(line: 263, column: 5, scope: !10365)
!10405 = !DILocation(line: 264, column: 14, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10365, file: !1126, line: 264, column: 5)
!10407 = !DILocation(line: 264, column: 20, scope: !10406)
!10408 = !DILocation(line: 264, column: 12, scope: !10406)
!10409 = !DILocation(line: 264, column: 10, scope: !10406)
!10410 = !DILocation(line: 264, column: 25, scope: !10411)
!10411 = !DILexicalBlockFile(scope: !10412, file: !1126, discriminator: 1)
!10412 = distinct !DILexicalBlock(scope: !10406, file: !1126, line: 264, column: 5)
!10413 = !DILocation(line: 264, column: 27, scope: !10411)
!10414 = !DILocation(line: 264, column: 5, scope: !10411)
!10415 = !DILocation(line: 265, column: 17, scope: !10412)
!10416 = !DILocation(line: 265, column: 31, scope: !10412)
!10417 = !DILocation(line: 265, column: 38, scope: !10412)
!10418 = !DILocation(line: 265, column: 40, scope: !10412)
!10419 = !DILocation(line: 265, column: 35, scope: !10412)
!10420 = !DILocation(line: 265, column: 21, scope: !10412)
!10421 = !DILocation(line: 265, column: 9, scope: !10412)
!10422 = !DILocation(line: 264, column: 34, scope: !10423)
!10423 = !DILexicalBlockFile(scope: !10412, file: !1126, discriminator: 2)
!10424 = !DILocation(line: 264, column: 5, scope: !10423)
!10425 = distinct !{!10425, !10426}
!10426 = !DILocation(line: 264, column: 5, scope: !10365)
!10427 = !DILocation(line: 266, column: 1, scope: !10365)
!10428 = distinct !DISubprogram(name: "mkv_write_cues", scope: !1126, file: !1126, line: 577, type: !10429, isLocal: true, isDefinition: true, scopeLine: 578, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2440)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!1051, !2438, !2502, !2520, !1053}
!10431 = !DILocation(line: 557, column: 77, scope: !2442, inlinedAt: !10432)
!10432 = distinct !DILocation(line: 585, column: 18, scope: !10428)
!10433 = !DILocalVariable(name: "s", arg: 1, scope: !10428, file: !1126, line: 577, type: !2438)
!10434 = !DILocation(line: 577, column: 48, scope: !10428)
!10435 = !DILocalVariable(name: "cues", arg: 2, scope: !10428, file: !1126, line: 577, type: !2502)
!10436 = !DILocation(line: 577, column: 61, scope: !10428)
!10437 = !DILocalVariable(name: "tracks", arg: 3, scope: !10428, file: !1126, line: 577, type: !2520)
!10438 = !DILocation(line: 577, column: 78, scope: !10428)
!10439 = !DILocalVariable(name: "num_tracks", arg: 4, scope: !10428, file: !1126, line: 577, type: !1053)
!10440 = !DILocation(line: 577, column: 90, scope: !10428)
!10441 = !DILocalVariable(name: "mkv", scope: !10428, file: !1126, line: 579, type: !2459)
!10442 = !DILocation(line: 579, column: 25, scope: !10428)
!10443 = !DILocation(line: 579, column: 31, scope: !10428)
!10444 = !DILocation(line: 579, column: 34, scope: !10428)
!10445 = !DILocalVariable(name: "dyn_cp", scope: !10428, file: !1126, line: 580, type: !1332)
!10446 = !DILocation(line: 580, column: 18, scope: !10428)
!10447 = !DILocalVariable(name: "pb", scope: !10428, file: !1126, line: 580, type: !1332)
!10448 = !DILocation(line: 580, column: 27, scope: !10428)
!10449 = !DILocation(line: 580, column: 32, scope: !10428)
!10450 = !DILocation(line: 580, column: 35, scope: !10428)
!10451 = !DILocalVariable(name: "cues_element", scope: !10428, file: !1126, line: 581, type: !2468)
!10452 = !DILocation(line: 581, column: 17, scope: !10428)
!10453 = !DILocalVariable(name: "currentpos", scope: !10428, file: !1126, line: 582, type: !1051)
!10454 = !DILocation(line: 582, column: 13, scope: !10428)
!10455 = !DILocalVariable(name: "i", scope: !10428, file: !1126, line: 583, type: !1053)
!10456 = !DILocation(line: 583, column: 9, scope: !10428)
!10457 = !DILocalVariable(name: "j", scope: !10428, file: !1126, line: 583, type: !1053)
!10458 = !DILocation(line: 583, column: 12, scope: !10428)
!10459 = !DILocalVariable(name: "ret", scope: !10428, file: !1126, line: 583, type: !1053)
!10460 = !DILocation(line: 583, column: 15, scope: !10428)
!10461 = !DILocation(line: 585, column: 28, scope: !10428)
!10462 = !DILocation(line: 585, column: 18, scope: !10428)
!10463 = !DILocation(line: 559, column: 22, scope: !2442, inlinedAt: !10432)
!10464 = !DILocation(line: 559, column: 12, scope: !2442, inlinedAt: !10432)
!10465 = !DILocation(line: 585, column: 16, scope: !10428)
!10466 = !DILocation(line: 586, column: 35, scope: !10428)
!10467 = !DILocation(line: 586, column: 48, scope: !10428)
!10468 = !DILocation(line: 586, column: 11, scope: !10428)
!10469 = !DILocation(line: 586, column: 9, scope: !10428)
!10470 = !DILocation(line: 587, column: 9, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10428, file: !1126, line: 587, column: 9)
!10472 = !DILocation(line: 587, column: 13, scope: !10471)
!10473 = !DILocation(line: 587, column: 9, scope: !10428)
!10474 = !DILocation(line: 588, column: 16, scope: !10471)
!10475 = !DILocation(line: 588, column: 9, scope: !10471)
!10476 = !DILocation(line: 590, column: 12, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10428, file: !1126, line: 590, column: 5)
!10478 = !DILocation(line: 590, column: 10, scope: !10477)
!10479 = !DILocation(line: 590, column: 17, scope: !10480)
!10480 = !DILexicalBlockFile(scope: !10481, file: !1126, discriminator: 1)
!10481 = distinct !DILexicalBlock(scope: !10477, file: !1126, line: 590, column: 5)
!10482 = !DILocation(line: 590, column: 21, scope: !10480)
!10483 = !DILocation(line: 590, column: 27, scope: !10480)
!10484 = !DILocation(line: 590, column: 19, scope: !10480)
!10485 = !DILocation(line: 590, column: 5, scope: !10480)
!10486 = !DILocalVariable(name: "cuepoint", scope: !10487, file: !1126, line: 591, type: !2468)
!10487 = distinct !DILexicalBlock(scope: !10481, file: !1126, line: 590, column: 45)
!10488 = !DILocation(line: 591, column: 21, scope: !10487)
!10489 = !DILocalVariable(name: "track_positions", scope: !10487, file: !1126, line: 591, type: !2468)
!10490 = !DILocation(line: 591, column: 31, scope: !10487)
!10491 = !DILocalVariable(name: "entry", scope: !10487, file: !1126, line: 592, type: !2508)
!10492 = !DILocation(line: 592, column: 23, scope: !10487)
!10493 = !DILocation(line: 592, column: 46, scope: !10487)
!10494 = !DILocation(line: 592, column: 32, scope: !10487)
!10495 = !DILocation(line: 592, column: 38, scope: !10487)
!10496 = !DILocalVariable(name: "pts", scope: !10487, file: !1126, line: 593, type: !1039)
!10497 = !DILocation(line: 593, column: 18, scope: !10487)
!10498 = !DILocation(line: 593, column: 24, scope: !10487)
!10499 = !DILocation(line: 593, column: 31, scope: !10487)
!10500 = !DILocalVariable(name: "ctp_nb", scope: !10487, file: !1126, line: 594, type: !1053)
!10501 = !DILocation(line: 594, column: 13, scope: !10487)
!10502 = !DILocation(line: 597, column: 16, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10487, file: !1126, line: 597, column: 9)
!10504 = !DILocation(line: 597, column: 14, scope: !10503)
!10505 = !DILocation(line: 597, column: 21, scope: !10506)
!10506 = !DILexicalBlockFile(scope: !10507, file: !1126, discriminator: 1)
!10507 = distinct !DILexicalBlock(scope: !10503, file: !1126, line: 597, column: 9)
!10508 = !DILocation(line: 597, column: 25, scope: !10506)
!10509 = !DILocation(line: 597, column: 23, scope: !10506)
!10510 = !DILocation(line: 597, column: 9, scope: !10506)
!10511 = !DILocation(line: 598, column: 20, scope: !10507)
!10512 = !DILocation(line: 598, column: 13, scope: !10507)
!10513 = !DILocation(line: 598, column: 23, scope: !10507)
!10514 = !DILocation(line: 598, column: 31, scope: !10507)
!10515 = !DILocation(line: 597, column: 38, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10507, file: !1126, discriminator: 2)
!10517 = !DILocation(line: 597, column: 9, scope: !10516)
!10518 = distinct !{!10518, !10519}
!10519 = !DILocation(line: 597, column: 9, scope: !10487)
!10520 = !DILocation(line: 599, column: 16, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10487, file: !1126, line: 599, column: 9)
!10522 = !DILocation(line: 599, column: 14, scope: !10521)
!10523 = !DILocation(line: 599, column: 21, scope: !10524)
!10524 = !DILexicalBlockFile(scope: !10525, file: !1126, discriminator: 1)
!10525 = distinct !DILexicalBlock(scope: !10521, file: !1126, line: 599, column: 9)
!10526 = !DILocation(line: 599, column: 25, scope: !10524)
!10527 = !DILocation(line: 599, column: 31, scope: !10524)
!10528 = !DILocation(line: 599, column: 45, scope: !10524)
!10529 = !DILocation(line: 599, column: 43, scope: !10524)
!10530 = !DILocation(line: 599, column: 23, scope: !10524)
!10531 = !DILocation(line: 599, column: 47, scope: !10524)
!10532 = !DILocation(line: 599, column: 56, scope: !10533)
!10533 = !DILexicalBlockFile(scope: !10525, file: !1126, discriminator: 2)
!10534 = !DILocation(line: 599, column: 50, scope: !10533)
!10535 = !DILocation(line: 599, column: 59, scope: !10533)
!10536 = !DILocation(line: 599, column: 66, scope: !10533)
!10537 = !DILocation(line: 599, column: 63, scope: !10533)
!10538 = !DILocation(line: 599, column: 9, scope: !10539)
!10539 = !DILexicalBlockFile(scope: !10521, file: !1126, discriminator: 3)
!10540 = !DILocalVariable(name: "tracknum", scope: !10541, file: !1126, line: 600, type: !1053)
!10541 = distinct !DILexicalBlock(scope: !10525, file: !1126, line: 599, column: 76)
!10542 = !DILocation(line: 600, column: 17, scope: !10541)
!10543 = !DILocation(line: 600, column: 34, scope: !10541)
!10544 = !DILocation(line: 600, column: 28, scope: !10541)
!10545 = !DILocation(line: 600, column: 37, scope: !10541)
!10546 = !DILocation(line: 601, column: 13, scope: !10541)
!10547 = distinct !{!10547, !10546}
!10548 = !DILocation(line: 601, column: 24, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !10550, file: !1126, discriminator: 1)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !1126, line: 601, column: 22)
!10551 = distinct !DILexicalBlock(scope: !10541, file: !1126, line: 601, column: 16)
!10552 = !DILocation(line: 601, column: 32, scope: !10549)
!10553 = !DILocation(line: 601, column: 36, scope: !10549)
!10554 = !DILocation(line: 601, column: 39, scope: !10555)
!10555 = !DILexicalBlockFile(scope: !10550, file: !1126, discriminator: 2)
!10556 = !DILocation(line: 601, column: 48, scope: !10555)
!10557 = !DILocation(line: 601, column: 47, scope: !10555)
!10558 = !DILocation(line: 601, column: 22, scope: !10555)
!10559 = !DILocation(line: 601, column: 63, scope: !10560)
!10560 = !DILexicalBlockFile(scope: !10561, file: !1126, discriminator: 3)
!10561 = distinct !DILexicalBlock(scope: !10550, file: !1126, line: 601, column: 61)
!10562 = !DILocation(line: 601, column: 124, scope: !10563)
!10563 = !DILexicalBlockFile(scope: !10560, file: !1126, discriminator: 5)
!10564 = !DILocation(line: 601, column: 124, scope: !10560)
!10565 = !DILocation(line: 601, column: 135, scope: !10566)
!10566 = !DILexicalBlockFile(scope: !10551, file: !1126, discriminator: 4)
!10567 = !DILocation(line: 602, column: 24, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10541, file: !1126, line: 602, column: 17)
!10569 = !DILocation(line: 602, column: 17, scope: !10568)
!10570 = !DILocation(line: 602, column: 34, scope: !10568)
!10571 = !DILocation(line: 602, column: 42, scope: !10568)
!10572 = !DILocation(line: 602, column: 56, scope: !10573)
!10573 = !DILexicalBlockFile(scope: !10568, file: !1126, discriminator: 1)
!10574 = !DILocation(line: 602, column: 45, scope: !10573)
!10575 = !DILocation(line: 602, column: 48, scope: !10573)
!10576 = !DILocation(line: 602, column: 67, scope: !10573)
!10577 = !DILocation(line: 602, column: 77, scope: !10573)
!10578 = !DILocation(line: 602, column: 88, scope: !10573)
!10579 = !DILocation(line: 602, column: 17, scope: !10573)
!10580 = !DILocation(line: 603, column: 17, scope: !10568)
!10581 = !DILocation(line: 604, column: 20, scope: !10541)
!10582 = !DILocation(line: 604, column: 13, scope: !10541)
!10583 = !DILocation(line: 604, column: 30, scope: !10541)
!10584 = !DILocation(line: 604, column: 38, scope: !10541)
!10585 = !DILocation(line: 605, column: 20, scope: !10541)
!10586 = !DILocation(line: 606, column: 9, scope: !10541)
!10587 = !DILocation(line: 599, column: 72, scope: !10588)
!10588 = !DILexicalBlockFile(scope: !10525, file: !1126, discriminator: 4)
!10589 = !DILocation(line: 599, column: 9, scope: !10588)
!10590 = distinct !{!10590, !10591}
!10591 = !DILocation(line: 599, column: 9, scope: !10487)
!10592 = !DILocation(line: 608, column: 38, scope: !10487)
!10593 = !DILocation(line: 608, column: 62, scope: !10487)
!10594 = !DILocation(line: 608, column: 60, scope: !10487)
!10595 = !DILocation(line: 608, column: 55, scope: !10487)
!10596 = !DILocation(line: 608, column: 52, scope: !10487)
!10597 = !DILocation(line: 608, column: 20, scope: !10487)
!10598 = !DILocation(line: 608, column: 20, scope: !10599)
!10599 = !DILexicalBlockFile(scope: !10487, file: !1126, discriminator: 1)
!10600 = !DILocation(line: 609, column: 23, scope: !10487)
!10601 = !DILocation(line: 609, column: 37, scope: !10487)
!10602 = !DILocation(line: 609, column: 9, scope: !10487)
!10603 = !DILocation(line: 613, column: 16, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10487, file: !1126, line: 613, column: 9)
!10605 = !DILocation(line: 613, column: 14, scope: !10604)
!10606 = !DILocation(line: 613, column: 21, scope: !10607)
!10607 = !DILexicalBlockFile(scope: !10608, file: !1126, discriminator: 1)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !1126, line: 613, column: 9)
!10609 = !DILocation(line: 613, column: 25, scope: !10607)
!10610 = !DILocation(line: 613, column: 23, scope: !10607)
!10611 = !DILocation(line: 613, column: 9, scope: !10607)
!10612 = !DILocation(line: 614, column: 20, scope: !10608)
!10613 = !DILocation(line: 614, column: 13, scope: !10608)
!10614 = !DILocation(line: 614, column: 23, scope: !10608)
!10615 = !DILocation(line: 614, column: 31, scope: !10608)
!10616 = !DILocation(line: 613, column: 38, scope: !10617)
!10617 = !DILexicalBlockFile(scope: !10608, file: !1126, discriminator: 2)
!10618 = !DILocation(line: 613, column: 9, scope: !10617)
!10619 = distinct !{!10619, !10620}
!10620 = !DILocation(line: 613, column: 9, scope: !10487)
!10621 = !DILocation(line: 615, column: 16, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10487, file: !1126, line: 615, column: 9)
!10623 = !DILocation(line: 615, column: 14, scope: !10622)
!10624 = !DILocation(line: 615, column: 21, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !10626, file: !1126, discriminator: 1)
!10626 = distinct !DILexicalBlock(scope: !10622, file: !1126, line: 615, column: 9)
!10627 = !DILocation(line: 615, column: 25, scope: !10625)
!10628 = !DILocation(line: 615, column: 31, scope: !10625)
!10629 = !DILocation(line: 615, column: 45, scope: !10625)
!10630 = !DILocation(line: 615, column: 43, scope: !10625)
!10631 = !DILocation(line: 615, column: 23, scope: !10625)
!10632 = !DILocation(line: 615, column: 47, scope: !10625)
!10633 = !DILocation(line: 615, column: 56, scope: !10634)
!10634 = !DILexicalBlockFile(scope: !10626, file: !1126, discriminator: 2)
!10635 = !DILocation(line: 615, column: 50, scope: !10634)
!10636 = !DILocation(line: 615, column: 59, scope: !10634)
!10637 = !DILocation(line: 615, column: 66, scope: !10634)
!10638 = !DILocation(line: 615, column: 63, scope: !10634)
!10639 = !DILocation(line: 615, column: 9, scope: !10640)
!10640 = !DILexicalBlockFile(scope: !10622, file: !1126, discriminator: 3)
!10641 = !DILocalVariable(name: "tracknum", scope: !10642, file: !1126, line: 616, type: !1053)
!10642 = distinct !DILexicalBlock(scope: !10626, file: !1126, line: 615, column: 76)
!10643 = !DILocation(line: 616, column: 17, scope: !10642)
!10644 = !DILocation(line: 616, column: 34, scope: !10642)
!10645 = !DILocation(line: 616, column: 28, scope: !10642)
!10646 = !DILocation(line: 616, column: 37, scope: !10642)
!10647 = !DILocation(line: 617, column: 13, scope: !10642)
!10648 = distinct !{!10648, !10647}
!10649 = !DILocation(line: 617, column: 24, scope: !10650)
!10650 = !DILexicalBlockFile(scope: !10651, file: !1126, discriminator: 1)
!10651 = distinct !DILexicalBlock(scope: !10652, file: !1126, line: 617, column: 22)
!10652 = distinct !DILexicalBlock(scope: !10642, file: !1126, line: 617, column: 16)
!10653 = !DILocation(line: 617, column: 32, scope: !10650)
!10654 = !DILocation(line: 617, column: 36, scope: !10650)
!10655 = !DILocation(line: 617, column: 39, scope: !10656)
!10656 = !DILexicalBlockFile(scope: !10651, file: !1126, discriminator: 2)
!10657 = !DILocation(line: 617, column: 48, scope: !10656)
!10658 = !DILocation(line: 617, column: 47, scope: !10656)
!10659 = !DILocation(line: 617, column: 22, scope: !10656)
!10660 = !DILocation(line: 617, column: 63, scope: !10661)
!10661 = !DILexicalBlockFile(scope: !10662, file: !1126, discriminator: 3)
!10662 = distinct !DILexicalBlock(scope: !10651, file: !1126, line: 617, column: 61)
!10663 = !DILocation(line: 617, column: 124, scope: !10664)
!10664 = !DILexicalBlockFile(scope: !10661, file: !1126, discriminator: 5)
!10665 = !DILocation(line: 617, column: 124, scope: !10661)
!10666 = !DILocation(line: 617, column: 135, scope: !10667)
!10667 = !DILexicalBlockFile(scope: !10652, file: !1126, discriminator: 4)
!10668 = !DILocation(line: 618, column: 24, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10642, file: !1126, line: 618, column: 17)
!10670 = !DILocation(line: 618, column: 17, scope: !10669)
!10671 = !DILocation(line: 618, column: 34, scope: !10669)
!10672 = !DILocation(line: 618, column: 42, scope: !10669)
!10673 = !DILocation(line: 618, column: 56, scope: !10674)
!10674 = !DILexicalBlockFile(scope: !10669, file: !1126, discriminator: 1)
!10675 = !DILocation(line: 618, column: 45, scope: !10674)
!10676 = !DILocation(line: 618, column: 48, scope: !10674)
!10677 = !DILocation(line: 618, column: 67, scope: !10674)
!10678 = !DILocation(line: 618, column: 77, scope: !10674)
!10679 = !DILocation(line: 618, column: 88, scope: !10674)
!10680 = !DILocation(line: 618, column: 17, scope: !10674)
!10681 = !DILocation(line: 619, column: 17, scope: !10669)
!10682 = !DILocation(line: 620, column: 20, scope: !10642)
!10683 = !DILocation(line: 620, column: 13, scope: !10642)
!10684 = !DILocation(line: 620, column: 30, scope: !10642)
!10685 = !DILocation(line: 620, column: 38, scope: !10642)
!10686 = !DILocation(line: 621, column: 49, scope: !10642)
!10687 = !DILocation(line: 621, column: 31, scope: !10642)
!10688 = !DILocation(line: 621, column: 31, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10642, file: !1126, discriminator: 1)
!10690 = !DILocation(line: 622, column: 27, scope: !10642)
!10691 = !DILocation(line: 622, column: 48, scope: !10642)
!10692 = !DILocation(line: 622, column: 42, scope: !10642)
!10693 = !DILocation(line: 622, column: 51, scope: !10642)
!10694 = !DILocation(line: 622, column: 13, scope: !10642)
!10695 = !DILocation(line: 623, column: 27, scope: !10642)
!10696 = !DILocation(line: 623, column: 48, scope: !10642)
!10697 = !DILocation(line: 623, column: 42, scope: !10642)
!10698 = !DILocation(line: 623, column: 51, scope: !10642)
!10699 = !DILocation(line: 623, column: 13, scope: !10642)
!10700 = !DILocation(line: 624, column: 27, scope: !10642)
!10701 = !DILocation(line: 624, column: 47, scope: !10642)
!10702 = !DILocation(line: 624, column: 41, scope: !10642)
!10703 = !DILocation(line: 624, column: 50, scope: !10642)
!10704 = !DILocation(line: 624, column: 13, scope: !10642)
!10705 = !DILocation(line: 625, column: 23, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10642, file: !1126, line: 625, column: 17)
!10707 = !DILocation(line: 625, column: 17, scope: !10706)
!10708 = !DILocation(line: 625, column: 26, scope: !10706)
!10709 = !DILocation(line: 625, column: 35, scope: !10706)
!10710 = !DILocation(line: 625, column: 17, scope: !10642)
!10711 = !DILocation(line: 626, column: 31, scope: !10706)
!10712 = !DILocation(line: 626, column: 52, scope: !10706)
!10713 = !DILocation(line: 626, column: 46, scope: !10706)
!10714 = !DILocation(line: 626, column: 55, scope: !10706)
!10715 = !DILocation(line: 626, column: 17, scope: !10706)
!10716 = !DILocation(line: 627, column: 29, scope: !10642)
!10717 = !DILocation(line: 627, column: 13, scope: !10642)
!10718 = !DILocation(line: 628, column: 9, scope: !10642)
!10719 = !DILocation(line: 615, column: 72, scope: !10720)
!10720 = !DILexicalBlockFile(scope: !10626, file: !1126, discriminator: 4)
!10721 = !DILocation(line: 615, column: 9, scope: !10720)
!10722 = distinct !{!10722, !10723}
!10723 = !DILocation(line: 615, column: 9, scope: !10487)
!10724 = !DILocation(line: 629, column: 14, scope: !10487)
!10725 = !DILocation(line: 629, column: 16, scope: !10487)
!10726 = !DILocation(line: 629, column: 11, scope: !10487)
!10727 = !DILocation(line: 630, column: 25, scope: !10487)
!10728 = !DILocation(line: 630, column: 9, scope: !10487)
!10729 = !DILocation(line: 631, column: 5, scope: !10487)
!10730 = !DILocation(line: 590, column: 41, scope: !10731)
!10731 = !DILexicalBlockFile(scope: !10481, file: !1126, discriminator: 2)
!10732 = !DILocation(line: 590, column: 5, scope: !10731)
!10733 = distinct !{!10733, !10734}
!10734 = !DILocation(line: 590, column: 5, scope: !10428)
!10735 = !DILocation(line: 632, column: 27, scope: !10428)
!10736 = !DILocation(line: 632, column: 40, scope: !10428)
!10737 = !DILocation(line: 632, column: 5, scope: !10428)
!10738 = !DILocation(line: 634, column: 12, scope: !10428)
!10739 = !DILocation(line: 634, column: 5, scope: !10428)
!10740 = !DILocation(line: 635, column: 1, scope: !10428)
