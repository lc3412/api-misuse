; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--bink.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--bink.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.BinkContext = type { %struct.AVCodecContext*, %struct.BlockDSPContext, %struct.HpelDSPContext, %struct.BinkDSPContext, %struct.AVFrame*, i32, i32, i32, i32, [10 x %struct.Bundle], [16 x %struct.Tree], i32 }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.BinkDSPContext = type { void (i8*, i32, i32*)*, void (i8*, i32, i32*)*, void (i8*, i8*, i32)*, void (i8*, i16*, i32)* }
%struct.Bundle = type { i32, %struct.Tree, i8*, i8*, i8*, i8* }
%struct.Tree = type { i32, [16 x i8] }
%union.unaligned_32 = type { i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [10 x i8] c"binkvideo\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"Bink video\00", align 1
@ff_bink_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 135, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 1400, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@decode_init.table = internal global [2048 x [2 x i16]] zeroinitializer, align 16
@decode_init.binkb_initialised = internal global i32 0, align 4
@.str.2 = private unnamed_addr constant [32 x i8] c"Extradata missing or too short\0A\00", align 1
@bink_trees = internal global [16 x %struct.VLC] zeroinitializer, align 16
@bink_tree_lens = internal constant [16 x [16 x i8]] [[16 x i8] c"\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04", [16 x i8] c"\01\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05", [16 x i8] c"\02\02\04\04\05\05\05\05\05\05\05\05\05\05\05\05", [16 x i8] c"\02\03\03\04\04\04\05\05\05\05\05\05\05\05\05\05", [16 x i8] c"\03\03\03\03\04\04\04\04\05\05\05\05\05\05\05\05", [16 x i8] c"\03\03\04\04\04\04\04\04\04\04\04\04\05\05\05\05", [16 x i8] c"\02\04\04\04\04\04\04\04\04\04\05\05\05\05\05\05", [16 x i8] c"\01\03\03\05\05\05\06\06\06\06\06\06\06\06\06\06", [16 x i8] c"\01\02\05\05\06\06\06\06\06\06\06\06\06\06\06\06", [16 x i8] c"\01\03\04\04\05\05\05\05\06\06\06\06\06\06\06\06", [16 x i8] c"\02\02\03\04\04\05\05\05\05\05\06\06\06\06\06\06", [16 x i8] c"\01\04\04\04\04\05\05\05\05\05\06\06\06\06\06\06", [16 x i8] c"\02\02\02\05\05\05\06\06\06\06\06\06\06\06\06\06", [16 x i8] c"\01\03\03\03\06\06\06\06\07\07\07\07\07\07\07\07", [16 x i8] c"\01\03\03\03\05\06\07\07\07\07\07\07\07\07\07\07", [16 x i8] c"\02\02\03\03\03\06\06\06\06\06\07\07\07\07\07\07"], align 16
@bink_tree_bits = internal constant [16 x [16 x i8]] [[16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", [16 x i8] c"\00\01\03\05\07\09\0B\0D\0F\13\15\17\19\1B\1D\1F", [16 x i8] c"\00\02\01\09\05\15\0D\1D\03\13\0B\1B\07\17\0F\1F", [16 x i8] c"\00\02\06\01\09\05\0D\1D\03\13\0B\1B\07\17\0F\1F", [16 x i8] c"\00\04\02\06\01\09\05\0D\03\13\0B\1B\07\17\0F\1F", [16 x i8] c"\00\04\02\0A\06\0E\01\09\05\0D\03\0B\07\17\0F\1F", [16 x i8] c"\00\02\0A\06\0E\01\09\05\0D\03\0B\1B\07\17\0F\1F", [16 x i8] c"\00\01\05\03\13\0B\1B;\07'\177\0F/\1F?", [16 x i8] c"\00\01\03\13\0B+\1B;\07'\177\0F/\1F?", [16 x i8] c"\00\01\05\0D\03\13\0B\1B\07'\177\0F/\1F?", [16 x i8] c"\00\02\01\05\0D\03\13\0B\1B\07\177\0F/\1F?", [16 x i8] c"\00\01\09\05\0D\03\13\0B\1B\07\177\0F/\1F?", [16 x i8] c"\00\02\01\03\13\0B\1B;\07'\177\0F/\1F?", [16 x i8] c"\00\01\05\03\07'\177\0FO/o\1F_?\7F", [16 x i8] c"\00\01\05\03\07\177w\0FO/o\1F_?\7F", [16 x i8] c"\00\02\01\05\03\07'\177\0F/o\1F_?\7F"], align 16
@binkb_calc_quant.s = internal constant [64 x i32] [i32 1073741824, i32 1489322693, i32 1402911301, i32 1262586814, i32 1073741824, i32 843633538, i32 581104888, i32 296244703, i32 1489322693, i32 2065749918, i32 1945893874, i32 1751258219, i32 1489322693, i32 1170153332, i32 806015634, i32 410903207, i32 1402911301, i32 1945893874, i32 1832991949, i32 1649649171, i32 1402911301, i32 1102260336, i32 759250125, i32 387062357, i32 1262586814, i32 1751258219, i32 1649649171, i32 1484645031, i32 1262586814, i32 992008094, i32 683307060, i32 348346918, i32 1073741824, i32 1489322693, i32 1402911301, i32 1262586814, i32 1073741824, i32 843633538, i32 581104888, i32 296244703, i32 843633538, i32 1170153332, i32 1102260336, i32 992008094, i32 843633538, i32 662838617, i32 456571181, i32 232757969, i32 581104888, i32 806015634, i32 759250125, i32 683307060, i32 581104888, i32 456571181, i32 314491699, i32 160326478, i32 296244703, i32 410903207, i32 387062357, i32 348346918, i32 296244703, i32 232757969, i32 160326478, i32 81733730], align 16
@bink_scan = internal constant [64 x i8] c"\00\01\08\09\02\03\0A\0B\04\05\0C\0D\06\07\0E\0F\14\15\1C\1D\16\17\1E\1F\10\11\18\19 !()\22#*+018923:;\12\13\1A\1B$%,-&'./45<=67>?", align 16
@binkb_intra_seed = internal constant [64 x i8] c"\10\10\10\13\10\13\16\16\16\16\1A\18\1A\16\16\1B\1B\1B\1A\1A\1A\1D\1D\1D\1B\1B\1B\1A\22\22\22\1D\1D\1D\1B\1B%\22\22  \1D\1D&%##\22#(((&&00..:88EES", align 16
@binkb_num = internal constant [16 x i8] c"\01\04\05\02\07\08\03\07\04\09\05\06\07\08\09\0A", align 16
@binkb_den = internal constant [16 x i8] c"\01\03\03\01\03\03\01\02\01\02\01\01\01\01\01\01", align 16
@binkb_intra_quant = internal global [16 x [64 x i32]] zeroinitializer, align 16
@binkb_inter_seed = internal constant [64 x i8] c"\10\11\11\12\12\12\13\13\13\13\14\14\14\14\14\15\15\15\15\15\15\16\16\16\16\16\16\16\17\17\17\17\17\17\17\17\18\18\18\19\18\18\18\19\1A\1A\1A\1A\19\1B\1B\1B\1B\1B\1C\1C\1C\1C\1E\1E\1E\1F\1F!", align 16
@binkb_inter_quant = internal global [16 x [64 x i32]] zeroinitializer, align 16
@bink_patterns = internal constant [16 x [64 x i8]] [[64 x i8] c"\00\08\10\18 (0891)!\19\11\09\01\02\0A\12\1A\22*2:;3+#\1B\13\0B\03\04\0C\14\1C$,4<=5-%\1D\15\0D\05\06\0E\16\1E&.6>?7/'\1F\17\0F\07", [64 x i8] c";:980123+*)( !\22#\1B\1A\19\18\10\11\12\13\0B\0A\09\08\00\01\02\03\04\05\06\07\0F\0E\0D\0C\14\15\16\17\1F\1E\1D\1C$%&'/.-,4567?>=<", [64 x i8] c"\19\11\12\1A\1B\13\0B\03\02\0A\09\01\00\08\10\18 (0891)*2:;3+#\22!\1D\15\16\1E\1F\17\0F\07\06\0E\0D\05\04\0C\14\1C$,4<=5-.6>?7/'&%", [64 x i8] c"\03\0B\02\0A\01\09\00\08\10\18\11\19\12\1A\13\1B#+\22*!) (08192:3;<4=5>6?7/'.&-%,$\1C\14\1D\15\1E\16\1F\17\0F\07\0E\06\0D\05\0C\04", [64 x i8] c"\18\19\10\11\08\09\00\01\02\03\0A\0B\12\13\1A\1B\1C\1D\14\15\0C\0D\04\05\06\07\0E\0F\16\17\1E\1F'&/.76?>=<54-,%$#\22+*32;:9810)(! ", [64 x i8] c"\00\01\02\03\08\09\0A\0B\10\11\12\13\18\19\1A\1B !\22#()*+012389:;\04\05\06\07\0C\0D\0E\0F\14\15\16\17\1C\1D\1E\1F$%&',-./4567<=>?", [64 x i8] c"\06\07\0F\0E\0D\05\0C\04\03\0B\02\0A\09\01\00\08\10\18\11\19\12\1A\13\1B\14\1C\15\1D\16\1E\17\1F'/&.%-$,#+\22*!) (1089:2;3<4=567?>", [64 x i8] c"\00\01\02\03\04\05\06\07\0F\0E\0D\0C\0B\0A\09\08\10\11\12\13\14\15\16\17\1F\1E\1D\1C\1B\1A\19\18 !\22#$%&'/.-,+*)(01234567?>=<;:98", [64 x i8] c"\00\08\09\01\02\03\0B\0A\12\13\1B\1A\19\11\10\18 ()!\22#+*21089:;34<=>?765-,$%&./'\1F\17\16\1E\1D\1C\14\15\0D\0C\04\05\06\0E\0F\07", [64 x i8] c"\18\19\10\11\08\09\00\01\02\03\0A\0B\12\13\1A\1B\1C\1D\14\15\0C\0D\04\05\06\07\0E\0F\16\17\1E\1F&'./67>?<=45,-$%\22#*+23:;8901() !", [64 x i8] c"\00\08\01\09\02\0A\03\0B\13\1B\12\1A\11\19\10\18 (!)\22*#+3;2:1908<4=5>6?7/'.&-%,$\1F\17\1E\16\1D\15\1C\14\0C\04\0D\05\0E\06\0F\07", [64 x i8] c"\00\08\10\18\19\1A\1B\13\0B\03\02\01\09\11\12\0A\04\0C\14\1C\1D\1E\1F\17\0F\07\06\05\0D\15\16\0E$,4<=>?7/'&%-56. (089:;3+#\22!)12*", [64 x i8] c"\00\08\09\01\02\03\0B\0A\13\1B\1A\12\11\10\18\19! ()*\22#+3;:219804<=56>?7/'&.-,$%\1D\1C\14\15\16\1E\1F\17\0E\0F\07\06\05\0D\0C\04", [64 x i8] c"\18\10\08\00\01\02\03\0B\13\1B\1A\19\11\0A\09\12\1C\14\0C\04\05\06\07\0F\17\1F\1E\1D\15\0E\0D\16<4,$%&'/7?>=5.-680( !\22#+3;:91*)2", [64 x i8] c"\00\08\09\01\02\0A\12\11\10\18\19\1A\1B\13\0B\03\07\06\0E\0F\17\16\15\0D\05\04\0C\14\1C\1D\1E\1F?>67/.-5=<4,$%&'8019:2*)( !\22#+3;", [64 x i8] c"\00\01\08\09\10\11\18\19 !()0189:;23*+\22#\1A\1B\12\13\0A\0B\02\03\04\05\0C\0D\14\15\1C\1D$%,-45<=>?67./&'\1E\1F\16\17\0E\0F\06\07"], align 16
@.str.3 = private unnamed_addr constant [24 x i8] c"Run went out of bounds\0A\00", align 1
@bink_intra_quant = internal constant [16 x [64 x i32]] [[64 x i32] [i32 65536, i32 90901, i32 124989, i32 173365, i32 85627, i32 91511, i32 192998, i32 160332, i32 65536, i32 61146, i32 147714, i32 98203, i32 48768, i32 24862, i32 67644, i32 42322, i32 139144, i32 121939, i32 163757, i32 128663, i32 83993, i32 42819, i32 88625, i32 38536, i32 144495, i32 200421, i32 130042, i32 180374, i32 118784, i32 164758, i32 102983, i32 129450, i32 144495, i32 130042, i32 121939, i32 143800, i32 77586, i32 122988, i32 51984, i32 72104, i32 115852, i32 104264, i32 85638, i32 74415, i32 181800, i32 163616, i32 169909, i32 147250, i32 151552, i32 109419, i32 119074, i32 88499, i32 75369, i32 36163, i32 60959, i32 30189, i32 84236, i32 66184, i32 63285, i32 61265, i32 57585, i32 29357, i32 42200, i32 25879], [64 x i32] [i32 87381, i32 121201, i32 166652, i32 231153, i32 114169, i32 122015, i32 257331, i32 213777, i32 87381, i32 81528, i32 196952, i32 130938, i32 65024, i32 33149, i32 90191, i32 56429, i32 185525, i32 162585, i32 218343, i32 171551, i32 111991, i32 57092, i32 118166, i32 51382, i32 192661, i32 267228, i32 173390, i32 240499, i32 158379, i32 219678, i32 137310, i32 172600, i32 192661, i32 173390, i32 162585, i32 191733, i32 103448, i32 163984, i32 69312, i32 96138, i32 154470, i32 139019, i32 114185, i32 99220, i32 242400, i32 218154, i32 226545, i32 196334, i32 202069, i32 145892, i32 158765, i32 117998, i32 100492, i32 48217, i32 81278, i32 40252, i32 112315, i32 88245, i32 84380, i32 81687, i32 76780, i32 39142, i32 56267, i32 34505], [64 x i32] [i32 109227, i32 151502, i32 208315, i32 288941, i32 142712, i32 152519, i32 321663, i32 267221, i32 109227, i32 101910, i32 246190, i32 163672, i32 81280, i32 41436, i32 112739, i32 70536, i32 231906, i32 203231, i32 272929, i32 214439, i32 139988, i32 71365, i32 147708, i32 64227, i32 240826, i32 334035, i32 216737, i32 300623, i32 197973, i32 274597, i32 171638, i32 215749, i32 240826, i32 216737, i32 203231, i32 239667, i32 129310, i32 204980, i32 86640, i32 120173, i32 193087, i32 173774, i32 142731, i32 124025, i32 303000, i32 272693, i32 283181, i32 245417, i32 252587, i32 182365, i32 198456, i32 147498, i32 125615, i32 60271, i32 101598, i32 50314, i32 140393, i32 110306, i32 105474, i32 102109, i32 95975, i32 48928, i32 70334, i32 43131], [64 x i32] [i32 131072, i32 181802, i32 249978, i32 346729, i32 171254, i32 183023, i32 385996, i32 320665, i32 131072, i32 122292, i32 295428, i32 196406, i32 97537, i32 49724, i32 135287, i32 84643, i32 278287, i32 243878, i32 327514, i32 257326, i32 167986, i32 85638, i32 177249, i32 77073, i32 288991, i32 400842, i32 260085, i32 360748, i32 237568, i32 329516, i32 205965, i32 258899, i32 288991, i32 260085, i32 243878, i32 287600, i32 155172, i32 245976, i32 103968, i32 144207, i32 231705, i32 208529, i32 171277, i32 148830, i32 363600, i32 327231, i32 339817, i32 294501, i32 303104, i32 218838, i32 238147, i32 176997, i32 150738, i32 72325, i32 121918, i32 60377, i32 168472, i32 132368, i32 126569, i32 122530, i32 115170, i32 58713, i32 84400, i32 51757], [64 x i32] [i32 174763, i32 242403, i32 333304, i32 462306, i32 228338, i32 244030, i32 514661, i32 427553, i32 174763, i32 163056, i32 393905, i32 261875, i32 130049, i32 66298, i32 180383, i32 112858, i32 371050, i32 325170, i32 436686, i32 343102, i32 223981, i32 114185, i32 236333, i32 102763, i32 385321, i32 534456, i32 346780, i32 480997, i32 316757, i32 439355, i32 274620, i32 345199, i32 385321, i32 346780, i32 325170, i32 383467, i32 206896, i32 327969, i32 138624, i32 192276, i32 308940, i32 278038, i32 228369, i32 198440, i32 484800, i32 436309, i32 453090, i32 392667, i32 404139, i32 291784, i32 317530, i32 235996, i32 200984, i32 96434, i32 162557, i32 80503, i32 224630, i32 176490, i32 168759, i32 163374, i32 153560, i32 78284, i32 112534, i32 69009], [64 x i32] [i32 229376, i32 318154, i32 437461, i32 606776, i32 299694, i32 320290, i32 675493, i32 561164, i32 229376, i32 214011, i32 517000, i32 343711, i32 170689, i32 87016, i32 236752, i32 148126, i32 487003, i32 426786, i32 573150, i32 450321, i32 293975, i32 149867, i32 310187, i32 134877, i32 505734, i32 701473, i32 455149, i32 631309, i32 415744, i32 576654, i32 360439, i32 453074, i32 505734, i32 455149, i32 426786, i32 503300, i32 271551, i32 430459, i32 181944, i32 252363, i32 405483, i32 364925, i32 299735, i32 260452, i32 636300, i32 572655, i32 594680, i32 515376, i32 530432, i32 382967, i32 416758, i32 309745, i32 263792, i32 126569, i32 213356, i32 105660, i32 294826, i32 231644, i32 221496, i32 214428, i32 201548, i32 102748, i32 147701, i32 90575], [64 x i32] [i32 262144, i32 363604, i32 499956, i32 693459, i32 342508, i32 366045, i32 771992, i32 641330, i32 262144, i32 244584, i32 590857, i32 392813, i32 195073, i32 99447, i32 270574, i32 169287, i32 556575, i32 487756, i32 655029, i32 514653, i32 335972, i32 171277, i32 354499, i32 154145, i32 577982, i32 801684, i32 520170, i32 721496, i32 475136, i32 659033, i32 411930, i32 517799, i32 577982, i32 520170, i32 487756, i32 575200, i32 310344, i32 491953, i32 207935, i32 288415, i32 463410, i32 417058, i32 342554, i32 297660, i32 727200, i32 654463, i32 679635, i32 589001, i32 606208, i32 437676, i32 476295, i32 353994, i32 301477, i32 144651, i32 243835, i32 120755, i32 336944, i32 264736, i32 253139, i32 245061, i32 230341, i32 117427, i32 168801, i32 103514], [64 x i32] [i32 327680, i32 454505, i32 624945, i32 866823, i32 428135, i32 457557, i32 964990, i32 801662, i32 327680, i32 305730, i32 738571, i32 491016, i32 243841, i32 124309, i32 338218, i32 211609, i32 695719, i32 609695, i32 818786, i32 643316, i32 419965, i32 214096, i32 443124, i32 192682, i32 722477, i32 1002104, i32 650212, i32 901870, i32 593920, i32 823791, i32 514913, i32 647248, i32 722477, i32 650212, i32 609695, i32 719000, i32 387929, i32 614941, i32 259919, i32 360518, i32 579262, i32 521322, i32 428192, i32 372075, i32 909000, i32 818079, i32 849543, i32 736251, i32 757760, i32 547095, i32 595368, i32 442493, i32 376846, i32 180813, i32 304794, i32 150943, i32 421180, i32 330919, i32 316423, i32 306326, i32 287926, i32 146783, i32 211001, i32 129393], [64 x i32] [i32 393216, i32 545406, i32 749934, i32 1040188, i32 513761, i32 549068, i32 1157987, i32 961995, i32 393216, i32 366876, i32 886285, i32 589219, i32 292610, i32 149171, i32 405861, i32 253930, i32 834862, i32 731633, i32 982543, i32 771979, i32 503958, i32 256915, i32 531748, i32 231218, i32 866972, i32 1202525, i32 780255, i32 1082244, i32 712704, i32 988549, i32 617896, i32 776698, i32 866972, i32 780255, i32 731633, i32 862800, i32 465515, i32 737929, i32 311903, i32 432622, i32 695114, i32 625586, i32 513831, i32 446490, i32 1090800, i32 981694, i32 1019452, i32 883502, i32 909312, i32 656514, i32 714442, i32 530991, i32 452215, i32 216976, i32 365753, i32 181132, i32 505417, i32 397103, i32 379708, i32 367591, i32 345511, i32 176140, i32 253201, i32 155271], [64 x i32] [i32 524288, i32 727208, i32 999912, i32 1386917, i32 685015, i32 732091, i32 1543983, i32 1282660, i32 524288, i32 489167, i32 1181714, i32 785625, i32 390146, i32 198895, i32 541148, i32 338574, i32 1113150, i32 975511, i32 1310057, i32 1029305, i32 671944, i32 342554, i32 708998, i32 308290, i32 1155963, i32 1603367, i32 1040340, i32 1442992, i32 950272, i32 1318065, i32 823861, i32 1035597, i32 1155963, i32 1040340, i32 975511, i32 1150400, i32 620687, i32 983906, i32 415871, i32 576829, i32 926819, i32 834115, i32 685108, i32 595319, i32 1454400, i32 1308926, i32 1359269, i32 1178002, i32 1212416, i32 875352, i32 952589, i32 707988, i32 602953, i32 289301, i32 487671, i32 241509, i32 673889, i32 529471, i32 506278, i32 490121, i32 460681, i32 234853, i32 337602, i32 207028], [64 x i32] [i32 786432, i32 1090813, i32 1499867, i32 2080376, i32 1027523, i32 1098136, i32 2315975, i32 1923990, i32 786432, i32 733751, i32 1772570, i32 1178438, i32 585219, i32 298342, i32 811722, i32 507861, i32 1669725, i32 1463267, i32 1965086, i32 1543958, i32 1007916, i32 513831, i32 1063497, i32 462436, i32 1733945, i32 2405051, i32 1560509, i32 2164489, i32 1425408, i32 1977098, i32 1235791, i32 1553396, i32 1733945, i32 1560509, i32 1463267, i32 1725600, i32 931031, i32 1475859, i32 623806, i32 865244, i32 1390229, i32 1251173, i32 1027662, i32 892979, i32 2181601, i32 1963389, i32 2038904, i32 1767003, i32 1818624, i32 1313028, i32 1428884, i32 1061982, i32 904430, i32 433952, i32 731506, i32 362264, i32 1010833, i32 794206, i32 759416, i32 735182, i32 691022, i32 352280, i32 506402, i32 310542], [64 x i32] [i32 1114112, i32 1545318, i32 2124812, i32 2947199, i32 1455658, i32 1555693, i32 3280964, i32 2725652, i32 1114112, i32 1039481, i32 2511141, i32 1669454, i32 829061, i32 422651, i32 1149940, i32 719469, i32 2365444, i32 2072961, i32 2783872, i32 2187274, i32 1427881, i32 727927, i32 1506620, i32 655117, i32 2456422, i32 3407155, i32 2210722, i32 3066359, i32 2019328, i32 2800889, i32 1750704, i32 2200644, i32 2456422, i32 2210722, i32 2072961, i32 2444600, i32 1318960, i32 2090800, i32 883726, i32 1225763, i32 1969490, i32 1772495, i32 1455854, i32 1265054, i32 3090601, i32 2781467, i32 2888447, i32 2503254, i32 2576384, i32 1860123, i32 2024252, i32 1504475, i32 1281275, i32 614766, i32 1036300, i32 513207, i32 1432014, i32 1125126, i32 1075840, i32 1041508, i32 978948, i32 499063, i32 717403, i32 439935], [64 x i32] [i32 1441792, i32 1999823, i32 2749757, i32 3814022, i32 1883792, i32 2013250, i32 4245954, i32 3527315, i32 1441792, i32 1345210, i32 3249712, i32 2160470, i32 1072902, i32 546961, i32 1488158, i32 931078, i32 3061162, i32 2682656, i32 3602657, i32 2830590, i32 1847845, i32 942023, i32 1949744, i32 847799, i32 3178899, i32 4409260, i32 2860934, i32 3968229, i32 2613248, i32 3624679, i32 2265618, i32 2847892, i32 3178899, i32 2860934, i32 2682656, i32 3163600, i32 1706889, i32 2705741, i32 1143645, i32 1586281, i32 2548752, i32 2293817, i32 1884047, i32 1637129, i32 3999601, i32 3599546, i32 3737990, i32 3239506, i32 3334144, i32 2407219, i32 2619620, i32 1946967, i32 1658121, i32 795579, i32 1341094, i32 664150, i32 1853194, i32 1456045, i32 1392263, i32 1347834, i32 1266873, i32 645846, i32 928404, i32 569328], [64 x i32] [i32 1835008, i32 2545229, i32 3499690, i32 4854210, i32 2397554, i32 2562318, i32 5403941, i32 4489310, i32 1835008, i32 1712086, i32 4135998, i32 2749689, i32 1365511, i32 696132, i32 1894019, i32 1185008, i32 3896025, i32 3414289, i32 4585200, i32 3602569, i32 2351803, i32 1198939, i32 2481492, i32 1079017, i32 4045872, i32 5611785, i32 3641188, i32 5050473, i32 3325952, i32 4613228, i32 2883513, i32 3624590, i32 4045872, i32 3641188, i32 3414289, i32 4026400, i32 2172405, i32 3443670, i32 1455548, i32 2018903, i32 3243867, i32 2919403, i32 2397878, i32 2083618, i32 5090401, i32 4581240, i32 4757442, i32 4123007, i32 4243456, i32 3063733, i32 3334062, i32 2477958, i32 2110336, i32 1012555, i32 1706847, i32 845282, i32 2358611, i32 1853148, i32 1771972, i32 1715425, i32 1612384, i32 821986, i32 1181605, i32 724599], [64 x i32] [i32 2228224, i32 3090636, i32 4249624, i32 5894398, i32 2911315, i32 3111386, i32 6561929, i32 5451305, i32 2228224, i32 2078961, i32 5022283, i32 3338908, i32 1658121, i32 845303, i32 2299880, i32 1438939, i32 4730887, i32 4145923, i32 5567743, i32 4374548, i32 2855761, i32 1455854, i32 3013241, i32 1310234, i32 4912844, i32 6814311, i32 4421443, i32 6132718, i32 4038656, i32 5601777, i32 3501409, i32 4401288, i32 4912844, i32 4421443, i32 4145923, i32 4889200, i32 2637920, i32 4181600, i32 1767451, i32 2451525, i32 3938981, i32 3544989, i32 2911709, i32 2530108, i32 6181202, i32 5562935, i32 5776894, i32 5006509, i32 5152768, i32 3720247, i32 4048504, i32 3008949, i32 2562551, i32 1229531, i32 2072600, i32 1026414, i32 2864027, i32 2250252, i32 2151680, i32 2083016, i32 1957895, i32 998126, i32 1434807, i32 879870], [64 x i32] [i32 2883584, i32 3999646, i32 5499513, i32 7628044, i32 3767584, i32 4026499, i32 8491907, i32 7054629, i32 2883584, i32 2690421, i32 6499425, i32 4320940, i32 2145804, i32 1093921, i32 2976315, i32 1862156, i32 6122324, i32 5365312, i32 7205314, i32 5661179, i32 3695691, i32 1884047, i32 3899488, i32 1695597, i32 6357798, i32 8818519, i32 5721867, i32 7936458, i32 5226496, i32 7249358, i32 4531235, i32 5695784, i32 6357798, i32 5721867, i32 5365312, i32 6327200, i32 3413779, i32 5411482, i32 2287290, i32 3172562, i32 5097505, i32 4587633, i32 3768094, i32 3274257, i32 7999202, i32 7199092, i32 7475980, i32 6479011, i32 6668288, i32 4814437, i32 5239241, i32 3893934, i32 3316242, i32 1591158, i32 2682189, i32 1328300, i32 3706388, i32 2912090, i32 2784527, i32 2695668, i32 2533747, i32 1291693, i32 1856808, i32 1138655]], align 16
@.str.4 = private unnamed_addr constant [31 x i8] c"Incorrect 16x16 block type %d\0A\00", align 1
@bink_inter_quant = internal constant [16 x [64 x i32]] [[64 x i32] [i32 65536, i32 96582, i32 107945, i32 149724, i32 90979, i32 86695, i32 148460, i32 133610, i32 73728, i32 57928, i32 113626, i32 89276, i32 42118, i32 21472, i32 61494, i32 32917, i32 112385, i32 92505, i32 110777, i32 87037, i32 63719, i32 32484, i32 59952, i32 30563, i32 112385, i32 155883, i32 105961, i32 146971, i32 94208, i32 130670, i32 77237, i32 107131, i32 123089, i32 110777, i32 100915, i32 94605, i32 55418, i32 83017, i32 31642, i32 43889, i32 78200, i32 70378, i32 44296, i32 39865, i32 146839, i32 132151, i32 138444, i32 124596, i32 98304, i32 77237, i32 83673, i32 65742, i32 53202, i32 28252, i32 45284, i32 23085, i32 59852, i32 47025, i32 33903, i32 27525, i32 33591, i32 17125, i32 18960, i32 10289], [64 x i32] [i32 87381, i32 128776, i32 143927, i32 199632, i32 121305, i32 115593, i32 197947, i32 178147, i32 98304, i32 77237, i32 151502, i32 119034, i32 56157, i32 28629, i32 81992, i32 43889, i32 149847, i32 123340, i32 147703, i32 116049, i32 84958, i32 43311, i32 79936, i32 40751, i32 149847, i32 207844, i32 141281, i32 195962, i32 125611, i32 174227, i32 102983, i32 142841, i32 164118, i32 147703, i32 134553, i32 126140, i32 73891, i32 110689, i32 42190, i32 58519, i32 104267, i32 93838, i32 59061, i32 53154, i32 195785, i32 176202, i32 184592, i32 166129, i32 131072, i32 102983, i32 111564, i32 87656, i32 70936, i32 37669, i32 60378, i32 30781, i32 79803, i32 62701, i32 45203, i32 36700, i32 44788, i32 22833, i32 25279, i32 13719], [64 x i32] [i32 109227, i32 160971, i32 179908, i32 249540, i32 151631, i32 144492, i32 247433, i32 222684, i32 122880, i32 96546, i32 189377, i32 148793, i32 70197, i32 35786, i32 102490, i32 54861, i32 187309, i32 154176, i32 184628, i32 145061, i32 106198, i32 54139, i32 99920, i32 50939, i32 187309, i32 259805, i32 176601, i32 244952, i32 157013, i32 217784, i32 128728, i32 178551, i32 205148, i32 184628, i32 168192, i32 157675, i32 92364, i32 138362, i32 52737, i32 73149, i32 130334, i32 117297, i32 73826, i32 66442, i32 244731, i32 220252, i32 230740, i32 207661, i32 163840, i32 128728, i32 139456, i32 109570, i32 88670, i32 47087, i32 75473, i32 38476, i32 99753, i32 78376, i32 56504, i32 45875, i32 55986, i32 28541, i32 31599, i32 17148], [64 x i32] [i32 131072, i32 193165, i32 215890, i32 299448, i32 181957, i32 173390, i32 296920, i32 267221, i32 147456, i32 115855, i32 227253, i32 178551, i32 84236, i32 42943, i32 122988, i32 65834, i32 224771, i32 185011, i32 221554, i32 174074, i32 127438, i32 64967, i32 119904, i32 61127, i32 224771, i32 311766, i32 211921, i32 293943, i32 188416, i32 261341, i32 154474, i32 214261, i32 246177, i32 221554, i32 201830, i32 189211, i32 110837, i32 166034, i32 63285, i32 87778, i32 156401, i32 140757, i32 88592, i32 79730, i32 293677, i32 264302, i32 276888, i32 249193, i32 196608, i32 154474, i32 167347, i32 131483, i32 106403, i32 56504, i32 90567, i32 46171, i32 119704, i32 94051, i32 67805, i32 55050, i32 67183, i32 34249, i32 37919, i32 20578], [64 x i32] [i32 174763, i32 257553, i32 287853, i32 399264, i32 242610, i32 231187, i32 395893, i32 356294, i32 196608, i32 154474, i32 303003, i32 238068, i32 112315, i32 57258, i32 163984, i32 87778, i32 299694, i32 246681, i32 295405, i32 232098, i32 169917, i32 86623, i32 159872, i32 81502, i32 299694, i32 415688, i32 282561, i32 391924, i32 251221, i32 348454, i32 205965, i32 285682, i32 328237, i32 295405, i32 269107, i32 252281, i32 147783, i32 221379, i32 84380, i32 117038, i32 208534, i32 187676, i32 118122, i32 106307, i32 391569, i32 352403, i32 369184, i32 332257, i32 262144, i32 205965, i32 223129, i32 175311, i32 141871, i32 75339, i32 120757, i32 61561, i32 159605, i32 125401, i32 90407, i32 73400, i32 89577, i32 45666, i32 50559, i32 27437], [64 x i32] [i32 229376, i32 338038, i32 377807, i32 524034, i32 318425, i32 303432, i32 519610, i32 467636, i32 258048, i32 202747, i32 397692, i32 312465, i32 147413, i32 75151, i32 215229, i32 115209, i32 393349, i32 323769, i32 387719, i32 304629, i32 223016, i32 113692, i32 209832, i32 106971, i32 393349, i32 545590, i32 370862, i32 514400, i32 329728, i32 457346, i32 270329, i32 374958, i32 430810, i32 387719, i32 353202, i32 331118, i32 193965, i32 290560, i32 110748, i32 153612, i32 273701, i32 246325, i32 155035, i32 139528, i32 513935, i32 462529, i32 484554, i32 436087, i32 344064, i32 270329, i32 292857, i32 230096, i32 186206, i32 98882, i32 158493, i32 80799, i32 209482, i32 164589, i32 118659, i32 96337, i32 117570, i32 59937, i32 66358, i32 36012], [64 x i32] [i32 262144, i32 386329, i32 431780, i32 598896, i32 363914, i32 346780, i32 593840, i32 534442, i32 294912, i32 231711, i32 454505, i32 357102, i32 168472, i32 85886, i32 245976, i32 131668, i32 449541, i32 370021, i32 443108, i32 348147, i32 254875, i32 129934, i32 239808, i32 122253, i32 449541, i32 623532, i32 423842, i32 587886, i32 376832, i32 522681, i32 308948, i32 428523, i32 492355, i32 443108, i32 403660, i32 378421, i32 221674, i32 332068, i32 126569, i32 175557, i32 312801, i32 281514, i32 177183, i32 159461, i32 587354, i32 528605, i32 553776, i32 498385, i32 393216, i32 308948, i32 334693, i32 262967, i32 212807, i32 113008, i32 181135, i32 92342, i32 239408, i32 188102, i32 135610, i32 110100, i32 134365, i32 68499, i32 75838, i32 41156], [64 x i32] [i32 327680, i32 482912, i32 539725, i32 748620, i32 454893, i32 433475, i32 742300, i32 668052, i32 368640, i32 289639, i32 568132, i32 446378, i32 210590, i32 107358, i32 307471, i32 164584, i32 561927, i32 462527, i32 553884, i32 435184, i32 318594, i32 162418, i32 299760, i32 152816, i32 561927, i32 779415, i32 529803, i32 734857, i32 471040, i32 653351, i32 386185, i32 535654, i32 615443, i32 553884, i32 504575, i32 473026, i32 277092, i32 415085, i32 158212, i32 219446, i32 391002, i32 351892, i32 221479, i32 199326, i32 734193, i32 660756, i32 692220, i32 622982, i32 491520, i32 386185, i32 418367, i32 328709, i32 266009, i32 141260, i32 226419, i32 115427, i32 299260, i32 235127, i32 169513, i32 137625, i32 167957, i32 85624, i32 94798, i32 51445], [64 x i32] [i32 393216, i32 579494, i32 647670, i32 898344, i32 545872, i32 520170, i32 890760, i32 801662, i32 442368, i32 347566, i32 681758, i32 535654, i32 252708, i32 128830, i32 368965, i32 197501, i32 674312, i32 555032, i32 664661, i32 522221, i32 382313, i32 194901, i32 359712, i32 183380, i32 674312, i32 935298, i32 635763, i32 881829, i32 565248, i32 784022, i32 463422, i32 642784, i32 738532, i32 664661, i32 605490, i32 567632, i32 332511, i32 498102, i32 189854, i32 263335, i32 469202, i32 422271, i32 265775, i32 239191, i32 881031, i32 792907, i32 830664, i32 747578, i32 589824, i32 463422, i32 502040, i32 394450, i32 319210, i32 169513, i32 271702, i32 138513, i32 359112, i32 282152, i32 203415, i32 165150, i32 201548, i32 102748, i32 113757, i32 61734], [64 x i32] [i32 524288, i32 772659, i32 863560, i32 1197792, i32 727829, i32 693560, i32 1187679, i32 1068883, i32 589824, i32 463422, i32 909010, i32 714205, i32 336944, i32 171773, i32 491953, i32 263335, i32 899083, i32 740043, i32 886215, i32 696295, i32 509750, i32 259869, i32 479616, i32 244506, i32 899083, i32 1247063, i32 847684, i32 1175772, i32 753664, i32 1045362, i32 617896, i32 857046, i32 984710, i32 886215, i32 807320, i32 756842, i32 443348, i32 664136, i32 253139, i32 351114, i32 625603, i32 563028, i32 354366, i32 318921, i32 1174708, i32 1057209, i32 1107553, i32 996771, i32 786432, i32 617896, i32 669387, i32 525934, i32 425614, i32 226017, i32 362270, i32 184683, i32 478816, i32 376203, i32 271220, i32 220200, i32 268731, i32 136998, i32 151676, i32 82312], [64 x i32] [i32 786432, i32 1158988, i32 1295340, i32 1796688, i32 1091743, i32 1040340, i32 1781519, i32 1603325, i32 884736, i32 695133, i32 1363516, i32 1071307, i32 505417, i32 257659, i32 737929, i32 395003, i32 1348624, i32 1110064, i32 1329323, i32 1044442, i32 764626, i32 389803, i32 719424, i32 366759, i32 1348624, i32 1870595, i32 1271526, i32 1763657, i32 1130496, i32 1568043, i32 926844, i32 1285569, i32 1477064, i32 1329323, i32 1210979, i32 1135263, i32 665022, i32 996205, i32 379708, i32 526670, i32 938404, i32 844542, i32 531549, i32 478382, i32 1762062, i32 1585814, i32 1661329, i32 1495156, i32 1179648, i32 926844, i32 1004080, i32 788901, i32 638421, i32 339025, i32 543404, i32 277025, i32 718224, i32 564305, i32 406830, i32 330299, i32 403096, i32 205497, i32 227514, i32 123469], [64 x i32] [i32 1114112, i32 1641900, i32 1835065, i32 2545308, i32 1546636, i32 1473814, i32 2523819, i32 2271377, i32 1253376, i32 984771, i32 1931647, i32 1517686, i32 716007, i32 365017, i32 1045400, i32 559587, i32 1910551, i32 1572591, i32 1883207, i32 1479626, i32 1083220, i32 552221, i32 1019184, i32 519576, i32 1910551, i32 2650010, i32 1801329, i32 2498515, i32 1601536, i32 2221394, i32 1313028, i32 1821223, i32 2092508, i32 1883207, i32 1715554, i32 1608290, i32 942114, i32 1411290, i32 537920, i32 746116, i32 1329406, i32 1196434, i32 753028, i32 677707, i32 2496255, i32 2246570, i32 2353549, i32 2118138, i32 1671168, i32 1313028, i32 1422447, i32 1117610, i32 904430, i32 480286, i32 769823, i32 392452, i32 1017483, i32 799432, i32 576343, i32 467924, i32 571053, i32 291120, i32 322312, i32 174914], [64 x i32] [i32 1441792, i32 2124812, i32 2374790, i32 3293928, i32 2001529, i32 1907289, i32 3266118, i32 2939429, i32 1622016, i32 1274410, i32 2499779, i32 1964064, i32 926597, i32 472375, i32 1352871, i32 724172, i32 2472477, i32 2035118, i32 2437092, i32 1914811, i32 1401814, i32 714638, i32 1318945, i32 672392, i32 2472477, i32 3429424, i32 2331131, i32 3233372, i32 2072576, i32 2874746, i32 1699213, i32 2356876, i32 2707951, i32 2437092, i32 2220129, i32 2081316, i32 1219207, i32 1826375, i32 696132, i32 965562, i32 1720408, i32 1548326, i32 974507, i32 877033, i32 3230447, i32 2907326, i32 3045770, i32 2741120, i32 2162688, i32 1699213, i32 1840814, i32 1446318, i32 1170438, i32 621546, i32 996241, i32 507879, i32 1316743, i32 1034558, i32 745855, i32 605549, i32 739009, i32 376744, i32 417109, i32 226359], [64 x i32] [i32 1835008, i32 2704306, i32 3022460, i32 4192272, i32 2547401, i32 2427459, i32 4156878, i32 3741091, i32 2064384, i32 1621976, i32 3181537, i32 2499717, i32 1179305, i32 601205, i32 1721835, i32 921673, i32 3146789, i32 2590150, i32 3101753, i32 2437032, i32 1784127, i32 909540, i32 1678657, i32 855772, i32 3146789, i32 4364722, i32 2966894, i32 4115200, i32 2637824, i32 3658767, i32 2162635, i32 2999661, i32 3446483, i32 3101753, i32 2825619, i32 2648948, i32 1551718, i32 2324478, i32 885986, i32 1228898, i32 2189610, i32 1970597, i32 1240282, i32 1116224, i32 4111478, i32 3700232, i32 3876434, i32 3488698, i32 2752512, i32 2162635, i32 2342854, i32 1840769, i32 1489649, i32 791059, i32 1267944, i32 646392, i32 1675855, i32 1316711, i32 949270, i32 770698, i32 940557, i32 479492, i32 530866, i32 288093], [64 x i32] [i32 2228224, i32 3283800, i32 3670130, i32 5090616, i32 3093272, i32 2947629, i32 5047638, i32 4542754, i32 2506752, i32 1969542, i32 3863294, i32 3035371, i32 1432014, i32 730034, i32 2090800, i32 1119175, i32 3821101, i32 3145183, i32 3766414, i32 2959253, i32 2166440, i32 1104441, i32 2038369, i32 1039151, i32 3821101, i32 5300019, i32 3602657, i32 4997029, i32 3203072, i32 4442789, i32 2626057, i32 3642445, i32 4185015, i32 3766414, i32 3431108, i32 3216579, i32 1884228, i32 2822580, i32 1075840, i32 1492233, i32 2658812, i32 2392868, i32 1506056, i32 1355415, i32 4992509, i32 4493140, i32 4707099, i32 4236277, i32 3342336, i32 2626057, i32 2844895, i32 2235219, i32 1808859, i32 960571, i32 1539646, i32 784905, i32 2034967, i32 1598863, i32 1152686, i32 935848, i32 1142106, i32 582240, i32 644623, i32 349828], [64 x i32] [i32 2883584, i32 4249624, i32 4749580, i32 6587856, i32 4003058, i32 3814578, i32 6532237, i32 5878858, i32 3244032, i32 2548820, i32 4999558, i32 3928127, i32 1853194, i32 944750, i32 2705741, i32 1448344, i32 4944954, i32 4070236, i32 4874183, i32 3829621, i32 2803628, i32 1429277, i32 2637889, i32 1344784, i32 4944954, i32 6858849, i32 4662262, i32 6466744, i32 4145152, i32 5749491, i32 3398426, i32 4713753, i32 5415902, i32 4874183, i32 4440258, i32 4162632, i32 2438413, i32 3652750, i32 1392263, i32 1931125, i32 3440816, i32 3096652, i32 1949014, i32 1754066, i32 6460894, i32 5814651, i32 6091539, i32 5482241, i32 4325376, i32 3398426, i32 3681628, i32 2892637, i32 2340877, i32 1243092, i32 1992483, i32 1015759, i32 2633486, i32 2069117, i32 1491711, i32 1211097, i32 1478019, i32 753488, i32 834218, i32 452718]], align 16
@.str.5 = private unnamed_addr constant [23 x i8] c"Unknown block type %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Too many block type values\0A\00", align 1
@bink_rlelens = internal constant [4 x i8] c"\04\08\0C ", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Too many color values\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Too many pattern values\0A\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Too many motion values\0A\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"DC value went out of bounds: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Run value went out of bounds\0A\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"quant_index %d out of range\0A\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"Copy out of bounds @%d, %d\0A\00", align 1
@binkb_runbits = internal constant [64 x i8] c"\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\04\04\04\04\04\04\04\04\03\03\03\03\02\02\01\00", align 16
@.str.14 = private unnamed_addr constant [34 x i8] c"Reference block is out of bounds\0A\00", align 1
@binkb_bundle_sizes = internal constant [10 x i32] [i32 4, i32 8, i32 8, i32 5, i32 5, i32 11, i32 11, i32 4, i32 4, i32 7], align 16
@binkb_bundle_signed = internal constant [10 x i32] [i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1671 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca %struct.BinkContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %flags = alloca i32, align 4
  %maxbits = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1734, metadata !1735), !dbg !1736
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c, metadata !1737, metadata !1735), !dbg !1822
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1823
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1824
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1824
  %2 = bitcast i8* %1 to %struct.BinkContext*, !dbg !1823
  store %struct.BinkContext* %2, %struct.BinkContext** %c, align 8, !dbg !1822
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1825, metadata !1735), !dbg !1826
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1827, metadata !1735), !dbg !1828
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1829, metadata !1735), !dbg !1830
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1831
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 5, !dbg !1832
  %4 = load i32, i32* %codec_tag, align 4, !dbg !1832
  %shr = lshr i32 %4, 24, !dbg !1833
  %5 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1834
  %version = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %5, i32 0, i32 5, !dbg !1835
  store i32 %shr, i32* %version, align 8, !dbg !1836
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1837
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 16, !dbg !1839
  %7 = load i32, i32* %extradata_size, align 8, !dbg !1839
  %cmp = icmp slt i32 %7, 4, !dbg !1840
  br i1 %cmp, label %if.then, label %if.end, !dbg !1841

if.then:                                          ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1842
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !1842
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0)), !dbg !1844
  store i32 -1094995529, i32* %retval, align 4, !dbg !1845
  br label %return, !dbg !1845

if.end:                                           ; preds = %entry
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1846
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 15, !dbg !1847
  %11 = load i8*, i8** %extradata, align 8, !dbg !1847
  %12 = bitcast i8* %11 to %union.unaligned_32*, !dbg !1848
  %l = bitcast %union.unaligned_32* %12 to i32*, !dbg !1848
  %13 = load i32, i32* %l, align 1, !dbg !1848
  store i32 %13, i32* %flags, align 4, !dbg !1849
  %14 = load i32, i32* %flags, align 4, !dbg !1850
  %and = and i32 %14, 1048576, !dbg !1851
  %15 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1852
  %has_alpha = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %15, i32 0, i32 6, !dbg !1853
  store i32 %and, i32* %has_alpha, align 4, !dbg !1854
  %16 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1855
  %version1 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %16, i32 0, i32 5, !dbg !1856
  %17 = load i32, i32* %version1, align 8, !dbg !1856
  %cmp2 = icmp sge i32 %17, 104, !dbg !1857
  %conv = zext i1 %cmp2 to i32, !dbg !1857
  %18 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1858
  %swap_planes = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %18, i32 0, i32 7, !dbg !1859
  store i32 %conv, i32* %swap_planes, align 8, !dbg !1860
  %19 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 15, i32 1), align 8, !dbg !1861
  %tobool = icmp ne [2 x i16]* %19, null, !dbg !1863
  br i1 %tobool, label %if.end19, label %if.then3, !dbg !1864

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !1865
  br label %for.cond, !dbg !1868

for.cond:                                         ; preds = %for.inc, %if.then3
  %20 = load i32, i32* %i, align 4, !dbg !1869
  %cmp4 = icmp slt i32 %20, 16, !dbg !1872
  br i1 %cmp4, label %for.body, label %for.end, !dbg !1873

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %maxbits, metadata !1874, metadata !1735), !dbg !1876
  %21 = load i32, i32* %i, align 4, !dbg !1877
  %idxprom = sext i32 %21 to i64, !dbg !1878
  %arrayidx = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @bink_tree_lens, i64 0, i64 %idxprom, !dbg !1878
  %arrayidx6 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx, i64 0, i64 15, !dbg !1878
  %22 = load i8, i8* %arrayidx6, align 1, !dbg !1878
  %conv7 = zext i8 %22 to i32, !dbg !1878
  store i32 %conv7, i32* %maxbits, align 4, !dbg !1876
  %23 = load i32, i32* %i, align 4, !dbg !1879
  %mul = mul nsw i32 %23, 128, !dbg !1880
  %idx.ext = sext i32 %mul to i64, !dbg !1881
  %add.ptr = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([2048 x [2 x i16]], [2048 x [2 x i16]]* @decode_init.table, i32 0, i32 0), i64 %idx.ext, !dbg !1881
  %24 = load i32, i32* %i, align 4, !dbg !1882
  %idxprom8 = sext i32 %24 to i64, !dbg !1883
  %arrayidx9 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom8, !dbg !1883
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx9, i32 0, i32 1, !dbg !1884
  store [2 x i16]* %add.ptr, [2 x i16]** %table, align 8, !dbg !1885
  %25 = load i32, i32* %maxbits, align 4, !dbg !1886
  %shl = shl i32 1, %25, !dbg !1887
  %26 = load i32, i32* %i, align 4, !dbg !1888
  %idxprom10 = sext i32 %26 to i64, !dbg !1889
  %arrayidx11 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom10, !dbg !1889
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx11, i32 0, i32 3, !dbg !1890
  store i32 %shl, i32* %table_allocated, align 4, !dbg !1891
  %27 = load i32, i32* %i, align 4, !dbg !1892
  %idxprom12 = sext i32 %27 to i64, !dbg !1893
  %arrayidx13 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom12, !dbg !1893
  %28 = load i32, i32* %maxbits, align 4, !dbg !1894
  %29 = load i32, i32* %i, align 4, !dbg !1895
  %idxprom14 = sext i32 %29 to i64, !dbg !1896
  %arrayidx15 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @bink_tree_lens, i64 0, i64 %idxprom14, !dbg !1896
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx15, i32 0, i32 0, !dbg !1896
  %30 = load i32, i32* %i, align 4, !dbg !1897
  %idxprom16 = sext i32 %30 to i64, !dbg !1898
  %arrayidx17 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @bink_tree_bits, i64 0, i64 %idxprom16, !dbg !1898
  %arraydecay18 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx17, i32 0, i32 0, !dbg !1898
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx13, i32 %28, i32 16, i8* %arraydecay, i32 1, i32 1, i8* %arraydecay18, i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !1899
  br label %for.inc, !dbg !1900

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !1901
  %inc = add nsw i32 %31, 1, !dbg !1901
  store i32 %inc, i32* %i, align 4, !dbg !1901
  br label %for.cond, !dbg !1903, !llvm.loop !1904

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !1906

if.end19:                                         ; preds = %for.end, %if.end
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1907
  %33 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1908
  %avctx20 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %33, i32 0, i32 0, !dbg !1909
  store %struct.AVCodecContext* %32, %struct.AVCodecContext** %avctx20, align 8, !dbg !1910
  %call21 = call %struct.AVFrame* @av_frame_alloc(), !dbg !1911
  %34 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1912
  %last = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %34, i32 0, i32 4, !dbg !1913
  store %struct.AVFrame* %call21, %struct.AVFrame** %last, align 8, !dbg !1914
  %35 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1915
  %last22 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %35, i32 0, i32 4, !dbg !1917
  %36 = load %struct.AVFrame*, %struct.AVFrame** %last22, align 8, !dbg !1917
  %tobool23 = icmp ne %struct.AVFrame* %36, null, !dbg !1915
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !1918

if.then24:                                        ; preds = %if.end19
  store i32 -12, i32* %retval, align 4, !dbg !1919
  br label %return, !dbg !1919

if.end25:                                         ; preds = %if.end19
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1920
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 20, !dbg !1922
  %38 = load i32, i32* %width, align 4, !dbg !1922
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1923
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 21, !dbg !1924
  %40 = load i32, i32* %height, align 8, !dbg !1924
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1925
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !1925
  %call26 = call i32 @av_image_check_size(i32 %38, i32 %40, i32 0, i8* %42), !dbg !1926
  store i32 %call26, i32* %ret, align 4, !dbg !1927
  %cmp27 = icmp slt i32 %call26, 0, !dbg !1928
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !1929

if.then29:                                        ; preds = %if.end25
  %43 = load i32, i32* %ret, align 4, !dbg !1930
  store i32 %43, i32* %retval, align 4, !dbg !1931
  br label %return, !dbg !1931

if.end30:                                         ; preds = %if.end25
  %44 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1932
  %has_alpha31 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %44, i32 0, i32 6, !dbg !1933
  %45 = load i32, i32* %has_alpha31, align 4, !dbg !1933
  %tobool32 = icmp ne i32 %45, 0, !dbg !1932
  %cond = select i1 %tobool32, i32 33, i32 0, !dbg !1932
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1934
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 25, !dbg !1935
  store i32 %cond, i32* %pix_fmt, align 8, !dbg !1936
  %47 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1937
  %version33 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %47, i32 0, i32 5, !dbg !1938
  %48 = load i32, i32* %version33, align 8, !dbg !1938
  %cmp34 = icmp eq i32 %48, 107, !dbg !1939
  %cond36 = select i1 %cmp34, i32 2, i32 1, !dbg !1937
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1940
  %color_range = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 78, !dbg !1941
  store i32 %cond36, i32* %color_range, align 8, !dbg !1942
  %50 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1943
  %bdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %50, i32 0, i32 1, !dbg !1944
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1945
  call void @ff_blockdsp_init(%struct.BlockDSPContext* %bdsp, %struct.AVCodecContext* %51), !dbg !1946
  %52 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1947
  %hdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %52, i32 0, i32 2, !dbg !1948
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1949
  %flags37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 13, !dbg !1950
  %54 = load i32, i32* %flags37, align 4, !dbg !1950
  call void @ff_hpeldsp_init(%struct.HpelDSPContext* %hdsp, i32 %54), !dbg !1951
  %55 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1952
  %binkdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %55, i32 0, i32 3, !dbg !1953
  call void @ff_binkdsp_init(%struct.BinkDSPContext* %binkdsp), !dbg !1954
  %56 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1955
  %call38 = call i32 @init_bundles(%struct.BinkContext* %56), !dbg !1957
  store i32 %call38, i32* %ret, align 4, !dbg !1958
  %cmp39 = icmp slt i32 %call38, 0, !dbg !1959
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !1960

if.then41:                                        ; preds = %if.end30
  %57 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1961
  call void @free_bundles(%struct.BinkContext* %57), !dbg !1963
  %58 = load i32, i32* %ret, align 4, !dbg !1964
  store i32 %58, i32* %retval, align 4, !dbg !1965
  br label %return, !dbg !1965

if.end42:                                         ; preds = %if.end30
  %59 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !1966
  %version43 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %59, i32 0, i32 5, !dbg !1968
  %60 = load i32, i32* %version43, align 8, !dbg !1968
  %cmp44 = icmp eq i32 %60, 98, !dbg !1969
  br i1 %cmp44, label %if.then46, label %if.end50, !dbg !1970

if.then46:                                        ; preds = %if.end42
  %61 = load i32, i32* @decode_init.binkb_initialised, align 4, !dbg !1971
  %tobool47 = icmp ne i32 %61, 0, !dbg !1971
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !1974

if.then48:                                        ; preds = %if.then46
  call void @binkb_calc_quant(), !dbg !1975
  store i32 1, i32* @decode_init.binkb_initialised, align 4, !dbg !1977
  br label %if.end49, !dbg !1978

if.end49:                                         ; preds = %if.then48, %if.then46
  br label %if.end50, !dbg !1979

if.end50:                                         ; preds = %if.end49, %if.end42
  store i32 0, i32* %retval, align 4, !dbg !1980
  br label %return, !dbg !1980

return:                                           ; preds = %if.end50, %if.then41, %if.then29, %if.then24, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !1981
  ret i32 %62, !dbg !1981
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %pkt) #1 !dbg !1982 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %c = alloca %struct.BinkContext*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %plane = alloca i32, align 4
  %plane_idx = alloca i32, align 4
  %ret = alloca i32, align 4
  %bits_count = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1983, metadata !1735), !dbg !1984
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1985, metadata !1735), !dbg !1986
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !1987, metadata !1735), !dbg !1988
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !1989, metadata !1735), !dbg !1990
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c, metadata !1991, metadata !1735), !dbg !1992
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1993
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1994
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1994
  %2 = bitcast i8* %1 to %struct.BinkContext*, !dbg !1993
  store %struct.BinkContext* %2, %struct.BinkContext** %c, align 8, !dbg !1992
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !1995, metadata !1735), !dbg !1996
  %3 = load i8*, i8** %data.addr, align 8, !dbg !1997
  %4 = bitcast i8* %3 to %struct.AVFrame*, !dbg !1997
  store %struct.AVFrame* %4, %struct.AVFrame** %frame, align 8, !dbg !1996
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !1998, metadata !1735), !dbg !2008
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !2009, metadata !1735), !dbg !2010
  call void @llvm.dbg.declare(metadata i32* %plane_idx, metadata !2011, metadata !1735), !dbg !2012
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2013, metadata !1735), !dbg !2014
  call void @llvm.dbg.declare(metadata i32* %bits_count, metadata !2015, metadata !1735), !dbg !2016
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2017
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !2018
  %6 = load i32, i32* %size, align 8, !dbg !2018
  %shl = shl i32 %6, 3, !dbg !2019
  store i32 %shl, i32* %bits_count, align 4, !dbg !2016
  %7 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2020
  %version = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %7, i32 0, i32 5, !dbg !2022
  %8 = load i32, i32* %version, align 8, !dbg !2022
  %cmp = icmp sgt i32 %8, 98, !dbg !2023
  br i1 %cmp, label %if.then, label %if.else, !dbg !2024

if.then:                                          ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2025
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2028
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %9, %struct.AVFrame* %10, i32 1), !dbg !2029
  store i32 %call, i32* %ret, align 4, !dbg !2030
  %cmp1 = icmp slt i32 %call, 0, !dbg !2031
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2032

if.then2:                                         ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !2033
  store i32 %11, i32* %retval, align 4, !dbg !2034
  br label %return, !dbg !2034

if.end:                                           ; preds = %if.then
  br label %if.end12, !dbg !2035

if.else:                                          ; preds = %entry
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2036
  %13 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2039
  %last = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %13, i32 0, i32 4, !dbg !2040
  %14 = load %struct.AVFrame*, %struct.AVFrame** %last, align 8, !dbg !2040
  %call3 = call i32 @ff_reget_buffer(%struct.AVCodecContext* %12, %struct.AVFrame* %14), !dbg !2041
  store i32 %call3, i32* %ret, align 4, !dbg !2042
  %cmp4 = icmp slt i32 %call3, 0, !dbg !2043
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2044

if.then5:                                         ; preds = %if.else
  %15 = load i32, i32* %ret, align 4, !dbg !2045
  store i32 %15, i32* %retval, align 4, !dbg !2046
  br label %return, !dbg !2046

if.end6:                                          ; preds = %if.else
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2047
  %17 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2049
  %last7 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %17, i32 0, i32 4, !dbg !2050
  %18 = load %struct.AVFrame*, %struct.AVFrame** %last7, align 8, !dbg !2050
  %call8 = call i32 @av_frame_ref(%struct.AVFrame* %16, %struct.AVFrame* %18), !dbg !2051
  store i32 %call8, i32* %ret, align 4, !dbg !2052
  %cmp9 = icmp slt i32 %call8, 0, !dbg !2053
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !2054

if.then10:                                        ; preds = %if.end6
  %19 = load i32, i32* %ret, align 4, !dbg !2055
  store i32 %19, i32* %retval, align 4, !dbg !2056
  br label %return, !dbg !2056

if.end11:                                         ; preds = %if.end6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2057
  %data13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 3, !dbg !2058
  %21 = load i8*, i8** %data13, align 8, !dbg !2058
  %22 = load i32, i32* %bits_count, align 4, !dbg !2059
  %call14 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %21, i32 %22), !dbg !2060
  %23 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2061
  %has_alpha = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %23, i32 0, i32 6, !dbg !2063
  %24 = load i32, i32* %has_alpha, align 4, !dbg !2063
  %tobool = icmp ne i32 %24, 0, !dbg !2061
  br i1 %tobool, label %if.then15, label %if.end24, !dbg !2064

if.then15:                                        ; preds = %if.end12
  %25 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2065
  %version16 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %25, i32 0, i32 5, !dbg !2068
  %26 = load i32, i32* %version16, align 8, !dbg !2068
  %cmp17 = icmp sge i32 %26, 105, !dbg !2069
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !2070

if.then18:                                        ; preds = %if.then15
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !2071
  br label %if.end19, !dbg !2071

if.end19:                                         ; preds = %if.then18, %if.then15
  %27 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2072
  %28 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2074
  %call20 = call i32 @bink_decode_plane(%struct.BinkContext* %27, %struct.AVFrame* %28, %struct.GetBitContext* %gb, i32 3, i32 0), !dbg !2075
  store i32 %call20, i32* %ret, align 4, !dbg !2076
  %cmp21 = icmp slt i32 %call20, 0, !dbg !2077
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !2078

if.then22:                                        ; preds = %if.end19
  %29 = load i32, i32* %ret, align 4, !dbg !2079
  store i32 %29, i32* %retval, align 4, !dbg !2080
  br label %return, !dbg !2080

if.end23:                                         ; preds = %if.end19
  br label %if.end24, !dbg !2081

if.end24:                                         ; preds = %if.end23, %if.end12
  %30 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2082
  %version25 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %30, i32 0, i32 5, !dbg !2084
  %31 = load i32, i32* %version25, align 8, !dbg !2084
  %cmp26 = icmp sge i32 %31, 105, !dbg !2085
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !2086

if.then27:                                        ; preds = %if.end24
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !2087
  br label %if.end28, !dbg !2087

if.end28:                                         ; preds = %if.then27, %if.end24
  %32 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2088
  %frame_num = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %32, i32 0, i32 8, !dbg !2089
  %33 = load i32, i32* %frame_num, align 4, !dbg !2090
  %inc = add i32 %33, 1, !dbg !2090
  store i32 %inc, i32* %frame_num, align 4, !dbg !2090
  store i32 0, i32* %plane, align 4, !dbg !2091
  br label %for.cond, !dbg !2093

for.cond:                                         ; preds = %for.inc, %if.end28
  %34 = load i32, i32* %plane, align 4, !dbg !2094
  %cmp29 = icmp slt i32 %34, 3, !dbg !2097
  br i1 %cmp29, label %for.body, label %for.end, !dbg !2098

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %plane, align 4, !dbg !2099
  %tobool30 = icmp ne i32 %35, 0, !dbg !2099
  br i1 %tobool30, label %lor.lhs.false, label %cond.true, !dbg !2101

lor.lhs.false:                                    ; preds = %for.body
  %36 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2102
  %swap_planes = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %36, i32 0, i32 7, !dbg !2104
  %37 = load i32, i32* %swap_planes, align 8, !dbg !2104
  %tobool31 = icmp ne i32 %37, 0, !dbg !2102
  br i1 %tobool31, label %cond.false, label %cond.true, !dbg !2105

cond.true:                                        ; preds = %lor.lhs.false, %for.body
  %38 = load i32, i32* %plane, align 4, !dbg !2106
  br label %cond.end, !dbg !2108

cond.false:                                       ; preds = %lor.lhs.false
  %39 = load i32, i32* %plane, align 4, !dbg !2109
  %xor = xor i32 %39, 3, !dbg !2111
  br label %cond.end, !dbg !2112

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %xor, %cond.false ], !dbg !2113
  store i32 %cond, i32* %plane_idx, align 4, !dbg !2115
  %40 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2116
  %version32 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %40, i32 0, i32 5, !dbg !2118
  %41 = load i32, i32* %version32, align 8, !dbg !2118
  %cmp33 = icmp sgt i32 %41, 98, !dbg !2119
  br i1 %cmp33, label %if.then34, label %if.else41, !dbg !2120

if.then34:                                        ; preds = %cond.end
  %42 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2121
  %43 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2124
  %44 = load i32, i32* %plane_idx, align 4, !dbg !2125
  %45 = load i32, i32* %plane, align 4, !dbg !2126
  %tobool35 = icmp ne i32 %45, 0, !dbg !2127
  %lnot = xor i1 %tobool35, true, !dbg !2127
  %lnot36 = xor i1 %lnot, true, !dbg !2128
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !2128
  %call37 = call i32 @bink_decode_plane(%struct.BinkContext* %42, %struct.AVFrame* %43, %struct.GetBitContext* %gb, i32 %44, i32 %lnot.ext), !dbg !2129
  store i32 %call37, i32* %ret, align 4, !dbg !2130
  %cmp38 = icmp slt i32 %call37, 0, !dbg !2131
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !2132

if.then39:                                        ; preds = %if.then34
  %46 = load i32, i32* %ret, align 4, !dbg !2133
  store i32 %46, i32* %retval, align 4, !dbg !2134
  br label %return, !dbg !2134

if.end40:                                         ; preds = %if.then34
  br label %if.end54, !dbg !2135

if.else41:                                        ; preds = %cond.end
  %47 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2136
  %48 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2139
  %49 = load i32, i32* %plane_idx, align 4, !dbg !2140
  %50 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2141
  %frame_num42 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %50, i32 0, i32 8, !dbg !2142
  %51 = load i32, i32* %frame_num42, align 4, !dbg !2142
  %cmp43 = icmp eq i32 %51, 1, !dbg !2143
  %conv = zext i1 %cmp43 to i32, !dbg !2143
  %52 = load i32, i32* %plane, align 4, !dbg !2144
  %tobool44 = icmp ne i32 %52, 0, !dbg !2145
  %lnot45 = xor i1 %tobool44, true, !dbg !2145
  %lnot47 = xor i1 %lnot45, true, !dbg !2146
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !2146
  %call49 = call i32 @binkb_decode_plane(%struct.BinkContext* %47, %struct.AVFrame* %48, %struct.GetBitContext* %gb, i32 %49, i32 %conv, i32 %lnot.ext48), !dbg !2147
  store i32 %call49, i32* %ret, align 4, !dbg !2148
  %cmp50 = icmp slt i32 %call49, 0, !dbg !2149
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !2150

if.then52:                                        ; preds = %if.else41
  %53 = load i32, i32* %ret, align 4, !dbg !2151
  store i32 %53, i32* %retval, align 4, !dbg !2152
  br label %return, !dbg !2152

if.end53:                                         ; preds = %if.else41
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end40
  %call55 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !2153
  %54 = load i32, i32* %bits_count, align 4, !dbg !2155
  %cmp56 = icmp sge i32 %call55, %54, !dbg !2156
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !2157

if.then58:                                        ; preds = %if.end54
  br label %for.end, !dbg !2158

if.end59:                                         ; preds = %if.end54
  br label %for.inc, !dbg !2159

for.inc:                                          ; preds = %if.end59
  %55 = load i32, i32* %plane, align 4, !dbg !2160
  %inc60 = add nsw i32 %55, 1, !dbg !2160
  store i32 %inc60, i32* %plane, align 4, !dbg !2160
  br label %for.cond, !dbg !2162, !llvm.loop !2163

for.end:                                          ; preds = %if.then58, %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !2165, !srcloc !2169
  %56 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2170
  %version61 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %56, i32 0, i32 5, !dbg !2172
  %57 = load i32, i32* %version61, align 8, !dbg !2172
  %cmp62 = icmp sgt i32 %57, 98, !dbg !2173
  br i1 %cmp62, label %if.then64, label %if.end72, !dbg !2174

if.then64:                                        ; preds = %for.end
  %58 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2175
  %last65 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %58, i32 0, i32 4, !dbg !2177
  %59 = load %struct.AVFrame*, %struct.AVFrame** %last65, align 8, !dbg !2177
  call void @av_frame_unref(%struct.AVFrame* %59), !dbg !2178
  %60 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2179
  %last66 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %60, i32 0, i32 4, !dbg !2181
  %61 = load %struct.AVFrame*, %struct.AVFrame** %last66, align 8, !dbg !2181
  %62 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2182
  %call67 = call i32 @av_frame_ref(%struct.AVFrame* %61, %struct.AVFrame* %62), !dbg !2183
  store i32 %call67, i32* %ret, align 4, !dbg !2184
  %cmp68 = icmp slt i32 %call67, 0, !dbg !2185
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2186

if.then70:                                        ; preds = %if.then64
  %63 = load i32, i32* %ret, align 4, !dbg !2187
  store i32 %63, i32* %retval, align 4, !dbg !2188
  br label %return, !dbg !2188

if.end71:                                         ; preds = %if.then64
  br label %if.end72, !dbg !2189

if.end72:                                         ; preds = %if.end71, %for.end
  %64 = load i32*, i32** %got_frame.addr, align 8, !dbg !2190
  store i32 1, i32* %64, align 4, !dbg !2191
  %65 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !2192
  %size73 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %65, i32 0, i32 4, !dbg !2193
  %66 = load i32, i32* %size73, align 8, !dbg !2193
  store i32 %66, i32* %retval, align 4, !dbg !2194
  br label %return, !dbg !2194

return:                                           ; preds = %if.end72, %if.then70, %if.then52, %if.then39, %if.then22, %if.then10, %if.then5, %if.then2
  %67 = load i32, i32* %retval, align 4, !dbg !2195
  ret i32 %67, !dbg !2195
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !2196 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca %struct.BinkContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2197, metadata !1735), !dbg !2198
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c, metadata !2199, metadata !1735), !dbg !2200
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2201
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2202
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2202
  %2 = bitcast i8* %1 to %struct.BinkContext*, !dbg !2201
  store %struct.BinkContext* %2, %struct.BinkContext** %c, align 8, !dbg !2200
  %3 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2203
  %last = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %3, i32 0, i32 4, !dbg !2204
  call void @av_frame_free(%struct.AVFrame** %last), !dbg !2205
  %4 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2206
  call void @free_bundles(%struct.BinkContext* %4), !dbg !2207
  ret i32 0, !dbg !2208
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !2209 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca %struct.BinkContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2210, metadata !1735), !dbg !2211
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c, metadata !2212, metadata !1735), !dbg !2213
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2214
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2215
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2215
  %2 = bitcast i8* %1 to %struct.BinkContext*, !dbg !2214
  store %struct.BinkContext* %2, %struct.BinkContext** %c, align 8, !dbg !2213
  %3 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !2216
  %frame_num = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %3, i32 0, i32 8, !dbg !2217
  store i32 0, i32* %frame_num, align 4, !dbg !2218
  ret void, !dbg !2219
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare %struct.AVFrame* @av_frame_alloc() #3

declare i32 @av_image_check_size(i32, i32, i32, i8*) #3

declare void @ff_blockdsp_init(%struct.BlockDSPContext*, %struct.AVCodecContext*) #3

declare void @ff_hpeldsp_init(%struct.HpelDSPContext*, i32) #3

declare void @ff_binkdsp_init(%struct.BinkDSPContext*) #3

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init_bundles(%struct.BinkContext* %c) #0 !dbg !2220 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %bw = alloca i32, align 4
  %bh = alloca i32, align 4
  %blocks = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !2223, metadata !1735), !dbg !2224
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !2225, metadata !1735), !dbg !2226
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !2227, metadata !1735), !dbg !2228
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !2229, metadata !1735), !dbg !2230
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2231, metadata !1735), !dbg !2232
  %0 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2233
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %0, i32 0, i32 0, !dbg !2234
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2234
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 20, !dbg !2235
  %2 = load i32, i32* %width, align 4, !dbg !2235
  %add = add nsw i32 %2, 7, !dbg !2236
  %shr = ashr i32 %add, 3, !dbg !2237
  store i32 %shr, i32* %bw, align 4, !dbg !2238
  %3 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2239
  %avctx1 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %3, i32 0, i32 0, !dbg !2240
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !2240
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 21, !dbg !2241
  %5 = load i32, i32* %height, align 8, !dbg !2241
  %add2 = add nsw i32 %5, 7, !dbg !2242
  %shr3 = ashr i32 %add2, 3, !dbg !2243
  store i32 %shr3, i32* %bh, align 4, !dbg !2244
  %6 = load i32, i32* %bw, align 4, !dbg !2245
  %7 = load i32, i32* %bh, align 4, !dbg !2246
  %mul = mul nsw i32 %6, %7, !dbg !2247
  store i32 %mul, i32* %blocks, align 4, !dbg !2248
  store i32 0, i32* %i, align 4, !dbg !2249
  br label %for.cond, !dbg !2251

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2252
  %cmp = icmp slt i32 %8, 10, !dbg !2255
  br i1 %cmp, label %for.body, label %for.end, !dbg !2256

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %blocks, align 4, !dbg !2257
  %mul4 = mul nsw i32 %9, 64, !dbg !2259
  %conv = sext i32 %mul4 to i64, !dbg !2257
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !2260
  %10 = load i32, i32* %i, align 4, !dbg !2261
  %idxprom = sext i32 %10 to i64, !dbg !2262
  %11 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2262
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %11, i32 0, i32 9, !dbg !2263
  %arrayidx = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom, !dbg !2262
  %data = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx, i32 0, i32 2, !dbg !2264
  store i8* %call, i8** %data, align 8, !dbg !2265
  %12 = load i32, i32* %i, align 4, !dbg !2266
  %idxprom5 = sext i32 %12 to i64, !dbg !2268
  %13 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2268
  %bundle6 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %13, i32 0, i32 9, !dbg !2269
  %arrayidx7 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle6, i64 0, i64 %idxprom5, !dbg !2268
  %data8 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx7, i32 0, i32 2, !dbg !2270
  %14 = load i8*, i8** %data8, align 8, !dbg !2270
  %tobool = icmp ne i8* %14, null, !dbg !2268
  br i1 %tobool, label %if.end, label %if.then, !dbg !2271

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

if.end:                                           ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !2273
  %idxprom9 = sext i32 %15 to i64, !dbg !2274
  %16 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2274
  %bundle10 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %16, i32 0, i32 9, !dbg !2275
  %arrayidx11 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle10, i64 0, i64 %idxprom9, !dbg !2274
  %data12 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx11, i32 0, i32 2, !dbg !2276
  %17 = load i8*, i8** %data12, align 8, !dbg !2276
  %18 = load i32, i32* %blocks, align 4, !dbg !2277
  %mul13 = mul nsw i32 %18, 64, !dbg !2278
  %idx.ext = sext i32 %mul13 to i64, !dbg !2279
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !2279
  %19 = load i32, i32* %i, align 4, !dbg !2280
  %idxprom14 = sext i32 %19 to i64, !dbg !2281
  %20 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2281
  %bundle15 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %20, i32 0, i32 9, !dbg !2282
  %arrayidx16 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle15, i64 0, i64 %idxprom14, !dbg !2281
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx16, i32 0, i32 3, !dbg !2283
  store i8* %add.ptr, i8** %data_end, align 8, !dbg !2284
  br label %for.inc, !dbg !2285

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !2286
  %inc = add nsw i32 %21, 1, !dbg !2286
  store i32 %inc, i32* %i, align 4, !dbg !2286
  br label %for.cond, !dbg !2288, !llvm.loop !2289

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2291
  br label %return, !dbg !2291

return:                                           ; preds = %for.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !2292
  ret i32 %22, !dbg !2292
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @free_bundles(%struct.BinkContext* %c) #0 !dbg !2293 {
entry:
  %c.addr = alloca %struct.BinkContext*, align 8
  %i = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !2296, metadata !1735), !dbg !2297
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2298, metadata !1735), !dbg !2299
  store i32 0, i32* %i, align 4, !dbg !2300
  br label %for.cond, !dbg !2302

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2303
  %cmp = icmp slt i32 %0, 10, !dbg !2306
  br i1 %cmp, label %for.body, label %for.end, !dbg !2307

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2308
  %idxprom = sext i32 %1 to i64, !dbg !2309
  %2 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2309
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %2, i32 0, i32 9, !dbg !2310
  %arrayidx = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom, !dbg !2309
  %data = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx, i32 0, i32 2, !dbg !2311
  %3 = bitcast i8** %data to i8*, !dbg !2312
  call void @av_freep(i8* %3), !dbg !2313
  br label %for.inc, !dbg !2313

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2314
  %inc = add nsw i32 %4, 1, !dbg !2314
  store i32 %inc, i32* %i, align 4, !dbg !2314
  br label %for.cond, !dbg !2316, !llvm.loop !2317

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2319
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @binkb_calc_quant() #0 !dbg !1699 {
entry:
  %inv_bink_scan = alloca [64 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  call void @llvm.dbg.declare(metadata [64 x i8]* %inv_bink_scan, metadata !2320, metadata !1735), !dbg !2322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2323, metadata !1735), !dbg !2324
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2325, metadata !1735), !dbg !2326
  store i32 0, i32* %i, align 4, !dbg !2327
  br label %for.cond, !dbg !2329

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2330
  %cmp = icmp slt i32 %0, 64, !dbg !2333
  br i1 %cmp, label %for.body, label %for.end, !dbg !2334

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2335
  %conv = trunc i32 %1 to i8, !dbg !2335
  %2 = load i32, i32* %i, align 4, !dbg !2336
  %idxprom = sext i32 %2 to i64, !dbg !2337
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* @bink_scan, i64 0, i64 %idxprom, !dbg !2337
  %3 = load i8, i8* %arrayidx, align 1, !dbg !2337
  %idxprom1 = zext i8 %3 to i64, !dbg !2338
  %arrayidx2 = getelementptr inbounds [64 x i8], [64 x i8]* %inv_bink_scan, i64 0, i64 %idxprom1, !dbg !2338
  store i8 %conv, i8* %arrayidx2, align 1, !dbg !2339
  br label %for.inc, !dbg !2338

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2340
  %inc = add nsw i32 %4, 1, !dbg !2340
  store i32 %inc, i32* %i, align 4, !dbg !2340
  br label %for.cond, !dbg !2342, !llvm.loop !2343

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2345
  br label %for.cond3, !dbg !2347

for.cond3:                                        ; preds = %for.inc57, %for.end
  %5 = load i32, i32* %j, align 4, !dbg !2348
  %cmp4 = icmp slt i32 %5, 16, !dbg !2351
  br i1 %cmp4, label %for.body6, label %for.end59, !dbg !2352

for.body6:                                        ; preds = %for.cond3
  store i32 0, i32* %i, align 4, !dbg !2353
  br label %for.cond7, !dbg !2356

for.cond7:                                        ; preds = %for.inc54, %for.body6
  %6 = load i32, i32* %i, align 4, !dbg !2357
  %cmp8 = icmp slt i32 %6, 64, !dbg !2360
  br i1 %cmp8, label %for.body10, label %for.end56, !dbg !2361

for.body10:                                       ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2362, metadata !1735), !dbg !2364
  %7 = load i32, i32* %i, align 4, !dbg !2365
  %idxprom11 = sext i32 %7 to i64, !dbg !2366
  %arrayidx12 = getelementptr inbounds [64 x i8], [64 x i8]* %inv_bink_scan, i64 0, i64 %idxprom11, !dbg !2366
  %8 = load i8, i8* %arrayidx12, align 1, !dbg !2366
  %conv13 = zext i8 %8 to i32, !dbg !2366
  store i32 %conv13, i32* %k, align 4, !dbg !2364
  %9 = load i32, i32* %i, align 4, !dbg !2367
  %idxprom14 = sext i32 %9 to i64, !dbg !2368
  %arrayidx15 = getelementptr inbounds [64 x i8], [64 x i8]* @binkb_intra_seed, i64 0, i64 %idxprom14, !dbg !2368
  %10 = load i8, i8* %arrayidx15, align 1, !dbg !2368
  %conv16 = zext i8 %10 to i64, !dbg !2368
  %11 = load i32, i32* %i, align 4, !dbg !2369
  %idxprom17 = sext i32 %11 to i64, !dbg !2370
  %arrayidx18 = getelementptr inbounds [64 x i32], [64 x i32]* @binkb_calc_quant.s, i64 0, i64 %idxprom17, !dbg !2370
  %12 = load i32, i32* %arrayidx18, align 4, !dbg !2370
  %conv19 = sext i32 %12 to i64, !dbg !2371
  %mul = mul nsw i64 %conv16, %conv19, !dbg !2372
  %13 = load i32, i32* %j, align 4, !dbg !2373
  %idxprom20 = sext i32 %13 to i64, !dbg !2374
  %arrayidx21 = getelementptr inbounds [16 x i8], [16 x i8]* @binkb_num, i64 0, i64 %idxprom20, !dbg !2374
  %14 = load i8, i8* %arrayidx21, align 1, !dbg !2374
  %conv22 = zext i8 %14 to i64, !dbg !2374
  %mul23 = mul nsw i64 %mul, %conv22, !dbg !2375
  %15 = load i32, i32* %j, align 4, !dbg !2376
  %idxprom24 = sext i32 %15 to i64, !dbg !2377
  %arrayidx25 = getelementptr inbounds [16 x i8], [16 x i8]* @binkb_den, i64 0, i64 %idxprom24, !dbg !2377
  %16 = load i8, i8* %arrayidx25, align 1, !dbg !2377
  %conv26 = zext i8 %16 to i64, !dbg !2377
  %mul27 = mul nsw i64 %conv26, 262144, !dbg !2378
  %div = sdiv i64 %mul23, %mul27, !dbg !2379
  %conv28 = trunc i64 %div to i32, !dbg !2368
  %17 = load i32, i32* %k, align 4, !dbg !2380
  %idxprom29 = sext i32 %17 to i64, !dbg !2381
  %18 = load i32, i32* %j, align 4, !dbg !2382
  %idxprom30 = sext i32 %18 to i64, !dbg !2381
  %arrayidx31 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @binkb_intra_quant, i64 0, i64 %idxprom30, !dbg !2381
  %arrayidx32 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx31, i64 0, i64 %idxprom29, !dbg !2381
  store i32 %conv28, i32* %arrayidx32, align 4, !dbg !2383
  %19 = load i32, i32* %i, align 4, !dbg !2384
  %idxprom33 = sext i32 %19 to i64, !dbg !2385
  %arrayidx34 = getelementptr inbounds [64 x i8], [64 x i8]* @binkb_inter_seed, i64 0, i64 %idxprom33, !dbg !2385
  %20 = load i8, i8* %arrayidx34, align 1, !dbg !2385
  %conv35 = zext i8 %20 to i64, !dbg !2385
  %21 = load i32, i32* %i, align 4, !dbg !2386
  %idxprom36 = sext i32 %21 to i64, !dbg !2387
  %arrayidx37 = getelementptr inbounds [64 x i32], [64 x i32]* @binkb_calc_quant.s, i64 0, i64 %idxprom36, !dbg !2387
  %22 = load i32, i32* %arrayidx37, align 4, !dbg !2387
  %conv38 = sext i32 %22 to i64, !dbg !2388
  %mul39 = mul nsw i64 %conv35, %conv38, !dbg !2389
  %23 = load i32, i32* %j, align 4, !dbg !2390
  %idxprom40 = sext i32 %23 to i64, !dbg !2391
  %arrayidx41 = getelementptr inbounds [16 x i8], [16 x i8]* @binkb_num, i64 0, i64 %idxprom40, !dbg !2391
  %24 = load i8, i8* %arrayidx41, align 1, !dbg !2391
  %conv42 = zext i8 %24 to i64, !dbg !2391
  %mul43 = mul nsw i64 %mul39, %conv42, !dbg !2392
  %25 = load i32, i32* %j, align 4, !dbg !2393
  %idxprom44 = sext i32 %25 to i64, !dbg !2394
  %arrayidx45 = getelementptr inbounds [16 x i8], [16 x i8]* @binkb_den, i64 0, i64 %idxprom44, !dbg !2394
  %26 = load i8, i8* %arrayidx45, align 1, !dbg !2394
  %conv46 = zext i8 %26 to i64, !dbg !2394
  %mul47 = mul nsw i64 %conv46, 262144, !dbg !2395
  %div48 = sdiv i64 %mul43, %mul47, !dbg !2396
  %conv49 = trunc i64 %div48 to i32, !dbg !2385
  %27 = load i32, i32* %k, align 4, !dbg !2397
  %idxprom50 = sext i32 %27 to i64, !dbg !2398
  %28 = load i32, i32* %j, align 4, !dbg !2399
  %idxprom51 = sext i32 %28 to i64, !dbg !2398
  %arrayidx52 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @binkb_inter_quant, i64 0, i64 %idxprom51, !dbg !2398
  %arrayidx53 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx52, i64 0, i64 %idxprom50, !dbg !2398
  store i32 %conv49, i32* %arrayidx53, align 4, !dbg !2400
  br label %for.inc54, !dbg !2401

for.inc54:                                        ; preds = %for.body10
  %29 = load i32, i32* %i, align 4, !dbg !2402
  %inc55 = add nsw i32 %29, 1, !dbg !2402
  store i32 %inc55, i32* %i, align 4, !dbg !2402
  br label %for.cond7, !dbg !2404, !llvm.loop !2405

for.end56:                                        ; preds = %for.cond7
  br label %for.inc57, !dbg !2407

for.inc57:                                        ; preds = %for.end56
  %30 = load i32, i32* %j, align 4, !dbg !2408
  %inc58 = add nsw i32 %30, 1, !dbg !2408
  store i32 %inc58, i32* %j, align 4, !dbg !2408
  br label %for.cond3, !dbg !2410, !llvm.loop !2411

for.end59:                                        ; preds = %for.cond3
  ret void, !dbg !2413
}

declare noalias i8* @av_mallocz(i64) #3

declare void @av_freep(i8*) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

declare i32 @ff_reget_buffer(%struct.AVCodecContext*, %struct.AVFrame*) #3

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !2414 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2418, metadata !1735), !dbg !2419
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2420, metadata !1735), !dbg !2421
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !2422, metadata !1735), !dbg !2423
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !2424, metadata !1735), !dbg !2425
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2426, metadata !1735), !dbg !2427
  store i32 0, i32* %ret, align 4, !dbg !2427
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !2428
  %cmp = icmp sge i32 %0, 2147483135, !dbg !2430
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2431

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !2432
  %cmp1 = icmp slt i32 %1, 0, !dbg !2434
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2435

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2436
  %tobool = icmp ne i8* %2, null, !dbg !2436
  br i1 %tobool, label %if.end, label %if.then, !dbg !2438

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !2439
  store i8* null, i8** %buffer.addr, align 8, !dbg !2441
  store i32 -1094995529, i32* %ret, align 4, !dbg !2442
  br label %if.end, !dbg !2443

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !2444
  %add = add nsw i32 %3, 7, !dbg !2445
  %shr = ashr i32 %add, 3, !dbg !2446
  store i32 %shr, i32* %buffer_size, align 4, !dbg !2447
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2448
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2449
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !2450
  store i8* %4, i8** %buffer3, align 8, !dbg !2451
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !2452
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2453
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !2454
  store i32 %6, i32* %size_in_bits, align 4, !dbg !2455
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !2456
  %add4 = add nsw i32 %8, 8, !dbg !2457
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2458
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !2459
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !2460
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !2461
  %11 = load i32, i32* %buffer_size, align 4, !dbg !2462
  %idx.ext = sext i32 %11 to i64, !dbg !2463
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !2463
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2464
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !2465
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !2466
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2467
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !2468
  store i32 0, i32* %index, align 8, !dbg !2469
  %14 = load i32, i32* %ret, align 4, !dbg !2470
  ret i32 %14, !dbg !2471
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !2472 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2475, metadata !1735), !dbg !2480
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2482, metadata !1735), !dbg !2483
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2484, metadata !1735), !dbg !2485
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2486, metadata !1735), !dbg !2487
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2488, metadata !1735), !dbg !2489
  %0 = load i32, i32* %n.addr, align 4, !dbg !2490
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2491
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !2492
  %2 = load i32, i32* %index, align 8, !dbg !2492
  %sub = sub nsw i32 0, %2, !dbg !2493
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2494
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !2495
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2495
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2496
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !2497
  %6 = load i32, i32* %index1, align 8, !dbg !2497
  %sub2 = sub nsw i32 %4, %6, !dbg !2498
  store i32 %0, i32* %a.addr.i, align 4, !dbg !2499
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !2499
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !2499
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !2500
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !2502
  %cmp.i = icmp slt i32 %7, %8, !dbg !2503
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !2504

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !2505
  store i32 %9, i32* %retval.i, align 4, !dbg !2507
  br label %av_clip_c.exit, !dbg !2507

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !2508
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !2510
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !2511
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !2512

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !2513
  store i32 %12, i32* %retval.i, align 4, !dbg !2515
  br label %av_clip_c.exit, !dbg !2515

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !2516
  store i32 %13, i32* %retval.i, align 4, !dbg !2517
  br label %av_clip_c.exit, !dbg !2517

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !2518
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2519
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !2520
  %16 = load i32, i32* %index3, align 8, !dbg !2521
  %add = add nsw i32 %16, %14, !dbg !2521
  store i32 %add, i32* %index3, align 8, !dbg !2521
  ret void, !dbg !2522
}

; Function Attrs: nounwind uwtable
define internal i32 @bink_decode_plane(%struct.BinkContext* %c, %struct.AVFrame* %frame, %struct.GetBitContext* %gb, i32 %plane_idx, i32 %is_chroma) #1 !dbg !2523 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %plane_idx.addr = alloca i32, align 4
  %is_chroma.addr = alloca i32, align 4
  %blk = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %dst = alloca i8*, align 8
  %prev = alloca i8*, align 8
  %ref_start = alloca i8*, align 8
  %ref_end = alloca i8*, align 8
  %v = alloca i32, align 4
  %col = alloca [2 x i32], align 4
  %scan = alloca i8*, align 8
  %la_block = alloca [64 x i16], align 32
  %block = alloca i16*, align 8
  %la_ublock = alloca [64 x i8], align 16
  %ublock = alloca i8*, align 8
  %la_dctblock = alloca [64 x i32], align 16
  %dctblock = alloca i32*, align 8
  %coordmap = alloca [64 x i32], align 16
  %quant_idx = alloca i32, align 4
  %coef_count = alloca i32, align 4
  %coef_idx = alloca [64 x i32], align 16
  %stride = alloca i32, align 4
  %bw = alloca i32, align 4
  %bh = alloca i32, align 4
  %width19 = alloca i32, align 4
  %height23 = alloca i32, align 4
  %fill = alloca i32, align 4
  %run = alloca i32, align 4
  %run353 = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !2526, metadata !1735), !dbg !2527
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !2528, metadata !1735), !dbg !2529
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2530, metadata !1735), !dbg !2531
  store i32 %plane_idx, i32* %plane_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_idx.addr, metadata !2532, metadata !1735), !dbg !2533
  store i32 %is_chroma, i32* %is_chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_chroma.addr, metadata !2534, metadata !1735), !dbg !2535
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !2536, metadata !1735), !dbg !2537
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2538, metadata !1735), !dbg !2539
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2540, metadata !1735), !dbg !2541
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2542, metadata !1735), !dbg !2543
  call void @llvm.dbg.declare(metadata i32* %bx, metadata !2544, metadata !1735), !dbg !2545
  call void @llvm.dbg.declare(metadata i32* %by, metadata !2546, metadata !1735), !dbg !2547
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !2548, metadata !1735), !dbg !2549
  call void @llvm.dbg.declare(metadata i8** %prev, metadata !2550, metadata !1735), !dbg !2551
  call void @llvm.dbg.declare(metadata i8** %ref_start, metadata !2552, metadata !1735), !dbg !2553
  call void @llvm.dbg.declare(metadata i8** %ref_end, metadata !2554, metadata !1735), !dbg !2555
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2556, metadata !1735), !dbg !2557
  call void @llvm.dbg.declare(metadata [2 x i32]* %col, metadata !2558, metadata !1735), !dbg !2560
  call void @llvm.dbg.declare(metadata i8** %scan, metadata !2561, metadata !1735), !dbg !2562
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_block, metadata !2563, metadata !1735), !dbg !2565
  call void @llvm.dbg.declare(metadata i16** %block, metadata !2566, metadata !1735), !dbg !2567
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %la_block, i32 0, i32 0, !dbg !2568
  store i16* %arraydecay, i16** %block, align 8, !dbg !2567
  call void @llvm.dbg.declare(metadata [64 x i8]* %la_ublock, metadata !2569, metadata !1735), !dbg !2570
  call void @llvm.dbg.declare(metadata i8** %ublock, metadata !2571, metadata !1735), !dbg !2572
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %la_ublock, i32 0, i32 0, !dbg !2573
  store i8* %arraydecay1, i8** %ublock, align 8, !dbg !2572
  call void @llvm.dbg.declare(metadata [64 x i32]* %la_dctblock, metadata !2574, metadata !1735), !dbg !2576
  call void @llvm.dbg.declare(metadata i32** %dctblock, metadata !2577, metadata !1735), !dbg !2578
  %arraydecay2 = getelementptr inbounds [64 x i32], [64 x i32]* %la_dctblock, i32 0, i32 0, !dbg !2579
  store i32* %arraydecay2, i32** %dctblock, align 8, !dbg !2578
  call void @llvm.dbg.declare(metadata [64 x i32]* %coordmap, metadata !2580, metadata !1735), !dbg !2582
  call void @llvm.dbg.declare(metadata i32* %quant_idx, metadata !2583, metadata !1735), !dbg !2584
  call void @llvm.dbg.declare(metadata i32* %coef_count, metadata !2585, metadata !1735), !dbg !2586
  call void @llvm.dbg.declare(metadata [64 x i32]* %coef_idx, metadata !2587, metadata !1735), !dbg !2588
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !2589, metadata !1735), !dbg !2590
  %0 = load i32, i32* %plane_idx.addr, align 4, !dbg !2591
  %idxprom = sext i32 %0 to i64, !dbg !2592
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2592
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1, i32 0, i32 1, !dbg !2593
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !2592
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2592
  store i32 %2, i32* %stride, align 4, !dbg !2590
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !2594, metadata !1735), !dbg !2595
  %3 = load i32, i32* %is_chroma.addr, align 4, !dbg !2596
  %tobool = icmp ne i32 %3, 0, !dbg !2596
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2596

cond.true:                                        ; preds = %entry
  %4 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2597
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %4, i32 0, i32 0, !dbg !2599
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2599
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 20, !dbg !2600
  %6 = load i32, i32* %width, align 4, !dbg !2600
  %add = add nsw i32 %6, 15, !dbg !2601
  %shr = ashr i32 %add, 4, !dbg !2602
  br label %cond.end, !dbg !2603

cond.false:                                       ; preds = %entry
  %7 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2604
  %avctx3 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %7, i32 0, i32 0, !dbg !2606
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !2606
  %width4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 20, !dbg !2607
  %9 = load i32, i32* %width4, align 4, !dbg !2607
  %add5 = add nsw i32 %9, 7, !dbg !2608
  %shr6 = ashr i32 %add5, 3, !dbg !2609
  br label %cond.end, !dbg !2610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr, %cond.true ], [ %shr6, %cond.false ], !dbg !2611
  store i32 %cond, i32* %bw, align 4, !dbg !2613
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !2614, metadata !1735), !dbg !2615
  %10 = load i32, i32* %is_chroma.addr, align 4, !dbg !2616
  %tobool7 = icmp ne i32 %10, 0, !dbg !2616
  br i1 %tobool7, label %cond.true8, label %cond.false12, !dbg !2616

cond.true8:                                       ; preds = %cond.end
  %11 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2617
  %avctx9 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %11, i32 0, i32 0, !dbg !2618
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 8, !dbg !2618
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 21, !dbg !2619
  %13 = load i32, i32* %height, align 8, !dbg !2619
  %add10 = add nsw i32 %13, 15, !dbg !2620
  %shr11 = ashr i32 %add10, 4, !dbg !2621
  br label %cond.end17, !dbg !2622

cond.false12:                                     ; preds = %cond.end
  %14 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2623
  %avctx13 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %14, i32 0, i32 0, !dbg !2624
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx13, align 8, !dbg !2624
  %height14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 21, !dbg !2625
  %16 = load i32, i32* %height14, align 8, !dbg !2625
  %add15 = add nsw i32 %16, 7, !dbg !2626
  %shr16 = ashr i32 %add15, 3, !dbg !2627
  br label %cond.end17, !dbg !2628

cond.end17:                                       ; preds = %cond.false12, %cond.true8
  %cond18 = phi i32 [ %shr11, %cond.true8 ], [ %shr16, %cond.false12 ], !dbg !2629
  store i32 %cond18, i32* %bh, align 4, !dbg !2630
  call void @llvm.dbg.declare(metadata i32* %width19, metadata !2631, metadata !1735), !dbg !2632
  %17 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2633
  %avctx20 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %17, i32 0, i32 0, !dbg !2634
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 8, !dbg !2634
  %width21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 20, !dbg !2635
  %19 = load i32, i32* %width21, align 4, !dbg !2635
  %20 = load i32, i32* %is_chroma.addr, align 4, !dbg !2636
  %shr22 = ashr i32 %19, %20, !dbg !2637
  store i32 %shr22, i32* %width19, align 4, !dbg !2632
  call void @llvm.dbg.declare(metadata i32* %height23, metadata !2638, metadata !1735), !dbg !2639
  %21 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2640
  %avctx24 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %21, i32 0, i32 0, !dbg !2641
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx24, align 8, !dbg !2641
  %height25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 21, !dbg !2642
  %23 = load i32, i32* %height25, align 8, !dbg !2642
  %24 = load i32, i32* %is_chroma.addr, align 4, !dbg !2643
  %shr26 = ashr i32 %23, %24, !dbg !2644
  store i32 %shr26, i32* %height23, align 4, !dbg !2639
  %25 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2645
  %version = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %25, i32 0, i32 5, !dbg !2647
  %26 = load i32, i32* %version, align 8, !dbg !2647
  %cmp = icmp eq i32 %26, 107, !dbg !2648
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2649

land.lhs.true:                                    ; preds = %cond.end17
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2650
  %call = call i32 @get_bits1(%struct.GetBitContext* %27), !dbg !2652
  %tobool27 = icmp ne i32 %call, 0, !dbg !2652
  br i1 %tobool27, label %if.then, label %if.end, !dbg !2653

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %fill, metadata !2654, metadata !1735), !dbg !2656
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2657
  %call28 = call i32 @get_bits(%struct.GetBitContext* %28, i32 8), !dbg !2658
  store i32 %call28, i32* %fill, align 4, !dbg !2656
  %29 = load i32, i32* %plane_idx.addr, align 4, !dbg !2659
  %idxprom29 = sext i32 %29 to i64, !dbg !2660
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2660
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 0, !dbg !2661
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom29, !dbg !2660
  %31 = load i8*, i8** %arrayidx30, align 8, !dbg !2660
  store i8* %31, i8** %dst, align 8, !dbg !2662
  store i32 0, i32* %i, align 4, !dbg !2663
  br label %for.cond, !dbg !2665

for.cond:                                         ; preds = %for.inc, %if.then
  %32 = load i32, i32* %i, align 4, !dbg !2666
  %33 = load i32, i32* %height23, align 4, !dbg !2669
  %cmp31 = icmp slt i32 %32, %33, !dbg !2670
  br i1 %cmp31, label %for.body, label %for.end, !dbg !2671

for.body:                                         ; preds = %for.cond
  %34 = load i8*, i8** %dst, align 8, !dbg !2672
  %35 = load i32, i32* %i, align 4, !dbg !2673
  %36 = load i32, i32* %stride, align 4, !dbg !2674
  %mul = mul nsw i32 %35, %36, !dbg !2675
  %idx.ext = sext i32 %mul to i64, !dbg !2676
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %idx.ext, !dbg !2676
  %37 = load i32, i32* %fill, align 4, !dbg !2677
  %38 = trunc i32 %37 to i8, !dbg !2678
  %39 = load i32, i32* %width19, align 4, !dbg !2679
  %conv = sext i32 %39 to i64, !dbg !2679
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 %38, i64 %conv, i32 1, i1 false), !dbg !2678
  br label %for.inc, !dbg !2678

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !2680
  %inc = add nsw i32 %40, 1, !dbg !2680
  store i32 %inc, i32* %i, align 4, !dbg !2680
  br label %for.cond, !dbg !2682, !llvm.loop !2683

for.end:                                          ; preds = %for.cond
  br label %end, !dbg !2685

if.end:                                           ; preds = %land.lhs.true, %cond.end17
  %41 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2686
  %42 = load i32, i32* %width19, align 4, !dbg !2687
  %cmp32 = icmp sgt i32 %42, 8, !dbg !2688
  br i1 %cmp32, label %cond.true34, label %cond.false35, !dbg !2689

cond.true34:                                      ; preds = %if.end
  %43 = load i32, i32* %width19, align 4, !dbg !2690
  br label %cond.end36, !dbg !2691

cond.false35:                                     ; preds = %if.end
  br label %cond.end36, !dbg !2692

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi i32 [ %43, %cond.true34 ], [ 8, %cond.false35 ], !dbg !2693
  %44 = load i32, i32* %bw, align 4, !dbg !2694
  call void @init_lengths(%struct.BinkContext* %41, i32 %cond37, i32 %44), !dbg !2695
  store i32 0, i32* %i, align 4, !dbg !2696
  br label %for.cond38, !dbg !2698

for.cond38:                                       ; preds = %for.inc42, %cond.end36
  %45 = load i32, i32* %i, align 4, !dbg !2699
  %cmp39 = icmp slt i32 %45, 9, !dbg !2702
  br i1 %cmp39, label %for.body41, label %for.end44, !dbg !2703

for.body41:                                       ; preds = %for.cond38
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2704
  %47 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2705
  %48 = load i32, i32* %i, align 4, !dbg !2706
  call void @read_bundle(%struct.GetBitContext* %46, %struct.BinkContext* %47, i32 %48), !dbg !2707
  br label %for.inc42, !dbg !2707

for.inc42:                                        ; preds = %for.body41
  %49 = load i32, i32* %i, align 4, !dbg !2708
  %inc43 = add nsw i32 %49, 1, !dbg !2708
  store i32 %inc43, i32* %i, align 4, !dbg !2708
  br label %for.cond38, !dbg !2710, !llvm.loop !2711

for.end44:                                        ; preds = %for.cond38
  %50 = load i32, i32* %plane_idx.addr, align 4, !dbg !2713
  %idxprom45 = sext i32 %50 to i64, !dbg !2714
  %51 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2714
  %last = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %51, i32 0, i32 4, !dbg !2715
  %52 = load %struct.AVFrame*, %struct.AVFrame** %last, align 8, !dbg !2715
  %data46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 0, !dbg !2716
  %arrayidx47 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data46, i64 0, i64 %idxprom45, !dbg !2714
  %53 = load i8*, i8** %arrayidx47, align 8, !dbg !2714
  %tobool48 = icmp ne i8* %53, null, !dbg !2714
  br i1 %tobool48, label %cond.true49, label %cond.false54, !dbg !2714

cond.true49:                                      ; preds = %for.end44
  %54 = load i32, i32* %plane_idx.addr, align 4, !dbg !2717
  %idxprom50 = sext i32 %54 to i64, !dbg !2718
  %55 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2718
  %last51 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %55, i32 0, i32 4, !dbg !2719
  %56 = load %struct.AVFrame*, %struct.AVFrame** %last51, align 8, !dbg !2719
  %data52 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 0, !dbg !2720
  %arrayidx53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data52, i64 0, i64 %idxprom50, !dbg !2718
  %57 = load i8*, i8** %arrayidx53, align 8, !dbg !2718
  br label %cond.end58, !dbg !2721

cond.false54:                                     ; preds = %for.end44
  %58 = load i32, i32* %plane_idx.addr, align 4, !dbg !2722
  %idxprom55 = sext i32 %58 to i64, !dbg !2723
  %59 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2723
  %data56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 0, !dbg !2724
  %arrayidx57 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data56, i64 0, i64 %idxprom55, !dbg !2723
  %60 = load i8*, i8** %arrayidx57, align 8, !dbg !2723
  br label %cond.end58, !dbg !2725

cond.end58:                                       ; preds = %cond.false54, %cond.true49
  %cond59 = phi i8* [ %57, %cond.true49 ], [ %60, %cond.false54 ], !dbg !2726
  store i8* %cond59, i8** %ref_start, align 8, !dbg !2727
  %61 = load i8*, i8** %ref_start, align 8, !dbg !2728
  %62 = load i32, i32* %bw, align 4, !dbg !2729
  %sub = sub nsw i32 %62, 1, !dbg !2730
  %63 = load i32, i32* %plane_idx.addr, align 4, !dbg !2731
  %idxprom60 = sext i32 %63 to i64, !dbg !2732
  %64 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2732
  %last61 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %64, i32 0, i32 4, !dbg !2733
  %65 = load %struct.AVFrame*, %struct.AVFrame** %last61, align 8, !dbg !2733
  %linesize62 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 1, !dbg !2734
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize62, i64 0, i64 %idxprom60, !dbg !2732
  %66 = load i32, i32* %arrayidx63, align 4, !dbg !2732
  %67 = load i32, i32* %bh, align 4, !dbg !2735
  %sub64 = sub nsw i32 %67, 1, !dbg !2736
  %mul65 = mul nsw i32 %66, %sub64, !dbg !2737
  %add66 = add nsw i32 %sub, %mul65, !dbg !2738
  %mul67 = mul nsw i32 %add66, 8, !dbg !2739
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !2740
  %add.ptr69 = getelementptr inbounds i8, i8* %61, i64 %idx.ext68, !dbg !2740
  store i8* %add.ptr69, i8** %ref_end, align 8, !dbg !2741
  store i32 0, i32* %i, align 4, !dbg !2742
  br label %for.cond70, !dbg !2744

for.cond70:                                       ; preds = %for.inc79, %cond.end58
  %68 = load i32, i32* %i, align 4, !dbg !2745
  %cmp71 = icmp slt i32 %68, 64, !dbg !2748
  br i1 %cmp71, label %for.body73, label %for.end81, !dbg !2749

for.body73:                                       ; preds = %for.cond70
  %69 = load i32, i32* %i, align 4, !dbg !2750
  %and = and i32 %69, 7, !dbg !2751
  %70 = load i32, i32* %i, align 4, !dbg !2752
  %shr74 = ashr i32 %70, 3, !dbg !2753
  %71 = load i32, i32* %stride, align 4, !dbg !2754
  %mul75 = mul nsw i32 %shr74, %71, !dbg !2755
  %add76 = add nsw i32 %and, %mul75, !dbg !2756
  %72 = load i32, i32* %i, align 4, !dbg !2757
  %idxprom77 = sext i32 %72 to i64, !dbg !2758
  %arrayidx78 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom77, !dbg !2758
  store i32 %add76, i32* %arrayidx78, align 4, !dbg !2759
  br label %for.inc79, !dbg !2758

for.inc79:                                        ; preds = %for.body73
  %73 = load i32, i32* %i, align 4, !dbg !2760
  %inc80 = add nsw i32 %73, 1, !dbg !2760
  store i32 %inc80, i32* %i, align 4, !dbg !2760
  br label %for.cond70, !dbg !2762, !llvm.loop !2763

for.end81:                                        ; preds = %for.cond70
  store i32 0, i32* %by, align 4, !dbg !2765
  br label %for.cond82, !dbg !2767

for.cond82:                                       ; preds = %for.inc524, %for.end81
  %74 = load i32, i32* %by, align 4, !dbg !2768
  %75 = load i32, i32* %bh, align 4, !dbg !2771
  %cmp83 = icmp slt i32 %74, %75, !dbg !2772
  br i1 %cmp83, label %for.body85, label %for.end526, !dbg !2773

for.body85:                                       ; preds = %for.cond82
  %76 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2774
  %avctx86 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %76, i32 0, i32 0, !dbg !2777
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx86, align 8, !dbg !2777
  %78 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2778
  %79 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2779
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %79, i32 0, i32 9, !dbg !2780
  %arrayidx87 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 0, !dbg !2779
  %call88 = call i32 @read_block_types(%struct.AVCodecContext* %77, %struct.GetBitContext* %78, %struct.Bundle* %arrayidx87), !dbg !2781
  store i32 %call88, i32* %ret, align 4, !dbg !2782
  %cmp89 = icmp slt i32 %call88, 0, !dbg !2783
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !2784

if.then91:                                        ; preds = %for.body85
  %80 = load i32, i32* %ret, align 4, !dbg !2785
  store i32 %80, i32* %retval, align 4, !dbg !2786
  br label %return, !dbg !2786

if.end92:                                         ; preds = %for.body85
  %81 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2787
  %avctx93 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %81, i32 0, i32 0, !dbg !2789
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx93, align 8, !dbg !2789
  %83 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2790
  %84 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2791
  %bundle94 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %84, i32 0, i32 9, !dbg !2792
  %arrayidx95 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle94, i64 0, i64 1, !dbg !2791
  %call96 = call i32 @read_block_types(%struct.AVCodecContext* %82, %struct.GetBitContext* %83, %struct.Bundle* %arrayidx95), !dbg !2793
  store i32 %call96, i32* %ret, align 4, !dbg !2794
  %cmp97 = icmp slt i32 %call96, 0, !dbg !2795
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !2796

if.then99:                                        ; preds = %if.end92
  %85 = load i32, i32* %ret, align 4, !dbg !2797
  store i32 %85, i32* %retval, align 4, !dbg !2798
  br label %return, !dbg !2798

if.end100:                                        ; preds = %if.end92
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2799
  %87 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2801
  %bundle101 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %87, i32 0, i32 9, !dbg !2802
  %arrayidx102 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle101, i64 0, i64 2, !dbg !2801
  %88 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2803
  %call103 = call i32 @read_colors(%struct.GetBitContext* %86, %struct.Bundle* %arrayidx102, %struct.BinkContext* %88), !dbg !2804
  store i32 %call103, i32* %ret, align 4, !dbg !2805
  %cmp104 = icmp slt i32 %call103, 0, !dbg !2806
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !2807

if.then106:                                       ; preds = %if.end100
  %89 = load i32, i32* %ret, align 4, !dbg !2808
  store i32 %89, i32* %retval, align 4, !dbg !2809
  br label %return, !dbg !2809

if.end107:                                        ; preds = %if.end100
  %90 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2810
  %avctx108 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %90, i32 0, i32 0, !dbg !2812
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx108, align 8, !dbg !2812
  %92 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2813
  %93 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2814
  %bundle109 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %93, i32 0, i32 9, !dbg !2815
  %arrayidx110 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle109, i64 0, i64 3, !dbg !2814
  %call111 = call i32 @read_patterns(%struct.AVCodecContext* %91, %struct.GetBitContext* %92, %struct.Bundle* %arrayidx110), !dbg !2816
  store i32 %call111, i32* %ret, align 4, !dbg !2817
  %cmp112 = icmp slt i32 %call111, 0, !dbg !2818
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !2819

if.then114:                                       ; preds = %if.end107
  %94 = load i32, i32* %ret, align 4, !dbg !2820
  store i32 %94, i32* %retval, align 4, !dbg !2821
  br label %return, !dbg !2821

if.end115:                                        ; preds = %if.end107
  %95 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2822
  %avctx116 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %95, i32 0, i32 0, !dbg !2824
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx116, align 8, !dbg !2824
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2825
  %98 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2826
  %bundle117 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %98, i32 0, i32 9, !dbg !2827
  %arrayidx118 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle117, i64 0, i64 4, !dbg !2826
  %call119 = call i32 @read_motion_values(%struct.AVCodecContext* %96, %struct.GetBitContext* %97, %struct.Bundle* %arrayidx118), !dbg !2828
  store i32 %call119, i32* %ret, align 4, !dbg !2829
  %cmp120 = icmp slt i32 %call119, 0, !dbg !2830
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !2831

if.then122:                                       ; preds = %if.end115
  %99 = load i32, i32* %ret, align 4, !dbg !2832
  store i32 %99, i32* %retval, align 4, !dbg !2833
  br label %return, !dbg !2833

if.end123:                                        ; preds = %if.end115
  %100 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2834
  %avctx124 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %100, i32 0, i32 0, !dbg !2836
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx124, align 8, !dbg !2836
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2837
  %103 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2838
  %bundle125 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %103, i32 0, i32 9, !dbg !2839
  %arrayidx126 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle125, i64 0, i64 5, !dbg !2838
  %call127 = call i32 @read_motion_values(%struct.AVCodecContext* %101, %struct.GetBitContext* %102, %struct.Bundle* %arrayidx126), !dbg !2840
  store i32 %call127, i32* %ret, align 4, !dbg !2841
  %cmp128 = icmp slt i32 %call127, 0, !dbg !2842
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !2843

if.then130:                                       ; preds = %if.end123
  %104 = load i32, i32* %ret, align 4, !dbg !2844
  store i32 %104, i32* %retval, align 4, !dbg !2845
  br label %return, !dbg !2845

if.end131:                                        ; preds = %if.end123
  %105 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2846
  %avctx132 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %105, i32 0, i32 0, !dbg !2848
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx132, align 8, !dbg !2848
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2849
  %108 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2850
  %bundle133 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %108, i32 0, i32 9, !dbg !2851
  %arrayidx134 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle133, i64 0, i64 6, !dbg !2850
  %call135 = call i32 @read_dcs(%struct.AVCodecContext* %106, %struct.GetBitContext* %107, %struct.Bundle* %arrayidx134, i32 11, i32 0), !dbg !2852
  store i32 %call135, i32* %ret, align 4, !dbg !2853
  %cmp136 = icmp slt i32 %call135, 0, !dbg !2854
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !2855

if.then138:                                       ; preds = %if.end131
  %109 = load i32, i32* %ret, align 4, !dbg !2856
  store i32 %109, i32* %retval, align 4, !dbg !2857
  br label %return, !dbg !2857

if.end139:                                        ; preds = %if.end131
  %110 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2858
  %avctx140 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %110, i32 0, i32 0, !dbg !2860
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx140, align 8, !dbg !2860
  %112 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2861
  %113 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2862
  %bundle141 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %113, i32 0, i32 9, !dbg !2863
  %arrayidx142 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle141, i64 0, i64 7, !dbg !2862
  %call143 = call i32 @read_dcs(%struct.AVCodecContext* %111, %struct.GetBitContext* %112, %struct.Bundle* %arrayidx142, i32 11, i32 1), !dbg !2864
  store i32 %call143, i32* %ret, align 4, !dbg !2865
  %cmp144 = icmp slt i32 %call143, 0, !dbg !2866
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !2867

if.then146:                                       ; preds = %if.end139
  %114 = load i32, i32* %ret, align 4, !dbg !2868
  store i32 %114, i32* %retval, align 4, !dbg !2869
  br label %return, !dbg !2869

if.end147:                                        ; preds = %if.end139
  %115 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2870
  %avctx148 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %115, i32 0, i32 0, !dbg !2872
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx148, align 8, !dbg !2872
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2873
  %118 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2874
  %bundle149 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %118, i32 0, i32 9, !dbg !2875
  %arrayidx150 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle149, i64 0, i64 8, !dbg !2874
  %call151 = call i32 @read_runs(%struct.AVCodecContext* %116, %struct.GetBitContext* %117, %struct.Bundle* %arrayidx150), !dbg !2876
  store i32 %call151, i32* %ret, align 4, !dbg !2877
  %cmp152 = icmp slt i32 %call151, 0, !dbg !2878
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !2879

if.then154:                                       ; preds = %if.end147
  %119 = load i32, i32* %ret, align 4, !dbg !2880
  store i32 %119, i32* %retval, align 4, !dbg !2881
  br label %return, !dbg !2881

if.end155:                                        ; preds = %if.end147
  %120 = load i32, i32* %by, align 4, !dbg !2882
  %121 = load i32, i32* %bh, align 4, !dbg !2884
  %cmp156 = icmp eq i32 %120, %121, !dbg !2885
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !2886

if.then158:                                       ; preds = %if.end155
  br label %for.end526, !dbg !2887

if.end159:                                        ; preds = %if.end155
  %122 = load i32, i32* %plane_idx.addr, align 4, !dbg !2888
  %idxprom160 = sext i32 %122 to i64, !dbg !2889
  %123 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2889
  %data161 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %123, i32 0, i32 0, !dbg !2890
  %arrayidx162 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data161, i64 0, i64 %idxprom160, !dbg !2889
  %124 = load i8*, i8** %arrayidx162, align 8, !dbg !2889
  %125 = load i32, i32* %by, align 4, !dbg !2891
  %mul163 = mul nsw i32 8, %125, !dbg !2892
  %126 = load i32, i32* %stride, align 4, !dbg !2893
  %mul164 = mul nsw i32 %mul163, %126, !dbg !2894
  %idx.ext165 = sext i32 %mul164 to i64, !dbg !2895
  %add.ptr166 = getelementptr inbounds i8, i8* %124, i64 %idx.ext165, !dbg !2895
  store i8* %add.ptr166, i8** %dst, align 8, !dbg !2896
  %127 = load i32, i32* %plane_idx.addr, align 4, !dbg !2897
  %idxprom167 = sext i32 %127 to i64, !dbg !2898
  %128 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2898
  %last168 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %128, i32 0, i32 4, !dbg !2899
  %129 = load %struct.AVFrame*, %struct.AVFrame** %last168, align 8, !dbg !2899
  %data169 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %129, i32 0, i32 0, !dbg !2900
  %arrayidx170 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data169, i64 0, i64 %idxprom167, !dbg !2898
  %130 = load i8*, i8** %arrayidx170, align 8, !dbg !2898
  %tobool171 = icmp ne i8* %130, null, !dbg !2898
  br i1 %tobool171, label %cond.true172, label %cond.false177, !dbg !2898

cond.true172:                                     ; preds = %if.end159
  %131 = load i32, i32* %plane_idx.addr, align 4, !dbg !2901
  %idxprom173 = sext i32 %131 to i64, !dbg !2903
  %132 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2903
  %last174 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %132, i32 0, i32 4, !dbg !2904
  %133 = load %struct.AVFrame*, %struct.AVFrame** %last174, align 8, !dbg !2904
  %data175 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %133, i32 0, i32 0, !dbg !2905
  %arrayidx176 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data175, i64 0, i64 %idxprom173, !dbg !2903
  %134 = load i8*, i8** %arrayidx176, align 8, !dbg !2903
  br label %cond.end181, !dbg !2906

cond.false177:                                    ; preds = %if.end159
  %135 = load i32, i32* %plane_idx.addr, align 4, !dbg !2907
  %idxprom178 = sext i32 %135 to i64, !dbg !2908
  %136 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !2908
  %data179 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %136, i32 0, i32 0, !dbg !2909
  %arrayidx180 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data179, i64 0, i64 %idxprom178, !dbg !2908
  %137 = load i8*, i8** %arrayidx180, align 8, !dbg !2908
  br label %cond.end181, !dbg !2910

cond.end181:                                      ; preds = %cond.false177, %cond.true172
  %cond182 = phi i8* [ %134, %cond.true172 ], [ %137, %cond.false177 ], !dbg !2912
  %138 = load i32, i32* %by, align 4, !dbg !2914
  %mul183 = mul nsw i32 8, %138, !dbg !2915
  %139 = load i32, i32* %stride, align 4, !dbg !2916
  %mul184 = mul nsw i32 %mul183, %139, !dbg !2917
  %idx.ext185 = sext i32 %mul184 to i64, !dbg !2918
  %add.ptr186 = getelementptr inbounds i8, i8* %cond182, i64 %idx.ext185, !dbg !2918
  store i8* %add.ptr186, i8** %prev, align 8, !dbg !2919
  store i32 0, i32* %bx, align 4, !dbg !2920
  br label %for.cond187, !dbg !2922

for.cond187:                                      ; preds = %for.inc519, %cond.end181
  %140 = load i32, i32* %bx, align 4, !dbg !2923
  %141 = load i32, i32* %bw, align 4, !dbg !2926
  %cmp188 = icmp slt i32 %140, %141, !dbg !2927
  br i1 %cmp188, label %for.body190, label %for.end523, !dbg !2928

for.body190:                                      ; preds = %for.cond187
  %142 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2929
  %call191 = call i32 @get_value(%struct.BinkContext* %142, i32 0), !dbg !2931
  store i32 %call191, i32* %blk, align 4, !dbg !2932
  %143 = load i32, i32* %by, align 4, !dbg !2933
  %and192 = and i32 %143, 1, !dbg !2935
  %tobool193 = icmp ne i32 %and192, 0, !dbg !2935
  br i1 %tobool193, label %land.lhs.true194, label %if.end201, !dbg !2936

land.lhs.true194:                                 ; preds = %for.body190
  %144 = load i32, i32* %blk, align 4, !dbg !2937
  %cmp195 = icmp eq i32 %144, 1, !dbg !2939
  br i1 %cmp195, label %if.then197, label %if.end201, !dbg !2940

if.then197:                                       ; preds = %land.lhs.true194
  %145 = load i32, i32* %bx, align 4, !dbg !2941
  %inc198 = add nsw i32 %145, 1, !dbg !2941
  store i32 %inc198, i32* %bx, align 4, !dbg !2941
  %146 = load i8*, i8** %dst, align 8, !dbg !2943
  %add.ptr199 = getelementptr inbounds i8, i8* %146, i64 8, !dbg !2943
  store i8* %add.ptr199, i8** %dst, align 8, !dbg !2943
  %147 = load i8*, i8** %prev, align 8, !dbg !2944
  %add.ptr200 = getelementptr inbounds i8, i8* %147, i64 8, !dbg !2944
  store i8* %add.ptr200, i8** %prev, align 8, !dbg !2944
  br label %for.inc519, !dbg !2945

if.end201:                                        ; preds = %land.lhs.true194, %for.body190
  %148 = load i32, i32* %blk, align 4, !dbg !2946
  switch i32 %148, label %sw.default516 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb205
    i32 2, label %sw.bb341
    i32 3, label %sw.bb347
    i32 4, label %sw.bb410
    i32 5, label %sw.bb420
    i32 6, label %sw.bb435
    i32 7, label %sw.bb442
    i32 8, label %sw.bb461
    i32 9, label %sw.bb496
  ], !dbg !2947

sw.bb:                                            ; preds = %if.end201
  %149 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2948
  %hdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %149, i32 0, i32 2, !dbg !2950
  %put_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp, i32 0, i32 0, !dbg !2951
  %arrayidx202 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab, i64 0, i64 1, !dbg !2948
  %arrayidx203 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx202, i64 0, i64 0, !dbg !2948
  %150 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx203, align 8, !dbg !2948
  %151 = load i8*, i8** %dst, align 8, !dbg !2952
  %152 = load i8*, i8** %prev, align 8, !dbg !2953
  %153 = load i32, i32* %stride, align 4, !dbg !2954
  %conv204 = sext i32 %153 to i64, !dbg !2954
  call void %150(i8* %151, i8* %152, i64 %conv204, i32 8), !dbg !2948
  br label %sw.epilog518, !dbg !2955

sw.bb205:                                         ; preds = %if.end201
  %154 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2956
  %call206 = call i32 @get_value(%struct.BinkContext* %154, i32 1), !dbg !2957
  store i32 %call206, i32* %blk, align 4, !dbg !2958
  %155 = load i32, i32* %blk, align 4, !dbg !2959
  switch i32 %155, label %sw.default [
    i32 3, label %sw.bb207
    i32 5, label %sw.bb258
    i32 6, label %sw.bb271
    i32 8, label %sw.bb276
    i32 9, label %sw.bb311
  ], !dbg !2960

sw.bb207:                                         ; preds = %sw.bb205
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2961
  %call208 = call i32 @get_bits(%struct.GetBitContext* %156, i32 4), !dbg !2963
  %idxprom209 = zext i32 %call208 to i64, !dbg !2964
  %arrayidx210 = getelementptr inbounds [16 x [64 x i8]], [16 x [64 x i8]]* @bink_patterns, i64 0, i64 %idxprom209, !dbg !2964
  %arraydecay211 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx210, i32 0, i32 0, !dbg !2964
  store i8* %arraydecay211, i8** %scan, align 8, !dbg !2965
  store i32 0, i32* %i, align 4, !dbg !2966
  br label %do.body, !dbg !2967, !llvm.loop !2968

do.body:                                          ; preds = %do.cond, %sw.bb207
  call void @llvm.dbg.declare(metadata i32* %run, metadata !2969, metadata !1735), !dbg !2971
  %157 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2972
  %call212 = call i32 @get_value(%struct.BinkContext* %157, i32 8), !dbg !2973
  %add213 = add nsw i32 %call212, 1, !dbg !2974
  store i32 %add213, i32* %run, align 4, !dbg !2971
  %158 = load i32, i32* %run, align 4, !dbg !2975
  %159 = load i32, i32* %i, align 4, !dbg !2976
  %add214 = add nsw i32 %159, %158, !dbg !2976
  store i32 %add214, i32* %i, align 4, !dbg !2976
  %160 = load i32, i32* %i, align 4, !dbg !2977
  %cmp215 = icmp sgt i32 %160, 64, !dbg !2979
  br i1 %cmp215, label %if.then217, label %if.end219, !dbg !2980

if.then217:                                       ; preds = %do.body
  %161 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2981
  %avctx218 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %161, i32 0, i32 0, !dbg !2983
  %162 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx218, align 8, !dbg !2983
  %163 = bitcast %struct.AVCodecContext* %162 to i8*, !dbg !2981
  call void (i8*, i32, i8*, ...) @av_log(i8* %163, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0)), !dbg !2984
  store i32 -1094995529, i32* %retval, align 4, !dbg !2985
  br label %return, !dbg !2985

if.end219:                                        ; preds = %do.body
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2986
  %call220 = call i32 @get_bits1(%struct.GetBitContext* %164), !dbg !2988
  %tobool221 = icmp ne i32 %call220, 0, !dbg !2988
  br i1 %tobool221, label %if.then222, label %if.else, !dbg !2989

if.then222:                                       ; preds = %if.end219
  %165 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !2990
  %call223 = call i32 @get_value(%struct.BinkContext* %165, i32 2), !dbg !2992
  store i32 %call223, i32* %v, align 4, !dbg !2993
  store i32 0, i32* %j, align 4, !dbg !2994
  br label %for.cond224, !dbg !2996

for.cond224:                                      ; preds = %for.inc231, %if.then222
  %166 = load i32, i32* %j, align 4, !dbg !2997
  %167 = load i32, i32* %run, align 4, !dbg !3000
  %cmp225 = icmp slt i32 %166, %167, !dbg !3001
  br i1 %cmp225, label %for.body227, label %for.end233, !dbg !3002

for.body227:                                      ; preds = %for.cond224
  %168 = load i32, i32* %v, align 4, !dbg !3003
  %conv228 = trunc i32 %168 to i8, !dbg !3003
  %169 = load i8*, i8** %scan, align 8, !dbg !3004
  %incdec.ptr = getelementptr inbounds i8, i8* %169, i32 1, !dbg !3004
  store i8* %incdec.ptr, i8** %scan, align 8, !dbg !3004
  %170 = load i8, i8* %169, align 1, !dbg !3005
  %idxprom229 = zext i8 %170 to i64, !dbg !3006
  %171 = load i8*, i8** %ublock, align 8, !dbg !3006
  %arrayidx230 = getelementptr inbounds i8, i8* %171, i64 %idxprom229, !dbg !3006
  store i8 %conv228, i8* %arrayidx230, align 1, !dbg !3007
  br label %for.inc231, !dbg !3006

for.inc231:                                       ; preds = %for.body227
  %172 = load i32, i32* %j, align 4, !dbg !3008
  %inc232 = add nsw i32 %172, 1, !dbg !3008
  store i32 %inc232, i32* %j, align 4, !dbg !3008
  br label %for.cond224, !dbg !3010, !llvm.loop !3011

for.end233:                                       ; preds = %for.cond224
  br label %if.end246, !dbg !3013

if.else:                                          ; preds = %if.end219
  store i32 0, i32* %j, align 4, !dbg !3014
  br label %for.cond234, !dbg !3017

for.cond234:                                      ; preds = %for.inc243, %if.else
  %173 = load i32, i32* %j, align 4, !dbg !3018
  %174 = load i32, i32* %run, align 4, !dbg !3021
  %cmp235 = icmp slt i32 %173, %174, !dbg !3022
  br i1 %cmp235, label %for.body237, label %for.end245, !dbg !3023

for.body237:                                      ; preds = %for.cond234
  %175 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3024
  %call238 = call i32 @get_value(%struct.BinkContext* %175, i32 2), !dbg !3025
  %conv239 = trunc i32 %call238 to i8, !dbg !3025
  %176 = load i8*, i8** %scan, align 8, !dbg !3026
  %incdec.ptr240 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !3026
  store i8* %incdec.ptr240, i8** %scan, align 8, !dbg !3026
  %177 = load i8, i8* %176, align 1, !dbg !3027
  %idxprom241 = zext i8 %177 to i64, !dbg !3028
  %178 = load i8*, i8** %ublock, align 8, !dbg !3028
  %arrayidx242 = getelementptr inbounds i8, i8* %178, i64 %idxprom241, !dbg !3028
  store i8 %conv239, i8* %arrayidx242, align 1, !dbg !3029
  br label %for.inc243, !dbg !3028

for.inc243:                                       ; preds = %for.body237
  %179 = load i32, i32* %j, align 4, !dbg !3030
  %inc244 = add nsw i32 %179, 1, !dbg !3030
  store i32 %inc244, i32* %j, align 4, !dbg !3030
  br label %for.cond234, !dbg !3032, !llvm.loop !3033

for.end245:                                       ; preds = %for.cond234
  br label %if.end246

if.end246:                                        ; preds = %for.end245, %for.end233
  br label %do.cond, !dbg !3035

do.cond:                                          ; preds = %if.end246
  %180 = load i32, i32* %i, align 4, !dbg !3036
  %cmp247 = icmp slt i32 %180, 63, !dbg !3038
  br i1 %cmp247, label %do.body, label %do.end, !dbg !3039, !llvm.loop !2968

do.end:                                           ; preds = %do.cond
  %181 = load i32, i32* %i, align 4, !dbg !3040
  %cmp249 = icmp eq i32 %181, 63, !dbg !3042
  br i1 %cmp249, label %if.then251, label %if.end257, !dbg !3043

if.then251:                                       ; preds = %do.end
  %182 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3044
  %call252 = call i32 @get_value(%struct.BinkContext* %182, i32 2), !dbg !3045
  %conv253 = trunc i32 %call252 to i8, !dbg !3045
  %183 = load i8*, i8** %scan, align 8, !dbg !3046
  %incdec.ptr254 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !3046
  store i8* %incdec.ptr254, i8** %scan, align 8, !dbg !3046
  %184 = load i8, i8* %183, align 1, !dbg !3047
  %idxprom255 = zext i8 %184 to i64, !dbg !3048
  %185 = load i8*, i8** %ublock, align 8, !dbg !3048
  %arrayidx256 = getelementptr inbounds i8, i8* %185, i64 %idxprom255, !dbg !3048
  store i8 %conv253, i8* %arrayidx256, align 1, !dbg !3049
  br label %if.end257, !dbg !3048

if.end257:                                        ; preds = %if.then251, %do.end
  br label %sw.epilog, !dbg !3050

sw.bb258:                                         ; preds = %sw.bb205
  %186 = load i32*, i32** %dctblock, align 8, !dbg !3051
  %187 = bitcast i32* %186 to i8*, !dbg !3052
  call void @llvm.memset.p0i8.i64(i8* %187, i8 0, i64 256, i32 4, i1 false), !dbg !3052
  %188 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3053
  %call259 = call i32 @get_value(%struct.BinkContext* %188, i32 6), !dbg !3054
  %189 = load i32*, i32** %dctblock, align 8, !dbg !3055
  %arrayidx260 = getelementptr inbounds i32, i32* %189, i64 0, !dbg !3055
  store i32 %call259, i32* %arrayidx260, align 4, !dbg !3056
  %190 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3057
  %191 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3059
  %192 = load i32*, i32** %dctblock, align 8, !dbg !3060
  %arraydecay261 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3061
  %call262 = call i32 @read_dct_coeffs(%struct.BinkContext* %190, %struct.GetBitContext* %191, i32* %192, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0), i32* %coef_count, i32* %arraydecay261, i32 -1), !dbg !3062
  store i32 %call262, i32* %quant_idx, align 4, !dbg !3063
  %cmp263 = icmp slt i32 %call262, 0, !dbg !3064
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !3065

if.then265:                                       ; preds = %sw.bb258
  %193 = load i32, i32* %quant_idx, align 4, !dbg !3066
  store i32 %193, i32* %retval, align 4, !dbg !3067
  br label %return, !dbg !3067

if.end266:                                        ; preds = %sw.bb258
  %194 = load i32*, i32** %dctblock, align 8, !dbg !3068
  %195 = load i32, i32* %quant_idx, align 4, !dbg !3069
  %idxprom267 = sext i32 %195 to i64, !dbg !3070
  %arrayidx268 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @bink_intra_quant, i64 0, i64 %idxprom267, !dbg !3070
  %arraydecay269 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx268, i32 0, i32 0, !dbg !3070
  %196 = load i32, i32* %coef_count, align 4, !dbg !3071
  %arraydecay270 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3072
  call void @unquantize_dct_coeffs(i32* %194, i32* %arraydecay269, i32 %196, i32* %arraydecay270, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0)), !dbg !3073
  %197 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3074
  %binkdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %197, i32 0, i32 3, !dbg !3075
  %idct_put = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp, i32 0, i32 0, !dbg !3076
  %198 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %idct_put, align 8, !dbg !3076
  %199 = load i8*, i8** %ublock, align 8, !dbg !3077
  %200 = load i32*, i32** %dctblock, align 8, !dbg !3078
  call void %198(i8* %199, i32 8, i32* %200), !dbg !3074
  br label %sw.epilog, !dbg !3079

sw.bb271:                                         ; preds = %sw.bb205
  %201 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3080
  %call272 = call i32 @get_value(%struct.BinkContext* %201, i32 2), !dbg !3081
  store i32 %call272, i32* %v, align 4, !dbg !3082
  %202 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3083
  %bdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %202, i32 0, i32 1, !dbg !3084
  %fill_block_tab = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp, i32 0, i32 2, !dbg !3085
  %arrayidx273 = getelementptr inbounds [2 x void (i8*, i8, i64, i32)*], [2 x void (i8*, i8, i64, i32)*]* %fill_block_tab, i64 0, i64 0, !dbg !3083
  %203 = load void (i8*, i8, i64, i32)*, void (i8*, i8, i64, i32)** %arrayidx273, align 8, !dbg !3083
  %204 = load i8*, i8** %dst, align 8, !dbg !3086
  %205 = load i32, i32* %v, align 4, !dbg !3087
  %conv274 = trunc i32 %205 to i8, !dbg !3087
  %206 = load i32, i32* %stride, align 4, !dbg !3088
  %conv275 = sext i32 %206 to i64, !dbg !3088
  call void %203(i8* %204, i8 zeroext %conv274, i64 %conv275, i32 16), !dbg !3083
  br label %sw.epilog, !dbg !3089

sw.bb276:                                         ; preds = %sw.bb205
  store i32 0, i32* %i, align 4, !dbg !3090
  br label %for.cond277, !dbg !3092

for.cond277:                                      ; preds = %for.inc284, %sw.bb276
  %207 = load i32, i32* %i, align 4, !dbg !3093
  %cmp278 = icmp slt i32 %207, 2, !dbg !3096
  br i1 %cmp278, label %for.body280, label %for.end286, !dbg !3097

for.body280:                                      ; preds = %for.cond277
  %208 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3098
  %call281 = call i32 @get_value(%struct.BinkContext* %208, i32 2), !dbg !3099
  %209 = load i32, i32* %i, align 4, !dbg !3100
  %idxprom282 = sext i32 %209 to i64, !dbg !3101
  %arrayidx283 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom282, !dbg !3101
  store i32 %call281, i32* %arrayidx283, align 4, !dbg !3102
  br label %for.inc284, !dbg !3101

for.inc284:                                       ; preds = %for.body280
  %210 = load i32, i32* %i, align 4, !dbg !3103
  %inc285 = add nsw i32 %210, 1, !dbg !3103
  store i32 %inc285, i32* %i, align 4, !dbg !3103
  br label %for.cond277, !dbg !3105, !llvm.loop !3106

for.end286:                                       ; preds = %for.cond277
  store i32 0, i32* %j, align 4, !dbg !3108
  br label %for.cond287, !dbg !3110

for.cond287:                                      ; preds = %for.inc308, %for.end286
  %211 = load i32, i32* %j, align 4, !dbg !3111
  %cmp288 = icmp slt i32 %211, 8, !dbg !3114
  br i1 %cmp288, label %for.body290, label %for.end310, !dbg !3115

for.body290:                                      ; preds = %for.cond287
  %212 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3116
  %call291 = call i32 @get_value(%struct.BinkContext* %212, i32 3), !dbg !3118
  store i32 %call291, i32* %v, align 4, !dbg !3119
  store i32 0, i32* %i, align 4, !dbg !3120
  br label %for.cond292, !dbg !3122

for.cond292:                                      ; preds = %for.inc304, %for.body290
  %213 = load i32, i32* %i, align 4, !dbg !3123
  %cmp293 = icmp slt i32 %213, 8, !dbg !3126
  br i1 %cmp293, label %for.body295, label %for.end307, !dbg !3127

for.body295:                                      ; preds = %for.cond292
  %214 = load i32, i32* %v, align 4, !dbg !3128
  %and296 = and i32 %214, 1, !dbg !3129
  %idxprom297 = sext i32 %and296 to i64, !dbg !3130
  %arrayidx298 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom297, !dbg !3130
  %215 = load i32, i32* %arrayidx298, align 4, !dbg !3130
  %conv299 = trunc i32 %215 to i8, !dbg !3130
  %216 = load i32, i32* %i, align 4, !dbg !3131
  %217 = load i32, i32* %j, align 4, !dbg !3132
  %mul300 = mul nsw i32 %217, 8, !dbg !3133
  %add301 = add nsw i32 %216, %mul300, !dbg !3134
  %idxprom302 = sext i32 %add301 to i64, !dbg !3135
  %218 = load i8*, i8** %ublock, align 8, !dbg !3135
  %arrayidx303 = getelementptr inbounds i8, i8* %218, i64 %idxprom302, !dbg !3135
  store i8 %conv299, i8* %arrayidx303, align 1, !dbg !3136
  br label %for.inc304, !dbg !3135

for.inc304:                                       ; preds = %for.body295
  %219 = load i32, i32* %i, align 4, !dbg !3137
  %inc305 = add nsw i32 %219, 1, !dbg !3137
  store i32 %inc305, i32* %i, align 4, !dbg !3137
  %220 = load i32, i32* %v, align 4, !dbg !3139
  %shr306 = ashr i32 %220, 1, !dbg !3139
  store i32 %shr306, i32* %v, align 4, !dbg !3139
  br label %for.cond292, !dbg !3140, !llvm.loop !3141

for.end307:                                       ; preds = %for.cond292
  br label %for.inc308, !dbg !3143

for.inc308:                                       ; preds = %for.end307
  %221 = load i32, i32* %j, align 4, !dbg !3144
  %inc309 = add nsw i32 %221, 1, !dbg !3144
  store i32 %inc309, i32* %j, align 4, !dbg !3144
  br label %for.cond287, !dbg !3146, !llvm.loop !3147

for.end310:                                       ; preds = %for.cond287
  br label %sw.epilog, !dbg !3149

sw.bb311:                                         ; preds = %sw.bb205
  store i32 0, i32* %j, align 4, !dbg !3150
  br label %for.cond312, !dbg !3152

for.cond312:                                      ; preds = %for.inc329, %sw.bb311
  %222 = load i32, i32* %j, align 4, !dbg !3153
  %cmp313 = icmp slt i32 %222, 8, !dbg !3156
  br i1 %cmp313, label %for.body315, label %for.end331, !dbg !3157

for.body315:                                      ; preds = %for.cond312
  store i32 0, i32* %i, align 4, !dbg !3158
  br label %for.cond316, !dbg !3160

for.cond316:                                      ; preds = %for.inc326, %for.body315
  %223 = load i32, i32* %i, align 4, !dbg !3161
  %cmp317 = icmp slt i32 %223, 8, !dbg !3164
  br i1 %cmp317, label %for.body319, label %for.end328, !dbg !3165

for.body319:                                      ; preds = %for.cond316
  %224 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3166
  %call320 = call i32 @get_value(%struct.BinkContext* %224, i32 2), !dbg !3167
  %conv321 = trunc i32 %call320 to i8, !dbg !3167
  %225 = load i32, i32* %i, align 4, !dbg !3168
  %226 = load i32, i32* %j, align 4, !dbg !3169
  %mul322 = mul nsw i32 %226, 8, !dbg !3170
  %add323 = add nsw i32 %225, %mul322, !dbg !3171
  %idxprom324 = sext i32 %add323 to i64, !dbg !3172
  %227 = load i8*, i8** %ublock, align 8, !dbg !3172
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %idxprom324, !dbg !3172
  store i8 %conv321, i8* %arrayidx325, align 1, !dbg !3173
  br label %for.inc326, !dbg !3172

for.inc326:                                       ; preds = %for.body319
  %228 = load i32, i32* %i, align 4, !dbg !3174
  %inc327 = add nsw i32 %228, 1, !dbg !3174
  store i32 %inc327, i32* %i, align 4, !dbg !3174
  br label %for.cond316, !dbg !3176, !llvm.loop !3177

for.end328:                                       ; preds = %for.cond316
  br label %for.inc329, !dbg !3179

for.inc329:                                       ; preds = %for.end328
  %229 = load i32, i32* %j, align 4, !dbg !3181
  %inc330 = add nsw i32 %229, 1, !dbg !3181
  store i32 %inc330, i32* %j, align 4, !dbg !3181
  br label %for.cond312, !dbg !3183, !llvm.loop !3184

for.end331:                                       ; preds = %for.cond312
  br label %sw.epilog, !dbg !3186

sw.default:                                       ; preds = %sw.bb205
  %230 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3187
  %avctx332 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %230, i32 0, i32 0, !dbg !3188
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx332, align 8, !dbg !3188
  %232 = bitcast %struct.AVCodecContext* %231 to i8*, !dbg !3187
  %233 = load i32, i32* %blk, align 4, !dbg !3189
  call void (i8*, i32, i8*, ...) @av_log(i8* %232, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 %233), !dbg !3190
  store i32 -1094995529, i32* %retval, align 4, !dbg !3191
  br label %return, !dbg !3191

sw.epilog:                                        ; preds = %for.end331, %for.end310, %sw.bb271, %if.end266, %if.end257
  %234 = load i32, i32* %blk, align 4, !dbg !3192
  %cmp333 = icmp ne i32 %234, 6, !dbg !3194
  br i1 %cmp333, label %if.then335, label %if.end337, !dbg !3195

if.then335:                                       ; preds = %sw.epilog
  %235 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3196
  %binkdsp336 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %235, i32 0, i32 3, !dbg !3197
  %scale_block = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp336, i32 0, i32 2, !dbg !3198
  %236 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %scale_block, align 8, !dbg !3198
  %237 = load i8*, i8** %ublock, align 8, !dbg !3199
  %238 = load i8*, i8** %dst, align 8, !dbg !3200
  %239 = load i32, i32* %stride, align 4, !dbg !3201
  call void %236(i8* %237, i8* %238, i32 %239), !dbg !3196
  br label %if.end337, !dbg !3196

if.end337:                                        ; preds = %if.then335, %sw.epilog
  %240 = load i32, i32* %bx, align 4, !dbg !3202
  %inc338 = add nsw i32 %240, 1, !dbg !3202
  store i32 %inc338, i32* %bx, align 4, !dbg !3202
  %241 = load i8*, i8** %dst, align 8, !dbg !3203
  %add.ptr339 = getelementptr inbounds i8, i8* %241, i64 8, !dbg !3203
  store i8* %add.ptr339, i8** %dst, align 8, !dbg !3203
  %242 = load i8*, i8** %prev, align 8, !dbg !3204
  %add.ptr340 = getelementptr inbounds i8, i8* %242, i64 8, !dbg !3204
  store i8* %add.ptr340, i8** %prev, align 8, !dbg !3204
  br label %sw.epilog518, !dbg !3205

sw.bb341:                                         ; preds = %if.end201
  %243 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3206
  %244 = load i8*, i8** %dst, align 8, !dbg !3207
  %245 = load i8*, i8** %prev, align 8, !dbg !3208
  %246 = load i32, i32* %stride, align 4, !dbg !3209
  %247 = load i8*, i8** %ref_start, align 8, !dbg !3210
  %248 = load i8*, i8** %ref_end, align 8, !dbg !3211
  %call342 = call i32 @bink_put_pixels(%struct.BinkContext* %243, i8* %244, i8* %245, i32 %246, i8* %247, i8* %248), !dbg !3212
  store i32 %call342, i32* %ret, align 4, !dbg !3213
  %249 = load i32, i32* %ret, align 4, !dbg !3214
  %cmp343 = icmp slt i32 %249, 0, !dbg !3216
  br i1 %cmp343, label %if.then345, label %if.end346, !dbg !3217

if.then345:                                       ; preds = %sw.bb341
  %250 = load i32, i32* %ret, align 4, !dbg !3218
  store i32 %250, i32* %retval, align 4, !dbg !3219
  br label %return, !dbg !3219

if.end346:                                        ; preds = %sw.bb341
  br label %sw.epilog518, !dbg !3220

sw.bb347:                                         ; preds = %if.end201
  %251 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3221
  %call348 = call i32 @get_bits(%struct.GetBitContext* %251, i32 4), !dbg !3222
  %idxprom349 = zext i32 %call348 to i64, !dbg !3223
  %arrayidx350 = getelementptr inbounds [16 x [64 x i8]], [16 x [64 x i8]]* @bink_patterns, i64 0, i64 %idxprom349, !dbg !3223
  %arraydecay351 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx350, i32 0, i32 0, !dbg !3223
  store i8* %arraydecay351, i8** %scan, align 8, !dbg !3224
  store i32 0, i32* %i, align 4, !dbg !3225
  br label %do.body352, !dbg !3226, !llvm.loop !3227

do.body352:                                       ; preds = %do.cond395, %sw.bb347
  call void @llvm.dbg.declare(metadata i32* %run353, metadata !3228, metadata !1735), !dbg !3230
  %252 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3231
  %call354 = call i32 @get_value(%struct.BinkContext* %252, i32 8), !dbg !3232
  %add355 = add nsw i32 %call354, 1, !dbg !3233
  store i32 %add355, i32* %run353, align 4, !dbg !3230
  %253 = load i32, i32* %run353, align 4, !dbg !3234
  %254 = load i32, i32* %i, align 4, !dbg !3235
  %add356 = add nsw i32 %254, %253, !dbg !3235
  store i32 %add356, i32* %i, align 4, !dbg !3235
  %255 = load i32, i32* %i, align 4, !dbg !3236
  %cmp357 = icmp sgt i32 %255, 64, !dbg !3238
  br i1 %cmp357, label %if.then359, label %if.end361, !dbg !3239

if.then359:                                       ; preds = %do.body352
  %256 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3240
  %avctx360 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %256, i32 0, i32 0, !dbg !3242
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx360, align 8, !dbg !3242
  %258 = bitcast %struct.AVCodecContext* %257 to i8*, !dbg !3240
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0)), !dbg !3243
  store i32 -1094995529, i32* %retval, align 4, !dbg !3244
  br label %return, !dbg !3244

if.end361:                                        ; preds = %do.body352
  %259 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3245
  %call362 = call i32 @get_bits1(%struct.GetBitContext* %259), !dbg !3247
  %tobool363 = icmp ne i32 %call362, 0, !dbg !3247
  br i1 %tobool363, label %if.then364, label %if.else379, !dbg !3248

if.then364:                                       ; preds = %if.end361
  %260 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3249
  %call365 = call i32 @get_value(%struct.BinkContext* %260, i32 2), !dbg !3251
  store i32 %call365, i32* %v, align 4, !dbg !3252
  store i32 0, i32* %j, align 4, !dbg !3253
  br label %for.cond366, !dbg !3255

for.cond366:                                      ; preds = %for.inc376, %if.then364
  %261 = load i32, i32* %j, align 4, !dbg !3256
  %262 = load i32, i32* %run353, align 4, !dbg !3259
  %cmp367 = icmp slt i32 %261, %262, !dbg !3260
  br i1 %cmp367, label %for.body369, label %for.end378, !dbg !3261

for.body369:                                      ; preds = %for.cond366
  %263 = load i32, i32* %v, align 4, !dbg !3262
  %conv370 = trunc i32 %263 to i8, !dbg !3262
  %264 = load i8*, i8** %scan, align 8, !dbg !3263
  %incdec.ptr371 = getelementptr inbounds i8, i8* %264, i32 1, !dbg !3263
  store i8* %incdec.ptr371, i8** %scan, align 8, !dbg !3263
  %265 = load i8, i8* %264, align 1, !dbg !3264
  %idxprom372 = zext i8 %265 to i64, !dbg !3265
  %arrayidx373 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom372, !dbg !3265
  %266 = load i32, i32* %arrayidx373, align 4, !dbg !3265
  %idxprom374 = sext i32 %266 to i64, !dbg !3266
  %267 = load i8*, i8** %dst, align 8, !dbg !3266
  %arrayidx375 = getelementptr inbounds i8, i8* %267, i64 %idxprom374, !dbg !3266
  store i8 %conv370, i8* %arrayidx375, align 1, !dbg !3267
  br label %for.inc376, !dbg !3266

for.inc376:                                       ; preds = %for.body369
  %268 = load i32, i32* %j, align 4, !dbg !3268
  %inc377 = add nsw i32 %268, 1, !dbg !3268
  store i32 %inc377, i32* %j, align 4, !dbg !3268
  br label %for.cond366, !dbg !3270, !llvm.loop !3271

for.end378:                                       ; preds = %for.cond366
  br label %if.end394, !dbg !3273

if.else379:                                       ; preds = %if.end361
  store i32 0, i32* %j, align 4, !dbg !3274
  br label %for.cond380, !dbg !3277

for.cond380:                                      ; preds = %for.inc391, %if.else379
  %269 = load i32, i32* %j, align 4, !dbg !3278
  %270 = load i32, i32* %run353, align 4, !dbg !3281
  %cmp381 = icmp slt i32 %269, %270, !dbg !3282
  br i1 %cmp381, label %for.body383, label %for.end393, !dbg !3283

for.body383:                                      ; preds = %for.cond380
  %271 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3284
  %call384 = call i32 @get_value(%struct.BinkContext* %271, i32 2), !dbg !3285
  %conv385 = trunc i32 %call384 to i8, !dbg !3285
  %272 = load i8*, i8** %scan, align 8, !dbg !3286
  %incdec.ptr386 = getelementptr inbounds i8, i8* %272, i32 1, !dbg !3286
  store i8* %incdec.ptr386, i8** %scan, align 8, !dbg !3286
  %273 = load i8, i8* %272, align 1, !dbg !3287
  %idxprom387 = zext i8 %273 to i64, !dbg !3288
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom387, !dbg !3288
  %274 = load i32, i32* %arrayidx388, align 4, !dbg !3288
  %idxprom389 = sext i32 %274 to i64, !dbg !3289
  %275 = load i8*, i8** %dst, align 8, !dbg !3289
  %arrayidx390 = getelementptr inbounds i8, i8* %275, i64 %idxprom389, !dbg !3289
  store i8 %conv385, i8* %arrayidx390, align 1, !dbg !3290
  br label %for.inc391, !dbg !3289

for.inc391:                                       ; preds = %for.body383
  %276 = load i32, i32* %j, align 4, !dbg !3291
  %inc392 = add nsw i32 %276, 1, !dbg !3291
  store i32 %inc392, i32* %j, align 4, !dbg !3291
  br label %for.cond380, !dbg !3293, !llvm.loop !3294

for.end393:                                       ; preds = %for.cond380
  br label %if.end394

if.end394:                                        ; preds = %for.end393, %for.end378
  br label %do.cond395, !dbg !3296

do.cond395:                                       ; preds = %if.end394
  %277 = load i32, i32* %i, align 4, !dbg !3297
  %cmp396 = icmp slt i32 %277, 63, !dbg !3299
  br i1 %cmp396, label %do.body352, label %do.end398, !dbg !3300, !llvm.loop !3227

do.end398:                                        ; preds = %do.cond395
  %278 = load i32, i32* %i, align 4, !dbg !3301
  %cmp399 = icmp eq i32 %278, 63, !dbg !3303
  br i1 %cmp399, label %if.then401, label %if.end409, !dbg !3304

if.then401:                                       ; preds = %do.end398
  %279 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3305
  %call402 = call i32 @get_value(%struct.BinkContext* %279, i32 2), !dbg !3306
  %conv403 = trunc i32 %call402 to i8, !dbg !3306
  %280 = load i8*, i8** %scan, align 8, !dbg !3307
  %incdec.ptr404 = getelementptr inbounds i8, i8* %280, i32 1, !dbg !3307
  store i8* %incdec.ptr404, i8** %scan, align 8, !dbg !3307
  %281 = load i8, i8* %280, align 1, !dbg !3308
  %idxprom405 = zext i8 %281 to i64, !dbg !3309
  %arrayidx406 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom405, !dbg !3309
  %282 = load i32, i32* %arrayidx406, align 4, !dbg !3309
  %idxprom407 = sext i32 %282 to i64, !dbg !3310
  %283 = load i8*, i8** %dst, align 8, !dbg !3310
  %arrayidx408 = getelementptr inbounds i8, i8* %283, i64 %idxprom407, !dbg !3310
  store i8 %conv403, i8* %arrayidx408, align 1, !dbg !3311
  br label %if.end409, !dbg !3310

if.end409:                                        ; preds = %if.then401, %do.end398
  br label %sw.epilog518, !dbg !3312

sw.bb410:                                         ; preds = %if.end201
  %284 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3313
  %285 = load i8*, i8** %dst, align 8, !dbg !3314
  %286 = load i8*, i8** %prev, align 8, !dbg !3315
  %287 = load i32, i32* %stride, align 4, !dbg !3316
  %288 = load i8*, i8** %ref_start, align 8, !dbg !3317
  %289 = load i8*, i8** %ref_end, align 8, !dbg !3318
  %call411 = call i32 @bink_put_pixels(%struct.BinkContext* %284, i8* %285, i8* %286, i32 %287, i8* %288, i8* %289), !dbg !3319
  store i32 %call411, i32* %ret, align 4, !dbg !3320
  %290 = load i32, i32* %ret, align 4, !dbg !3321
  %cmp412 = icmp slt i32 %290, 0, !dbg !3323
  br i1 %cmp412, label %if.then414, label %if.end415, !dbg !3324

if.then414:                                       ; preds = %sw.bb410
  %291 = load i32, i32* %ret, align 4, !dbg !3325
  store i32 %291, i32* %retval, align 4, !dbg !3326
  br label %return, !dbg !3326

if.end415:                                        ; preds = %sw.bb410
  %292 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3327
  %bdsp416 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %292, i32 0, i32 1, !dbg !3328
  %clear_block = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp416, i32 0, i32 0, !dbg !3329
  %293 = load void (i16*)*, void (i16*)** %clear_block, align 8, !dbg !3329
  %294 = load i16*, i16** %block, align 8, !dbg !3330
  call void %293(i16* %294), !dbg !3327
  %295 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3331
  %call417 = call i32 @get_bits(%struct.GetBitContext* %295, i32 7), !dbg !3332
  store i32 %call417, i32* %v, align 4, !dbg !3333
  %296 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3334
  %297 = load i16*, i16** %block, align 8, !dbg !3335
  %298 = load i32, i32* %v, align 4, !dbg !3336
  %call418 = call i32 @read_residue(%struct.GetBitContext* %296, i16* %297, i32 %298), !dbg !3337
  %299 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3338
  %binkdsp419 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %299, i32 0, i32 3, !dbg !3339
  %add_pixels8 = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp419, i32 0, i32 3, !dbg !3340
  %300 = load void (i8*, i16*, i32)*, void (i8*, i16*, i32)** %add_pixels8, align 8, !dbg !3340
  %301 = load i8*, i8** %dst, align 8, !dbg !3341
  %302 = load i16*, i16** %block, align 8, !dbg !3342
  %303 = load i32, i32* %stride, align 4, !dbg !3343
  call void %300(i8* %301, i16* %302, i32 %303), !dbg !3338
  br label %sw.epilog518, !dbg !3344

sw.bb420:                                         ; preds = %if.end201
  %304 = load i32*, i32** %dctblock, align 8, !dbg !3345
  %305 = bitcast i32* %304 to i8*, !dbg !3346
  call void @llvm.memset.p0i8.i64(i8* %305, i8 0, i64 256, i32 4, i1 false), !dbg !3346
  %306 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3347
  %call421 = call i32 @get_value(%struct.BinkContext* %306, i32 6), !dbg !3348
  %307 = load i32*, i32** %dctblock, align 8, !dbg !3349
  %arrayidx422 = getelementptr inbounds i32, i32* %307, i64 0, !dbg !3349
  store i32 %call421, i32* %arrayidx422, align 4, !dbg !3350
  %308 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3351
  %309 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3353
  %310 = load i32*, i32** %dctblock, align 8, !dbg !3354
  %arraydecay423 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3355
  %call424 = call i32 @read_dct_coeffs(%struct.BinkContext* %308, %struct.GetBitContext* %309, i32* %310, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0), i32* %coef_count, i32* %arraydecay423, i32 -1), !dbg !3356
  store i32 %call424, i32* %quant_idx, align 4, !dbg !3357
  %cmp425 = icmp slt i32 %call424, 0, !dbg !3358
  br i1 %cmp425, label %if.then427, label %if.end428, !dbg !3359

if.then427:                                       ; preds = %sw.bb420
  %311 = load i32, i32* %quant_idx, align 4, !dbg !3360
  store i32 %311, i32* %retval, align 4, !dbg !3361
  br label %return, !dbg !3361

if.end428:                                        ; preds = %sw.bb420
  %312 = load i32*, i32** %dctblock, align 8, !dbg !3362
  %313 = load i32, i32* %quant_idx, align 4, !dbg !3363
  %idxprom429 = sext i32 %313 to i64, !dbg !3364
  %arrayidx430 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @bink_intra_quant, i64 0, i64 %idxprom429, !dbg !3364
  %arraydecay431 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx430, i32 0, i32 0, !dbg !3364
  %314 = load i32, i32* %coef_count, align 4, !dbg !3365
  %arraydecay432 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3366
  call void @unquantize_dct_coeffs(i32* %312, i32* %arraydecay431, i32 %314, i32* %arraydecay432, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0)), !dbg !3367
  %315 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3368
  %binkdsp433 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %315, i32 0, i32 3, !dbg !3369
  %idct_put434 = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp433, i32 0, i32 0, !dbg !3370
  %316 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %idct_put434, align 8, !dbg !3370
  %317 = load i8*, i8** %dst, align 8, !dbg !3371
  %318 = load i32, i32* %stride, align 4, !dbg !3372
  %319 = load i32*, i32** %dctblock, align 8, !dbg !3373
  call void %316(i8* %317, i32 %318, i32* %319), !dbg !3368
  br label %sw.epilog518, !dbg !3374

sw.bb435:                                         ; preds = %if.end201
  %320 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3375
  %call436 = call i32 @get_value(%struct.BinkContext* %320, i32 2), !dbg !3376
  store i32 %call436, i32* %v, align 4, !dbg !3377
  %321 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3378
  %bdsp437 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %321, i32 0, i32 1, !dbg !3379
  %fill_block_tab438 = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp437, i32 0, i32 2, !dbg !3380
  %arrayidx439 = getelementptr inbounds [2 x void (i8*, i8, i64, i32)*], [2 x void (i8*, i8, i64, i32)*]* %fill_block_tab438, i64 0, i64 1, !dbg !3378
  %322 = load void (i8*, i8, i64, i32)*, void (i8*, i8, i64, i32)** %arrayidx439, align 8, !dbg !3378
  %323 = load i8*, i8** %dst, align 8, !dbg !3381
  %324 = load i32, i32* %v, align 4, !dbg !3382
  %conv440 = trunc i32 %324 to i8, !dbg !3382
  %325 = load i32, i32* %stride, align 4, !dbg !3383
  %conv441 = sext i32 %325 to i64, !dbg !3383
  call void %322(i8* %323, i8 zeroext %conv440, i64 %conv441, i32 8), !dbg !3378
  br label %sw.epilog518, !dbg !3384

sw.bb442:                                         ; preds = %if.end201
  %326 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3385
  %327 = load i8*, i8** %dst, align 8, !dbg !3386
  %328 = load i8*, i8** %prev, align 8, !dbg !3387
  %329 = load i32, i32* %stride, align 4, !dbg !3388
  %330 = load i8*, i8** %ref_start, align 8, !dbg !3389
  %331 = load i8*, i8** %ref_end, align 8, !dbg !3390
  %call443 = call i32 @bink_put_pixels(%struct.BinkContext* %326, i8* %327, i8* %328, i32 %329, i8* %330, i8* %331), !dbg !3391
  store i32 %call443, i32* %ret, align 4, !dbg !3392
  %332 = load i32, i32* %ret, align 4, !dbg !3393
  %cmp444 = icmp slt i32 %332, 0, !dbg !3395
  br i1 %cmp444, label %if.then446, label %if.end447, !dbg !3396

if.then446:                                       ; preds = %sw.bb442
  %333 = load i32, i32* %ret, align 4, !dbg !3397
  store i32 %333, i32* %retval, align 4, !dbg !3398
  br label %return, !dbg !3398

if.end447:                                        ; preds = %sw.bb442
  %334 = load i32*, i32** %dctblock, align 8, !dbg !3399
  %335 = bitcast i32* %334 to i8*, !dbg !3400
  call void @llvm.memset.p0i8.i64(i8* %335, i8 0, i64 256, i32 4, i1 false), !dbg !3400
  %336 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3401
  %call448 = call i32 @get_value(%struct.BinkContext* %336, i32 7), !dbg !3402
  %337 = load i32*, i32** %dctblock, align 8, !dbg !3403
  %arrayidx449 = getelementptr inbounds i32, i32* %337, i64 0, !dbg !3403
  store i32 %call448, i32* %arrayidx449, align 4, !dbg !3404
  %338 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3405
  %339 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3407
  %340 = load i32*, i32** %dctblock, align 8, !dbg !3408
  %arraydecay450 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3409
  %call451 = call i32 @read_dct_coeffs(%struct.BinkContext* %338, %struct.GetBitContext* %339, i32* %340, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0), i32* %coef_count, i32* %arraydecay450, i32 -1), !dbg !3410
  store i32 %call451, i32* %quant_idx, align 4, !dbg !3411
  %cmp452 = icmp slt i32 %call451, 0, !dbg !3412
  br i1 %cmp452, label %if.then454, label %if.end455, !dbg !3413

if.then454:                                       ; preds = %if.end447
  %341 = load i32, i32* %quant_idx, align 4, !dbg !3414
  store i32 %341, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end455:                                        ; preds = %if.end447
  %342 = load i32*, i32** %dctblock, align 8, !dbg !3416
  %343 = load i32, i32* %quant_idx, align 4, !dbg !3417
  %idxprom456 = sext i32 %343 to i64, !dbg !3418
  %arrayidx457 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @bink_inter_quant, i64 0, i64 %idxprom456, !dbg !3418
  %arraydecay458 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx457, i32 0, i32 0, !dbg !3418
  %344 = load i32, i32* %coef_count, align 4, !dbg !3419
  %arraydecay459 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3420
  call void @unquantize_dct_coeffs(i32* %342, i32* %arraydecay458, i32 %344, i32* %arraydecay459, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0)), !dbg !3421
  %345 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3422
  %binkdsp460 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %345, i32 0, i32 3, !dbg !3423
  %idct_add = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp460, i32 0, i32 1, !dbg !3424
  %346 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %idct_add, align 8, !dbg !3424
  %347 = load i8*, i8** %dst, align 8, !dbg !3425
  %348 = load i32, i32* %stride, align 4, !dbg !3426
  %349 = load i32*, i32** %dctblock, align 8, !dbg !3427
  call void %346(i8* %347, i32 %348, i32* %349), !dbg !3422
  br label %sw.epilog518, !dbg !3428

sw.bb461:                                         ; preds = %if.end201
  store i32 0, i32* %i, align 4, !dbg !3429
  br label %for.cond462, !dbg !3431

for.cond462:                                      ; preds = %for.inc469, %sw.bb461
  %350 = load i32, i32* %i, align 4, !dbg !3432
  %cmp463 = icmp slt i32 %350, 2, !dbg !3435
  br i1 %cmp463, label %for.body465, label %for.end471, !dbg !3436

for.body465:                                      ; preds = %for.cond462
  %351 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3437
  %call466 = call i32 @get_value(%struct.BinkContext* %351, i32 2), !dbg !3438
  %352 = load i32, i32* %i, align 4, !dbg !3439
  %idxprom467 = sext i32 %352 to i64, !dbg !3440
  %arrayidx468 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom467, !dbg !3440
  store i32 %call466, i32* %arrayidx468, align 4, !dbg !3441
  br label %for.inc469, !dbg !3440

for.inc469:                                       ; preds = %for.body465
  %353 = load i32, i32* %i, align 4, !dbg !3442
  %inc470 = add nsw i32 %353, 1, !dbg !3442
  store i32 %inc470, i32* %i, align 4, !dbg !3442
  br label %for.cond462, !dbg !3444, !llvm.loop !3445

for.end471:                                       ; preds = %for.cond462
  store i32 0, i32* %i, align 4, !dbg !3447
  br label %for.cond472, !dbg !3449

for.cond472:                                      ; preds = %for.inc493, %for.end471
  %354 = load i32, i32* %i, align 4, !dbg !3450
  %cmp473 = icmp slt i32 %354, 8, !dbg !3453
  br i1 %cmp473, label %for.body475, label %for.end495, !dbg !3454

for.body475:                                      ; preds = %for.cond472
  %355 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3455
  %call476 = call i32 @get_value(%struct.BinkContext* %355, i32 3), !dbg !3457
  store i32 %call476, i32* %v, align 4, !dbg !3458
  store i32 0, i32* %j, align 4, !dbg !3459
  br label %for.cond477, !dbg !3461

for.cond477:                                      ; preds = %for.inc489, %for.body475
  %356 = load i32, i32* %j, align 4, !dbg !3462
  %cmp478 = icmp slt i32 %356, 8, !dbg !3465
  br i1 %cmp478, label %for.body480, label %for.end492, !dbg !3466

for.body480:                                      ; preds = %for.cond477
  %357 = load i32, i32* %v, align 4, !dbg !3467
  %and481 = and i32 %357, 1, !dbg !3468
  %idxprom482 = sext i32 %and481 to i64, !dbg !3469
  %arrayidx483 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom482, !dbg !3469
  %358 = load i32, i32* %arrayidx483, align 4, !dbg !3469
  %conv484 = trunc i32 %358 to i8, !dbg !3469
  %359 = load i32, i32* %i, align 4, !dbg !3470
  %360 = load i32, i32* %stride, align 4, !dbg !3471
  %mul485 = mul nsw i32 %359, %360, !dbg !3472
  %361 = load i32, i32* %j, align 4, !dbg !3473
  %add486 = add nsw i32 %mul485, %361, !dbg !3474
  %idxprom487 = sext i32 %add486 to i64, !dbg !3475
  %362 = load i8*, i8** %dst, align 8, !dbg !3475
  %arrayidx488 = getelementptr inbounds i8, i8* %362, i64 %idxprom487, !dbg !3475
  store i8 %conv484, i8* %arrayidx488, align 1, !dbg !3476
  br label %for.inc489, !dbg !3475

for.inc489:                                       ; preds = %for.body480
  %363 = load i32, i32* %j, align 4, !dbg !3477
  %inc490 = add nsw i32 %363, 1, !dbg !3477
  store i32 %inc490, i32* %j, align 4, !dbg !3477
  %364 = load i32, i32* %v, align 4, !dbg !3479
  %shr491 = ashr i32 %364, 1, !dbg !3479
  store i32 %shr491, i32* %v, align 4, !dbg !3479
  br label %for.cond477, !dbg !3480, !llvm.loop !3481

for.end492:                                       ; preds = %for.cond477
  br label %for.inc493, !dbg !3483

for.inc493:                                       ; preds = %for.end492
  %365 = load i32, i32* %i, align 4, !dbg !3484
  %inc494 = add nsw i32 %365, 1, !dbg !3484
  store i32 %inc494, i32* %i, align 4, !dbg !3484
  br label %for.cond472, !dbg !3486, !llvm.loop !3487

for.end495:                                       ; preds = %for.cond472
  br label %sw.epilog518, !dbg !3489

sw.bb496:                                         ; preds = %if.end201
  store i32 0, i32* %i, align 4, !dbg !3490
  br label %for.cond497, !dbg !3492

for.cond497:                                      ; preds = %for.inc509, %sw.bb496
  %366 = load i32, i32* %i, align 4, !dbg !3493
  %cmp498 = icmp slt i32 %366, 8, !dbg !3496
  br i1 %cmp498, label %for.body500, label %for.end511, !dbg !3497

for.body500:                                      ; preds = %for.cond497
  %367 = load i8*, i8** %dst, align 8, !dbg !3498
  %368 = load i32, i32* %i, align 4, !dbg !3499
  %369 = load i32, i32* %stride, align 4, !dbg !3500
  %mul501 = mul nsw i32 %368, %369, !dbg !3501
  %idx.ext502 = sext i32 %mul501 to i64, !dbg !3502
  %add.ptr503 = getelementptr inbounds i8, i8* %367, i64 %idx.ext502, !dbg !3502
  %370 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3503
  %bundle504 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %370, i32 0, i32 9, !dbg !3504
  %arrayidx505 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle504, i64 0, i64 2, !dbg !3503
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx505, i32 0, i32 5, !dbg !3505
  %371 = load i8*, i8** %cur_ptr, align 8, !dbg !3505
  %372 = load i32, i32* %i, align 4, !dbg !3506
  %mul506 = mul nsw i32 %372, 8, !dbg !3507
  %idx.ext507 = sext i32 %mul506 to i64, !dbg !3508
  %add.ptr508 = getelementptr inbounds i8, i8* %371, i64 %idx.ext507, !dbg !3508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr503, i8* %add.ptr508, i64 8, i32 1, i1 false), !dbg !3509
  br label %for.inc509, !dbg !3509

for.inc509:                                       ; preds = %for.body500
  %373 = load i32, i32* %i, align 4, !dbg !3510
  %inc510 = add nsw i32 %373, 1, !dbg !3510
  store i32 %inc510, i32* %i, align 4, !dbg !3510
  br label %for.cond497, !dbg !3512, !llvm.loop !3513

for.end511:                                       ; preds = %for.cond497
  %374 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3515
  %bundle512 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %374, i32 0, i32 9, !dbg !3516
  %arrayidx513 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle512, i64 0, i64 2, !dbg !3515
  %cur_ptr514 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx513, i32 0, i32 5, !dbg !3517
  %375 = load i8*, i8** %cur_ptr514, align 8, !dbg !3518
  %add.ptr515 = getelementptr inbounds i8, i8* %375, i64 64, !dbg !3518
  store i8* %add.ptr515, i8** %cur_ptr514, align 8, !dbg !3518
  br label %sw.epilog518, !dbg !3519

sw.default516:                                    ; preds = %if.end201
  %376 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3520
  %avctx517 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %376, i32 0, i32 0, !dbg !3521
  %377 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx517, align 8, !dbg !3521
  %378 = bitcast %struct.AVCodecContext* %377 to i8*, !dbg !3520
  %379 = load i32, i32* %blk, align 4, !dbg !3522
  call void (i8*, i32, i8*, ...) @av_log(i8* %378, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), i32 %379), !dbg !3523
  store i32 -1094995529, i32* %retval, align 4, !dbg !3524
  br label %return, !dbg !3524

sw.epilog518:                                     ; preds = %for.end511, %for.end495, %if.end455, %sw.bb435, %if.end428, %if.end415, %if.end409, %if.end346, %if.end337, %sw.bb
  br label %for.inc519, !dbg !3525

for.inc519:                                       ; preds = %sw.epilog518, %if.then197
  %380 = load i32, i32* %bx, align 4, !dbg !3526
  %inc520 = add nsw i32 %380, 1, !dbg !3526
  store i32 %inc520, i32* %bx, align 4, !dbg !3526
  %381 = load i8*, i8** %dst, align 8, !dbg !3528
  %add.ptr521 = getelementptr inbounds i8, i8* %381, i64 8, !dbg !3528
  store i8* %add.ptr521, i8** %dst, align 8, !dbg !3528
  %382 = load i8*, i8** %prev, align 8, !dbg !3529
  %add.ptr522 = getelementptr inbounds i8, i8* %382, i64 8, !dbg !3529
  store i8* %add.ptr522, i8** %prev, align 8, !dbg !3529
  br label %for.cond187, !dbg !3530, !llvm.loop !3531

for.end523:                                       ; preds = %for.cond187
  br label %for.inc524, !dbg !3533

for.inc524:                                       ; preds = %for.end523
  %383 = load i32, i32* %by, align 4, !dbg !3534
  %inc525 = add nsw i32 %383, 1, !dbg !3534
  store i32 %inc525, i32* %by, align 4, !dbg !3534
  br label %for.cond82, !dbg !3536, !llvm.loop !3537

for.end526:                                       ; preds = %if.then158, %for.cond82
  br label %end, !dbg !3539

end:                                              ; preds = %for.end526, %for.end
  %384 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3541
  %call527 = call i32 @get_bits_count(%struct.GetBitContext* %384), !dbg !3543
  %and528 = and i32 %call527, 31, !dbg !3544
  %tobool529 = icmp ne i32 %and528, 0, !dbg !3544
  br i1 %tobool529, label %if.then530, label %if.end534, !dbg !3545

if.then530:                                       ; preds = %end
  %385 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3546
  %386 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3547
  %call531 = call i32 @get_bits_count(%struct.GetBitContext* %386), !dbg !3548
  %and532 = and i32 %call531, 31, !dbg !3549
  %sub533 = sub nsw i32 32, %and532, !dbg !3550
  call void @skip_bits_long(%struct.GetBitContext* %385, i32 %sub533), !dbg !3551
  br label %if.end534, !dbg !3553

if.end534:                                        ; preds = %if.then530, %end
  store i32 0, i32* %retval, align 4, !dbg !3554
  br label %return, !dbg !3554

return:                                           ; preds = %if.end534, %sw.default516, %if.then454, %if.then446, %if.then427, %if.then414, %if.then359, %if.then345, %sw.default, %if.then265, %if.then217, %if.then154, %if.then146, %if.then138, %if.then130, %if.then122, %if.then114, %if.then106, %if.then99, %if.then91
  %387 = load i32, i32* %retval, align 4, !dbg !3555
  ret i32 %387, !dbg !3555
}

; Function Attrs: nounwind uwtable
define internal i32 @binkb_decode_plane(%struct.BinkContext* %c, %struct.AVFrame* %frame, %struct.GetBitContext* %gb, i32 %plane_idx, i32 %is_key, i32 %is_chroma) #1 !dbg !3556 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %plane_idx.addr = alloca i32, align 4
  %is_key.addr = alloca i32, align 4
  %is_chroma.addr = alloca i32, align 4
  %blk = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %dst = alloca i8*, align 8
  %ref = alloca i8*, align 8
  %ref_start = alloca i8*, align 8
  %ref_end = alloca i8*, align 8
  %v = alloca i32, align 4
  %col = alloca [2 x i32], align 4
  %scan = alloca i8*, align 8
  %xoff = alloca i32, align 4
  %yoff = alloca i32, align 4
  %la_block = alloca [64 x i16], align 32
  %block = alloca i16*, align 8
  %la_dctblock = alloca [64 x i32], align 16
  %dctblock = alloca i32*, align 8
  %coordmap = alloca [64 x i32], align 16
  %ybias = alloca i32, align 4
  %qp = alloca i32, align 4
  %quant_idx = alloca i32, align 4
  %coef_count = alloca i32, align 4
  %coef_idx = alloca [64 x i32], align 16
  %stride = alloca i32, align 4
  %bw = alloca i32, align 4
  %bh = alloca i32, align 4
  %mode = alloca i32, align 4
  %run = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !3559, metadata !1735), !dbg !3560
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3561, metadata !1735), !dbg !3562
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3563, metadata !1735), !dbg !3564
  store i32 %plane_idx, i32* %plane_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_idx.addr, metadata !3565, metadata !1735), !dbg !3566
  store i32 %is_key, i32* %is_key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_key.addr, metadata !3567, metadata !1735), !dbg !3568
  store i32 %is_chroma, i32* %is_chroma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_chroma.addr, metadata !3569, metadata !1735), !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !3571, metadata !1735), !dbg !3572
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3573, metadata !1735), !dbg !3574
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3575, metadata !1735), !dbg !3576
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3577, metadata !1735), !dbg !3578
  call void @llvm.dbg.declare(metadata i32* %bx, metadata !3579, metadata !1735), !dbg !3580
  call void @llvm.dbg.declare(metadata i32* %by, metadata !3581, metadata !1735), !dbg !3582
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !3583, metadata !1735), !dbg !3584
  call void @llvm.dbg.declare(metadata i8** %ref, metadata !3585, metadata !1735), !dbg !3586
  call void @llvm.dbg.declare(metadata i8** %ref_start, metadata !3587, metadata !1735), !dbg !3588
  call void @llvm.dbg.declare(metadata i8** %ref_end, metadata !3589, metadata !1735), !dbg !3590
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3591, metadata !1735), !dbg !3592
  call void @llvm.dbg.declare(metadata [2 x i32]* %col, metadata !3593, metadata !1735), !dbg !3594
  call void @llvm.dbg.declare(metadata i8** %scan, metadata !3595, metadata !1735), !dbg !3596
  call void @llvm.dbg.declare(metadata i32* %xoff, metadata !3597, metadata !1735), !dbg !3598
  call void @llvm.dbg.declare(metadata i32* %yoff, metadata !3599, metadata !1735), !dbg !3600
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_block, metadata !3601, metadata !1735), !dbg !3602
  call void @llvm.dbg.declare(metadata i16** %block, metadata !3603, metadata !1735), !dbg !3604
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %la_block, i32 0, i32 0, !dbg !3605
  store i16* %arraydecay, i16** %block, align 8, !dbg !3604
  call void @llvm.dbg.declare(metadata [64 x i32]* %la_dctblock, metadata !3606, metadata !1735), !dbg !3607
  call void @llvm.dbg.declare(metadata i32** %dctblock, metadata !3608, metadata !1735), !dbg !3609
  %arraydecay1 = getelementptr inbounds [64 x i32], [64 x i32]* %la_dctblock, i32 0, i32 0, !dbg !3610
  store i32* %arraydecay1, i32** %dctblock, align 8, !dbg !3609
  call void @llvm.dbg.declare(metadata [64 x i32]* %coordmap, metadata !3611, metadata !1735), !dbg !3612
  call void @llvm.dbg.declare(metadata i32* %ybias, metadata !3613, metadata !1735), !dbg !3614
  %0 = load i32, i32* %is_key.addr, align 4, !dbg !3615
  %tobool = icmp ne i32 %0, 0, !dbg !3615
  %cond = select i1 %tobool, i32 -15, i32 0, !dbg !3615
  store i32 %cond, i32* %ybias, align 4, !dbg !3614
  call void @llvm.dbg.declare(metadata i32* %qp, metadata !3616, metadata !1735), !dbg !3617
  call void @llvm.dbg.declare(metadata i32* %quant_idx, metadata !3618, metadata !1735), !dbg !3619
  call void @llvm.dbg.declare(metadata i32* %coef_count, metadata !3620, metadata !1735), !dbg !3621
  call void @llvm.dbg.declare(metadata [64 x i32]* %coef_idx, metadata !3622, metadata !1735), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !3624, metadata !1735), !dbg !3625
  %1 = load i32, i32* %plane_idx.addr, align 4, !dbg !3626
  %idxprom = sext i32 %1 to i64, !dbg !3627
  %2 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3627
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 1, !dbg !3628
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !3627
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3627
  store i32 %3, i32* %stride, align 4, !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !3629, metadata !1735), !dbg !3630
  %4 = load i32, i32* %is_chroma.addr, align 4, !dbg !3631
  %tobool2 = icmp ne i32 %4, 0, !dbg !3631
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3631

cond.true:                                        ; preds = %entry
  %5 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3632
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %5, i32 0, i32 0, !dbg !3634
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3634
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 20, !dbg !3635
  %7 = load i32, i32* %width, align 4, !dbg !3635
  %add = add nsw i32 %7, 15, !dbg !3636
  %shr = ashr i32 %add, 4, !dbg !3637
  br label %cond.end, !dbg !3638

cond.false:                                       ; preds = %entry
  %8 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3639
  %avctx3 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %8, i32 0, i32 0, !dbg !3641
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !3641
  %width4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 20, !dbg !3642
  %10 = load i32, i32* %width4, align 4, !dbg !3642
  %add5 = add nsw i32 %10, 7, !dbg !3643
  %shr6 = ashr i32 %add5, 3, !dbg !3644
  br label %cond.end, !dbg !3645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond7 = phi i32 [ %shr, %cond.true ], [ %shr6, %cond.false ], !dbg !3646
  store i32 %cond7, i32* %bw, align 4, !dbg !3648
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !3649, metadata !1735), !dbg !3650
  %11 = load i32, i32* %is_chroma.addr, align 4, !dbg !3651
  %tobool8 = icmp ne i32 %11, 0, !dbg !3651
  br i1 %tobool8, label %cond.true9, label %cond.false13, !dbg !3651

cond.true9:                                       ; preds = %cond.end
  %12 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3652
  %avctx10 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %12, i32 0, i32 0, !dbg !3653
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx10, align 8, !dbg !3653
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 21, !dbg !3654
  %14 = load i32, i32* %height, align 8, !dbg !3654
  %add11 = add nsw i32 %14, 15, !dbg !3655
  %shr12 = ashr i32 %add11, 4, !dbg !3656
  br label %cond.end18, !dbg !3657

cond.false13:                                     ; preds = %cond.end
  %15 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3658
  %avctx14 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %15, i32 0, i32 0, !dbg !3659
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !3659
  %height15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 21, !dbg !3660
  %17 = load i32, i32* %height15, align 8, !dbg !3660
  %add16 = add nsw i32 %17, 7, !dbg !3661
  %shr17 = ashr i32 %add16, 3, !dbg !3662
  br label %cond.end18, !dbg !3663

cond.end18:                                       ; preds = %cond.false13, %cond.true9
  %cond19 = phi i32 [ %shr12, %cond.true9 ], [ %shr17, %cond.false13 ], !dbg !3664
  store i32 %cond19, i32* %bh, align 4, !dbg !3665
  %18 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3666
  call void @binkb_init_bundles(%struct.BinkContext* %18), !dbg !3667
  %19 = load i32, i32* %plane_idx.addr, align 4, !dbg !3668
  %idxprom20 = sext i32 %19 to i64, !dbg !3669
  %20 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3669
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 0, !dbg !3670
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom20, !dbg !3669
  %21 = load i8*, i8** %arrayidx21, align 8, !dbg !3669
  store i8* %21, i8** %ref_start, align 8, !dbg !3671
  %22 = load i32, i32* %plane_idx.addr, align 4, !dbg !3672
  %idxprom22 = sext i32 %22 to i64, !dbg !3673
  %23 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3673
  %data23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %23, i32 0, i32 0, !dbg !3674
  %arrayidx24 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data23, i64 0, i64 %idxprom22, !dbg !3673
  %24 = load i8*, i8** %arrayidx24, align 8, !dbg !3673
  %25 = load i32, i32* %bh, align 4, !dbg !3675
  %26 = load i32, i32* %plane_idx.addr, align 4, !dbg !3676
  %idxprom25 = sext i32 %26 to i64, !dbg !3677
  %27 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3677
  %linesize26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 1, !dbg !3678
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize26, i64 0, i64 %idxprom25, !dbg !3677
  %28 = load i32, i32* %arrayidx27, align 4, !dbg !3677
  %mul = mul nsw i32 %25, %28, !dbg !3679
  %29 = load i32, i32* %bw, align 4, !dbg !3680
  %add28 = add nsw i32 %mul, %29, !dbg !3681
  %mul29 = mul nsw i32 %add28, 8, !dbg !3682
  %idx.ext = sext i32 %mul29 to i64, !dbg !3683
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !3683
  store i8* %add.ptr, i8** %ref_end, align 8, !dbg !3684
  store i32 0, i32* %i, align 4, !dbg !3685
  br label %for.cond, !dbg !3687

for.cond:                                         ; preds = %for.inc, %cond.end18
  %30 = load i32, i32* %i, align 4, !dbg !3688
  %cmp = icmp slt i32 %30, 64, !dbg !3691
  br i1 %cmp, label %for.body, label %for.end, !dbg !3692

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %i, align 4, !dbg !3693
  %and = and i32 %31, 7, !dbg !3694
  %32 = load i32, i32* %i, align 4, !dbg !3695
  %shr30 = ashr i32 %32, 3, !dbg !3696
  %33 = load i32, i32* %stride, align 4, !dbg !3697
  %mul31 = mul nsw i32 %shr30, %33, !dbg !3698
  %add32 = add nsw i32 %and, %mul31, !dbg !3699
  %34 = load i32, i32* %i, align 4, !dbg !3700
  %idxprom33 = sext i32 %34 to i64, !dbg !3701
  %arrayidx34 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom33, !dbg !3701
  store i32 %add32, i32* %arrayidx34, align 4, !dbg !3702
  br label %for.inc, !dbg !3701

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !3703
  %inc = add nsw i32 %35, 1, !dbg !3703
  store i32 %inc, i32* %i, align 4, !dbg !3703
  br label %for.cond, !dbg !3705, !llvm.loop !3706

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %by, align 4, !dbg !3708
  br label %for.cond35, !dbg !3710

for.cond35:                                       ; preds = %for.inc328, %for.end
  %36 = load i32, i32* %by, align 4, !dbg !3711
  %37 = load i32, i32* %bh, align 4, !dbg !3714
  %cmp36 = icmp slt i32 %36, %37, !dbg !3715
  br i1 %cmp36, label %for.body37, label %for.end330, !dbg !3716

for.body37:                                       ; preds = %for.cond35
  store i32 0, i32* %i, align 4, !dbg !3717
  br label %for.cond38, !dbg !3720

for.cond38:                                       ; preds = %for.inc42, %for.body37
  %38 = load i32, i32* %i, align 4, !dbg !3721
  %cmp39 = icmp slt i32 %38, 10, !dbg !3724
  br i1 %cmp39, label %for.body40, label %for.end44, !dbg !3725

for.body40:                                       ; preds = %for.cond38
  %39 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3726
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3729
  %41 = load i32, i32* %i, align 4, !dbg !3730
  %call = call i32 @binkb_read_bundle(%struct.BinkContext* %39, %struct.GetBitContext* %40, i32 %41), !dbg !3731
  store i32 %call, i32* %ret, align 4, !dbg !3732
  %cmp41 = icmp slt i32 %call, 0, !dbg !3733
  br i1 %cmp41, label %if.then, label %if.end, !dbg !3734

if.then:                                          ; preds = %for.body40
  %42 = load i32, i32* %ret, align 4, !dbg !3735
  store i32 %42, i32* %retval, align 4, !dbg !3736
  br label %return, !dbg !3736

if.end:                                           ; preds = %for.body40
  br label %for.inc42, !dbg !3737

for.inc42:                                        ; preds = %if.end
  %43 = load i32, i32* %i, align 4, !dbg !3738
  %inc43 = add nsw i32 %43, 1, !dbg !3738
  store i32 %inc43, i32* %i, align 4, !dbg !3738
  br label %for.cond38, !dbg !3740, !llvm.loop !3741

for.end44:                                        ; preds = %for.cond38
  %44 = load i32, i32* %plane_idx.addr, align 4, !dbg !3743
  %idxprom45 = sext i32 %44 to i64, !dbg !3744
  %45 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3744
  %data46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 0, !dbg !3745
  %arrayidx47 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data46, i64 0, i64 %idxprom45, !dbg !3744
  %46 = load i8*, i8** %arrayidx47, align 8, !dbg !3744
  %47 = load i32, i32* %by, align 4, !dbg !3746
  %mul48 = mul nsw i32 8, %47, !dbg !3747
  %48 = load i32, i32* %stride, align 4, !dbg !3748
  %mul49 = mul nsw i32 %mul48, %48, !dbg !3749
  %idx.ext50 = sext i32 %mul49 to i64, !dbg !3750
  %add.ptr51 = getelementptr inbounds i8, i8* %46, i64 %idx.ext50, !dbg !3750
  store i8* %add.ptr51, i8** %dst, align 8, !dbg !3751
  store i32 0, i32* %bx, align 4, !dbg !3752
  br label %for.cond52, !dbg !3754

for.cond52:                                       ; preds = %for.inc324, %for.end44
  %49 = load i32, i32* %bx, align 4, !dbg !3755
  %50 = load i32, i32* %bw, align 4, !dbg !3758
  %cmp53 = icmp slt i32 %49, %50, !dbg !3759
  br i1 %cmp53, label %for.body54, label %for.end327, !dbg !3760

for.body54:                                       ; preds = %for.cond52
  %51 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3761
  %call55 = call i32 @binkb_get_value(%struct.BinkContext* %51, i32 0), !dbg !3763
  store i32 %call55, i32* %blk, align 4, !dbg !3764
  %52 = load i32, i32* %blk, align 4, !dbg !3765
  switch i32 %52, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
    i32 2, label %sw.bb115
    i32 3, label %sw.bb129
    i32 4, label %sw.bb169
    i32 5, label %sw.bb223
    i32 6, label %sw.bb229
    i32 7, label %sw.bb264
    i32 8, label %sw.bb304
  ], !dbg !3766

sw.bb:                                            ; preds = %for.body54
  br label %sw.epilog, !dbg !3767

sw.bb56:                                          ; preds = %for.body54
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3769
  %call57 = call i32 @get_bits(%struct.GetBitContext* %53, i32 4), !dbg !3770
  %idxprom58 = zext i32 %call57 to i64, !dbg !3771
  %arrayidx59 = getelementptr inbounds [16 x [64 x i8]], [16 x [64 x i8]]* @bink_patterns, i64 0, i64 %idxprom58, !dbg !3771
  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx59, i32 0, i32 0, !dbg !3771
  store i8* %arraydecay60, i8** %scan, align 8, !dbg !3772
  store i32 0, i32* %i, align 4, !dbg !3773
  br label %do.body, !dbg !3774, !llvm.loop !3775

do.body:                                          ; preds = %do.cond, %sw.bb56
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !3776, metadata !1735), !dbg !3778
  call void @llvm.dbg.declare(metadata i32* %run, metadata !3779, metadata !1735), !dbg !3780
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3781
  %call61 = call i32 @get_bits1(%struct.GetBitContext* %54), !dbg !3782
  store i32 %call61, i32* %mode, align 4, !dbg !3783
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3784
  %56 = load i32, i32* %i, align 4, !dbg !3785
  %idxprom62 = sext i32 %56 to i64, !dbg !3786
  %arrayidx63 = getelementptr inbounds [64 x i8], [64 x i8]* @binkb_runbits, i64 0, i64 %idxprom62, !dbg !3786
  %57 = load i8, i8* %arrayidx63, align 1, !dbg !3786
  %conv = zext i8 %57 to i32, !dbg !3786
  %call64 = call i32 @get_bits(%struct.GetBitContext* %55, i32 %conv), !dbg !3787
  %add65 = add i32 %call64, 1, !dbg !3788
  store i32 %add65, i32* %run, align 4, !dbg !3789
  %58 = load i32, i32* %run, align 4, !dbg !3790
  %59 = load i32, i32* %i, align 4, !dbg !3791
  %add66 = add nsw i32 %59, %58, !dbg !3791
  store i32 %add66, i32* %i, align 4, !dbg !3791
  %60 = load i32, i32* %i, align 4, !dbg !3792
  %cmp67 = icmp sgt i32 %60, 64, !dbg !3794
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !3795

if.then69:                                        ; preds = %do.body
  %61 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3796
  %avctx70 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %61, i32 0, i32 0, !dbg !3798
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx70, align 8, !dbg !3798
  %63 = bitcast %struct.AVCodecContext* %62 to i8*, !dbg !3796
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0)), !dbg !3799
  store i32 -1094995529, i32* %retval, align 4, !dbg !3800
  br label %return, !dbg !3800

if.end71:                                         ; preds = %do.body
  %64 = load i32, i32* %mode, align 4, !dbg !3801
  %tobool72 = icmp ne i32 %64, 0, !dbg !3801
  br i1 %tobool72, label %if.then73, label %if.else, !dbg !3803

if.then73:                                        ; preds = %if.end71
  %65 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3804
  %call74 = call i32 @binkb_get_value(%struct.BinkContext* %65, i32 1), !dbg !3806
  store i32 %call74, i32* %v, align 4, !dbg !3807
  store i32 0, i32* %j, align 4, !dbg !3808
  br label %for.cond75, !dbg !3810

for.cond75:                                       ; preds = %for.inc84, %if.then73
  %66 = load i32, i32* %j, align 4, !dbg !3811
  %67 = load i32, i32* %run, align 4, !dbg !3814
  %cmp76 = icmp slt i32 %66, %67, !dbg !3815
  br i1 %cmp76, label %for.body78, label %for.end86, !dbg !3816

for.body78:                                       ; preds = %for.cond75
  %68 = load i32, i32* %v, align 4, !dbg !3817
  %conv79 = trunc i32 %68 to i8, !dbg !3817
  %69 = load i8*, i8** %scan, align 8, !dbg !3818
  %incdec.ptr = getelementptr inbounds i8, i8* %69, i32 1, !dbg !3818
  store i8* %incdec.ptr, i8** %scan, align 8, !dbg !3818
  %70 = load i8, i8* %69, align 1, !dbg !3819
  %idxprom80 = zext i8 %70 to i64, !dbg !3820
  %arrayidx81 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom80, !dbg !3820
  %71 = load i32, i32* %arrayidx81, align 4, !dbg !3820
  %idxprom82 = sext i32 %71 to i64, !dbg !3821
  %72 = load i8*, i8** %dst, align 8, !dbg !3821
  %arrayidx83 = getelementptr inbounds i8, i8* %72, i64 %idxprom82, !dbg !3821
  store i8 %conv79, i8* %arrayidx83, align 1, !dbg !3822
  br label %for.inc84, !dbg !3821

for.inc84:                                        ; preds = %for.body78
  %73 = load i32, i32* %j, align 4, !dbg !3823
  %inc85 = add nsw i32 %73, 1, !dbg !3823
  store i32 %inc85, i32* %j, align 4, !dbg !3823
  br label %for.cond75, !dbg !3825, !llvm.loop !3826

for.end86:                                        ; preds = %for.cond75
  br label %if.end101, !dbg !3828

if.else:                                          ; preds = %if.end71
  store i32 0, i32* %j, align 4, !dbg !3829
  br label %for.cond87, !dbg !3832

for.cond87:                                       ; preds = %for.inc98, %if.else
  %74 = load i32, i32* %j, align 4, !dbg !3833
  %75 = load i32, i32* %run, align 4, !dbg !3836
  %cmp88 = icmp slt i32 %74, %75, !dbg !3837
  br i1 %cmp88, label %for.body90, label %for.end100, !dbg !3838

for.body90:                                       ; preds = %for.cond87
  %76 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3839
  %call91 = call i32 @binkb_get_value(%struct.BinkContext* %76, i32 1), !dbg !3840
  %conv92 = trunc i32 %call91 to i8, !dbg !3840
  %77 = load i8*, i8** %scan, align 8, !dbg !3841
  %incdec.ptr93 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !3841
  store i8* %incdec.ptr93, i8** %scan, align 8, !dbg !3841
  %78 = load i8, i8* %77, align 1, !dbg !3842
  %idxprom94 = zext i8 %78 to i64, !dbg !3843
  %arrayidx95 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom94, !dbg !3843
  %79 = load i32, i32* %arrayidx95, align 4, !dbg !3843
  %idxprom96 = sext i32 %79 to i64, !dbg !3844
  %80 = load i8*, i8** %dst, align 8, !dbg !3844
  %arrayidx97 = getelementptr inbounds i8, i8* %80, i64 %idxprom96, !dbg !3844
  store i8 %conv92, i8* %arrayidx97, align 1, !dbg !3845
  br label %for.inc98, !dbg !3844

for.inc98:                                        ; preds = %for.body90
  %81 = load i32, i32* %j, align 4, !dbg !3846
  %inc99 = add nsw i32 %81, 1, !dbg !3846
  store i32 %inc99, i32* %j, align 4, !dbg !3846
  br label %for.cond87, !dbg !3848, !llvm.loop !3849

for.end100:                                       ; preds = %for.cond87
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %for.end86
  br label %do.cond, !dbg !3851

do.cond:                                          ; preds = %if.end101
  %82 = load i32, i32* %i, align 4, !dbg !3852
  %cmp102 = icmp slt i32 %82, 63, !dbg !3854
  br i1 %cmp102, label %do.body, label %do.end, !dbg !3855, !llvm.loop !3775

do.end:                                           ; preds = %do.cond
  %83 = load i32, i32* %i, align 4, !dbg !3856
  %cmp104 = icmp eq i32 %83, 63, !dbg !3858
  br i1 %cmp104, label %if.then106, label %if.end114, !dbg !3859

if.then106:                                       ; preds = %do.end
  %84 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3860
  %call107 = call i32 @binkb_get_value(%struct.BinkContext* %84, i32 1), !dbg !3861
  %conv108 = trunc i32 %call107 to i8, !dbg !3861
  %85 = load i8*, i8** %scan, align 8, !dbg !3862
  %incdec.ptr109 = getelementptr inbounds i8, i8* %85, i32 1, !dbg !3862
  store i8* %incdec.ptr109, i8** %scan, align 8, !dbg !3862
  %86 = load i8, i8* %85, align 1, !dbg !3863
  %idxprom110 = zext i8 %86 to i64, !dbg !3864
  %arrayidx111 = getelementptr inbounds [64 x i32], [64 x i32]* %coordmap, i64 0, i64 %idxprom110, !dbg !3864
  %87 = load i32, i32* %arrayidx111, align 4, !dbg !3864
  %idxprom112 = sext i32 %87 to i64, !dbg !3865
  %88 = load i8*, i8** %dst, align 8, !dbg !3865
  %arrayidx113 = getelementptr inbounds i8, i8* %88, i64 %idxprom112, !dbg !3865
  store i8 %conv108, i8* %arrayidx113, align 1, !dbg !3866
  br label %if.end114, !dbg !3865

if.end114:                                        ; preds = %if.then106, %do.end
  br label %sw.epilog, !dbg !3867

sw.bb115:                                         ; preds = %for.body54
  %89 = load i32*, i32** %dctblock, align 8, !dbg !3868
  %90 = bitcast i32* %89 to i8*, !dbg !3869
  call void @llvm.memset.p0i8.i64(i8* %90, i8 0, i64 256, i32 4, i1 false), !dbg !3869
  %91 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3870
  %call116 = call i32 @binkb_get_value(%struct.BinkContext* %91, i32 5), !dbg !3871
  %92 = load i32*, i32** %dctblock, align 8, !dbg !3872
  %arrayidx117 = getelementptr inbounds i32, i32* %92, i64 0, !dbg !3872
  store i32 %call116, i32* %arrayidx117, align 4, !dbg !3873
  %93 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3874
  %call118 = call i32 @binkb_get_value(%struct.BinkContext* %93, i32 7), !dbg !3875
  store i32 %call118, i32* %qp, align 4, !dbg !3876
  %94 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3877
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3879
  %96 = load i32*, i32** %dctblock, align 8, !dbg !3880
  %arraydecay119 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3881
  %97 = load i32, i32* %qp, align 4, !dbg !3882
  %call120 = call i32 @read_dct_coeffs(%struct.BinkContext* %94, %struct.GetBitContext* %95, i32* %96, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0), i32* %coef_count, i32* %arraydecay119, i32 %97), !dbg !3883
  store i32 %call120, i32* %quant_idx, align 4, !dbg !3884
  %cmp121 = icmp slt i32 %call120, 0, !dbg !3885
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !3886

if.then123:                                       ; preds = %sw.bb115
  %98 = load i32, i32* %quant_idx, align 4, !dbg !3887
  store i32 %98, i32* %retval, align 4, !dbg !3888
  br label %return, !dbg !3888

if.end124:                                        ; preds = %sw.bb115
  %99 = load i32*, i32** %dctblock, align 8, !dbg !3889
  %100 = load i32, i32* %quant_idx, align 4, !dbg !3890
  %idxprom125 = sext i32 %100 to i64, !dbg !3891
  %arrayidx126 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @binkb_intra_quant, i64 0, i64 %idxprom125, !dbg !3891
  %arraydecay127 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx126, i32 0, i32 0, !dbg !3891
  %101 = load i32, i32* %coef_count, align 4, !dbg !3892
  %arraydecay128 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !3893
  call void @unquantize_dct_coeffs(i32* %99, i32* %arraydecay127, i32 %101, i32* %arraydecay128, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0)), !dbg !3894
  %102 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3895
  %binkdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %102, i32 0, i32 3, !dbg !3896
  %idct_put = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp, i32 0, i32 0, !dbg !3897
  %103 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %idct_put, align 8, !dbg !3897
  %104 = load i8*, i8** %dst, align 8, !dbg !3898
  %105 = load i32, i32* %stride, align 4, !dbg !3899
  %106 = load i32*, i32** %dctblock, align 8, !dbg !3900
  call void %103(i8* %104, i32 %105, i32* %106), !dbg !3895
  br label %sw.epilog, !dbg !3901

sw.bb129:                                         ; preds = %for.body54
  %107 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3902
  %call130 = call i32 @binkb_get_value(%struct.BinkContext* %107, i32 3), !dbg !3903
  store i32 %call130, i32* %xoff, align 4, !dbg !3904
  %108 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3905
  %call131 = call i32 @binkb_get_value(%struct.BinkContext* %108, i32 4), !dbg !3906
  %109 = load i32, i32* %ybias, align 4, !dbg !3907
  %add132 = add nsw i32 %call131, %109, !dbg !3908
  store i32 %add132, i32* %yoff, align 4, !dbg !3909
  %110 = load i8*, i8** %dst, align 8, !dbg !3910
  %111 = load i32, i32* %xoff, align 4, !dbg !3911
  %idx.ext133 = sext i32 %111 to i64, !dbg !3912
  %add.ptr134 = getelementptr inbounds i8, i8* %110, i64 %idx.ext133, !dbg !3912
  %112 = load i32, i32* %yoff, align 4, !dbg !3913
  %113 = load i32, i32* %stride, align 4, !dbg !3914
  %mul135 = mul nsw i32 %112, %113, !dbg !3915
  %idx.ext136 = sext i32 %mul135 to i64, !dbg !3916
  %add.ptr137 = getelementptr inbounds i8, i8* %add.ptr134, i64 %idx.ext136, !dbg !3916
  store i8* %add.ptr137, i8** %ref, align 8, !dbg !3917
  %114 = load i8*, i8** %ref, align 8, !dbg !3918
  %115 = load i8*, i8** %ref_start, align 8, !dbg !3920
  %cmp138 = icmp ult i8* %114, %115, !dbg !3921
  br i1 %cmp138, label %if.then145, label %lor.lhs.false, !dbg !3922

lor.lhs.false:                                    ; preds = %sw.bb129
  %116 = load i8*, i8** %ref, align 8, !dbg !3923
  %117 = load i32, i32* %stride, align 4, !dbg !3925
  %mul140 = mul nsw i32 8, %117, !dbg !3926
  %idx.ext141 = sext i32 %mul140 to i64, !dbg !3927
  %add.ptr142 = getelementptr inbounds i8, i8* %116, i64 %idx.ext141, !dbg !3927
  %118 = load i8*, i8** %ref_end, align 8, !dbg !3928
  %cmp143 = icmp ugt i8* %add.ptr142, %118, !dbg !3929
  br i1 %cmp143, label %if.then145, label %if.else147, !dbg !3930

if.then145:                                       ; preds = %lor.lhs.false, %sw.bb129
  %119 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3931
  %avctx146 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %119, i32 0, i32 0, !dbg !3933
  %120 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx146, align 8, !dbg !3933
  %121 = bitcast %struct.AVCodecContext* %120 to i8*, !dbg !3931
  call void (i8*, i32, i8*, ...) @av_log(i8* %121, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i32 0, i32 0)), !dbg !3934
  br label %if.end165, !dbg !3935

if.else147:                                       ; preds = %lor.lhs.false
  %122 = load i8*, i8** %ref, align 8, !dbg !3936
  %123 = load i32, i32* %stride, align 4, !dbg !3939
  %mul148 = mul nsw i32 8, %123, !dbg !3940
  %idx.ext149 = sext i32 %mul148 to i64, !dbg !3941
  %add.ptr150 = getelementptr inbounds i8, i8* %122, i64 %idx.ext149, !dbg !3941
  %124 = load i8*, i8** %dst, align 8, !dbg !3942
  %cmp151 = icmp ult i8* %add.ptr150, %124, !dbg !3943
  br i1 %cmp151, label %if.then159, label %lor.lhs.false153, !dbg !3944

lor.lhs.false153:                                 ; preds = %if.else147
  %125 = load i8*, i8** %ref, align 8, !dbg !3945
  %126 = load i8*, i8** %dst, align 8, !dbg !3947
  %127 = load i32, i32* %stride, align 4, !dbg !3948
  %mul154 = mul nsw i32 8, %127, !dbg !3949
  %idx.ext155 = sext i32 %mul154 to i64, !dbg !3950
  %add.ptr156 = getelementptr inbounds i8, i8* %126, i64 %idx.ext155, !dbg !3950
  %cmp157 = icmp uge i8* %125, %add.ptr156, !dbg !3951
  br i1 %cmp157, label %if.then159, label %if.else163, !dbg !3952

if.then159:                                       ; preds = %lor.lhs.false153, %if.else147
  %128 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3953
  %hdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %128, i32 0, i32 2, !dbg !3955
  %put_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp, i32 0, i32 0, !dbg !3956
  %arrayidx160 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab, i64 0, i64 1, !dbg !3953
  %arrayidx161 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx160, i64 0, i64 0, !dbg !3953
  %129 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx161, align 8, !dbg !3953
  %130 = load i8*, i8** %dst, align 8, !dbg !3957
  %131 = load i8*, i8** %ref, align 8, !dbg !3958
  %132 = load i32, i32* %stride, align 4, !dbg !3959
  %conv162 = sext i32 %132 to i64, !dbg !3959
  call void %129(i8* %130, i8* %131, i64 %conv162, i32 8), !dbg !3953
  br label %if.end164, !dbg !3960

if.else163:                                       ; preds = %lor.lhs.false153
  %133 = load i8*, i8** %dst, align 8, !dbg !3961
  %134 = load i8*, i8** %ref, align 8, !dbg !3963
  %135 = load i32, i32* %stride, align 4, !dbg !3964
  call void @put_pixels8x8_overlapped(i8* %133, i8* %134, i32 %135), !dbg !3965
  br label %if.end164

if.end164:                                        ; preds = %if.else163, %if.then159
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then145
  %136 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3966
  %bdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %136, i32 0, i32 1, !dbg !3967
  %clear_block = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp, i32 0, i32 0, !dbg !3968
  %137 = load void (i16*)*, void (i16*)** %clear_block, align 8, !dbg !3968
  %138 = load i16*, i16** %block, align 8, !dbg !3969
  call void %137(i16* %138), !dbg !3966
  %139 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3970
  %call166 = call i32 @binkb_get_value(%struct.BinkContext* %139, i32 9), !dbg !3971
  store i32 %call166, i32* %v, align 4, !dbg !3972
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3973
  %141 = load i16*, i16** %block, align 8, !dbg !3974
  %142 = load i32, i32* %v, align 4, !dbg !3975
  %call167 = call i32 @read_residue(%struct.GetBitContext* %140, i16* %141, i32 %142), !dbg !3976
  %143 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3977
  %binkdsp168 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %143, i32 0, i32 3, !dbg !3978
  %add_pixels8 = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp168, i32 0, i32 3, !dbg !3979
  %144 = load void (i8*, i16*, i32)*, void (i8*, i16*, i32)** %add_pixels8, align 8, !dbg !3979
  %145 = load i8*, i8** %dst, align 8, !dbg !3980
  %146 = load i16*, i16** %block, align 8, !dbg !3981
  %147 = load i32, i32* %stride, align 4, !dbg !3982
  call void %144(i8* %145, i16* %146, i32 %147), !dbg !3977
  br label %sw.epilog, !dbg !3983

sw.bb169:                                         ; preds = %for.body54
  %148 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3984
  %call170 = call i32 @binkb_get_value(%struct.BinkContext* %148, i32 3), !dbg !3985
  store i32 %call170, i32* %xoff, align 4, !dbg !3986
  %149 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !3987
  %call171 = call i32 @binkb_get_value(%struct.BinkContext* %149, i32 4), !dbg !3988
  %150 = load i32, i32* %ybias, align 4, !dbg !3989
  %add172 = add nsw i32 %call171, %150, !dbg !3990
  store i32 %add172, i32* %yoff, align 4, !dbg !3991
  %151 = load i8*, i8** %dst, align 8, !dbg !3992
  %152 = load i32, i32* %xoff, align 4, !dbg !3993
  %idx.ext173 = sext i32 %152 to i64, !dbg !3994
  %add.ptr174 = getelementptr inbounds i8, i8* %151, i64 %idx.ext173, !dbg !3994
  %153 = load i32, i32* %yoff, align 4, !dbg !3995
  %154 = load i32, i32* %stride, align 4, !dbg !3996
  %mul175 = mul nsw i32 %153, %154, !dbg !3997
  %idx.ext176 = sext i32 %mul175 to i64, !dbg !3998
  %add.ptr177 = getelementptr inbounds i8, i8* %add.ptr174, i64 %idx.ext176, !dbg !3998
  store i8* %add.ptr177, i8** %ref, align 8, !dbg !3999
  %155 = load i8*, i8** %ref, align 8, !dbg !4000
  %156 = load i8*, i8** %ref_start, align 8, !dbg !4002
  %cmp178 = icmp ult i8* %155, %156, !dbg !4003
  br i1 %cmp178, label %if.then186, label %lor.lhs.false180, !dbg !4004

lor.lhs.false180:                                 ; preds = %sw.bb169
  %157 = load i8*, i8** %ref, align 8, !dbg !4005
  %158 = load i32, i32* %stride, align 4, !dbg !4007
  %mul181 = mul nsw i32 8, %158, !dbg !4008
  %idx.ext182 = sext i32 %mul181 to i64, !dbg !4009
  %add.ptr183 = getelementptr inbounds i8, i8* %157, i64 %idx.ext182, !dbg !4009
  %159 = load i8*, i8** %ref_end, align 8, !dbg !4010
  %cmp184 = icmp ugt i8* %add.ptr183, %159, !dbg !4011
  br i1 %cmp184, label %if.then186, label %if.else188, !dbg !4012

if.then186:                                       ; preds = %lor.lhs.false180, %sw.bb169
  %160 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4013
  %avctx187 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %160, i32 0, i32 0, !dbg !4015
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx187, align 8, !dbg !4015
  %162 = bitcast %struct.AVCodecContext* %161 to i8*, !dbg !4013
  call void (i8*, i32, i8*, ...) @av_log(i8* %162, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i32 0, i32 0)), !dbg !4016
  br label %if.end208, !dbg !4017

if.else188:                                       ; preds = %lor.lhs.false180
  %163 = load i8*, i8** %ref, align 8, !dbg !4018
  %164 = load i32, i32* %stride, align 4, !dbg !4021
  %mul189 = mul nsw i32 8, %164, !dbg !4022
  %idx.ext190 = sext i32 %mul189 to i64, !dbg !4023
  %add.ptr191 = getelementptr inbounds i8, i8* %163, i64 %idx.ext190, !dbg !4023
  %165 = load i8*, i8** %dst, align 8, !dbg !4024
  %cmp192 = icmp ult i8* %add.ptr191, %165, !dbg !4025
  br i1 %cmp192, label %if.then200, label %lor.lhs.false194, !dbg !4026

lor.lhs.false194:                                 ; preds = %if.else188
  %166 = load i8*, i8** %ref, align 8, !dbg !4027
  %167 = load i8*, i8** %dst, align 8, !dbg !4029
  %168 = load i32, i32* %stride, align 4, !dbg !4030
  %mul195 = mul nsw i32 8, %168, !dbg !4031
  %idx.ext196 = sext i32 %mul195 to i64, !dbg !4032
  %add.ptr197 = getelementptr inbounds i8, i8* %167, i64 %idx.ext196, !dbg !4032
  %cmp198 = icmp uge i8* %166, %add.ptr197, !dbg !4033
  br i1 %cmp198, label %if.then200, label %if.else206, !dbg !4034

if.then200:                                       ; preds = %lor.lhs.false194, %if.else188
  %169 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4035
  %hdsp201 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %169, i32 0, i32 2, !dbg !4037
  %put_pixels_tab202 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp201, i32 0, i32 0, !dbg !4038
  %arrayidx203 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab202, i64 0, i64 1, !dbg !4035
  %arrayidx204 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx203, i64 0, i64 0, !dbg !4035
  %170 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx204, align 8, !dbg !4035
  %171 = load i8*, i8** %dst, align 8, !dbg !4039
  %172 = load i8*, i8** %ref, align 8, !dbg !4040
  %173 = load i32, i32* %stride, align 4, !dbg !4041
  %conv205 = sext i32 %173 to i64, !dbg !4041
  call void %170(i8* %171, i8* %172, i64 %conv205, i32 8), !dbg !4035
  br label %if.end207, !dbg !4042

if.else206:                                       ; preds = %lor.lhs.false194
  %174 = load i8*, i8** %dst, align 8, !dbg !4043
  %175 = load i8*, i8** %ref, align 8, !dbg !4045
  %176 = load i32, i32* %stride, align 4, !dbg !4046
  call void @put_pixels8x8_overlapped(i8* %174, i8* %175, i32 %176), !dbg !4047
  br label %if.end207

if.end207:                                        ; preds = %if.else206, %if.then200
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then186
  %177 = load i32*, i32** %dctblock, align 8, !dbg !4048
  %178 = bitcast i32* %177 to i8*, !dbg !4049
  call void @llvm.memset.p0i8.i64(i8* %178, i8 0, i64 256, i32 4, i1 false), !dbg !4049
  %179 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4050
  %call209 = call i32 @binkb_get_value(%struct.BinkContext* %179, i32 6), !dbg !4051
  %180 = load i32*, i32** %dctblock, align 8, !dbg !4052
  %arrayidx210 = getelementptr inbounds i32, i32* %180, i64 0, !dbg !4052
  store i32 %call209, i32* %arrayidx210, align 4, !dbg !4053
  %181 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4054
  %call211 = call i32 @binkb_get_value(%struct.BinkContext* %181, i32 8), !dbg !4055
  store i32 %call211, i32* %qp, align 4, !dbg !4056
  %182 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4057
  %183 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4059
  %184 = load i32*, i32** %dctblock, align 8, !dbg !4060
  %arraydecay212 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !4061
  %185 = load i32, i32* %qp, align 4, !dbg !4062
  %call213 = call i32 @read_dct_coeffs(%struct.BinkContext* %182, %struct.GetBitContext* %183, i32* %184, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0), i32* %coef_count, i32* %arraydecay212, i32 %185), !dbg !4063
  store i32 %call213, i32* %quant_idx, align 4, !dbg !4064
  %cmp214 = icmp slt i32 %call213, 0, !dbg !4065
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !4066

if.then216:                                       ; preds = %if.end208
  %186 = load i32, i32* %quant_idx, align 4, !dbg !4067
  store i32 %186, i32* %retval, align 4, !dbg !4068
  br label %return, !dbg !4068

if.end217:                                        ; preds = %if.end208
  %187 = load i32*, i32** %dctblock, align 8, !dbg !4069
  %188 = load i32, i32* %quant_idx, align 4, !dbg !4070
  %idxprom218 = sext i32 %188 to i64, !dbg !4071
  %arrayidx219 = getelementptr inbounds [16 x [64 x i32]], [16 x [64 x i32]]* @binkb_inter_quant, i64 0, i64 %idxprom218, !dbg !4071
  %arraydecay220 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx219, i32 0, i32 0, !dbg !4071
  %189 = load i32, i32* %coef_count, align 4, !dbg !4072
  %arraydecay221 = getelementptr inbounds [64 x i32], [64 x i32]* %coef_idx, i32 0, i32 0, !dbg !4073
  call void @unquantize_dct_coeffs(i32* %187, i32* %arraydecay220, i32 %189, i32* %arraydecay221, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @bink_scan, i32 0, i32 0)), !dbg !4074
  %190 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4075
  %binkdsp222 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %190, i32 0, i32 3, !dbg !4076
  %idct_add = getelementptr inbounds %struct.BinkDSPContext, %struct.BinkDSPContext* %binkdsp222, i32 0, i32 1, !dbg !4077
  %191 = load void (i8*, i32, i32*)*, void (i8*, i32, i32*)** %idct_add, align 8, !dbg !4077
  %192 = load i8*, i8** %dst, align 8, !dbg !4078
  %193 = load i32, i32* %stride, align 4, !dbg !4079
  %194 = load i32*, i32** %dctblock, align 8, !dbg !4080
  call void %191(i8* %192, i32 %193, i32* %194), !dbg !4075
  br label %sw.epilog, !dbg !4081

sw.bb223:                                         ; preds = %for.body54
  %195 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4082
  %call224 = call i32 @binkb_get_value(%struct.BinkContext* %195, i32 1), !dbg !4083
  store i32 %call224, i32* %v, align 4, !dbg !4084
  %196 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4085
  %bdsp225 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %196, i32 0, i32 1, !dbg !4086
  %fill_block_tab = getelementptr inbounds %struct.BlockDSPContext, %struct.BlockDSPContext* %bdsp225, i32 0, i32 2, !dbg !4087
  %arrayidx226 = getelementptr inbounds [2 x void (i8*, i8, i64, i32)*], [2 x void (i8*, i8, i64, i32)*]* %fill_block_tab, i64 0, i64 1, !dbg !4085
  %197 = load void (i8*, i8, i64, i32)*, void (i8*, i8, i64, i32)** %arrayidx226, align 8, !dbg !4085
  %198 = load i8*, i8** %dst, align 8, !dbg !4088
  %199 = load i32, i32* %v, align 4, !dbg !4089
  %conv227 = trunc i32 %199 to i8, !dbg !4089
  %200 = load i32, i32* %stride, align 4, !dbg !4090
  %conv228 = sext i32 %200 to i64, !dbg !4090
  call void %197(i8* %198, i8 zeroext %conv227, i64 %conv228, i32 8), !dbg !4085
  br label %sw.epilog, !dbg !4091

sw.bb229:                                         ; preds = %for.body54
  store i32 0, i32* %i, align 4, !dbg !4092
  br label %for.cond230, !dbg !4094

for.cond230:                                      ; preds = %for.inc237, %sw.bb229
  %201 = load i32, i32* %i, align 4, !dbg !4095
  %cmp231 = icmp slt i32 %201, 2, !dbg !4098
  br i1 %cmp231, label %for.body233, label %for.end239, !dbg !4099

for.body233:                                      ; preds = %for.cond230
  %202 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4100
  %call234 = call i32 @binkb_get_value(%struct.BinkContext* %202, i32 1), !dbg !4101
  %203 = load i32, i32* %i, align 4, !dbg !4102
  %idxprom235 = sext i32 %203 to i64, !dbg !4103
  %arrayidx236 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom235, !dbg !4103
  store i32 %call234, i32* %arrayidx236, align 4, !dbg !4104
  br label %for.inc237, !dbg !4103

for.inc237:                                       ; preds = %for.body233
  %204 = load i32, i32* %i, align 4, !dbg !4105
  %inc238 = add nsw i32 %204, 1, !dbg !4105
  store i32 %inc238, i32* %i, align 4, !dbg !4105
  br label %for.cond230, !dbg !4107, !llvm.loop !4108

for.end239:                                       ; preds = %for.cond230
  store i32 0, i32* %i, align 4, !dbg !4110
  br label %for.cond240, !dbg !4112

for.cond240:                                      ; preds = %for.inc261, %for.end239
  %205 = load i32, i32* %i, align 4, !dbg !4113
  %cmp241 = icmp slt i32 %205, 8, !dbg !4116
  br i1 %cmp241, label %for.body243, label %for.end263, !dbg !4117

for.body243:                                      ; preds = %for.cond240
  %206 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4118
  %call244 = call i32 @binkb_get_value(%struct.BinkContext* %206, i32 2), !dbg !4120
  store i32 %call244, i32* %v, align 4, !dbg !4121
  store i32 0, i32* %j, align 4, !dbg !4122
  br label %for.cond245, !dbg !4124

for.cond245:                                      ; preds = %for.inc257, %for.body243
  %207 = load i32, i32* %j, align 4, !dbg !4125
  %cmp246 = icmp slt i32 %207, 8, !dbg !4128
  br i1 %cmp246, label %for.body248, label %for.end260, !dbg !4129

for.body248:                                      ; preds = %for.cond245
  %208 = load i32, i32* %v, align 4, !dbg !4130
  %and249 = and i32 %208, 1, !dbg !4131
  %idxprom250 = sext i32 %and249 to i64, !dbg !4132
  %arrayidx251 = getelementptr inbounds [2 x i32], [2 x i32]* %col, i64 0, i64 %idxprom250, !dbg !4132
  %209 = load i32, i32* %arrayidx251, align 4, !dbg !4132
  %conv252 = trunc i32 %209 to i8, !dbg !4132
  %210 = load i32, i32* %i, align 4, !dbg !4133
  %211 = load i32, i32* %stride, align 4, !dbg !4134
  %mul253 = mul nsw i32 %210, %211, !dbg !4135
  %212 = load i32, i32* %j, align 4, !dbg !4136
  %add254 = add nsw i32 %mul253, %212, !dbg !4137
  %idxprom255 = sext i32 %add254 to i64, !dbg !4138
  %213 = load i8*, i8** %dst, align 8, !dbg !4138
  %arrayidx256 = getelementptr inbounds i8, i8* %213, i64 %idxprom255, !dbg !4138
  store i8 %conv252, i8* %arrayidx256, align 1, !dbg !4139
  br label %for.inc257, !dbg !4138

for.inc257:                                       ; preds = %for.body248
  %214 = load i32, i32* %j, align 4, !dbg !4140
  %inc258 = add nsw i32 %214, 1, !dbg !4140
  store i32 %inc258, i32* %j, align 4, !dbg !4140
  %215 = load i32, i32* %v, align 4, !dbg !4142
  %shr259 = ashr i32 %215, 1, !dbg !4142
  store i32 %shr259, i32* %v, align 4, !dbg !4142
  br label %for.cond245, !dbg !4143, !llvm.loop !4144

for.end260:                                       ; preds = %for.cond245
  br label %for.inc261, !dbg !4146

for.inc261:                                       ; preds = %for.end260
  %216 = load i32, i32* %i, align 4, !dbg !4147
  %inc262 = add nsw i32 %216, 1, !dbg !4147
  store i32 %inc262, i32* %i, align 4, !dbg !4147
  br label %for.cond240, !dbg !4149, !llvm.loop !4150

for.end263:                                       ; preds = %for.cond240
  br label %sw.epilog, !dbg !4152

sw.bb264:                                         ; preds = %for.body54
  %217 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4153
  %call265 = call i32 @binkb_get_value(%struct.BinkContext* %217, i32 3), !dbg !4154
  store i32 %call265, i32* %xoff, align 4, !dbg !4155
  %218 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4156
  %call266 = call i32 @binkb_get_value(%struct.BinkContext* %218, i32 4), !dbg !4157
  %219 = load i32, i32* %ybias, align 4, !dbg !4158
  %add267 = add nsw i32 %call266, %219, !dbg !4159
  store i32 %add267, i32* %yoff, align 4, !dbg !4160
  %220 = load i8*, i8** %dst, align 8, !dbg !4161
  %221 = load i32, i32* %xoff, align 4, !dbg !4162
  %idx.ext268 = sext i32 %221 to i64, !dbg !4163
  %add.ptr269 = getelementptr inbounds i8, i8* %220, i64 %idx.ext268, !dbg !4163
  %222 = load i32, i32* %yoff, align 4, !dbg !4164
  %223 = load i32, i32* %stride, align 4, !dbg !4165
  %mul270 = mul nsw i32 %222, %223, !dbg !4166
  %idx.ext271 = sext i32 %mul270 to i64, !dbg !4167
  %add.ptr272 = getelementptr inbounds i8, i8* %add.ptr269, i64 %idx.ext271, !dbg !4167
  store i8* %add.ptr272, i8** %ref, align 8, !dbg !4168
  %224 = load i8*, i8** %ref, align 8, !dbg !4169
  %225 = load i8*, i8** %ref_start, align 8, !dbg !4171
  %cmp273 = icmp ult i8* %224, %225, !dbg !4172
  br i1 %cmp273, label %if.then281, label %lor.lhs.false275, !dbg !4173

lor.lhs.false275:                                 ; preds = %sw.bb264
  %226 = load i8*, i8** %ref, align 8, !dbg !4174
  %227 = load i32, i32* %stride, align 4, !dbg !4176
  %mul276 = mul nsw i32 8, %227, !dbg !4177
  %idx.ext277 = sext i32 %mul276 to i64, !dbg !4178
  %add.ptr278 = getelementptr inbounds i8, i8* %226, i64 %idx.ext277, !dbg !4178
  %228 = load i8*, i8** %ref_end, align 8, !dbg !4179
  %cmp279 = icmp ugt i8* %add.ptr278, %228, !dbg !4180
  br i1 %cmp279, label %if.then281, label %if.else283, !dbg !4181

if.then281:                                       ; preds = %lor.lhs.false275, %sw.bb264
  %229 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4182
  %avctx282 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %229, i32 0, i32 0, !dbg !4184
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx282, align 8, !dbg !4184
  %231 = bitcast %struct.AVCodecContext* %230 to i8*, !dbg !4182
  call void (i8*, i32, i8*, ...) @av_log(i8* %231, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i32 0, i32 0)), !dbg !4185
  br label %if.end303, !dbg !4186

if.else283:                                       ; preds = %lor.lhs.false275
  %232 = load i8*, i8** %ref, align 8, !dbg !4187
  %233 = load i32, i32* %stride, align 4, !dbg !4190
  %mul284 = mul nsw i32 8, %233, !dbg !4191
  %idx.ext285 = sext i32 %mul284 to i64, !dbg !4192
  %add.ptr286 = getelementptr inbounds i8, i8* %232, i64 %idx.ext285, !dbg !4192
  %234 = load i8*, i8** %dst, align 8, !dbg !4193
  %cmp287 = icmp ult i8* %add.ptr286, %234, !dbg !4194
  br i1 %cmp287, label %if.then295, label %lor.lhs.false289, !dbg !4195

lor.lhs.false289:                                 ; preds = %if.else283
  %235 = load i8*, i8** %ref, align 8, !dbg !4196
  %236 = load i8*, i8** %dst, align 8, !dbg !4198
  %237 = load i32, i32* %stride, align 4, !dbg !4199
  %mul290 = mul nsw i32 8, %237, !dbg !4200
  %idx.ext291 = sext i32 %mul290 to i64, !dbg !4201
  %add.ptr292 = getelementptr inbounds i8, i8* %236, i64 %idx.ext291, !dbg !4201
  %cmp293 = icmp uge i8* %235, %add.ptr292, !dbg !4202
  br i1 %cmp293, label %if.then295, label %if.else301, !dbg !4203

if.then295:                                       ; preds = %lor.lhs.false289, %if.else283
  %238 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4204
  %hdsp296 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %238, i32 0, i32 2, !dbg !4206
  %put_pixels_tab297 = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp296, i32 0, i32 0, !dbg !4207
  %arrayidx298 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab297, i64 0, i64 1, !dbg !4204
  %arrayidx299 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx298, i64 0, i64 0, !dbg !4204
  %239 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx299, align 8, !dbg !4204
  %240 = load i8*, i8** %dst, align 8, !dbg !4208
  %241 = load i8*, i8** %ref, align 8, !dbg !4209
  %242 = load i32, i32* %stride, align 4, !dbg !4210
  %conv300 = sext i32 %242 to i64, !dbg !4210
  call void %239(i8* %240, i8* %241, i64 %conv300, i32 8), !dbg !4204
  br label %if.end302, !dbg !4211

if.else301:                                       ; preds = %lor.lhs.false289
  %243 = load i8*, i8** %dst, align 8, !dbg !4212
  %244 = load i8*, i8** %ref, align 8, !dbg !4214
  %245 = load i32, i32* %stride, align 4, !dbg !4215
  call void @put_pixels8x8_overlapped(i8* %243, i8* %244, i32 %245), !dbg !4216
  br label %if.end302

if.end302:                                        ; preds = %if.else301, %if.then295
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.then281
  br label %sw.epilog, !dbg !4217

sw.bb304:                                         ; preds = %for.body54
  store i32 0, i32* %i, align 4, !dbg !4218
  br label %for.cond305, !dbg !4220

for.cond305:                                      ; preds = %for.inc316, %sw.bb304
  %246 = load i32, i32* %i, align 4, !dbg !4221
  %cmp306 = icmp slt i32 %246, 8, !dbg !4224
  br i1 %cmp306, label %for.body308, label %for.end318, !dbg !4225

for.body308:                                      ; preds = %for.cond305
  %247 = load i8*, i8** %dst, align 8, !dbg !4226
  %248 = load i32, i32* %i, align 4, !dbg !4227
  %249 = load i32, i32* %stride, align 4, !dbg !4228
  %mul309 = mul nsw i32 %248, %249, !dbg !4229
  %idx.ext310 = sext i32 %mul309 to i64, !dbg !4230
  %add.ptr311 = getelementptr inbounds i8, i8* %247, i64 %idx.ext310, !dbg !4230
  %250 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4231
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %250, i32 0, i32 9, !dbg !4232
  %arrayidx312 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 1, !dbg !4231
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx312, i32 0, i32 5, !dbg !4233
  %251 = load i8*, i8** %cur_ptr, align 8, !dbg !4233
  %252 = load i32, i32* %i, align 4, !dbg !4234
  %mul313 = mul nsw i32 %252, 8, !dbg !4235
  %idx.ext314 = sext i32 %mul313 to i64, !dbg !4236
  %add.ptr315 = getelementptr inbounds i8, i8* %251, i64 %idx.ext314, !dbg !4236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr311, i8* %add.ptr315, i64 8, i32 1, i1 false), !dbg !4237
  br label %for.inc316, !dbg !4237

for.inc316:                                       ; preds = %for.body308
  %253 = load i32, i32* %i, align 4, !dbg !4238
  %inc317 = add nsw i32 %253, 1, !dbg !4238
  store i32 %inc317, i32* %i, align 4, !dbg !4238
  br label %for.cond305, !dbg !4240, !llvm.loop !4241

for.end318:                                       ; preds = %for.cond305
  %254 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4243
  %bundle319 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %254, i32 0, i32 9, !dbg !4244
  %arrayidx320 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle319, i64 0, i64 1, !dbg !4243
  %cur_ptr321 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx320, i32 0, i32 5, !dbg !4245
  %255 = load i8*, i8** %cur_ptr321, align 8, !dbg !4246
  %add.ptr322 = getelementptr inbounds i8, i8* %255, i64 64, !dbg !4246
  store i8* %add.ptr322, i8** %cur_ptr321, align 8, !dbg !4246
  br label %sw.epilog, !dbg !4247

sw.default:                                       ; preds = %for.body54
  %256 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4248
  %avctx323 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %256, i32 0, i32 0, !dbg !4249
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx323, align 8, !dbg !4249
  %258 = bitcast %struct.AVCodecContext* %257 to i8*, !dbg !4248
  %259 = load i32, i32* %blk, align 4, !dbg !4250
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), i32 %259), !dbg !4251
  store i32 -1094995529, i32* %retval, align 4, !dbg !4252
  br label %return, !dbg !4252

sw.epilog:                                        ; preds = %for.end318, %if.end303, %for.end263, %sw.bb223, %if.end217, %if.end165, %if.end124, %if.end114, %sw.bb
  br label %for.inc324, !dbg !4253

for.inc324:                                       ; preds = %sw.epilog
  %260 = load i32, i32* %bx, align 4, !dbg !4254
  %inc325 = add nsw i32 %260, 1, !dbg !4254
  store i32 %inc325, i32* %bx, align 4, !dbg !4254
  %261 = load i8*, i8** %dst, align 8, !dbg !4256
  %add.ptr326 = getelementptr inbounds i8, i8* %261, i64 8, !dbg !4256
  store i8* %add.ptr326, i8** %dst, align 8, !dbg !4256
  br label %for.cond52, !dbg !4257, !llvm.loop !4258

for.end327:                                       ; preds = %for.cond52
  br label %for.inc328, !dbg !4260

for.inc328:                                       ; preds = %for.end327
  %262 = load i32, i32* %by, align 4, !dbg !4261
  %inc329 = add nsw i32 %262, 1, !dbg !4261
  store i32 %inc329, i32* %by, align 4, !dbg !4261
  br label %for.cond35, !dbg !4263, !llvm.loop !4264

for.end330:                                       ; preds = %for.cond35
  %263 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4266
  %call331 = call i32 @get_bits_count(%struct.GetBitContext* %263), !dbg !4268
  %and332 = and i32 %call331, 31, !dbg !4269
  %tobool333 = icmp ne i32 %and332, 0, !dbg !4269
  br i1 %tobool333, label %if.then334, label %if.end337, !dbg !4270

if.then334:                                       ; preds = %for.end330
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4271
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4272
  %call335 = call i32 @get_bits_count(%struct.GetBitContext* %265), !dbg !4273
  %and336 = and i32 %call335, 31, !dbg !4274
  %sub = sub nsw i32 32, %and336, !dbg !4275
  call void @skip_bits_long(%struct.GetBitContext* %264, i32 %sub), !dbg !4276
  br label %if.end337, !dbg !4278

if.end337:                                        ; preds = %if.then334, %for.end330
  store i32 0, i32* %retval, align 4, !dbg !4279
  br label %return, !dbg !4279

return:                                           ; preds = %if.end337, %sw.default, %if.then216, %if.then123, %if.then69, %if.then
  %266 = load i32, i32* %retval, align 4, !dbg !4280
  ret i32 %266, !dbg !4280
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !4281 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4286, metadata !1735), !dbg !4287
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4288
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4289
  %1 = load i32, i32* %index, align 8, !dbg !4289
  ret i32 %1, !dbg !4290
}

declare void @av_frame_unref(%struct.AVFrame*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !4291 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4294, metadata !1735), !dbg !4295
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4296, metadata !1735), !dbg !4297
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4298
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4299
  %1 = load i32, i32* %index1, align 8, !dbg !4299
  store i32 %1, i32* %index, align 4, !dbg !4297
  call void @llvm.dbg.declare(metadata i8* %result, metadata !4300, metadata !1735), !dbg !4301
  %2 = load i32, i32* %index, align 4, !dbg !4302
  %shr = lshr i32 %2, 3, !dbg !4303
  %idxprom = zext i32 %shr to i64, !dbg !4304
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4304
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !4305
  %4 = load i8*, i8** %buffer, align 8, !dbg !4305
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4304
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4304
  store i8 %5, i8* %result, align 1, !dbg !4301
  %6 = load i32, i32* %index, align 4, !dbg !4306
  %and = and i32 %6, 7, !dbg !4307
  %7 = load i8, i8* %result, align 1, !dbg !4308
  %conv = zext i8 %7 to i32, !dbg !4308
  %shr2 = ashr i32 %conv, %and, !dbg !4308
  %conv3 = trunc i32 %shr2 to i8, !dbg !4308
  store i8 %conv3, i8* %result, align 1, !dbg !4308
  %8 = load i8, i8* %result, align 1, !dbg !4309
  %conv4 = zext i8 %8 to i32, !dbg !4309
  %and5 = and i32 %conv4, 1, !dbg !4309
  %conv6 = trunc i32 %and5 to i8, !dbg !4309
  store i8 %conv6, i8* %result, align 1, !dbg !4309
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4310
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !4312
  %10 = load i32, i32* %index7, align 8, !dbg !4312
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4313
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !4314
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4314
  %cmp = icmp slt i32 %10, %12, !dbg !4315
  br i1 %cmp, label %if.then, label %if.end, !dbg !4316

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !4317
  %inc = add i32 %13, 1, !dbg !4317
  store i32 %inc, i32* %index, align 4, !dbg !4317
  br label %if.end, !dbg !4318

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !4319
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4320
  %index9 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4321
  store i32 %14, i32* %index9, align 8, !dbg !4322
  %16 = load i8, i8* %result, align 1, !dbg !4323
  %conv10 = zext i8 %16 to i32, !dbg !4323
  ret i32 %conv10, !dbg !4324
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4325 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4328, metadata !1735), !dbg !4329
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4330, metadata !1735), !dbg !4331
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4332, metadata !1735), !dbg !4333
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4334, metadata !1735), !dbg !4335
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4336
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4337
  %1 = load i32, i32* %index, align 8, !dbg !4337
  store i32 %1, i32* %re_index, align 4, !dbg !4335
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4338, metadata !1735), !dbg !4339
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4340, metadata !1735), !dbg !4341
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4342
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4343
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4343
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4341
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4344
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !4345
  %5 = load i8*, i8** %buffer, align 8, !dbg !4345
  %6 = load i32, i32* %re_index, align 4, !dbg !4346
  %shr = lshr i32 %6, 3, !dbg !4347
  %idx.ext = zext i32 %shr to i64, !dbg !4348
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4348
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4349
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !4349
  %8 = load i32, i32* %l, align 1, !dbg !4349
  %9 = load i32, i32* %re_index, align 4, !dbg !4350
  %and = and i32 %9, 7, !dbg !4351
  %shr4 = lshr i32 %8, %and, !dbg !4352
  store i32 %shr4, i32* %re_cache, align 4, !dbg !4353
  %10 = load i32, i32* %re_cache, align 4, !dbg !4354
  %11 = load i32, i32* %n.addr, align 4, !dbg !4355
  %call = call i32 @zero_extend(i32 %10, i32 %11) #2, !dbg !4356
  store i32 %call, i32* %tmp, align 4, !dbg !4357
  %12 = load i32, i32* %re_size_plus8, align 4, !dbg !4358
  %13 = load i32, i32* %re_index, align 4, !dbg !4359
  %14 = load i32, i32* %n.addr, align 4, !dbg !4360
  %add = add i32 %13, %14, !dbg !4361
  %cmp = icmp ugt i32 %12, %add, !dbg !4362
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4363

cond.true:                                        ; preds = %entry
  %15 = load i32, i32* %re_index, align 4, !dbg !4364
  %16 = load i32, i32* %n.addr, align 4, !dbg !4366
  %add5 = add i32 %15, %16, !dbg !4367
  br label %cond.end, !dbg !4368

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !4369
  br label %cond.end, !dbg !4371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add5, %cond.true ], [ %17, %cond.false ], !dbg !4372
  store i32 %cond, i32* %re_index, align 4, !dbg !4374
  %18 = load i32, i32* %re_index, align 4, !dbg !4375
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4376
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 2, !dbg !4377
  store i32 %18, i32* %index6, align 8, !dbg !4378
  %20 = load i32, i32* %tmp, align 4, !dbg !4379
  ret i32 %20, !dbg !4380
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @init_lengths(%struct.BinkContext* %c, i32 %width, i32 %bw) #1 !dbg !4381 {
entry:
  %c.addr = alloca %struct.BinkContext*, align 8
  %width.addr = alloca i32, align 4
  %bw.addr = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !4384, metadata !1735), !dbg !4385
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4386, metadata !1735), !dbg !4387
  store i32 %bw, i32* %bw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bw.addr, metadata !4388, metadata !1735), !dbg !4389
  %0 = load i32, i32* %width.addr, align 4, !dbg !4390
  %add = add nsw i32 %0, 8, !dbg !4391
  %sub = sub nsw i32 %add, 1, !dbg !4392
  %and = and i32 %sub, -8, !dbg !4393
  store i32 %and, i32* %width.addr, align 4, !dbg !4394
  %1 = load i32, i32* %width.addr, align 4, !dbg !4395
  %shr = ashr i32 %1, 3, !dbg !4396
  %add1 = add nsw i32 %shr, 511, !dbg !4397
  %or = or i32 %add1, 1, !dbg !4398
  %2 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4399
  %sub2 = sub nsw i32 31, %2, !dbg !4400
  %add3 = add nsw i32 %sub2, 1, !dbg !4401
  %3 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4402
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %3, i32 0, i32 9, !dbg !4403
  %arrayidx = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 0, !dbg !4402
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx, i32 0, i32 0, !dbg !4404
  store i32 %add3, i32* %len, align 8, !dbg !4405
  %4 = load i32, i32* %width.addr, align 4, !dbg !4406
  %shr4 = ashr i32 %4, 4, !dbg !4407
  %add5 = add nsw i32 %shr4, 511, !dbg !4408
  %or6 = or i32 %add5, 1, !dbg !4409
  %5 = call i32 @llvm.ctlz.i32(i32 %or6, i1 true), !dbg !4410
  %sub7 = sub nsw i32 31, %5, !dbg !4411
  %add8 = add nsw i32 %sub7, 1, !dbg !4412
  %6 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4413
  %bundle9 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %6, i32 0, i32 9, !dbg !4414
  %arrayidx10 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle9, i64 0, i64 1, !dbg !4413
  %len11 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx10, i32 0, i32 0, !dbg !4415
  store i32 %add8, i32* %len11, align 8, !dbg !4416
  %7 = load i32, i32* %bw.addr, align 4, !dbg !4417
  %mul = mul nsw i32 %7, 64, !dbg !4418
  %add12 = add nsw i32 %mul, 511, !dbg !4419
  %or13 = or i32 %add12, 1, !dbg !4420
  %8 = call i32 @llvm.ctlz.i32(i32 %or13, i1 true), !dbg !4421
  %sub14 = sub nsw i32 31, %8, !dbg !4422
  %add15 = add nsw i32 %sub14, 1, !dbg !4423
  %9 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4424
  %bundle16 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %9, i32 0, i32 9, !dbg !4425
  %arrayidx17 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle16, i64 0, i64 2, !dbg !4424
  %len18 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx17, i32 0, i32 0, !dbg !4426
  store i32 %add15, i32* %len18, align 8, !dbg !4427
  %10 = load i32, i32* %width.addr, align 4, !dbg !4428
  %shr19 = ashr i32 %10, 3, !dbg !4429
  %add20 = add nsw i32 %shr19, 511, !dbg !4430
  %or21 = or i32 %add20, 1, !dbg !4431
  %11 = call i32 @llvm.ctlz.i32(i32 %or21, i1 true), !dbg !4432
  %sub22 = sub nsw i32 31, %11, !dbg !4433
  %add23 = add nsw i32 %sub22, 1, !dbg !4434
  %12 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4435
  %bundle24 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %12, i32 0, i32 9, !dbg !4436
  %arrayidx25 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle24, i64 0, i64 5, !dbg !4435
  %len26 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx25, i32 0, i32 0, !dbg !4437
  store i32 %add23, i32* %len26, align 8, !dbg !4438
  %13 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4439
  %bundle27 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %13, i32 0, i32 9, !dbg !4440
  %arrayidx28 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle27, i64 0, i64 4, !dbg !4439
  %len29 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx28, i32 0, i32 0, !dbg !4441
  store i32 %add23, i32* %len29, align 8, !dbg !4442
  %14 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4443
  %bundle30 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %14, i32 0, i32 9, !dbg !4444
  %arrayidx31 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle30, i64 0, i64 7, !dbg !4443
  %len32 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx31, i32 0, i32 0, !dbg !4445
  store i32 %add23, i32* %len32, align 8, !dbg !4446
  %15 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4447
  %bundle33 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %15, i32 0, i32 9, !dbg !4448
  %arrayidx34 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle33, i64 0, i64 6, !dbg !4447
  %len35 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx34, i32 0, i32 0, !dbg !4449
  store i32 %add23, i32* %len35, align 8, !dbg !4450
  %16 = load i32, i32* %bw.addr, align 4, !dbg !4451
  %shl = shl i32 %16, 3, !dbg !4452
  %add36 = add nsw i32 %shl, 511, !dbg !4453
  %or37 = or i32 %add36, 1, !dbg !4454
  %17 = call i32 @llvm.ctlz.i32(i32 %or37, i1 true), !dbg !4455
  %sub38 = sub nsw i32 31, %17, !dbg !4456
  %add39 = add nsw i32 %sub38, 1, !dbg !4457
  %18 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4458
  %bundle40 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %18, i32 0, i32 9, !dbg !4459
  %arrayidx41 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle40, i64 0, i64 3, !dbg !4458
  %len42 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx41, i32 0, i32 0, !dbg !4460
  store i32 %add39, i32* %len42, align 8, !dbg !4461
  %19 = load i32, i32* %bw.addr, align 4, !dbg !4462
  %mul43 = mul nsw i32 %19, 48, !dbg !4463
  %add44 = add nsw i32 %mul43, 511, !dbg !4464
  %or45 = or i32 %add44, 1, !dbg !4465
  %20 = call i32 @llvm.ctlz.i32(i32 %or45, i1 true), !dbg !4466
  %sub46 = sub nsw i32 31, %20, !dbg !4467
  %add47 = add nsw i32 %sub46, 1, !dbg !4468
  %21 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4469
  %bundle48 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %21, i32 0, i32 9, !dbg !4470
  %arrayidx49 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle48, i64 0, i64 8, !dbg !4469
  %len50 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx49, i32 0, i32 0, !dbg !4471
  store i32 %add47, i32* %len50, align 8, !dbg !4472
  ret void, !dbg !4473
}

; Function Attrs: nounwind uwtable
define internal void @read_bundle(%struct.GetBitContext* %gb, %struct.BinkContext* %c, i32 %bundle_num) #1 !dbg !4474 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %c.addr = alloca %struct.BinkContext*, align 8
  %bundle_num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4477, metadata !1735), !dbg !4478
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !4479, metadata !1735), !dbg !4480
  store i32 %bundle_num, i32* %bundle_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bundle_num.addr, metadata !4481, metadata !1735), !dbg !4482
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4483, metadata !1735), !dbg !4484
  %0 = load i32, i32* %bundle_num.addr, align 4, !dbg !4485
  %cmp = icmp eq i32 %0, 2, !dbg !4487
  br i1 %cmp, label %if.then, label %if.end, !dbg !4488

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4489
  br label %for.cond, !dbg !4492

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !4493
  %cmp1 = icmp slt i32 %1, 16, !dbg !4496
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4497

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4498
  %3 = load i32, i32* %i, align 4, !dbg !4499
  %idxprom = sext i32 %3 to i64, !dbg !4500
  %4 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4500
  %col_high = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %4, i32 0, i32 10, !dbg !4501
  %arrayidx = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high, i64 0, i64 %idxprom, !dbg !4500
  call void @read_tree(%struct.GetBitContext* %2, %struct.Tree* %arrayidx), !dbg !4502
  br label %for.inc, !dbg !4502

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !4503
  %inc = add nsw i32 %5, 1, !dbg !4503
  store i32 %inc, i32* %i, align 4, !dbg !4503
  br label %for.cond, !dbg !4505, !llvm.loop !4506

for.end:                                          ; preds = %for.cond
  %6 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4508
  %col_lastval = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %6, i32 0, i32 11, !dbg !4509
  store i32 0, i32* %col_lastval, align 8, !dbg !4510
  br label %if.end, !dbg !4511

if.end:                                           ; preds = %for.end, %entry
  %7 = load i32, i32* %bundle_num.addr, align 4, !dbg !4512
  %cmp2 = icmp ne i32 %7, 6, !dbg !4514
  br i1 %cmp2, label %land.lhs.true, label %if.end7, !dbg !4515

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %bundle_num.addr, align 4, !dbg !4516
  %cmp3 = icmp ne i32 %8, 7, !dbg !4518
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !4519

if.then4:                                         ; preds = %land.lhs.true
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4520
  %10 = load i32, i32* %bundle_num.addr, align 4, !dbg !4521
  %idxprom5 = sext i32 %10 to i64, !dbg !4522
  %11 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4522
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %11, i32 0, i32 9, !dbg !4523
  %arrayidx6 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom5, !dbg !4522
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx6, i32 0, i32 1, !dbg !4524
  call void @read_tree(%struct.GetBitContext* %9, %struct.Tree* %tree), !dbg !4525
  br label %if.end7, !dbg !4525

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %12 = load i32, i32* %bundle_num.addr, align 4, !dbg !4526
  %idxprom8 = sext i32 %12 to i64, !dbg !4527
  %13 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4527
  %bundle9 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %13, i32 0, i32 9, !dbg !4528
  %arrayidx10 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle9, i64 0, i64 %idxprom8, !dbg !4527
  %data = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx10, i32 0, i32 2, !dbg !4529
  %14 = load i8*, i8** %data, align 8, !dbg !4529
  %15 = load i32, i32* %bundle_num.addr, align 4, !dbg !4530
  %idxprom11 = sext i32 %15 to i64, !dbg !4531
  %16 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4531
  %bundle12 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %16, i32 0, i32 9, !dbg !4532
  %arrayidx13 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle12, i64 0, i64 %idxprom11, !dbg !4531
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx13, i32 0, i32 5, !dbg !4533
  store i8* %14, i8** %cur_ptr, align 8, !dbg !4534
  %17 = load i32, i32* %bundle_num.addr, align 4, !dbg !4535
  %idxprom14 = sext i32 %17 to i64, !dbg !4536
  %18 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !4536
  %bundle15 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %18, i32 0, i32 9, !dbg !4537
  %arrayidx16 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle15, i64 0, i64 %idxprom14, !dbg !4536
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx16, i32 0, i32 4, !dbg !4538
  store i8* %14, i8** %cur_dec, align 8, !dbg !4539
  ret void, !dbg !4540
}

; Function Attrs: nounwind uwtable
define internal i32 @read_block_types(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.Bundle* %b) #1 !dbg !4541 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4545, metadata !1735), !dbg !4549
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4554, metadata !1735), !dbg !4555
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4556, metadata !1735), !dbg !4557
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4558, metadata !1735), !dbg !4559
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4560, metadata !1735), !dbg !4561
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4562, metadata !1735), !dbg !4563
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4564, metadata !1735), !dbg !4565
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4566, metadata !1735), !dbg !4567
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4568, metadata !1735), !dbg !4570
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4571, metadata !1735), !dbg !4572
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !4573, metadata !1735), !dbg !4574
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %c = alloca %struct.BinkContext*, align 8
  %t = alloca i32, align 4
  %v = alloca i32, align 4
  %last = alloca i32, align 4
  %dec_end = alloca i8*, align 8
  %run = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4575, metadata !1735), !dbg !4576
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4577, metadata !1735), !dbg !4578
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !4579, metadata !1735), !dbg !4580
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c, metadata !4581, metadata !1735), !dbg !4582
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4583
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4584
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4584
  %2 = bitcast i8* %1 to %struct.BinkContext*, !dbg !4583
  store %struct.BinkContext* %2, %struct.BinkContext** %c, align 8, !dbg !4582
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4585, metadata !1735), !dbg !4586
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4587, metadata !1735), !dbg !4588
  call void @llvm.dbg.declare(metadata i32* %last, metadata !4589, metadata !1735), !dbg !4590
  store i32 0, i32* %last, align 4, !dbg !4590
  call void @llvm.dbg.declare(metadata i8** %dec_end, metadata !4591, metadata !1735), !dbg !4592
  %3 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4593
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %3, i32 0, i32 4, !dbg !4595
  %4 = load i8*, i8** %cur_dec, align 8, !dbg !4595
  %tobool = icmp ne i8* %4, null, !dbg !4593
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4596

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4597
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %5, i32 0, i32 4, !dbg !4599
  %6 = load i8*, i8** %cur_dec1, align 8, !dbg !4599
  %7 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4600
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 5, !dbg !4601
  %8 = load i8*, i8** %cur_ptr, align 8, !dbg !4601
  %cmp = icmp ugt i8* %6, %8, !dbg !4602
  br i1 %cmp, label %if.then, label %if.end, !dbg !4603

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4604
  br label %return, !dbg !4604

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4606
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4608
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 0, !dbg !4609
  %11 = load i32, i32* %len, align 8, !dbg !4609
  %call = call i32 @get_bits(%struct.GetBitContext* %9, i32 %11), !dbg !4610
  store i32 %call, i32* %t, align 4, !dbg !4611
  %12 = load i32, i32* %t, align 4, !dbg !4612
  %tobool2 = icmp ne i32 %12, 0, !dbg !4612
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !4613

if.then3:                                         ; preds = %if.end
  %13 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4614
  %cur_dec4 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %13, i32 0, i32 4, !dbg !4618
  store i8* null, i8** %cur_dec4, align 8, !dbg !4619
  store i32 0, i32* %retval, align 4, !dbg !4620
  br label %return, !dbg !4620

if.end5:                                          ; preds = %if.end
  %14 = load %struct.BinkContext*, %struct.BinkContext** %c, align 8, !dbg !4621
  %version = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %14, i32 0, i32 5, !dbg !4623
  %15 = load i32, i32* %version, align 8, !dbg !4623
  %cmp6 = icmp eq i32 %15, 107, !dbg !4624
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !4625

if.then7:                                         ; preds = %if.end5
  %16 = load i32, i32* %t, align 4, !dbg !4626
  %xor = xor i32 %16, 187, !dbg !4626
  store i32 %xor, i32* %t, align 4, !dbg !4626
  %17 = load i32, i32* %t, align 4, !dbg !4628
  %cmp8 = icmp eq i32 %17, 0, !dbg !4630
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !4631

if.then9:                                         ; preds = %if.then7
  %18 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4632
  %cur_dec10 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %18, i32 0, i32 4, !dbg !4634
  store i8* null, i8** %cur_dec10, align 8, !dbg !4635
  store i32 0, i32* %retval, align 4, !dbg !4636
  br label %return, !dbg !4636

if.end11:                                         ; preds = %if.then7
  br label %if.end12, !dbg !4637

if.end12:                                         ; preds = %if.end11, %if.end5
  %19 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4638
  %cur_dec13 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %19, i32 0, i32 4, !dbg !4639
  %20 = load i8*, i8** %cur_dec13, align 8, !dbg !4639
  %21 = load i32, i32* %t, align 4, !dbg !4640
  %idx.ext = sext i32 %21 to i64, !dbg !4641
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !4641
  store i8* %add.ptr, i8** %dec_end, align 8, !dbg !4642
  %22 = load i8*, i8** %dec_end, align 8, !dbg !4643
  %23 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4645
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %23, i32 0, i32 3, !dbg !4646
  %24 = load i8*, i8** %data_end, align 8, !dbg !4646
  %cmp14 = icmp ugt i8* %22, %24, !dbg !4647
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4648

if.then15:                                        ; preds = %if.end12
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4649
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !4649
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0)), !dbg !4651
  store i32 -1094995529, i32* %retval, align 4, !dbg !4652
  br label %return, !dbg !4652

if.end16:                                         ; preds = %if.end12
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4653
  %call17 = call i32 @get_bits1(%struct.GetBitContext* %27), !dbg !4654
  %tobool18 = icmp ne i32 %call17, 0, !dbg !4654
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !4655

if.then19:                                        ; preds = %if.end16
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4656
  %call20 = call i32 @get_bits(%struct.GetBitContext* %28, i32 4), !dbg !4658
  store i32 %call20, i32* %v, align 4, !dbg !4659
  %29 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4660
  %cur_dec21 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %29, i32 0, i32 4, !dbg !4661
  %30 = load i8*, i8** %cur_dec21, align 8, !dbg !4661
  %31 = load i32, i32* %v, align 4, !dbg !4662
  %32 = trunc i32 %31 to i8, !dbg !4663
  %33 = load i32, i32* %t, align 4, !dbg !4664
  %conv = sext i32 %33 to i64, !dbg !4664
  call void @llvm.memset.p0i8.i64(i8* %30, i8 %32, i64 %conv, i32 1, i1 false), !dbg !4663
  %34 = load i32, i32* %t, align 4, !dbg !4665
  %35 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4666
  %cur_dec22 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %35, i32 0, i32 4, !dbg !4667
  %36 = load i8*, i8** %cur_dec22, align 8, !dbg !4668
  %idx.ext23 = sext i32 %34 to i64, !dbg !4668
  %add.ptr24 = getelementptr inbounds i8, i8* %36, i64 %idx.ext23, !dbg !4668
  store i8* %add.ptr24, i8** %cur_dec22, align 8, !dbg !4668
  br label %if.end58, !dbg !4669

if.else:                                          ; preds = %if.end16
  br label %while.cond, !dbg !4670

while.cond:                                       ; preds = %if.end57, %if.else
  %37 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4671
  %cur_dec25 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %37, i32 0, i32 4, !dbg !4673
  %38 = load i8*, i8** %cur_dec25, align 8, !dbg !4673
  %39 = load i8*, i8** %dec_end, align 8, !dbg !4674
  %cmp26 = icmp ult i8* %38, %39, !dbg !4675
  br i1 %cmp26, label %while.body, label %while.end, !dbg !4676

while.body:                                       ; preds = %while.cond
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4677
  %41 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4678
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %41, i32 0, i32 1, !dbg !4679
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %tree, i32 0, i32 0, !dbg !4680
  %42 = load i32, i32* %vlc_num, align 4, !dbg !4680
  %idxprom = sext i32 %42 to i64, !dbg !4681
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom, !dbg !4681
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !4682
  %43 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4682
  %44 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4683
  %tree28 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %44, i32 0, i32 1, !dbg !4684
  %vlc_num29 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree28, i32 0, i32 0, !dbg !4685
  %45 = load i32, i32* %vlc_num29, align 4, !dbg !4685
  %idxprom30 = sext i32 %45 to i64, !dbg !4686
  %arrayidx31 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom30, !dbg !4686
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx31, i32 0, i32 0, !dbg !4687
  %46 = load i32, i32* %bits, align 8, !dbg !4687
  store %struct.GetBitContext* %40, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4688
  store [2 x i16]* %43, [2 x i16]** %table.addr.i, align 8, !dbg !4688
  store i32 %46, i32* %bits.addr.i, align 4, !dbg !4688
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !4688
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4689
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %47, i32 0, i32 2, !dbg !4690
  %48 = load i32, i32* %index.i, align 8, !dbg !4690
  store i32 %48, i32* %re_index.i, align 4, !dbg !4563
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4691
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %49, i32 0, i32 4, !dbg !4692
  %50 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4692
  store i32 %50, i32* %re_size_plus8.i, align 4, !dbg !4567
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4693
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 0, !dbg !4694
  %52 = load i8*, i8** %buffer.i, align 8, !dbg !4694
  %53 = load i32, i32* %re_index.i, align 4, !dbg !4695
  %shr.i = lshr i32 %53, 3, !dbg !4696
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4697
  %add.ptr.i = getelementptr inbounds i8, i8* %52, i64 %idx.ext.i, !dbg !4697
  %54 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4698
  %l.i = bitcast %union.unaligned_32* %54 to i32*, !dbg !4698
  %55 = load i32, i32* %l.i, align 1, !dbg !4698
  %56 = load i32, i32* %re_index.i, align 4, !dbg !4699
  %and.i = and i32 %56, 7, !dbg !4700
  %shr1.i = lshr i32 %55, %and.i, !dbg !4701
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !4702
  %57 = load i32, i32* %re_cache.i, align 4, !dbg !4703
  %58 = load i32, i32* %bits.addr.i, align 4, !dbg !4705
  %call.i = call i32 @zero_extend(i32 %57, i32 %58) #2, !dbg !4706
  store i32 %call.i, i32* %index2.i, align 4, !dbg !4707
  %59 = load i32, i32* %index2.i, align 4, !dbg !4708
  %idxprom.i = zext i32 %59 to i64, !dbg !4709
  %60 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4709
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %60, i64 %idxprom.i, !dbg !4709
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4709
  %61 = load i16, i16* %arrayidx3.i, align 2, !dbg !4709
  %conv.i = sext i16 %61 to i32, !dbg !4709
  store i32 %conv.i, i32* %code.i, align 4, !dbg !4710
  %62 = load i32, i32* %index2.i, align 4, !dbg !4711
  %idxprom4.i = zext i32 %62 to i64, !dbg !4712
  %63 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4712
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %63, i64 %idxprom4.i, !dbg !4712
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !4712
  %64 = load i16, i16* %arrayidx6.i, align 2, !dbg !4712
  %conv7.i = sext i16 %64 to i32, !dbg !4712
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !4713
  %65 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4714
  %cmp.i = icmp sgt i32 %65, 1, !dbg !4715
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !4716

land.lhs.true.i:                                  ; preds = %while.body
  %66 = load i32, i32* %n.i, align 4, !dbg !4717
  %cmp9.i = icmp slt i32 %66, 0, !dbg !4720
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !4721

if.then.i:                                        ; preds = %land.lhs.true.i
  %67 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4722
  %68 = load i32, i32* %re_index.i, align 4, !dbg !4725
  %69 = load i32, i32* %bits.addr.i, align 4, !dbg !4726
  %add.i = add i32 %68, %69, !dbg !4727
  %cmp11.i = icmp ugt i32 %67, %add.i, !dbg !4728
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !4729

cond.true.i:                                      ; preds = %if.then.i
  %70 = load i32, i32* %re_index.i, align 4, !dbg !4730
  %71 = load i32, i32* %bits.addr.i, align 4, !dbg !4732
  %add13.i = add i32 %70, %71, !dbg !4733
  br label %cond.end.i, !dbg !4734

cond.false.i:                                     ; preds = %if.then.i
  %72 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4735
  br label %cond.end.i, !dbg !4737

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %72, %cond.false.i ], !dbg !4738
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4740
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4741
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %73, i32 0, i32 0, !dbg !4742
  %74 = load i8*, i8** %buffer14.i, align 8, !dbg !4742
  %75 = load i32, i32* %re_index.i, align 4, !dbg !4743
  %shr15.i = lshr i32 %75, 3, !dbg !4744
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !4745
  %add.ptr17.i = getelementptr inbounds i8, i8* %74, i64 %idx.ext16.i, !dbg !4745
  %76 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !4746
  %l18.i = bitcast %union.unaligned_32* %76 to i32*, !dbg !4746
  %77 = load i32, i32* %l18.i, align 1, !dbg !4746
  %78 = load i32, i32* %re_index.i, align 4, !dbg !4747
  %and19.i = and i32 %78, 7, !dbg !4748
  %shr20.i = lshr i32 %77, %and19.i, !dbg !4749
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !4750
  %79 = load i32, i32* %n.i, align 4, !dbg !4751
  %sub.i = sub nsw i32 0, %79, !dbg !4752
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4753
  %80 = load i32, i32* %re_cache.i, align 4, !dbg !4754
  %81 = load i32, i32* %nb_bits.i, align 4, !dbg !4755
  %call21.i = call i32 @zero_extend(i32 %80, i32 %81) #2, !dbg !4756
  %82 = load i32, i32* %code.i, align 4, !dbg !4757
  %add22.i = add i32 %call21.i, %82, !dbg !4758
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !4759
  %83 = load i32, i32* %index2.i, align 4, !dbg !4760
  %idxprom23.i = zext i32 %83 to i64, !dbg !4761
  %84 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4761
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %84, i64 %idxprom23.i, !dbg !4761
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !4761
  %85 = load i16, i16* %arrayidx25.i, align 2, !dbg !4761
  %conv26.i = sext i16 %85 to i32, !dbg !4761
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !4762
  %86 = load i32, i32* %index2.i, align 4, !dbg !4763
  %idxprom27.i = zext i32 %86 to i64, !dbg !4764
  %87 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4764
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idxprom27.i, !dbg !4764
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !4764
  %88 = load i16, i16* %arrayidx29.i, align 2, !dbg !4764
  %conv30.i = sext i16 %88 to i32, !dbg !4764
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !4765
  %89 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4766
  %cmp31.i = icmp sgt i32 %89, 2, !dbg !4767
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !4768

land.lhs.true33.i:                                ; preds = %cond.end.i
  %90 = load i32, i32* %n.i, align 4, !dbg !4769
  %cmp34.i = icmp slt i32 %90, 0, !dbg !4772
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !4773

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4774
  %92 = load i32, i32* %re_index.i, align 4, !dbg !4777
  %93 = load i32, i32* %nb_bits.i, align 4, !dbg !4778
  %add37.i = add i32 %92, %93, !dbg !4779
  %cmp38.i = icmp ugt i32 %91, %add37.i, !dbg !4780
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !4781

cond.true40.i:                                    ; preds = %if.then36.i
  %94 = load i32, i32* %re_index.i, align 4, !dbg !4782
  %95 = load i32, i32* %nb_bits.i, align 4, !dbg !4784
  %add41.i = add i32 %94, %95, !dbg !4785
  br label %cond.end43.i, !dbg !4786

cond.false42.i:                                   ; preds = %if.then36.i
  %96 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4787
  br label %cond.end43.i, !dbg !4789

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %96, %cond.false42.i ], !dbg !4790
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !4792
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4793
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %97, i32 0, i32 0, !dbg !4794
  %98 = load i8*, i8** %buffer45.i, align 8, !dbg !4794
  %99 = load i32, i32* %re_index.i, align 4, !dbg !4795
  %shr46.i = lshr i32 %99, 3, !dbg !4796
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !4797
  %add.ptr48.i = getelementptr inbounds i8, i8* %98, i64 %idx.ext47.i, !dbg !4797
  %100 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !4798
  %l49.i = bitcast %union.unaligned_32* %100 to i32*, !dbg !4798
  %101 = load i32, i32* %l49.i, align 1, !dbg !4798
  %102 = load i32, i32* %re_index.i, align 4, !dbg !4799
  %and50.i = and i32 %102, 7, !dbg !4800
  %shr51.i = lshr i32 %101, %and50.i, !dbg !4801
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !4802
  %103 = load i32, i32* %n.i, align 4, !dbg !4803
  %sub52.i = sub nsw i32 0, %103, !dbg !4804
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !4805
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !4806
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !4807
  %call53.i = call i32 @zero_extend(i32 %104, i32 %105) #2, !dbg !4808
  %106 = load i32, i32* %code.i, align 4, !dbg !4809
  %add54.i = add i32 %call53.i, %106, !dbg !4810
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !4811
  %107 = load i32, i32* %index2.i, align 4, !dbg !4812
  %idxprom55.i = zext i32 %107 to i64, !dbg !4813
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4813
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom55.i, !dbg !4813
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !4813
  %109 = load i16, i16* %arrayidx57.i, align 2, !dbg !4813
  %conv58.i = sext i16 %109 to i32, !dbg !4813
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !4814
  %110 = load i32, i32* %index2.i, align 4, !dbg !4815
  %idxprom59.i = zext i32 %110 to i64, !dbg !4816
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4816
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom59.i, !dbg !4816
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !4816
  %112 = load i16, i16* %arrayidx61.i, align 2, !dbg !4816
  %conv62.i = sext i16 %112 to i32, !dbg !4816
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !4817
  br label %if.end.i, !dbg !4818

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !4819

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %113 = load i32, i32* %n.i, align 4, !dbg !4821
  %114 = load i32, i32* %re_cache.i, align 4, !dbg !4824
  %shr65.i = lshr i32 %114, %113, !dbg !4824
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !4824
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4825
  %116 = load i32, i32* %re_index.i, align 4, !dbg !4826
  %117 = load i32, i32* %n.i, align 4, !dbg !4827
  %add66.i = add i32 %116, %117, !dbg !4828
  %cmp67.i = icmp ugt i32 %115, %add66.i, !dbg !4829
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !4830

cond.true69.i:                                    ; preds = %if.end63.i
  %118 = load i32, i32* %re_index.i, align 4, !dbg !4831
  %119 = load i32, i32* %n.i, align 4, !dbg !4833
  %add70.i = add i32 %118, %119, !dbg !4834
  br label %get_vlc2.exit, !dbg !4835

cond.false71.i:                                   ; preds = %if.end63.i
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4836
  br label %get_vlc2.exit, !dbg !4838

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %120, %cond.false71.i ], !dbg !4839
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !4841
  %121 = load i32, i32* %re_index.i, align 4, !dbg !4842
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4843
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %122, i32 0, i32 2, !dbg !4844
  store i32 %121, i32* %index75.i, align 8, !dbg !4845
  %123 = load i32, i32* %code.i, align 4, !dbg !4846
  %idxprom33 = sext i32 %123 to i64, !dbg !4847
  %124 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4848
  %tree34 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %124, i32 0, i32 1, !dbg !4849
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %tree34, i32 0, i32 1, !dbg !4850
  %arrayidx35 = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom33, !dbg !4847
  %125 = load i8, i8* %arrayidx35, align 1, !dbg !4847
  %conv36 = zext i8 %125 to i32, !dbg !4847
  store i32 %conv36, i32* %v, align 4, !dbg !4851
  %126 = load i32, i32* %v, align 4, !dbg !4852
  %cmp37 = icmp slt i32 %126, 12, !dbg !4854
  br i1 %cmp37, label %if.then39, label %if.else42, !dbg !4855

if.then39:                                        ; preds = %get_vlc2.exit
  %127 = load i32, i32* %v, align 4, !dbg !4856
  store i32 %127, i32* %last, align 4, !dbg !4858
  %128 = load i32, i32* %v, align 4, !dbg !4859
  %conv40 = trunc i32 %128 to i8, !dbg !4859
  %129 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4860
  %cur_dec41 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %129, i32 0, i32 4, !dbg !4861
  %130 = load i8*, i8** %cur_dec41, align 8, !dbg !4862
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 1, !dbg !4862
  store i8* %incdec.ptr, i8** %cur_dec41, align 8, !dbg !4862
  store i8 %conv40, i8* %130, align 1, !dbg !4863
  br label %if.end57, !dbg !4864

if.else42:                                        ; preds = %get_vlc2.exit
  call void @llvm.dbg.declare(metadata i32* %run, metadata !4865, metadata !1735), !dbg !4867
  %131 = load i32, i32* %v, align 4, !dbg !4868
  %sub = sub nsw i32 %131, 12, !dbg !4869
  %idxprom43 = sext i32 %sub to i64, !dbg !4870
  %arrayidx44 = getelementptr inbounds [4 x i8], [4 x i8]* @bink_rlelens, i64 0, i64 %idxprom43, !dbg !4870
  %132 = load i8, i8* %arrayidx44, align 1, !dbg !4870
  %conv45 = zext i8 %132 to i32, !dbg !4870
  store i32 %conv45, i32* %run, align 4, !dbg !4867
  %133 = load i8*, i8** %dec_end, align 8, !dbg !4871
  %134 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4873
  %cur_dec46 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %134, i32 0, i32 4, !dbg !4874
  %135 = load i8*, i8** %cur_dec46, align 8, !dbg !4874
  %sub.ptr.lhs.cast = ptrtoint i8* %133 to i64, !dbg !4875
  %sub.ptr.rhs.cast = ptrtoint i8* %135 to i64, !dbg !4875
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4875
  %136 = load i32, i32* %run, align 4, !dbg !4876
  %conv47 = sext i32 %136 to i64, !dbg !4876
  %cmp48 = icmp slt i64 %sub.ptr.sub, %conv47, !dbg !4877
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !4878

if.then50:                                        ; preds = %if.else42
  store i32 -1094995529, i32* %retval, align 4, !dbg !4879
  br label %return, !dbg !4879

if.end51:                                         ; preds = %if.else42
  %137 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4880
  %cur_dec52 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %137, i32 0, i32 4, !dbg !4881
  %138 = load i8*, i8** %cur_dec52, align 8, !dbg !4881
  %139 = load i32, i32* %last, align 4, !dbg !4882
  %140 = trunc i32 %139 to i8, !dbg !4883
  %141 = load i32, i32* %run, align 4, !dbg !4884
  %conv53 = sext i32 %141 to i64, !dbg !4884
  call void @llvm.memset.p0i8.i64(i8* %138, i8 %140, i64 %conv53, i32 1, i1 false), !dbg !4883
  %142 = load i32, i32* %run, align 4, !dbg !4885
  %143 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4886
  %cur_dec54 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %143, i32 0, i32 4, !dbg !4887
  %144 = load i8*, i8** %cur_dec54, align 8, !dbg !4888
  %idx.ext55 = sext i32 %142 to i64, !dbg !4888
  %add.ptr56 = getelementptr inbounds i8, i8* %144, i64 %idx.ext55, !dbg !4888
  store i8* %add.ptr56, i8** %cur_dec54, align 8, !dbg !4888
  br label %if.end57

if.end57:                                         ; preds = %if.end51, %if.then39
  br label %while.cond, !dbg !4889, !llvm.loop !4891

while.end:                                        ; preds = %while.cond
  br label %if.end58

if.end58:                                         ; preds = %while.end, %if.then19
  store i32 0, i32* %retval, align 4, !dbg !4892
  br label %return, !dbg !4892

return:                                           ; preds = %if.end58, %if.then50, %if.then15, %if.then9, %if.then3, %if.then
  %145 = load i32, i32* %retval, align 4, !dbg !4893
  ret i32 %145, !dbg !4893
}

; Function Attrs: nounwind uwtable
define internal i32 @read_colors(%struct.GetBitContext* %gb, %struct.Bundle* %b, %struct.BinkContext* %c) #1 !dbg !4894 {
entry:
  %s.addr.i316 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i316, metadata !4545, metadata !1735), !dbg !4897
  %table.addr.i317 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i317, metadata !4554, metadata !1735), !dbg !4902
  %bits.addr.i318 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i318, metadata !4556, metadata !1735), !dbg !4903
  %max_depth.addr.i319 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i319, metadata !4558, metadata !1735), !dbg !4904
  %code.i320 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i320, metadata !4560, metadata !1735), !dbg !4905
  %re_index.i321 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i321, metadata !4562, metadata !1735), !dbg !4906
  %re_cache.i322 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i322, metadata !4564, metadata !1735), !dbg !4907
  %re_size_plus8.i323 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i323, metadata !4566, metadata !1735), !dbg !4908
  %n.i324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i324, metadata !4568, metadata !1735), !dbg !4909
  %nb_bits.i325 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i325, metadata !4571, metadata !1735), !dbg !4910
  %index2.i326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i326, metadata !4573, metadata !1735), !dbg !4911
  %s.addr.i218 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i218, metadata !4545, metadata !1735), !dbg !4912
  %table.addr.i219 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i219, metadata !4554, metadata !1735), !dbg !4914
  %bits.addr.i220 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i220, metadata !4556, metadata !1735), !dbg !4915
  %max_depth.addr.i221 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i221, metadata !4558, metadata !1735), !dbg !4916
  %code.i222 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i222, metadata !4560, metadata !1735), !dbg !4917
  %re_index.i223 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i223, metadata !4562, metadata !1735), !dbg !4918
  %re_cache.i224 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i224, metadata !4564, metadata !1735), !dbg !4919
  %re_size_plus8.i225 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i225, metadata !4566, metadata !1735), !dbg !4920
  %n.i226 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i226, metadata !4568, metadata !1735), !dbg !4921
  %nb_bits.i227 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i227, metadata !4571, metadata !1735), !dbg !4922
  %index2.i228 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i228, metadata !4573, metadata !1735), !dbg !4923
  %s.addr.i120 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i120, metadata !4545, metadata !1735), !dbg !4924
  %table.addr.i121 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i121, metadata !4554, metadata !1735), !dbg !4927
  %bits.addr.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i122, metadata !4556, metadata !1735), !dbg !4928
  %max_depth.addr.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i123, metadata !4558, metadata !1735), !dbg !4929
  %code.i124 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i124, metadata !4560, metadata !1735), !dbg !4930
  %re_index.i125 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i125, metadata !4562, metadata !1735), !dbg !4931
  %re_cache.i126 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i126, metadata !4564, metadata !1735), !dbg !4932
  %re_size_plus8.i127 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i127, metadata !4566, metadata !1735), !dbg !4933
  %n.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i128, metadata !4568, metadata !1735), !dbg !4934
  %nb_bits.i129 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i129, metadata !4571, metadata !1735), !dbg !4935
  %index2.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i130, metadata !4573, metadata !1735), !dbg !4936
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4545, metadata !1735), !dbg !4937
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4554, metadata !1735), !dbg !4939
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4556, metadata !1735), !dbg !4940
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4558, metadata !1735), !dbg !4941
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4560, metadata !1735), !dbg !4942
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4562, metadata !1735), !dbg !4943
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4564, metadata !1735), !dbg !4944
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4566, metadata !1735), !dbg !4945
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4568, metadata !1735), !dbg !4946
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4571, metadata !1735), !dbg !4947
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !4573, metadata !1735), !dbg !4948
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %c.addr = alloca %struct.BinkContext*, align 8
  %t = alloca i32, align 4
  %sign = alloca i32, align 4
  %v = alloca i32, align 4
  %dec_end = alloca i8*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4949, metadata !1735), !dbg !4950
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !4951, metadata !1735), !dbg !4952
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !4953, metadata !1735), !dbg !4954
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4955, metadata !1735), !dbg !4956
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !4957, metadata !1735), !dbg !4958
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4959, metadata !1735), !dbg !4960
  call void @llvm.dbg.declare(metadata i8** %dec_end, metadata !4961, metadata !1735), !dbg !4962
  %0 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4963
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %0, i32 0, i32 4, !dbg !4965
  %1 = load i8*, i8** %cur_dec, align 8, !dbg !4965
  %tobool = icmp ne i8* %1, null, !dbg !4963
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4966

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4967
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %2, i32 0, i32 4, !dbg !4969
  %3 = load i8*, i8** %cur_dec1, align 8, !dbg !4969
  %4 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4970
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %4, i32 0, i32 5, !dbg !4971
  %5 = load i8*, i8** %cur_ptr, align 8, !dbg !4971
  %cmp = icmp ugt i8* %3, %5, !dbg !4972
  br i1 %cmp, label %if.then, label %if.end, !dbg !4973

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4974
  br label %return, !dbg !4974

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4976
  %7 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4978
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 0, !dbg !4979
  %8 = load i32, i32* %len, align 8, !dbg !4979
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 %8), !dbg !4980
  store i32 %call, i32* %t, align 4, !dbg !4981
  %9 = load i32, i32* %t, align 4, !dbg !4982
  %tobool2 = icmp ne i32 %9, 0, !dbg !4982
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !4983

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4984
  %cur_dec4 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 4, !dbg !4988
  store i8* null, i8** %cur_dec4, align 8, !dbg !4989
  store i32 0, i32* %retval, align 4, !dbg !4990
  br label %return, !dbg !4990

if.end5:                                          ; preds = %if.end
  %11 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4991
  %cur_dec6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %11, i32 0, i32 4, !dbg !4992
  %12 = load i8*, i8** %cur_dec6, align 8, !dbg !4992
  %13 = load i32, i32* %t, align 4, !dbg !4993
  %idx.ext = sext i32 %13 to i64, !dbg !4994
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !4994
  store i8* %add.ptr, i8** %dec_end, align 8, !dbg !4995
  %14 = load i8*, i8** %dec_end, align 8, !dbg !4996
  %15 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !4998
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %15, i32 0, i32 3, !dbg !4999
  %16 = load i8*, i8** %data_end, align 8, !dbg !4999
  %cmp7 = icmp ugt i8* %14, %16, !dbg !5000
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5001

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5002
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %17, i32 0, i32 0, !dbg !5004
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5004
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !5002
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)), !dbg !5005
  store i32 -1094995529, i32* %retval, align 4, !dbg !5006
  br label %return, !dbg !5006

if.end9:                                          ; preds = %if.end5
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5007
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %20), !dbg !5008
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5008
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !5009

if.then12:                                        ; preds = %if.end9
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5010
  %22 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5011
  %col_lastval = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %22, i32 0, i32 11, !dbg !5012
  %23 = load i32, i32* %col_lastval, align 8, !dbg !5012
  %idxprom = sext i32 %23 to i64, !dbg !5013
  %24 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5013
  %col_high = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %24, i32 0, i32 10, !dbg !5014
  %arrayidx = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high, i64 0, i64 %idxprom, !dbg !5013
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx, i32 0, i32 0, !dbg !5015
  %25 = load i32, i32* %vlc_num, align 4, !dbg !5015
  %idxprom13 = sext i32 %25 to i64, !dbg !5016
  %arrayidx14 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom13, !dbg !5016
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx14, i32 0, i32 1, !dbg !5017
  %26 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5017
  %27 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5018
  %col_lastval15 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %27, i32 0, i32 11, !dbg !5019
  %28 = load i32, i32* %col_lastval15, align 8, !dbg !5019
  %idxprom16 = sext i32 %28 to i64, !dbg !5020
  %29 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5020
  %col_high17 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %29, i32 0, i32 10, !dbg !5021
  %arrayidx18 = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high17, i64 0, i64 %idxprom16, !dbg !5020
  %vlc_num19 = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx18, i32 0, i32 0, !dbg !5022
  %30 = load i32, i32* %vlc_num19, align 4, !dbg !5022
  %idxprom20 = sext i32 %30 to i64, !dbg !5023
  %arrayidx21 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom20, !dbg !5023
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx21, i32 0, i32 0, !dbg !5024
  %31 = load i32, i32* %bits, align 8, !dbg !5024
  store %struct.GetBitContext* %21, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5025
  store [2 x i16]* %26, [2 x i16]** %table.addr.i, align 8, !dbg !5025
  store i32 %31, i32* %bits.addr.i, align 4, !dbg !5025
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !5025
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5026
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 2, !dbg !5027
  %33 = load i32, i32* %index.i, align 8, !dbg !5027
  store i32 %33, i32* %re_index.i, align 4, !dbg !4943
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5028
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 4, !dbg !5029
  %35 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5029
  store i32 %35, i32* %re_size_plus8.i, align 4, !dbg !4945
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5030
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %36, i32 0, i32 0, !dbg !5031
  %37 = load i8*, i8** %buffer.i, align 8, !dbg !5031
  %38 = load i32, i32* %re_index.i, align 4, !dbg !5032
  %shr.i = lshr i32 %38, 3, !dbg !5033
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5034
  %add.ptr.i = getelementptr inbounds i8, i8* %37, i64 %idx.ext.i, !dbg !5034
  %39 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5035
  %l.i = bitcast %union.unaligned_32* %39 to i32*, !dbg !5035
  %40 = load i32, i32* %l.i, align 1, !dbg !5035
  %41 = load i32, i32* %re_index.i, align 4, !dbg !5036
  %and.i = and i32 %41, 7, !dbg !5037
  %shr1.i = lshr i32 %40, %and.i, !dbg !5038
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !5039
  %42 = load i32, i32* %re_cache.i, align 4, !dbg !5040
  %43 = load i32, i32* %bits.addr.i, align 4, !dbg !5041
  %call.i = call i32 @zero_extend(i32 %42, i32 %43) #2, !dbg !5042
  store i32 %call.i, i32* %index2.i, align 4, !dbg !5043
  %44 = load i32, i32* %index2.i, align 4, !dbg !5044
  %idxprom.i = zext i32 %44 to i64, !dbg !5045
  %45 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5045
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %45, i64 %idxprom.i, !dbg !5045
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5045
  %46 = load i16, i16* %arrayidx3.i, align 2, !dbg !5045
  %conv.i = sext i16 %46 to i32, !dbg !5045
  store i32 %conv.i, i32* %code.i, align 4, !dbg !5046
  %47 = load i32, i32* %index2.i, align 4, !dbg !5047
  %idxprom4.i = zext i32 %47 to i64, !dbg !5048
  %48 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5048
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %48, i64 %idxprom4.i, !dbg !5048
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !5048
  %49 = load i16, i16* %arrayidx6.i, align 2, !dbg !5048
  %conv7.i = sext i16 %49 to i32, !dbg !5048
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !5049
  %50 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5050
  %cmp.i = icmp sgt i32 %50, 1, !dbg !5051
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !5052

land.lhs.true.i:                                  ; preds = %if.then12
  %51 = load i32, i32* %n.i, align 4, !dbg !5053
  %cmp9.i = icmp slt i32 %51, 0, !dbg !5054
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !5055

if.then.i:                                        ; preds = %land.lhs.true.i
  %52 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5056
  %53 = load i32, i32* %re_index.i, align 4, !dbg !5057
  %54 = load i32, i32* %bits.addr.i, align 4, !dbg !5058
  %add.i = add i32 %53, %54, !dbg !5059
  %cmp11.i = icmp ugt i32 %52, %add.i, !dbg !5060
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !5061

cond.true.i:                                      ; preds = %if.then.i
  %55 = load i32, i32* %re_index.i, align 4, !dbg !5062
  %56 = load i32, i32* %bits.addr.i, align 4, !dbg !5063
  %add13.i = add i32 %55, %56, !dbg !5064
  br label %cond.end.i, !dbg !5065

cond.false.i:                                     ; preds = %if.then.i
  %57 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5066
  br label %cond.end.i, !dbg !5067

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %57, %cond.false.i ], !dbg !5068
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5069
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5070
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %58, i32 0, i32 0, !dbg !5071
  %59 = load i8*, i8** %buffer14.i, align 8, !dbg !5071
  %60 = load i32, i32* %re_index.i, align 4, !dbg !5072
  %shr15.i = lshr i32 %60, 3, !dbg !5073
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !5074
  %add.ptr17.i = getelementptr inbounds i8, i8* %59, i64 %idx.ext16.i, !dbg !5074
  %61 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !5075
  %l18.i = bitcast %union.unaligned_32* %61 to i32*, !dbg !5075
  %62 = load i32, i32* %l18.i, align 1, !dbg !5075
  %63 = load i32, i32* %re_index.i, align 4, !dbg !5076
  %and19.i = and i32 %63, 7, !dbg !5077
  %shr20.i = lshr i32 %62, %and19.i, !dbg !5078
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !5079
  %64 = load i32, i32* %n.i, align 4, !dbg !5080
  %sub.i = sub nsw i32 0, %64, !dbg !5081
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5082
  %65 = load i32, i32* %re_cache.i, align 4, !dbg !5083
  %66 = load i32, i32* %nb_bits.i, align 4, !dbg !5084
  %call21.i = call i32 @zero_extend(i32 %65, i32 %66) #2, !dbg !5085
  %67 = load i32, i32* %code.i, align 4, !dbg !5086
  %add22.i = add i32 %call21.i, %67, !dbg !5087
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !5088
  %68 = load i32, i32* %index2.i, align 4, !dbg !5089
  %idxprom23.i = zext i32 %68 to i64, !dbg !5090
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5090
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom23.i, !dbg !5090
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !5090
  %70 = load i16, i16* %arrayidx25.i, align 2, !dbg !5090
  %conv26.i = sext i16 %70 to i32, !dbg !5090
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !5091
  %71 = load i32, i32* %index2.i, align 4, !dbg !5092
  %idxprom27.i = zext i32 %71 to i64, !dbg !5093
  %72 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5093
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %72, i64 %idxprom27.i, !dbg !5093
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !5093
  %73 = load i16, i16* %arrayidx29.i, align 2, !dbg !5093
  %conv30.i = sext i16 %73 to i32, !dbg !5093
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !5094
  %74 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5095
  %cmp31.i = icmp sgt i32 %74, 2, !dbg !5096
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !5097

land.lhs.true33.i:                                ; preds = %cond.end.i
  %75 = load i32, i32* %n.i, align 4, !dbg !5098
  %cmp34.i = icmp slt i32 %75, 0, !dbg !5099
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !5100

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %76 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5101
  %77 = load i32, i32* %re_index.i, align 4, !dbg !5102
  %78 = load i32, i32* %nb_bits.i, align 4, !dbg !5103
  %add37.i = add i32 %77, %78, !dbg !5104
  %cmp38.i = icmp ugt i32 %76, %add37.i, !dbg !5105
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !5106

cond.true40.i:                                    ; preds = %if.then36.i
  %79 = load i32, i32* %re_index.i, align 4, !dbg !5107
  %80 = load i32, i32* %nb_bits.i, align 4, !dbg !5108
  %add41.i = add i32 %79, %80, !dbg !5109
  br label %cond.end43.i, !dbg !5110

cond.false42.i:                                   ; preds = %if.then36.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5111
  br label %cond.end43.i, !dbg !5112

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %81, %cond.false42.i ], !dbg !5113
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !5114
  %82 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5115
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %82, i32 0, i32 0, !dbg !5116
  %83 = load i8*, i8** %buffer45.i, align 8, !dbg !5116
  %84 = load i32, i32* %re_index.i, align 4, !dbg !5117
  %shr46.i = lshr i32 %84, 3, !dbg !5118
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !5119
  %add.ptr48.i = getelementptr inbounds i8, i8* %83, i64 %idx.ext47.i, !dbg !5119
  %85 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !5120
  %l49.i = bitcast %union.unaligned_32* %85 to i32*, !dbg !5120
  %86 = load i32, i32* %l49.i, align 1, !dbg !5120
  %87 = load i32, i32* %re_index.i, align 4, !dbg !5121
  %and50.i = and i32 %87, 7, !dbg !5122
  %shr51.i = lshr i32 %86, %and50.i, !dbg !5123
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !5124
  %88 = load i32, i32* %n.i, align 4, !dbg !5125
  %sub52.i = sub nsw i32 0, %88, !dbg !5126
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !5127
  %89 = load i32, i32* %re_cache.i, align 4, !dbg !5128
  %90 = load i32, i32* %nb_bits.i, align 4, !dbg !5129
  %call53.i = call i32 @zero_extend(i32 %89, i32 %90) #2, !dbg !5130
  %91 = load i32, i32* %code.i, align 4, !dbg !5131
  %add54.i = add i32 %call53.i, %91, !dbg !5132
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !5133
  %92 = load i32, i32* %index2.i, align 4, !dbg !5134
  %idxprom55.i = zext i32 %92 to i64, !dbg !5135
  %93 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5135
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %93, i64 %idxprom55.i, !dbg !5135
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !5135
  %94 = load i16, i16* %arrayidx57.i, align 2, !dbg !5135
  %conv58.i = sext i16 %94 to i32, !dbg !5135
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !5136
  %95 = load i32, i32* %index2.i, align 4, !dbg !5137
  %idxprom59.i = zext i32 %95 to i64, !dbg !5138
  %96 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5138
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %96, i64 %idxprom59.i, !dbg !5138
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !5138
  %97 = load i16, i16* %arrayidx61.i, align 2, !dbg !5138
  %conv62.i = sext i16 %97 to i32, !dbg !5138
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !5139
  br label %if.end.i, !dbg !5140

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !5141

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.then12
  %98 = load i32, i32* %n.i, align 4, !dbg !5142
  %99 = load i32, i32* %re_cache.i, align 4, !dbg !5143
  %shr65.i = lshr i32 %99, %98, !dbg !5143
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !5143
  %100 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5144
  %101 = load i32, i32* %re_index.i, align 4, !dbg !5145
  %102 = load i32, i32* %n.i, align 4, !dbg !5146
  %add66.i = add i32 %101, %102, !dbg !5147
  %cmp67.i = icmp ugt i32 %100, %add66.i, !dbg !5148
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !5149

cond.true69.i:                                    ; preds = %if.end63.i
  %103 = load i32, i32* %re_index.i, align 4, !dbg !5150
  %104 = load i32, i32* %n.i, align 4, !dbg !5151
  %add70.i = add i32 %103, %104, !dbg !5152
  br label %get_vlc2.exit, !dbg !5153

cond.false71.i:                                   ; preds = %if.end63.i
  %105 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5154
  br label %get_vlc2.exit, !dbg !5155

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %105, %cond.false71.i ], !dbg !5156
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !5157
  %106 = load i32, i32* %re_index.i, align 4, !dbg !5158
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5159
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %107, i32 0, i32 2, !dbg !5160
  store i32 %106, i32* %index75.i, align 8, !dbg !5161
  %108 = load i32, i32* %code.i, align 4, !dbg !5162
  %idxprom23 = sext i32 %108 to i64, !dbg !5163
  %109 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5164
  %col_lastval24 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %109, i32 0, i32 11, !dbg !5165
  %110 = load i32, i32* %col_lastval24, align 8, !dbg !5165
  %idxprom25 = sext i32 %110 to i64, !dbg !5166
  %111 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5166
  %col_high26 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %111, i32 0, i32 10, !dbg !5167
  %arrayidx27 = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high26, i64 0, i64 %idxprom25, !dbg !5166
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx27, i32 0, i32 1, !dbg !5168
  %arrayidx28 = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom23, !dbg !5163
  %112 = load i8, i8* %arrayidx28, align 1, !dbg !5163
  %conv = zext i8 %112 to i32, !dbg !5163
  %113 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5169
  %col_lastval29 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %113, i32 0, i32 11, !dbg !5170
  store i32 %conv, i32* %col_lastval29, align 8, !dbg !5171
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5172
  %115 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5173
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %115, i32 0, i32 1, !dbg !5174
  %vlc_num30 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree, i32 0, i32 0, !dbg !5175
  %116 = load i32, i32* %vlc_num30, align 4, !dbg !5175
  %idxprom31 = sext i32 %116 to i64, !dbg !5176
  %arrayidx32 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom31, !dbg !5176
  %table33 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx32, i32 0, i32 1, !dbg !5177
  %117 = load [2 x i16]*, [2 x i16]** %table33, align 8, !dbg !5177
  %118 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5178
  %tree34 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %118, i32 0, i32 1, !dbg !5179
  %vlc_num35 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree34, i32 0, i32 0, !dbg !5180
  %119 = load i32, i32* %vlc_num35, align 4, !dbg !5180
  %idxprom36 = sext i32 %119 to i64, !dbg !5181
  %arrayidx37 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom36, !dbg !5181
  %bits38 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx37, i32 0, i32 0, !dbg !5182
  %120 = load i32, i32* %bits38, align 8, !dbg !5182
  store %struct.GetBitContext* %114, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5183
  store [2 x i16]* %117, [2 x i16]** %table.addr.i121, align 8, !dbg !5183
  store i32 %120, i32* %bits.addr.i122, align 4, !dbg !5183
  store i32 1, i32* %max_depth.addr.i123, align 4, !dbg !5183
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5184
  %index.i131 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %121, i32 0, i32 2, !dbg !5185
  %122 = load i32, i32* %index.i131, align 8, !dbg !5185
  store i32 %122, i32* %re_index.i125, align 4, !dbg !4931
  %123 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5186
  %size_in_bits_plus8.i132 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %123, i32 0, i32 4, !dbg !5187
  %124 = load i32, i32* %size_in_bits_plus8.i132, align 8, !dbg !5187
  store i32 %124, i32* %re_size_plus8.i127, align 4, !dbg !4933
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5188
  %buffer.i133 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %125, i32 0, i32 0, !dbg !5189
  %126 = load i8*, i8** %buffer.i133, align 8, !dbg !5189
  %127 = load i32, i32* %re_index.i125, align 4, !dbg !5190
  %shr.i134 = lshr i32 %127, 3, !dbg !5191
  %idx.ext.i135 = zext i32 %shr.i134 to i64, !dbg !5192
  %add.ptr.i136 = getelementptr inbounds i8, i8* %126, i64 %idx.ext.i135, !dbg !5192
  %128 = bitcast i8* %add.ptr.i136 to %union.unaligned_32*, !dbg !5193
  %l.i137 = bitcast %union.unaligned_32* %128 to i32*, !dbg !5193
  %129 = load i32, i32* %l.i137, align 1, !dbg !5193
  %130 = load i32, i32* %re_index.i125, align 4, !dbg !5194
  %and.i138 = and i32 %130, 7, !dbg !5195
  %shr1.i139 = lshr i32 %129, %and.i138, !dbg !5196
  store i32 %shr1.i139, i32* %re_cache.i126, align 4, !dbg !5197
  %131 = load i32, i32* %re_cache.i126, align 4, !dbg !5198
  %132 = load i32, i32* %bits.addr.i122, align 4, !dbg !5199
  %call.i140 = call i32 @zero_extend(i32 %131, i32 %132) #2, !dbg !5200
  store i32 %call.i140, i32* %index2.i130, align 4, !dbg !5201
  %133 = load i32, i32* %index2.i130, align 4, !dbg !5202
  %idxprom.i141 = zext i32 %133 to i64, !dbg !5203
  %134 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5203
  %arrayidx.i142 = getelementptr inbounds [2 x i16], [2 x i16]* %134, i64 %idxprom.i141, !dbg !5203
  %arrayidx3.i143 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i142, i64 0, i64 0, !dbg !5203
  %135 = load i16, i16* %arrayidx3.i143, align 2, !dbg !5203
  %conv.i144 = sext i16 %135 to i32, !dbg !5203
  store i32 %conv.i144, i32* %code.i124, align 4, !dbg !5204
  %136 = load i32, i32* %index2.i130, align 4, !dbg !5205
  %idxprom4.i145 = zext i32 %136 to i64, !dbg !5206
  %137 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5206
  %arrayidx5.i146 = getelementptr inbounds [2 x i16], [2 x i16]* %137, i64 %idxprom4.i145, !dbg !5206
  %arrayidx6.i147 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i146, i64 0, i64 1, !dbg !5206
  %138 = load i16, i16* %arrayidx6.i147, align 2, !dbg !5206
  %conv7.i148 = sext i16 %138 to i32, !dbg !5206
  store i32 %conv7.i148, i32* %n.i128, align 4, !dbg !5207
  %139 = load i32, i32* %max_depth.addr.i123, align 4, !dbg !5208
  %cmp.i149 = icmp sgt i32 %139, 1, !dbg !5209
  br i1 %cmp.i149, label %land.lhs.true.i151, label %if.end63.i208, !dbg !5210

land.lhs.true.i151:                               ; preds = %get_vlc2.exit
  %140 = load i32, i32* %n.i128, align 4, !dbg !5211
  %cmp9.i150 = icmp slt i32 %140, 0, !dbg !5212
  br i1 %cmp9.i150, label %if.then.i154, label %if.end63.i208, !dbg !5213

if.then.i154:                                     ; preds = %land.lhs.true.i151
  %141 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5214
  %142 = load i32, i32* %re_index.i125, align 4, !dbg !5215
  %143 = load i32, i32* %bits.addr.i122, align 4, !dbg !5216
  %add.i152 = add i32 %142, %143, !dbg !5217
  %cmp11.i153 = icmp ugt i32 %141, %add.i152, !dbg !5218
  br i1 %cmp11.i153, label %cond.true.i156, label %cond.false.i157, !dbg !5219

cond.true.i156:                                   ; preds = %if.then.i154
  %144 = load i32, i32* %re_index.i125, align 4, !dbg !5220
  %145 = load i32, i32* %bits.addr.i122, align 4, !dbg !5221
  %add13.i155 = add i32 %144, %145, !dbg !5222
  br label %cond.end.i178, !dbg !5223

cond.false.i157:                                  ; preds = %if.then.i154
  %146 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5224
  br label %cond.end.i178, !dbg !5225

cond.end.i178:                                    ; preds = %cond.false.i157, %cond.true.i156
  %cond.i158 = phi i32 [ %add13.i155, %cond.true.i156 ], [ %146, %cond.false.i157 ], !dbg !5226
  store i32 %cond.i158, i32* %re_index.i125, align 4, !dbg !5227
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5228
  %buffer14.i159 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %147, i32 0, i32 0, !dbg !5229
  %148 = load i8*, i8** %buffer14.i159, align 8, !dbg !5229
  %149 = load i32, i32* %re_index.i125, align 4, !dbg !5230
  %shr15.i160 = lshr i32 %149, 3, !dbg !5231
  %idx.ext16.i161 = zext i32 %shr15.i160 to i64, !dbg !5232
  %add.ptr17.i162 = getelementptr inbounds i8, i8* %148, i64 %idx.ext16.i161, !dbg !5232
  %150 = bitcast i8* %add.ptr17.i162 to %union.unaligned_32*, !dbg !5233
  %l18.i163 = bitcast %union.unaligned_32* %150 to i32*, !dbg !5233
  %151 = load i32, i32* %l18.i163, align 1, !dbg !5233
  %152 = load i32, i32* %re_index.i125, align 4, !dbg !5234
  %and19.i164 = and i32 %152, 7, !dbg !5235
  %shr20.i165 = lshr i32 %151, %and19.i164, !dbg !5236
  store i32 %shr20.i165, i32* %re_cache.i126, align 4, !dbg !5237
  %153 = load i32, i32* %n.i128, align 4, !dbg !5238
  %sub.i166 = sub nsw i32 0, %153, !dbg !5239
  store i32 %sub.i166, i32* %nb_bits.i129, align 4, !dbg !5240
  %154 = load i32, i32* %re_cache.i126, align 4, !dbg !5241
  %155 = load i32, i32* %nb_bits.i129, align 4, !dbg !5242
  %call21.i167 = call i32 @zero_extend(i32 %154, i32 %155) #2, !dbg !5243
  %156 = load i32, i32* %code.i124, align 4, !dbg !5244
  %add22.i168 = add i32 %call21.i167, %156, !dbg !5245
  store i32 %add22.i168, i32* %index2.i130, align 4, !dbg !5246
  %157 = load i32, i32* %index2.i130, align 4, !dbg !5247
  %idxprom23.i169 = zext i32 %157 to i64, !dbg !5248
  %158 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5248
  %arrayidx24.i170 = getelementptr inbounds [2 x i16], [2 x i16]* %158, i64 %idxprom23.i169, !dbg !5248
  %arrayidx25.i171 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i170, i64 0, i64 0, !dbg !5248
  %159 = load i16, i16* %arrayidx25.i171, align 2, !dbg !5248
  %conv26.i172 = sext i16 %159 to i32, !dbg !5248
  store i32 %conv26.i172, i32* %code.i124, align 4, !dbg !5249
  %160 = load i32, i32* %index2.i130, align 4, !dbg !5250
  %idxprom27.i173 = zext i32 %160 to i64, !dbg !5251
  %161 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5251
  %arrayidx28.i174 = getelementptr inbounds [2 x i16], [2 x i16]* %161, i64 %idxprom27.i173, !dbg !5251
  %arrayidx29.i175 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i174, i64 0, i64 1, !dbg !5251
  %162 = load i16, i16* %arrayidx29.i175, align 2, !dbg !5251
  %conv30.i176 = sext i16 %162 to i32, !dbg !5251
  store i32 %conv30.i176, i32* %n.i128, align 4, !dbg !5252
  %163 = load i32, i32* %max_depth.addr.i123, align 4, !dbg !5253
  %cmp31.i177 = icmp sgt i32 %163, 2, !dbg !5254
  br i1 %cmp31.i177, label %land.lhs.true33.i180, label %if.end.i207, !dbg !5255

land.lhs.true33.i180:                             ; preds = %cond.end.i178
  %164 = load i32, i32* %n.i128, align 4, !dbg !5256
  %cmp34.i179 = icmp slt i32 %164, 0, !dbg !5257
  br i1 %cmp34.i179, label %if.then36.i183, label %if.end.i207, !dbg !5258

if.then36.i183:                                   ; preds = %land.lhs.true33.i180
  %165 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5259
  %166 = load i32, i32* %re_index.i125, align 4, !dbg !5260
  %167 = load i32, i32* %nb_bits.i129, align 4, !dbg !5261
  %add37.i181 = add i32 %166, %167, !dbg !5262
  %cmp38.i182 = icmp ugt i32 %165, %add37.i181, !dbg !5263
  br i1 %cmp38.i182, label %cond.true40.i185, label %cond.false42.i186, !dbg !5264

cond.true40.i185:                                 ; preds = %if.then36.i183
  %168 = load i32, i32* %re_index.i125, align 4, !dbg !5265
  %169 = load i32, i32* %nb_bits.i129, align 4, !dbg !5266
  %add41.i184 = add i32 %168, %169, !dbg !5267
  br label %cond.end43.i206, !dbg !5268

cond.false42.i186:                                ; preds = %if.then36.i183
  %170 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5269
  br label %cond.end43.i206, !dbg !5270

cond.end43.i206:                                  ; preds = %cond.false42.i186, %cond.true40.i185
  %cond44.i187 = phi i32 [ %add41.i184, %cond.true40.i185 ], [ %170, %cond.false42.i186 ], !dbg !5271
  store i32 %cond44.i187, i32* %re_index.i125, align 4, !dbg !5272
  %171 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5273
  %buffer45.i188 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %171, i32 0, i32 0, !dbg !5274
  %172 = load i8*, i8** %buffer45.i188, align 8, !dbg !5274
  %173 = load i32, i32* %re_index.i125, align 4, !dbg !5275
  %shr46.i189 = lshr i32 %173, 3, !dbg !5276
  %idx.ext47.i190 = zext i32 %shr46.i189 to i64, !dbg !5277
  %add.ptr48.i191 = getelementptr inbounds i8, i8* %172, i64 %idx.ext47.i190, !dbg !5277
  %174 = bitcast i8* %add.ptr48.i191 to %union.unaligned_32*, !dbg !5278
  %l49.i192 = bitcast %union.unaligned_32* %174 to i32*, !dbg !5278
  %175 = load i32, i32* %l49.i192, align 1, !dbg !5278
  %176 = load i32, i32* %re_index.i125, align 4, !dbg !5279
  %and50.i193 = and i32 %176, 7, !dbg !5280
  %shr51.i194 = lshr i32 %175, %and50.i193, !dbg !5281
  store i32 %shr51.i194, i32* %re_cache.i126, align 4, !dbg !5282
  %177 = load i32, i32* %n.i128, align 4, !dbg !5283
  %sub52.i195 = sub nsw i32 0, %177, !dbg !5284
  store i32 %sub52.i195, i32* %nb_bits.i129, align 4, !dbg !5285
  %178 = load i32, i32* %re_cache.i126, align 4, !dbg !5286
  %179 = load i32, i32* %nb_bits.i129, align 4, !dbg !5287
  %call53.i196 = call i32 @zero_extend(i32 %178, i32 %179) #2, !dbg !5288
  %180 = load i32, i32* %code.i124, align 4, !dbg !5289
  %add54.i197 = add i32 %call53.i196, %180, !dbg !5290
  store i32 %add54.i197, i32* %index2.i130, align 4, !dbg !5291
  %181 = load i32, i32* %index2.i130, align 4, !dbg !5292
  %idxprom55.i198 = zext i32 %181 to i64, !dbg !5293
  %182 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5293
  %arrayidx56.i199 = getelementptr inbounds [2 x i16], [2 x i16]* %182, i64 %idxprom55.i198, !dbg !5293
  %arrayidx57.i200 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i199, i64 0, i64 0, !dbg !5293
  %183 = load i16, i16* %arrayidx57.i200, align 2, !dbg !5293
  %conv58.i201 = sext i16 %183 to i32, !dbg !5293
  store i32 %conv58.i201, i32* %code.i124, align 4, !dbg !5294
  %184 = load i32, i32* %index2.i130, align 4, !dbg !5295
  %idxprom59.i202 = zext i32 %184 to i64, !dbg !5296
  %185 = load [2 x i16]*, [2 x i16]** %table.addr.i121, align 8, !dbg !5296
  %arrayidx60.i203 = getelementptr inbounds [2 x i16], [2 x i16]* %185, i64 %idxprom59.i202, !dbg !5296
  %arrayidx61.i204 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i203, i64 0, i64 1, !dbg !5296
  %186 = load i16, i16* %arrayidx61.i204, align 2, !dbg !5296
  %conv62.i205 = sext i16 %186 to i32, !dbg !5296
  store i32 %conv62.i205, i32* %n.i128, align 4, !dbg !5297
  br label %if.end.i207, !dbg !5298

if.end.i207:                                      ; preds = %cond.end43.i206, %land.lhs.true33.i180, %cond.end.i178
  br label %if.end63.i208, !dbg !5299

if.end63.i208:                                    ; preds = %if.end.i207, %land.lhs.true.i151, %get_vlc2.exit
  %187 = load i32, i32* %n.i128, align 4, !dbg !5300
  %188 = load i32, i32* %re_cache.i126, align 4, !dbg !5301
  %shr65.i209 = lshr i32 %188, %187, !dbg !5301
  store i32 %shr65.i209, i32* %re_cache.i126, align 4, !dbg !5301
  %189 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5302
  %190 = load i32, i32* %re_index.i125, align 4, !dbg !5303
  %191 = load i32, i32* %n.i128, align 4, !dbg !5304
  %add66.i210 = add i32 %190, %191, !dbg !5305
  %cmp67.i211 = icmp ugt i32 %189, %add66.i210, !dbg !5306
  br i1 %cmp67.i211, label %cond.true69.i213, label %cond.false71.i214, !dbg !5307

cond.true69.i213:                                 ; preds = %if.end63.i208
  %192 = load i32, i32* %re_index.i125, align 4, !dbg !5308
  %193 = load i32, i32* %n.i128, align 4, !dbg !5309
  %add70.i212 = add i32 %192, %193, !dbg !5310
  br label %get_vlc2.exit217, !dbg !5311

cond.false71.i214:                                ; preds = %if.end63.i208
  %194 = load i32, i32* %re_size_plus8.i127, align 4, !dbg !5312
  br label %get_vlc2.exit217, !dbg !5313

get_vlc2.exit217:                                 ; preds = %cond.true69.i213, %cond.false71.i214
  %cond73.i215 = phi i32 [ %add70.i212, %cond.true69.i213 ], [ %194, %cond.false71.i214 ], !dbg !5314
  store i32 %cond73.i215, i32* %re_index.i125, align 4, !dbg !5315
  %195 = load i32, i32* %re_index.i125, align 4, !dbg !5316
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i120, align 8, !dbg !5317
  %index75.i216 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %196, i32 0, i32 2, !dbg !5318
  store i32 %195, i32* %index75.i216, align 8, !dbg !5319
  %197 = load i32, i32* %code.i124, align 4, !dbg !5320
  %idxprom40 = sext i32 %197 to i64, !dbg !5321
  %198 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5322
  %tree41 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %198, i32 0, i32 1, !dbg !5323
  %syms42 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree41, i32 0, i32 1, !dbg !5324
  %arrayidx43 = getelementptr inbounds [16 x i8], [16 x i8]* %syms42, i64 0, i64 %idxprom40, !dbg !5321
  %199 = load i8, i8* %arrayidx43, align 1, !dbg !5321
  %conv44 = zext i8 %199 to i32, !dbg !5321
  store i32 %conv44, i32* %v, align 4, !dbg !5325
  %200 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5326
  %col_lastval45 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %200, i32 0, i32 11, !dbg !5327
  %201 = load i32, i32* %col_lastval45, align 8, !dbg !5327
  %shl = shl i32 %201, 4, !dbg !5328
  %202 = load i32, i32* %v, align 4, !dbg !5329
  %or = or i32 %shl, %202, !dbg !5330
  store i32 %or, i32* %v, align 4, !dbg !5331
  %203 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5332
  %version = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %203, i32 0, i32 5, !dbg !5334
  %204 = load i32, i32* %version, align 8, !dbg !5334
  %cmp46 = icmp slt i32 %204, 105, !dbg !5335
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !5336

if.then48:                                        ; preds = %get_vlc2.exit217
  %205 = load i32, i32* %v, align 4, !dbg !5337
  %conv49 = trunc i32 %205 to i8, !dbg !5339
  %conv50 = sext i8 %conv49 to i32, !dbg !5340
  %shr = ashr i32 %conv50, 7, !dbg !5341
  store i32 %shr, i32* %sign, align 4, !dbg !5342
  %206 = load i32, i32* %v, align 4, !dbg !5343
  %and = and i32 %206, 127, !dbg !5344
  %207 = load i32, i32* %sign, align 4, !dbg !5345
  %xor = xor i32 %and, %207, !dbg !5346
  %208 = load i32, i32* %sign, align 4, !dbg !5347
  %sub = sub nsw i32 %xor, %208, !dbg !5348
  store i32 %sub, i32* %v, align 4, !dbg !5349
  %209 = load i32, i32* %v, align 4, !dbg !5350
  %add = add nsw i32 %209, 128, !dbg !5350
  store i32 %add, i32* %v, align 4, !dbg !5350
  br label %if.end51, !dbg !5351

if.end51:                                         ; preds = %if.then48, %get_vlc2.exit217
  %210 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5352
  %cur_dec52 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %210, i32 0, i32 4, !dbg !5353
  %211 = load i8*, i8** %cur_dec52, align 8, !dbg !5353
  %212 = load i32, i32* %v, align 4, !dbg !5354
  %213 = trunc i32 %212 to i8, !dbg !5355
  %214 = load i32, i32* %t, align 4, !dbg !5356
  %conv53 = sext i32 %214 to i64, !dbg !5356
  call void @llvm.memset.p0i8.i64(i8* %211, i8 %213, i64 %conv53, i32 1, i1 false), !dbg !5355
  %215 = load i32, i32* %t, align 4, !dbg !5357
  %216 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5358
  %cur_dec54 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %216, i32 0, i32 4, !dbg !5359
  %217 = load i8*, i8** %cur_dec54, align 8, !dbg !5360
  %idx.ext55 = sext i32 %215 to i64, !dbg !5360
  %add.ptr56 = getelementptr inbounds i8, i8* %217, i64 %idx.ext55, !dbg !5360
  store i8* %add.ptr56, i8** %cur_dec54, align 8, !dbg !5360
  br label %if.end119, !dbg !5361

if.else:                                          ; preds = %if.end9
  br label %while.cond, !dbg !5362

while.cond:                                       ; preds = %if.end116, %if.else
  %218 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5363
  %cur_dec57 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %218, i32 0, i32 4, !dbg !5365
  %219 = load i8*, i8** %cur_dec57, align 8, !dbg !5365
  %220 = load i8*, i8** %dec_end, align 8, !dbg !5366
  %cmp58 = icmp ult i8* %219, %220, !dbg !5367
  br i1 %cmp58, label %while.body, label %while.end, !dbg !5368

while.body:                                       ; preds = %while.cond
  %221 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5369
  %222 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5370
  %col_lastval60 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %222, i32 0, i32 11, !dbg !5371
  %223 = load i32, i32* %col_lastval60, align 8, !dbg !5371
  %idxprom61 = sext i32 %223 to i64, !dbg !5372
  %224 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5372
  %col_high62 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %224, i32 0, i32 10, !dbg !5373
  %arrayidx63 = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high62, i64 0, i64 %idxprom61, !dbg !5372
  %vlc_num64 = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx63, i32 0, i32 0, !dbg !5374
  %225 = load i32, i32* %vlc_num64, align 4, !dbg !5374
  %idxprom65 = sext i32 %225 to i64, !dbg !5375
  %arrayidx66 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom65, !dbg !5375
  %table67 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx66, i32 0, i32 1, !dbg !5376
  %226 = load [2 x i16]*, [2 x i16]** %table67, align 8, !dbg !5376
  %227 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5377
  %col_lastval68 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %227, i32 0, i32 11, !dbg !5378
  %228 = load i32, i32* %col_lastval68, align 8, !dbg !5378
  %idxprom69 = sext i32 %228 to i64, !dbg !5379
  %229 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5379
  %col_high70 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %229, i32 0, i32 10, !dbg !5380
  %arrayidx71 = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high70, i64 0, i64 %idxprom69, !dbg !5379
  %vlc_num72 = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx71, i32 0, i32 0, !dbg !5381
  %230 = load i32, i32* %vlc_num72, align 4, !dbg !5381
  %idxprom73 = sext i32 %230 to i64, !dbg !5382
  %arrayidx74 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom73, !dbg !5382
  %bits75 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx74, i32 0, i32 0, !dbg !5383
  %231 = load i32, i32* %bits75, align 8, !dbg !5383
  store %struct.GetBitContext* %221, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5384
  store [2 x i16]* %226, [2 x i16]** %table.addr.i219, align 8, !dbg !5384
  store i32 %231, i32* %bits.addr.i220, align 4, !dbg !5384
  store i32 1, i32* %max_depth.addr.i221, align 4, !dbg !5384
  %232 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5385
  %index.i229 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %232, i32 0, i32 2, !dbg !5386
  %233 = load i32, i32* %index.i229, align 8, !dbg !5386
  store i32 %233, i32* %re_index.i223, align 4, !dbg !4918
  %234 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5387
  %size_in_bits_plus8.i230 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %234, i32 0, i32 4, !dbg !5388
  %235 = load i32, i32* %size_in_bits_plus8.i230, align 8, !dbg !5388
  store i32 %235, i32* %re_size_plus8.i225, align 4, !dbg !4920
  %236 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5389
  %buffer.i231 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %236, i32 0, i32 0, !dbg !5390
  %237 = load i8*, i8** %buffer.i231, align 8, !dbg !5390
  %238 = load i32, i32* %re_index.i223, align 4, !dbg !5391
  %shr.i232 = lshr i32 %238, 3, !dbg !5392
  %idx.ext.i233 = zext i32 %shr.i232 to i64, !dbg !5393
  %add.ptr.i234 = getelementptr inbounds i8, i8* %237, i64 %idx.ext.i233, !dbg !5393
  %239 = bitcast i8* %add.ptr.i234 to %union.unaligned_32*, !dbg !5394
  %l.i235 = bitcast %union.unaligned_32* %239 to i32*, !dbg !5394
  %240 = load i32, i32* %l.i235, align 1, !dbg !5394
  %241 = load i32, i32* %re_index.i223, align 4, !dbg !5395
  %and.i236 = and i32 %241, 7, !dbg !5396
  %shr1.i237 = lshr i32 %240, %and.i236, !dbg !5397
  store i32 %shr1.i237, i32* %re_cache.i224, align 4, !dbg !5398
  %242 = load i32, i32* %re_cache.i224, align 4, !dbg !5399
  %243 = load i32, i32* %bits.addr.i220, align 4, !dbg !5400
  %call.i238 = call i32 @zero_extend(i32 %242, i32 %243) #2, !dbg !5401
  store i32 %call.i238, i32* %index2.i228, align 4, !dbg !5402
  %244 = load i32, i32* %index2.i228, align 4, !dbg !5403
  %idxprom.i239 = zext i32 %244 to i64, !dbg !5404
  %245 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5404
  %arrayidx.i240 = getelementptr inbounds [2 x i16], [2 x i16]* %245, i64 %idxprom.i239, !dbg !5404
  %arrayidx3.i241 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i240, i64 0, i64 0, !dbg !5404
  %246 = load i16, i16* %arrayidx3.i241, align 2, !dbg !5404
  %conv.i242 = sext i16 %246 to i32, !dbg !5404
  store i32 %conv.i242, i32* %code.i222, align 4, !dbg !5405
  %247 = load i32, i32* %index2.i228, align 4, !dbg !5406
  %idxprom4.i243 = zext i32 %247 to i64, !dbg !5407
  %248 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5407
  %arrayidx5.i244 = getelementptr inbounds [2 x i16], [2 x i16]* %248, i64 %idxprom4.i243, !dbg !5407
  %arrayidx6.i245 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i244, i64 0, i64 1, !dbg !5407
  %249 = load i16, i16* %arrayidx6.i245, align 2, !dbg !5407
  %conv7.i246 = sext i16 %249 to i32, !dbg !5407
  store i32 %conv7.i246, i32* %n.i226, align 4, !dbg !5408
  %250 = load i32, i32* %max_depth.addr.i221, align 4, !dbg !5409
  %cmp.i247 = icmp sgt i32 %250, 1, !dbg !5410
  br i1 %cmp.i247, label %land.lhs.true.i249, label %if.end63.i306, !dbg !5411

land.lhs.true.i249:                               ; preds = %while.body
  %251 = load i32, i32* %n.i226, align 4, !dbg !5412
  %cmp9.i248 = icmp slt i32 %251, 0, !dbg !5413
  br i1 %cmp9.i248, label %if.then.i252, label %if.end63.i306, !dbg !5414

if.then.i252:                                     ; preds = %land.lhs.true.i249
  %252 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5415
  %253 = load i32, i32* %re_index.i223, align 4, !dbg !5416
  %254 = load i32, i32* %bits.addr.i220, align 4, !dbg !5417
  %add.i250 = add i32 %253, %254, !dbg !5418
  %cmp11.i251 = icmp ugt i32 %252, %add.i250, !dbg !5419
  br i1 %cmp11.i251, label %cond.true.i254, label %cond.false.i255, !dbg !5420

cond.true.i254:                                   ; preds = %if.then.i252
  %255 = load i32, i32* %re_index.i223, align 4, !dbg !5421
  %256 = load i32, i32* %bits.addr.i220, align 4, !dbg !5422
  %add13.i253 = add i32 %255, %256, !dbg !5423
  br label %cond.end.i276, !dbg !5424

cond.false.i255:                                  ; preds = %if.then.i252
  %257 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5425
  br label %cond.end.i276, !dbg !5426

cond.end.i276:                                    ; preds = %cond.false.i255, %cond.true.i254
  %cond.i256 = phi i32 [ %add13.i253, %cond.true.i254 ], [ %257, %cond.false.i255 ], !dbg !5427
  store i32 %cond.i256, i32* %re_index.i223, align 4, !dbg !5428
  %258 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5429
  %buffer14.i257 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %258, i32 0, i32 0, !dbg !5430
  %259 = load i8*, i8** %buffer14.i257, align 8, !dbg !5430
  %260 = load i32, i32* %re_index.i223, align 4, !dbg !5431
  %shr15.i258 = lshr i32 %260, 3, !dbg !5432
  %idx.ext16.i259 = zext i32 %shr15.i258 to i64, !dbg !5433
  %add.ptr17.i260 = getelementptr inbounds i8, i8* %259, i64 %idx.ext16.i259, !dbg !5433
  %261 = bitcast i8* %add.ptr17.i260 to %union.unaligned_32*, !dbg !5434
  %l18.i261 = bitcast %union.unaligned_32* %261 to i32*, !dbg !5434
  %262 = load i32, i32* %l18.i261, align 1, !dbg !5434
  %263 = load i32, i32* %re_index.i223, align 4, !dbg !5435
  %and19.i262 = and i32 %263, 7, !dbg !5436
  %shr20.i263 = lshr i32 %262, %and19.i262, !dbg !5437
  store i32 %shr20.i263, i32* %re_cache.i224, align 4, !dbg !5438
  %264 = load i32, i32* %n.i226, align 4, !dbg !5439
  %sub.i264 = sub nsw i32 0, %264, !dbg !5440
  store i32 %sub.i264, i32* %nb_bits.i227, align 4, !dbg !5441
  %265 = load i32, i32* %re_cache.i224, align 4, !dbg !5442
  %266 = load i32, i32* %nb_bits.i227, align 4, !dbg !5443
  %call21.i265 = call i32 @zero_extend(i32 %265, i32 %266) #2, !dbg !5444
  %267 = load i32, i32* %code.i222, align 4, !dbg !5445
  %add22.i266 = add i32 %call21.i265, %267, !dbg !5446
  store i32 %add22.i266, i32* %index2.i228, align 4, !dbg !5447
  %268 = load i32, i32* %index2.i228, align 4, !dbg !5448
  %idxprom23.i267 = zext i32 %268 to i64, !dbg !5449
  %269 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5449
  %arrayidx24.i268 = getelementptr inbounds [2 x i16], [2 x i16]* %269, i64 %idxprom23.i267, !dbg !5449
  %arrayidx25.i269 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i268, i64 0, i64 0, !dbg !5449
  %270 = load i16, i16* %arrayidx25.i269, align 2, !dbg !5449
  %conv26.i270 = sext i16 %270 to i32, !dbg !5449
  store i32 %conv26.i270, i32* %code.i222, align 4, !dbg !5450
  %271 = load i32, i32* %index2.i228, align 4, !dbg !5451
  %idxprom27.i271 = zext i32 %271 to i64, !dbg !5452
  %272 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5452
  %arrayidx28.i272 = getelementptr inbounds [2 x i16], [2 x i16]* %272, i64 %idxprom27.i271, !dbg !5452
  %arrayidx29.i273 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i272, i64 0, i64 1, !dbg !5452
  %273 = load i16, i16* %arrayidx29.i273, align 2, !dbg !5452
  %conv30.i274 = sext i16 %273 to i32, !dbg !5452
  store i32 %conv30.i274, i32* %n.i226, align 4, !dbg !5453
  %274 = load i32, i32* %max_depth.addr.i221, align 4, !dbg !5454
  %cmp31.i275 = icmp sgt i32 %274, 2, !dbg !5455
  br i1 %cmp31.i275, label %land.lhs.true33.i278, label %if.end.i305, !dbg !5456

land.lhs.true33.i278:                             ; preds = %cond.end.i276
  %275 = load i32, i32* %n.i226, align 4, !dbg !5457
  %cmp34.i277 = icmp slt i32 %275, 0, !dbg !5458
  br i1 %cmp34.i277, label %if.then36.i281, label %if.end.i305, !dbg !5459

if.then36.i281:                                   ; preds = %land.lhs.true33.i278
  %276 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5460
  %277 = load i32, i32* %re_index.i223, align 4, !dbg !5461
  %278 = load i32, i32* %nb_bits.i227, align 4, !dbg !5462
  %add37.i279 = add i32 %277, %278, !dbg !5463
  %cmp38.i280 = icmp ugt i32 %276, %add37.i279, !dbg !5464
  br i1 %cmp38.i280, label %cond.true40.i283, label %cond.false42.i284, !dbg !5465

cond.true40.i283:                                 ; preds = %if.then36.i281
  %279 = load i32, i32* %re_index.i223, align 4, !dbg !5466
  %280 = load i32, i32* %nb_bits.i227, align 4, !dbg !5467
  %add41.i282 = add i32 %279, %280, !dbg !5468
  br label %cond.end43.i304, !dbg !5469

cond.false42.i284:                                ; preds = %if.then36.i281
  %281 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5470
  br label %cond.end43.i304, !dbg !5471

cond.end43.i304:                                  ; preds = %cond.false42.i284, %cond.true40.i283
  %cond44.i285 = phi i32 [ %add41.i282, %cond.true40.i283 ], [ %281, %cond.false42.i284 ], !dbg !5472
  store i32 %cond44.i285, i32* %re_index.i223, align 4, !dbg !5473
  %282 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5474
  %buffer45.i286 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %282, i32 0, i32 0, !dbg !5475
  %283 = load i8*, i8** %buffer45.i286, align 8, !dbg !5475
  %284 = load i32, i32* %re_index.i223, align 4, !dbg !5476
  %shr46.i287 = lshr i32 %284, 3, !dbg !5477
  %idx.ext47.i288 = zext i32 %shr46.i287 to i64, !dbg !5478
  %add.ptr48.i289 = getelementptr inbounds i8, i8* %283, i64 %idx.ext47.i288, !dbg !5478
  %285 = bitcast i8* %add.ptr48.i289 to %union.unaligned_32*, !dbg !5479
  %l49.i290 = bitcast %union.unaligned_32* %285 to i32*, !dbg !5479
  %286 = load i32, i32* %l49.i290, align 1, !dbg !5479
  %287 = load i32, i32* %re_index.i223, align 4, !dbg !5480
  %and50.i291 = and i32 %287, 7, !dbg !5481
  %shr51.i292 = lshr i32 %286, %and50.i291, !dbg !5482
  store i32 %shr51.i292, i32* %re_cache.i224, align 4, !dbg !5483
  %288 = load i32, i32* %n.i226, align 4, !dbg !5484
  %sub52.i293 = sub nsw i32 0, %288, !dbg !5485
  store i32 %sub52.i293, i32* %nb_bits.i227, align 4, !dbg !5486
  %289 = load i32, i32* %re_cache.i224, align 4, !dbg !5487
  %290 = load i32, i32* %nb_bits.i227, align 4, !dbg !5488
  %call53.i294 = call i32 @zero_extend(i32 %289, i32 %290) #2, !dbg !5489
  %291 = load i32, i32* %code.i222, align 4, !dbg !5490
  %add54.i295 = add i32 %call53.i294, %291, !dbg !5491
  store i32 %add54.i295, i32* %index2.i228, align 4, !dbg !5492
  %292 = load i32, i32* %index2.i228, align 4, !dbg !5493
  %idxprom55.i296 = zext i32 %292 to i64, !dbg !5494
  %293 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5494
  %arrayidx56.i297 = getelementptr inbounds [2 x i16], [2 x i16]* %293, i64 %idxprom55.i296, !dbg !5494
  %arrayidx57.i298 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i297, i64 0, i64 0, !dbg !5494
  %294 = load i16, i16* %arrayidx57.i298, align 2, !dbg !5494
  %conv58.i299 = sext i16 %294 to i32, !dbg !5494
  store i32 %conv58.i299, i32* %code.i222, align 4, !dbg !5495
  %295 = load i32, i32* %index2.i228, align 4, !dbg !5496
  %idxprom59.i300 = zext i32 %295 to i64, !dbg !5497
  %296 = load [2 x i16]*, [2 x i16]** %table.addr.i219, align 8, !dbg !5497
  %arrayidx60.i301 = getelementptr inbounds [2 x i16], [2 x i16]* %296, i64 %idxprom59.i300, !dbg !5497
  %arrayidx61.i302 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i301, i64 0, i64 1, !dbg !5497
  %297 = load i16, i16* %arrayidx61.i302, align 2, !dbg !5497
  %conv62.i303 = sext i16 %297 to i32, !dbg !5497
  store i32 %conv62.i303, i32* %n.i226, align 4, !dbg !5498
  br label %if.end.i305, !dbg !5499

if.end.i305:                                      ; preds = %cond.end43.i304, %land.lhs.true33.i278, %cond.end.i276
  br label %if.end63.i306, !dbg !5500

if.end63.i306:                                    ; preds = %if.end.i305, %land.lhs.true.i249, %while.body
  %298 = load i32, i32* %n.i226, align 4, !dbg !5501
  %299 = load i32, i32* %re_cache.i224, align 4, !dbg !5502
  %shr65.i307 = lshr i32 %299, %298, !dbg !5502
  store i32 %shr65.i307, i32* %re_cache.i224, align 4, !dbg !5502
  %300 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5503
  %301 = load i32, i32* %re_index.i223, align 4, !dbg !5504
  %302 = load i32, i32* %n.i226, align 4, !dbg !5505
  %add66.i308 = add i32 %301, %302, !dbg !5506
  %cmp67.i309 = icmp ugt i32 %300, %add66.i308, !dbg !5507
  br i1 %cmp67.i309, label %cond.true69.i311, label %cond.false71.i312, !dbg !5508

cond.true69.i311:                                 ; preds = %if.end63.i306
  %303 = load i32, i32* %re_index.i223, align 4, !dbg !5509
  %304 = load i32, i32* %n.i226, align 4, !dbg !5510
  %add70.i310 = add i32 %303, %304, !dbg !5511
  br label %get_vlc2.exit315, !dbg !5512

cond.false71.i312:                                ; preds = %if.end63.i306
  %305 = load i32, i32* %re_size_plus8.i225, align 4, !dbg !5513
  br label %get_vlc2.exit315, !dbg !5514

get_vlc2.exit315:                                 ; preds = %cond.true69.i311, %cond.false71.i312
  %cond73.i313 = phi i32 [ %add70.i310, %cond.true69.i311 ], [ %305, %cond.false71.i312 ], !dbg !5515
  store i32 %cond73.i313, i32* %re_index.i223, align 4, !dbg !5516
  %306 = load i32, i32* %re_index.i223, align 4, !dbg !5517
  %307 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i218, align 8, !dbg !5518
  %index75.i314 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %307, i32 0, i32 2, !dbg !5519
  store i32 %306, i32* %index75.i314, align 8, !dbg !5520
  %308 = load i32, i32* %code.i222, align 4, !dbg !5521
  %idxprom77 = sext i32 %308 to i64, !dbg !5522
  %309 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5523
  %col_lastval78 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %309, i32 0, i32 11, !dbg !5524
  %310 = load i32, i32* %col_lastval78, align 8, !dbg !5524
  %idxprom79 = sext i32 %310 to i64, !dbg !5525
  %311 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5525
  %col_high80 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %311, i32 0, i32 10, !dbg !5526
  %arrayidx81 = getelementptr inbounds [16 x %struct.Tree], [16 x %struct.Tree]* %col_high80, i64 0, i64 %idxprom79, !dbg !5525
  %syms82 = getelementptr inbounds %struct.Tree, %struct.Tree* %arrayidx81, i32 0, i32 1, !dbg !5527
  %arrayidx83 = getelementptr inbounds [16 x i8], [16 x i8]* %syms82, i64 0, i64 %idxprom77, !dbg !5522
  %312 = load i8, i8* %arrayidx83, align 1, !dbg !5522
  %conv84 = zext i8 %312 to i32, !dbg !5522
  %313 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5528
  %col_lastval85 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %313, i32 0, i32 11, !dbg !5529
  store i32 %conv84, i32* %col_lastval85, align 8, !dbg !5530
  %314 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5531
  %315 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5532
  %tree86 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %315, i32 0, i32 1, !dbg !5533
  %vlc_num87 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree86, i32 0, i32 0, !dbg !5534
  %316 = load i32, i32* %vlc_num87, align 4, !dbg !5534
  %idxprom88 = sext i32 %316 to i64, !dbg !5535
  %arrayidx89 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom88, !dbg !5535
  %table90 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx89, i32 0, i32 1, !dbg !5536
  %317 = load [2 x i16]*, [2 x i16]** %table90, align 8, !dbg !5536
  %318 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5537
  %tree91 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %318, i32 0, i32 1, !dbg !5538
  %vlc_num92 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree91, i32 0, i32 0, !dbg !5539
  %319 = load i32, i32* %vlc_num92, align 4, !dbg !5539
  %idxprom93 = sext i32 %319 to i64, !dbg !5540
  %arrayidx94 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom93, !dbg !5540
  %bits95 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx94, i32 0, i32 0, !dbg !5541
  %320 = load i32, i32* %bits95, align 8, !dbg !5541
  store %struct.GetBitContext* %314, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5542
  store [2 x i16]* %317, [2 x i16]** %table.addr.i317, align 8, !dbg !5542
  store i32 %320, i32* %bits.addr.i318, align 4, !dbg !5542
  store i32 1, i32* %max_depth.addr.i319, align 4, !dbg !5542
  %321 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5543
  %index.i327 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %321, i32 0, i32 2, !dbg !5544
  %322 = load i32, i32* %index.i327, align 8, !dbg !5544
  store i32 %322, i32* %re_index.i321, align 4, !dbg !4906
  %323 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5545
  %size_in_bits_plus8.i328 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %323, i32 0, i32 4, !dbg !5546
  %324 = load i32, i32* %size_in_bits_plus8.i328, align 8, !dbg !5546
  store i32 %324, i32* %re_size_plus8.i323, align 4, !dbg !4908
  %325 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5547
  %buffer.i329 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %325, i32 0, i32 0, !dbg !5548
  %326 = load i8*, i8** %buffer.i329, align 8, !dbg !5548
  %327 = load i32, i32* %re_index.i321, align 4, !dbg !5549
  %shr.i330 = lshr i32 %327, 3, !dbg !5550
  %idx.ext.i331 = zext i32 %shr.i330 to i64, !dbg !5551
  %add.ptr.i332 = getelementptr inbounds i8, i8* %326, i64 %idx.ext.i331, !dbg !5551
  %328 = bitcast i8* %add.ptr.i332 to %union.unaligned_32*, !dbg !5552
  %l.i333 = bitcast %union.unaligned_32* %328 to i32*, !dbg !5552
  %329 = load i32, i32* %l.i333, align 1, !dbg !5552
  %330 = load i32, i32* %re_index.i321, align 4, !dbg !5553
  %and.i334 = and i32 %330, 7, !dbg !5554
  %shr1.i335 = lshr i32 %329, %and.i334, !dbg !5555
  store i32 %shr1.i335, i32* %re_cache.i322, align 4, !dbg !5556
  %331 = load i32, i32* %re_cache.i322, align 4, !dbg !5557
  %332 = load i32, i32* %bits.addr.i318, align 4, !dbg !5558
  %call.i336 = call i32 @zero_extend(i32 %331, i32 %332) #2, !dbg !5559
  store i32 %call.i336, i32* %index2.i326, align 4, !dbg !5560
  %333 = load i32, i32* %index2.i326, align 4, !dbg !5561
  %idxprom.i337 = zext i32 %333 to i64, !dbg !5562
  %334 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5562
  %arrayidx.i338 = getelementptr inbounds [2 x i16], [2 x i16]* %334, i64 %idxprom.i337, !dbg !5562
  %arrayidx3.i339 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i338, i64 0, i64 0, !dbg !5562
  %335 = load i16, i16* %arrayidx3.i339, align 2, !dbg !5562
  %conv.i340 = sext i16 %335 to i32, !dbg !5562
  store i32 %conv.i340, i32* %code.i320, align 4, !dbg !5563
  %336 = load i32, i32* %index2.i326, align 4, !dbg !5564
  %idxprom4.i341 = zext i32 %336 to i64, !dbg !5565
  %337 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5565
  %arrayidx5.i342 = getelementptr inbounds [2 x i16], [2 x i16]* %337, i64 %idxprom4.i341, !dbg !5565
  %arrayidx6.i343 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i342, i64 0, i64 1, !dbg !5565
  %338 = load i16, i16* %arrayidx6.i343, align 2, !dbg !5565
  %conv7.i344 = sext i16 %338 to i32, !dbg !5565
  store i32 %conv7.i344, i32* %n.i324, align 4, !dbg !5566
  %339 = load i32, i32* %max_depth.addr.i319, align 4, !dbg !5567
  %cmp.i345 = icmp sgt i32 %339, 1, !dbg !5568
  br i1 %cmp.i345, label %land.lhs.true.i347, label %if.end63.i404, !dbg !5569

land.lhs.true.i347:                               ; preds = %get_vlc2.exit315
  %340 = load i32, i32* %n.i324, align 4, !dbg !5570
  %cmp9.i346 = icmp slt i32 %340, 0, !dbg !5571
  br i1 %cmp9.i346, label %if.then.i350, label %if.end63.i404, !dbg !5572

if.then.i350:                                     ; preds = %land.lhs.true.i347
  %341 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5573
  %342 = load i32, i32* %re_index.i321, align 4, !dbg !5574
  %343 = load i32, i32* %bits.addr.i318, align 4, !dbg !5575
  %add.i348 = add i32 %342, %343, !dbg !5576
  %cmp11.i349 = icmp ugt i32 %341, %add.i348, !dbg !5577
  br i1 %cmp11.i349, label %cond.true.i352, label %cond.false.i353, !dbg !5578

cond.true.i352:                                   ; preds = %if.then.i350
  %344 = load i32, i32* %re_index.i321, align 4, !dbg !5579
  %345 = load i32, i32* %bits.addr.i318, align 4, !dbg !5580
  %add13.i351 = add i32 %344, %345, !dbg !5581
  br label %cond.end.i374, !dbg !5582

cond.false.i353:                                  ; preds = %if.then.i350
  %346 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5583
  br label %cond.end.i374, !dbg !5584

cond.end.i374:                                    ; preds = %cond.false.i353, %cond.true.i352
  %cond.i354 = phi i32 [ %add13.i351, %cond.true.i352 ], [ %346, %cond.false.i353 ], !dbg !5585
  store i32 %cond.i354, i32* %re_index.i321, align 4, !dbg !5586
  %347 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5587
  %buffer14.i355 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %347, i32 0, i32 0, !dbg !5588
  %348 = load i8*, i8** %buffer14.i355, align 8, !dbg !5588
  %349 = load i32, i32* %re_index.i321, align 4, !dbg !5589
  %shr15.i356 = lshr i32 %349, 3, !dbg !5590
  %idx.ext16.i357 = zext i32 %shr15.i356 to i64, !dbg !5591
  %add.ptr17.i358 = getelementptr inbounds i8, i8* %348, i64 %idx.ext16.i357, !dbg !5591
  %350 = bitcast i8* %add.ptr17.i358 to %union.unaligned_32*, !dbg !5592
  %l18.i359 = bitcast %union.unaligned_32* %350 to i32*, !dbg !5592
  %351 = load i32, i32* %l18.i359, align 1, !dbg !5592
  %352 = load i32, i32* %re_index.i321, align 4, !dbg !5593
  %and19.i360 = and i32 %352, 7, !dbg !5594
  %shr20.i361 = lshr i32 %351, %and19.i360, !dbg !5595
  store i32 %shr20.i361, i32* %re_cache.i322, align 4, !dbg !5596
  %353 = load i32, i32* %n.i324, align 4, !dbg !5597
  %sub.i362 = sub nsw i32 0, %353, !dbg !5598
  store i32 %sub.i362, i32* %nb_bits.i325, align 4, !dbg !5599
  %354 = load i32, i32* %re_cache.i322, align 4, !dbg !5600
  %355 = load i32, i32* %nb_bits.i325, align 4, !dbg !5601
  %call21.i363 = call i32 @zero_extend(i32 %354, i32 %355) #2, !dbg !5602
  %356 = load i32, i32* %code.i320, align 4, !dbg !5603
  %add22.i364 = add i32 %call21.i363, %356, !dbg !5604
  store i32 %add22.i364, i32* %index2.i326, align 4, !dbg !5605
  %357 = load i32, i32* %index2.i326, align 4, !dbg !5606
  %idxprom23.i365 = zext i32 %357 to i64, !dbg !5607
  %358 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5607
  %arrayidx24.i366 = getelementptr inbounds [2 x i16], [2 x i16]* %358, i64 %idxprom23.i365, !dbg !5607
  %arrayidx25.i367 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i366, i64 0, i64 0, !dbg !5607
  %359 = load i16, i16* %arrayidx25.i367, align 2, !dbg !5607
  %conv26.i368 = sext i16 %359 to i32, !dbg !5607
  store i32 %conv26.i368, i32* %code.i320, align 4, !dbg !5608
  %360 = load i32, i32* %index2.i326, align 4, !dbg !5609
  %idxprom27.i369 = zext i32 %360 to i64, !dbg !5610
  %361 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5610
  %arrayidx28.i370 = getelementptr inbounds [2 x i16], [2 x i16]* %361, i64 %idxprom27.i369, !dbg !5610
  %arrayidx29.i371 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i370, i64 0, i64 1, !dbg !5610
  %362 = load i16, i16* %arrayidx29.i371, align 2, !dbg !5610
  %conv30.i372 = sext i16 %362 to i32, !dbg !5610
  store i32 %conv30.i372, i32* %n.i324, align 4, !dbg !5611
  %363 = load i32, i32* %max_depth.addr.i319, align 4, !dbg !5612
  %cmp31.i373 = icmp sgt i32 %363, 2, !dbg !5613
  br i1 %cmp31.i373, label %land.lhs.true33.i376, label %if.end.i403, !dbg !5614

land.lhs.true33.i376:                             ; preds = %cond.end.i374
  %364 = load i32, i32* %n.i324, align 4, !dbg !5615
  %cmp34.i375 = icmp slt i32 %364, 0, !dbg !5616
  br i1 %cmp34.i375, label %if.then36.i379, label %if.end.i403, !dbg !5617

if.then36.i379:                                   ; preds = %land.lhs.true33.i376
  %365 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5618
  %366 = load i32, i32* %re_index.i321, align 4, !dbg !5619
  %367 = load i32, i32* %nb_bits.i325, align 4, !dbg !5620
  %add37.i377 = add i32 %366, %367, !dbg !5621
  %cmp38.i378 = icmp ugt i32 %365, %add37.i377, !dbg !5622
  br i1 %cmp38.i378, label %cond.true40.i381, label %cond.false42.i382, !dbg !5623

cond.true40.i381:                                 ; preds = %if.then36.i379
  %368 = load i32, i32* %re_index.i321, align 4, !dbg !5624
  %369 = load i32, i32* %nb_bits.i325, align 4, !dbg !5625
  %add41.i380 = add i32 %368, %369, !dbg !5626
  br label %cond.end43.i402, !dbg !5627

cond.false42.i382:                                ; preds = %if.then36.i379
  %370 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5628
  br label %cond.end43.i402, !dbg !5629

cond.end43.i402:                                  ; preds = %cond.false42.i382, %cond.true40.i381
  %cond44.i383 = phi i32 [ %add41.i380, %cond.true40.i381 ], [ %370, %cond.false42.i382 ], !dbg !5630
  store i32 %cond44.i383, i32* %re_index.i321, align 4, !dbg !5631
  %371 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5632
  %buffer45.i384 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %371, i32 0, i32 0, !dbg !5633
  %372 = load i8*, i8** %buffer45.i384, align 8, !dbg !5633
  %373 = load i32, i32* %re_index.i321, align 4, !dbg !5634
  %shr46.i385 = lshr i32 %373, 3, !dbg !5635
  %idx.ext47.i386 = zext i32 %shr46.i385 to i64, !dbg !5636
  %add.ptr48.i387 = getelementptr inbounds i8, i8* %372, i64 %idx.ext47.i386, !dbg !5636
  %374 = bitcast i8* %add.ptr48.i387 to %union.unaligned_32*, !dbg !5637
  %l49.i388 = bitcast %union.unaligned_32* %374 to i32*, !dbg !5637
  %375 = load i32, i32* %l49.i388, align 1, !dbg !5637
  %376 = load i32, i32* %re_index.i321, align 4, !dbg !5638
  %and50.i389 = and i32 %376, 7, !dbg !5639
  %shr51.i390 = lshr i32 %375, %and50.i389, !dbg !5640
  store i32 %shr51.i390, i32* %re_cache.i322, align 4, !dbg !5641
  %377 = load i32, i32* %n.i324, align 4, !dbg !5642
  %sub52.i391 = sub nsw i32 0, %377, !dbg !5643
  store i32 %sub52.i391, i32* %nb_bits.i325, align 4, !dbg !5644
  %378 = load i32, i32* %re_cache.i322, align 4, !dbg !5645
  %379 = load i32, i32* %nb_bits.i325, align 4, !dbg !5646
  %call53.i392 = call i32 @zero_extend(i32 %378, i32 %379) #2, !dbg !5647
  %380 = load i32, i32* %code.i320, align 4, !dbg !5648
  %add54.i393 = add i32 %call53.i392, %380, !dbg !5649
  store i32 %add54.i393, i32* %index2.i326, align 4, !dbg !5650
  %381 = load i32, i32* %index2.i326, align 4, !dbg !5651
  %idxprom55.i394 = zext i32 %381 to i64, !dbg !5652
  %382 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5652
  %arrayidx56.i395 = getelementptr inbounds [2 x i16], [2 x i16]* %382, i64 %idxprom55.i394, !dbg !5652
  %arrayidx57.i396 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i395, i64 0, i64 0, !dbg !5652
  %383 = load i16, i16* %arrayidx57.i396, align 2, !dbg !5652
  %conv58.i397 = sext i16 %383 to i32, !dbg !5652
  store i32 %conv58.i397, i32* %code.i320, align 4, !dbg !5653
  %384 = load i32, i32* %index2.i326, align 4, !dbg !5654
  %idxprom59.i398 = zext i32 %384 to i64, !dbg !5655
  %385 = load [2 x i16]*, [2 x i16]** %table.addr.i317, align 8, !dbg !5655
  %arrayidx60.i399 = getelementptr inbounds [2 x i16], [2 x i16]* %385, i64 %idxprom59.i398, !dbg !5655
  %arrayidx61.i400 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i399, i64 0, i64 1, !dbg !5655
  %386 = load i16, i16* %arrayidx61.i400, align 2, !dbg !5655
  %conv62.i401 = sext i16 %386 to i32, !dbg !5655
  store i32 %conv62.i401, i32* %n.i324, align 4, !dbg !5656
  br label %if.end.i403, !dbg !5657

if.end.i403:                                      ; preds = %cond.end43.i402, %land.lhs.true33.i376, %cond.end.i374
  br label %if.end63.i404, !dbg !5658

if.end63.i404:                                    ; preds = %if.end.i403, %land.lhs.true.i347, %get_vlc2.exit315
  %387 = load i32, i32* %n.i324, align 4, !dbg !5659
  %388 = load i32, i32* %re_cache.i322, align 4, !dbg !5660
  %shr65.i405 = lshr i32 %388, %387, !dbg !5660
  store i32 %shr65.i405, i32* %re_cache.i322, align 4, !dbg !5660
  %389 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5661
  %390 = load i32, i32* %re_index.i321, align 4, !dbg !5662
  %391 = load i32, i32* %n.i324, align 4, !dbg !5663
  %add66.i406 = add i32 %390, %391, !dbg !5664
  %cmp67.i407 = icmp ugt i32 %389, %add66.i406, !dbg !5665
  br i1 %cmp67.i407, label %cond.true69.i409, label %cond.false71.i410, !dbg !5666

cond.true69.i409:                                 ; preds = %if.end63.i404
  %392 = load i32, i32* %re_index.i321, align 4, !dbg !5667
  %393 = load i32, i32* %n.i324, align 4, !dbg !5668
  %add70.i408 = add i32 %392, %393, !dbg !5669
  br label %get_vlc2.exit413, !dbg !5670

cond.false71.i410:                                ; preds = %if.end63.i404
  %394 = load i32, i32* %re_size_plus8.i323, align 4, !dbg !5671
  br label %get_vlc2.exit413, !dbg !5672

get_vlc2.exit413:                                 ; preds = %cond.true69.i409, %cond.false71.i410
  %cond73.i411 = phi i32 [ %add70.i408, %cond.true69.i409 ], [ %394, %cond.false71.i410 ], !dbg !5673
  store i32 %cond73.i411, i32* %re_index.i321, align 4, !dbg !5674
  %395 = load i32, i32* %re_index.i321, align 4, !dbg !5675
  %396 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i316, align 8, !dbg !5676
  %index75.i412 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %396, i32 0, i32 2, !dbg !5677
  store i32 %395, i32* %index75.i412, align 8, !dbg !5678
  %397 = load i32, i32* %code.i320, align 4, !dbg !5679
  %idxprom97 = sext i32 %397 to i64, !dbg !5680
  %398 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5681
  %tree98 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %398, i32 0, i32 1, !dbg !5682
  %syms99 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree98, i32 0, i32 1, !dbg !5683
  %arrayidx100 = getelementptr inbounds [16 x i8], [16 x i8]* %syms99, i64 0, i64 %idxprom97, !dbg !5680
  %399 = load i8, i8* %arrayidx100, align 1, !dbg !5680
  %conv101 = zext i8 %399 to i32, !dbg !5680
  store i32 %conv101, i32* %v, align 4, !dbg !5684
  %400 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5685
  %col_lastval102 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %400, i32 0, i32 11, !dbg !5686
  %401 = load i32, i32* %col_lastval102, align 8, !dbg !5686
  %shl103 = shl i32 %401, 4, !dbg !5687
  %402 = load i32, i32* %v, align 4, !dbg !5688
  %or104 = or i32 %shl103, %402, !dbg !5689
  store i32 %or104, i32* %v, align 4, !dbg !5690
  %403 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !5691
  %version105 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %403, i32 0, i32 5, !dbg !5693
  %404 = load i32, i32* %version105, align 8, !dbg !5693
  %cmp106 = icmp slt i32 %404, 105, !dbg !5694
  br i1 %cmp106, label %if.then108, label %if.end116, !dbg !5695

if.then108:                                       ; preds = %get_vlc2.exit413
  %405 = load i32, i32* %v, align 4, !dbg !5696
  %conv109 = trunc i32 %405 to i8, !dbg !5698
  %conv110 = sext i8 %conv109 to i32, !dbg !5699
  %shr111 = ashr i32 %conv110, 7, !dbg !5700
  store i32 %shr111, i32* %sign, align 4, !dbg !5701
  %406 = load i32, i32* %v, align 4, !dbg !5702
  %and112 = and i32 %406, 127, !dbg !5703
  %407 = load i32, i32* %sign, align 4, !dbg !5704
  %xor113 = xor i32 %and112, %407, !dbg !5705
  %408 = load i32, i32* %sign, align 4, !dbg !5706
  %sub114 = sub nsw i32 %xor113, %408, !dbg !5707
  store i32 %sub114, i32* %v, align 4, !dbg !5708
  %409 = load i32, i32* %v, align 4, !dbg !5709
  %add115 = add nsw i32 %409, 128, !dbg !5709
  store i32 %add115, i32* %v, align 4, !dbg !5709
  br label %if.end116, !dbg !5710

if.end116:                                        ; preds = %if.then108, %get_vlc2.exit413
  %410 = load i32, i32* %v, align 4, !dbg !5711
  %conv117 = trunc i32 %410 to i8, !dbg !5711
  %411 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5712
  %cur_dec118 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %411, i32 0, i32 4, !dbg !5713
  %412 = load i8*, i8** %cur_dec118, align 8, !dbg !5714
  %incdec.ptr = getelementptr inbounds i8, i8* %412, i32 1, !dbg !5714
  store i8* %incdec.ptr, i8** %cur_dec118, align 8, !dbg !5714
  store i8 %conv117, i8* %412, align 1, !dbg !5715
  br label %while.cond, !dbg !5716, !llvm.loop !5718

while.end:                                        ; preds = %while.cond
  br label %if.end119

if.end119:                                        ; preds = %while.end, %if.end51
  store i32 0, i32* %retval, align 4, !dbg !5719
  br label %return, !dbg !5719

return:                                           ; preds = %if.end119, %if.then8, %if.then3, %if.then
  %413 = load i32, i32* %retval, align 4, !dbg !5720
  ret i32 %413, !dbg !5720
}

; Function Attrs: nounwind uwtable
define internal i32 @read_patterns(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.Bundle* %b) #1 !dbg !5721 {
entry:
  %s.addr.i38 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i38, metadata !4545, metadata !1735), !dbg !5722
  %table.addr.i39 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i39, metadata !4554, metadata !1735), !dbg !5725
  %bits.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i40, metadata !4556, metadata !1735), !dbg !5726
  %max_depth.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i41, metadata !4558, metadata !1735), !dbg !5727
  %code.i42 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i42, metadata !4560, metadata !1735), !dbg !5728
  %re_index.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i43, metadata !4562, metadata !1735), !dbg !5729
  %re_cache.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i44, metadata !4564, metadata !1735), !dbg !5730
  %re_size_plus8.i45 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i45, metadata !4566, metadata !1735), !dbg !5731
  %n.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i46, metadata !4568, metadata !1735), !dbg !5732
  %nb_bits.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i47, metadata !4571, metadata !1735), !dbg !5733
  %index2.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i48, metadata !4573, metadata !1735), !dbg !5734
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4545, metadata !1735), !dbg !5735
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4554, metadata !1735), !dbg !5737
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4556, metadata !1735), !dbg !5738
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4558, metadata !1735), !dbg !5739
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4560, metadata !1735), !dbg !5740
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4562, metadata !1735), !dbg !5741
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4564, metadata !1735), !dbg !5742
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4566, metadata !1735), !dbg !5743
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4568, metadata !1735), !dbg !5744
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4571, metadata !1735), !dbg !5745
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !4573, metadata !1735), !dbg !5746
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %t = alloca i32, align 4
  %v = alloca i32, align 4
  %dec_end = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5747, metadata !1735), !dbg !5748
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5749, metadata !1735), !dbg !5750
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !5751, metadata !1735), !dbg !5752
  call void @llvm.dbg.declare(metadata i32* %t, metadata !5753, metadata !1735), !dbg !5754
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5755, metadata !1735), !dbg !5756
  call void @llvm.dbg.declare(metadata i8** %dec_end, metadata !5757, metadata !1735), !dbg !5758
  %0 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5759
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %0, i32 0, i32 4, !dbg !5761
  %1 = load i8*, i8** %cur_dec, align 8, !dbg !5761
  %tobool = icmp ne i8* %1, null, !dbg !5759
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5762

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5763
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %2, i32 0, i32 4, !dbg !5765
  %3 = load i8*, i8** %cur_dec1, align 8, !dbg !5765
  %4 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5766
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %4, i32 0, i32 5, !dbg !5767
  %5 = load i8*, i8** %cur_ptr, align 8, !dbg !5767
  %cmp = icmp ugt i8* %3, %5, !dbg !5768
  br i1 %cmp, label %if.then, label %if.end, !dbg !5769

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5770
  br label %return, !dbg !5770

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5772
  %7 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5774
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 0, !dbg !5775
  %8 = load i32, i32* %len, align 8, !dbg !5775
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 %8), !dbg !5776
  store i32 %call, i32* %t, align 4, !dbg !5777
  %9 = load i32, i32* %t, align 4, !dbg !5778
  %tobool2 = icmp ne i32 %9, 0, !dbg !5778
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !5779

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5780
  %cur_dec4 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 4, !dbg !5784
  store i8* null, i8** %cur_dec4, align 8, !dbg !5785
  store i32 0, i32* %retval, align 4, !dbg !5786
  br label %return, !dbg !5786

if.end5:                                          ; preds = %if.end
  %11 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5787
  %cur_dec6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %11, i32 0, i32 4, !dbg !5788
  %12 = load i8*, i8** %cur_dec6, align 8, !dbg !5788
  %13 = load i32, i32* %t, align 4, !dbg !5789
  %idx.ext = sext i32 %13 to i64, !dbg !5790
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !5790
  store i8* %add.ptr, i8** %dec_end, align 8, !dbg !5791
  %14 = load i8*, i8** %dec_end, align 8, !dbg !5792
  %15 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5794
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %15, i32 0, i32 3, !dbg !5795
  %16 = load i8*, i8** %data_end, align 8, !dbg !5795
  %cmp7 = icmp ugt i8* %14, %16, !dbg !5796
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5797

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5798
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !5798
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i32 0, i32 0)), !dbg !5800
  store i32 -1094995529, i32* %retval, align 4, !dbg !5801
  br label %return, !dbg !5801

if.end9:                                          ; preds = %if.end5
  br label %while.cond, !dbg !5802

while.cond:                                       ; preds = %get_vlc2.exit135, %if.end9
  %19 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5803
  %cur_dec10 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %19, i32 0, i32 4, !dbg !5805
  %20 = load i8*, i8** %cur_dec10, align 8, !dbg !5805
  %21 = load i8*, i8** %dec_end, align 8, !dbg !5806
  %cmp11 = icmp ult i8* %20, %21, !dbg !5807
  br i1 %cmp11, label %while.body, label %while.end, !dbg !5808

while.body:                                       ; preds = %while.cond
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5809
  %23 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5810
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %23, i32 0, i32 1, !dbg !5811
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %tree, i32 0, i32 0, !dbg !5812
  %24 = load i32, i32* %vlc_num, align 4, !dbg !5812
  %idxprom = sext i32 %24 to i64, !dbg !5813
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom, !dbg !5813
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !5814
  %25 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5814
  %26 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5815
  %tree12 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %26, i32 0, i32 1, !dbg !5816
  %vlc_num13 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree12, i32 0, i32 0, !dbg !5817
  %27 = load i32, i32* %vlc_num13, align 4, !dbg !5817
  %idxprom14 = sext i32 %27 to i64, !dbg !5818
  %arrayidx15 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom14, !dbg !5818
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx15, i32 0, i32 0, !dbg !5819
  %28 = load i32, i32* %bits, align 8, !dbg !5819
  store %struct.GetBitContext* %22, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5820
  store [2 x i16]* %25, [2 x i16]** %table.addr.i, align 8, !dbg !5820
  store i32 %28, i32* %bits.addr.i, align 4, !dbg !5820
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !5820
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5821
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %29, i32 0, i32 2, !dbg !5822
  %30 = load i32, i32* %index.i, align 8, !dbg !5822
  store i32 %30, i32* %re_index.i, align 4, !dbg !5741
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5823
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 4, !dbg !5824
  %32 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5824
  store i32 %32, i32* %re_size_plus8.i, align 4, !dbg !5743
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5825
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 0, !dbg !5826
  %34 = load i8*, i8** %buffer.i, align 8, !dbg !5826
  %35 = load i32, i32* %re_index.i, align 4, !dbg !5827
  %shr.i = lshr i32 %35, 3, !dbg !5828
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5829
  %add.ptr.i = getelementptr inbounds i8, i8* %34, i64 %idx.ext.i, !dbg !5829
  %36 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5830
  %l.i = bitcast %union.unaligned_32* %36 to i32*, !dbg !5830
  %37 = load i32, i32* %l.i, align 1, !dbg !5830
  %38 = load i32, i32* %re_index.i, align 4, !dbg !5831
  %and.i = and i32 %38, 7, !dbg !5832
  %shr1.i = lshr i32 %37, %and.i, !dbg !5833
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !5834
  %39 = load i32, i32* %re_cache.i, align 4, !dbg !5835
  %40 = load i32, i32* %bits.addr.i, align 4, !dbg !5836
  %call.i = call i32 @zero_extend(i32 %39, i32 %40) #2, !dbg !5837
  store i32 %call.i, i32* %index2.i, align 4, !dbg !5838
  %41 = load i32, i32* %index2.i, align 4, !dbg !5839
  %idxprom.i = zext i32 %41 to i64, !dbg !5840
  %42 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5840
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %42, i64 %idxprom.i, !dbg !5840
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5840
  %43 = load i16, i16* %arrayidx3.i, align 2, !dbg !5840
  %conv.i = sext i16 %43 to i32, !dbg !5840
  store i32 %conv.i, i32* %code.i, align 4, !dbg !5841
  %44 = load i32, i32* %index2.i, align 4, !dbg !5842
  %idxprom4.i = zext i32 %44 to i64, !dbg !5843
  %45 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5843
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %45, i64 %idxprom4.i, !dbg !5843
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !5843
  %46 = load i16, i16* %arrayidx6.i, align 2, !dbg !5843
  %conv7.i = sext i16 %46 to i32, !dbg !5843
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !5844
  %47 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5845
  %cmp.i = icmp sgt i32 %47, 1, !dbg !5846
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !5847

land.lhs.true.i:                                  ; preds = %while.body
  %48 = load i32, i32* %n.i, align 4, !dbg !5848
  %cmp9.i = icmp slt i32 %48, 0, !dbg !5849
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !5850

if.then.i:                                        ; preds = %land.lhs.true.i
  %49 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5851
  %50 = load i32, i32* %re_index.i, align 4, !dbg !5852
  %51 = load i32, i32* %bits.addr.i, align 4, !dbg !5853
  %add.i = add i32 %50, %51, !dbg !5854
  %cmp11.i = icmp ugt i32 %49, %add.i, !dbg !5855
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !5856

cond.true.i:                                      ; preds = %if.then.i
  %52 = load i32, i32* %re_index.i, align 4, !dbg !5857
  %53 = load i32, i32* %bits.addr.i, align 4, !dbg !5858
  %add13.i = add i32 %52, %53, !dbg !5859
  br label %cond.end.i, !dbg !5860

cond.false.i:                                     ; preds = %if.then.i
  %54 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5861
  br label %cond.end.i, !dbg !5862

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %54, %cond.false.i ], !dbg !5863
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5864
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5865
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %55, i32 0, i32 0, !dbg !5866
  %56 = load i8*, i8** %buffer14.i, align 8, !dbg !5866
  %57 = load i32, i32* %re_index.i, align 4, !dbg !5867
  %shr15.i = lshr i32 %57, 3, !dbg !5868
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !5869
  %add.ptr17.i = getelementptr inbounds i8, i8* %56, i64 %idx.ext16.i, !dbg !5869
  %58 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !5870
  %l18.i = bitcast %union.unaligned_32* %58 to i32*, !dbg !5870
  %59 = load i32, i32* %l18.i, align 1, !dbg !5870
  %60 = load i32, i32* %re_index.i, align 4, !dbg !5871
  %and19.i = and i32 %60, 7, !dbg !5872
  %shr20.i = lshr i32 %59, %and19.i, !dbg !5873
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !5874
  %61 = load i32, i32* %n.i, align 4, !dbg !5875
  %sub.i = sub nsw i32 0, %61, !dbg !5876
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5877
  %62 = load i32, i32* %re_cache.i, align 4, !dbg !5878
  %63 = load i32, i32* %nb_bits.i, align 4, !dbg !5879
  %call21.i = call i32 @zero_extend(i32 %62, i32 %63) #2, !dbg !5880
  %64 = load i32, i32* %code.i, align 4, !dbg !5881
  %add22.i = add i32 %call21.i, %64, !dbg !5882
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !5883
  %65 = load i32, i32* %index2.i, align 4, !dbg !5884
  %idxprom23.i = zext i32 %65 to i64, !dbg !5885
  %66 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5885
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %66, i64 %idxprom23.i, !dbg !5885
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !5885
  %67 = load i16, i16* %arrayidx25.i, align 2, !dbg !5885
  %conv26.i = sext i16 %67 to i32, !dbg !5885
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !5886
  %68 = load i32, i32* %index2.i, align 4, !dbg !5887
  %idxprom27.i = zext i32 %68 to i64, !dbg !5888
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5888
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom27.i, !dbg !5888
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !5888
  %70 = load i16, i16* %arrayidx29.i, align 2, !dbg !5888
  %conv30.i = sext i16 %70 to i32, !dbg !5888
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !5889
  %71 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5890
  %cmp31.i = icmp sgt i32 %71, 2, !dbg !5891
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !5892

land.lhs.true33.i:                                ; preds = %cond.end.i
  %72 = load i32, i32* %n.i, align 4, !dbg !5893
  %cmp34.i = icmp slt i32 %72, 0, !dbg !5894
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !5895

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5896
  %74 = load i32, i32* %re_index.i, align 4, !dbg !5897
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !5898
  %add37.i = add i32 %74, %75, !dbg !5899
  %cmp38.i = icmp ugt i32 %73, %add37.i, !dbg !5900
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !5901

cond.true40.i:                                    ; preds = %if.then36.i
  %76 = load i32, i32* %re_index.i, align 4, !dbg !5902
  %77 = load i32, i32* %nb_bits.i, align 4, !dbg !5903
  %add41.i = add i32 %76, %77, !dbg !5904
  br label %cond.end43.i, !dbg !5905

cond.false42.i:                                   ; preds = %if.then36.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5906
  br label %cond.end43.i, !dbg !5907

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %78, %cond.false42.i ], !dbg !5908
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !5909
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5910
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %79, i32 0, i32 0, !dbg !5911
  %80 = load i8*, i8** %buffer45.i, align 8, !dbg !5911
  %81 = load i32, i32* %re_index.i, align 4, !dbg !5912
  %shr46.i = lshr i32 %81, 3, !dbg !5913
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !5914
  %add.ptr48.i = getelementptr inbounds i8, i8* %80, i64 %idx.ext47.i, !dbg !5914
  %82 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !5915
  %l49.i = bitcast %union.unaligned_32* %82 to i32*, !dbg !5915
  %83 = load i32, i32* %l49.i, align 1, !dbg !5915
  %84 = load i32, i32* %re_index.i, align 4, !dbg !5916
  %and50.i = and i32 %84, 7, !dbg !5917
  %shr51.i = lshr i32 %83, %and50.i, !dbg !5918
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !5919
  %85 = load i32, i32* %n.i, align 4, !dbg !5920
  %sub52.i = sub nsw i32 0, %85, !dbg !5921
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !5922
  %86 = load i32, i32* %re_cache.i, align 4, !dbg !5923
  %87 = load i32, i32* %nb_bits.i, align 4, !dbg !5924
  %call53.i = call i32 @zero_extend(i32 %86, i32 %87) #2, !dbg !5925
  %88 = load i32, i32* %code.i, align 4, !dbg !5926
  %add54.i = add i32 %call53.i, %88, !dbg !5927
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !5928
  %89 = load i32, i32* %index2.i, align 4, !dbg !5929
  %idxprom55.i = zext i32 %89 to i64, !dbg !5930
  %90 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5930
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %90, i64 %idxprom55.i, !dbg !5930
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !5930
  %91 = load i16, i16* %arrayidx57.i, align 2, !dbg !5930
  %conv58.i = sext i16 %91 to i32, !dbg !5930
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !5931
  %92 = load i32, i32* %index2.i, align 4, !dbg !5932
  %idxprom59.i = zext i32 %92 to i64, !dbg !5933
  %93 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5933
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %93, i64 %idxprom59.i, !dbg !5933
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !5933
  %94 = load i16, i16* %arrayidx61.i, align 2, !dbg !5933
  %conv62.i = sext i16 %94 to i32, !dbg !5933
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !5934
  br label %if.end.i, !dbg !5935

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !5936

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %95 = load i32, i32* %n.i, align 4, !dbg !5937
  %96 = load i32, i32* %re_cache.i, align 4, !dbg !5938
  %shr65.i = lshr i32 %96, %95, !dbg !5938
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !5938
  %97 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5939
  %98 = load i32, i32* %re_index.i, align 4, !dbg !5940
  %99 = load i32, i32* %n.i, align 4, !dbg !5941
  %add66.i = add i32 %98, %99, !dbg !5942
  %cmp67.i = icmp ugt i32 %97, %add66.i, !dbg !5943
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !5944

cond.true69.i:                                    ; preds = %if.end63.i
  %100 = load i32, i32* %re_index.i, align 4, !dbg !5945
  %101 = load i32, i32* %n.i, align 4, !dbg !5946
  %add70.i = add i32 %100, %101, !dbg !5947
  br label %get_vlc2.exit, !dbg !5948

cond.false71.i:                                   ; preds = %if.end63.i
  %102 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5949
  br label %get_vlc2.exit, !dbg !5950

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %102, %cond.false71.i ], !dbg !5951
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !5952
  %103 = load i32, i32* %re_index.i, align 4, !dbg !5953
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5954
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %104, i32 0, i32 2, !dbg !5955
  store i32 %103, i32* %index75.i, align 8, !dbg !5956
  %105 = load i32, i32* %code.i, align 4, !dbg !5957
  %idxprom17 = sext i32 %105 to i64, !dbg !5958
  %106 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5959
  %tree18 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %106, i32 0, i32 1, !dbg !5960
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %tree18, i32 0, i32 1, !dbg !5961
  %arrayidx19 = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom17, !dbg !5958
  %107 = load i8, i8* %arrayidx19, align 1, !dbg !5958
  %conv = zext i8 %107 to i32, !dbg !5958
  store i32 %conv, i32* %v, align 4, !dbg !5962
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5963
  %109 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5964
  %tree20 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %109, i32 0, i32 1, !dbg !5965
  %vlc_num21 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree20, i32 0, i32 0, !dbg !5966
  %110 = load i32, i32* %vlc_num21, align 4, !dbg !5966
  %idxprom22 = sext i32 %110 to i64, !dbg !5967
  %arrayidx23 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom22, !dbg !5967
  %table24 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx23, i32 0, i32 1, !dbg !5968
  %111 = load [2 x i16]*, [2 x i16]** %table24, align 8, !dbg !5968
  %112 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !5969
  %tree25 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %112, i32 0, i32 1, !dbg !5970
  %vlc_num26 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree25, i32 0, i32 0, !dbg !5971
  %113 = load i32, i32* %vlc_num26, align 4, !dbg !5971
  %idxprom27 = sext i32 %113 to i64, !dbg !5972
  %arrayidx28 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom27, !dbg !5972
  %bits29 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx28, i32 0, i32 0, !dbg !5973
  %114 = load i32, i32* %bits29, align 8, !dbg !5973
  store %struct.GetBitContext* %108, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !5974
  store [2 x i16]* %111, [2 x i16]** %table.addr.i39, align 8, !dbg !5974
  store i32 %114, i32* %bits.addr.i40, align 4, !dbg !5974
  store i32 1, i32* %max_depth.addr.i41, align 4, !dbg !5974
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !5975
  %index.i49 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %115, i32 0, i32 2, !dbg !5976
  %116 = load i32, i32* %index.i49, align 8, !dbg !5976
  store i32 %116, i32* %re_index.i43, align 4, !dbg !5729
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !5977
  %size_in_bits_plus8.i50 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 4, !dbg !5978
  %118 = load i32, i32* %size_in_bits_plus8.i50, align 8, !dbg !5978
  store i32 %118, i32* %re_size_plus8.i45, align 4, !dbg !5731
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !5979
  %buffer.i51 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %119, i32 0, i32 0, !dbg !5980
  %120 = load i8*, i8** %buffer.i51, align 8, !dbg !5980
  %121 = load i32, i32* %re_index.i43, align 4, !dbg !5981
  %shr.i52 = lshr i32 %121, 3, !dbg !5982
  %idx.ext.i53 = zext i32 %shr.i52 to i64, !dbg !5983
  %add.ptr.i54 = getelementptr inbounds i8, i8* %120, i64 %idx.ext.i53, !dbg !5983
  %122 = bitcast i8* %add.ptr.i54 to %union.unaligned_32*, !dbg !5984
  %l.i55 = bitcast %union.unaligned_32* %122 to i32*, !dbg !5984
  %123 = load i32, i32* %l.i55, align 1, !dbg !5984
  %124 = load i32, i32* %re_index.i43, align 4, !dbg !5985
  %and.i56 = and i32 %124, 7, !dbg !5986
  %shr1.i57 = lshr i32 %123, %and.i56, !dbg !5987
  store i32 %shr1.i57, i32* %re_cache.i44, align 4, !dbg !5988
  %125 = load i32, i32* %re_cache.i44, align 4, !dbg !5989
  %126 = load i32, i32* %bits.addr.i40, align 4, !dbg !5990
  %call.i58 = call i32 @zero_extend(i32 %125, i32 %126) #2, !dbg !5991
  store i32 %call.i58, i32* %index2.i48, align 4, !dbg !5992
  %127 = load i32, i32* %index2.i48, align 4, !dbg !5993
  %idxprom.i59 = zext i32 %127 to i64, !dbg !5994
  %128 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !5994
  %arrayidx.i60 = getelementptr inbounds [2 x i16], [2 x i16]* %128, i64 %idxprom.i59, !dbg !5994
  %arrayidx3.i61 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i60, i64 0, i64 0, !dbg !5994
  %129 = load i16, i16* %arrayidx3.i61, align 2, !dbg !5994
  %conv.i62 = sext i16 %129 to i32, !dbg !5994
  store i32 %conv.i62, i32* %code.i42, align 4, !dbg !5995
  %130 = load i32, i32* %index2.i48, align 4, !dbg !5996
  %idxprom4.i63 = zext i32 %130 to i64, !dbg !5997
  %131 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !5997
  %arrayidx5.i64 = getelementptr inbounds [2 x i16], [2 x i16]* %131, i64 %idxprom4.i63, !dbg !5997
  %arrayidx6.i65 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i64, i64 0, i64 1, !dbg !5997
  %132 = load i16, i16* %arrayidx6.i65, align 2, !dbg !5997
  %conv7.i66 = sext i16 %132 to i32, !dbg !5997
  store i32 %conv7.i66, i32* %n.i46, align 4, !dbg !5998
  %133 = load i32, i32* %max_depth.addr.i41, align 4, !dbg !5999
  %cmp.i67 = icmp sgt i32 %133, 1, !dbg !6000
  br i1 %cmp.i67, label %land.lhs.true.i69, label %if.end63.i126, !dbg !6001

land.lhs.true.i69:                                ; preds = %get_vlc2.exit
  %134 = load i32, i32* %n.i46, align 4, !dbg !6002
  %cmp9.i68 = icmp slt i32 %134, 0, !dbg !6003
  br i1 %cmp9.i68, label %if.then.i72, label %if.end63.i126, !dbg !6004

if.then.i72:                                      ; preds = %land.lhs.true.i69
  %135 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6005
  %136 = load i32, i32* %re_index.i43, align 4, !dbg !6006
  %137 = load i32, i32* %bits.addr.i40, align 4, !dbg !6007
  %add.i70 = add i32 %136, %137, !dbg !6008
  %cmp11.i71 = icmp ugt i32 %135, %add.i70, !dbg !6009
  br i1 %cmp11.i71, label %cond.true.i74, label %cond.false.i75, !dbg !6010

cond.true.i74:                                    ; preds = %if.then.i72
  %138 = load i32, i32* %re_index.i43, align 4, !dbg !6011
  %139 = load i32, i32* %bits.addr.i40, align 4, !dbg !6012
  %add13.i73 = add i32 %138, %139, !dbg !6013
  br label %cond.end.i96, !dbg !6014

cond.false.i75:                                   ; preds = %if.then.i72
  %140 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6015
  br label %cond.end.i96, !dbg !6016

cond.end.i96:                                     ; preds = %cond.false.i75, %cond.true.i74
  %cond.i76 = phi i32 [ %add13.i73, %cond.true.i74 ], [ %140, %cond.false.i75 ], !dbg !6017
  store i32 %cond.i76, i32* %re_index.i43, align 4, !dbg !6018
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !6019
  %buffer14.i77 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %141, i32 0, i32 0, !dbg !6020
  %142 = load i8*, i8** %buffer14.i77, align 8, !dbg !6020
  %143 = load i32, i32* %re_index.i43, align 4, !dbg !6021
  %shr15.i78 = lshr i32 %143, 3, !dbg !6022
  %idx.ext16.i79 = zext i32 %shr15.i78 to i64, !dbg !6023
  %add.ptr17.i80 = getelementptr inbounds i8, i8* %142, i64 %idx.ext16.i79, !dbg !6023
  %144 = bitcast i8* %add.ptr17.i80 to %union.unaligned_32*, !dbg !6024
  %l18.i81 = bitcast %union.unaligned_32* %144 to i32*, !dbg !6024
  %145 = load i32, i32* %l18.i81, align 1, !dbg !6024
  %146 = load i32, i32* %re_index.i43, align 4, !dbg !6025
  %and19.i82 = and i32 %146, 7, !dbg !6026
  %shr20.i83 = lshr i32 %145, %and19.i82, !dbg !6027
  store i32 %shr20.i83, i32* %re_cache.i44, align 4, !dbg !6028
  %147 = load i32, i32* %n.i46, align 4, !dbg !6029
  %sub.i84 = sub nsw i32 0, %147, !dbg !6030
  store i32 %sub.i84, i32* %nb_bits.i47, align 4, !dbg !6031
  %148 = load i32, i32* %re_cache.i44, align 4, !dbg !6032
  %149 = load i32, i32* %nb_bits.i47, align 4, !dbg !6033
  %call21.i85 = call i32 @zero_extend(i32 %148, i32 %149) #2, !dbg !6034
  %150 = load i32, i32* %code.i42, align 4, !dbg !6035
  %add22.i86 = add i32 %call21.i85, %150, !dbg !6036
  store i32 %add22.i86, i32* %index2.i48, align 4, !dbg !6037
  %151 = load i32, i32* %index2.i48, align 4, !dbg !6038
  %idxprom23.i87 = zext i32 %151 to i64, !dbg !6039
  %152 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !6039
  %arrayidx24.i88 = getelementptr inbounds [2 x i16], [2 x i16]* %152, i64 %idxprom23.i87, !dbg !6039
  %arrayidx25.i89 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i88, i64 0, i64 0, !dbg !6039
  %153 = load i16, i16* %arrayidx25.i89, align 2, !dbg !6039
  %conv26.i90 = sext i16 %153 to i32, !dbg !6039
  store i32 %conv26.i90, i32* %code.i42, align 4, !dbg !6040
  %154 = load i32, i32* %index2.i48, align 4, !dbg !6041
  %idxprom27.i91 = zext i32 %154 to i64, !dbg !6042
  %155 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !6042
  %arrayidx28.i92 = getelementptr inbounds [2 x i16], [2 x i16]* %155, i64 %idxprom27.i91, !dbg !6042
  %arrayidx29.i93 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i92, i64 0, i64 1, !dbg !6042
  %156 = load i16, i16* %arrayidx29.i93, align 2, !dbg !6042
  %conv30.i94 = sext i16 %156 to i32, !dbg !6042
  store i32 %conv30.i94, i32* %n.i46, align 4, !dbg !6043
  %157 = load i32, i32* %max_depth.addr.i41, align 4, !dbg !6044
  %cmp31.i95 = icmp sgt i32 %157, 2, !dbg !6045
  br i1 %cmp31.i95, label %land.lhs.true33.i98, label %if.end.i125, !dbg !6046

land.lhs.true33.i98:                              ; preds = %cond.end.i96
  %158 = load i32, i32* %n.i46, align 4, !dbg !6047
  %cmp34.i97 = icmp slt i32 %158, 0, !dbg !6048
  br i1 %cmp34.i97, label %if.then36.i101, label %if.end.i125, !dbg !6049

if.then36.i101:                                   ; preds = %land.lhs.true33.i98
  %159 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6050
  %160 = load i32, i32* %re_index.i43, align 4, !dbg !6051
  %161 = load i32, i32* %nb_bits.i47, align 4, !dbg !6052
  %add37.i99 = add i32 %160, %161, !dbg !6053
  %cmp38.i100 = icmp ugt i32 %159, %add37.i99, !dbg !6054
  br i1 %cmp38.i100, label %cond.true40.i103, label %cond.false42.i104, !dbg !6055

cond.true40.i103:                                 ; preds = %if.then36.i101
  %162 = load i32, i32* %re_index.i43, align 4, !dbg !6056
  %163 = load i32, i32* %nb_bits.i47, align 4, !dbg !6057
  %add41.i102 = add i32 %162, %163, !dbg !6058
  br label %cond.end43.i124, !dbg !6059

cond.false42.i104:                                ; preds = %if.then36.i101
  %164 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6060
  br label %cond.end43.i124, !dbg !6061

cond.end43.i124:                                  ; preds = %cond.false42.i104, %cond.true40.i103
  %cond44.i105 = phi i32 [ %add41.i102, %cond.true40.i103 ], [ %164, %cond.false42.i104 ], !dbg !6062
  store i32 %cond44.i105, i32* %re_index.i43, align 4, !dbg !6063
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !6064
  %buffer45.i106 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %165, i32 0, i32 0, !dbg !6065
  %166 = load i8*, i8** %buffer45.i106, align 8, !dbg !6065
  %167 = load i32, i32* %re_index.i43, align 4, !dbg !6066
  %shr46.i107 = lshr i32 %167, 3, !dbg !6067
  %idx.ext47.i108 = zext i32 %shr46.i107 to i64, !dbg !6068
  %add.ptr48.i109 = getelementptr inbounds i8, i8* %166, i64 %idx.ext47.i108, !dbg !6068
  %168 = bitcast i8* %add.ptr48.i109 to %union.unaligned_32*, !dbg !6069
  %l49.i110 = bitcast %union.unaligned_32* %168 to i32*, !dbg !6069
  %169 = load i32, i32* %l49.i110, align 1, !dbg !6069
  %170 = load i32, i32* %re_index.i43, align 4, !dbg !6070
  %and50.i111 = and i32 %170, 7, !dbg !6071
  %shr51.i112 = lshr i32 %169, %and50.i111, !dbg !6072
  store i32 %shr51.i112, i32* %re_cache.i44, align 4, !dbg !6073
  %171 = load i32, i32* %n.i46, align 4, !dbg !6074
  %sub52.i113 = sub nsw i32 0, %171, !dbg !6075
  store i32 %sub52.i113, i32* %nb_bits.i47, align 4, !dbg !6076
  %172 = load i32, i32* %re_cache.i44, align 4, !dbg !6077
  %173 = load i32, i32* %nb_bits.i47, align 4, !dbg !6078
  %call53.i114 = call i32 @zero_extend(i32 %172, i32 %173) #2, !dbg !6079
  %174 = load i32, i32* %code.i42, align 4, !dbg !6080
  %add54.i115 = add i32 %call53.i114, %174, !dbg !6081
  store i32 %add54.i115, i32* %index2.i48, align 4, !dbg !6082
  %175 = load i32, i32* %index2.i48, align 4, !dbg !6083
  %idxprom55.i116 = zext i32 %175 to i64, !dbg !6084
  %176 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !6084
  %arrayidx56.i117 = getelementptr inbounds [2 x i16], [2 x i16]* %176, i64 %idxprom55.i116, !dbg !6084
  %arrayidx57.i118 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i117, i64 0, i64 0, !dbg !6084
  %177 = load i16, i16* %arrayidx57.i118, align 2, !dbg !6084
  %conv58.i119 = sext i16 %177 to i32, !dbg !6084
  store i32 %conv58.i119, i32* %code.i42, align 4, !dbg !6085
  %178 = load i32, i32* %index2.i48, align 4, !dbg !6086
  %idxprom59.i120 = zext i32 %178 to i64, !dbg !6087
  %179 = load [2 x i16]*, [2 x i16]** %table.addr.i39, align 8, !dbg !6087
  %arrayidx60.i121 = getelementptr inbounds [2 x i16], [2 x i16]* %179, i64 %idxprom59.i120, !dbg !6087
  %arrayidx61.i122 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i121, i64 0, i64 1, !dbg !6087
  %180 = load i16, i16* %arrayidx61.i122, align 2, !dbg !6087
  %conv62.i123 = sext i16 %180 to i32, !dbg !6087
  store i32 %conv62.i123, i32* %n.i46, align 4, !dbg !6088
  br label %if.end.i125, !dbg !6089

if.end.i125:                                      ; preds = %cond.end43.i124, %land.lhs.true33.i98, %cond.end.i96
  br label %if.end63.i126, !dbg !6090

if.end63.i126:                                    ; preds = %if.end.i125, %land.lhs.true.i69, %get_vlc2.exit
  %181 = load i32, i32* %n.i46, align 4, !dbg !6091
  %182 = load i32, i32* %re_cache.i44, align 4, !dbg !6092
  %shr65.i127 = lshr i32 %182, %181, !dbg !6092
  store i32 %shr65.i127, i32* %re_cache.i44, align 4, !dbg !6092
  %183 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6093
  %184 = load i32, i32* %re_index.i43, align 4, !dbg !6094
  %185 = load i32, i32* %n.i46, align 4, !dbg !6095
  %add66.i128 = add i32 %184, %185, !dbg !6096
  %cmp67.i129 = icmp ugt i32 %183, %add66.i128, !dbg !6097
  br i1 %cmp67.i129, label %cond.true69.i131, label %cond.false71.i132, !dbg !6098

cond.true69.i131:                                 ; preds = %if.end63.i126
  %186 = load i32, i32* %re_index.i43, align 4, !dbg !6099
  %187 = load i32, i32* %n.i46, align 4, !dbg !6100
  %add70.i130 = add i32 %186, %187, !dbg !6101
  br label %get_vlc2.exit135, !dbg !6102

cond.false71.i132:                                ; preds = %if.end63.i126
  %188 = load i32, i32* %re_size_plus8.i45, align 4, !dbg !6103
  br label %get_vlc2.exit135, !dbg !6104

get_vlc2.exit135:                                 ; preds = %cond.true69.i131, %cond.false71.i132
  %cond73.i133 = phi i32 [ %add70.i130, %cond.true69.i131 ], [ %188, %cond.false71.i132 ], !dbg !6105
  store i32 %cond73.i133, i32* %re_index.i43, align 4, !dbg !6106
  %189 = load i32, i32* %re_index.i43, align 4, !dbg !6107
  %190 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i38, align 8, !dbg !6108
  %index75.i134 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %190, i32 0, i32 2, !dbg !6109
  store i32 %189, i32* %index75.i134, align 8, !dbg !6110
  %191 = load i32, i32* %code.i42, align 4, !dbg !6111
  %idxprom31 = sext i32 %191 to i64, !dbg !6112
  %192 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6113
  %tree32 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %192, i32 0, i32 1, !dbg !6114
  %syms33 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree32, i32 0, i32 1, !dbg !6115
  %arrayidx34 = getelementptr inbounds [16 x i8], [16 x i8]* %syms33, i64 0, i64 %idxprom31, !dbg !6112
  %193 = load i8, i8* %arrayidx34, align 1, !dbg !6112
  %conv35 = zext i8 %193 to i32, !dbg !6112
  %shl = shl i32 %conv35, 4, !dbg !6116
  %194 = load i32, i32* %v, align 4, !dbg !6117
  %or = or i32 %194, %shl, !dbg !6117
  store i32 %or, i32* %v, align 4, !dbg !6117
  %195 = load i32, i32* %v, align 4, !dbg !6118
  %conv36 = trunc i32 %195 to i8, !dbg !6118
  %196 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6119
  %cur_dec37 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %196, i32 0, i32 4, !dbg !6120
  %197 = load i8*, i8** %cur_dec37, align 8, !dbg !6121
  %incdec.ptr = getelementptr inbounds i8, i8* %197, i32 1, !dbg !6121
  store i8* %incdec.ptr, i8** %cur_dec37, align 8, !dbg !6121
  store i8 %conv36, i8* %197, align 1, !dbg !6122
  br label %while.cond, !dbg !6123, !llvm.loop !6125

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !6126
  br label %return, !dbg !6126

return:                                           ; preds = %while.end, %if.then8, %if.then3, %if.then
  %198 = load i32, i32* %retval, align 4, !dbg !6127
  ret i32 %198, !dbg !6127
}

; Function Attrs: nounwind uwtable
define internal i32 @read_motion_values(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.Bundle* %b) #1 !dbg !6128 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4545, metadata !1735), !dbg !6129
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4554, metadata !1735), !dbg !6134
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4556, metadata !1735), !dbg !6135
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4558, metadata !1735), !dbg !6136
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4560, metadata !1735), !dbg !6137
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4562, metadata !1735), !dbg !6138
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4564, metadata !1735), !dbg !6139
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4566, metadata !1735), !dbg !6140
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4568, metadata !1735), !dbg !6141
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4571, metadata !1735), !dbg !6142
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !4573, metadata !1735), !dbg !6143
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %t = alloca i32, align 4
  %sign = alloca i32, align 4
  %v = alloca i32, align 4
  %dec_end = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6144, metadata !1735), !dbg !6145
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6146, metadata !1735), !dbg !6147
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !6148, metadata !1735), !dbg !6149
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6150, metadata !1735), !dbg !6151
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6152, metadata !1735), !dbg !6153
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6154, metadata !1735), !dbg !6155
  call void @llvm.dbg.declare(metadata i8** %dec_end, metadata !6156, metadata !1735), !dbg !6157
  %0 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6158
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %0, i32 0, i32 4, !dbg !6160
  %1 = load i8*, i8** %cur_dec, align 8, !dbg !6160
  %tobool = icmp ne i8* %1, null, !dbg !6158
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6161

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6162
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %2, i32 0, i32 4, !dbg !6164
  %3 = load i8*, i8** %cur_dec1, align 8, !dbg !6164
  %4 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6165
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %4, i32 0, i32 5, !dbg !6166
  %5 = load i8*, i8** %cur_ptr, align 8, !dbg !6166
  %cmp = icmp ugt i8* %3, %5, !dbg !6167
  br i1 %cmp, label %if.then, label %if.end, !dbg !6168

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6169
  br label %return, !dbg !6169

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6171
  %7 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6173
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 0, !dbg !6174
  %8 = load i32, i32* %len, align 8, !dbg !6174
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 %8), !dbg !6175
  store i32 %call, i32* %t, align 4, !dbg !6176
  %9 = load i32, i32* %t, align 4, !dbg !6177
  %tobool2 = icmp ne i32 %9, 0, !dbg !6177
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6178

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6179
  %cur_dec4 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 4, !dbg !6183
  store i8* null, i8** %cur_dec4, align 8, !dbg !6184
  store i32 0, i32* %retval, align 4, !dbg !6185
  br label %return, !dbg !6185

if.end5:                                          ; preds = %if.end
  %11 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6186
  %cur_dec6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %11, i32 0, i32 4, !dbg !6187
  %12 = load i8*, i8** %cur_dec6, align 8, !dbg !6187
  %13 = load i32, i32* %t, align 4, !dbg !6188
  %idx.ext = sext i32 %13 to i64, !dbg !6189
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !6189
  store i8* %add.ptr, i8** %dec_end, align 8, !dbg !6190
  %14 = load i8*, i8** %dec_end, align 8, !dbg !6191
  %15 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6193
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %15, i32 0, i32 3, !dbg !6194
  %16 = load i8*, i8** %data_end, align 8, !dbg !6194
  %cmp7 = icmp ugt i8* %14, %16, !dbg !6195
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6196

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6197
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !6197
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0)), !dbg !6199
  store i32 -1094995529, i32* %retval, align 4, !dbg !6200
  br label %return, !dbg !6200

if.end9:                                          ; preds = %if.end5
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6201
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %19), !dbg !6202
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6202
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6203

if.then12:                                        ; preds = %if.end9
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6204
  %call13 = call i32 @get_bits(%struct.GetBitContext* %20, i32 4), !dbg !6206
  store i32 %call13, i32* %v, align 4, !dbg !6207
  %21 = load i32, i32* %v, align 4, !dbg !6208
  %tobool14 = icmp ne i32 %21, 0, !dbg !6208
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !6210

if.then15:                                        ; preds = %if.then12
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6211
  %call16 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !6213
  %sub = sub i32 0, %call16, !dbg !6214
  store i32 %sub, i32* %sign, align 4, !dbg !6215
  %23 = load i32, i32* %v, align 4, !dbg !6216
  %24 = load i32, i32* %sign, align 4, !dbg !6217
  %xor = xor i32 %23, %24, !dbg !6218
  %25 = load i32, i32* %sign, align 4, !dbg !6219
  %sub17 = sub nsw i32 %xor, %25, !dbg !6220
  store i32 %sub17, i32* %v, align 4, !dbg !6221
  br label %if.end18, !dbg !6222

if.end18:                                         ; preds = %if.then15, %if.then12
  %26 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6223
  %cur_dec19 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %26, i32 0, i32 4, !dbg !6224
  %27 = load i8*, i8** %cur_dec19, align 8, !dbg !6224
  %28 = load i32, i32* %v, align 4, !dbg !6225
  %29 = trunc i32 %28 to i8, !dbg !6226
  %30 = load i32, i32* %t, align 4, !dbg !6227
  %conv = sext i32 %30 to i64, !dbg !6227
  call void @llvm.memset.p0i8.i64(i8* %27, i8 %29, i64 %conv, i32 1, i1 false), !dbg !6226
  %31 = load i32, i32* %t, align 4, !dbg !6228
  %32 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6229
  %cur_dec20 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %32, i32 0, i32 4, !dbg !6230
  %33 = load i8*, i8** %cur_dec20, align 8, !dbg !6231
  %idx.ext21 = sext i32 %31 to i64, !dbg !6231
  %add.ptr22 = getelementptr inbounds i8, i8* %33, i64 %idx.ext21, !dbg !6231
  store i8* %add.ptr22, i8** %cur_dec20, align 8, !dbg !6231
  br label %if.end44, !dbg !6232

if.else:                                          ; preds = %if.end9
  br label %while.cond, !dbg !6233

while.cond:                                       ; preds = %if.end41, %if.else
  %34 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6234
  %cur_dec23 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %34, i32 0, i32 4, !dbg !6236
  %35 = load i8*, i8** %cur_dec23, align 8, !dbg !6236
  %36 = load i8*, i8** %dec_end, align 8, !dbg !6237
  %cmp24 = icmp ult i8* %35, %36, !dbg !6238
  br i1 %cmp24, label %while.body, label %while.end, !dbg !6239

while.body:                                       ; preds = %while.cond
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6240
  %38 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6241
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %38, i32 0, i32 1, !dbg !6242
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %tree, i32 0, i32 0, !dbg !6243
  %39 = load i32, i32* %vlc_num, align 4, !dbg !6243
  %idxprom = sext i32 %39 to i64, !dbg !6244
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom, !dbg !6244
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !6245
  %40 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6245
  %41 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6246
  %tree26 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %41, i32 0, i32 1, !dbg !6247
  %vlc_num27 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree26, i32 0, i32 0, !dbg !6248
  %42 = load i32, i32* %vlc_num27, align 4, !dbg !6248
  %idxprom28 = sext i32 %42 to i64, !dbg !6249
  %arrayidx29 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom28, !dbg !6249
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx29, i32 0, i32 0, !dbg !6250
  %43 = load i32, i32* %bits, align 8, !dbg !6250
  store %struct.GetBitContext* %37, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6251
  store [2 x i16]* %40, [2 x i16]** %table.addr.i, align 8, !dbg !6251
  store i32 %43, i32* %bits.addr.i, align 4, !dbg !6251
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !6251
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6252
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %44, i32 0, i32 2, !dbg !6253
  %45 = load i32, i32* %index.i, align 8, !dbg !6253
  store i32 %45, i32* %re_index.i, align 4, !dbg !6138
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6254
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %46, i32 0, i32 4, !dbg !6255
  %47 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6255
  store i32 %47, i32* %re_size_plus8.i, align 4, !dbg !6140
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6256
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %48, i32 0, i32 0, !dbg !6257
  %49 = load i8*, i8** %buffer.i, align 8, !dbg !6257
  %50 = load i32, i32* %re_index.i, align 4, !dbg !6258
  %shr.i = lshr i32 %50, 3, !dbg !6259
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6260
  %add.ptr.i = getelementptr inbounds i8, i8* %49, i64 %idx.ext.i, !dbg !6260
  %51 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6261
  %l.i = bitcast %union.unaligned_32* %51 to i32*, !dbg !6261
  %52 = load i32, i32* %l.i, align 1, !dbg !6261
  %53 = load i32, i32* %re_index.i, align 4, !dbg !6262
  %and.i = and i32 %53, 7, !dbg !6263
  %shr1.i = lshr i32 %52, %and.i, !dbg !6264
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !6265
  %54 = load i32, i32* %re_cache.i, align 4, !dbg !6266
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !6267
  %call.i = call i32 @zero_extend(i32 %54, i32 %55) #2, !dbg !6268
  store i32 %call.i, i32* %index2.i, align 4, !dbg !6269
  %56 = load i32, i32* %index2.i, align 4, !dbg !6270
  %idxprom.i = zext i32 %56 to i64, !dbg !6271
  %57 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6271
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %57, i64 %idxprom.i, !dbg !6271
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6271
  %58 = load i16, i16* %arrayidx3.i, align 2, !dbg !6271
  %conv.i = sext i16 %58 to i32, !dbg !6271
  store i32 %conv.i, i32* %code.i, align 4, !dbg !6272
  %59 = load i32, i32* %index2.i, align 4, !dbg !6273
  %idxprom4.i = zext i32 %59 to i64, !dbg !6274
  %60 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6274
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %60, i64 %idxprom4.i, !dbg !6274
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !6274
  %61 = load i16, i16* %arrayidx6.i, align 2, !dbg !6274
  %conv7.i = sext i16 %61 to i32, !dbg !6274
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !6275
  %62 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6276
  %cmp.i = icmp sgt i32 %62, 1, !dbg !6277
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !6278

land.lhs.true.i:                                  ; preds = %while.body
  %63 = load i32, i32* %n.i, align 4, !dbg !6279
  %cmp9.i = icmp slt i32 %63, 0, !dbg !6280
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !6281

if.then.i:                                        ; preds = %land.lhs.true.i
  %64 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6282
  %65 = load i32, i32* %re_index.i, align 4, !dbg !6283
  %66 = load i32, i32* %bits.addr.i, align 4, !dbg !6284
  %add.i = add i32 %65, %66, !dbg !6285
  %cmp11.i = icmp ugt i32 %64, %add.i, !dbg !6286
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !6287

cond.true.i:                                      ; preds = %if.then.i
  %67 = load i32, i32* %re_index.i, align 4, !dbg !6288
  %68 = load i32, i32* %bits.addr.i, align 4, !dbg !6289
  %add13.i = add i32 %67, %68, !dbg !6290
  br label %cond.end.i, !dbg !6291

cond.false.i:                                     ; preds = %if.then.i
  %69 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6292
  br label %cond.end.i, !dbg !6293

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %69, %cond.false.i ], !dbg !6294
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6295
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6296
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %70, i32 0, i32 0, !dbg !6297
  %71 = load i8*, i8** %buffer14.i, align 8, !dbg !6297
  %72 = load i32, i32* %re_index.i, align 4, !dbg !6298
  %shr15.i = lshr i32 %72, 3, !dbg !6299
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !6300
  %add.ptr17.i = getelementptr inbounds i8, i8* %71, i64 %idx.ext16.i, !dbg !6300
  %73 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !6301
  %l18.i = bitcast %union.unaligned_32* %73 to i32*, !dbg !6301
  %74 = load i32, i32* %l18.i, align 1, !dbg !6301
  %75 = load i32, i32* %re_index.i, align 4, !dbg !6302
  %and19.i = and i32 %75, 7, !dbg !6303
  %shr20.i = lshr i32 %74, %and19.i, !dbg !6304
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !6305
  %76 = load i32, i32* %n.i, align 4, !dbg !6306
  %sub.i = sub nsw i32 0, %76, !dbg !6307
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6308
  %77 = load i32, i32* %re_cache.i, align 4, !dbg !6309
  %78 = load i32, i32* %nb_bits.i, align 4, !dbg !6310
  %call21.i = call i32 @zero_extend(i32 %77, i32 %78) #2, !dbg !6311
  %79 = load i32, i32* %code.i, align 4, !dbg !6312
  %add22.i = add i32 %call21.i, %79, !dbg !6313
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !6314
  %80 = load i32, i32* %index2.i, align 4, !dbg !6315
  %idxprom23.i = zext i32 %80 to i64, !dbg !6316
  %81 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6316
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %81, i64 %idxprom23.i, !dbg !6316
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !6316
  %82 = load i16, i16* %arrayidx25.i, align 2, !dbg !6316
  %conv26.i = sext i16 %82 to i32, !dbg !6316
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !6317
  %83 = load i32, i32* %index2.i, align 4, !dbg !6318
  %idxprom27.i = zext i32 %83 to i64, !dbg !6319
  %84 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6319
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %84, i64 %idxprom27.i, !dbg !6319
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !6319
  %85 = load i16, i16* %arrayidx29.i, align 2, !dbg !6319
  %conv30.i = sext i16 %85 to i32, !dbg !6319
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !6320
  %86 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6321
  %cmp31.i = icmp sgt i32 %86, 2, !dbg !6322
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !6323

land.lhs.true33.i:                                ; preds = %cond.end.i
  %87 = load i32, i32* %n.i, align 4, !dbg !6324
  %cmp34.i = icmp slt i32 %87, 0, !dbg !6325
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !6326

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %88 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6327
  %89 = load i32, i32* %re_index.i, align 4, !dbg !6328
  %90 = load i32, i32* %nb_bits.i, align 4, !dbg !6329
  %add37.i = add i32 %89, %90, !dbg !6330
  %cmp38.i = icmp ugt i32 %88, %add37.i, !dbg !6331
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !6332

cond.true40.i:                                    ; preds = %if.then36.i
  %91 = load i32, i32* %re_index.i, align 4, !dbg !6333
  %92 = load i32, i32* %nb_bits.i, align 4, !dbg !6334
  %add41.i = add i32 %91, %92, !dbg !6335
  br label %cond.end43.i, !dbg !6336

cond.false42.i:                                   ; preds = %if.then36.i
  %93 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6337
  br label %cond.end43.i, !dbg !6338

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %93, %cond.false42.i ], !dbg !6339
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !6340
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6341
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %94, i32 0, i32 0, !dbg !6342
  %95 = load i8*, i8** %buffer45.i, align 8, !dbg !6342
  %96 = load i32, i32* %re_index.i, align 4, !dbg !6343
  %shr46.i = lshr i32 %96, 3, !dbg !6344
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !6345
  %add.ptr48.i = getelementptr inbounds i8, i8* %95, i64 %idx.ext47.i, !dbg !6345
  %97 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !6346
  %l49.i = bitcast %union.unaligned_32* %97 to i32*, !dbg !6346
  %98 = load i32, i32* %l49.i, align 1, !dbg !6346
  %99 = load i32, i32* %re_index.i, align 4, !dbg !6347
  %and50.i = and i32 %99, 7, !dbg !6348
  %shr51.i = lshr i32 %98, %and50.i, !dbg !6349
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !6350
  %100 = load i32, i32* %n.i, align 4, !dbg !6351
  %sub52.i = sub nsw i32 0, %100, !dbg !6352
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !6353
  %101 = load i32, i32* %re_cache.i, align 4, !dbg !6354
  %102 = load i32, i32* %nb_bits.i, align 4, !dbg !6355
  %call53.i = call i32 @zero_extend(i32 %101, i32 %102) #2, !dbg !6356
  %103 = load i32, i32* %code.i, align 4, !dbg !6357
  %add54.i = add i32 %call53.i, %103, !dbg !6358
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !6359
  %104 = load i32, i32* %index2.i, align 4, !dbg !6360
  %idxprom55.i = zext i32 %104 to i64, !dbg !6361
  %105 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6361
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %105, i64 %idxprom55.i, !dbg !6361
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !6361
  %106 = load i16, i16* %arrayidx57.i, align 2, !dbg !6361
  %conv58.i = sext i16 %106 to i32, !dbg !6361
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !6362
  %107 = load i32, i32* %index2.i, align 4, !dbg !6363
  %idxprom59.i = zext i32 %107 to i64, !dbg !6364
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6364
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom59.i, !dbg !6364
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !6364
  %109 = load i16, i16* %arrayidx61.i, align 2, !dbg !6364
  %conv62.i = sext i16 %109 to i32, !dbg !6364
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !6365
  br label %if.end.i, !dbg !6366

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !6367

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %110 = load i32, i32* %n.i, align 4, !dbg !6368
  %111 = load i32, i32* %re_cache.i, align 4, !dbg !6369
  %shr65.i = lshr i32 %111, %110, !dbg !6369
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !6369
  %112 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6370
  %113 = load i32, i32* %re_index.i, align 4, !dbg !6371
  %114 = load i32, i32* %n.i, align 4, !dbg !6372
  %add66.i = add i32 %113, %114, !dbg !6373
  %cmp67.i = icmp ugt i32 %112, %add66.i, !dbg !6374
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !6375

cond.true69.i:                                    ; preds = %if.end63.i
  %115 = load i32, i32* %re_index.i, align 4, !dbg !6376
  %116 = load i32, i32* %n.i, align 4, !dbg !6377
  %add70.i = add i32 %115, %116, !dbg !6378
  br label %get_vlc2.exit, !dbg !6379

cond.false71.i:                                   ; preds = %if.end63.i
  %117 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6380
  br label %get_vlc2.exit, !dbg !6381

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %117, %cond.false71.i ], !dbg !6382
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !6383
  %118 = load i32, i32* %re_index.i, align 4, !dbg !6384
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6385
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %119, i32 0, i32 2, !dbg !6386
  store i32 %118, i32* %index75.i, align 8, !dbg !6387
  %120 = load i32, i32* %code.i, align 4, !dbg !6388
  %idxprom31 = sext i32 %120 to i64, !dbg !6389
  %121 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6390
  %tree32 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %121, i32 0, i32 1, !dbg !6391
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %tree32, i32 0, i32 1, !dbg !6392
  %arrayidx33 = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom31, !dbg !6389
  %122 = load i8, i8* %arrayidx33, align 1, !dbg !6389
  %conv34 = zext i8 %122 to i32, !dbg !6389
  store i32 %conv34, i32* %v, align 4, !dbg !6393
  %123 = load i32, i32* %v, align 4, !dbg !6394
  %tobool35 = icmp ne i32 %123, 0, !dbg !6394
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !6396

if.then36:                                        ; preds = %get_vlc2.exit
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6397
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %124), !dbg !6399
  %sub38 = sub i32 0, %call37, !dbg !6400
  store i32 %sub38, i32* %sign, align 4, !dbg !6401
  %125 = load i32, i32* %v, align 4, !dbg !6402
  %126 = load i32, i32* %sign, align 4, !dbg !6403
  %xor39 = xor i32 %125, %126, !dbg !6404
  %127 = load i32, i32* %sign, align 4, !dbg !6405
  %sub40 = sub nsw i32 %xor39, %127, !dbg !6406
  store i32 %sub40, i32* %v, align 4, !dbg !6407
  br label %if.end41, !dbg !6408

if.end41:                                         ; preds = %if.then36, %get_vlc2.exit
  %128 = load i32, i32* %v, align 4, !dbg !6409
  %conv42 = trunc i32 %128 to i8, !dbg !6409
  %129 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6410
  %cur_dec43 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %129, i32 0, i32 4, !dbg !6411
  %130 = load i8*, i8** %cur_dec43, align 8, !dbg !6412
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 1, !dbg !6412
  store i8* %incdec.ptr, i8** %cur_dec43, align 8, !dbg !6412
  store i8 %conv42, i8* %130, align 1, !dbg !6413
  br label %while.cond, !dbg !6414, !llvm.loop !6416

while.end:                                        ; preds = %while.cond
  br label %if.end44

if.end44:                                         ; preds = %while.end, %if.end18
  store i32 0, i32* %retval, align 4, !dbg !6417
  br label %return, !dbg !6417

return:                                           ; preds = %if.end44, %if.then8, %if.then3, %if.then
  %131 = load i32, i32* %retval, align 4, !dbg !6418
  ret i32 %131, !dbg !6418
}

; Function Attrs: nounwind uwtable
define internal i32 @read_dcs(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.Bundle* %b, i32 %start_bits, i32 %has_sign) #1 !dbg !6419 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %start_bits.addr = alloca i32, align 4
  %has_sign.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %len2 = alloca i32, align 4
  %bsize = alloca i32, align 4
  %sign = alloca i32, align 4
  %v = alloca i32, align 4
  %v2 = alloca i32, align 4
  %dst = alloca i16*, align 8
  %dst_end = alloca i16*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6422, metadata !1735), !dbg !6423
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6424, metadata !1735), !dbg !6425
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !6426, metadata !1735), !dbg !6427
  store i32 %start_bits, i32* %start_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bits.addr, metadata !6428, metadata !1735), !dbg !6429
  store i32 %has_sign, i32* %has_sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %has_sign.addr, metadata !6430, metadata !1735), !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6432, metadata !1735), !dbg !6433
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6434, metadata !1735), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6436, metadata !1735), !dbg !6437
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !6438, metadata !1735), !dbg !6439
  call void @llvm.dbg.declare(metadata i32* %bsize, metadata !6440, metadata !1735), !dbg !6441
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6442, metadata !1735), !dbg !6443
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6444, metadata !1735), !dbg !6445
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !6446, metadata !1735), !dbg !6447
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6448, metadata !1735), !dbg !6449
  %0 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6450
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %0, i32 0, i32 4, !dbg !6451
  %1 = load i8*, i8** %cur_dec, align 8, !dbg !6451
  %2 = bitcast i8* %1 to i16*, !dbg !6452
  store i16* %2, i16** %dst, align 8, !dbg !6449
  call void @llvm.dbg.declare(metadata i16** %dst_end, metadata !6453, metadata !1735), !dbg !6454
  %3 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6455
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %3, i32 0, i32 3, !dbg !6456
  %4 = load i8*, i8** %data_end, align 8, !dbg !6456
  %5 = bitcast i8* %4 to i16*, !dbg !6457
  store i16* %5, i16** %dst_end, align 8, !dbg !6454
  %6 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6458
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %6, i32 0, i32 4, !dbg !6460
  %7 = load i8*, i8** %cur_dec1, align 8, !dbg !6460
  %tobool = icmp ne i8* %7, null, !dbg !6458
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6461

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6462
  %cur_dec2 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %8, i32 0, i32 4, !dbg !6464
  %9 = load i8*, i8** %cur_dec2, align 8, !dbg !6464
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6465
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 5, !dbg !6466
  %11 = load i8*, i8** %cur_ptr, align 8, !dbg !6466
  %cmp = icmp ugt i8* %9, %11, !dbg !6467
  br i1 %cmp, label %if.then, label %if.end, !dbg !6468

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6469
  br label %return, !dbg !6469

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6471
  %13 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6473
  %len3 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %13, i32 0, i32 0, !dbg !6474
  %14 = load i32, i32* %len3, align 8, !dbg !6474
  %call = call i32 @get_bits(%struct.GetBitContext* %12, i32 %14), !dbg !6475
  store i32 %call, i32* %len, align 4, !dbg !6476
  %15 = load i32, i32* %len, align 4, !dbg !6477
  %tobool4 = icmp ne i32 %15, 0, !dbg !6477
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !6478

if.then5:                                         ; preds = %if.end
  %16 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6479
  %cur_dec6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %16, i32 0, i32 4, !dbg !6483
  store i8* null, i8** %cur_dec6, align 8, !dbg !6484
  store i32 0, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

if.end7:                                          ; preds = %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6486
  %18 = load i32, i32* %start_bits.addr, align 4, !dbg !6487
  %19 = load i32, i32* %has_sign.addr, align 4, !dbg !6488
  %sub = sub nsw i32 %18, %19, !dbg !6489
  %call8 = call i32 @get_bits(%struct.GetBitContext* %17, i32 %sub), !dbg !6490
  store i32 %call8, i32* %v, align 4, !dbg !6491
  %20 = load i32, i32* %v, align 4, !dbg !6492
  %tobool9 = icmp ne i32 %20, 0, !dbg !6492
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !6494

land.lhs.true:                                    ; preds = %if.end7
  %21 = load i32, i32* %has_sign.addr, align 4, !dbg !6495
  %tobool10 = icmp ne i32 %21, 0, !dbg !6495
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !6497

if.then11:                                        ; preds = %land.lhs.true
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6498
  %call12 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !6500
  %sub13 = sub i32 0, %call12, !dbg !6501
  store i32 %sub13, i32* %sign, align 4, !dbg !6502
  %23 = load i32, i32* %v, align 4, !dbg !6503
  %24 = load i32, i32* %sign, align 4, !dbg !6504
  %xor = xor i32 %23, %24, !dbg !6505
  %25 = load i32, i32* %sign, align 4, !dbg !6506
  %sub14 = sub nsw i32 %xor, %25, !dbg !6507
  store i32 %sub14, i32* %v, align 4, !dbg !6508
  br label %if.end15, !dbg !6509

if.end15:                                         ; preds = %if.then11, %land.lhs.true, %if.end7
  %26 = load i16*, i16** %dst_end, align 8, !dbg !6510
  %27 = load i16*, i16** %dst, align 8, !dbg !6512
  %sub.ptr.lhs.cast = ptrtoint i16* %26 to i64, !dbg !6513
  %sub.ptr.rhs.cast = ptrtoint i16* %27 to i64, !dbg !6513
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6513
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !6513
  %cmp16 = icmp slt i64 %sub.ptr.div, 1, !dbg !6514
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6515

if.then17:                                        ; preds = %if.end15
  store i32 -1094995529, i32* %retval, align 4, !dbg !6516
  br label %return, !dbg !6516

if.end18:                                         ; preds = %if.end15
  %28 = load i32, i32* %v, align 4, !dbg !6517
  %conv = trunc i32 %28 to i16, !dbg !6517
  %29 = load i16*, i16** %dst, align 8, !dbg !6518
  %incdec.ptr = getelementptr inbounds i16, i16* %29, i32 1, !dbg !6518
  store i16* %incdec.ptr, i16** %dst, align 8, !dbg !6518
  store i16 %conv, i16* %29, align 2, !dbg !6519
  %30 = load i32, i32* %len, align 4, !dbg !6520
  %dec = add nsw i32 %30, -1, !dbg !6520
  store i32 %dec, i32* %len, align 4, !dbg !6520
  store i32 0, i32* %i, align 4, !dbg !6521
  br label %for.cond, !dbg !6523

for.cond:                                         ; preds = %for.inc68, %if.end18
  %31 = load i32, i32* %i, align 4, !dbg !6524
  %32 = load i32, i32* %len, align 4, !dbg !6527
  %cmp19 = icmp slt i32 %31, %32, !dbg !6528
  br i1 %cmp19, label %for.body, label %for.end70, !dbg !6529

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %len, align 4, !dbg !6530
  %34 = load i32, i32* %i, align 4, !dbg !6532
  %sub21 = sub nsw i32 %33, %34, !dbg !6533
  %cmp22 = icmp sgt i32 %sub21, 8, !dbg !6534
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !6535

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !6536

cond.false:                                       ; preds = %for.body
  %35 = load i32, i32* %len, align 4, !dbg !6538
  %36 = load i32, i32* %i, align 4, !dbg !6540
  %sub24 = sub nsw i32 %35, %36, !dbg !6541
  br label %cond.end, !dbg !6542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %sub24, %cond.false ], !dbg !6543
  store i32 %cond, i32* %len2, align 4, !dbg !6545
  %37 = load i16*, i16** %dst_end, align 8, !dbg !6546
  %38 = load i16*, i16** %dst, align 8, !dbg !6548
  %sub.ptr.lhs.cast25 = ptrtoint i16* %37 to i64, !dbg !6549
  %sub.ptr.rhs.cast26 = ptrtoint i16* %38 to i64, !dbg !6549
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26, !dbg !6549
  %sub.ptr.div28 = sdiv exact i64 %sub.ptr.sub27, 2, !dbg !6549
  %39 = load i32, i32* %len2, align 4, !dbg !6550
  %conv29 = sext i32 %39 to i64, !dbg !6550
  %cmp30 = icmp slt i64 %sub.ptr.div28, %conv29, !dbg !6551
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6552

if.then32:                                        ; preds = %cond.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !6553
  br label %return, !dbg !6553

if.end33:                                         ; preds = %cond.end
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6554
  %call34 = call i32 @get_bits(%struct.GetBitContext* %40, i32 4), !dbg !6555
  store i32 %call34, i32* %bsize, align 4, !dbg !6556
  %41 = load i32, i32* %bsize, align 4, !dbg !6557
  %tobool35 = icmp ne i32 %41, 0, !dbg !6557
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !6559

if.then36:                                        ; preds = %if.end33
  store i32 0, i32* %j, align 4, !dbg !6560
  br label %for.cond37, !dbg !6563

for.cond37:                                       ; preds = %for.inc, %if.then36
  %42 = load i32, i32* %j, align 4, !dbg !6564
  %43 = load i32, i32* %len2, align 4, !dbg !6567
  %cmp38 = icmp slt i32 %42, %43, !dbg !6568
  br i1 %cmp38, label %for.body40, label %for.end, !dbg !6569

for.body40:                                       ; preds = %for.cond37
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6570
  %45 = load i32, i32* %bsize, align 4, !dbg !6572
  %call41 = call i32 @get_bits(%struct.GetBitContext* %44, i32 %45), !dbg !6573
  store i32 %call41, i32* %v2, align 4, !dbg !6574
  %46 = load i32, i32* %v2, align 4, !dbg !6575
  %tobool42 = icmp ne i32 %46, 0, !dbg !6575
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !6577

if.then43:                                        ; preds = %for.body40
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6578
  %call44 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !6580
  %sub45 = sub i32 0, %call44, !dbg !6581
  store i32 %sub45, i32* %sign, align 4, !dbg !6582
  %48 = load i32, i32* %v2, align 4, !dbg !6583
  %49 = load i32, i32* %sign, align 4, !dbg !6584
  %xor46 = xor i32 %48, %49, !dbg !6585
  %50 = load i32, i32* %sign, align 4, !dbg !6586
  %sub47 = sub nsw i32 %xor46, %50, !dbg !6587
  store i32 %sub47, i32* %v2, align 4, !dbg !6588
  br label %if.end48, !dbg !6589

if.end48:                                         ; preds = %if.then43, %for.body40
  %51 = load i32, i32* %v2, align 4, !dbg !6590
  %52 = load i32, i32* %v, align 4, !dbg !6591
  %add = add nsw i32 %52, %51, !dbg !6591
  store i32 %add, i32* %v, align 4, !dbg !6591
  %53 = load i32, i32* %v, align 4, !dbg !6592
  %conv49 = trunc i32 %53 to i16, !dbg !6592
  %54 = load i16*, i16** %dst, align 8, !dbg !6593
  %incdec.ptr50 = getelementptr inbounds i16, i16* %54, i32 1, !dbg !6593
  store i16* %incdec.ptr50, i16** %dst, align 8, !dbg !6593
  store i16 %conv49, i16* %54, align 2, !dbg !6594
  %55 = load i32, i32* %v, align 4, !dbg !6595
  %cmp51 = icmp slt i32 %55, -32768, !dbg !6597
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !6598

lor.lhs.false53:                                  ; preds = %if.end48
  %56 = load i32, i32* %v, align 4, !dbg !6599
  %cmp54 = icmp sgt i32 %56, 32767, !dbg !6601
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6602

if.then56:                                        ; preds = %lor.lhs.false53, %if.end48
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6603
  %58 = bitcast %struct.AVCodecContext* %57 to i8*, !dbg !6603
  %59 = load i32, i32* %v, align 4, !dbg !6605
  call void (i8*, i32, i8*, ...) @av_log(i8* %58, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0), i32 %59), !dbg !6606
  store i32 -1094995529, i32* %retval, align 4, !dbg !6607
  br label %return, !dbg !6607

if.end57:                                         ; preds = %lor.lhs.false53
  br label %for.inc, !dbg !6608

for.inc:                                          ; preds = %if.end57
  %60 = load i32, i32* %j, align 4, !dbg !6609
  %inc = add nsw i32 %60, 1, !dbg !6609
  store i32 %inc, i32* %j, align 4, !dbg !6609
  br label %for.cond37, !dbg !6611, !llvm.loop !6612

for.end:                                          ; preds = %for.cond37
  br label %if.end67, !dbg !6614

if.else:                                          ; preds = %if.end33
  store i32 0, i32* %j, align 4, !dbg !6615
  br label %for.cond58, !dbg !6618

for.cond58:                                       ; preds = %for.inc64, %if.else
  %61 = load i32, i32* %j, align 4, !dbg !6619
  %62 = load i32, i32* %len2, align 4, !dbg !6622
  %cmp59 = icmp slt i32 %61, %62, !dbg !6623
  br i1 %cmp59, label %for.body61, label %for.end66, !dbg !6624

for.body61:                                       ; preds = %for.cond58
  %63 = load i32, i32* %v, align 4, !dbg !6625
  %conv62 = trunc i32 %63 to i16, !dbg !6625
  %64 = load i16*, i16** %dst, align 8, !dbg !6626
  %incdec.ptr63 = getelementptr inbounds i16, i16* %64, i32 1, !dbg !6626
  store i16* %incdec.ptr63, i16** %dst, align 8, !dbg !6626
  store i16 %conv62, i16* %64, align 2, !dbg !6627
  br label %for.inc64, !dbg !6628

for.inc64:                                        ; preds = %for.body61
  %65 = load i32, i32* %j, align 4, !dbg !6629
  %inc65 = add nsw i32 %65, 1, !dbg !6629
  store i32 %inc65, i32* %j, align 4, !dbg !6629
  br label %for.cond58, !dbg !6631, !llvm.loop !6632

for.end66:                                        ; preds = %for.cond58
  br label %if.end67

if.end67:                                         ; preds = %for.end66, %for.end
  br label %for.inc68, !dbg !6634

for.inc68:                                        ; preds = %if.end67
  %66 = load i32, i32* %i, align 4, !dbg !6635
  %add69 = add nsw i32 %66, 8, !dbg !6635
  store i32 %add69, i32* %i, align 4, !dbg !6635
  br label %for.cond, !dbg !6637, !llvm.loop !6638

for.end70:                                        ; preds = %for.cond
  %67 = load i16*, i16** %dst, align 8, !dbg !6640
  %68 = bitcast i16* %67 to i8*, !dbg !6641
  %69 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6642
  %cur_dec71 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %69, i32 0, i32 4, !dbg !6643
  store i8* %68, i8** %cur_dec71, align 8, !dbg !6644
  store i32 0, i32* %retval, align 4, !dbg !6645
  br label %return, !dbg !6645

return:                                           ; preds = %for.end70, %if.then56, %if.then32, %if.then17, %if.then5, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !6646
  ret i32 %70, !dbg !6646
}

; Function Attrs: nounwind uwtable
define internal i32 @read_runs(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.Bundle* %b) #1 !dbg !6647 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4545, metadata !1735), !dbg !6648
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !4554, metadata !1735), !dbg !6652
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !4556, metadata !1735), !dbg !6653
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !4558, metadata !1735), !dbg !6654
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !4560, metadata !1735), !dbg !6655
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !4562, metadata !1735), !dbg !6656
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !4564, metadata !1735), !dbg !6657
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !4566, metadata !1735), !dbg !6658
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !4568, metadata !1735), !dbg !6659
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !4571, metadata !1735), !dbg !6660
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !4573, metadata !1735), !dbg !6661
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca %struct.Bundle*, align 8
  %t = alloca i32, align 4
  %v = alloca i32, align 4
  %dec_end = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6662, metadata !1735), !dbg !6663
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6664, metadata !1735), !dbg !6665
  store %struct.Bundle* %b, %struct.Bundle** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b.addr, metadata !6666, metadata !1735), !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6668, metadata !1735), !dbg !6669
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6670, metadata !1735), !dbg !6671
  call void @llvm.dbg.declare(metadata i8** %dec_end, metadata !6672, metadata !1735), !dbg !6673
  %0 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6674
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %0, i32 0, i32 4, !dbg !6676
  %1 = load i8*, i8** %cur_dec, align 8, !dbg !6676
  %tobool = icmp ne i8* %1, null, !dbg !6674
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6677

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6678
  %cur_dec1 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %2, i32 0, i32 4, !dbg !6680
  %3 = load i8*, i8** %cur_dec1, align 8, !dbg !6680
  %4 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6681
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %4, i32 0, i32 5, !dbg !6682
  %5 = load i8*, i8** %cur_ptr, align 8, !dbg !6682
  %cmp = icmp ugt i8* %3, %5, !dbg !6683
  br i1 %cmp, label %if.then, label %if.end, !dbg !6684

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6685
  br label %return, !dbg !6685

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6687
  %7 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6689
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 0, !dbg !6690
  %8 = load i32, i32* %len, align 8, !dbg !6690
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 %8), !dbg !6691
  store i32 %call, i32* %t, align 4, !dbg !6692
  %9 = load i32, i32* %t, align 4, !dbg !6693
  %tobool2 = icmp ne i32 %9, 0, !dbg !6693
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6694

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6695
  %cur_dec4 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %10, i32 0, i32 4, !dbg !6699
  store i8* null, i8** %cur_dec4, align 8, !dbg !6700
  store i32 0, i32* %retval, align 4, !dbg !6701
  br label %return, !dbg !6701

if.end5:                                          ; preds = %if.end
  %11 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6702
  %cur_dec6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %11, i32 0, i32 4, !dbg !6703
  %12 = load i8*, i8** %cur_dec6, align 8, !dbg !6703
  %13 = load i32, i32* %t, align 4, !dbg !6704
  %idx.ext = sext i32 %13 to i64, !dbg !6705
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !6705
  store i8* %add.ptr, i8** %dec_end, align 8, !dbg !6706
  %14 = load i8*, i8** %dec_end, align 8, !dbg !6707
  %15 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6709
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %15, i32 0, i32 3, !dbg !6710
  %16 = load i8*, i8** %data_end, align 8, !dbg !6710
  %cmp7 = icmp ugt i8* %14, %16, !dbg !6711
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6712

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6713
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !6713
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0)), !dbg !6715
  store i32 -1094995529, i32* %retval, align 4, !dbg !6716
  br label %return, !dbg !6716

if.end9:                                          ; preds = %if.end5
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6717
  %call10 = call i32 @get_bits1(%struct.GetBitContext* %19), !dbg !6718
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6718
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6719

if.then12:                                        ; preds = %if.end9
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6720
  %call13 = call i32 @get_bits(%struct.GetBitContext* %20, i32 4), !dbg !6722
  store i32 %call13, i32* %v, align 4, !dbg !6723
  %21 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6724
  %cur_dec14 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %21, i32 0, i32 4, !dbg !6725
  %22 = load i8*, i8** %cur_dec14, align 8, !dbg !6725
  %23 = load i32, i32* %v, align 4, !dbg !6726
  %24 = trunc i32 %23 to i8, !dbg !6727
  %25 = load i32, i32* %t, align 4, !dbg !6728
  %conv = sext i32 %25 to i64, !dbg !6728
  call void @llvm.memset.p0i8.i64(i8* %22, i8 %24, i64 %conv, i32 1, i1 false), !dbg !6727
  %26 = load i32, i32* %t, align 4, !dbg !6729
  %27 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6730
  %cur_dec15 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %27, i32 0, i32 4, !dbg !6731
  %28 = load i8*, i8** %cur_dec15, align 8, !dbg !6732
  %idx.ext16 = sext i32 %26 to i64, !dbg !6732
  %add.ptr17 = getelementptr inbounds i8, i8* %28, i64 %idx.ext16, !dbg !6732
  store i8* %add.ptr17, i8** %cur_dec15, align 8, !dbg !6732
  br label %if.end30, !dbg !6733

if.else:                                          ; preds = %if.end9
  br label %while.cond, !dbg !6734

while.cond:                                       ; preds = %get_vlc2.exit, %if.else
  %29 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6735
  %cur_dec18 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %29, i32 0, i32 4, !dbg !6737
  %30 = load i8*, i8** %cur_dec18, align 8, !dbg !6737
  %31 = load i8*, i8** %dec_end, align 8, !dbg !6738
  %cmp19 = icmp ult i8* %30, %31, !dbg !6739
  br i1 %cmp19, label %while.body, label %while.end, !dbg !6740

while.body:                                       ; preds = %while.cond
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6741
  %33 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6742
  %tree = getelementptr inbounds %struct.Bundle, %struct.Bundle* %33, i32 0, i32 1, !dbg !6743
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %tree, i32 0, i32 0, !dbg !6744
  %34 = load i32, i32* %vlc_num, align 4, !dbg !6744
  %idxprom = sext i32 %34 to i64, !dbg !6745
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom, !dbg !6745
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !6746
  %35 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6746
  %36 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6747
  %tree21 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %36, i32 0, i32 1, !dbg !6748
  %vlc_num22 = getelementptr inbounds %struct.Tree, %struct.Tree* %tree21, i32 0, i32 0, !dbg !6749
  %37 = load i32, i32* %vlc_num22, align 4, !dbg !6749
  %idxprom23 = sext i32 %37 to i64, !dbg !6750
  %arrayidx24 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @bink_trees, i64 0, i64 %idxprom23, !dbg !6750
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx24, i32 0, i32 0, !dbg !6751
  %38 = load i32, i32* %bits, align 8, !dbg !6751
  store %struct.GetBitContext* %32, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6752
  store [2 x i16]* %35, [2 x i16]** %table.addr.i, align 8, !dbg !6752
  store i32 %38, i32* %bits.addr.i, align 4, !dbg !6752
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !6752
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6753
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %39, i32 0, i32 2, !dbg !6754
  %40 = load i32, i32* %index.i, align 8, !dbg !6754
  store i32 %40, i32* %re_index.i, align 4, !dbg !6656
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6755
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %41, i32 0, i32 4, !dbg !6756
  %42 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6756
  store i32 %42, i32* %re_size_plus8.i, align 4, !dbg !6658
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6757
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %43, i32 0, i32 0, !dbg !6758
  %44 = load i8*, i8** %buffer.i, align 8, !dbg !6758
  %45 = load i32, i32* %re_index.i, align 4, !dbg !6759
  %shr.i = lshr i32 %45, 3, !dbg !6760
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6761
  %add.ptr.i = getelementptr inbounds i8, i8* %44, i64 %idx.ext.i, !dbg !6761
  %46 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6762
  %l.i = bitcast %union.unaligned_32* %46 to i32*, !dbg !6762
  %47 = load i32, i32* %l.i, align 1, !dbg !6762
  %48 = load i32, i32* %re_index.i, align 4, !dbg !6763
  %and.i = and i32 %48, 7, !dbg !6764
  %shr1.i = lshr i32 %47, %and.i, !dbg !6765
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !6766
  %49 = load i32, i32* %re_cache.i, align 4, !dbg !6767
  %50 = load i32, i32* %bits.addr.i, align 4, !dbg !6768
  %call.i = call i32 @zero_extend(i32 %49, i32 %50) #2, !dbg !6769
  store i32 %call.i, i32* %index2.i, align 4, !dbg !6770
  %51 = load i32, i32* %index2.i, align 4, !dbg !6771
  %idxprom.i = zext i32 %51 to i64, !dbg !6772
  %52 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6772
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %52, i64 %idxprom.i, !dbg !6772
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6772
  %53 = load i16, i16* %arrayidx3.i, align 2, !dbg !6772
  %conv.i = sext i16 %53 to i32, !dbg !6772
  store i32 %conv.i, i32* %code.i, align 4, !dbg !6773
  %54 = load i32, i32* %index2.i, align 4, !dbg !6774
  %idxprom4.i = zext i32 %54 to i64, !dbg !6775
  %55 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6775
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %55, i64 %idxprom4.i, !dbg !6775
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !6775
  %56 = load i16, i16* %arrayidx6.i, align 2, !dbg !6775
  %conv7.i = sext i16 %56 to i32, !dbg !6775
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !6776
  %57 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6777
  %cmp.i = icmp sgt i32 %57, 1, !dbg !6778
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !6779

land.lhs.true.i:                                  ; preds = %while.body
  %58 = load i32, i32* %n.i, align 4, !dbg !6780
  %cmp9.i = icmp slt i32 %58, 0, !dbg !6781
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !6782

if.then.i:                                        ; preds = %land.lhs.true.i
  %59 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6783
  %60 = load i32, i32* %re_index.i, align 4, !dbg !6784
  %61 = load i32, i32* %bits.addr.i, align 4, !dbg !6785
  %add.i = add i32 %60, %61, !dbg !6786
  %cmp11.i = icmp ugt i32 %59, %add.i, !dbg !6787
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !6788

cond.true.i:                                      ; preds = %if.then.i
  %62 = load i32, i32* %re_index.i, align 4, !dbg !6789
  %63 = load i32, i32* %bits.addr.i, align 4, !dbg !6790
  %add13.i = add i32 %62, %63, !dbg !6791
  br label %cond.end.i, !dbg !6792

cond.false.i:                                     ; preds = %if.then.i
  %64 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6793
  br label %cond.end.i, !dbg !6794

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %64, %cond.false.i ], !dbg !6795
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6796
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6797
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %65, i32 0, i32 0, !dbg !6798
  %66 = load i8*, i8** %buffer14.i, align 8, !dbg !6798
  %67 = load i32, i32* %re_index.i, align 4, !dbg !6799
  %shr15.i = lshr i32 %67, 3, !dbg !6800
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !6801
  %add.ptr17.i = getelementptr inbounds i8, i8* %66, i64 %idx.ext16.i, !dbg !6801
  %68 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !6802
  %l18.i = bitcast %union.unaligned_32* %68 to i32*, !dbg !6802
  %69 = load i32, i32* %l18.i, align 1, !dbg !6802
  %70 = load i32, i32* %re_index.i, align 4, !dbg !6803
  %and19.i = and i32 %70, 7, !dbg !6804
  %shr20.i = lshr i32 %69, %and19.i, !dbg !6805
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !6806
  %71 = load i32, i32* %n.i, align 4, !dbg !6807
  %sub.i = sub nsw i32 0, %71, !dbg !6808
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6809
  %72 = load i32, i32* %re_cache.i, align 4, !dbg !6810
  %73 = load i32, i32* %nb_bits.i, align 4, !dbg !6811
  %call21.i = call i32 @zero_extend(i32 %72, i32 %73) #2, !dbg !6812
  %74 = load i32, i32* %code.i, align 4, !dbg !6813
  %add22.i = add i32 %call21.i, %74, !dbg !6814
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !6815
  %75 = load i32, i32* %index2.i, align 4, !dbg !6816
  %idxprom23.i = zext i32 %75 to i64, !dbg !6817
  %76 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6817
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %76, i64 %idxprom23.i, !dbg !6817
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !6817
  %77 = load i16, i16* %arrayidx25.i, align 2, !dbg !6817
  %conv26.i = sext i16 %77 to i32, !dbg !6817
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !6818
  %78 = load i32, i32* %index2.i, align 4, !dbg !6819
  %idxprom27.i = zext i32 %78 to i64, !dbg !6820
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6820
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom27.i, !dbg !6820
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !6820
  %80 = load i16, i16* %arrayidx29.i, align 2, !dbg !6820
  %conv30.i = sext i16 %80 to i32, !dbg !6820
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !6821
  %81 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6822
  %cmp31.i = icmp sgt i32 %81, 2, !dbg !6823
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !6824

land.lhs.true33.i:                                ; preds = %cond.end.i
  %82 = load i32, i32* %n.i, align 4, !dbg !6825
  %cmp34.i = icmp slt i32 %82, 0, !dbg !6826
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !6827

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %83 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6828
  %84 = load i32, i32* %re_index.i, align 4, !dbg !6829
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !6830
  %add37.i = add i32 %84, %85, !dbg !6831
  %cmp38.i = icmp ugt i32 %83, %add37.i, !dbg !6832
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !6833

cond.true40.i:                                    ; preds = %if.then36.i
  %86 = load i32, i32* %re_index.i, align 4, !dbg !6834
  %87 = load i32, i32* %nb_bits.i, align 4, !dbg !6835
  %add41.i = add i32 %86, %87, !dbg !6836
  br label %cond.end43.i, !dbg !6837

cond.false42.i:                                   ; preds = %if.then36.i
  %88 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6838
  br label %cond.end43.i, !dbg !6839

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %88, %cond.false42.i ], !dbg !6840
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !6841
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6842
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %89, i32 0, i32 0, !dbg !6843
  %90 = load i8*, i8** %buffer45.i, align 8, !dbg !6843
  %91 = load i32, i32* %re_index.i, align 4, !dbg !6844
  %shr46.i = lshr i32 %91, 3, !dbg !6845
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !6846
  %add.ptr48.i = getelementptr inbounds i8, i8* %90, i64 %idx.ext47.i, !dbg !6846
  %92 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !6847
  %l49.i = bitcast %union.unaligned_32* %92 to i32*, !dbg !6847
  %93 = load i32, i32* %l49.i, align 1, !dbg !6847
  %94 = load i32, i32* %re_index.i, align 4, !dbg !6848
  %and50.i = and i32 %94, 7, !dbg !6849
  %shr51.i = lshr i32 %93, %and50.i, !dbg !6850
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !6851
  %95 = load i32, i32* %n.i, align 4, !dbg !6852
  %sub52.i = sub nsw i32 0, %95, !dbg !6853
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !6854
  %96 = load i32, i32* %re_cache.i, align 4, !dbg !6855
  %97 = load i32, i32* %nb_bits.i, align 4, !dbg !6856
  %call53.i = call i32 @zero_extend(i32 %96, i32 %97) #2, !dbg !6857
  %98 = load i32, i32* %code.i, align 4, !dbg !6858
  %add54.i = add i32 %call53.i, %98, !dbg !6859
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !6860
  %99 = load i32, i32* %index2.i, align 4, !dbg !6861
  %idxprom55.i = zext i32 %99 to i64, !dbg !6862
  %100 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6862
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %100, i64 %idxprom55.i, !dbg !6862
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !6862
  %101 = load i16, i16* %arrayidx57.i, align 2, !dbg !6862
  %conv58.i = sext i16 %101 to i32, !dbg !6862
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !6863
  %102 = load i32, i32* %index2.i, align 4, !dbg !6864
  %idxprom59.i = zext i32 %102 to i64, !dbg !6865
  %103 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6865
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %103, i64 %idxprom59.i, !dbg !6865
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !6865
  %104 = load i16, i16* %arrayidx61.i, align 2, !dbg !6865
  %conv62.i = sext i16 %104 to i32, !dbg !6865
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !6866
  br label %if.end.i, !dbg !6867

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !6868

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %105 = load i32, i32* %n.i, align 4, !dbg !6869
  %106 = load i32, i32* %re_cache.i, align 4, !dbg !6870
  %shr65.i = lshr i32 %106, %105, !dbg !6870
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !6870
  %107 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6871
  %108 = load i32, i32* %re_index.i, align 4, !dbg !6872
  %109 = load i32, i32* %n.i, align 4, !dbg !6873
  %add66.i = add i32 %108, %109, !dbg !6874
  %cmp67.i = icmp ugt i32 %107, %add66.i, !dbg !6875
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !6876

cond.true69.i:                                    ; preds = %if.end63.i
  %110 = load i32, i32* %re_index.i, align 4, !dbg !6877
  %111 = load i32, i32* %n.i, align 4, !dbg !6878
  %add70.i = add i32 %110, %111, !dbg !6879
  br label %get_vlc2.exit, !dbg !6880

cond.false71.i:                                   ; preds = %if.end63.i
  %112 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6881
  br label %get_vlc2.exit, !dbg !6882

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %112, %cond.false71.i ], !dbg !6883
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !6884
  %113 = load i32, i32* %re_index.i, align 4, !dbg !6885
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6886
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %114, i32 0, i32 2, !dbg !6887
  store i32 %113, i32* %index75.i, align 8, !dbg !6888
  %115 = load i32, i32* %code.i, align 4, !dbg !6889
  %idxprom26 = sext i32 %115 to i64, !dbg !6890
  %116 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6891
  %tree27 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %116, i32 0, i32 1, !dbg !6892
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %tree27, i32 0, i32 1, !dbg !6893
  %arrayidx28 = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom26, !dbg !6890
  %117 = load i8, i8* %arrayidx28, align 1, !dbg !6890
  %118 = load %struct.Bundle*, %struct.Bundle** %b.addr, align 8, !dbg !6894
  %cur_dec29 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %118, i32 0, i32 4, !dbg !6895
  %119 = load i8*, i8** %cur_dec29, align 8, !dbg !6896
  %incdec.ptr = getelementptr inbounds i8, i8* %119, i32 1, !dbg !6896
  store i8* %incdec.ptr, i8** %cur_dec29, align 8, !dbg !6896
  store i8 %117, i8* %119, align 1, !dbg !6897
  br label %while.cond, !dbg !6898, !llvm.loop !6900

while.end:                                        ; preds = %while.cond
  br label %if.end30

if.end30:                                         ; preds = %while.end, %if.then12
  store i32 0, i32* %retval, align 4, !dbg !6901
  br label %return, !dbg !6901

return:                                           ; preds = %if.end30, %if.then8, %if.then3, %if.then
  %120 = load i32, i32* %retval, align 4, !dbg !6902
  ret i32 %120, !dbg !6902
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_value(%struct.BinkContext* %c, i32 %bundle) #4 !dbg !6903 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %bundle.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !6906, metadata !1735), !dbg !6907
  store i32 %bundle, i32* %bundle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bundle.addr, metadata !6908, metadata !1735), !dbg !6909
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6910, metadata !1735), !dbg !6911
  %0 = load i32, i32* %bundle.addr, align 4, !dbg !6912
  %cmp = icmp slt i32 %0, 4, !dbg !6914
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6915

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bundle.addr, align 4, !dbg !6916
  %cmp1 = icmp eq i32 %1, 8, !dbg !6918
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6919

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %bundle.addr, align 4, !dbg !6920
  %idxprom = sext i32 %2 to i64, !dbg !6921
  %3 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !6921
  %bundle2 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %3, i32 0, i32 9, !dbg !6922
  %arrayidx = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle2, i64 0, i64 %idxprom, !dbg !6921
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx, i32 0, i32 5, !dbg !6923
  %4 = load i8*, i8** %cur_ptr, align 8, !dbg !6924
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !6924
  store i8* %incdec.ptr, i8** %cur_ptr, align 8, !dbg !6924
  %5 = load i8, i8* %4, align 1, !dbg !6925
  %conv = zext i8 %5 to i32, !dbg !6925
  store i32 %conv, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* %bundle.addr, align 4, !dbg !6927
  %cmp3 = icmp eq i32 %6, 4, !dbg !6929
  br i1 %cmp3, label %if.then8, label %lor.lhs.false5, !dbg !6930

lor.lhs.false5:                                   ; preds = %if.end
  %7 = load i32, i32* %bundle.addr, align 4, !dbg !6931
  %cmp6 = icmp eq i32 %7, 5, !dbg !6933
  br i1 %cmp6, label %if.then8, label %if.end15, !dbg !6934

if.then8:                                         ; preds = %lor.lhs.false5, %if.end
  %8 = load i32, i32* %bundle.addr, align 4, !dbg !6935
  %idxprom9 = sext i32 %8 to i64, !dbg !6936
  %9 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !6936
  %bundle10 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %9, i32 0, i32 9, !dbg !6937
  %arrayidx11 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle10, i64 0, i64 %idxprom9, !dbg !6936
  %cur_ptr12 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx11, i32 0, i32 5, !dbg !6938
  %10 = load i8*, i8** %cur_ptr12, align 8, !dbg !6939
  %incdec.ptr13 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6939
  store i8* %incdec.ptr13, i8** %cur_ptr12, align 8, !dbg !6939
  %11 = load i8, i8* %10, align 1, !dbg !6940
  %conv14 = sext i8 %11 to i32, !dbg !6941
  store i32 %conv14, i32* %retval, align 4, !dbg !6942
  br label %return, !dbg !6942

if.end15:                                         ; preds = %lor.lhs.false5
  %12 = load i32, i32* %bundle.addr, align 4, !dbg !6943
  %idxprom16 = sext i32 %12 to i64, !dbg !6944
  %13 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !6944
  %bundle17 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %13, i32 0, i32 9, !dbg !6945
  %arrayidx18 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle17, i64 0, i64 %idxprom16, !dbg !6944
  %cur_ptr19 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx18, i32 0, i32 5, !dbg !6946
  %14 = load i8*, i8** %cur_ptr19, align 8, !dbg !6946
  %15 = bitcast i8* %14 to i16*, !dbg !6947
  %16 = load i16, i16* %15, align 2, !dbg !6947
  %conv20 = sext i16 %16 to i32, !dbg !6947
  store i32 %conv20, i32* %ret, align 4, !dbg !6948
  %17 = load i32, i32* %bundle.addr, align 4, !dbg !6949
  %idxprom21 = sext i32 %17 to i64, !dbg !6950
  %18 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !6950
  %bundle22 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %18, i32 0, i32 9, !dbg !6951
  %arrayidx23 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle22, i64 0, i64 %idxprom21, !dbg !6950
  %cur_ptr24 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx23, i32 0, i32 5, !dbg !6952
  %19 = load i8*, i8** %cur_ptr24, align 8, !dbg !6953
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 2, !dbg !6953
  store i8* %add.ptr, i8** %cur_ptr24, align 8, !dbg !6953
  %20 = load i32, i32* %ret, align 4, !dbg !6954
  store i32 %20, i32* %retval, align 4, !dbg !6955
  br label %return, !dbg !6955

return:                                           ; preds = %if.end15, %if.then8, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !6956
  ret i32 %21, !dbg !6956
}

; Function Attrs: nounwind uwtable
define internal i32 @read_dct_coeffs(%struct.BinkContext* %c, %struct.GetBitContext* %gb, i32* %block, i8* %scan, i32* %coef_count_, i32* %coef_idx, i32 %q) #1 !dbg !6957 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %block.addr = alloca i32*, align 8
  %scan.addr = alloca i8*, align 8
  %coef_count_.addr = alloca i32*, align 8
  %coef_idx.addr = alloca i32*, align 8
  %q.addr = alloca i32, align 4
  %coef_list = alloca [128 x i32], align 16
  %mode_list = alloca [128 x i32], align 16
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %bits = alloca i32, align 4
  %ccoef = alloca i32, align 4
  %mode = alloca i32, align 4
  %sign = alloca i32, align 4
  %list_start = alloca i32, align 4
  %list_end = alloca i32, align 4
  %list_pos = alloca i32, align 4
  %coef_count = alloca i32, align 4
  %quant_idx = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !6960, metadata !1735), !dbg !6961
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6962, metadata !1735), !dbg !6963
  store i32* %block, i32** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block.addr, metadata !6964, metadata !1735), !dbg !6965
  store i8* %scan, i8** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scan.addr, metadata !6966, metadata !1735), !dbg !6967
  store i32* %coef_count_, i32** %coef_count_.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coef_count_.addr, metadata !6968, metadata !1735), !dbg !6969
  store i32* %coef_idx, i32** %coef_idx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coef_idx.addr, metadata !6970, metadata !1735), !dbg !6971
  store i32 %q, i32* %q.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q.addr, metadata !6972, metadata !1735), !dbg !6973
  call void @llvm.dbg.declare(metadata [128 x i32]* %coef_list, metadata !6974, metadata !1735), !dbg !6978
  call void @llvm.dbg.declare(metadata [128 x i32]* %mode_list, metadata !6979, metadata !1735), !dbg !6980
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6981, metadata !1735), !dbg !6982
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6983, metadata !1735), !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !6985, metadata !1735), !dbg !6986
  call void @llvm.dbg.declare(metadata i32* %ccoef, metadata !6987, metadata !1735), !dbg !6988
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6989, metadata !1735), !dbg !6990
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6991, metadata !1735), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %list_start, metadata !6993, metadata !1735), !dbg !6994
  store i32 64, i32* %list_start, align 4, !dbg !6994
  call void @llvm.dbg.declare(metadata i32* %list_end, metadata !6995, metadata !1735), !dbg !6996
  store i32 64, i32* %list_end, align 4, !dbg !6996
  call void @llvm.dbg.declare(metadata i32* %list_pos, metadata !6997, metadata !1735), !dbg !6998
  call void @llvm.dbg.declare(metadata i32* %coef_count, metadata !6999, metadata !1735), !dbg !7000
  store i32 0, i32* %coef_count, align 4, !dbg !7000
  call void @llvm.dbg.declare(metadata i32* %quant_idx, metadata !7001, metadata !1735), !dbg !7002
  %0 = load i32, i32* %list_end, align 4, !dbg !7003
  %idxprom = sext i32 %0 to i64, !dbg !7004
  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom, !dbg !7004
  store i32 4, i32* %arrayidx, align 4, !dbg !7005
  %1 = load i32, i32* %list_end, align 4, !dbg !7006
  %inc = add nsw i32 %1, 1, !dbg !7006
  store i32 %inc, i32* %list_end, align 4, !dbg !7006
  %idxprom1 = sext i32 %1 to i64, !dbg !7007
  %arrayidx2 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom1, !dbg !7007
  store i32 0, i32* %arrayidx2, align 4, !dbg !7008
  %2 = load i32, i32* %list_end, align 4, !dbg !7009
  %idxprom3 = sext i32 %2 to i64, !dbg !7010
  %arrayidx4 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom3, !dbg !7010
  store i32 24, i32* %arrayidx4, align 4, !dbg !7011
  %3 = load i32, i32* %list_end, align 4, !dbg !7012
  %inc5 = add nsw i32 %3, 1, !dbg !7012
  store i32 %inc5, i32* %list_end, align 4, !dbg !7012
  %idxprom6 = sext i32 %3 to i64, !dbg !7013
  %arrayidx7 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom6, !dbg !7013
  store i32 0, i32* %arrayidx7, align 4, !dbg !7014
  %4 = load i32, i32* %list_end, align 4, !dbg !7015
  %idxprom8 = sext i32 %4 to i64, !dbg !7016
  %arrayidx9 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom8, !dbg !7016
  store i32 44, i32* %arrayidx9, align 4, !dbg !7017
  %5 = load i32, i32* %list_end, align 4, !dbg !7018
  %inc10 = add nsw i32 %5, 1, !dbg !7018
  store i32 %inc10, i32* %list_end, align 4, !dbg !7018
  %idxprom11 = sext i32 %5 to i64, !dbg !7019
  %arrayidx12 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom11, !dbg !7019
  store i32 0, i32* %arrayidx12, align 4, !dbg !7020
  %6 = load i32, i32* %list_end, align 4, !dbg !7021
  %idxprom13 = sext i32 %6 to i64, !dbg !7022
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom13, !dbg !7022
  store i32 1, i32* %arrayidx14, align 4, !dbg !7023
  %7 = load i32, i32* %list_end, align 4, !dbg !7024
  %inc15 = add nsw i32 %7, 1, !dbg !7024
  store i32 %inc15, i32* %list_end, align 4, !dbg !7024
  %idxprom16 = sext i32 %7 to i64, !dbg !7025
  %arrayidx17 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom16, !dbg !7025
  store i32 3, i32* %arrayidx17, align 4, !dbg !7026
  %8 = load i32, i32* %list_end, align 4, !dbg !7027
  %idxprom18 = sext i32 %8 to i64, !dbg !7028
  %arrayidx19 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom18, !dbg !7028
  store i32 2, i32* %arrayidx19, align 4, !dbg !7029
  %9 = load i32, i32* %list_end, align 4, !dbg !7030
  %inc20 = add nsw i32 %9, 1, !dbg !7030
  store i32 %inc20, i32* %list_end, align 4, !dbg !7030
  %idxprom21 = sext i32 %9 to i64, !dbg !7031
  %arrayidx22 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom21, !dbg !7031
  store i32 3, i32* %arrayidx22, align 4, !dbg !7032
  %10 = load i32, i32* %list_end, align 4, !dbg !7033
  %idxprom23 = sext i32 %10 to i64, !dbg !7034
  %arrayidx24 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom23, !dbg !7034
  store i32 3, i32* %arrayidx24, align 4, !dbg !7035
  %11 = load i32, i32* %list_end, align 4, !dbg !7036
  %inc25 = add nsw i32 %11, 1, !dbg !7036
  store i32 %inc25, i32* %list_end, align 4, !dbg !7036
  %idxprom26 = sext i32 %11 to i64, !dbg !7037
  %arrayidx27 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom26, !dbg !7037
  store i32 3, i32* %arrayidx27, align 4, !dbg !7038
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7039
  %call = call i32 @get_bits(%struct.GetBitContext* %12, i32 4), !dbg !7041
  %sub = sub i32 %call, 1, !dbg !7042
  store i32 %sub, i32* %bits, align 4, !dbg !7043
  br label %for.cond, !dbg !7044

for.cond:                                         ; preds = %for.inc127, %entry
  %13 = load i32, i32* %bits, align 4, !dbg !7045
  %cmp = icmp sge i32 %13, 0, !dbg !7048
  br i1 %cmp, label %for.body, label %for.end129, !dbg !7049

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %list_start, align 4, !dbg !7050
  store i32 %14, i32* %list_pos, align 4, !dbg !7052
  br label %while.cond, !dbg !7053

while.cond:                                       ; preds = %sw.epilog, %if.then, %for.body
  %15 = load i32, i32* %list_pos, align 4, !dbg !7054
  %16 = load i32, i32* %list_end, align 4, !dbg !7056
  %cmp28 = icmp slt i32 %15, %16, !dbg !7057
  br i1 %cmp28, label %while.body, label %while.end, !dbg !7058

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %list_pos, align 4, !dbg !7059
  %idxprom29 = sext i32 %17 to i64, !dbg !7062
  %arrayidx30 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom29, !dbg !7062
  %18 = load i32, i32* %arrayidx30, align 4, !dbg !7062
  %19 = load i32, i32* %list_pos, align 4, !dbg !7063
  %idxprom31 = sext i32 %19 to i64, !dbg !7064
  %arrayidx32 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom31, !dbg !7064
  %20 = load i32, i32* %arrayidx32, align 4, !dbg !7064
  %or = or i32 %18, %20, !dbg !7065
  %tobool = icmp ne i32 %or, 0, !dbg !7065
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7066

lor.lhs.false:                                    ; preds = %while.body
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7067
  %call33 = call i32 @get_bits1(%struct.GetBitContext* %21), !dbg !7069
  %tobool34 = icmp ne i32 %call33, 0, !dbg !7069
  br i1 %tobool34, label %if.end, label %if.then, !dbg !7070

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %22 = load i32, i32* %list_pos, align 4, !dbg !7071
  %inc35 = add nsw i32 %22, 1, !dbg !7071
  store i32 %inc35, i32* %list_pos, align 4, !dbg !7071
  br label %while.cond, !dbg !7073, !llvm.loop !7074

if.end:                                           ; preds = %lor.lhs.false
  %23 = load i32, i32* %list_pos, align 4, !dbg !7075
  %idxprom36 = sext i32 %23 to i64, !dbg !7076
  %arrayidx37 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom36, !dbg !7076
  %24 = load i32, i32* %arrayidx37, align 4, !dbg !7076
  store i32 %24, i32* %ccoef, align 4, !dbg !7077
  %25 = load i32, i32* %list_pos, align 4, !dbg !7078
  %idxprom38 = sext i32 %25 to i64, !dbg !7079
  %arrayidx39 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom38, !dbg !7079
  %26 = load i32, i32* %arrayidx39, align 4, !dbg !7079
  store i32 %26, i32* %mode, align 4, !dbg !7080
  %27 = load i32, i32* %mode, align 4, !dbg !7081
  switch i32 %27, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb44
    i32 1, label %sw.bb85
    i32 3, label %sw.bb100
  ], !dbg !7082

sw.bb:                                            ; preds = %if.end
  %28 = load i32, i32* %ccoef, align 4, !dbg !7083
  %add = add nsw i32 %28, 4, !dbg !7085
  %29 = load i32, i32* %list_pos, align 4, !dbg !7086
  %idxprom40 = sext i32 %29 to i64, !dbg !7087
  %arrayidx41 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom40, !dbg !7087
  store i32 %add, i32* %arrayidx41, align 4, !dbg !7088
  %30 = load i32, i32* %list_pos, align 4, !dbg !7089
  %idxprom42 = sext i32 %30 to i64, !dbg !7090
  %arrayidx43 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom42, !dbg !7090
  store i32 1, i32* %arrayidx43, align 4, !dbg !7091
  br label %sw.bb44, !dbg !7090

sw.bb44:                                          ; preds = %if.end, %sw.bb
  %31 = load i32, i32* %mode, align 4, !dbg !7092
  %cmp45 = icmp eq i32 %31, 2, !dbg !7094
  br i1 %cmp45, label %if.then46, label %if.end52, !dbg !7095

if.then46:                                        ; preds = %sw.bb44
  %32 = load i32, i32* %list_pos, align 4, !dbg !7096
  %idxprom47 = sext i32 %32 to i64, !dbg !7098
  %arrayidx48 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom47, !dbg !7098
  store i32 0, i32* %arrayidx48, align 4, !dbg !7099
  %33 = load i32, i32* %list_pos, align 4, !dbg !7100
  %inc49 = add nsw i32 %33, 1, !dbg !7100
  store i32 %inc49, i32* %list_pos, align 4, !dbg !7100
  %idxprom50 = sext i32 %33 to i64, !dbg !7101
  %arrayidx51 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom50, !dbg !7101
  store i32 0, i32* %arrayidx51, align 4, !dbg !7102
  br label %if.end52, !dbg !7103

if.end52:                                         ; preds = %if.then46, %sw.bb44
  store i32 0, i32* %i, align 4, !dbg !7104
  br label %for.cond53, !dbg !7106

for.cond53:                                       ; preds = %for.inc, %if.end52
  %34 = load i32, i32* %i, align 4, !dbg !7107
  %cmp54 = icmp slt i32 %34, 4, !dbg !7110
  br i1 %cmp54, label %for.body55, label %for.end, !dbg !7111

for.body55:                                       ; preds = %for.cond53
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7112
  %call56 = call i32 @get_bits1(%struct.GetBitContext* %35), !dbg !7115
  %tobool57 = icmp ne i32 %call56, 0, !dbg !7115
  br i1 %tobool57, label %if.then58, label %if.else, !dbg !7116

if.then58:                                        ; preds = %for.body55
  %36 = load i32, i32* %ccoef, align 4, !dbg !7117
  %37 = load i32, i32* %list_start, align 4, !dbg !7119
  %dec = add nsw i32 %37, -1, !dbg !7119
  store i32 %dec, i32* %list_start, align 4, !dbg !7119
  %idxprom59 = sext i32 %dec to i64, !dbg !7120
  %arrayidx60 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom59, !dbg !7120
  store i32 %36, i32* %arrayidx60, align 4, !dbg !7121
  %38 = load i32, i32* %list_start, align 4, !dbg !7122
  %idxprom61 = sext i32 %38 to i64, !dbg !7123
  %arrayidx62 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom61, !dbg !7123
  store i32 3, i32* %arrayidx62, align 4, !dbg !7124
  br label %if.end82, !dbg !7125

if.else:                                          ; preds = %for.body55
  %39 = load i32, i32* %bits, align 4, !dbg !7126
  %tobool63 = icmp ne i32 %39, 0, !dbg !7126
  br i1 %tobool63, label %if.else67, label %if.then64, !dbg !7129

if.then64:                                        ; preds = %if.else
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7130
  %call65 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !7132
  %shl = shl i32 %call65, 1, !dbg !7133
  %sub66 = sub i32 1, %shl, !dbg !7134
  store i32 %sub66, i32* %t, align 4, !dbg !7135
  br label %if.end74, !dbg !7136

if.else67:                                        ; preds = %if.else
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7137
  %42 = load i32, i32* %bits, align 4, !dbg !7139
  %call68 = call i32 @get_bits(%struct.GetBitContext* %41, i32 %42), !dbg !7140
  %43 = load i32, i32* %bits, align 4, !dbg !7141
  %shl69 = shl i32 1, %43, !dbg !7142
  %or70 = or i32 %call68, %shl69, !dbg !7143
  store i32 %or70, i32* %t, align 4, !dbg !7144
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7145
  %call71 = call i32 @get_bits1(%struct.GetBitContext* %44), !dbg !7146
  %sub72 = sub i32 0, %call71, !dbg !7147
  store i32 %sub72, i32* %sign, align 4, !dbg !7148
  %45 = load i32, i32* %t, align 4, !dbg !7149
  %46 = load i32, i32* %sign, align 4, !dbg !7150
  %xor = xor i32 %45, %46, !dbg !7151
  %47 = load i32, i32* %sign, align 4, !dbg !7152
  %sub73 = sub nsw i32 %xor, %47, !dbg !7153
  store i32 %sub73, i32* %t, align 4, !dbg !7154
  br label %if.end74

if.end74:                                         ; preds = %if.else67, %if.then64
  %48 = load i32, i32* %t, align 4, !dbg !7155
  %49 = load i32, i32* %ccoef, align 4, !dbg !7156
  %idxprom75 = sext i32 %49 to i64, !dbg !7157
  %50 = load i8*, i8** %scan.addr, align 8, !dbg !7157
  %arrayidx76 = getelementptr inbounds i8, i8* %50, i64 %idxprom75, !dbg !7157
  %51 = load i8, i8* %arrayidx76, align 1, !dbg !7157
  %idxprom77 = zext i8 %51 to i64, !dbg !7158
  %52 = load i32*, i32** %block.addr, align 8, !dbg !7158
  %arrayidx78 = getelementptr inbounds i32, i32* %52, i64 %idxprom77, !dbg !7158
  store i32 %48, i32* %arrayidx78, align 4, !dbg !7159
  %53 = load i32, i32* %ccoef, align 4, !dbg !7160
  %54 = load i32, i32* %coef_count, align 4, !dbg !7161
  %inc79 = add nsw i32 %54, 1, !dbg !7161
  store i32 %inc79, i32* %coef_count, align 4, !dbg !7161
  %idxprom80 = sext i32 %54 to i64, !dbg !7162
  %55 = load i32*, i32** %coef_idx.addr, align 8, !dbg !7162
  %arrayidx81 = getelementptr inbounds i32, i32* %55, i64 %idxprom80, !dbg !7162
  store i32 %53, i32* %arrayidx81, align 4, !dbg !7163
  br label %if.end82

if.end82:                                         ; preds = %if.end74, %if.then58
  br label %for.inc, !dbg !7164

for.inc:                                          ; preds = %if.end82
  %56 = load i32, i32* %i, align 4, !dbg !7165
  %inc83 = add nsw i32 %56, 1, !dbg !7165
  store i32 %inc83, i32* %i, align 4, !dbg !7165
  %57 = load i32, i32* %ccoef, align 4, !dbg !7167
  %inc84 = add nsw i32 %57, 1, !dbg !7167
  store i32 %inc84, i32* %ccoef, align 4, !dbg !7167
  br label %for.cond53, !dbg !7168, !llvm.loop !7169

for.end:                                          ; preds = %for.cond53
  br label %sw.epilog, !dbg !7171

sw.bb85:                                          ; preds = %if.end
  %58 = load i32, i32* %list_pos, align 4, !dbg !7172
  %idxprom86 = sext i32 %58 to i64, !dbg !7173
  %arrayidx87 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom86, !dbg !7173
  store i32 2, i32* %arrayidx87, align 4, !dbg !7174
  store i32 0, i32* %i, align 4, !dbg !7175
  br label %for.cond88, !dbg !7177

for.cond88:                                       ; preds = %for.inc97, %sw.bb85
  %59 = load i32, i32* %i, align 4, !dbg !7178
  %cmp89 = icmp slt i32 %59, 3, !dbg !7181
  br i1 %cmp89, label %for.body90, label %for.end99, !dbg !7182

for.body90:                                       ; preds = %for.cond88
  %60 = load i32, i32* %ccoef, align 4, !dbg !7183
  %add91 = add nsw i32 %60, 4, !dbg !7183
  store i32 %add91, i32* %ccoef, align 4, !dbg !7183
  %61 = load i32, i32* %ccoef, align 4, !dbg !7185
  %62 = load i32, i32* %list_end, align 4, !dbg !7186
  %idxprom92 = sext i32 %62 to i64, !dbg !7187
  %arrayidx93 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom92, !dbg !7187
  store i32 %61, i32* %arrayidx93, align 4, !dbg !7188
  %63 = load i32, i32* %list_end, align 4, !dbg !7189
  %inc94 = add nsw i32 %63, 1, !dbg !7189
  store i32 %inc94, i32* %list_end, align 4, !dbg !7189
  %idxprom95 = sext i32 %63 to i64, !dbg !7190
  %arrayidx96 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom95, !dbg !7190
  store i32 2, i32* %arrayidx96, align 4, !dbg !7191
  br label %for.inc97, !dbg !7192

for.inc97:                                        ; preds = %for.body90
  %64 = load i32, i32* %i, align 4, !dbg !7193
  %inc98 = add nsw i32 %64, 1, !dbg !7193
  store i32 %inc98, i32* %i, align 4, !dbg !7193
  br label %for.cond88, !dbg !7195, !llvm.loop !7196

for.end99:                                        ; preds = %for.cond88
  br label %sw.epilog, !dbg !7198

sw.bb100:                                         ; preds = %if.end
  %65 = load i32, i32* %bits, align 4, !dbg !7199
  %tobool101 = icmp ne i32 %65, 0, !dbg !7199
  br i1 %tobool101, label %if.else106, label %if.then102, !dbg !7201

if.then102:                                       ; preds = %sw.bb100
  %66 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7202
  %call103 = call i32 @get_bits1(%struct.GetBitContext* %66), !dbg !7204
  %shl104 = shl i32 %call103, 1, !dbg !7205
  %sub105 = sub i32 1, %shl104, !dbg !7206
  store i32 %sub105, i32* %t, align 4, !dbg !7207
  br label %if.end114, !dbg !7208

if.else106:                                       ; preds = %sw.bb100
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7209
  %68 = load i32, i32* %bits, align 4, !dbg !7211
  %call107 = call i32 @get_bits(%struct.GetBitContext* %67, i32 %68), !dbg !7212
  %69 = load i32, i32* %bits, align 4, !dbg !7213
  %shl108 = shl i32 1, %69, !dbg !7214
  %or109 = or i32 %call107, %shl108, !dbg !7215
  store i32 %or109, i32* %t, align 4, !dbg !7216
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7217
  %call110 = call i32 @get_bits1(%struct.GetBitContext* %70), !dbg !7218
  %sub111 = sub i32 0, %call110, !dbg !7219
  store i32 %sub111, i32* %sign, align 4, !dbg !7220
  %71 = load i32, i32* %t, align 4, !dbg !7221
  %72 = load i32, i32* %sign, align 4, !dbg !7222
  %xor112 = xor i32 %71, %72, !dbg !7223
  %73 = load i32, i32* %sign, align 4, !dbg !7224
  %sub113 = sub nsw i32 %xor112, %73, !dbg !7225
  store i32 %sub113, i32* %t, align 4, !dbg !7226
  br label %if.end114

if.end114:                                        ; preds = %if.else106, %if.then102
  %74 = load i32, i32* %t, align 4, !dbg !7227
  %75 = load i32, i32* %ccoef, align 4, !dbg !7228
  %idxprom115 = sext i32 %75 to i64, !dbg !7229
  %76 = load i8*, i8** %scan.addr, align 8, !dbg !7229
  %arrayidx116 = getelementptr inbounds i8, i8* %76, i64 %idxprom115, !dbg !7229
  %77 = load i8, i8* %arrayidx116, align 1, !dbg !7229
  %idxprom117 = zext i8 %77 to i64, !dbg !7230
  %78 = load i32*, i32** %block.addr, align 8, !dbg !7230
  %arrayidx118 = getelementptr inbounds i32, i32* %78, i64 %idxprom117, !dbg !7230
  store i32 %74, i32* %arrayidx118, align 4, !dbg !7231
  %79 = load i32, i32* %ccoef, align 4, !dbg !7232
  %80 = load i32, i32* %coef_count, align 4, !dbg !7233
  %inc119 = add nsw i32 %80, 1, !dbg !7233
  store i32 %inc119, i32* %coef_count, align 4, !dbg !7233
  %idxprom120 = sext i32 %80 to i64, !dbg !7234
  %81 = load i32*, i32** %coef_idx.addr, align 8, !dbg !7234
  %arrayidx121 = getelementptr inbounds i32, i32* %81, i64 %idxprom120, !dbg !7234
  store i32 %79, i32* %arrayidx121, align 4, !dbg !7235
  %82 = load i32, i32* %list_pos, align 4, !dbg !7236
  %idxprom122 = sext i32 %82 to i64, !dbg !7237
  %arrayidx123 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom122, !dbg !7237
  store i32 0, i32* %arrayidx123, align 4, !dbg !7238
  %83 = load i32, i32* %list_pos, align 4, !dbg !7239
  %inc124 = add nsw i32 %83, 1, !dbg !7239
  store i32 %inc124, i32* %list_pos, align 4, !dbg !7239
  %idxprom125 = sext i32 %83 to i64, !dbg !7240
  %arrayidx126 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom125, !dbg !7240
  store i32 0, i32* %arrayidx126, align 4, !dbg !7241
  br label %sw.epilog, !dbg !7242

sw.epilog:                                        ; preds = %if.end, %if.end114, %for.end99, %for.end
  br label %while.cond, !dbg !7243, !llvm.loop !7074

while.end:                                        ; preds = %while.cond
  br label %for.inc127, !dbg !7245

for.inc127:                                       ; preds = %while.end
  %84 = load i32, i32* %bits, align 4, !dbg !7246
  %dec128 = add nsw i32 %84, -1, !dbg !7246
  store i32 %dec128, i32* %bits, align 4, !dbg !7246
  br label %for.cond, !dbg !7248, !llvm.loop !7249

for.end129:                                       ; preds = %for.cond
  %85 = load i32, i32* %q.addr, align 4, !dbg !7251
  %cmp130 = icmp eq i32 %85, -1, !dbg !7253
  br i1 %cmp130, label %if.then131, label %if.else133, !dbg !7254

if.then131:                                       ; preds = %for.end129
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7255
  %call132 = call i32 @get_bits(%struct.GetBitContext* %86, i32 4), !dbg !7257
  store i32 %call132, i32* %quant_idx, align 4, !dbg !7258
  br label %if.end137, !dbg !7259

if.else133:                                       ; preds = %for.end129
  %87 = load i32, i32* %q.addr, align 4, !dbg !7260
  store i32 %87, i32* %quant_idx, align 4, !dbg !7262
  %88 = load i32, i32* %quant_idx, align 4, !dbg !7263
  %cmp134 = icmp ugt i32 %88, 15, !dbg !7265
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !7266

if.then135:                                       ; preds = %if.else133
  %89 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7267
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %89, i32 0, i32 0, !dbg !7269
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7269
  %91 = bitcast %struct.AVCodecContext* %90 to i8*, !dbg !7267
  %92 = load i32, i32* %quant_idx, align 4, !dbg !7270
  call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i32 0, i32 0), i32 %92), !dbg !7271
  store i32 -1094995529, i32* %retval, align 4, !dbg !7272
  br label %return, !dbg !7272

if.end136:                                        ; preds = %if.else133
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then131
  %93 = load i32, i32* %coef_count, align 4, !dbg !7273
  %94 = load i32*, i32** %coef_count_.addr, align 8, !dbg !7274
  store i32 %93, i32* %94, align 4, !dbg !7275
  %95 = load i32, i32* %quant_idx, align 4, !dbg !7276
  store i32 %95, i32* %retval, align 4, !dbg !7277
  br label %return, !dbg !7277

return:                                           ; preds = %if.end137, %if.then135
  %96 = load i32, i32* %retval, align 4, !dbg !7278
  ret i32 %96, !dbg !7278
}

; Function Attrs: nounwind uwtable
define internal void @unquantize_dct_coeffs(i32* %block, i32* %quant, i32 %coef_count, i32* %coef_idx, i8* %scan) #1 !dbg !7279 {
entry:
  %block.addr = alloca i32*, align 8
  %quant.addr = alloca i32*, align 8
  %coef_count.addr = alloca i32, align 4
  %coef_idx.addr = alloca i32*, align 8
  %scan.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  store i32* %block, i32** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %block.addr, metadata !7283, metadata !1735), !dbg !7284
  store i32* %quant, i32** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quant.addr, metadata !7285, metadata !1735), !dbg !7286
  store i32 %coef_count, i32* %coef_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_count.addr, metadata !7287, metadata !1735), !dbg !7288
  store i32* %coef_idx, i32** %coef_idx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coef_idx.addr, metadata !7289, metadata !1735), !dbg !7290
  store i8* %scan, i8** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scan.addr, metadata !7291, metadata !1735), !dbg !7292
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7293, metadata !1735), !dbg !7294
  %0 = load i32*, i32** %block.addr, align 8, !dbg !7295
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !7295
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7295
  %2 = load i32*, i32** %quant.addr, align 8, !dbg !7296
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !7296
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !7296
  %mul = mul nsw i32 %1, %3, !dbg !7297
  %shr = ashr i32 %mul, 11, !dbg !7298
  %4 = load i32*, i32** %block.addr, align 8, !dbg !7299
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !7299
  store i32 %shr, i32* %arrayidx2, align 4, !dbg !7300
  store i32 0, i32* %i, align 4, !dbg !7301
  br label %for.cond, !dbg !7303

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !7304
  %6 = load i32, i32* %coef_count.addr, align 4, !dbg !7307
  %cmp = icmp slt i32 %5, %6, !dbg !7308
  br i1 %cmp, label %for.body, label %for.end, !dbg !7309

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7310, metadata !1735), !dbg !7312
  %7 = load i32, i32* %i, align 4, !dbg !7313
  %idxprom = sext i32 %7 to i64, !dbg !7314
  %8 = load i32*, i32** %coef_idx.addr, align 8, !dbg !7314
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !7314
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !7314
  store i32 %9, i32* %idx, align 4, !dbg !7312
  %10 = load i32, i32* %idx, align 4, !dbg !7315
  %idxprom4 = sext i32 %10 to i64, !dbg !7316
  %11 = load i8*, i8** %scan.addr, align 8, !dbg !7316
  %arrayidx5 = getelementptr inbounds i8, i8* %11, i64 %idxprom4, !dbg !7316
  %12 = load i8, i8* %arrayidx5, align 1, !dbg !7316
  %idxprom6 = zext i8 %12 to i64, !dbg !7317
  %13 = load i32*, i32** %block.addr, align 8, !dbg !7317
  %arrayidx7 = getelementptr inbounds i32, i32* %13, i64 %idxprom6, !dbg !7317
  %14 = load i32, i32* %arrayidx7, align 4, !dbg !7317
  %15 = load i32, i32* %idx, align 4, !dbg !7318
  %idxprom8 = sext i32 %15 to i64, !dbg !7319
  %16 = load i32*, i32** %quant.addr, align 8, !dbg !7319
  %arrayidx9 = getelementptr inbounds i32, i32* %16, i64 %idxprom8, !dbg !7319
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !7319
  %mul10 = mul nsw i32 %14, %17, !dbg !7320
  %shr11 = ashr i32 %mul10, 11, !dbg !7321
  %18 = load i32, i32* %idx, align 4, !dbg !7322
  %idxprom12 = sext i32 %18 to i64, !dbg !7323
  %19 = load i8*, i8** %scan.addr, align 8, !dbg !7323
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i64 %idxprom12, !dbg !7323
  %20 = load i8, i8* %arrayidx13, align 1, !dbg !7323
  %idxprom14 = zext i8 %20 to i64, !dbg !7324
  %21 = load i32*, i32** %block.addr, align 8, !dbg !7324
  %arrayidx15 = getelementptr inbounds i32, i32* %21, i64 %idxprom14, !dbg !7324
  store i32 %shr11, i32* %arrayidx15, align 4, !dbg !7325
  br label %for.inc, !dbg !7326

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !7327
  %inc = add nsw i32 %22, 1, !dbg !7327
  store i32 %inc, i32* %i, align 4, !dbg !7327
  br label %for.cond, !dbg !7329, !llvm.loop !7330

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7332
}

; Function Attrs: nounwind uwtable
define internal i32 @bink_put_pixels(%struct.BinkContext* %c, i8* %dst, i8* %prev, i32 %stride, i8* %ref_start, i8* %ref_end) #1 !dbg !7333 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %dst.addr = alloca i8*, align 8
  %prev.addr = alloca i8*, align 8
  %stride.addr = alloca i32, align 4
  %ref_start.addr = alloca i8*, align 8
  %ref_end.addr = alloca i8*, align 8
  %xoff = alloca i32, align 4
  %yoff = alloca i32, align 4
  %ref = alloca i8*, align 8
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !7336, metadata !1735), !dbg !7337
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7338, metadata !1735), !dbg !7339
  store i8* %prev, i8** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev.addr, metadata !7340, metadata !1735), !dbg !7341
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7342, metadata !1735), !dbg !7343
  store i8* %ref_start, i8** %ref_start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ref_start.addr, metadata !7344, metadata !1735), !dbg !7345
  store i8* %ref_end, i8** %ref_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ref_end.addr, metadata !7346, metadata !1735), !dbg !7347
  call void @llvm.dbg.declare(metadata i32* %xoff, metadata !7348, metadata !1735), !dbg !7349
  %0 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7350
  %call = call i32 @get_value(%struct.BinkContext* %0, i32 4), !dbg !7351
  store i32 %call, i32* %xoff, align 4, !dbg !7349
  call void @llvm.dbg.declare(metadata i32* %yoff, metadata !7352, metadata !1735), !dbg !7353
  %1 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7354
  %call1 = call i32 @get_value(%struct.BinkContext* %1, i32 5), !dbg !7355
  store i32 %call1, i32* %yoff, align 4, !dbg !7353
  call void @llvm.dbg.declare(metadata i8** %ref, metadata !7356, metadata !1735), !dbg !7357
  %2 = load i8*, i8** %prev.addr, align 8, !dbg !7358
  %3 = load i32, i32* %xoff, align 4, !dbg !7359
  %idx.ext = sext i32 %3 to i64, !dbg !7360
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7360
  %4 = load i32, i32* %yoff, align 4, !dbg !7361
  %5 = load i32, i32* %stride.addr, align 4, !dbg !7362
  %mul = mul nsw i32 %4, %5, !dbg !7363
  %idx.ext2 = sext i32 %mul to i64, !dbg !7364
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext2, !dbg !7364
  store i8* %add.ptr3, i8** %ref, align 8, !dbg !7357
  %6 = load i8*, i8** %ref, align 8, !dbg !7365
  %7 = load i8*, i8** %ref_start.addr, align 8, !dbg !7367
  %cmp = icmp ult i8* %6, %7, !dbg !7368
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7369

lor.lhs.false:                                    ; preds = %entry
  %8 = load i8*, i8** %ref, align 8, !dbg !7370
  %9 = load i8*, i8** %ref_end.addr, align 8, !dbg !7372
  %cmp4 = icmp ugt i8* %8, %9, !dbg !7373
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7374

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7375
  %avctx = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %10, i32 0, i32 0, !dbg !7377
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7377
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !7375
  %13 = load i32, i32* %xoff, align 4, !dbg !7378
  %14 = load i32, i32* %yoff, align 4, !dbg !7379
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i32 0, i32 0), i32 %13, i32 %14), !dbg !7380
  store i32 -1094995529, i32* %retval, align 4, !dbg !7381
  br label %return, !dbg !7381

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7382
  %hdsp = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %15, i32 0, i32 2, !dbg !7383
  %put_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp, i32 0, i32 0, !dbg !7384
  %arrayidx = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab, i64 0, i64 1, !dbg !7382
  %arrayidx5 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx, i64 0, i64 0, !dbg !7382
  %16 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx5, align 8, !dbg !7382
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !7385
  %18 = load i8*, i8** %ref, align 8, !dbg !7386
  %19 = load i32, i32* %stride.addr, align 4, !dbg !7387
  %conv = sext i32 %19 to i64, !dbg !7387
  call void %16(i8* %17, i8* %18, i64 %conv, i32 8), !dbg !7382
  store i32 0, i32* %retval, align 4, !dbg !7388
  br label %return, !dbg !7388

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7389
  ret i32 %20, !dbg !7389
}

; Function Attrs: nounwind uwtable
define internal i32 @read_residue(%struct.GetBitContext* %gb, i16* %block, i32 %masks_count) #1 !dbg !7390 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %block.addr = alloca i16*, align 8
  %masks_count.addr = alloca i32, align 4
  %coef_list = alloca [128 x i32], align 16
  %mode_list = alloca [128 x i32], align 16
  %i = alloca i32, align 4
  %sign = alloca i32, align 4
  %mask = alloca i32, align 4
  %ccoef = alloca i32, align 4
  %mode = alloca i32, align 4
  %list_start = alloca i32, align 4
  %list_end = alloca i32, align 4
  %list_pos = alloca i32, align 4
  %nz_coeff = alloca [64 x i32], align 16
  %nz_coeff_count = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7393, metadata !1735), !dbg !7394
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !7395, metadata !1735), !dbg !7396
  store i32 %masks_count, i32* %masks_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %masks_count.addr, metadata !7397, metadata !1735), !dbg !7398
  call void @llvm.dbg.declare(metadata [128 x i32]* %coef_list, metadata !7399, metadata !1735), !dbg !7400
  call void @llvm.dbg.declare(metadata [128 x i32]* %mode_list, metadata !7401, metadata !1735), !dbg !7402
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7403, metadata !1735), !dbg !7404
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !7405, metadata !1735), !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7407, metadata !1735), !dbg !7408
  call void @llvm.dbg.declare(metadata i32* %ccoef, metadata !7409, metadata !1735), !dbg !7410
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7411, metadata !1735), !dbg !7412
  call void @llvm.dbg.declare(metadata i32* %list_start, metadata !7413, metadata !1735), !dbg !7414
  store i32 64, i32* %list_start, align 4, !dbg !7414
  call void @llvm.dbg.declare(metadata i32* %list_end, metadata !7415, metadata !1735), !dbg !7416
  store i32 64, i32* %list_end, align 4, !dbg !7416
  call void @llvm.dbg.declare(metadata i32* %list_pos, metadata !7417, metadata !1735), !dbg !7418
  call void @llvm.dbg.declare(metadata [64 x i32]* %nz_coeff, metadata !7419, metadata !1735), !dbg !7420
  call void @llvm.dbg.declare(metadata i32* %nz_coeff_count, metadata !7421, metadata !1735), !dbg !7422
  store i32 0, i32* %nz_coeff_count, align 4, !dbg !7422
  %0 = load i32, i32* %list_end, align 4, !dbg !7423
  %idxprom = sext i32 %0 to i64, !dbg !7424
  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom, !dbg !7424
  store i32 4, i32* %arrayidx, align 4, !dbg !7425
  %1 = load i32, i32* %list_end, align 4, !dbg !7426
  %inc = add nsw i32 %1, 1, !dbg !7426
  store i32 %inc, i32* %list_end, align 4, !dbg !7426
  %idxprom1 = sext i32 %1 to i64, !dbg !7427
  %arrayidx2 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom1, !dbg !7427
  store i32 0, i32* %arrayidx2, align 4, !dbg !7428
  %2 = load i32, i32* %list_end, align 4, !dbg !7429
  %idxprom3 = sext i32 %2 to i64, !dbg !7430
  %arrayidx4 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom3, !dbg !7430
  store i32 24, i32* %arrayidx4, align 4, !dbg !7431
  %3 = load i32, i32* %list_end, align 4, !dbg !7432
  %inc5 = add nsw i32 %3, 1, !dbg !7432
  store i32 %inc5, i32* %list_end, align 4, !dbg !7432
  %idxprom6 = sext i32 %3 to i64, !dbg !7433
  %arrayidx7 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom6, !dbg !7433
  store i32 0, i32* %arrayidx7, align 4, !dbg !7434
  %4 = load i32, i32* %list_end, align 4, !dbg !7435
  %idxprom8 = sext i32 %4 to i64, !dbg !7436
  %arrayidx9 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom8, !dbg !7436
  store i32 44, i32* %arrayidx9, align 4, !dbg !7437
  %5 = load i32, i32* %list_end, align 4, !dbg !7438
  %inc10 = add nsw i32 %5, 1, !dbg !7438
  store i32 %inc10, i32* %list_end, align 4, !dbg !7438
  %idxprom11 = sext i32 %5 to i64, !dbg !7439
  %arrayidx12 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom11, !dbg !7439
  store i32 0, i32* %arrayidx12, align 4, !dbg !7440
  %6 = load i32, i32* %list_end, align 4, !dbg !7441
  %idxprom13 = sext i32 %6 to i64, !dbg !7442
  %arrayidx14 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom13, !dbg !7442
  store i32 0, i32* %arrayidx14, align 4, !dbg !7443
  %7 = load i32, i32* %list_end, align 4, !dbg !7444
  %inc15 = add nsw i32 %7, 1, !dbg !7444
  store i32 %inc15, i32* %list_end, align 4, !dbg !7444
  %idxprom16 = sext i32 %7 to i64, !dbg !7445
  %arrayidx17 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom16, !dbg !7445
  store i32 2, i32* %arrayidx17, align 4, !dbg !7446
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7447
  %call = call i32 @get_bits(%struct.GetBitContext* %8, i32 3), !dbg !7449
  %shl = shl i32 1, %call, !dbg !7450
  store i32 %shl, i32* %mask, align 4, !dbg !7451
  br label %for.cond, !dbg !7452

for.cond:                                         ; preds = %for.inc157, %entry
  %9 = load i32, i32* %mask, align 4, !dbg !7453
  %tobool = icmp ne i32 %9, 0, !dbg !7456
  br i1 %tobool, label %for.body, label %for.end158, !dbg !7456

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7457
  br label %for.cond18, !dbg !7460

for.cond18:                                       ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7461
  %11 = load i32, i32* %nz_coeff_count, align 4, !dbg !7464
  %cmp = icmp slt i32 %10, %11, !dbg !7465
  br i1 %cmp, label %for.body19, label %for.end, !dbg !7466

for.body19:                                       ; preds = %for.cond18
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7467
  %call20 = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !7470
  %tobool21 = icmp ne i32 %call20, 0, !dbg !7470
  br i1 %tobool21, label %if.end, label %if.then, !dbg !7471

if.then:                                          ; preds = %for.body19
  br label %for.inc, !dbg !7472

if.end:                                           ; preds = %for.body19
  %13 = load i32, i32* %i, align 4, !dbg !7473
  %idxprom22 = sext i32 %13 to i64, !dbg !7475
  %arrayidx23 = getelementptr inbounds [64 x i32], [64 x i32]* %nz_coeff, i64 0, i64 %idxprom22, !dbg !7475
  %14 = load i32, i32* %arrayidx23, align 4, !dbg !7475
  %idxprom24 = sext i32 %14 to i64, !dbg !7476
  %15 = load i16*, i16** %block.addr, align 8, !dbg !7476
  %arrayidx25 = getelementptr inbounds i16, i16* %15, i64 %idxprom24, !dbg !7476
  %16 = load i16, i16* %arrayidx25, align 2, !dbg !7476
  %conv = sext i16 %16 to i32, !dbg !7476
  %cmp26 = icmp slt i32 %conv, 0, !dbg !7477
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !7478

if.then28:                                        ; preds = %if.end
  %17 = load i32, i32* %mask, align 4, !dbg !7479
  %18 = load i32, i32* %i, align 4, !dbg !7480
  %idxprom29 = sext i32 %18 to i64, !dbg !7481
  %arrayidx30 = getelementptr inbounds [64 x i32], [64 x i32]* %nz_coeff, i64 0, i64 %idxprom29, !dbg !7481
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !7481
  %idxprom31 = sext i32 %19 to i64, !dbg !7482
  %20 = load i16*, i16** %block.addr, align 8, !dbg !7482
  %arrayidx32 = getelementptr inbounds i16, i16* %20, i64 %idxprom31, !dbg !7482
  %21 = load i16, i16* %arrayidx32, align 2, !dbg !7483
  %conv33 = sext i16 %21 to i32, !dbg !7483
  %sub = sub nsw i32 %conv33, %17, !dbg !7483
  %conv34 = trunc i32 %sub to i16, !dbg !7483
  store i16 %conv34, i16* %arrayidx32, align 2, !dbg !7483
  br label %if.end41, !dbg !7482

if.else:                                          ; preds = %if.end
  %22 = load i32, i32* %mask, align 4, !dbg !7484
  %23 = load i32, i32* %i, align 4, !dbg !7485
  %idxprom35 = sext i32 %23 to i64, !dbg !7486
  %arrayidx36 = getelementptr inbounds [64 x i32], [64 x i32]* %nz_coeff, i64 0, i64 %idxprom35, !dbg !7486
  %24 = load i32, i32* %arrayidx36, align 4, !dbg !7486
  %idxprom37 = sext i32 %24 to i64, !dbg !7487
  %25 = load i16*, i16** %block.addr, align 8, !dbg !7487
  %arrayidx38 = getelementptr inbounds i16, i16* %25, i64 %idxprom37, !dbg !7487
  %26 = load i16, i16* %arrayidx38, align 2, !dbg !7488
  %conv39 = sext i16 %26 to i32, !dbg !7488
  %add = add nsw i32 %conv39, %22, !dbg !7488
  %conv40 = trunc i32 %add to i16, !dbg !7488
  store i16 %conv40, i16* %arrayidx38, align 2, !dbg !7488
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then28
  %27 = load i32, i32* %masks_count.addr, align 4, !dbg !7489
  %dec = add nsw i32 %27, -1, !dbg !7489
  store i32 %dec, i32* %masks_count.addr, align 4, !dbg !7489
  %28 = load i32, i32* %masks_count.addr, align 4, !dbg !7490
  %cmp42 = icmp slt i32 %28, 0, !dbg !7492
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7493

if.then44:                                        ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !7494
  br label %return, !dbg !7494

if.end45:                                         ; preds = %if.end41
  br label %for.inc, !dbg !7495

for.inc:                                          ; preds = %if.end45, %if.then
  %29 = load i32, i32* %i, align 4, !dbg !7496
  %inc46 = add nsw i32 %29, 1, !dbg !7496
  store i32 %inc46, i32* %i, align 4, !dbg !7496
  br label %for.cond18, !dbg !7498, !llvm.loop !7499

for.end:                                          ; preds = %for.cond18
  %30 = load i32, i32* %list_start, align 4, !dbg !7501
  store i32 %30, i32* %list_pos, align 4, !dbg !7502
  br label %while.cond, !dbg !7503

while.cond:                                       ; preds = %sw.epilog, %if.then56, %for.end
  %31 = load i32, i32* %list_pos, align 4, !dbg !7504
  %32 = load i32, i32* %list_end, align 4, !dbg !7506
  %cmp47 = icmp slt i32 %31, %32, !dbg !7507
  br i1 %cmp47, label %while.body, label %while.end, !dbg !7508

while.body:                                       ; preds = %while.cond
  %33 = load i32, i32* %list_pos, align 4, !dbg !7509
  %idxprom49 = sext i32 %33 to i64, !dbg !7512
  %arrayidx50 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom49, !dbg !7512
  %34 = load i32, i32* %arrayidx50, align 4, !dbg !7512
  %35 = load i32, i32* %list_pos, align 4, !dbg !7513
  %idxprom51 = sext i32 %35 to i64, !dbg !7514
  %arrayidx52 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom51, !dbg !7514
  %36 = load i32, i32* %arrayidx52, align 4, !dbg !7514
  %or = or i32 %34, %36, !dbg !7515
  %tobool53 = icmp ne i32 %or, 0, !dbg !7515
  br i1 %tobool53, label %lor.lhs.false, label %if.then56, !dbg !7516

lor.lhs.false:                                    ; preds = %while.body
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7517
  %call54 = call i32 @get_bits1(%struct.GetBitContext* %37), !dbg !7519
  %tobool55 = icmp ne i32 %call54, 0, !dbg !7519
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !7520

if.then56:                                        ; preds = %lor.lhs.false, %while.body
  %38 = load i32, i32* %list_pos, align 4, !dbg !7521
  %inc57 = add nsw i32 %38, 1, !dbg !7521
  store i32 %inc57, i32* %list_pos, align 4, !dbg !7521
  br label %while.cond, !dbg !7523, !llvm.loop !7524

if.end58:                                         ; preds = %lor.lhs.false
  %39 = load i32, i32* %list_pos, align 4, !dbg !7525
  %idxprom59 = sext i32 %39 to i64, !dbg !7526
  %arrayidx60 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom59, !dbg !7526
  %40 = load i32, i32* %arrayidx60, align 4, !dbg !7526
  store i32 %40, i32* %ccoef, align 4, !dbg !7527
  %41 = load i32, i32* %list_pos, align 4, !dbg !7528
  %idxprom61 = sext i32 %41 to i64, !dbg !7529
  %arrayidx62 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom61, !dbg !7529
  %42 = load i32, i32* %arrayidx62, align 4, !dbg !7529
  store i32 %42, i32* %mode, align 4, !dbg !7530
  %43 = load i32, i32* %mode, align 4, !dbg !7531
  switch i32 %43, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb68
    i32 1, label %sw.bb115
    i32 3, label %sw.bb131
  ], !dbg !7532

sw.bb:                                            ; preds = %if.end58
  %44 = load i32, i32* %ccoef, align 4, !dbg !7533
  %add63 = add nsw i32 %44, 4, !dbg !7535
  %45 = load i32, i32* %list_pos, align 4, !dbg !7536
  %idxprom64 = sext i32 %45 to i64, !dbg !7537
  %arrayidx65 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom64, !dbg !7537
  store i32 %add63, i32* %arrayidx65, align 4, !dbg !7538
  %46 = load i32, i32* %list_pos, align 4, !dbg !7539
  %idxprom66 = sext i32 %46 to i64, !dbg !7540
  %arrayidx67 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom66, !dbg !7540
  store i32 1, i32* %arrayidx67, align 4, !dbg !7541
  br label %sw.bb68, !dbg !7540

sw.bb68:                                          ; preds = %if.end58, %sw.bb
  %47 = load i32, i32* %mode, align 4, !dbg !7542
  %cmp69 = icmp eq i32 %47, 2, !dbg !7544
  br i1 %cmp69, label %if.then71, label %if.end77, !dbg !7545

if.then71:                                        ; preds = %sw.bb68
  %48 = load i32, i32* %list_pos, align 4, !dbg !7546
  %idxprom72 = sext i32 %48 to i64, !dbg !7548
  %arrayidx73 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom72, !dbg !7548
  store i32 0, i32* %arrayidx73, align 4, !dbg !7549
  %49 = load i32, i32* %list_pos, align 4, !dbg !7550
  %inc74 = add nsw i32 %49, 1, !dbg !7550
  store i32 %inc74, i32* %list_pos, align 4, !dbg !7550
  %idxprom75 = sext i32 %49 to i64, !dbg !7551
  %arrayidx76 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom75, !dbg !7551
  store i32 0, i32* %arrayidx76, align 4, !dbg !7552
  br label %if.end77, !dbg !7553

if.end77:                                         ; preds = %if.then71, %sw.bb68
  store i32 0, i32* %i, align 4, !dbg !7554
  br label %for.cond78, !dbg !7556

for.cond78:                                       ; preds = %for.inc111, %if.end77
  %50 = load i32, i32* %i, align 4, !dbg !7557
  %cmp79 = icmp slt i32 %50, 4, !dbg !7560
  br i1 %cmp79, label %for.body81, label %for.end114, !dbg !7561

for.body81:                                       ; preds = %for.cond78
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7562
  %call82 = call i32 @get_bits1(%struct.GetBitContext* %51), !dbg !7565
  %tobool83 = icmp ne i32 %call82, 0, !dbg !7565
  br i1 %tobool83, label %if.then84, label %if.else90, !dbg !7566

if.then84:                                        ; preds = %for.body81
  %52 = load i32, i32* %ccoef, align 4, !dbg !7567
  %53 = load i32, i32* %list_start, align 4, !dbg !7569
  %dec85 = add nsw i32 %53, -1, !dbg !7569
  store i32 %dec85, i32* %list_start, align 4, !dbg !7569
  %idxprom86 = sext i32 %dec85 to i64, !dbg !7570
  %arrayidx87 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom86, !dbg !7570
  store i32 %52, i32* %arrayidx87, align 4, !dbg !7571
  %54 = load i32, i32* %list_start, align 4, !dbg !7572
  %idxprom88 = sext i32 %54 to i64, !dbg !7573
  %arrayidx89 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom88, !dbg !7573
  store i32 3, i32* %arrayidx89, align 4, !dbg !7574
  br label %if.end110, !dbg !7575

if.else90:                                        ; preds = %for.body81
  %55 = load i32, i32* %ccoef, align 4, !dbg !7576
  %idxprom91 = sext i32 %55 to i64, !dbg !7578
  %arrayidx92 = getelementptr inbounds [64 x i8], [64 x i8]* @bink_scan, i64 0, i64 %idxprom91, !dbg !7578
  %56 = load i8, i8* %arrayidx92, align 1, !dbg !7578
  %conv93 = zext i8 %56 to i32, !dbg !7578
  %57 = load i32, i32* %nz_coeff_count, align 4, !dbg !7579
  %inc94 = add nsw i32 %57, 1, !dbg !7579
  store i32 %inc94, i32* %nz_coeff_count, align 4, !dbg !7579
  %idxprom95 = sext i32 %57 to i64, !dbg !7580
  %arrayidx96 = getelementptr inbounds [64 x i32], [64 x i32]* %nz_coeff, i64 0, i64 %idxprom95, !dbg !7580
  store i32 %conv93, i32* %arrayidx96, align 4, !dbg !7581
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7582
  %call97 = call i32 @get_bits1(%struct.GetBitContext* %58), !dbg !7583
  %sub98 = sub i32 0, %call97, !dbg !7584
  store i32 %sub98, i32* %sign, align 4, !dbg !7585
  %59 = load i32, i32* %mask, align 4, !dbg !7586
  %60 = load i32, i32* %sign, align 4, !dbg !7587
  %xor = xor i32 %59, %60, !dbg !7588
  %61 = load i32, i32* %sign, align 4, !dbg !7589
  %sub99 = sub nsw i32 %xor, %61, !dbg !7590
  %conv100 = trunc i32 %sub99 to i16, !dbg !7591
  %62 = load i32, i32* %ccoef, align 4, !dbg !7592
  %idxprom101 = sext i32 %62 to i64, !dbg !7593
  %arrayidx102 = getelementptr inbounds [64 x i8], [64 x i8]* @bink_scan, i64 0, i64 %idxprom101, !dbg !7593
  %63 = load i8, i8* %arrayidx102, align 1, !dbg !7593
  %idxprom103 = zext i8 %63 to i64, !dbg !7594
  %64 = load i16*, i16** %block.addr, align 8, !dbg !7594
  %arrayidx104 = getelementptr inbounds i16, i16* %64, i64 %idxprom103, !dbg !7594
  store i16 %conv100, i16* %arrayidx104, align 2, !dbg !7595
  %65 = load i32, i32* %masks_count.addr, align 4, !dbg !7596
  %dec105 = add nsw i32 %65, -1, !dbg !7596
  store i32 %dec105, i32* %masks_count.addr, align 4, !dbg !7596
  %66 = load i32, i32* %masks_count.addr, align 4, !dbg !7597
  %cmp106 = icmp slt i32 %66, 0, !dbg !7599
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !7600

if.then108:                                       ; preds = %if.else90
  store i32 0, i32* %retval, align 4, !dbg !7601
  br label %return, !dbg !7601

if.end109:                                        ; preds = %if.else90
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then84
  br label %for.inc111, !dbg !7602

for.inc111:                                       ; preds = %if.end110
  %67 = load i32, i32* %i, align 4, !dbg !7603
  %inc112 = add nsw i32 %67, 1, !dbg !7603
  store i32 %inc112, i32* %i, align 4, !dbg !7603
  %68 = load i32, i32* %ccoef, align 4, !dbg !7605
  %inc113 = add nsw i32 %68, 1, !dbg !7605
  store i32 %inc113, i32* %ccoef, align 4, !dbg !7605
  br label %for.cond78, !dbg !7606, !llvm.loop !7607

for.end114:                                       ; preds = %for.cond78
  br label %sw.epilog, !dbg !7609

sw.bb115:                                         ; preds = %if.end58
  %69 = load i32, i32* %list_pos, align 4, !dbg !7610
  %idxprom116 = sext i32 %69 to i64, !dbg !7611
  %arrayidx117 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom116, !dbg !7611
  store i32 2, i32* %arrayidx117, align 4, !dbg !7612
  store i32 0, i32* %i, align 4, !dbg !7613
  br label %for.cond118, !dbg !7615

for.cond118:                                      ; preds = %for.inc128, %sw.bb115
  %70 = load i32, i32* %i, align 4, !dbg !7616
  %cmp119 = icmp slt i32 %70, 3, !dbg !7619
  br i1 %cmp119, label %for.body121, label %for.end130, !dbg !7620

for.body121:                                      ; preds = %for.cond118
  %71 = load i32, i32* %ccoef, align 4, !dbg !7621
  %add122 = add nsw i32 %71, 4, !dbg !7621
  store i32 %add122, i32* %ccoef, align 4, !dbg !7621
  %72 = load i32, i32* %ccoef, align 4, !dbg !7623
  %73 = load i32, i32* %list_end, align 4, !dbg !7624
  %idxprom123 = sext i32 %73 to i64, !dbg !7625
  %arrayidx124 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom123, !dbg !7625
  store i32 %72, i32* %arrayidx124, align 4, !dbg !7626
  %74 = load i32, i32* %list_end, align 4, !dbg !7627
  %inc125 = add nsw i32 %74, 1, !dbg !7627
  store i32 %inc125, i32* %list_end, align 4, !dbg !7627
  %idxprom126 = sext i32 %74 to i64, !dbg !7628
  %arrayidx127 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom126, !dbg !7628
  store i32 2, i32* %arrayidx127, align 4, !dbg !7629
  br label %for.inc128, !dbg !7630

for.inc128:                                       ; preds = %for.body121
  %75 = load i32, i32* %i, align 4, !dbg !7631
  %inc129 = add nsw i32 %75, 1, !dbg !7631
  store i32 %inc129, i32* %i, align 4, !dbg !7631
  br label %for.cond118, !dbg !7633, !llvm.loop !7634

for.end130:                                       ; preds = %for.cond118
  br label %sw.epilog, !dbg !7636

sw.bb131:                                         ; preds = %if.end58
  %76 = load i32, i32* %ccoef, align 4, !dbg !7637
  %idxprom132 = sext i32 %76 to i64, !dbg !7638
  %arrayidx133 = getelementptr inbounds [64 x i8], [64 x i8]* @bink_scan, i64 0, i64 %idxprom132, !dbg !7638
  %77 = load i8, i8* %arrayidx133, align 1, !dbg !7638
  %conv134 = zext i8 %77 to i32, !dbg !7638
  %78 = load i32, i32* %nz_coeff_count, align 4, !dbg !7639
  %inc135 = add nsw i32 %78, 1, !dbg !7639
  store i32 %inc135, i32* %nz_coeff_count, align 4, !dbg !7639
  %idxprom136 = sext i32 %78 to i64, !dbg !7640
  %arrayidx137 = getelementptr inbounds [64 x i32], [64 x i32]* %nz_coeff, i64 0, i64 %idxprom136, !dbg !7640
  store i32 %conv134, i32* %arrayidx137, align 4, !dbg !7641
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7642
  %call138 = call i32 @get_bits1(%struct.GetBitContext* %79), !dbg !7643
  %sub139 = sub i32 0, %call138, !dbg !7644
  store i32 %sub139, i32* %sign, align 4, !dbg !7645
  %80 = load i32, i32* %mask, align 4, !dbg !7646
  %81 = load i32, i32* %sign, align 4, !dbg !7647
  %xor140 = xor i32 %80, %81, !dbg !7648
  %82 = load i32, i32* %sign, align 4, !dbg !7649
  %sub141 = sub nsw i32 %xor140, %82, !dbg !7650
  %conv142 = trunc i32 %sub141 to i16, !dbg !7651
  %83 = load i32, i32* %ccoef, align 4, !dbg !7652
  %idxprom143 = sext i32 %83 to i64, !dbg !7653
  %arrayidx144 = getelementptr inbounds [64 x i8], [64 x i8]* @bink_scan, i64 0, i64 %idxprom143, !dbg !7653
  %84 = load i8, i8* %arrayidx144, align 1, !dbg !7653
  %idxprom145 = zext i8 %84 to i64, !dbg !7654
  %85 = load i16*, i16** %block.addr, align 8, !dbg !7654
  %arrayidx146 = getelementptr inbounds i16, i16* %85, i64 %idxprom145, !dbg !7654
  store i16 %conv142, i16* %arrayidx146, align 2, !dbg !7655
  %86 = load i32, i32* %list_pos, align 4, !dbg !7656
  %idxprom147 = sext i32 %86 to i64, !dbg !7657
  %arrayidx148 = getelementptr inbounds [128 x i32], [128 x i32]* %coef_list, i64 0, i64 %idxprom147, !dbg !7657
  store i32 0, i32* %arrayidx148, align 4, !dbg !7658
  %87 = load i32, i32* %list_pos, align 4, !dbg !7659
  %inc149 = add nsw i32 %87, 1, !dbg !7659
  store i32 %inc149, i32* %list_pos, align 4, !dbg !7659
  %idxprom150 = sext i32 %87 to i64, !dbg !7660
  %arrayidx151 = getelementptr inbounds [128 x i32], [128 x i32]* %mode_list, i64 0, i64 %idxprom150, !dbg !7660
  store i32 0, i32* %arrayidx151, align 4, !dbg !7661
  %88 = load i32, i32* %masks_count.addr, align 4, !dbg !7662
  %dec152 = add nsw i32 %88, -1, !dbg !7662
  store i32 %dec152, i32* %masks_count.addr, align 4, !dbg !7662
  %89 = load i32, i32* %masks_count.addr, align 4, !dbg !7663
  %cmp153 = icmp slt i32 %89, 0, !dbg !7665
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !7666

if.then155:                                       ; preds = %sw.bb131
  store i32 0, i32* %retval, align 4, !dbg !7667
  br label %return, !dbg !7667

if.end156:                                        ; preds = %sw.bb131
  br label %sw.epilog, !dbg !7668

sw.epilog:                                        ; preds = %if.end58, %if.end156, %for.end130, %for.end114
  br label %while.cond, !dbg !7669, !llvm.loop !7524

while.end:                                        ; preds = %while.cond
  br label %for.inc157, !dbg !7671

for.inc157:                                       ; preds = %while.end
  %90 = load i32, i32* %mask, align 4, !dbg !7672
  %shr = ashr i32 %90, 1, !dbg !7672
  store i32 %shr, i32* %mask, align 4, !dbg !7672
  br label %for.cond, !dbg !7674, !llvm.loop !7675

for.end158:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7677
  br label %return, !dbg !7677

return:                                           ; preds = %for.end158, %if.then155, %if.then108, %if.then44
  %91 = load i32, i32* %retval, align 4, !dbg !7678
  ret i32 %91, !dbg !7678
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @zero_extend(i32 %val, i32 %bits) #6 !dbg !7679 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7683, metadata !1735), !dbg !7684
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7685, metadata !1735), !dbg !7686
  %0 = load i32, i32* %val.addr, align 4, !dbg !7687
  %1 = load i32, i32* %bits.addr, align 4, !dbg !7688
  %conv = zext i32 %1 to i64, !dbg !7688
  %sub = sub i64 32, %conv, !dbg !7689
  %sh_prom = trunc i64 %sub to i32, !dbg !7690
  %shl = shl i32 %0, %sh_prom, !dbg !7690
  %2 = load i32, i32* %bits.addr, align 4, !dbg !7691
  %conv1 = zext i32 %2 to i64, !dbg !7691
  %sub2 = sub i64 32, %conv1, !dbg !7692
  %sh_prom3 = trunc i64 %sub2 to i32, !dbg !7693
  %shr = lshr i32 %shl, %sh_prom3, !dbg !7693
  ret i32 %shr, !dbg !7694
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @read_tree(%struct.GetBitContext* %gb, %struct.Tree* %tree) #1 !dbg !7695 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %tree.addr = alloca %struct.Tree*, align 8
  %tmp1 = alloca [16 x i8], align 16
  %tmp2 = alloca [16 x i8], align 16
  %in = alloca i8*, align 8
  %out = alloca i8*, align 8
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7699, metadata !1735), !dbg !7700
  store %struct.Tree* %tree, %struct.Tree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Tree** %tree.addr, metadata !7701, metadata !1735), !dbg !7702
  call void @llvm.dbg.declare(metadata [16 x i8]* %tmp1, metadata !7703, metadata !1735), !dbg !7704
  %0 = bitcast [16 x i8]* %tmp1 to i8*, !dbg !7704
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !7704
  call void @llvm.dbg.declare(metadata [16 x i8]* %tmp2, metadata !7705, metadata !1735), !dbg !7706
  call void @llvm.dbg.declare(metadata i8** %in, metadata !7707, metadata !1735), !dbg !7708
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %tmp1, i32 0, i32 0, !dbg !7709
  store i8* %arraydecay, i8** %in, align 8, !dbg !7708
  call void @llvm.dbg.declare(metadata i8** %out, metadata !7710, metadata !1735), !dbg !7711
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp2, i32 0, i32 0, !dbg !7712
  store i8* %arraydecay1, i8** %out, align 8, !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7713, metadata !1735), !dbg !7714
  call void @llvm.dbg.declare(metadata i32* %t, metadata !7715, metadata !1735), !dbg !7716
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7717, metadata !1735), !dbg !7718
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7719
  %call = call i32 @get_bits(%struct.GetBitContext* %1, i32 4), !dbg !7720
  %2 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7721
  %vlc_num = getelementptr inbounds %struct.Tree, %struct.Tree* %2, i32 0, i32 0, !dbg !7722
  store i32 %call, i32* %vlc_num, align 4, !dbg !7723
  %3 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7724
  %vlc_num2 = getelementptr inbounds %struct.Tree, %struct.Tree* %3, i32 0, i32 0, !dbg !7726
  %4 = load i32, i32* %vlc_num2, align 4, !dbg !7726
  %tobool = icmp ne i32 %4, 0, !dbg !7724
  br i1 %tobool, label %if.end, label %if.then, !dbg !7727

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7728
  br label %for.cond, !dbg !7731

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !7732
  %cmp = icmp slt i32 %5, 16, !dbg !7735
  br i1 %cmp, label %for.body, label %for.end, !dbg !7736

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !7737
  %conv = trunc i32 %6 to i8, !dbg !7737
  %7 = load i32, i32* %i, align 4, !dbg !7738
  %idxprom = sext i32 %7 to i64, !dbg !7739
  %8 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7739
  %syms = getelementptr inbounds %struct.Tree, %struct.Tree* %8, i32 0, i32 1, !dbg !7740
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %syms, i64 0, i64 %idxprom, !dbg !7739
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7741
  br label %for.inc, !dbg !7739

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7742
  %inc = add nsw i32 %9, 1, !dbg !7742
  store i32 %inc, i32* %i, align 4, !dbg !7742
  br label %for.cond, !dbg !7744, !llvm.loop !7745

for.end:                                          ; preds = %for.cond
  br label %if.end72, !dbg !7747

if.end:                                           ; preds = %entry
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7748
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !7750
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7750
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7751

if.then5:                                         ; preds = %if.end
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7752
  %call6 = call i32 @get_bits(%struct.GetBitContext* %11, i32 3), !dbg !7754
  store i32 %call6, i32* %len, align 4, !dbg !7755
  store i32 0, i32* %i, align 4, !dbg !7756
  br label %for.cond7, !dbg !7758

for.cond7:                                        ; preds = %for.inc21, %if.then5
  %12 = load i32, i32* %i, align 4, !dbg !7759
  %13 = load i32, i32* %len, align 4, !dbg !7762
  %cmp8 = icmp sle i32 %12, %13, !dbg !7763
  br i1 %cmp8, label %for.body10, label %for.end23, !dbg !7764

for.body10:                                       ; preds = %for.cond7
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7765
  %call11 = call i32 @get_bits(%struct.GetBitContext* %14, i32 4), !dbg !7767
  %conv12 = trunc i32 %call11 to i8, !dbg !7767
  %15 = load i32, i32* %i, align 4, !dbg !7768
  %idxprom13 = sext i32 %15 to i64, !dbg !7769
  %16 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7769
  %syms14 = getelementptr inbounds %struct.Tree, %struct.Tree* %16, i32 0, i32 1, !dbg !7770
  %arrayidx15 = getelementptr inbounds [16 x i8], [16 x i8]* %syms14, i64 0, i64 %idxprom13, !dbg !7769
  store i8 %conv12, i8* %arrayidx15, align 1, !dbg !7771
  %17 = load i32, i32* %i, align 4, !dbg !7772
  %idxprom16 = sext i32 %17 to i64, !dbg !7773
  %18 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7773
  %syms17 = getelementptr inbounds %struct.Tree, %struct.Tree* %18, i32 0, i32 1, !dbg !7774
  %arrayidx18 = getelementptr inbounds [16 x i8], [16 x i8]* %syms17, i64 0, i64 %idxprom16, !dbg !7773
  %19 = load i8, i8* %arrayidx18, align 1, !dbg !7773
  %idxprom19 = zext i8 %19 to i64, !dbg !7775
  %arrayidx20 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp1, i64 0, i64 %idxprom19, !dbg !7775
  store i8 1, i8* %arrayidx20, align 1, !dbg !7776
  br label %for.inc21, !dbg !7777

for.inc21:                                        ; preds = %for.body10
  %20 = load i32, i32* %i, align 4, !dbg !7778
  %inc22 = add nsw i32 %20, 1, !dbg !7778
  store i32 %inc22, i32* %i, align 4, !dbg !7778
  br label %for.cond7, !dbg !7780, !llvm.loop !7781

for.end23:                                        ; preds = %for.cond7
  store i32 0, i32* %i, align 4, !dbg !7783
  br label %for.cond24, !dbg !7785

for.cond24:                                       ; preds = %for.inc40, %for.end23
  %21 = load i32, i32* %i, align 4, !dbg !7786
  %cmp25 = icmp slt i32 %21, 16, !dbg !7789
  br i1 %cmp25, label %land.rhs, label %land.end, !dbg !7790

land.rhs:                                         ; preds = %for.cond24
  %22 = load i32, i32* %len, align 4, !dbg !7791
  %cmp27 = icmp slt i32 %22, 15, !dbg !7793
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond24
  %23 = phi i1 [ false, %for.cond24 ], [ %cmp27, %land.rhs ]
  br i1 %23, label %for.body29, label %for.end42, !dbg !7794

for.body29:                                       ; preds = %land.end
  %24 = load i32, i32* %i, align 4, !dbg !7796
  %idxprom30 = sext i32 %24 to i64, !dbg !7798
  %arrayidx31 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp1, i64 0, i64 %idxprom30, !dbg !7798
  %25 = load i8, i8* %arrayidx31, align 1, !dbg !7798
  %tobool32 = icmp ne i8 %25, 0, !dbg !7798
  br i1 %tobool32, label %if.end39, label %if.then33, !dbg !7799

if.then33:                                        ; preds = %for.body29
  %26 = load i32, i32* %i, align 4, !dbg !7800
  %conv34 = trunc i32 %26 to i8, !dbg !7800
  %27 = load i32, i32* %len, align 4, !dbg !7801
  %inc35 = add nsw i32 %27, 1, !dbg !7801
  store i32 %inc35, i32* %len, align 4, !dbg !7801
  %idxprom36 = sext i32 %inc35 to i64, !dbg !7802
  %28 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7802
  %syms37 = getelementptr inbounds %struct.Tree, %struct.Tree* %28, i32 0, i32 1, !dbg !7803
  %arrayidx38 = getelementptr inbounds [16 x i8], [16 x i8]* %syms37, i64 0, i64 %idxprom36, !dbg !7802
  store i8 %conv34, i8* %arrayidx38, align 1, !dbg !7804
  br label %if.end39, !dbg !7802

if.end39:                                         ; preds = %if.then33, %for.body29
  br label %for.inc40, !dbg !7805

for.inc40:                                        ; preds = %if.end39
  %29 = load i32, i32* %i, align 4, !dbg !7807
  %inc41 = add nsw i32 %29, 1, !dbg !7807
  store i32 %inc41, i32* %i, align 4, !dbg !7807
  br label %for.cond24, !dbg !7809, !llvm.loop !7810

for.end42:                                        ; preds = %land.end
  br label %if.end72, !dbg !7812

if.else:                                          ; preds = %if.end
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7813
  %call43 = call i32 @get_bits(%struct.GetBitContext* %30, i32 2), !dbg !7815
  store i32 %call43, i32* %len, align 4, !dbg !7816
  store i32 0, i32* %i, align 4, !dbg !7817
  br label %for.cond44, !dbg !7819

for.cond44:                                       ; preds = %for.inc51, %if.else
  %31 = load i32, i32* %i, align 4, !dbg !7820
  %cmp45 = icmp slt i32 %31, 16, !dbg !7823
  br i1 %cmp45, label %for.body47, label %for.end53, !dbg !7824

for.body47:                                       ; preds = %for.cond44
  %32 = load i32, i32* %i, align 4, !dbg !7825
  %conv48 = trunc i32 %32 to i8, !dbg !7825
  %33 = load i32, i32* %i, align 4, !dbg !7826
  %idxprom49 = sext i32 %33 to i64, !dbg !7827
  %34 = load i8*, i8** %in, align 8, !dbg !7827
  %arrayidx50 = getelementptr inbounds i8, i8* %34, i64 %idxprom49, !dbg !7827
  store i8 %conv48, i8* %arrayidx50, align 1, !dbg !7828
  br label %for.inc51, !dbg !7827

for.inc51:                                        ; preds = %for.body47
  %35 = load i32, i32* %i, align 4, !dbg !7829
  %inc52 = add nsw i32 %35, 1, !dbg !7829
  store i32 %inc52, i32* %i, align 4, !dbg !7829
  br label %for.cond44, !dbg !7831, !llvm.loop !7832

for.end53:                                        ; preds = %for.cond44
  store i32 0, i32* %i, align 4, !dbg !7834
  br label %for.cond54, !dbg !7836

for.cond54:                                       ; preds = %for.inc67, %for.end53
  %36 = load i32, i32* %i, align 4, !dbg !7837
  %37 = load i32, i32* %len, align 4, !dbg !7840
  %cmp55 = icmp sle i32 %36, %37, !dbg !7841
  br i1 %cmp55, label %for.body57, label %for.end69, !dbg !7842

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7843, metadata !1735), !dbg !7845
  %38 = load i32, i32* %i, align 4, !dbg !7846
  %shl = shl i32 1, %38, !dbg !7847
  store i32 %shl, i32* %size, align 4, !dbg !7845
  store i32 0, i32* %t, align 4, !dbg !7848
  br label %for.cond58, !dbg !7850

for.cond58:                                       ; preds = %for.inc64, %for.body57
  %39 = load i32, i32* %t, align 4, !dbg !7851
  %cmp59 = icmp slt i32 %39, 16, !dbg !7854
  br i1 %cmp59, label %for.body61, label %for.end66, !dbg !7855

for.body61:                                       ; preds = %for.cond58
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7856
  %41 = load i8*, i8** %out, align 8, !dbg !7857
  %42 = load i32, i32* %t, align 4, !dbg !7858
  %idx.ext = sext i32 %42 to i64, !dbg !7859
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !7859
  %43 = load i8*, i8** %in, align 8, !dbg !7860
  %44 = load i32, i32* %t, align 4, !dbg !7861
  %idx.ext62 = sext i32 %44 to i64, !dbg !7862
  %add.ptr63 = getelementptr inbounds i8, i8* %43, i64 %idx.ext62, !dbg !7862
  %45 = load i32, i32* %size, align 4, !dbg !7863
  call void @merge(%struct.GetBitContext* %40, i8* %add.ptr, i8* %add.ptr63, i32 %45), !dbg !7864
  br label %for.inc64, !dbg !7864

for.inc64:                                        ; preds = %for.body61
  %46 = load i32, i32* %size, align 4, !dbg !7865
  %shl65 = shl i32 %46, 1, !dbg !7867
  %47 = load i32, i32* %t, align 4, !dbg !7868
  %add = add nsw i32 %47, %shl65, !dbg !7868
  store i32 %add, i32* %t, align 4, !dbg !7868
  br label %for.cond58, !dbg !7869, !llvm.loop !7870

for.end66:                                        ; preds = %for.cond58
  br label %do.body, !dbg !7872, !llvm.loop !7873

do.body:                                          ; preds = %for.end66
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !7874, metadata !1735), !dbg !7876
  %48 = load i8*, i8** %out, align 8, !dbg !7877
  store i8* %48, i8** %SWAP_tmp, align 8, !dbg !7879
  %49 = load i8*, i8** %in, align 8, !dbg !7880
  store i8* %49, i8** %out, align 8, !dbg !7881
  %50 = load i8*, i8** %SWAP_tmp, align 8, !dbg !7882
  store i8* %50, i8** %in, align 8, !dbg !7883
  br label %do.end, !dbg !7884

do.end:                                           ; preds = %do.body
  br label %for.inc67, !dbg !7885

for.inc67:                                        ; preds = %do.end
  %51 = load i32, i32* %i, align 4, !dbg !7886
  %inc68 = add nsw i32 %51, 1, !dbg !7886
  store i32 %inc68, i32* %i, align 4, !dbg !7886
  br label %for.cond54, !dbg !7888, !llvm.loop !7889

for.end69:                                        ; preds = %for.cond54
  %52 = load %struct.Tree*, %struct.Tree** %tree.addr, align 8, !dbg !7891
  %syms70 = getelementptr inbounds %struct.Tree, %struct.Tree* %52, i32 0, i32 1, !dbg !7892
  %arraydecay71 = getelementptr inbounds [16 x i8], [16 x i8]* %syms70, i32 0, i32 0, !dbg !7893
  %53 = load i8*, i8** %in, align 8, !dbg !7894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay71, i8* %53, i64 16, i32 1, i1 false), !dbg !7893
  br label %if.end72

if.end72:                                         ; preds = %for.end, %for.end69, %for.end42
  ret void, !dbg !7895
}

; Function Attrs: nounwind uwtable
define internal void @merge(%struct.GetBitContext* %gb, i8* %dst, i8* %src, i32 %size) #1 !dbg !7896 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %src2 = alloca i8*, align 8
  %size2 = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7899, metadata !1735), !dbg !7900
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7901, metadata !1735), !dbg !7902
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7903, metadata !1735), !dbg !7904
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7905, metadata !1735), !dbg !7906
  call void @llvm.dbg.declare(metadata i8** %src2, metadata !7907, metadata !1735), !dbg !7908
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7909
  %1 = load i32, i32* %size.addr, align 4, !dbg !7910
  %idx.ext = sext i32 %1 to i64, !dbg !7911
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !7911
  store i8* %add.ptr, i8** %src2, align 8, !dbg !7908
  call void @llvm.dbg.declare(metadata i32* %size2, metadata !7912, metadata !1735), !dbg !7913
  %2 = load i32, i32* %size.addr, align 4, !dbg !7914
  store i32 %2, i32* %size2, align 4, !dbg !7913
  br label %do.body, !dbg !7915, !llvm.loop !7916

do.body:                                          ; preds = %land.end, %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7917
  %call = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !7920
  %tobool = icmp ne i32 %call, 0, !dbg !7920
  br i1 %tobool, label %if.else, label %if.then, !dbg !7921

if.then:                                          ; preds = %do.body
  %4 = load i8*, i8** %src.addr, align 8, !dbg !7922
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7922
  store i8* %incdec.ptr, i8** %src.addr, align 8, !dbg !7922
  %5 = load i8, i8* %4, align 1, !dbg !7924
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !7925
  %incdec.ptr1 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7925
  store i8* %incdec.ptr1, i8** %dst.addr, align 8, !dbg !7925
  store i8 %5, i8* %6, align 1, !dbg !7926
  %7 = load i32, i32* %size.addr, align 4, !dbg !7927
  %dec = add nsw i32 %7, -1, !dbg !7927
  store i32 %dec, i32* %size.addr, align 4, !dbg !7927
  br label %if.end, !dbg !7928

if.else:                                          ; preds = %do.body
  %8 = load i8*, i8** %src2, align 8, !dbg !7929
  %incdec.ptr2 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7929
  store i8* %incdec.ptr2, i8** %src2, align 8, !dbg !7929
  %9 = load i8, i8* %8, align 1, !dbg !7931
  %10 = load i8*, i8** %dst.addr, align 8, !dbg !7932
  %incdec.ptr3 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7932
  store i8* %incdec.ptr3, i8** %dst.addr, align 8, !dbg !7932
  store i8 %9, i8* %10, align 1, !dbg !7933
  %11 = load i32, i32* %size2, align 4, !dbg !7934
  %dec4 = add nsw i32 %11, -1, !dbg !7934
  store i32 %dec4, i32* %size2, align 4, !dbg !7934
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.cond, !dbg !7935

do.cond:                                          ; preds = %if.end
  %12 = load i32, i32* %size.addr, align 4, !dbg !7936
  %tobool5 = icmp ne i32 %12, 0, !dbg !7936
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !7938

land.rhs:                                         ; preds = %do.cond
  %13 = load i32, i32* %size2, align 4, !dbg !7939
  %tobool6 = icmp ne i32 %13, 0, !dbg !7941
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %14 = phi i1 [ false, %do.cond ], [ %tobool6, %land.rhs ]
  br i1 %14, label %do.body, label %do.end, !dbg !7942, !llvm.loop !7916

do.end:                                           ; preds = %land.end
  br label %while.cond, !dbg !7944

while.cond:                                       ; preds = %while.body, %do.end
  %15 = load i32, i32* %size.addr, align 4, !dbg !7945
  %dec7 = add nsw i32 %15, -1, !dbg !7945
  store i32 %dec7, i32* %size.addr, align 4, !dbg !7945
  %tobool8 = icmp ne i32 %15, 0, !dbg !7946
  br i1 %tobool8, label %while.body, label %while.end, !dbg !7946

while.body:                                       ; preds = %while.cond
  %16 = load i8*, i8** %src.addr, align 8, !dbg !7947
  %incdec.ptr9 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7947
  store i8* %incdec.ptr9, i8** %src.addr, align 8, !dbg !7947
  %17 = load i8, i8* %16, align 1, !dbg !7948
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !7949
  %incdec.ptr10 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7949
  store i8* %incdec.ptr10, i8** %dst.addr, align 8, !dbg !7949
  store i8 %17, i8* %18, align 1, !dbg !7950
  br label %while.cond, !dbg !7951, !llvm.loop !7952

while.end:                                        ; preds = %while.cond
  br label %while.cond11, !dbg !7953

while.cond11:                                     ; preds = %while.body14, %while.end
  %19 = load i32, i32* %size2, align 4, !dbg !7954
  %dec12 = add nsw i32 %19, -1, !dbg !7954
  store i32 %dec12, i32* %size2, align 4, !dbg !7954
  %tobool13 = icmp ne i32 %19, 0, !dbg !7955
  br i1 %tobool13, label %while.body14, label %while.end17, !dbg !7955

while.body14:                                     ; preds = %while.cond11
  %20 = load i8*, i8** %src2, align 8, !dbg !7956
  %incdec.ptr15 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !7956
  store i8* %incdec.ptr15, i8** %src2, align 8, !dbg !7956
  %21 = load i8, i8* %20, align 1, !dbg !7957
  %22 = load i8*, i8** %dst.addr, align 8, !dbg !7958
  %incdec.ptr16 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !7958
  store i8* %incdec.ptr16, i8** %dst.addr, align 8, !dbg !7958
  store i8 %21, i8* %22, align 1, !dbg !7959
  br label %while.cond11, !dbg !7960, !llvm.loop !7961

while.end17:                                      ; preds = %while.cond11
  ret void, !dbg !7962
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @binkb_init_bundles(%struct.BinkContext* %c) #0 !dbg !7963 {
entry:
  %c.addr = alloca %struct.BinkContext*, align 8
  %i = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !7964, metadata !1735), !dbg !7965
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7966, metadata !1735), !dbg !7967
  store i32 0, i32* %i, align 4, !dbg !7968
  br label %for.cond, !dbg !7970

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7971
  %cmp = icmp slt i32 %0, 10, !dbg !7974
  br i1 %cmp, label %for.body, label %for.end, !dbg !7975

for.body:                                         ; preds = %for.cond
  %1 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !7976
  %2 = load i32, i32* %i, align 4, !dbg !7977
  call void @binkb_init_bundle(%struct.BinkContext* %1, i32 %2), !dbg !7978
  br label %for.inc, !dbg !7978

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !7979
  %inc = add nsw i32 %3, 1, !dbg !7979
  store i32 %inc, i32* %i, align 4, !dbg !7979
  br label %for.cond, !dbg !7981, !llvm.loop !7982

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7984
}

; Function Attrs: nounwind uwtable
define internal i32 @binkb_read_bundle(%struct.BinkContext* %c, %struct.GetBitContext* %gb, i32 %bundle_num) #1 !dbg !7985 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %bundle_num.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  %mask = alloca i32, align 4
  %issigned = alloca i32, align 4
  %b = alloca %struct.Bundle*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %dst = alloca i16*, align 8
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !7988, metadata !1735), !dbg !7989
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7990, metadata !1735), !dbg !7991
  store i32 %bundle_num, i32* %bundle_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bundle_num.addr, metadata !7992, metadata !1735), !dbg !7993
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7994, metadata !1735), !dbg !7995
  %0 = load i32, i32* %bundle_num.addr, align 4, !dbg !7996
  %idxprom = sext i32 %0 to i64, !dbg !7997
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @binkb_bundle_sizes, i64 0, i64 %idxprom, !dbg !7997
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7997
  store i32 %1, i32* %bits, align 4, !dbg !7995
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7998, metadata !1735), !dbg !7999
  %2 = load i32, i32* %bits, align 4, !dbg !8000
  %sub = sub nsw i32 %2, 1, !dbg !8001
  %shl = shl i32 1, %sub, !dbg !8002
  store i32 %shl, i32* %mask, align 4, !dbg !7999
  call void @llvm.dbg.declare(metadata i32* %issigned, metadata !8003, metadata !1735), !dbg !8004
  %3 = load i32, i32* %bundle_num.addr, align 4, !dbg !8005
  %idxprom1 = sext i32 %3 to i64, !dbg !8006
  %arrayidx2 = getelementptr inbounds [10 x i32], [10 x i32]* @binkb_bundle_signed, i64 0, i64 %idxprom1, !dbg !8006
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8006
  store i32 %4, i32* %issigned, align 4, !dbg !8004
  call void @llvm.dbg.declare(metadata %struct.Bundle** %b, metadata !8007, metadata !1735), !dbg !8008
  %5 = load i32, i32* %bundle_num.addr, align 4, !dbg !8009
  %idxprom3 = sext i32 %5 to i64, !dbg !8010
  %6 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8010
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %6, i32 0, i32 9, !dbg !8011
  %arrayidx4 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom3, !dbg !8010
  store %struct.Bundle* %arrayidx4, %struct.Bundle** %b, align 8, !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8012, metadata !1735), !dbg !8013
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8014, metadata !1735), !dbg !8015
  %7 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8016
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %7, i32 0, i32 4, !dbg !8018
  %8 = load i8*, i8** %cur_dec, align 8, !dbg !8018
  %tobool = icmp ne i8* %8, null, !dbg !8016
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8019

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8020
  %cur_dec5 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %9, i32 0, i32 4, !dbg !8022
  %10 = load i8*, i8** %cur_dec5, align 8, !dbg !8022
  %11 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8023
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %11, i32 0, i32 5, !dbg !8024
  %12 = load i8*, i8** %cur_ptr, align 8, !dbg !8024
  %cmp = icmp ugt i8* %10, %12, !dbg !8025
  br i1 %cmp, label %if.then, label %if.end, !dbg !8026

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !8027
  br label %return, !dbg !8027

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8029
  %14 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8031
  %len6 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %14, i32 0, i32 0, !dbg !8032
  %15 = load i32, i32* %len6, align 8, !dbg !8032
  %call = call i32 @get_bits(%struct.GetBitContext* %13, i32 %15), !dbg !8033
  store i32 %call, i32* %len, align 4, !dbg !8034
  %16 = load i32, i32* %len, align 4, !dbg !8035
  %tobool7 = icmp ne i32 %16, 0, !dbg !8035
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8036

if.then8:                                         ; preds = %if.end
  %17 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8037
  %cur_dec9 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %17, i32 0, i32 4, !dbg !8041
  store i8* null, i8** %cur_dec9, align 8, !dbg !8042
  store i32 0, i32* %retval, align 4, !dbg !8043
  br label %return, !dbg !8043

if.end10:                                         ; preds = %if.end
  %18 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8044
  %data_end = getelementptr inbounds %struct.Bundle, %struct.Bundle* %18, i32 0, i32 3, !dbg !8046
  %19 = load i8*, i8** %data_end, align 8, !dbg !8046
  %20 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8047
  %cur_dec11 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %20, i32 0, i32 4, !dbg !8048
  %21 = load i8*, i8** %cur_dec11, align 8, !dbg !8048
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64, !dbg !8049
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i64, !dbg !8049
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8049
  %22 = load i32, i32* %len, align 4, !dbg !8050
  %23 = load i32, i32* %bits, align 4, !dbg !8051
  %cmp12 = icmp sgt i32 %23, 8, !dbg !8052
  %conv = zext i1 %cmp12 to i32, !dbg !8052
  %add = add nsw i32 1, %conv, !dbg !8053
  %mul = mul nsw i32 %22, %add, !dbg !8054
  %conv13 = sext i32 %mul to i64, !dbg !8050
  %cmp14 = icmp slt i64 %sub.ptr.sub, %conv13, !dbg !8055
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8056

if.then16:                                        ; preds = %if.end10
  store i32 -1094995529, i32* %retval, align 4, !dbg !8057
  br label %return, !dbg !8057

if.end17:                                         ; preds = %if.end10
  %24 = load i32, i32* %bits, align 4, !dbg !8058
  %cmp18 = icmp sle i32 %24, 8, !dbg !8060
  br i1 %cmp18, label %if.then20, label %if.else41, !dbg !8061

if.then20:                                        ; preds = %if.end17
  %25 = load i32, i32* %issigned, align 4, !dbg !8062
  %tobool21 = icmp ne i32 %25, 0, !dbg !8062
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !8065

if.then22:                                        ; preds = %if.then20
  store i32 0, i32* %i, align 4, !dbg !8066
  br label %for.cond, !dbg !8069

for.cond:                                         ; preds = %for.inc, %if.then22
  %26 = load i32, i32* %i, align 4, !dbg !8070
  %27 = load i32, i32* %len, align 4, !dbg !8073
  %cmp23 = icmp slt i32 %26, %27, !dbg !8074
  br i1 %cmp23, label %for.body, label %for.end, !dbg !8075

for.body:                                         ; preds = %for.cond
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8076
  %29 = load i32, i32* %bits, align 4, !dbg !8077
  %call25 = call i32 @get_bits(%struct.GetBitContext* %28, i32 %29), !dbg !8078
  %conv26 = trunc i32 %call25 to i8, !dbg !8078
  %30 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8079
  %cur_dec27 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %30, i32 0, i32 4, !dbg !8080
  %31 = load i8*, i8** %cur_dec27, align 8, !dbg !8081
  %incdec.ptr = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8081
  store i8* %incdec.ptr, i8** %cur_dec27, align 8, !dbg !8081
  store i8 %conv26, i8* %31, align 1, !dbg !8082
  br label %for.inc, !dbg !8083

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !8084
  %inc = add nsw i32 %32, 1, !dbg !8084
  store i32 %inc, i32* %i, align 4, !dbg !8084
  br label %for.cond, !dbg !8086, !llvm.loop !8087

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !8089

if.else:                                          ; preds = %if.then20
  store i32 0, i32* %i, align 4, !dbg !8090
  br label %for.cond28, !dbg !8093

for.cond28:                                       ; preds = %for.inc37, %if.else
  %33 = load i32, i32* %i, align 4, !dbg !8094
  %34 = load i32, i32* %len, align 4, !dbg !8097
  %cmp29 = icmp slt i32 %33, %34, !dbg !8098
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !8099

for.body31:                                       ; preds = %for.cond28
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8100
  %36 = load i32, i32* %bits, align 4, !dbg !8101
  %call32 = call i32 @get_bits(%struct.GetBitContext* %35, i32 %36), !dbg !8102
  %37 = load i32, i32* %mask, align 4, !dbg !8103
  %sub33 = sub i32 %call32, %37, !dbg !8104
  %conv34 = trunc i32 %sub33 to i8, !dbg !8102
  %38 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8105
  %cur_dec35 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %38, i32 0, i32 4, !dbg !8106
  %39 = load i8*, i8** %cur_dec35, align 8, !dbg !8107
  %incdec.ptr36 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8107
  store i8* %incdec.ptr36, i8** %cur_dec35, align 8, !dbg !8107
  store i8 %conv34, i8* %39, align 1, !dbg !8108
  br label %for.inc37, !dbg !8109

for.inc37:                                        ; preds = %for.body31
  %40 = load i32, i32* %i, align 4, !dbg !8110
  %inc38 = add nsw i32 %40, 1, !dbg !8110
  store i32 %inc38, i32* %i, align 4, !dbg !8110
  br label %for.cond28, !dbg !8112, !llvm.loop !8113

for.end39:                                        ; preds = %for.cond28
  br label %if.end40

if.end40:                                         ; preds = %for.end39, %for.end
  br label %if.end69, !dbg !8115

if.else41:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8116, metadata !1735), !dbg !8118
  %41 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8119
  %cur_dec42 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %41, i32 0, i32 4, !dbg !8120
  %42 = load i8*, i8** %cur_dec42, align 8, !dbg !8120
  %43 = bitcast i8* %42 to i16*, !dbg !8121
  store i16* %43, i16** %dst, align 8, !dbg !8118
  %44 = load i32, i32* %issigned, align 4, !dbg !8122
  %tobool43 = icmp ne i32 %44, 0, !dbg !8122
  br i1 %tobool43, label %if.else55, label %if.then44, !dbg !8124

if.then44:                                        ; preds = %if.else41
  store i32 0, i32* %i, align 4, !dbg !8125
  br label %for.cond45, !dbg !8128

for.cond45:                                       ; preds = %for.inc52, %if.then44
  %45 = load i32, i32* %i, align 4, !dbg !8129
  %46 = load i32, i32* %len, align 4, !dbg !8132
  %cmp46 = icmp slt i32 %45, %46, !dbg !8133
  br i1 %cmp46, label %for.body48, label %for.end54, !dbg !8134

for.body48:                                       ; preds = %for.cond45
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8135
  %48 = load i32, i32* %bits, align 4, !dbg !8136
  %call49 = call i32 @get_bits(%struct.GetBitContext* %47, i32 %48), !dbg !8137
  %conv50 = trunc i32 %call49 to i16, !dbg !8137
  %49 = load i16*, i16** %dst, align 8, !dbg !8138
  %incdec.ptr51 = getelementptr inbounds i16, i16* %49, i32 1, !dbg !8138
  store i16* %incdec.ptr51, i16** %dst, align 8, !dbg !8138
  store i16 %conv50, i16* %49, align 2, !dbg !8139
  br label %for.inc52, !dbg !8140

for.inc52:                                        ; preds = %for.body48
  %50 = load i32, i32* %i, align 4, !dbg !8141
  %inc53 = add nsw i32 %50, 1, !dbg !8141
  store i32 %inc53, i32* %i, align 4, !dbg !8141
  br label %for.cond45, !dbg !8143, !llvm.loop !8144

for.end54:                                        ; preds = %for.cond45
  br label %if.end67, !dbg !8146

if.else55:                                        ; preds = %if.else41
  store i32 0, i32* %i, align 4, !dbg !8147
  br label %for.cond56, !dbg !8150

for.cond56:                                       ; preds = %for.inc64, %if.else55
  %51 = load i32, i32* %i, align 4, !dbg !8151
  %52 = load i32, i32* %len, align 4, !dbg !8154
  %cmp57 = icmp slt i32 %51, %52, !dbg !8155
  br i1 %cmp57, label %for.body59, label %for.end66, !dbg !8156

for.body59:                                       ; preds = %for.cond56
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8157
  %54 = load i32, i32* %bits, align 4, !dbg !8158
  %call60 = call i32 @get_bits(%struct.GetBitContext* %53, i32 %54), !dbg !8159
  %55 = load i32, i32* %mask, align 4, !dbg !8160
  %sub61 = sub i32 %call60, %55, !dbg !8161
  %conv62 = trunc i32 %sub61 to i16, !dbg !8159
  %56 = load i16*, i16** %dst, align 8, !dbg !8162
  %incdec.ptr63 = getelementptr inbounds i16, i16* %56, i32 1, !dbg !8162
  store i16* %incdec.ptr63, i16** %dst, align 8, !dbg !8162
  store i16 %conv62, i16* %56, align 2, !dbg !8163
  br label %for.inc64, !dbg !8164

for.inc64:                                        ; preds = %for.body59
  %57 = load i32, i32* %i, align 4, !dbg !8165
  %inc65 = add nsw i32 %57, 1, !dbg !8165
  store i32 %inc65, i32* %i, align 4, !dbg !8165
  br label %for.cond56, !dbg !8167, !llvm.loop !8168

for.end66:                                        ; preds = %for.cond56
  br label %if.end67

if.end67:                                         ; preds = %for.end66, %for.end54
  %58 = load i16*, i16** %dst, align 8, !dbg !8170
  %59 = bitcast i16* %58 to i8*, !dbg !8171
  %60 = load %struct.Bundle*, %struct.Bundle** %b, align 8, !dbg !8172
  %cur_dec68 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %60, i32 0, i32 4, !dbg !8173
  store i8* %59, i8** %cur_dec68, align 8, !dbg !8174
  br label %if.end69

if.end69:                                         ; preds = %if.end67, %if.end40
  store i32 0, i32* %retval, align 4, !dbg !8175
  br label %return, !dbg !8175

return:                                           ; preds = %if.end69, %if.then16, %if.then8, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !8176
  ret i32 %61, !dbg !8176
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @binkb_get_value(%struct.BinkContext* %c, i32 %bundle_num) #4 !dbg !8177 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.BinkContext*, align 8
  %bundle_num.addr = alloca i32, align 4
  %ret = alloca i16, align 2
  %bits = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !8178, metadata !1735), !dbg !8179
  store i32 %bundle_num, i32* %bundle_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bundle_num.addr, metadata !8180, metadata !1735), !dbg !8181
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !8182, metadata !1735), !dbg !8183
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !8184, metadata !1735), !dbg !8185
  %0 = load i32, i32* %bundle_num.addr, align 4, !dbg !8186
  %idxprom = sext i32 %0 to i64, !dbg !8187
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @binkb_bundle_sizes, i64 0, i64 %idxprom, !dbg !8187
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8187
  store i32 %1, i32* %bits, align 4, !dbg !8185
  %2 = load i32, i32* %bits, align 4, !dbg !8188
  %cmp = icmp sle i32 %2, 8, !dbg !8190
  br i1 %cmp, label %if.then, label %if.end, !dbg !8191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8192, metadata !1735), !dbg !8194
  %3 = load i32, i32* %bundle_num.addr, align 4, !dbg !8195
  %idxprom1 = sext i32 %3 to i64, !dbg !8196
  %4 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8196
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %4, i32 0, i32 9, !dbg !8197
  %arrayidx2 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom1, !dbg !8196
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx2, i32 0, i32 5, !dbg !8198
  %5 = load i8*, i8** %cur_ptr, align 8, !dbg !8199
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8199
  store i8* %incdec.ptr, i8** %cur_ptr, align 8, !dbg !8199
  %6 = load i8, i8* %5, align 1, !dbg !8200
  %conv = zext i8 %6 to i32, !dbg !8200
  store i32 %conv, i32* %val, align 4, !dbg !8194
  %7 = load i32, i32* %bundle_num.addr, align 4, !dbg !8201
  %idxprom3 = sext i32 %7 to i64, !dbg !8202
  %arrayidx4 = getelementptr inbounds [10 x i32], [10 x i32]* @binkb_bundle_signed, i64 0, i64 %idxprom3, !dbg !8202
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !8202
  %tobool = icmp ne i32 %8, 0, !dbg !8202
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8202

cond.true:                                        ; preds = %if.then
  %9 = load i32, i32* %val, align 4, !dbg !8203
  %conv5 = trunc i32 %9 to i8, !dbg !8205
  %conv6 = sext i8 %conv5 to i32, !dbg !8205
  br label %cond.end, !dbg !8206

cond.false:                                       ; preds = %if.then
  %10 = load i32, i32* %val, align 4, !dbg !8207
  br label %cond.end, !dbg !8209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv6, %cond.true ], [ %10, %cond.false ], !dbg !8210
  store i32 %cond, i32* %retval, align 4, !dbg !8212
  br label %return, !dbg !8212

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %bundle_num.addr, align 4, !dbg !8213
  %idxprom7 = sext i32 %11 to i64, !dbg !8214
  %12 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8214
  %bundle8 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %12, i32 0, i32 9, !dbg !8215
  %arrayidx9 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle8, i64 0, i64 %idxprom7, !dbg !8214
  %cur_ptr10 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx9, i32 0, i32 5, !dbg !8216
  %13 = load i8*, i8** %cur_ptr10, align 8, !dbg !8216
  %14 = bitcast i8* %13 to i16*, !dbg !8217
  %15 = load i16, i16* %14, align 2, !dbg !8217
  store i16 %15, i16* %ret, align 2, !dbg !8218
  %16 = load i32, i32* %bundle_num.addr, align 4, !dbg !8219
  %idxprom11 = sext i32 %16 to i64, !dbg !8220
  %17 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8220
  %bundle12 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %17, i32 0, i32 9, !dbg !8221
  %arrayidx13 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle12, i64 0, i64 %idxprom11, !dbg !8220
  %cur_ptr14 = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx13, i32 0, i32 5, !dbg !8222
  %18 = load i8*, i8** %cur_ptr14, align 8, !dbg !8223
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 2, !dbg !8223
  store i8* %add.ptr, i8** %cur_ptr14, align 8, !dbg !8223
  %19 = load i16, i16* %ret, align 2, !dbg !8224
  %conv15 = sext i16 %19 to i32, !dbg !8224
  store i32 %conv15, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

return:                                           ; preds = %if.end, %cond.end
  %20 = load i32, i32* %retval, align 4, !dbg !8226
  ret i32 %20, !dbg !8226
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_pixels8x8_overlapped(i8* %dst, i8* %src, i32 %stride) #4 !dbg !8227 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i32, align 4
  %tmp = alloca [64 x i8], align 16
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !8230, metadata !1735), !dbg !8231
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !8232, metadata !1735), !dbg !8233
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8234, metadata !1735), !dbg !8235
  call void @llvm.dbg.declare(metadata [64 x i8]* %tmp, metadata !8236, metadata !1735), !dbg !8237
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8238, metadata !1735), !dbg !8239
  store i32 0, i32* %i, align 4, !dbg !8240
  br label %for.cond, !dbg !8242

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8243
  %cmp = icmp slt i32 %0, 8, !dbg !8246
  br i1 %cmp, label %for.body, label %for.end, !dbg !8247

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i32 0, i32 0, !dbg !8248
  %1 = load i32, i32* %i, align 4, !dbg !8249
  %mul = mul nsw i32 %1, 8, !dbg !8250
  %idx.ext = sext i32 %mul to i64, !dbg !8251
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext, !dbg !8251
  %2 = load i8*, i8** %src.addr, align 8, !dbg !8252
  %3 = load i32, i32* %i, align 4, !dbg !8253
  %4 = load i32, i32* %stride.addr, align 4, !dbg !8254
  %mul2 = mul nsw i32 %3, %4, !dbg !8255
  %idx.ext3 = sext i32 %mul2 to i64, !dbg !8256
  %add.ptr4 = getelementptr inbounds i8, i8* %2, i64 %idx.ext3, !dbg !8256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr4, i64 8, i32 1, i1 false), !dbg !8257
  br label %for.inc, !dbg !8257

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !8258
  %inc = add nsw i32 %5, 1, !dbg !8258
  store i32 %inc, i32* %i, align 4, !dbg !8258
  br label %for.cond, !dbg !8260, !llvm.loop !8261

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8263
  br label %for.cond5, !dbg !8265

for.cond5:                                        ; preds = %for.inc15, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !8266
  %cmp6 = icmp slt i32 %6, 8, !dbg !8269
  br i1 %cmp6, label %for.body7, label %for.end17, !dbg !8270

for.body7:                                        ; preds = %for.cond5
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !8271
  %8 = load i32, i32* %i, align 4, !dbg !8272
  %9 = load i32, i32* %stride.addr, align 4, !dbg !8273
  %mul8 = mul nsw i32 %8, %9, !dbg !8274
  %idx.ext9 = sext i32 %mul8 to i64, !dbg !8275
  %add.ptr10 = getelementptr inbounds i8, i8* %7, i64 %idx.ext9, !dbg !8275
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i32 0, i32 0, !dbg !8276
  %10 = load i32, i32* %i, align 4, !dbg !8277
  %mul12 = mul nsw i32 %10, 8, !dbg !8278
  %idx.ext13 = sext i32 %mul12 to i64, !dbg !8279
  %add.ptr14 = getelementptr inbounds i8, i8* %arraydecay11, i64 %idx.ext13, !dbg !8279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr10, i8* %add.ptr14, i64 8, i32 1, i1 false), !dbg !8280
  br label %for.inc15, !dbg !8280

for.inc15:                                        ; preds = %for.body7
  %11 = load i32, i32* %i, align 4, !dbg !8281
  %inc16 = add nsw i32 %11, 1, !dbg !8281
  store i32 %inc16, i32* %i, align 4, !dbg !8281
  br label %for.cond5, !dbg !8283, !llvm.loop !8284

for.end17:                                        ; preds = %for.cond5
  ret void, !dbg !8286
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @binkb_init_bundle(%struct.BinkContext* %c, i32 %bundle_num) #0 !dbg !8287 {
entry:
  %c.addr = alloca %struct.BinkContext*, align 8
  %bundle_num.addr = alloca i32, align 4
  store %struct.BinkContext* %c, %struct.BinkContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BinkContext** %c.addr, metadata !8290, metadata !1735), !dbg !8291
  store i32 %bundle_num, i32* %bundle_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bundle_num.addr, metadata !8292, metadata !1735), !dbg !8293
  %0 = load i32, i32* %bundle_num.addr, align 4, !dbg !8294
  %idxprom = sext i32 %0 to i64, !dbg !8295
  %1 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8295
  %bundle = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %1, i32 0, i32 9, !dbg !8296
  %arrayidx = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle, i64 0, i64 %idxprom, !dbg !8295
  %data = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx, i32 0, i32 2, !dbg !8297
  %2 = load i8*, i8** %data, align 8, !dbg !8297
  %3 = load i32, i32* %bundle_num.addr, align 4, !dbg !8298
  %idxprom1 = sext i32 %3 to i64, !dbg !8299
  %4 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8299
  %bundle2 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %4, i32 0, i32 9, !dbg !8300
  %arrayidx3 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle2, i64 0, i64 %idxprom1, !dbg !8299
  %cur_ptr = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx3, i32 0, i32 5, !dbg !8301
  store i8* %2, i8** %cur_ptr, align 8, !dbg !8302
  %5 = load i32, i32* %bundle_num.addr, align 4, !dbg !8303
  %idxprom4 = sext i32 %5 to i64, !dbg !8304
  %6 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8304
  %bundle5 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %6, i32 0, i32 9, !dbg !8305
  %arrayidx6 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle5, i64 0, i64 %idxprom4, !dbg !8304
  %cur_dec = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx6, i32 0, i32 4, !dbg !8306
  store i8* %2, i8** %cur_dec, align 8, !dbg !8307
  %7 = load i32, i32* %bundle_num.addr, align 4, !dbg !8308
  %idxprom7 = sext i32 %7 to i64, !dbg !8309
  %8 = load %struct.BinkContext*, %struct.BinkContext** %c.addr, align 8, !dbg !8309
  %bundle8 = getelementptr inbounds %struct.BinkContext, %struct.BinkContext* %8, i32 0, i32 9, !dbg !8310
  %arrayidx9 = getelementptr inbounds [10 x %struct.Bundle], [10 x %struct.Bundle]* %bundle8, i64 0, i64 %idxprom7, !dbg !8309
  %len = getelementptr inbounds %struct.Bundle, %struct.Bundle* %arrayidx9, i32 0, i32 0, !dbg !8311
  store i32 13, i32* %len, align 8, !dbg !8312
  ret void, !dbg !8313
}

declare void @av_frame_free(%struct.AVFrame**) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1731, !1732}
!llvm.ident = !{!1733}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !925, globals: !946)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--bink.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !901, !913}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OldSources", file: !888, line: 45, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/bink.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900}
!890 = !DIEnumerator(name: "BINKB_SRC_BLOCK_TYPES", value: 0)
!891 = !DIEnumerator(name: "BINKB_SRC_COLORS", value: 1)
!892 = !DIEnumerator(name: "BINKB_SRC_PATTERN", value: 2)
!893 = !DIEnumerator(name: "BINKB_SRC_X_OFF", value: 3)
!894 = !DIEnumerator(name: "BINKB_SRC_Y_OFF", value: 4)
!895 = !DIEnumerator(name: "BINKB_SRC_INTRA_DC", value: 5)
!896 = !DIEnumerator(name: "BINKB_SRC_INTER_DC", value: 6)
!897 = !DIEnumerator(name: "BINKB_SRC_INTRA_Q", value: 7)
!898 = !DIEnumerator(name: "BINKB_SRC_INTER_Q", value: 8)
!899 = !DIEnumerator(name: "BINKB_SRC_INTER_COEFS", value: 9)
!900 = !DIEnumerator(name: "BINKB_NB_SRC", value: 10)
!901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sources", file: !888, line: 74, size: 32, align: 32, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909, !910, !911, !912}
!903 = !DIEnumerator(name: "BINK_SRC_BLOCK_TYPES", value: 0)
!904 = !DIEnumerator(name: "BINK_SRC_SUB_BLOCK_TYPES", value: 1)
!905 = !DIEnumerator(name: "BINK_SRC_COLORS", value: 2)
!906 = !DIEnumerator(name: "BINK_SRC_PATTERN", value: 3)
!907 = !DIEnumerator(name: "BINK_SRC_X_OFF", value: 4)
!908 = !DIEnumerator(name: "BINK_SRC_Y_OFF", value: 5)
!909 = !DIEnumerator(name: "BINK_SRC_INTRA_DC", value: 6)
!910 = !DIEnumerator(name: "BINK_SRC_INTER_DC", value: 7)
!911 = !DIEnumerator(name: "BINK_SRC_RUN", value: 8)
!912 = !DIEnumerator(name: "BINK_NB_SRC", value: 9)
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BlockTypes", file: !888, line: 133, size: 32, align: 32, elements: !914)
!914 = !{!915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!915 = !DIEnumerator(name: "SKIP_BLOCK", value: 0)
!916 = !DIEnumerator(name: "SCALED_BLOCK", value: 1)
!917 = !DIEnumerator(name: "MOTION_BLOCK", value: 2)
!918 = !DIEnumerator(name: "RUN_BLOCK", value: 3)
!919 = !DIEnumerator(name: "RESIDUE_BLOCK", value: 4)
!920 = !DIEnumerator(name: "INTRA_BLOCK", value: 5)
!921 = !DIEnumerator(name: "FILL_BLOCK", value: 6)
!922 = !DIEnumerator(name: "INTER_BLOCK", value: 7)
!923 = !DIEnumerator(name: "PATTERN_BLOCK", value: 8)
!924 = !DIEnumerator(name: "RAW_BLOCK", value: 9)
!925 = !{!926, !927, !928, !936, !938, !940, !943}
!926 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!927 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !931, line: 221, size: 32, align: 8, elements: !932)
!931 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !930, file: !931, line: 221, baseType: !934, size: 32, align: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !935, line: 51, baseType: !927)
!935 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !935, line: 40, baseType: !937)
!937 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !935, line: 36, baseType: !939)
!939 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !935, line: 37, baseType: !942)
!942 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !935, line: 48, baseType: !945)
!945 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!946 = !{!947, !1670, !1677, !1678, !1693, !1697, !1698, !1705, !1707, !1708, !1710, !1711, !1715, !1716, !1717, !1719, !1721, !1724, !1725, !1729, !1730}
!947 = distinct !DIGlobalVariable(name: "ff_bink_decoder", scope: !0, file: !888, line: 1384, type: !948, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_bink_decoder)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !950)
!950 = !{!951, !955, !956, !957, !958, !959, !968, !971, !974, !977, !982, !983, !1025, !1033, !1034, !1035, !1037, !1585, !1591, !1599, !1603, !1604, !1641, !1645, !1649, !1650, !1654, !1658, !1659, !1663, !1664, !1665}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !949, file: !14, line: 3475, baseType: !952, size: 64, align: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !949, file: !14, line: 3480, baseType: !952, size: 64, align: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !949, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !949, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !949, file: !14, line: 3487, baseType: !926, size: 32, align: 32, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !949, file: !14, line: 3488, baseType: !960, size: 64, align: 64, offset: 256)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !963, line: 61, baseType: !964)
!963 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !963, line: 58, size: 64, align: 32, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !964, file: !963, line: 59, baseType: !926, size: 32, align: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !964, file: !963, line: 60, baseType: !926, size: 32, align: 32, offset: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !949, file: !14, line: 3489, baseType: !969, size: 64, align: 64, offset: 320)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !949, file: !14, line: 3490, baseType: !972, size: 64, align: 64, offset: 384)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !949, file: !14, line: 3491, baseType: !975, size: 64, align: 64, offset: 448)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !949, file: !14, line: 3492, baseType: !978, size: 64, align: 64, offset: 512)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !935, line: 55, baseType: !981)
!981 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !949, file: !14, line: 3493, baseType: !944, size: 8, align: 8, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !949, file: !14, line: 3494, baseType: !984, size: 64, align: 64, offset: 640)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !988)
!988 = !{!989, !990, !995, !999, !1000, !1001, !1002, !1006, !1012, !1014, !1018}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !987, file: !691, line: 72, baseType: !952, size: 64, align: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !987, file: !691, line: 78, baseType: !991, size: 64, align: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!952, !994}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !987, file: !691, line: 85, baseType: !996, size: 64, align: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !987, file: !691, line: 93, baseType: !926, size: 32, align: 32, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !987, file: !691, line: 99, baseType: !926, size: 32, align: 32, offset: 224)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !987, file: !691, line: 108, baseType: !926, size: 32, align: 32, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !987, file: !691, line: 113, baseType: !1003, size: 64, align: 64, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!994, !994, !994}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !987, file: !691, line: 123, baseType: !1007, size: 64, align: 64, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!1010, !1010}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !987, file: !691, line: 130, baseType: !1013, size: 32, align: 32, offset: 448)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !987, file: !691, line: 136, baseType: !1015, size: 64, align: 64, offset: 512)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!1013, !994}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !987, file: !691, line: 142, baseType: !1019, size: 64, align: 64, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!926, !1022, !994, !952, !926}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !949, file: !14, line: 3495, baseType: !1026, size: 64, align: 64, offset: 704)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1030)
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1029, file: !14, line: 3402, baseType: !926, size: 32, align: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1029, file: !14, line: 3403, baseType: !952, size: 64, align: 64, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !949, file: !14, line: 3507, baseType: !952, size: 64, align: 64, offset: 768)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !949, file: !14, line: 3516, baseType: !926, size: 32, align: 32, offset: 832)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !949, file: !14, line: 3517, baseType: !1036, size: 64, align: 64, offset: 896)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !949, file: !14, line: 3527, baseType: !1038, size: 64, align: 64, offset: 960)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!926, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1051, !1052, !1053, !1054, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1331, !1335, !1336, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1523, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1043, file: !14, line: 1561, baseType: !984, size: 64, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1043, file: !14, line: 1562, baseType: !926, size: 32, align: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1043, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1043, file: !14, line: 1565, baseType: !1049, size: 64, align: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1043, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1043, file: !14, line: 1581, baseType: !927, size: 32, align: 32, offset: 224)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1043, file: !14, line: 1583, baseType: !994, size: 64, align: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1043, file: !14, line: 1591, baseType: !1055, size: 64, align: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1057, line: 129, size: 1664, align: 64, elements: !1058)
!1057 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1058 = !{!1059, !1060, !1061, !1062, !1157, !1178, !1179, !1208, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1056, file: !1057, line: 136, baseType: !926, size: 32, align: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1056, file: !1057, line: 151, baseType: !926, size: 32, align: 32, offset: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1056, file: !1057, line: 157, baseType: !926, size: 32, align: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1056, file: !1057, line: 159, baseType: !1063, size: 64, align: 64, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1066)
!1066 = !{!1067, !1071, !1073, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1111, !1113, !1114, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1145, !1146, !1147, !1148, !1149, !1150, !1153, !1154, !1155, !1156}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1065, file: !722, line: 282, baseType: !1068, size: 512, align: 64)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 512, align: 64, elements: !1069)
!1069 = !{!1070}
!1070 = !DISubrange(count: 8)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1065, file: !722, line: 299, baseType: !1072, size: 256, align: 32, offset: 512)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 256, align: 32, elements: !1069)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1065, file: !722, line: 315, baseType: !1074, size: 64, align: 64, offset: 768)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1065, file: !722, line: 326, baseType: !926, size: 32, align: 32, offset: 832)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1065, file: !722, line: 326, baseType: !926, size: 32, align: 32, offset: 864)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1065, file: !722, line: 334, baseType: !926, size: 32, align: 32, offset: 896)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1065, file: !722, line: 341, baseType: !926, size: 32, align: 32, offset: 928)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1065, file: !722, line: 346, baseType: !926, size: 32, align: 32, offset: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1065, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1065, file: !722, line: 356, baseType: !962, size: 64, align: 32, offset: 1024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1065, file: !722, line: 361, baseType: !936, size: 64, align: 64, offset: 1088)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1065, file: !722, line: 369, baseType: !936, size: 64, align: 64, offset: 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1065, file: !722, line: 377, baseType: !936, size: 64, align: 64, offset: 1216)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1065, file: !722, line: 382, baseType: !926, size: 32, align: 32, offset: 1280)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1065, file: !722, line: 386, baseType: !926, size: 32, align: 32, offset: 1312)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1065, file: !722, line: 391, baseType: !926, size: 32, align: 32, offset: 1344)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1065, file: !722, line: 396, baseType: !994, size: 64, align: 64, offset: 1408)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1065, file: !722, line: 403, baseType: !1090, size: 512, align: 64, offset: 1472)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !980, size: 512, align: 64, elements: !1069)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1065, file: !722, line: 410, baseType: !926, size: 32, align: 32, offset: 1984)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1065, file: !722, line: 415, baseType: !926, size: 32, align: 32, offset: 2016)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1065, file: !722, line: 420, baseType: !926, size: 32, align: 32, offset: 2048)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1065, file: !722, line: 425, baseType: !926, size: 32, align: 32, offset: 2080)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1065, file: !722, line: 435, baseType: !936, size: 64, align: 64, offset: 2112)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1065, file: !722, line: 440, baseType: !926, size: 32, align: 32, offset: 2176)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1065, file: !722, line: 445, baseType: !980, size: 64, align: 64, offset: 2240)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1065, file: !722, line: 459, baseType: !1099, size: 512, align: 64, offset: 2304)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 512, align: 64, elements: !1069)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1102, line: 94, baseType: !1103)
!1102 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1102, line: 81, size: 192, align: 64, elements: !1104)
!1104 = !{!1105, !1109, !1110}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1103, file: !1102, line: 82, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1102, line: 73, baseType: !1108)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1102, line: 73, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1103, file: !1102, line: 89, baseType: !943, size: 64, align: 64, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1103, file: !1102, line: 93, baseType: !926, size: 32, align: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1065, file: !722, line: 473, baseType: !1112, size: 64, align: 64, offset: 2816)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1065, file: !722, line: 477, baseType: !926, size: 32, align: 32, offset: 2880)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1065, file: !722, line: 479, baseType: !1115, size: 64, align: 64, offset: 2944)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1128}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1118, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1118, file: !722, line: 203, baseType: !943, size: 64, align: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1118, file: !722, line: 204, baseType: !926, size: 32, align: 32, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1118, file: !722, line: 205, baseType: !1124, size: 64, align: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1126, line: 86, baseType: !1127)
!1126 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1126, line: 86, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1118, file: !722, line: 206, baseType: !1100, size: 64, align: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1065, file: !722, line: 480, baseType: !926, size: 32, align: 32, offset: 3008)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1065, file: !722, line: 505, baseType: !926, size: 32, align: 32, offset: 3040)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1065, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1065, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1065, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1065, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1065, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1065, file: !722, line: 532, baseType: !936, size: 64, align: 64, offset: 3264)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1065, file: !722, line: 539, baseType: !936, size: 64, align: 64, offset: 3328)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1065, file: !722, line: 547, baseType: !936, size: 64, align: 64, offset: 3392)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1065, file: !722, line: 554, baseType: !1124, size: 64, align: 64, offset: 3456)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1065, file: !722, line: 563, baseType: !926, size: 32, align: 32, offset: 3520)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1065, file: !722, line: 572, baseType: !926, size: 32, align: 32, offset: 3552)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1065, file: !722, line: 581, baseType: !926, size: 32, align: 32, offset: 3584)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1065, file: !722, line: 588, baseType: !1144, size: 64, align: 64, offset: 3648)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1065, file: !722, line: 593, baseType: !926, size: 32, align: 32, offset: 3712)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1065, file: !722, line: 596, baseType: !926, size: 32, align: 32, offset: 3744)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1065, file: !722, line: 599, baseType: !1100, size: 64, align: 64, offset: 3776)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1065, file: !722, line: 605, baseType: !1100, size: 64, align: 64, offset: 3840)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1065, file: !722, line: 616, baseType: !1100, size: 64, align: 64, offset: 3904)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1065, file: !722, line: 626, baseType: !1151, size: 64, align: 64, offset: 3968)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1152, line: 216, baseType: !981)
!1152 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1065, file: !722, line: 627, baseType: !1151, size: 64, align: 64, offset: 4032)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1065, file: !722, line: 628, baseType: !1151, size: 64, align: 64, offset: 4096)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1065, file: !722, line: 629, baseType: !1151, size: 64, align: 64, offset: 4160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1065, file: !722, line: 645, baseType: !1100, size: 64, align: 64, offset: 4224)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1056, file: !1057, line: 161, baseType: !1158, size: 64, align: 64, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1057, line: 117, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1057, line: 100, size: 832, align: 64, elements: !1161)
!1161 = !{!1162, !1169, !1170, !1171, !1172, !1173, !1175, !1176, !1177}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1160, file: !1057, line: 105, baseType: !1163, size: 256, align: 64)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 256, align: 64, elements: !1167)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1102, line: 238, baseType: !1166)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1102, line: 238, flags: DIFlagFwdDecl)
!1167 = !{!1168}
!1168 = !DISubrange(count: 4)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1160, file: !1057, line: 110, baseType: !926, size: 32, align: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1160, file: !1057, line: 111, baseType: !926, size: 32, align: 32, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1160, file: !1057, line: 111, baseType: !926, size: 32, align: 32, offset: 320)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1160, file: !1057, line: 112, baseType: !1072, size: 256, align: 32, offset: 352)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1160, file: !1057, line: 113, baseType: !1174, size: 128, align: 32, offset: 608)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 128, align: 32, elements: !1167)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1160, file: !1057, line: 114, baseType: !926, size: 32, align: 32, offset: 736)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1160, file: !1057, line: 115, baseType: !926, size: 32, align: 32, offset: 768)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1160, file: !1057, line: 116, baseType: !926, size: 32, align: 32, offset: 800)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1056, file: !1057, line: 163, baseType: !994, size: 64, align: 64, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1056, file: !1057, line: 165, baseType: !1180, size: 128, align: 64, offset: 320)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1057, line: 122, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1057, line: 119, size: 128, align: 64, elements: !1182)
!1182 = !{!1183, !1207}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1181, file: !1057, line: 120, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1203, !1204, !1205, !1206}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1186, file: !14, line: 1451, baseType: !1100, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1186, file: !14, line: 1461, baseType: !936, size: 64, align: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1186, file: !14, line: 1467, baseType: !936, size: 64, align: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1186, file: !14, line: 1468, baseType: !943, size: 64, align: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1186, file: !14, line: 1469, baseType: !926, size: 32, align: 32, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1186, file: !14, line: 1470, baseType: !926, size: 32, align: 32, offset: 288)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1186, file: !14, line: 1474, baseType: !926, size: 32, align: 32, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1186, file: !14, line: 1479, baseType: !1196, size: 64, align: 64, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1199)
!1199 = !{!1200, !1201, !1202}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1198, file: !14, line: 1412, baseType: !943, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1198, file: !14, line: 1413, baseType: !926, size: 32, align: 32, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1198, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1186, file: !14, line: 1480, baseType: !926, size: 32, align: 32, offset: 448)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1186, file: !14, line: 1486, baseType: !936, size: 64, align: 64, offset: 512)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1186, file: !14, line: 1488, baseType: !936, size: 64, align: 64, offset: 576)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1186, file: !14, line: 1497, baseType: !936, size: 64, align: 64, offset: 640)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1181, file: !1057, line: 121, baseType: !1063, size: 64, align: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1056, file: !1057, line: 166, baseType: !1209, size: 128, align: 64, offset: 448)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1057, line: 127, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1057, line: 124, size: 128, align: 64, elements: !1211)
!1211 = !{!1212, !1285}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1210, file: !1057, line: 125, baseType: !1213, size: 64, align: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64, align: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1217)
!1217 = !{!1218, !1219, !1243, !1247, !1248, !1282, !1283, !1284}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1216, file: !14, line: 5751, baseType: !984, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1216, file: !14, line: 5756, baseType: !1220, size: 64, align: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1223)
!1223 = !{!1224, !1225, !1228, !1229, !1230, !1234, !1238, !1242}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1222, file: !14, line: 5797, baseType: !952, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1222, file: !14, line: 5804, baseType: !1226, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1222, file: !14, line: 5815, baseType: !984, size: 64, align: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1222, file: !14, line: 5825, baseType: !926, size: 32, align: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1222, file: !14, line: 5826, baseType: !1231, size: 64, align: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!926, !1214}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1222, file: !14, line: 5827, baseType: !1235, size: 64, align: 64, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!926, !1214, !1184}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1222, file: !14, line: 5828, baseType: !1239, size: 64, align: 64, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{null, !1214}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1222, file: !14, line: 5829, baseType: !1239, size: 64, align: 64, offset: 448)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1216, file: !14, line: 5762, baseType: !1244, size: 64, align: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1246)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1216, file: !14, line: 5768, baseType: !994, size: 64, align: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1216, file: !14, line: 5775, baseType: !1249, size: 64, align: 64, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1252)
!1252 = !{!1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1251, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1251, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1251, file: !14, line: 3948, baseType: !934, size: 32, align: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1251, file: !14, line: 3958, baseType: !943, size: 64, align: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1251, file: !14, line: 3962, baseType: !926, size: 32, align: 32, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1251, file: !14, line: 3968, baseType: !926, size: 32, align: 32, offset: 224)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1251, file: !14, line: 3973, baseType: !936, size: 64, align: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1251, file: !14, line: 3986, baseType: !926, size: 32, align: 32, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1251, file: !14, line: 3999, baseType: !926, size: 32, align: 32, offset: 352)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1251, file: !14, line: 4004, baseType: !926, size: 32, align: 32, offset: 384)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1251, file: !14, line: 4005, baseType: !926, size: 32, align: 32, offset: 416)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1251, file: !14, line: 4010, baseType: !926, size: 32, align: 32, offset: 448)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1251, file: !14, line: 4011, baseType: !926, size: 32, align: 32, offset: 480)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1251, file: !14, line: 4020, baseType: !962, size: 64, align: 32, offset: 512)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1251, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1251, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1251, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1251, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1251, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1251, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1251, file: !14, line: 4039, baseType: !926, size: 32, align: 32, offset: 768)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1251, file: !14, line: 4046, baseType: !980, size: 64, align: 64, offset: 832)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1251, file: !14, line: 4050, baseType: !926, size: 32, align: 32, offset: 896)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1251, file: !14, line: 4054, baseType: !926, size: 32, align: 32, offset: 928)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1251, file: !14, line: 4061, baseType: !926, size: 32, align: 32, offset: 960)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1251, file: !14, line: 4065, baseType: !926, size: 32, align: 32, offset: 992)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1251, file: !14, line: 4073, baseType: !926, size: 32, align: 32, offset: 1024)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1251, file: !14, line: 4080, baseType: !926, size: 32, align: 32, offset: 1056)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1251, file: !14, line: 4084, baseType: !926, size: 32, align: 32, offset: 1088)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1216, file: !14, line: 5781, baseType: !1249, size: 64, align: 64, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1216, file: !14, line: 5787, baseType: !962, size: 64, align: 32, offset: 384)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1216, file: !14, line: 5793, baseType: !962, size: 64, align: 32, offset: 448)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1210, file: !1057, line: 126, baseType: !926, size: 32, align: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1056, file: !1057, line: 172, baseType: !1184, size: 64, align: 64, offset: 576)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1056, file: !1057, line: 177, baseType: !943, size: 64, align: 64, offset: 640)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1056, file: !1057, line: 178, baseType: !927, size: 32, align: 32, offset: 704)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1056, file: !1057, line: 180, baseType: !994, size: 64, align: 64, offset: 768)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1056, file: !1057, line: 185, baseType: !926, size: 32, align: 32, offset: 832)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1056, file: !1057, line: 190, baseType: !994, size: 64, align: 64, offset: 896)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1056, file: !1057, line: 195, baseType: !926, size: 32, align: 32, offset: 960)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1056, file: !1057, line: 200, baseType: !1184, size: 64, align: 64, offset: 1024)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1056, file: !1057, line: 201, baseType: !926, size: 32, align: 32, offset: 1088)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1056, file: !1057, line: 202, baseType: !1063, size: 64, align: 64, offset: 1152)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1056, file: !1057, line: 203, baseType: !926, size: 32, align: 32, offset: 1216)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1056, file: !1057, line: 205, baseType: !926, size: 32, align: 32, offset: 1248)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1056, file: !1057, line: 206, baseType: !926, size: 32, align: 32, offset: 1280)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1056, file: !1057, line: 209, baseType: !1151, size: 64, align: 64, offset: 1344)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1056, file: !1057, line: 212, baseType: !1151, size: 64, align: 64, offset: 1408)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1056, file: !1057, line: 213, baseType: !1063, size: 64, align: 64, offset: 1472)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1056, file: !1057, line: 215, baseType: !926, size: 32, align: 32, offset: 1536)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1056, file: !1057, line: 217, baseType: !926, size: 32, align: 32, offset: 1568)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1056, file: !1057, line: 220, baseType: !926, size: 32, align: 32, offset: 1600)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1043, file: !14, line: 1598, baseType: !994, size: 64, align: 64, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1043, file: !14, line: 1606, baseType: !936, size: 64, align: 64, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1043, file: !14, line: 1614, baseType: !926, size: 32, align: 32, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1043, file: !14, line: 1622, baseType: !926, size: 32, align: 32, offset: 544)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1043, file: !14, line: 1628, baseType: !926, size: 32, align: 32, offset: 576)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1043, file: !14, line: 1636, baseType: !926, size: 32, align: 32, offset: 608)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1043, file: !14, line: 1643, baseType: !926, size: 32, align: 32, offset: 640)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1043, file: !14, line: 1657, baseType: !943, size: 64, align: 64, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1043, file: !14, line: 1658, baseType: !926, size: 32, align: 32, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1043, file: !14, line: 1679, baseType: !962, size: 64, align: 32, offset: 800)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1043, file: !14, line: 1688, baseType: !926, size: 32, align: 32, offset: 864)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1043, file: !14, line: 1712, baseType: !926, size: 32, align: 32, offset: 896)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1043, file: !14, line: 1729, baseType: !926, size: 32, align: 32, offset: 928)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1043, file: !14, line: 1729, baseType: !926, size: 32, align: 32, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1043, file: !14, line: 1744, baseType: !926, size: 32, align: 32, offset: 992)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1043, file: !14, line: 1744, baseType: !926, size: 32, align: 32, offset: 1024)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1043, file: !14, line: 1751, baseType: !926, size: 32, align: 32, offset: 1056)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1043, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1043, file: !14, line: 1791, baseType: !1324, size: 64, align: 64, offset: 1152)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{null, !1327, !1328, !1330, !926, !926, !926}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1043, file: !14, line: 1808, baseType: !1332, size: 64, align: 64, offset: 1216)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!473, !1327, !969}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1043, file: !14, line: 1816, baseType: !926, size: 32, align: 32, offset: 1280)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1043, file: !14, line: 1825, baseType: !1337, size: 32, align: 32, offset: 1312)
!1337 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1043, file: !14, line: 1830, baseType: !926, size: 32, align: 32, offset: 1344)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1043, file: !14, line: 1838, baseType: !1337, size: 32, align: 32, offset: 1376)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1043, file: !14, line: 1846, baseType: !926, size: 32, align: 32, offset: 1408)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1043, file: !14, line: 1851, baseType: !926, size: 32, align: 32, offset: 1440)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1043, file: !14, line: 1861, baseType: !1337, size: 32, align: 32, offset: 1472)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1043, file: !14, line: 1868, baseType: !1337, size: 32, align: 32, offset: 1504)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1043, file: !14, line: 1875, baseType: !1337, size: 32, align: 32, offset: 1536)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1043, file: !14, line: 1882, baseType: !1337, size: 32, align: 32, offset: 1568)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1043, file: !14, line: 1889, baseType: !1337, size: 32, align: 32, offset: 1600)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1043, file: !14, line: 1896, baseType: !1337, size: 32, align: 32, offset: 1632)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1043, file: !14, line: 1903, baseType: !1337, size: 32, align: 32, offset: 1664)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1043, file: !14, line: 1910, baseType: !926, size: 32, align: 32, offset: 1696)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1043, file: !14, line: 1915, baseType: !926, size: 32, align: 32, offset: 1728)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1043, file: !14, line: 1926, baseType: !1330, size: 64, align: 64, offset: 1792)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1043, file: !14, line: 1935, baseType: !962, size: 64, align: 32, offset: 1856)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1043, file: !14, line: 1942, baseType: !926, size: 32, align: 32, offset: 1920)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1043, file: !14, line: 1948, baseType: !926, size: 32, align: 32, offset: 1952)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1043, file: !14, line: 1954, baseType: !926, size: 32, align: 32, offset: 1984)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1043, file: !14, line: 1960, baseType: !926, size: 32, align: 32, offset: 2016)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1043, file: !14, line: 1984, baseType: !926, size: 32, align: 32, offset: 2048)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1043, file: !14, line: 1991, baseType: !926, size: 32, align: 32, offset: 2080)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1043, file: !14, line: 1996, baseType: !926, size: 32, align: 32, offset: 2112)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1043, file: !14, line: 2004, baseType: !926, size: 32, align: 32, offset: 2144)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1043, file: !14, line: 2011, baseType: !926, size: 32, align: 32, offset: 2176)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1043, file: !14, line: 2018, baseType: !926, size: 32, align: 32, offset: 2208)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1043, file: !14, line: 2027, baseType: !926, size: 32, align: 32, offset: 2240)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1043, file: !14, line: 2034, baseType: !926, size: 32, align: 32, offset: 2272)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1043, file: !14, line: 2044, baseType: !926, size: 32, align: 32, offset: 2304)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1043, file: !14, line: 2054, baseType: !1367, size: 64, align: 64, offset: 2368)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !935, line: 49, baseType: !1369)
!1369 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1043, file: !14, line: 2061, baseType: !1367, size: 64, align: 64, offset: 2432)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1043, file: !14, line: 2066, baseType: !926, size: 32, align: 32, offset: 2496)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1043, file: !14, line: 2070, baseType: !926, size: 32, align: 32, offset: 2528)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1043, file: !14, line: 2078, baseType: !926, size: 32, align: 32, offset: 2560)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1043, file: !14, line: 2085, baseType: !926, size: 32, align: 32, offset: 2592)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1043, file: !14, line: 2092, baseType: !926, size: 32, align: 32, offset: 2624)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1043, file: !14, line: 2099, baseType: !926, size: 32, align: 32, offset: 2656)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1043, file: !14, line: 2106, baseType: !926, size: 32, align: 32, offset: 2688)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1043, file: !14, line: 2113, baseType: !926, size: 32, align: 32, offset: 2720)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1043, file: !14, line: 2120, baseType: !926, size: 32, align: 32, offset: 2752)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1043, file: !14, line: 2125, baseType: !926, size: 32, align: 32, offset: 2784)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1043, file: !14, line: 2133, baseType: !926, size: 32, align: 32, offset: 2816)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1043, file: !14, line: 2140, baseType: !926, size: 32, align: 32, offset: 2848)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1043, file: !14, line: 2145, baseType: !926, size: 32, align: 32, offset: 2880)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1043, file: !14, line: 2153, baseType: !926, size: 32, align: 32, offset: 2912)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1043, file: !14, line: 2158, baseType: !926, size: 32, align: 32, offset: 2944)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1043, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1043, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1043, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1043, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1043, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1043, file: !14, line: 2203, baseType: !926, size: 32, align: 32, offset: 3136)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1043, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1043, file: !14, line: 2212, baseType: !926, size: 32, align: 32, offset: 3200)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1043, file: !14, line: 2213, baseType: !926, size: 32, align: 32, offset: 3232)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1043, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1043, file: !14, line: 2232, baseType: !926, size: 32, align: 32, offset: 3296)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1043, file: !14, line: 2243, baseType: !926, size: 32, align: 32, offset: 3328)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1043, file: !14, line: 2249, baseType: !926, size: 32, align: 32, offset: 3360)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1043, file: !14, line: 2256, baseType: !926, size: 32, align: 32, offset: 3392)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1043, file: !14, line: 2263, baseType: !980, size: 64, align: 64, offset: 3456)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1043, file: !14, line: 2270, baseType: !980, size: 64, align: 64, offset: 3520)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1043, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1043, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1043, file: !14, line: 2367, baseType: !1405, size: 64, align: 64, offset: 3648)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!926, !1327, !1063, !926}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1043, file: !14, line: 2383, baseType: !926, size: 32, align: 32, offset: 3712)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1043, file: !14, line: 2386, baseType: !1337, size: 32, align: 32, offset: 3744)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1043, file: !14, line: 2387, baseType: !1337, size: 32, align: 32, offset: 3776)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1043, file: !14, line: 2394, baseType: !926, size: 32, align: 32, offset: 3808)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1043, file: !14, line: 2401, baseType: !926, size: 32, align: 32, offset: 3840)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1043, file: !14, line: 2408, baseType: !926, size: 32, align: 32, offset: 3872)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1043, file: !14, line: 2415, baseType: !926, size: 32, align: 32, offset: 3904)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1043, file: !14, line: 2422, baseType: !926, size: 32, align: 32, offset: 3936)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1043, file: !14, line: 2423, baseType: !1417, size: 64, align: 64, offset: 3968)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64, align: 64)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1419, file: !14, line: 827, baseType: !926, size: 32, align: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1419, file: !14, line: 828, baseType: !926, size: 32, align: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1419, file: !14, line: 829, baseType: !926, size: 32, align: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1419, file: !14, line: 830, baseType: !1337, size: 32, align: 32, offset: 96)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1043, file: !14, line: 2430, baseType: !936, size: 64, align: 64, offset: 4032)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1043, file: !14, line: 2437, baseType: !936, size: 64, align: 64, offset: 4096)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1043, file: !14, line: 2444, baseType: !1337, size: 32, align: 32, offset: 4160)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1043, file: !14, line: 2451, baseType: !1337, size: 32, align: 32, offset: 4192)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1043, file: !14, line: 2458, baseType: !926, size: 32, align: 32, offset: 4224)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1043, file: !14, line: 2469, baseType: !926, size: 32, align: 32, offset: 4256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1043, file: !14, line: 2475, baseType: !926, size: 32, align: 32, offset: 4288)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1043, file: !14, line: 2481, baseType: !926, size: 32, align: 32, offset: 4320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1043, file: !14, line: 2485, baseType: !926, size: 32, align: 32, offset: 4352)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1043, file: !14, line: 2489, baseType: !926, size: 32, align: 32, offset: 4384)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1043, file: !14, line: 2493, baseType: !926, size: 32, align: 32, offset: 4416)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1043, file: !14, line: 2501, baseType: !926, size: 32, align: 32, offset: 4448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1043, file: !14, line: 2506, baseType: !926, size: 32, align: 32, offset: 4480)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1043, file: !14, line: 2510, baseType: !926, size: 32, align: 32, offset: 4512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1043, file: !14, line: 2514, baseType: !936, size: 64, align: 64, offset: 4544)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1043, file: !14, line: 2528, baseType: !1441, size: 64, align: 64, offset: 4608)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64, align: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1327, !994, !926, !926}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1043, file: !14, line: 2534, baseType: !926, size: 32, align: 32, offset: 4672)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1043, file: !14, line: 2545, baseType: !926, size: 32, align: 32, offset: 4704)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1043, file: !14, line: 2547, baseType: !926, size: 32, align: 32, offset: 4736)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1043, file: !14, line: 2549, baseType: !926, size: 32, align: 32, offset: 4768)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1043, file: !14, line: 2551, baseType: !926, size: 32, align: 32, offset: 4800)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1043, file: !14, line: 2553, baseType: !926, size: 32, align: 32, offset: 4832)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1043, file: !14, line: 2555, baseType: !926, size: 32, align: 32, offset: 4864)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1043, file: !14, line: 2557, baseType: !926, size: 32, align: 32, offset: 4896)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1043, file: !14, line: 2559, baseType: !926, size: 32, align: 32, offset: 4928)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1043, file: !14, line: 2563, baseType: !926, size: 32, align: 32, offset: 4960)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1043, file: !14, line: 2571, baseType: !1455, size: 64, align: 64, offset: 4992)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1043, file: !14, line: 2579, baseType: !1455, size: 64, align: 64, offset: 5056)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1043, file: !14, line: 2586, baseType: !926, size: 32, align: 32, offset: 5120)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1043, file: !14, line: 2615, baseType: !926, size: 32, align: 32, offset: 5152)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1043, file: !14, line: 2627, baseType: !926, size: 32, align: 32, offset: 5184)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1043, file: !14, line: 2637, baseType: !926, size: 32, align: 32, offset: 5216)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1043, file: !14, line: 2681, baseType: !926, size: 32, align: 32, offset: 5248)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1043, file: !14, line: 2709, baseType: !936, size: 64, align: 64, offset: 5312)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1043, file: !14, line: 2716, baseType: !1464, size: 64, align: 64, offset: 5376)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473, !1477, !1483, !1487, !1488, !1489, !1490, !1496, !1497, !1498, !1499, !1500}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1466, file: !14, line: 3642, baseType: !952, size: 64, align: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1466, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1466, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1466, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1466, file: !14, line: 3669, baseType: !926, size: 32, align: 32, offset: 160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1466, file: !14, line: 3682, baseType: !1474, size: 64, align: 64, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!926, !1041, !1063}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1466, file: !14, line: 3698, baseType: !1478, size: 64, align: 64, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!926, !1041, !1481, !934}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1466, file: !14, line: 3712, baseType: !1484, size: 64, align: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!926, !1041, !926, !1481, !934}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1466, file: !14, line: 3726, baseType: !1478, size: 64, align: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1466, file: !14, line: 3737, baseType: !1038, size: 64, align: 64, offset: 448)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1466, file: !14, line: 3746, baseType: !926, size: 32, align: 32, offset: 512)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1466, file: !14, line: 3757, baseType: !1491, size: 64, align: 64, offset: 576)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !1494}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1466, file: !14, line: 3766, baseType: !1038, size: 64, align: 64, offset: 640)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1466, file: !14, line: 3774, baseType: !1038, size: 64, align: 64, offset: 704)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1466, file: !14, line: 3780, baseType: !926, size: 32, align: 32, offset: 768)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1466, file: !14, line: 3785, baseType: !926, size: 32, align: 32, offset: 800)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1466, file: !14, line: 3795, baseType: !1501, size: 64, align: 64, offset: 832)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!926, !1041, !1100}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1043, file: !14, line: 2728, baseType: !994, size: 64, align: 64, offset: 5440)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1043, file: !14, line: 2735, baseType: !1090, size: 512, align: 64, offset: 5504)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1043, file: !14, line: 2742, baseType: !926, size: 32, align: 32, offset: 6016)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1043, file: !14, line: 2755, baseType: !926, size: 32, align: 32, offset: 6048)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1043, file: !14, line: 2776, baseType: !926, size: 32, align: 32, offset: 6080)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1043, file: !14, line: 2783, baseType: !926, size: 32, align: 32, offset: 6112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1043, file: !14, line: 2791, baseType: !926, size: 32, align: 32, offset: 6144)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1043, file: !14, line: 2802, baseType: !1063, size: 64, align: 64, offset: 6208)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1043, file: !14, line: 2811, baseType: !926, size: 32, align: 32, offset: 6272)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1043, file: !14, line: 2821, baseType: !926, size: 32, align: 32, offset: 6304)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1043, file: !14, line: 2830, baseType: !926, size: 32, align: 32, offset: 6336)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1043, file: !14, line: 2840, baseType: !926, size: 32, align: 32, offset: 6368)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1043, file: !14, line: 2851, baseType: !1517, size: 64, align: 64, offset: 6400)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!926, !1327, !1520, !994, !1330, !926, !926}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!926, !1327, !994}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1043, file: !14, line: 2871, baseType: !1524, size: 64, align: 64, offset: 6464)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, align: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!926, !1327, !1527, !994, !1330, !926}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!926, !1327, !994, !926, !926}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1043, file: !14, line: 2878, baseType: !926, size: 32, align: 32, offset: 6528)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1043, file: !14, line: 2885, baseType: !926, size: 32, align: 32, offset: 6560)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1043, file: !14, line: 3005, baseType: !926, size: 32, align: 32, offset: 6592)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1043, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1043, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1043, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1043, file: !14, line: 3037, baseType: !943, size: 64, align: 64, offset: 6720)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1043, file: !14, line: 3038, baseType: !926, size: 32, align: 32, offset: 6784)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1043, file: !14, line: 3050, baseType: !980, size: 64, align: 64, offset: 6848)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1043, file: !14, line: 3065, baseType: !926, size: 32, align: 32, offset: 6912)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1043, file: !14, line: 3083, baseType: !926, size: 32, align: 32, offset: 6944)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1043, file: !14, line: 3092, baseType: !962, size: 64, align: 32, offset: 6976)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1043, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1043, file: !14, line: 3106, baseType: !962, size: 64, align: 32, offset: 7072)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1043, file: !14, line: 3113, baseType: !1545, size: 64, align: 64, offset: 7168)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64, align: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1558}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1548, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1548, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1548, file: !14, line: 720, baseType: !952, size: 64, align: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1548, file: !14, line: 724, baseType: !952, size: 64, align: 64, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1548, file: !14, line: 728, baseType: !926, size: 32, align: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1548, file: !14, line: 734, baseType: !1556, size: 64, align: 64, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1548, file: !14, line: 739, baseType: !1559, size: 64, align: 64, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1043, file: !14, line: 3129, baseType: !936, size: 64, align: 64, offset: 7232)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1043, file: !14, line: 3130, baseType: !936, size: 64, align: 64, offset: 7296)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1043, file: !14, line: 3131, baseType: !936, size: 64, align: 64, offset: 7360)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1043, file: !14, line: 3132, baseType: !936, size: 64, align: 64, offset: 7424)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1043, file: !14, line: 3139, baseType: !1455, size: 64, align: 64, offset: 7488)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1043, file: !14, line: 3147, baseType: !926, size: 32, align: 32, offset: 7552)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1043, file: !14, line: 3165, baseType: !926, size: 32, align: 32, offset: 7584)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1043, file: !14, line: 3172, baseType: !926, size: 32, align: 32, offset: 7616)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1043, file: !14, line: 3180, baseType: !926, size: 32, align: 32, offset: 7648)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1043, file: !14, line: 3191, baseType: !1367, size: 64, align: 64, offset: 7680)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1043, file: !14, line: 3199, baseType: !943, size: 64, align: 64, offset: 7744)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1043, file: !14, line: 3207, baseType: !1455, size: 64, align: 64, offset: 7808)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1043, file: !14, line: 3214, baseType: !927, size: 32, align: 32, offset: 7872)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1043, file: !14, line: 3224, baseType: !1196, size: 64, align: 64, offset: 7936)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1043, file: !14, line: 3225, baseType: !926, size: 32, align: 32, offset: 8000)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1043, file: !14, line: 3249, baseType: !1100, size: 64, align: 64, offset: 8064)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1043, file: !14, line: 3256, baseType: !926, size: 32, align: 32, offset: 8128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1043, file: !14, line: 3271, baseType: !926, size: 32, align: 32, offset: 8160)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1043, file: !14, line: 3279, baseType: !936, size: 64, align: 64, offset: 8192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1043, file: !14, line: 3301, baseType: !1100, size: 64, align: 64, offset: 8256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1043, file: !14, line: 3310, baseType: !926, size: 32, align: 32, offset: 8320)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1043, file: !14, line: 3337, baseType: !926, size: 32, align: 32, offset: 8352)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1043, file: !14, line: 3351, baseType: !926, size: 32, align: 32, offset: 8384)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1043, file: !14, line: 3359, baseType: !926, size: 32, align: 32, offset: 8416)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !949, file: !14, line: 3535, baseType: !1586, size: 64, align: 64, offset: 1024)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!926, !1041, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !949, file: !14, line: 3541, baseType: !1592, size: 64, align: 64, offset: 1088)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1057, line: 223, size: 128, align: 64, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1595, file: !1057, line: 224, baseType: !1481, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1595, file: !1057, line: 225, baseType: !1481, size: 64, align: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !949, file: !14, line: 3549, baseType: !1600, size: 64, align: 64, offset: 1152)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64, align: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{null, !1036}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !949, file: !14, line: 3551, baseType: !1038, size: 64, align: 64, offset: 1216)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !949, file: !14, line: 3552, baseType: !1605, size: 64, align: 64, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!926, !1041, !943, !926, !1608}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1640}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1610, file: !14, line: 3921, baseType: !1368, size: 16, align: 16)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1610, file: !14, line: 3922, baseType: !934, size: 32, align: 32, offset: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1610, file: !14, line: 3923, baseType: !934, size: 32, align: 32, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1610, file: !14, line: 3924, baseType: !927, size: 32, align: 32, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1610, file: !14, line: 3925, baseType: !1617, size: 64, align: 64, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1633, !1635, !1636, !1637, !1638, !1639}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1620, file: !14, line: 3886, baseType: !926, size: 32, align: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1620, file: !14, line: 3887, baseType: !926, size: 32, align: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1620, file: !14, line: 3888, baseType: !926, size: 32, align: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1620, file: !14, line: 3889, baseType: !926, size: 32, align: 32, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1620, file: !14, line: 3890, baseType: !926, size: 32, align: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1620, file: !14, line: 3897, baseType: !1628, size: 768, align: 64, offset: 192)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1629, file: !14, line: 3855, baseType: !1068, size: 512, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1629, file: !14, line: 3857, baseType: !1072, size: 256, align: 32, offset: 512)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1620, file: !14, line: 3903, baseType: !1634, size: 256, align: 64, offset: 960)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 256, align: 64, elements: !1167)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1620, file: !14, line: 3904, baseType: !1174, size: 128, align: 32, offset: 1216)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1620, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1620, file: !14, line: 3908, baseType: !1455, size: 64, align: 64, offset: 1408)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1620, file: !14, line: 3915, baseType: !1455, size: 64, align: 64, offset: 1472)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1620, file: !14, line: 3917, baseType: !926, size: 32, align: 32, offset: 1536)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1610, file: !14, line: 3926, baseType: !936, size: 64, align: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !949, file: !14, line: 3564, baseType: !1642, size: 64, align: 64, offset: 1344)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!926, !1041, !1184, !1328, !1330}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !949, file: !14, line: 3566, baseType: !1646, size: 64, align: 64, offset: 1408)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!926, !1041, !994, !1330, !1184}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !949, file: !14, line: 3567, baseType: !1038, size: 64, align: 64, offset: 1472)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !949, file: !14, line: 3576, baseType: !1651, size: 64, align: 64, offset: 1536)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64, align: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!926, !1041, !1328}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !949, file: !14, line: 3577, baseType: !1655, size: 64, align: 64, offset: 1600)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!926, !1041, !1184}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !949, file: !14, line: 3584, baseType: !1474, size: 64, align: 64, offset: 1664)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !949, file: !14, line: 3589, baseType: !1660, size: 64, align: 64, offset: 1728)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1041}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !949, file: !14, line: 3594, baseType: !926, size: 32, align: 32, offset: 1792)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !949, file: !14, line: 3600, baseType: !952, size: 64, align: 64, offset: 1856)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !949, file: !14, line: 3609, baseType: !1666, size: 64, align: 64, offset: 1920)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64, align: 64)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1670 = distinct !DIGlobalVariable(name: "table", scope: !1671, file: !888, line: 1313, type: !1673, isLocal: true, isDefinition: true, variable: [2048 x [2 x i16]]* @decode_init.table)
!1671 = distinct !DISubprogram(name: "decode_init", scope: !888, file: !888, line: 1310, type: !1039, isLocal: true, isDefinition: true, scopeLine: 1311, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!1672 = !{}
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 65536, align: 16, elements: !1674)
!1674 = !{!1675, !1676}
!1675 = !DISubrange(count: 2048)
!1676 = !DISubrange(count: 2)
!1677 = distinct !DIGlobalVariable(name: "binkb_initialised", scope: !1671, file: !888, line: 1314, type: !926, isLocal: true, isDefinition: true, variable: i32* @decode_init.binkb_initialised)
!1678 = distinct !DIGlobalVariable(name: "bink_trees", scope: !0, file: !888, line: 40, type: !1679, isLocal: true, isDefinition: true, variable: [16 x %struct.VLC]* @bink_trees)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1680, size: 3072, align: 64, elements: !1691)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1681, line: 30, baseType: !1682)
!1681 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1681, line: 26, size: 192, align: 64, elements: !1683)
!1683 = !{!1684, !1685, !1689, !1690}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1682, file: !1681, line: 27, baseType: !926, size: 32, align: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1682, file: !1681, line: 28, baseType: !1686, size: 64, align: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64, align: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 32, align: 16, elements: !1688)
!1688 = !{!1676}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1682, file: !1681, line: 29, baseType: !926, size: 32, align: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1682, file: !1681, line: 29, baseType: !926, size: 32, align: 32, offset: 160)
!1691 = !{!1692}
!1692 = !DISubrange(count: 16)
!1693 = distinct !DIGlobalVariable(name: "bink_tree_lens", scope: !0, file: !1694, line: 106, type: !1695, isLocal: true, isDefinition: true, variable: [16 x [16 x i8]]* @bink_tree_lens)
!1694 = !DIFile(filename: "libavcodec/binkdata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 2048, align: 8, elements: !1696)
!1696 = !{!1692, !1692}
!1697 = distinct !DIGlobalVariable(name: "bink_tree_bits", scope: !0, file: !1694, line: 39, type: !1695, isLocal: true, isDefinition: true, variable: [16 x [16 x i8]]* @bink_tree_bits)
!1698 = distinct !DIGlobalVariable(name: "s", scope: !1699, file: !888, line: 1284, type: !1702, isLocal: true, isDefinition: true, variable: [64 x i32]* @binkb_calc_quant.s)
!1699 = distinct !DISubprogram(name: "binkb_calc_quant", scope: !888, file: !888, line: 1281, type: !1700, isLocal: true, isDefinition: true, scopeLine: 1282, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{null}
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 2048, align: 32, elements: !1703)
!1703 = !{!1704}
!1704 = !DISubrange(count: 64)
!1705 = distinct !DIGlobalVariable(name: "bink_scan", scope: !0, file: !1694, line: 28, type: !1706, isLocal: true, isDefinition: true, variable: [64 x i8]* @bink_scan)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 512, align: 8, elements: !1703)
!1707 = distinct !DIGlobalVariable(name: "binkb_intra_seed", scope: !0, file: !1694, line: 625, type: !1706, isLocal: true, isDefinition: true, variable: [64 x i8]* @binkb_intra_seed)
!1708 = distinct !DIGlobalVariable(name: "binkb_num", scope: !0, file: !1694, line: 647, type: !1709, isLocal: true, isDefinition: true, variable: [16 x i8]* @binkb_num)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 128, align: 8, elements: !1691)
!1710 = distinct !DIGlobalVariable(name: "binkb_den", scope: !0, file: !1694, line: 651, type: !1709, isLocal: true, isDefinition: true, variable: [16 x i8]* @binkb_den)
!1711 = distinct !DIGlobalVariable(name: "binkb_intra_quant", scope: !0, file: !888, line: 68, type: !1712, isLocal: true, isDefinition: true, variable: [16 x [64 x i32]]* @binkb_intra_quant)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 32768, align: 32, elements: !1714)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !935, line: 38, baseType: !926)
!1714 = !{!1692, !1704}
!1715 = distinct !DIGlobalVariable(name: "binkb_inter_seed", scope: !0, file: !1694, line: 636, type: !1706, isLocal: true, isDefinition: true, variable: [64 x i8]* @binkb_inter_seed)
!1716 = distinct !DIGlobalVariable(name: "binkb_inter_quant", scope: !0, file: !888, line: 69, type: !1712, isLocal: true, isDefinition: true, variable: [16 x [64 x i32]]* @binkb_inter_quant)
!1717 = distinct !DIGlobalVariable(name: "bink_rlelens", scope: !0, file: !888, line: 370, type: !1718, isLocal: true, isDefinition: true, variable: [4 x i8]* @bink_rlelens)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 32, align: 8, elements: !1167)
!1719 = distinct !DIGlobalVariable(name: "bink_patterns", scope: !0, file: !1694, line: 125, type: !1720, isLocal: true, isDefinition: true, variable: [16 x [64 x i8]]* @bink_patterns)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 8192, align: 8, elements: !1714)
!1721 = distinct !DIGlobalVariable(name: "bink_intra_quant", scope: !0, file: !1694, line: 288, type: !1722, isLocal: true, isDefinition: true, variable: [16 x [64 x i32]]* @bink_intra_quant)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1723, size: 32768, align: 32, elements: !1714)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1724 = distinct !DIGlobalVariable(name: "bink_inter_quant", scope: !0, file: !1694, line: 451, type: !1722, isLocal: true, isDefinition: true, variable: [16 x [64 x i32]]* @bink_inter_quant)
!1725 = distinct !DIGlobalVariable(name: "binkb_bundle_sizes", scope: !0, file: !888, line: 60, type: !1726, isLocal: true, isDefinition: true, variable: [10 x i32]* @binkb_bundle_sizes)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 320, align: 32, elements: !1727)
!1727 = !{!1728}
!1728 = !DISubrange(count: 10)
!1729 = distinct !DIGlobalVariable(name: "binkb_bundle_signed", scope: !0, file: !888, line: 64, type: !1726, isLocal: true, isDefinition: true, variable: [10 x i32]* @binkb_bundle_signed)
!1730 = distinct !DIGlobalVariable(name: "binkb_runbits", scope: !0, file: !1694, line: 614, type: !1706, isLocal: true, isDefinition: true, variable: [64 x i8]* @binkb_runbits)
!1731 = !{i32 2, !"Dwarf Version", i32 4}
!1732 = !{i32 2, !"Debug Info Version", i32 3}
!1733 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1734 = !DILocalVariable(name: "avctx", arg: 1, scope: !1671, file: !888, line: 1310, type: !1041)
!1735 = !DIExpression()
!1736 = !DILocation(line: 1310, column: 62, scope: !1671)
!1737 = !DILocalVariable(name: "c", scope: !1671, file: !888, line: 1312, type: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1739)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "BinkContext", file: !888, line: 128, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BinkContext", file: !888, line: 114, size: 11200, align: 64, elements: !1742)
!1742 = !{!1743, !1744, !1761, !1777, !1797, !1798, !1799, !1800, !1801, !1802, !1819, !1821}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1741, file: !888, line: 115, baseType: !1041, size: 64, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1741, file: !888, line: 116, baseType: !1745, size: 256, align: 64, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1746, line: 40, baseType: !1747)
!1746 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1746, line: 35, size: 256, align: 64, elements: !1748)
!1748 = !{!1749, !1753, !1754}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1747, file: !1746, line: 36, baseType: !1750, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64, align: 64)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{null, !940}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1747, file: !1746, line: 37, baseType: !1750, size: 64, align: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1747, file: !1746, line: 39, baseType: !1755, size: 128, align: 64, offset: 128)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1756, size: 128, align: 64, elements: !1688)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1746, line: 32, baseType: !1757)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64, align: 64)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{null, !943, !944, !1760, !926}
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1152, line: 149, baseType: !937)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1741, file: !888, line: 117, baseType: !1762, size: 3328, align: 64, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1763, line: 95, baseType: !1764)
!1763 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1763, line: 45, size: 3328, align: 64, elements: !1765)
!1765 = !{!1766, !1773, !1774, !1775}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1764, file: !1763, line: 56, baseType: !1767, size: 1024, align: 64)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 1024, align: 64, elements: !1772)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1763, line: 38, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64, align: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !943, !1481, !1760, !926}
!1772 = !{!1168, !1168}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1764, file: !1763, line: 68, baseType: !1767, size: 1024, align: 64, offset: 1024)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1764, file: !1763, line: 82, baseType: !1767, size: 1024, align: 64, offset: 2048)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1764, file: !1763, line: 94, baseType: !1776, size: 256, align: 64, offset: 3072)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 256, align: 64, elements: !1167)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "binkdsp", scope: !1741, file: !888, line: 118, baseType: !1778, size: 256, align: 64, offset: 3648)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "BinkDSPContext", file: !1779, line: 39, baseType: !1780)
!1779 = !DIFile(filename: "libavcodec/binkdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BinkDSPContext", file: !1779, line: 34, size: 256, align: 64, elements: !1781)
!1781 = !{!1782, !1787, !1788, !1792}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1780, file: !1779, line: 35, baseType: !1783, size: 64, align: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !943, !926, !1786}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1780, file: !1779, line: 36, baseType: !1783, size: 64, align: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "scale_block", scope: !1780, file: !1779, line: 37, baseType: !1789, size: 64, align: 64, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64, align: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{null, !1481, !943, !926}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels8", scope: !1780, file: !1779, line: 38, baseType: !1793, size: 64, align: 64, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{null, !1796, !940, !926}
!1796 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !943)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1741, file: !888, line: 119, baseType: !1063, size: 64, align: 64, offset: 3904)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1741, file: !888, line: 120, baseType: !926, size: 32, align: 32, offset: 3968)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "has_alpha", scope: !1741, file: !888, line: 121, baseType: !926, size: 32, align: 32, offset: 4000)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "swap_planes", scope: !1741, file: !888, line: 122, baseType: !926, size: 32, align: 32, offset: 4032)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !1741, file: !888, line: 123, baseType: !927, size: 32, align: 32, offset: 4064)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "bundle", scope: !1741, file: !888, line: 125, baseType: !1803, size: 4480, align: 64, offset: 4096)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1804, size: 4480, align: 64, elements: !1727)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bundle", file: !888, line: 109, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bundle", file: !888, line: 102, size: 448, align: 64, elements: !1806)
!1806 = !{!1807, !1808, !1815, !1816, !1817, !1818}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1805, file: !888, line: 103, baseType: !926, size: 32, align: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !1805, file: !888, line: 104, baseType: !1809, size: 160, align: 32, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tree", file: !888, line: 94, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tree", file: !888, line: 91, size: 160, align: 32, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "vlc_num", scope: !1810, file: !888, line: 92, baseType: !926, size: 32, align: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "syms", scope: !1810, file: !888, line: 93, baseType: !1814, size: 128, align: 8, offset: 32)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 128, align: 8, elements: !1691)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1805, file: !888, line: 105, baseType: !943, size: 64, align: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "data_end", scope: !1805, file: !888, line: 106, baseType: !943, size: 64, align: 64, offset: 256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dec", scope: !1805, file: !888, line: 107, baseType: !943, size: 64, align: 64, offset: 320)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "cur_ptr", scope: !1805, file: !888, line: 108, baseType: !943, size: 64, align: 64, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "col_high", scope: !1741, file: !888, line: 126, baseType: !1820, size: 2560, align: 32, offset: 8576)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 2560, align: 32, elements: !1691)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "col_lastval", scope: !1741, file: !888, line: 127, baseType: !926, size: 32, align: 32, offset: 11136)
!1822 = !DILocation(line: 1312, column: 25, scope: !1671)
!1823 = !DILocation(line: 1312, column: 29, scope: !1671)
!1824 = !DILocation(line: 1312, column: 36, scope: !1671)
!1825 = !DILocalVariable(name: "i", scope: !1671, file: !888, line: 1315, type: !926)
!1826 = !DILocation(line: 1315, column: 9, scope: !1671)
!1827 = !DILocalVariable(name: "ret", scope: !1671, file: !888, line: 1315, type: !926)
!1828 = !DILocation(line: 1315, column: 12, scope: !1671)
!1829 = !DILocalVariable(name: "flags", scope: !1671, file: !888, line: 1316, type: !926)
!1830 = !DILocation(line: 1316, column: 9, scope: !1671)
!1831 = !DILocation(line: 1318, column: 18, scope: !1671)
!1832 = !DILocation(line: 1318, column: 25, scope: !1671)
!1833 = !DILocation(line: 1318, column: 35, scope: !1671)
!1834 = !DILocation(line: 1318, column: 5, scope: !1671)
!1835 = !DILocation(line: 1318, column: 8, scope: !1671)
!1836 = !DILocation(line: 1318, column: 16, scope: !1671)
!1837 = !DILocation(line: 1319, column: 9, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1319, column: 9)
!1839 = !DILocation(line: 1319, column: 16, scope: !1838)
!1840 = !DILocation(line: 1319, column: 31, scope: !1838)
!1841 = !DILocation(line: 1319, column: 9, scope: !1671)
!1842 = !DILocation(line: 1320, column: 16, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1838, file: !888, line: 1319, column: 36)
!1844 = !DILocation(line: 1320, column: 9, scope: !1843)
!1845 = !DILocation(line: 1321, column: 9, scope: !1843)
!1846 = !DILocation(line: 1323, column: 45, scope: !1671)
!1847 = !DILocation(line: 1323, column: 52, scope: !1671)
!1848 = !DILocation(line: 1323, column: 65, scope: !1671)
!1849 = !DILocation(line: 1323, column: 11, scope: !1671)
!1850 = !DILocation(line: 1324, column: 20, scope: !1671)
!1851 = !DILocation(line: 1324, column: 26, scope: !1671)
!1852 = !DILocation(line: 1324, column: 5, scope: !1671)
!1853 = !DILocation(line: 1324, column: 8, scope: !1671)
!1854 = !DILocation(line: 1324, column: 18, scope: !1671)
!1855 = !DILocation(line: 1325, column: 22, scope: !1671)
!1856 = !DILocation(line: 1325, column: 25, scope: !1671)
!1857 = !DILocation(line: 1325, column: 33, scope: !1671)
!1858 = !DILocation(line: 1325, column: 5, scope: !1671)
!1859 = !DILocation(line: 1325, column: 8, scope: !1671)
!1860 = !DILocation(line: 1325, column: 20, scope: !1671)
!1861 = !DILocation(line: 1326, column: 25, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1326, column: 9)
!1863 = !DILocation(line: 1326, column: 10, scope: !1862)
!1864 = !DILocation(line: 1326, column: 9, scope: !1671)
!1865 = !DILocation(line: 1327, column: 16, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1867, file: !888, line: 1327, column: 9)
!1867 = distinct !DILexicalBlock(scope: !1862, file: !888, line: 1326, column: 32)
!1868 = !DILocation(line: 1327, column: 14, scope: !1866)
!1869 = !DILocation(line: 1327, column: 21, scope: !1870)
!1870 = !DILexicalBlockFile(scope: !1871, file: !888, discriminator: 1)
!1871 = distinct !DILexicalBlock(scope: !1866, file: !888, line: 1327, column: 9)
!1872 = !DILocation(line: 1327, column: 23, scope: !1870)
!1873 = !DILocation(line: 1327, column: 9, scope: !1870)
!1874 = !DILocalVariable(name: "maxbits", scope: !1875, file: !888, line: 1328, type: !973)
!1875 = distinct !DILexicalBlock(scope: !1871, file: !888, line: 1327, column: 34)
!1876 = !DILocation(line: 1328, column: 23, scope: !1875)
!1877 = !DILocation(line: 1328, column: 48, scope: !1875)
!1878 = !DILocation(line: 1328, column: 33, scope: !1875)
!1879 = !DILocation(line: 1329, column: 43, scope: !1875)
!1880 = !DILocation(line: 1329, column: 44, scope: !1875)
!1881 = !DILocation(line: 1329, column: 41, scope: !1875)
!1882 = !DILocation(line: 1329, column: 24, scope: !1875)
!1883 = !DILocation(line: 1329, column: 13, scope: !1875)
!1884 = !DILocation(line: 1329, column: 27, scope: !1875)
!1885 = !DILocation(line: 1329, column: 33, scope: !1875)
!1886 = !DILocation(line: 1330, column: 50, scope: !1875)
!1887 = !DILocation(line: 1330, column: 47, scope: !1875)
!1888 = !DILocation(line: 1330, column: 24, scope: !1875)
!1889 = !DILocation(line: 1330, column: 13, scope: !1875)
!1890 = !DILocation(line: 1330, column: 27, scope: !1875)
!1891 = !DILocation(line: 1330, column: 43, scope: !1875)
!1892 = !DILocation(line: 1331, column: 44, scope: !1875)
!1893 = !DILocation(line: 1331, column: 33, scope: !1875)
!1894 = !DILocation(line: 1331, column: 48, scope: !1875)
!1895 = !DILocation(line: 1331, column: 76, scope: !1875)
!1896 = !DILocation(line: 1331, column: 61, scope: !1875)
!1897 = !DILocation(line: 1331, column: 101, scope: !1875)
!1898 = !DILocation(line: 1331, column: 86, scope: !1875)
!1899 = !DILocation(line: 1331, column: 13, scope: !1875)
!1900 = !DILocation(line: 1334, column: 9, scope: !1875)
!1901 = !DILocation(line: 1327, column: 30, scope: !1902)
!1902 = !DILexicalBlockFile(scope: !1871, file: !888, discriminator: 2)
!1903 = !DILocation(line: 1327, column: 9, scope: !1902)
!1904 = distinct !{!1904, !1905}
!1905 = !DILocation(line: 1327, column: 9, scope: !1867)
!1906 = !DILocation(line: 1335, column: 5, scope: !1867)
!1907 = !DILocation(line: 1336, column: 16, scope: !1671)
!1908 = !DILocation(line: 1336, column: 5, scope: !1671)
!1909 = !DILocation(line: 1336, column: 8, scope: !1671)
!1910 = !DILocation(line: 1336, column: 14, scope: !1671)
!1911 = !DILocation(line: 1338, column: 15, scope: !1671)
!1912 = !DILocation(line: 1338, column: 5, scope: !1671)
!1913 = !DILocation(line: 1338, column: 8, scope: !1671)
!1914 = !DILocation(line: 1338, column: 13, scope: !1671)
!1915 = !DILocation(line: 1339, column: 10, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1339, column: 9)
!1917 = !DILocation(line: 1339, column: 13, scope: !1916)
!1918 = !DILocation(line: 1339, column: 9, scope: !1671)
!1919 = !DILocation(line: 1340, column: 9, scope: !1916)
!1920 = !DILocation(line: 1342, column: 36, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1342, column: 9)
!1922 = !DILocation(line: 1342, column: 43, scope: !1921)
!1923 = !DILocation(line: 1342, column: 50, scope: !1921)
!1924 = !DILocation(line: 1342, column: 57, scope: !1921)
!1925 = !DILocation(line: 1342, column: 68, scope: !1921)
!1926 = !DILocation(line: 1342, column: 16, scope: !1921)
!1927 = !DILocation(line: 1342, column: 14, scope: !1921)
!1928 = !DILocation(line: 1342, column: 76, scope: !1921)
!1929 = !DILocation(line: 1342, column: 9, scope: !1671)
!1930 = !DILocation(line: 1343, column: 16, scope: !1921)
!1931 = !DILocation(line: 1343, column: 9, scope: !1921)
!1932 = !DILocation(line: 1345, column: 22, scope: !1671)
!1933 = !DILocation(line: 1345, column: 25, scope: !1671)
!1934 = !DILocation(line: 1345, column: 5, scope: !1671)
!1935 = !DILocation(line: 1345, column: 12, scope: !1671)
!1936 = !DILocation(line: 1345, column: 20, scope: !1671)
!1937 = !DILocation(line: 1346, column: 26, scope: !1671)
!1938 = !DILocation(line: 1346, column: 29, scope: !1671)
!1939 = !DILocation(line: 1346, column: 37, scope: !1671)
!1940 = !DILocation(line: 1346, column: 5, scope: !1671)
!1941 = !DILocation(line: 1346, column: 12, scope: !1671)
!1942 = !DILocation(line: 1346, column: 24, scope: !1671)
!1943 = !DILocation(line: 1348, column: 23, scope: !1671)
!1944 = !DILocation(line: 1348, column: 26, scope: !1671)
!1945 = !DILocation(line: 1348, column: 32, scope: !1671)
!1946 = !DILocation(line: 1348, column: 5, scope: !1671)
!1947 = !DILocation(line: 1349, column: 22, scope: !1671)
!1948 = !DILocation(line: 1349, column: 25, scope: !1671)
!1949 = !DILocation(line: 1349, column: 31, scope: !1671)
!1950 = !DILocation(line: 1349, column: 38, scope: !1671)
!1951 = !DILocation(line: 1349, column: 5, scope: !1671)
!1952 = !DILocation(line: 1350, column: 22, scope: !1671)
!1953 = !DILocation(line: 1350, column: 25, scope: !1671)
!1954 = !DILocation(line: 1350, column: 5, scope: !1671)
!1955 = !DILocation(line: 1352, column: 29, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1352, column: 9)
!1957 = !DILocation(line: 1352, column: 16, scope: !1956)
!1958 = !DILocation(line: 1352, column: 14, scope: !1956)
!1959 = !DILocation(line: 1352, column: 33, scope: !1956)
!1960 = !DILocation(line: 1352, column: 9, scope: !1671)
!1961 = !DILocation(line: 1353, column: 22, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1956, file: !888, line: 1352, column: 38)
!1963 = !DILocation(line: 1353, column: 9, scope: !1962)
!1964 = !DILocation(line: 1354, column: 16, scope: !1962)
!1965 = !DILocation(line: 1354, column: 9, scope: !1962)
!1966 = !DILocation(line: 1357, column: 9, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1671, file: !888, line: 1357, column: 9)
!1968 = !DILocation(line: 1357, column: 12, scope: !1967)
!1969 = !DILocation(line: 1357, column: 20, scope: !1967)
!1970 = !DILocation(line: 1357, column: 9, scope: !1671)
!1971 = !DILocation(line: 1358, column: 14, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1973, file: !888, line: 1358, column: 13)
!1973 = distinct !DILexicalBlock(scope: !1967, file: !888, line: 1357, column: 28)
!1974 = !DILocation(line: 1358, column: 13, scope: !1973)
!1975 = !DILocation(line: 1359, column: 13, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1972, file: !888, line: 1358, column: 33)
!1977 = !DILocation(line: 1360, column: 31, scope: !1976)
!1978 = !DILocation(line: 1361, column: 9, scope: !1976)
!1979 = !DILocation(line: 1362, column: 5, scope: !1973)
!1980 = !DILocation(line: 1364, column: 5, scope: !1671)
!1981 = !DILocation(line: 1365, column: 1, scope: !1671)
!1982 = distinct !DISubprogram(name: "decode_frame", scope: !888, file: !888, line: 1220, type: !1647, isLocal: true, isDefinition: true, scopeLine: 1221, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!1983 = !DILocalVariable(name: "avctx", arg: 1, scope: !1982, file: !888, line: 1220, type: !1041)
!1984 = !DILocation(line: 1220, column: 41, scope: !1982)
!1985 = !DILocalVariable(name: "data", arg: 2, scope: !1982, file: !888, line: 1220, type: !994)
!1986 = !DILocation(line: 1220, column: 54, scope: !1982)
!1987 = !DILocalVariable(name: "got_frame", arg: 3, scope: !1982, file: !888, line: 1220, type: !1330)
!1988 = !DILocation(line: 1220, column: 65, scope: !1982)
!1989 = !DILocalVariable(name: "pkt", arg: 4, scope: !1982, file: !888, line: 1220, type: !1184)
!1990 = !DILocation(line: 1220, column: 86, scope: !1982)
!1991 = !DILocalVariable(name: "c", scope: !1982, file: !888, line: 1222, type: !1738)
!1992 = !DILocation(line: 1222, column: 25, scope: !1982)
!1993 = !DILocation(line: 1222, column: 29, scope: !1982)
!1994 = !DILocation(line: 1222, column: 36, scope: !1982)
!1995 = !DILocalVariable(name: "frame", scope: !1982, file: !888, line: 1223, type: !1063)
!1996 = !DILocation(line: 1223, column: 14, scope: !1982)
!1997 = !DILocation(line: 1223, column: 22, scope: !1982)
!1998 = !DILocalVariable(name: "gb", scope: !1982, file: !888, line: 1224, type: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2000, line: 70, baseType: !2001)
!2000 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2000, line: 61, size: 256, align: 64, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2001, file: !2000, line: 62, baseType: !1481, size: 64, align: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2001, file: !2000, line: 62, baseType: !1481, size: 64, align: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2001, file: !2000, line: 67, baseType: !926, size: 32, align: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2001, file: !2000, line: 68, baseType: !926, size: 32, align: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2001, file: !2000, line: 69, baseType: !926, size: 32, align: 32, offset: 192)
!2008 = !DILocation(line: 1224, column: 19, scope: !1982)
!2009 = !DILocalVariable(name: "plane", scope: !1982, file: !888, line: 1225, type: !926)
!2010 = !DILocation(line: 1225, column: 9, scope: !1982)
!2011 = !DILocalVariable(name: "plane_idx", scope: !1982, file: !888, line: 1225, type: !926)
!2012 = !DILocation(line: 1225, column: 16, scope: !1982)
!2013 = !DILocalVariable(name: "ret", scope: !1982, file: !888, line: 1225, type: !926)
!2014 = !DILocation(line: 1225, column: 27, scope: !1982)
!2015 = !DILocalVariable(name: "bits_count", scope: !1982, file: !888, line: 1226, type: !926)
!2016 = !DILocation(line: 1226, column: 9, scope: !1982)
!2017 = !DILocation(line: 1226, column: 22, scope: !1982)
!2018 = !DILocation(line: 1226, column: 27, scope: !1982)
!2019 = !DILocation(line: 1226, column: 32, scope: !1982)
!2020 = !DILocation(line: 1228, column: 9, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !1982, file: !888, line: 1228, column: 9)
!2022 = !DILocation(line: 1228, column: 12, scope: !2021)
!2023 = !DILocation(line: 1228, column: 20, scope: !2021)
!2024 = !DILocation(line: 1228, column: 9, scope: !1982)
!2025 = !DILocation(line: 1229, column: 34, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !888, line: 1229, column: 13)
!2027 = distinct !DILexicalBlock(scope: !2021, file: !888, line: 1228, column: 27)
!2028 = !DILocation(line: 1229, column: 41, scope: !2026)
!2029 = !DILocation(line: 1229, column: 20, scope: !2026)
!2030 = !DILocation(line: 1229, column: 18, scope: !2026)
!2031 = !DILocation(line: 1229, column: 59, scope: !2026)
!2032 = !DILocation(line: 1229, column: 13, scope: !2027)
!2033 = !DILocation(line: 1230, column: 20, scope: !2026)
!2034 = !DILocation(line: 1230, column: 13, scope: !2026)
!2035 = !DILocation(line: 1231, column: 5, scope: !2027)
!2036 = !DILocation(line: 1232, column: 36, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2038, file: !888, line: 1232, column: 13)
!2038 = distinct !DILexicalBlock(scope: !2021, file: !888, line: 1231, column: 12)
!2039 = !DILocation(line: 1232, column: 43, scope: !2037)
!2040 = !DILocation(line: 1232, column: 46, scope: !2037)
!2041 = !DILocation(line: 1232, column: 20, scope: !2037)
!2042 = !DILocation(line: 1232, column: 18, scope: !2037)
!2043 = !DILocation(line: 1232, column: 53, scope: !2037)
!2044 = !DILocation(line: 1232, column: 13, scope: !2038)
!2045 = !DILocation(line: 1233, column: 20, scope: !2037)
!2046 = !DILocation(line: 1233, column: 13, scope: !2037)
!2047 = !DILocation(line: 1234, column: 33, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2038, file: !888, line: 1234, column: 13)
!2049 = !DILocation(line: 1234, column: 40, scope: !2048)
!2050 = !DILocation(line: 1234, column: 43, scope: !2048)
!2051 = !DILocation(line: 1234, column: 20, scope: !2048)
!2052 = !DILocation(line: 1234, column: 18, scope: !2048)
!2053 = !DILocation(line: 1234, column: 50, scope: !2048)
!2054 = !DILocation(line: 1234, column: 13, scope: !2038)
!2055 = !DILocation(line: 1235, column: 20, scope: !2048)
!2056 = !DILocation(line: 1235, column: 13, scope: !2048)
!2057 = !DILocation(line: 1238, column: 24, scope: !1982)
!2058 = !DILocation(line: 1238, column: 29, scope: !1982)
!2059 = !DILocation(line: 1238, column: 35, scope: !1982)
!2060 = !DILocation(line: 1238, column: 5, scope: !1982)
!2061 = !DILocation(line: 1239, column: 9, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !1982, file: !888, line: 1239, column: 9)
!2063 = !DILocation(line: 1239, column: 12, scope: !2062)
!2064 = !DILocation(line: 1239, column: 9, scope: !1982)
!2065 = !DILocation(line: 1240, column: 13, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !888, line: 1240, column: 13)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !888, line: 1239, column: 23)
!2068 = !DILocation(line: 1240, column: 16, scope: !2066)
!2069 = !DILocation(line: 1240, column: 24, scope: !2066)
!2070 = !DILocation(line: 1240, column: 13, scope: !2067)
!2071 = !DILocation(line: 1241, column: 13, scope: !2066)
!2072 = !DILocation(line: 1242, column: 38, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2067, file: !888, line: 1242, column: 13)
!2074 = !DILocation(line: 1242, column: 41, scope: !2073)
!2075 = !DILocation(line: 1242, column: 20, scope: !2073)
!2076 = !DILocation(line: 1242, column: 18, scope: !2073)
!2077 = !DILocation(line: 1242, column: 60, scope: !2073)
!2078 = !DILocation(line: 1242, column: 13, scope: !2067)
!2079 = !DILocation(line: 1243, column: 20, scope: !2073)
!2080 = !DILocation(line: 1243, column: 13, scope: !2073)
!2081 = !DILocation(line: 1244, column: 5, scope: !2067)
!2082 = !DILocation(line: 1245, column: 9, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !1982, file: !888, line: 1245, column: 9)
!2084 = !DILocation(line: 1245, column: 12, scope: !2083)
!2085 = !DILocation(line: 1245, column: 20, scope: !2083)
!2086 = !DILocation(line: 1245, column: 9, scope: !1982)
!2087 = !DILocation(line: 1246, column: 9, scope: !2083)
!2088 = !DILocation(line: 1248, column: 5, scope: !1982)
!2089 = !DILocation(line: 1248, column: 8, scope: !1982)
!2090 = !DILocation(line: 1248, column: 17, scope: !1982)
!2091 = !DILocation(line: 1250, column: 16, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !1982, file: !888, line: 1250, column: 5)
!2093 = !DILocation(line: 1250, column: 10, scope: !2092)
!2094 = !DILocation(line: 1250, column: 21, scope: !2095)
!2095 = !DILexicalBlockFile(scope: !2096, file: !888, discriminator: 1)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !888, line: 1250, column: 5)
!2097 = !DILocation(line: 1250, column: 27, scope: !2095)
!2098 = !DILocation(line: 1250, column: 5, scope: !2095)
!2099 = !DILocation(line: 1251, column: 23, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2096, file: !888, line: 1250, column: 41)
!2101 = !DILocation(line: 1251, column: 29, scope: !2100)
!2102 = !DILocation(line: 1251, column: 33, scope: !2103)
!2103 = !DILexicalBlockFile(scope: !2100, file: !888, discriminator: 1)
!2104 = !DILocation(line: 1251, column: 36, scope: !2103)
!2105 = !DILocation(line: 1251, column: 21, scope: !2103)
!2106 = !DILocation(line: 1251, column: 51, scope: !2107)
!2107 = !DILexicalBlockFile(scope: !2100, file: !888, discriminator: 2)
!2108 = !DILocation(line: 1251, column: 21, scope: !2107)
!2109 = !DILocation(line: 1251, column: 60, scope: !2110)
!2110 = !DILexicalBlockFile(scope: !2100, file: !888, discriminator: 3)
!2111 = !DILocation(line: 1251, column: 66, scope: !2110)
!2112 = !DILocation(line: 1251, column: 21, scope: !2110)
!2113 = !DILocation(line: 1251, column: 21, scope: !2114)
!2114 = !DILexicalBlockFile(scope: !2100, file: !888, discriminator: 4)
!2115 = !DILocation(line: 1251, column: 19, scope: !2114)
!2116 = !DILocation(line: 1253, column: 13, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2100, file: !888, line: 1253, column: 13)
!2118 = !DILocation(line: 1253, column: 16, scope: !2117)
!2119 = !DILocation(line: 1253, column: 24, scope: !2117)
!2120 = !DILocation(line: 1253, column: 13, scope: !2100)
!2121 = !DILocation(line: 1254, column: 42, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !888, line: 1254, column: 17)
!2123 = distinct !DILexicalBlock(scope: !2117, file: !888, line: 1253, column: 31)
!2124 = !DILocation(line: 1254, column: 45, scope: !2122)
!2125 = !DILocation(line: 1254, column: 57, scope: !2122)
!2126 = !DILocation(line: 1254, column: 70, scope: !2122)
!2127 = !DILocation(line: 1254, column: 69, scope: !2122)
!2128 = !DILocation(line: 1254, column: 68, scope: !2122)
!2129 = !DILocation(line: 1254, column: 24, scope: !2122)
!2130 = !DILocation(line: 1254, column: 22, scope: !2122)
!2131 = !DILocation(line: 1254, column: 78, scope: !2122)
!2132 = !DILocation(line: 1254, column: 17, scope: !2123)
!2133 = !DILocation(line: 1255, column: 24, scope: !2122)
!2134 = !DILocation(line: 1255, column: 17, scope: !2122)
!2135 = !DILocation(line: 1256, column: 9, scope: !2123)
!2136 = !DILocation(line: 1257, column: 43, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2138, file: !888, line: 1257, column: 17)
!2138 = distinct !DILexicalBlock(scope: !2117, file: !888, line: 1256, column: 16)
!2139 = !DILocation(line: 1257, column: 46, scope: !2137)
!2140 = !DILocation(line: 1257, column: 58, scope: !2137)
!2141 = !DILocation(line: 1258, column: 43, scope: !2137)
!2142 = !DILocation(line: 1258, column: 46, scope: !2137)
!2143 = !DILocation(line: 1258, column: 56, scope: !2137)
!2144 = !DILocation(line: 1258, column: 64, scope: !2137)
!2145 = !DILocation(line: 1258, column: 63, scope: !2137)
!2146 = !DILocation(line: 1258, column: 62, scope: !2137)
!2147 = !DILocation(line: 1257, column: 24, scope: !2137)
!2148 = !DILocation(line: 1257, column: 22, scope: !2137)
!2149 = !DILocation(line: 1258, column: 72, scope: !2137)
!2150 = !DILocation(line: 1257, column: 17, scope: !2138)
!2151 = !DILocation(line: 1259, column: 24, scope: !2137)
!2152 = !DILocation(line: 1259, column: 17, scope: !2137)
!2153 = !DILocation(line: 1261, column: 13, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2100, file: !888, line: 1261, column: 13)
!2155 = !DILocation(line: 1261, column: 36, scope: !2154)
!2156 = !DILocation(line: 1261, column: 33, scope: !2154)
!2157 = !DILocation(line: 1261, column: 13, scope: !2100)
!2158 = !DILocation(line: 1262, column: 13, scope: !2154)
!2159 = !DILocation(line: 1263, column: 5, scope: !2100)
!2160 = !DILocation(line: 1250, column: 37, scope: !2161)
!2161 = !DILexicalBlockFile(scope: !2096, file: !888, discriminator: 2)
!2162 = !DILocation(line: 1250, column: 5, scope: !2161)
!2163 = distinct !{!2163, !2164}
!2164 = !DILocation(line: 1250, column: 5, scope: !1982)
!2165 = !DILocation(line: 46, column: 9, scope: !2166, inlinedAt: !2168)
!2166 = distinct !DISubprogram(name: "emms_c", scope: !2167, file: !2167, line: 37, type: !1700, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2167 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2168 = distinct !DILocation(line: 1264, column: 5, scope: !1982)
!2169 = !{i32 100355}
!2170 = !DILocation(line: 1266, column: 9, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !1982, file: !888, line: 1266, column: 9)
!2172 = !DILocation(line: 1266, column: 12, scope: !2171)
!2173 = !DILocation(line: 1266, column: 20, scope: !2171)
!2174 = !DILocation(line: 1266, column: 9, scope: !1982)
!2175 = !DILocation(line: 1267, column: 24, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2171, file: !888, line: 1266, column: 27)
!2177 = !DILocation(line: 1267, column: 27, scope: !2176)
!2178 = !DILocation(line: 1267, column: 9, scope: !2176)
!2179 = !DILocation(line: 1268, column: 33, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2176, file: !888, line: 1268, column: 13)
!2181 = !DILocation(line: 1268, column: 36, scope: !2180)
!2182 = !DILocation(line: 1268, column: 42, scope: !2180)
!2183 = !DILocation(line: 1268, column: 20, scope: !2180)
!2184 = !DILocation(line: 1268, column: 18, scope: !2180)
!2185 = !DILocation(line: 1268, column: 50, scope: !2180)
!2186 = !DILocation(line: 1268, column: 13, scope: !2176)
!2187 = !DILocation(line: 1269, column: 20, scope: !2180)
!2188 = !DILocation(line: 1269, column: 13, scope: !2180)
!2189 = !DILocation(line: 1270, column: 5, scope: !2176)
!2190 = !DILocation(line: 1272, column: 6, scope: !1982)
!2191 = !DILocation(line: 1272, column: 16, scope: !1982)
!2192 = !DILocation(line: 1275, column: 12, scope: !1982)
!2193 = !DILocation(line: 1275, column: 17, scope: !1982)
!2194 = !DILocation(line: 1275, column: 5, scope: !1982)
!2195 = !DILocation(line: 1276, column: 1, scope: !1982)
!2196 = distinct !DISubprogram(name: "decode_end", scope: !888, file: !888, line: 1367, type: !1039, isLocal: true, isDefinition: true, scopeLine: 1368, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2197 = !DILocalVariable(name: "avctx", arg: 1, scope: !2196, file: !888, line: 1367, type: !1041)
!2198 = !DILocation(line: 1367, column: 61, scope: !2196)
!2199 = !DILocalVariable(name: "c", scope: !2196, file: !888, line: 1369, type: !1738)
!2200 = !DILocation(line: 1369, column: 25, scope: !2196)
!2201 = !DILocation(line: 1369, column: 29, scope: !2196)
!2202 = !DILocation(line: 1369, column: 36, scope: !2196)
!2203 = !DILocation(line: 1371, column: 20, scope: !2196)
!2204 = !DILocation(line: 1371, column: 23, scope: !2196)
!2205 = !DILocation(line: 1371, column: 5, scope: !2196)
!2206 = !DILocation(line: 1373, column: 18, scope: !2196)
!2207 = !DILocation(line: 1373, column: 5, scope: !2196)
!2208 = !DILocation(line: 1374, column: 5, scope: !2196)
!2209 = distinct !DISubprogram(name: "flush", scope: !888, file: !888, line: 1377, type: !1661, isLocal: true, isDefinition: true, scopeLine: 1378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2210 = !DILocalVariable(name: "avctx", arg: 1, scope: !2209, file: !888, line: 1377, type: !1041)
!2211 = !DILocation(line: 1377, column: 35, scope: !2209)
!2212 = !DILocalVariable(name: "c", scope: !2209, file: !888, line: 1379, type: !1738)
!2213 = !DILocation(line: 1379, column: 25, scope: !2209)
!2214 = !DILocation(line: 1379, column: 29, scope: !2209)
!2215 = !DILocation(line: 1379, column: 36, scope: !2209)
!2216 = !DILocation(line: 1381, column: 5, scope: !2209)
!2217 = !DILocation(line: 1381, column: 8, scope: !2209)
!2218 = !DILocation(line: 1381, column: 18, scope: !2209)
!2219 = !DILocation(line: 1382, column: 1, scope: !2209)
!2220 = distinct !DISubprogram(name: "init_bundles", scope: !888, file: !888, line: 178, type: !2221, isLocal: true, isDefinition: true, scopeLine: 179, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!926, !1739}
!2223 = !DILocalVariable(name: "c", arg: 1, scope: !2220, file: !888, line: 178, type: !1739)
!2224 = !DILocation(line: 178, column: 60, scope: !2220)
!2225 = !DILocalVariable(name: "bw", scope: !2220, file: !888, line: 180, type: !926)
!2226 = !DILocation(line: 180, column: 9, scope: !2220)
!2227 = !DILocalVariable(name: "bh", scope: !2220, file: !888, line: 180, type: !926)
!2228 = !DILocation(line: 180, column: 13, scope: !2220)
!2229 = !DILocalVariable(name: "blocks", scope: !2220, file: !888, line: 180, type: !926)
!2230 = !DILocation(line: 180, column: 17, scope: !2220)
!2231 = !DILocalVariable(name: "i", scope: !2220, file: !888, line: 181, type: !926)
!2232 = !DILocation(line: 181, column: 9, scope: !2220)
!2233 = !DILocation(line: 183, column: 11, scope: !2220)
!2234 = !DILocation(line: 183, column: 14, scope: !2220)
!2235 = !DILocation(line: 183, column: 21, scope: !2220)
!2236 = !DILocation(line: 183, column: 27, scope: !2220)
!2237 = !DILocation(line: 183, column: 32, scope: !2220)
!2238 = !DILocation(line: 183, column: 8, scope: !2220)
!2239 = !DILocation(line: 184, column: 11, scope: !2220)
!2240 = !DILocation(line: 184, column: 14, scope: !2220)
!2241 = !DILocation(line: 184, column: 21, scope: !2220)
!2242 = !DILocation(line: 184, column: 28, scope: !2220)
!2243 = !DILocation(line: 184, column: 33, scope: !2220)
!2244 = !DILocation(line: 184, column: 8, scope: !2220)
!2245 = !DILocation(line: 185, column: 14, scope: !2220)
!2246 = !DILocation(line: 185, column: 19, scope: !2220)
!2247 = !DILocation(line: 185, column: 17, scope: !2220)
!2248 = !DILocation(line: 185, column: 12, scope: !2220)
!2249 = !DILocation(line: 187, column: 12, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2220, file: !888, line: 187, column: 5)
!2251 = !DILocation(line: 187, column: 10, scope: !2250)
!2252 = !DILocation(line: 187, column: 17, scope: !2253)
!2253 = !DILexicalBlockFile(scope: !2254, file: !888, discriminator: 1)
!2254 = distinct !DILexicalBlock(scope: !2250, file: !888, line: 187, column: 5)
!2255 = !DILocation(line: 187, column: 19, scope: !2253)
!2256 = !DILocation(line: 187, column: 5, scope: !2253)
!2257 = !DILocation(line: 188, column: 40, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2254, file: !888, line: 187, column: 40)
!2259 = !DILocation(line: 188, column: 47, scope: !2258)
!2260 = !DILocation(line: 188, column: 29, scope: !2258)
!2261 = !DILocation(line: 188, column: 19, scope: !2258)
!2262 = !DILocation(line: 188, column: 9, scope: !2258)
!2263 = !DILocation(line: 188, column: 12, scope: !2258)
!2264 = !DILocation(line: 188, column: 22, scope: !2258)
!2265 = !DILocation(line: 188, column: 27, scope: !2258)
!2266 = !DILocation(line: 189, column: 24, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2258, file: !888, line: 189, column: 13)
!2268 = !DILocation(line: 189, column: 14, scope: !2267)
!2269 = !DILocation(line: 189, column: 17, scope: !2267)
!2270 = !DILocation(line: 189, column: 27, scope: !2267)
!2271 = !DILocation(line: 189, column: 13, scope: !2258)
!2272 = !DILocation(line: 190, column: 13, scope: !2267)
!2273 = !DILocation(line: 191, column: 43, scope: !2258)
!2274 = !DILocation(line: 191, column: 33, scope: !2258)
!2275 = !DILocation(line: 191, column: 36, scope: !2258)
!2276 = !DILocation(line: 191, column: 46, scope: !2258)
!2277 = !DILocation(line: 191, column: 53, scope: !2258)
!2278 = !DILocation(line: 191, column: 60, scope: !2258)
!2279 = !DILocation(line: 191, column: 51, scope: !2258)
!2280 = !DILocation(line: 191, column: 19, scope: !2258)
!2281 = !DILocation(line: 191, column: 9, scope: !2258)
!2282 = !DILocation(line: 191, column: 12, scope: !2258)
!2283 = !DILocation(line: 191, column: 22, scope: !2258)
!2284 = !DILocation(line: 191, column: 31, scope: !2258)
!2285 = !DILocation(line: 192, column: 5, scope: !2258)
!2286 = !DILocation(line: 187, column: 36, scope: !2287)
!2287 = !DILexicalBlockFile(scope: !2254, file: !888, discriminator: 2)
!2288 = !DILocation(line: 187, column: 5, scope: !2287)
!2289 = distinct !{!2289, !2290}
!2290 = !DILocation(line: 187, column: 5, scope: !2220)
!2291 = !DILocation(line: 194, column: 5, scope: !2220)
!2292 = !DILocation(line: 195, column: 1, scope: !2220)
!2293 = distinct !DISubprogram(name: "free_bundles", scope: !888, file: !888, line: 202, type: !2294, isLocal: true, isDefinition: true, scopeLine: 203, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !1739}
!2296 = !DILocalVariable(name: "c", arg: 1, scope: !2293, file: !888, line: 202, type: !1739)
!2297 = !DILocation(line: 202, column: 61, scope: !2293)
!2298 = !DILocalVariable(name: "i", scope: !2293, file: !888, line: 204, type: !926)
!2299 = !DILocation(line: 204, column: 9, scope: !2293)
!2300 = !DILocation(line: 205, column: 12, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2293, file: !888, line: 205, column: 5)
!2302 = !DILocation(line: 205, column: 10, scope: !2301)
!2303 = !DILocation(line: 205, column: 17, scope: !2304)
!2304 = !DILexicalBlockFile(scope: !2305, file: !888, discriminator: 1)
!2305 = distinct !DILexicalBlock(scope: !2301, file: !888, line: 205, column: 5)
!2306 = !DILocation(line: 205, column: 19, scope: !2304)
!2307 = !DILocation(line: 205, column: 5, scope: !2304)
!2308 = !DILocation(line: 206, column: 29, scope: !2305)
!2309 = !DILocation(line: 206, column: 19, scope: !2305)
!2310 = !DILocation(line: 206, column: 22, scope: !2305)
!2311 = !DILocation(line: 206, column: 32, scope: !2305)
!2312 = !DILocation(line: 206, column: 18, scope: !2305)
!2313 = !DILocation(line: 206, column: 9, scope: !2305)
!2314 = !DILocation(line: 205, column: 36, scope: !2315)
!2315 = !DILexicalBlockFile(scope: !2305, file: !888, discriminator: 2)
!2316 = !DILocation(line: 205, column: 5, scope: !2315)
!2317 = distinct !{!2317, !2318}
!2318 = !DILocation(line: 205, column: 5, scope: !2293)
!2319 = !DILocation(line: 207, column: 1, scope: !2293)
!2320 = !DILocalVariable(name: "inv_bink_scan", scope: !1699, file: !888, line: 1283, type: !2321)
!2321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 512, align: 8, elements: !1703)
!2322 = !DILocation(line: 1283, column: 13, scope: !1699)
!2323 = !DILocalVariable(name: "i", scope: !1699, file: !888, line: 1294, type: !926)
!2324 = !DILocation(line: 1294, column: 9, scope: !1699)
!2325 = !DILocalVariable(name: "j", scope: !1699, file: !888, line: 1294, type: !926)
!2326 = !DILocation(line: 1294, column: 12, scope: !1699)
!2327 = !DILocation(line: 1296, column: 12, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !1699, file: !888, line: 1296, column: 5)
!2329 = !DILocation(line: 1296, column: 10, scope: !2328)
!2330 = !DILocation(line: 1296, column: 17, scope: !2331)
!2331 = !DILexicalBlockFile(scope: !2332, file: !888, discriminator: 1)
!2332 = distinct !DILexicalBlock(scope: !2328, file: !888, line: 1296, column: 5)
!2333 = !DILocation(line: 1296, column: 19, scope: !2331)
!2334 = !DILocation(line: 1296, column: 5, scope: !2331)
!2335 = !DILocation(line: 1297, column: 39, scope: !2332)
!2336 = !DILocation(line: 1297, column: 33, scope: !2332)
!2337 = !DILocation(line: 1297, column: 23, scope: !2332)
!2338 = !DILocation(line: 1297, column: 9, scope: !2332)
!2339 = !DILocation(line: 1297, column: 37, scope: !2332)
!2340 = !DILocation(line: 1296, column: 26, scope: !2341)
!2341 = !DILexicalBlockFile(scope: !2332, file: !888, discriminator: 2)
!2342 = !DILocation(line: 1296, column: 5, scope: !2341)
!2343 = distinct !{!2343, !2344}
!2344 = !DILocation(line: 1296, column: 5, scope: !1699)
!2345 = !DILocation(line: 1299, column: 12, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !1699, file: !888, line: 1299, column: 5)
!2347 = !DILocation(line: 1299, column: 10, scope: !2346)
!2348 = !DILocation(line: 1299, column: 17, scope: !2349)
!2349 = !DILexicalBlockFile(scope: !2350, file: !888, discriminator: 1)
!2350 = distinct !DILexicalBlock(scope: !2346, file: !888, line: 1299, column: 5)
!2351 = !DILocation(line: 1299, column: 19, scope: !2349)
!2352 = !DILocation(line: 1299, column: 5, scope: !2349)
!2353 = !DILocation(line: 1300, column: 16, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2355, file: !888, line: 1300, column: 9)
!2355 = distinct !DILexicalBlock(scope: !2350, file: !888, line: 1299, column: 30)
!2356 = !DILocation(line: 1300, column: 14, scope: !2354)
!2357 = !DILocation(line: 1300, column: 21, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2359, file: !888, discriminator: 1)
!2359 = distinct !DILexicalBlock(scope: !2354, file: !888, line: 1300, column: 9)
!2360 = !DILocation(line: 1300, column: 23, scope: !2358)
!2361 = !DILocation(line: 1300, column: 9, scope: !2358)
!2362 = !DILocalVariable(name: "k", scope: !2363, file: !888, line: 1301, type: !926)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !888, line: 1300, column: 34)
!2364 = !DILocation(line: 1301, column: 17, scope: !2363)
!2365 = !DILocation(line: 1301, column: 35, scope: !2363)
!2366 = !DILocation(line: 1301, column: 21, scope: !2363)
!2367 = !DILocation(line: 1302, column: 56, scope: !2363)
!2368 = !DILocation(line: 1302, column: 39, scope: !2363)
!2369 = !DILocation(line: 1302, column: 72, scope: !2363)
!2370 = !DILocation(line: 1302, column: 70, scope: !2363)
!2371 = !DILocation(line: 1302, column: 61, scope: !2363)
!2372 = !DILocation(line: 1302, column: 59, scope: !2363)
!2373 = !DILocation(line: 1303, column: 51, scope: !2363)
!2374 = !DILocation(line: 1303, column: 41, scope: !2363)
!2375 = !DILocation(line: 1302, column: 75, scope: !2363)
!2376 = !DILocation(line: 1303, column: 65, scope: !2363)
!2377 = !DILocation(line: 1303, column: 55, scope: !2363)
!2378 = !DILocation(line: 1303, column: 68, scope: !2363)
!2379 = !DILocation(line: 1303, column: 53, scope: !2363)
!2380 = !DILocation(line: 1302, column: 34, scope: !2363)
!2381 = !DILocation(line: 1302, column: 13, scope: !2363)
!2382 = !DILocation(line: 1302, column: 31, scope: !2363)
!2383 = !DILocation(line: 1302, column: 37, scope: !2363)
!2384 = !DILocation(line: 1304, column: 56, scope: !2363)
!2385 = !DILocation(line: 1304, column: 39, scope: !2363)
!2386 = !DILocation(line: 1304, column: 72, scope: !2363)
!2387 = !DILocation(line: 1304, column: 70, scope: !2363)
!2388 = !DILocation(line: 1304, column: 61, scope: !2363)
!2389 = !DILocation(line: 1304, column: 59, scope: !2363)
!2390 = !DILocation(line: 1305, column: 51, scope: !2363)
!2391 = !DILocation(line: 1305, column: 41, scope: !2363)
!2392 = !DILocation(line: 1304, column: 75, scope: !2363)
!2393 = !DILocation(line: 1305, column: 65, scope: !2363)
!2394 = !DILocation(line: 1305, column: 55, scope: !2363)
!2395 = !DILocation(line: 1305, column: 68, scope: !2363)
!2396 = !DILocation(line: 1305, column: 53, scope: !2363)
!2397 = !DILocation(line: 1304, column: 34, scope: !2363)
!2398 = !DILocation(line: 1304, column: 13, scope: !2363)
!2399 = !DILocation(line: 1304, column: 31, scope: !2363)
!2400 = !DILocation(line: 1304, column: 37, scope: !2363)
!2401 = !DILocation(line: 1306, column: 9, scope: !2363)
!2402 = !DILocation(line: 1300, column: 30, scope: !2403)
!2403 = !DILexicalBlockFile(scope: !2359, file: !888, discriminator: 2)
!2404 = !DILocation(line: 1300, column: 9, scope: !2403)
!2405 = distinct !{!2405, !2406}
!2406 = !DILocation(line: 1300, column: 9, scope: !2355)
!2407 = !DILocation(line: 1307, column: 5, scope: !2355)
!2408 = !DILocation(line: 1299, column: 26, scope: !2409)
!2409 = !DILexicalBlockFile(scope: !2350, file: !888, discriminator: 2)
!2410 = !DILocation(line: 1299, column: 5, scope: !2409)
!2411 = distinct !{!2411, !2412}
!2412 = !DILocation(line: 1299, column: 5, scope: !1699)
!2413 = !DILocation(line: 1308, column: 1, scope: !1699)
!2414 = distinct !DISubprogram(name: "init_get_bits", scope: !2000, file: !2000, line: 615, type: !2415, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!926, !2417, !1481, !926}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!2418 = !DILocalVariable(name: "s", arg: 1, scope: !2414, file: !2000, line: 615, type: !2417)
!2419 = !DILocation(line: 615, column: 48, scope: !2414)
!2420 = !DILocalVariable(name: "buffer", arg: 2, scope: !2414, file: !2000, line: 615, type: !1481)
!2421 = !DILocation(line: 615, column: 66, scope: !2414)
!2422 = !DILocalVariable(name: "bit_size", arg: 3, scope: !2414, file: !2000, line: 616, type: !926)
!2423 = !DILocation(line: 616, column: 37, scope: !2414)
!2424 = !DILocalVariable(name: "buffer_size", scope: !2414, file: !2000, line: 618, type: !926)
!2425 = !DILocation(line: 618, column: 9, scope: !2414)
!2426 = !DILocalVariable(name: "ret", scope: !2414, file: !2000, line: 619, type: !926)
!2427 = !DILocation(line: 619, column: 9, scope: !2414)
!2428 = !DILocation(line: 621, column: 9, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2414, file: !2000, line: 621, column: 9)
!2430 = !DILocation(line: 621, column: 18, scope: !2429)
!2431 = !DILocation(line: 621, column: 64, scope: !2429)
!2432 = !DILocation(line: 621, column: 67, scope: !2433)
!2433 = !DILexicalBlockFile(scope: !2429, file: !2000, discriminator: 1)
!2434 = !DILocation(line: 621, column: 76, scope: !2433)
!2435 = !DILocation(line: 621, column: 80, scope: !2433)
!2436 = !DILocation(line: 621, column: 84, scope: !2437)
!2437 = !DILexicalBlockFile(scope: !2429, file: !2000, discriminator: 2)
!2438 = !DILocation(line: 621, column: 9, scope: !2437)
!2439 = !DILocation(line: 622, column: 18, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2429, file: !2000, line: 621, column: 92)
!2441 = !DILocation(line: 623, column: 16, scope: !2440)
!2442 = !DILocation(line: 624, column: 13, scope: !2440)
!2443 = !DILocation(line: 625, column: 5, scope: !2440)
!2444 = !DILocation(line: 627, column: 20, scope: !2414)
!2445 = !DILocation(line: 627, column: 29, scope: !2414)
!2446 = !DILocation(line: 627, column: 34, scope: !2414)
!2447 = !DILocation(line: 627, column: 17, scope: !2414)
!2448 = !DILocation(line: 629, column: 17, scope: !2414)
!2449 = !DILocation(line: 629, column: 5, scope: !2414)
!2450 = !DILocation(line: 629, column: 8, scope: !2414)
!2451 = !DILocation(line: 629, column: 15, scope: !2414)
!2452 = !DILocation(line: 630, column: 23, scope: !2414)
!2453 = !DILocation(line: 630, column: 5, scope: !2414)
!2454 = !DILocation(line: 630, column: 8, scope: !2414)
!2455 = !DILocation(line: 630, column: 21, scope: !2414)
!2456 = !DILocation(line: 631, column: 29, scope: !2414)
!2457 = !DILocation(line: 631, column: 38, scope: !2414)
!2458 = !DILocation(line: 631, column: 5, scope: !2414)
!2459 = !DILocation(line: 631, column: 8, scope: !2414)
!2460 = !DILocation(line: 631, column: 27, scope: !2414)
!2461 = !DILocation(line: 632, column: 21, scope: !2414)
!2462 = !DILocation(line: 632, column: 30, scope: !2414)
!2463 = !DILocation(line: 632, column: 28, scope: !2414)
!2464 = !DILocation(line: 632, column: 5, scope: !2414)
!2465 = !DILocation(line: 632, column: 8, scope: !2414)
!2466 = !DILocation(line: 632, column: 19, scope: !2414)
!2467 = !DILocation(line: 633, column: 5, scope: !2414)
!2468 = !DILocation(line: 633, column: 8, scope: !2414)
!2469 = !DILocation(line: 633, column: 14, scope: !2414)
!2470 = !DILocation(line: 639, column: 12, scope: !2414)
!2471 = !DILocation(line: 639, column: 5, scope: !2414)
!2472 = distinct !DISubprogram(name: "skip_bits_long", scope: !2000, file: !2000, line: 293, type: !2473, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{null, !2417, !926}
!2475 = !DILocalVariable(name: "a", arg: 1, scope: !2476, file: !2477, line: 127, type: !926)
!2476 = distinct !DISubprogram(name: "av_clip_c", scope: !2477, file: !2477, line: 127, type: !2478, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2477 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!926, !926, !926, !926}
!2480 = !DILocation(line: 127, column: 87, scope: !2476, inlinedAt: !2481)
!2481 = distinct !DILocation(line: 301, column: 17, scope: !2472)
!2482 = !DILocalVariable(name: "amin", arg: 2, scope: !2476, file: !2477, line: 127, type: !926)
!2483 = !DILocation(line: 127, column: 94, scope: !2476, inlinedAt: !2481)
!2484 = !DILocalVariable(name: "amax", arg: 3, scope: !2476, file: !2477, line: 127, type: !926)
!2485 = !DILocation(line: 127, column: 104, scope: !2476, inlinedAt: !2481)
!2486 = !DILocalVariable(name: "s", arg: 1, scope: !2472, file: !2000, line: 293, type: !2417)
!2487 = !DILocation(line: 293, column: 50, scope: !2472)
!2488 = !DILocalVariable(name: "n", arg: 2, scope: !2472, file: !2000, line: 293, type: !926)
!2489 = !DILocation(line: 293, column: 57, scope: !2472)
!2490 = !DILocation(line: 301, column: 27, scope: !2472)
!2491 = !DILocation(line: 301, column: 31, scope: !2472)
!2492 = !DILocation(line: 301, column: 34, scope: !2472)
!2493 = !DILocation(line: 301, column: 30, scope: !2472)
!2494 = !DILocation(line: 301, column: 41, scope: !2472)
!2495 = !DILocation(line: 301, column: 44, scope: !2472)
!2496 = !DILocation(line: 301, column: 65, scope: !2472)
!2497 = !DILocation(line: 301, column: 68, scope: !2472)
!2498 = !DILocation(line: 301, column: 63, scope: !2472)
!2499 = !DILocation(line: 301, column: 17, scope: !2472)
!2500 = !DILocation(line: 132, column: 9, scope: !2501, inlinedAt: !2481)
!2501 = distinct !DILexicalBlock(scope: !2476, file: !2477, line: 132, column: 9)
!2502 = !DILocation(line: 132, column: 13, scope: !2501, inlinedAt: !2481)
!2503 = !DILocation(line: 132, column: 11, scope: !2501, inlinedAt: !2481)
!2504 = !DILocation(line: 132, column: 9, scope: !2476, inlinedAt: !2481)
!2505 = !DILocation(line: 132, column: 26, scope: !2506, inlinedAt: !2481)
!2506 = !DILexicalBlockFile(scope: !2501, file: !2477, discriminator: 1)
!2507 = !DILocation(line: 132, column: 19, scope: !2506, inlinedAt: !2481)
!2508 = !DILocation(line: 133, column: 14, scope: !2509, inlinedAt: !2481)
!2509 = distinct !DILexicalBlock(scope: !2501, file: !2477, line: 133, column: 14)
!2510 = !DILocation(line: 133, column: 18, scope: !2509, inlinedAt: !2481)
!2511 = !DILocation(line: 133, column: 16, scope: !2509, inlinedAt: !2481)
!2512 = !DILocation(line: 133, column: 14, scope: !2501, inlinedAt: !2481)
!2513 = !DILocation(line: 133, column: 31, scope: !2514, inlinedAt: !2481)
!2514 = !DILexicalBlockFile(scope: !2509, file: !2477, discriminator: 1)
!2515 = !DILocation(line: 133, column: 24, scope: !2514, inlinedAt: !2481)
!2516 = !DILocation(line: 134, column: 17, scope: !2509, inlinedAt: !2481)
!2517 = !DILocation(line: 134, column: 10, scope: !2509, inlinedAt: !2481)
!2518 = !DILocation(line: 135, column: 1, scope: !2476, inlinedAt: !2481)
!2519 = !DILocation(line: 301, column: 5, scope: !2472)
!2520 = !DILocation(line: 301, column: 8, scope: !2472)
!2521 = !DILocation(line: 301, column: 14, scope: !2472)
!2522 = !DILocation(line: 304, column: 1, scope: !2472)
!2523 = distinct !DISubprogram(name: "bink_decode_plane", scope: !888, file: !888, line: 988, type: !2524, isLocal: true, isDefinition: true, scopeLine: 990, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!926, !1739, !1063, !2417, !926, !926}
!2526 = !DILocalVariable(name: "c", arg: 1, scope: !2523, file: !888, line: 988, type: !1739)
!2527 = !DILocation(line: 988, column: 43, scope: !2523)
!2528 = !DILocalVariable(name: "frame", arg: 2, scope: !2523, file: !888, line: 988, type: !1063)
!2529 = !DILocation(line: 988, column: 55, scope: !2523)
!2530 = !DILocalVariable(name: "gb", arg: 3, scope: !2523, file: !888, line: 988, type: !2417)
!2531 = !DILocation(line: 988, column: 77, scope: !2523)
!2532 = !DILocalVariable(name: "plane_idx", arg: 4, scope: !2523, file: !888, line: 989, type: !926)
!2533 = !DILocation(line: 989, column: 34, scope: !2523)
!2534 = !DILocalVariable(name: "is_chroma", arg: 5, scope: !2523, file: !888, line: 989, type: !926)
!2535 = !DILocation(line: 989, column: 49, scope: !2523)
!2536 = !DILocalVariable(name: "blk", scope: !2523, file: !888, line: 991, type: !926)
!2537 = !DILocation(line: 991, column: 9, scope: !2523)
!2538 = !DILocalVariable(name: "ret", scope: !2523, file: !888, line: 991, type: !926)
!2539 = !DILocation(line: 991, column: 14, scope: !2523)
!2540 = !DILocalVariable(name: "i", scope: !2523, file: !888, line: 992, type: !926)
!2541 = !DILocation(line: 992, column: 9, scope: !2523)
!2542 = !DILocalVariable(name: "j", scope: !2523, file: !888, line: 992, type: !926)
!2543 = !DILocation(line: 992, column: 12, scope: !2523)
!2544 = !DILocalVariable(name: "bx", scope: !2523, file: !888, line: 992, type: !926)
!2545 = !DILocation(line: 992, column: 15, scope: !2523)
!2546 = !DILocalVariable(name: "by", scope: !2523, file: !888, line: 992, type: !926)
!2547 = !DILocation(line: 992, column: 19, scope: !2523)
!2548 = !DILocalVariable(name: "dst", scope: !2523, file: !888, line: 993, type: !943)
!2549 = !DILocation(line: 993, column: 14, scope: !2523)
!2550 = !DILocalVariable(name: "prev", scope: !2523, file: !888, line: 993, type: !943)
!2551 = !DILocation(line: 993, column: 20, scope: !2523)
!2552 = !DILocalVariable(name: "ref_start", scope: !2523, file: !888, line: 993, type: !943)
!2553 = !DILocation(line: 993, column: 27, scope: !2523)
!2554 = !DILocalVariable(name: "ref_end", scope: !2523, file: !888, line: 993, type: !943)
!2555 = !DILocation(line: 993, column: 39, scope: !2523)
!2556 = !DILocalVariable(name: "v", scope: !2523, file: !888, line: 994, type: !926)
!2557 = !DILocation(line: 994, column: 9, scope: !2523)
!2558 = !DILocalVariable(name: "col", scope: !2523, file: !888, line: 994, type: !2559)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 64, align: 32, elements: !1688)
!2560 = !DILocation(line: 994, column: 12, scope: !2523)
!2561 = !DILocalVariable(name: "scan", scope: !2523, file: !888, line: 995, type: !1481)
!2562 = !DILocation(line: 995, column: 20, scope: !2523)
!2563 = !DILocalVariable(name: "la_block", scope: !2523, file: !888, line: 996, type: !2564)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 1024, align: 16, elements: !1703)
!2565 = !DILocation(line: 996, column: 44, scope: !2523)
!2566 = !DILocalVariable(name: "block", scope: !2523, file: !888, line: 996, type: !940)
!2567 = !DILocation(line: 996, column: 70, scope: !2523)
!2568 = !DILocation(line: 996, column: 79, scope: !2523)
!2569 = !DILocalVariable(name: "la_ublock", scope: !2523, file: !888, line: 997, type: !2321)
!2570 = !DILocation(line: 997, column: 44, scope: !2523)
!2571 = !DILocalVariable(name: "ublock", scope: !2523, file: !888, line: 997, type: !943)
!2572 = !DILocation(line: 997, column: 71, scope: !2523)
!2573 = !DILocation(line: 997, column: 81, scope: !2523)
!2574 = !DILocalVariable(name: "la_dctblock", scope: !2523, file: !888, line: 998, type: !2575)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 2048, align: 32, elements: !1703)
!2576 = !DILocation(line: 998, column: 44, scope: !2523)
!2577 = !DILocalVariable(name: "dctblock", scope: !2523, file: !888, line: 998, type: !1786)
!2578 = !DILocation(line: 998, column: 73, scope: !2523)
!2579 = !DILocation(line: 998, column: 85, scope: !2523)
!2580 = !DILocalVariable(name: "coordmap", scope: !2523, file: !888, line: 999, type: !2581)
!2581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 2048, align: 32, elements: !1703)
!2582 = !DILocation(line: 999, column: 9, scope: !2523)
!2583 = !DILocalVariable(name: "quant_idx", scope: !2523, file: !888, line: 999, type: !926)
!2584 = !DILocation(line: 999, column: 23, scope: !2523)
!2585 = !DILocalVariable(name: "coef_count", scope: !2523, file: !888, line: 999, type: !926)
!2586 = !DILocation(line: 999, column: 34, scope: !2523)
!2587 = !DILocalVariable(name: "coef_idx", scope: !2523, file: !888, line: 999, type: !2581)
!2588 = !DILocation(line: 999, column: 46, scope: !2523)
!2589 = !DILocalVariable(name: "stride", scope: !2523, file: !888, line: 1001, type: !973)
!2590 = !DILocation(line: 1001, column: 15, scope: !2523)
!2591 = !DILocation(line: 1001, column: 40, scope: !2523)
!2592 = !DILocation(line: 1001, column: 24, scope: !2523)
!2593 = !DILocation(line: 1001, column: 31, scope: !2523)
!2594 = !DILocalVariable(name: "bw", scope: !2523, file: !888, line: 1002, type: !926)
!2595 = !DILocation(line: 1002, column: 9, scope: !2523)
!2596 = !DILocation(line: 1002, column: 14, scope: !2523)
!2597 = !DILocation(line: 1002, column: 27, scope: !2598)
!2598 = !DILexicalBlockFile(scope: !2523, file: !888, discriminator: 1)
!2599 = !DILocation(line: 1002, column: 30, scope: !2598)
!2600 = !DILocation(line: 1002, column: 37, scope: !2598)
!2601 = !DILocation(line: 1002, column: 43, scope: !2598)
!2602 = !DILocation(line: 1002, column: 49, scope: !2598)
!2603 = !DILocation(line: 1002, column: 14, scope: !2598)
!2604 = !DILocation(line: 1002, column: 57, scope: !2605)
!2605 = !DILexicalBlockFile(scope: !2523, file: !888, discriminator: 2)
!2606 = !DILocation(line: 1002, column: 60, scope: !2605)
!2607 = !DILocation(line: 1002, column: 67, scope: !2605)
!2608 = !DILocation(line: 1002, column: 73, scope: !2605)
!2609 = !DILocation(line: 1002, column: 78, scope: !2605)
!2610 = !DILocation(line: 1002, column: 14, scope: !2605)
!2611 = !DILocation(line: 1002, column: 14, scope: !2612)
!2612 = !DILexicalBlockFile(scope: !2523, file: !888, discriminator: 3)
!2613 = !DILocation(line: 1002, column: 9, scope: !2612)
!2614 = !DILocalVariable(name: "bh", scope: !2523, file: !888, line: 1003, type: !926)
!2615 = !DILocation(line: 1003, column: 9, scope: !2523)
!2616 = !DILocation(line: 1003, column: 14, scope: !2523)
!2617 = !DILocation(line: 1003, column: 27, scope: !2598)
!2618 = !DILocation(line: 1003, column: 30, scope: !2598)
!2619 = !DILocation(line: 1003, column: 37, scope: !2598)
!2620 = !DILocation(line: 1003, column: 44, scope: !2598)
!2621 = !DILocation(line: 1003, column: 50, scope: !2598)
!2622 = !DILocation(line: 1003, column: 14, scope: !2598)
!2623 = !DILocation(line: 1003, column: 58, scope: !2605)
!2624 = !DILocation(line: 1003, column: 61, scope: !2605)
!2625 = !DILocation(line: 1003, column: 68, scope: !2605)
!2626 = !DILocation(line: 1003, column: 75, scope: !2605)
!2627 = !DILocation(line: 1003, column: 80, scope: !2605)
!2628 = !DILocation(line: 1003, column: 14, scope: !2605)
!2629 = !DILocation(line: 1003, column: 14, scope: !2612)
!2630 = !DILocation(line: 1003, column: 9, scope: !2612)
!2631 = !DILocalVariable(name: "width", scope: !2523, file: !888, line: 1004, type: !926)
!2632 = !DILocation(line: 1004, column: 9, scope: !2523)
!2633 = !DILocation(line: 1004, column: 17, scope: !2523)
!2634 = !DILocation(line: 1004, column: 20, scope: !2523)
!2635 = !DILocation(line: 1004, column: 27, scope: !2523)
!2636 = !DILocation(line: 1004, column: 36, scope: !2523)
!2637 = !DILocation(line: 1004, column: 33, scope: !2523)
!2638 = !DILocalVariable(name: "height", scope: !2523, file: !888, line: 1005, type: !926)
!2639 = !DILocation(line: 1005, column: 9, scope: !2523)
!2640 = !DILocation(line: 1005, column: 18, scope: !2523)
!2641 = !DILocation(line: 1005, column: 21, scope: !2523)
!2642 = !DILocation(line: 1005, column: 28, scope: !2523)
!2643 = !DILocation(line: 1005, column: 38, scope: !2523)
!2644 = !DILocation(line: 1005, column: 35, scope: !2523)
!2645 = !DILocation(line: 1007, column: 9, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2523, file: !888, line: 1007, column: 9)
!2647 = !DILocation(line: 1007, column: 12, scope: !2646)
!2648 = !DILocation(line: 1007, column: 20, scope: !2646)
!2649 = !DILocation(line: 1007, column: 27, scope: !2646)
!2650 = !DILocation(line: 1007, column: 40, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !2646, file: !888, discriminator: 1)
!2652 = !DILocation(line: 1007, column: 30, scope: !2651)
!2653 = !DILocation(line: 1007, column: 9, scope: !2651)
!2654 = !DILocalVariable(name: "fill", scope: !2655, file: !888, line: 1008, type: !926)
!2655 = distinct !DILexicalBlock(scope: !2646, file: !888, line: 1007, column: 45)
!2656 = !DILocation(line: 1008, column: 13, scope: !2655)
!2657 = !DILocation(line: 1008, column: 29, scope: !2655)
!2658 = !DILocation(line: 1008, column: 20, scope: !2655)
!2659 = !DILocation(line: 1010, column: 27, scope: !2655)
!2660 = !DILocation(line: 1010, column: 15, scope: !2655)
!2661 = !DILocation(line: 1010, column: 22, scope: !2655)
!2662 = !DILocation(line: 1010, column: 13, scope: !2655)
!2663 = !DILocation(line: 1012, column: 16, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2655, file: !888, line: 1012, column: 9)
!2665 = !DILocation(line: 1012, column: 14, scope: !2664)
!2666 = !DILocation(line: 1012, column: 21, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !2668, file: !888, discriminator: 1)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !888, line: 1012, column: 9)
!2669 = !DILocation(line: 1012, column: 25, scope: !2667)
!2670 = !DILocation(line: 1012, column: 23, scope: !2667)
!2671 = !DILocation(line: 1012, column: 9, scope: !2667)
!2672 = !DILocation(line: 1013, column: 20, scope: !2668)
!2673 = !DILocation(line: 1013, column: 26, scope: !2668)
!2674 = !DILocation(line: 1013, column: 30, scope: !2668)
!2675 = !DILocation(line: 1013, column: 28, scope: !2668)
!2676 = !DILocation(line: 1013, column: 24, scope: !2668)
!2677 = !DILocation(line: 1013, column: 38, scope: !2668)
!2678 = !DILocation(line: 1013, column: 13, scope: !2668)
!2679 = !DILocation(line: 1013, column: 44, scope: !2668)
!2680 = !DILocation(line: 1012, column: 34, scope: !2681)
!2681 = !DILexicalBlockFile(scope: !2668, file: !888, discriminator: 2)
!2682 = !DILocation(line: 1012, column: 9, scope: !2681)
!2683 = distinct !{!2683, !2684}
!2684 = !DILocation(line: 1012, column: 9, scope: !2655)
!2685 = !DILocation(line: 1014, column: 9, scope: !2655)
!2686 = !DILocation(line: 1017, column: 18, scope: !2523)
!2687 = !DILocation(line: 1017, column: 23, scope: !2523)
!2688 = !DILocation(line: 1017, column: 30, scope: !2523)
!2689 = !DILocation(line: 1017, column: 22, scope: !2523)
!2690 = !DILocation(line: 1017, column: 39, scope: !2598)
!2691 = !DILocation(line: 1017, column: 22, scope: !2598)
!2692 = !DILocation(line: 1017, column: 22, scope: !2605)
!2693 = !DILocation(line: 1017, column: 22, scope: !2612)
!2694 = !DILocation(line: 1017, column: 54, scope: !2612)
!2695 = !DILocation(line: 1017, column: 5, scope: !2612)
!2696 = !DILocation(line: 1018, column: 12, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2523, file: !888, line: 1018, column: 5)
!2698 = !DILocation(line: 1018, column: 10, scope: !2697)
!2699 = !DILocation(line: 1018, column: 17, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2701, file: !888, discriminator: 1)
!2701 = distinct !DILexicalBlock(scope: !2697, file: !888, line: 1018, column: 5)
!2702 = !DILocation(line: 1018, column: 19, scope: !2700)
!2703 = !DILocation(line: 1018, column: 5, scope: !2700)
!2704 = !DILocation(line: 1019, column: 21, scope: !2701)
!2705 = !DILocation(line: 1019, column: 25, scope: !2701)
!2706 = !DILocation(line: 1019, column: 28, scope: !2701)
!2707 = !DILocation(line: 1019, column: 9, scope: !2701)
!2708 = !DILocation(line: 1018, column: 35, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2701, file: !888, discriminator: 2)
!2710 = !DILocation(line: 1018, column: 5, scope: !2709)
!2711 = distinct !{!2711, !2712}
!2712 = !DILocation(line: 1018, column: 5, scope: !2523)
!2713 = !DILocation(line: 1021, column: 31, scope: !2523)
!2714 = !DILocation(line: 1021, column: 17, scope: !2523)
!2715 = !DILocation(line: 1021, column: 20, scope: !2523)
!2716 = !DILocation(line: 1021, column: 26, scope: !2523)
!2717 = !DILocation(line: 1021, column: 58, scope: !2598)
!2718 = !DILocation(line: 1021, column: 44, scope: !2598)
!2719 = !DILocation(line: 1021, column: 47, scope: !2598)
!2720 = !DILocation(line: 1021, column: 53, scope: !2598)
!2721 = !DILocation(line: 1021, column: 17, scope: !2598)
!2722 = !DILocation(line: 1022, column: 56, scope: !2523)
!2723 = !DILocation(line: 1022, column: 44, scope: !2523)
!2724 = !DILocation(line: 1022, column: 51, scope: !2523)
!2725 = !DILocation(line: 1021, column: 17, scope: !2605)
!2726 = !DILocation(line: 1021, column: 17, scope: !2612)
!2727 = !DILocation(line: 1021, column: 15, scope: !2612)
!2728 = !DILocation(line: 1023, column: 15, scope: !2523)
!2729 = !DILocation(line: 1024, column: 20, scope: !2523)
!2730 = !DILocation(line: 1024, column: 23, scope: !2523)
!2731 = !DILocation(line: 1024, column: 47, scope: !2523)
!2732 = !DILocation(line: 1024, column: 29, scope: !2523)
!2733 = !DILocation(line: 1024, column: 32, scope: !2523)
!2734 = !DILocation(line: 1024, column: 38, scope: !2523)
!2735 = !DILocation(line: 1024, column: 61, scope: !2523)
!2736 = !DILocation(line: 1024, column: 64, scope: !2523)
!2737 = !DILocation(line: 1024, column: 58, scope: !2523)
!2738 = !DILocation(line: 1024, column: 27, scope: !2523)
!2739 = !DILocation(line: 1024, column: 70, scope: !2523)
!2740 = !DILocation(line: 1024, column: 17, scope: !2523)
!2741 = !DILocation(line: 1023, column: 13, scope: !2523)
!2742 = !DILocation(line: 1026, column: 12, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2523, file: !888, line: 1026, column: 5)
!2744 = !DILocation(line: 1026, column: 10, scope: !2743)
!2745 = !DILocation(line: 1026, column: 17, scope: !2746)
!2746 = !DILexicalBlockFile(scope: !2747, file: !888, discriminator: 1)
!2747 = distinct !DILexicalBlock(scope: !2743, file: !888, line: 1026, column: 5)
!2748 = !DILocation(line: 1026, column: 19, scope: !2746)
!2749 = !DILocation(line: 1026, column: 5, scope: !2746)
!2750 = !DILocation(line: 1027, column: 24, scope: !2747)
!2751 = !DILocation(line: 1027, column: 26, scope: !2747)
!2752 = !DILocation(line: 1027, column: 34, scope: !2747)
!2753 = !DILocation(line: 1027, column: 36, scope: !2747)
!2754 = !DILocation(line: 1027, column: 44, scope: !2747)
!2755 = !DILocation(line: 1027, column: 42, scope: !2747)
!2756 = !DILocation(line: 1027, column: 31, scope: !2747)
!2757 = !DILocation(line: 1027, column: 18, scope: !2747)
!2758 = !DILocation(line: 1027, column: 9, scope: !2747)
!2759 = !DILocation(line: 1027, column: 21, scope: !2747)
!2760 = !DILocation(line: 1026, column: 26, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !2747, file: !888, discriminator: 2)
!2762 = !DILocation(line: 1026, column: 5, scope: !2761)
!2763 = distinct !{!2763, !2764}
!2764 = !DILocation(line: 1026, column: 5, scope: !2523)
!2765 = !DILocation(line: 1029, column: 13, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2523, file: !888, line: 1029, column: 5)
!2767 = !DILocation(line: 1029, column: 10, scope: !2766)
!2768 = !DILocation(line: 1029, column: 18, scope: !2769)
!2769 = !DILexicalBlockFile(scope: !2770, file: !888, discriminator: 1)
!2770 = distinct !DILexicalBlock(scope: !2766, file: !888, line: 1029, column: 5)
!2771 = !DILocation(line: 1029, column: 23, scope: !2769)
!2772 = !DILocation(line: 1029, column: 21, scope: !2769)
!2773 = !DILocation(line: 1029, column: 5, scope: !2769)
!2774 = !DILocation(line: 1030, column: 37, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1030, column: 13)
!2776 = distinct !DILexicalBlock(scope: !2770, file: !888, line: 1029, column: 33)
!2777 = !DILocation(line: 1030, column: 40, scope: !2775)
!2778 = !DILocation(line: 1030, column: 47, scope: !2775)
!2779 = !DILocation(line: 1030, column: 52, scope: !2775)
!2780 = !DILocation(line: 1030, column: 55, scope: !2775)
!2781 = !DILocation(line: 1030, column: 20, scope: !2775)
!2782 = !DILocation(line: 1030, column: 18, scope: !2775)
!2783 = !DILocation(line: 1030, column: 86, scope: !2775)
!2784 = !DILocation(line: 1030, column: 13, scope: !2776)
!2785 = !DILocation(line: 1031, column: 20, scope: !2775)
!2786 = !DILocation(line: 1031, column: 13, scope: !2775)
!2787 = !DILocation(line: 1032, column: 37, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1032, column: 13)
!2789 = !DILocation(line: 1032, column: 40, scope: !2788)
!2790 = !DILocation(line: 1032, column: 47, scope: !2788)
!2791 = !DILocation(line: 1032, column: 52, scope: !2788)
!2792 = !DILocation(line: 1032, column: 55, scope: !2788)
!2793 = !DILocation(line: 1032, column: 20, scope: !2788)
!2794 = !DILocation(line: 1032, column: 18, scope: !2788)
!2795 = !DILocation(line: 1032, column: 90, scope: !2788)
!2796 = !DILocation(line: 1032, column: 13, scope: !2776)
!2797 = !DILocation(line: 1033, column: 20, scope: !2788)
!2798 = !DILocation(line: 1033, column: 13, scope: !2788)
!2799 = !DILocation(line: 1034, column: 32, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1034, column: 13)
!2801 = !DILocation(line: 1034, column: 37, scope: !2800)
!2802 = !DILocation(line: 1034, column: 40, scope: !2800)
!2803 = !DILocation(line: 1034, column: 65, scope: !2800)
!2804 = !DILocation(line: 1034, column: 20, scope: !2800)
!2805 = !DILocation(line: 1034, column: 18, scope: !2800)
!2806 = !DILocation(line: 1034, column: 69, scope: !2800)
!2807 = !DILocation(line: 1034, column: 13, scope: !2776)
!2808 = !DILocation(line: 1035, column: 20, scope: !2800)
!2809 = !DILocation(line: 1035, column: 13, scope: !2800)
!2810 = !DILocation(line: 1036, column: 34, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1036, column: 13)
!2812 = !DILocation(line: 1036, column: 37, scope: !2811)
!2813 = !DILocation(line: 1036, column: 44, scope: !2811)
!2814 = !DILocation(line: 1036, column: 49, scope: !2811)
!2815 = !DILocation(line: 1036, column: 52, scope: !2811)
!2816 = !DILocation(line: 1036, column: 20, scope: !2811)
!2817 = !DILocation(line: 1036, column: 18, scope: !2811)
!2818 = !DILocation(line: 1036, column: 79, scope: !2811)
!2819 = !DILocation(line: 1036, column: 13, scope: !2776)
!2820 = !DILocation(line: 1037, column: 20, scope: !2811)
!2821 = !DILocation(line: 1037, column: 13, scope: !2811)
!2822 = !DILocation(line: 1038, column: 39, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1038, column: 13)
!2824 = !DILocation(line: 1038, column: 42, scope: !2823)
!2825 = !DILocation(line: 1038, column: 49, scope: !2823)
!2826 = !DILocation(line: 1038, column: 54, scope: !2823)
!2827 = !DILocation(line: 1038, column: 57, scope: !2823)
!2828 = !DILocation(line: 1038, column: 20, scope: !2823)
!2829 = !DILocation(line: 1038, column: 18, scope: !2823)
!2830 = !DILocation(line: 1038, column: 82, scope: !2823)
!2831 = !DILocation(line: 1038, column: 13, scope: !2776)
!2832 = !DILocation(line: 1039, column: 20, scope: !2823)
!2833 = !DILocation(line: 1039, column: 13, scope: !2823)
!2834 = !DILocation(line: 1040, column: 39, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1040, column: 13)
!2836 = !DILocation(line: 1040, column: 42, scope: !2835)
!2837 = !DILocation(line: 1040, column: 49, scope: !2835)
!2838 = !DILocation(line: 1040, column: 54, scope: !2835)
!2839 = !DILocation(line: 1040, column: 57, scope: !2835)
!2840 = !DILocation(line: 1040, column: 20, scope: !2835)
!2841 = !DILocation(line: 1040, column: 18, scope: !2835)
!2842 = !DILocation(line: 1040, column: 82, scope: !2835)
!2843 = !DILocation(line: 1040, column: 13, scope: !2776)
!2844 = !DILocation(line: 1041, column: 20, scope: !2835)
!2845 = !DILocation(line: 1041, column: 13, scope: !2835)
!2846 = !DILocation(line: 1042, column: 29, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1042, column: 13)
!2848 = !DILocation(line: 1042, column: 32, scope: !2847)
!2849 = !DILocation(line: 1042, column: 39, scope: !2847)
!2850 = !DILocation(line: 1042, column: 44, scope: !2847)
!2851 = !DILocation(line: 1042, column: 47, scope: !2847)
!2852 = !DILocation(line: 1042, column: 20, scope: !2847)
!2853 = !DILocation(line: 1042, column: 18, scope: !2847)
!2854 = !DILocation(line: 1042, column: 82, scope: !2847)
!2855 = !DILocation(line: 1042, column: 13, scope: !2776)
!2856 = !DILocation(line: 1043, column: 20, scope: !2847)
!2857 = !DILocation(line: 1043, column: 13, scope: !2847)
!2858 = !DILocation(line: 1044, column: 29, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1044, column: 13)
!2860 = !DILocation(line: 1044, column: 32, scope: !2859)
!2861 = !DILocation(line: 1044, column: 39, scope: !2859)
!2862 = !DILocation(line: 1044, column: 44, scope: !2859)
!2863 = !DILocation(line: 1044, column: 47, scope: !2859)
!2864 = !DILocation(line: 1044, column: 20, scope: !2859)
!2865 = !DILocation(line: 1044, column: 18, scope: !2859)
!2866 = !DILocation(line: 1044, column: 82, scope: !2859)
!2867 = !DILocation(line: 1044, column: 13, scope: !2776)
!2868 = !DILocation(line: 1045, column: 20, scope: !2859)
!2869 = !DILocation(line: 1045, column: 13, scope: !2859)
!2870 = !DILocation(line: 1046, column: 30, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1046, column: 13)
!2872 = !DILocation(line: 1046, column: 33, scope: !2871)
!2873 = !DILocation(line: 1046, column: 40, scope: !2871)
!2874 = !DILocation(line: 1046, column: 45, scope: !2871)
!2875 = !DILocation(line: 1046, column: 48, scope: !2871)
!2876 = !DILocation(line: 1046, column: 20, scope: !2871)
!2877 = !DILocation(line: 1046, column: 18, scope: !2871)
!2878 = !DILocation(line: 1046, column: 71, scope: !2871)
!2879 = !DILocation(line: 1046, column: 13, scope: !2776)
!2880 = !DILocation(line: 1047, column: 20, scope: !2871)
!2881 = !DILocation(line: 1047, column: 13, scope: !2871)
!2882 = !DILocation(line: 1049, column: 13, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1049, column: 13)
!2884 = !DILocation(line: 1049, column: 19, scope: !2883)
!2885 = !DILocation(line: 1049, column: 16, scope: !2883)
!2886 = !DILocation(line: 1049, column: 13, scope: !2776)
!2887 = !DILocation(line: 1050, column: 13, scope: !2883)
!2888 = !DILocation(line: 1051, column: 27, scope: !2776)
!2889 = !DILocation(line: 1051, column: 15, scope: !2776)
!2890 = !DILocation(line: 1051, column: 22, scope: !2776)
!2891 = !DILocation(line: 1051, column: 42, scope: !2776)
!2892 = !DILocation(line: 1051, column: 41, scope: !2776)
!2893 = !DILocation(line: 1051, column: 45, scope: !2776)
!2894 = !DILocation(line: 1051, column: 44, scope: !2776)
!2895 = !DILocation(line: 1051, column: 38, scope: !2776)
!2896 = !DILocation(line: 1051, column: 13, scope: !2776)
!2897 = !DILocation(line: 1052, column: 31, scope: !2776)
!2898 = !DILocation(line: 1052, column: 17, scope: !2776)
!2899 = !DILocation(line: 1052, column: 20, scope: !2776)
!2900 = !DILocation(line: 1052, column: 26, scope: !2776)
!2901 = !DILocation(line: 1052, column: 58, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2776, file: !888, discriminator: 1)
!2903 = !DILocation(line: 1052, column: 44, scope: !2902)
!2904 = !DILocation(line: 1052, column: 47, scope: !2902)
!2905 = !DILocation(line: 1052, column: 53, scope: !2902)
!2906 = !DILocation(line: 1052, column: 17, scope: !2902)
!2907 = !DILocation(line: 1053, column: 56, scope: !2776)
!2908 = !DILocation(line: 1053, column: 44, scope: !2776)
!2909 = !DILocation(line: 1053, column: 51, scope: !2776)
!2910 = !DILocation(line: 1052, column: 17, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !2776, file: !888, discriminator: 2)
!2912 = !DILocation(line: 1052, column: 17, scope: !2913)
!2913 = !DILexicalBlockFile(scope: !2776, file: !888, discriminator: 3)
!2914 = !DILocation(line: 1053, column: 72, scope: !2902)
!2915 = !DILocation(line: 1053, column: 71, scope: !2902)
!2916 = !DILocation(line: 1053, column: 75, scope: !2902)
!2917 = !DILocation(line: 1053, column: 74, scope: !2902)
!2918 = !DILocation(line: 1053, column: 68, scope: !2902)
!2919 = !DILocation(line: 1052, column: 14, scope: !2913)
!2920 = !DILocation(line: 1054, column: 17, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2776, file: !888, line: 1054, column: 9)
!2922 = !DILocation(line: 1054, column: 14, scope: !2921)
!2923 = !DILocation(line: 1054, column: 22, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2925, file: !888, discriminator: 1)
!2925 = distinct !DILexicalBlock(scope: !2921, file: !888, line: 1054, column: 9)
!2926 = !DILocation(line: 1054, column: 27, scope: !2924)
!2927 = !DILocation(line: 1054, column: 25, scope: !2924)
!2928 = !DILocation(line: 1054, column: 9, scope: !2924)
!2929 = !DILocation(line: 1055, column: 29, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2925, file: !888, line: 1054, column: 58)
!2931 = !DILocation(line: 1055, column: 19, scope: !2930)
!2932 = !DILocation(line: 1055, column: 17, scope: !2930)
!2933 = !DILocation(line: 1057, column: 18, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2930, file: !888, line: 1057, column: 17)
!2935 = !DILocation(line: 1057, column: 21, scope: !2934)
!2936 = !DILocation(line: 1057, column: 26, scope: !2934)
!2937 = !DILocation(line: 1057, column: 29, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2934, file: !888, discriminator: 1)
!2939 = !DILocation(line: 1057, column: 33, scope: !2938)
!2940 = !DILocation(line: 1057, column: 17, scope: !2938)
!2941 = !DILocation(line: 1058, column: 19, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2934, file: !888, line: 1057, column: 50)
!2943 = !DILocation(line: 1059, column: 21, scope: !2942)
!2944 = !DILocation(line: 1060, column: 22, scope: !2942)
!2945 = !DILocation(line: 1061, column: 17, scope: !2942)
!2946 = !DILocation(line: 1063, column: 21, scope: !2930)
!2947 = !DILocation(line: 1063, column: 13, scope: !2930)
!2948 = !DILocation(line: 1065, column: 17, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2930, file: !888, line: 1063, column: 26)
!2950 = !DILocation(line: 1065, column: 20, scope: !2949)
!2951 = !DILocation(line: 1065, column: 25, scope: !2949)
!2952 = !DILocation(line: 1065, column: 46, scope: !2949)
!2953 = !DILocation(line: 1065, column: 51, scope: !2949)
!2954 = !DILocation(line: 1065, column: 57, scope: !2949)
!2955 = !DILocation(line: 1066, column: 17, scope: !2949)
!2956 = !DILocation(line: 1068, column: 33, scope: !2949)
!2957 = !DILocation(line: 1068, column: 23, scope: !2949)
!2958 = !DILocation(line: 1068, column: 21, scope: !2949)
!2959 = !DILocation(line: 1069, column: 25, scope: !2949)
!2960 = !DILocation(line: 1069, column: 17, scope: !2949)
!2961 = !DILocation(line: 1071, column: 51, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1069, column: 30)
!2963 = !DILocation(line: 1071, column: 42, scope: !2962)
!2964 = !DILocation(line: 1071, column: 28, scope: !2962)
!2965 = !DILocation(line: 1071, column: 26, scope: !2962)
!2966 = !DILocation(line: 1072, column: 23, scope: !2962)
!2967 = !DILocation(line: 1073, column: 21, scope: !2962)
!2968 = distinct !{!2968, !2967}
!2969 = !DILocalVariable(name: "run", scope: !2970, file: !888, line: 1074, type: !926)
!2970 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1073, column: 24)
!2971 = !DILocation(line: 1074, column: 29, scope: !2970)
!2972 = !DILocation(line: 1074, column: 45, scope: !2970)
!2973 = !DILocation(line: 1074, column: 35, scope: !2970)
!2974 = !DILocation(line: 1074, column: 62, scope: !2970)
!2975 = !DILocation(line: 1076, column: 30, scope: !2970)
!2976 = !DILocation(line: 1076, column: 27, scope: !2970)
!2977 = !DILocation(line: 1077, column: 29, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2970, file: !888, line: 1077, column: 29)
!2979 = !DILocation(line: 1077, column: 31, scope: !2978)
!2980 = !DILocation(line: 1077, column: 29, scope: !2970)
!2981 = !DILocation(line: 1078, column: 36, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !888, line: 1077, column: 37)
!2983 = !DILocation(line: 1078, column: 39, scope: !2982)
!2984 = !DILocation(line: 1078, column: 29, scope: !2982)
!2985 = !DILocation(line: 1079, column: 29, scope: !2982)
!2986 = !DILocation(line: 1081, column: 39, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2970, file: !888, line: 1081, column: 29)
!2988 = !DILocation(line: 1081, column: 29, scope: !2987)
!2989 = !DILocation(line: 1081, column: 29, scope: !2970)
!2990 = !DILocation(line: 1082, column: 43, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2987, file: !888, line: 1081, column: 44)
!2992 = !DILocation(line: 1082, column: 33, scope: !2991)
!2993 = !DILocation(line: 1082, column: 31, scope: !2991)
!2994 = !DILocation(line: 1083, column: 36, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2991, file: !888, line: 1083, column: 29)
!2996 = !DILocation(line: 1083, column: 34, scope: !2995)
!2997 = !DILocation(line: 1083, column: 41, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !2999, file: !888, discriminator: 1)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !888, line: 1083, column: 29)
!3000 = !DILocation(line: 1083, column: 45, scope: !2998)
!3001 = !DILocation(line: 1083, column: 43, scope: !2998)
!3002 = !DILocation(line: 1083, column: 29, scope: !2998)
!3003 = !DILocation(line: 1084, column: 51, scope: !2999)
!3004 = !DILocation(line: 1084, column: 45, scope: !2999)
!3005 = !DILocation(line: 1084, column: 40, scope: !2999)
!3006 = !DILocation(line: 1084, column: 33, scope: !2999)
!3007 = !DILocation(line: 1084, column: 49, scope: !2999)
!3008 = !DILocation(line: 1083, column: 51, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !2999, file: !888, discriminator: 2)
!3010 = !DILocation(line: 1083, column: 29, scope: !3009)
!3011 = distinct !{!3011, !3012}
!3012 = !DILocation(line: 1083, column: 29, scope: !2991)
!3013 = !DILocation(line: 1085, column: 25, scope: !2991)
!3014 = !DILocation(line: 1086, column: 36, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !888, line: 1086, column: 29)
!3016 = distinct !DILexicalBlock(scope: !2987, file: !888, line: 1085, column: 32)
!3017 = !DILocation(line: 1086, column: 34, scope: !3015)
!3018 = !DILocation(line: 1086, column: 41, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3020, file: !888, discriminator: 1)
!3020 = distinct !DILexicalBlock(scope: !3015, file: !888, line: 1086, column: 29)
!3021 = !DILocation(line: 1086, column: 45, scope: !3019)
!3022 = !DILocation(line: 1086, column: 43, scope: !3019)
!3023 = !DILocation(line: 1086, column: 29, scope: !3019)
!3024 = !DILocation(line: 1087, column: 61, scope: !3020)
!3025 = !DILocation(line: 1087, column: 51, scope: !3020)
!3026 = !DILocation(line: 1087, column: 45, scope: !3020)
!3027 = !DILocation(line: 1087, column: 40, scope: !3020)
!3028 = !DILocation(line: 1087, column: 33, scope: !3020)
!3029 = !DILocation(line: 1087, column: 49, scope: !3020)
!3030 = !DILocation(line: 1086, column: 51, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3020, file: !888, discriminator: 2)
!3032 = !DILocation(line: 1086, column: 29, scope: !3031)
!3033 = distinct !{!3033, !3034}
!3034 = !DILocation(line: 1086, column: 29, scope: !3016)
!3035 = !DILocation(line: 1089, column: 21, scope: !2970)
!3036 = !DILocation(line: 1089, column: 30, scope: !3037)
!3037 = !DILexicalBlockFile(scope: !2962, file: !888, discriminator: 1)
!3038 = !DILocation(line: 1089, column: 32, scope: !3037)
!3039 = !DILocation(line: 1089, column: 21, scope: !3037)
!3040 = !DILocation(line: 1090, column: 25, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1090, column: 25)
!3042 = !DILocation(line: 1090, column: 27, scope: !3041)
!3043 = !DILocation(line: 1090, column: 25, scope: !2962)
!3044 = !DILocation(line: 1091, column: 53, scope: !3041)
!3045 = !DILocation(line: 1091, column: 43, scope: !3041)
!3046 = !DILocation(line: 1091, column: 37, scope: !3041)
!3047 = !DILocation(line: 1091, column: 32, scope: !3041)
!3048 = !DILocation(line: 1091, column: 25, scope: !3041)
!3049 = !DILocation(line: 1091, column: 41, scope: !3041)
!3050 = !DILocation(line: 1092, column: 21, scope: !2962)
!3051 = !DILocation(line: 1094, column: 28, scope: !2962)
!3052 = !DILocation(line: 1094, column: 21, scope: !2962)
!3053 = !DILocation(line: 1095, column: 45, scope: !2962)
!3054 = !DILocation(line: 1095, column: 35, scope: !2962)
!3055 = !DILocation(line: 1095, column: 21, scope: !2962)
!3056 = !DILocation(line: 1095, column: 33, scope: !2962)
!3057 = !DILocation(line: 1096, column: 54, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1096, column: 25)
!3059 = !DILocation(line: 1096, column: 57, scope: !3058)
!3060 = !DILocation(line: 1096, column: 61, scope: !3058)
!3061 = !DILocation(line: 1096, column: 95, scope: !3058)
!3062 = !DILocation(line: 1096, column: 38, scope: !3058)
!3063 = !DILocation(line: 1096, column: 36, scope: !3058)
!3064 = !DILocation(line: 1096, column: 110, scope: !3058)
!3065 = !DILocation(line: 1096, column: 25, scope: !2962)
!3066 = !DILocation(line: 1097, column: 32, scope: !3058)
!3067 = !DILocation(line: 1097, column: 25, scope: !3058)
!3068 = !DILocation(line: 1098, column: 43, scope: !2962)
!3069 = !DILocation(line: 1098, column: 70, scope: !2962)
!3070 = !DILocation(line: 1098, column: 53, scope: !2962)
!3071 = !DILocation(line: 1098, column: 82, scope: !2962)
!3072 = !DILocation(line: 1098, column: 94, scope: !2962)
!3073 = !DILocation(line: 1098, column: 21, scope: !2962)
!3074 = !DILocation(line: 1099, column: 21, scope: !2962)
!3075 = !DILocation(line: 1099, column: 24, scope: !2962)
!3076 = !DILocation(line: 1099, column: 32, scope: !2962)
!3077 = !DILocation(line: 1099, column: 41, scope: !2962)
!3078 = !DILocation(line: 1099, column: 52, scope: !2962)
!3079 = !DILocation(line: 1100, column: 21, scope: !2962)
!3080 = !DILocation(line: 1102, column: 35, scope: !2962)
!3081 = !DILocation(line: 1102, column: 25, scope: !2962)
!3082 = !DILocation(line: 1102, column: 23, scope: !2962)
!3083 = !DILocation(line: 1103, column: 21, scope: !2962)
!3084 = !DILocation(line: 1103, column: 24, scope: !2962)
!3085 = !DILocation(line: 1103, column: 29, scope: !2962)
!3086 = !DILocation(line: 1103, column: 47, scope: !2962)
!3087 = !DILocation(line: 1103, column: 52, scope: !2962)
!3088 = !DILocation(line: 1103, column: 55, scope: !2962)
!3089 = !DILocation(line: 1104, column: 21, scope: !2962)
!3090 = !DILocation(line: 1106, column: 28, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1106, column: 21)
!3092 = !DILocation(line: 1106, column: 26, scope: !3091)
!3093 = !DILocation(line: 1106, column: 33, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3095, file: !888, discriminator: 1)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !888, line: 1106, column: 21)
!3096 = !DILocation(line: 1106, column: 35, scope: !3094)
!3097 = !DILocation(line: 1106, column: 21, scope: !3094)
!3098 = !DILocation(line: 1107, column: 44, scope: !3095)
!3099 = !DILocation(line: 1107, column: 34, scope: !3095)
!3100 = !DILocation(line: 1107, column: 29, scope: !3095)
!3101 = !DILocation(line: 1107, column: 25, scope: !3095)
!3102 = !DILocation(line: 1107, column: 32, scope: !3095)
!3103 = !DILocation(line: 1106, column: 41, scope: !3104)
!3104 = !DILexicalBlockFile(scope: !3095, file: !888, discriminator: 2)
!3105 = !DILocation(line: 1106, column: 21, scope: !3104)
!3106 = distinct !{!3106, !3107}
!3107 = !DILocation(line: 1106, column: 21, scope: !2962)
!3108 = !DILocation(line: 1108, column: 28, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1108, column: 21)
!3110 = !DILocation(line: 1108, column: 26, scope: !3109)
!3111 = !DILocation(line: 1108, column: 33, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !3113, file: !888, discriminator: 1)
!3113 = distinct !DILexicalBlock(scope: !3109, file: !888, line: 1108, column: 21)
!3114 = !DILocation(line: 1108, column: 35, scope: !3112)
!3115 = !DILocation(line: 1108, column: 21, scope: !3112)
!3116 = !DILocation(line: 1109, column: 39, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3113, file: !888, line: 1108, column: 45)
!3118 = !DILocation(line: 1109, column: 29, scope: !3117)
!3119 = !DILocation(line: 1109, column: 27, scope: !3117)
!3120 = !DILocation(line: 1110, column: 32, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3117, file: !888, line: 1110, column: 25)
!3122 = !DILocation(line: 1110, column: 30, scope: !3121)
!3123 = !DILocation(line: 1110, column: 37, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !3125, file: !888, discriminator: 1)
!3125 = distinct !DILexicalBlock(scope: !3121, file: !888, line: 1110, column: 25)
!3126 = !DILocation(line: 1110, column: 39, scope: !3124)
!3127 = !DILocation(line: 1110, column: 25, scope: !3124)
!3128 = !DILocation(line: 1111, column: 51, scope: !3125)
!3129 = !DILocation(line: 1111, column: 53, scope: !3125)
!3130 = !DILocation(line: 1111, column: 47, scope: !3125)
!3131 = !DILocation(line: 1111, column: 36, scope: !3125)
!3132 = !DILocation(line: 1111, column: 40, scope: !3125)
!3133 = !DILocation(line: 1111, column: 41, scope: !3125)
!3134 = !DILocation(line: 1111, column: 38, scope: !3125)
!3135 = !DILocation(line: 1111, column: 29, scope: !3125)
!3136 = !DILocation(line: 1111, column: 45, scope: !3125)
!3137 = !DILocation(line: 1110, column: 45, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3125, file: !888, discriminator: 2)
!3139 = !DILocation(line: 1110, column: 51, scope: !3138)
!3140 = !DILocation(line: 1110, column: 25, scope: !3138)
!3141 = distinct !{!3141, !3142}
!3142 = !DILocation(line: 1110, column: 25, scope: !3117)
!3143 = !DILocation(line: 1112, column: 21, scope: !3117)
!3144 = !DILocation(line: 1108, column: 41, scope: !3145)
!3145 = !DILexicalBlockFile(scope: !3113, file: !888, discriminator: 2)
!3146 = !DILocation(line: 1108, column: 21, scope: !3145)
!3147 = distinct !{!3147, !3148}
!3148 = !DILocation(line: 1108, column: 21, scope: !2962)
!3149 = !DILocation(line: 1113, column: 21, scope: !2962)
!3150 = !DILocation(line: 1115, column: 28, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !2962, file: !888, line: 1115, column: 21)
!3152 = !DILocation(line: 1115, column: 26, scope: !3151)
!3153 = !DILocation(line: 1115, column: 33, scope: !3154)
!3154 = !DILexicalBlockFile(scope: !3155, file: !888, discriminator: 1)
!3155 = distinct !DILexicalBlock(scope: !3151, file: !888, line: 1115, column: 21)
!3156 = !DILocation(line: 1115, column: 35, scope: !3154)
!3157 = !DILocation(line: 1115, column: 21, scope: !3154)
!3158 = !DILocation(line: 1116, column: 32, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3155, file: !888, line: 1116, column: 25)
!3160 = !DILocation(line: 1116, column: 30, scope: !3159)
!3161 = !DILocation(line: 1116, column: 37, scope: !3162)
!3162 = !DILexicalBlockFile(scope: !3163, file: !888, discriminator: 1)
!3163 = distinct !DILexicalBlock(scope: !3159, file: !888, line: 1116, column: 25)
!3164 = !DILocation(line: 1116, column: 39, scope: !3162)
!3165 = !DILocation(line: 1116, column: 25, scope: !3162)
!3166 = !DILocation(line: 1117, column: 57, scope: !3163)
!3167 = !DILocation(line: 1117, column: 47, scope: !3163)
!3168 = !DILocation(line: 1117, column: 36, scope: !3163)
!3169 = !DILocation(line: 1117, column: 40, scope: !3163)
!3170 = !DILocation(line: 1117, column: 41, scope: !3163)
!3171 = !DILocation(line: 1117, column: 38, scope: !3163)
!3172 = !DILocation(line: 1117, column: 29, scope: !3163)
!3173 = !DILocation(line: 1117, column: 45, scope: !3163)
!3174 = !DILocation(line: 1116, column: 45, scope: !3175)
!3175 = !DILexicalBlockFile(scope: !3163, file: !888, discriminator: 2)
!3176 = !DILocation(line: 1116, column: 25, scope: !3175)
!3177 = distinct !{!3177, !3178}
!3178 = !DILocation(line: 1116, column: 25, scope: !3155)
!3179 = !DILocation(line: 1117, column: 75, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !3159, file: !888, discriminator: 1)
!3181 = !DILocation(line: 1115, column: 41, scope: !3182)
!3182 = !DILexicalBlockFile(scope: !3155, file: !888, discriminator: 2)
!3183 = !DILocation(line: 1115, column: 21, scope: !3182)
!3184 = distinct !{!3184, !3185}
!3185 = !DILocation(line: 1115, column: 21, scope: !2962)
!3186 = !DILocation(line: 1118, column: 21, scope: !2962)
!3187 = !DILocation(line: 1120, column: 28, scope: !2962)
!3188 = !DILocation(line: 1120, column: 31, scope: !2962)
!3189 = !DILocation(line: 1120, column: 77, scope: !2962)
!3190 = !DILocation(line: 1120, column: 21, scope: !2962)
!3191 = !DILocation(line: 1121, column: 21, scope: !2962)
!3192 = !DILocation(line: 1123, column: 21, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1123, column: 21)
!3194 = !DILocation(line: 1123, column: 25, scope: !3193)
!3195 = !DILocation(line: 1123, column: 21, scope: !2949)
!3196 = !DILocation(line: 1124, column: 17, scope: !3193)
!3197 = !DILocation(line: 1124, column: 20, scope: !3193)
!3198 = !DILocation(line: 1124, column: 28, scope: !3193)
!3199 = !DILocation(line: 1124, column: 40, scope: !3193)
!3200 = !DILocation(line: 1124, column: 48, scope: !3193)
!3201 = !DILocation(line: 1124, column: 53, scope: !3193)
!3202 = !DILocation(line: 1125, column: 19, scope: !2949)
!3203 = !DILocation(line: 1126, column: 21, scope: !2949)
!3204 = !DILocation(line: 1127, column: 22, scope: !2949)
!3205 = !DILocation(line: 1128, column: 17, scope: !2949)
!3206 = !DILocation(line: 1130, column: 39, scope: !2949)
!3207 = !DILocation(line: 1130, column: 42, scope: !2949)
!3208 = !DILocation(line: 1130, column: 47, scope: !2949)
!3209 = !DILocation(line: 1130, column: 53, scope: !2949)
!3210 = !DILocation(line: 1131, column: 39, scope: !2949)
!3211 = !DILocation(line: 1131, column: 50, scope: !2949)
!3212 = !DILocation(line: 1130, column: 23, scope: !2949)
!3213 = !DILocation(line: 1130, column: 21, scope: !2949)
!3214 = !DILocation(line: 1132, column: 21, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1132, column: 21)
!3216 = !DILocation(line: 1132, column: 25, scope: !3215)
!3217 = !DILocation(line: 1132, column: 21, scope: !2949)
!3218 = !DILocation(line: 1133, column: 28, scope: !3215)
!3219 = !DILocation(line: 1133, column: 21, scope: !3215)
!3220 = !DILocation(line: 1134, column: 17, scope: !2949)
!3221 = !DILocation(line: 1136, column: 47, scope: !2949)
!3222 = !DILocation(line: 1136, column: 38, scope: !2949)
!3223 = !DILocation(line: 1136, column: 24, scope: !2949)
!3224 = !DILocation(line: 1136, column: 22, scope: !2949)
!3225 = !DILocation(line: 1137, column: 19, scope: !2949)
!3226 = !DILocation(line: 1138, column: 17, scope: !2949)
!3227 = distinct !{!3227, !3226}
!3228 = !DILocalVariable(name: "run", scope: !3229, file: !888, line: 1139, type: !926)
!3229 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1138, column: 20)
!3230 = !DILocation(line: 1139, column: 25, scope: !3229)
!3231 = !DILocation(line: 1139, column: 41, scope: !3229)
!3232 = !DILocation(line: 1139, column: 31, scope: !3229)
!3233 = !DILocation(line: 1139, column: 58, scope: !3229)
!3234 = !DILocation(line: 1141, column: 26, scope: !3229)
!3235 = !DILocation(line: 1141, column: 23, scope: !3229)
!3236 = !DILocation(line: 1142, column: 25, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3229, file: !888, line: 1142, column: 25)
!3238 = !DILocation(line: 1142, column: 27, scope: !3237)
!3239 = !DILocation(line: 1142, column: 25, scope: !3229)
!3240 = !DILocation(line: 1143, column: 32, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3237, file: !888, line: 1142, column: 33)
!3242 = !DILocation(line: 1143, column: 35, scope: !3241)
!3243 = !DILocation(line: 1143, column: 25, scope: !3241)
!3244 = !DILocation(line: 1144, column: 25, scope: !3241)
!3245 = !DILocation(line: 1146, column: 35, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3229, file: !888, line: 1146, column: 25)
!3247 = !DILocation(line: 1146, column: 25, scope: !3246)
!3248 = !DILocation(line: 1146, column: 25, scope: !3229)
!3249 = !DILocation(line: 1147, column: 39, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3246, file: !888, line: 1146, column: 40)
!3251 = !DILocation(line: 1147, column: 29, scope: !3250)
!3252 = !DILocation(line: 1147, column: 27, scope: !3250)
!3253 = !DILocation(line: 1148, column: 32, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !888, line: 1148, column: 25)
!3255 = !DILocation(line: 1148, column: 30, scope: !3254)
!3256 = !DILocation(line: 1148, column: 37, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3258, file: !888, discriminator: 1)
!3258 = distinct !DILexicalBlock(scope: !3254, file: !888, line: 1148, column: 25)
!3259 = !DILocation(line: 1148, column: 41, scope: !3257)
!3260 = !DILocation(line: 1148, column: 39, scope: !3257)
!3261 = !DILocation(line: 1148, column: 25, scope: !3257)
!3262 = !DILocation(line: 1149, column: 54, scope: !3258)
!3263 = !DILocation(line: 1149, column: 47, scope: !3258)
!3264 = !DILocation(line: 1149, column: 42, scope: !3258)
!3265 = !DILocation(line: 1149, column: 33, scope: !3258)
!3266 = !DILocation(line: 1149, column: 29, scope: !3258)
!3267 = !DILocation(line: 1149, column: 52, scope: !3258)
!3268 = !DILocation(line: 1148, column: 47, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3258, file: !888, discriminator: 2)
!3270 = !DILocation(line: 1148, column: 25, scope: !3269)
!3271 = distinct !{!3271, !3272}
!3272 = !DILocation(line: 1148, column: 25, scope: !3250)
!3273 = !DILocation(line: 1150, column: 21, scope: !3250)
!3274 = !DILocation(line: 1151, column: 32, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !888, line: 1151, column: 25)
!3276 = distinct !DILexicalBlock(scope: !3246, file: !888, line: 1150, column: 28)
!3277 = !DILocation(line: 1151, column: 30, scope: !3275)
!3278 = !DILocation(line: 1151, column: 37, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3280, file: !888, discriminator: 1)
!3280 = distinct !DILexicalBlock(scope: !3275, file: !888, line: 1151, column: 25)
!3281 = !DILocation(line: 1151, column: 41, scope: !3279)
!3282 = !DILocation(line: 1151, column: 39, scope: !3279)
!3283 = !DILocation(line: 1151, column: 25, scope: !3279)
!3284 = !DILocation(line: 1152, column: 64, scope: !3280)
!3285 = !DILocation(line: 1152, column: 54, scope: !3280)
!3286 = !DILocation(line: 1152, column: 47, scope: !3280)
!3287 = !DILocation(line: 1152, column: 42, scope: !3280)
!3288 = !DILocation(line: 1152, column: 33, scope: !3280)
!3289 = !DILocation(line: 1152, column: 29, scope: !3280)
!3290 = !DILocation(line: 1152, column: 52, scope: !3280)
!3291 = !DILocation(line: 1151, column: 47, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3280, file: !888, discriminator: 2)
!3293 = !DILocation(line: 1151, column: 25, scope: !3292)
!3294 = distinct !{!3294, !3295}
!3295 = !DILocation(line: 1151, column: 25, scope: !3276)
!3296 = !DILocation(line: 1154, column: 17, scope: !3229)
!3297 = !DILocation(line: 1154, column: 26, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !2949, file: !888, discriminator: 1)
!3299 = !DILocation(line: 1154, column: 28, scope: !3298)
!3300 = !DILocation(line: 1154, column: 17, scope: !3298)
!3301 = !DILocation(line: 1155, column: 21, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1155, column: 21)
!3303 = !DILocation(line: 1155, column: 23, scope: !3302)
!3304 = !DILocation(line: 1155, column: 21, scope: !2949)
!3305 = !DILocation(line: 1156, column: 56, scope: !3302)
!3306 = !DILocation(line: 1156, column: 46, scope: !3302)
!3307 = !DILocation(line: 1156, column: 39, scope: !3302)
!3308 = !DILocation(line: 1156, column: 34, scope: !3302)
!3309 = !DILocation(line: 1156, column: 25, scope: !3302)
!3310 = !DILocation(line: 1156, column: 21, scope: !3302)
!3311 = !DILocation(line: 1156, column: 44, scope: !3302)
!3312 = !DILocation(line: 1157, column: 17, scope: !2949)
!3313 = !DILocation(line: 1159, column: 39, scope: !2949)
!3314 = !DILocation(line: 1159, column: 42, scope: !2949)
!3315 = !DILocation(line: 1159, column: 47, scope: !2949)
!3316 = !DILocation(line: 1159, column: 53, scope: !2949)
!3317 = !DILocation(line: 1160, column: 39, scope: !2949)
!3318 = !DILocation(line: 1160, column: 50, scope: !2949)
!3319 = !DILocation(line: 1159, column: 23, scope: !2949)
!3320 = !DILocation(line: 1159, column: 21, scope: !2949)
!3321 = !DILocation(line: 1161, column: 21, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1161, column: 21)
!3323 = !DILocation(line: 1161, column: 25, scope: !3322)
!3324 = !DILocation(line: 1161, column: 21, scope: !2949)
!3325 = !DILocation(line: 1162, column: 28, scope: !3322)
!3326 = !DILocation(line: 1162, column: 21, scope: !3322)
!3327 = !DILocation(line: 1163, column: 17, scope: !2949)
!3328 = !DILocation(line: 1163, column: 20, scope: !2949)
!3329 = !DILocation(line: 1163, column: 25, scope: !2949)
!3330 = !DILocation(line: 1163, column: 37, scope: !2949)
!3331 = !DILocation(line: 1164, column: 30, scope: !2949)
!3332 = !DILocation(line: 1164, column: 21, scope: !2949)
!3333 = !DILocation(line: 1164, column: 19, scope: !2949)
!3334 = !DILocation(line: 1165, column: 30, scope: !2949)
!3335 = !DILocation(line: 1165, column: 34, scope: !2949)
!3336 = !DILocation(line: 1165, column: 41, scope: !2949)
!3337 = !DILocation(line: 1165, column: 17, scope: !2949)
!3338 = !DILocation(line: 1166, column: 17, scope: !2949)
!3339 = !DILocation(line: 1166, column: 20, scope: !2949)
!3340 = !DILocation(line: 1166, column: 28, scope: !2949)
!3341 = !DILocation(line: 1166, column: 40, scope: !2949)
!3342 = !DILocation(line: 1166, column: 45, scope: !2949)
!3343 = !DILocation(line: 1166, column: 52, scope: !2949)
!3344 = !DILocation(line: 1167, column: 17, scope: !2949)
!3345 = !DILocation(line: 1169, column: 24, scope: !2949)
!3346 = !DILocation(line: 1169, column: 17, scope: !2949)
!3347 = !DILocation(line: 1170, column: 41, scope: !2949)
!3348 = !DILocation(line: 1170, column: 31, scope: !2949)
!3349 = !DILocation(line: 1170, column: 17, scope: !2949)
!3350 = !DILocation(line: 1170, column: 29, scope: !2949)
!3351 = !DILocation(line: 1171, column: 50, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1171, column: 21)
!3353 = !DILocation(line: 1171, column: 53, scope: !3352)
!3354 = !DILocation(line: 1171, column: 57, scope: !3352)
!3355 = !DILocation(line: 1171, column: 91, scope: !3352)
!3356 = !DILocation(line: 1171, column: 34, scope: !3352)
!3357 = !DILocation(line: 1171, column: 32, scope: !3352)
!3358 = !DILocation(line: 1171, column: 106, scope: !3352)
!3359 = !DILocation(line: 1171, column: 21, scope: !2949)
!3360 = !DILocation(line: 1172, column: 28, scope: !3352)
!3361 = !DILocation(line: 1172, column: 21, scope: !3352)
!3362 = !DILocation(line: 1173, column: 39, scope: !2949)
!3363 = !DILocation(line: 1173, column: 66, scope: !2949)
!3364 = !DILocation(line: 1173, column: 49, scope: !2949)
!3365 = !DILocation(line: 1173, column: 78, scope: !2949)
!3366 = !DILocation(line: 1173, column: 90, scope: !2949)
!3367 = !DILocation(line: 1173, column: 17, scope: !2949)
!3368 = !DILocation(line: 1174, column: 17, scope: !2949)
!3369 = !DILocation(line: 1174, column: 20, scope: !2949)
!3370 = !DILocation(line: 1174, column: 28, scope: !2949)
!3371 = !DILocation(line: 1174, column: 37, scope: !2949)
!3372 = !DILocation(line: 1174, column: 42, scope: !2949)
!3373 = !DILocation(line: 1174, column: 50, scope: !2949)
!3374 = !DILocation(line: 1175, column: 17, scope: !2949)
!3375 = !DILocation(line: 1177, column: 31, scope: !2949)
!3376 = !DILocation(line: 1177, column: 21, scope: !2949)
!3377 = !DILocation(line: 1177, column: 19, scope: !2949)
!3378 = !DILocation(line: 1178, column: 17, scope: !2949)
!3379 = !DILocation(line: 1178, column: 20, scope: !2949)
!3380 = !DILocation(line: 1178, column: 25, scope: !2949)
!3381 = !DILocation(line: 1178, column: 43, scope: !2949)
!3382 = !DILocation(line: 1178, column: 48, scope: !2949)
!3383 = !DILocation(line: 1178, column: 51, scope: !2949)
!3384 = !DILocation(line: 1179, column: 17, scope: !2949)
!3385 = !DILocation(line: 1181, column: 39, scope: !2949)
!3386 = !DILocation(line: 1181, column: 42, scope: !2949)
!3387 = !DILocation(line: 1181, column: 47, scope: !2949)
!3388 = !DILocation(line: 1181, column: 53, scope: !2949)
!3389 = !DILocation(line: 1182, column: 39, scope: !2949)
!3390 = !DILocation(line: 1182, column: 50, scope: !2949)
!3391 = !DILocation(line: 1181, column: 23, scope: !2949)
!3392 = !DILocation(line: 1181, column: 21, scope: !2949)
!3393 = !DILocation(line: 1183, column: 21, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1183, column: 21)
!3395 = !DILocation(line: 1183, column: 25, scope: !3394)
!3396 = !DILocation(line: 1183, column: 21, scope: !2949)
!3397 = !DILocation(line: 1184, column: 28, scope: !3394)
!3398 = !DILocation(line: 1184, column: 21, scope: !3394)
!3399 = !DILocation(line: 1185, column: 24, scope: !2949)
!3400 = !DILocation(line: 1185, column: 17, scope: !2949)
!3401 = !DILocation(line: 1186, column: 41, scope: !2949)
!3402 = !DILocation(line: 1186, column: 31, scope: !2949)
!3403 = !DILocation(line: 1186, column: 17, scope: !2949)
!3404 = !DILocation(line: 1186, column: 29, scope: !2949)
!3405 = !DILocation(line: 1187, column: 50, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1187, column: 21)
!3407 = !DILocation(line: 1187, column: 53, scope: !3406)
!3408 = !DILocation(line: 1187, column: 57, scope: !3406)
!3409 = !DILocation(line: 1187, column: 91, scope: !3406)
!3410 = !DILocation(line: 1187, column: 34, scope: !3406)
!3411 = !DILocation(line: 1187, column: 32, scope: !3406)
!3412 = !DILocation(line: 1187, column: 106, scope: !3406)
!3413 = !DILocation(line: 1187, column: 21, scope: !2949)
!3414 = !DILocation(line: 1188, column: 28, scope: !3406)
!3415 = !DILocation(line: 1188, column: 21, scope: !3406)
!3416 = !DILocation(line: 1189, column: 39, scope: !2949)
!3417 = !DILocation(line: 1189, column: 66, scope: !2949)
!3418 = !DILocation(line: 1189, column: 49, scope: !2949)
!3419 = !DILocation(line: 1189, column: 78, scope: !2949)
!3420 = !DILocation(line: 1189, column: 90, scope: !2949)
!3421 = !DILocation(line: 1189, column: 17, scope: !2949)
!3422 = !DILocation(line: 1190, column: 17, scope: !2949)
!3423 = !DILocation(line: 1190, column: 20, scope: !2949)
!3424 = !DILocation(line: 1190, column: 28, scope: !2949)
!3425 = !DILocation(line: 1190, column: 37, scope: !2949)
!3426 = !DILocation(line: 1190, column: 42, scope: !2949)
!3427 = !DILocation(line: 1190, column: 50, scope: !2949)
!3428 = !DILocation(line: 1191, column: 17, scope: !2949)
!3429 = !DILocation(line: 1193, column: 24, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1193, column: 17)
!3431 = !DILocation(line: 1193, column: 22, scope: !3430)
!3432 = !DILocation(line: 1193, column: 29, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3434, file: !888, discriminator: 1)
!3434 = distinct !DILexicalBlock(scope: !3430, file: !888, line: 1193, column: 17)
!3435 = !DILocation(line: 1193, column: 31, scope: !3433)
!3436 = !DILocation(line: 1193, column: 17, scope: !3433)
!3437 = !DILocation(line: 1194, column: 40, scope: !3434)
!3438 = !DILocation(line: 1194, column: 30, scope: !3434)
!3439 = !DILocation(line: 1194, column: 25, scope: !3434)
!3440 = !DILocation(line: 1194, column: 21, scope: !3434)
!3441 = !DILocation(line: 1194, column: 28, scope: !3434)
!3442 = !DILocation(line: 1193, column: 37, scope: !3443)
!3443 = !DILexicalBlockFile(scope: !3434, file: !888, discriminator: 2)
!3444 = !DILocation(line: 1193, column: 17, scope: !3443)
!3445 = distinct !{!3445, !3446}
!3446 = !DILocation(line: 1193, column: 17, scope: !2949)
!3447 = !DILocation(line: 1195, column: 24, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1195, column: 17)
!3449 = !DILocation(line: 1195, column: 22, scope: !3448)
!3450 = !DILocation(line: 1195, column: 29, scope: !3451)
!3451 = !DILexicalBlockFile(scope: !3452, file: !888, discriminator: 1)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !888, line: 1195, column: 17)
!3453 = !DILocation(line: 1195, column: 31, scope: !3451)
!3454 = !DILocation(line: 1195, column: 17, scope: !3451)
!3455 = !DILocation(line: 1196, column: 35, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !888, line: 1195, column: 41)
!3457 = !DILocation(line: 1196, column: 25, scope: !3456)
!3458 = !DILocation(line: 1196, column: 23, scope: !3456)
!3459 = !DILocation(line: 1197, column: 28, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !888, line: 1197, column: 21)
!3461 = !DILocation(line: 1197, column: 26, scope: !3460)
!3462 = !DILocation(line: 1197, column: 33, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3464, file: !888, discriminator: 1)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !888, line: 1197, column: 21)
!3465 = !DILocation(line: 1197, column: 35, scope: !3463)
!3466 = !DILocation(line: 1197, column: 21, scope: !3463)
!3467 = !DILocation(line: 1198, column: 49, scope: !3464)
!3468 = !DILocation(line: 1198, column: 51, scope: !3464)
!3469 = !DILocation(line: 1198, column: 45, scope: !3464)
!3470 = !DILocation(line: 1198, column: 29, scope: !3464)
!3471 = !DILocation(line: 1198, column: 31, scope: !3464)
!3472 = !DILocation(line: 1198, column: 30, scope: !3464)
!3473 = !DILocation(line: 1198, column: 40, scope: !3464)
!3474 = !DILocation(line: 1198, column: 38, scope: !3464)
!3475 = !DILocation(line: 1198, column: 25, scope: !3464)
!3476 = !DILocation(line: 1198, column: 43, scope: !3464)
!3477 = !DILocation(line: 1197, column: 41, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3464, file: !888, discriminator: 2)
!3479 = !DILocation(line: 1197, column: 47, scope: !3478)
!3480 = !DILocation(line: 1197, column: 21, scope: !3478)
!3481 = distinct !{!3481, !3482}
!3482 = !DILocation(line: 1197, column: 21, scope: !3456)
!3483 = !DILocation(line: 1199, column: 17, scope: !3456)
!3484 = !DILocation(line: 1195, column: 37, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3452, file: !888, discriminator: 2)
!3486 = !DILocation(line: 1195, column: 17, scope: !3485)
!3487 = distinct !{!3487, !3488}
!3488 = !DILocation(line: 1195, column: 17, scope: !2949)
!3489 = !DILocation(line: 1200, column: 17, scope: !2949)
!3490 = !DILocation(line: 1202, column: 24, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !2949, file: !888, line: 1202, column: 17)
!3492 = !DILocation(line: 1202, column: 22, scope: !3491)
!3493 = !DILocation(line: 1202, column: 29, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3495, file: !888, discriminator: 1)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !888, line: 1202, column: 17)
!3496 = !DILocation(line: 1202, column: 31, scope: !3494)
!3497 = !DILocation(line: 1202, column: 17, scope: !3494)
!3498 = !DILocation(line: 1203, column: 28, scope: !3495)
!3499 = !DILocation(line: 1203, column: 34, scope: !3495)
!3500 = !DILocation(line: 1203, column: 36, scope: !3495)
!3501 = !DILocation(line: 1203, column: 35, scope: !3495)
!3502 = !DILocation(line: 1203, column: 32, scope: !3495)
!3503 = !DILocation(line: 1203, column: 44, scope: !3495)
!3504 = !DILocation(line: 1203, column: 47, scope: !3495)
!3505 = !DILocation(line: 1203, column: 71, scope: !3495)
!3506 = !DILocation(line: 1203, column: 81, scope: !3495)
!3507 = !DILocation(line: 1203, column: 82, scope: !3495)
!3508 = !DILocation(line: 1203, column: 79, scope: !3495)
!3509 = !DILocation(line: 1203, column: 21, scope: !3495)
!3510 = !DILocation(line: 1202, column: 37, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3495, file: !888, discriminator: 2)
!3512 = !DILocation(line: 1202, column: 17, scope: !3511)
!3513 = distinct !{!3513, !3514}
!3514 = !DILocation(line: 1202, column: 17, scope: !2949)
!3515 = !DILocation(line: 1204, column: 17, scope: !2949)
!3516 = !DILocation(line: 1204, column: 20, scope: !2949)
!3517 = !DILocation(line: 1204, column: 44, scope: !2949)
!3518 = !DILocation(line: 1204, column: 52, scope: !2949)
!3519 = !DILocation(line: 1205, column: 17, scope: !2949)
!3520 = !DILocation(line: 1207, column: 24, scope: !2949)
!3521 = !DILocation(line: 1207, column: 27, scope: !2949)
!3522 = !DILocation(line: 1207, column: 65, scope: !2949)
!3523 = !DILocation(line: 1207, column: 17, scope: !2949)
!3524 = !DILocation(line: 1208, column: 17, scope: !2949)
!3525 = !DILocation(line: 1210, column: 9, scope: !2930)
!3526 = !DILocation(line: 1054, column: 33, scope: !3527)
!3527 = !DILexicalBlockFile(scope: !2925, file: !888, discriminator: 2)
!3528 = !DILocation(line: 1054, column: 41, scope: !3527)
!3529 = !DILocation(line: 1054, column: 52, scope: !3527)
!3530 = !DILocation(line: 1054, column: 9, scope: !3527)
!3531 = distinct !{!3531, !3532}
!3532 = !DILocation(line: 1054, column: 9, scope: !2776)
!3533 = !DILocation(line: 1211, column: 5, scope: !2776)
!3534 = !DILocation(line: 1029, column: 29, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !2770, file: !888, discriminator: 2)
!3536 = !DILocation(line: 1029, column: 5, scope: !3535)
!3537 = distinct !{!3537, !3538}
!3538 = !DILocation(line: 1029, column: 5, scope: !2523)
!3539 = !DILocation(line: 1211, column: 5, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !2766, file: !888, discriminator: 1)
!3541 = !DILocation(line: 1214, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !2523, file: !888, line: 1214, column: 9)
!3543 = !DILocation(line: 1214, column: 9, scope: !3542)
!3544 = !DILocation(line: 1214, column: 28, scope: !3542)
!3545 = !DILocation(line: 1214, column: 9, scope: !2523)
!3546 = !DILocation(line: 1215, column: 24, scope: !3542)
!3547 = !DILocation(line: 1215, column: 49, scope: !3542)
!3548 = !DILocation(line: 1215, column: 34, scope: !3542)
!3549 = !DILocation(line: 1215, column: 53, scope: !3542)
!3550 = !DILocation(line: 1215, column: 31, scope: !3542)
!3551 = !DILocation(line: 1215, column: 9, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !3542, file: !888, discriminator: 1)
!3553 = !DILocation(line: 1215, column: 9, scope: !3542)
!3554 = !DILocation(line: 1217, column: 5, scope: !2523)
!3555 = !DILocation(line: 1218, column: 1, scope: !2523)
!3556 = distinct !DISubprogram(name: "binkb_decode_plane", scope: !888, file: !888, line: 820, type: !3557, isLocal: true, isDefinition: true, scopeLine: 822, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!926, !1739, !1063, !2417, !926, !926, !926}
!3559 = !DILocalVariable(name: "c", arg: 1, scope: !3556, file: !888, line: 820, type: !1739)
!3560 = !DILocation(line: 820, column: 44, scope: !3556)
!3561 = !DILocalVariable(name: "frame", arg: 2, scope: !3556, file: !888, line: 820, type: !1063)
!3562 = !DILocation(line: 820, column: 56, scope: !3556)
!3563 = !DILocalVariable(name: "gb", arg: 3, scope: !3556, file: !888, line: 820, type: !2417)
!3564 = !DILocation(line: 820, column: 78, scope: !3556)
!3565 = !DILocalVariable(name: "plane_idx", arg: 4, scope: !3556, file: !888, line: 821, type: !926)
!3566 = !DILocation(line: 821, column: 35, scope: !3556)
!3567 = !DILocalVariable(name: "is_key", arg: 5, scope: !3556, file: !888, line: 821, type: !926)
!3568 = !DILocation(line: 821, column: 50, scope: !3556)
!3569 = !DILocalVariable(name: "is_chroma", arg: 6, scope: !3556, file: !888, line: 821, type: !926)
!3570 = !DILocation(line: 821, column: 62, scope: !3556)
!3571 = !DILocalVariable(name: "blk", scope: !3556, file: !888, line: 823, type: !926)
!3572 = !DILocation(line: 823, column: 9, scope: !3556)
!3573 = !DILocalVariable(name: "ret", scope: !3556, file: !888, line: 823, type: !926)
!3574 = !DILocation(line: 823, column: 14, scope: !3556)
!3575 = !DILocalVariable(name: "i", scope: !3556, file: !888, line: 824, type: !926)
!3576 = !DILocation(line: 824, column: 9, scope: !3556)
!3577 = !DILocalVariable(name: "j", scope: !3556, file: !888, line: 824, type: !926)
!3578 = !DILocation(line: 824, column: 12, scope: !3556)
!3579 = !DILocalVariable(name: "bx", scope: !3556, file: !888, line: 824, type: !926)
!3580 = !DILocation(line: 824, column: 15, scope: !3556)
!3581 = !DILocalVariable(name: "by", scope: !3556, file: !888, line: 824, type: !926)
!3582 = !DILocation(line: 824, column: 19, scope: !3556)
!3583 = !DILocalVariable(name: "dst", scope: !3556, file: !888, line: 825, type: !943)
!3584 = !DILocation(line: 825, column: 14, scope: !3556)
!3585 = !DILocalVariable(name: "ref", scope: !3556, file: !888, line: 825, type: !943)
!3586 = !DILocation(line: 825, column: 20, scope: !3556)
!3587 = !DILocalVariable(name: "ref_start", scope: !3556, file: !888, line: 825, type: !943)
!3588 = !DILocation(line: 825, column: 26, scope: !3556)
!3589 = !DILocalVariable(name: "ref_end", scope: !3556, file: !888, line: 825, type: !943)
!3590 = !DILocation(line: 825, column: 38, scope: !3556)
!3591 = !DILocalVariable(name: "v", scope: !3556, file: !888, line: 826, type: !926)
!3592 = !DILocation(line: 826, column: 9, scope: !3556)
!3593 = !DILocalVariable(name: "col", scope: !3556, file: !888, line: 826, type: !2559)
!3594 = !DILocation(line: 826, column: 12, scope: !3556)
!3595 = !DILocalVariable(name: "scan", scope: !3556, file: !888, line: 827, type: !1481)
!3596 = !DILocation(line: 827, column: 20, scope: !3556)
!3597 = !DILocalVariable(name: "xoff", scope: !3556, file: !888, line: 828, type: !926)
!3598 = !DILocation(line: 828, column: 9, scope: !3556)
!3599 = !DILocalVariable(name: "yoff", scope: !3556, file: !888, line: 828, type: !926)
!3600 = !DILocation(line: 828, column: 15, scope: !3556)
!3601 = !DILocalVariable(name: "la_block", scope: !3556, file: !888, line: 829, type: !2564)
!3602 = !DILocation(line: 829, column: 44, scope: !3556)
!3603 = !DILocalVariable(name: "block", scope: !3556, file: !888, line: 829, type: !940)
!3604 = !DILocation(line: 829, column: 70, scope: !3556)
!3605 = !DILocation(line: 829, column: 79, scope: !3556)
!3606 = !DILocalVariable(name: "la_dctblock", scope: !3556, file: !888, line: 830, type: !2575)
!3607 = !DILocation(line: 830, column: 44, scope: !3556)
!3608 = !DILocalVariable(name: "dctblock", scope: !3556, file: !888, line: 830, type: !1786)
!3609 = !DILocation(line: 830, column: 73, scope: !3556)
!3610 = !DILocation(line: 830, column: 85, scope: !3556)
!3611 = !DILocalVariable(name: "coordmap", scope: !3556, file: !888, line: 831, type: !2581)
!3612 = !DILocation(line: 831, column: 9, scope: !3556)
!3613 = !DILocalVariable(name: "ybias", scope: !3556, file: !888, line: 832, type: !926)
!3614 = !DILocation(line: 832, column: 9, scope: !3556)
!3615 = !DILocation(line: 832, column: 17, scope: !3556)
!3616 = !DILocalVariable(name: "qp", scope: !3556, file: !888, line: 833, type: !926)
!3617 = !DILocation(line: 833, column: 9, scope: !3556)
!3618 = !DILocalVariable(name: "quant_idx", scope: !3556, file: !888, line: 833, type: !926)
!3619 = !DILocation(line: 833, column: 13, scope: !3556)
!3620 = !DILocalVariable(name: "coef_count", scope: !3556, file: !888, line: 833, type: !926)
!3621 = !DILocation(line: 833, column: 24, scope: !3556)
!3622 = !DILocalVariable(name: "coef_idx", scope: !3556, file: !888, line: 833, type: !2581)
!3623 = !DILocation(line: 833, column: 36, scope: !3556)
!3624 = !DILocalVariable(name: "stride", scope: !3556, file: !888, line: 835, type: !973)
!3625 = !DILocation(line: 835, column: 15, scope: !3556)
!3626 = !DILocation(line: 835, column: 40, scope: !3556)
!3627 = !DILocation(line: 835, column: 24, scope: !3556)
!3628 = !DILocation(line: 835, column: 31, scope: !3556)
!3629 = !DILocalVariable(name: "bw", scope: !3556, file: !888, line: 836, type: !926)
!3630 = !DILocation(line: 836, column: 9, scope: !3556)
!3631 = !DILocation(line: 836, column: 14, scope: !3556)
!3632 = !DILocation(line: 836, column: 27, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3556, file: !888, discriminator: 1)
!3634 = !DILocation(line: 836, column: 30, scope: !3633)
!3635 = !DILocation(line: 836, column: 37, scope: !3633)
!3636 = !DILocation(line: 836, column: 43, scope: !3633)
!3637 = !DILocation(line: 836, column: 49, scope: !3633)
!3638 = !DILocation(line: 836, column: 14, scope: !3633)
!3639 = !DILocation(line: 836, column: 57, scope: !3640)
!3640 = !DILexicalBlockFile(scope: !3556, file: !888, discriminator: 2)
!3641 = !DILocation(line: 836, column: 60, scope: !3640)
!3642 = !DILocation(line: 836, column: 67, scope: !3640)
!3643 = !DILocation(line: 836, column: 73, scope: !3640)
!3644 = !DILocation(line: 836, column: 78, scope: !3640)
!3645 = !DILocation(line: 836, column: 14, scope: !3640)
!3646 = !DILocation(line: 836, column: 14, scope: !3647)
!3647 = !DILexicalBlockFile(scope: !3556, file: !888, discriminator: 3)
!3648 = !DILocation(line: 836, column: 9, scope: !3647)
!3649 = !DILocalVariable(name: "bh", scope: !3556, file: !888, line: 837, type: !926)
!3650 = !DILocation(line: 837, column: 9, scope: !3556)
!3651 = !DILocation(line: 837, column: 14, scope: !3556)
!3652 = !DILocation(line: 837, column: 27, scope: !3633)
!3653 = !DILocation(line: 837, column: 30, scope: !3633)
!3654 = !DILocation(line: 837, column: 37, scope: !3633)
!3655 = !DILocation(line: 837, column: 44, scope: !3633)
!3656 = !DILocation(line: 837, column: 50, scope: !3633)
!3657 = !DILocation(line: 837, column: 14, scope: !3633)
!3658 = !DILocation(line: 837, column: 58, scope: !3640)
!3659 = !DILocation(line: 837, column: 61, scope: !3640)
!3660 = !DILocation(line: 837, column: 68, scope: !3640)
!3661 = !DILocation(line: 837, column: 75, scope: !3640)
!3662 = !DILocation(line: 837, column: 80, scope: !3640)
!3663 = !DILocation(line: 837, column: 14, scope: !3640)
!3664 = !DILocation(line: 837, column: 14, scope: !3647)
!3665 = !DILocation(line: 837, column: 9, scope: !3647)
!3666 = !DILocation(line: 839, column: 24, scope: !3556)
!3667 = !DILocation(line: 839, column: 5, scope: !3556)
!3668 = !DILocation(line: 840, column: 29, scope: !3556)
!3669 = !DILocation(line: 840, column: 17, scope: !3556)
!3670 = !DILocation(line: 840, column: 24, scope: !3556)
!3671 = !DILocation(line: 840, column: 15, scope: !3556)
!3672 = !DILocation(line: 841, column: 27, scope: !3556)
!3673 = !DILocation(line: 841, column: 15, scope: !3556)
!3674 = !DILocation(line: 841, column: 22, scope: !3556)
!3675 = !DILocation(line: 841, column: 41, scope: !3556)
!3676 = !DILocation(line: 841, column: 62, scope: !3556)
!3677 = !DILocation(line: 841, column: 46, scope: !3556)
!3678 = !DILocation(line: 841, column: 53, scope: !3556)
!3679 = !DILocation(line: 841, column: 44, scope: !3556)
!3680 = !DILocation(line: 841, column: 75, scope: !3556)
!3681 = !DILocation(line: 841, column: 73, scope: !3556)
!3682 = !DILocation(line: 841, column: 79, scope: !3556)
!3683 = !DILocation(line: 841, column: 38, scope: !3556)
!3684 = !DILocation(line: 841, column: 13, scope: !3556)
!3685 = !DILocation(line: 843, column: 12, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3556, file: !888, line: 843, column: 5)
!3687 = !DILocation(line: 843, column: 10, scope: !3686)
!3688 = !DILocation(line: 843, column: 17, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3690, file: !888, discriminator: 1)
!3690 = distinct !DILexicalBlock(scope: !3686, file: !888, line: 843, column: 5)
!3691 = !DILocation(line: 843, column: 19, scope: !3689)
!3692 = !DILocation(line: 843, column: 5, scope: !3689)
!3693 = !DILocation(line: 844, column: 24, scope: !3690)
!3694 = !DILocation(line: 844, column: 26, scope: !3690)
!3695 = !DILocation(line: 844, column: 34, scope: !3690)
!3696 = !DILocation(line: 844, column: 36, scope: !3690)
!3697 = !DILocation(line: 844, column: 44, scope: !3690)
!3698 = !DILocation(line: 844, column: 42, scope: !3690)
!3699 = !DILocation(line: 844, column: 31, scope: !3690)
!3700 = !DILocation(line: 844, column: 18, scope: !3690)
!3701 = !DILocation(line: 844, column: 9, scope: !3690)
!3702 = !DILocation(line: 844, column: 21, scope: !3690)
!3703 = !DILocation(line: 843, column: 26, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !3690, file: !888, discriminator: 2)
!3705 = !DILocation(line: 843, column: 5, scope: !3704)
!3706 = distinct !{!3706, !3707}
!3707 = !DILocation(line: 843, column: 5, scope: !3556)
!3708 = !DILocation(line: 846, column: 13, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3556, file: !888, line: 846, column: 5)
!3710 = !DILocation(line: 846, column: 10, scope: !3709)
!3711 = !DILocation(line: 846, column: 18, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3713, file: !888, discriminator: 1)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !888, line: 846, column: 5)
!3714 = !DILocation(line: 846, column: 23, scope: !3712)
!3715 = !DILocation(line: 846, column: 21, scope: !3712)
!3716 = !DILocation(line: 846, column: 5, scope: !3712)
!3717 = !DILocation(line: 847, column: 16, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !888, line: 847, column: 9)
!3719 = distinct !DILexicalBlock(scope: !3713, file: !888, line: 846, column: 33)
!3720 = !DILocation(line: 847, column: 14, scope: !3718)
!3721 = !DILocation(line: 847, column: 21, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !3723, file: !888, discriminator: 1)
!3723 = distinct !DILexicalBlock(scope: !3718, file: !888, line: 847, column: 9)
!3724 = !DILocation(line: 847, column: 23, scope: !3722)
!3725 = !DILocation(line: 847, column: 9, scope: !3722)
!3726 = !DILocation(line: 848, column: 42, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !888, line: 848, column: 17)
!3728 = distinct !DILexicalBlock(scope: !3723, file: !888, line: 847, column: 44)
!3729 = !DILocation(line: 848, column: 45, scope: !3727)
!3730 = !DILocation(line: 848, column: 49, scope: !3727)
!3731 = !DILocation(line: 848, column: 24, scope: !3727)
!3732 = !DILocation(line: 848, column: 22, scope: !3727)
!3733 = !DILocation(line: 848, column: 53, scope: !3727)
!3734 = !DILocation(line: 848, column: 17, scope: !3728)
!3735 = !DILocation(line: 849, column: 24, scope: !3727)
!3736 = !DILocation(line: 849, column: 17, scope: !3727)
!3737 = !DILocation(line: 850, column: 9, scope: !3728)
!3738 = !DILocation(line: 847, column: 40, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3723, file: !888, discriminator: 2)
!3740 = !DILocation(line: 847, column: 9, scope: !3739)
!3741 = distinct !{!3741, !3742}
!3742 = !DILocation(line: 847, column: 9, scope: !3719)
!3743 = !DILocation(line: 852, column: 27, scope: !3719)
!3744 = !DILocation(line: 852, column: 15, scope: !3719)
!3745 = !DILocation(line: 852, column: 22, scope: !3719)
!3746 = !DILocation(line: 852, column: 42, scope: !3719)
!3747 = !DILocation(line: 852, column: 41, scope: !3719)
!3748 = !DILocation(line: 852, column: 45, scope: !3719)
!3749 = !DILocation(line: 852, column: 44, scope: !3719)
!3750 = !DILocation(line: 852, column: 38, scope: !3719)
!3751 = !DILocation(line: 852, column: 13, scope: !3719)
!3752 = !DILocation(line: 853, column: 17, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3719, file: !888, line: 853, column: 9)
!3754 = !DILocation(line: 853, column: 14, scope: !3753)
!3755 = !DILocation(line: 853, column: 22, scope: !3756)
!3756 = !DILexicalBlockFile(scope: !3757, file: !888, discriminator: 1)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !888, line: 853, column: 9)
!3758 = !DILocation(line: 853, column: 27, scope: !3756)
!3759 = !DILocation(line: 853, column: 25, scope: !3756)
!3760 = !DILocation(line: 853, column: 9, scope: !3756)
!3761 = !DILocation(line: 854, column: 35, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3757, file: !888, line: 853, column: 47)
!3763 = !DILocation(line: 854, column: 19, scope: !3762)
!3764 = !DILocation(line: 854, column: 17, scope: !3762)
!3765 = !DILocation(line: 855, column: 21, scope: !3762)
!3766 = !DILocation(line: 855, column: 13, scope: !3762)
!3767 = !DILocation(line: 857, column: 17, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3762, file: !888, line: 855, column: 26)
!3769 = !DILocation(line: 859, column: 47, scope: !3768)
!3770 = !DILocation(line: 859, column: 38, scope: !3768)
!3771 = !DILocation(line: 859, column: 24, scope: !3768)
!3772 = !DILocation(line: 859, column: 22, scope: !3768)
!3773 = !DILocation(line: 860, column: 19, scope: !3768)
!3774 = !DILocation(line: 861, column: 17, scope: !3768)
!3775 = distinct !{!3775, !3774}
!3776 = !DILocalVariable(name: "mode", scope: !3777, file: !888, line: 862, type: !926)
!3777 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 861, column: 20)
!3778 = !DILocation(line: 862, column: 25, scope: !3777)
!3779 = !DILocalVariable(name: "run", scope: !3777, file: !888, line: 862, type: !926)
!3780 = !DILocation(line: 862, column: 31, scope: !3777)
!3781 = !DILocation(line: 864, column: 38, scope: !3777)
!3782 = !DILocation(line: 864, column: 28, scope: !3777)
!3783 = !DILocation(line: 864, column: 26, scope: !3777)
!3784 = !DILocation(line: 865, column: 36, scope: !3777)
!3785 = !DILocation(line: 865, column: 54, scope: !3777)
!3786 = !DILocation(line: 865, column: 40, scope: !3777)
!3787 = !DILocation(line: 865, column: 27, scope: !3777)
!3788 = !DILocation(line: 865, column: 58, scope: !3777)
!3789 = !DILocation(line: 865, column: 25, scope: !3777)
!3790 = !DILocation(line: 867, column: 26, scope: !3777)
!3791 = !DILocation(line: 867, column: 23, scope: !3777)
!3792 = !DILocation(line: 868, column: 25, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3777, file: !888, line: 868, column: 25)
!3794 = !DILocation(line: 868, column: 27, scope: !3793)
!3795 = !DILocation(line: 868, column: 25, scope: !3777)
!3796 = !DILocation(line: 869, column: 32, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !888, line: 868, column: 33)
!3798 = !DILocation(line: 869, column: 35, scope: !3797)
!3799 = !DILocation(line: 869, column: 25, scope: !3797)
!3800 = !DILocation(line: 870, column: 25, scope: !3797)
!3801 = !DILocation(line: 872, column: 25, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3777, file: !888, line: 872, column: 25)
!3803 = !DILocation(line: 872, column: 25, scope: !3777)
!3804 = !DILocation(line: 873, column: 45, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3802, file: !888, line: 872, column: 31)
!3806 = !DILocation(line: 873, column: 29, scope: !3805)
!3807 = !DILocation(line: 873, column: 27, scope: !3805)
!3808 = !DILocation(line: 874, column: 32, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3805, file: !888, line: 874, column: 25)
!3810 = !DILocation(line: 874, column: 30, scope: !3809)
!3811 = !DILocation(line: 874, column: 37, scope: !3812)
!3812 = !DILexicalBlockFile(scope: !3813, file: !888, discriminator: 1)
!3813 = distinct !DILexicalBlock(scope: !3809, file: !888, line: 874, column: 25)
!3814 = !DILocation(line: 874, column: 41, scope: !3812)
!3815 = !DILocation(line: 874, column: 39, scope: !3812)
!3816 = !DILocation(line: 874, column: 25, scope: !3812)
!3817 = !DILocation(line: 875, column: 54, scope: !3813)
!3818 = !DILocation(line: 875, column: 47, scope: !3813)
!3819 = !DILocation(line: 875, column: 42, scope: !3813)
!3820 = !DILocation(line: 875, column: 33, scope: !3813)
!3821 = !DILocation(line: 875, column: 29, scope: !3813)
!3822 = !DILocation(line: 875, column: 52, scope: !3813)
!3823 = !DILocation(line: 874, column: 47, scope: !3824)
!3824 = !DILexicalBlockFile(scope: !3813, file: !888, discriminator: 2)
!3825 = !DILocation(line: 874, column: 25, scope: !3824)
!3826 = distinct !{!3826, !3827}
!3827 = !DILocation(line: 874, column: 25, scope: !3805)
!3828 = !DILocation(line: 876, column: 21, scope: !3805)
!3829 = !DILocation(line: 877, column: 32, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !888, line: 877, column: 25)
!3831 = distinct !DILexicalBlock(scope: !3802, file: !888, line: 876, column: 28)
!3832 = !DILocation(line: 877, column: 30, scope: !3830)
!3833 = !DILocation(line: 877, column: 37, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !3835, file: !888, discriminator: 1)
!3835 = distinct !DILexicalBlock(scope: !3830, file: !888, line: 877, column: 25)
!3836 = !DILocation(line: 877, column: 41, scope: !3834)
!3837 = !DILocation(line: 877, column: 39, scope: !3834)
!3838 = !DILocation(line: 877, column: 25, scope: !3834)
!3839 = !DILocation(line: 878, column: 70, scope: !3835)
!3840 = !DILocation(line: 878, column: 54, scope: !3835)
!3841 = !DILocation(line: 878, column: 47, scope: !3835)
!3842 = !DILocation(line: 878, column: 42, scope: !3835)
!3843 = !DILocation(line: 878, column: 33, scope: !3835)
!3844 = !DILocation(line: 878, column: 29, scope: !3835)
!3845 = !DILocation(line: 878, column: 52, scope: !3835)
!3846 = !DILocation(line: 877, column: 47, scope: !3847)
!3847 = !DILexicalBlockFile(scope: !3835, file: !888, discriminator: 2)
!3848 = !DILocation(line: 877, column: 25, scope: !3847)
!3849 = distinct !{!3849, !3850}
!3850 = !DILocation(line: 877, column: 25, scope: !3831)
!3851 = !DILocation(line: 880, column: 17, scope: !3777)
!3852 = !DILocation(line: 880, column: 26, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3768, file: !888, discriminator: 1)
!3854 = !DILocation(line: 880, column: 28, scope: !3853)
!3855 = !DILocation(line: 880, column: 17, scope: !3853)
!3856 = !DILocation(line: 881, column: 21, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 881, column: 21)
!3858 = !DILocation(line: 881, column: 23, scope: !3857)
!3859 = !DILocation(line: 881, column: 21, scope: !3768)
!3860 = !DILocation(line: 882, column: 62, scope: !3857)
!3861 = !DILocation(line: 882, column: 46, scope: !3857)
!3862 = !DILocation(line: 882, column: 39, scope: !3857)
!3863 = !DILocation(line: 882, column: 34, scope: !3857)
!3864 = !DILocation(line: 882, column: 25, scope: !3857)
!3865 = !DILocation(line: 882, column: 21, scope: !3857)
!3866 = !DILocation(line: 882, column: 44, scope: !3857)
!3867 = !DILocation(line: 883, column: 17, scope: !3768)
!3868 = !DILocation(line: 885, column: 24, scope: !3768)
!3869 = !DILocation(line: 885, column: 17, scope: !3768)
!3870 = !DILocation(line: 886, column: 47, scope: !3768)
!3871 = !DILocation(line: 886, column: 31, scope: !3768)
!3872 = !DILocation(line: 886, column: 17, scope: !3768)
!3873 = !DILocation(line: 886, column: 29, scope: !3768)
!3874 = !DILocation(line: 887, column: 38, scope: !3768)
!3875 = !DILocation(line: 887, column: 22, scope: !3768)
!3876 = !DILocation(line: 887, column: 20, scope: !3768)
!3877 = !DILocation(line: 888, column: 50, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 888, column: 21)
!3879 = !DILocation(line: 888, column: 53, scope: !3878)
!3880 = !DILocation(line: 888, column: 57, scope: !3878)
!3881 = !DILocation(line: 888, column: 91, scope: !3878)
!3882 = !DILocation(line: 888, column: 101, scope: !3878)
!3883 = !DILocation(line: 888, column: 34, scope: !3878)
!3884 = !DILocation(line: 888, column: 32, scope: !3878)
!3885 = !DILocation(line: 888, column: 106, scope: !3878)
!3886 = !DILocation(line: 888, column: 21, scope: !3768)
!3887 = !DILocation(line: 889, column: 28, scope: !3878)
!3888 = !DILocation(line: 889, column: 21, scope: !3878)
!3889 = !DILocation(line: 890, column: 39, scope: !3768)
!3890 = !DILocation(line: 890, column: 67, scope: !3768)
!3891 = !DILocation(line: 890, column: 49, scope: !3768)
!3892 = !DILocation(line: 890, column: 79, scope: !3768)
!3893 = !DILocation(line: 890, column: 91, scope: !3768)
!3894 = !DILocation(line: 890, column: 17, scope: !3768)
!3895 = !DILocation(line: 891, column: 17, scope: !3768)
!3896 = !DILocation(line: 891, column: 20, scope: !3768)
!3897 = !DILocation(line: 891, column: 28, scope: !3768)
!3898 = !DILocation(line: 891, column: 37, scope: !3768)
!3899 = !DILocation(line: 891, column: 42, scope: !3768)
!3900 = !DILocation(line: 891, column: 50, scope: !3768)
!3901 = !DILocation(line: 892, column: 17, scope: !3768)
!3902 = !DILocation(line: 894, column: 40, scope: !3768)
!3903 = !DILocation(line: 894, column: 24, scope: !3768)
!3904 = !DILocation(line: 894, column: 22, scope: !3768)
!3905 = !DILocation(line: 895, column: 40, scope: !3768)
!3906 = !DILocation(line: 895, column: 24, scope: !3768)
!3907 = !DILocation(line: 895, column: 62, scope: !3768)
!3908 = !DILocation(line: 895, column: 60, scope: !3768)
!3909 = !DILocation(line: 895, column: 22, scope: !3768)
!3910 = !DILocation(line: 896, column: 23, scope: !3768)
!3911 = !DILocation(line: 896, column: 29, scope: !3768)
!3912 = !DILocation(line: 896, column: 27, scope: !3768)
!3913 = !DILocation(line: 896, column: 36, scope: !3768)
!3914 = !DILocation(line: 896, column: 43, scope: !3768)
!3915 = !DILocation(line: 896, column: 41, scope: !3768)
!3916 = !DILocation(line: 896, column: 34, scope: !3768)
!3917 = !DILocation(line: 896, column: 21, scope: !3768)
!3918 = !DILocation(line: 897, column: 21, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 897, column: 21)
!3920 = !DILocation(line: 897, column: 27, scope: !3919)
!3921 = !DILocation(line: 897, column: 25, scope: !3919)
!3922 = !DILocation(line: 897, column: 37, scope: !3919)
!3923 = !DILocation(line: 897, column: 40, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3919, file: !888, discriminator: 1)
!3925 = !DILocation(line: 897, column: 48, scope: !3924)
!3926 = !DILocation(line: 897, column: 47, scope: !3924)
!3927 = !DILocation(line: 897, column: 44, scope: !3924)
!3928 = !DILocation(line: 897, column: 57, scope: !3924)
!3929 = !DILocation(line: 897, column: 55, scope: !3924)
!3930 = !DILocation(line: 897, column: 21, scope: !3924)
!3931 = !DILocation(line: 898, column: 28, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3919, file: !888, line: 897, column: 66)
!3933 = !DILocation(line: 898, column: 31, scope: !3932)
!3934 = !DILocation(line: 898, column: 21, scope: !3932)
!3935 = !DILocation(line: 899, column: 17, scope: !3932)
!3936 = !DILocation(line: 899, column: 28, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3938, file: !888, discriminator: 1)
!3938 = distinct !DILexicalBlock(scope: !3919, file: !888, line: 899, column: 28)
!3939 = !DILocation(line: 899, column: 36, scope: !3937)
!3940 = !DILocation(line: 899, column: 35, scope: !3937)
!3941 = !DILocation(line: 899, column: 32, scope: !3937)
!3942 = !DILocation(line: 899, column: 45, scope: !3937)
!3943 = !DILocation(line: 899, column: 43, scope: !3937)
!3944 = !DILocation(line: 899, column: 49, scope: !3937)
!3945 = !DILocation(line: 899, column: 52, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3938, file: !888, discriminator: 2)
!3947 = !DILocation(line: 899, column: 59, scope: !3946)
!3948 = !DILocation(line: 899, column: 67, scope: !3946)
!3949 = !DILocation(line: 899, column: 66, scope: !3946)
!3950 = !DILocation(line: 899, column: 63, scope: !3946)
!3951 = !DILocation(line: 899, column: 56, scope: !3946)
!3952 = !DILocation(line: 899, column: 28, scope: !3946)
!3953 = !DILocation(line: 900, column: 21, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3938, file: !888, line: 899, column: 75)
!3955 = !DILocation(line: 900, column: 24, scope: !3954)
!3956 = !DILocation(line: 900, column: 29, scope: !3954)
!3957 = !DILocation(line: 900, column: 50, scope: !3954)
!3958 = !DILocation(line: 900, column: 55, scope: !3954)
!3959 = !DILocation(line: 900, column: 60, scope: !3954)
!3960 = !DILocation(line: 901, column: 17, scope: !3954)
!3961 = !DILocation(line: 902, column: 46, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3938, file: !888, line: 901, column: 24)
!3963 = !DILocation(line: 902, column: 51, scope: !3962)
!3964 = !DILocation(line: 902, column: 56, scope: !3962)
!3965 = !DILocation(line: 902, column: 21, scope: !3962)
!3966 = !DILocation(line: 904, column: 17, scope: !3768)
!3967 = !DILocation(line: 904, column: 20, scope: !3768)
!3968 = !DILocation(line: 904, column: 25, scope: !3768)
!3969 = !DILocation(line: 904, column: 37, scope: !3768)
!3970 = !DILocation(line: 905, column: 37, scope: !3768)
!3971 = !DILocation(line: 905, column: 21, scope: !3768)
!3972 = !DILocation(line: 905, column: 19, scope: !3768)
!3973 = !DILocation(line: 906, column: 30, scope: !3768)
!3974 = !DILocation(line: 906, column: 34, scope: !3768)
!3975 = !DILocation(line: 906, column: 41, scope: !3768)
!3976 = !DILocation(line: 906, column: 17, scope: !3768)
!3977 = !DILocation(line: 907, column: 17, scope: !3768)
!3978 = !DILocation(line: 907, column: 20, scope: !3768)
!3979 = !DILocation(line: 907, column: 28, scope: !3768)
!3980 = !DILocation(line: 907, column: 40, scope: !3768)
!3981 = !DILocation(line: 907, column: 45, scope: !3768)
!3982 = !DILocation(line: 907, column: 52, scope: !3768)
!3983 = !DILocation(line: 908, column: 17, scope: !3768)
!3984 = !DILocation(line: 910, column: 40, scope: !3768)
!3985 = !DILocation(line: 910, column: 24, scope: !3768)
!3986 = !DILocation(line: 910, column: 22, scope: !3768)
!3987 = !DILocation(line: 911, column: 40, scope: !3768)
!3988 = !DILocation(line: 911, column: 24, scope: !3768)
!3989 = !DILocation(line: 911, column: 62, scope: !3768)
!3990 = !DILocation(line: 911, column: 60, scope: !3768)
!3991 = !DILocation(line: 911, column: 22, scope: !3768)
!3992 = !DILocation(line: 912, column: 23, scope: !3768)
!3993 = !DILocation(line: 912, column: 29, scope: !3768)
!3994 = !DILocation(line: 912, column: 27, scope: !3768)
!3995 = !DILocation(line: 912, column: 36, scope: !3768)
!3996 = !DILocation(line: 912, column: 43, scope: !3768)
!3997 = !DILocation(line: 912, column: 41, scope: !3768)
!3998 = !DILocation(line: 912, column: 34, scope: !3768)
!3999 = !DILocation(line: 912, column: 21, scope: !3768)
!4000 = !DILocation(line: 913, column: 21, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 913, column: 21)
!4002 = !DILocation(line: 913, column: 27, scope: !4001)
!4003 = !DILocation(line: 913, column: 25, scope: !4001)
!4004 = !DILocation(line: 913, column: 37, scope: !4001)
!4005 = !DILocation(line: 913, column: 40, scope: !4006)
!4006 = !DILexicalBlockFile(scope: !4001, file: !888, discriminator: 1)
!4007 = !DILocation(line: 913, column: 50, scope: !4006)
!4008 = !DILocation(line: 913, column: 48, scope: !4006)
!4009 = !DILocation(line: 913, column: 44, scope: !4006)
!4010 = !DILocation(line: 913, column: 59, scope: !4006)
!4011 = !DILocation(line: 913, column: 57, scope: !4006)
!4012 = !DILocation(line: 913, column: 21, scope: !4006)
!4013 = !DILocation(line: 914, column: 28, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4001, file: !888, line: 913, column: 68)
!4015 = !DILocation(line: 914, column: 31, scope: !4014)
!4016 = !DILocation(line: 914, column: 21, scope: !4014)
!4017 = !DILocation(line: 915, column: 17, scope: !4014)
!4018 = !DILocation(line: 915, column: 28, scope: !4019)
!4019 = !DILexicalBlockFile(scope: !4020, file: !888, discriminator: 1)
!4020 = distinct !DILexicalBlock(scope: !4001, file: !888, line: 915, column: 28)
!4021 = !DILocation(line: 915, column: 36, scope: !4019)
!4022 = !DILocation(line: 915, column: 35, scope: !4019)
!4023 = !DILocation(line: 915, column: 32, scope: !4019)
!4024 = !DILocation(line: 915, column: 45, scope: !4019)
!4025 = !DILocation(line: 915, column: 43, scope: !4019)
!4026 = !DILocation(line: 915, column: 49, scope: !4019)
!4027 = !DILocation(line: 915, column: 52, scope: !4028)
!4028 = !DILexicalBlockFile(scope: !4020, file: !888, discriminator: 2)
!4029 = !DILocation(line: 915, column: 59, scope: !4028)
!4030 = !DILocation(line: 915, column: 67, scope: !4028)
!4031 = !DILocation(line: 915, column: 66, scope: !4028)
!4032 = !DILocation(line: 915, column: 63, scope: !4028)
!4033 = !DILocation(line: 915, column: 56, scope: !4028)
!4034 = !DILocation(line: 915, column: 28, scope: !4028)
!4035 = !DILocation(line: 916, column: 21, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4020, file: !888, line: 915, column: 75)
!4037 = !DILocation(line: 916, column: 24, scope: !4036)
!4038 = !DILocation(line: 916, column: 29, scope: !4036)
!4039 = !DILocation(line: 916, column: 50, scope: !4036)
!4040 = !DILocation(line: 916, column: 55, scope: !4036)
!4041 = !DILocation(line: 916, column: 60, scope: !4036)
!4042 = !DILocation(line: 917, column: 17, scope: !4036)
!4043 = !DILocation(line: 918, column: 46, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4020, file: !888, line: 917, column: 24)
!4045 = !DILocation(line: 918, column: 51, scope: !4044)
!4046 = !DILocation(line: 918, column: 56, scope: !4044)
!4047 = !DILocation(line: 918, column: 21, scope: !4044)
!4048 = !DILocation(line: 920, column: 24, scope: !3768)
!4049 = !DILocation(line: 920, column: 17, scope: !3768)
!4050 = !DILocation(line: 921, column: 47, scope: !3768)
!4051 = !DILocation(line: 921, column: 31, scope: !3768)
!4052 = !DILocation(line: 921, column: 17, scope: !3768)
!4053 = !DILocation(line: 921, column: 29, scope: !3768)
!4054 = !DILocation(line: 922, column: 38, scope: !3768)
!4055 = !DILocation(line: 922, column: 22, scope: !3768)
!4056 = !DILocation(line: 922, column: 20, scope: !3768)
!4057 = !DILocation(line: 923, column: 50, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 923, column: 21)
!4059 = !DILocation(line: 923, column: 53, scope: !4058)
!4060 = !DILocation(line: 923, column: 57, scope: !4058)
!4061 = !DILocation(line: 923, column: 91, scope: !4058)
!4062 = !DILocation(line: 923, column: 101, scope: !4058)
!4063 = !DILocation(line: 923, column: 34, scope: !4058)
!4064 = !DILocation(line: 923, column: 32, scope: !4058)
!4065 = !DILocation(line: 923, column: 106, scope: !4058)
!4066 = !DILocation(line: 923, column: 21, scope: !3768)
!4067 = !DILocation(line: 924, column: 28, scope: !4058)
!4068 = !DILocation(line: 924, column: 21, scope: !4058)
!4069 = !DILocation(line: 925, column: 39, scope: !3768)
!4070 = !DILocation(line: 925, column: 67, scope: !3768)
!4071 = !DILocation(line: 925, column: 49, scope: !3768)
!4072 = !DILocation(line: 925, column: 79, scope: !3768)
!4073 = !DILocation(line: 925, column: 91, scope: !3768)
!4074 = !DILocation(line: 925, column: 17, scope: !3768)
!4075 = !DILocation(line: 926, column: 17, scope: !3768)
!4076 = !DILocation(line: 926, column: 20, scope: !3768)
!4077 = !DILocation(line: 926, column: 28, scope: !3768)
!4078 = !DILocation(line: 926, column: 37, scope: !3768)
!4079 = !DILocation(line: 926, column: 42, scope: !3768)
!4080 = !DILocation(line: 926, column: 50, scope: !3768)
!4081 = !DILocation(line: 927, column: 17, scope: !3768)
!4082 = !DILocation(line: 929, column: 37, scope: !3768)
!4083 = !DILocation(line: 929, column: 21, scope: !3768)
!4084 = !DILocation(line: 929, column: 19, scope: !3768)
!4085 = !DILocation(line: 930, column: 17, scope: !3768)
!4086 = !DILocation(line: 930, column: 20, scope: !3768)
!4087 = !DILocation(line: 930, column: 25, scope: !3768)
!4088 = !DILocation(line: 930, column: 43, scope: !3768)
!4089 = !DILocation(line: 930, column: 48, scope: !3768)
!4090 = !DILocation(line: 930, column: 51, scope: !3768)
!4091 = !DILocation(line: 931, column: 17, scope: !3768)
!4092 = !DILocation(line: 933, column: 24, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 933, column: 17)
!4094 = !DILocation(line: 933, column: 22, scope: !4093)
!4095 = !DILocation(line: 933, column: 29, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4097, file: !888, discriminator: 1)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !888, line: 933, column: 17)
!4098 = !DILocation(line: 933, column: 31, scope: !4096)
!4099 = !DILocation(line: 933, column: 17, scope: !4096)
!4100 = !DILocation(line: 934, column: 46, scope: !4097)
!4101 = !DILocation(line: 934, column: 30, scope: !4097)
!4102 = !DILocation(line: 934, column: 25, scope: !4097)
!4103 = !DILocation(line: 934, column: 21, scope: !4097)
!4104 = !DILocation(line: 934, column: 28, scope: !4097)
!4105 = !DILocation(line: 933, column: 37, scope: !4106)
!4106 = !DILexicalBlockFile(scope: !4097, file: !888, discriminator: 2)
!4107 = !DILocation(line: 933, column: 17, scope: !4106)
!4108 = distinct !{!4108, !4109}
!4109 = !DILocation(line: 933, column: 17, scope: !3768)
!4110 = !DILocation(line: 935, column: 24, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 935, column: 17)
!4112 = !DILocation(line: 935, column: 22, scope: !4111)
!4113 = !DILocation(line: 935, column: 29, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4115, file: !888, discriminator: 1)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !888, line: 935, column: 17)
!4116 = !DILocation(line: 935, column: 31, scope: !4114)
!4117 = !DILocation(line: 935, column: 17, scope: !4114)
!4118 = !DILocation(line: 936, column: 41, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !888, line: 935, column: 41)
!4120 = !DILocation(line: 936, column: 25, scope: !4119)
!4121 = !DILocation(line: 936, column: 23, scope: !4119)
!4122 = !DILocation(line: 937, column: 28, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4119, file: !888, line: 937, column: 21)
!4124 = !DILocation(line: 937, column: 26, scope: !4123)
!4125 = !DILocation(line: 937, column: 33, scope: !4126)
!4126 = !DILexicalBlockFile(scope: !4127, file: !888, discriminator: 1)
!4127 = distinct !DILexicalBlock(scope: !4123, file: !888, line: 937, column: 21)
!4128 = !DILocation(line: 937, column: 35, scope: !4126)
!4129 = !DILocation(line: 937, column: 21, scope: !4126)
!4130 = !DILocation(line: 938, column: 49, scope: !4127)
!4131 = !DILocation(line: 938, column: 51, scope: !4127)
!4132 = !DILocation(line: 938, column: 45, scope: !4127)
!4133 = !DILocation(line: 938, column: 29, scope: !4127)
!4134 = !DILocation(line: 938, column: 31, scope: !4127)
!4135 = !DILocation(line: 938, column: 30, scope: !4127)
!4136 = !DILocation(line: 938, column: 40, scope: !4127)
!4137 = !DILocation(line: 938, column: 38, scope: !4127)
!4138 = !DILocation(line: 938, column: 25, scope: !4127)
!4139 = !DILocation(line: 938, column: 43, scope: !4127)
!4140 = !DILocation(line: 937, column: 41, scope: !4141)
!4141 = !DILexicalBlockFile(scope: !4127, file: !888, discriminator: 2)
!4142 = !DILocation(line: 937, column: 47, scope: !4141)
!4143 = !DILocation(line: 937, column: 21, scope: !4141)
!4144 = distinct !{!4144, !4145}
!4145 = !DILocation(line: 937, column: 21, scope: !4119)
!4146 = !DILocation(line: 939, column: 17, scope: !4119)
!4147 = !DILocation(line: 935, column: 37, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4115, file: !888, discriminator: 2)
!4149 = !DILocation(line: 935, column: 17, scope: !4148)
!4150 = distinct !{!4150, !4151}
!4151 = !DILocation(line: 935, column: 17, scope: !3768)
!4152 = !DILocation(line: 940, column: 17, scope: !3768)
!4153 = !DILocation(line: 942, column: 40, scope: !3768)
!4154 = !DILocation(line: 942, column: 24, scope: !3768)
!4155 = !DILocation(line: 942, column: 22, scope: !3768)
!4156 = !DILocation(line: 943, column: 40, scope: !3768)
!4157 = !DILocation(line: 943, column: 24, scope: !3768)
!4158 = !DILocation(line: 943, column: 62, scope: !3768)
!4159 = !DILocation(line: 943, column: 60, scope: !3768)
!4160 = !DILocation(line: 943, column: 22, scope: !3768)
!4161 = !DILocation(line: 944, column: 23, scope: !3768)
!4162 = !DILocation(line: 944, column: 29, scope: !3768)
!4163 = !DILocation(line: 944, column: 27, scope: !3768)
!4164 = !DILocation(line: 944, column: 36, scope: !3768)
!4165 = !DILocation(line: 944, column: 43, scope: !3768)
!4166 = !DILocation(line: 944, column: 41, scope: !3768)
!4167 = !DILocation(line: 944, column: 34, scope: !3768)
!4168 = !DILocation(line: 944, column: 21, scope: !3768)
!4169 = !DILocation(line: 945, column: 21, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 945, column: 21)
!4171 = !DILocation(line: 945, column: 27, scope: !4170)
!4172 = !DILocation(line: 945, column: 25, scope: !4170)
!4173 = !DILocation(line: 945, column: 37, scope: !4170)
!4174 = !DILocation(line: 945, column: 40, scope: !4175)
!4175 = !DILexicalBlockFile(scope: !4170, file: !888, discriminator: 1)
!4176 = !DILocation(line: 945, column: 50, scope: !4175)
!4177 = !DILocation(line: 945, column: 48, scope: !4175)
!4178 = !DILocation(line: 945, column: 44, scope: !4175)
!4179 = !DILocation(line: 945, column: 59, scope: !4175)
!4180 = !DILocation(line: 945, column: 57, scope: !4175)
!4181 = !DILocation(line: 945, column: 21, scope: !4175)
!4182 = !DILocation(line: 946, column: 28, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4170, file: !888, line: 945, column: 68)
!4184 = !DILocation(line: 946, column: 31, scope: !4183)
!4185 = !DILocation(line: 946, column: 21, scope: !4183)
!4186 = !DILocation(line: 947, column: 17, scope: !4183)
!4187 = !DILocation(line: 947, column: 28, scope: !4188)
!4188 = !DILexicalBlockFile(scope: !4189, file: !888, discriminator: 1)
!4189 = distinct !DILexicalBlock(scope: !4170, file: !888, line: 947, column: 28)
!4190 = !DILocation(line: 947, column: 36, scope: !4188)
!4191 = !DILocation(line: 947, column: 35, scope: !4188)
!4192 = !DILocation(line: 947, column: 32, scope: !4188)
!4193 = !DILocation(line: 947, column: 45, scope: !4188)
!4194 = !DILocation(line: 947, column: 43, scope: !4188)
!4195 = !DILocation(line: 947, column: 49, scope: !4188)
!4196 = !DILocation(line: 947, column: 52, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !4189, file: !888, discriminator: 2)
!4198 = !DILocation(line: 947, column: 59, scope: !4197)
!4199 = !DILocation(line: 947, column: 67, scope: !4197)
!4200 = !DILocation(line: 947, column: 66, scope: !4197)
!4201 = !DILocation(line: 947, column: 63, scope: !4197)
!4202 = !DILocation(line: 947, column: 56, scope: !4197)
!4203 = !DILocation(line: 947, column: 28, scope: !4197)
!4204 = !DILocation(line: 948, column: 21, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4189, file: !888, line: 947, column: 75)
!4206 = !DILocation(line: 948, column: 24, scope: !4205)
!4207 = !DILocation(line: 948, column: 29, scope: !4205)
!4208 = !DILocation(line: 948, column: 50, scope: !4205)
!4209 = !DILocation(line: 948, column: 55, scope: !4205)
!4210 = !DILocation(line: 948, column: 60, scope: !4205)
!4211 = !DILocation(line: 949, column: 17, scope: !4205)
!4212 = !DILocation(line: 950, column: 46, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4189, file: !888, line: 949, column: 24)
!4214 = !DILocation(line: 950, column: 51, scope: !4213)
!4215 = !DILocation(line: 950, column: 56, scope: !4213)
!4216 = !DILocation(line: 950, column: 21, scope: !4213)
!4217 = !DILocation(line: 952, column: 17, scope: !3768)
!4218 = !DILocation(line: 954, column: 24, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !3768, file: !888, line: 954, column: 17)
!4220 = !DILocation(line: 954, column: 22, scope: !4219)
!4221 = !DILocation(line: 954, column: 29, scope: !4222)
!4222 = !DILexicalBlockFile(scope: !4223, file: !888, discriminator: 1)
!4223 = distinct !DILexicalBlock(scope: !4219, file: !888, line: 954, column: 17)
!4224 = !DILocation(line: 954, column: 31, scope: !4222)
!4225 = !DILocation(line: 954, column: 17, scope: !4222)
!4226 = !DILocation(line: 955, column: 28, scope: !4223)
!4227 = !DILocation(line: 955, column: 34, scope: !4223)
!4228 = !DILocation(line: 955, column: 36, scope: !4223)
!4229 = !DILocation(line: 955, column: 35, scope: !4223)
!4230 = !DILocation(line: 955, column: 32, scope: !4223)
!4231 = !DILocation(line: 955, column: 44, scope: !4223)
!4232 = !DILocation(line: 955, column: 47, scope: !4223)
!4233 = !DILocation(line: 955, column: 72, scope: !4223)
!4234 = !DILocation(line: 955, column: 82, scope: !4223)
!4235 = !DILocation(line: 955, column: 83, scope: !4223)
!4236 = !DILocation(line: 955, column: 80, scope: !4223)
!4237 = !DILocation(line: 955, column: 21, scope: !4223)
!4238 = !DILocation(line: 954, column: 37, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !4223, file: !888, discriminator: 2)
!4240 = !DILocation(line: 954, column: 17, scope: !4239)
!4241 = distinct !{!4241, !4242}
!4242 = !DILocation(line: 954, column: 17, scope: !3768)
!4243 = !DILocation(line: 956, column: 17, scope: !3768)
!4244 = !DILocation(line: 956, column: 20, scope: !3768)
!4245 = !DILocation(line: 956, column: 45, scope: !3768)
!4246 = !DILocation(line: 956, column: 53, scope: !3768)
!4247 = !DILocation(line: 957, column: 17, scope: !3768)
!4248 = !DILocation(line: 959, column: 24, scope: !3768)
!4249 = !DILocation(line: 959, column: 27, scope: !3768)
!4250 = !DILocation(line: 959, column: 65, scope: !3768)
!4251 = !DILocation(line: 959, column: 17, scope: !3768)
!4252 = !DILocation(line: 960, column: 17, scope: !3768)
!4253 = !DILocation(line: 962, column: 9, scope: !3762)
!4254 = !DILocation(line: 853, column: 33, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !3757, file: !888, discriminator: 2)
!4256 = !DILocation(line: 853, column: 41, scope: !4255)
!4257 = !DILocation(line: 853, column: 9, scope: !4255)
!4258 = distinct !{!4258, !4259}
!4259 = !DILocation(line: 853, column: 9, scope: !3719)
!4260 = !DILocation(line: 963, column: 5, scope: !3719)
!4261 = !DILocation(line: 846, column: 29, scope: !4262)
!4262 = !DILexicalBlockFile(scope: !3713, file: !888, discriminator: 2)
!4263 = !DILocation(line: 846, column: 5, scope: !4262)
!4264 = distinct !{!4264, !4265}
!4265 = !DILocation(line: 846, column: 5, scope: !3556)
!4266 = !DILocation(line: 964, column: 24, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !3556, file: !888, line: 964, column: 9)
!4268 = !DILocation(line: 964, column: 9, scope: !4267)
!4269 = !DILocation(line: 964, column: 28, scope: !4267)
!4270 = !DILocation(line: 964, column: 9, scope: !3556)
!4271 = !DILocation(line: 965, column: 24, scope: !4267)
!4272 = !DILocation(line: 965, column: 49, scope: !4267)
!4273 = !DILocation(line: 965, column: 34, scope: !4267)
!4274 = !DILocation(line: 965, column: 53, scope: !4267)
!4275 = !DILocation(line: 965, column: 31, scope: !4267)
!4276 = !DILocation(line: 965, column: 9, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !4267, file: !888, discriminator: 1)
!4278 = !DILocation(line: 965, column: 9, scope: !4267)
!4279 = !DILocation(line: 967, column: 5, scope: !3556)
!4280 = !DILocation(line: 968, column: 1, scope: !3556)
!4281 = distinct !DISubprogram(name: "get_bits_count", scope: !2000, file: !2000, line: 219, type: !4282, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!926, !4284}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64, align: 64)
!4285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!4286 = !DILocalVariable(name: "s", arg: 1, scope: !4281, file: !2000, line: 219, type: !4284)
!4287 = !DILocation(line: 219, column: 55, scope: !4281)
!4288 = !DILocation(line: 224, column: 12, scope: !4281)
!4289 = !DILocation(line: 224, column: 15, scope: !4281)
!4290 = !DILocation(line: 224, column: 5, scope: !4281)
!4291 = distinct !DISubprogram(name: "get_bits1", scope: !2000, file: !2000, line: 487, type: !4292, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{!927, !2417}
!4294 = !DILocalVariable(name: "s", arg: 1, scope: !4291, file: !2000, line: 487, type: !2417)
!4295 = !DILocation(line: 487, column: 53, scope: !4291)
!4296 = !DILocalVariable(name: "index", scope: !4291, file: !2000, line: 499, type: !927)
!4297 = !DILocation(line: 499, column: 18, scope: !4291)
!4298 = !DILocation(line: 499, column: 26, scope: !4291)
!4299 = !DILocation(line: 499, column: 29, scope: !4291)
!4300 = !DILocalVariable(name: "result", scope: !4291, file: !2000, line: 500, type: !944)
!4301 = !DILocation(line: 500, column: 13, scope: !4291)
!4302 = !DILocation(line: 500, column: 32, scope: !4291)
!4303 = !DILocation(line: 500, column: 38, scope: !4291)
!4304 = !DILocation(line: 500, column: 22, scope: !4291)
!4305 = !DILocation(line: 500, column: 25, scope: !4291)
!4306 = !DILocation(line: 502, column: 16, scope: !4291)
!4307 = !DILocation(line: 502, column: 22, scope: !4291)
!4308 = !DILocation(line: 502, column: 12, scope: !4291)
!4309 = !DILocation(line: 503, column: 12, scope: !4291)
!4310 = !DILocation(line: 509, column: 9, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4291, file: !2000, line: 509, column: 9)
!4312 = !DILocation(line: 509, column: 12, scope: !4311)
!4313 = !DILocation(line: 509, column: 20, scope: !4311)
!4314 = !DILocation(line: 509, column: 23, scope: !4311)
!4315 = !DILocation(line: 509, column: 18, scope: !4311)
!4316 = !DILocation(line: 509, column: 9, scope: !4291)
!4317 = !DILocation(line: 511, column: 14, scope: !4311)
!4318 = !DILocation(line: 511, column: 9, scope: !4311)
!4319 = !DILocation(line: 512, column: 16, scope: !4291)
!4320 = !DILocation(line: 512, column: 5, scope: !4291)
!4321 = !DILocation(line: 512, column: 8, scope: !4291)
!4322 = !DILocation(line: 512, column: 14, scope: !4291)
!4323 = !DILocation(line: 514, column: 12, scope: !4291)
!4324 = !DILocation(line: 514, column: 5, scope: !4291)
!4325 = distinct !DISubprogram(name: "get_bits", scope: !2000, file: !2000, line: 381, type: !4326, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!927, !2417, !926}
!4328 = !DILocalVariable(name: "s", arg: 1, scope: !4325, file: !2000, line: 381, type: !2417)
!4329 = !DILocation(line: 381, column: 52, scope: !4325)
!4330 = !DILocalVariable(name: "n", arg: 2, scope: !4325, file: !2000, line: 381, type: !926)
!4331 = !DILocation(line: 381, column: 59, scope: !4325)
!4332 = !DILocalVariable(name: "tmp", scope: !4325, file: !2000, line: 383, type: !926)
!4333 = !DILocation(line: 383, column: 18, scope: !4325)
!4334 = !DILocalVariable(name: "re_index", scope: !4325, file: !2000, line: 399, type: !927)
!4335 = !DILocation(line: 399, column: 18, scope: !4325)
!4336 = !DILocation(line: 399, column: 30, scope: !4325)
!4337 = !DILocation(line: 399, column: 34, scope: !4325)
!4338 = !DILocalVariable(name: "re_cache", scope: !4325, file: !2000, line: 399, type: !927)
!4339 = !DILocation(line: 399, column: 78, scope: !4325)
!4340 = !DILocalVariable(name: "re_size_plus8", scope: !4325, file: !2000, line: 399, type: !927)
!4341 = !DILocation(line: 399, column: 101, scope: !4325)
!4342 = !DILocation(line: 399, column: 118, scope: !4325)
!4343 = !DILocation(line: 399, column: 122, scope: !4325)
!4344 = !DILocation(line: 401, column: 49, scope: !4325)
!4345 = !DILocation(line: 401, column: 53, scope: !4325)
!4346 = !DILocation(line: 401, column: 63, scope: !4325)
!4347 = !DILocation(line: 401, column: 72, scope: !4325)
!4348 = !DILocation(line: 401, column: 60, scope: !4325)
!4349 = !DILocation(line: 401, column: 81, scope: !4325)
!4350 = !DILocation(line: 401, column: 88, scope: !4325)
!4351 = !DILocation(line: 401, column: 97, scope: !4325)
!4352 = !DILocation(line: 401, column: 84, scope: !4325)
!4353 = !DILocation(line: 401, column: 14, scope: !4325)
!4354 = !DILocation(line: 402, column: 23, scope: !4325)
!4355 = !DILocation(line: 402, column: 33, scope: !4325)
!4356 = !DILocation(line: 402, column: 11, scope: !4325)
!4357 = !DILocation(line: 402, column: 9, scope: !4325)
!4358 = !DILocation(line: 403, column: 18, scope: !4325)
!4359 = !DILocation(line: 403, column: 36, scope: !4325)
!4360 = !DILocation(line: 403, column: 48, scope: !4325)
!4361 = !DILocation(line: 403, column: 45, scope: !4325)
!4362 = !DILocation(line: 403, column: 33, scope: !4325)
!4363 = !DILocation(line: 403, column: 17, scope: !4325)
!4364 = !DILocation(line: 403, column: 55, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4325, file: !2000, discriminator: 1)
!4366 = !DILocation(line: 403, column: 67, scope: !4365)
!4367 = !DILocation(line: 403, column: 64, scope: !4365)
!4368 = !DILocation(line: 403, column: 17, scope: !4365)
!4369 = !DILocation(line: 403, column: 74, scope: !4370)
!4370 = !DILexicalBlockFile(scope: !4325, file: !2000, discriminator: 2)
!4371 = !DILocation(line: 403, column: 17, scope: !4370)
!4372 = !DILocation(line: 403, column: 17, scope: !4373)
!4373 = !DILexicalBlockFile(scope: !4325, file: !2000, discriminator: 3)
!4374 = !DILocation(line: 403, column: 14, scope: !4373)
!4375 = !DILocation(line: 404, column: 18, scope: !4325)
!4376 = !DILocation(line: 404, column: 6, scope: !4325)
!4377 = !DILocation(line: 404, column: 10, scope: !4325)
!4378 = !DILocation(line: 404, column: 16, scope: !4325)
!4379 = !DILocation(line: 406, column: 12, scope: !4325)
!4380 = !DILocation(line: 406, column: 5, scope: !4325)
!4381 = distinct !DISubprogram(name: "init_lengths", scope: !888, file: !888, line: 153, type: !4382, isLocal: true, isDefinition: true, scopeLine: 154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{null, !1739, !926, !926}
!4384 = !DILocalVariable(name: "c", arg: 1, scope: !4381, file: !888, line: 153, type: !1739)
!4385 = !DILocation(line: 153, column: 39, scope: !4381)
!4386 = !DILocalVariable(name: "width", arg: 2, scope: !4381, file: !888, line: 153, type: !926)
!4387 = !DILocation(line: 153, column: 46, scope: !4381)
!4388 = !DILocalVariable(name: "bw", arg: 3, scope: !4381, file: !888, line: 153, type: !926)
!4389 = !DILocation(line: 153, column: 57, scope: !4381)
!4390 = !DILocation(line: 155, column: 16, scope: !4381)
!4391 = !DILocation(line: 155, column: 22, scope: !4381)
!4392 = !DILocation(line: 155, column: 26, scope: !4381)
!4393 = !DILocation(line: 155, column: 29, scope: !4381)
!4394 = !DILocation(line: 155, column: 11, scope: !4381)
!4395 = !DILocation(line: 157, column: 65, scope: !4381)
!4396 = !DILocation(line: 157, column: 71, scope: !4381)
!4397 = !DILocation(line: 157, column: 77, scope: !4381)
!4398 = !DILocation(line: 157, column: 83, scope: !4381)
!4399 = !DILocation(line: 157, column: 49, scope: !4381)
!4400 = !DILocation(line: 157, column: 47, scope: !4381)
!4401 = !DILocation(line: 157, column: 88, scope: !4381)
!4402 = !DILocation(line: 157, column: 5, scope: !4381)
!4403 = !DILocation(line: 157, column: 8, scope: !4381)
!4404 = !DILocation(line: 157, column: 37, scope: !4381)
!4405 = !DILocation(line: 157, column: 41, scope: !4381)
!4406 = !DILocation(line: 159, column: 69, scope: !4381)
!4407 = !DILocation(line: 159, column: 75, scope: !4381)
!4408 = !DILocation(line: 159, column: 81, scope: !4381)
!4409 = !DILocation(line: 159, column: 87, scope: !4381)
!4410 = !DILocation(line: 159, column: 53, scope: !4381)
!4411 = !DILocation(line: 159, column: 51, scope: !4381)
!4412 = !DILocation(line: 159, column: 92, scope: !4381)
!4413 = !DILocation(line: 159, column: 5, scope: !4381)
!4414 = !DILocation(line: 159, column: 8, scope: !4381)
!4415 = !DILocation(line: 159, column: 41, scope: !4381)
!4416 = !DILocation(line: 159, column: 45, scope: !4381)
!4417 = !DILocation(line: 161, column: 59, scope: !4381)
!4418 = !DILocation(line: 161, column: 61, scope: !4381)
!4419 = !DILocation(line: 161, column: 65, scope: !4381)
!4420 = !DILocation(line: 161, column: 71, scope: !4381)
!4421 = !DILocation(line: 161, column: 44, scope: !4381)
!4422 = !DILocation(line: 161, column: 42, scope: !4381)
!4423 = !DILocation(line: 161, column: 76, scope: !4381)
!4424 = !DILocation(line: 161, column: 5, scope: !4381)
!4425 = !DILocation(line: 161, column: 8, scope: !4381)
!4426 = !DILocation(line: 161, column: 32, scope: !4381)
!4427 = !DILocation(line: 161, column: 36, scope: !4381)
!4428 = !DILocation(line: 166, column: 59, scope: !4381)
!4429 = !DILocation(line: 166, column: 65, scope: !4381)
!4430 = !DILocation(line: 166, column: 71, scope: !4381)
!4431 = !DILocation(line: 166, column: 77, scope: !4381)
!4432 = !DILocation(line: 166, column: 43, scope: !4381)
!4433 = !DILocation(line: 166, column: 41, scope: !4381)
!4434 = !DILocation(line: 166, column: 82, scope: !4381)
!4435 = !DILocation(line: 166, column: 5, scope: !4381)
!4436 = !DILocation(line: 166, column: 8, scope: !4381)
!4437 = !DILocation(line: 166, column: 31, scope: !4381)
!4438 = !DILocation(line: 166, column: 35, scope: !4381)
!4439 = !DILocation(line: 165, column: 5, scope: !4381)
!4440 = !DILocation(line: 165, column: 8, scope: !4381)
!4441 = !DILocation(line: 165, column: 31, scope: !4381)
!4442 = !DILocation(line: 165, column: 35, scope: !4381)
!4443 = !DILocation(line: 164, column: 5, scope: !4381)
!4444 = !DILocation(line: 164, column: 8, scope: !4381)
!4445 = !DILocation(line: 164, column: 34, scope: !4381)
!4446 = !DILocation(line: 164, column: 38, scope: !4381)
!4447 = !DILocation(line: 163, column: 5, scope: !4381)
!4448 = !DILocation(line: 163, column: 8, scope: !4381)
!4449 = !DILocation(line: 163, column: 34, scope: !4381)
!4450 = !DILocation(line: 163, column: 38, scope: !4381)
!4451 = !DILocation(line: 168, column: 61, scope: !4381)
!4452 = !DILocation(line: 168, column: 64, scope: !4381)
!4453 = !DILocation(line: 168, column: 70, scope: !4381)
!4454 = !DILocation(line: 168, column: 76, scope: !4381)
!4455 = !DILocation(line: 168, column: 45, scope: !4381)
!4456 = !DILocation(line: 168, column: 43, scope: !4381)
!4457 = !DILocation(line: 168, column: 81, scope: !4381)
!4458 = !DILocation(line: 168, column: 5, scope: !4381)
!4459 = !DILocation(line: 168, column: 8, scope: !4381)
!4460 = !DILocation(line: 168, column: 33, scope: !4381)
!4461 = !DILocation(line: 168, column: 37, scope: !4381)
!4462 = !DILocation(line: 170, column: 56, scope: !4381)
!4463 = !DILocation(line: 170, column: 58, scope: !4381)
!4464 = !DILocation(line: 170, column: 62, scope: !4381)
!4465 = !DILocation(line: 170, column: 68, scope: !4381)
!4466 = !DILocation(line: 170, column: 41, scope: !4381)
!4467 = !DILocation(line: 170, column: 39, scope: !4381)
!4468 = !DILocation(line: 170, column: 73, scope: !4381)
!4469 = !DILocation(line: 170, column: 5, scope: !4381)
!4470 = !DILocation(line: 170, column: 8, scope: !4381)
!4471 = !DILocation(line: 170, column: 29, scope: !4381)
!4472 = !DILocation(line: 170, column: 33, scope: !4381)
!4473 = !DILocation(line: 171, column: 1, scope: !4381)
!4474 = distinct !DISubprogram(name: "read_bundle", scope: !888, file: !888, line: 285, type: !4475, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !2417, !1739, !926}
!4477 = !DILocalVariable(name: "gb", arg: 1, scope: !4474, file: !888, line: 285, type: !2417)
!4478 = !DILocation(line: 285, column: 40, scope: !4474)
!4479 = !DILocalVariable(name: "c", arg: 2, scope: !4474, file: !888, line: 285, type: !1739)
!4480 = !DILocation(line: 285, column: 57, scope: !4474)
!4481 = !DILocalVariable(name: "bundle_num", arg: 3, scope: !4474, file: !888, line: 285, type: !926)
!4482 = !DILocation(line: 285, column: 64, scope: !4474)
!4483 = !DILocalVariable(name: "i", scope: !4474, file: !888, line: 287, type: !926)
!4484 = !DILocation(line: 287, column: 9, scope: !4474)
!4485 = !DILocation(line: 289, column: 9, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4474, file: !888, line: 289, column: 9)
!4487 = !DILocation(line: 289, column: 20, scope: !4486)
!4488 = !DILocation(line: 289, column: 9, scope: !4474)
!4489 = !DILocation(line: 290, column: 16, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !888, line: 290, column: 9)
!4491 = distinct !DILexicalBlock(scope: !4486, file: !888, line: 289, column: 40)
!4492 = !DILocation(line: 290, column: 14, scope: !4490)
!4493 = !DILocation(line: 290, column: 21, scope: !4494)
!4494 = !DILexicalBlockFile(scope: !4495, file: !888, discriminator: 1)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !888, line: 290, column: 9)
!4496 = !DILocation(line: 290, column: 23, scope: !4494)
!4497 = !DILocation(line: 290, column: 9, scope: !4494)
!4498 = !DILocation(line: 291, column: 23, scope: !4495)
!4499 = !DILocation(line: 291, column: 40, scope: !4495)
!4500 = !DILocation(line: 291, column: 28, scope: !4495)
!4501 = !DILocation(line: 291, column: 31, scope: !4495)
!4502 = !DILocation(line: 291, column: 13, scope: !4495)
!4503 = !DILocation(line: 290, column: 30, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !4495, file: !888, discriminator: 2)
!4505 = !DILocation(line: 290, column: 9, scope: !4504)
!4506 = distinct !{!4506, !4507}
!4507 = !DILocation(line: 290, column: 9, scope: !4491)
!4508 = !DILocation(line: 292, column: 9, scope: !4491)
!4509 = !DILocation(line: 292, column: 12, scope: !4491)
!4510 = !DILocation(line: 292, column: 24, scope: !4491)
!4511 = !DILocation(line: 293, column: 5, scope: !4491)
!4512 = !DILocation(line: 294, column: 9, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4474, file: !888, line: 294, column: 9)
!4514 = !DILocation(line: 294, column: 20, scope: !4513)
!4515 = !DILocation(line: 294, column: 41, scope: !4513)
!4516 = !DILocation(line: 294, column: 44, scope: !4517)
!4517 = !DILexicalBlockFile(scope: !4513, file: !888, discriminator: 1)
!4518 = !DILocation(line: 294, column: 55, scope: !4517)
!4519 = !DILocation(line: 294, column: 9, scope: !4517)
!4520 = !DILocation(line: 295, column: 19, scope: !4513)
!4521 = !DILocation(line: 295, column: 34, scope: !4513)
!4522 = !DILocation(line: 295, column: 24, scope: !4513)
!4523 = !DILocation(line: 295, column: 27, scope: !4513)
!4524 = !DILocation(line: 295, column: 46, scope: !4513)
!4525 = !DILocation(line: 295, column: 9, scope: !4513)
!4526 = !DILocation(line: 297, column: 47, scope: !4474)
!4527 = !DILocation(line: 297, column: 37, scope: !4474)
!4528 = !DILocation(line: 297, column: 40, scope: !4474)
!4529 = !DILocation(line: 297, column: 59, scope: !4474)
!4530 = !DILocation(line: 297, column: 15, scope: !4474)
!4531 = !DILocation(line: 297, column: 5, scope: !4474)
!4532 = !DILocation(line: 297, column: 8, scope: !4474)
!4533 = !DILocation(line: 297, column: 27, scope: !4474)
!4534 = !DILocation(line: 297, column: 35, scope: !4474)
!4535 = !DILocation(line: 296, column: 15, scope: !4474)
!4536 = !DILocation(line: 296, column: 5, scope: !4474)
!4537 = !DILocation(line: 296, column: 8, scope: !4474)
!4538 = !DILocation(line: 296, column: 27, scope: !4474)
!4539 = !DILocation(line: 296, column: 35, scope: !4474)
!4540 = !DILocation(line: 298, column: 1, scope: !4474)
!4541 = distinct !DISubprogram(name: "read_block_types", scope: !888, file: !888, line: 372, type: !4542, isLocal: true, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!926, !1041, !2417, !4544}
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64, align: 64)
!4545 = !DILocalVariable(name: "s", arg: 1, scope: !4546, file: !2000, line: 762, type: !2417)
!4546 = distinct !DISubprogram(name: "get_vlc2", scope: !2000, file: !2000, line: 762, type: !4547, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!926, !2417, !1686, !926, !926}
!4549 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !4550)
!4550 = distinct !DILocation(line: 398, column: 32, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !888, line: 397, column: 38)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !888, line: 396, column: 12)
!4553 = distinct !DILexicalBlock(scope: !4541, file: !888, line: 392, column: 9)
!4554 = !DILocalVariable(name: "table", arg: 2, scope: !4546, file: !2000, line: 762, type: !1686)
!4555 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !4550)
!4556 = !DILocalVariable(name: "bits", arg: 3, scope: !4546, file: !2000, line: 763, type: !926)
!4557 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !4550)
!4558 = !DILocalVariable(name: "max_depth", arg: 4, scope: !4546, file: !2000, line: 763, type: !926)
!4559 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !4550)
!4560 = !DILocalVariable(name: "code", scope: !4546, file: !2000, line: 783, type: !926)
!4561 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !4550)
!4562 = !DILocalVariable(name: "re_index", scope: !4546, file: !2000, line: 785, type: !927)
!4563 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !4550)
!4564 = !DILocalVariable(name: "re_cache", scope: !4546, file: !2000, line: 785, type: !927)
!4565 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !4550)
!4566 = !DILocalVariable(name: "re_size_plus8", scope: !4546, file: !2000, line: 785, type: !927)
!4567 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !4550)
!4568 = !DILocalVariable(name: "n", scope: !4569, file: !2000, line: 788, type: !926)
!4569 = distinct !DILexicalBlock(scope: !4546, file: !2000, line: 788, column: 8)
!4570 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !4550)
!4571 = !DILocalVariable(name: "nb_bits", scope: !4569, file: !2000, line: 788, type: !926)
!4572 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !4550)
!4573 = !DILocalVariable(name: "index", scope: !4569, file: !2000, line: 788, type: !927)
!4574 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !4550)
!4575 = !DILocalVariable(name: "avctx", arg: 1, scope: !4541, file: !888, line: 372, type: !1041)
!4576 = !DILocation(line: 372, column: 45, scope: !4541)
!4577 = !DILocalVariable(name: "gb", arg: 2, scope: !4541, file: !888, line: 372, type: !2417)
!4578 = !DILocation(line: 372, column: 67, scope: !4541)
!4579 = !DILocalVariable(name: "b", arg: 3, scope: !4541, file: !888, line: 372, type: !4544)
!4580 = !DILocation(line: 372, column: 79, scope: !4541)
!4581 = !DILocalVariable(name: "c", scope: !4541, file: !888, line: 374, type: !1738)
!4582 = !DILocation(line: 374, column: 25, scope: !4541)
!4583 = !DILocation(line: 374, column: 29, scope: !4541)
!4584 = !DILocation(line: 374, column: 36, scope: !4541)
!4585 = !DILocalVariable(name: "t", scope: !4541, file: !888, line: 375, type: !926)
!4586 = !DILocation(line: 375, column: 9, scope: !4541)
!4587 = !DILocalVariable(name: "v", scope: !4541, file: !888, line: 375, type: !926)
!4588 = !DILocation(line: 375, column: 12, scope: !4541)
!4589 = !DILocalVariable(name: "last", scope: !4541, file: !888, line: 376, type: !926)
!4590 = !DILocation(line: 376, column: 9, scope: !4541)
!4591 = !DILocalVariable(name: "dec_end", scope: !4541, file: !888, line: 377, type: !1481)
!4592 = !DILocation(line: 377, column: 20, scope: !4541)
!4593 = !DILocation(line: 379, column: 10, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4541, file: !888, line: 379, column: 9)
!4595 = !DILocation(line: 379, column: 13, scope: !4594)
!4596 = !DILocation(line: 379, column: 21, scope: !4594)
!4597 = !DILocation(line: 379, column: 25, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4594, file: !888, discriminator: 1)
!4599 = !DILocation(line: 379, column: 28, scope: !4598)
!4600 = !DILocation(line: 379, column: 38, scope: !4598)
!4601 = !DILocation(line: 379, column: 41, scope: !4598)
!4602 = !DILocation(line: 379, column: 36, scope: !4598)
!4603 = !DILocation(line: 379, column: 9, scope: !4598)
!4604 = !DILocation(line: 379, column: 51, scope: !4605)
!4605 = !DILexicalBlockFile(scope: !4594, file: !888, discriminator: 2)
!4606 = !DILocation(line: 379, column: 74, scope: !4607)
!4607 = !DILexicalBlockFile(scope: !4541, file: !888, discriminator: 3)
!4608 = !DILocation(line: 379, column: 78, scope: !4607)
!4609 = !DILocation(line: 379, column: 81, scope: !4607)
!4610 = !DILocation(line: 379, column: 65, scope: !4607)
!4611 = !DILocation(line: 379, column: 63, scope: !4607)
!4612 = !DILocation(line: 379, column: 92, scope: !4607)
!4613 = !DILocation(line: 379, column: 91, scope: !4607)
!4614 = !DILocation(line: 379, column: 97, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !4616, file: !888, discriminator: 4)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !888, line: 379, column: 95)
!4617 = distinct !DILexicalBlock(scope: !4541, file: !888, line: 379, column: 91)
!4618 = !DILocation(line: 379, column: 100, scope: !4615)
!4619 = !DILocation(line: 379, column: 108, scope: !4615)
!4620 = !DILocation(line: 379, column: 6, scope: !4615)
!4621 = !DILocation(line: 380, column: 9, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4541, file: !888, line: 380, column: 9)
!4623 = !DILocation(line: 380, column: 12, scope: !4622)
!4624 = !DILocation(line: 380, column: 20, scope: !4622)
!4625 = !DILocation(line: 380, column: 9, scope: !4541)
!4626 = !DILocation(line: 381, column: 11, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !888, line: 380, column: 28)
!4628 = !DILocation(line: 382, column: 13, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4627, file: !888, line: 382, column: 13)
!4630 = !DILocation(line: 382, column: 15, scope: !4629)
!4631 = !DILocation(line: 382, column: 13, scope: !4627)
!4632 = !DILocation(line: 383, column: 13, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !888, line: 382, column: 21)
!4634 = !DILocation(line: 383, column: 16, scope: !4633)
!4635 = !DILocation(line: 383, column: 24, scope: !4633)
!4636 = !DILocation(line: 384, column: 13, scope: !4633)
!4637 = !DILocation(line: 386, column: 5, scope: !4627)
!4638 = !DILocation(line: 387, column: 15, scope: !4541)
!4639 = !DILocation(line: 387, column: 18, scope: !4541)
!4640 = !DILocation(line: 387, column: 28, scope: !4541)
!4641 = !DILocation(line: 387, column: 26, scope: !4541)
!4642 = !DILocation(line: 387, column: 13, scope: !4541)
!4643 = !DILocation(line: 388, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4541, file: !888, line: 388, column: 9)
!4645 = !DILocation(line: 388, column: 19, scope: !4644)
!4646 = !DILocation(line: 388, column: 22, scope: !4644)
!4647 = !DILocation(line: 388, column: 17, scope: !4644)
!4648 = !DILocation(line: 388, column: 9, scope: !4541)
!4649 = !DILocation(line: 389, column: 16, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4644, file: !888, line: 388, column: 32)
!4651 = !DILocation(line: 389, column: 9, scope: !4650)
!4652 = !DILocation(line: 390, column: 9, scope: !4650)
!4653 = !DILocation(line: 392, column: 19, scope: !4553)
!4654 = !DILocation(line: 392, column: 9, scope: !4553)
!4655 = !DILocation(line: 392, column: 9, scope: !4541)
!4656 = !DILocation(line: 393, column: 22, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4553, file: !888, line: 392, column: 24)
!4658 = !DILocation(line: 393, column: 13, scope: !4657)
!4659 = !DILocation(line: 393, column: 11, scope: !4657)
!4660 = !DILocation(line: 394, column: 16, scope: !4657)
!4661 = !DILocation(line: 394, column: 19, scope: !4657)
!4662 = !DILocation(line: 394, column: 28, scope: !4657)
!4663 = !DILocation(line: 394, column: 9, scope: !4657)
!4664 = !DILocation(line: 394, column: 31, scope: !4657)
!4665 = !DILocation(line: 395, column: 23, scope: !4657)
!4666 = !DILocation(line: 395, column: 9, scope: !4657)
!4667 = !DILocation(line: 395, column: 12, scope: !4657)
!4668 = !DILocation(line: 395, column: 20, scope: !4657)
!4669 = !DILocation(line: 396, column: 5, scope: !4657)
!4670 = !DILocation(line: 397, column: 9, scope: !4552)
!4671 = !DILocation(line: 397, column: 16, scope: !4672)
!4672 = !DILexicalBlockFile(scope: !4552, file: !888, discriminator: 1)
!4673 = !DILocation(line: 397, column: 19, scope: !4672)
!4674 = !DILocation(line: 397, column: 29, scope: !4672)
!4675 = !DILocation(line: 397, column: 27, scope: !4672)
!4676 = !DILocation(line: 397, column: 9, scope: !4672)
!4677 = !DILocation(line: 398, column: 41, scope: !4551)
!4678 = !DILocation(line: 398, column: 57, scope: !4551)
!4679 = !DILocation(line: 398, column: 60, scope: !4551)
!4680 = !DILocation(line: 398, column: 66, scope: !4551)
!4681 = !DILocation(line: 398, column: 45, scope: !4551)
!4682 = !DILocation(line: 398, column: 75, scope: !4551)
!4683 = !DILocation(line: 398, column: 94, scope: !4551)
!4684 = !DILocation(line: 398, column: 97, scope: !4551)
!4685 = !DILocation(line: 398, column: 103, scope: !4551)
!4686 = !DILocation(line: 398, column: 82, scope: !4551)
!4687 = !DILocation(line: 398, column: 112, scope: !4551)
!4688 = !DILocation(line: 398, column: 32, scope: !4551)
!4689 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !4550)
!4690 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !4550)
!4691 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !4550)
!4692 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !4550)
!4693 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !4550)
!4694 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !4550)
!4695 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !4550)
!4696 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !4550)
!4697 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !4550)
!4698 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !4550)
!4699 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !4550)
!4700 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !4550)
!4701 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !4550)
!4702 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !4550)
!4703 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !4550)
!4704 = !DILexicalBlockFile(scope: !4569, file: !2000, discriminator: 1)
!4705 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !4550)
!4706 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !4550)
!4707 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !4550)
!4708 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !4550)
!4709 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !4550)
!4710 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !4550)
!4711 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !4550)
!4712 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !4550)
!4713 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !4550)
!4714 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !4550)
!4715 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !4550)
!4716 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !4550)
!4717 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !4550)
!4718 = !DILexicalBlockFile(scope: !4719, file: !2000, discriminator: 2)
!4719 = distinct !DILexicalBlock(scope: !4569, file: !2000, line: 788, column: 132)
!4720 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !4550)
!4721 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !4550)
!4722 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !4550)
!4723 = !DILexicalBlockFile(scope: !4724, file: !2000, discriminator: 3)
!4724 = distinct !DILexicalBlock(scope: !4719, file: !2000, line: 788, column: 156)
!4725 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !4550)
!4726 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !4550)
!4727 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !4550)
!4728 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !4550)
!4729 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !4550)
!4730 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !4550)
!4731 = !DILexicalBlockFile(scope: !4724, file: !2000, discriminator: 4)
!4732 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !4550)
!4733 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !4550)
!4734 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !4550)
!4735 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !4550)
!4736 = !DILexicalBlockFile(scope: !4724, file: !2000, discriminator: 5)
!4737 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !4550)
!4738 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !4550)
!4739 = !DILexicalBlockFile(scope: !4724, file: !2000, discriminator: 6)
!4740 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !4550)
!4741 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !4550)
!4742 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !4550)
!4743 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !4550)
!4744 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !4550)
!4745 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !4550)
!4746 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !4550)
!4747 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !4550)
!4748 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !4550)
!4749 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !4550)
!4750 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !4550)
!4751 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !4550)
!4752 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !4550)
!4753 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !4550)
!4754 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !4550)
!4755 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !4550)
!4756 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !4550)
!4757 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !4550)
!4758 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !4550)
!4759 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !4550)
!4760 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !4550)
!4761 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !4550)
!4762 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !4550)
!4763 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !4550)
!4764 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !4550)
!4765 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !4550)
!4766 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !4550)
!4767 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !4550)
!4768 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !4550)
!4769 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !4550)
!4770 = !DILexicalBlockFile(scope: !4771, file: !2000, discriminator: 7)
!4771 = distinct !DILexicalBlock(scope: !4724, file: !2000, line: 788, column: 458)
!4772 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !4550)
!4773 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !4550)
!4774 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !4550)
!4775 = !DILexicalBlockFile(scope: !4776, file: !2000, discriminator: 8)
!4776 = distinct !DILexicalBlock(scope: !4771, file: !2000, line: 788, column: 482)
!4777 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !4550)
!4778 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !4550)
!4779 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !4550)
!4780 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !4550)
!4781 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !4550)
!4782 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !4550)
!4783 = !DILexicalBlockFile(scope: !4776, file: !2000, discriminator: 9)
!4784 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !4550)
!4785 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !4550)
!4786 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !4550)
!4787 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !4550)
!4788 = !DILexicalBlockFile(scope: !4776, file: !2000, discriminator: 10)
!4789 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !4550)
!4790 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !4550)
!4791 = !DILexicalBlockFile(scope: !4776, file: !2000, discriminator: 11)
!4792 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !4550)
!4793 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !4550)
!4794 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !4550)
!4795 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !4550)
!4796 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !4550)
!4797 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !4550)
!4798 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !4550)
!4799 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !4550)
!4800 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !4550)
!4801 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !4550)
!4802 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !4550)
!4803 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !4550)
!4804 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !4550)
!4805 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !4550)
!4806 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !4550)
!4807 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !4550)
!4808 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !4550)
!4809 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !4550)
!4810 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !4550)
!4811 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !4550)
!4812 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !4550)
!4813 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !4550)
!4814 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !4550)
!4815 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !4550)
!4816 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !4550)
!4817 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !4550)
!4818 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !4550)
!4819 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !4550)
!4820 = !DILexicalBlockFile(scope: !4724, file: !2000, discriminator: 12)
!4821 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !4550)
!4822 = !DILexicalBlockFile(scope: !4823, file: !2000, discriminator: 14)
!4823 = distinct !DILexicalBlock(scope: !4569, file: !2000, line: 788, column: 793)
!4824 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !4550)
!4825 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !4550)
!4826 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !4550)
!4827 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !4550)
!4828 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !4550)
!4829 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !4550)
!4830 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !4550)
!4831 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !4550)
!4832 = !DILexicalBlockFile(scope: !4823, file: !2000, discriminator: 15)
!4833 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !4550)
!4834 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !4550)
!4835 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !4550)
!4836 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !4550)
!4837 = !DILexicalBlockFile(scope: !4823, file: !2000, discriminator: 16)
!4838 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !4550)
!4839 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !4550)
!4840 = !DILexicalBlockFile(scope: !4823, file: !2000, discriminator: 17)
!4841 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !4550)
!4842 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !4550)
!4843 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !4550)
!4844 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !4550)
!4845 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !4550)
!4846 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !4550)
!4847 = !DILocation(line: 398, column: 17, scope: !4551)
!4848 = !DILocation(line: 398, column: 18, scope: !4551)
!4849 = !DILocation(line: 398, column: 21, scope: !4551)
!4850 = !DILocation(line: 398, column: 27, scope: !4551)
!4851 = !DILocation(line: 398, column: 15, scope: !4551)
!4852 = !DILocation(line: 399, column: 17, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4551, file: !888, line: 399, column: 17)
!4854 = !DILocation(line: 399, column: 19, scope: !4853)
!4855 = !DILocation(line: 399, column: 17, scope: !4551)
!4856 = !DILocation(line: 400, column: 24, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !888, line: 399, column: 25)
!4858 = !DILocation(line: 400, column: 22, scope: !4857)
!4859 = !DILocation(line: 401, column: 33, scope: !4857)
!4860 = !DILocation(line: 401, column: 18, scope: !4857)
!4861 = !DILocation(line: 401, column: 21, scope: !4857)
!4862 = !DILocation(line: 401, column: 28, scope: !4857)
!4863 = !DILocation(line: 401, column: 31, scope: !4857)
!4864 = !DILocation(line: 402, column: 13, scope: !4857)
!4865 = !DILocalVariable(name: "run", scope: !4866, file: !888, line: 403, type: !926)
!4866 = distinct !DILexicalBlock(scope: !4853, file: !888, line: 402, column: 20)
!4867 = !DILocation(line: 403, column: 21, scope: !4866)
!4868 = !DILocation(line: 403, column: 40, scope: !4866)
!4869 = !DILocation(line: 403, column: 42, scope: !4866)
!4870 = !DILocation(line: 403, column: 27, scope: !4866)
!4871 = !DILocation(line: 405, column: 21, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4866, file: !888, line: 405, column: 21)
!4873 = !DILocation(line: 405, column: 31, scope: !4872)
!4874 = !DILocation(line: 405, column: 34, scope: !4872)
!4875 = !DILocation(line: 405, column: 29, scope: !4872)
!4876 = !DILocation(line: 405, column: 44, scope: !4872)
!4877 = !DILocation(line: 405, column: 42, scope: !4872)
!4878 = !DILocation(line: 405, column: 21, scope: !4866)
!4879 = !DILocation(line: 406, column: 21, scope: !4872)
!4880 = !DILocation(line: 407, column: 24, scope: !4866)
!4881 = !DILocation(line: 407, column: 27, scope: !4866)
!4882 = !DILocation(line: 407, column: 36, scope: !4866)
!4883 = !DILocation(line: 407, column: 17, scope: !4866)
!4884 = !DILocation(line: 407, column: 42, scope: !4866)
!4885 = !DILocation(line: 408, column: 31, scope: !4866)
!4886 = !DILocation(line: 408, column: 17, scope: !4866)
!4887 = !DILocation(line: 408, column: 20, scope: !4866)
!4888 = !DILocation(line: 408, column: 28, scope: !4866)
!4889 = !DILocation(line: 397, column: 9, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4552, file: !888, discriminator: 2)
!4891 = distinct !{!4891, !4670}
!4892 = !DILocation(line: 412, column: 5, scope: !4541)
!4893 = !DILocation(line: 413, column: 1, scope: !4541)
!4894 = distinct !DISubprogram(name: "read_colors", scope: !888, file: !888, line: 435, type: !4895, isLocal: true, isDefinition: true, scopeLine: 436, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!926, !2417, !4544, !1739}
!4897 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !4898)
!4898 = distinct !DILocation(line: 460, column: 32, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !888, line: 458, column: 38)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !888, line: 457, column: 12)
!4901 = distinct !DILexicalBlock(scope: !4894, file: !888, line: 446, column: 9)
!4902 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !4898)
!4903 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !4898)
!4904 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !4898)
!4905 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !4898)
!4906 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !4898)
!4907 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !4898)
!4908 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !4898)
!4909 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !4898)
!4910 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !4898)
!4911 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !4898)
!4912 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !4913)
!4913 = distinct !DILocation(line: 459, column: 65, scope: !4899)
!4914 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !4913)
!4915 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !4913)
!4916 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !4913)
!4917 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !4913)
!4918 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !4913)
!4919 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !4913)
!4920 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !4913)
!4921 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !4913)
!4922 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !4913)
!4923 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !4913)
!4924 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !4925)
!4925 = distinct !DILocation(line: 448, column: 28, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4901, file: !888, line: 446, column: 24)
!4927 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !4925)
!4928 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !4925)
!4929 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !4925)
!4930 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !4925)
!4931 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !4925)
!4932 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !4925)
!4933 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !4925)
!4934 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !4925)
!4935 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !4925)
!4936 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !4925)
!4937 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !4938)
!4938 = distinct !DILocation(line: 447, column: 61, scope: !4926)
!4939 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !4938)
!4940 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !4938)
!4941 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !4938)
!4942 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !4938)
!4943 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !4938)
!4944 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !4938)
!4945 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !4938)
!4946 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !4938)
!4947 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !4938)
!4948 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !4938)
!4949 = !DILocalVariable(name: "gb", arg: 1, scope: !4894, file: !888, line: 435, type: !2417)
!4950 = !DILocation(line: 435, column: 39, scope: !4894)
!4951 = !DILocalVariable(name: "b", arg: 2, scope: !4894, file: !888, line: 435, type: !4544)
!4952 = !DILocation(line: 435, column: 51, scope: !4894)
!4953 = !DILocalVariable(name: "c", arg: 3, scope: !4894, file: !888, line: 435, type: !1739)
!4954 = !DILocation(line: 435, column: 67, scope: !4894)
!4955 = !DILocalVariable(name: "t", scope: !4894, file: !888, line: 437, type: !926)
!4956 = !DILocation(line: 437, column: 9, scope: !4894)
!4957 = !DILocalVariable(name: "sign", scope: !4894, file: !888, line: 437, type: !926)
!4958 = !DILocation(line: 437, column: 12, scope: !4894)
!4959 = !DILocalVariable(name: "v", scope: !4894, file: !888, line: 437, type: !926)
!4960 = !DILocation(line: 437, column: 18, scope: !4894)
!4961 = !DILocalVariable(name: "dec_end", scope: !4894, file: !888, line: 438, type: !1481)
!4962 = !DILocation(line: 438, column: 20, scope: !4894)
!4963 = !DILocation(line: 440, column: 10, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4894, file: !888, line: 440, column: 9)
!4965 = !DILocation(line: 440, column: 13, scope: !4964)
!4966 = !DILocation(line: 440, column: 21, scope: !4964)
!4967 = !DILocation(line: 440, column: 25, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !4964, file: !888, discriminator: 1)
!4969 = !DILocation(line: 440, column: 28, scope: !4968)
!4970 = !DILocation(line: 440, column: 38, scope: !4968)
!4971 = !DILocation(line: 440, column: 41, scope: !4968)
!4972 = !DILocation(line: 440, column: 36, scope: !4968)
!4973 = !DILocation(line: 440, column: 9, scope: !4968)
!4974 = !DILocation(line: 440, column: 51, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !4964, file: !888, discriminator: 2)
!4976 = !DILocation(line: 440, column: 74, scope: !4977)
!4977 = !DILexicalBlockFile(scope: !4894, file: !888, discriminator: 3)
!4978 = !DILocation(line: 440, column: 78, scope: !4977)
!4979 = !DILocation(line: 440, column: 81, scope: !4977)
!4980 = !DILocation(line: 440, column: 65, scope: !4977)
!4981 = !DILocation(line: 440, column: 63, scope: !4977)
!4982 = !DILocation(line: 440, column: 92, scope: !4977)
!4983 = !DILocation(line: 440, column: 91, scope: !4977)
!4984 = !DILocation(line: 440, column: 97, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4986, file: !888, discriminator: 4)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !888, line: 440, column: 95)
!4987 = distinct !DILexicalBlock(scope: !4894, file: !888, line: 440, column: 91)
!4988 = !DILocation(line: 440, column: 100, scope: !4985)
!4989 = !DILocation(line: 440, column: 108, scope: !4985)
!4990 = !DILocation(line: 440, column: 6, scope: !4985)
!4991 = !DILocation(line: 441, column: 15, scope: !4894)
!4992 = !DILocation(line: 441, column: 18, scope: !4894)
!4993 = !DILocation(line: 441, column: 28, scope: !4894)
!4994 = !DILocation(line: 441, column: 26, scope: !4894)
!4995 = !DILocation(line: 441, column: 13, scope: !4894)
!4996 = !DILocation(line: 442, column: 9, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4894, file: !888, line: 442, column: 9)
!4998 = !DILocation(line: 442, column: 19, scope: !4997)
!4999 = !DILocation(line: 442, column: 22, scope: !4997)
!5000 = !DILocation(line: 442, column: 17, scope: !4997)
!5001 = !DILocation(line: 442, column: 9, scope: !4894)
!5002 = !DILocation(line: 443, column: 16, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4997, file: !888, line: 442, column: 32)
!5004 = !DILocation(line: 443, column: 19, scope: !5003)
!5005 = !DILocation(line: 443, column: 9, scope: !5003)
!5006 = !DILocation(line: 444, column: 9, scope: !5003)
!5007 = !DILocation(line: 446, column: 19, scope: !4901)
!5008 = !DILocation(line: 446, column: 9, scope: !4901)
!5009 = !DILocation(line: 446, column: 9, scope: !4894)
!5010 = !DILocation(line: 447, column: 70, scope: !4926)
!5011 = !DILocation(line: 447, column: 98, scope: !4926)
!5012 = !DILocation(line: 447, column: 101, scope: !4926)
!5013 = !DILocation(line: 447, column: 86, scope: !4926)
!5014 = !DILocation(line: 447, column: 89, scope: !4926)
!5015 = !DILocation(line: 447, column: 115, scope: !4926)
!5016 = !DILocation(line: 447, column: 74, scope: !4926)
!5017 = !DILocation(line: 447, column: 124, scope: !4926)
!5018 = !DILocation(line: 447, column: 155, scope: !4926)
!5019 = !DILocation(line: 447, column: 158, scope: !4926)
!5020 = !DILocation(line: 447, column: 143, scope: !4926)
!5021 = !DILocation(line: 447, column: 146, scope: !4926)
!5022 = !DILocation(line: 447, column: 172, scope: !4926)
!5023 = !DILocation(line: 447, column: 131, scope: !4926)
!5024 = !DILocation(line: 447, column: 181, scope: !4926)
!5025 = !DILocation(line: 447, column: 61, scope: !4926)
!5026 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !4938)
!5027 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !4938)
!5028 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !4938)
!5029 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !4938)
!5030 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !4938)
!5031 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !4938)
!5032 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !4938)
!5033 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !4938)
!5034 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !4938)
!5035 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !4938)
!5036 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !4938)
!5037 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !4938)
!5038 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !4938)
!5039 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !4938)
!5040 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !4938)
!5041 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !4938)
!5042 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !4938)
!5043 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !4938)
!5044 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !4938)
!5045 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !4938)
!5046 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !4938)
!5047 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !4938)
!5048 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !4938)
!5049 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !4938)
!5050 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !4938)
!5051 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !4938)
!5052 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !4938)
!5053 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !4938)
!5054 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !4938)
!5055 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !4938)
!5056 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !4938)
!5057 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !4938)
!5058 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !4938)
!5059 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !4938)
!5060 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !4938)
!5061 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !4938)
!5062 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !4938)
!5063 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !4938)
!5064 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !4938)
!5065 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !4938)
!5066 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !4938)
!5067 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !4938)
!5068 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !4938)
!5069 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !4938)
!5070 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !4938)
!5071 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !4938)
!5072 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !4938)
!5073 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !4938)
!5074 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !4938)
!5075 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !4938)
!5076 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !4938)
!5077 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !4938)
!5078 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !4938)
!5079 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !4938)
!5080 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !4938)
!5081 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !4938)
!5082 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !4938)
!5083 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !4938)
!5084 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !4938)
!5085 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !4938)
!5086 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !4938)
!5087 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !4938)
!5088 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !4938)
!5089 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !4938)
!5090 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !4938)
!5091 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !4938)
!5092 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !4938)
!5093 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !4938)
!5094 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !4938)
!5095 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !4938)
!5096 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !4938)
!5097 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !4938)
!5098 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !4938)
!5099 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !4938)
!5100 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !4938)
!5101 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !4938)
!5102 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !4938)
!5103 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !4938)
!5104 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !4938)
!5105 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !4938)
!5106 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !4938)
!5107 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !4938)
!5108 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !4938)
!5109 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !4938)
!5110 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !4938)
!5111 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !4938)
!5112 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !4938)
!5113 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !4938)
!5114 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !4938)
!5115 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !4938)
!5116 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !4938)
!5117 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !4938)
!5118 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !4938)
!5119 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !4938)
!5120 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !4938)
!5121 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !4938)
!5122 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !4938)
!5123 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !4938)
!5124 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !4938)
!5125 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !4938)
!5126 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !4938)
!5127 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !4938)
!5128 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !4938)
!5129 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !4938)
!5130 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !4938)
!5131 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !4938)
!5132 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !4938)
!5133 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !4938)
!5134 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !4938)
!5135 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !4938)
!5136 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !4938)
!5137 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !4938)
!5138 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !4938)
!5139 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !4938)
!5140 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !4938)
!5141 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !4938)
!5142 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !4938)
!5143 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !4938)
!5144 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !4938)
!5145 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !4938)
!5146 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !4938)
!5147 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !4938)
!5148 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !4938)
!5149 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !4938)
!5150 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !4938)
!5151 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !4938)
!5152 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !4938)
!5153 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !4938)
!5154 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !4938)
!5155 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !4938)
!5156 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !4938)
!5157 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !4938)
!5158 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !4938)
!5159 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !4938)
!5160 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !4938)
!5161 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !4938)
!5162 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !4938)
!5163 = !DILocation(line: 447, column: 26, scope: !4926)
!5164 = !DILocation(line: 447, column: 39, scope: !4926)
!5165 = !DILocation(line: 447, column: 42, scope: !4926)
!5166 = !DILocation(line: 447, column: 27, scope: !4926)
!5167 = !DILocation(line: 447, column: 30, scope: !4926)
!5168 = !DILocation(line: 447, column: 56, scope: !4926)
!5169 = !DILocation(line: 447, column: 9, scope: !4926)
!5170 = !DILocation(line: 447, column: 12, scope: !4926)
!5171 = !DILocation(line: 447, column: 24, scope: !4926)
!5172 = !DILocation(line: 448, column: 37, scope: !4926)
!5173 = !DILocation(line: 448, column: 53, scope: !4926)
!5174 = !DILocation(line: 448, column: 56, scope: !4926)
!5175 = !DILocation(line: 448, column: 62, scope: !4926)
!5176 = !DILocation(line: 448, column: 41, scope: !4926)
!5177 = !DILocation(line: 448, column: 71, scope: !4926)
!5178 = !DILocation(line: 448, column: 90, scope: !4926)
!5179 = !DILocation(line: 448, column: 93, scope: !4926)
!5180 = !DILocation(line: 448, column: 99, scope: !4926)
!5181 = !DILocation(line: 448, column: 78, scope: !4926)
!5182 = !DILocation(line: 448, column: 108, scope: !4926)
!5183 = !DILocation(line: 448, column: 28, scope: !4926)
!5184 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !4925)
!5185 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !4925)
!5186 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !4925)
!5187 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !4925)
!5188 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !4925)
!5189 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !4925)
!5190 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !4925)
!5191 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !4925)
!5192 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !4925)
!5193 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !4925)
!5194 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !4925)
!5195 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !4925)
!5196 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !4925)
!5197 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !4925)
!5198 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !4925)
!5199 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !4925)
!5200 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !4925)
!5201 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !4925)
!5202 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !4925)
!5203 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !4925)
!5204 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !4925)
!5205 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !4925)
!5206 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !4925)
!5207 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !4925)
!5208 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !4925)
!5209 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !4925)
!5210 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !4925)
!5211 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !4925)
!5212 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !4925)
!5213 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !4925)
!5214 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !4925)
!5215 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !4925)
!5216 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !4925)
!5217 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !4925)
!5218 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !4925)
!5219 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !4925)
!5220 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !4925)
!5221 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !4925)
!5222 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !4925)
!5223 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !4925)
!5224 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !4925)
!5225 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !4925)
!5226 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !4925)
!5227 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !4925)
!5228 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !4925)
!5229 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !4925)
!5230 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !4925)
!5231 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !4925)
!5232 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !4925)
!5233 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !4925)
!5234 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !4925)
!5235 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !4925)
!5236 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !4925)
!5237 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !4925)
!5238 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !4925)
!5239 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !4925)
!5240 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !4925)
!5241 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !4925)
!5242 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !4925)
!5243 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !4925)
!5244 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !4925)
!5245 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !4925)
!5246 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !4925)
!5247 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !4925)
!5248 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !4925)
!5249 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !4925)
!5250 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !4925)
!5251 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !4925)
!5252 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !4925)
!5253 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !4925)
!5254 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !4925)
!5255 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !4925)
!5256 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !4925)
!5257 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !4925)
!5258 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !4925)
!5259 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !4925)
!5260 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !4925)
!5261 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !4925)
!5262 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !4925)
!5263 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !4925)
!5264 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !4925)
!5265 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !4925)
!5266 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !4925)
!5267 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !4925)
!5268 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !4925)
!5269 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !4925)
!5270 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !4925)
!5271 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !4925)
!5272 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !4925)
!5273 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !4925)
!5274 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !4925)
!5275 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !4925)
!5276 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !4925)
!5277 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !4925)
!5278 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !4925)
!5279 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !4925)
!5280 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !4925)
!5281 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !4925)
!5282 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !4925)
!5283 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !4925)
!5284 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !4925)
!5285 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !4925)
!5286 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !4925)
!5287 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !4925)
!5288 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !4925)
!5289 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !4925)
!5290 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !4925)
!5291 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !4925)
!5292 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !4925)
!5293 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !4925)
!5294 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !4925)
!5295 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !4925)
!5296 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !4925)
!5297 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !4925)
!5298 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !4925)
!5299 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !4925)
!5300 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !4925)
!5301 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !4925)
!5302 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !4925)
!5303 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !4925)
!5304 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !4925)
!5305 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !4925)
!5306 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !4925)
!5307 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !4925)
!5308 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !4925)
!5309 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !4925)
!5310 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !4925)
!5311 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !4925)
!5312 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !4925)
!5313 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !4925)
!5314 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !4925)
!5315 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !4925)
!5316 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !4925)
!5317 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !4925)
!5318 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !4925)
!5319 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !4925)
!5320 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !4925)
!5321 = !DILocation(line: 448, column: 13, scope: !4926)
!5322 = !DILocation(line: 448, column: 14, scope: !4926)
!5323 = !DILocation(line: 448, column: 17, scope: !4926)
!5324 = !DILocation(line: 448, column: 23, scope: !4926)
!5325 = !DILocation(line: 448, column: 11, scope: !4926)
!5326 = !DILocation(line: 449, column: 14, scope: !4926)
!5327 = !DILocation(line: 449, column: 17, scope: !4926)
!5328 = !DILocation(line: 449, column: 29, scope: !4926)
!5329 = !DILocation(line: 449, column: 37, scope: !4926)
!5330 = !DILocation(line: 449, column: 35, scope: !4926)
!5331 = !DILocation(line: 449, column: 11, scope: !4926)
!5332 = !DILocation(line: 450, column: 13, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !4926, file: !888, line: 450, column: 13)
!5334 = !DILocation(line: 450, column: 16, scope: !5333)
!5335 = !DILocation(line: 450, column: 24, scope: !5333)
!5336 = !DILocation(line: 450, column: 13, scope: !4926)
!5337 = !DILocation(line: 451, column: 30, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !888, line: 450, column: 31)
!5339 = !DILocation(line: 451, column: 21, scope: !5338)
!5340 = !DILocation(line: 451, column: 20, scope: !5338)
!5341 = !DILocation(line: 451, column: 33, scope: !5338)
!5342 = !DILocation(line: 451, column: 18, scope: !5338)
!5343 = !DILocation(line: 452, column: 19, scope: !5338)
!5344 = !DILocation(line: 452, column: 21, scope: !5338)
!5345 = !DILocation(line: 452, column: 31, scope: !5338)
!5346 = !DILocation(line: 452, column: 29, scope: !5338)
!5347 = !DILocation(line: 452, column: 39, scope: !5338)
!5348 = !DILocation(line: 452, column: 37, scope: !5338)
!5349 = !DILocation(line: 452, column: 15, scope: !5338)
!5350 = !DILocation(line: 453, column: 15, scope: !5338)
!5351 = !DILocation(line: 454, column: 9, scope: !5338)
!5352 = !DILocation(line: 455, column: 16, scope: !4926)
!5353 = !DILocation(line: 455, column: 19, scope: !4926)
!5354 = !DILocation(line: 455, column: 28, scope: !4926)
!5355 = !DILocation(line: 455, column: 9, scope: !4926)
!5356 = !DILocation(line: 455, column: 31, scope: !4926)
!5357 = !DILocation(line: 456, column: 23, scope: !4926)
!5358 = !DILocation(line: 456, column: 9, scope: !4926)
!5359 = !DILocation(line: 456, column: 12, scope: !4926)
!5360 = !DILocation(line: 456, column: 20, scope: !4926)
!5361 = !DILocation(line: 457, column: 5, scope: !4926)
!5362 = !DILocation(line: 458, column: 9, scope: !4900)
!5363 = !DILocation(line: 458, column: 16, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !4900, file: !888, discriminator: 1)
!5365 = !DILocation(line: 458, column: 19, scope: !5364)
!5366 = !DILocation(line: 458, column: 29, scope: !5364)
!5367 = !DILocation(line: 458, column: 27, scope: !5364)
!5368 = !DILocation(line: 458, column: 9, scope: !5364)
!5369 = !DILocation(line: 459, column: 74, scope: !4899)
!5370 = !DILocation(line: 459, column: 102, scope: !4899)
!5371 = !DILocation(line: 459, column: 105, scope: !4899)
!5372 = !DILocation(line: 459, column: 90, scope: !4899)
!5373 = !DILocation(line: 459, column: 93, scope: !4899)
!5374 = !DILocation(line: 459, column: 119, scope: !4899)
!5375 = !DILocation(line: 459, column: 78, scope: !4899)
!5376 = !DILocation(line: 459, column: 128, scope: !4899)
!5377 = !DILocation(line: 459, column: 159, scope: !4899)
!5378 = !DILocation(line: 459, column: 162, scope: !4899)
!5379 = !DILocation(line: 459, column: 147, scope: !4899)
!5380 = !DILocation(line: 459, column: 150, scope: !4899)
!5381 = !DILocation(line: 459, column: 176, scope: !4899)
!5382 = !DILocation(line: 459, column: 135, scope: !4899)
!5383 = !DILocation(line: 459, column: 185, scope: !4899)
!5384 = !DILocation(line: 459, column: 65, scope: !4899)
!5385 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !4913)
!5386 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !4913)
!5387 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !4913)
!5388 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !4913)
!5389 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !4913)
!5390 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !4913)
!5391 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !4913)
!5392 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !4913)
!5393 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !4913)
!5394 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !4913)
!5395 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !4913)
!5396 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !4913)
!5397 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !4913)
!5398 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !4913)
!5399 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !4913)
!5400 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !4913)
!5401 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !4913)
!5402 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !4913)
!5403 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !4913)
!5404 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !4913)
!5405 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !4913)
!5406 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !4913)
!5407 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !4913)
!5408 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !4913)
!5409 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !4913)
!5410 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !4913)
!5411 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !4913)
!5412 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !4913)
!5413 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !4913)
!5414 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !4913)
!5415 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !4913)
!5416 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !4913)
!5417 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !4913)
!5418 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !4913)
!5419 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !4913)
!5420 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !4913)
!5421 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !4913)
!5422 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !4913)
!5423 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !4913)
!5424 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !4913)
!5425 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !4913)
!5426 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !4913)
!5427 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !4913)
!5428 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !4913)
!5429 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !4913)
!5430 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !4913)
!5431 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !4913)
!5432 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !4913)
!5433 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !4913)
!5434 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !4913)
!5435 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !4913)
!5436 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !4913)
!5437 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !4913)
!5438 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !4913)
!5439 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !4913)
!5440 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !4913)
!5441 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !4913)
!5442 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !4913)
!5443 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !4913)
!5444 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !4913)
!5445 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !4913)
!5446 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !4913)
!5447 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !4913)
!5448 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !4913)
!5449 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !4913)
!5450 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !4913)
!5451 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !4913)
!5452 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !4913)
!5453 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !4913)
!5454 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !4913)
!5455 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !4913)
!5456 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !4913)
!5457 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !4913)
!5458 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !4913)
!5459 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !4913)
!5460 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !4913)
!5461 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !4913)
!5462 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !4913)
!5463 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !4913)
!5464 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !4913)
!5465 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !4913)
!5466 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !4913)
!5467 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !4913)
!5468 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !4913)
!5469 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !4913)
!5470 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !4913)
!5471 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !4913)
!5472 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !4913)
!5473 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !4913)
!5474 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !4913)
!5475 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !4913)
!5476 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !4913)
!5477 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !4913)
!5478 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !4913)
!5479 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !4913)
!5480 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !4913)
!5481 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !4913)
!5482 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !4913)
!5483 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !4913)
!5484 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !4913)
!5485 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !4913)
!5486 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !4913)
!5487 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !4913)
!5488 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !4913)
!5489 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !4913)
!5490 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !4913)
!5491 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !4913)
!5492 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !4913)
!5493 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !4913)
!5494 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !4913)
!5495 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !4913)
!5496 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !4913)
!5497 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !4913)
!5498 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !4913)
!5499 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !4913)
!5500 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !4913)
!5501 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !4913)
!5502 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !4913)
!5503 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !4913)
!5504 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !4913)
!5505 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !4913)
!5506 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !4913)
!5507 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !4913)
!5508 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !4913)
!5509 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !4913)
!5510 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !4913)
!5511 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !4913)
!5512 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !4913)
!5513 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !4913)
!5514 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !4913)
!5515 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !4913)
!5516 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !4913)
!5517 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !4913)
!5518 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !4913)
!5519 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !4913)
!5520 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !4913)
!5521 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !4913)
!5522 = !DILocation(line: 459, column: 30, scope: !4899)
!5523 = !DILocation(line: 459, column: 43, scope: !4899)
!5524 = !DILocation(line: 459, column: 46, scope: !4899)
!5525 = !DILocation(line: 459, column: 31, scope: !4899)
!5526 = !DILocation(line: 459, column: 34, scope: !4899)
!5527 = !DILocation(line: 459, column: 60, scope: !4899)
!5528 = !DILocation(line: 459, column: 13, scope: !4899)
!5529 = !DILocation(line: 459, column: 16, scope: !4899)
!5530 = !DILocation(line: 459, column: 28, scope: !4899)
!5531 = !DILocation(line: 460, column: 41, scope: !4899)
!5532 = !DILocation(line: 460, column: 57, scope: !4899)
!5533 = !DILocation(line: 460, column: 60, scope: !4899)
!5534 = !DILocation(line: 460, column: 66, scope: !4899)
!5535 = !DILocation(line: 460, column: 45, scope: !4899)
!5536 = !DILocation(line: 460, column: 75, scope: !4899)
!5537 = !DILocation(line: 460, column: 94, scope: !4899)
!5538 = !DILocation(line: 460, column: 97, scope: !4899)
!5539 = !DILocation(line: 460, column: 103, scope: !4899)
!5540 = !DILocation(line: 460, column: 82, scope: !4899)
!5541 = !DILocation(line: 460, column: 112, scope: !4899)
!5542 = !DILocation(line: 460, column: 32, scope: !4899)
!5543 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !4898)
!5544 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !4898)
!5545 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !4898)
!5546 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !4898)
!5547 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !4898)
!5548 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !4898)
!5549 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !4898)
!5550 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !4898)
!5551 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !4898)
!5552 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !4898)
!5553 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !4898)
!5554 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !4898)
!5555 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !4898)
!5556 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !4898)
!5557 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !4898)
!5558 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !4898)
!5559 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !4898)
!5560 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !4898)
!5561 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !4898)
!5562 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !4898)
!5563 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !4898)
!5564 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !4898)
!5565 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !4898)
!5566 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !4898)
!5567 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !4898)
!5568 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !4898)
!5569 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !4898)
!5570 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !4898)
!5571 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !4898)
!5572 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !4898)
!5573 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !4898)
!5574 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !4898)
!5575 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !4898)
!5576 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !4898)
!5577 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !4898)
!5578 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !4898)
!5579 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !4898)
!5580 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !4898)
!5581 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !4898)
!5582 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !4898)
!5583 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !4898)
!5584 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !4898)
!5585 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !4898)
!5586 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !4898)
!5587 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !4898)
!5588 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !4898)
!5589 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !4898)
!5590 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !4898)
!5591 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !4898)
!5592 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !4898)
!5593 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !4898)
!5594 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !4898)
!5595 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !4898)
!5596 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !4898)
!5597 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !4898)
!5598 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !4898)
!5599 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !4898)
!5600 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !4898)
!5601 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !4898)
!5602 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !4898)
!5603 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !4898)
!5604 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !4898)
!5605 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !4898)
!5606 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !4898)
!5607 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !4898)
!5608 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !4898)
!5609 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !4898)
!5610 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !4898)
!5611 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !4898)
!5612 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !4898)
!5613 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !4898)
!5614 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !4898)
!5615 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !4898)
!5616 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !4898)
!5617 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !4898)
!5618 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !4898)
!5619 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !4898)
!5620 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !4898)
!5621 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !4898)
!5622 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !4898)
!5623 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !4898)
!5624 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !4898)
!5625 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !4898)
!5626 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !4898)
!5627 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !4898)
!5628 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !4898)
!5629 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !4898)
!5630 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !4898)
!5631 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !4898)
!5632 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !4898)
!5633 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !4898)
!5634 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !4898)
!5635 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !4898)
!5636 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !4898)
!5637 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !4898)
!5638 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !4898)
!5639 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !4898)
!5640 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !4898)
!5641 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !4898)
!5642 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !4898)
!5643 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !4898)
!5644 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !4898)
!5645 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !4898)
!5646 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !4898)
!5647 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !4898)
!5648 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !4898)
!5649 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !4898)
!5650 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !4898)
!5651 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !4898)
!5652 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !4898)
!5653 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !4898)
!5654 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !4898)
!5655 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !4898)
!5656 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !4898)
!5657 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !4898)
!5658 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !4898)
!5659 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !4898)
!5660 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !4898)
!5661 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !4898)
!5662 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !4898)
!5663 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !4898)
!5664 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !4898)
!5665 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !4898)
!5666 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !4898)
!5667 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !4898)
!5668 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !4898)
!5669 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !4898)
!5670 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !4898)
!5671 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !4898)
!5672 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !4898)
!5673 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !4898)
!5674 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !4898)
!5675 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !4898)
!5676 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !4898)
!5677 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !4898)
!5678 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !4898)
!5679 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !4898)
!5680 = !DILocation(line: 460, column: 17, scope: !4899)
!5681 = !DILocation(line: 460, column: 18, scope: !4899)
!5682 = !DILocation(line: 460, column: 21, scope: !4899)
!5683 = !DILocation(line: 460, column: 27, scope: !4899)
!5684 = !DILocation(line: 460, column: 15, scope: !4899)
!5685 = !DILocation(line: 461, column: 18, scope: !4899)
!5686 = !DILocation(line: 461, column: 21, scope: !4899)
!5687 = !DILocation(line: 461, column: 33, scope: !4899)
!5688 = !DILocation(line: 461, column: 41, scope: !4899)
!5689 = !DILocation(line: 461, column: 39, scope: !4899)
!5690 = !DILocation(line: 461, column: 15, scope: !4899)
!5691 = !DILocation(line: 462, column: 17, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !4899, file: !888, line: 462, column: 17)
!5693 = !DILocation(line: 462, column: 20, scope: !5692)
!5694 = !DILocation(line: 462, column: 28, scope: !5692)
!5695 = !DILocation(line: 462, column: 17, scope: !4899)
!5696 = !DILocation(line: 463, column: 34, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5692, file: !888, line: 462, column: 35)
!5698 = !DILocation(line: 463, column: 25, scope: !5697)
!5699 = !DILocation(line: 463, column: 24, scope: !5697)
!5700 = !DILocation(line: 463, column: 37, scope: !5697)
!5701 = !DILocation(line: 463, column: 22, scope: !5697)
!5702 = !DILocation(line: 464, column: 23, scope: !5697)
!5703 = !DILocation(line: 464, column: 25, scope: !5697)
!5704 = !DILocation(line: 464, column: 35, scope: !5697)
!5705 = !DILocation(line: 464, column: 33, scope: !5697)
!5706 = !DILocation(line: 464, column: 43, scope: !5697)
!5707 = !DILocation(line: 464, column: 41, scope: !5697)
!5708 = !DILocation(line: 464, column: 19, scope: !5697)
!5709 = !DILocation(line: 465, column: 19, scope: !5697)
!5710 = !DILocation(line: 466, column: 13, scope: !5697)
!5711 = !DILocation(line: 467, column: 29, scope: !4899)
!5712 = !DILocation(line: 467, column: 14, scope: !4899)
!5713 = !DILocation(line: 467, column: 17, scope: !4899)
!5714 = !DILocation(line: 467, column: 24, scope: !4899)
!5715 = !DILocation(line: 467, column: 27, scope: !4899)
!5716 = !DILocation(line: 458, column: 9, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !4900, file: !888, discriminator: 2)
!5718 = distinct !{!5718, !5362}
!5719 = !DILocation(line: 470, column: 5, scope: !4894)
!5720 = !DILocation(line: 471, column: 1, scope: !4894)
!5721 = distinct !DISubprogram(name: "read_patterns", scope: !888, file: !888, line: 415, type: !4542, isLocal: true, isDefinition: true, scopeLine: 416, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!5722 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !5723)
!5723 = distinct !DILocation(line: 428, column: 29, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5721, file: !888, line: 426, column: 34)
!5725 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !5723)
!5726 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !5723)
!5727 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !5723)
!5728 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !5723)
!5729 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !5723)
!5730 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !5723)
!5731 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !5723)
!5732 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !5723)
!5733 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !5723)
!5734 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !5723)
!5735 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !5736)
!5736 = distinct !DILocation(line: 427, column: 28, scope: !5724)
!5737 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !5736)
!5738 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !5736)
!5739 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !5736)
!5740 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !5736)
!5741 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !5736)
!5742 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !5736)
!5743 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !5736)
!5744 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !5736)
!5745 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !5736)
!5746 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !5736)
!5747 = !DILocalVariable(name: "avctx", arg: 1, scope: !5721, file: !888, line: 415, type: !1041)
!5748 = !DILocation(line: 415, column: 42, scope: !5721)
!5749 = !DILocalVariable(name: "gb", arg: 2, scope: !5721, file: !888, line: 415, type: !2417)
!5750 = !DILocation(line: 415, column: 64, scope: !5721)
!5751 = !DILocalVariable(name: "b", arg: 3, scope: !5721, file: !888, line: 415, type: !4544)
!5752 = !DILocation(line: 415, column: 76, scope: !5721)
!5753 = !DILocalVariable(name: "t", scope: !5721, file: !888, line: 417, type: !926)
!5754 = !DILocation(line: 417, column: 9, scope: !5721)
!5755 = !DILocalVariable(name: "v", scope: !5721, file: !888, line: 417, type: !926)
!5756 = !DILocation(line: 417, column: 12, scope: !5721)
!5757 = !DILocalVariable(name: "dec_end", scope: !5721, file: !888, line: 418, type: !1481)
!5758 = !DILocation(line: 418, column: 20, scope: !5721)
!5759 = !DILocation(line: 420, column: 10, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5721, file: !888, line: 420, column: 9)
!5761 = !DILocation(line: 420, column: 13, scope: !5760)
!5762 = !DILocation(line: 420, column: 21, scope: !5760)
!5763 = !DILocation(line: 420, column: 25, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5760, file: !888, discriminator: 1)
!5765 = !DILocation(line: 420, column: 28, scope: !5764)
!5766 = !DILocation(line: 420, column: 38, scope: !5764)
!5767 = !DILocation(line: 420, column: 41, scope: !5764)
!5768 = !DILocation(line: 420, column: 36, scope: !5764)
!5769 = !DILocation(line: 420, column: 9, scope: !5764)
!5770 = !DILocation(line: 420, column: 51, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !5760, file: !888, discriminator: 2)
!5772 = !DILocation(line: 420, column: 74, scope: !5773)
!5773 = !DILexicalBlockFile(scope: !5721, file: !888, discriminator: 3)
!5774 = !DILocation(line: 420, column: 78, scope: !5773)
!5775 = !DILocation(line: 420, column: 81, scope: !5773)
!5776 = !DILocation(line: 420, column: 65, scope: !5773)
!5777 = !DILocation(line: 420, column: 63, scope: !5773)
!5778 = !DILocation(line: 420, column: 92, scope: !5773)
!5779 = !DILocation(line: 420, column: 91, scope: !5773)
!5780 = !DILocation(line: 420, column: 97, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !5782, file: !888, discriminator: 4)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !888, line: 420, column: 95)
!5783 = distinct !DILexicalBlock(scope: !5721, file: !888, line: 420, column: 91)
!5784 = !DILocation(line: 420, column: 100, scope: !5781)
!5785 = !DILocation(line: 420, column: 108, scope: !5781)
!5786 = !DILocation(line: 420, column: 6, scope: !5781)
!5787 = !DILocation(line: 421, column: 15, scope: !5721)
!5788 = !DILocation(line: 421, column: 18, scope: !5721)
!5789 = !DILocation(line: 421, column: 28, scope: !5721)
!5790 = !DILocation(line: 421, column: 26, scope: !5721)
!5791 = !DILocation(line: 421, column: 13, scope: !5721)
!5792 = !DILocation(line: 422, column: 9, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5721, file: !888, line: 422, column: 9)
!5794 = !DILocation(line: 422, column: 19, scope: !5793)
!5795 = !DILocation(line: 422, column: 22, scope: !5793)
!5796 = !DILocation(line: 422, column: 17, scope: !5793)
!5797 = !DILocation(line: 422, column: 9, scope: !5721)
!5798 = !DILocation(line: 423, column: 16, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5793, file: !888, line: 422, column: 32)
!5800 = !DILocation(line: 423, column: 9, scope: !5799)
!5801 = !DILocation(line: 424, column: 9, scope: !5799)
!5802 = !DILocation(line: 426, column: 5, scope: !5721)
!5803 = !DILocation(line: 426, column: 12, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5721, file: !888, discriminator: 1)
!5805 = !DILocation(line: 426, column: 15, scope: !5804)
!5806 = !DILocation(line: 426, column: 25, scope: !5804)
!5807 = !DILocation(line: 426, column: 23, scope: !5804)
!5808 = !DILocation(line: 426, column: 5, scope: !5804)
!5809 = !DILocation(line: 427, column: 37, scope: !5724)
!5810 = !DILocation(line: 427, column: 53, scope: !5724)
!5811 = !DILocation(line: 427, column: 56, scope: !5724)
!5812 = !DILocation(line: 427, column: 62, scope: !5724)
!5813 = !DILocation(line: 427, column: 41, scope: !5724)
!5814 = !DILocation(line: 427, column: 71, scope: !5724)
!5815 = !DILocation(line: 427, column: 90, scope: !5724)
!5816 = !DILocation(line: 427, column: 93, scope: !5724)
!5817 = !DILocation(line: 427, column: 99, scope: !5724)
!5818 = !DILocation(line: 427, column: 78, scope: !5724)
!5819 = !DILocation(line: 427, column: 108, scope: !5724)
!5820 = !DILocation(line: 427, column: 28, scope: !5724)
!5821 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !5736)
!5822 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !5736)
!5823 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !5736)
!5824 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !5736)
!5825 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !5736)
!5826 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !5736)
!5827 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !5736)
!5828 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !5736)
!5829 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !5736)
!5830 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !5736)
!5831 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !5736)
!5832 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !5736)
!5833 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !5736)
!5834 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !5736)
!5835 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !5736)
!5836 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !5736)
!5837 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !5736)
!5838 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !5736)
!5839 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !5736)
!5840 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !5736)
!5841 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !5736)
!5842 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !5736)
!5843 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !5736)
!5844 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !5736)
!5845 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !5736)
!5846 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !5736)
!5847 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !5736)
!5848 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !5736)
!5849 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !5736)
!5850 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !5736)
!5851 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !5736)
!5852 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !5736)
!5853 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !5736)
!5854 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !5736)
!5855 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !5736)
!5856 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !5736)
!5857 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !5736)
!5858 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !5736)
!5859 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !5736)
!5860 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !5736)
!5861 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !5736)
!5862 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !5736)
!5863 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !5736)
!5864 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !5736)
!5865 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !5736)
!5866 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !5736)
!5867 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !5736)
!5868 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !5736)
!5869 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !5736)
!5870 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !5736)
!5871 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !5736)
!5872 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !5736)
!5873 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !5736)
!5874 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !5736)
!5875 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !5736)
!5876 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !5736)
!5877 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !5736)
!5878 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !5736)
!5879 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !5736)
!5880 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !5736)
!5881 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !5736)
!5882 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !5736)
!5883 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !5736)
!5884 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !5736)
!5885 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !5736)
!5886 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !5736)
!5887 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !5736)
!5888 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !5736)
!5889 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !5736)
!5890 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !5736)
!5891 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !5736)
!5892 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !5736)
!5893 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !5736)
!5894 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !5736)
!5895 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !5736)
!5896 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !5736)
!5897 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !5736)
!5898 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !5736)
!5899 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !5736)
!5900 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !5736)
!5901 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !5736)
!5902 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !5736)
!5903 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !5736)
!5904 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !5736)
!5905 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !5736)
!5906 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !5736)
!5907 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !5736)
!5908 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !5736)
!5909 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !5736)
!5910 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !5736)
!5911 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !5736)
!5912 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !5736)
!5913 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !5736)
!5914 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !5736)
!5915 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !5736)
!5916 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !5736)
!5917 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !5736)
!5918 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !5736)
!5919 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !5736)
!5920 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !5736)
!5921 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !5736)
!5922 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !5736)
!5923 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !5736)
!5924 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !5736)
!5925 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !5736)
!5926 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !5736)
!5927 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !5736)
!5928 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !5736)
!5929 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !5736)
!5930 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !5736)
!5931 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !5736)
!5932 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !5736)
!5933 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !5736)
!5934 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !5736)
!5935 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !5736)
!5936 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !5736)
!5937 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !5736)
!5938 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !5736)
!5939 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !5736)
!5940 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !5736)
!5941 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !5736)
!5942 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !5736)
!5943 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !5736)
!5944 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !5736)
!5945 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !5736)
!5946 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !5736)
!5947 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !5736)
!5948 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !5736)
!5949 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !5736)
!5950 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !5736)
!5951 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !5736)
!5952 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !5736)
!5953 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !5736)
!5954 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !5736)
!5955 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !5736)
!5956 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !5736)
!5957 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !5736)
!5958 = !DILocation(line: 427, column: 13, scope: !5724)
!5959 = !DILocation(line: 427, column: 14, scope: !5724)
!5960 = !DILocation(line: 427, column: 17, scope: !5724)
!5961 = !DILocation(line: 427, column: 23, scope: !5724)
!5962 = !DILocation(line: 427, column: 11, scope: !5724)
!5963 = !DILocation(line: 428, column: 38, scope: !5724)
!5964 = !DILocation(line: 428, column: 54, scope: !5724)
!5965 = !DILocation(line: 428, column: 57, scope: !5724)
!5966 = !DILocation(line: 428, column: 63, scope: !5724)
!5967 = !DILocation(line: 428, column: 42, scope: !5724)
!5968 = !DILocation(line: 428, column: 72, scope: !5724)
!5969 = !DILocation(line: 428, column: 91, scope: !5724)
!5970 = !DILocation(line: 428, column: 94, scope: !5724)
!5971 = !DILocation(line: 428, column: 100, scope: !5724)
!5972 = !DILocation(line: 428, column: 79, scope: !5724)
!5973 = !DILocation(line: 428, column: 109, scope: !5724)
!5974 = !DILocation(line: 428, column: 29, scope: !5724)
!5975 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !5723)
!5976 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !5723)
!5977 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !5723)
!5978 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !5723)
!5979 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !5723)
!5980 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !5723)
!5981 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !5723)
!5982 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !5723)
!5983 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !5723)
!5984 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !5723)
!5985 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !5723)
!5986 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !5723)
!5987 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !5723)
!5988 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !5723)
!5989 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !5723)
!5990 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !5723)
!5991 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !5723)
!5992 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !5723)
!5993 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !5723)
!5994 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !5723)
!5995 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !5723)
!5996 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !5723)
!5997 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !5723)
!5998 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !5723)
!5999 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !5723)
!6000 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !5723)
!6001 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !5723)
!6002 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !5723)
!6003 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !5723)
!6004 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !5723)
!6005 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !5723)
!6006 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !5723)
!6007 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !5723)
!6008 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !5723)
!6009 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !5723)
!6010 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !5723)
!6011 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !5723)
!6012 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !5723)
!6013 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !5723)
!6014 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !5723)
!6015 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !5723)
!6016 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !5723)
!6017 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !5723)
!6018 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !5723)
!6019 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !5723)
!6020 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !5723)
!6021 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !5723)
!6022 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !5723)
!6023 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !5723)
!6024 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !5723)
!6025 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !5723)
!6026 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !5723)
!6027 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !5723)
!6028 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !5723)
!6029 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !5723)
!6030 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !5723)
!6031 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !5723)
!6032 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !5723)
!6033 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !5723)
!6034 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !5723)
!6035 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !5723)
!6036 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !5723)
!6037 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !5723)
!6038 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !5723)
!6039 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !5723)
!6040 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !5723)
!6041 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !5723)
!6042 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !5723)
!6043 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !5723)
!6044 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !5723)
!6045 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !5723)
!6046 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !5723)
!6047 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !5723)
!6048 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !5723)
!6049 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !5723)
!6050 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !5723)
!6051 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !5723)
!6052 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !5723)
!6053 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !5723)
!6054 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !5723)
!6055 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !5723)
!6056 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !5723)
!6057 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !5723)
!6058 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !5723)
!6059 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !5723)
!6060 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !5723)
!6061 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !5723)
!6062 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !5723)
!6063 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !5723)
!6064 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !5723)
!6065 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !5723)
!6066 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !5723)
!6067 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !5723)
!6068 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !5723)
!6069 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !5723)
!6070 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !5723)
!6071 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !5723)
!6072 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !5723)
!6073 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !5723)
!6074 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !5723)
!6075 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !5723)
!6076 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !5723)
!6077 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !5723)
!6078 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !5723)
!6079 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !5723)
!6080 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !5723)
!6081 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !5723)
!6082 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !5723)
!6083 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !5723)
!6084 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !5723)
!6085 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !5723)
!6086 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !5723)
!6087 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !5723)
!6088 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !5723)
!6089 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !5723)
!6090 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !5723)
!6091 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !5723)
!6092 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !5723)
!6093 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !5723)
!6094 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !5723)
!6095 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !5723)
!6096 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !5723)
!6097 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !5723)
!6098 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !5723)
!6099 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !5723)
!6100 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !5723)
!6101 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !5723)
!6102 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !5723)
!6103 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !5723)
!6104 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !5723)
!6105 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !5723)
!6106 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !5723)
!6107 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !5723)
!6108 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !5723)
!6109 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !5723)
!6110 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !5723)
!6111 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !5723)
!6112 = !DILocation(line: 428, column: 14, scope: !5724)
!6113 = !DILocation(line: 428, column: 15, scope: !5724)
!6114 = !DILocation(line: 428, column: 18, scope: !5724)
!6115 = !DILocation(line: 428, column: 24, scope: !5724)
!6116 = !DILocation(line: 428, column: 119, scope: !5724)
!6117 = !DILocation(line: 428, column: 11, scope: !5724)
!6118 = !DILocation(line: 429, column: 25, scope: !5724)
!6119 = !DILocation(line: 429, column: 10, scope: !5724)
!6120 = !DILocation(line: 429, column: 13, scope: !5724)
!6121 = !DILocation(line: 429, column: 20, scope: !5724)
!6122 = !DILocation(line: 429, column: 23, scope: !5724)
!6123 = !DILocation(line: 426, column: 5, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !5721, file: !888, discriminator: 2)
!6125 = distinct !{!6125, !5802}
!6126 = !DILocation(line: 432, column: 5, scope: !5721)
!6127 = !DILocation(line: 433, column: 1, scope: !5721)
!6128 = distinct !DISubprogram(name: "read_motion_values", scope: !888, file: !888, line: 338, type: !4542, isLocal: true, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!6129 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !6130)
!6130 = distinct !DILocation(line: 359, column: 32, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !888, line: 358, column: 38)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !888, line: 357, column: 12)
!6133 = distinct !DILexicalBlock(scope: !6128, file: !888, line: 349, column: 9)
!6134 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !6130)
!6135 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !6130)
!6136 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !6130)
!6137 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !6130)
!6138 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !6130)
!6139 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !6130)
!6140 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !6130)
!6141 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !6130)
!6142 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !6130)
!6143 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !6130)
!6144 = !DILocalVariable(name: "avctx", arg: 1, scope: !6128, file: !888, line: 338, type: !1041)
!6145 = !DILocation(line: 338, column: 47, scope: !6128)
!6146 = !DILocalVariable(name: "gb", arg: 2, scope: !6128, file: !888, line: 338, type: !2417)
!6147 = !DILocation(line: 338, column: 69, scope: !6128)
!6148 = !DILocalVariable(name: "b", arg: 3, scope: !6128, file: !888, line: 338, type: !4544)
!6149 = !DILocation(line: 338, column: 81, scope: !6128)
!6150 = !DILocalVariable(name: "t", scope: !6128, file: !888, line: 340, type: !926)
!6151 = !DILocation(line: 340, column: 9, scope: !6128)
!6152 = !DILocalVariable(name: "sign", scope: !6128, file: !888, line: 340, type: !926)
!6153 = !DILocation(line: 340, column: 12, scope: !6128)
!6154 = !DILocalVariable(name: "v", scope: !6128, file: !888, line: 340, type: !926)
!6155 = !DILocation(line: 340, column: 18, scope: !6128)
!6156 = !DILocalVariable(name: "dec_end", scope: !6128, file: !888, line: 341, type: !1481)
!6157 = !DILocation(line: 341, column: 20, scope: !6128)
!6158 = !DILocation(line: 343, column: 10, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6128, file: !888, line: 343, column: 9)
!6160 = !DILocation(line: 343, column: 13, scope: !6159)
!6161 = !DILocation(line: 343, column: 21, scope: !6159)
!6162 = !DILocation(line: 343, column: 25, scope: !6163)
!6163 = !DILexicalBlockFile(scope: !6159, file: !888, discriminator: 1)
!6164 = !DILocation(line: 343, column: 28, scope: !6163)
!6165 = !DILocation(line: 343, column: 38, scope: !6163)
!6166 = !DILocation(line: 343, column: 41, scope: !6163)
!6167 = !DILocation(line: 343, column: 36, scope: !6163)
!6168 = !DILocation(line: 343, column: 9, scope: !6163)
!6169 = !DILocation(line: 343, column: 51, scope: !6170)
!6170 = !DILexicalBlockFile(scope: !6159, file: !888, discriminator: 2)
!6171 = !DILocation(line: 343, column: 74, scope: !6172)
!6172 = !DILexicalBlockFile(scope: !6128, file: !888, discriminator: 3)
!6173 = !DILocation(line: 343, column: 78, scope: !6172)
!6174 = !DILocation(line: 343, column: 81, scope: !6172)
!6175 = !DILocation(line: 343, column: 65, scope: !6172)
!6176 = !DILocation(line: 343, column: 63, scope: !6172)
!6177 = !DILocation(line: 343, column: 92, scope: !6172)
!6178 = !DILocation(line: 343, column: 91, scope: !6172)
!6179 = !DILocation(line: 343, column: 97, scope: !6180)
!6180 = !DILexicalBlockFile(scope: !6181, file: !888, discriminator: 4)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !888, line: 343, column: 95)
!6182 = distinct !DILexicalBlock(scope: !6128, file: !888, line: 343, column: 91)
!6183 = !DILocation(line: 343, column: 100, scope: !6180)
!6184 = !DILocation(line: 343, column: 108, scope: !6180)
!6185 = !DILocation(line: 343, column: 6, scope: !6180)
!6186 = !DILocation(line: 344, column: 15, scope: !6128)
!6187 = !DILocation(line: 344, column: 18, scope: !6128)
!6188 = !DILocation(line: 344, column: 28, scope: !6128)
!6189 = !DILocation(line: 344, column: 26, scope: !6128)
!6190 = !DILocation(line: 344, column: 13, scope: !6128)
!6191 = !DILocation(line: 345, column: 9, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6128, file: !888, line: 345, column: 9)
!6193 = !DILocation(line: 345, column: 19, scope: !6192)
!6194 = !DILocation(line: 345, column: 22, scope: !6192)
!6195 = !DILocation(line: 345, column: 17, scope: !6192)
!6196 = !DILocation(line: 345, column: 9, scope: !6128)
!6197 = !DILocation(line: 346, column: 16, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !888, line: 345, column: 32)
!6199 = !DILocation(line: 346, column: 9, scope: !6198)
!6200 = !DILocation(line: 347, column: 9, scope: !6198)
!6201 = !DILocation(line: 349, column: 19, scope: !6133)
!6202 = !DILocation(line: 349, column: 9, scope: !6133)
!6203 = !DILocation(line: 349, column: 9, scope: !6128)
!6204 = !DILocation(line: 350, column: 22, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6133, file: !888, line: 349, column: 24)
!6206 = !DILocation(line: 350, column: 13, scope: !6205)
!6207 = !DILocation(line: 350, column: 11, scope: !6205)
!6208 = !DILocation(line: 351, column: 13, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6205, file: !888, line: 351, column: 13)
!6210 = !DILocation(line: 351, column: 13, scope: !6205)
!6211 = !DILocation(line: 352, column: 31, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6209, file: !888, line: 351, column: 16)
!6213 = !DILocation(line: 352, column: 21, scope: !6212)
!6214 = !DILocation(line: 352, column: 20, scope: !6212)
!6215 = !DILocation(line: 352, column: 18, scope: !6212)
!6216 = !DILocation(line: 353, column: 18, scope: !6212)
!6217 = !DILocation(line: 353, column: 22, scope: !6212)
!6218 = !DILocation(line: 353, column: 20, scope: !6212)
!6219 = !DILocation(line: 353, column: 30, scope: !6212)
!6220 = !DILocation(line: 353, column: 28, scope: !6212)
!6221 = !DILocation(line: 353, column: 15, scope: !6212)
!6222 = !DILocation(line: 354, column: 9, scope: !6212)
!6223 = !DILocation(line: 355, column: 16, scope: !6205)
!6224 = !DILocation(line: 355, column: 19, scope: !6205)
!6225 = !DILocation(line: 355, column: 28, scope: !6205)
!6226 = !DILocation(line: 355, column: 9, scope: !6205)
!6227 = !DILocation(line: 355, column: 31, scope: !6205)
!6228 = !DILocation(line: 356, column: 23, scope: !6205)
!6229 = !DILocation(line: 356, column: 9, scope: !6205)
!6230 = !DILocation(line: 356, column: 12, scope: !6205)
!6231 = !DILocation(line: 356, column: 20, scope: !6205)
!6232 = !DILocation(line: 357, column: 5, scope: !6205)
!6233 = !DILocation(line: 358, column: 9, scope: !6132)
!6234 = !DILocation(line: 358, column: 16, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !6132, file: !888, discriminator: 1)
!6236 = !DILocation(line: 358, column: 19, scope: !6235)
!6237 = !DILocation(line: 358, column: 29, scope: !6235)
!6238 = !DILocation(line: 358, column: 27, scope: !6235)
!6239 = !DILocation(line: 358, column: 9, scope: !6235)
!6240 = !DILocation(line: 359, column: 41, scope: !6131)
!6241 = !DILocation(line: 359, column: 57, scope: !6131)
!6242 = !DILocation(line: 359, column: 60, scope: !6131)
!6243 = !DILocation(line: 359, column: 66, scope: !6131)
!6244 = !DILocation(line: 359, column: 45, scope: !6131)
!6245 = !DILocation(line: 359, column: 75, scope: !6131)
!6246 = !DILocation(line: 359, column: 94, scope: !6131)
!6247 = !DILocation(line: 359, column: 97, scope: !6131)
!6248 = !DILocation(line: 359, column: 103, scope: !6131)
!6249 = !DILocation(line: 359, column: 82, scope: !6131)
!6250 = !DILocation(line: 359, column: 112, scope: !6131)
!6251 = !DILocation(line: 359, column: 32, scope: !6131)
!6252 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !6130)
!6253 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !6130)
!6254 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !6130)
!6255 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !6130)
!6256 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !6130)
!6257 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !6130)
!6258 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !6130)
!6259 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !6130)
!6260 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !6130)
!6261 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !6130)
!6262 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !6130)
!6263 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !6130)
!6264 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !6130)
!6265 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !6130)
!6266 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !6130)
!6267 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !6130)
!6268 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !6130)
!6269 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !6130)
!6270 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !6130)
!6271 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !6130)
!6272 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !6130)
!6273 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !6130)
!6274 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !6130)
!6275 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !6130)
!6276 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !6130)
!6277 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !6130)
!6278 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !6130)
!6279 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !6130)
!6280 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !6130)
!6281 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !6130)
!6282 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !6130)
!6283 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !6130)
!6284 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !6130)
!6285 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !6130)
!6286 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !6130)
!6287 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !6130)
!6288 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !6130)
!6289 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !6130)
!6290 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !6130)
!6291 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !6130)
!6292 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !6130)
!6293 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !6130)
!6294 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !6130)
!6295 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !6130)
!6296 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !6130)
!6297 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !6130)
!6298 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !6130)
!6299 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !6130)
!6300 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !6130)
!6301 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !6130)
!6302 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !6130)
!6303 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !6130)
!6304 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !6130)
!6305 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !6130)
!6306 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !6130)
!6307 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !6130)
!6308 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !6130)
!6309 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !6130)
!6310 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !6130)
!6311 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !6130)
!6312 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !6130)
!6313 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !6130)
!6314 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !6130)
!6315 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !6130)
!6316 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !6130)
!6317 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !6130)
!6318 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !6130)
!6319 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !6130)
!6320 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !6130)
!6321 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !6130)
!6322 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !6130)
!6323 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !6130)
!6324 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !6130)
!6325 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !6130)
!6326 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !6130)
!6327 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !6130)
!6328 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !6130)
!6329 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !6130)
!6330 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !6130)
!6331 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !6130)
!6332 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !6130)
!6333 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !6130)
!6334 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !6130)
!6335 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !6130)
!6336 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !6130)
!6337 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !6130)
!6338 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !6130)
!6339 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !6130)
!6340 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !6130)
!6341 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !6130)
!6342 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !6130)
!6343 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !6130)
!6344 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !6130)
!6345 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !6130)
!6346 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !6130)
!6347 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !6130)
!6348 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !6130)
!6349 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !6130)
!6350 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !6130)
!6351 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !6130)
!6352 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !6130)
!6353 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !6130)
!6354 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !6130)
!6355 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !6130)
!6356 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !6130)
!6357 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !6130)
!6358 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !6130)
!6359 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !6130)
!6360 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !6130)
!6361 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !6130)
!6362 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !6130)
!6363 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !6130)
!6364 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !6130)
!6365 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !6130)
!6366 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !6130)
!6367 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !6130)
!6368 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !6130)
!6369 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !6130)
!6370 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !6130)
!6371 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !6130)
!6372 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !6130)
!6373 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !6130)
!6374 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !6130)
!6375 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !6130)
!6376 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !6130)
!6377 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !6130)
!6378 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !6130)
!6379 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !6130)
!6380 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !6130)
!6381 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !6130)
!6382 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !6130)
!6383 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !6130)
!6384 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !6130)
!6385 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !6130)
!6386 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !6130)
!6387 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !6130)
!6388 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !6130)
!6389 = !DILocation(line: 359, column: 17, scope: !6131)
!6390 = !DILocation(line: 359, column: 18, scope: !6131)
!6391 = !DILocation(line: 359, column: 21, scope: !6131)
!6392 = !DILocation(line: 359, column: 27, scope: !6131)
!6393 = !DILocation(line: 359, column: 15, scope: !6131)
!6394 = !DILocation(line: 360, column: 17, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6131, file: !888, line: 360, column: 17)
!6396 = !DILocation(line: 360, column: 17, scope: !6131)
!6397 = !DILocation(line: 361, column: 35, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6395, file: !888, line: 360, column: 20)
!6399 = !DILocation(line: 361, column: 25, scope: !6398)
!6400 = !DILocation(line: 361, column: 24, scope: !6398)
!6401 = !DILocation(line: 361, column: 22, scope: !6398)
!6402 = !DILocation(line: 362, column: 22, scope: !6398)
!6403 = !DILocation(line: 362, column: 26, scope: !6398)
!6404 = !DILocation(line: 362, column: 24, scope: !6398)
!6405 = !DILocation(line: 362, column: 34, scope: !6398)
!6406 = !DILocation(line: 362, column: 32, scope: !6398)
!6407 = !DILocation(line: 362, column: 19, scope: !6398)
!6408 = !DILocation(line: 363, column: 13, scope: !6398)
!6409 = !DILocation(line: 364, column: 29, scope: !6131)
!6410 = !DILocation(line: 364, column: 14, scope: !6131)
!6411 = !DILocation(line: 364, column: 17, scope: !6131)
!6412 = !DILocation(line: 364, column: 24, scope: !6131)
!6413 = !DILocation(line: 364, column: 27, scope: !6131)
!6414 = !DILocation(line: 358, column: 9, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6132, file: !888, discriminator: 2)
!6416 = distinct !{!6416, !6233}
!6417 = !DILocation(line: 367, column: 5, scope: !6128)
!6418 = !DILocation(line: 368, column: 1, scope: !6128)
!6419 = distinct !DISubprogram(name: "read_dcs", scope: !888, file: !888, line: 476, type: !6420, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!926, !1041, !2417, !4544, !926, !926}
!6422 = !DILocalVariable(name: "avctx", arg: 1, scope: !6419, file: !888, line: 476, type: !1041)
!6423 = !DILocation(line: 476, column: 37, scope: !6419)
!6424 = !DILocalVariable(name: "gb", arg: 2, scope: !6419, file: !888, line: 476, type: !2417)
!6425 = !DILocation(line: 476, column: 59, scope: !6419)
!6426 = !DILocalVariable(name: "b", arg: 3, scope: !6419, file: !888, line: 476, type: !4544)
!6427 = !DILocation(line: 476, column: 71, scope: !6419)
!6428 = !DILocalVariable(name: "start_bits", arg: 4, scope: !6419, file: !888, line: 477, type: !926)
!6429 = !DILocation(line: 477, column: 25, scope: !6419)
!6430 = !DILocalVariable(name: "has_sign", arg: 5, scope: !6419, file: !888, line: 477, type: !926)
!6431 = !DILocation(line: 477, column: 41, scope: !6419)
!6432 = !DILocalVariable(name: "i", scope: !6419, file: !888, line: 479, type: !926)
!6433 = !DILocation(line: 479, column: 9, scope: !6419)
!6434 = !DILocalVariable(name: "j", scope: !6419, file: !888, line: 479, type: !926)
!6435 = !DILocation(line: 479, column: 12, scope: !6419)
!6436 = !DILocalVariable(name: "len", scope: !6419, file: !888, line: 479, type: !926)
!6437 = !DILocation(line: 479, column: 15, scope: !6419)
!6438 = !DILocalVariable(name: "len2", scope: !6419, file: !888, line: 479, type: !926)
!6439 = !DILocation(line: 479, column: 20, scope: !6419)
!6440 = !DILocalVariable(name: "bsize", scope: !6419, file: !888, line: 479, type: !926)
!6441 = !DILocation(line: 479, column: 26, scope: !6419)
!6442 = !DILocalVariable(name: "sign", scope: !6419, file: !888, line: 479, type: !926)
!6443 = !DILocation(line: 479, column: 33, scope: !6419)
!6444 = !DILocalVariable(name: "v", scope: !6419, file: !888, line: 479, type: !926)
!6445 = !DILocation(line: 479, column: 39, scope: !6419)
!6446 = !DILocalVariable(name: "v2", scope: !6419, file: !888, line: 479, type: !926)
!6447 = !DILocation(line: 479, column: 42, scope: !6419)
!6448 = !DILocalVariable(name: "dst", scope: !6419, file: !888, line: 480, type: !940)
!6449 = !DILocation(line: 480, column: 14, scope: !6419)
!6450 = !DILocation(line: 480, column: 30, scope: !6419)
!6451 = !DILocation(line: 480, column: 33, scope: !6419)
!6452 = !DILocation(line: 480, column: 20, scope: !6419)
!6453 = !DILocalVariable(name: "dst_end", scope: !6419, file: !888, line: 481, type: !940)
!6454 = !DILocation(line: 481, column: 14, scope: !6419)
!6455 = !DILocation(line: 481, column: 34, scope: !6419)
!6456 = !DILocation(line: 481, column: 37, scope: !6419)
!6457 = !DILocation(line: 481, column: 24, scope: !6419)
!6458 = !DILocation(line: 483, column: 10, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6419, file: !888, line: 483, column: 9)
!6460 = !DILocation(line: 483, column: 13, scope: !6459)
!6461 = !DILocation(line: 483, column: 21, scope: !6459)
!6462 = !DILocation(line: 483, column: 25, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6459, file: !888, discriminator: 1)
!6464 = !DILocation(line: 483, column: 28, scope: !6463)
!6465 = !DILocation(line: 483, column: 38, scope: !6463)
!6466 = !DILocation(line: 483, column: 41, scope: !6463)
!6467 = !DILocation(line: 483, column: 36, scope: !6463)
!6468 = !DILocation(line: 483, column: 9, scope: !6463)
!6469 = !DILocation(line: 483, column: 51, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !6459, file: !888, discriminator: 2)
!6471 = !DILocation(line: 483, column: 76, scope: !6472)
!6472 = !DILexicalBlockFile(scope: !6419, file: !888, discriminator: 3)
!6473 = !DILocation(line: 483, column: 80, scope: !6472)
!6474 = !DILocation(line: 483, column: 83, scope: !6472)
!6475 = !DILocation(line: 483, column: 67, scope: !6472)
!6476 = !DILocation(line: 483, column: 65, scope: !6472)
!6477 = !DILocation(line: 483, column: 94, scope: !6472)
!6478 = !DILocation(line: 483, column: 93, scope: !6472)
!6479 = !DILocation(line: 483, column: 101, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !6481, file: !888, discriminator: 4)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !888, line: 483, column: 99)
!6482 = distinct !DILexicalBlock(scope: !6419, file: !888, line: 483, column: 93)
!6483 = !DILocation(line: 483, column: 104, scope: !6480)
!6484 = !DILocation(line: 483, column: 112, scope: !6480)
!6485 = !DILocation(line: 483, column: 6, scope: !6480)
!6486 = !DILocation(line: 484, column: 18, scope: !6419)
!6487 = !DILocation(line: 484, column: 22, scope: !6419)
!6488 = !DILocation(line: 484, column: 35, scope: !6419)
!6489 = !DILocation(line: 484, column: 33, scope: !6419)
!6490 = !DILocation(line: 484, column: 9, scope: !6419)
!6491 = !DILocation(line: 484, column: 7, scope: !6419)
!6492 = !DILocation(line: 485, column: 9, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6419, file: !888, line: 485, column: 9)
!6494 = !DILocation(line: 485, column: 11, scope: !6493)
!6495 = !DILocation(line: 485, column: 14, scope: !6496)
!6496 = !DILexicalBlockFile(scope: !6493, file: !888, discriminator: 1)
!6497 = !DILocation(line: 485, column: 9, scope: !6496)
!6498 = !DILocation(line: 486, column: 27, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6493, file: !888, line: 485, column: 24)
!6500 = !DILocation(line: 486, column: 17, scope: !6499)
!6501 = !DILocation(line: 486, column: 16, scope: !6499)
!6502 = !DILocation(line: 486, column: 14, scope: !6499)
!6503 = !DILocation(line: 487, column: 14, scope: !6499)
!6504 = !DILocation(line: 487, column: 18, scope: !6499)
!6505 = !DILocation(line: 487, column: 16, scope: !6499)
!6506 = !DILocation(line: 487, column: 26, scope: !6499)
!6507 = !DILocation(line: 487, column: 24, scope: !6499)
!6508 = !DILocation(line: 487, column: 11, scope: !6499)
!6509 = !DILocation(line: 488, column: 5, scope: !6499)
!6510 = !DILocation(line: 489, column: 9, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6419, file: !888, line: 489, column: 9)
!6512 = !DILocation(line: 489, column: 19, scope: !6511)
!6513 = !DILocation(line: 489, column: 17, scope: !6511)
!6514 = !DILocation(line: 489, column: 23, scope: !6511)
!6515 = !DILocation(line: 489, column: 9, scope: !6419)
!6516 = !DILocation(line: 490, column: 9, scope: !6511)
!6517 = !DILocation(line: 491, column: 14, scope: !6419)
!6518 = !DILocation(line: 491, column: 9, scope: !6419)
!6519 = !DILocation(line: 491, column: 12, scope: !6419)
!6520 = !DILocation(line: 492, column: 8, scope: !6419)
!6521 = !DILocation(line: 493, column: 12, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6419, file: !888, line: 493, column: 5)
!6523 = !DILocation(line: 493, column: 10, scope: !6522)
!6524 = !DILocation(line: 493, column: 17, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !6526, file: !888, discriminator: 1)
!6526 = distinct !DILexicalBlock(scope: !6522, file: !888, line: 493, column: 5)
!6527 = !DILocation(line: 493, column: 21, scope: !6525)
!6528 = !DILocation(line: 493, column: 19, scope: !6525)
!6529 = !DILocation(line: 493, column: 5, scope: !6525)
!6530 = !DILocation(line: 494, column: 18, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !888, line: 493, column: 34)
!6532 = !DILocation(line: 494, column: 24, scope: !6531)
!6533 = !DILocation(line: 494, column: 22, scope: !6531)
!6534 = !DILocation(line: 494, column: 27, scope: !6531)
!6535 = !DILocation(line: 494, column: 17, scope: !6531)
!6536 = !DILocation(line: 494, column: 17, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6531, file: !888, discriminator: 1)
!6538 = !DILocation(line: 494, column: 42, scope: !6539)
!6539 = !DILexicalBlockFile(scope: !6531, file: !888, discriminator: 2)
!6540 = !DILocation(line: 494, column: 48, scope: !6539)
!6541 = !DILocation(line: 494, column: 46, scope: !6539)
!6542 = !DILocation(line: 494, column: 17, scope: !6539)
!6543 = !DILocation(line: 494, column: 17, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6531, file: !888, discriminator: 3)
!6545 = !DILocation(line: 494, column: 14, scope: !6544)
!6546 = !DILocation(line: 495, column: 13, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6531, file: !888, line: 495, column: 13)
!6548 = !DILocation(line: 495, column: 23, scope: !6547)
!6549 = !DILocation(line: 495, column: 21, scope: !6547)
!6550 = !DILocation(line: 495, column: 29, scope: !6547)
!6551 = !DILocation(line: 495, column: 27, scope: !6547)
!6552 = !DILocation(line: 495, column: 13, scope: !6531)
!6553 = !DILocation(line: 496, column: 13, scope: !6547)
!6554 = !DILocation(line: 497, column: 26, scope: !6531)
!6555 = !DILocation(line: 497, column: 17, scope: !6531)
!6556 = !DILocation(line: 497, column: 15, scope: !6531)
!6557 = !DILocation(line: 498, column: 13, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6531, file: !888, line: 498, column: 13)
!6559 = !DILocation(line: 498, column: 13, scope: !6531)
!6560 = !DILocation(line: 499, column: 20, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !888, line: 499, column: 13)
!6562 = distinct !DILexicalBlock(scope: !6558, file: !888, line: 498, column: 20)
!6563 = !DILocation(line: 499, column: 18, scope: !6561)
!6564 = !DILocation(line: 499, column: 25, scope: !6565)
!6565 = !DILexicalBlockFile(scope: !6566, file: !888, discriminator: 1)
!6566 = distinct !DILexicalBlock(scope: !6561, file: !888, line: 499, column: 13)
!6567 = !DILocation(line: 499, column: 29, scope: !6565)
!6568 = !DILocation(line: 499, column: 27, scope: !6565)
!6569 = !DILocation(line: 499, column: 13, scope: !6565)
!6570 = !DILocation(line: 500, column: 31, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6566, file: !888, line: 499, column: 40)
!6572 = !DILocation(line: 500, column: 35, scope: !6571)
!6573 = !DILocation(line: 500, column: 22, scope: !6571)
!6574 = !DILocation(line: 500, column: 20, scope: !6571)
!6575 = !DILocation(line: 501, column: 21, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6571, file: !888, line: 501, column: 21)
!6577 = !DILocation(line: 501, column: 21, scope: !6571)
!6578 = !DILocation(line: 502, column: 39, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !888, line: 501, column: 25)
!6580 = !DILocation(line: 502, column: 29, scope: !6579)
!6581 = !DILocation(line: 502, column: 28, scope: !6579)
!6582 = !DILocation(line: 502, column: 26, scope: !6579)
!6583 = !DILocation(line: 503, column: 27, scope: !6579)
!6584 = !DILocation(line: 503, column: 32, scope: !6579)
!6585 = !DILocation(line: 503, column: 30, scope: !6579)
!6586 = !DILocation(line: 503, column: 40, scope: !6579)
!6587 = !DILocation(line: 503, column: 38, scope: !6579)
!6588 = !DILocation(line: 503, column: 24, scope: !6579)
!6589 = !DILocation(line: 504, column: 17, scope: !6579)
!6590 = !DILocation(line: 505, column: 22, scope: !6571)
!6591 = !DILocation(line: 505, column: 19, scope: !6571)
!6592 = !DILocation(line: 506, column: 26, scope: !6571)
!6593 = !DILocation(line: 506, column: 21, scope: !6571)
!6594 = !DILocation(line: 506, column: 24, scope: !6571)
!6595 = !DILocation(line: 507, column: 21, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6571, file: !888, line: 507, column: 21)
!6597 = !DILocation(line: 507, column: 23, scope: !6596)
!6598 = !DILocation(line: 507, column: 32, scope: !6596)
!6599 = !DILocation(line: 507, column: 35, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6596, file: !888, discriminator: 1)
!6601 = !DILocation(line: 507, column: 37, scope: !6600)
!6602 = !DILocation(line: 507, column: 21, scope: !6600)
!6603 = !DILocation(line: 508, column: 28, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6596, file: !888, line: 507, column: 46)
!6605 = !DILocation(line: 508, column: 76, scope: !6604)
!6606 = !DILocation(line: 508, column: 21, scope: !6604)
!6607 = !DILocation(line: 509, column: 21, scope: !6604)
!6608 = !DILocation(line: 511, column: 13, scope: !6571)
!6609 = !DILocation(line: 499, column: 36, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6566, file: !888, discriminator: 2)
!6611 = !DILocation(line: 499, column: 13, scope: !6610)
!6612 = distinct !{!6612, !6613}
!6613 = !DILocation(line: 499, column: 13, scope: !6562)
!6614 = !DILocation(line: 512, column: 9, scope: !6562)
!6615 = !DILocation(line: 513, column: 20, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !888, line: 513, column: 13)
!6617 = distinct !DILexicalBlock(scope: !6558, file: !888, line: 512, column: 16)
!6618 = !DILocation(line: 513, column: 18, scope: !6616)
!6619 = !DILocation(line: 513, column: 25, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6621, file: !888, discriminator: 1)
!6621 = distinct !DILexicalBlock(scope: !6616, file: !888, line: 513, column: 13)
!6622 = !DILocation(line: 513, column: 29, scope: !6620)
!6623 = !DILocation(line: 513, column: 27, scope: !6620)
!6624 = !DILocation(line: 513, column: 13, scope: !6620)
!6625 = !DILocation(line: 514, column: 26, scope: !6621)
!6626 = !DILocation(line: 514, column: 21, scope: !6621)
!6627 = !DILocation(line: 514, column: 24, scope: !6621)
!6628 = !DILocation(line: 514, column: 17, scope: !6621)
!6629 = !DILocation(line: 513, column: 36, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6621, file: !888, discriminator: 2)
!6631 = !DILocation(line: 513, column: 13, scope: !6630)
!6632 = distinct !{!6632, !6633}
!6633 = !DILocation(line: 513, column: 13, scope: !6617)
!6634 = !DILocation(line: 516, column: 5, scope: !6531)
!6635 = !DILocation(line: 493, column: 28, scope: !6636)
!6636 = !DILexicalBlockFile(scope: !6526, file: !888, discriminator: 2)
!6637 = !DILocation(line: 493, column: 5, scope: !6636)
!6638 = distinct !{!6638, !6639}
!6639 = !DILocation(line: 493, column: 5, scope: !6419)
!6640 = !DILocation(line: 518, column: 28, scope: !6419)
!6641 = !DILocation(line: 518, column: 18, scope: !6419)
!6642 = !DILocation(line: 518, column: 5, scope: !6419)
!6643 = !DILocation(line: 518, column: 8, scope: !6419)
!6644 = !DILocation(line: 518, column: 16, scope: !6419)
!6645 = !DILocation(line: 519, column: 5, scope: !6419)
!6646 = !DILocation(line: 520, column: 1, scope: !6419)
!6647 = distinct !DISubprogram(name: "read_runs", scope: !888, file: !888, line: 316, type: !4542, isLocal: true, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!6648 = !DILocation(line: 762, column: 74, scope: !4546, inlinedAt: !6649)
!6649 = distinct !DILocation(line: 333, column: 44, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !888, line: 331, column: 12)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !888, line: 327, column: 9)
!6652 = !DILocation(line: 762, column: 87, scope: !4546, inlinedAt: !6649)
!6653 = !DILocation(line: 763, column: 42, scope: !4546, inlinedAt: !6649)
!6654 = !DILocation(line: 763, column: 52, scope: !4546, inlinedAt: !6649)
!6655 = !DILocation(line: 783, column: 9, scope: !4546, inlinedAt: !6649)
!6656 = !DILocation(line: 785, column: 18, scope: !4546, inlinedAt: !6649)
!6657 = !DILocation(line: 785, column: 78, scope: !4546, inlinedAt: !6649)
!6658 = !DILocation(line: 785, column: 101, scope: !4546, inlinedAt: !6649)
!6659 = !DILocation(line: 788, column: 14, scope: !4569, inlinedAt: !6649)
!6660 = !DILocation(line: 788, column: 17, scope: !4569, inlinedAt: !6649)
!6661 = !DILocation(line: 788, column: 39, scope: !4569, inlinedAt: !6649)
!6662 = !DILocalVariable(name: "avctx", arg: 1, scope: !6647, file: !888, line: 316, type: !1041)
!6663 = !DILocation(line: 316, column: 38, scope: !6647)
!6664 = !DILocalVariable(name: "gb", arg: 2, scope: !6647, file: !888, line: 316, type: !2417)
!6665 = !DILocation(line: 316, column: 60, scope: !6647)
!6666 = !DILocalVariable(name: "b", arg: 3, scope: !6647, file: !888, line: 316, type: !4544)
!6667 = !DILocation(line: 316, column: 72, scope: !6647)
!6668 = !DILocalVariable(name: "t", scope: !6647, file: !888, line: 318, type: !926)
!6669 = !DILocation(line: 318, column: 9, scope: !6647)
!6670 = !DILocalVariable(name: "v", scope: !6647, file: !888, line: 318, type: !926)
!6671 = !DILocation(line: 318, column: 12, scope: !6647)
!6672 = !DILocalVariable(name: "dec_end", scope: !6647, file: !888, line: 319, type: !1481)
!6673 = !DILocation(line: 319, column: 20, scope: !6647)
!6674 = !DILocation(line: 321, column: 10, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6647, file: !888, line: 321, column: 9)
!6676 = !DILocation(line: 321, column: 13, scope: !6675)
!6677 = !DILocation(line: 321, column: 21, scope: !6675)
!6678 = !DILocation(line: 321, column: 25, scope: !6679)
!6679 = !DILexicalBlockFile(scope: !6675, file: !888, discriminator: 1)
!6680 = !DILocation(line: 321, column: 28, scope: !6679)
!6681 = !DILocation(line: 321, column: 38, scope: !6679)
!6682 = !DILocation(line: 321, column: 41, scope: !6679)
!6683 = !DILocation(line: 321, column: 36, scope: !6679)
!6684 = !DILocation(line: 321, column: 9, scope: !6679)
!6685 = !DILocation(line: 321, column: 51, scope: !6686)
!6686 = !DILexicalBlockFile(scope: !6675, file: !888, discriminator: 2)
!6687 = !DILocation(line: 321, column: 74, scope: !6688)
!6688 = !DILexicalBlockFile(scope: !6647, file: !888, discriminator: 3)
!6689 = !DILocation(line: 321, column: 78, scope: !6688)
!6690 = !DILocation(line: 321, column: 81, scope: !6688)
!6691 = !DILocation(line: 321, column: 65, scope: !6688)
!6692 = !DILocation(line: 321, column: 63, scope: !6688)
!6693 = !DILocation(line: 321, column: 92, scope: !6688)
!6694 = !DILocation(line: 321, column: 91, scope: !6688)
!6695 = !DILocation(line: 321, column: 97, scope: !6696)
!6696 = !DILexicalBlockFile(scope: !6697, file: !888, discriminator: 4)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !888, line: 321, column: 95)
!6698 = distinct !DILexicalBlock(scope: !6647, file: !888, line: 321, column: 91)
!6699 = !DILocation(line: 321, column: 100, scope: !6696)
!6700 = !DILocation(line: 321, column: 108, scope: !6696)
!6701 = !DILocation(line: 321, column: 6, scope: !6696)
!6702 = !DILocation(line: 322, column: 15, scope: !6647)
!6703 = !DILocation(line: 322, column: 18, scope: !6647)
!6704 = !DILocation(line: 322, column: 28, scope: !6647)
!6705 = !DILocation(line: 322, column: 26, scope: !6647)
!6706 = !DILocation(line: 322, column: 13, scope: !6647)
!6707 = !DILocation(line: 323, column: 9, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6647, file: !888, line: 323, column: 9)
!6709 = !DILocation(line: 323, column: 19, scope: !6708)
!6710 = !DILocation(line: 323, column: 22, scope: !6708)
!6711 = !DILocation(line: 323, column: 17, scope: !6708)
!6712 = !DILocation(line: 323, column: 9, scope: !6647)
!6713 = !DILocation(line: 324, column: 16, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6708, file: !888, line: 323, column: 32)
!6715 = !DILocation(line: 324, column: 9, scope: !6714)
!6716 = !DILocation(line: 325, column: 9, scope: !6714)
!6717 = !DILocation(line: 327, column: 19, scope: !6651)
!6718 = !DILocation(line: 327, column: 9, scope: !6651)
!6719 = !DILocation(line: 327, column: 9, scope: !6647)
!6720 = !DILocation(line: 328, column: 22, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6651, file: !888, line: 327, column: 24)
!6722 = !DILocation(line: 328, column: 13, scope: !6721)
!6723 = !DILocation(line: 328, column: 11, scope: !6721)
!6724 = !DILocation(line: 329, column: 16, scope: !6721)
!6725 = !DILocation(line: 329, column: 19, scope: !6721)
!6726 = !DILocation(line: 329, column: 28, scope: !6721)
!6727 = !DILocation(line: 329, column: 9, scope: !6721)
!6728 = !DILocation(line: 329, column: 31, scope: !6721)
!6729 = !DILocation(line: 330, column: 23, scope: !6721)
!6730 = !DILocation(line: 330, column: 9, scope: !6721)
!6731 = !DILocation(line: 330, column: 12, scope: !6721)
!6732 = !DILocation(line: 330, column: 20, scope: !6721)
!6733 = !DILocation(line: 331, column: 5, scope: !6721)
!6734 = !DILocation(line: 332, column: 9, scope: !6650)
!6735 = !DILocation(line: 332, column: 16, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6650, file: !888, discriminator: 1)
!6737 = !DILocation(line: 332, column: 19, scope: !6736)
!6738 = !DILocation(line: 332, column: 29, scope: !6736)
!6739 = !DILocation(line: 332, column: 27, scope: !6736)
!6740 = !DILocation(line: 332, column: 9, scope: !6736)
!6741 = !DILocation(line: 333, column: 53, scope: !6650)
!6742 = !DILocation(line: 333, column: 69, scope: !6650)
!6743 = !DILocation(line: 333, column: 72, scope: !6650)
!6744 = !DILocation(line: 333, column: 78, scope: !6650)
!6745 = !DILocation(line: 333, column: 57, scope: !6650)
!6746 = !DILocation(line: 333, column: 87, scope: !6650)
!6747 = !DILocation(line: 333, column: 106, scope: !6650)
!6748 = !DILocation(line: 333, column: 109, scope: !6650)
!6749 = !DILocation(line: 333, column: 115, scope: !6650)
!6750 = !DILocation(line: 333, column: 94, scope: !6650)
!6751 = !DILocation(line: 333, column: 124, scope: !6650)
!6752 = !DILocation(line: 333, column: 44, scope: !6650)
!6753 = !DILocation(line: 785, column: 30, scope: !4546, inlinedAt: !6649)
!6754 = !DILocation(line: 785, column: 34, scope: !4546, inlinedAt: !6649)
!6755 = !DILocation(line: 785, column: 118, scope: !4546, inlinedAt: !6649)
!6756 = !DILocation(line: 785, column: 122, scope: !4546, inlinedAt: !6649)
!6757 = !DILocation(line: 786, column: 49, scope: !4546, inlinedAt: !6649)
!6758 = !DILocation(line: 786, column: 53, scope: !4546, inlinedAt: !6649)
!6759 = !DILocation(line: 786, column: 63, scope: !4546, inlinedAt: !6649)
!6760 = !DILocation(line: 786, column: 72, scope: !4546, inlinedAt: !6649)
!6761 = !DILocation(line: 786, column: 60, scope: !4546, inlinedAt: !6649)
!6762 = !DILocation(line: 786, column: 81, scope: !4546, inlinedAt: !6649)
!6763 = !DILocation(line: 786, column: 88, scope: !4546, inlinedAt: !6649)
!6764 = !DILocation(line: 786, column: 97, scope: !4546, inlinedAt: !6649)
!6765 = !DILocation(line: 786, column: 84, scope: !4546, inlinedAt: !6649)
!6766 = !DILocation(line: 786, column: 14, scope: !4546, inlinedAt: !6649)
!6767 = !DILocation(line: 788, column: 66, scope: !4704, inlinedAt: !6649)
!6768 = !DILocation(line: 788, column: 76, scope: !4704, inlinedAt: !6649)
!6769 = !DILocation(line: 788, column: 54, scope: !4704, inlinedAt: !6649)
!6770 = !DILocation(line: 788, column: 52, scope: !4704, inlinedAt: !6649)
!6771 = !DILocation(line: 788, column: 96, scope: !4704, inlinedAt: !6649)
!6772 = !DILocation(line: 788, column: 90, scope: !4704, inlinedAt: !6649)
!6773 = !DILocation(line: 788, column: 88, scope: !4704, inlinedAt: !6649)
!6774 = !DILocation(line: 788, column: 117, scope: !4704, inlinedAt: !6649)
!6775 = !DILocation(line: 788, column: 111, scope: !4704, inlinedAt: !6649)
!6776 = !DILocation(line: 788, column: 109, scope: !4704, inlinedAt: !6649)
!6777 = !DILocation(line: 788, column: 132, scope: !4704, inlinedAt: !6649)
!6778 = !DILocation(line: 788, column: 142, scope: !4704, inlinedAt: !6649)
!6779 = !DILocation(line: 788, column: 146, scope: !4704, inlinedAt: !6649)
!6780 = !DILocation(line: 788, column: 149, scope: !4718, inlinedAt: !6649)
!6781 = !DILocation(line: 788, column: 151, scope: !4718, inlinedAt: !6649)
!6782 = !DILocation(line: 788, column: 132, scope: !4718, inlinedAt: !6649)
!6783 = !DILocation(line: 788, column: 171, scope: !4723, inlinedAt: !6649)
!6784 = !DILocation(line: 788, column: 189, scope: !4723, inlinedAt: !6649)
!6785 = !DILocation(line: 788, column: 201, scope: !4723, inlinedAt: !6649)
!6786 = !DILocation(line: 788, column: 198, scope: !4723, inlinedAt: !6649)
!6787 = !DILocation(line: 788, column: 186, scope: !4723, inlinedAt: !6649)
!6788 = !DILocation(line: 788, column: 170, scope: !4723, inlinedAt: !6649)
!6789 = !DILocation(line: 788, column: 211, scope: !4731, inlinedAt: !6649)
!6790 = !DILocation(line: 788, column: 223, scope: !4731, inlinedAt: !6649)
!6791 = !DILocation(line: 788, column: 220, scope: !4731, inlinedAt: !6649)
!6792 = !DILocation(line: 788, column: 170, scope: !4731, inlinedAt: !6649)
!6793 = !DILocation(line: 788, column: 233, scope: !4736, inlinedAt: !6649)
!6794 = !DILocation(line: 788, column: 170, scope: !4736, inlinedAt: !6649)
!6795 = !DILocation(line: 788, column: 170, scope: !4739, inlinedAt: !6649)
!6796 = !DILocation(line: 788, column: 167, scope: !4739, inlinedAt: !6649)
!6797 = !DILocation(line: 788, column: 294, scope: !4739, inlinedAt: !6649)
!6798 = !DILocation(line: 788, column: 298, scope: !4739, inlinedAt: !6649)
!6799 = !DILocation(line: 788, column: 308, scope: !4739, inlinedAt: !6649)
!6800 = !DILocation(line: 788, column: 317, scope: !4739, inlinedAt: !6649)
!6801 = !DILocation(line: 788, column: 305, scope: !4739, inlinedAt: !6649)
!6802 = !DILocation(line: 788, column: 326, scope: !4739, inlinedAt: !6649)
!6803 = !DILocation(line: 788, column: 333, scope: !4739, inlinedAt: !6649)
!6804 = !DILocation(line: 788, column: 342, scope: !4739, inlinedAt: !6649)
!6805 = !DILocation(line: 788, column: 329, scope: !4739, inlinedAt: !6649)
!6806 = !DILocation(line: 788, column: 259, scope: !4739, inlinedAt: !6649)
!6807 = !DILocation(line: 788, column: 359, scope: !4739, inlinedAt: !6649)
!6808 = !DILocation(line: 788, column: 358, scope: !4739, inlinedAt: !6649)
!6809 = !DILocation(line: 788, column: 356, scope: !4739, inlinedAt: !6649)
!6810 = !DILocation(line: 788, column: 382, scope: !4739, inlinedAt: !6649)
!6811 = !DILocation(line: 788, column: 392, scope: !4739, inlinedAt: !6649)
!6812 = !DILocation(line: 788, column: 370, scope: !4739, inlinedAt: !6649)
!6813 = !DILocation(line: 788, column: 403, scope: !4739, inlinedAt: !6649)
!6814 = !DILocation(line: 788, column: 401, scope: !4739, inlinedAt: !6649)
!6815 = !DILocation(line: 788, column: 368, scope: !4739, inlinedAt: !6649)
!6816 = !DILocation(line: 788, column: 422, scope: !4739, inlinedAt: !6649)
!6817 = !DILocation(line: 788, column: 416, scope: !4739, inlinedAt: !6649)
!6818 = !DILocation(line: 788, column: 414, scope: !4739, inlinedAt: !6649)
!6819 = !DILocation(line: 788, column: 443, scope: !4739, inlinedAt: !6649)
!6820 = !DILocation(line: 788, column: 437, scope: !4739, inlinedAt: !6649)
!6821 = !DILocation(line: 788, column: 435, scope: !4739, inlinedAt: !6649)
!6822 = !DILocation(line: 788, column: 458, scope: !4739, inlinedAt: !6649)
!6823 = !DILocation(line: 788, column: 468, scope: !4739, inlinedAt: !6649)
!6824 = !DILocation(line: 788, column: 472, scope: !4739, inlinedAt: !6649)
!6825 = !DILocation(line: 788, column: 475, scope: !4770, inlinedAt: !6649)
!6826 = !DILocation(line: 788, column: 477, scope: !4770, inlinedAt: !6649)
!6827 = !DILocation(line: 788, column: 458, scope: !4770, inlinedAt: !6649)
!6828 = !DILocation(line: 788, column: 497, scope: !4775, inlinedAt: !6649)
!6829 = !DILocation(line: 788, column: 515, scope: !4775, inlinedAt: !6649)
!6830 = !DILocation(line: 788, column: 527, scope: !4775, inlinedAt: !6649)
!6831 = !DILocation(line: 788, column: 524, scope: !4775, inlinedAt: !6649)
!6832 = !DILocation(line: 788, column: 512, scope: !4775, inlinedAt: !6649)
!6833 = !DILocation(line: 788, column: 496, scope: !4775, inlinedAt: !6649)
!6834 = !DILocation(line: 788, column: 540, scope: !4783, inlinedAt: !6649)
!6835 = !DILocation(line: 788, column: 552, scope: !4783, inlinedAt: !6649)
!6836 = !DILocation(line: 788, column: 549, scope: !4783, inlinedAt: !6649)
!6837 = !DILocation(line: 788, column: 496, scope: !4783, inlinedAt: !6649)
!6838 = !DILocation(line: 788, column: 565, scope: !4788, inlinedAt: !6649)
!6839 = !DILocation(line: 788, column: 496, scope: !4788, inlinedAt: !6649)
!6840 = !DILocation(line: 788, column: 496, scope: !4791, inlinedAt: !6649)
!6841 = !DILocation(line: 788, column: 493, scope: !4791, inlinedAt: !6649)
!6842 = !DILocation(line: 788, column: 626, scope: !4791, inlinedAt: !6649)
!6843 = !DILocation(line: 788, column: 630, scope: !4791, inlinedAt: !6649)
!6844 = !DILocation(line: 788, column: 640, scope: !4791, inlinedAt: !6649)
!6845 = !DILocation(line: 788, column: 649, scope: !4791, inlinedAt: !6649)
!6846 = !DILocation(line: 788, column: 637, scope: !4791, inlinedAt: !6649)
!6847 = !DILocation(line: 788, column: 658, scope: !4791, inlinedAt: !6649)
!6848 = !DILocation(line: 788, column: 665, scope: !4791, inlinedAt: !6649)
!6849 = !DILocation(line: 788, column: 674, scope: !4791, inlinedAt: !6649)
!6850 = !DILocation(line: 788, column: 661, scope: !4791, inlinedAt: !6649)
!6851 = !DILocation(line: 788, column: 591, scope: !4791, inlinedAt: !6649)
!6852 = !DILocation(line: 788, column: 691, scope: !4791, inlinedAt: !6649)
!6853 = !DILocation(line: 788, column: 690, scope: !4791, inlinedAt: !6649)
!6854 = !DILocation(line: 788, column: 688, scope: !4791, inlinedAt: !6649)
!6855 = !DILocation(line: 788, column: 714, scope: !4791, inlinedAt: !6649)
!6856 = !DILocation(line: 788, column: 724, scope: !4791, inlinedAt: !6649)
!6857 = !DILocation(line: 788, column: 702, scope: !4791, inlinedAt: !6649)
!6858 = !DILocation(line: 788, column: 735, scope: !4791, inlinedAt: !6649)
!6859 = !DILocation(line: 788, column: 733, scope: !4791, inlinedAt: !6649)
!6860 = !DILocation(line: 788, column: 700, scope: !4791, inlinedAt: !6649)
!6861 = !DILocation(line: 788, column: 754, scope: !4791, inlinedAt: !6649)
!6862 = !DILocation(line: 788, column: 748, scope: !4791, inlinedAt: !6649)
!6863 = !DILocation(line: 788, column: 746, scope: !4791, inlinedAt: !6649)
!6864 = !DILocation(line: 788, column: 775, scope: !4791, inlinedAt: !6649)
!6865 = !DILocation(line: 788, column: 769, scope: !4791, inlinedAt: !6649)
!6866 = !DILocation(line: 788, column: 767, scope: !4791, inlinedAt: !6649)
!6867 = !DILocation(line: 788, column: 786, scope: !4791, inlinedAt: !6649)
!6868 = !DILocation(line: 788, column: 788, scope: !4820, inlinedAt: !6649)
!6869 = !DILocation(line: 788, column: 809, scope: !4822, inlinedAt: !6649)
!6870 = !DILocation(line: 788, column: 804, scope: !4822, inlinedAt: !6649)
!6871 = !DILocation(line: 788, column: 826, scope: !4822, inlinedAt: !6649)
!6872 = !DILocation(line: 788, column: 844, scope: !4822, inlinedAt: !6649)
!6873 = !DILocation(line: 788, column: 856, scope: !4822, inlinedAt: !6649)
!6874 = !DILocation(line: 788, column: 853, scope: !4822, inlinedAt: !6649)
!6875 = !DILocation(line: 788, column: 841, scope: !4822, inlinedAt: !6649)
!6876 = !DILocation(line: 788, column: 825, scope: !4822, inlinedAt: !6649)
!6877 = !DILocation(line: 788, column: 863, scope: !4832, inlinedAt: !6649)
!6878 = !DILocation(line: 788, column: 875, scope: !4832, inlinedAt: !6649)
!6879 = !DILocation(line: 788, column: 872, scope: !4832, inlinedAt: !6649)
!6880 = !DILocation(line: 788, column: 825, scope: !4832, inlinedAt: !6649)
!6881 = !DILocation(line: 788, column: 882, scope: !4837, inlinedAt: !6649)
!6882 = !DILocation(line: 788, column: 825, scope: !4837, inlinedAt: !6649)
!6883 = !DILocation(line: 788, column: 825, scope: !4840, inlinedAt: !6649)
!6884 = !DILocation(line: 788, column: 822, scope: !4840, inlinedAt: !6649)
!6885 = !DILocation(line: 790, column: 18, scope: !4546, inlinedAt: !6649)
!6886 = !DILocation(line: 790, column: 6, scope: !4546, inlinedAt: !6649)
!6887 = !DILocation(line: 790, column: 10, scope: !4546, inlinedAt: !6649)
!6888 = !DILocation(line: 790, column: 16, scope: !4546, inlinedAt: !6649)
!6889 = !DILocation(line: 792, column: 12, scope: !4546, inlinedAt: !6649)
!6890 = !DILocation(line: 333, column: 29, scope: !6650)
!6891 = !DILocation(line: 333, column: 30, scope: !6650)
!6892 = !DILocation(line: 333, column: 33, scope: !6650)
!6893 = !DILocation(line: 333, column: 39, scope: !6650)
!6894 = !DILocation(line: 333, column: 14, scope: !6650)
!6895 = !DILocation(line: 333, column: 17, scope: !6650)
!6896 = !DILocation(line: 333, column: 24, scope: !6650)
!6897 = !DILocation(line: 333, column: 27, scope: !6650)
!6898 = !DILocation(line: 332, column: 9, scope: !6899)
!6899 = !DILexicalBlockFile(scope: !6650, file: !888, discriminator: 2)
!6900 = distinct !{!6900, !6734}
!6901 = !DILocation(line: 335, column: 5, scope: !6647)
!6902 = !DILocation(line: 336, column: 1, scope: !6647)
!6903 = distinct !DISubprogram(name: "get_value", scope: !888, file: !888, line: 528, type: !6904, isLocal: true, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!926, !1739, !926}
!6906 = !DILocalVariable(name: "c", arg: 1, scope: !6903, file: !888, line: 528, type: !1739)
!6907 = !DILocation(line: 528, column: 42, scope: !6903)
!6908 = !DILocalVariable(name: "bundle", arg: 2, scope: !6903, file: !888, line: 528, type: !926)
!6909 = !DILocation(line: 528, column: 49, scope: !6903)
!6910 = !DILocalVariable(name: "ret", scope: !6903, file: !888, line: 530, type: !926)
!6911 = !DILocation(line: 530, column: 9, scope: !6903)
!6912 = !DILocation(line: 532, column: 9, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6903, file: !888, line: 532, column: 9)
!6914 = !DILocation(line: 532, column: 16, scope: !6913)
!6915 = !DILocation(line: 532, column: 33, scope: !6913)
!6916 = !DILocation(line: 532, column: 36, scope: !6917)
!6917 = !DILexicalBlockFile(scope: !6913, file: !888, discriminator: 1)
!6918 = !DILocation(line: 532, column: 43, scope: !6917)
!6919 = !DILocation(line: 532, column: 9, scope: !6917)
!6920 = !DILocation(line: 533, column: 27, scope: !6913)
!6921 = !DILocation(line: 533, column: 17, scope: !6913)
!6922 = !DILocation(line: 533, column: 20, scope: !6913)
!6923 = !DILocation(line: 533, column: 35, scope: !6913)
!6924 = !DILocation(line: 533, column: 42, scope: !6913)
!6925 = !DILocation(line: 533, column: 16, scope: !6913)
!6926 = !DILocation(line: 533, column: 9, scope: !6913)
!6927 = !DILocation(line: 534, column: 9, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6903, file: !888, line: 534, column: 9)
!6929 = !DILocation(line: 534, column: 16, scope: !6928)
!6930 = !DILocation(line: 534, column: 34, scope: !6928)
!6931 = !DILocation(line: 534, column: 37, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6928, file: !888, discriminator: 1)
!6933 = !DILocation(line: 534, column: 44, scope: !6932)
!6934 = !DILocation(line: 534, column: 9, scope: !6932)
!6935 = !DILocation(line: 535, column: 35, scope: !6928)
!6936 = !DILocation(line: 535, column: 25, scope: !6928)
!6937 = !DILocation(line: 535, column: 28, scope: !6928)
!6938 = !DILocation(line: 535, column: 43, scope: !6928)
!6939 = !DILocation(line: 535, column: 50, scope: !6928)
!6940 = !DILocation(line: 535, column: 24, scope: !6928)
!6941 = !DILocation(line: 535, column: 16, scope: !6928)
!6942 = !DILocation(line: 535, column: 9, scope: !6928)
!6943 = !DILocation(line: 536, column: 32, scope: !6903)
!6944 = !DILocation(line: 536, column: 22, scope: !6903)
!6945 = !DILocation(line: 536, column: 25, scope: !6903)
!6946 = !DILocation(line: 536, column: 40, scope: !6903)
!6947 = !DILocation(line: 536, column: 11, scope: !6903)
!6948 = !DILocation(line: 536, column: 9, scope: !6903)
!6949 = !DILocation(line: 537, column: 15, scope: !6903)
!6950 = !DILocation(line: 537, column: 5, scope: !6903)
!6951 = !DILocation(line: 537, column: 8, scope: !6903)
!6952 = !DILocation(line: 537, column: 23, scope: !6903)
!6953 = !DILocation(line: 537, column: 31, scope: !6903)
!6954 = !DILocation(line: 538, column: 12, scope: !6903)
!6955 = !DILocation(line: 538, column: 5, scope: !6903)
!6956 = !DILocation(line: 539, column: 1, scope: !6903)
!6957 = distinct !DISubprogram(name: "read_dct_coeffs", scope: !888, file: !888, line: 612, type: !6958, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!926, !1739, !2417, !1786, !1481, !1330, !1330, !926}
!6960 = !DILocalVariable(name: "c", arg: 1, scope: !6957, file: !888, line: 612, type: !1739)
!6961 = !DILocation(line: 612, column: 41, scope: !6957)
!6962 = !DILocalVariable(name: "gb", arg: 2, scope: !6957, file: !888, line: 612, type: !2417)
!6963 = !DILocation(line: 612, column: 59, scope: !6957)
!6964 = !DILocalVariable(name: "block", arg: 3, scope: !6957, file: !888, line: 612, type: !1786)
!6965 = !DILocation(line: 612, column: 71, scope: !6957)
!6966 = !DILocalVariable(name: "scan", arg: 4, scope: !6957, file: !888, line: 613, type: !1481)
!6967 = !DILocation(line: 613, column: 43, scope: !6957)
!6968 = !DILocalVariable(name: "coef_count_", arg: 5, scope: !6957, file: !888, line: 613, type: !1330)
!6969 = !DILocation(line: 613, column: 54, scope: !6957)
!6970 = !DILocalVariable(name: "coef_idx", arg: 6, scope: !6957, file: !888, line: 614, type: !1330)
!6971 = !DILocation(line: 614, column: 32, scope: !6957)
!6972 = !DILocalVariable(name: "q", arg: 7, scope: !6957, file: !888, line: 614, type: !926)
!6973 = !DILocation(line: 614, column: 50, scope: !6957)
!6974 = !DILocalVariable(name: "coef_list", scope: !6957, file: !888, line: 616, type: !6975)
!6975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 4096, align: 32, elements: !6976)
!6976 = !{!6977}
!6977 = !DISubrange(count: 128)
!6978 = !DILocation(line: 616, column: 9, scope: !6957)
!6979 = !DILocalVariable(name: "mode_list", scope: !6957, file: !888, line: 617, type: !6975)
!6980 = !DILocation(line: 617, column: 9, scope: !6957)
!6981 = !DILocalVariable(name: "i", scope: !6957, file: !888, line: 618, type: !926)
!6982 = !DILocation(line: 618, column: 9, scope: !6957)
!6983 = !DILocalVariable(name: "t", scope: !6957, file: !888, line: 618, type: !926)
!6984 = !DILocation(line: 618, column: 12, scope: !6957)
!6985 = !DILocalVariable(name: "bits", scope: !6957, file: !888, line: 618, type: !926)
!6986 = !DILocation(line: 618, column: 15, scope: !6957)
!6987 = !DILocalVariable(name: "ccoef", scope: !6957, file: !888, line: 618, type: !926)
!6988 = !DILocation(line: 618, column: 21, scope: !6957)
!6989 = !DILocalVariable(name: "mode", scope: !6957, file: !888, line: 618, type: !926)
!6990 = !DILocation(line: 618, column: 28, scope: !6957)
!6991 = !DILocalVariable(name: "sign", scope: !6957, file: !888, line: 618, type: !926)
!6992 = !DILocation(line: 618, column: 34, scope: !6957)
!6993 = !DILocalVariable(name: "list_start", scope: !6957, file: !888, line: 619, type: !926)
!6994 = !DILocation(line: 619, column: 9, scope: !6957)
!6995 = !DILocalVariable(name: "list_end", scope: !6957, file: !888, line: 619, type: !926)
!6996 = !DILocation(line: 619, column: 26, scope: !6957)
!6997 = !DILocalVariable(name: "list_pos", scope: !6957, file: !888, line: 619, type: !926)
!6998 = !DILocation(line: 619, column: 41, scope: !6957)
!6999 = !DILocalVariable(name: "coef_count", scope: !6957, file: !888, line: 620, type: !926)
!7000 = !DILocation(line: 620, column: 9, scope: !6957)
!7001 = !DILocalVariable(name: "quant_idx", scope: !6957, file: !888, line: 621, type: !926)
!7002 = !DILocation(line: 621, column: 9, scope: !6957)
!7003 = !DILocation(line: 623, column: 15, scope: !6957)
!7004 = !DILocation(line: 623, column: 5, scope: !6957)
!7005 = !DILocation(line: 623, column: 25, scope: !6957)
!7006 = !DILocation(line: 623, column: 48, scope: !6957)
!7007 = !DILocation(line: 623, column: 30, scope: !6957)
!7008 = !DILocation(line: 623, column: 52, scope: !6957)
!7009 = !DILocation(line: 624, column: 15, scope: !6957)
!7010 = !DILocation(line: 624, column: 5, scope: !6957)
!7011 = !DILocation(line: 624, column: 25, scope: !6957)
!7012 = !DILocation(line: 624, column: 49, scope: !6957)
!7013 = !DILocation(line: 624, column: 31, scope: !6957)
!7014 = !DILocation(line: 624, column: 53, scope: !6957)
!7015 = !DILocation(line: 625, column: 15, scope: !6957)
!7016 = !DILocation(line: 625, column: 5, scope: !6957)
!7017 = !DILocation(line: 625, column: 25, scope: !6957)
!7018 = !DILocation(line: 625, column: 49, scope: !6957)
!7019 = !DILocation(line: 625, column: 31, scope: !6957)
!7020 = !DILocation(line: 625, column: 53, scope: !6957)
!7021 = !DILocation(line: 626, column: 15, scope: !6957)
!7022 = !DILocation(line: 626, column: 5, scope: !6957)
!7023 = !DILocation(line: 626, column: 25, scope: !6957)
!7024 = !DILocation(line: 626, column: 48, scope: !6957)
!7025 = !DILocation(line: 626, column: 30, scope: !6957)
!7026 = !DILocation(line: 626, column: 52, scope: !6957)
!7027 = !DILocation(line: 627, column: 15, scope: !6957)
!7028 = !DILocation(line: 627, column: 5, scope: !6957)
!7029 = !DILocation(line: 627, column: 25, scope: !6957)
!7030 = !DILocation(line: 627, column: 48, scope: !6957)
!7031 = !DILocation(line: 627, column: 30, scope: !6957)
!7032 = !DILocation(line: 627, column: 52, scope: !6957)
!7033 = !DILocation(line: 628, column: 15, scope: !6957)
!7034 = !DILocation(line: 628, column: 5, scope: !6957)
!7035 = !DILocation(line: 628, column: 25, scope: !6957)
!7036 = !DILocation(line: 628, column: 48, scope: !6957)
!7037 = !DILocation(line: 628, column: 30, scope: !6957)
!7038 = !DILocation(line: 628, column: 52, scope: !6957)
!7039 = !DILocation(line: 630, column: 26, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !6957, file: !888, line: 630, column: 5)
!7041 = !DILocation(line: 630, column: 17, scope: !7040)
!7042 = !DILocation(line: 630, column: 33, scope: !7040)
!7043 = !DILocation(line: 630, column: 15, scope: !7040)
!7044 = !DILocation(line: 630, column: 10, scope: !7040)
!7045 = !DILocation(line: 630, column: 38, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7047, file: !888, discriminator: 1)
!7047 = distinct !DILexicalBlock(scope: !7040, file: !888, line: 630, column: 5)
!7048 = !DILocation(line: 630, column: 43, scope: !7046)
!7049 = !DILocation(line: 630, column: 5, scope: !7046)
!7050 = !DILocation(line: 631, column: 20, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7047, file: !888, line: 630, column: 57)
!7052 = !DILocation(line: 631, column: 18, scope: !7051)
!7053 = !DILocation(line: 632, column: 9, scope: !7051)
!7054 = !DILocation(line: 632, column: 16, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !7051, file: !888, discriminator: 1)
!7056 = !DILocation(line: 632, column: 27, scope: !7055)
!7057 = !DILocation(line: 632, column: 25, scope: !7055)
!7058 = !DILocation(line: 632, column: 9, scope: !7055)
!7059 = !DILocation(line: 633, column: 29, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !888, line: 633, column: 17)
!7061 = distinct !DILexicalBlock(scope: !7051, file: !888, line: 632, column: 37)
!7062 = !DILocation(line: 633, column: 19, scope: !7060)
!7063 = !DILocation(line: 633, column: 51, scope: !7060)
!7064 = !DILocation(line: 633, column: 41, scope: !7060)
!7065 = !DILocation(line: 633, column: 39, scope: !7060)
!7066 = !DILocation(line: 633, column: 62, scope: !7060)
!7067 = !DILocation(line: 633, column: 76, scope: !7068)
!7068 = !DILexicalBlockFile(scope: !7060, file: !888, discriminator: 1)
!7069 = !DILocation(line: 633, column: 66, scope: !7068)
!7070 = !DILocation(line: 633, column: 17, scope: !7068)
!7071 = !DILocation(line: 634, column: 25, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7060, file: !888, line: 633, column: 81)
!7073 = !DILocation(line: 635, column: 17, scope: !7072)
!7074 = distinct !{!7074, !7053}
!7075 = !DILocation(line: 637, column: 31, scope: !7061)
!7076 = !DILocation(line: 637, column: 21, scope: !7061)
!7077 = !DILocation(line: 637, column: 19, scope: !7061)
!7078 = !DILocation(line: 638, column: 30, scope: !7061)
!7079 = !DILocation(line: 638, column: 20, scope: !7061)
!7080 = !DILocation(line: 638, column: 18, scope: !7061)
!7081 = !DILocation(line: 639, column: 21, scope: !7061)
!7082 = !DILocation(line: 639, column: 13, scope: !7061)
!7083 = !DILocation(line: 641, column: 39, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7061, file: !888, line: 639, column: 27)
!7085 = !DILocation(line: 641, column: 45, scope: !7084)
!7086 = !DILocation(line: 641, column: 27, scope: !7084)
!7087 = !DILocation(line: 641, column: 17, scope: !7084)
!7088 = !DILocation(line: 641, column: 37, scope: !7084)
!7089 = !DILocation(line: 642, column: 27, scope: !7084)
!7090 = !DILocation(line: 642, column: 17, scope: !7084)
!7091 = !DILocation(line: 642, column: 37, scope: !7084)
!7092 = !DILocation(line: 644, column: 21, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7084, file: !888, line: 644, column: 21)
!7094 = !DILocation(line: 644, column: 26, scope: !7093)
!7095 = !DILocation(line: 644, column: 21, scope: !7084)
!7096 = !DILocation(line: 645, column: 31, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7093, file: !888, line: 644, column: 32)
!7098 = !DILocation(line: 645, column: 21, scope: !7097)
!7099 = !DILocation(line: 645, column: 41, scope: !7097)
!7100 = !DILocation(line: 646, column: 39, scope: !7097)
!7101 = !DILocation(line: 646, column: 21, scope: !7097)
!7102 = !DILocation(line: 646, column: 43, scope: !7097)
!7103 = !DILocation(line: 647, column: 17, scope: !7097)
!7104 = !DILocation(line: 648, column: 24, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7084, file: !888, line: 648, column: 17)
!7106 = !DILocation(line: 648, column: 22, scope: !7105)
!7107 = !DILocation(line: 648, column: 29, scope: !7108)
!7108 = !DILexicalBlockFile(scope: !7109, file: !888, discriminator: 1)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !888, line: 648, column: 17)
!7110 = !DILocation(line: 648, column: 31, scope: !7108)
!7111 = !DILocation(line: 648, column: 17, scope: !7108)
!7112 = !DILocation(line: 649, column: 35, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !888, line: 649, column: 25)
!7114 = distinct !DILexicalBlock(scope: !7109, file: !888, line: 648, column: 50)
!7115 = !DILocation(line: 649, column: 25, scope: !7113)
!7116 = !DILocation(line: 649, column: 25, scope: !7114)
!7117 = !DILocation(line: 650, column: 51, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7113, file: !888, line: 649, column: 40)
!7119 = !DILocation(line: 650, column: 35, scope: !7118)
!7120 = !DILocation(line: 650, column: 25, scope: !7118)
!7121 = !DILocation(line: 650, column: 49, scope: !7118)
!7122 = !DILocation(line: 651, column: 36, scope: !7118)
!7123 = !DILocation(line: 651, column: 25, scope: !7118)
!7124 = !DILocation(line: 651, column: 48, scope: !7118)
!7125 = !DILocation(line: 652, column: 21, scope: !7118)
!7126 = !DILocation(line: 653, column: 30, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !888, line: 653, column: 29)
!7128 = distinct !DILexicalBlock(scope: !7113, file: !888, line: 652, column: 28)
!7129 = !DILocation(line: 653, column: 29, scope: !7128)
!7130 = !DILocation(line: 654, column: 48, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7127, file: !888, line: 653, column: 36)
!7132 = !DILocation(line: 654, column: 38, scope: !7131)
!7133 = !DILocation(line: 654, column: 52, scope: !7131)
!7134 = !DILocation(line: 654, column: 35, scope: !7131)
!7135 = !DILocation(line: 654, column: 31, scope: !7131)
!7136 = !DILocation(line: 655, column: 25, scope: !7131)
!7137 = !DILocation(line: 656, column: 42, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7127, file: !888, line: 655, column: 32)
!7139 = !DILocation(line: 656, column: 46, scope: !7138)
!7140 = !DILocation(line: 656, column: 33, scope: !7138)
!7141 = !DILocation(line: 656, column: 59, scope: !7138)
!7142 = !DILocation(line: 656, column: 56, scope: !7138)
!7143 = !DILocation(line: 656, column: 52, scope: !7138)
!7144 = !DILocation(line: 656, column: 31, scope: !7138)
!7145 = !DILocation(line: 657, column: 47, scope: !7138)
!7146 = !DILocation(line: 657, column: 37, scope: !7138)
!7147 = !DILocation(line: 657, column: 36, scope: !7138)
!7148 = !DILocation(line: 657, column: 34, scope: !7138)
!7149 = !DILocation(line: 658, column: 34, scope: !7138)
!7150 = !DILocation(line: 658, column: 38, scope: !7138)
!7151 = !DILocation(line: 658, column: 36, scope: !7138)
!7152 = !DILocation(line: 658, column: 46, scope: !7138)
!7153 = !DILocation(line: 658, column: 44, scope: !7138)
!7154 = !DILocation(line: 658, column: 31, scope: !7138)
!7155 = !DILocation(line: 660, column: 46, scope: !7128)
!7156 = !DILocation(line: 660, column: 36, scope: !7128)
!7157 = !DILocation(line: 660, column: 31, scope: !7128)
!7158 = !DILocation(line: 660, column: 25, scope: !7128)
!7159 = !DILocation(line: 660, column: 44, scope: !7128)
!7160 = !DILocation(line: 661, column: 50, scope: !7128)
!7161 = !DILocation(line: 661, column: 44, scope: !7128)
!7162 = !DILocation(line: 661, column: 25, scope: !7128)
!7163 = !DILocation(line: 661, column: 48, scope: !7128)
!7164 = !DILocation(line: 663, column: 17, scope: !7114)
!7165 = !DILocation(line: 648, column: 37, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7109, file: !888, discriminator: 2)
!7167 = !DILocation(line: 648, column: 46, scope: !7166)
!7168 = !DILocation(line: 648, column: 17, scope: !7166)
!7169 = distinct !{!7169, !7170}
!7170 = !DILocation(line: 648, column: 17, scope: !7084)
!7171 = !DILocation(line: 664, column: 17, scope: !7084)
!7172 = !DILocation(line: 666, column: 27, scope: !7084)
!7173 = !DILocation(line: 666, column: 17, scope: !7084)
!7174 = !DILocation(line: 666, column: 37, scope: !7084)
!7175 = !DILocation(line: 667, column: 24, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7084, file: !888, line: 667, column: 17)
!7177 = !DILocation(line: 667, column: 22, scope: !7176)
!7178 = !DILocation(line: 667, column: 29, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !7180, file: !888, discriminator: 1)
!7180 = distinct !DILexicalBlock(scope: !7176, file: !888, line: 667, column: 17)
!7181 = !DILocation(line: 667, column: 31, scope: !7179)
!7182 = !DILocation(line: 667, column: 17, scope: !7179)
!7183 = !DILocation(line: 668, column: 27, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7180, file: !888, line: 667, column: 41)
!7185 = !DILocation(line: 669, column: 43, scope: !7184)
!7186 = !DILocation(line: 669, column: 31, scope: !7184)
!7187 = !DILocation(line: 669, column: 21, scope: !7184)
!7188 = !DILocation(line: 669, column: 41, scope: !7184)
!7189 = !DILocation(line: 670, column: 39, scope: !7184)
!7190 = !DILocation(line: 670, column: 21, scope: !7184)
!7191 = !DILocation(line: 670, column: 43, scope: !7184)
!7192 = !DILocation(line: 671, column: 17, scope: !7184)
!7193 = !DILocation(line: 667, column: 37, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !7180, file: !888, discriminator: 2)
!7195 = !DILocation(line: 667, column: 17, scope: !7194)
!7196 = distinct !{!7196, !7197}
!7197 = !DILocation(line: 667, column: 17, scope: !7084)
!7198 = !DILocation(line: 672, column: 17, scope: !7084)
!7199 = !DILocation(line: 674, column: 22, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7084, file: !888, line: 674, column: 21)
!7201 = !DILocation(line: 674, column: 21, scope: !7084)
!7202 = !DILocation(line: 675, column: 40, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7200, file: !888, line: 674, column: 28)
!7204 = !DILocation(line: 675, column: 30, scope: !7203)
!7205 = !DILocation(line: 675, column: 44, scope: !7203)
!7206 = !DILocation(line: 675, column: 27, scope: !7203)
!7207 = !DILocation(line: 675, column: 23, scope: !7203)
!7208 = !DILocation(line: 676, column: 17, scope: !7203)
!7209 = !DILocation(line: 677, column: 34, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7200, file: !888, line: 676, column: 24)
!7211 = !DILocation(line: 677, column: 38, scope: !7210)
!7212 = !DILocation(line: 677, column: 25, scope: !7210)
!7213 = !DILocation(line: 677, column: 51, scope: !7210)
!7214 = !DILocation(line: 677, column: 48, scope: !7210)
!7215 = !DILocation(line: 677, column: 44, scope: !7210)
!7216 = !DILocation(line: 677, column: 23, scope: !7210)
!7217 = !DILocation(line: 678, column: 39, scope: !7210)
!7218 = !DILocation(line: 678, column: 29, scope: !7210)
!7219 = !DILocation(line: 678, column: 28, scope: !7210)
!7220 = !DILocation(line: 678, column: 26, scope: !7210)
!7221 = !DILocation(line: 679, column: 26, scope: !7210)
!7222 = !DILocation(line: 679, column: 30, scope: !7210)
!7223 = !DILocation(line: 679, column: 28, scope: !7210)
!7224 = !DILocation(line: 679, column: 38, scope: !7210)
!7225 = !DILocation(line: 679, column: 36, scope: !7210)
!7226 = !DILocation(line: 679, column: 23, scope: !7210)
!7227 = !DILocation(line: 681, column: 38, scope: !7084)
!7228 = !DILocation(line: 681, column: 28, scope: !7084)
!7229 = !DILocation(line: 681, column: 23, scope: !7084)
!7230 = !DILocation(line: 681, column: 17, scope: !7084)
!7231 = !DILocation(line: 681, column: 36, scope: !7084)
!7232 = !DILocation(line: 682, column: 42, scope: !7084)
!7233 = !DILocation(line: 682, column: 36, scope: !7084)
!7234 = !DILocation(line: 682, column: 17, scope: !7084)
!7235 = !DILocation(line: 682, column: 40, scope: !7084)
!7236 = !DILocation(line: 683, column: 27, scope: !7084)
!7237 = !DILocation(line: 683, column: 17, scope: !7084)
!7238 = !DILocation(line: 683, column: 37, scope: !7084)
!7239 = !DILocation(line: 684, column: 35, scope: !7084)
!7240 = !DILocation(line: 684, column: 17, scope: !7084)
!7241 = !DILocation(line: 684, column: 39, scope: !7084)
!7242 = !DILocation(line: 685, column: 17, scope: !7084)
!7243 = !DILocation(line: 632, column: 9, scope: !7244)
!7244 = !DILexicalBlockFile(scope: !7051, file: !888, discriminator: 2)
!7245 = !DILocation(line: 688, column: 5, scope: !7051)
!7246 = !DILocation(line: 630, column: 53, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7047, file: !888, discriminator: 2)
!7248 = !DILocation(line: 630, column: 5, scope: !7247)
!7249 = distinct !{!7249, !7250}
!7250 = !DILocation(line: 630, column: 5, scope: !6957)
!7251 = !DILocation(line: 690, column: 9, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !6957, file: !888, line: 690, column: 9)
!7253 = !DILocation(line: 690, column: 11, scope: !7252)
!7254 = !DILocation(line: 690, column: 9, scope: !6957)
!7255 = !DILocation(line: 691, column: 30, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7252, file: !888, line: 690, column: 18)
!7257 = !DILocation(line: 691, column: 21, scope: !7256)
!7258 = !DILocation(line: 691, column: 19, scope: !7256)
!7259 = !DILocation(line: 692, column: 5, scope: !7256)
!7260 = !DILocation(line: 693, column: 21, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7252, file: !888, line: 692, column: 12)
!7262 = !DILocation(line: 693, column: 19, scope: !7261)
!7263 = !DILocation(line: 694, column: 13, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !888, line: 694, column: 13)
!7265 = !DILocation(line: 694, column: 23, scope: !7264)
!7266 = !DILocation(line: 694, column: 13, scope: !7261)
!7267 = !DILocation(line: 695, column: 20, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7264, file: !888, line: 694, column: 30)
!7269 = !DILocation(line: 695, column: 23, scope: !7268)
!7270 = !DILocation(line: 695, column: 67, scope: !7268)
!7271 = !DILocation(line: 695, column: 13, scope: !7268)
!7272 = !DILocation(line: 696, column: 13, scope: !7268)
!7273 = !DILocation(line: 700, column: 20, scope: !6957)
!7274 = !DILocation(line: 700, column: 6, scope: !6957)
!7275 = !DILocation(line: 700, column: 18, scope: !6957)
!7276 = !DILocation(line: 702, column: 12, scope: !6957)
!7277 = !DILocation(line: 702, column: 5, scope: !6957)
!7278 = !DILocation(line: 703, column: 1, scope: !6957)
!7279 = distinct !DISubprogram(name: "unquantize_dct_coeffs", scope: !888, file: !888, line: 705, type: !7280, isLocal: true, isDefinition: true, scopeLine: 708, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7280 = !DISubroutineType(types: !7281)
!7281 = !{null, !1786, !7282, !926, !1330, !1481}
!7282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64, align: 64)
!7283 = !DILocalVariable(name: "block", arg: 1, scope: !7279, file: !888, line: 705, type: !1786)
!7284 = !DILocation(line: 705, column: 43, scope: !7279)
!7285 = !DILocalVariable(name: "quant", arg: 2, scope: !7279, file: !888, line: 705, type: !7282)
!7286 = !DILocation(line: 705, column: 68, scope: !7279)
!7287 = !DILocalVariable(name: "coef_count", arg: 3, scope: !7279, file: !888, line: 706, type: !926)
!7288 = !DILocation(line: 706, column: 39, scope: !7279)
!7289 = !DILocalVariable(name: "coef_idx", arg: 4, scope: !7279, file: !888, line: 706, type: !1330)
!7290 = !DILocation(line: 706, column: 55, scope: !7279)
!7291 = !DILocalVariable(name: "scan", arg: 5, scope: !7279, file: !888, line: 707, type: !1481)
!7292 = !DILocation(line: 707, column: 50, scope: !7279)
!7293 = !DILocalVariable(name: "i", scope: !7279, file: !888, line: 709, type: !926)
!7294 = !DILocation(line: 709, column: 9, scope: !7279)
!7295 = !DILocation(line: 710, column: 17, scope: !7279)
!7296 = !DILocation(line: 710, column: 28, scope: !7279)
!7297 = !DILocation(line: 710, column: 26, scope: !7279)
!7298 = !DILocation(line: 710, column: 38, scope: !7279)
!7299 = !DILocation(line: 710, column: 5, scope: !7279)
!7300 = !DILocation(line: 710, column: 14, scope: !7279)
!7301 = !DILocation(line: 711, column: 12, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7279, file: !888, line: 711, column: 5)
!7303 = !DILocation(line: 711, column: 10, scope: !7302)
!7304 = !DILocation(line: 711, column: 17, scope: !7305)
!7305 = !DILexicalBlockFile(scope: !7306, file: !888, discriminator: 1)
!7306 = distinct !DILexicalBlock(scope: !7302, file: !888, line: 711, column: 5)
!7307 = !DILocation(line: 711, column: 21, scope: !7305)
!7308 = !DILocation(line: 711, column: 19, scope: !7305)
!7309 = !DILocation(line: 711, column: 5, scope: !7305)
!7310 = !DILocalVariable(name: "idx", scope: !7311, file: !888, line: 712, type: !926)
!7311 = distinct !DILexicalBlock(scope: !7306, file: !888, line: 711, column: 38)
!7312 = !DILocation(line: 712, column: 13, scope: !7311)
!7313 = !DILocation(line: 712, column: 28, scope: !7311)
!7314 = !DILocation(line: 712, column: 19, scope: !7311)
!7315 = !DILocation(line: 713, column: 40, scope: !7311)
!7316 = !DILocation(line: 713, column: 35, scope: !7311)
!7317 = !DILocation(line: 713, column: 29, scope: !7311)
!7318 = !DILocation(line: 713, column: 54, scope: !7311)
!7319 = !DILocation(line: 713, column: 48, scope: !7311)
!7320 = !DILocation(line: 713, column: 46, scope: !7311)
!7321 = !DILocation(line: 713, column: 60, scope: !7311)
!7322 = !DILocation(line: 713, column: 20, scope: !7311)
!7323 = !DILocation(line: 713, column: 15, scope: !7311)
!7324 = !DILocation(line: 713, column: 9, scope: !7311)
!7325 = !DILocation(line: 713, column: 26, scope: !7311)
!7326 = !DILocation(line: 714, column: 5, scope: !7311)
!7327 = !DILocation(line: 711, column: 34, scope: !7328)
!7328 = !DILexicalBlockFile(scope: !7306, file: !888, discriminator: 2)
!7329 = !DILocation(line: 711, column: 5, scope: !7328)
!7330 = distinct !{!7330, !7331}
!7331 = !DILocation(line: 711, column: 5, scope: !7279)
!7332 = !DILocation(line: 715, column: 1, scope: !7279)
!7333 = distinct !DISubprogram(name: "bink_put_pixels", scope: !888, file: !888, line: 970, type: !7334, isLocal: true, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!926, !1739, !943, !943, !926, !943, !943}
!7336 = !DILocalVariable(name: "c", arg: 1, scope: !7333, file: !888, line: 970, type: !1739)
!7337 = !DILocation(line: 970, column: 41, scope: !7333)
!7338 = !DILocalVariable(name: "dst", arg: 2, scope: !7333, file: !888, line: 971, type: !943)
!7339 = !DILocation(line: 971, column: 37, scope: !7333)
!7340 = !DILocalVariable(name: "prev", arg: 3, scope: !7333, file: !888, line: 971, type: !943)
!7341 = !DILocation(line: 971, column: 51, scope: !7333)
!7342 = !DILocalVariable(name: "stride", arg: 4, scope: !7333, file: !888, line: 971, type: !926)
!7343 = !DILocation(line: 971, column: 61, scope: !7333)
!7344 = !DILocalVariable(name: "ref_start", arg: 5, scope: !7333, file: !888, line: 972, type: !943)
!7345 = !DILocation(line: 972, column: 37, scope: !7333)
!7346 = !DILocalVariable(name: "ref_end", arg: 6, scope: !7333, file: !888, line: 973, type: !943)
!7347 = !DILocation(line: 973, column: 37, scope: !7333)
!7348 = !DILocalVariable(name: "xoff", scope: !7333, file: !888, line: 975, type: !926)
!7349 = !DILocation(line: 975, column: 9, scope: !7333)
!7350 = !DILocation(line: 975, column: 26, scope: !7333)
!7351 = !DILocation(line: 975, column: 16, scope: !7333)
!7352 = !DILocalVariable(name: "yoff", scope: !7333, file: !888, line: 976, type: !926)
!7353 = !DILocation(line: 976, column: 9, scope: !7333)
!7354 = !DILocation(line: 976, column: 26, scope: !7333)
!7355 = !DILocation(line: 976, column: 16, scope: !7333)
!7356 = !DILocalVariable(name: "ref", scope: !7333, file: !888, line: 977, type: !943)
!7357 = !DILocation(line: 977, column: 14, scope: !7333)
!7358 = !DILocation(line: 977, column: 20, scope: !7333)
!7359 = !DILocation(line: 977, column: 27, scope: !7333)
!7360 = !DILocation(line: 977, column: 25, scope: !7333)
!7361 = !DILocation(line: 977, column: 34, scope: !7333)
!7362 = !DILocation(line: 977, column: 41, scope: !7333)
!7363 = !DILocation(line: 977, column: 39, scope: !7333)
!7364 = !DILocation(line: 977, column: 32, scope: !7333)
!7365 = !DILocation(line: 978, column: 9, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7333, file: !888, line: 978, column: 9)
!7367 = !DILocation(line: 978, column: 15, scope: !7366)
!7368 = !DILocation(line: 978, column: 13, scope: !7366)
!7369 = !DILocation(line: 978, column: 25, scope: !7366)
!7370 = !DILocation(line: 978, column: 28, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7366, file: !888, discriminator: 1)
!7372 = !DILocation(line: 978, column: 34, scope: !7371)
!7373 = !DILocation(line: 978, column: 32, scope: !7371)
!7374 = !DILocation(line: 978, column: 9, scope: !7371)
!7375 = !DILocation(line: 979, column: 16, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7366, file: !888, line: 978, column: 43)
!7377 = !DILocation(line: 979, column: 19, scope: !7376)
!7378 = !DILocation(line: 980, column: 16, scope: !7376)
!7379 = !DILocation(line: 980, column: 22, scope: !7376)
!7380 = !DILocation(line: 979, column: 9, scope: !7376)
!7381 = !DILocation(line: 981, column: 9, scope: !7376)
!7382 = !DILocation(line: 983, column: 5, scope: !7333)
!7383 = !DILocation(line: 983, column: 8, scope: !7333)
!7384 = !DILocation(line: 983, column: 13, scope: !7333)
!7385 = !DILocation(line: 983, column: 34, scope: !7333)
!7386 = !DILocation(line: 983, column: 39, scope: !7333)
!7387 = !DILocation(line: 983, column: 44, scope: !7333)
!7388 = !DILocation(line: 985, column: 5, scope: !7333)
!7389 = !DILocation(line: 986, column: 1, scope: !7333)
!7390 = distinct !DISubprogram(name: "read_residue", scope: !888, file: !888, line: 725, type: !7391, isLocal: true, isDefinition: true, scopeLine: 726, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7391 = !DISubroutineType(types: !7392)
!7392 = !{!926, !2417, !940, !926}
!7393 = !DILocalVariable(name: "gb", arg: 1, scope: !7390, file: !888, line: 725, type: !2417)
!7394 = !DILocation(line: 725, column: 40, scope: !7390)
!7395 = !DILocalVariable(name: "block", arg: 2, scope: !7390, file: !888, line: 725, type: !940)
!7396 = !DILocation(line: 725, column: 52, scope: !7390)
!7397 = !DILocalVariable(name: "masks_count", arg: 3, scope: !7390, file: !888, line: 725, type: !926)
!7398 = !DILocation(line: 725, column: 67, scope: !7390)
!7399 = !DILocalVariable(name: "coef_list", scope: !7390, file: !888, line: 727, type: !6975)
!7400 = !DILocation(line: 727, column: 9, scope: !7390)
!7401 = !DILocalVariable(name: "mode_list", scope: !7390, file: !888, line: 728, type: !6975)
!7402 = !DILocation(line: 728, column: 9, scope: !7390)
!7403 = !DILocalVariable(name: "i", scope: !7390, file: !888, line: 729, type: !926)
!7404 = !DILocation(line: 729, column: 9, scope: !7390)
!7405 = !DILocalVariable(name: "sign", scope: !7390, file: !888, line: 729, type: !926)
!7406 = !DILocation(line: 729, column: 12, scope: !7390)
!7407 = !DILocalVariable(name: "mask", scope: !7390, file: !888, line: 729, type: !926)
!7408 = !DILocation(line: 729, column: 18, scope: !7390)
!7409 = !DILocalVariable(name: "ccoef", scope: !7390, file: !888, line: 729, type: !926)
!7410 = !DILocation(line: 729, column: 24, scope: !7390)
!7411 = !DILocalVariable(name: "mode", scope: !7390, file: !888, line: 729, type: !926)
!7412 = !DILocation(line: 729, column: 31, scope: !7390)
!7413 = !DILocalVariable(name: "list_start", scope: !7390, file: !888, line: 730, type: !926)
!7414 = !DILocation(line: 730, column: 9, scope: !7390)
!7415 = !DILocalVariable(name: "list_end", scope: !7390, file: !888, line: 730, type: !926)
!7416 = !DILocation(line: 730, column: 26, scope: !7390)
!7417 = !DILocalVariable(name: "list_pos", scope: !7390, file: !888, line: 730, type: !926)
!7418 = !DILocation(line: 730, column: 41, scope: !7390)
!7419 = !DILocalVariable(name: "nz_coeff", scope: !7390, file: !888, line: 731, type: !2581)
!7420 = !DILocation(line: 731, column: 9, scope: !7390)
!7421 = !DILocalVariable(name: "nz_coeff_count", scope: !7390, file: !888, line: 732, type: !926)
!7422 = !DILocation(line: 732, column: 9, scope: !7390)
!7423 = !DILocation(line: 734, column: 15, scope: !7390)
!7424 = !DILocation(line: 734, column: 5, scope: !7390)
!7425 = !DILocation(line: 734, column: 25, scope: !7390)
!7426 = !DILocation(line: 734, column: 48, scope: !7390)
!7427 = !DILocation(line: 734, column: 30, scope: !7390)
!7428 = !DILocation(line: 734, column: 52, scope: !7390)
!7429 = !DILocation(line: 735, column: 15, scope: !7390)
!7430 = !DILocation(line: 735, column: 5, scope: !7390)
!7431 = !DILocation(line: 735, column: 25, scope: !7390)
!7432 = !DILocation(line: 735, column: 49, scope: !7390)
!7433 = !DILocation(line: 735, column: 31, scope: !7390)
!7434 = !DILocation(line: 735, column: 53, scope: !7390)
!7435 = !DILocation(line: 736, column: 15, scope: !7390)
!7436 = !DILocation(line: 736, column: 5, scope: !7390)
!7437 = !DILocation(line: 736, column: 25, scope: !7390)
!7438 = !DILocation(line: 736, column: 49, scope: !7390)
!7439 = !DILocation(line: 736, column: 31, scope: !7390)
!7440 = !DILocation(line: 736, column: 53, scope: !7390)
!7441 = !DILocation(line: 737, column: 15, scope: !7390)
!7442 = !DILocation(line: 737, column: 5, scope: !7390)
!7443 = !DILocation(line: 737, column: 25, scope: !7390)
!7444 = !DILocation(line: 737, column: 48, scope: !7390)
!7445 = !DILocation(line: 737, column: 30, scope: !7390)
!7446 = !DILocation(line: 737, column: 52, scope: !7390)
!7447 = !DILocation(line: 739, column: 31, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7390, file: !888, line: 739, column: 5)
!7449 = !DILocation(line: 739, column: 22, scope: !7448)
!7450 = !DILocation(line: 739, column: 19, scope: !7448)
!7451 = !DILocation(line: 739, column: 15, scope: !7448)
!7452 = !DILocation(line: 739, column: 10, scope: !7448)
!7453 = !DILocation(line: 739, column: 39, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7455, file: !888, discriminator: 1)
!7455 = distinct !DILexicalBlock(scope: !7448, file: !888, line: 739, column: 5)
!7456 = !DILocation(line: 739, column: 5, scope: !7454)
!7457 = !DILocation(line: 740, column: 16, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !888, line: 740, column: 9)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !888, line: 739, column: 57)
!7460 = !DILocation(line: 740, column: 14, scope: !7458)
!7461 = !DILocation(line: 740, column: 21, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !7463, file: !888, discriminator: 1)
!7463 = distinct !DILexicalBlock(scope: !7458, file: !888, line: 740, column: 9)
!7464 = !DILocation(line: 740, column: 25, scope: !7462)
!7465 = !DILocation(line: 740, column: 23, scope: !7462)
!7466 = !DILocation(line: 740, column: 9, scope: !7462)
!7467 = !DILocation(line: 741, column: 28, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !888, line: 741, column: 17)
!7469 = distinct !DILexicalBlock(scope: !7463, file: !888, line: 740, column: 46)
!7470 = !DILocation(line: 741, column: 18, scope: !7468)
!7471 = !DILocation(line: 741, column: 17, scope: !7469)
!7472 = !DILocation(line: 742, column: 17, scope: !7468)
!7473 = !DILocation(line: 743, column: 32, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7469, file: !888, line: 743, column: 17)
!7475 = !DILocation(line: 743, column: 23, scope: !7474)
!7476 = !DILocation(line: 743, column: 17, scope: !7474)
!7477 = !DILocation(line: 743, column: 36, scope: !7474)
!7478 = !DILocation(line: 743, column: 17, scope: !7469)
!7479 = !DILocation(line: 744, column: 39, scope: !7474)
!7480 = !DILocation(line: 744, column: 32, scope: !7474)
!7481 = !DILocation(line: 744, column: 23, scope: !7474)
!7482 = !DILocation(line: 744, column: 17, scope: !7474)
!7483 = !DILocation(line: 744, column: 36, scope: !7474)
!7484 = !DILocation(line: 746, column: 39, scope: !7474)
!7485 = !DILocation(line: 746, column: 32, scope: !7474)
!7486 = !DILocation(line: 746, column: 23, scope: !7474)
!7487 = !DILocation(line: 746, column: 17, scope: !7474)
!7488 = !DILocation(line: 746, column: 36, scope: !7474)
!7489 = !DILocation(line: 747, column: 24, scope: !7469)
!7490 = !DILocation(line: 748, column: 17, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7469, file: !888, line: 748, column: 17)
!7492 = !DILocation(line: 748, column: 29, scope: !7491)
!7493 = !DILocation(line: 748, column: 17, scope: !7469)
!7494 = !DILocation(line: 749, column: 17, scope: !7491)
!7495 = !DILocation(line: 750, column: 9, scope: !7469)
!7496 = !DILocation(line: 740, column: 42, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7463, file: !888, discriminator: 2)
!7498 = !DILocation(line: 740, column: 9, scope: !7497)
!7499 = distinct !{!7499, !7500}
!7500 = !DILocation(line: 740, column: 9, scope: !7459)
!7501 = !DILocation(line: 751, column: 20, scope: !7459)
!7502 = !DILocation(line: 751, column: 18, scope: !7459)
!7503 = !DILocation(line: 752, column: 9, scope: !7459)
!7504 = !DILocation(line: 752, column: 16, scope: !7505)
!7505 = !DILexicalBlockFile(scope: !7459, file: !888, discriminator: 1)
!7506 = !DILocation(line: 752, column: 27, scope: !7505)
!7507 = !DILocation(line: 752, column: 25, scope: !7505)
!7508 = !DILocation(line: 752, column: 9, scope: !7505)
!7509 = !DILocation(line: 753, column: 29, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !888, line: 753, column: 17)
!7511 = distinct !DILexicalBlock(scope: !7459, file: !888, line: 752, column: 37)
!7512 = !DILocation(line: 753, column: 19, scope: !7510)
!7513 = !DILocation(line: 753, column: 51, scope: !7510)
!7514 = !DILocation(line: 753, column: 41, scope: !7510)
!7515 = !DILocation(line: 753, column: 39, scope: !7510)
!7516 = !DILocation(line: 753, column: 62, scope: !7510)
!7517 = !DILocation(line: 753, column: 76, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7510, file: !888, discriminator: 1)
!7519 = !DILocation(line: 753, column: 66, scope: !7518)
!7520 = !DILocation(line: 753, column: 17, scope: !7518)
!7521 = !DILocation(line: 754, column: 25, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7510, file: !888, line: 753, column: 81)
!7523 = !DILocation(line: 755, column: 17, scope: !7522)
!7524 = distinct !{!7524, !7503}
!7525 = !DILocation(line: 757, column: 31, scope: !7511)
!7526 = !DILocation(line: 757, column: 21, scope: !7511)
!7527 = !DILocation(line: 757, column: 19, scope: !7511)
!7528 = !DILocation(line: 758, column: 30, scope: !7511)
!7529 = !DILocation(line: 758, column: 20, scope: !7511)
!7530 = !DILocation(line: 758, column: 18, scope: !7511)
!7531 = !DILocation(line: 759, column: 21, scope: !7511)
!7532 = !DILocation(line: 759, column: 13, scope: !7511)
!7533 = !DILocation(line: 761, column: 39, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7511, file: !888, line: 759, column: 27)
!7535 = !DILocation(line: 761, column: 45, scope: !7534)
!7536 = !DILocation(line: 761, column: 27, scope: !7534)
!7537 = !DILocation(line: 761, column: 17, scope: !7534)
!7538 = !DILocation(line: 761, column: 37, scope: !7534)
!7539 = !DILocation(line: 762, column: 27, scope: !7534)
!7540 = !DILocation(line: 762, column: 17, scope: !7534)
!7541 = !DILocation(line: 762, column: 37, scope: !7534)
!7542 = !DILocation(line: 764, column: 21, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7534, file: !888, line: 764, column: 21)
!7544 = !DILocation(line: 764, column: 26, scope: !7543)
!7545 = !DILocation(line: 764, column: 21, scope: !7534)
!7546 = !DILocation(line: 765, column: 31, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !888, line: 764, column: 32)
!7548 = !DILocation(line: 765, column: 21, scope: !7547)
!7549 = !DILocation(line: 765, column: 41, scope: !7547)
!7550 = !DILocation(line: 766, column: 39, scope: !7547)
!7551 = !DILocation(line: 766, column: 21, scope: !7547)
!7552 = !DILocation(line: 766, column: 43, scope: !7547)
!7553 = !DILocation(line: 767, column: 17, scope: !7547)
!7554 = !DILocation(line: 768, column: 24, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7534, file: !888, line: 768, column: 17)
!7556 = !DILocation(line: 768, column: 22, scope: !7555)
!7557 = !DILocation(line: 768, column: 29, scope: !7558)
!7558 = !DILexicalBlockFile(scope: !7559, file: !888, discriminator: 1)
!7559 = distinct !DILexicalBlock(scope: !7555, file: !888, line: 768, column: 17)
!7560 = !DILocation(line: 768, column: 31, scope: !7558)
!7561 = !DILocation(line: 768, column: 17, scope: !7558)
!7562 = !DILocation(line: 769, column: 35, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !888, line: 769, column: 25)
!7564 = distinct !DILexicalBlock(scope: !7559, file: !888, line: 768, column: 50)
!7565 = !DILocation(line: 769, column: 25, scope: !7563)
!7566 = !DILocation(line: 769, column: 25, scope: !7564)
!7567 = !DILocation(line: 770, column: 51, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7563, file: !888, line: 769, column: 40)
!7569 = !DILocation(line: 770, column: 35, scope: !7568)
!7570 = !DILocation(line: 770, column: 25, scope: !7568)
!7571 = !DILocation(line: 770, column: 49, scope: !7568)
!7572 = !DILocation(line: 771, column: 36, scope: !7568)
!7573 = !DILocation(line: 771, column: 25, scope: !7568)
!7574 = !DILocation(line: 771, column: 48, scope: !7568)
!7575 = !DILocation(line: 772, column: 21, scope: !7568)
!7576 = !DILocation(line: 773, column: 64, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7563, file: !888, line: 772, column: 28)
!7578 = !DILocation(line: 773, column: 54, scope: !7577)
!7579 = !DILocation(line: 773, column: 48, scope: !7577)
!7580 = !DILocation(line: 773, column: 25, scope: !7577)
!7581 = !DILocation(line: 773, column: 52, scope: !7577)
!7582 = !DILocation(line: 774, column: 43, scope: !7577)
!7583 = !DILocation(line: 774, column: 33, scope: !7577)
!7584 = !DILocation(line: 774, column: 32, scope: !7577)
!7585 = !DILocation(line: 774, column: 30, scope: !7577)
!7586 = !DILocation(line: 775, column: 52, scope: !7577)
!7587 = !DILocation(line: 775, column: 59, scope: !7577)
!7588 = !DILocation(line: 775, column: 57, scope: !7577)
!7589 = !DILocation(line: 775, column: 67, scope: !7577)
!7590 = !DILocation(line: 775, column: 65, scope: !7577)
!7591 = !DILocation(line: 775, column: 51, scope: !7577)
!7592 = !DILocation(line: 775, column: 41, scope: !7577)
!7593 = !DILocation(line: 775, column: 31, scope: !7577)
!7594 = !DILocation(line: 775, column: 25, scope: !7577)
!7595 = !DILocation(line: 775, column: 49, scope: !7577)
!7596 = !DILocation(line: 776, column: 36, scope: !7577)
!7597 = !DILocation(line: 777, column: 29, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7577, file: !888, line: 777, column: 29)
!7599 = !DILocation(line: 777, column: 41, scope: !7598)
!7600 = !DILocation(line: 777, column: 29, scope: !7577)
!7601 = !DILocation(line: 778, column: 29, scope: !7598)
!7602 = !DILocation(line: 780, column: 17, scope: !7564)
!7603 = !DILocation(line: 768, column: 37, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7559, file: !888, discriminator: 2)
!7605 = !DILocation(line: 768, column: 46, scope: !7604)
!7606 = !DILocation(line: 768, column: 17, scope: !7604)
!7607 = distinct !{!7607, !7608}
!7608 = !DILocation(line: 768, column: 17, scope: !7534)
!7609 = !DILocation(line: 781, column: 17, scope: !7534)
!7610 = !DILocation(line: 783, column: 27, scope: !7534)
!7611 = !DILocation(line: 783, column: 17, scope: !7534)
!7612 = !DILocation(line: 783, column: 37, scope: !7534)
!7613 = !DILocation(line: 784, column: 24, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7534, file: !888, line: 784, column: 17)
!7615 = !DILocation(line: 784, column: 22, scope: !7614)
!7616 = !DILocation(line: 784, column: 29, scope: !7617)
!7617 = !DILexicalBlockFile(scope: !7618, file: !888, discriminator: 1)
!7618 = distinct !DILexicalBlock(scope: !7614, file: !888, line: 784, column: 17)
!7619 = !DILocation(line: 784, column: 31, scope: !7617)
!7620 = !DILocation(line: 784, column: 17, scope: !7617)
!7621 = !DILocation(line: 785, column: 27, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !888, line: 784, column: 41)
!7623 = !DILocation(line: 786, column: 43, scope: !7622)
!7624 = !DILocation(line: 786, column: 31, scope: !7622)
!7625 = !DILocation(line: 786, column: 21, scope: !7622)
!7626 = !DILocation(line: 786, column: 41, scope: !7622)
!7627 = !DILocation(line: 787, column: 39, scope: !7622)
!7628 = !DILocation(line: 787, column: 21, scope: !7622)
!7629 = !DILocation(line: 787, column: 43, scope: !7622)
!7630 = !DILocation(line: 788, column: 17, scope: !7622)
!7631 = !DILocation(line: 784, column: 37, scope: !7632)
!7632 = !DILexicalBlockFile(scope: !7618, file: !888, discriminator: 2)
!7633 = !DILocation(line: 784, column: 17, scope: !7632)
!7634 = distinct !{!7634, !7635}
!7635 = !DILocation(line: 784, column: 17, scope: !7534)
!7636 = !DILocation(line: 789, column: 17, scope: !7534)
!7637 = !DILocation(line: 791, column: 56, scope: !7534)
!7638 = !DILocation(line: 791, column: 46, scope: !7534)
!7639 = !DILocation(line: 791, column: 40, scope: !7534)
!7640 = !DILocation(line: 791, column: 17, scope: !7534)
!7641 = !DILocation(line: 791, column: 44, scope: !7534)
!7642 = !DILocation(line: 792, column: 35, scope: !7534)
!7643 = !DILocation(line: 792, column: 25, scope: !7534)
!7644 = !DILocation(line: 792, column: 24, scope: !7534)
!7645 = !DILocation(line: 792, column: 22, scope: !7534)
!7646 = !DILocation(line: 793, column: 44, scope: !7534)
!7647 = !DILocation(line: 793, column: 51, scope: !7534)
!7648 = !DILocation(line: 793, column: 49, scope: !7534)
!7649 = !DILocation(line: 793, column: 59, scope: !7534)
!7650 = !DILocation(line: 793, column: 57, scope: !7534)
!7651 = !DILocation(line: 793, column: 43, scope: !7534)
!7652 = !DILocation(line: 793, column: 33, scope: !7534)
!7653 = !DILocation(line: 793, column: 23, scope: !7534)
!7654 = !DILocation(line: 793, column: 17, scope: !7534)
!7655 = !DILocation(line: 793, column: 41, scope: !7534)
!7656 = !DILocation(line: 794, column: 27, scope: !7534)
!7657 = !DILocation(line: 794, column: 17, scope: !7534)
!7658 = !DILocation(line: 794, column: 37, scope: !7534)
!7659 = !DILocation(line: 795, column: 35, scope: !7534)
!7660 = !DILocation(line: 795, column: 17, scope: !7534)
!7661 = !DILocation(line: 795, column: 39, scope: !7534)
!7662 = !DILocation(line: 796, column: 28, scope: !7534)
!7663 = !DILocation(line: 797, column: 21, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7534, file: !888, line: 797, column: 21)
!7665 = !DILocation(line: 797, column: 33, scope: !7664)
!7666 = !DILocation(line: 797, column: 21, scope: !7534)
!7667 = !DILocation(line: 798, column: 21, scope: !7664)
!7668 = !DILocation(line: 799, column: 17, scope: !7534)
!7669 = !DILocation(line: 752, column: 9, scope: !7670)
!7670 = !DILexicalBlockFile(scope: !7459, file: !888, discriminator: 2)
!7671 = !DILocation(line: 802, column: 5, scope: !7459)
!7672 = !DILocation(line: 739, column: 50, scope: !7673)
!7673 = !DILexicalBlockFile(scope: !7455, file: !888, discriminator: 2)
!7674 = !DILocation(line: 739, column: 5, scope: !7673)
!7675 = distinct !{!7675, !7676}
!7676 = !DILocation(line: 739, column: 5, scope: !7390)
!7677 = !DILocation(line: 804, column: 5, scope: !7390)
!7678 = !DILocation(line: 805, column: 1, scope: !7390)
!7679 = distinct !DISubprogram(name: "zero_extend", scope: !7680, file: !7680, line: 139, type: !7681, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7680 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7681 = !DISubroutineType(types: !7682)
!7682 = !{!927, !927, !927}
!7683 = !DILocalVariable(name: "val", arg: 1, scope: !7679, file: !7680, line: 139, type: !927)
!7684 = !DILocation(line: 139, column: 68, scope: !7679)
!7685 = !DILocalVariable(name: "bits", arg: 2, scope: !7679, file: !7680, line: 139, type: !927)
!7686 = !DILocation(line: 139, column: 82, scope: !7679)
!7687 = !DILocation(line: 141, column: 13, scope: !7679)
!7688 = !DILocation(line: 141, column: 41, scope: !7679)
!7689 = !DILocation(line: 141, column: 39, scope: !7679)
!7690 = !DILocation(line: 141, column: 17, scope: !7679)
!7691 = !DILocation(line: 141, column: 72, scope: !7679)
!7692 = !DILocation(line: 141, column: 70, scope: !7679)
!7693 = !DILocation(line: 141, column: 48, scope: !7679)
!7694 = !DILocation(line: 141, column: 5, scope: !7679)
!7695 = distinct !DISubprogram(name: "read_tree", scope: !888, file: !888, line: 244, type: !7696, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{null, !2417, !7698}
!7698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!7699 = !DILocalVariable(name: "gb", arg: 1, scope: !7695, file: !888, line: 244, type: !2417)
!7700 = !DILocation(line: 244, column: 38, scope: !7695)
!7701 = !DILocalVariable(name: "tree", arg: 2, scope: !7695, file: !888, line: 244, type: !7698)
!7702 = !DILocation(line: 244, column: 48, scope: !7695)
!7703 = !DILocalVariable(name: "tmp1", scope: !7695, file: !888, line: 246, type: !1814)
!7704 = !DILocation(line: 246, column: 13, scope: !7695)
!7705 = !DILocalVariable(name: "tmp2", scope: !7695, file: !888, line: 246, type: !1814)
!7706 = !DILocation(line: 246, column: 31, scope: !7695)
!7707 = !DILocalVariable(name: "in", scope: !7695, file: !888, line: 246, type: !943)
!7708 = !DILocation(line: 246, column: 42, scope: !7695)
!7709 = !DILocation(line: 246, column: 47, scope: !7695)
!7710 = !DILocalVariable(name: "out", scope: !7695, file: !888, line: 246, type: !943)
!7711 = !DILocation(line: 246, column: 54, scope: !7695)
!7712 = !DILocation(line: 246, column: 60, scope: !7695)
!7713 = !DILocalVariable(name: "i", scope: !7695, file: !888, line: 247, type: !926)
!7714 = !DILocation(line: 247, column: 9, scope: !7695)
!7715 = !DILocalVariable(name: "t", scope: !7695, file: !888, line: 247, type: !926)
!7716 = !DILocation(line: 247, column: 12, scope: !7695)
!7717 = !DILocalVariable(name: "len", scope: !7695, file: !888, line: 247, type: !926)
!7718 = !DILocation(line: 247, column: 15, scope: !7695)
!7719 = !DILocation(line: 249, column: 30, scope: !7695)
!7720 = !DILocation(line: 249, column: 21, scope: !7695)
!7721 = !DILocation(line: 249, column: 5, scope: !7695)
!7722 = !DILocation(line: 249, column: 11, scope: !7695)
!7723 = !DILocation(line: 249, column: 19, scope: !7695)
!7724 = !DILocation(line: 250, column: 10, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7695, file: !888, line: 250, column: 9)
!7726 = !DILocation(line: 250, column: 16, scope: !7725)
!7727 = !DILocation(line: 250, column: 9, scope: !7695)
!7728 = !DILocation(line: 251, column: 16, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !888, line: 251, column: 9)
!7730 = distinct !DILexicalBlock(scope: !7725, file: !888, line: 250, column: 25)
!7731 = !DILocation(line: 251, column: 14, scope: !7729)
!7732 = !DILocation(line: 251, column: 21, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7734, file: !888, discriminator: 1)
!7734 = distinct !DILexicalBlock(scope: !7729, file: !888, line: 251, column: 9)
!7735 = !DILocation(line: 251, column: 23, scope: !7733)
!7736 = !DILocation(line: 251, column: 9, scope: !7733)
!7737 = !DILocation(line: 252, column: 29, scope: !7734)
!7738 = !DILocation(line: 252, column: 24, scope: !7734)
!7739 = !DILocation(line: 252, column: 13, scope: !7734)
!7740 = !DILocation(line: 252, column: 19, scope: !7734)
!7741 = !DILocation(line: 252, column: 27, scope: !7734)
!7742 = !DILocation(line: 251, column: 30, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7734, file: !888, discriminator: 2)
!7744 = !DILocation(line: 251, column: 9, scope: !7743)
!7745 = distinct !{!7745, !7746}
!7746 = !DILocation(line: 251, column: 9, scope: !7730)
!7747 = !DILocation(line: 253, column: 9, scope: !7730)
!7748 = !DILocation(line: 255, column: 19, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7695, file: !888, line: 255, column: 9)
!7750 = !DILocation(line: 255, column: 9, scope: !7749)
!7751 = !DILocation(line: 255, column: 9, scope: !7695)
!7752 = !DILocation(line: 256, column: 24, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7749, file: !888, line: 255, column: 24)
!7754 = !DILocation(line: 256, column: 15, scope: !7753)
!7755 = !DILocation(line: 256, column: 13, scope: !7753)
!7756 = !DILocation(line: 257, column: 16, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7753, file: !888, line: 257, column: 9)
!7758 = !DILocation(line: 257, column: 14, scope: !7757)
!7759 = !DILocation(line: 257, column: 21, scope: !7760)
!7760 = !DILexicalBlockFile(scope: !7761, file: !888, discriminator: 1)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !888, line: 257, column: 9)
!7762 = !DILocation(line: 257, column: 26, scope: !7760)
!7763 = !DILocation(line: 257, column: 23, scope: !7760)
!7764 = !DILocation(line: 257, column: 9, scope: !7760)
!7765 = !DILocation(line: 258, column: 38, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7761, file: !888, line: 257, column: 36)
!7767 = !DILocation(line: 258, column: 29, scope: !7766)
!7768 = !DILocation(line: 258, column: 24, scope: !7766)
!7769 = !DILocation(line: 258, column: 13, scope: !7766)
!7770 = !DILocation(line: 258, column: 19, scope: !7766)
!7771 = !DILocation(line: 258, column: 27, scope: !7766)
!7772 = !DILocation(line: 259, column: 29, scope: !7766)
!7773 = !DILocation(line: 259, column: 18, scope: !7766)
!7774 = !DILocation(line: 259, column: 24, scope: !7766)
!7775 = !DILocation(line: 259, column: 13, scope: !7766)
!7776 = !DILocation(line: 259, column: 33, scope: !7766)
!7777 = !DILocation(line: 260, column: 9, scope: !7766)
!7778 = !DILocation(line: 257, column: 32, scope: !7779)
!7779 = !DILexicalBlockFile(scope: !7761, file: !888, discriminator: 2)
!7780 = !DILocation(line: 257, column: 9, scope: !7779)
!7781 = distinct !{!7781, !7782}
!7782 = !DILocation(line: 257, column: 9, scope: !7753)
!7783 = !DILocation(line: 261, column: 16, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7753, file: !888, line: 261, column: 9)
!7785 = !DILocation(line: 261, column: 14, scope: !7784)
!7786 = !DILocation(line: 261, column: 21, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !7788, file: !888, discriminator: 1)
!7788 = distinct !DILexicalBlock(scope: !7784, file: !888, line: 261, column: 9)
!7789 = !DILocation(line: 261, column: 23, scope: !7787)
!7790 = !DILocation(line: 261, column: 28, scope: !7787)
!7791 = !DILocation(line: 261, column: 31, scope: !7792)
!7792 = !DILexicalBlockFile(scope: !7788, file: !888, discriminator: 2)
!7793 = !DILocation(line: 261, column: 35, scope: !7792)
!7794 = !DILocation(line: 261, column: 9, scope: !7795)
!7795 = !DILexicalBlockFile(scope: !7784, file: !888, discriminator: 3)
!7796 = !DILocation(line: 262, column: 23, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7788, file: !888, line: 262, column: 17)
!7798 = !DILocation(line: 262, column: 18, scope: !7797)
!7799 = !DILocation(line: 262, column: 17, scope: !7788)
!7800 = !DILocation(line: 263, column: 37, scope: !7797)
!7801 = !DILocation(line: 263, column: 28, scope: !7797)
!7802 = !DILocation(line: 263, column: 17, scope: !7797)
!7803 = !DILocation(line: 263, column: 23, scope: !7797)
!7804 = !DILocation(line: 263, column: 35, scope: !7797)
!7805 = !DILocation(line: 262, column: 24, scope: !7806)
!7806 = !DILexicalBlockFile(scope: !7797, file: !888, discriminator: 1)
!7807 = !DILocation(line: 261, column: 46, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !7788, file: !888, discriminator: 4)
!7809 = !DILocation(line: 261, column: 9, scope: !7808)
!7810 = distinct !{!7810, !7811}
!7811 = !DILocation(line: 261, column: 9, scope: !7753)
!7812 = !DILocation(line: 264, column: 5, scope: !7753)
!7813 = !DILocation(line: 265, column: 24, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7749, file: !888, line: 264, column: 12)
!7815 = !DILocation(line: 265, column: 15, scope: !7814)
!7816 = !DILocation(line: 265, column: 13, scope: !7814)
!7817 = !DILocation(line: 266, column: 16, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7814, file: !888, line: 266, column: 9)
!7819 = !DILocation(line: 266, column: 14, scope: !7818)
!7820 = !DILocation(line: 266, column: 21, scope: !7821)
!7821 = !DILexicalBlockFile(scope: !7822, file: !888, discriminator: 1)
!7822 = distinct !DILexicalBlock(scope: !7818, file: !888, line: 266, column: 9)
!7823 = !DILocation(line: 266, column: 23, scope: !7821)
!7824 = !DILocation(line: 266, column: 9, scope: !7821)
!7825 = !DILocation(line: 267, column: 21, scope: !7822)
!7826 = !DILocation(line: 267, column: 16, scope: !7822)
!7827 = !DILocation(line: 267, column: 13, scope: !7822)
!7828 = !DILocation(line: 267, column: 19, scope: !7822)
!7829 = !DILocation(line: 266, column: 30, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !7822, file: !888, discriminator: 2)
!7831 = !DILocation(line: 266, column: 9, scope: !7830)
!7832 = distinct !{!7832, !7833}
!7833 = !DILocation(line: 266, column: 9, scope: !7814)
!7834 = !DILocation(line: 268, column: 16, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7814, file: !888, line: 268, column: 9)
!7836 = !DILocation(line: 268, column: 14, scope: !7835)
!7837 = !DILocation(line: 268, column: 21, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !7839, file: !888, discriminator: 1)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !888, line: 268, column: 9)
!7840 = !DILocation(line: 268, column: 26, scope: !7838)
!7841 = !DILocation(line: 268, column: 23, scope: !7838)
!7842 = !DILocation(line: 268, column: 9, scope: !7838)
!7843 = !DILocalVariable(name: "size", scope: !7844, file: !888, line: 269, type: !926)
!7844 = distinct !DILexicalBlock(scope: !7839, file: !888, line: 268, column: 36)
!7845 = !DILocation(line: 269, column: 17, scope: !7844)
!7846 = !DILocation(line: 269, column: 29, scope: !7844)
!7847 = !DILocation(line: 269, column: 26, scope: !7844)
!7848 = !DILocation(line: 270, column: 20, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7844, file: !888, line: 270, column: 13)
!7850 = !DILocation(line: 270, column: 18, scope: !7849)
!7851 = !DILocation(line: 270, column: 25, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !7853, file: !888, discriminator: 1)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !888, line: 270, column: 13)
!7854 = !DILocation(line: 270, column: 27, scope: !7852)
!7855 = !DILocation(line: 270, column: 13, scope: !7852)
!7856 = !DILocation(line: 271, column: 23, scope: !7853)
!7857 = !DILocation(line: 271, column: 27, scope: !7853)
!7858 = !DILocation(line: 271, column: 33, scope: !7853)
!7859 = !DILocation(line: 271, column: 31, scope: !7853)
!7860 = !DILocation(line: 271, column: 36, scope: !7853)
!7861 = !DILocation(line: 271, column: 41, scope: !7853)
!7862 = !DILocation(line: 271, column: 39, scope: !7853)
!7863 = !DILocation(line: 271, column: 44, scope: !7853)
!7864 = !DILocation(line: 271, column: 17, scope: !7853)
!7865 = !DILocation(line: 270, column: 38, scope: !7866)
!7866 = !DILexicalBlockFile(scope: !7853, file: !888, discriminator: 2)
!7867 = !DILocation(line: 270, column: 43, scope: !7866)
!7868 = !DILocation(line: 270, column: 35, scope: !7866)
!7869 = !DILocation(line: 270, column: 13, scope: !7866)
!7870 = distinct !{!7870, !7871}
!7871 = !DILocation(line: 270, column: 13, scope: !7844)
!7872 = !DILocation(line: 272, column: 13, scope: !7844)
!7873 = distinct !{!7873, !7872}
!7874 = !DILocalVariable(name: "SWAP_tmp", scope: !7875, file: !888, line: 272, type: !943)
!7875 = distinct !DILexicalBlock(scope: !7844, file: !888, line: 272, column: 15)
!7876 = !DILocation(line: 272, column: 25, scope: !7875)
!7877 = !DILocation(line: 272, column: 35, scope: !7878)
!7878 = !DILexicalBlockFile(scope: !7875, file: !888, discriminator: 1)
!7879 = !DILocation(line: 272, column: 25, scope: !7878)
!7880 = !DILocation(line: 272, column: 45, scope: !7878)
!7881 = !DILocation(line: 272, column: 43, scope: !7878)
!7882 = !DILocation(line: 272, column: 53, scope: !7878)
!7883 = !DILocation(line: 272, column: 51, scope: !7878)
!7884 = !DILocation(line: 272, column: 62, scope: !7878)
!7885 = !DILocation(line: 273, column: 9, scope: !7844)
!7886 = !DILocation(line: 268, column: 32, scope: !7887)
!7887 = !DILexicalBlockFile(scope: !7839, file: !888, discriminator: 2)
!7888 = !DILocation(line: 268, column: 9, scope: !7887)
!7889 = distinct !{!7889, !7890}
!7890 = !DILocation(line: 268, column: 9, scope: !7814)
!7891 = !DILocation(line: 274, column: 16, scope: !7814)
!7892 = !DILocation(line: 274, column: 22, scope: !7814)
!7893 = !DILocation(line: 274, column: 9, scope: !7814)
!7894 = !DILocation(line: 274, column: 28, scope: !7814)
!7895 = !DILocation(line: 276, column: 1, scope: !7695)
!7896 = distinct !DISubprogram(name: "merge", scope: !888, file: !888, line: 217, type: !7897, isLocal: true, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !2417, !943, !943, !926}
!7899 = !DILocalVariable(name: "gb", arg: 1, scope: !7896, file: !888, line: 217, type: !2417)
!7900 = !DILocation(line: 217, column: 34, scope: !7896)
!7901 = !DILocalVariable(name: "dst", arg: 2, scope: !7896, file: !888, line: 217, type: !943)
!7902 = !DILocation(line: 217, column: 47, scope: !7896)
!7903 = !DILocalVariable(name: "src", arg: 3, scope: !7896, file: !888, line: 217, type: !943)
!7904 = !DILocation(line: 217, column: 61, scope: !7896)
!7905 = !DILocalVariable(name: "size", arg: 4, scope: !7896, file: !888, line: 217, type: !926)
!7906 = !DILocation(line: 217, column: 70, scope: !7896)
!7907 = !DILocalVariable(name: "src2", scope: !7896, file: !888, line: 219, type: !943)
!7908 = !DILocation(line: 219, column: 14, scope: !7896)
!7909 = !DILocation(line: 219, column: 21, scope: !7896)
!7910 = !DILocation(line: 219, column: 27, scope: !7896)
!7911 = !DILocation(line: 219, column: 25, scope: !7896)
!7912 = !DILocalVariable(name: "size2", scope: !7896, file: !888, line: 220, type: !926)
!7913 = !DILocation(line: 220, column: 9, scope: !7896)
!7914 = !DILocation(line: 220, column: 17, scope: !7896)
!7915 = !DILocation(line: 222, column: 5, scope: !7896)
!7916 = distinct !{!7916, !7915}
!7917 = !DILocation(line: 223, column: 24, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !888, line: 223, column: 13)
!7919 = distinct !DILexicalBlock(scope: !7896, file: !888, line: 222, column: 8)
!7920 = !DILocation(line: 223, column: 14, scope: !7918)
!7921 = !DILocation(line: 223, column: 13, scope: !7919)
!7922 = !DILocation(line: 224, column: 26, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7918, file: !888, line: 223, column: 29)
!7924 = !DILocation(line: 224, column: 22, scope: !7923)
!7925 = !DILocation(line: 224, column: 17, scope: !7923)
!7926 = !DILocation(line: 224, column: 20, scope: !7923)
!7927 = !DILocation(line: 225, column: 17, scope: !7923)
!7928 = !DILocation(line: 226, column: 9, scope: !7923)
!7929 = !DILocation(line: 227, column: 27, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7918, file: !888, line: 226, column: 16)
!7931 = !DILocation(line: 227, column: 22, scope: !7930)
!7932 = !DILocation(line: 227, column: 17, scope: !7930)
!7933 = !DILocation(line: 227, column: 20, scope: !7930)
!7934 = !DILocation(line: 228, column: 18, scope: !7930)
!7935 = !DILocation(line: 230, column: 5, scope: !7919)
!7936 = !DILocation(line: 230, column: 14, scope: !7937)
!7937 = !DILexicalBlockFile(scope: !7896, file: !888, discriminator: 1)
!7938 = !DILocation(line: 230, column: 19, scope: !7937)
!7939 = !DILocation(line: 230, column: 22, scope: !7940)
!7940 = !DILexicalBlockFile(scope: !7896, file: !888, discriminator: 2)
!7941 = !DILocation(line: 230, column: 19, scope: !7940)
!7942 = !DILocation(line: 230, column: 5, scope: !7943)
!7943 = !DILexicalBlockFile(scope: !7919, file: !888, discriminator: 3)
!7944 = !DILocation(line: 232, column: 5, scope: !7896)
!7945 = !DILocation(line: 232, column: 16, scope: !7937)
!7946 = !DILocation(line: 232, column: 5, scope: !7937)
!7947 = !DILocation(line: 233, column: 22, scope: !7896)
!7948 = !DILocation(line: 233, column: 18, scope: !7896)
!7949 = !DILocation(line: 233, column: 13, scope: !7896)
!7950 = !DILocation(line: 233, column: 16, scope: !7896)
!7951 = !DILocation(line: 232, column: 5, scope: !7940)
!7952 = distinct !{!7952, !7944}
!7953 = !DILocation(line: 234, column: 5, scope: !7896)
!7954 = !DILocation(line: 234, column: 17, scope: !7937)
!7955 = !DILocation(line: 234, column: 5, scope: !7937)
!7956 = !DILocation(line: 235, column: 23, scope: !7896)
!7957 = !DILocation(line: 235, column: 18, scope: !7896)
!7958 = !DILocation(line: 235, column: 13, scope: !7896)
!7959 = !DILocation(line: 235, column: 16, scope: !7896)
!7960 = !DILocation(line: 234, column: 5, scope: !7940)
!7961 = distinct !{!7961, !7953}
!7962 = !DILocation(line: 236, column: 1, scope: !7896)
!7963 = distinct !DISubprogram(name: "binkb_init_bundles", scope: !888, file: !888, line: 548, type: !2294, isLocal: true, isDefinition: true, scopeLine: 549, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7964 = !DILocalVariable(name: "c", arg: 1, scope: !7963, file: !888, line: 548, type: !1739)
!7965 = !DILocation(line: 548, column: 67, scope: !7963)
!7966 = !DILocalVariable(name: "i", scope: !7963, file: !888, line: 550, type: !926)
!7967 = !DILocation(line: 550, column: 9, scope: !7963)
!7968 = !DILocation(line: 551, column: 12, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7963, file: !888, line: 551, column: 5)
!7970 = !DILocation(line: 551, column: 10, scope: !7969)
!7971 = !DILocation(line: 551, column: 17, scope: !7972)
!7972 = !DILexicalBlockFile(scope: !7973, file: !888, discriminator: 1)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !888, line: 551, column: 5)
!7974 = !DILocation(line: 551, column: 19, scope: !7972)
!7975 = !DILocation(line: 551, column: 5, scope: !7972)
!7976 = !DILocation(line: 552, column: 27, scope: !7973)
!7977 = !DILocation(line: 552, column: 30, scope: !7973)
!7978 = !DILocation(line: 552, column: 9, scope: !7973)
!7979 = !DILocation(line: 551, column: 36, scope: !7980)
!7980 = !DILexicalBlockFile(scope: !7973, file: !888, discriminator: 2)
!7981 = !DILocation(line: 551, column: 5, scope: !7980)
!7982 = distinct !{!7982, !7983}
!7983 = !DILocation(line: 551, column: 5, scope: !7963)
!7984 = !DILocation(line: 553, column: 1, scope: !7963)
!7985 = distinct !DISubprogram(name: "binkb_read_bundle", scope: !888, file: !888, line: 555, type: !7986, isLocal: true, isDefinition: true, scopeLine: 556, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!7986 = !DISubroutineType(types: !7987)
!7987 = !{!926, !1739, !2417, !926}
!7988 = !DILocalVariable(name: "c", arg: 1, scope: !7985, file: !888, line: 555, type: !1739)
!7989 = !DILocation(line: 555, column: 43, scope: !7985)
!7990 = !DILocalVariable(name: "gb", arg: 2, scope: !7985, file: !888, line: 555, type: !2417)
!7991 = !DILocation(line: 555, column: 61, scope: !7985)
!7992 = !DILocalVariable(name: "bundle_num", arg: 3, scope: !7985, file: !888, line: 555, type: !926)
!7993 = !DILocation(line: 555, column: 69, scope: !7985)
!7994 = !DILocalVariable(name: "bits", scope: !7985, file: !888, line: 557, type: !973)
!7995 = !DILocation(line: 557, column: 15, scope: !7985)
!7996 = !DILocation(line: 557, column: 41, scope: !7985)
!7997 = !DILocation(line: 557, column: 22, scope: !7985)
!7998 = !DILocalVariable(name: "mask", scope: !7985, file: !888, line: 558, type: !973)
!7999 = !DILocation(line: 558, column: 15, scope: !7985)
!8000 = !DILocation(line: 558, column: 28, scope: !7985)
!8001 = !DILocation(line: 558, column: 33, scope: !7985)
!8002 = !DILocation(line: 558, column: 24, scope: !7985)
!8003 = !DILocalVariable(name: "issigned", scope: !7985, file: !888, line: 559, type: !973)
!8004 = !DILocation(line: 559, column: 15, scope: !7985)
!8005 = !DILocation(line: 559, column: 46, scope: !7985)
!8006 = !DILocation(line: 559, column: 26, scope: !7985)
!8007 = !DILocalVariable(name: "b", scope: !7985, file: !888, line: 560, type: !4544)
!8008 = !DILocation(line: 560, column: 13, scope: !7985)
!8009 = !DILocation(line: 560, column: 28, scope: !7985)
!8010 = !DILocation(line: 560, column: 18, scope: !7985)
!8011 = !DILocation(line: 560, column: 21, scope: !7985)
!8012 = !DILocalVariable(name: "i", scope: !7985, file: !888, line: 561, type: !926)
!8013 = !DILocation(line: 561, column: 9, scope: !7985)
!8014 = !DILocalVariable(name: "len", scope: !7985, file: !888, line: 561, type: !926)
!8015 = !DILocation(line: 561, column: 12, scope: !7985)
!8016 = !DILocation(line: 563, column: 10, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7985, file: !888, line: 563, column: 9)
!8018 = !DILocation(line: 563, column: 13, scope: !8017)
!8019 = !DILocation(line: 563, column: 21, scope: !8017)
!8020 = !DILocation(line: 563, column: 25, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8017, file: !888, discriminator: 1)
!8022 = !DILocation(line: 563, column: 28, scope: !8021)
!8023 = !DILocation(line: 563, column: 38, scope: !8021)
!8024 = !DILocation(line: 563, column: 41, scope: !8021)
!8025 = !DILocation(line: 563, column: 36, scope: !8021)
!8026 = !DILocation(line: 563, column: 9, scope: !8021)
!8027 = !DILocation(line: 563, column: 51, scope: !8028)
!8028 = !DILexicalBlockFile(scope: !8017, file: !888, discriminator: 2)
!8029 = !DILocation(line: 563, column: 76, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !7985, file: !888, discriminator: 3)
!8031 = !DILocation(line: 563, column: 80, scope: !8030)
!8032 = !DILocation(line: 563, column: 83, scope: !8030)
!8033 = !DILocation(line: 563, column: 67, scope: !8030)
!8034 = !DILocation(line: 563, column: 65, scope: !8030)
!8035 = !DILocation(line: 563, column: 94, scope: !8030)
!8036 = !DILocation(line: 563, column: 93, scope: !8030)
!8037 = !DILocation(line: 563, column: 101, scope: !8038)
!8038 = !DILexicalBlockFile(scope: !8039, file: !888, discriminator: 4)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !888, line: 563, column: 99)
!8040 = distinct !DILexicalBlock(scope: !7985, file: !888, line: 563, column: 93)
!8041 = !DILocation(line: 563, column: 104, scope: !8038)
!8042 = !DILocation(line: 563, column: 112, scope: !8038)
!8043 = !DILocation(line: 563, column: 6, scope: !8038)
!8044 = !DILocation(line: 564, column: 9, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7985, file: !888, line: 564, column: 9)
!8046 = !DILocation(line: 564, column: 12, scope: !8045)
!8047 = !DILocation(line: 564, column: 23, scope: !8045)
!8048 = !DILocation(line: 564, column: 26, scope: !8045)
!8049 = !DILocation(line: 564, column: 21, scope: !8045)
!8050 = !DILocation(line: 564, column: 36, scope: !8045)
!8051 = !DILocation(line: 564, column: 48, scope: !8045)
!8052 = !DILocation(line: 564, column: 53, scope: !8045)
!8053 = !DILocation(line: 564, column: 45, scope: !8045)
!8054 = !DILocation(line: 564, column: 40, scope: !8045)
!8055 = !DILocation(line: 564, column: 34, scope: !8045)
!8056 = !DILocation(line: 564, column: 9, scope: !7985)
!8057 = !DILocation(line: 565, column: 9, scope: !8045)
!8058 = !DILocation(line: 566, column: 9, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !7985, file: !888, line: 566, column: 9)
!8060 = !DILocation(line: 566, column: 14, scope: !8059)
!8061 = !DILocation(line: 566, column: 9, scope: !7985)
!8062 = !DILocation(line: 567, column: 14, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !888, line: 567, column: 13)
!8064 = distinct !DILexicalBlock(scope: !8059, file: !888, line: 566, column: 20)
!8065 = !DILocation(line: 567, column: 13, scope: !8064)
!8066 = !DILocation(line: 568, column: 20, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !888, line: 568, column: 13)
!8068 = distinct !DILexicalBlock(scope: !8063, file: !888, line: 567, column: 24)
!8069 = !DILocation(line: 568, column: 18, scope: !8067)
!8070 = !DILocation(line: 568, column: 25, scope: !8071)
!8071 = !DILexicalBlockFile(scope: !8072, file: !888, discriminator: 1)
!8072 = distinct !DILexicalBlock(scope: !8067, file: !888, line: 568, column: 13)
!8073 = !DILocation(line: 568, column: 29, scope: !8071)
!8074 = !DILocation(line: 568, column: 27, scope: !8071)
!8075 = !DILocation(line: 568, column: 13, scope: !8071)
!8076 = !DILocation(line: 569, column: 42, scope: !8072)
!8077 = !DILocation(line: 569, column: 46, scope: !8072)
!8078 = !DILocation(line: 569, column: 33, scope: !8072)
!8079 = !DILocation(line: 569, column: 18, scope: !8072)
!8080 = !DILocation(line: 569, column: 21, scope: !8072)
!8081 = !DILocation(line: 569, column: 28, scope: !8072)
!8082 = !DILocation(line: 569, column: 31, scope: !8072)
!8083 = !DILocation(line: 569, column: 17, scope: !8072)
!8084 = !DILocation(line: 568, column: 35, scope: !8085)
!8085 = !DILexicalBlockFile(scope: !8072, file: !888, discriminator: 2)
!8086 = !DILocation(line: 568, column: 13, scope: !8085)
!8087 = distinct !{!8087, !8088}
!8088 = !DILocation(line: 568, column: 13, scope: !8068)
!8089 = !DILocation(line: 570, column: 9, scope: !8068)
!8090 = !DILocation(line: 571, column: 20, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !888, line: 571, column: 13)
!8092 = distinct !DILexicalBlock(scope: !8063, file: !888, line: 570, column: 16)
!8093 = !DILocation(line: 571, column: 18, scope: !8091)
!8094 = !DILocation(line: 571, column: 25, scope: !8095)
!8095 = !DILexicalBlockFile(scope: !8096, file: !888, discriminator: 1)
!8096 = distinct !DILexicalBlock(scope: !8091, file: !888, line: 571, column: 13)
!8097 = !DILocation(line: 571, column: 29, scope: !8095)
!8098 = !DILocation(line: 571, column: 27, scope: !8095)
!8099 = !DILocation(line: 571, column: 13, scope: !8095)
!8100 = !DILocation(line: 572, column: 42, scope: !8096)
!8101 = !DILocation(line: 572, column: 46, scope: !8096)
!8102 = !DILocation(line: 572, column: 33, scope: !8096)
!8103 = !DILocation(line: 572, column: 54, scope: !8096)
!8104 = !DILocation(line: 572, column: 52, scope: !8096)
!8105 = !DILocation(line: 572, column: 18, scope: !8096)
!8106 = !DILocation(line: 572, column: 21, scope: !8096)
!8107 = !DILocation(line: 572, column: 28, scope: !8096)
!8108 = !DILocation(line: 572, column: 31, scope: !8096)
!8109 = !DILocation(line: 572, column: 17, scope: !8096)
!8110 = !DILocation(line: 571, column: 35, scope: !8111)
!8111 = !DILexicalBlockFile(scope: !8096, file: !888, discriminator: 2)
!8112 = !DILocation(line: 571, column: 13, scope: !8111)
!8113 = distinct !{!8113, !8114}
!8114 = !DILocation(line: 571, column: 13, scope: !8092)
!8115 = !DILocation(line: 574, column: 5, scope: !8064)
!8116 = !DILocalVariable(name: "dst", scope: !8117, file: !888, line: 575, type: !940)
!8117 = distinct !DILexicalBlock(scope: !8059, file: !888, line: 574, column: 12)
!8118 = !DILocation(line: 575, column: 18, scope: !8117)
!8119 = !DILocation(line: 575, column: 34, scope: !8117)
!8120 = !DILocation(line: 575, column: 37, scope: !8117)
!8121 = !DILocation(line: 575, column: 24, scope: !8117)
!8122 = !DILocation(line: 577, column: 14, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8117, file: !888, line: 577, column: 13)
!8124 = !DILocation(line: 577, column: 13, scope: !8117)
!8125 = !DILocation(line: 578, column: 20, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !888, line: 578, column: 13)
!8127 = distinct !DILexicalBlock(scope: !8123, file: !888, line: 577, column: 24)
!8128 = !DILocation(line: 578, column: 18, scope: !8126)
!8129 = !DILocation(line: 578, column: 25, scope: !8130)
!8130 = !DILexicalBlockFile(scope: !8131, file: !888, discriminator: 1)
!8131 = distinct !DILexicalBlock(scope: !8126, file: !888, line: 578, column: 13)
!8132 = !DILocation(line: 578, column: 29, scope: !8130)
!8133 = !DILocation(line: 578, column: 27, scope: !8130)
!8134 = !DILocation(line: 578, column: 13, scope: !8130)
!8135 = !DILocation(line: 579, column: 35, scope: !8131)
!8136 = !DILocation(line: 579, column: 39, scope: !8131)
!8137 = !DILocation(line: 579, column: 26, scope: !8131)
!8138 = !DILocation(line: 579, column: 21, scope: !8131)
!8139 = !DILocation(line: 579, column: 24, scope: !8131)
!8140 = !DILocation(line: 579, column: 17, scope: !8131)
!8141 = !DILocation(line: 578, column: 35, scope: !8142)
!8142 = !DILexicalBlockFile(scope: !8131, file: !888, discriminator: 2)
!8143 = !DILocation(line: 578, column: 13, scope: !8142)
!8144 = distinct !{!8144, !8145}
!8145 = !DILocation(line: 578, column: 13, scope: !8127)
!8146 = !DILocation(line: 580, column: 9, scope: !8127)
!8147 = !DILocation(line: 581, column: 20, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !888, line: 581, column: 13)
!8149 = distinct !DILexicalBlock(scope: !8123, file: !888, line: 580, column: 16)
!8150 = !DILocation(line: 581, column: 18, scope: !8148)
!8151 = !DILocation(line: 581, column: 25, scope: !8152)
!8152 = !DILexicalBlockFile(scope: !8153, file: !888, discriminator: 1)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !888, line: 581, column: 13)
!8154 = !DILocation(line: 581, column: 29, scope: !8152)
!8155 = !DILocation(line: 581, column: 27, scope: !8152)
!8156 = !DILocation(line: 581, column: 13, scope: !8152)
!8157 = !DILocation(line: 582, column: 35, scope: !8153)
!8158 = !DILocation(line: 582, column: 39, scope: !8153)
!8159 = !DILocation(line: 582, column: 26, scope: !8153)
!8160 = !DILocation(line: 582, column: 47, scope: !8153)
!8161 = !DILocation(line: 582, column: 45, scope: !8153)
!8162 = !DILocation(line: 582, column: 21, scope: !8153)
!8163 = !DILocation(line: 582, column: 24, scope: !8153)
!8164 = !DILocation(line: 582, column: 17, scope: !8153)
!8165 = !DILocation(line: 581, column: 35, scope: !8166)
!8166 = !DILexicalBlockFile(scope: !8153, file: !888, discriminator: 2)
!8167 = !DILocation(line: 581, column: 13, scope: !8166)
!8168 = distinct !{!8168, !8169}
!8169 = !DILocation(line: 581, column: 13, scope: !8149)
!8170 = !DILocation(line: 584, column: 32, scope: !8117)
!8171 = !DILocation(line: 584, column: 22, scope: !8117)
!8172 = !DILocation(line: 584, column: 9, scope: !8117)
!8173 = !DILocation(line: 584, column: 12, scope: !8117)
!8174 = !DILocation(line: 584, column: 20, scope: !8117)
!8175 = !DILocation(line: 586, column: 5, scope: !7985)
!8176 = !DILocation(line: 587, column: 1, scope: !7985)
!8177 = distinct !DISubprogram(name: "binkb_get_value", scope: !888, file: !888, line: 589, type: !6904, isLocal: true, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!8178 = !DILocalVariable(name: "c", arg: 1, scope: !8177, file: !888, line: 589, type: !1739)
!8179 = !DILocation(line: 589, column: 48, scope: !8177)
!8180 = !DILocalVariable(name: "bundle_num", arg: 2, scope: !8177, file: !888, line: 589, type: !926)
!8181 = !DILocation(line: 589, column: 55, scope: !8177)
!8182 = !DILocalVariable(name: "ret", scope: !8177, file: !888, line: 591, type: !941)
!8183 = !DILocation(line: 591, column: 13, scope: !8177)
!8184 = !DILocalVariable(name: "bits", scope: !8177, file: !888, line: 592, type: !973)
!8185 = !DILocation(line: 592, column: 15, scope: !8177)
!8186 = !DILocation(line: 592, column: 41, scope: !8177)
!8187 = !DILocation(line: 592, column: 22, scope: !8177)
!8188 = !DILocation(line: 594, column: 9, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8177, file: !888, line: 594, column: 9)
!8190 = !DILocation(line: 594, column: 14, scope: !8189)
!8191 = !DILocation(line: 594, column: 9, scope: !8177)
!8192 = !DILocalVariable(name: "val", scope: !8193, file: !888, line: 595, type: !926)
!8193 = distinct !DILexicalBlock(scope: !8189, file: !888, line: 594, column: 20)
!8194 = !DILocation(line: 595, column: 13, scope: !8193)
!8195 = !DILocation(line: 595, column: 30, scope: !8193)
!8196 = !DILocation(line: 595, column: 20, scope: !8193)
!8197 = !DILocation(line: 595, column: 23, scope: !8193)
!8198 = !DILocation(line: 595, column: 42, scope: !8193)
!8199 = !DILocation(line: 595, column: 49, scope: !8193)
!8200 = !DILocation(line: 595, column: 19, scope: !8193)
!8201 = !DILocation(line: 596, column: 36, scope: !8193)
!8202 = !DILocation(line: 596, column: 16, scope: !8193)
!8203 = !DILocation(line: 596, column: 58, scope: !8204)
!8204 = !DILexicalBlockFile(scope: !8193, file: !888, discriminator: 1)
!8205 = !DILocation(line: 596, column: 50, scope: !8204)
!8206 = !DILocation(line: 596, column: 16, scope: !8204)
!8207 = !DILocation(line: 596, column: 64, scope: !8208)
!8208 = !DILexicalBlockFile(scope: !8193, file: !888, discriminator: 2)
!8209 = !DILocation(line: 596, column: 16, scope: !8208)
!8210 = !DILocation(line: 596, column: 16, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8193, file: !888, discriminator: 3)
!8212 = !DILocation(line: 596, column: 9, scope: !8211)
!8213 = !DILocation(line: 598, column: 32, scope: !8177)
!8214 = !DILocation(line: 598, column: 22, scope: !8177)
!8215 = !DILocation(line: 598, column: 25, scope: !8177)
!8216 = !DILocation(line: 598, column: 44, scope: !8177)
!8217 = !DILocation(line: 598, column: 11, scope: !8177)
!8218 = !DILocation(line: 598, column: 9, scope: !8177)
!8219 = !DILocation(line: 599, column: 15, scope: !8177)
!8220 = !DILocation(line: 599, column: 5, scope: !8177)
!8221 = !DILocation(line: 599, column: 8, scope: !8177)
!8222 = !DILocation(line: 599, column: 27, scope: !8177)
!8223 = !DILocation(line: 599, column: 35, scope: !8177)
!8224 = !DILocation(line: 600, column: 12, scope: !8177)
!8225 = !DILocation(line: 600, column: 5, scope: !8177)
!8226 = !DILocation(line: 601, column: 1, scope: !8177)
!8227 = distinct !DISubprogram(name: "put_pixels8x8_overlapped", scope: !888, file: !888, line: 810, type: !8228, isLocal: true, isDefinition: true, scopeLine: 811, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!8228 = !DISubroutineType(types: !8229)
!8229 = !{null, !943, !943, !926}
!8230 = !DILocalVariable(name: "dst", arg: 1, scope: !8227, file: !888, line: 810, type: !943)
!8231 = !DILocation(line: 810, column: 54, scope: !8227)
!8232 = !DILocalVariable(name: "src", arg: 2, scope: !8227, file: !888, line: 810, type: !943)
!8233 = !DILocation(line: 810, column: 68, scope: !8227)
!8234 = !DILocalVariable(name: "stride", arg: 3, scope: !8227, file: !888, line: 810, type: !926)
!8235 = !DILocation(line: 810, column: 77, scope: !8227)
!8236 = !DILocalVariable(name: "tmp", scope: !8227, file: !888, line: 812, type: !2321)
!8237 = !DILocation(line: 812, column: 13, scope: !8227)
!8238 = !DILocalVariable(name: "i", scope: !8227, file: !888, line: 813, type: !926)
!8239 = !DILocation(line: 813, column: 9, scope: !8227)
!8240 = !DILocation(line: 814, column: 12, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8227, file: !888, line: 814, column: 5)
!8242 = !DILocation(line: 814, column: 10, scope: !8241)
!8243 = !DILocation(line: 814, column: 17, scope: !8244)
!8244 = !DILexicalBlockFile(scope: !8245, file: !888, discriminator: 1)
!8245 = distinct !DILexicalBlock(scope: !8241, file: !888, line: 814, column: 5)
!8246 = !DILocation(line: 814, column: 19, scope: !8244)
!8247 = !DILocation(line: 814, column: 5, scope: !8244)
!8248 = !DILocation(line: 815, column: 16, scope: !8245)
!8249 = !DILocation(line: 815, column: 22, scope: !8245)
!8250 = !DILocation(line: 815, column: 23, scope: !8245)
!8251 = !DILocation(line: 815, column: 20, scope: !8245)
!8252 = !DILocation(line: 815, column: 27, scope: !8245)
!8253 = !DILocation(line: 815, column: 33, scope: !8245)
!8254 = !DILocation(line: 815, column: 35, scope: !8245)
!8255 = !DILocation(line: 815, column: 34, scope: !8245)
!8256 = !DILocation(line: 815, column: 31, scope: !8245)
!8257 = !DILocation(line: 815, column: 9, scope: !8245)
!8258 = !DILocation(line: 814, column: 25, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !8245, file: !888, discriminator: 2)
!8260 = !DILocation(line: 814, column: 5, scope: !8259)
!8261 = distinct !{!8261, !8262}
!8262 = !DILocation(line: 814, column: 5, scope: !8227)
!8263 = !DILocation(line: 816, column: 12, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8227, file: !888, line: 816, column: 5)
!8265 = !DILocation(line: 816, column: 10, scope: !8264)
!8266 = !DILocation(line: 816, column: 17, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !8268, file: !888, discriminator: 1)
!8268 = distinct !DILexicalBlock(scope: !8264, file: !888, line: 816, column: 5)
!8269 = !DILocation(line: 816, column: 19, scope: !8267)
!8270 = !DILocation(line: 816, column: 5, scope: !8267)
!8271 = !DILocation(line: 817, column: 16, scope: !8268)
!8272 = !DILocation(line: 817, column: 22, scope: !8268)
!8273 = !DILocation(line: 817, column: 24, scope: !8268)
!8274 = !DILocation(line: 817, column: 23, scope: !8268)
!8275 = !DILocation(line: 817, column: 20, scope: !8268)
!8276 = !DILocation(line: 817, column: 32, scope: !8268)
!8277 = !DILocation(line: 817, column: 38, scope: !8268)
!8278 = !DILocation(line: 817, column: 39, scope: !8268)
!8279 = !DILocation(line: 817, column: 36, scope: !8268)
!8280 = !DILocation(line: 817, column: 9, scope: !8268)
!8281 = !DILocation(line: 816, column: 25, scope: !8282)
!8282 = !DILexicalBlockFile(scope: !8268, file: !888, discriminator: 2)
!8283 = !DILocation(line: 816, column: 5, scope: !8282)
!8284 = distinct !{!8284, !8285}
!8285 = !DILocation(line: 816, column: 5, scope: !8227)
!8286 = !DILocation(line: 818, column: 1, scope: !8227)
!8287 = distinct !DISubprogram(name: "binkb_init_bundle", scope: !888, file: !888, line: 541, type: !8288, isLocal: true, isDefinition: true, scopeLine: 542, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1672)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !1739, !926}
!8290 = !DILocalVariable(name: "c", arg: 1, scope: !8287, file: !888, line: 541, type: !1739)
!8291 = !DILocation(line: 541, column: 66, scope: !8287)
!8292 = !DILocalVariable(name: "bundle_num", arg: 2, scope: !8287, file: !888, line: 541, type: !926)
!8293 = !DILocation(line: 541, column: 73, scope: !8287)
!8294 = !DILocation(line: 544, column: 47, scope: !8287)
!8295 = !DILocation(line: 544, column: 37, scope: !8287)
!8296 = !DILocation(line: 544, column: 40, scope: !8287)
!8297 = !DILocation(line: 544, column: 59, scope: !8287)
!8298 = !DILocation(line: 544, column: 15, scope: !8287)
!8299 = !DILocation(line: 544, column: 5, scope: !8287)
!8300 = !DILocation(line: 544, column: 8, scope: !8287)
!8301 = !DILocation(line: 544, column: 27, scope: !8287)
!8302 = !DILocation(line: 544, column: 35, scope: !8287)
!8303 = !DILocation(line: 543, column: 15, scope: !8287)
!8304 = !DILocation(line: 543, column: 5, scope: !8287)
!8305 = !DILocation(line: 543, column: 8, scope: !8287)
!8306 = !DILocation(line: 543, column: 27, scope: !8287)
!8307 = !DILocation(line: 543, column: 35, scope: !8287)
!8308 = !DILocation(line: 545, column: 15, scope: !8287)
!8309 = !DILocation(line: 545, column: 5, scope: !8287)
!8310 = !DILocation(line: 545, column: 8, scope: !8287)
!8311 = !DILocation(line: 545, column: 27, scope: !8287)
!8312 = !DILocation(line: 545, column: 31, scope: !8287)
!8313 = !DILocation(line: 546, column: 1, scope: !8287)
