; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--apedec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--apedec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.APEContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.BswapDSPContext, %struct.LLAudDSPContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.APEPredictor, i32*, i32, [2 x i32*], i32, [3 x i16*], %struct.APERangecoder, %struct.APERice, %struct.APERice, [3 x [2 x %struct.APEFilter]], %struct.GetBitContext, i8*, i8*, i32, i8*, i32, void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)* }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.LLAudDSPContext = type { i32 (i16*, i16*, i16*, i32, i32)*, i32 (i16*, i32*, i16*, i32, i32)* }
%struct.APEPredictor = type { i32*, [2 x i32], [2 x i32], [2 x i32], [2 x [4 x i32]], [2 x [5 x i32]], [562 x i32], i32 }
%struct.APERangecoder = type { i32, i32, i32, i32 }
%struct.APERice = type { i32, i32 }
%struct.APEFilter = type { i16*, i16*, i16*, i16*, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [4 x i8] c"ape\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Monkey's Audio\00", align 1
@.compoundliteral = internal constant [4 x i32] [i32 5, i32 6, i32 7, i32 -1], align 4
@ape_decoder_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_ape_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86048, i32 290, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @ape_decoder_class, %struct.AVProfile* null, i8* null, i32 2888, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @ape_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @ape_decode_frame, i32 (%struct.AVCodecContext*)* @ape_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @ape_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"APE decoder\00", align 1
@options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i32 0, i32 0), i32 2480, i32 1, %union.anon { i64 4608 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2147483647 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVOption zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [12 x i8] c"max_samples\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"maximum number of samples decoded per call\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"no maximum. decode all samples for each packet at once\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Incorrect extradata\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"Only mono and stereo is supported\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"%d bits per coded sample\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"Compression Level: %d - Flags: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"Incorrect compression level %d\0A\00", align 1
@ape_filter_orders = internal constant [5 x [3 x i16]] [[3 x i16] zeroinitializer, [3 x i16] [i16 16, i16 0, i16 0], [3 x i16] [i16 64, i16 0, i16 0], [3 x i16] [i16 32, i16 256, i16 0], [3 x i16] [i16 16, i16 256, i16 1280]], align 16
@.str.12 = private unnamed_addr constant [25 x i8] c"Cannot allocate memory.\0A\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Too many bits: %u\0A\00", align 1
@counts_3970 = internal constant [22 x i16] [i16 0, i16 14824, i16 28224, i16 -26188, i16 -17681, i16 -11542, i16 -7365, i16 -4610, i16 -2854, i16 -1750, i16 -1073, i16 -658, i16 -410, i16 -260, i16 -171, i16 -117, i16 -86, i16 -67, i16 -56, i16 -49, i16 -45, i16 -43], align 16
@counts_diff_3970 = internal constant [21 x i16] [i16 14824, i16 13400, i16 11124, i16 8507, i16 6139, i16 4177, i16 2755, i16 1756, i16 1104, i16 677, i16 415, i16 248, i16 150, i16 89, i16 54, i16 31, i16 19, i16 11, i16 7, i16 4, i16 2], align 16
@.str.14 = private unnamed_addr constant [19 x i8] c"Too many bits: %d\0A\00", align 1
@counts_3980 = internal constant [22 x i16] [i16 0, i16 19578, i16 -29376, i16 -17119, i16 -9213, i16 -4637, i16 -2271, i16 -1101, i16 -565, i16 -304, i16 -185, i16 -120, i16 -89, i16 -70, i16 -60, i16 -54, i16 -51, i16 -48, i16 -46, i16 -45, i16 -44, i16 -43], align 16
@counts_diff_3980 = internal constant [21 x i16] [i16 19578, i16 16582, i16 12257, i16 7906, i16 4576, i16 2366, i16 1170, i16 536, i16 261, i16 119, i16 65, i16 31, i16 19, i16 10, i16 6, i16 3, i16 3, i16 2, i16 1, i16 1, i16 1], align 16
@ape_filter_fracbits = internal constant [5 x [3 x i8]] [[3 x i8] zeroinitializer, [3 x i8] c"\0B\00\00", [3 x i8] c"\0B\00\00", [3 x i8] c"\0A\0D\00", [3 x i8] c"\0B\0D\0F"], align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"s->samples >= 0\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"libavcodec/apedec.c\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"Packet is too small\0A\00", align 1
@.str.19 = private unnamed_addr constant [77 x i8] c"packet size is not a multiple of 4. extra bytes at the end will be skipped.\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Incorrect offset passed\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"Invalid sample count: %u.\0A\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"Error reading frame header\0A\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"decoded_buffer_size <= 0x7fffffff\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"Error decoding frame\0A\00", align 1
@initial_coeffs_fast_3320 = internal constant [1 x i32] [i32 375], align 4
@initial_coeffs_a_3800 = internal constant [3 x i32] [i32 64, i32 115, i32 64], align 4
@initial_coeffs_3930 = internal constant [4 x i32] [i32 360, i32 317, i32 -109, i32 98], align 16
@initial_coeffs_b_3800 = internal constant [2 x i32] [i32 740, i32 0], align 4
@.str.25 = private unnamed_addr constant [19 x i8] c"pure silence mono\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"pure silence stereo\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ape_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1744 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.APEContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1746, metadata !1747), !dbg !1748
  call void @llvm.dbg.declare(metadata %struct.APEContext** %s, metadata !1749, metadata !1747), !dbg !1872
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1873
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1874
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1874
  %2 = bitcast i8* %1 to %struct.APEContext*, !dbg !1873
  store %struct.APEContext* %2, %struct.APEContext** %s, align 8, !dbg !1872
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1875, metadata !1747), !dbg !1876
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1877
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 16, !dbg !1879
  %4 = load i32, i32* %extradata_size, align 8, !dbg !1879
  %cmp = icmp ne i32 %4, 6, !dbg !1880
  br i1 %cmp, label %if.then, label %if.end, !dbg !1881

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1882
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !1882
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0)), !dbg !1884
  store i32 -22, i32* %retval, align 4, !dbg !1885
  br label %return, !dbg !1885

if.end:                                           ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1886
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 83, !dbg !1888
  %8 = load i32, i32* %channels, align 4, !dbg !1888
  %cmp1 = icmp sgt i32 %8, 2, !dbg !1889
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1890

if.then2:                                         ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1891
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !1891
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i32 0, i32 0)), !dbg !1893
  store i32 -22, i32* %retval, align 4, !dbg !1894
  br label %return, !dbg !1894

if.end3:                                          ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1895
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 142, !dbg !1896
  %12 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !1896
  %13 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1897
  %bps = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 6, !dbg !1898
  store i32 %12, i32* %bps, align 8, !dbg !1899
  %14 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1900
  %bps4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %14, i32 0, i32 6, !dbg !1901
  %15 = load i32, i32* %bps4, align 8, !dbg !1901
  switch i32 %15, label %sw.default [
    i32 8, label %sw.bb
    i32 16, label %sw.bb5
    i32 24, label %sw.bb7
  ], !dbg !1902

sw.bb:                                            ; preds = %if.end3
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1903
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 84, !dbg !1905
  store i32 5, i32* %sample_fmt, align 8, !dbg !1906
  br label %sw.epilog, !dbg !1907

sw.bb5:                                           ; preds = %if.end3
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1908
  %sample_fmt6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 84, !dbg !1909
  store i32 6, i32* %sample_fmt6, align 8, !dbg !1910
  br label %sw.epilog, !dbg !1911

sw.bb7:                                           ; preds = %if.end3
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1912
  %sample_fmt8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 84, !dbg !1913
  store i32 7, i32* %sample_fmt8, align 8, !dbg !1914
  br label %sw.epilog, !dbg !1915

sw.default:                                       ; preds = %if.end3
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1916
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !1916
  %21 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1917
  %bps9 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %21, i32 0, i32 6, !dbg !1918
  %22 = load i32, i32* %bps9, align 8, !dbg !1918
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i32 0, i32 0), i32 %22), !dbg !1919
  store i32 -1163346256, i32* %retval, align 4, !dbg !1920
  br label %return, !dbg !1920

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb5, %sw.bb
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1921
  %24 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1922
  %avctx10 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %24, i32 0, i32 1, !dbg !1923
  store %struct.AVCodecContext* %23, %struct.AVCodecContext** %avctx10, align 8, !dbg !1924
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1925
  %channels11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %25, i32 0, i32 83, !dbg !1926
  %26 = load i32, i32* %channels11, align 4, !dbg !1926
  %27 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1927
  %channels12 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %27, i32 0, i32 4, !dbg !1928
  store i32 %26, i32* %channels12, align 8, !dbg !1929
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1930
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 15, !dbg !1931
  %29 = load i8*, i8** %extradata, align 8, !dbg !1931
  %30 = bitcast i8* %29 to %union.unaligned_16*, !dbg !1932
  %l = bitcast %union.unaligned_16* %30 to i16*, !dbg !1932
  %31 = load i16, i16* %l, align 1, !dbg !1932
  %conv = zext i16 %31 to i32, !dbg !1933
  %32 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1934
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %32, i32 0, i32 7, !dbg !1935
  store i32 %conv, i32* %fileversion, align 4, !dbg !1936
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1937
  %extradata13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 15, !dbg !1938
  %34 = load i8*, i8** %extradata13, align 8, !dbg !1938
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 2, !dbg !1939
  %35 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !1940
  %l14 = bitcast %union.unaligned_16* %35 to i16*, !dbg !1940
  %36 = load i16, i16* %l14, align 1, !dbg !1940
  %conv15 = zext i16 %36 to i32, !dbg !1941
  %37 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1942
  %compression_level = getelementptr inbounds %struct.APEContext, %struct.APEContext* %37, i32 0, i32 8, !dbg !1943
  store i32 %conv15, i32* %compression_level, align 8, !dbg !1944
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1945
  %extradata16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 15, !dbg !1946
  %39 = load i8*, i8** %extradata16, align 8, !dbg !1946
  %add.ptr17 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !1947
  %40 = bitcast i8* %add.ptr17 to %union.unaligned_16*, !dbg !1948
  %l18 = bitcast %union.unaligned_16* %40 to i16*, !dbg !1948
  %41 = load i16, i16* %l18, align 1, !dbg !1948
  %conv19 = zext i16 %41 to i32, !dbg !1949
  %42 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1950
  %flags = getelementptr inbounds %struct.APEContext, %struct.APEContext* %42, i32 0, i32 10, !dbg !1951
  store i32 %conv19, i32* %flags, align 8, !dbg !1952
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1953
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !1953
  %45 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1954
  %compression_level20 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %45, i32 0, i32 8, !dbg !1955
  %46 = load i32, i32* %compression_level20, align 8, !dbg !1955
  %47 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1956
  %flags21 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %47, i32 0, i32 10, !dbg !1957
  %48 = load i32, i32* %flags21, align 8, !dbg !1957
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 40, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i32 0, i32 0), i32 %46, i32 %48), !dbg !1958
  %49 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1959
  %compression_level22 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %49, i32 0, i32 8, !dbg !1961
  %50 = load i32, i32* %compression_level22, align 8, !dbg !1961
  %rem = srem i32 %50, 1000, !dbg !1962
  %tobool = icmp ne i32 %rem, 0, !dbg !1962
  br i1 %tobool, label %if.then36, label %lor.lhs.false, !dbg !1963

lor.lhs.false:                                    ; preds = %sw.epilog
  %51 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1964
  %compression_level23 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %51, i32 0, i32 8, !dbg !1966
  %52 = load i32, i32* %compression_level23, align 8, !dbg !1966
  %cmp24 = icmp sgt i32 %52, 5000, !dbg !1967
  br i1 %cmp24, label %if.then36, label %lor.lhs.false26, !dbg !1968

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %53 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1969
  %compression_level27 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %53, i32 0, i32 8, !dbg !1970
  %54 = load i32, i32* %compression_level27, align 8, !dbg !1970
  %tobool28 = icmp ne i32 %54, 0, !dbg !1969
  br i1 %tobool28, label %lor.lhs.false29, label %if.then36, !dbg !1971

lor.lhs.false29:                                  ; preds = %lor.lhs.false26
  %55 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1972
  %fileversion30 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %55, i32 0, i32 7, !dbg !1973
  %56 = load i32, i32* %fileversion30, align 4, !dbg !1973
  %cmp31 = icmp slt i32 %56, 3930, !dbg !1974
  br i1 %cmp31, label %land.lhs.true, label %if.end38, !dbg !1975

land.lhs.true:                                    ; preds = %lor.lhs.false29
  %57 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1976
  %compression_level33 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %57, i32 0, i32 8, !dbg !1977
  %58 = load i32, i32* %compression_level33, align 8, !dbg !1977
  %cmp34 = icmp eq i32 %58, 5000, !dbg !1978
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !1979

if.then36:                                        ; preds = %land.lhs.true, %lor.lhs.false26, %lor.lhs.false, %sw.epilog
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1981
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !1981
  %61 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1983
  %compression_level37 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %61, i32 0, i32 8, !dbg !1984
  %62 = load i32, i32* %compression_level37, align 8, !dbg !1984
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i32 %62), !dbg !1985
  store i32 -1094995529, i32* %retval, align 4, !dbg !1986
  br label %return, !dbg !1986

if.end38:                                         ; preds = %land.lhs.true, %lor.lhs.false29
  %63 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1987
  %compression_level39 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %63, i32 0, i32 8, !dbg !1988
  %64 = load i32, i32* %compression_level39, align 8, !dbg !1988
  %div = sdiv i32 %64, 1000, !dbg !1989
  %sub = sub nsw i32 %div, 1, !dbg !1990
  %65 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !1991
  %fset = getelementptr inbounds %struct.APEContext, %struct.APEContext* %65, i32 0, i32 9, !dbg !1992
  store i32 %sub, i32* %fset, align 4, !dbg !1993
  store i32 0, i32* %i, align 4, !dbg !1994
  br label %for.cond, !dbg !1996

for.cond:                                         ; preds = %for.inc, %if.end38
  %66 = load i32, i32* %i, align 4, !dbg !1997
  %cmp40 = icmp slt i32 %66, 3, !dbg !2000
  br i1 %cmp40, label %for.body, label %for.end, !dbg !2001

for.body:                                         ; preds = %for.cond
  %67 = load i32, i32* %i, align 4, !dbg !2002
  %idxprom = sext i32 %67 to i64, !dbg !2005
  %68 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2006
  %fset42 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %68, i32 0, i32 9, !dbg !2007
  %69 = load i32, i32* %fset42, align 4, !dbg !2007
  %idxprom43 = sext i32 %69 to i64, !dbg !2005
  %arrayidx = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom43, !dbg !2005
  %arrayidx44 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !2005
  %70 = load i16, i16* %arrayidx44, align 2, !dbg !2005
  %tobool45 = icmp ne i16 %70, 0, !dbg !2005
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !2008

if.then46:                                        ; preds = %for.body
  br label %for.end, !dbg !2009

if.end47:                                         ; preds = %for.body
  %71 = load i32, i32* %i, align 4, !dbg !2010
  %idxprom48 = sext i32 %71 to i64, !dbg !2012
  %72 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2013
  %fset49 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %72, i32 0, i32 9, !dbg !2014
  %73 = load i32, i32* %fset49, align 4, !dbg !2014
  %idxprom50 = sext i32 %73 to i64, !dbg !2012
  %arrayidx51 = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom50, !dbg !2012
  %arrayidx52 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !2012
  %74 = load i16, i16* %arrayidx52, align 2, !dbg !2012
  %conv53 = zext i16 %74 to i32, !dbg !2012
  %mul = mul nsw i32 %conv53, 3, !dbg !2015
  %add = add nsw i32 %mul, 512, !dbg !2016
  %mul54 = mul nsw i32 %add, 4, !dbg !2017
  %conv55 = sext i32 %mul54 to i64, !dbg !2018
  %call = call noalias i8* @av_malloc(i64 %conv55), !dbg !2019
  %75 = bitcast i8* %call to i16*, !dbg !2019
  %76 = load i32, i32* %i, align 4, !dbg !2020
  %idxprom56 = sext i32 %76 to i64, !dbg !2021
  %77 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2021
  %filterbuf = getelementptr inbounds %struct.APEContext, %struct.APEContext* %77, i32 0, i32 18, !dbg !2022
  %arrayidx57 = getelementptr inbounds [3 x i16*], [3 x i16*]* %filterbuf, i64 0, i64 %idxprom56, !dbg !2021
  store i16* %75, i16** %arrayidx57, align 8, !dbg !2023
  %78 = load i32, i32* %i, align 4, !dbg !2024
  %idxprom58 = sext i32 %78 to i64, !dbg !2026
  %79 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2026
  %filterbuf59 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %79, i32 0, i32 18, !dbg !2027
  %arrayidx60 = getelementptr inbounds [3 x i16*], [3 x i16*]* %filterbuf59, i64 0, i64 %idxprom58, !dbg !2026
  %80 = load i16*, i16** %arrayidx60, align 8, !dbg !2026
  %tobool61 = icmp ne i16* %80, null, !dbg !2028
  br i1 %tobool61, label %if.end75, label %land.lhs.true62, !dbg !2029

land.lhs.true62:                                  ; preds = %if.end47
  %81 = load i32, i32* %i, align 4, !dbg !2030
  %idxprom63 = sext i32 %81 to i64, !dbg !2032
  %82 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2033
  %fset64 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %82, i32 0, i32 9, !dbg !2034
  %83 = load i32, i32* %fset64, align 4, !dbg !2034
  %idxprom65 = sext i32 %83 to i64, !dbg !2032
  %arrayidx66 = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom65, !dbg !2032
  %arrayidx67 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx66, i64 0, i64 %idxprom63, !dbg !2032
  %84 = load i16, i16* %arrayidx67, align 2, !dbg !2032
  %conv68 = zext i16 %84 to i32, !dbg !2032
  %mul69 = mul nsw i32 %conv68, 3, !dbg !2035
  %add70 = add nsw i32 %mul69, 512, !dbg !2036
  %mul71 = mul nsw i32 %add70, 4, !dbg !2037
  %cmp72 = icmp ne i32 %mul71, 0, !dbg !2038
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !2039

if.then74:                                        ; preds = %land.lhs.true62
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2040
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !2040
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i32 0, i32 0)), !dbg !2043
  br label %filter_alloc_fail, !dbg !2044

if.end75:                                         ; preds = %land.lhs.true62, %if.end47
  br label %for.inc, !dbg !2045

for.inc:                                          ; preds = %if.end75
  %87 = load i32, i32* %i, align 4, !dbg !2046
  %inc = add nsw i32 %87, 1, !dbg !2046
  store i32 %inc, i32* %i, align 4, !dbg !2046
  br label %for.cond, !dbg !2048, !llvm.loop !2049

for.end:                                          ; preds = %if.then46, %for.cond
  %88 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2051
  %fileversion76 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %88, i32 0, i32 7, !dbg !2053
  %89 = load i32, i32* %fileversion76, align 4, !dbg !2053
  %cmp77 = icmp slt i32 %89, 3860, !dbg !2054
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !2055

if.then79:                                        ; preds = %for.end
  %90 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2056
  %entropy_decode_mono = getelementptr inbounds %struct.APEContext, %struct.APEContext* %90, i32 0, i32 29, !dbg !2058
  store void (%struct.APEContext*, i32)* @entropy_decode_mono_0000, void (%struct.APEContext*, i32)** %entropy_decode_mono, align 8, !dbg !2059
  %91 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2060
  %entropy_decode_stereo = getelementptr inbounds %struct.APEContext, %struct.APEContext* %91, i32 0, i32 30, !dbg !2061
  store void (%struct.APEContext*, i32)* @entropy_decode_stereo_0000, void (%struct.APEContext*, i32)** %entropy_decode_stereo, align 8, !dbg !2062
  br label %if.end106, !dbg !2063

if.else:                                          ; preds = %for.end
  %92 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2064
  %fileversion80 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %92, i32 0, i32 7, !dbg !2067
  %93 = load i32, i32* %fileversion80, align 4, !dbg !2067
  %cmp81 = icmp slt i32 %93, 3900, !dbg !2068
  br i1 %cmp81, label %if.then83, label %if.else86, !dbg !2064

if.then83:                                        ; preds = %if.else
  %94 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2069
  %entropy_decode_mono84 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %94, i32 0, i32 29, !dbg !2071
  store void (%struct.APEContext*, i32)* @entropy_decode_mono_3860, void (%struct.APEContext*, i32)** %entropy_decode_mono84, align 8, !dbg !2072
  %95 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2073
  %entropy_decode_stereo85 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %95, i32 0, i32 30, !dbg !2074
  store void (%struct.APEContext*, i32)* @entropy_decode_stereo_3860, void (%struct.APEContext*, i32)** %entropy_decode_stereo85, align 8, !dbg !2075
  br label %if.end105, !dbg !2076

if.else86:                                        ; preds = %if.else
  %96 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2077
  %fileversion87 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %96, i32 0, i32 7, !dbg !2080
  %97 = load i32, i32* %fileversion87, align 4, !dbg !2080
  %cmp88 = icmp slt i32 %97, 3930, !dbg !2081
  br i1 %cmp88, label %if.then90, label %if.else93, !dbg !2077

if.then90:                                        ; preds = %if.else86
  %98 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2082
  %entropy_decode_mono91 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %98, i32 0, i32 29, !dbg !2084
  store void (%struct.APEContext*, i32)* @entropy_decode_mono_3900, void (%struct.APEContext*, i32)** %entropy_decode_mono91, align 8, !dbg !2085
  %99 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2086
  %entropy_decode_stereo92 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %99, i32 0, i32 30, !dbg !2087
  store void (%struct.APEContext*, i32)* @entropy_decode_stereo_3900, void (%struct.APEContext*, i32)** %entropy_decode_stereo92, align 8, !dbg !2088
  br label %if.end104, !dbg !2089

if.else93:                                        ; preds = %if.else86
  %100 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2090
  %fileversion94 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %100, i32 0, i32 7, !dbg !2093
  %101 = load i32, i32* %fileversion94, align 4, !dbg !2093
  %cmp95 = icmp slt i32 %101, 3990, !dbg !2094
  br i1 %cmp95, label %if.then97, label %if.else100, !dbg !2090

if.then97:                                        ; preds = %if.else93
  %102 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2095
  %entropy_decode_mono98 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %102, i32 0, i32 29, !dbg !2097
  store void (%struct.APEContext*, i32)* @entropy_decode_mono_3900, void (%struct.APEContext*, i32)** %entropy_decode_mono98, align 8, !dbg !2098
  %103 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2099
  %entropy_decode_stereo99 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %103, i32 0, i32 30, !dbg !2100
  store void (%struct.APEContext*, i32)* @entropy_decode_stereo_3930, void (%struct.APEContext*, i32)** %entropy_decode_stereo99, align 8, !dbg !2101
  br label %if.end103, !dbg !2102

if.else100:                                       ; preds = %if.else93
  %104 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2103
  %entropy_decode_mono101 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %104, i32 0, i32 29, !dbg !2105
  store void (%struct.APEContext*, i32)* @entropy_decode_mono_3990, void (%struct.APEContext*, i32)** %entropy_decode_mono101, align 8, !dbg !2106
  %105 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2107
  %entropy_decode_stereo102 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %105, i32 0, i32 30, !dbg !2108
  store void (%struct.APEContext*, i32)* @entropy_decode_stereo_3990, void (%struct.APEContext*, i32)** %entropy_decode_stereo102, align 8, !dbg !2109
  br label %if.end103

if.end103:                                        ; preds = %if.else100, %if.then97
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then90
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then83
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then79
  %106 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2110
  %fileversion107 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %106, i32 0, i32 7, !dbg !2112
  %107 = load i32, i32* %fileversion107, align 4, !dbg !2112
  %cmp108 = icmp slt i32 %107, 3930, !dbg !2113
  br i1 %cmp108, label %if.then110, label %if.else111, !dbg !2114

if.then110:                                       ; preds = %if.end106
  %108 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2115
  %predictor_decode_mono = getelementptr inbounds %struct.APEContext, %struct.APEContext* %108, i32 0, i32 31, !dbg !2117
  store void (%struct.APEContext*, i32)* @predictor_decode_mono_3800, void (%struct.APEContext*, i32)** %predictor_decode_mono, align 8, !dbg !2118
  %109 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2119
  %predictor_decode_stereo = getelementptr inbounds %struct.APEContext, %struct.APEContext* %109, i32 0, i32 32, !dbg !2120
  store void (%struct.APEContext*, i32)* @predictor_decode_stereo_3800, void (%struct.APEContext*, i32)** %predictor_decode_stereo, align 8, !dbg !2121
  br label %if.end122, !dbg !2122

if.else111:                                       ; preds = %if.end106
  %110 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2123
  %fileversion112 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %110, i32 0, i32 7, !dbg !2126
  %111 = load i32, i32* %fileversion112, align 4, !dbg !2126
  %cmp113 = icmp slt i32 %111, 3950, !dbg !2127
  br i1 %cmp113, label %if.then115, label %if.else118, !dbg !2123

if.then115:                                       ; preds = %if.else111
  %112 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2128
  %predictor_decode_mono116 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %112, i32 0, i32 31, !dbg !2130
  store void (%struct.APEContext*, i32)* @predictor_decode_mono_3930, void (%struct.APEContext*, i32)** %predictor_decode_mono116, align 8, !dbg !2131
  %113 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2132
  %predictor_decode_stereo117 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %113, i32 0, i32 32, !dbg !2133
  store void (%struct.APEContext*, i32)* @predictor_decode_stereo_3930, void (%struct.APEContext*, i32)** %predictor_decode_stereo117, align 8, !dbg !2134
  br label %if.end121, !dbg !2135

if.else118:                                       ; preds = %if.else111
  %114 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2136
  %predictor_decode_mono119 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %114, i32 0, i32 31, !dbg !2138
  store void (%struct.APEContext*, i32)* @predictor_decode_mono_3950, void (%struct.APEContext*, i32)** %predictor_decode_mono119, align 8, !dbg !2139
  %115 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2140
  %predictor_decode_stereo120 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %115, i32 0, i32 32, !dbg !2141
  store void (%struct.APEContext*, i32)* @predictor_decode_stereo_3950, void (%struct.APEContext*, i32)** %predictor_decode_stereo120, align 8, !dbg !2142
  br label %if.end121

if.end121:                                        ; preds = %if.else118, %if.then115
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then110
  %116 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2143
  %bdsp = getelementptr inbounds %struct.APEContext, %struct.APEContext* %116, i32 0, i32 2, !dbg !2144
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !2145
  %117 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2146
  %adsp = getelementptr inbounds %struct.APEContext, %struct.APEContext* %117, i32 0, i32 3, !dbg !2147
  call void @ff_llauddsp_init(%struct.LLAudDSPContext* %adsp), !dbg !2148
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2149
  %channels123 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %118, i32 0, i32 83, !dbg !2150
  %119 = load i32, i32* %channels123, align 4, !dbg !2150
  %cmp124 = icmp eq i32 %119, 2, !dbg !2151
  %cond = select i1 %cmp124, i32 3, i32 4, !dbg !2152
  %conv126 = sext i32 %cond to i64, !dbg !2152
  %120 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2153
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %120, i32 0, i32 89, !dbg !2154
  store i64 %conv126, i64* %channel_layout, align 8, !dbg !2155
  store i32 0, i32* %retval, align 4, !dbg !2156
  br label %return, !dbg !2156

filter_alloc_fail:                                ; preds = %if.then74
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2157
  %call127 = call i32 @ape_decode_close(%struct.AVCodecContext* %121), !dbg !2158
  store i32 -12, i32* %retval, align 4, !dbg !2159
  br label %return, !dbg !2159

return:                                           ; preds = %filter_alloc_fail, %if.end122, %if.then36, %sw.default, %if.then2, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !2160
  ret i32 %122, !dbg !2160
}

; Function Attrs: nounwind uwtable
define internal i32 @ape_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2161 {
entry:
  %x.addr.i.i230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i230, metadata !2162, metadata !1747), !dbg !2167
  %b.addr.i231 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i231, metadata !2177, metadata !1747), !dbg !2178
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2162, metadata !1747), !dbg !2179
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2177, metadata !1747), !dbg !2182
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %s = alloca %struct.APEContext*, align 8
  %sample8 = alloca i8*, align 8
  %sample16 = alloca i16*, align 8
  %sample24 = alloca i32*, align 8
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %blockstodecode = alloca i32, align 4
  %decoded_buffer_size = alloca i64, align 8
  %nblocks = alloca i32, align 4
  %offset = alloca i32, align 4
  %buf_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2183, metadata !1747), !dbg !2184
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2185, metadata !1747), !dbg !2186
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2187, metadata !1747), !dbg !2188
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2189, metadata !1747), !dbg !2190
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2191, metadata !1747), !dbg !2192
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2193
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2193
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2192
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2194, metadata !1747), !dbg !2195
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2196
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2197
  %3 = load i8*, i8** %data1, align 8, !dbg !2197
  store i8* %3, i8** %buf, align 8, !dbg !2195
  call void @llvm.dbg.declare(metadata %struct.APEContext** %s, metadata !2198, metadata !1747), !dbg !2199
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2200
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2201
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2201
  %6 = bitcast i8* %5 to %struct.APEContext*, !dbg !2200
  store %struct.APEContext* %6, %struct.APEContext** %s, align 8, !dbg !2199
  call void @llvm.dbg.declare(metadata i8** %sample8, metadata !2202, metadata !1747), !dbg !2203
  call void @llvm.dbg.declare(metadata i16** %sample16, metadata !2204, metadata !1747), !dbg !2205
  call void @llvm.dbg.declare(metadata i32** %sample24, metadata !2206, metadata !1747), !dbg !2207
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2208, metadata !1747), !dbg !2209
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2210, metadata !1747), !dbg !2211
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2212, metadata !1747), !dbg !2213
  call void @llvm.dbg.declare(metadata i32* %blockstodecode, metadata !2214, metadata !1747), !dbg !2215
  call void @llvm.dbg.declare(metadata i64* %decoded_buffer_size, metadata !2216, metadata !1747), !dbg !2217
  br label %do.body, !dbg !2218, !llvm.loop !2219

do.body:                                          ; preds = %entry
  %7 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2220
  %samples = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 5, !dbg !2224
  %8 = load i32, i32* %samples, align 4, !dbg !2224
  %cmp = icmp sge i32 %8, 0, !dbg !2225
  br i1 %cmp, label %if.end, label %if.then, !dbg !2226

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i32 1419), !dbg !2227
  call void @abort() #7, !dbg !2230
  unreachable, !dbg !2232

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !2233

do.end:                                           ; preds = %if.end
  %9 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2235
  %samples2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 5, !dbg !2236
  %10 = load i32, i32* %samples2, align 4, !dbg !2236
  %tobool = icmp ne i32 %10, 0, !dbg !2235
  br i1 %tobool, label %if.end88, label %if.then3, !dbg !2237

if.then3:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %nblocks, metadata !2238, metadata !1747), !dbg !2239
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2240, metadata !1747), !dbg !2241
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2242, metadata !1747), !dbg !2243
  %11 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2244
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 4, !dbg !2246
  %12 = load i32, i32* %size, align 8, !dbg !2246
  %tobool4 = icmp ne i32 %12, 0, !dbg !2244
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !2247

if.then5:                                         ; preds = %if.then3
  %13 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2248
  store i32 0, i32* %13, align 4, !dbg !2250
  store i32 0, i32* %retval, align 4, !dbg !2251
  br label %return, !dbg !2251

if.end6:                                          ; preds = %if.then3
  %14 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2252
  %size7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 4, !dbg !2254
  %15 = load i32, i32* %size7, align 8, !dbg !2254
  %cmp8 = icmp slt i32 %15, 8, !dbg !2255
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2256

if.then9:                                         ; preds = %if.end6
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2257
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !2257
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)), !dbg !2259
  store i32 -1094995529, i32* %retval, align 4, !dbg !2260
  br label %return, !dbg !2260

if.end10:                                         ; preds = %if.end6
  %18 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2261
  %size11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 4, !dbg !2262
  %19 = load i32, i32* %size11, align 8, !dbg !2262
  %and = and i32 %19, -4, !dbg !2263
  store i32 %and, i32* %buf_size, align 4, !dbg !2264
  %20 = load i32, i32* %buf_size, align 4, !dbg !2265
  %21 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2267
  %size12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %21, i32 0, i32 4, !dbg !2268
  %22 = load i32, i32* %size12, align 8, !dbg !2268
  %cmp13 = icmp ne i32 %20, %22, !dbg !2269
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2270

if.then14:                                        ; preds = %if.end10
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2271
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !2271
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 24, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.19, i32 0, i32 0)), !dbg !2273
  br label %if.end15, !dbg !2274

if.end15:                                         ; preds = %if.then14, %if.end10
  %25 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2275
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %25, i32 0, i32 7, !dbg !2277
  %26 = load i32, i32* %fileversion, align 4, !dbg !2277
  %cmp16 = icmp slt i32 %26, 3950, !dbg !2278
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2279

if.then17:                                        ; preds = %if.end15
  %27 = load i32, i32* %buf_size, align 4, !dbg !2280
  %add = add nsw i32 %27, 2, !dbg !2280
  store i32 %add, i32* %buf_size, align 4, !dbg !2280
  br label %if.end18, !dbg !2281

if.end18:                                         ; preds = %if.then17, %if.end15
  %28 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2282
  %data19 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %28, i32 0, i32 24, !dbg !2283
  %29 = bitcast i8** %data19 to i8*, !dbg !2284
  %30 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2285
  %data_size = getelementptr inbounds %struct.APEContext, %struct.APEContext* %30, i32 0, i32 26, !dbg !2286
  %31 = load i32, i32* %buf_size, align 4, !dbg !2287
  %conv = sext i32 %31 to i64, !dbg !2287
  call void @av_fast_padded_malloc(i8* %29, i32* %data_size, i64 %conv), !dbg !2288
  %32 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2289
  %data20 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %32, i32 0, i32 24, !dbg !2291
  %33 = load i8*, i8** %data20, align 8, !dbg !2291
  %tobool21 = icmp ne i8* %33, null, !dbg !2289
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !2292

if.then22:                                        ; preds = %if.end18
  store i32 -12, i32* %retval, align 4, !dbg !2293
  br label %return, !dbg !2293

if.end23:                                         ; preds = %if.end18
  %34 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2294
  %bdsp = getelementptr inbounds %struct.APEContext, %struct.APEContext* %34, i32 0, i32 2, !dbg !2295
  %bswap_buf = getelementptr inbounds %struct.BswapDSPContext, %struct.BswapDSPContext* %bdsp, i32 0, i32 0, !dbg !2296
  %35 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %bswap_buf, align 8, !dbg !2296
  %36 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2297
  %data24 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %36, i32 0, i32 24, !dbg !2298
  %37 = load i8*, i8** %data24, align 8, !dbg !2298
  %38 = bitcast i8* %37 to i32*, !dbg !2299
  %39 = load i8*, i8** %buf, align 8, !dbg !2300
  %40 = bitcast i8* %39 to i32*, !dbg !2301
  %41 = load i32, i32* %buf_size, align 4, !dbg !2302
  %shr = ashr i32 %41, 2, !dbg !2303
  call void %35(i32* %38, i32* %40, i32 %shr), !dbg !2294
  %42 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2304
  %data25 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %42, i32 0, i32 24, !dbg !2305
  %43 = load i8*, i8** %data25, align 8, !dbg !2305
  %44 = load i32, i32* %buf_size, align 4, !dbg !2306
  %and26 = and i32 %44, -4, !dbg !2307
  %idx.ext = sext i32 %and26 to i64, !dbg !2308
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %idx.ext, !dbg !2308
  %45 = load i32, i32* %buf_size, align 4, !dbg !2309
  %and27 = and i32 %45, 3, !dbg !2310
  %conv28 = sext i32 %and27 to i64, !dbg !2309
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv28, i32 1, i1 false), !dbg !2311
  %46 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2312
  %data29 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %46, i32 0, i32 24, !dbg !2313
  %47 = load i8*, i8** %data29, align 8, !dbg !2313
  %48 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2314
  %ptr = getelementptr inbounds %struct.APEContext, %struct.APEContext* %48, i32 0, i32 27, !dbg !2315
  store i8* %47, i8** %ptr, align 8, !dbg !2316
  %49 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2317
  %data30 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %49, i32 0, i32 24, !dbg !2318
  %50 = load i8*, i8** %data30, align 8, !dbg !2318
  %51 = load i32, i32* %buf_size, align 4, !dbg !2319
  %idx.ext31 = sext i32 %51 to i64, !dbg !2320
  %add.ptr32 = getelementptr inbounds i8, i8* %50, i64 %idx.ext31, !dbg !2320
  %52 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2321
  %data_end = getelementptr inbounds %struct.APEContext, %struct.APEContext* %52, i32 0, i32 25, !dbg !2322
  store i8* %add.ptr32, i8** %data_end, align 8, !dbg !2323
  %53 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2324
  %ptr33 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %53, i32 0, i32 27, !dbg !2325
  store i8** %ptr33, i8*** %b.addr.i, align 8, !dbg !2326
  %54 = load i8**, i8*** %b.addr.i, align 8, !dbg !2327
  %55 = load i8*, i8** %54, align 8, !dbg !2328
  %add.ptr.i = getelementptr inbounds i8, i8* %55, i64 4, !dbg !2328
  store i8* %add.ptr.i, i8** %54, align 8, !dbg !2328
  %56 = load i8**, i8*** %b.addr.i, align 8, !dbg !2329
  %57 = load i8*, i8** %56, align 8, !dbg !2330
  %add.ptr1.i = getelementptr inbounds i8, i8* %57, i64 -4, !dbg !2331
  %58 = bitcast i8* %add.ptr1.i to %union.unaligned_32*, !dbg !2332
  %l.i = bitcast %union.unaligned_32* %58 to i32*, !dbg !2332
  %59 = load i32, i32* %l.i, align 1, !dbg !2332
  store i32 %59, i32* %x.addr.i.i, align 4, !dbg !2333
  %60 = load i32, i32* %x.addr.i.i, align 4, !dbg !2334
  %shl.i.i = shl i32 %60, 8, !dbg !2335
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !2336
  %61 = load i32, i32* %x.addr.i.i, align 4, !dbg !2337
  %shr.i.i = lshr i32 %61, 8, !dbg !2338
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !2339
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !2340
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !2341
  %62 = load i32, i32* %x.addr.i.i, align 4, !dbg !2342
  %shr3.i.i = lshr i32 %62, 16, !dbg !2343
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !2344
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !2345
  %63 = load i32, i32* %x.addr.i.i, align 4, !dbg !2346
  %shr6.i.i = lshr i32 %63, 16, !dbg !2347
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !2348
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !2349
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !2350
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !2351
  store i32 %or10.i.i, i32* %nblocks, align 4, !dbg !2352
  %64 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2353
  %ptr34 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %64, i32 0, i32 27, !dbg !2354
  store i8** %ptr34, i8*** %b.addr.i231, align 8, !dbg !2355
  %65 = load i8**, i8*** %b.addr.i231, align 8, !dbg !2356
  %66 = load i8*, i8** %65, align 8, !dbg !2357
  %add.ptr.i232 = getelementptr inbounds i8, i8* %66, i64 4, !dbg !2357
  store i8* %add.ptr.i232, i8** %65, align 8, !dbg !2357
  %67 = load i8**, i8*** %b.addr.i231, align 8, !dbg !2358
  %68 = load i8*, i8** %67, align 8, !dbg !2359
  %add.ptr1.i233 = getelementptr inbounds i8, i8* %68, i64 -4, !dbg !2360
  %69 = bitcast i8* %add.ptr1.i233 to %union.unaligned_32*, !dbg !2361
  %l.i234 = bitcast %union.unaligned_32* %69 to i32*, !dbg !2361
  %70 = load i32, i32* %l.i234, align 1, !dbg !2361
  store i32 %70, i32* %x.addr.i.i230, align 4, !dbg !2362
  %71 = load i32, i32* %x.addr.i.i230, align 4, !dbg !2363
  %shl.i.i235 = shl i32 %71, 8, !dbg !2364
  %and.i.i236 = and i32 %shl.i.i235, 65280, !dbg !2365
  %72 = load i32, i32* %x.addr.i.i230, align 4, !dbg !2366
  %shr.i.i237 = lshr i32 %72, 8, !dbg !2367
  %and1.i.i238 = and i32 %shr.i.i237, 255, !dbg !2368
  %or.i.i239 = or i32 %and.i.i236, %and1.i.i238, !dbg !2369
  %shl2.i.i240 = shl i32 %or.i.i239, 16, !dbg !2370
  %73 = load i32, i32* %x.addr.i.i230, align 4, !dbg !2371
  %shr3.i.i241 = lshr i32 %73, 16, !dbg !2372
  %shl4.i.i242 = shl i32 %shr3.i.i241, 8, !dbg !2373
  %and5.i.i243 = and i32 %shl4.i.i242, 65280, !dbg !2374
  %74 = load i32, i32* %x.addr.i.i230, align 4, !dbg !2375
  %shr6.i.i244 = lshr i32 %74, 16, !dbg !2376
  %shr7.i.i245 = lshr i32 %shr6.i.i244, 8, !dbg !2377
  %and8.i.i246 = and i32 %shr7.i.i245, 255, !dbg !2378
  %or9.i.i247 = or i32 %and5.i.i243, %and8.i.i246, !dbg !2379
  %or10.i.i248 = or i32 %shl2.i.i240, %or9.i.i247, !dbg !2380
  store i32 %or10.i.i248, i32* %offset, align 4, !dbg !2381
  %75 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2382
  %fileversion36 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %75, i32 0, i32 7, !dbg !2384
  %76 = load i32, i32* %fileversion36, align 4, !dbg !2384
  %cmp37 = icmp sge i32 %76, 3900, !dbg !2385
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !2386

if.then39:                                        ; preds = %if.end23
  %77 = load i32, i32* %offset, align 4, !dbg !2387
  %cmp40 = icmp ugt i32 %77, 3, !dbg !2390
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !2391

if.then42:                                        ; preds = %if.then39
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2392
  %79 = bitcast %struct.AVCodecContext* %78 to i8*, !dbg !2392
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0)), !dbg !2394
  %80 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2395
  %data43 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %80, i32 0, i32 24, !dbg !2396
  store i8* null, i8** %data43, align 8, !dbg !2397
  store i32 -1094995529, i32* %retval, align 4, !dbg !2398
  br label %return, !dbg !2398

if.end44:                                         ; preds = %if.then39
  %81 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2399
  %data_end45 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %81, i32 0, i32 25, !dbg !2401
  %82 = load i8*, i8** %data_end45, align 8, !dbg !2401
  %83 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2402
  %ptr46 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %83, i32 0, i32 27, !dbg !2403
  %84 = load i8*, i8** %ptr46, align 8, !dbg !2403
  %sub.ptr.lhs.cast = ptrtoint i8* %82 to i64, !dbg !2404
  %sub.ptr.rhs.cast = ptrtoint i8* %84 to i64, !dbg !2404
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2404
  %85 = load i32, i32* %offset, align 4, !dbg !2405
  %conv47 = zext i32 %85 to i64, !dbg !2405
  %cmp48 = icmp slt i64 %sub.ptr.sub, %conv47, !dbg !2406
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2407

if.then50:                                        ; preds = %if.end44
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2408
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !2408
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)), !dbg !2410
  store i32 -1094995529, i32* %retval, align 4, !dbg !2411
  br label %return, !dbg !2411

if.end51:                                         ; preds = %if.end44
  %88 = load i32, i32* %offset, align 4, !dbg !2412
  %89 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2413
  %ptr52 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %89, i32 0, i32 27, !dbg !2414
  %90 = load i8*, i8** %ptr52, align 8, !dbg !2415
  %idx.ext53 = zext i32 %88 to i64, !dbg !2415
  %add.ptr54 = getelementptr inbounds i8, i8* %90, i64 %idx.ext53, !dbg !2415
  store i8* %add.ptr54, i8** %ptr52, align 8, !dbg !2415
  br label %if.end75, !dbg !2416

if.else:                                          ; preds = %if.end23
  %91 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2417
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %91, i32 0, i32 23, !dbg !2420
  %92 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2421
  %ptr55 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %92, i32 0, i32 27, !dbg !2422
  %93 = load i8*, i8** %ptr55, align 8, !dbg !2422
  %94 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2423
  %data_end56 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %94, i32 0, i32 25, !dbg !2424
  %95 = load i8*, i8** %data_end56, align 8, !dbg !2424
  %96 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2425
  %ptr57 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %96, i32 0, i32 27, !dbg !2426
  %97 = load i8*, i8** %ptr57, align 8, !dbg !2426
  %sub.ptr.lhs.cast58 = ptrtoint i8* %95 to i64, !dbg !2427
  %sub.ptr.rhs.cast59 = ptrtoint i8* %97 to i64, !dbg !2427
  %sub.ptr.sub60 = sub i64 %sub.ptr.lhs.cast58, %sub.ptr.rhs.cast59, !dbg !2427
  %conv61 = trunc i64 %sub.ptr.sub60 to i32, !dbg !2423
  %call62 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %93, i32 %conv61), !dbg !2428
  store i32 %call62, i32* %ret, align 4, !dbg !2429
  %cmp63 = icmp slt i32 %call62, 0, !dbg !2430
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !2431

if.then65:                                        ; preds = %if.else
  %98 = load i32, i32* %ret, align 4, !dbg !2432
  store i32 %98, i32* %retval, align 4, !dbg !2433
  br label %return, !dbg !2433

if.end66:                                         ; preds = %if.else
  %99 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2434
  %fileversion67 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %99, i32 0, i32 7, !dbg !2436
  %100 = load i32, i32* %fileversion67, align 4, !dbg !2436
  %cmp68 = icmp sgt i32 %100, 3800, !dbg !2437
  br i1 %cmp68, label %if.then70, label %if.else72, !dbg !2438

if.then70:                                        ; preds = %if.end66
  %101 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2439
  %gb71 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %101, i32 0, i32 23, !dbg !2440
  %102 = load i32, i32* %offset, align 4, !dbg !2441
  %mul = mul i32 %102, 8, !dbg !2442
  call void @skip_bits_long(%struct.GetBitContext* %gb71, i32 %mul), !dbg !2443
  br label %if.end74, !dbg !2443

if.else72:                                        ; preds = %if.end66
  %103 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2444
  %gb73 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %103, i32 0, i32 23, !dbg !2445
  %104 = load i32, i32* %offset, align 4, !dbg !2446
  call void @skip_bits_long(%struct.GetBitContext* %gb73, i32 %104), !dbg !2447
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end51
  %105 = load i32, i32* %nblocks, align 4, !dbg !2448
  %tobool76 = icmp ne i32 %105, 0, !dbg !2448
  br i1 %tobool76, label %lor.lhs.false, label %if.then80, !dbg !2450

lor.lhs.false:                                    ; preds = %if.end75
  %106 = load i32, i32* %nblocks, align 4, !dbg !2451
  %conv77 = zext i32 %106 to i64, !dbg !2451
  %cmp78 = icmp ugt i64 %conv77, 268435447, !dbg !2453
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !2454

if.then80:                                        ; preds = %lor.lhs.false, %if.end75
  %107 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2455
  %108 = bitcast %struct.AVCodecContext* %107 to i8*, !dbg !2455
  %109 = load i32, i32* %nblocks, align 4, !dbg !2457
  call void (i8*, i32, i8*, ...) @av_log(i8* %108, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 %109), !dbg !2458
  store i32 -1094995529, i32* %retval, align 4, !dbg !2459
  br label %return, !dbg !2459

if.end81:                                         ; preds = %lor.lhs.false
  %110 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2460
  %call82 = call i32 @init_frame_decoder(%struct.APEContext* %110), !dbg !2462
  %cmp83 = icmp slt i32 %call82, 0, !dbg !2463
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !2464

if.then85:                                        ; preds = %if.end81
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2465
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !2465
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i32 0, i32 0)), !dbg !2467
  store i32 -1094995529, i32* %retval, align 4, !dbg !2468
  br label %return, !dbg !2468

if.end86:                                         ; preds = %if.end81
  %113 = load i32, i32* %nblocks, align 4, !dbg !2469
  %114 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2470
  %samples87 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %114, i32 0, i32 5, !dbg !2471
  store i32 %113, i32* %samples87, align 4, !dbg !2472
  br label %if.end88, !dbg !2473

if.end88:                                         ; preds = %if.end86, %do.end
  %115 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2474
  %data89 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %115, i32 0, i32 24, !dbg !2476
  %116 = load i8*, i8** %data89, align 8, !dbg !2476
  %tobool90 = icmp ne i8* %116, null, !dbg !2474
  br i1 %tobool90, label %if.end93, label %if.then91, !dbg !2477

if.then91:                                        ; preds = %if.end88
  %117 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2478
  store i32 0, i32* %117, align 4, !dbg !2480
  %118 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2481
  %size92 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %118, i32 0, i32 4, !dbg !2482
  %119 = load i32, i32* %size92, align 8, !dbg !2482
  store i32 %119, i32* %retval, align 4, !dbg !2483
  br label %return, !dbg !2483

if.end93:                                         ; preds = %if.end88
  %120 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2484
  %blocks_per_loop = getelementptr inbounds %struct.APEContext, %struct.APEContext* %120, i32 0, i32 17, !dbg !2485
  %121 = load i32, i32* %blocks_per_loop, align 8, !dbg !2485
  %122 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2486
  %samples94 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %122, i32 0, i32 5, !dbg !2487
  %123 = load i32, i32* %samples94, align 4, !dbg !2487
  %cmp95 = icmp sgt i32 %121, %123, !dbg !2488
  br i1 %cmp95, label %cond.true, label %cond.false, !dbg !2489

cond.true:                                        ; preds = %if.end93
  %124 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2490
  %samples97 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %124, i32 0, i32 5, !dbg !2492
  %125 = load i32, i32* %samples97, align 4, !dbg !2492
  br label %cond.end, !dbg !2493

cond.false:                                       ; preds = %if.end93
  %126 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2494
  %blocks_per_loop98 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %126, i32 0, i32 17, !dbg !2496
  %127 = load i32, i32* %blocks_per_loop98, align 8, !dbg !2496
  br label %cond.end, !dbg !2497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %125, %cond.true ], [ %127, %cond.false ], !dbg !2498
  store i32 %cond, i32* %blockstodecode, align 4, !dbg !2500
  %128 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2501
  %fileversion99 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %128, i32 0, i32 7, !dbg !2503
  %129 = load i32, i32* %fileversion99, align 4, !dbg !2503
  %cmp100 = icmp slt i32 %129, 3930, !dbg !2504
  br i1 %cmp100, label %if.then102, label %if.end104, !dbg !2505

if.then102:                                       ; preds = %cond.end
  %130 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2506
  %samples103 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %130, i32 0, i32 5, !dbg !2507
  %131 = load i32, i32* %samples103, align 4, !dbg !2507
  store i32 %131, i32* %blockstodecode, align 4, !dbg !2508
  br label %if.end104, !dbg !2509

if.end104:                                        ; preds = %if.then102, %cond.end
  %132 = load i32, i32* %blockstodecode, align 4, !dbg !2510
  %add105 = add nsw i32 %132, 8, !dbg !2511
  %sub = sub nsw i32 %add105, 1, !dbg !2512
  %and106 = and i32 %sub, -8, !dbg !2513
  %conv107 = sext i32 %and106 to i64, !dbg !2514
  %mul108 = mul nsw i64 2, %conv107, !dbg !2515
  %mul109 = mul i64 %mul108, 4, !dbg !2516
  store i64 %mul109, i64* %decoded_buffer_size, align 8, !dbg !2517
  br label %do.body110, !dbg !2518, !llvm.loop !2519

do.body110:                                       ; preds = %if.end104
  %133 = load i64, i64* %decoded_buffer_size, align 8, !dbg !2520
  %cmp111 = icmp ule i64 %133, 2147483647, !dbg !2524
  br i1 %cmp111, label %if.end114, label %if.then113, !dbg !2525

if.then113:                                       ; preds = %do.body110
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i32 1498), !dbg !2526
  call void @abort() #7, !dbg !2529
  unreachable, !dbg !2531

if.end114:                                        ; preds = %do.body110
  br label %do.end115, !dbg !2532

do.end115:                                        ; preds = %if.end114
  %134 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2534
  %decoded_buffer = getelementptr inbounds %struct.APEContext, %struct.APEContext* %134, i32 0, i32 14, !dbg !2535
  %135 = bitcast i32** %decoded_buffer to i8*, !dbg !2536
  %136 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2537
  %decoded_size = getelementptr inbounds %struct.APEContext, %struct.APEContext* %136, i32 0, i32 15, !dbg !2538
  %137 = load i64, i64* %decoded_buffer_size, align 8, !dbg !2539
  call void @av_fast_malloc(i8* %135, i32* %decoded_size, i64 %137), !dbg !2540
  %138 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2541
  %decoded_buffer116 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %138, i32 0, i32 14, !dbg !2543
  %139 = load i32*, i32** %decoded_buffer116, align 8, !dbg !2543
  %tobool117 = icmp ne i32* %139, null, !dbg !2541
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !2544

if.then118:                                       ; preds = %do.end115
  store i32 -12, i32* %retval, align 4, !dbg !2545
  br label %return, !dbg !2545

if.end119:                                        ; preds = %do.end115
  %140 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2546
  %decoded_buffer120 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %140, i32 0, i32 14, !dbg !2547
  %141 = load i32*, i32** %decoded_buffer120, align 8, !dbg !2547
  %142 = bitcast i32* %141 to i8*, !dbg !2548
  %143 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2549
  %decoded_size121 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %143, i32 0, i32 15, !dbg !2550
  %144 = load i32, i32* %decoded_size121, align 8, !dbg !2550
  %conv122 = sext i32 %144 to i64, !dbg !2549
  call void @llvm.memset.p0i8.i64(i8* %142, i8 0, i64 %conv122, i32 4, i1 false), !dbg !2548
  %145 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2551
  %decoded_buffer123 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %145, i32 0, i32 14, !dbg !2552
  %146 = load i32*, i32** %decoded_buffer123, align 8, !dbg !2552
  %147 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2553
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %147, i32 0, i32 16, !dbg !2554
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2553
  store i32* %146, i32** %arrayidx, align 8, !dbg !2555
  %148 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2556
  %decoded_buffer124 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %148, i32 0, i32 14, !dbg !2557
  %149 = load i32*, i32** %decoded_buffer124, align 8, !dbg !2557
  %150 = load i32, i32* %blockstodecode, align 4, !dbg !2558
  %add125 = add nsw i32 %150, 8, !dbg !2559
  %sub126 = sub nsw i32 %add125, 1, !dbg !2560
  %and127 = and i32 %sub126, -8, !dbg !2561
  %idx.ext128 = sext i32 %and127 to i64, !dbg !2562
  %add.ptr129 = getelementptr inbounds i32, i32* %149, i64 %idx.ext128, !dbg !2562
  %151 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2563
  %decoded130 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %151, i32 0, i32 16, !dbg !2564
  %arrayidx131 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded130, i64 0, i64 1, !dbg !2563
  store i32* %add.ptr129, i32** %arrayidx131, align 8, !dbg !2565
  %152 = load i32, i32* %blockstodecode, align 4, !dbg !2566
  %153 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2567
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %153, i32 0, i32 5, !dbg !2568
  store i32 %152, i32* %nb_samples, align 8, !dbg !2569
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2570
  %155 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2572
  %call132 = call i32 @ff_get_buffer(%struct.AVCodecContext* %154, %struct.AVFrame* %155, i32 0), !dbg !2573
  store i32 %call132, i32* %ret, align 4, !dbg !2574
  %cmp133 = icmp slt i32 %call132, 0, !dbg !2575
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !2576

if.then135:                                       ; preds = %if.end119
  %156 = load i32, i32* %ret, align 4, !dbg !2577
  store i32 %156, i32* %retval, align 4, !dbg !2578
  br label %return, !dbg !2578

if.end136:                                        ; preds = %if.end119
  %157 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2579
  %error = getelementptr inbounds %struct.APEContext, %struct.APEContext* %157, i32 0, i32 28, !dbg !2580
  store i32 0, i32* %error, align 8, !dbg !2581
  %158 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2582
  %channels = getelementptr inbounds %struct.APEContext, %struct.APEContext* %158, i32 0, i32 4, !dbg !2584
  %159 = load i32, i32* %channels, align 8, !dbg !2584
  %cmp137 = icmp eq i32 %159, 1, !dbg !2585
  br i1 %cmp137, label %if.then142, label %lor.lhs.false139, !dbg !2586

lor.lhs.false139:                                 ; preds = %if.end136
  %160 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2587
  %frameflags = getelementptr inbounds %struct.APEContext, %struct.APEContext* %160, i32 0, i32 12, !dbg !2589
  %161 = load i32, i32* %frameflags, align 8, !dbg !2589
  %and140 = and i32 %161, 4, !dbg !2590
  %tobool141 = icmp ne i32 %and140, 0, !dbg !2590
  br i1 %tobool141, label %if.then142, label %if.else143, !dbg !2591

if.then142:                                       ; preds = %lor.lhs.false139, %if.end136
  %162 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2592
  %163 = load i32, i32* %blockstodecode, align 4, !dbg !2593
  call void @ape_unpack_mono(%struct.APEContext* %162, i32 %163), !dbg !2594
  br label %if.end144, !dbg !2594

if.else143:                                       ; preds = %lor.lhs.false139
  %164 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2595
  %165 = load i32, i32* %blockstodecode, align 4, !dbg !2596
  call void @ape_unpack_stereo(%struct.APEContext* %164, i32 %165), !dbg !2597
  br label %if.end144

if.end144:                                        ; preds = %if.else143, %if.then142
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !2598, !srcloc !2604
  %166 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2605
  %error145 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %166, i32 0, i32 28, !dbg !2607
  %167 = load i32, i32* %error145, align 8, !dbg !2607
  %tobool146 = icmp ne i32 %167, 0, !dbg !2605
  br i1 %tobool146, label %if.then147, label %if.end149, !dbg !2608

if.then147:                                       ; preds = %if.end144
  %168 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2609
  %samples148 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %168, i32 0, i32 5, !dbg !2611
  store i32 0, i32* %samples148, align 4, !dbg !2612
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2613
  %170 = bitcast %struct.AVCodecContext* %169 to i8*, !dbg !2613
  call void (i8*, i32, i8*, ...) @av_log(i8* %170, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i32 0, i32 0)), !dbg !2614
  store i32 -1094995529, i32* %retval, align 4, !dbg !2615
  br label %return, !dbg !2615

if.end149:                                        ; preds = %if.end144
  %171 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2616
  %bps = getelementptr inbounds %struct.APEContext, %struct.APEContext* %171, i32 0, i32 6, !dbg !2617
  %172 = load i32, i32* %bps, align 8, !dbg !2617
  switch i32 %172, label %sw.epilog [
    i32 8, label %sw.bb
    i32 16, label %sw.bb170
    i32 24, label %sw.bb196
  ], !dbg !2618

sw.bb:                                            ; preds = %if.end149
  store i32 0, i32* %ch, align 4, !dbg !2619
  br label %for.cond, !dbg !2622

for.cond:                                         ; preds = %for.inc167, %sw.bb
  %173 = load i32, i32* %ch, align 4, !dbg !2623
  %174 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2626
  %channels150 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %174, i32 0, i32 4, !dbg !2627
  %175 = load i32, i32* %channels150, align 8, !dbg !2627
  %cmp151 = icmp slt i32 %173, %175, !dbg !2628
  br i1 %cmp151, label %for.body, label %for.end169, !dbg !2629

for.body:                                         ; preds = %for.cond
  %176 = load i32, i32* %ch, align 4, !dbg !2630
  %idxprom = sext i32 %176 to i64, !dbg !2632
  %177 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2632
  %data153 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %177, i32 0, i32 0, !dbg !2633
  %arrayidx154 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data153, i64 0, i64 %idxprom, !dbg !2632
  %178 = load i8*, i8** %arrayidx154, align 8, !dbg !2632
  store i8* %178, i8** %sample8, align 8, !dbg !2634
  store i32 0, i32* %i, align 4, !dbg !2635
  br label %for.cond155, !dbg !2637

for.cond155:                                      ; preds = %for.inc, %for.body
  %179 = load i32, i32* %i, align 4, !dbg !2638
  %180 = load i32, i32* %blockstodecode, align 4, !dbg !2641
  %cmp156 = icmp slt i32 %179, %180, !dbg !2642
  br i1 %cmp156, label %for.body158, label %for.end, !dbg !2643

for.body158:                                      ; preds = %for.cond155
  %181 = load i32, i32* %i, align 4, !dbg !2644
  %idxprom159 = sext i32 %181 to i64, !dbg !2645
  %182 = load i32, i32* %ch, align 4, !dbg !2646
  %idxprom160 = sext i32 %182 to i64, !dbg !2645
  %183 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2645
  %decoded161 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %183, i32 0, i32 16, !dbg !2647
  %arrayidx162 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded161, i64 0, i64 %idxprom160, !dbg !2645
  %184 = load i32*, i32** %arrayidx162, align 8, !dbg !2645
  %arrayidx163 = getelementptr inbounds i32, i32* %184, i64 %idxprom159, !dbg !2645
  %185 = load i32, i32* %arrayidx163, align 4, !dbg !2645
  %add164 = add nsw i32 %185, 128, !dbg !2648
  %and165 = and i32 %add164, 255, !dbg !2649
  %conv166 = trunc i32 %and165 to i8, !dbg !2650
  %186 = load i8*, i8** %sample8, align 8, !dbg !2651
  %incdec.ptr = getelementptr inbounds i8, i8* %186, i32 1, !dbg !2651
  store i8* %incdec.ptr, i8** %sample8, align 8, !dbg !2651
  store i8 %conv166, i8* %186, align 1, !dbg !2652
  br label %for.inc, !dbg !2653

for.inc:                                          ; preds = %for.body158
  %187 = load i32, i32* %i, align 4, !dbg !2654
  %inc = add nsw i32 %187, 1, !dbg !2654
  store i32 %inc, i32* %i, align 4, !dbg !2654
  br label %for.cond155, !dbg !2656, !llvm.loop !2657

for.end:                                          ; preds = %for.cond155
  br label %for.inc167, !dbg !2659

for.inc167:                                       ; preds = %for.end
  %188 = load i32, i32* %ch, align 4, !dbg !2660
  %inc168 = add nsw i32 %188, 1, !dbg !2660
  store i32 %inc168, i32* %ch, align 4, !dbg !2660
  br label %for.cond, !dbg !2662, !llvm.loop !2663

for.end169:                                       ; preds = %for.cond
  br label %sw.epilog, !dbg !2665

sw.bb170:                                         ; preds = %if.end149
  store i32 0, i32* %ch, align 4, !dbg !2666
  br label %for.cond171, !dbg !2668

for.cond171:                                      ; preds = %for.inc193, %sw.bb170
  %189 = load i32, i32* %ch, align 4, !dbg !2669
  %190 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2672
  %channels172 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %190, i32 0, i32 4, !dbg !2673
  %191 = load i32, i32* %channels172, align 8, !dbg !2673
  %cmp173 = icmp slt i32 %189, %191, !dbg !2674
  br i1 %cmp173, label %for.body175, label %for.end195, !dbg !2675

for.body175:                                      ; preds = %for.cond171
  %192 = load i32, i32* %ch, align 4, !dbg !2676
  %idxprom176 = sext i32 %192 to i64, !dbg !2678
  %193 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2678
  %data177 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %193, i32 0, i32 0, !dbg !2679
  %arrayidx178 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data177, i64 0, i64 %idxprom176, !dbg !2678
  %194 = load i8*, i8** %arrayidx178, align 8, !dbg !2678
  %195 = bitcast i8* %194 to i16*, !dbg !2680
  store i16* %195, i16** %sample16, align 8, !dbg !2681
  store i32 0, i32* %i, align 4, !dbg !2682
  br label %for.cond179, !dbg !2684

for.cond179:                                      ; preds = %for.inc190, %for.body175
  %196 = load i32, i32* %i, align 4, !dbg !2685
  %197 = load i32, i32* %blockstodecode, align 4, !dbg !2688
  %cmp180 = icmp slt i32 %196, %197, !dbg !2689
  br i1 %cmp180, label %for.body182, label %for.end192, !dbg !2690

for.body182:                                      ; preds = %for.cond179
  %198 = load i32, i32* %i, align 4, !dbg !2691
  %idxprom183 = sext i32 %198 to i64, !dbg !2692
  %199 = load i32, i32* %ch, align 4, !dbg !2693
  %idxprom184 = sext i32 %199 to i64, !dbg !2692
  %200 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2692
  %decoded185 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %200, i32 0, i32 16, !dbg !2694
  %arrayidx186 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded185, i64 0, i64 %idxprom184, !dbg !2692
  %201 = load i32*, i32** %arrayidx186, align 8, !dbg !2692
  %arrayidx187 = getelementptr inbounds i32, i32* %201, i64 %idxprom183, !dbg !2692
  %202 = load i32, i32* %arrayidx187, align 4, !dbg !2692
  %conv188 = trunc i32 %202 to i16, !dbg !2692
  %203 = load i16*, i16** %sample16, align 8, !dbg !2695
  %incdec.ptr189 = getelementptr inbounds i16, i16* %203, i32 1, !dbg !2695
  store i16* %incdec.ptr189, i16** %sample16, align 8, !dbg !2695
  store i16 %conv188, i16* %203, align 2, !dbg !2696
  br label %for.inc190, !dbg !2697

for.inc190:                                       ; preds = %for.body182
  %204 = load i32, i32* %i, align 4, !dbg !2698
  %inc191 = add nsw i32 %204, 1, !dbg !2698
  store i32 %inc191, i32* %i, align 4, !dbg !2698
  br label %for.cond179, !dbg !2700, !llvm.loop !2701

for.end192:                                       ; preds = %for.cond179
  br label %for.inc193, !dbg !2703

for.inc193:                                       ; preds = %for.end192
  %205 = load i32, i32* %ch, align 4, !dbg !2704
  %inc194 = add nsw i32 %205, 1, !dbg !2704
  store i32 %inc194, i32* %ch, align 4, !dbg !2704
  br label %for.cond171, !dbg !2706, !llvm.loop !2707

for.end195:                                       ; preds = %for.cond171
  br label %sw.epilog, !dbg !2709

sw.bb196:                                         ; preds = %if.end149
  store i32 0, i32* %ch, align 4, !dbg !2710
  br label %for.cond197, !dbg !2712

for.cond197:                                      ; preds = %for.inc218, %sw.bb196
  %206 = load i32, i32* %ch, align 4, !dbg !2713
  %207 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2716
  %channels198 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %207, i32 0, i32 4, !dbg !2717
  %208 = load i32, i32* %channels198, align 8, !dbg !2717
  %cmp199 = icmp slt i32 %206, %208, !dbg !2718
  br i1 %cmp199, label %for.body201, label %for.end220, !dbg !2719

for.body201:                                      ; preds = %for.cond197
  %209 = load i32, i32* %ch, align 4, !dbg !2720
  %idxprom202 = sext i32 %209 to i64, !dbg !2722
  %210 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2722
  %data203 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %210, i32 0, i32 0, !dbg !2723
  %arrayidx204 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data203, i64 0, i64 %idxprom202, !dbg !2722
  %211 = load i8*, i8** %arrayidx204, align 8, !dbg !2722
  %212 = bitcast i8* %211 to i32*, !dbg !2724
  store i32* %212, i32** %sample24, align 8, !dbg !2725
  store i32 0, i32* %i, align 4, !dbg !2726
  br label %for.cond205, !dbg !2728

for.cond205:                                      ; preds = %for.inc215, %for.body201
  %213 = load i32, i32* %i, align 4, !dbg !2729
  %214 = load i32, i32* %blockstodecode, align 4, !dbg !2732
  %cmp206 = icmp slt i32 %213, %214, !dbg !2733
  br i1 %cmp206, label %for.body208, label %for.end217, !dbg !2734

for.body208:                                      ; preds = %for.cond205
  %215 = load i32, i32* %i, align 4, !dbg !2735
  %idxprom209 = sext i32 %215 to i64, !dbg !2736
  %216 = load i32, i32* %ch, align 4, !dbg !2737
  %idxprom210 = sext i32 %216 to i64, !dbg !2736
  %217 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2736
  %decoded211 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %217, i32 0, i32 16, !dbg !2738
  %arrayidx212 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded211, i64 0, i64 %idxprom210, !dbg !2736
  %218 = load i32*, i32** %arrayidx212, align 8, !dbg !2736
  %arrayidx213 = getelementptr inbounds i32, i32* %218, i64 %idxprom209, !dbg !2736
  %219 = load i32, i32* %arrayidx213, align 4, !dbg !2736
  %shl = shl i32 %219, 8, !dbg !2739
  %220 = load i32*, i32** %sample24, align 8, !dbg !2740
  %incdec.ptr214 = getelementptr inbounds i32, i32* %220, i32 1, !dbg !2740
  store i32* %incdec.ptr214, i32** %sample24, align 8, !dbg !2740
  store i32 %shl, i32* %220, align 4, !dbg !2741
  br label %for.inc215, !dbg !2742

for.inc215:                                       ; preds = %for.body208
  %221 = load i32, i32* %i, align 4, !dbg !2743
  %inc216 = add nsw i32 %221, 1, !dbg !2743
  store i32 %inc216, i32* %i, align 4, !dbg !2743
  br label %for.cond205, !dbg !2745, !llvm.loop !2746

for.end217:                                       ; preds = %for.cond205
  br label %for.inc218, !dbg !2748

for.inc218:                                       ; preds = %for.end217
  %222 = load i32, i32* %ch, align 4, !dbg !2749
  %inc219 = add nsw i32 %222, 1, !dbg !2749
  store i32 %inc219, i32* %ch, align 4, !dbg !2749
  br label %for.cond197, !dbg !2751, !llvm.loop !2752

for.end220:                                       ; preds = %for.cond197
  br label %sw.epilog, !dbg !2754

sw.epilog:                                        ; preds = %if.end149, %for.end220, %for.end195, %for.end169
  %223 = load i32, i32* %blockstodecode, align 4, !dbg !2755
  %224 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2756
  %samples221 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %224, i32 0, i32 5, !dbg !2757
  %225 = load i32, i32* %samples221, align 4, !dbg !2758
  %sub222 = sub nsw i32 %225, %223, !dbg !2758
  store i32 %sub222, i32* %samples221, align 4, !dbg !2758
  %226 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2759
  store i32 1, i32* %226, align 4, !dbg !2760
  %227 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2761
  %samples223 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %227, i32 0, i32 5, !dbg !2762
  %228 = load i32, i32* %samples223, align 4, !dbg !2762
  %tobool224 = icmp ne i32 %228, 0, !dbg !2761
  br i1 %tobool224, label %cond.false227, label %cond.true225, !dbg !2763

cond.true225:                                     ; preds = %sw.epilog
  %229 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2764
  %size226 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %229, i32 0, i32 4, !dbg !2765
  %230 = load i32, i32* %size226, align 8, !dbg !2765
  br label %cond.end228, !dbg !2766

cond.false227:                                    ; preds = %sw.epilog
  br label %cond.end228, !dbg !2767

cond.end228:                                      ; preds = %cond.false227, %cond.true225
  %cond229 = phi i32 [ %230, %cond.true225 ], [ 0, %cond.false227 ], !dbg !2768
  store i32 %cond229, i32* %retval, align 4, !dbg !2769
  br label %return, !dbg !2769

return:                                           ; preds = %cond.end228, %if.then147, %if.then135, %if.then118, %if.then91, %if.then85, %if.then80, %if.then65, %if.then50, %if.then42, %if.then22, %if.then9, %if.then5
  %231 = load i32, i32* %retval, align 4, !dbg !2770
  ret i32 %231, !dbg !2770
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @ape_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2771 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.APEContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2772, metadata !1747), !dbg !2773
  call void @llvm.dbg.declare(metadata %struct.APEContext** %s, metadata !2774, metadata !1747), !dbg !2775
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2776
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2777
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2777
  %2 = bitcast i8* %1 to %struct.APEContext*, !dbg !2776
  store %struct.APEContext* %2, %struct.APEContext** %s, align 8, !dbg !2775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2778, metadata !1747), !dbg !2779
  store i32 0, i32* %i, align 4, !dbg !2780
  br label %for.cond, !dbg !2782

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2783
  %cmp = icmp slt i32 %3, 3, !dbg !2786
  br i1 %cmp, label %for.body, label %for.end, !dbg !2787

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !2788
  %idxprom = sext i32 %4 to i64, !dbg !2789
  %5 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2789
  %filterbuf = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 18, !dbg !2790
  %arrayidx = getelementptr inbounds [3 x i16*], [3 x i16*]* %filterbuf, i64 0, i64 %idxprom, !dbg !2789
  %6 = bitcast i16** %arrayidx to i8*, !dbg !2791
  call void @av_freep(i8* %6), !dbg !2792
  br label %for.inc, !dbg !2792

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !2793
  %inc = add nsw i32 %7, 1, !dbg !2793
  store i32 %inc, i32* %i, align 4, !dbg !2793
  br label %for.cond, !dbg !2795, !llvm.loop !2796

for.end:                                          ; preds = %for.cond
  %8 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2798
  %decoded_buffer = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 14, !dbg !2799
  %9 = bitcast i32** %decoded_buffer to i8*, !dbg !2800
  call void @av_freep(i8* %9), !dbg !2801
  %10 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2802
  %data = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 24, !dbg !2803
  %11 = bitcast i8** %data to i8*, !dbg !2804
  call void @av_freep(i8* %11), !dbg !2805
  %12 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2806
  %data_size = getelementptr inbounds %struct.APEContext, %struct.APEContext* %12, i32 0, i32 26, !dbg !2807
  store i32 0, i32* %data_size, align 8, !dbg !2808
  %13 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2809
  %decoded_size = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 15, !dbg !2810
  store i32 0, i32* %decoded_size, align 8, !dbg !2811
  ret i32 0, !dbg !2812
}

; Function Attrs: nounwind uwtable
define internal void @ape_flush(%struct.AVCodecContext* %avctx) #1 !dbg !2813 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.APEContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2814, metadata !1747), !dbg !2815
  call void @llvm.dbg.declare(metadata %struct.APEContext** %s, metadata !2816, metadata !1747), !dbg !2817
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2818
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2819
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2819
  %2 = bitcast i8* %1 to %struct.APEContext*, !dbg !2818
  store %struct.APEContext* %2, %struct.APEContext** %s, align 8, !dbg !2817
  %3 = load %struct.APEContext*, %struct.APEContext** %s, align 8, !dbg !2820
  %samples = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 5, !dbg !2821
  store i32 0, i32* %samples, align 4, !dbg !2822
  ret void, !dbg !2823
}

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare void @av_log(i8*, i32, i8*, ...) #2

declare void @avpriv_request_sample(i8*, i8*, ...) #2

declare noalias i8* @av_malloc(i64) #2

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_mono_0000(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2824 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2827, metadata !1747), !dbg !2828
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2829, metadata !1747), !dbg !2830
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2831
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2832
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 23, !dbg !2833
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2834
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !2835
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2834
  %3 = load i32*, i32** %arrayidx, align 8, !dbg !2834
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2836
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 21, !dbg !2837
  %5 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2838
  call void @decode_array_0000(%struct.APEContext* %0, %struct.GetBitContext* %gb, i32* %3, %struct.APERice* %riceY, i32 %5), !dbg !2839
  ret void, !dbg !2840
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_stereo_0000(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2841 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2842, metadata !1747), !dbg !2843
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2844, metadata !1747), !dbg !2845
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2846
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2847
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 23, !dbg !2848
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2849
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !2850
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2849
  %3 = load i32*, i32** %arrayidx, align 8, !dbg !2849
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2851
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 21, !dbg !2852
  %5 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2853
  call void @decode_array_0000(%struct.APEContext* %0, %struct.GetBitContext* %gb, i32* %3, %struct.APERice* %riceY, i32 %5), !dbg !2854
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2855
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2856
  %gb1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 23, !dbg !2857
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2858
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 16, !dbg !2859
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !2858
  %9 = load i32*, i32** %arrayidx3, align 8, !dbg !2858
  %10 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2860
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 20, !dbg !2861
  %11 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2862
  call void @decode_array_0000(%struct.APEContext* %6, %struct.GetBitContext* %gb1, i32* %9, %struct.APERice* %riceX, i32 %11), !dbg !2863
  ret void, !dbg !2864
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_mono_3860(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2865 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2866, metadata !1747), !dbg !2867
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2868, metadata !1747), !dbg !2869
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !2870, metadata !1747), !dbg !2871
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2872
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !2873
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2872
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !2872
  store i32* %1, i32** %decoded0, align 8, !dbg !2871
  br label %while.cond, !dbg !2874

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2875
  %dec = add nsw i32 %2, -1, !dbg !2875
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !2875
  %tobool = icmp ne i32 %2, 0, !dbg !2877
  br i1 %tobool, label %while.body, label %while.end, !dbg !2877

while.body:                                       ; preds = %while.cond
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2878
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2879
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 23, !dbg !2880
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2881
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 21, !dbg !2882
  %call = call i32 @ape_decode_value_3860(%struct.APEContext* %3, %struct.GetBitContext* %gb, %struct.APERice* %riceY), !dbg !2883
  %6 = load i32*, i32** %decoded0, align 8, !dbg !2884
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1, !dbg !2884
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !2884
  store i32 %call, i32* %6, align 4, !dbg !2885
  br label %while.cond, !dbg !2886, !llvm.loop !2888

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2889
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_stereo_3860(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2890 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  %blocks = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2891, metadata !1747), !dbg !2892
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2893, metadata !1747), !dbg !2894
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !2895, metadata !1747), !dbg !2896
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2897
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !2898
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2897
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !2897
  store i32* %1, i32** %decoded0, align 8, !dbg !2896
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !2899, metadata !1747), !dbg !2900
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2901
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !2902
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !2901
  %3 = load i32*, i32** %arrayidx3, align 8, !dbg !2901
  store i32* %3, i32** %decoded1, align 8, !dbg !2900
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !2903, metadata !1747), !dbg !2904
  %4 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2905
  store i32 %4, i32* %blocks, align 4, !dbg !2904
  br label %while.cond, !dbg !2906

while.cond:                                       ; preds = %while.body, %entry
  %5 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2907
  %dec = add nsw i32 %5, -1, !dbg !2907
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !2907
  %tobool = icmp ne i32 %5, 0, !dbg !2909
  br i1 %tobool, label %while.body, label %while.end, !dbg !2909

while.body:                                       ; preds = %while.cond
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2910
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2911
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 23, !dbg !2912
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2913
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 21, !dbg !2914
  %call = call i32 @ape_decode_value_3860(%struct.APEContext* %6, %struct.GetBitContext* %gb, %struct.APERice* %riceY), !dbg !2915
  %9 = load i32*, i32** %decoded0, align 8, !dbg !2916
  %incdec.ptr = getelementptr inbounds i32, i32* %9, i32 1, !dbg !2916
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !2916
  store i32 %call, i32* %9, align 4, !dbg !2917
  br label %while.cond, !dbg !2918, !llvm.loop !2920

while.end:                                        ; preds = %while.cond
  br label %while.cond4, !dbg !2921

while.cond4:                                      ; preds = %while.body7, %while.end
  %10 = load i32, i32* %blocks, align 4, !dbg !2922
  %dec5 = add nsw i32 %10, -1, !dbg !2922
  store i32 %dec5, i32* %blocks, align 4, !dbg !2922
  %tobool6 = icmp ne i32 %10, 0, !dbg !2923
  br i1 %tobool6, label %while.body7, label %while.end11, !dbg !2923

while.body7:                                      ; preds = %while.cond4
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2924
  %12 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2925
  %gb8 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %12, i32 0, i32 23, !dbg !2926
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2927
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 20, !dbg !2928
  %call9 = call i32 @ape_decode_value_3860(%struct.APEContext* %11, %struct.GetBitContext* %gb8, %struct.APERice* %riceX), !dbg !2929
  %14 = load i32*, i32** %decoded1, align 8, !dbg !2930
  %incdec.ptr10 = getelementptr inbounds i32, i32* %14, i32 1, !dbg !2930
  store i32* %incdec.ptr10, i32** %decoded1, align 8, !dbg !2930
  store i32 %call9, i32* %14, align 4, !dbg !2931
  br label %while.cond4, !dbg !2932, !llvm.loop !2933

while.end11:                                      ; preds = %while.cond4
  ret void, !dbg !2934
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_mono_3900(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2935 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2936, metadata !1747), !dbg !2937
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2938, metadata !1747), !dbg !2939
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !2940, metadata !1747), !dbg !2941
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2942
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !2943
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2942
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !2942
  store i32* %1, i32** %decoded0, align 8, !dbg !2941
  br label %while.cond, !dbg !2944

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2945
  %dec = add nsw i32 %2, -1, !dbg !2945
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !2945
  %tobool = icmp ne i32 %2, 0, !dbg !2947
  br i1 %tobool, label %while.body, label %while.end, !dbg !2947

while.body:                                       ; preds = %while.cond
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2948
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2949
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 21, !dbg !2950
  %call = call i32 @ape_decode_value_3900(%struct.APEContext* %3, %struct.APERice* %riceY), !dbg !2951
  %5 = load i32*, i32** %decoded0, align 8, !dbg !2952
  %incdec.ptr = getelementptr inbounds i32, i32* %5, i32 1, !dbg !2952
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !2952
  store i32 %call, i32* %5, align 4, !dbg !2953
  br label %while.cond, !dbg !2954, !llvm.loop !2956

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2957
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_stereo_3900(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !2958 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  %blocks = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !2959, metadata !1747), !dbg !2960
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !2961, metadata !1747), !dbg !2962
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !2963, metadata !1747), !dbg !2964
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2965
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !2966
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !2965
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !2965
  store i32* %1, i32** %decoded0, align 8, !dbg !2964
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !2967, metadata !1747), !dbg !2968
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2969
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !2970
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !2969
  %3 = load i32*, i32** %arrayidx3, align 8, !dbg !2969
  store i32* %3, i32** %decoded1, align 8, !dbg !2968
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !2971, metadata !1747), !dbg !2972
  %4 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2973
  store i32 %4, i32* %blocks, align 4, !dbg !2972
  br label %while.cond, !dbg !2974

while.cond:                                       ; preds = %while.body, %entry
  %5 = load i32, i32* %blockstodecode.addr, align 4, !dbg !2975
  %dec = add nsw i32 %5, -1, !dbg !2975
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !2975
  %tobool = icmp ne i32 %5, 0, !dbg !2977
  br i1 %tobool, label %while.body, label %while.end, !dbg !2977

while.body:                                       ; preds = %while.cond
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2978
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2979
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 21, !dbg !2980
  %call = call i32 @ape_decode_value_3900(%struct.APEContext* %6, %struct.APERice* %riceY), !dbg !2981
  %8 = load i32*, i32** %decoded0, align 8, !dbg !2982
  %incdec.ptr = getelementptr inbounds i32, i32* %8, i32 1, !dbg !2982
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !2982
  store i32 %call, i32* %8, align 4, !dbg !2983
  br label %while.cond, !dbg !2984, !llvm.loop !2986

while.end:                                        ; preds = %while.cond
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2987
  call void @range_dec_normalize(%struct.APEContext* %9), !dbg !2988
  %10 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2989
  %ptr = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 27, !dbg !2990
  %11 = load i8*, i8** %ptr, align 8, !dbg !2991
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 -1, !dbg !2991
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !2991
  %12 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2992
  call void @range_start_decoding(%struct.APEContext* %12), !dbg !2993
  br label %while.cond4, !dbg !2994

while.cond4:                                      ; preds = %while.body7, %while.end
  %13 = load i32, i32* %blocks, align 4, !dbg !2995
  %dec5 = add nsw i32 %13, -1, !dbg !2995
  store i32 %dec5, i32* %blocks, align 4, !dbg !2995
  %tobool6 = icmp ne i32 %13, 0, !dbg !2996
  br i1 %tobool6, label %while.body7, label %while.end10, !dbg !2996

while.body7:                                      ; preds = %while.cond4
  %14 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2997
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !2998
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %15, i32 0, i32 20, !dbg !2999
  %call8 = call i32 @ape_decode_value_3900(%struct.APEContext* %14, %struct.APERice* %riceX), !dbg !3000
  %16 = load i32*, i32** %decoded1, align 8, !dbg !3001
  %incdec.ptr9 = getelementptr inbounds i32, i32* %16, i32 1, !dbg !3001
  store i32* %incdec.ptr9, i32** %decoded1, align 8, !dbg !3001
  store i32 %call8, i32* %16, align 4, !dbg !3002
  br label %while.cond4, !dbg !3003, !llvm.loop !3004

while.end10:                                      ; preds = %while.cond4
  ret void, !dbg !3005
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_stereo_3930(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !3006 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !3007, metadata !1747), !dbg !3008
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !3009, metadata !1747), !dbg !3010
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !3011, metadata !1747), !dbg !3012
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3013
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !3014
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !3013
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !3013
  store i32* %1, i32** %decoded0, align 8, !dbg !3012
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !3015, metadata !1747), !dbg !3016
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3017
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !3018
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !3017
  %3 = load i32*, i32** %arrayidx3, align 8, !dbg !3017
  store i32* %3, i32** %decoded1, align 8, !dbg !3016
  br label %while.cond, !dbg !3019

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i32, i32* %blockstodecode.addr, align 4, !dbg !3020
  %dec = add nsw i32 %4, -1, !dbg !3020
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !3020
  %tobool = icmp ne i32 %4, 0, !dbg !3022
  br i1 %tobool, label %while.body, label %while.end, !dbg !3022

while.body:                                       ; preds = %while.cond
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3023
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3025
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 21, !dbg !3026
  %call = call i32 @ape_decode_value_3900(%struct.APEContext* %5, %struct.APERice* %riceY), !dbg !3027
  %7 = load i32*, i32** %decoded0, align 8, !dbg !3028
  %incdec.ptr = getelementptr inbounds i32, i32* %7, i32 1, !dbg !3028
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !3028
  store i32 %call, i32* %7, align 4, !dbg !3029
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3030
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3031
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 20, !dbg !3032
  %call4 = call i32 @ape_decode_value_3900(%struct.APEContext* %8, %struct.APERice* %riceX), !dbg !3033
  %10 = load i32*, i32** %decoded1, align 8, !dbg !3034
  %incdec.ptr5 = getelementptr inbounds i32, i32* %10, i32 1, !dbg !3034
  store i32* %incdec.ptr5, i32** %decoded1, align 8, !dbg !3034
  store i32 %call4, i32* %10, align 4, !dbg !3035
  br label %while.cond, !dbg !3036, !llvm.loop !3038

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3039
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_mono_3990(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !3040 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !3041, metadata !1747), !dbg !3042
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !3043, metadata !1747), !dbg !3044
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !3045, metadata !1747), !dbg !3046
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3047
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !3048
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !3047
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !3047
  store i32* %1, i32** %decoded0, align 8, !dbg !3046
  br label %while.cond, !dbg !3049

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %blockstodecode.addr, align 4, !dbg !3050
  %dec = add nsw i32 %2, -1, !dbg !3050
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !3050
  %tobool = icmp ne i32 %2, 0, !dbg !3052
  br i1 %tobool, label %while.body, label %while.end, !dbg !3052

while.body:                                       ; preds = %while.cond
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3053
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3054
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 21, !dbg !3055
  %call = call i32 @ape_decode_value_3990(%struct.APEContext* %3, %struct.APERice* %riceY), !dbg !3056
  %5 = load i32*, i32** %decoded0, align 8, !dbg !3057
  %incdec.ptr = getelementptr inbounds i32, i32* %5, i32 1, !dbg !3057
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !3057
  store i32 %call, i32* %5, align 4, !dbg !3058
  br label %while.cond, !dbg !3059, !llvm.loop !3061

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3062
}

; Function Attrs: nounwind uwtable
define internal void @entropy_decode_stereo_3990(%struct.APEContext* %ctx, i32 %blockstodecode) #1 !dbg !3063 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !3064, metadata !1747), !dbg !3065
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !3066, metadata !1747), !dbg !3067
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !3068, metadata !1747), !dbg !3069
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3070
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !3071
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !3070
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !3070
  store i32* %1, i32** %decoded0, align 8, !dbg !3069
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !3072, metadata !1747), !dbg !3073
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3074
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !3075
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !3074
  %3 = load i32*, i32** %arrayidx3, align 8, !dbg !3074
  store i32* %3, i32** %decoded1, align 8, !dbg !3073
  br label %while.cond, !dbg !3076

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i32, i32* %blockstodecode.addr, align 4, !dbg !3077
  %dec = add nsw i32 %4, -1, !dbg !3077
  store i32 %dec, i32* %blockstodecode.addr, align 4, !dbg !3077
  %tobool = icmp ne i32 %4, 0, !dbg !3079
  br i1 %tobool, label %while.body, label %while.end, !dbg !3079

while.body:                                       ; preds = %while.cond
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3080
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3082
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 21, !dbg !3083
  %call = call i32 @ape_decode_value_3990(%struct.APEContext* %5, %struct.APERice* %riceY), !dbg !3084
  %7 = load i32*, i32** %decoded0, align 8, !dbg !3085
  %incdec.ptr = getelementptr inbounds i32, i32* %7, i32 1, !dbg !3085
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !3085
  store i32 %call, i32* %7, align 4, !dbg !3086
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3087
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3088
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 20, !dbg !3089
  %call4 = call i32 @ape_decode_value_3990(%struct.APEContext* %8, %struct.APERice* %riceX), !dbg !3090
  %10 = load i32*, i32** %decoded1, align 8, !dbg !3091
  %incdec.ptr5 = getelementptr inbounds i32, i32* %10, i32 1, !dbg !3091
  store i32* %incdec.ptr5, i32** %decoded1, align 8, !dbg !3091
  store i32 %call4, i32* %10, align 4, !dbg !3092
  br label %while.cond, !dbg !3093, !llvm.loop !3095

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3096
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_mono_3800(%struct.APEContext* %ctx, i32 %count) #1 !dbg !3097 {
entry:
  %retval.i29 = alloca i32, align 4
  %p.addr.i30 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i30, metadata !3098, metadata !1747), !dbg !3103
  %decoded.addr.i31 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i31, metadata !3108, metadata !1747), !dbg !3109
  %filter.addr.i32 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i32, metadata !3110, metadata !1747), !dbg !3111
  %delayA.addr.i33 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i33, metadata !3112, metadata !1747), !dbg !3113
  %delayB.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayB.addr.i, metadata !3114, metadata !1747), !dbg !3115
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !3116, metadata !1747), !dbg !3117
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !3118, metadata !1747), !dbg !3119
  %predictionA.i34 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i34, metadata !3120, metadata !1747), !dbg !3121
  %predictionB.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionB.i, metadata !3122, metadata !1747), !dbg !3123
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !3124, metadata !1747), !dbg !3125
  %d0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i, metadata !3126, metadata !1747), !dbg !3127
  %d1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i, metadata !3128, metadata !1747), !dbg !3129
  %d2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i, metadata !3130, metadata !1747), !dbg !3131
  %d3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i, metadata !3132, metadata !1747), !dbg !3133
  %d4.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d4.i, metadata !3134, metadata !1747), !dbg !3135
  %retval.i = alloca i32, align 4
  %p.addr.i = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i, metadata !3136, metadata !1747), !dbg !3140
  %decoded.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i, metadata !3143, metadata !1747), !dbg !3144
  %filter.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i, metadata !3145, metadata !1747), !dbg !3146
  %delayA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i, metadata !3147, metadata !1747), !dbg !3148
  %predictionA.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i, metadata !3149, metadata !1747), !dbg !3150
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  %start = alloca i32, align 4
  %shift = alloca i32, align 4
  %order = alloca i32, align 4
  %shift2 = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !3151, metadata !1747), !dbg !3152
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3153, metadata !1747), !dbg !3154
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !3155, metadata !1747), !dbg !3156
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3157
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !3158
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !3156
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !3159, metadata !1747), !dbg !3160
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3161
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !3162
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !3161
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !3161
  store i32* %2, i32** %decoded0, align 8, !dbg !3160
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3163, metadata !1747), !dbg !3164
  store i32 4, i32* %start, align 4, !dbg !3164
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3165, metadata !1747), !dbg !3166
  store i32 10, i32* %shift, align 4, !dbg !3166
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3167
  %compression_level = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 8, !dbg !3169
  %4 = load i32, i32* %compression_level, align 8, !dbg !3169
  %cmp = icmp eq i32 %4, 3000, !dbg !3170
  br i1 %cmp, label %if.then, label %if.else, !dbg !3171

if.then:                                          ; preds = %entry
  store i32 16, i32* %start, align 4, !dbg !3172
  %5 = load i32*, i32** %decoded0, align 8, !dbg !3174
  %6 = load i32, i32* %count.addr, align 4, !dbg !3175
  call void @long_filter_high_3800(i32* %5, i32 16, i32 9, i32 %6), !dbg !3176
  br label %if.end8, !dbg !3177

if.else:                                          ; preds = %entry
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3178
  %compression_level1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 8, !dbg !3181
  %8 = load i32, i32* %compression_level1, align 8, !dbg !3181
  %cmp2 = icmp eq i32 %8, 4000, !dbg !3182
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !3178

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %order, metadata !3183, metadata !1747), !dbg !3185
  store i32 128, i32* %order, align 4, !dbg !3185
  call void @llvm.dbg.declare(metadata i32* %shift2, metadata !3186, metadata !1747), !dbg !3187
  store i32 11, i32* %shift2, align 4, !dbg !3187
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3188
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 7, !dbg !3190
  %10 = load i32, i32* %fileversion, align 4, !dbg !3190
  %cmp4 = icmp sge i32 %10, 3830, !dbg !3191
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3192

if.then5:                                         ; preds = %if.then3
  %11 = load i32, i32* %order, align 4, !dbg !3193
  %shl = shl i32 %11, 1, !dbg !3193
  store i32 %shl, i32* %order, align 4, !dbg !3193
  %12 = load i32, i32* %shift, align 4, !dbg !3195
  %inc = add nsw i32 %12, 1, !dbg !3195
  store i32 %inc, i32* %shift, align 4, !dbg !3195
  %13 = load i32, i32* %shift2, align 4, !dbg !3196
  %inc6 = add nsw i32 %13, 1, !dbg !3196
  store i32 %inc6, i32* %shift2, align 4, !dbg !3196
  %14 = load i32*, i32** %decoded0, align 8, !dbg !3197
  %15 = load i32, i32* %order, align 4, !dbg !3198
  %idx.ext = sext i32 %15 to i64, !dbg !3199
  %add.ptr = getelementptr inbounds i32, i32* %14, i64 %idx.ext, !dbg !3199
  %16 = load i32, i32* %count.addr, align 4, !dbg !3200
  %17 = load i32, i32* %order, align 4, !dbg !3201
  %sub = sub nsw i32 %16, %17, !dbg !3202
  call void @long_filter_ehigh_3830(i32* %add.ptr, i32 %sub), !dbg !3203
  br label %if.end, !dbg !3204

if.end:                                           ; preds = %if.then5, %if.then3
  %18 = load i32, i32* %order, align 4, !dbg !3205
  store i32 %18, i32* %start, align 4, !dbg !3206
  %19 = load i32*, i32** %decoded0, align 8, !dbg !3207
  %20 = load i32, i32* %order, align 4, !dbg !3208
  %21 = load i32, i32* %shift2, align 4, !dbg !3209
  %22 = load i32, i32* %count.addr, align 4, !dbg !3210
  call void @long_filter_high_3800(i32* %19, i32 %20, i32 %21, i32 %22), !dbg !3211
  br label %if.end7, !dbg !3212

if.end7:                                          ; preds = %if.end, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  br label %while.cond, !dbg !3213

while.cond:                                       ; preds = %if.end28, %if.end8
  %23 = load i32, i32* %count.addr, align 4, !dbg !3214
  %dec = add nsw i32 %23, -1, !dbg !3214
  store i32 %dec, i32* %count.addr, align 4, !dbg !3214
  %tobool = icmp ne i32 %23, 0, !dbg !3216
  br i1 %tobool, label %while.body, label %while.end, !dbg !3216

while.body:                                       ; preds = %while.cond
  %24 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3217
  %compression_level9 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %24, i32 0, i32 8, !dbg !3218
  %25 = load i32, i32* %compression_level9, align 8, !dbg !3218
  %cmp10 = icmp eq i32 %25, 1000, !dbg !3219
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !3220

if.then11:                                        ; preds = %while.body
  %26 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3221
  %27 = load i32*, i32** %decoded0, align 8, !dbg !3222
  %28 = load i32, i32* %27, align 4, !dbg !3223
  store %struct.APEPredictor* %26, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3224
  store i32 %28, i32* %decoded.addr.i, align 4, !dbg !3224
  store i32 0, i32* %filter.addr.i, align 4, !dbg !3224
  store i32 50, i32* %delayA.addr.i, align 4, !dbg !3224
  %29 = load i32, i32* %filter.addr.i, align 4, !dbg !3225
  %idxprom.i = sext i32 %29 to i64, !dbg !3226
  %30 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3226
  %lastA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %30, i32 0, i32 1, !dbg !3227
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i, i64 0, i64 %idxprom.i, !dbg !3226
  %31 = load i32, i32* %arrayidx.i, align 4, !dbg !3226
  %32 = load i32, i32* %delayA.addr.i, align 4, !dbg !3228
  %idxprom1.i = sext i32 %32 to i64, !dbg !3229
  %33 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3229
  %buf.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %33, i32 0, i32 0, !dbg !3230
  %34 = load i32*, i32** %buf.i, align 8, !dbg !3230
  %arrayidx2.i = getelementptr inbounds i32, i32* %34, i64 %idxprom1.i, !dbg !3229
  store i32 %31, i32* %arrayidx2.i, align 4, !dbg !3231
  %35 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3232
  %sample_pos.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %35, i32 0, i32 7, !dbg !3234
  %36 = load i32, i32* %sample_pos.i, align 8, !dbg !3234
  %cmp.i = icmp ult i32 %36, 3, !dbg !3235
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3236

if.then.i:                                        ; preds = %if.then11
  %37 = load i32, i32* %decoded.addr.i, align 4, !dbg !3237
  %38 = load i32, i32* %filter.addr.i, align 4, !dbg !3239
  %idxprom3.i = sext i32 %38 to i64, !dbg !3240
  %39 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3240
  %lastA4.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %39, i32 0, i32 1, !dbg !3241
  %arrayidx5.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA4.i, i64 0, i64 %idxprom3.i, !dbg !3240
  store i32 %37, i32* %arrayidx5.i, align 4, !dbg !3242
  %40 = load i32, i32* %decoded.addr.i, align 4, !dbg !3243
  %41 = load i32, i32* %filter.addr.i, align 4, !dbg !3244
  %idxprom6.i = sext i32 %41 to i64, !dbg !3245
  %42 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3245
  %filterA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %42, i32 0, i32 2, !dbg !3246
  %arrayidx7.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i, i64 0, i64 %idxprom6.i, !dbg !3245
  store i32 %40, i32* %arrayidx7.i, align 4, !dbg !3247
  %43 = load i32, i32* %decoded.addr.i, align 4, !dbg !3248
  store i32 %43, i32* %retval.i, align 4, !dbg !3249
  br label %filter_fast_3320.exit, !dbg !3249

if.end.i:                                         ; preds = %if.then11
  %44 = load i32, i32* %delayA.addr.i, align 4, !dbg !3250
  %idxprom8.i = sext i32 %44 to i64, !dbg !3251
  %45 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3251
  %buf9.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %45, i32 0, i32 0, !dbg !3252
  %46 = load i32*, i32** %buf9.i, align 8, !dbg !3252
  %arrayidx10.i = getelementptr inbounds i32, i32* %46, i64 %idxprom8.i, !dbg !3251
  %47 = load i32, i32* %arrayidx10.i, align 4, !dbg !3251
  %mul.i = mul nsw i32 %47, 2, !dbg !3253
  %48 = load i32, i32* %delayA.addr.i, align 4, !dbg !3254
  %sub.i = sub nsw i32 %48, 1, !dbg !3255
  %idxprom11.i = sext i32 %sub.i to i64, !dbg !3256
  %49 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3256
  %buf12.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %49, i32 0, i32 0, !dbg !3257
  %50 = load i32*, i32** %buf12.i, align 8, !dbg !3257
  %arrayidx13.i = getelementptr inbounds i32, i32* %50, i64 %idxprom11.i, !dbg !3256
  %51 = load i32, i32* %arrayidx13.i, align 4, !dbg !3256
  %sub14.i = sub nsw i32 %mul.i, %51, !dbg !3258
  store i32 %sub14.i, i32* %predictionA.i, align 4, !dbg !3259
  %52 = load i32, i32* %decoded.addr.i, align 4, !dbg !3260
  %53 = load i32, i32* %predictionA.i, align 4, !dbg !3261
  %54 = load i32, i32* %filter.addr.i, align 4, !dbg !3262
  %idxprom15.i = sext i32 %54 to i64, !dbg !3263
  %55 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3263
  %coeffsA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %55, i32 0, i32 4, !dbg !3264
  %arrayidx16.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i, i64 0, i64 %idxprom15.i, !dbg !3263
  %arrayidx17.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx16.i, i64 0, i64 0, !dbg !3263
  %56 = load i32, i32* %arrayidx17.i, align 8, !dbg !3263
  %mul18.i = mul nsw i32 %53, %56, !dbg !3265
  %shr.i = ashr i32 %mul18.i, 9, !dbg !3266
  %add.i = add nsw i32 %52, %shr.i, !dbg !3267
  %57 = load i32, i32* %filter.addr.i, align 4, !dbg !3268
  %idxprom19.i = sext i32 %57 to i64, !dbg !3269
  %58 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3269
  %lastA20.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %58, i32 0, i32 1, !dbg !3270
  %arrayidx21.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA20.i, i64 0, i64 %idxprom19.i, !dbg !3269
  store i32 %add.i, i32* %arrayidx21.i, align 4, !dbg !3271
  %59 = load i32, i32* %decoded.addr.i, align 4, !dbg !3272
  %60 = load i32, i32* %predictionA.i, align 4, !dbg !3274
  %xor.i = xor i32 %59, %60, !dbg !3275
  %cmp22.i = icmp sgt i32 %xor.i, 0, !dbg !3276
  br i1 %cmp22.i, label %if.then23.i, label %if.else.i, !dbg !3277

if.then23.i:                                      ; preds = %if.end.i
  %61 = load i32, i32* %filter.addr.i, align 4, !dbg !3278
  %idxprom24.i = sext i32 %61 to i64, !dbg !3279
  %62 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3279
  %coeffsA25.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %62, i32 0, i32 4, !dbg !3280
  %arrayidx26.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA25.i, i64 0, i64 %idxprom24.i, !dbg !3279
  %arrayidx27.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx26.i, i64 0, i64 0, !dbg !3279
  %63 = load i32, i32* %arrayidx27.i, align 8, !dbg !3281
  %inc.i = add nsw i32 %63, 1, !dbg !3281
  store i32 %inc.i, i32* %arrayidx27.i, align 8, !dbg !3281
  br label %if.end32.i, !dbg !3279

if.else.i:                                        ; preds = %if.end.i
  %64 = load i32, i32* %filter.addr.i, align 4, !dbg !3282
  %idxprom28.i = sext i32 %64 to i64, !dbg !3283
  %65 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3283
  %coeffsA29.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %65, i32 0, i32 4, !dbg !3284
  %arrayidx30.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA29.i, i64 0, i64 %idxprom28.i, !dbg !3283
  %arrayidx31.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx30.i, i64 0, i64 0, !dbg !3283
  %66 = load i32, i32* %arrayidx31.i, align 8, !dbg !3285
  %dec.i = add nsw i32 %66, -1, !dbg !3285
  store i32 %dec.i, i32* %arrayidx31.i, align 8, !dbg !3285
  br label %if.end32.i, !dbg !3224

if.end32.i:                                       ; preds = %if.else.i, %if.then23.i
  %67 = load i32, i32* %filter.addr.i, align 4, !dbg !3286
  %idxprom33.i = sext i32 %67 to i64, !dbg !3287
  %68 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3287
  %lastA34.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %68, i32 0, i32 1, !dbg !3288
  %arrayidx35.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA34.i, i64 0, i64 %idxprom33.i, !dbg !3287
  %69 = load i32, i32* %arrayidx35.i, align 4, !dbg !3287
  %70 = load i32, i32* %filter.addr.i, align 4, !dbg !3289
  %idxprom36.i = sext i32 %70 to i64, !dbg !3290
  %71 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3290
  %filterA37.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %71, i32 0, i32 2, !dbg !3291
  %arrayidx38.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA37.i, i64 0, i64 %idxprom36.i, !dbg !3290
  %72 = load i32, i32* %arrayidx38.i, align 4, !dbg !3292
  %add39.i = add nsw i32 %72, %69, !dbg !3292
  store i32 %add39.i, i32* %arrayidx38.i, align 4, !dbg !3292
  %73 = load i32, i32* %filter.addr.i, align 4, !dbg !3293
  %idxprom40.i = sext i32 %73 to i64, !dbg !3294
  %74 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3294
  %filterA41.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %74, i32 0, i32 2, !dbg !3295
  %arrayidx42.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA41.i, i64 0, i64 %idxprom40.i, !dbg !3294
  %75 = load i32, i32* %arrayidx42.i, align 4, !dbg !3294
  store i32 %75, i32* %retval.i, align 4, !dbg !3296
  br label %filter_fast_3320.exit, !dbg !3296

filter_fast_3320.exit:                            ; preds = %if.then.i, %if.end32.i
  %76 = load i32, i32* %retval.i, align 4, !dbg !3297
  %77 = load i32*, i32** %decoded0, align 8, !dbg !3298
  store i32 %76, i32* %77, align 4, !dbg !3299
  %78 = load i32*, i32** %decoded0, align 8, !dbg !3300
  %incdec.ptr = getelementptr inbounds i32, i32* %78, i32 1, !dbg !3300
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !3300
  br label %if.end15, !dbg !3301

if.else12:                                        ; preds = %while.body
  %79 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3302
  %80 = load i32*, i32** %decoded0, align 8, !dbg !3303
  %81 = load i32, i32* %80, align 4, !dbg !3304
  %82 = load i32, i32* %start, align 4, !dbg !3305
  %83 = load i32, i32* %shift, align 4, !dbg !3306
  store %struct.APEPredictor* %79, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3307
  store i32 %81, i32* %decoded.addr.i31, align 4, !dbg !3307
  store i32 0, i32* %filter.addr.i32, align 4, !dbg !3307
  store i32 50, i32* %delayA.addr.i33, align 4, !dbg !3307
  store i32 42, i32* %delayB.addr.i, align 4, !dbg !3307
  store i32 %82, i32* %start.addr.i, align 4, !dbg !3307
  store i32 %83, i32* %shift.addr.i, align 4, !dbg !3307
  %84 = load i32, i32* %filter.addr.i32, align 4, !dbg !3308
  %idxprom.i35 = sext i32 %84 to i64, !dbg !3309
  %85 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3309
  %lastA.i36 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %85, i32 0, i32 1, !dbg !3310
  %arrayidx.i37 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i36, i64 0, i64 %idxprom.i35, !dbg !3309
  %86 = load i32, i32* %arrayidx.i37, align 4, !dbg !3309
  %87 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3311
  %idxprom1.i38 = sext i32 %87 to i64, !dbg !3312
  %88 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3312
  %buf.i39 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %88, i32 0, i32 0, !dbg !3313
  %89 = load i32*, i32** %buf.i39, align 8, !dbg !3313
  %arrayidx2.i40 = getelementptr inbounds i32, i32* %89, i64 %idxprom1.i38, !dbg !3312
  store i32 %86, i32* %arrayidx2.i40, align 4, !dbg !3314
  %90 = load i32, i32* %filter.addr.i32, align 4, !dbg !3315
  %idxprom3.i41 = sext i32 %90 to i64, !dbg !3316
  %91 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3316
  %filterB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %91, i32 0, i32 3, !dbg !3317
  %arrayidx4.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB.i, i64 0, i64 %idxprom3.i41, !dbg !3316
  %92 = load i32, i32* %arrayidx4.i, align 4, !dbg !3316
  %93 = load i32, i32* %delayB.addr.i, align 4, !dbg !3318
  %idxprom5.i = sext i32 %93 to i64, !dbg !3319
  %94 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3319
  %buf6.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %94, i32 0, i32 0, !dbg !3320
  %95 = load i32*, i32** %buf6.i, align 8, !dbg !3320
  %arrayidx7.i42 = getelementptr inbounds i32, i32* %95, i64 %idxprom5.i, !dbg !3319
  store i32 %92, i32* %arrayidx7.i42, align 4, !dbg !3321
  %96 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3322
  %sample_pos.i43 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %96, i32 0, i32 7, !dbg !3324
  %97 = load i32, i32* %sample_pos.i43, align 8, !dbg !3324
  %98 = load i32, i32* %start.addr.i, align 4, !dbg !3325
  %cmp.i44 = icmp ult i32 %97, %98, !dbg !3326
  br i1 %cmp.i44, label %if.then.i48, label %if.end.i59, !dbg !3327

if.then.i48:                                      ; preds = %if.else12
  %99 = load i32, i32* %decoded.addr.i31, align 4, !dbg !3328
  %100 = load i32, i32* %filter.addr.i32, align 4, !dbg !3330
  %idxprom8.i45 = sext i32 %100 to i64, !dbg !3331
  %101 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3331
  %filterA.i46 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %101, i32 0, i32 2, !dbg !3332
  %arrayidx9.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i46, i64 0, i64 %idxprom8.i45, !dbg !3331
  %102 = load i32, i32* %arrayidx9.i, align 4, !dbg !3331
  %add.i47 = add nsw i32 %99, %102, !dbg !3333
  store i32 %add.i47, i32* %predictionA.i34, align 4, !dbg !3334
  %103 = load i32, i32* %decoded.addr.i31, align 4, !dbg !3335
  %104 = load i32, i32* %filter.addr.i32, align 4, !dbg !3336
  %idxprom10.i = sext i32 %104 to i64, !dbg !3337
  %105 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3337
  %lastA11.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %105, i32 0, i32 1, !dbg !3338
  %arrayidx12.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA11.i, i64 0, i64 %idxprom10.i, !dbg !3337
  store i32 %103, i32* %arrayidx12.i, align 4, !dbg !3339
  %106 = load i32, i32* %decoded.addr.i31, align 4, !dbg !3340
  %107 = load i32, i32* %filter.addr.i32, align 4, !dbg !3341
  %idxprom13.i = sext i32 %107 to i64, !dbg !3342
  %108 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3342
  %filterB14.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %108, i32 0, i32 3, !dbg !3343
  %arrayidx15.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB14.i, i64 0, i64 %idxprom13.i, !dbg !3342
  store i32 %106, i32* %arrayidx15.i, align 4, !dbg !3344
  %109 = load i32, i32* %predictionA.i34, align 4, !dbg !3345
  %110 = load i32, i32* %filter.addr.i32, align 4, !dbg !3346
  %idxprom16.i = sext i32 %110 to i64, !dbg !3347
  %111 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3347
  %filterA17.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %111, i32 0, i32 2, !dbg !3348
  %arrayidx18.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA17.i, i64 0, i64 %idxprom16.i, !dbg !3347
  store i32 %109, i32* %arrayidx18.i, align 4, !dbg !3349
  %112 = load i32, i32* %predictionA.i34, align 4, !dbg !3350
  store i32 %112, i32* %retval.i29, align 4, !dbg !3351
  br label %filter_3800.exit, !dbg !3351

if.end.i59:                                       ; preds = %if.else12
  %113 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3352
  %idxprom19.i49 = sext i32 %113 to i64, !dbg !3353
  %114 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3353
  %buf20.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %114, i32 0, i32 0, !dbg !3354
  %115 = load i32*, i32** %buf20.i, align 8, !dbg !3354
  %arrayidx21.i50 = getelementptr inbounds i32, i32* %115, i64 %idxprom19.i49, !dbg !3353
  %116 = load i32, i32* %arrayidx21.i50, align 4, !dbg !3353
  store i32 %116, i32* %d2.i, align 4, !dbg !3355
  %117 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3356
  %idxprom22.i = sext i32 %117 to i64, !dbg !3357
  %118 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3357
  %buf23.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %118, i32 0, i32 0, !dbg !3358
  %119 = load i32*, i32** %buf23.i, align 8, !dbg !3358
  %arrayidx24.i = getelementptr inbounds i32, i32* %119, i64 %idxprom22.i, !dbg !3357
  %120 = load i32, i32* %arrayidx24.i, align 4, !dbg !3357
  %121 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3359
  %sub.i51 = sub nsw i32 %121, 1, !dbg !3360
  %idxprom25.i = sext i32 %sub.i51 to i64, !dbg !3361
  %122 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3361
  %buf26.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %122, i32 0, i32 0, !dbg !3362
  %123 = load i32*, i32** %buf26.i, align 8, !dbg !3362
  %arrayidx27.i52 = getelementptr inbounds i32, i32* %123, i64 %idxprom25.i, !dbg !3361
  %124 = load i32, i32* %arrayidx27.i52, align 4, !dbg !3361
  %sub28.i = sub nsw i32 %120, %124, !dbg !3363
  %shl.i = shl i32 %sub28.i, 1, !dbg !3364
  store i32 %shl.i, i32* %d1.i, align 4, !dbg !3365
  %125 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3366
  %idxprom29.i = sext i32 %125 to i64, !dbg !3367
  %126 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3367
  %buf30.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %126, i32 0, i32 0, !dbg !3368
  %127 = load i32*, i32** %buf30.i, align 8, !dbg !3368
  %arrayidx31.i53 = getelementptr inbounds i32, i32* %127, i64 %idxprom29.i, !dbg !3367
  %128 = load i32, i32* %arrayidx31.i53, align 4, !dbg !3367
  %129 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3369
  %sub32.i = sub nsw i32 %129, 2, !dbg !3370
  %idxprom33.i54 = sext i32 %sub32.i to i64, !dbg !3371
  %130 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3371
  %buf34.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %130, i32 0, i32 0, !dbg !3372
  %131 = load i32*, i32** %buf34.i, align 8, !dbg !3372
  %arrayidx35.i55 = getelementptr inbounds i32, i32* %131, i64 %idxprom33.i54, !dbg !3371
  %132 = load i32, i32* %arrayidx35.i55, align 4, !dbg !3371
  %133 = load i32, i32* %delayA.addr.i33, align 4, !dbg !3373
  %sub36.i = sub nsw i32 %133, 1, !dbg !3374
  %idxprom37.i = sext i32 %sub36.i to i64, !dbg !3375
  %134 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3375
  %buf38.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %134, i32 0, i32 0, !dbg !3376
  %135 = load i32*, i32** %buf38.i, align 8, !dbg !3376
  %arrayidx39.i = getelementptr inbounds i32, i32* %135, i64 %idxprom37.i, !dbg !3375
  %136 = load i32, i32* %arrayidx39.i, align 4, !dbg !3375
  %sub40.i = sub nsw i32 %132, %136, !dbg !3377
  %shl41.i = shl i32 %sub40.i, 3, !dbg !3378
  %add42.i = add nsw i32 %128, %shl41.i, !dbg !3379
  store i32 %add42.i, i32* %d0.i, align 4, !dbg !3380
  %137 = load i32, i32* %delayB.addr.i, align 4, !dbg !3381
  %idxprom43.i = sext i32 %137 to i64, !dbg !3382
  %138 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3382
  %buf44.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %138, i32 0, i32 0, !dbg !3383
  %139 = load i32*, i32** %buf44.i, align 8, !dbg !3383
  %arrayidx45.i = getelementptr inbounds i32, i32* %139, i64 %idxprom43.i, !dbg !3382
  %140 = load i32, i32* %arrayidx45.i, align 4, !dbg !3382
  %mul.i56 = mul nsw i32 %140, 2, !dbg !3384
  %141 = load i32, i32* %delayB.addr.i, align 4, !dbg !3385
  %sub46.i = sub nsw i32 %141, 1, !dbg !3386
  %idxprom47.i = sext i32 %sub46.i to i64, !dbg !3387
  %142 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3387
  %buf48.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %142, i32 0, i32 0, !dbg !3388
  %143 = load i32*, i32** %buf48.i, align 8, !dbg !3388
  %arrayidx49.i = getelementptr inbounds i32, i32* %143, i64 %idxprom47.i, !dbg !3387
  %144 = load i32, i32* %arrayidx49.i, align 4, !dbg !3387
  %sub50.i = sub nsw i32 %mul.i56, %144, !dbg !3389
  store i32 %sub50.i, i32* %d3.i, align 4, !dbg !3390
  %145 = load i32, i32* %delayB.addr.i, align 4, !dbg !3391
  %idxprom51.i = sext i32 %145 to i64, !dbg !3392
  %146 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3392
  %buf52.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %146, i32 0, i32 0, !dbg !3393
  %147 = load i32*, i32** %buf52.i, align 8, !dbg !3393
  %arrayidx53.i = getelementptr inbounds i32, i32* %147, i64 %idxprom51.i, !dbg !3392
  %148 = load i32, i32* %arrayidx53.i, align 4, !dbg !3392
  store i32 %148, i32* %d4.i, align 4, !dbg !3394
  %149 = load i32, i32* %d0.i, align 4, !dbg !3395
  %150 = load i32, i32* %filter.addr.i32, align 4, !dbg !3396
  %idxprom54.i = sext i32 %150 to i64, !dbg !3397
  %151 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3397
  %coeffsA.i57 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %151, i32 0, i32 4, !dbg !3398
  %arrayidx55.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i57, i64 0, i64 %idxprom54.i, !dbg !3397
  %arrayidx56.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx55.i, i64 0, i64 0, !dbg !3397
  %152 = load i32, i32* %arrayidx56.i, align 8, !dbg !3397
  %mul57.i = mul nsw i32 %149, %152, !dbg !3399
  %153 = load i32, i32* %d1.i, align 4, !dbg !3400
  %154 = load i32, i32* %filter.addr.i32, align 4, !dbg !3401
  %idxprom58.i = sext i32 %154 to i64, !dbg !3402
  %155 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3402
  %coeffsA59.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %155, i32 0, i32 4, !dbg !3403
  %arrayidx60.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA59.i, i64 0, i64 %idxprom58.i, !dbg !3402
  %arrayidx61.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60.i, i64 0, i64 1, !dbg !3402
  %156 = load i32, i32* %arrayidx61.i, align 4, !dbg !3402
  %mul62.i = mul nsw i32 %153, %156, !dbg !3404
  %add63.i = add nsw i32 %mul57.i, %mul62.i, !dbg !3405
  %157 = load i32, i32* %d2.i, align 4, !dbg !3406
  %158 = load i32, i32* %filter.addr.i32, align 4, !dbg !3407
  %idxprom64.i = sext i32 %158 to i64, !dbg !3408
  %159 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3408
  %coeffsA65.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %159, i32 0, i32 4, !dbg !3409
  %arrayidx66.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA65.i, i64 0, i64 %idxprom64.i, !dbg !3408
  %arrayidx67.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx66.i, i64 0, i64 2, !dbg !3408
  %160 = load i32, i32* %arrayidx67.i, align 8, !dbg !3408
  %mul68.i = mul nsw i32 %157, %160, !dbg !3410
  %add69.i = add nsw i32 %add63.i, %mul68.i, !dbg !3411
  store i32 %add69.i, i32* %predictionA.i34, align 4, !dbg !3412
  %161 = load i32, i32* %decoded.addr.i31, align 4, !dbg !3413
  %call.i = call i32 @APESIGN(i32 %161) #8, !dbg !3414
  store i32 %call.i, i32* %sign.i, align 4, !dbg !3415
  %162 = load i32, i32* %d0.i, align 4, !dbg !3416
  %shr.i58 = ashr i32 %162, 30, !dbg !3417
  %and.i = and i32 %shr.i58, 2, !dbg !3418
  %sub70.i = sub nsw i32 %and.i, 1, !dbg !3419
  %163 = load i32, i32* %sign.i, align 4, !dbg !3420
  %mul71.i = mul nsw i32 %sub70.i, %163, !dbg !3421
  %164 = load i32, i32* %filter.addr.i32, align 4, !dbg !3422
  %idxprom72.i = sext i32 %164 to i64, !dbg !3423
  %165 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3423
  %coeffsA73.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %165, i32 0, i32 4, !dbg !3424
  %arrayidx74.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA73.i, i64 0, i64 %idxprom72.i, !dbg !3423
  %arrayidx75.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx74.i, i64 0, i64 0, !dbg !3423
  %166 = load i32, i32* %arrayidx75.i, align 8, !dbg !3425
  %add76.i = add nsw i32 %166, %mul71.i, !dbg !3425
  store i32 %add76.i, i32* %arrayidx75.i, align 8, !dbg !3425
  %167 = load i32, i32* %d1.i, align 4, !dbg !3426
  %shr77.i = ashr i32 %167, 28, !dbg !3427
  %and78.i = and i32 %shr77.i, 8, !dbg !3428
  %sub79.i = sub nsw i32 %and78.i, 4, !dbg !3429
  %168 = load i32, i32* %sign.i, align 4, !dbg !3430
  %mul80.i = mul nsw i32 %sub79.i, %168, !dbg !3431
  %169 = load i32, i32* %filter.addr.i32, align 4, !dbg !3432
  %idxprom81.i = sext i32 %169 to i64, !dbg !3433
  %170 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3433
  %coeffsA82.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %170, i32 0, i32 4, !dbg !3434
  %arrayidx83.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA82.i, i64 0, i64 %idxprom81.i, !dbg !3433
  %arrayidx84.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83.i, i64 0, i64 1, !dbg !3433
  %171 = load i32, i32* %arrayidx84.i, align 4, !dbg !3435
  %add85.i = add nsw i32 %171, %mul80.i, !dbg !3435
  store i32 %add85.i, i32* %arrayidx84.i, align 4, !dbg !3435
  %172 = load i32, i32* %d2.i, align 4, !dbg !3436
  %shr86.i = ashr i32 %172, 28, !dbg !3437
  %and87.i = and i32 %shr86.i, 8, !dbg !3438
  %sub88.i = sub nsw i32 %and87.i, 4, !dbg !3439
  %173 = load i32, i32* %sign.i, align 4, !dbg !3440
  %mul89.i = mul nsw i32 %sub88.i, %173, !dbg !3441
  %174 = load i32, i32* %filter.addr.i32, align 4, !dbg !3442
  %idxprom90.i = sext i32 %174 to i64, !dbg !3443
  %175 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3443
  %coeffsA91.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %175, i32 0, i32 4, !dbg !3444
  %arrayidx92.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA91.i, i64 0, i64 %idxprom90.i, !dbg !3443
  %arrayidx93.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx92.i, i64 0, i64 2, !dbg !3443
  %176 = load i32, i32* %arrayidx93.i, align 8, !dbg !3445
  %add94.i = add nsw i32 %176, %mul89.i, !dbg !3445
  store i32 %add94.i, i32* %arrayidx93.i, align 8, !dbg !3445
  %177 = load i32, i32* %d3.i, align 4, !dbg !3446
  %178 = load i32, i32* %filter.addr.i32, align 4, !dbg !3447
  %idxprom95.i = sext i32 %178 to i64, !dbg !3448
  %179 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3448
  %coeffsB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %179, i32 0, i32 5, !dbg !3449
  %arrayidx96.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB.i, i64 0, i64 %idxprom95.i, !dbg !3448
  %arrayidx97.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx96.i, i64 0, i64 0, !dbg !3448
  %180 = load i32, i32* %arrayidx97.i, align 4, !dbg !3448
  %mul98.i = mul nsw i32 %177, %180, !dbg !3450
  %181 = load i32, i32* %d4.i, align 4, !dbg !3451
  %182 = load i32, i32* %filter.addr.i32, align 4, !dbg !3452
  %idxprom99.i = sext i32 %182 to i64, !dbg !3453
  %183 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3453
  %coeffsB100.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %183, i32 0, i32 5, !dbg !3454
  %arrayidx101.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB100.i, i64 0, i64 %idxprom99.i, !dbg !3453
  %arrayidx102.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx101.i, i64 0, i64 1, !dbg !3453
  %184 = load i32, i32* %arrayidx102.i, align 4, !dbg !3453
  %mul103.i = mul nsw i32 %181, %184, !dbg !3455
  %sub104.i = sub nsw i32 %mul98.i, %mul103.i, !dbg !3456
  store i32 %sub104.i, i32* %predictionB.i, align 4, !dbg !3457
  %185 = load i32, i32* %decoded.addr.i31, align 4, !dbg !3458
  %186 = load i32, i32* %predictionA.i34, align 4, !dbg !3459
  %shr105.i = ashr i32 %186, 11, !dbg !3460
  %add106.i = add nsw i32 %185, %shr105.i, !dbg !3461
  %187 = load i32, i32* %filter.addr.i32, align 4, !dbg !3462
  %idxprom107.i = sext i32 %187 to i64, !dbg !3463
  %188 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3463
  %lastA108.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %188, i32 0, i32 1, !dbg !3464
  %arrayidx109.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA108.i, i64 0, i64 %idxprom107.i, !dbg !3463
  store i32 %add106.i, i32* %arrayidx109.i, align 4, !dbg !3465
  %189 = load i32, i32* %filter.addr.i32, align 4, !dbg !3466
  %idxprom110.i = sext i32 %189 to i64, !dbg !3467
  %190 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3467
  %lastA111.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %190, i32 0, i32 1, !dbg !3468
  %arrayidx112.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA111.i, i64 0, i64 %idxprom110.i, !dbg !3467
  %191 = load i32, i32* %arrayidx112.i, align 4, !dbg !3467
  %call113.i = call i32 @APESIGN(i32 %191) #8, !dbg !3469
  store i32 %call113.i, i32* %sign.i, align 4, !dbg !3470
  %192 = load i32, i32* %d3.i, align 4, !dbg !3471
  %shr114.i = ashr i32 %192, 29, !dbg !3472
  %and115.i = and i32 %shr114.i, 4, !dbg !3473
  %sub116.i = sub nsw i32 %and115.i, 2, !dbg !3474
  %193 = load i32, i32* %sign.i, align 4, !dbg !3475
  %mul117.i = mul nsw i32 %sub116.i, %193, !dbg !3476
  %194 = load i32, i32* %filter.addr.i32, align 4, !dbg !3477
  %idxprom118.i = sext i32 %194 to i64, !dbg !3478
  %195 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3478
  %coeffsB119.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %195, i32 0, i32 5, !dbg !3479
  %arrayidx120.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB119.i, i64 0, i64 %idxprom118.i, !dbg !3478
  %arrayidx121.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx120.i, i64 0, i64 0, !dbg !3478
  %196 = load i32, i32* %arrayidx121.i, align 4, !dbg !3480
  %add122.i = add nsw i32 %196, %mul117.i, !dbg !3480
  store i32 %add122.i, i32* %arrayidx121.i, align 4, !dbg !3480
  %197 = load i32, i32* %d4.i, align 4, !dbg !3481
  %shr123.i = ashr i32 %197, 30, !dbg !3482
  %and124.i = and i32 %shr123.i, 2, !dbg !3483
  %sub125.i = sub nsw i32 %and124.i, 1, !dbg !3484
  %198 = load i32, i32* %sign.i, align 4, !dbg !3485
  %mul126.i = mul nsw i32 %sub125.i, %198, !dbg !3486
  %199 = load i32, i32* %filter.addr.i32, align 4, !dbg !3487
  %idxprom127.i = sext i32 %199 to i64, !dbg !3488
  %200 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3488
  %coeffsB128.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %200, i32 0, i32 5, !dbg !3489
  %arrayidx129.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB128.i, i64 0, i64 %idxprom127.i, !dbg !3488
  %arrayidx130.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx129.i, i64 0, i64 1, !dbg !3488
  %201 = load i32, i32* %arrayidx130.i, align 4, !dbg !3490
  %sub131.i = sub nsw i32 %201, %mul126.i, !dbg !3490
  store i32 %sub131.i, i32* %arrayidx130.i, align 4, !dbg !3490
  %202 = load i32, i32* %filter.addr.i32, align 4, !dbg !3491
  %idxprom132.i = sext i32 %202 to i64, !dbg !3492
  %203 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3492
  %lastA133.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %203, i32 0, i32 1, !dbg !3493
  %arrayidx134.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA133.i, i64 0, i64 %idxprom132.i, !dbg !3492
  %204 = load i32, i32* %arrayidx134.i, align 4, !dbg !3492
  %205 = load i32, i32* %predictionB.i, align 4, !dbg !3494
  %206 = load i32, i32* %shift.addr.i, align 4, !dbg !3495
  %shr135.i = ashr i32 %205, %206, !dbg !3496
  %add136.i = add nsw i32 %204, %shr135.i, !dbg !3497
  %207 = load i32, i32* %filter.addr.i32, align 4, !dbg !3498
  %idxprom137.i = sext i32 %207 to i64, !dbg !3499
  %208 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3499
  %filterB138.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %208, i32 0, i32 3, !dbg !3500
  %arrayidx139.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB138.i, i64 0, i64 %idxprom137.i, !dbg !3499
  store i32 %add136.i, i32* %arrayidx139.i, align 4, !dbg !3501
  %209 = load i32, i32* %filter.addr.i32, align 4, !dbg !3502
  %idxprom140.i = sext i32 %209 to i64, !dbg !3503
  %210 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3503
  %filterB141.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %210, i32 0, i32 3, !dbg !3504
  %arrayidx142.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB141.i, i64 0, i64 %idxprom140.i, !dbg !3503
  %211 = load i32, i32* %arrayidx142.i, align 4, !dbg !3503
  %212 = load i32, i32* %filter.addr.i32, align 4, !dbg !3505
  %idxprom143.i = sext i32 %212 to i64, !dbg !3506
  %213 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3506
  %filterA144.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %213, i32 0, i32 2, !dbg !3507
  %arrayidx145.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA144.i, i64 0, i64 %idxprom143.i, !dbg !3506
  %214 = load i32, i32* %arrayidx145.i, align 4, !dbg !3506
  %mul146.i = mul nsw i32 %214, 31, !dbg !3508
  %shr147.i = ashr i32 %mul146.i, 5, !dbg !3509
  %add148.i = add nsw i32 %211, %shr147.i, !dbg !3510
  %215 = load i32, i32* %filter.addr.i32, align 4, !dbg !3511
  %idxprom149.i = sext i32 %215 to i64, !dbg !3512
  %216 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3512
  %filterA150.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %216, i32 0, i32 2, !dbg !3513
  %arrayidx151.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA150.i, i64 0, i64 %idxprom149.i, !dbg !3512
  store i32 %add148.i, i32* %arrayidx151.i, align 4, !dbg !3514
  %217 = load i32, i32* %filter.addr.i32, align 4, !dbg !3515
  %idxprom152.i = sext i32 %217 to i64, !dbg !3516
  %218 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i30, align 8, !dbg !3516
  %filterA153.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %218, i32 0, i32 2, !dbg !3517
  %arrayidx154.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA153.i, i64 0, i64 %idxprom152.i, !dbg !3516
  %219 = load i32, i32* %arrayidx154.i, align 4, !dbg !3516
  store i32 %219, i32* %retval.i29, align 4, !dbg !3518
  br label %filter_3800.exit, !dbg !3518

filter_3800.exit:                                 ; preds = %if.then.i48, %if.end.i59
  %220 = load i32, i32* %retval.i29, align 4, !dbg !3519
  %221 = load i32*, i32** %decoded0, align 8, !dbg !3520
  store i32 %220, i32* %221, align 4, !dbg !3521
  %222 = load i32*, i32** %decoded0, align 8, !dbg !3522
  %incdec.ptr14 = getelementptr inbounds i32, i32* %222, i32 1, !dbg !3522
  store i32* %incdec.ptr14, i32** %decoded0, align 8, !dbg !3522
  br label %if.end15

if.end15:                                         ; preds = %filter_3800.exit, %filter_fast_3320.exit
  %223 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3523
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %223, i32 0, i32 0, !dbg !3524
  %224 = load i32*, i32** %buf, align 8, !dbg !3525
  %incdec.ptr16 = getelementptr inbounds i32, i32* %224, i32 1, !dbg !3525
  store i32* %incdec.ptr16, i32** %buf, align 8, !dbg !3525
  %225 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3526
  %sample_pos = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %225, i32 0, i32 7, !dbg !3527
  %226 = load i32, i32* %sample_pos, align 8, !dbg !3528
  %inc17 = add i32 %226, 1, !dbg !3528
  store i32 %inc17, i32* %sample_pos, align 8, !dbg !3528
  %227 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3529
  %buf18 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %227, i32 0, i32 0, !dbg !3531
  %228 = load i32*, i32** %buf18, align 8, !dbg !3531
  %229 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3532
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %229, i32 0, i32 6, !dbg !3533
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !3532
  %add.ptr19 = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !3534
  %cmp20 = icmp eq i32* %228, %add.ptr19, !dbg !3535
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !3536

if.then21:                                        ; preds = %if.end15
  %230 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3537
  %historybuffer22 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %230, i32 0, i32 6, !dbg !3539
  %arraydecay23 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer22, i32 0, i32 0, !dbg !3540
  %231 = bitcast i32* %arraydecay23 to i8*, !dbg !3540
  %232 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3541
  %buf24 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %232, i32 0, i32 0, !dbg !3542
  %233 = load i32*, i32** %buf24, align 8, !dbg !3542
  %234 = bitcast i32* %233 to i8*, !dbg !3540
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %231, i8* %234, i64 200, i32 4, i1 false), !dbg !3540
  %235 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3543
  %historybuffer25 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %235, i32 0, i32 6, !dbg !3544
  %arraydecay26 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer25, i32 0, i32 0, !dbg !3543
  %236 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3545
  %buf27 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %236, i32 0, i32 0, !dbg !3546
  store i32* %arraydecay26, i32** %buf27, align 8, !dbg !3547
  br label %if.end28, !dbg !3548

if.end28:                                         ; preds = %if.then21, %if.end15
  br label %while.cond, !dbg !3549, !llvm.loop !3551

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3552
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_stereo_3800(%struct.APEContext* %ctx, i32 %count) #1 !dbg !3553 {
entry:
  %retval.i137 = alloca i32, align 4
  %p.addr.i138 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i138, metadata !3098, metadata !1747), !dbg !3554
  %decoded.addr.i139 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i139, metadata !3108, metadata !1747), !dbg !3559
  %filter.addr.i140 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i140, metadata !3110, metadata !1747), !dbg !3560
  %delayA.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i141, metadata !3112, metadata !1747), !dbg !3561
  %delayB.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayB.addr.i142, metadata !3114, metadata !1747), !dbg !3562
  %start.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i143, metadata !3116, metadata !1747), !dbg !3563
  %shift.addr.i144 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i144, metadata !3118, metadata !1747), !dbg !3564
  %predictionA.i145 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i145, metadata !3120, metadata !1747), !dbg !3565
  %predictionB.i146 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionB.i146, metadata !3122, metadata !1747), !dbg !3566
  %sign.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i147, metadata !3124, metadata !1747), !dbg !3567
  %d0.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i148, metadata !3126, metadata !1747), !dbg !3568
  %d1.i149 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i149, metadata !3128, metadata !1747), !dbg !3569
  %d2.i150 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i150, metadata !3130, metadata !1747), !dbg !3570
  %d3.i151 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i151, metadata !3132, metadata !1747), !dbg !3571
  %d4.i152 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d4.i152, metadata !3134, metadata !1747), !dbg !3572
  %retval.i70 = alloca i32, align 4
  %p.addr.i71 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i71, metadata !3136, metadata !1747), !dbg !3573
  %decoded.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i72, metadata !3143, metadata !1747), !dbg !3576
  %filter.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i73, metadata !3145, metadata !1747), !dbg !3577
  %delayA.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i74, metadata !3147, metadata !1747), !dbg !3578
  %predictionA.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i75, metadata !3149, metadata !1747), !dbg !3579
  %retval.i39 = alloca i32, align 4
  %p.addr.i40 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i40, metadata !3098, metadata !1747), !dbg !3580
  %decoded.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i41, metadata !3108, metadata !1747), !dbg !3582
  %filter.addr.i42 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i42, metadata !3110, metadata !1747), !dbg !3583
  %delayA.addr.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i43, metadata !3112, metadata !1747), !dbg !3584
  %delayB.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayB.addr.i, metadata !3114, metadata !1747), !dbg !3585
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !3116, metadata !1747), !dbg !3586
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !3118, metadata !1747), !dbg !3587
  %predictionA.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i44, metadata !3120, metadata !1747), !dbg !3588
  %predictionB.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionB.i, metadata !3122, metadata !1747), !dbg !3589
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !3124, metadata !1747), !dbg !3590
  %d0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i, metadata !3126, metadata !1747), !dbg !3591
  %d1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i, metadata !3128, metadata !1747), !dbg !3592
  %d2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i, metadata !3130, metadata !1747), !dbg !3593
  %d3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i, metadata !3132, metadata !1747), !dbg !3594
  %d4.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d4.i, metadata !3134, metadata !1747), !dbg !3595
  %retval.i = alloca i32, align 4
  %p.addr.i = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i, metadata !3136, metadata !1747), !dbg !3596
  %decoded.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i, metadata !3143, metadata !1747), !dbg !3598
  %filter.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i, metadata !3145, metadata !1747), !dbg !3599
  %delayA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i, metadata !3147, metadata !1747), !dbg !3600
  %predictionA.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i, metadata !3149, metadata !1747), !dbg !3601
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  %start = alloca i32, align 4
  %shift = alloca i32, align 4
  %order = alloca i32, align 4
  %shift2 = alloca i32, align 4
  %X = alloca i32, align 4
  %Y = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !3602, metadata !1747), !dbg !3603
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3604, metadata !1747), !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !3606, metadata !1747), !dbg !3607
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3608
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !3609
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !3607
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !3610, metadata !1747), !dbg !3611
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3612
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !3613
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !3612
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !3612
  store i32* %2, i32** %decoded0, align 8, !dbg !3611
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !3614, metadata !1747), !dbg !3615
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3616
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 16, !dbg !3617
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !3616
  %4 = load i32*, i32** %arrayidx3, align 8, !dbg !3616
  store i32* %4, i32** %decoded1, align 8, !dbg !3615
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3618, metadata !1747), !dbg !3619
  store i32 4, i32* %start, align 4, !dbg !3619
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3620, metadata !1747), !dbg !3621
  store i32 10, i32* %shift, align 4, !dbg !3621
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3622
  %compression_level = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 8, !dbg !3624
  %6 = load i32, i32* %compression_level, align 8, !dbg !3624
  %cmp = icmp eq i32 %6, 3000, !dbg !3625
  br i1 %cmp, label %if.then, label %if.else, !dbg !3626

if.then:                                          ; preds = %entry
  store i32 16, i32* %start, align 4, !dbg !3627
  %7 = load i32*, i32** %decoded0, align 8, !dbg !3629
  %8 = load i32, i32* %count.addr, align 4, !dbg !3630
  call void @long_filter_high_3800(i32* %7, i32 16, i32 9, i32 %8), !dbg !3631
  %9 = load i32*, i32** %decoded1, align 8, !dbg !3632
  %10 = load i32, i32* %count.addr, align 4, !dbg !3633
  call void @long_filter_high_3800(i32* %9, i32 16, i32 9, i32 %10), !dbg !3634
  br label %if.end14, !dbg !3635

if.else:                                          ; preds = %entry
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3636
  %compression_level4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %11, i32 0, i32 8, !dbg !3639
  %12 = load i32, i32* %compression_level4, align 8, !dbg !3639
  %cmp5 = icmp eq i32 %12, 4000, !dbg !3640
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !3636

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %order, metadata !3641, metadata !1747), !dbg !3643
  store i32 128, i32* %order, align 4, !dbg !3643
  call void @llvm.dbg.declare(metadata i32* %shift2, metadata !3644, metadata !1747), !dbg !3645
  store i32 11, i32* %shift2, align 4, !dbg !3645
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3646
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 7, !dbg !3648
  %14 = load i32, i32* %fileversion, align 4, !dbg !3648
  %cmp7 = icmp sge i32 %14, 3830, !dbg !3649
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !3650

if.then8:                                         ; preds = %if.then6
  %15 = load i32, i32* %order, align 4, !dbg !3651
  %shl = shl i32 %15, 1, !dbg !3651
  store i32 %shl, i32* %order, align 4, !dbg !3651
  %16 = load i32, i32* %shift, align 4, !dbg !3653
  %inc = add nsw i32 %16, 1, !dbg !3653
  store i32 %inc, i32* %shift, align 4, !dbg !3653
  %17 = load i32, i32* %shift2, align 4, !dbg !3654
  %inc9 = add nsw i32 %17, 1, !dbg !3654
  store i32 %inc9, i32* %shift2, align 4, !dbg !3654
  %18 = load i32*, i32** %decoded0, align 8, !dbg !3655
  %19 = load i32, i32* %order, align 4, !dbg !3656
  %idx.ext = sext i32 %19 to i64, !dbg !3657
  %add.ptr = getelementptr inbounds i32, i32* %18, i64 %idx.ext, !dbg !3657
  %20 = load i32, i32* %count.addr, align 4, !dbg !3658
  %21 = load i32, i32* %order, align 4, !dbg !3659
  %sub = sub nsw i32 %20, %21, !dbg !3660
  call void @long_filter_ehigh_3830(i32* %add.ptr, i32 %sub), !dbg !3661
  %22 = load i32*, i32** %decoded1, align 8, !dbg !3662
  %23 = load i32, i32* %order, align 4, !dbg !3663
  %idx.ext10 = sext i32 %23 to i64, !dbg !3664
  %add.ptr11 = getelementptr inbounds i32, i32* %22, i64 %idx.ext10, !dbg !3664
  %24 = load i32, i32* %count.addr, align 4, !dbg !3665
  %25 = load i32, i32* %order, align 4, !dbg !3666
  %sub12 = sub nsw i32 %24, %25, !dbg !3667
  call void @long_filter_ehigh_3830(i32* %add.ptr11, i32 %sub12), !dbg !3668
  br label %if.end, !dbg !3669

if.end:                                           ; preds = %if.then8, %if.then6
  %26 = load i32, i32* %order, align 4, !dbg !3670
  store i32 %26, i32* %start, align 4, !dbg !3671
  %27 = load i32*, i32** %decoded0, align 8, !dbg !3672
  %28 = load i32, i32* %order, align 4, !dbg !3673
  %29 = load i32, i32* %shift2, align 4, !dbg !3674
  %30 = load i32, i32* %count.addr, align 4, !dbg !3675
  call void @long_filter_high_3800(i32* %27, i32 %28, i32 %29, i32 %30), !dbg !3676
  %31 = load i32*, i32** %decoded1, align 8, !dbg !3677
  %32 = load i32, i32* %order, align 4, !dbg !3678
  %33 = load i32, i32* %shift2, align 4, !dbg !3679
  %34 = load i32, i32* %count.addr, align 4, !dbg !3680
  call void @long_filter_high_3800(i32* %31, i32 %32, i32 %33, i32 %34), !dbg !3681
  br label %if.end13, !dbg !3682

if.end13:                                         ; preds = %if.end, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  br label %while.cond, !dbg !3683

while.cond:                                       ; preds = %if.end38, %if.end14
  %35 = load i32, i32* %count.addr, align 4, !dbg !3684
  %dec = add nsw i32 %35, -1, !dbg !3684
  store i32 %dec, i32* %count.addr, align 4, !dbg !3684
  %tobool = icmp ne i32 %35, 0, !dbg !3686
  br i1 %tobool, label %while.body, label %while.end, !dbg !3686

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %X, metadata !3687, metadata !1747), !dbg !3688
  %36 = load i32*, i32** %decoded0, align 8, !dbg !3689
  %37 = load i32, i32* %36, align 4, !dbg !3690
  store i32 %37, i32* %X, align 4, !dbg !3688
  call void @llvm.dbg.declare(metadata i32* %Y, metadata !3691, metadata !1747), !dbg !3692
  %38 = load i32*, i32** %decoded1, align 8, !dbg !3693
  %39 = load i32, i32* %38, align 4, !dbg !3694
  store i32 %39, i32* %Y, align 4, !dbg !3692
  %40 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !3695
  %compression_level15 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %40, i32 0, i32 8, !dbg !3696
  %41 = load i32, i32* %compression_level15, align 8, !dbg !3696
  %cmp16 = icmp eq i32 %41, 1000, !dbg !3697
  br i1 %cmp16, label %if.then17, label %if.else20, !dbg !3698

if.then17:                                        ; preds = %while.body
  %42 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3699
  %43 = load i32, i32* %Y, align 4, !dbg !3700
  store %struct.APEPredictor* %42, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3701
  store i32 %43, i32* %decoded.addr.i, align 4, !dbg !3701
  store i32 0, i32* %filter.addr.i, align 4, !dbg !3701
  store i32 50, i32* %delayA.addr.i, align 4, !dbg !3701
  %44 = load i32, i32* %filter.addr.i, align 4, !dbg !3702
  %idxprom.i = sext i32 %44 to i64, !dbg !3703
  %45 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3703
  %lastA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %45, i32 0, i32 1, !dbg !3704
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i, i64 0, i64 %idxprom.i, !dbg !3703
  %46 = load i32, i32* %arrayidx.i, align 4, !dbg !3703
  %47 = load i32, i32* %delayA.addr.i, align 4, !dbg !3705
  %idxprom1.i = sext i32 %47 to i64, !dbg !3706
  %48 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3706
  %buf.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %48, i32 0, i32 0, !dbg !3707
  %49 = load i32*, i32** %buf.i, align 8, !dbg !3707
  %arrayidx2.i = getelementptr inbounds i32, i32* %49, i64 %idxprom1.i, !dbg !3706
  store i32 %46, i32* %arrayidx2.i, align 4, !dbg !3708
  %50 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3709
  %sample_pos.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %50, i32 0, i32 7, !dbg !3710
  %51 = load i32, i32* %sample_pos.i, align 8, !dbg !3710
  %cmp.i = icmp ult i32 %51, 3, !dbg !3711
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3712

if.then.i:                                        ; preds = %if.then17
  %52 = load i32, i32* %decoded.addr.i, align 4, !dbg !3713
  %53 = load i32, i32* %filter.addr.i, align 4, !dbg !3714
  %idxprom3.i = sext i32 %53 to i64, !dbg !3715
  %54 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3715
  %lastA4.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %54, i32 0, i32 1, !dbg !3716
  %arrayidx5.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA4.i, i64 0, i64 %idxprom3.i, !dbg !3715
  store i32 %52, i32* %arrayidx5.i, align 4, !dbg !3717
  %55 = load i32, i32* %decoded.addr.i, align 4, !dbg !3718
  %56 = load i32, i32* %filter.addr.i, align 4, !dbg !3719
  %idxprom6.i = sext i32 %56 to i64, !dbg !3720
  %57 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3720
  %filterA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %57, i32 0, i32 2, !dbg !3721
  %arrayidx7.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i, i64 0, i64 %idxprom6.i, !dbg !3720
  store i32 %55, i32* %arrayidx7.i, align 4, !dbg !3722
  %58 = load i32, i32* %decoded.addr.i, align 4, !dbg !3723
  store i32 %58, i32* %retval.i, align 4, !dbg !3724
  br label %filter_fast_3320.exit, !dbg !3724

if.end.i:                                         ; preds = %if.then17
  %59 = load i32, i32* %delayA.addr.i, align 4, !dbg !3725
  %idxprom8.i = sext i32 %59 to i64, !dbg !3726
  %60 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3726
  %buf9.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %60, i32 0, i32 0, !dbg !3727
  %61 = load i32*, i32** %buf9.i, align 8, !dbg !3727
  %arrayidx10.i = getelementptr inbounds i32, i32* %61, i64 %idxprom8.i, !dbg !3726
  %62 = load i32, i32* %arrayidx10.i, align 4, !dbg !3726
  %mul.i = mul nsw i32 %62, 2, !dbg !3728
  %63 = load i32, i32* %delayA.addr.i, align 4, !dbg !3729
  %sub.i = sub nsw i32 %63, 1, !dbg !3730
  %idxprom11.i = sext i32 %sub.i to i64, !dbg !3731
  %64 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3731
  %buf12.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %64, i32 0, i32 0, !dbg !3732
  %65 = load i32*, i32** %buf12.i, align 8, !dbg !3732
  %arrayidx13.i = getelementptr inbounds i32, i32* %65, i64 %idxprom11.i, !dbg !3731
  %66 = load i32, i32* %arrayidx13.i, align 4, !dbg !3731
  %sub14.i = sub nsw i32 %mul.i, %66, !dbg !3733
  store i32 %sub14.i, i32* %predictionA.i, align 4, !dbg !3734
  %67 = load i32, i32* %decoded.addr.i, align 4, !dbg !3735
  %68 = load i32, i32* %predictionA.i, align 4, !dbg !3736
  %69 = load i32, i32* %filter.addr.i, align 4, !dbg !3737
  %idxprom15.i = sext i32 %69 to i64, !dbg !3738
  %70 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3738
  %coeffsA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %70, i32 0, i32 4, !dbg !3739
  %arrayidx16.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i, i64 0, i64 %idxprom15.i, !dbg !3738
  %arrayidx17.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx16.i, i64 0, i64 0, !dbg !3738
  %71 = load i32, i32* %arrayidx17.i, align 8, !dbg !3738
  %mul18.i = mul nsw i32 %68, %71, !dbg !3740
  %shr.i = ashr i32 %mul18.i, 9, !dbg !3741
  %add.i = add nsw i32 %67, %shr.i, !dbg !3742
  %72 = load i32, i32* %filter.addr.i, align 4, !dbg !3743
  %idxprom19.i = sext i32 %72 to i64, !dbg !3744
  %73 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3744
  %lastA20.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %73, i32 0, i32 1, !dbg !3745
  %arrayidx21.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA20.i, i64 0, i64 %idxprom19.i, !dbg !3744
  store i32 %add.i, i32* %arrayidx21.i, align 4, !dbg !3746
  %74 = load i32, i32* %decoded.addr.i, align 4, !dbg !3747
  %75 = load i32, i32* %predictionA.i, align 4, !dbg !3748
  %xor.i = xor i32 %74, %75, !dbg !3749
  %cmp22.i = icmp sgt i32 %xor.i, 0, !dbg !3750
  br i1 %cmp22.i, label %if.then23.i, label %if.else.i, !dbg !3751

if.then23.i:                                      ; preds = %if.end.i
  %76 = load i32, i32* %filter.addr.i, align 4, !dbg !3752
  %idxprom24.i = sext i32 %76 to i64, !dbg !3753
  %77 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3753
  %coeffsA25.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %77, i32 0, i32 4, !dbg !3754
  %arrayidx26.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA25.i, i64 0, i64 %idxprom24.i, !dbg !3753
  %arrayidx27.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx26.i, i64 0, i64 0, !dbg !3753
  %78 = load i32, i32* %arrayidx27.i, align 8, !dbg !3755
  %inc.i = add nsw i32 %78, 1, !dbg !3755
  store i32 %inc.i, i32* %arrayidx27.i, align 8, !dbg !3755
  br label %if.end32.i, !dbg !3753

if.else.i:                                        ; preds = %if.end.i
  %79 = load i32, i32* %filter.addr.i, align 4, !dbg !3756
  %idxprom28.i = sext i32 %79 to i64, !dbg !3757
  %80 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3757
  %coeffsA29.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %80, i32 0, i32 4, !dbg !3758
  %arrayidx30.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA29.i, i64 0, i64 %idxprom28.i, !dbg !3757
  %arrayidx31.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx30.i, i64 0, i64 0, !dbg !3757
  %81 = load i32, i32* %arrayidx31.i, align 8, !dbg !3759
  %dec.i = add nsw i32 %81, -1, !dbg !3759
  store i32 %dec.i, i32* %arrayidx31.i, align 8, !dbg !3759
  br label %if.end32.i, !dbg !3701

if.end32.i:                                       ; preds = %if.else.i, %if.then23.i
  %82 = load i32, i32* %filter.addr.i, align 4, !dbg !3760
  %idxprom33.i = sext i32 %82 to i64, !dbg !3761
  %83 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3761
  %lastA34.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %83, i32 0, i32 1, !dbg !3762
  %arrayidx35.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA34.i, i64 0, i64 %idxprom33.i, !dbg !3761
  %84 = load i32, i32* %arrayidx35.i, align 4, !dbg !3761
  %85 = load i32, i32* %filter.addr.i, align 4, !dbg !3763
  %idxprom36.i = sext i32 %85 to i64, !dbg !3764
  %86 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3764
  %filterA37.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %86, i32 0, i32 2, !dbg !3765
  %arrayidx38.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA37.i, i64 0, i64 %idxprom36.i, !dbg !3764
  %87 = load i32, i32* %arrayidx38.i, align 4, !dbg !3766
  %add39.i = add nsw i32 %87, %84, !dbg !3766
  store i32 %add39.i, i32* %arrayidx38.i, align 4, !dbg !3766
  %88 = load i32, i32* %filter.addr.i, align 4, !dbg !3767
  %idxprom40.i = sext i32 %88 to i64, !dbg !3768
  %89 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !3768
  %filterA41.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %89, i32 0, i32 2, !dbg !3769
  %arrayidx42.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA41.i, i64 0, i64 %idxprom40.i, !dbg !3768
  %90 = load i32, i32* %arrayidx42.i, align 4, !dbg !3768
  store i32 %90, i32* %retval.i, align 4, !dbg !3770
  br label %filter_fast_3320.exit, !dbg !3770

filter_fast_3320.exit:                            ; preds = %if.then.i, %if.end32.i
  %91 = load i32, i32* %retval.i, align 4, !dbg !3771
  %92 = load i32*, i32** %decoded0, align 8, !dbg !3772
  store i32 %91, i32* %92, align 4, !dbg !3773
  %93 = load i32*, i32** %decoded0, align 8, !dbg !3774
  %incdec.ptr = getelementptr inbounds i32, i32* %93, i32 1, !dbg !3774
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !3774
  %94 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3775
  %95 = load i32, i32* %X, align 4, !dbg !3776
  store %struct.APEPredictor* %94, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3777
  store i32 %95, i32* %decoded.addr.i72, align 4, !dbg !3777
  store i32 1, i32* %filter.addr.i73, align 4, !dbg !3777
  store i32 34, i32* %delayA.addr.i74, align 4, !dbg !3777
  %96 = load i32, i32* %filter.addr.i73, align 4, !dbg !3778
  %idxprom.i76 = sext i32 %96 to i64, !dbg !3779
  %97 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3779
  %lastA.i77 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %97, i32 0, i32 1, !dbg !3780
  %arrayidx.i78 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i77, i64 0, i64 %idxprom.i76, !dbg !3779
  %98 = load i32, i32* %arrayidx.i78, align 4, !dbg !3779
  %99 = load i32, i32* %delayA.addr.i74, align 4, !dbg !3781
  %idxprom1.i79 = sext i32 %99 to i64, !dbg !3782
  %100 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3782
  %buf.i80 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %100, i32 0, i32 0, !dbg !3783
  %101 = load i32*, i32** %buf.i80, align 8, !dbg !3783
  %arrayidx2.i81 = getelementptr inbounds i32, i32* %101, i64 %idxprom1.i79, !dbg !3782
  store i32 %98, i32* %arrayidx2.i81, align 4, !dbg !3784
  %102 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3785
  %sample_pos.i82 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %102, i32 0, i32 7, !dbg !3786
  %103 = load i32, i32* %sample_pos.i82, align 8, !dbg !3786
  %cmp.i83 = icmp ult i32 %103, 3, !dbg !3787
  br i1 %cmp.i83, label %if.then.i90, label %if.end.i112, !dbg !3788

if.then.i90:                                      ; preds = %filter_fast_3320.exit
  %104 = load i32, i32* %decoded.addr.i72, align 4, !dbg !3789
  %105 = load i32, i32* %filter.addr.i73, align 4, !dbg !3790
  %idxprom3.i84 = sext i32 %105 to i64, !dbg !3791
  %106 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3791
  %lastA4.i85 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %106, i32 0, i32 1, !dbg !3792
  %arrayidx5.i86 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA4.i85, i64 0, i64 %idxprom3.i84, !dbg !3791
  store i32 %104, i32* %arrayidx5.i86, align 4, !dbg !3793
  %107 = load i32, i32* %decoded.addr.i72, align 4, !dbg !3794
  %108 = load i32, i32* %filter.addr.i73, align 4, !dbg !3795
  %idxprom6.i87 = sext i32 %108 to i64, !dbg !3796
  %109 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3796
  %filterA.i88 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %109, i32 0, i32 2, !dbg !3797
  %arrayidx7.i89 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i88, i64 0, i64 %idxprom6.i87, !dbg !3796
  store i32 %107, i32* %arrayidx7.i89, align 4, !dbg !3798
  %110 = load i32, i32* %decoded.addr.i72, align 4, !dbg !3799
  store i32 %110, i32* %retval.i70, align 4, !dbg !3800
  br label %filter_fast_3320.exit136, !dbg !3800

if.end.i112:                                      ; preds = %filter_fast_3320.exit
  %111 = load i32, i32* %delayA.addr.i74, align 4, !dbg !3801
  %idxprom8.i91 = sext i32 %111 to i64, !dbg !3802
  %112 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3802
  %buf9.i92 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %112, i32 0, i32 0, !dbg !3803
  %113 = load i32*, i32** %buf9.i92, align 8, !dbg !3803
  %arrayidx10.i93 = getelementptr inbounds i32, i32* %113, i64 %idxprom8.i91, !dbg !3802
  %114 = load i32, i32* %arrayidx10.i93, align 4, !dbg !3802
  %mul.i94 = mul nsw i32 %114, 2, !dbg !3804
  %115 = load i32, i32* %delayA.addr.i74, align 4, !dbg !3805
  %sub.i95 = sub nsw i32 %115, 1, !dbg !3806
  %idxprom11.i96 = sext i32 %sub.i95 to i64, !dbg !3807
  %116 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3807
  %buf12.i97 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %116, i32 0, i32 0, !dbg !3808
  %117 = load i32*, i32** %buf12.i97, align 8, !dbg !3808
  %arrayidx13.i98 = getelementptr inbounds i32, i32* %117, i64 %idxprom11.i96, !dbg !3807
  %118 = load i32, i32* %arrayidx13.i98, align 4, !dbg !3807
  %sub14.i99 = sub nsw i32 %mul.i94, %118, !dbg !3809
  store i32 %sub14.i99, i32* %predictionA.i75, align 4, !dbg !3810
  %119 = load i32, i32* %decoded.addr.i72, align 4, !dbg !3811
  %120 = load i32, i32* %predictionA.i75, align 4, !dbg !3812
  %121 = load i32, i32* %filter.addr.i73, align 4, !dbg !3813
  %idxprom15.i100 = sext i32 %121 to i64, !dbg !3814
  %122 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3814
  %coeffsA.i101 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %122, i32 0, i32 4, !dbg !3815
  %arrayidx16.i102 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i101, i64 0, i64 %idxprom15.i100, !dbg !3814
  %arrayidx17.i103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx16.i102, i64 0, i64 0, !dbg !3814
  %123 = load i32, i32* %arrayidx17.i103, align 8, !dbg !3814
  %mul18.i104 = mul nsw i32 %120, %123, !dbg !3816
  %shr.i105 = ashr i32 %mul18.i104, 9, !dbg !3817
  %add.i106 = add nsw i32 %119, %shr.i105, !dbg !3818
  %124 = load i32, i32* %filter.addr.i73, align 4, !dbg !3819
  %idxprom19.i107 = sext i32 %124 to i64, !dbg !3820
  %125 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3820
  %lastA20.i108 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %125, i32 0, i32 1, !dbg !3821
  %arrayidx21.i109 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA20.i108, i64 0, i64 %idxprom19.i107, !dbg !3820
  store i32 %add.i106, i32* %arrayidx21.i109, align 4, !dbg !3822
  %126 = load i32, i32* %decoded.addr.i72, align 4, !dbg !3823
  %127 = load i32, i32* %predictionA.i75, align 4, !dbg !3824
  %xor.i110 = xor i32 %126, %127, !dbg !3825
  %cmp22.i111 = icmp sgt i32 %xor.i110, 0, !dbg !3826
  br i1 %cmp22.i111, label %if.then23.i118, label %if.else.i124, !dbg !3827

if.then23.i118:                                   ; preds = %if.end.i112
  %128 = load i32, i32* %filter.addr.i73, align 4, !dbg !3828
  %idxprom24.i113 = sext i32 %128 to i64, !dbg !3829
  %129 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3829
  %coeffsA25.i114 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %129, i32 0, i32 4, !dbg !3830
  %arrayidx26.i115 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA25.i114, i64 0, i64 %idxprom24.i113, !dbg !3829
  %arrayidx27.i116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx26.i115, i64 0, i64 0, !dbg !3829
  %130 = load i32, i32* %arrayidx27.i116, align 8, !dbg !3831
  %inc.i117 = add nsw i32 %130, 1, !dbg !3831
  store i32 %inc.i117, i32* %arrayidx27.i116, align 8, !dbg !3831
  br label %if.end32.i135, !dbg !3829

if.else.i124:                                     ; preds = %if.end.i112
  %131 = load i32, i32* %filter.addr.i73, align 4, !dbg !3832
  %idxprom28.i119 = sext i32 %131 to i64, !dbg !3833
  %132 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3833
  %coeffsA29.i120 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %132, i32 0, i32 4, !dbg !3834
  %arrayidx30.i121 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA29.i120, i64 0, i64 %idxprom28.i119, !dbg !3833
  %arrayidx31.i122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx30.i121, i64 0, i64 0, !dbg !3833
  %133 = load i32, i32* %arrayidx31.i122, align 8, !dbg !3835
  %dec.i123 = add nsw i32 %133, -1, !dbg !3835
  store i32 %dec.i123, i32* %arrayidx31.i122, align 8, !dbg !3835
  br label %if.end32.i135, !dbg !3777

if.end32.i135:                                    ; preds = %if.else.i124, %if.then23.i118
  %134 = load i32, i32* %filter.addr.i73, align 4, !dbg !3836
  %idxprom33.i125 = sext i32 %134 to i64, !dbg !3837
  %135 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3837
  %lastA34.i126 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %135, i32 0, i32 1, !dbg !3838
  %arrayidx35.i127 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA34.i126, i64 0, i64 %idxprom33.i125, !dbg !3837
  %136 = load i32, i32* %arrayidx35.i127, align 4, !dbg !3837
  %137 = load i32, i32* %filter.addr.i73, align 4, !dbg !3839
  %idxprom36.i128 = sext i32 %137 to i64, !dbg !3840
  %138 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3840
  %filterA37.i129 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %138, i32 0, i32 2, !dbg !3841
  %arrayidx38.i130 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA37.i129, i64 0, i64 %idxprom36.i128, !dbg !3840
  %139 = load i32, i32* %arrayidx38.i130, align 4, !dbg !3842
  %add39.i131 = add nsw i32 %139, %136, !dbg !3842
  store i32 %add39.i131, i32* %arrayidx38.i130, align 4, !dbg !3842
  %140 = load i32, i32* %filter.addr.i73, align 4, !dbg !3843
  %idxprom40.i132 = sext i32 %140 to i64, !dbg !3844
  %141 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i71, align 8, !dbg !3844
  %filterA41.i133 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %141, i32 0, i32 2, !dbg !3845
  %arrayidx42.i134 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA41.i133, i64 0, i64 %idxprom40.i132, !dbg !3844
  %142 = load i32, i32* %arrayidx42.i134, align 4, !dbg !3844
  store i32 %142, i32* %retval.i70, align 4, !dbg !3846
  br label %filter_fast_3320.exit136, !dbg !3846

filter_fast_3320.exit136:                         ; preds = %if.then.i90, %if.end32.i135
  %143 = load i32, i32* %retval.i70, align 4, !dbg !3847
  %144 = load i32*, i32** %decoded1, align 8, !dbg !3848
  store i32 %143, i32* %144, align 4, !dbg !3849
  %145 = load i32*, i32** %decoded1, align 8, !dbg !3850
  %incdec.ptr19 = getelementptr inbounds i32, i32* %145, i32 1, !dbg !3850
  store i32* %incdec.ptr19, i32** %decoded1, align 8, !dbg !3850
  br label %if.end25, !dbg !3851

if.else20:                                        ; preds = %while.body
  %146 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !3852
  %147 = load i32, i32* %Y, align 4, !dbg !3853
  %148 = load i32, i32* %start, align 4, !dbg !3854
  %149 = load i32, i32* %shift, align 4, !dbg !3855
  store %struct.APEPredictor* %146, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3856
  store i32 %147, i32* %decoded.addr.i139, align 4, !dbg !3856
  store i32 0, i32* %filter.addr.i140, align 4, !dbg !3856
  store i32 50, i32* %delayA.addr.i141, align 4, !dbg !3856
  store i32 42, i32* %delayB.addr.i142, align 4, !dbg !3856
  store i32 %148, i32* %start.addr.i143, align 4, !dbg !3856
  store i32 %149, i32* %shift.addr.i144, align 4, !dbg !3856
  %150 = load i32, i32* %filter.addr.i140, align 4, !dbg !3857
  %idxprom.i153 = sext i32 %150 to i64, !dbg !3858
  %151 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3858
  %lastA.i154 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %151, i32 0, i32 1, !dbg !3859
  %arrayidx.i155 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i154, i64 0, i64 %idxprom.i153, !dbg !3858
  %152 = load i32, i32* %arrayidx.i155, align 4, !dbg !3858
  %153 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3860
  %idxprom1.i156 = sext i32 %153 to i64, !dbg !3861
  %154 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3861
  %buf.i157 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %154, i32 0, i32 0, !dbg !3862
  %155 = load i32*, i32** %buf.i157, align 8, !dbg !3862
  %arrayidx2.i158 = getelementptr inbounds i32, i32* %155, i64 %idxprom1.i156, !dbg !3861
  store i32 %152, i32* %arrayidx2.i158, align 4, !dbg !3863
  %156 = load i32, i32* %filter.addr.i140, align 4, !dbg !3864
  %idxprom3.i159 = sext i32 %156 to i64, !dbg !3865
  %157 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3865
  %filterB.i160 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %157, i32 0, i32 3, !dbg !3866
  %arrayidx4.i161 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB.i160, i64 0, i64 %idxprom3.i159, !dbg !3865
  %158 = load i32, i32* %arrayidx4.i161, align 4, !dbg !3865
  %159 = load i32, i32* %delayB.addr.i142, align 4, !dbg !3867
  %idxprom5.i162 = sext i32 %159 to i64, !dbg !3868
  %160 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3868
  %buf6.i163 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %160, i32 0, i32 0, !dbg !3869
  %161 = load i32*, i32** %buf6.i163, align 8, !dbg !3869
  %arrayidx7.i164 = getelementptr inbounds i32, i32* %161, i64 %idxprom5.i162, !dbg !3868
  store i32 %158, i32* %arrayidx7.i164, align 4, !dbg !3870
  %162 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3871
  %sample_pos.i165 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %162, i32 0, i32 7, !dbg !3872
  %163 = load i32, i32* %sample_pos.i165, align 8, !dbg !3872
  %164 = load i32, i32* %start.addr.i143, align 4, !dbg !3873
  %cmp.i166 = icmp ult i32 %163, %164, !dbg !3874
  br i1 %cmp.i166, label %if.then.i180, label %if.end.i325, !dbg !3875

if.then.i180:                                     ; preds = %if.else20
  %165 = load i32, i32* %decoded.addr.i139, align 4, !dbg !3876
  %166 = load i32, i32* %filter.addr.i140, align 4, !dbg !3877
  %idxprom8.i167 = sext i32 %166 to i64, !dbg !3878
  %167 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3878
  %filterA.i168 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %167, i32 0, i32 2, !dbg !3879
  %arrayidx9.i169 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i168, i64 0, i64 %idxprom8.i167, !dbg !3878
  %168 = load i32, i32* %arrayidx9.i169, align 4, !dbg !3878
  %add.i170 = add nsw i32 %165, %168, !dbg !3880
  store i32 %add.i170, i32* %predictionA.i145, align 4, !dbg !3881
  %169 = load i32, i32* %decoded.addr.i139, align 4, !dbg !3882
  %170 = load i32, i32* %filter.addr.i140, align 4, !dbg !3883
  %idxprom10.i171 = sext i32 %170 to i64, !dbg !3884
  %171 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3884
  %lastA11.i172 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %171, i32 0, i32 1, !dbg !3885
  %arrayidx12.i173 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA11.i172, i64 0, i64 %idxprom10.i171, !dbg !3884
  store i32 %169, i32* %arrayidx12.i173, align 4, !dbg !3886
  %172 = load i32, i32* %decoded.addr.i139, align 4, !dbg !3887
  %173 = load i32, i32* %filter.addr.i140, align 4, !dbg !3888
  %idxprom13.i174 = sext i32 %173 to i64, !dbg !3889
  %174 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3889
  %filterB14.i175 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %174, i32 0, i32 3, !dbg !3890
  %arrayidx15.i176 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB14.i175, i64 0, i64 %idxprom13.i174, !dbg !3889
  store i32 %172, i32* %arrayidx15.i176, align 4, !dbg !3891
  %175 = load i32, i32* %predictionA.i145, align 4, !dbg !3892
  %176 = load i32, i32* %filter.addr.i140, align 4, !dbg !3893
  %idxprom16.i177 = sext i32 %176 to i64, !dbg !3894
  %177 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3894
  %filterA17.i178 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %177, i32 0, i32 2, !dbg !3895
  %arrayidx18.i179 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA17.i178, i64 0, i64 %idxprom16.i177, !dbg !3894
  store i32 %175, i32* %arrayidx18.i179, align 4, !dbg !3896
  %178 = load i32, i32* %predictionA.i145, align 4, !dbg !3897
  store i32 %178, i32* %retval.i137, align 4, !dbg !3898
  br label %filter_3800.exit326, !dbg !3898

if.end.i325:                                      ; preds = %if.else20
  %179 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3899
  %idxprom19.i181 = sext i32 %179 to i64, !dbg !3900
  %180 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3900
  %buf20.i182 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %180, i32 0, i32 0, !dbg !3901
  %181 = load i32*, i32** %buf20.i182, align 8, !dbg !3901
  %arrayidx21.i183 = getelementptr inbounds i32, i32* %181, i64 %idxprom19.i181, !dbg !3900
  %182 = load i32, i32* %arrayidx21.i183, align 4, !dbg !3900
  store i32 %182, i32* %d2.i150, align 4, !dbg !3902
  %183 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3903
  %idxprom22.i184 = sext i32 %183 to i64, !dbg !3904
  %184 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3904
  %buf23.i185 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %184, i32 0, i32 0, !dbg !3905
  %185 = load i32*, i32** %buf23.i185, align 8, !dbg !3905
  %arrayidx24.i186 = getelementptr inbounds i32, i32* %185, i64 %idxprom22.i184, !dbg !3904
  %186 = load i32, i32* %arrayidx24.i186, align 4, !dbg !3904
  %187 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3906
  %sub.i187 = sub nsw i32 %187, 1, !dbg !3907
  %idxprom25.i188 = sext i32 %sub.i187 to i64, !dbg !3908
  %188 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3908
  %buf26.i189 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %188, i32 0, i32 0, !dbg !3909
  %189 = load i32*, i32** %buf26.i189, align 8, !dbg !3909
  %arrayidx27.i190 = getelementptr inbounds i32, i32* %189, i64 %idxprom25.i188, !dbg !3908
  %190 = load i32, i32* %arrayidx27.i190, align 4, !dbg !3908
  %sub28.i191 = sub nsw i32 %186, %190, !dbg !3910
  %shl.i192 = shl i32 %sub28.i191, 1, !dbg !3911
  store i32 %shl.i192, i32* %d1.i149, align 4, !dbg !3912
  %191 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3913
  %idxprom29.i193 = sext i32 %191 to i64, !dbg !3914
  %192 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3914
  %buf30.i194 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %192, i32 0, i32 0, !dbg !3915
  %193 = load i32*, i32** %buf30.i194, align 8, !dbg !3915
  %arrayidx31.i195 = getelementptr inbounds i32, i32* %193, i64 %idxprom29.i193, !dbg !3914
  %194 = load i32, i32* %arrayidx31.i195, align 4, !dbg !3914
  %195 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3916
  %sub32.i196 = sub nsw i32 %195, 2, !dbg !3917
  %idxprom33.i197 = sext i32 %sub32.i196 to i64, !dbg !3918
  %196 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3918
  %buf34.i198 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %196, i32 0, i32 0, !dbg !3919
  %197 = load i32*, i32** %buf34.i198, align 8, !dbg !3919
  %arrayidx35.i199 = getelementptr inbounds i32, i32* %197, i64 %idxprom33.i197, !dbg !3918
  %198 = load i32, i32* %arrayidx35.i199, align 4, !dbg !3918
  %199 = load i32, i32* %delayA.addr.i141, align 4, !dbg !3920
  %sub36.i200 = sub nsw i32 %199, 1, !dbg !3921
  %idxprom37.i201 = sext i32 %sub36.i200 to i64, !dbg !3922
  %200 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3922
  %buf38.i202 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %200, i32 0, i32 0, !dbg !3923
  %201 = load i32*, i32** %buf38.i202, align 8, !dbg !3923
  %arrayidx39.i203 = getelementptr inbounds i32, i32* %201, i64 %idxprom37.i201, !dbg !3922
  %202 = load i32, i32* %arrayidx39.i203, align 4, !dbg !3922
  %sub40.i204 = sub nsw i32 %198, %202, !dbg !3924
  %shl41.i205 = shl i32 %sub40.i204, 3, !dbg !3925
  %add42.i206 = add nsw i32 %194, %shl41.i205, !dbg !3926
  store i32 %add42.i206, i32* %d0.i148, align 4, !dbg !3927
  %203 = load i32, i32* %delayB.addr.i142, align 4, !dbg !3928
  %idxprom43.i207 = sext i32 %203 to i64, !dbg !3929
  %204 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3929
  %buf44.i208 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %204, i32 0, i32 0, !dbg !3930
  %205 = load i32*, i32** %buf44.i208, align 8, !dbg !3930
  %arrayidx45.i209 = getelementptr inbounds i32, i32* %205, i64 %idxprom43.i207, !dbg !3929
  %206 = load i32, i32* %arrayidx45.i209, align 4, !dbg !3929
  %mul.i210 = mul nsw i32 %206, 2, !dbg !3931
  %207 = load i32, i32* %delayB.addr.i142, align 4, !dbg !3932
  %sub46.i211 = sub nsw i32 %207, 1, !dbg !3933
  %idxprom47.i212 = sext i32 %sub46.i211 to i64, !dbg !3934
  %208 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3934
  %buf48.i213 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %208, i32 0, i32 0, !dbg !3935
  %209 = load i32*, i32** %buf48.i213, align 8, !dbg !3935
  %arrayidx49.i214 = getelementptr inbounds i32, i32* %209, i64 %idxprom47.i212, !dbg !3934
  %210 = load i32, i32* %arrayidx49.i214, align 4, !dbg !3934
  %sub50.i215 = sub nsw i32 %mul.i210, %210, !dbg !3936
  store i32 %sub50.i215, i32* %d3.i151, align 4, !dbg !3937
  %211 = load i32, i32* %delayB.addr.i142, align 4, !dbg !3938
  %idxprom51.i216 = sext i32 %211 to i64, !dbg !3939
  %212 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3939
  %buf52.i217 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %212, i32 0, i32 0, !dbg !3940
  %213 = load i32*, i32** %buf52.i217, align 8, !dbg !3940
  %arrayidx53.i218 = getelementptr inbounds i32, i32* %213, i64 %idxprom51.i216, !dbg !3939
  %214 = load i32, i32* %arrayidx53.i218, align 4, !dbg !3939
  store i32 %214, i32* %d4.i152, align 4, !dbg !3941
  %215 = load i32, i32* %d0.i148, align 4, !dbg !3942
  %216 = load i32, i32* %filter.addr.i140, align 4, !dbg !3943
  %idxprom54.i219 = sext i32 %216 to i64, !dbg !3944
  %217 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3944
  %coeffsA.i220 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %217, i32 0, i32 4, !dbg !3945
  %arrayidx55.i221 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i220, i64 0, i64 %idxprom54.i219, !dbg !3944
  %arrayidx56.i222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx55.i221, i64 0, i64 0, !dbg !3944
  %218 = load i32, i32* %arrayidx56.i222, align 8, !dbg !3944
  %mul57.i223 = mul nsw i32 %215, %218, !dbg !3946
  %219 = load i32, i32* %d1.i149, align 4, !dbg !3947
  %220 = load i32, i32* %filter.addr.i140, align 4, !dbg !3948
  %idxprom58.i224 = sext i32 %220 to i64, !dbg !3949
  %221 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3949
  %coeffsA59.i225 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %221, i32 0, i32 4, !dbg !3950
  %arrayidx60.i226 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA59.i225, i64 0, i64 %idxprom58.i224, !dbg !3949
  %arrayidx61.i227 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60.i226, i64 0, i64 1, !dbg !3949
  %222 = load i32, i32* %arrayidx61.i227, align 4, !dbg !3949
  %mul62.i228 = mul nsw i32 %219, %222, !dbg !3951
  %add63.i229 = add nsw i32 %mul57.i223, %mul62.i228, !dbg !3952
  %223 = load i32, i32* %d2.i150, align 4, !dbg !3953
  %224 = load i32, i32* %filter.addr.i140, align 4, !dbg !3954
  %idxprom64.i230 = sext i32 %224 to i64, !dbg !3955
  %225 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3955
  %coeffsA65.i231 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %225, i32 0, i32 4, !dbg !3956
  %arrayidx66.i232 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA65.i231, i64 0, i64 %idxprom64.i230, !dbg !3955
  %arrayidx67.i233 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx66.i232, i64 0, i64 2, !dbg !3955
  %226 = load i32, i32* %arrayidx67.i233, align 8, !dbg !3955
  %mul68.i234 = mul nsw i32 %223, %226, !dbg !3957
  %add69.i235 = add nsw i32 %add63.i229, %mul68.i234, !dbg !3958
  store i32 %add69.i235, i32* %predictionA.i145, align 4, !dbg !3959
  %227 = load i32, i32* %decoded.addr.i139, align 4, !dbg !3960
  %call.i236 = call i32 @APESIGN(i32 %227) #8, !dbg !3961
  store i32 %call.i236, i32* %sign.i147, align 4, !dbg !3962
  %228 = load i32, i32* %d0.i148, align 4, !dbg !3963
  %shr.i237 = ashr i32 %228, 30, !dbg !3964
  %and.i238 = and i32 %shr.i237, 2, !dbg !3965
  %sub70.i239 = sub nsw i32 %and.i238, 1, !dbg !3966
  %229 = load i32, i32* %sign.i147, align 4, !dbg !3967
  %mul71.i240 = mul nsw i32 %sub70.i239, %229, !dbg !3968
  %230 = load i32, i32* %filter.addr.i140, align 4, !dbg !3969
  %idxprom72.i241 = sext i32 %230 to i64, !dbg !3970
  %231 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3970
  %coeffsA73.i242 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %231, i32 0, i32 4, !dbg !3971
  %arrayidx74.i243 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA73.i242, i64 0, i64 %idxprom72.i241, !dbg !3970
  %arrayidx75.i244 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx74.i243, i64 0, i64 0, !dbg !3970
  %232 = load i32, i32* %arrayidx75.i244, align 8, !dbg !3972
  %add76.i245 = add nsw i32 %232, %mul71.i240, !dbg !3972
  store i32 %add76.i245, i32* %arrayidx75.i244, align 8, !dbg !3972
  %233 = load i32, i32* %d1.i149, align 4, !dbg !3973
  %shr77.i246 = ashr i32 %233, 28, !dbg !3974
  %and78.i247 = and i32 %shr77.i246, 8, !dbg !3975
  %sub79.i248 = sub nsw i32 %and78.i247, 4, !dbg !3976
  %234 = load i32, i32* %sign.i147, align 4, !dbg !3977
  %mul80.i249 = mul nsw i32 %sub79.i248, %234, !dbg !3978
  %235 = load i32, i32* %filter.addr.i140, align 4, !dbg !3979
  %idxprom81.i250 = sext i32 %235 to i64, !dbg !3980
  %236 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3980
  %coeffsA82.i251 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %236, i32 0, i32 4, !dbg !3981
  %arrayidx83.i252 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA82.i251, i64 0, i64 %idxprom81.i250, !dbg !3980
  %arrayidx84.i253 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83.i252, i64 0, i64 1, !dbg !3980
  %237 = load i32, i32* %arrayidx84.i253, align 4, !dbg !3982
  %add85.i254 = add nsw i32 %237, %mul80.i249, !dbg !3982
  store i32 %add85.i254, i32* %arrayidx84.i253, align 4, !dbg !3982
  %238 = load i32, i32* %d2.i150, align 4, !dbg !3983
  %shr86.i255 = ashr i32 %238, 28, !dbg !3984
  %and87.i256 = and i32 %shr86.i255, 8, !dbg !3985
  %sub88.i257 = sub nsw i32 %and87.i256, 4, !dbg !3986
  %239 = load i32, i32* %sign.i147, align 4, !dbg !3987
  %mul89.i258 = mul nsw i32 %sub88.i257, %239, !dbg !3988
  %240 = load i32, i32* %filter.addr.i140, align 4, !dbg !3989
  %idxprom90.i259 = sext i32 %240 to i64, !dbg !3990
  %241 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3990
  %coeffsA91.i260 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %241, i32 0, i32 4, !dbg !3991
  %arrayidx92.i261 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA91.i260, i64 0, i64 %idxprom90.i259, !dbg !3990
  %arrayidx93.i262 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx92.i261, i64 0, i64 2, !dbg !3990
  %242 = load i32, i32* %arrayidx93.i262, align 8, !dbg !3992
  %add94.i263 = add nsw i32 %242, %mul89.i258, !dbg !3992
  store i32 %add94.i263, i32* %arrayidx93.i262, align 8, !dbg !3992
  %243 = load i32, i32* %d3.i151, align 4, !dbg !3993
  %244 = load i32, i32* %filter.addr.i140, align 4, !dbg !3994
  %idxprom95.i264 = sext i32 %244 to i64, !dbg !3995
  %245 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !3995
  %coeffsB.i265 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %245, i32 0, i32 5, !dbg !3996
  %arrayidx96.i266 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB.i265, i64 0, i64 %idxprom95.i264, !dbg !3995
  %arrayidx97.i267 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx96.i266, i64 0, i64 0, !dbg !3995
  %246 = load i32, i32* %arrayidx97.i267, align 4, !dbg !3995
  %mul98.i268 = mul nsw i32 %243, %246, !dbg !3997
  %247 = load i32, i32* %d4.i152, align 4, !dbg !3998
  %248 = load i32, i32* %filter.addr.i140, align 4, !dbg !3999
  %idxprom99.i269 = sext i32 %248 to i64, !dbg !4000
  %249 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4000
  %coeffsB100.i270 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %249, i32 0, i32 5, !dbg !4001
  %arrayidx101.i271 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB100.i270, i64 0, i64 %idxprom99.i269, !dbg !4000
  %arrayidx102.i272 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx101.i271, i64 0, i64 1, !dbg !4000
  %250 = load i32, i32* %arrayidx102.i272, align 4, !dbg !4000
  %mul103.i273 = mul nsw i32 %247, %250, !dbg !4002
  %sub104.i274 = sub nsw i32 %mul98.i268, %mul103.i273, !dbg !4003
  store i32 %sub104.i274, i32* %predictionB.i146, align 4, !dbg !4004
  %251 = load i32, i32* %decoded.addr.i139, align 4, !dbg !4005
  %252 = load i32, i32* %predictionA.i145, align 4, !dbg !4006
  %shr105.i275 = ashr i32 %252, 11, !dbg !4007
  %add106.i276 = add nsw i32 %251, %shr105.i275, !dbg !4008
  %253 = load i32, i32* %filter.addr.i140, align 4, !dbg !4009
  %idxprom107.i277 = sext i32 %253 to i64, !dbg !4010
  %254 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4010
  %lastA108.i278 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %254, i32 0, i32 1, !dbg !4011
  %arrayidx109.i279 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA108.i278, i64 0, i64 %idxprom107.i277, !dbg !4010
  store i32 %add106.i276, i32* %arrayidx109.i279, align 4, !dbg !4012
  %255 = load i32, i32* %filter.addr.i140, align 4, !dbg !4013
  %idxprom110.i280 = sext i32 %255 to i64, !dbg !4014
  %256 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4014
  %lastA111.i281 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %256, i32 0, i32 1, !dbg !4015
  %arrayidx112.i282 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA111.i281, i64 0, i64 %idxprom110.i280, !dbg !4014
  %257 = load i32, i32* %arrayidx112.i282, align 4, !dbg !4014
  %call113.i283 = call i32 @APESIGN(i32 %257) #8, !dbg !4016
  store i32 %call113.i283, i32* %sign.i147, align 4, !dbg !4017
  %258 = load i32, i32* %d3.i151, align 4, !dbg !4018
  %shr114.i284 = ashr i32 %258, 29, !dbg !4019
  %and115.i285 = and i32 %shr114.i284, 4, !dbg !4020
  %sub116.i286 = sub nsw i32 %and115.i285, 2, !dbg !4021
  %259 = load i32, i32* %sign.i147, align 4, !dbg !4022
  %mul117.i287 = mul nsw i32 %sub116.i286, %259, !dbg !4023
  %260 = load i32, i32* %filter.addr.i140, align 4, !dbg !4024
  %idxprom118.i288 = sext i32 %260 to i64, !dbg !4025
  %261 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4025
  %coeffsB119.i289 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %261, i32 0, i32 5, !dbg !4026
  %arrayidx120.i290 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB119.i289, i64 0, i64 %idxprom118.i288, !dbg !4025
  %arrayidx121.i291 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx120.i290, i64 0, i64 0, !dbg !4025
  %262 = load i32, i32* %arrayidx121.i291, align 4, !dbg !4027
  %add122.i292 = add nsw i32 %262, %mul117.i287, !dbg !4027
  store i32 %add122.i292, i32* %arrayidx121.i291, align 4, !dbg !4027
  %263 = load i32, i32* %d4.i152, align 4, !dbg !4028
  %shr123.i293 = ashr i32 %263, 30, !dbg !4029
  %and124.i294 = and i32 %shr123.i293, 2, !dbg !4030
  %sub125.i295 = sub nsw i32 %and124.i294, 1, !dbg !4031
  %264 = load i32, i32* %sign.i147, align 4, !dbg !4032
  %mul126.i296 = mul nsw i32 %sub125.i295, %264, !dbg !4033
  %265 = load i32, i32* %filter.addr.i140, align 4, !dbg !4034
  %idxprom127.i297 = sext i32 %265 to i64, !dbg !4035
  %266 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4035
  %coeffsB128.i298 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %266, i32 0, i32 5, !dbg !4036
  %arrayidx129.i299 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB128.i298, i64 0, i64 %idxprom127.i297, !dbg !4035
  %arrayidx130.i300 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx129.i299, i64 0, i64 1, !dbg !4035
  %267 = load i32, i32* %arrayidx130.i300, align 4, !dbg !4037
  %sub131.i301 = sub nsw i32 %267, %mul126.i296, !dbg !4037
  store i32 %sub131.i301, i32* %arrayidx130.i300, align 4, !dbg !4037
  %268 = load i32, i32* %filter.addr.i140, align 4, !dbg !4038
  %idxprom132.i302 = sext i32 %268 to i64, !dbg !4039
  %269 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4039
  %lastA133.i303 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %269, i32 0, i32 1, !dbg !4040
  %arrayidx134.i304 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA133.i303, i64 0, i64 %idxprom132.i302, !dbg !4039
  %270 = load i32, i32* %arrayidx134.i304, align 4, !dbg !4039
  %271 = load i32, i32* %predictionB.i146, align 4, !dbg !4041
  %272 = load i32, i32* %shift.addr.i144, align 4, !dbg !4042
  %shr135.i305 = ashr i32 %271, %272, !dbg !4043
  %add136.i306 = add nsw i32 %270, %shr135.i305, !dbg !4044
  %273 = load i32, i32* %filter.addr.i140, align 4, !dbg !4045
  %idxprom137.i307 = sext i32 %273 to i64, !dbg !4046
  %274 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4046
  %filterB138.i308 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %274, i32 0, i32 3, !dbg !4047
  %arrayidx139.i309 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB138.i308, i64 0, i64 %idxprom137.i307, !dbg !4046
  store i32 %add136.i306, i32* %arrayidx139.i309, align 4, !dbg !4048
  %275 = load i32, i32* %filter.addr.i140, align 4, !dbg !4049
  %idxprom140.i310 = sext i32 %275 to i64, !dbg !4050
  %276 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4050
  %filterB141.i311 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %276, i32 0, i32 3, !dbg !4051
  %arrayidx142.i312 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB141.i311, i64 0, i64 %idxprom140.i310, !dbg !4050
  %277 = load i32, i32* %arrayidx142.i312, align 4, !dbg !4050
  %278 = load i32, i32* %filter.addr.i140, align 4, !dbg !4052
  %idxprom143.i313 = sext i32 %278 to i64, !dbg !4053
  %279 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4053
  %filterA144.i314 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %279, i32 0, i32 2, !dbg !4054
  %arrayidx145.i315 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA144.i314, i64 0, i64 %idxprom143.i313, !dbg !4053
  %280 = load i32, i32* %arrayidx145.i315, align 4, !dbg !4053
  %mul146.i316 = mul nsw i32 %280, 31, !dbg !4055
  %shr147.i317 = ashr i32 %mul146.i316, 5, !dbg !4056
  %add148.i318 = add nsw i32 %277, %shr147.i317, !dbg !4057
  %281 = load i32, i32* %filter.addr.i140, align 4, !dbg !4058
  %idxprom149.i319 = sext i32 %281 to i64, !dbg !4059
  %282 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4059
  %filterA150.i320 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %282, i32 0, i32 2, !dbg !4060
  %arrayidx151.i321 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA150.i320, i64 0, i64 %idxprom149.i319, !dbg !4059
  store i32 %add148.i318, i32* %arrayidx151.i321, align 4, !dbg !4061
  %283 = load i32, i32* %filter.addr.i140, align 4, !dbg !4062
  %idxprom152.i322 = sext i32 %283 to i64, !dbg !4063
  %284 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i138, align 8, !dbg !4063
  %filterA153.i323 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %284, i32 0, i32 2, !dbg !4064
  %arrayidx154.i324 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA153.i323, i64 0, i64 %idxprom152.i322, !dbg !4063
  %285 = load i32, i32* %arrayidx154.i324, align 4, !dbg !4063
  store i32 %285, i32* %retval.i137, align 4, !dbg !4065
  br label %filter_3800.exit326, !dbg !4065

filter_3800.exit326:                              ; preds = %if.then.i180, %if.end.i325
  %286 = load i32, i32* %retval.i137, align 4, !dbg !4066
  %287 = load i32*, i32** %decoded0, align 8, !dbg !4067
  store i32 %286, i32* %287, align 4, !dbg !4068
  %288 = load i32*, i32** %decoded0, align 8, !dbg !4069
  %incdec.ptr22 = getelementptr inbounds i32, i32* %288, i32 1, !dbg !4069
  store i32* %incdec.ptr22, i32** %decoded0, align 8, !dbg !4069
  %289 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4070
  %290 = load i32, i32* %X, align 4, !dbg !4071
  %291 = load i32, i32* %start, align 4, !dbg !4072
  %292 = load i32, i32* %shift, align 4, !dbg !4073
  store %struct.APEPredictor* %289, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4074
  store i32 %290, i32* %decoded.addr.i41, align 4, !dbg !4074
  store i32 1, i32* %filter.addr.i42, align 4, !dbg !4074
  store i32 34, i32* %delayA.addr.i43, align 4, !dbg !4074
  store i32 26, i32* %delayB.addr.i, align 4, !dbg !4074
  store i32 %291, i32* %start.addr.i, align 4, !dbg !4074
  store i32 %292, i32* %shift.addr.i, align 4, !dbg !4074
  %293 = load i32, i32* %filter.addr.i42, align 4, !dbg !4075
  %idxprom.i45 = sext i32 %293 to i64, !dbg !4076
  %294 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4076
  %lastA.i46 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %294, i32 0, i32 1, !dbg !4077
  %arrayidx.i47 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i46, i64 0, i64 %idxprom.i45, !dbg !4076
  %295 = load i32, i32* %arrayidx.i47, align 4, !dbg !4076
  %296 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4078
  %idxprom1.i48 = sext i32 %296 to i64, !dbg !4079
  %297 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4079
  %buf.i49 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %297, i32 0, i32 0, !dbg !4080
  %298 = load i32*, i32** %buf.i49, align 8, !dbg !4080
  %arrayidx2.i50 = getelementptr inbounds i32, i32* %298, i64 %idxprom1.i48, !dbg !4079
  store i32 %295, i32* %arrayidx2.i50, align 4, !dbg !4081
  %299 = load i32, i32* %filter.addr.i42, align 4, !dbg !4082
  %idxprom3.i51 = sext i32 %299 to i64, !dbg !4083
  %300 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4083
  %filterB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %300, i32 0, i32 3, !dbg !4084
  %arrayidx4.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB.i, i64 0, i64 %idxprom3.i51, !dbg !4083
  %301 = load i32, i32* %arrayidx4.i, align 4, !dbg !4083
  %302 = load i32, i32* %delayB.addr.i, align 4, !dbg !4085
  %idxprom5.i = sext i32 %302 to i64, !dbg !4086
  %303 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4086
  %buf6.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %303, i32 0, i32 0, !dbg !4087
  %304 = load i32*, i32** %buf6.i, align 8, !dbg !4087
  %arrayidx7.i52 = getelementptr inbounds i32, i32* %304, i64 %idxprom5.i, !dbg !4086
  store i32 %301, i32* %arrayidx7.i52, align 4, !dbg !4088
  %305 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4089
  %sample_pos.i53 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %305, i32 0, i32 7, !dbg !4090
  %306 = load i32, i32* %sample_pos.i53, align 8, !dbg !4090
  %307 = load i32, i32* %start.addr.i, align 4, !dbg !4091
  %cmp.i54 = icmp ult i32 %306, %307, !dbg !4092
  br i1 %cmp.i54, label %if.then.i58, label %if.end.i69, !dbg !4093

if.then.i58:                                      ; preds = %filter_3800.exit326
  %308 = load i32, i32* %decoded.addr.i41, align 4, !dbg !4094
  %309 = load i32, i32* %filter.addr.i42, align 4, !dbg !4095
  %idxprom8.i55 = sext i32 %309 to i64, !dbg !4096
  %310 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4096
  %filterA.i56 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %310, i32 0, i32 2, !dbg !4097
  %arrayidx9.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i56, i64 0, i64 %idxprom8.i55, !dbg !4096
  %311 = load i32, i32* %arrayidx9.i, align 4, !dbg !4096
  %add.i57 = add nsw i32 %308, %311, !dbg !4098
  store i32 %add.i57, i32* %predictionA.i44, align 4, !dbg !4099
  %312 = load i32, i32* %decoded.addr.i41, align 4, !dbg !4100
  %313 = load i32, i32* %filter.addr.i42, align 4, !dbg !4101
  %idxprom10.i = sext i32 %313 to i64, !dbg !4102
  %314 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4102
  %lastA11.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %314, i32 0, i32 1, !dbg !4103
  %arrayidx12.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA11.i, i64 0, i64 %idxprom10.i, !dbg !4102
  store i32 %312, i32* %arrayidx12.i, align 4, !dbg !4104
  %315 = load i32, i32* %decoded.addr.i41, align 4, !dbg !4105
  %316 = load i32, i32* %filter.addr.i42, align 4, !dbg !4106
  %idxprom13.i = sext i32 %316 to i64, !dbg !4107
  %317 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4107
  %filterB14.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %317, i32 0, i32 3, !dbg !4108
  %arrayidx15.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB14.i, i64 0, i64 %idxprom13.i, !dbg !4107
  store i32 %315, i32* %arrayidx15.i, align 4, !dbg !4109
  %318 = load i32, i32* %predictionA.i44, align 4, !dbg !4110
  %319 = load i32, i32* %filter.addr.i42, align 4, !dbg !4111
  %idxprom16.i = sext i32 %319 to i64, !dbg !4112
  %320 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4112
  %filterA17.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %320, i32 0, i32 2, !dbg !4113
  %arrayidx18.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA17.i, i64 0, i64 %idxprom16.i, !dbg !4112
  store i32 %318, i32* %arrayidx18.i, align 4, !dbg !4114
  %321 = load i32, i32* %predictionA.i44, align 4, !dbg !4115
  store i32 %321, i32* %retval.i39, align 4, !dbg !4116
  br label %filter_3800.exit, !dbg !4116

if.end.i69:                                       ; preds = %filter_3800.exit326
  %322 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4117
  %idxprom19.i59 = sext i32 %322 to i64, !dbg !4118
  %323 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4118
  %buf20.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %323, i32 0, i32 0, !dbg !4119
  %324 = load i32*, i32** %buf20.i, align 8, !dbg !4119
  %arrayidx21.i60 = getelementptr inbounds i32, i32* %324, i64 %idxprom19.i59, !dbg !4118
  %325 = load i32, i32* %arrayidx21.i60, align 4, !dbg !4118
  store i32 %325, i32* %d2.i, align 4, !dbg !4120
  %326 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4121
  %idxprom22.i = sext i32 %326 to i64, !dbg !4122
  %327 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4122
  %buf23.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %327, i32 0, i32 0, !dbg !4123
  %328 = load i32*, i32** %buf23.i, align 8, !dbg !4123
  %arrayidx24.i = getelementptr inbounds i32, i32* %328, i64 %idxprom22.i, !dbg !4122
  %329 = load i32, i32* %arrayidx24.i, align 4, !dbg !4122
  %330 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4124
  %sub.i61 = sub nsw i32 %330, 1, !dbg !4125
  %idxprom25.i = sext i32 %sub.i61 to i64, !dbg !4126
  %331 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4126
  %buf26.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %331, i32 0, i32 0, !dbg !4127
  %332 = load i32*, i32** %buf26.i, align 8, !dbg !4127
  %arrayidx27.i62 = getelementptr inbounds i32, i32* %332, i64 %idxprom25.i, !dbg !4126
  %333 = load i32, i32* %arrayidx27.i62, align 4, !dbg !4126
  %sub28.i = sub nsw i32 %329, %333, !dbg !4128
  %shl.i = shl i32 %sub28.i, 1, !dbg !4129
  store i32 %shl.i, i32* %d1.i, align 4, !dbg !4130
  %334 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4131
  %idxprom29.i = sext i32 %334 to i64, !dbg !4132
  %335 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4132
  %buf30.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %335, i32 0, i32 0, !dbg !4133
  %336 = load i32*, i32** %buf30.i, align 8, !dbg !4133
  %arrayidx31.i63 = getelementptr inbounds i32, i32* %336, i64 %idxprom29.i, !dbg !4132
  %337 = load i32, i32* %arrayidx31.i63, align 4, !dbg !4132
  %338 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4134
  %sub32.i = sub nsw i32 %338, 2, !dbg !4135
  %idxprom33.i64 = sext i32 %sub32.i to i64, !dbg !4136
  %339 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4136
  %buf34.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %339, i32 0, i32 0, !dbg !4137
  %340 = load i32*, i32** %buf34.i, align 8, !dbg !4137
  %arrayidx35.i65 = getelementptr inbounds i32, i32* %340, i64 %idxprom33.i64, !dbg !4136
  %341 = load i32, i32* %arrayidx35.i65, align 4, !dbg !4136
  %342 = load i32, i32* %delayA.addr.i43, align 4, !dbg !4138
  %sub36.i = sub nsw i32 %342, 1, !dbg !4139
  %idxprom37.i = sext i32 %sub36.i to i64, !dbg !4140
  %343 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4140
  %buf38.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %343, i32 0, i32 0, !dbg !4141
  %344 = load i32*, i32** %buf38.i, align 8, !dbg !4141
  %arrayidx39.i = getelementptr inbounds i32, i32* %344, i64 %idxprom37.i, !dbg !4140
  %345 = load i32, i32* %arrayidx39.i, align 4, !dbg !4140
  %sub40.i = sub nsw i32 %341, %345, !dbg !4142
  %shl41.i = shl i32 %sub40.i, 3, !dbg !4143
  %add42.i = add nsw i32 %337, %shl41.i, !dbg !4144
  store i32 %add42.i, i32* %d0.i, align 4, !dbg !4145
  %346 = load i32, i32* %delayB.addr.i, align 4, !dbg !4146
  %idxprom43.i = sext i32 %346 to i64, !dbg !4147
  %347 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4147
  %buf44.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %347, i32 0, i32 0, !dbg !4148
  %348 = load i32*, i32** %buf44.i, align 8, !dbg !4148
  %arrayidx45.i = getelementptr inbounds i32, i32* %348, i64 %idxprom43.i, !dbg !4147
  %349 = load i32, i32* %arrayidx45.i, align 4, !dbg !4147
  %mul.i66 = mul nsw i32 %349, 2, !dbg !4149
  %350 = load i32, i32* %delayB.addr.i, align 4, !dbg !4150
  %sub46.i = sub nsw i32 %350, 1, !dbg !4151
  %idxprom47.i = sext i32 %sub46.i to i64, !dbg !4152
  %351 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4152
  %buf48.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %351, i32 0, i32 0, !dbg !4153
  %352 = load i32*, i32** %buf48.i, align 8, !dbg !4153
  %arrayidx49.i = getelementptr inbounds i32, i32* %352, i64 %idxprom47.i, !dbg !4152
  %353 = load i32, i32* %arrayidx49.i, align 4, !dbg !4152
  %sub50.i = sub nsw i32 %mul.i66, %353, !dbg !4154
  store i32 %sub50.i, i32* %d3.i, align 4, !dbg !4155
  %354 = load i32, i32* %delayB.addr.i, align 4, !dbg !4156
  %idxprom51.i = sext i32 %354 to i64, !dbg !4157
  %355 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4157
  %buf52.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %355, i32 0, i32 0, !dbg !4158
  %356 = load i32*, i32** %buf52.i, align 8, !dbg !4158
  %arrayidx53.i = getelementptr inbounds i32, i32* %356, i64 %idxprom51.i, !dbg !4157
  %357 = load i32, i32* %arrayidx53.i, align 4, !dbg !4157
  store i32 %357, i32* %d4.i, align 4, !dbg !4159
  %358 = load i32, i32* %d0.i, align 4, !dbg !4160
  %359 = load i32, i32* %filter.addr.i42, align 4, !dbg !4161
  %idxprom54.i = sext i32 %359 to i64, !dbg !4162
  %360 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4162
  %coeffsA.i67 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %360, i32 0, i32 4, !dbg !4163
  %arrayidx55.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i67, i64 0, i64 %idxprom54.i, !dbg !4162
  %arrayidx56.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx55.i, i64 0, i64 0, !dbg !4162
  %361 = load i32, i32* %arrayidx56.i, align 8, !dbg !4162
  %mul57.i = mul nsw i32 %358, %361, !dbg !4164
  %362 = load i32, i32* %d1.i, align 4, !dbg !4165
  %363 = load i32, i32* %filter.addr.i42, align 4, !dbg !4166
  %idxprom58.i = sext i32 %363 to i64, !dbg !4167
  %364 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4167
  %coeffsA59.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %364, i32 0, i32 4, !dbg !4168
  %arrayidx60.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA59.i, i64 0, i64 %idxprom58.i, !dbg !4167
  %arrayidx61.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60.i, i64 0, i64 1, !dbg !4167
  %365 = load i32, i32* %arrayidx61.i, align 4, !dbg !4167
  %mul62.i = mul nsw i32 %362, %365, !dbg !4169
  %add63.i = add nsw i32 %mul57.i, %mul62.i, !dbg !4170
  %366 = load i32, i32* %d2.i, align 4, !dbg !4171
  %367 = load i32, i32* %filter.addr.i42, align 4, !dbg !4172
  %idxprom64.i = sext i32 %367 to i64, !dbg !4173
  %368 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4173
  %coeffsA65.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %368, i32 0, i32 4, !dbg !4174
  %arrayidx66.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA65.i, i64 0, i64 %idxprom64.i, !dbg !4173
  %arrayidx67.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx66.i, i64 0, i64 2, !dbg !4173
  %369 = load i32, i32* %arrayidx67.i, align 8, !dbg !4173
  %mul68.i = mul nsw i32 %366, %369, !dbg !4175
  %add69.i = add nsw i32 %add63.i, %mul68.i, !dbg !4176
  store i32 %add69.i, i32* %predictionA.i44, align 4, !dbg !4177
  %370 = load i32, i32* %decoded.addr.i41, align 4, !dbg !4178
  %call.i = call i32 @APESIGN(i32 %370) #8, !dbg !4179
  store i32 %call.i, i32* %sign.i, align 4, !dbg !4180
  %371 = load i32, i32* %d0.i, align 4, !dbg !4181
  %shr.i68 = ashr i32 %371, 30, !dbg !4182
  %and.i = and i32 %shr.i68, 2, !dbg !4183
  %sub70.i = sub nsw i32 %and.i, 1, !dbg !4184
  %372 = load i32, i32* %sign.i, align 4, !dbg !4185
  %mul71.i = mul nsw i32 %sub70.i, %372, !dbg !4186
  %373 = load i32, i32* %filter.addr.i42, align 4, !dbg !4187
  %idxprom72.i = sext i32 %373 to i64, !dbg !4188
  %374 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4188
  %coeffsA73.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %374, i32 0, i32 4, !dbg !4189
  %arrayidx74.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA73.i, i64 0, i64 %idxprom72.i, !dbg !4188
  %arrayidx75.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx74.i, i64 0, i64 0, !dbg !4188
  %375 = load i32, i32* %arrayidx75.i, align 8, !dbg !4190
  %add76.i = add nsw i32 %375, %mul71.i, !dbg !4190
  store i32 %add76.i, i32* %arrayidx75.i, align 8, !dbg !4190
  %376 = load i32, i32* %d1.i, align 4, !dbg !4191
  %shr77.i = ashr i32 %376, 28, !dbg !4192
  %and78.i = and i32 %shr77.i, 8, !dbg !4193
  %sub79.i = sub nsw i32 %and78.i, 4, !dbg !4194
  %377 = load i32, i32* %sign.i, align 4, !dbg !4195
  %mul80.i = mul nsw i32 %sub79.i, %377, !dbg !4196
  %378 = load i32, i32* %filter.addr.i42, align 4, !dbg !4197
  %idxprom81.i = sext i32 %378 to i64, !dbg !4198
  %379 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4198
  %coeffsA82.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %379, i32 0, i32 4, !dbg !4199
  %arrayidx83.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA82.i, i64 0, i64 %idxprom81.i, !dbg !4198
  %arrayidx84.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx83.i, i64 0, i64 1, !dbg !4198
  %380 = load i32, i32* %arrayidx84.i, align 4, !dbg !4200
  %add85.i = add nsw i32 %380, %mul80.i, !dbg !4200
  store i32 %add85.i, i32* %arrayidx84.i, align 4, !dbg !4200
  %381 = load i32, i32* %d2.i, align 4, !dbg !4201
  %shr86.i = ashr i32 %381, 28, !dbg !4202
  %and87.i = and i32 %shr86.i, 8, !dbg !4203
  %sub88.i = sub nsw i32 %and87.i, 4, !dbg !4204
  %382 = load i32, i32* %sign.i, align 4, !dbg !4205
  %mul89.i = mul nsw i32 %sub88.i, %382, !dbg !4206
  %383 = load i32, i32* %filter.addr.i42, align 4, !dbg !4207
  %idxprom90.i = sext i32 %383 to i64, !dbg !4208
  %384 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4208
  %coeffsA91.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %384, i32 0, i32 4, !dbg !4209
  %arrayidx92.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA91.i, i64 0, i64 %idxprom90.i, !dbg !4208
  %arrayidx93.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx92.i, i64 0, i64 2, !dbg !4208
  %385 = load i32, i32* %arrayidx93.i, align 8, !dbg !4210
  %add94.i = add nsw i32 %385, %mul89.i, !dbg !4210
  store i32 %add94.i, i32* %arrayidx93.i, align 8, !dbg !4210
  %386 = load i32, i32* %d3.i, align 4, !dbg !4211
  %387 = load i32, i32* %filter.addr.i42, align 4, !dbg !4212
  %idxprom95.i = sext i32 %387 to i64, !dbg !4213
  %388 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4213
  %coeffsB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %388, i32 0, i32 5, !dbg !4214
  %arrayidx96.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB.i, i64 0, i64 %idxprom95.i, !dbg !4213
  %arrayidx97.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx96.i, i64 0, i64 0, !dbg !4213
  %389 = load i32, i32* %arrayidx97.i, align 4, !dbg !4213
  %mul98.i = mul nsw i32 %386, %389, !dbg !4215
  %390 = load i32, i32* %d4.i, align 4, !dbg !4216
  %391 = load i32, i32* %filter.addr.i42, align 4, !dbg !4217
  %idxprom99.i = sext i32 %391 to i64, !dbg !4218
  %392 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4218
  %coeffsB100.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %392, i32 0, i32 5, !dbg !4219
  %arrayidx101.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB100.i, i64 0, i64 %idxprom99.i, !dbg !4218
  %arrayidx102.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx101.i, i64 0, i64 1, !dbg !4218
  %393 = load i32, i32* %arrayidx102.i, align 4, !dbg !4218
  %mul103.i = mul nsw i32 %390, %393, !dbg !4220
  %sub104.i = sub nsw i32 %mul98.i, %mul103.i, !dbg !4221
  store i32 %sub104.i, i32* %predictionB.i, align 4, !dbg !4222
  %394 = load i32, i32* %decoded.addr.i41, align 4, !dbg !4223
  %395 = load i32, i32* %predictionA.i44, align 4, !dbg !4224
  %shr105.i = ashr i32 %395, 11, !dbg !4225
  %add106.i = add nsw i32 %394, %shr105.i, !dbg !4226
  %396 = load i32, i32* %filter.addr.i42, align 4, !dbg !4227
  %idxprom107.i = sext i32 %396 to i64, !dbg !4228
  %397 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4228
  %lastA108.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %397, i32 0, i32 1, !dbg !4229
  %arrayidx109.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA108.i, i64 0, i64 %idxprom107.i, !dbg !4228
  store i32 %add106.i, i32* %arrayidx109.i, align 4, !dbg !4230
  %398 = load i32, i32* %filter.addr.i42, align 4, !dbg !4231
  %idxprom110.i = sext i32 %398 to i64, !dbg !4232
  %399 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4232
  %lastA111.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %399, i32 0, i32 1, !dbg !4233
  %arrayidx112.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA111.i, i64 0, i64 %idxprom110.i, !dbg !4232
  %400 = load i32, i32* %arrayidx112.i, align 4, !dbg !4232
  %call113.i = call i32 @APESIGN(i32 %400) #8, !dbg !4234
  store i32 %call113.i, i32* %sign.i, align 4, !dbg !4235
  %401 = load i32, i32* %d3.i, align 4, !dbg !4236
  %shr114.i = ashr i32 %401, 29, !dbg !4237
  %and115.i = and i32 %shr114.i, 4, !dbg !4238
  %sub116.i = sub nsw i32 %and115.i, 2, !dbg !4239
  %402 = load i32, i32* %sign.i, align 4, !dbg !4240
  %mul117.i = mul nsw i32 %sub116.i, %402, !dbg !4241
  %403 = load i32, i32* %filter.addr.i42, align 4, !dbg !4242
  %idxprom118.i = sext i32 %403 to i64, !dbg !4243
  %404 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4243
  %coeffsB119.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %404, i32 0, i32 5, !dbg !4244
  %arrayidx120.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB119.i, i64 0, i64 %idxprom118.i, !dbg !4243
  %arrayidx121.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx120.i, i64 0, i64 0, !dbg !4243
  %405 = load i32, i32* %arrayidx121.i, align 4, !dbg !4245
  %add122.i = add nsw i32 %405, %mul117.i, !dbg !4245
  store i32 %add122.i, i32* %arrayidx121.i, align 4, !dbg !4245
  %406 = load i32, i32* %d4.i, align 4, !dbg !4246
  %shr123.i = ashr i32 %406, 30, !dbg !4247
  %and124.i = and i32 %shr123.i, 2, !dbg !4248
  %sub125.i = sub nsw i32 %and124.i, 1, !dbg !4249
  %407 = load i32, i32* %sign.i, align 4, !dbg !4250
  %mul126.i = mul nsw i32 %sub125.i, %407, !dbg !4251
  %408 = load i32, i32* %filter.addr.i42, align 4, !dbg !4252
  %idxprom127.i = sext i32 %408 to i64, !dbg !4253
  %409 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4253
  %coeffsB128.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %409, i32 0, i32 5, !dbg !4254
  %arrayidx129.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB128.i, i64 0, i64 %idxprom127.i, !dbg !4253
  %arrayidx130.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx129.i, i64 0, i64 1, !dbg !4253
  %410 = load i32, i32* %arrayidx130.i, align 4, !dbg !4255
  %sub131.i = sub nsw i32 %410, %mul126.i, !dbg !4255
  store i32 %sub131.i, i32* %arrayidx130.i, align 4, !dbg !4255
  %411 = load i32, i32* %filter.addr.i42, align 4, !dbg !4256
  %idxprom132.i = sext i32 %411 to i64, !dbg !4257
  %412 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4257
  %lastA133.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %412, i32 0, i32 1, !dbg !4258
  %arrayidx134.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA133.i, i64 0, i64 %idxprom132.i, !dbg !4257
  %413 = load i32, i32* %arrayidx134.i, align 4, !dbg !4257
  %414 = load i32, i32* %predictionB.i, align 4, !dbg !4259
  %415 = load i32, i32* %shift.addr.i, align 4, !dbg !4260
  %shr135.i = ashr i32 %414, %415, !dbg !4261
  %add136.i = add nsw i32 %413, %shr135.i, !dbg !4262
  %416 = load i32, i32* %filter.addr.i42, align 4, !dbg !4263
  %idxprom137.i = sext i32 %416 to i64, !dbg !4264
  %417 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4264
  %filterB138.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %417, i32 0, i32 3, !dbg !4265
  %arrayidx139.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB138.i, i64 0, i64 %idxprom137.i, !dbg !4264
  store i32 %add136.i, i32* %arrayidx139.i, align 4, !dbg !4266
  %418 = load i32, i32* %filter.addr.i42, align 4, !dbg !4267
  %idxprom140.i = sext i32 %418 to i64, !dbg !4268
  %419 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4268
  %filterB141.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %419, i32 0, i32 3, !dbg !4269
  %arrayidx142.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB141.i, i64 0, i64 %idxprom140.i, !dbg !4268
  %420 = load i32, i32* %arrayidx142.i, align 4, !dbg !4268
  %421 = load i32, i32* %filter.addr.i42, align 4, !dbg !4270
  %idxprom143.i = sext i32 %421 to i64, !dbg !4271
  %422 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4271
  %filterA144.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %422, i32 0, i32 2, !dbg !4272
  %arrayidx145.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA144.i, i64 0, i64 %idxprom143.i, !dbg !4271
  %423 = load i32, i32* %arrayidx145.i, align 4, !dbg !4271
  %mul146.i = mul nsw i32 %423, 31, !dbg !4273
  %shr147.i = ashr i32 %mul146.i, 5, !dbg !4274
  %add148.i = add nsw i32 %420, %shr147.i, !dbg !4275
  %424 = load i32, i32* %filter.addr.i42, align 4, !dbg !4276
  %idxprom149.i = sext i32 %424 to i64, !dbg !4277
  %425 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4277
  %filterA150.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %425, i32 0, i32 2, !dbg !4278
  %arrayidx151.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA150.i, i64 0, i64 %idxprom149.i, !dbg !4277
  store i32 %add148.i, i32* %arrayidx151.i, align 4, !dbg !4279
  %426 = load i32, i32* %filter.addr.i42, align 4, !dbg !4280
  %idxprom152.i = sext i32 %426 to i64, !dbg !4281
  %427 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i40, align 8, !dbg !4281
  %filterA153.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %427, i32 0, i32 2, !dbg !4282
  %arrayidx154.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA153.i, i64 0, i64 %idxprom152.i, !dbg !4281
  %428 = load i32, i32* %arrayidx154.i, align 4, !dbg !4281
  store i32 %428, i32* %retval.i39, align 4, !dbg !4283
  br label %filter_3800.exit, !dbg !4283

filter_3800.exit:                                 ; preds = %if.then.i58, %if.end.i69
  %429 = load i32, i32* %retval.i39, align 4, !dbg !4284
  %430 = load i32*, i32** %decoded1, align 8, !dbg !4285
  store i32 %429, i32* %430, align 4, !dbg !4286
  %431 = load i32*, i32** %decoded1, align 8, !dbg !4287
  %incdec.ptr24 = getelementptr inbounds i32, i32* %431, i32 1, !dbg !4287
  store i32* %incdec.ptr24, i32** %decoded1, align 8, !dbg !4287
  br label %if.end25

if.end25:                                         ; preds = %filter_3800.exit, %filter_fast_3320.exit136
  %432 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4288
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %432, i32 0, i32 0, !dbg !4289
  %433 = load i32*, i32** %buf, align 8, !dbg !4290
  %incdec.ptr26 = getelementptr inbounds i32, i32* %433, i32 1, !dbg !4290
  store i32* %incdec.ptr26, i32** %buf, align 8, !dbg !4290
  %434 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4291
  %sample_pos = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %434, i32 0, i32 7, !dbg !4292
  %435 = load i32, i32* %sample_pos, align 8, !dbg !4293
  %inc27 = add i32 %435, 1, !dbg !4293
  store i32 %inc27, i32* %sample_pos, align 8, !dbg !4293
  %436 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4294
  %buf28 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %436, i32 0, i32 0, !dbg !4296
  %437 = load i32*, i32** %buf28, align 8, !dbg !4296
  %438 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4297
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %438, i32 0, i32 6, !dbg !4298
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !4297
  %add.ptr29 = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !4299
  %cmp30 = icmp eq i32* %437, %add.ptr29, !dbg !4300
  br i1 %cmp30, label %if.then31, label %if.end38, !dbg !4301

if.then31:                                        ; preds = %if.end25
  %439 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4302
  %historybuffer32 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %439, i32 0, i32 6, !dbg !4304
  %arraydecay33 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer32, i32 0, i32 0, !dbg !4305
  %440 = bitcast i32* %arraydecay33 to i8*, !dbg !4305
  %441 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4306
  %buf34 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %441, i32 0, i32 0, !dbg !4307
  %442 = load i32*, i32** %buf34, align 8, !dbg !4307
  %443 = bitcast i32* %442 to i8*, !dbg !4305
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %443, i64 200, i32 4, i1 false), !dbg !4305
  %444 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4308
  %historybuffer35 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %444, i32 0, i32 6, !dbg !4309
  %arraydecay36 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer35, i32 0, i32 0, !dbg !4308
  %445 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4310
  %buf37 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %445, i32 0, i32 0, !dbg !4311
  store i32* %arraydecay36, i32** %buf37, align 8, !dbg !4312
  br label %if.end38, !dbg !4313

if.end38:                                         ; preds = %if.then31, %if.end25
  br label %while.cond, !dbg !4314, !llvm.loop !4316

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4317
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_mono_3930(%struct.APEContext* %ctx, i32 %count) #1 !dbg !4318 {
entry:
  %p.addr.i = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i, metadata !4319, metadata !1747), !dbg !4321
  %decoded.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i, metadata !4324, metadata !1747), !dbg !4325
  %filter.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i, metadata !4326, metadata !1747), !dbg !4327
  %delayA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i, metadata !4328, metadata !1747), !dbg !4329
  %predictionA.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i, metadata !4330, metadata !1747), !dbg !4331
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !4332, metadata !1747), !dbg !4333
  %d0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i, metadata !4334, metadata !1747), !dbg !4335
  %d1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i, metadata !4336, metadata !1747), !dbg !4337
  %d2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i, metadata !4338, metadata !1747), !dbg !4339
  %d3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i, metadata !4340, metadata !1747), !dbg !4341
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !4342, metadata !1747), !dbg !4343
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4344, metadata !1747), !dbg !4345
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !4346, metadata !1747), !dbg !4347
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4348
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !4349
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !4347
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !4350, metadata !1747), !dbg !4351
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4352
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !4353
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !4352
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !4352
  store i32* %2, i32** %decoded0, align 8, !dbg !4351
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4354
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4355
  %decoded1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 16, !dbg !4356
  %arrayidx2 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded1, i64 0, i64 0, !dbg !4355
  %5 = load i32*, i32** %arrayidx2, align 8, !dbg !4355
  %6 = load i32, i32* %count.addr, align 4, !dbg !4357
  call void @ape_apply_filters(%struct.APEContext* %3, i32* %5, i32* null, i32 %6), !dbg !4358
  br label %while.cond, !dbg !4359

while.cond:                                       ; preds = %if.end, %entry
  %7 = load i32, i32* %count.addr, align 4, !dbg !4360
  %dec = add nsw i32 %7, -1, !dbg !4360
  store i32 %dec, i32* %count.addr, align 4, !dbg !4360
  %tobool = icmp ne i32 %7, 0, !dbg !4362
  br i1 %tobool, label %while.body, label %while.end, !dbg !4362

while.body:                                       ; preds = %while.cond
  %8 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4363
  %9 = load i32*, i32** %decoded0, align 8, !dbg !4364
  %10 = load i32, i32* %9, align 4, !dbg !4365
  store %struct.APEPredictor* %8, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4366
  store i32 %10, i32* %decoded.addr.i, align 4, !dbg !4366
  store i32 0, i32* %filter.addr.i, align 4, !dbg !4366
  store i32 50, i32* %delayA.addr.i, align 4, !dbg !4366
  %11 = load i32, i32* %filter.addr.i, align 4, !dbg !4367
  %idxprom.i = sext i32 %11 to i64, !dbg !4368
  %12 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4368
  %lastA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %12, i32 0, i32 1, !dbg !4369
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i, i64 0, i64 %idxprom.i, !dbg !4368
  %13 = load i32, i32* %arrayidx.i, align 4, !dbg !4368
  %14 = load i32, i32* %delayA.addr.i, align 4, !dbg !4370
  %idxprom1.i = sext i32 %14 to i64, !dbg !4371
  %15 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4371
  %buf.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %15, i32 0, i32 0, !dbg !4372
  %16 = load i32*, i32** %buf.i, align 8, !dbg !4372
  %arrayidx2.i = getelementptr inbounds i32, i32* %16, i64 %idxprom1.i, !dbg !4371
  store i32 %13, i32* %arrayidx2.i, align 4, !dbg !4373
  %17 = load i32, i32* %delayA.addr.i, align 4, !dbg !4374
  %idxprom3.i = sext i32 %17 to i64, !dbg !4375
  %18 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4375
  %buf4.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %18, i32 0, i32 0, !dbg !4376
  %19 = load i32*, i32** %buf4.i, align 8, !dbg !4376
  %arrayidx5.i = getelementptr inbounds i32, i32* %19, i64 %idxprom3.i, !dbg !4375
  %20 = load i32, i32* %arrayidx5.i, align 4, !dbg !4375
  store i32 %20, i32* %d0.i, align 4, !dbg !4377
  %21 = load i32, i32* %delayA.addr.i, align 4, !dbg !4378
  %idxprom6.i = sext i32 %21 to i64, !dbg !4379
  %22 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4379
  %buf7.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %22, i32 0, i32 0, !dbg !4380
  %23 = load i32*, i32** %buf7.i, align 8, !dbg !4380
  %arrayidx8.i = getelementptr inbounds i32, i32* %23, i64 %idxprom6.i, !dbg !4379
  %24 = load i32, i32* %arrayidx8.i, align 4, !dbg !4379
  %25 = load i32, i32* %delayA.addr.i, align 4, !dbg !4381
  %sub.i = sub nsw i32 %25, 1, !dbg !4382
  %idxprom9.i = sext i32 %sub.i to i64, !dbg !4383
  %26 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4383
  %buf10.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %26, i32 0, i32 0, !dbg !4384
  %27 = load i32*, i32** %buf10.i, align 8, !dbg !4384
  %arrayidx11.i = getelementptr inbounds i32, i32* %27, i64 %idxprom9.i, !dbg !4383
  %28 = load i32, i32* %arrayidx11.i, align 4, !dbg !4383
  %sub12.i = sub nsw i32 %24, %28, !dbg !4385
  store i32 %sub12.i, i32* %d1.i, align 4, !dbg !4386
  %29 = load i32, i32* %delayA.addr.i, align 4, !dbg !4387
  %sub13.i = sub nsw i32 %29, 1, !dbg !4388
  %idxprom14.i = sext i32 %sub13.i to i64, !dbg !4389
  %30 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4389
  %buf15.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %30, i32 0, i32 0, !dbg !4390
  %31 = load i32*, i32** %buf15.i, align 8, !dbg !4390
  %arrayidx16.i = getelementptr inbounds i32, i32* %31, i64 %idxprom14.i, !dbg !4389
  %32 = load i32, i32* %arrayidx16.i, align 4, !dbg !4389
  %33 = load i32, i32* %delayA.addr.i, align 4, !dbg !4391
  %sub17.i = sub nsw i32 %33, 2, !dbg !4392
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !4393
  %34 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4393
  %buf19.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %34, i32 0, i32 0, !dbg !4394
  %35 = load i32*, i32** %buf19.i, align 8, !dbg !4394
  %arrayidx20.i = getelementptr inbounds i32, i32* %35, i64 %idxprom18.i, !dbg !4393
  %36 = load i32, i32* %arrayidx20.i, align 4, !dbg !4393
  %sub21.i = sub nsw i32 %32, %36, !dbg !4395
  store i32 %sub21.i, i32* %d2.i, align 4, !dbg !4396
  %37 = load i32, i32* %delayA.addr.i, align 4, !dbg !4397
  %sub22.i = sub nsw i32 %37, 2, !dbg !4398
  %idxprom23.i = sext i32 %sub22.i to i64, !dbg !4399
  %38 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4399
  %buf24.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %38, i32 0, i32 0, !dbg !4400
  %39 = load i32*, i32** %buf24.i, align 8, !dbg !4400
  %arrayidx25.i = getelementptr inbounds i32, i32* %39, i64 %idxprom23.i, !dbg !4399
  %40 = load i32, i32* %arrayidx25.i, align 4, !dbg !4399
  %41 = load i32, i32* %delayA.addr.i, align 4, !dbg !4401
  %sub26.i = sub nsw i32 %41, 3, !dbg !4402
  %idxprom27.i = sext i32 %sub26.i to i64, !dbg !4403
  %42 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4403
  %buf28.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %42, i32 0, i32 0, !dbg !4404
  %43 = load i32*, i32** %buf28.i, align 8, !dbg !4404
  %arrayidx29.i = getelementptr inbounds i32, i32* %43, i64 %idxprom27.i, !dbg !4403
  %44 = load i32, i32* %arrayidx29.i, align 4, !dbg !4403
  %sub30.i = sub nsw i32 %40, %44, !dbg !4405
  store i32 %sub30.i, i32* %d3.i, align 4, !dbg !4406
  %45 = load i32, i32* %d0.i, align 4, !dbg !4407
  %46 = load i32, i32* %filter.addr.i, align 4, !dbg !4408
  %idxprom31.i = sext i32 %46 to i64, !dbg !4409
  %47 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4409
  %coeffsA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %47, i32 0, i32 4, !dbg !4410
  %arrayidx32.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i, i64 0, i64 %idxprom31.i, !dbg !4409
  %arrayidx33.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx32.i, i64 0, i64 0, !dbg !4409
  %48 = load i32, i32* %arrayidx33.i, align 8, !dbg !4409
  %mul.i = mul nsw i32 %45, %48, !dbg !4411
  %49 = load i32, i32* %d1.i, align 4, !dbg !4412
  %50 = load i32, i32* %filter.addr.i, align 4, !dbg !4413
  %idxprom34.i = sext i32 %50 to i64, !dbg !4414
  %51 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4414
  %coeffsA35.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %51, i32 0, i32 4, !dbg !4415
  %arrayidx36.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA35.i, i64 0, i64 %idxprom34.i, !dbg !4414
  %arrayidx37.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx36.i, i64 0, i64 1, !dbg !4414
  %52 = load i32, i32* %arrayidx37.i, align 4, !dbg !4414
  %mul38.i = mul nsw i32 %49, %52, !dbg !4416
  %add.i = add nsw i32 %mul.i, %mul38.i, !dbg !4417
  %53 = load i32, i32* %d2.i, align 4, !dbg !4418
  %54 = load i32, i32* %filter.addr.i, align 4, !dbg !4419
  %idxprom39.i = sext i32 %54 to i64, !dbg !4420
  %55 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4420
  %coeffsA40.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %55, i32 0, i32 4, !dbg !4421
  %arrayidx41.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA40.i, i64 0, i64 %idxprom39.i, !dbg !4420
  %arrayidx42.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41.i, i64 0, i64 2, !dbg !4420
  %56 = load i32, i32* %arrayidx42.i, align 8, !dbg !4420
  %mul43.i = mul nsw i32 %53, %56, !dbg !4422
  %add44.i = add nsw i32 %add.i, %mul43.i, !dbg !4423
  %57 = load i32, i32* %d3.i, align 4, !dbg !4424
  %58 = load i32, i32* %filter.addr.i, align 4, !dbg !4425
  %idxprom45.i = sext i32 %58 to i64, !dbg !4426
  %59 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4426
  %coeffsA46.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %59, i32 0, i32 4, !dbg !4427
  %arrayidx47.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA46.i, i64 0, i64 %idxprom45.i, !dbg !4426
  %arrayidx48.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx47.i, i64 0, i64 3, !dbg !4426
  %60 = load i32, i32* %arrayidx48.i, align 4, !dbg !4426
  %mul49.i = mul nsw i32 %57, %60, !dbg !4428
  %add50.i = add nsw i32 %add44.i, %mul49.i, !dbg !4429
  store i32 %add50.i, i32* %predictionA.i, align 4, !dbg !4430
  %61 = load i32, i32* %decoded.addr.i, align 4, !dbg !4431
  %62 = load i32, i32* %predictionA.i, align 4, !dbg !4432
  %shr.i = ashr i32 %62, 9, !dbg !4433
  %add51.i = add nsw i32 %61, %shr.i, !dbg !4434
  %63 = load i32, i32* %filter.addr.i, align 4, !dbg !4435
  %idxprom52.i = sext i32 %63 to i64, !dbg !4436
  %64 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4436
  %lastA53.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %64, i32 0, i32 1, !dbg !4437
  %arrayidx54.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA53.i, i64 0, i64 %idxprom52.i, !dbg !4436
  store i32 %add51.i, i32* %arrayidx54.i, align 4, !dbg !4438
  %65 = load i32, i32* %filter.addr.i, align 4, !dbg !4439
  %idxprom55.i = sext i32 %65 to i64, !dbg !4440
  %66 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4440
  %lastA56.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %66, i32 0, i32 1, !dbg !4441
  %arrayidx57.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA56.i, i64 0, i64 %idxprom55.i, !dbg !4440
  %67 = load i32, i32* %arrayidx57.i, align 4, !dbg !4440
  %68 = load i32, i32* %filter.addr.i, align 4, !dbg !4442
  %idxprom58.i = sext i32 %68 to i64, !dbg !4443
  %69 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4443
  %filterA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %69, i32 0, i32 2, !dbg !4444
  %arrayidx59.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i, i64 0, i64 %idxprom58.i, !dbg !4443
  %70 = load i32, i32* %arrayidx59.i, align 4, !dbg !4443
  %mul60.i = mul nsw i32 %70, 31, !dbg !4445
  %shr61.i = ashr i32 %mul60.i, 5, !dbg !4446
  %add62.i = add nsw i32 %67, %shr61.i, !dbg !4447
  %71 = load i32, i32* %filter.addr.i, align 4, !dbg !4448
  %idxprom63.i = sext i32 %71 to i64, !dbg !4449
  %72 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4449
  %filterA64.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %72, i32 0, i32 2, !dbg !4450
  %arrayidx65.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA64.i, i64 0, i64 %idxprom63.i, !dbg !4449
  store i32 %add62.i, i32* %arrayidx65.i, align 4, !dbg !4451
  %73 = load i32, i32* %decoded.addr.i, align 4, !dbg !4452
  %call.i = call i32 @APESIGN(i32 %73) #8, !dbg !4453
  store i32 %call.i, i32* %sign.i, align 4, !dbg !4454
  %74 = load i32, i32* %d0.i, align 4, !dbg !4455
  %cmp.i = icmp slt i32 %74, 0, !dbg !4456
  %conv.i = zext i1 %cmp.i to i32, !dbg !4456
  %mul66.i = mul nsw i32 %conv.i, 2, !dbg !4457
  %sub67.i = sub nsw i32 %mul66.i, 1, !dbg !4458
  %75 = load i32, i32* %sign.i, align 4, !dbg !4459
  %mul68.i = mul nsw i32 %sub67.i, %75, !dbg !4460
  %76 = load i32, i32* %filter.addr.i, align 4, !dbg !4461
  %idxprom69.i = sext i32 %76 to i64, !dbg !4462
  %77 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4462
  %coeffsA70.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %77, i32 0, i32 4, !dbg !4463
  %arrayidx71.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA70.i, i64 0, i64 %idxprom69.i, !dbg !4462
  %arrayidx72.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx71.i, i64 0, i64 0, !dbg !4462
  %78 = load i32, i32* %arrayidx72.i, align 8, !dbg !4464
  %add73.i = add nsw i32 %78, %mul68.i, !dbg !4464
  store i32 %add73.i, i32* %arrayidx72.i, align 8, !dbg !4464
  %79 = load i32, i32* %d1.i, align 4, !dbg !4465
  %cmp74.i = icmp slt i32 %79, 0, !dbg !4466
  %conv75.i = zext i1 %cmp74.i to i32, !dbg !4466
  %mul76.i = mul nsw i32 %conv75.i, 2, !dbg !4467
  %sub77.i = sub nsw i32 %mul76.i, 1, !dbg !4468
  %80 = load i32, i32* %sign.i, align 4, !dbg !4469
  %mul78.i = mul nsw i32 %sub77.i, %80, !dbg !4470
  %81 = load i32, i32* %filter.addr.i, align 4, !dbg !4471
  %idxprom79.i = sext i32 %81 to i64, !dbg !4472
  %82 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4472
  %coeffsA80.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %82, i32 0, i32 4, !dbg !4473
  %arrayidx81.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA80.i, i64 0, i64 %idxprom79.i, !dbg !4472
  %arrayidx82.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx81.i, i64 0, i64 1, !dbg !4472
  %83 = load i32, i32* %arrayidx82.i, align 4, !dbg !4474
  %add83.i = add nsw i32 %83, %mul78.i, !dbg !4474
  store i32 %add83.i, i32* %arrayidx82.i, align 4, !dbg !4474
  %84 = load i32, i32* %d2.i, align 4, !dbg !4475
  %cmp84.i = icmp slt i32 %84, 0, !dbg !4476
  %conv85.i = zext i1 %cmp84.i to i32, !dbg !4476
  %mul86.i = mul nsw i32 %conv85.i, 2, !dbg !4477
  %sub87.i = sub nsw i32 %mul86.i, 1, !dbg !4478
  %85 = load i32, i32* %sign.i, align 4, !dbg !4479
  %mul88.i = mul nsw i32 %sub87.i, %85, !dbg !4480
  %86 = load i32, i32* %filter.addr.i, align 4, !dbg !4481
  %idxprom89.i = sext i32 %86 to i64, !dbg !4482
  %87 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4482
  %coeffsA90.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %87, i32 0, i32 4, !dbg !4483
  %arrayidx91.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA90.i, i64 0, i64 %idxprom89.i, !dbg !4482
  %arrayidx92.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx91.i, i64 0, i64 2, !dbg !4482
  %88 = load i32, i32* %arrayidx92.i, align 8, !dbg !4484
  %add93.i = add nsw i32 %88, %mul88.i, !dbg !4484
  store i32 %add93.i, i32* %arrayidx92.i, align 8, !dbg !4484
  %89 = load i32, i32* %d3.i, align 4, !dbg !4485
  %cmp94.i = icmp slt i32 %89, 0, !dbg !4486
  %conv95.i = zext i1 %cmp94.i to i32, !dbg !4486
  %mul96.i = mul nsw i32 %conv95.i, 2, !dbg !4487
  %sub97.i = sub nsw i32 %mul96.i, 1, !dbg !4488
  %90 = load i32, i32* %sign.i, align 4, !dbg !4489
  %mul98.i = mul nsw i32 %sub97.i, %90, !dbg !4490
  %91 = load i32, i32* %filter.addr.i, align 4, !dbg !4491
  %idxprom99.i = sext i32 %91 to i64, !dbg !4492
  %92 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4492
  %coeffsA100.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %92, i32 0, i32 4, !dbg !4493
  %arrayidx101.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA100.i, i64 0, i64 %idxprom99.i, !dbg !4492
  %arrayidx102.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101.i, i64 0, i64 3, !dbg !4492
  %93 = load i32, i32* %arrayidx102.i, align 4, !dbg !4494
  %add103.i = add nsw i32 %93, %mul98.i, !dbg !4494
  store i32 %add103.i, i32* %arrayidx102.i, align 4, !dbg !4494
  %94 = load i32, i32* %filter.addr.i, align 4, !dbg !4495
  %idxprom104.i = sext i32 %94 to i64, !dbg !4496
  %95 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4496
  %filterA105.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %95, i32 0, i32 2, !dbg !4497
  %arrayidx106.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA105.i, i64 0, i64 %idxprom104.i, !dbg !4496
  %96 = load i32, i32* %arrayidx106.i, align 4, !dbg !4496
  %97 = load i32*, i32** %decoded0, align 8, !dbg !4498
  store i32 %96, i32* %97, align 4, !dbg !4499
  %98 = load i32*, i32** %decoded0, align 8, !dbg !4500
  %incdec.ptr = getelementptr inbounds i32, i32* %98, i32 1, !dbg !4500
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !4500
  %99 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4501
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %99, i32 0, i32 0, !dbg !4502
  %100 = load i32*, i32** %buf, align 8, !dbg !4503
  %incdec.ptr3 = getelementptr inbounds i32, i32* %100, i32 1, !dbg !4503
  store i32* %incdec.ptr3, i32** %buf, align 8, !dbg !4503
  %101 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4504
  %buf4 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %101, i32 0, i32 0, !dbg !4506
  %102 = load i32*, i32** %buf4, align 8, !dbg !4506
  %103 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4507
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %103, i32 0, i32 6, !dbg !4508
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !4507
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !4509
  %cmp = icmp eq i32* %102, %add.ptr, !dbg !4510
  br i1 %cmp, label %if.then, label %if.end, !dbg !4511

if.then:                                          ; preds = %while.body
  %104 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4512
  %historybuffer5 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %104, i32 0, i32 6, !dbg !4514
  %arraydecay6 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer5, i32 0, i32 0, !dbg !4515
  %105 = bitcast i32* %arraydecay6 to i8*, !dbg !4515
  %106 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4516
  %buf7 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %106, i32 0, i32 0, !dbg !4517
  %107 = load i32*, i32** %buf7, align 8, !dbg !4517
  %108 = bitcast i32* %107 to i8*, !dbg !4515
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %105, i8* %108, i64 200, i32 4, i1 false), !dbg !4515
  %109 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4518
  %historybuffer8 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %109, i32 0, i32 6, !dbg !4519
  %arraydecay9 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer8, i32 0, i32 0, !dbg !4518
  %110 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4520
  %buf10 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %110, i32 0, i32 0, !dbg !4521
  store i32* %arraydecay9, i32** %buf10, align 8, !dbg !4522
  br label %if.end, !dbg !4523

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !4524, !llvm.loop !4526

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4527
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_stereo_3930(%struct.APEContext* %ctx, i32 %count) #1 !dbg !4528 {
entry:
  %p.addr.i18 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i18, metadata !4319, metadata !1747), !dbg !4529
  %decoded.addr.i19 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i19, metadata !4324, metadata !1747), !dbg !4532
  %filter.addr.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i20, metadata !4326, metadata !1747), !dbg !4533
  %delayA.addr.i21 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i21, metadata !4328, metadata !1747), !dbg !4534
  %predictionA.i22 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i22, metadata !4330, metadata !1747), !dbg !4535
  %sign.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i23, metadata !4332, metadata !1747), !dbg !4536
  %d0.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i24, metadata !4334, metadata !1747), !dbg !4537
  %d1.i25 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i25, metadata !4336, metadata !1747), !dbg !4538
  %d2.i26 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i26, metadata !4338, metadata !1747), !dbg !4539
  %d3.i27 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i27, metadata !4340, metadata !1747), !dbg !4540
  %p.addr.i = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i, metadata !4319, metadata !1747), !dbg !4541
  %decoded.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i, metadata !4324, metadata !1747), !dbg !4543
  %filter.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i, metadata !4326, metadata !1747), !dbg !4544
  %delayA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i, metadata !4328, metadata !1747), !dbg !4545
  %predictionA.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i, metadata !4330, metadata !1747), !dbg !4546
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !4332, metadata !1747), !dbg !4547
  %d0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d0.i, metadata !4334, metadata !1747), !dbg !4548
  %d1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d1.i, metadata !4336, metadata !1747), !dbg !4549
  %d2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d2.i, metadata !4338, metadata !1747), !dbg !4550
  %d3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %d3.i, metadata !4340, metadata !1747), !dbg !4551
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  %Y = alloca i32, align 4
  %X = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !4552, metadata !1747), !dbg !4553
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4554, metadata !1747), !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !4556, metadata !1747), !dbg !4557
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4558
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !4559
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !4557
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !4560, metadata !1747), !dbg !4561
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4562
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !4563
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !4562
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !4562
  store i32* %2, i32** %decoded0, align 8, !dbg !4561
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !4564, metadata !1747), !dbg !4565
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4566
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 16, !dbg !4567
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !4566
  %4 = load i32*, i32** %arrayidx3, align 8, !dbg !4566
  store i32* %4, i32** %decoded1, align 8, !dbg !4565
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4568
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4569
  %decoded4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 16, !dbg !4570
  %arrayidx5 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded4, i64 0, i64 0, !dbg !4569
  %7 = load i32*, i32** %arrayidx5, align 8, !dbg !4569
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4571
  %decoded6 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 16, !dbg !4572
  %arrayidx7 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded6, i64 0, i64 1, !dbg !4571
  %9 = load i32*, i32** %arrayidx7, align 8, !dbg !4571
  %10 = load i32, i32* %count.addr, align 4, !dbg !4573
  call void @ape_apply_filters(%struct.APEContext* %5, i32* %7, i32* %9, i32 %10), !dbg !4574
  br label %while.cond, !dbg !4575

while.cond:                                       ; preds = %if.end, %entry
  %11 = load i32, i32* %count.addr, align 4, !dbg !4576
  %dec = add nsw i32 %11, -1, !dbg !4576
  store i32 %dec, i32* %count.addr, align 4, !dbg !4576
  %tobool = icmp ne i32 %11, 0, !dbg !4578
  br i1 %tobool, label %while.body, label %while.end, !dbg !4578

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %Y, metadata !4579, metadata !1747), !dbg !4580
  %12 = load i32*, i32** %decoded1, align 8, !dbg !4581
  %13 = load i32, i32* %12, align 4, !dbg !4582
  store i32 %13, i32* %Y, align 4, !dbg !4580
  call void @llvm.dbg.declare(metadata i32* %X, metadata !4583, metadata !1747), !dbg !4584
  %14 = load i32*, i32** %decoded0, align 8, !dbg !4585
  %15 = load i32, i32* %14, align 4, !dbg !4586
  store i32 %15, i32* %X, align 4, !dbg !4584
  %16 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4587
  %17 = load i32, i32* %Y, align 4, !dbg !4588
  store %struct.APEPredictor* %16, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4589
  store i32 %17, i32* %decoded.addr.i, align 4, !dbg !4589
  store i32 0, i32* %filter.addr.i, align 4, !dbg !4589
  store i32 50, i32* %delayA.addr.i, align 4, !dbg !4589
  %18 = load i32, i32* %filter.addr.i, align 4, !dbg !4590
  %idxprom.i = sext i32 %18 to i64, !dbg !4591
  %19 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4591
  %lastA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %19, i32 0, i32 1, !dbg !4592
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i, i64 0, i64 %idxprom.i, !dbg !4591
  %20 = load i32, i32* %arrayidx.i, align 4, !dbg !4591
  %21 = load i32, i32* %delayA.addr.i, align 4, !dbg !4593
  %idxprom1.i = sext i32 %21 to i64, !dbg !4594
  %22 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4594
  %buf.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %22, i32 0, i32 0, !dbg !4595
  %23 = load i32*, i32** %buf.i, align 8, !dbg !4595
  %arrayidx2.i = getelementptr inbounds i32, i32* %23, i64 %idxprom1.i, !dbg !4594
  store i32 %20, i32* %arrayidx2.i, align 4, !dbg !4596
  %24 = load i32, i32* %delayA.addr.i, align 4, !dbg !4597
  %idxprom3.i = sext i32 %24 to i64, !dbg !4598
  %25 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4598
  %buf4.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %25, i32 0, i32 0, !dbg !4599
  %26 = load i32*, i32** %buf4.i, align 8, !dbg !4599
  %arrayidx5.i = getelementptr inbounds i32, i32* %26, i64 %idxprom3.i, !dbg !4598
  %27 = load i32, i32* %arrayidx5.i, align 4, !dbg !4598
  store i32 %27, i32* %d0.i, align 4, !dbg !4600
  %28 = load i32, i32* %delayA.addr.i, align 4, !dbg !4601
  %idxprom6.i = sext i32 %28 to i64, !dbg !4602
  %29 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4602
  %buf7.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %29, i32 0, i32 0, !dbg !4603
  %30 = load i32*, i32** %buf7.i, align 8, !dbg !4603
  %arrayidx8.i = getelementptr inbounds i32, i32* %30, i64 %idxprom6.i, !dbg !4602
  %31 = load i32, i32* %arrayidx8.i, align 4, !dbg !4602
  %32 = load i32, i32* %delayA.addr.i, align 4, !dbg !4604
  %sub.i = sub nsw i32 %32, 1, !dbg !4605
  %idxprom9.i = sext i32 %sub.i to i64, !dbg !4606
  %33 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4606
  %buf10.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %33, i32 0, i32 0, !dbg !4607
  %34 = load i32*, i32** %buf10.i, align 8, !dbg !4607
  %arrayidx11.i = getelementptr inbounds i32, i32* %34, i64 %idxprom9.i, !dbg !4606
  %35 = load i32, i32* %arrayidx11.i, align 4, !dbg !4606
  %sub12.i = sub nsw i32 %31, %35, !dbg !4608
  store i32 %sub12.i, i32* %d1.i, align 4, !dbg !4609
  %36 = load i32, i32* %delayA.addr.i, align 4, !dbg !4610
  %sub13.i = sub nsw i32 %36, 1, !dbg !4611
  %idxprom14.i = sext i32 %sub13.i to i64, !dbg !4612
  %37 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4612
  %buf15.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %37, i32 0, i32 0, !dbg !4613
  %38 = load i32*, i32** %buf15.i, align 8, !dbg !4613
  %arrayidx16.i = getelementptr inbounds i32, i32* %38, i64 %idxprom14.i, !dbg !4612
  %39 = load i32, i32* %arrayidx16.i, align 4, !dbg !4612
  %40 = load i32, i32* %delayA.addr.i, align 4, !dbg !4614
  %sub17.i = sub nsw i32 %40, 2, !dbg !4615
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !4616
  %41 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4616
  %buf19.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %41, i32 0, i32 0, !dbg !4617
  %42 = load i32*, i32** %buf19.i, align 8, !dbg !4617
  %arrayidx20.i = getelementptr inbounds i32, i32* %42, i64 %idxprom18.i, !dbg !4616
  %43 = load i32, i32* %arrayidx20.i, align 4, !dbg !4616
  %sub21.i = sub nsw i32 %39, %43, !dbg !4618
  store i32 %sub21.i, i32* %d2.i, align 4, !dbg !4619
  %44 = load i32, i32* %delayA.addr.i, align 4, !dbg !4620
  %sub22.i = sub nsw i32 %44, 2, !dbg !4621
  %idxprom23.i = sext i32 %sub22.i to i64, !dbg !4622
  %45 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4622
  %buf24.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %45, i32 0, i32 0, !dbg !4623
  %46 = load i32*, i32** %buf24.i, align 8, !dbg !4623
  %arrayidx25.i = getelementptr inbounds i32, i32* %46, i64 %idxprom23.i, !dbg !4622
  %47 = load i32, i32* %arrayidx25.i, align 4, !dbg !4622
  %48 = load i32, i32* %delayA.addr.i, align 4, !dbg !4624
  %sub26.i = sub nsw i32 %48, 3, !dbg !4625
  %idxprom27.i = sext i32 %sub26.i to i64, !dbg !4626
  %49 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4626
  %buf28.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %49, i32 0, i32 0, !dbg !4627
  %50 = load i32*, i32** %buf28.i, align 8, !dbg !4627
  %arrayidx29.i = getelementptr inbounds i32, i32* %50, i64 %idxprom27.i, !dbg !4626
  %51 = load i32, i32* %arrayidx29.i, align 4, !dbg !4626
  %sub30.i = sub nsw i32 %47, %51, !dbg !4628
  store i32 %sub30.i, i32* %d3.i, align 4, !dbg !4629
  %52 = load i32, i32* %d0.i, align 4, !dbg !4630
  %53 = load i32, i32* %filter.addr.i, align 4, !dbg !4631
  %idxprom31.i = sext i32 %53 to i64, !dbg !4632
  %54 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4632
  %coeffsA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %54, i32 0, i32 4, !dbg !4633
  %arrayidx32.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i, i64 0, i64 %idxprom31.i, !dbg !4632
  %arrayidx33.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx32.i, i64 0, i64 0, !dbg !4632
  %55 = load i32, i32* %arrayidx33.i, align 8, !dbg !4632
  %mul.i = mul nsw i32 %52, %55, !dbg !4634
  %56 = load i32, i32* %d1.i, align 4, !dbg !4635
  %57 = load i32, i32* %filter.addr.i, align 4, !dbg !4636
  %idxprom34.i = sext i32 %57 to i64, !dbg !4637
  %58 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4637
  %coeffsA35.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %58, i32 0, i32 4, !dbg !4638
  %arrayidx36.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA35.i, i64 0, i64 %idxprom34.i, !dbg !4637
  %arrayidx37.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx36.i, i64 0, i64 1, !dbg !4637
  %59 = load i32, i32* %arrayidx37.i, align 4, !dbg !4637
  %mul38.i = mul nsw i32 %56, %59, !dbg !4639
  %add.i = add nsw i32 %mul.i, %mul38.i, !dbg !4640
  %60 = load i32, i32* %d2.i, align 4, !dbg !4641
  %61 = load i32, i32* %filter.addr.i, align 4, !dbg !4642
  %idxprom39.i = sext i32 %61 to i64, !dbg !4643
  %62 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4643
  %coeffsA40.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %62, i32 0, i32 4, !dbg !4644
  %arrayidx41.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA40.i, i64 0, i64 %idxprom39.i, !dbg !4643
  %arrayidx42.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41.i, i64 0, i64 2, !dbg !4643
  %63 = load i32, i32* %arrayidx42.i, align 8, !dbg !4643
  %mul43.i = mul nsw i32 %60, %63, !dbg !4645
  %add44.i = add nsw i32 %add.i, %mul43.i, !dbg !4646
  %64 = load i32, i32* %d3.i, align 4, !dbg !4647
  %65 = load i32, i32* %filter.addr.i, align 4, !dbg !4648
  %idxprom45.i = sext i32 %65 to i64, !dbg !4649
  %66 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4649
  %coeffsA46.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %66, i32 0, i32 4, !dbg !4650
  %arrayidx47.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA46.i, i64 0, i64 %idxprom45.i, !dbg !4649
  %arrayidx48.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx47.i, i64 0, i64 3, !dbg !4649
  %67 = load i32, i32* %arrayidx48.i, align 4, !dbg !4649
  %mul49.i = mul nsw i32 %64, %67, !dbg !4651
  %add50.i = add nsw i32 %add44.i, %mul49.i, !dbg !4652
  store i32 %add50.i, i32* %predictionA.i, align 4, !dbg !4653
  %68 = load i32, i32* %decoded.addr.i, align 4, !dbg !4654
  %69 = load i32, i32* %predictionA.i, align 4, !dbg !4655
  %shr.i = ashr i32 %69, 9, !dbg !4656
  %add51.i = add nsw i32 %68, %shr.i, !dbg !4657
  %70 = load i32, i32* %filter.addr.i, align 4, !dbg !4658
  %idxprom52.i = sext i32 %70 to i64, !dbg !4659
  %71 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4659
  %lastA53.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %71, i32 0, i32 1, !dbg !4660
  %arrayidx54.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA53.i, i64 0, i64 %idxprom52.i, !dbg !4659
  store i32 %add51.i, i32* %arrayidx54.i, align 4, !dbg !4661
  %72 = load i32, i32* %filter.addr.i, align 4, !dbg !4662
  %idxprom55.i = sext i32 %72 to i64, !dbg !4663
  %73 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4663
  %lastA56.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %73, i32 0, i32 1, !dbg !4664
  %arrayidx57.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA56.i, i64 0, i64 %idxprom55.i, !dbg !4663
  %74 = load i32, i32* %arrayidx57.i, align 4, !dbg !4663
  %75 = load i32, i32* %filter.addr.i, align 4, !dbg !4665
  %idxprom58.i = sext i32 %75 to i64, !dbg !4666
  %76 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4666
  %filterA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %76, i32 0, i32 2, !dbg !4667
  %arrayidx59.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i, i64 0, i64 %idxprom58.i, !dbg !4666
  %77 = load i32, i32* %arrayidx59.i, align 4, !dbg !4666
  %mul60.i = mul nsw i32 %77, 31, !dbg !4668
  %shr61.i = ashr i32 %mul60.i, 5, !dbg !4669
  %add62.i = add nsw i32 %74, %shr61.i, !dbg !4670
  %78 = load i32, i32* %filter.addr.i, align 4, !dbg !4671
  %idxprom63.i = sext i32 %78 to i64, !dbg !4672
  %79 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4672
  %filterA64.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %79, i32 0, i32 2, !dbg !4673
  %arrayidx65.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA64.i, i64 0, i64 %idxprom63.i, !dbg !4672
  store i32 %add62.i, i32* %arrayidx65.i, align 4, !dbg !4674
  %80 = load i32, i32* %decoded.addr.i, align 4, !dbg !4675
  %call.i = call i32 @APESIGN(i32 %80) #8, !dbg !4676
  store i32 %call.i, i32* %sign.i, align 4, !dbg !4677
  %81 = load i32, i32* %d0.i, align 4, !dbg !4678
  %cmp.i = icmp slt i32 %81, 0, !dbg !4679
  %conv.i = zext i1 %cmp.i to i32, !dbg !4679
  %mul66.i = mul nsw i32 %conv.i, 2, !dbg !4680
  %sub67.i = sub nsw i32 %mul66.i, 1, !dbg !4681
  %82 = load i32, i32* %sign.i, align 4, !dbg !4682
  %mul68.i = mul nsw i32 %sub67.i, %82, !dbg !4683
  %83 = load i32, i32* %filter.addr.i, align 4, !dbg !4684
  %idxprom69.i = sext i32 %83 to i64, !dbg !4685
  %84 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4685
  %coeffsA70.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %84, i32 0, i32 4, !dbg !4686
  %arrayidx71.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA70.i, i64 0, i64 %idxprom69.i, !dbg !4685
  %arrayidx72.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx71.i, i64 0, i64 0, !dbg !4685
  %85 = load i32, i32* %arrayidx72.i, align 8, !dbg !4687
  %add73.i = add nsw i32 %85, %mul68.i, !dbg !4687
  store i32 %add73.i, i32* %arrayidx72.i, align 8, !dbg !4687
  %86 = load i32, i32* %d1.i, align 4, !dbg !4688
  %cmp74.i = icmp slt i32 %86, 0, !dbg !4689
  %conv75.i = zext i1 %cmp74.i to i32, !dbg !4689
  %mul76.i = mul nsw i32 %conv75.i, 2, !dbg !4690
  %sub77.i = sub nsw i32 %mul76.i, 1, !dbg !4691
  %87 = load i32, i32* %sign.i, align 4, !dbg !4692
  %mul78.i = mul nsw i32 %sub77.i, %87, !dbg !4693
  %88 = load i32, i32* %filter.addr.i, align 4, !dbg !4694
  %idxprom79.i = sext i32 %88 to i64, !dbg !4695
  %89 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4695
  %coeffsA80.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %89, i32 0, i32 4, !dbg !4696
  %arrayidx81.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA80.i, i64 0, i64 %idxprom79.i, !dbg !4695
  %arrayidx82.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx81.i, i64 0, i64 1, !dbg !4695
  %90 = load i32, i32* %arrayidx82.i, align 4, !dbg !4697
  %add83.i = add nsw i32 %90, %mul78.i, !dbg !4697
  store i32 %add83.i, i32* %arrayidx82.i, align 4, !dbg !4697
  %91 = load i32, i32* %d2.i, align 4, !dbg !4698
  %cmp84.i = icmp slt i32 %91, 0, !dbg !4699
  %conv85.i = zext i1 %cmp84.i to i32, !dbg !4699
  %mul86.i = mul nsw i32 %conv85.i, 2, !dbg !4700
  %sub87.i = sub nsw i32 %mul86.i, 1, !dbg !4701
  %92 = load i32, i32* %sign.i, align 4, !dbg !4702
  %mul88.i = mul nsw i32 %sub87.i, %92, !dbg !4703
  %93 = load i32, i32* %filter.addr.i, align 4, !dbg !4704
  %idxprom89.i = sext i32 %93 to i64, !dbg !4705
  %94 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4705
  %coeffsA90.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %94, i32 0, i32 4, !dbg !4706
  %arrayidx91.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA90.i, i64 0, i64 %idxprom89.i, !dbg !4705
  %arrayidx92.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx91.i, i64 0, i64 2, !dbg !4705
  %95 = load i32, i32* %arrayidx92.i, align 8, !dbg !4707
  %add93.i = add nsw i32 %95, %mul88.i, !dbg !4707
  store i32 %add93.i, i32* %arrayidx92.i, align 8, !dbg !4707
  %96 = load i32, i32* %d3.i, align 4, !dbg !4708
  %cmp94.i = icmp slt i32 %96, 0, !dbg !4709
  %conv95.i = zext i1 %cmp94.i to i32, !dbg !4709
  %mul96.i = mul nsw i32 %conv95.i, 2, !dbg !4710
  %sub97.i = sub nsw i32 %mul96.i, 1, !dbg !4711
  %97 = load i32, i32* %sign.i, align 4, !dbg !4712
  %mul98.i = mul nsw i32 %sub97.i, %97, !dbg !4713
  %98 = load i32, i32* %filter.addr.i, align 4, !dbg !4714
  %idxprom99.i = sext i32 %98 to i64, !dbg !4715
  %99 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4715
  %coeffsA100.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %99, i32 0, i32 4, !dbg !4716
  %arrayidx101.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA100.i, i64 0, i64 %idxprom99.i, !dbg !4715
  %arrayidx102.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101.i, i64 0, i64 3, !dbg !4715
  %100 = load i32, i32* %arrayidx102.i, align 4, !dbg !4717
  %add103.i = add nsw i32 %100, %mul98.i, !dbg !4717
  store i32 %add103.i, i32* %arrayidx102.i, align 4, !dbg !4717
  %101 = load i32, i32* %filter.addr.i, align 4, !dbg !4718
  %idxprom104.i = sext i32 %101 to i64, !dbg !4719
  %102 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !4719
  %filterA105.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %102, i32 0, i32 2, !dbg !4720
  %arrayidx106.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA105.i, i64 0, i64 %idxprom104.i, !dbg !4719
  %103 = load i32, i32* %arrayidx106.i, align 4, !dbg !4719
  %104 = load i32*, i32** %decoded0, align 8, !dbg !4721
  store i32 %103, i32* %104, align 4, !dbg !4722
  %105 = load i32*, i32** %decoded0, align 8, !dbg !4723
  %incdec.ptr = getelementptr inbounds i32, i32* %105, i32 1, !dbg !4723
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !4723
  %106 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4724
  %107 = load i32, i32* %X, align 4, !dbg !4725
  store %struct.APEPredictor* %106, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4726
  store i32 %107, i32* %decoded.addr.i19, align 4, !dbg !4726
  store i32 1, i32* %filter.addr.i20, align 4, !dbg !4726
  store i32 34, i32* %delayA.addr.i21, align 4, !dbg !4726
  %108 = load i32, i32* %filter.addr.i20, align 4, !dbg !4727
  %idxprom.i28 = sext i32 %108 to i64, !dbg !4728
  %109 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4728
  %lastA.i29 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %109, i32 0, i32 1, !dbg !4729
  %arrayidx.i30 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i29, i64 0, i64 %idxprom.i28, !dbg !4728
  %110 = load i32, i32* %arrayidx.i30, align 4, !dbg !4728
  %111 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4730
  %idxprom1.i31 = sext i32 %111 to i64, !dbg !4731
  %112 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4731
  %buf.i32 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %112, i32 0, i32 0, !dbg !4732
  %113 = load i32*, i32** %buf.i32, align 8, !dbg !4732
  %arrayidx2.i33 = getelementptr inbounds i32, i32* %113, i64 %idxprom1.i31, !dbg !4731
  store i32 %110, i32* %arrayidx2.i33, align 4, !dbg !4733
  %114 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4734
  %idxprom3.i34 = sext i32 %114 to i64, !dbg !4735
  %115 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4735
  %buf4.i35 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %115, i32 0, i32 0, !dbg !4736
  %116 = load i32*, i32** %buf4.i35, align 8, !dbg !4736
  %arrayidx5.i36 = getelementptr inbounds i32, i32* %116, i64 %idxprom3.i34, !dbg !4735
  %117 = load i32, i32* %arrayidx5.i36, align 4, !dbg !4735
  store i32 %117, i32* %d0.i24, align 4, !dbg !4737
  %118 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4738
  %idxprom6.i37 = sext i32 %118 to i64, !dbg !4739
  %119 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4739
  %buf7.i38 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %119, i32 0, i32 0, !dbg !4740
  %120 = load i32*, i32** %buf7.i38, align 8, !dbg !4740
  %arrayidx8.i39 = getelementptr inbounds i32, i32* %120, i64 %idxprom6.i37, !dbg !4739
  %121 = load i32, i32* %arrayidx8.i39, align 4, !dbg !4739
  %122 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4741
  %sub.i40 = sub nsw i32 %122, 1, !dbg !4742
  %idxprom9.i41 = sext i32 %sub.i40 to i64, !dbg !4743
  %123 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4743
  %buf10.i42 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %123, i32 0, i32 0, !dbg !4744
  %124 = load i32*, i32** %buf10.i42, align 8, !dbg !4744
  %arrayidx11.i43 = getelementptr inbounds i32, i32* %124, i64 %idxprom9.i41, !dbg !4743
  %125 = load i32, i32* %arrayidx11.i43, align 4, !dbg !4743
  %sub12.i44 = sub nsw i32 %121, %125, !dbg !4745
  store i32 %sub12.i44, i32* %d1.i25, align 4, !dbg !4746
  %126 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4747
  %sub13.i45 = sub nsw i32 %126, 1, !dbg !4748
  %idxprom14.i46 = sext i32 %sub13.i45 to i64, !dbg !4749
  %127 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4749
  %buf15.i47 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %127, i32 0, i32 0, !dbg !4750
  %128 = load i32*, i32** %buf15.i47, align 8, !dbg !4750
  %arrayidx16.i48 = getelementptr inbounds i32, i32* %128, i64 %idxprom14.i46, !dbg !4749
  %129 = load i32, i32* %arrayidx16.i48, align 4, !dbg !4749
  %130 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4751
  %sub17.i49 = sub nsw i32 %130, 2, !dbg !4752
  %idxprom18.i50 = sext i32 %sub17.i49 to i64, !dbg !4753
  %131 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4753
  %buf19.i51 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %131, i32 0, i32 0, !dbg !4754
  %132 = load i32*, i32** %buf19.i51, align 8, !dbg !4754
  %arrayidx20.i52 = getelementptr inbounds i32, i32* %132, i64 %idxprom18.i50, !dbg !4753
  %133 = load i32, i32* %arrayidx20.i52, align 4, !dbg !4753
  %sub21.i53 = sub nsw i32 %129, %133, !dbg !4755
  store i32 %sub21.i53, i32* %d2.i26, align 4, !dbg !4756
  %134 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4757
  %sub22.i54 = sub nsw i32 %134, 2, !dbg !4758
  %idxprom23.i55 = sext i32 %sub22.i54 to i64, !dbg !4759
  %135 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4759
  %buf24.i56 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %135, i32 0, i32 0, !dbg !4760
  %136 = load i32*, i32** %buf24.i56, align 8, !dbg !4760
  %arrayidx25.i57 = getelementptr inbounds i32, i32* %136, i64 %idxprom23.i55, !dbg !4759
  %137 = load i32, i32* %arrayidx25.i57, align 4, !dbg !4759
  %138 = load i32, i32* %delayA.addr.i21, align 4, !dbg !4761
  %sub26.i58 = sub nsw i32 %138, 3, !dbg !4762
  %idxprom27.i59 = sext i32 %sub26.i58 to i64, !dbg !4763
  %139 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4763
  %buf28.i60 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %139, i32 0, i32 0, !dbg !4764
  %140 = load i32*, i32** %buf28.i60, align 8, !dbg !4764
  %arrayidx29.i61 = getelementptr inbounds i32, i32* %140, i64 %idxprom27.i59, !dbg !4763
  %141 = load i32, i32* %arrayidx29.i61, align 4, !dbg !4763
  %sub30.i62 = sub nsw i32 %137, %141, !dbg !4765
  store i32 %sub30.i62, i32* %d3.i27, align 4, !dbg !4766
  %142 = load i32, i32* %d0.i24, align 4, !dbg !4767
  %143 = load i32, i32* %filter.addr.i20, align 4, !dbg !4768
  %idxprom31.i63 = sext i32 %143 to i64, !dbg !4769
  %144 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4769
  %coeffsA.i64 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %144, i32 0, i32 4, !dbg !4770
  %arrayidx32.i65 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i64, i64 0, i64 %idxprom31.i63, !dbg !4769
  %arrayidx33.i66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx32.i65, i64 0, i64 0, !dbg !4769
  %145 = load i32, i32* %arrayidx33.i66, align 8, !dbg !4769
  %mul.i67 = mul nsw i32 %142, %145, !dbg !4771
  %146 = load i32, i32* %d1.i25, align 4, !dbg !4772
  %147 = load i32, i32* %filter.addr.i20, align 4, !dbg !4773
  %idxprom34.i68 = sext i32 %147 to i64, !dbg !4774
  %148 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4774
  %coeffsA35.i69 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %148, i32 0, i32 4, !dbg !4775
  %arrayidx36.i70 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA35.i69, i64 0, i64 %idxprom34.i68, !dbg !4774
  %arrayidx37.i71 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx36.i70, i64 0, i64 1, !dbg !4774
  %149 = load i32, i32* %arrayidx37.i71, align 4, !dbg !4774
  %mul38.i72 = mul nsw i32 %146, %149, !dbg !4776
  %add.i73 = add nsw i32 %mul.i67, %mul38.i72, !dbg !4777
  %150 = load i32, i32* %d2.i26, align 4, !dbg !4778
  %151 = load i32, i32* %filter.addr.i20, align 4, !dbg !4779
  %idxprom39.i74 = sext i32 %151 to i64, !dbg !4780
  %152 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4780
  %coeffsA40.i75 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %152, i32 0, i32 4, !dbg !4781
  %arrayidx41.i76 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA40.i75, i64 0, i64 %idxprom39.i74, !dbg !4780
  %arrayidx42.i77 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41.i76, i64 0, i64 2, !dbg !4780
  %153 = load i32, i32* %arrayidx42.i77, align 8, !dbg !4780
  %mul43.i78 = mul nsw i32 %150, %153, !dbg !4782
  %add44.i79 = add nsw i32 %add.i73, %mul43.i78, !dbg !4783
  %154 = load i32, i32* %d3.i27, align 4, !dbg !4784
  %155 = load i32, i32* %filter.addr.i20, align 4, !dbg !4785
  %idxprom45.i80 = sext i32 %155 to i64, !dbg !4786
  %156 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4786
  %coeffsA46.i81 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %156, i32 0, i32 4, !dbg !4787
  %arrayidx47.i82 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA46.i81, i64 0, i64 %idxprom45.i80, !dbg !4786
  %arrayidx48.i83 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx47.i82, i64 0, i64 3, !dbg !4786
  %157 = load i32, i32* %arrayidx48.i83, align 4, !dbg !4786
  %mul49.i84 = mul nsw i32 %154, %157, !dbg !4788
  %add50.i85 = add nsw i32 %add44.i79, %mul49.i84, !dbg !4789
  store i32 %add50.i85, i32* %predictionA.i22, align 4, !dbg !4790
  %158 = load i32, i32* %decoded.addr.i19, align 4, !dbg !4791
  %159 = load i32, i32* %predictionA.i22, align 4, !dbg !4792
  %shr.i86 = ashr i32 %159, 9, !dbg !4793
  %add51.i87 = add nsw i32 %158, %shr.i86, !dbg !4794
  %160 = load i32, i32* %filter.addr.i20, align 4, !dbg !4795
  %idxprom52.i88 = sext i32 %160 to i64, !dbg !4796
  %161 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4796
  %lastA53.i89 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %161, i32 0, i32 1, !dbg !4797
  %arrayidx54.i90 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA53.i89, i64 0, i64 %idxprom52.i88, !dbg !4796
  store i32 %add51.i87, i32* %arrayidx54.i90, align 4, !dbg !4798
  %162 = load i32, i32* %filter.addr.i20, align 4, !dbg !4799
  %idxprom55.i91 = sext i32 %162 to i64, !dbg !4800
  %163 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4800
  %lastA56.i92 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %163, i32 0, i32 1, !dbg !4801
  %arrayidx57.i93 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA56.i92, i64 0, i64 %idxprom55.i91, !dbg !4800
  %164 = load i32, i32* %arrayidx57.i93, align 4, !dbg !4800
  %165 = load i32, i32* %filter.addr.i20, align 4, !dbg !4802
  %idxprom58.i94 = sext i32 %165 to i64, !dbg !4803
  %166 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4803
  %filterA.i95 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %166, i32 0, i32 2, !dbg !4804
  %arrayidx59.i96 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i95, i64 0, i64 %idxprom58.i94, !dbg !4803
  %167 = load i32, i32* %arrayidx59.i96, align 4, !dbg !4803
  %mul60.i97 = mul nsw i32 %167, 31, !dbg !4805
  %shr61.i98 = ashr i32 %mul60.i97, 5, !dbg !4806
  %add62.i99 = add nsw i32 %164, %shr61.i98, !dbg !4807
  %168 = load i32, i32* %filter.addr.i20, align 4, !dbg !4808
  %idxprom63.i100 = sext i32 %168 to i64, !dbg !4809
  %169 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4809
  %filterA64.i101 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %169, i32 0, i32 2, !dbg !4810
  %arrayidx65.i102 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA64.i101, i64 0, i64 %idxprom63.i100, !dbg !4809
  store i32 %add62.i99, i32* %arrayidx65.i102, align 4, !dbg !4811
  %170 = load i32, i32* %decoded.addr.i19, align 4, !dbg !4812
  %call.i103 = call i32 @APESIGN(i32 %170) #8, !dbg !4813
  store i32 %call.i103, i32* %sign.i23, align 4, !dbg !4814
  %171 = load i32, i32* %d0.i24, align 4, !dbg !4815
  %cmp.i104 = icmp slt i32 %171, 0, !dbg !4816
  %conv.i105 = zext i1 %cmp.i104 to i32, !dbg !4816
  %mul66.i106 = mul nsw i32 %conv.i105, 2, !dbg !4817
  %sub67.i107 = sub nsw i32 %mul66.i106, 1, !dbg !4818
  %172 = load i32, i32* %sign.i23, align 4, !dbg !4819
  %mul68.i108 = mul nsw i32 %sub67.i107, %172, !dbg !4820
  %173 = load i32, i32* %filter.addr.i20, align 4, !dbg !4821
  %idxprom69.i109 = sext i32 %173 to i64, !dbg !4822
  %174 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4822
  %coeffsA70.i110 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %174, i32 0, i32 4, !dbg !4823
  %arrayidx71.i111 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA70.i110, i64 0, i64 %idxprom69.i109, !dbg !4822
  %arrayidx72.i112 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx71.i111, i64 0, i64 0, !dbg !4822
  %175 = load i32, i32* %arrayidx72.i112, align 8, !dbg !4824
  %add73.i113 = add nsw i32 %175, %mul68.i108, !dbg !4824
  store i32 %add73.i113, i32* %arrayidx72.i112, align 8, !dbg !4824
  %176 = load i32, i32* %d1.i25, align 4, !dbg !4825
  %cmp74.i114 = icmp slt i32 %176, 0, !dbg !4826
  %conv75.i115 = zext i1 %cmp74.i114 to i32, !dbg !4826
  %mul76.i116 = mul nsw i32 %conv75.i115, 2, !dbg !4827
  %sub77.i117 = sub nsw i32 %mul76.i116, 1, !dbg !4828
  %177 = load i32, i32* %sign.i23, align 4, !dbg !4829
  %mul78.i118 = mul nsw i32 %sub77.i117, %177, !dbg !4830
  %178 = load i32, i32* %filter.addr.i20, align 4, !dbg !4831
  %idxprom79.i119 = sext i32 %178 to i64, !dbg !4832
  %179 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4832
  %coeffsA80.i120 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %179, i32 0, i32 4, !dbg !4833
  %arrayidx81.i121 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA80.i120, i64 0, i64 %idxprom79.i119, !dbg !4832
  %arrayidx82.i122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx81.i121, i64 0, i64 1, !dbg !4832
  %180 = load i32, i32* %arrayidx82.i122, align 4, !dbg !4834
  %add83.i123 = add nsw i32 %180, %mul78.i118, !dbg !4834
  store i32 %add83.i123, i32* %arrayidx82.i122, align 4, !dbg !4834
  %181 = load i32, i32* %d2.i26, align 4, !dbg !4835
  %cmp84.i124 = icmp slt i32 %181, 0, !dbg !4836
  %conv85.i125 = zext i1 %cmp84.i124 to i32, !dbg !4836
  %mul86.i126 = mul nsw i32 %conv85.i125, 2, !dbg !4837
  %sub87.i127 = sub nsw i32 %mul86.i126, 1, !dbg !4838
  %182 = load i32, i32* %sign.i23, align 4, !dbg !4839
  %mul88.i128 = mul nsw i32 %sub87.i127, %182, !dbg !4840
  %183 = load i32, i32* %filter.addr.i20, align 4, !dbg !4841
  %idxprom89.i129 = sext i32 %183 to i64, !dbg !4842
  %184 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4842
  %coeffsA90.i130 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %184, i32 0, i32 4, !dbg !4843
  %arrayidx91.i131 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA90.i130, i64 0, i64 %idxprom89.i129, !dbg !4842
  %arrayidx92.i132 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx91.i131, i64 0, i64 2, !dbg !4842
  %185 = load i32, i32* %arrayidx92.i132, align 8, !dbg !4844
  %add93.i133 = add nsw i32 %185, %mul88.i128, !dbg !4844
  store i32 %add93.i133, i32* %arrayidx92.i132, align 8, !dbg !4844
  %186 = load i32, i32* %d3.i27, align 4, !dbg !4845
  %cmp94.i134 = icmp slt i32 %186, 0, !dbg !4846
  %conv95.i135 = zext i1 %cmp94.i134 to i32, !dbg !4846
  %mul96.i136 = mul nsw i32 %conv95.i135, 2, !dbg !4847
  %sub97.i137 = sub nsw i32 %mul96.i136, 1, !dbg !4848
  %187 = load i32, i32* %sign.i23, align 4, !dbg !4849
  %mul98.i138 = mul nsw i32 %sub97.i137, %187, !dbg !4850
  %188 = load i32, i32* %filter.addr.i20, align 4, !dbg !4851
  %idxprom99.i139 = sext i32 %188 to i64, !dbg !4852
  %189 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4852
  %coeffsA100.i140 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %189, i32 0, i32 4, !dbg !4853
  %arrayidx101.i141 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA100.i140, i64 0, i64 %idxprom99.i139, !dbg !4852
  %arrayidx102.i142 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101.i141, i64 0, i64 3, !dbg !4852
  %190 = load i32, i32* %arrayidx102.i142, align 4, !dbg !4854
  %add103.i143 = add nsw i32 %190, %mul98.i138, !dbg !4854
  store i32 %add103.i143, i32* %arrayidx102.i142, align 4, !dbg !4854
  %191 = load i32, i32* %filter.addr.i20, align 4, !dbg !4855
  %idxprom104.i144 = sext i32 %191 to i64, !dbg !4856
  %192 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !4856
  %filterA105.i145 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %192, i32 0, i32 2, !dbg !4857
  %arrayidx106.i146 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA105.i145, i64 0, i64 %idxprom104.i144, !dbg !4856
  %193 = load i32, i32* %arrayidx106.i146, align 4, !dbg !4856
  %194 = load i32*, i32** %decoded1, align 8, !dbg !4858
  store i32 %193, i32* %194, align 4, !dbg !4859
  %195 = load i32*, i32** %decoded1, align 8, !dbg !4860
  %incdec.ptr9 = getelementptr inbounds i32, i32* %195, i32 1, !dbg !4860
  store i32* %incdec.ptr9, i32** %decoded1, align 8, !dbg !4860
  %196 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4861
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %196, i32 0, i32 0, !dbg !4862
  %197 = load i32*, i32** %buf, align 8, !dbg !4863
  %incdec.ptr10 = getelementptr inbounds i32, i32* %197, i32 1, !dbg !4863
  store i32* %incdec.ptr10, i32** %buf, align 8, !dbg !4863
  %198 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4864
  %buf11 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %198, i32 0, i32 0, !dbg !4866
  %199 = load i32*, i32** %buf11, align 8, !dbg !4866
  %200 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4867
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %200, i32 0, i32 6, !dbg !4868
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !4867
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !4869
  %cmp = icmp eq i32* %199, %add.ptr, !dbg !4870
  br i1 %cmp, label %if.then, label %if.end, !dbg !4871

if.then:                                          ; preds = %while.body
  %201 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4872
  %historybuffer12 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %201, i32 0, i32 6, !dbg !4874
  %arraydecay13 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer12, i32 0, i32 0, !dbg !4875
  %202 = bitcast i32* %arraydecay13 to i8*, !dbg !4875
  %203 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4876
  %buf14 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %203, i32 0, i32 0, !dbg !4877
  %204 = load i32*, i32** %buf14, align 8, !dbg !4877
  %205 = bitcast i32* %204 to i8*, !dbg !4875
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %202, i8* %205, i64 200, i32 4, i1 false), !dbg !4875
  %206 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4878
  %historybuffer15 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %206, i32 0, i32 6, !dbg !4879
  %arraydecay16 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer15, i32 0, i32 0, !dbg !4878
  %207 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4880
  %buf17 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %207, i32 0, i32 0, !dbg !4881
  store i32* %arraydecay16, i32** %buf17, align 8, !dbg !4882
  br label %if.end, !dbg !4883

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !4884, !llvm.loop !4886

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4887
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_mono_3950(%struct.APEContext* %ctx, i32 %count) #1 !dbg !4888 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  %predictionA = alloca i32, align 4
  %currentA = alloca i32, align 4
  %A = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !4889, metadata !1747), !dbg !4890
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !4891, metadata !1747), !dbg !4892
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !4893, metadata !1747), !dbg !4894
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4895
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !4896
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !4894
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !4897, metadata !1747), !dbg !4898
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4899
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !4900
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !4899
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !4899
  store i32* %2, i32** %decoded0, align 8, !dbg !4898
  call void @llvm.dbg.declare(metadata i32* %predictionA, metadata !4901, metadata !1747), !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %currentA, metadata !4903, metadata !1747), !dbg !4904
  call void @llvm.dbg.declare(metadata i32* %A, metadata !4905, metadata !1747), !dbg !4906
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !4907, metadata !1747), !dbg !4908
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4909
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !4910
  %decoded1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 16, !dbg !4911
  %arrayidx2 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded1, i64 0, i64 0, !dbg !4910
  %5 = load i32*, i32** %arrayidx2, align 8, !dbg !4910
  %6 = load i32, i32* %count.addr, align 4, !dbg !4912
  call void @ape_apply_filters(%struct.APEContext* %3, i32* %5, i32* null, i32 %6), !dbg !4913
  %7 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4914
  %lastA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %7, i32 0, i32 1, !dbg !4915
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA, i64 0, i64 0, !dbg !4914
  %8 = load i32, i32* %arrayidx3, align 8, !dbg !4914
  store i32 %8, i32* %currentA, align 4, !dbg !4916
  br label %while.cond, !dbg !4917

while.cond:                                       ; preds = %if.end, %entry
  %9 = load i32, i32* %count.addr, align 4, !dbg !4918
  %dec = add nsw i32 %9, -1, !dbg !4918
  store i32 %dec, i32* %count.addr, align 4, !dbg !4918
  %tobool = icmp ne i32 %9, 0, !dbg !4920
  br i1 %tobool, label %while.body, label %while.end, !dbg !4920

while.body:                                       ; preds = %while.cond
  %10 = load i32*, i32** %decoded0, align 8, !dbg !4921
  %11 = load i32, i32* %10, align 4, !dbg !4923
  store i32 %11, i32* %A, align 4, !dbg !4924
  %12 = load i32, i32* %currentA, align 4, !dbg !4925
  %13 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4926
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %13, i32 0, i32 0, !dbg !4927
  %14 = load i32*, i32** %buf, align 8, !dbg !4927
  %arrayidx4 = getelementptr inbounds i32, i32* %14, i64 50, !dbg !4926
  store i32 %12, i32* %arrayidx4, align 4, !dbg !4928
  %15 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4929
  %buf5 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %15, i32 0, i32 0, !dbg !4930
  %16 = load i32*, i32** %buf5, align 8, !dbg !4930
  %arrayidx6 = getelementptr inbounds i32, i32* %16, i64 50, !dbg !4929
  %17 = load i32, i32* %arrayidx6, align 4, !dbg !4929
  %18 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4931
  %buf7 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %18, i32 0, i32 0, !dbg !4932
  %19 = load i32*, i32** %buf7, align 8, !dbg !4932
  %arrayidx8 = getelementptr inbounds i32, i32* %19, i64 49, !dbg !4931
  %20 = load i32, i32* %arrayidx8, align 4, !dbg !4931
  %sub = sub nsw i32 %17, %20, !dbg !4933
  %21 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4934
  %buf9 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %21, i32 0, i32 0, !dbg !4935
  %22 = load i32*, i32** %buf9, align 8, !dbg !4935
  %arrayidx10 = getelementptr inbounds i32, i32* %22, i64 49, !dbg !4934
  store i32 %sub, i32* %arrayidx10, align 4, !dbg !4936
  %23 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4937
  %buf11 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %23, i32 0, i32 0, !dbg !4938
  %24 = load i32*, i32** %buf11, align 8, !dbg !4938
  %arrayidx12 = getelementptr inbounds i32, i32* %24, i64 50, !dbg !4937
  %25 = load i32, i32* %arrayidx12, align 4, !dbg !4937
  %26 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4939
  %coeffsA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %26, i32 0, i32 4, !dbg !4940
  %arrayidx13 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA, i64 0, i64 0, !dbg !4939
  %arrayidx14 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx13, i64 0, i64 0, !dbg !4939
  %27 = load i32, i32* %arrayidx14, align 8, !dbg !4939
  %mul = mul nsw i32 %25, %27, !dbg !4941
  %28 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4942
  %buf15 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %28, i32 0, i32 0, !dbg !4943
  %29 = load i32*, i32** %buf15, align 8, !dbg !4943
  %arrayidx16 = getelementptr inbounds i32, i32* %29, i64 49, !dbg !4942
  %30 = load i32, i32* %arrayidx16, align 4, !dbg !4942
  %31 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4944
  %coeffsA17 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %31, i32 0, i32 4, !dbg !4945
  %arrayidx18 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA17, i64 0, i64 0, !dbg !4944
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx18, i64 0, i64 1, !dbg !4944
  %32 = load i32, i32* %arrayidx19, align 4, !dbg !4944
  %mul20 = mul nsw i32 %30, %32, !dbg !4946
  %add = add nsw i32 %mul, %mul20, !dbg !4947
  %33 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4948
  %buf21 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %33, i32 0, i32 0, !dbg !4949
  %34 = load i32*, i32** %buf21, align 8, !dbg !4949
  %arrayidx22 = getelementptr inbounds i32, i32* %34, i64 48, !dbg !4948
  %35 = load i32, i32* %arrayidx22, align 4, !dbg !4948
  %36 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4950
  %coeffsA23 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %36, i32 0, i32 4, !dbg !4951
  %arrayidx24 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA23, i64 0, i64 0, !dbg !4950
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx24, i64 0, i64 2, !dbg !4950
  %37 = load i32, i32* %arrayidx25, align 8, !dbg !4950
  %mul26 = mul nsw i32 %35, %37, !dbg !4952
  %add27 = add nsw i32 %add, %mul26, !dbg !4953
  %38 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4954
  %buf28 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %38, i32 0, i32 0, !dbg !4955
  %39 = load i32*, i32** %buf28, align 8, !dbg !4955
  %arrayidx29 = getelementptr inbounds i32, i32* %39, i64 47, !dbg !4954
  %40 = load i32, i32* %arrayidx29, align 4, !dbg !4954
  %41 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4956
  %coeffsA30 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %41, i32 0, i32 4, !dbg !4957
  %arrayidx31 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA30, i64 0, i64 0, !dbg !4956
  %arrayidx32 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx31, i64 0, i64 3, !dbg !4956
  %42 = load i32, i32* %arrayidx32, align 4, !dbg !4956
  %mul33 = mul nsw i32 %40, %42, !dbg !4958
  %add34 = add nsw i32 %add27, %mul33, !dbg !4959
  store i32 %add34, i32* %predictionA, align 4, !dbg !4960
  %43 = load i32, i32* %A, align 4, !dbg !4961
  %44 = load i32, i32* %predictionA, align 4, !dbg !4962
  %shr = ashr i32 %44, 10, !dbg !4963
  %add35 = add nsw i32 %43, %shr, !dbg !4964
  store i32 %add35, i32* %currentA, align 4, !dbg !4965
  %45 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4966
  %buf36 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %45, i32 0, i32 0, !dbg !4967
  %46 = load i32*, i32** %buf36, align 8, !dbg !4967
  %arrayidx37 = getelementptr inbounds i32, i32* %46, i64 50, !dbg !4966
  %47 = load i32, i32* %arrayidx37, align 4, !dbg !4966
  %call = call i32 @APESIGN(i32 %47), !dbg !4968
  %48 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4969
  %buf38 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %48, i32 0, i32 0, !dbg !4970
  %49 = load i32*, i32** %buf38, align 8, !dbg !4970
  %arrayidx39 = getelementptr inbounds i32, i32* %49, i64 18, !dbg !4969
  store i32 %call, i32* %arrayidx39, align 4, !dbg !4971
  %50 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4972
  %buf40 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %50, i32 0, i32 0, !dbg !4973
  %51 = load i32*, i32** %buf40, align 8, !dbg !4973
  %arrayidx41 = getelementptr inbounds i32, i32* %51, i64 49, !dbg !4972
  %52 = load i32, i32* %arrayidx41, align 4, !dbg !4972
  %call42 = call i32 @APESIGN(i32 %52), !dbg !4974
  %53 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4975
  %buf43 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %53, i32 0, i32 0, !dbg !4976
  %54 = load i32*, i32** %buf43, align 8, !dbg !4976
  %arrayidx44 = getelementptr inbounds i32, i32* %54, i64 17, !dbg !4975
  store i32 %call42, i32* %arrayidx44, align 4, !dbg !4977
  %55 = load i32, i32* %A, align 4, !dbg !4978
  %call45 = call i32 @APESIGN(i32 %55), !dbg !4979
  store i32 %call45, i32* %sign, align 4, !dbg !4980
  %56 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4981
  %buf46 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %56, i32 0, i32 0, !dbg !4982
  %57 = load i32*, i32** %buf46, align 8, !dbg !4982
  %arrayidx47 = getelementptr inbounds i32, i32* %57, i64 18, !dbg !4981
  %58 = load i32, i32* %arrayidx47, align 4, !dbg !4981
  %59 = load i32, i32* %sign, align 4, !dbg !4983
  %mul48 = mul nsw i32 %58, %59, !dbg !4984
  %60 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4985
  %coeffsA49 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %60, i32 0, i32 4, !dbg !4986
  %arrayidx50 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA49, i64 0, i64 0, !dbg !4985
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx50, i64 0, i64 0, !dbg !4985
  %61 = load i32, i32* %arrayidx51, align 8, !dbg !4987
  %add52 = add nsw i32 %61, %mul48, !dbg !4987
  store i32 %add52, i32* %arrayidx51, align 8, !dbg !4987
  %62 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4988
  %buf53 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %62, i32 0, i32 0, !dbg !4989
  %63 = load i32*, i32** %buf53, align 8, !dbg !4989
  %arrayidx54 = getelementptr inbounds i32, i32* %63, i64 17, !dbg !4988
  %64 = load i32, i32* %arrayidx54, align 4, !dbg !4988
  %65 = load i32, i32* %sign, align 4, !dbg !4990
  %mul55 = mul nsw i32 %64, %65, !dbg !4991
  %66 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4992
  %coeffsA56 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %66, i32 0, i32 4, !dbg !4993
  %arrayidx57 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA56, i64 0, i64 0, !dbg !4992
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx57, i64 0, i64 1, !dbg !4992
  %67 = load i32, i32* %arrayidx58, align 4, !dbg !4994
  %add59 = add nsw i32 %67, %mul55, !dbg !4994
  store i32 %add59, i32* %arrayidx58, align 4, !dbg !4994
  %68 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4995
  %buf60 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %68, i32 0, i32 0, !dbg !4996
  %69 = load i32*, i32** %buf60, align 8, !dbg !4996
  %arrayidx61 = getelementptr inbounds i32, i32* %69, i64 16, !dbg !4995
  %70 = load i32, i32* %arrayidx61, align 4, !dbg !4995
  %71 = load i32, i32* %sign, align 4, !dbg !4997
  %mul62 = mul nsw i32 %70, %71, !dbg !4998
  %72 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !4999
  %coeffsA63 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %72, i32 0, i32 4, !dbg !5000
  %arrayidx64 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA63, i64 0, i64 0, !dbg !4999
  %arrayidx65 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 2, !dbg !4999
  %73 = load i32, i32* %arrayidx65, align 8, !dbg !5001
  %add66 = add nsw i32 %73, %mul62, !dbg !5001
  store i32 %add66, i32* %arrayidx65, align 8, !dbg !5001
  %74 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5002
  %buf67 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %74, i32 0, i32 0, !dbg !5003
  %75 = load i32*, i32** %buf67, align 8, !dbg !5003
  %arrayidx68 = getelementptr inbounds i32, i32* %75, i64 15, !dbg !5002
  %76 = load i32, i32* %arrayidx68, align 4, !dbg !5002
  %77 = load i32, i32* %sign, align 4, !dbg !5004
  %mul69 = mul nsw i32 %76, %77, !dbg !5005
  %78 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5006
  %coeffsA70 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %78, i32 0, i32 4, !dbg !5007
  %arrayidx71 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA70, i64 0, i64 0, !dbg !5006
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx71, i64 0, i64 3, !dbg !5006
  %79 = load i32, i32* %arrayidx72, align 4, !dbg !5008
  %add73 = add nsw i32 %79, %mul69, !dbg !5008
  store i32 %add73, i32* %arrayidx72, align 4, !dbg !5008
  %80 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5009
  %buf74 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %80, i32 0, i32 0, !dbg !5010
  %81 = load i32*, i32** %buf74, align 8, !dbg !5011
  %incdec.ptr = getelementptr inbounds i32, i32* %81, i32 1, !dbg !5011
  store i32* %incdec.ptr, i32** %buf74, align 8, !dbg !5011
  %82 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5012
  %buf75 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %82, i32 0, i32 0, !dbg !5014
  %83 = load i32*, i32** %buf75, align 8, !dbg !5014
  %84 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5015
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %84, i32 0, i32 6, !dbg !5016
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !5015
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !5017
  %cmp = icmp eq i32* %83, %add.ptr, !dbg !5018
  br i1 %cmp, label %if.then, label %if.end, !dbg !5019

if.then:                                          ; preds = %while.body
  %85 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5020
  %historybuffer76 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %85, i32 0, i32 6, !dbg !5022
  %arraydecay77 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer76, i32 0, i32 0, !dbg !5023
  %86 = bitcast i32* %arraydecay77 to i8*, !dbg !5023
  %87 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5024
  %buf78 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %87, i32 0, i32 0, !dbg !5025
  %88 = load i32*, i32** %buf78, align 8, !dbg !5025
  %89 = bitcast i32* %88 to i8*, !dbg !5023
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %86, i8* %89, i64 200, i32 4, i1 false), !dbg !5023
  %90 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5026
  %historybuffer79 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %90, i32 0, i32 6, !dbg !5027
  %arraydecay80 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer79, i32 0, i32 0, !dbg !5026
  %91 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5028
  %buf81 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %91, i32 0, i32 0, !dbg !5029
  store i32* %arraydecay80, i32** %buf81, align 8, !dbg !5030
  br label %if.end, !dbg !5031

if.end:                                           ; preds = %if.then, %while.body
  %92 = load i32, i32* %currentA, align 4, !dbg !5032
  %93 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5033
  %filterA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %93, i32 0, i32 2, !dbg !5034
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA, i64 0, i64 0, !dbg !5033
  %94 = load i32, i32* %arrayidx82, align 8, !dbg !5033
  %mul83 = mul nsw i32 %94, 31, !dbg !5035
  %shr84 = ashr i32 %mul83, 5, !dbg !5036
  %add85 = add nsw i32 %92, %shr84, !dbg !5037
  %95 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5038
  %filterA86 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %95, i32 0, i32 2, !dbg !5039
  %arrayidx87 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA86, i64 0, i64 0, !dbg !5038
  store i32 %add85, i32* %arrayidx87, align 8, !dbg !5040
  %96 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5041
  %filterA88 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %96, i32 0, i32 2, !dbg !5042
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA88, i64 0, i64 0, !dbg !5041
  %97 = load i32, i32* %arrayidx89, align 8, !dbg !5041
  %98 = load i32*, i32** %decoded0, align 8, !dbg !5043
  %incdec.ptr90 = getelementptr inbounds i32, i32* %98, i32 1, !dbg !5043
  store i32* %incdec.ptr90, i32** %decoded0, align 8, !dbg !5043
  store i32 %97, i32* %98, align 4, !dbg !5044
  br label %while.cond, !dbg !5045, !llvm.loop !5047

while.end:                                        ; preds = %while.cond
  %99 = load i32, i32* %currentA, align 4, !dbg !5048
  %100 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5049
  %lastA91 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %100, i32 0, i32 1, !dbg !5050
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA91, i64 0, i64 0, !dbg !5049
  store i32 %99, i32* %arrayidx92, align 8, !dbg !5051
  ret void, !dbg !5052
}

; Function Attrs: nounwind uwtable
define internal void @predictor_decode_stereo_3950(%struct.APEContext* %ctx, i32 %count) #1 !dbg !5053 {
entry:
  %p.addr.i18 = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i18, metadata !5054, metadata !1747), !dbg !5056
  %decoded.addr.i19 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i19, metadata !5059, metadata !1747), !dbg !5060
  %filter.addr.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i20, metadata !5061, metadata !1747), !dbg !5062
  %delayA.addr.i21 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i21, metadata !5063, metadata !1747), !dbg !5064
  %delayB.addr.i22 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayB.addr.i22, metadata !5065, metadata !1747), !dbg !5066
  %adaptA.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %adaptA.addr.i23, metadata !5067, metadata !1747), !dbg !5068
  %adaptB.addr.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %adaptB.addr.i24, metadata !5069, metadata !1747), !dbg !5070
  %predictionA.i25 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i25, metadata !5071, metadata !1747), !dbg !5072
  %predictionB.i26 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionB.i26, metadata !5073, metadata !1747), !dbg !5074
  %sign.i27 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i27, metadata !5075, metadata !1747), !dbg !5076
  %p.addr.i = alloca %struct.APEPredictor*, align 8
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p.addr.i, metadata !5054, metadata !1747), !dbg !5077
  %decoded.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %decoded.addr.i, metadata !5059, metadata !1747), !dbg !5079
  %filter.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr.i, metadata !5061, metadata !1747), !dbg !5080
  %delayA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayA.addr.i, metadata !5063, metadata !1747), !dbg !5081
  %delayB.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delayB.addr.i, metadata !5065, metadata !1747), !dbg !5082
  %adaptA.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %adaptA.addr.i, metadata !5067, metadata !1747), !dbg !5083
  %adaptB.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %adaptB.addr.i, metadata !5069, metadata !1747), !dbg !5084
  %predictionA.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionA.i, metadata !5071, metadata !1747), !dbg !5085
  %predictionB.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %predictionB.i, metadata !5073, metadata !1747), !dbg !5086
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !5075, metadata !1747), !dbg !5087
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %p = alloca %struct.APEPredictor*, align 8
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !5088, metadata !1747), !dbg !5089
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5090, metadata !1747), !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !5092, metadata !1747), !dbg !5093
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5094
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !5095
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !5093
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !5096, metadata !1747), !dbg !5097
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5098
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 16, !dbg !5099
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !5098
  %2 = load i32*, i32** %arrayidx, align 8, !dbg !5098
  store i32* %2, i32** %decoded0, align 8, !dbg !5097
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !5100, metadata !1747), !dbg !5101
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5102
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 16, !dbg !5103
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !5102
  %4 = load i32*, i32** %arrayidx3, align 8, !dbg !5102
  store i32* %4, i32** %decoded1, align 8, !dbg !5101
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5104
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5105
  %decoded4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 16, !dbg !5106
  %arrayidx5 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded4, i64 0, i64 0, !dbg !5105
  %7 = load i32*, i32** %arrayidx5, align 8, !dbg !5105
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5107
  %decoded6 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 16, !dbg !5108
  %arrayidx7 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded6, i64 0, i64 1, !dbg !5107
  %9 = load i32*, i32** %arrayidx7, align 8, !dbg !5107
  %10 = load i32, i32* %count.addr, align 4, !dbg !5109
  call void @ape_apply_filters(%struct.APEContext* %5, i32* %7, i32* %9, i32 %10), !dbg !5110
  br label %while.cond, !dbg !5111

while.cond:                                       ; preds = %if.end, %entry
  %11 = load i32, i32* %count.addr, align 4, !dbg !5112
  %dec = add nsw i32 %11, -1, !dbg !5112
  store i32 %dec, i32* %count.addr, align 4, !dbg !5112
  %tobool = icmp ne i32 %11, 0, !dbg !5114
  br i1 %tobool, label %while.body, label %while.end, !dbg !5114

while.body:                                       ; preds = %while.cond
  %12 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5115
  %13 = load i32*, i32** %decoded0, align 8, !dbg !5116
  %14 = load i32, i32* %13, align 4, !dbg !5117
  store %struct.APEPredictor* %12, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5118
  store i32 %14, i32* %decoded.addr.i, align 4, !dbg !5118
  store i32 0, i32* %filter.addr.i, align 4, !dbg !5118
  store i32 50, i32* %delayA.addr.i, align 4, !dbg !5118
  store i32 42, i32* %delayB.addr.i, align 4, !dbg !5118
  store i32 18, i32* %adaptA.addr.i, align 4, !dbg !5118
  store i32 10, i32* %adaptB.addr.i, align 4, !dbg !5118
  %15 = load i32, i32* %filter.addr.i, align 4, !dbg !5119
  %idxprom.i = sext i32 %15 to i64, !dbg !5120
  %16 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5120
  %lastA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %16, i32 0, i32 1, !dbg !5121
  %arrayidx.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i, i64 0, i64 %idxprom.i, !dbg !5120
  %17 = load i32, i32* %arrayidx.i, align 4, !dbg !5120
  %18 = load i32, i32* %delayA.addr.i, align 4, !dbg !5122
  %idxprom1.i = sext i32 %18 to i64, !dbg !5123
  %19 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5123
  %buf.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %19, i32 0, i32 0, !dbg !5124
  %20 = load i32*, i32** %buf.i, align 8, !dbg !5124
  %arrayidx2.i = getelementptr inbounds i32, i32* %20, i64 %idxprom1.i, !dbg !5123
  store i32 %17, i32* %arrayidx2.i, align 4, !dbg !5125
  %21 = load i32, i32* %delayA.addr.i, align 4, !dbg !5126
  %idxprom3.i = sext i32 %21 to i64, !dbg !5127
  %22 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5127
  %buf4.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %22, i32 0, i32 0, !dbg !5128
  %23 = load i32*, i32** %buf4.i, align 8, !dbg !5128
  %arrayidx5.i = getelementptr inbounds i32, i32* %23, i64 %idxprom3.i, !dbg !5127
  %24 = load i32, i32* %arrayidx5.i, align 4, !dbg !5127
  %call.i = call i32 @APESIGN(i32 %24) #8, !dbg !5129
  %25 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5130
  %idxprom6.i = sext i32 %25 to i64, !dbg !5131
  %26 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5131
  %buf7.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %26, i32 0, i32 0, !dbg !5132
  %27 = load i32*, i32** %buf7.i, align 8, !dbg !5132
  %arrayidx8.i = getelementptr inbounds i32, i32* %27, i64 %idxprom6.i, !dbg !5131
  store i32 %call.i, i32* %arrayidx8.i, align 4, !dbg !5133
  %28 = load i32, i32* %delayA.addr.i, align 4, !dbg !5134
  %idxprom9.i = sext i32 %28 to i64, !dbg !5135
  %29 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5135
  %buf10.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %29, i32 0, i32 0, !dbg !5136
  %30 = load i32*, i32** %buf10.i, align 8, !dbg !5136
  %arrayidx11.i = getelementptr inbounds i32, i32* %30, i64 %idxprom9.i, !dbg !5135
  %31 = load i32, i32* %arrayidx11.i, align 4, !dbg !5135
  %32 = load i32, i32* %delayA.addr.i, align 4, !dbg !5137
  %sub.i = sub nsw i32 %32, 1, !dbg !5138
  %idxprom12.i = sext i32 %sub.i to i64, !dbg !5139
  %33 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5139
  %buf13.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %33, i32 0, i32 0, !dbg !5140
  %34 = load i32*, i32** %buf13.i, align 8, !dbg !5140
  %arrayidx14.i = getelementptr inbounds i32, i32* %34, i64 %idxprom12.i, !dbg !5139
  %35 = load i32, i32* %arrayidx14.i, align 4, !dbg !5139
  %sub15.i = sub nsw i32 %31, %35, !dbg !5141
  %36 = load i32, i32* %delayA.addr.i, align 4, !dbg !5142
  %sub16.i = sub nsw i32 %36, 1, !dbg !5143
  %idxprom17.i = sext i32 %sub16.i to i64, !dbg !5144
  %37 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5144
  %buf18.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %37, i32 0, i32 0, !dbg !5145
  %38 = load i32*, i32** %buf18.i, align 8, !dbg !5145
  %arrayidx19.i = getelementptr inbounds i32, i32* %38, i64 %idxprom17.i, !dbg !5144
  store i32 %sub15.i, i32* %arrayidx19.i, align 4, !dbg !5146
  %39 = load i32, i32* %delayA.addr.i, align 4, !dbg !5147
  %sub20.i = sub nsw i32 %39, 1, !dbg !5148
  %idxprom21.i = sext i32 %sub20.i to i64, !dbg !5149
  %40 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5149
  %buf22.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %40, i32 0, i32 0, !dbg !5150
  %41 = load i32*, i32** %buf22.i, align 8, !dbg !5150
  %arrayidx23.i = getelementptr inbounds i32, i32* %41, i64 %idxprom21.i, !dbg !5149
  %42 = load i32, i32* %arrayidx23.i, align 4, !dbg !5149
  %call24.i = call i32 @APESIGN(i32 %42) #8, !dbg !5151
  %43 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5152
  %sub25.i = sub nsw i32 %43, 1, !dbg !5153
  %idxprom26.i = sext i32 %sub25.i to i64, !dbg !5154
  %44 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5154
  %buf27.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %44, i32 0, i32 0, !dbg !5155
  %45 = load i32*, i32** %buf27.i, align 8, !dbg !5155
  %arrayidx28.i = getelementptr inbounds i32, i32* %45, i64 %idxprom26.i, !dbg !5154
  store i32 %call24.i, i32* %arrayidx28.i, align 4, !dbg !5156
  %46 = load i32, i32* %delayA.addr.i, align 4, !dbg !5157
  %idxprom29.i = sext i32 %46 to i64, !dbg !5158
  %47 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5158
  %buf30.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %47, i32 0, i32 0, !dbg !5159
  %48 = load i32*, i32** %buf30.i, align 8, !dbg !5159
  %arrayidx31.i = getelementptr inbounds i32, i32* %48, i64 %idxprom29.i, !dbg !5158
  %49 = load i32, i32* %arrayidx31.i, align 4, !dbg !5158
  %50 = load i32, i32* %filter.addr.i, align 4, !dbg !5160
  %idxprom32.i = sext i32 %50 to i64, !dbg !5161
  %51 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5161
  %coeffsA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %51, i32 0, i32 4, !dbg !5162
  %arrayidx33.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i, i64 0, i64 %idxprom32.i, !dbg !5161
  %arrayidx34.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx33.i, i64 0, i64 0, !dbg !5161
  %52 = load i32, i32* %arrayidx34.i, align 8, !dbg !5161
  %mul.i = mul nsw i32 %49, %52, !dbg !5163
  %53 = load i32, i32* %delayA.addr.i, align 4, !dbg !5164
  %sub35.i = sub nsw i32 %53, 1, !dbg !5165
  %idxprom36.i = sext i32 %sub35.i to i64, !dbg !5166
  %54 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5166
  %buf37.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %54, i32 0, i32 0, !dbg !5167
  %55 = load i32*, i32** %buf37.i, align 8, !dbg !5167
  %arrayidx38.i = getelementptr inbounds i32, i32* %55, i64 %idxprom36.i, !dbg !5166
  %56 = load i32, i32* %arrayidx38.i, align 4, !dbg !5166
  %57 = load i32, i32* %filter.addr.i, align 4, !dbg !5168
  %idxprom39.i = sext i32 %57 to i64, !dbg !5169
  %58 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5169
  %coeffsA40.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %58, i32 0, i32 4, !dbg !5170
  %arrayidx41.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA40.i, i64 0, i64 %idxprom39.i, !dbg !5169
  %arrayidx42.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41.i, i64 0, i64 1, !dbg !5169
  %59 = load i32, i32* %arrayidx42.i, align 4, !dbg !5169
  %mul43.i = mul nsw i32 %56, %59, !dbg !5171
  %add.i = add nsw i32 %mul.i, %mul43.i, !dbg !5172
  %60 = load i32, i32* %delayA.addr.i, align 4, !dbg !5173
  %sub44.i = sub nsw i32 %60, 2, !dbg !5174
  %idxprom45.i = sext i32 %sub44.i to i64, !dbg !5175
  %61 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5175
  %buf46.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %61, i32 0, i32 0, !dbg !5176
  %62 = load i32*, i32** %buf46.i, align 8, !dbg !5176
  %arrayidx47.i = getelementptr inbounds i32, i32* %62, i64 %idxprom45.i, !dbg !5175
  %63 = load i32, i32* %arrayidx47.i, align 4, !dbg !5175
  %64 = load i32, i32* %filter.addr.i, align 4, !dbg !5177
  %idxprom48.i = sext i32 %64 to i64, !dbg !5178
  %65 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5178
  %coeffsA49.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %65, i32 0, i32 4, !dbg !5179
  %arrayidx50.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA49.i, i64 0, i64 %idxprom48.i, !dbg !5178
  %arrayidx51.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx50.i, i64 0, i64 2, !dbg !5178
  %66 = load i32, i32* %arrayidx51.i, align 8, !dbg !5178
  %mul52.i = mul nsw i32 %63, %66, !dbg !5180
  %add53.i = add nsw i32 %add.i, %mul52.i, !dbg !5181
  %67 = load i32, i32* %delayA.addr.i, align 4, !dbg !5182
  %sub54.i = sub nsw i32 %67, 3, !dbg !5183
  %idxprom55.i = sext i32 %sub54.i to i64, !dbg !5184
  %68 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5184
  %buf56.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %68, i32 0, i32 0, !dbg !5185
  %69 = load i32*, i32** %buf56.i, align 8, !dbg !5185
  %arrayidx57.i = getelementptr inbounds i32, i32* %69, i64 %idxprom55.i, !dbg !5184
  %70 = load i32, i32* %arrayidx57.i, align 4, !dbg !5184
  %71 = load i32, i32* %filter.addr.i, align 4, !dbg !5186
  %idxprom58.i = sext i32 %71 to i64, !dbg !5187
  %72 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5187
  %coeffsA59.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %72, i32 0, i32 4, !dbg !5188
  %arrayidx60.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA59.i, i64 0, i64 %idxprom58.i, !dbg !5187
  %arrayidx61.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60.i, i64 0, i64 3, !dbg !5187
  %73 = load i32, i32* %arrayidx61.i, align 4, !dbg !5187
  %mul62.i = mul nsw i32 %70, %73, !dbg !5189
  %add63.i = add nsw i32 %add53.i, %mul62.i, !dbg !5190
  store i32 %add63.i, i32* %predictionA.i, align 4, !dbg !5191
  %74 = load i32, i32* %filter.addr.i, align 4, !dbg !5192
  %xor.i = xor i32 %74, 1, !dbg !5193
  %idxprom64.i = sext i32 %xor.i to i64, !dbg !5194
  %75 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5194
  %filterA.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %75, i32 0, i32 2, !dbg !5195
  %arrayidx65.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i, i64 0, i64 %idxprom64.i, !dbg !5194
  %76 = load i32, i32* %arrayidx65.i, align 4, !dbg !5194
  %77 = load i32, i32* %filter.addr.i, align 4, !dbg !5196
  %idxprom66.i = sext i32 %77 to i64, !dbg !5197
  %78 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5197
  %filterB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %78, i32 0, i32 3, !dbg !5198
  %arrayidx67.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB.i, i64 0, i64 %idxprom66.i, !dbg !5197
  %79 = load i32, i32* %arrayidx67.i, align 4, !dbg !5197
  %mul68.i = mul nsw i32 %79, 31, !dbg !5199
  %shr.i = ashr i32 %mul68.i, 5, !dbg !5200
  %sub69.i = sub nsw i32 %76, %shr.i, !dbg !5201
  %80 = load i32, i32* %delayB.addr.i, align 4, !dbg !5202
  %idxprom70.i = sext i32 %80 to i64, !dbg !5203
  %81 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5203
  %buf71.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %81, i32 0, i32 0, !dbg !5204
  %82 = load i32*, i32** %buf71.i, align 8, !dbg !5204
  %arrayidx72.i = getelementptr inbounds i32, i32* %82, i64 %idxprom70.i, !dbg !5203
  store i32 %sub69.i, i32* %arrayidx72.i, align 4, !dbg !5205
  %83 = load i32, i32* %delayB.addr.i, align 4, !dbg !5206
  %idxprom73.i = sext i32 %83 to i64, !dbg !5207
  %84 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5207
  %buf74.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %84, i32 0, i32 0, !dbg !5208
  %85 = load i32*, i32** %buf74.i, align 8, !dbg !5208
  %arrayidx75.i = getelementptr inbounds i32, i32* %85, i64 %idxprom73.i, !dbg !5207
  %86 = load i32, i32* %arrayidx75.i, align 4, !dbg !5207
  %call76.i = call i32 @APESIGN(i32 %86) #8, !dbg !5209
  %87 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5210
  %idxprom77.i = sext i32 %87 to i64, !dbg !5211
  %88 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5211
  %buf78.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %88, i32 0, i32 0, !dbg !5212
  %89 = load i32*, i32** %buf78.i, align 8, !dbg !5212
  %arrayidx79.i = getelementptr inbounds i32, i32* %89, i64 %idxprom77.i, !dbg !5211
  store i32 %call76.i, i32* %arrayidx79.i, align 4, !dbg !5213
  %90 = load i32, i32* %delayB.addr.i, align 4, !dbg !5214
  %idxprom80.i = sext i32 %90 to i64, !dbg !5215
  %91 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5215
  %buf81.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %91, i32 0, i32 0, !dbg !5216
  %92 = load i32*, i32** %buf81.i, align 8, !dbg !5216
  %arrayidx82.i = getelementptr inbounds i32, i32* %92, i64 %idxprom80.i, !dbg !5215
  %93 = load i32, i32* %arrayidx82.i, align 4, !dbg !5215
  %94 = load i32, i32* %delayB.addr.i, align 4, !dbg !5217
  %sub83.i = sub nsw i32 %94, 1, !dbg !5218
  %idxprom84.i = sext i32 %sub83.i to i64, !dbg !5219
  %95 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5219
  %buf85.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %95, i32 0, i32 0, !dbg !5220
  %96 = load i32*, i32** %buf85.i, align 8, !dbg !5220
  %arrayidx86.i = getelementptr inbounds i32, i32* %96, i64 %idxprom84.i, !dbg !5219
  %97 = load i32, i32* %arrayidx86.i, align 4, !dbg !5219
  %sub87.i = sub nsw i32 %93, %97, !dbg !5221
  %98 = load i32, i32* %delayB.addr.i, align 4, !dbg !5222
  %sub88.i = sub nsw i32 %98, 1, !dbg !5223
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !5224
  %99 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5224
  %buf90.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %99, i32 0, i32 0, !dbg !5225
  %100 = load i32*, i32** %buf90.i, align 8, !dbg !5225
  %arrayidx91.i = getelementptr inbounds i32, i32* %100, i64 %idxprom89.i, !dbg !5224
  store i32 %sub87.i, i32* %arrayidx91.i, align 4, !dbg !5226
  %101 = load i32, i32* %delayB.addr.i, align 4, !dbg !5227
  %sub92.i = sub nsw i32 %101, 1, !dbg !5228
  %idxprom93.i = sext i32 %sub92.i to i64, !dbg !5229
  %102 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5229
  %buf94.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %102, i32 0, i32 0, !dbg !5230
  %103 = load i32*, i32** %buf94.i, align 8, !dbg !5230
  %arrayidx95.i = getelementptr inbounds i32, i32* %103, i64 %idxprom93.i, !dbg !5229
  %104 = load i32, i32* %arrayidx95.i, align 4, !dbg !5229
  %call96.i = call i32 @APESIGN(i32 %104) #8, !dbg !5231
  %105 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5232
  %sub97.i = sub nsw i32 %105, 1, !dbg !5233
  %idxprom98.i = sext i32 %sub97.i to i64, !dbg !5234
  %106 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5234
  %buf99.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %106, i32 0, i32 0, !dbg !5235
  %107 = load i32*, i32** %buf99.i, align 8, !dbg !5235
  %arrayidx100.i = getelementptr inbounds i32, i32* %107, i64 %idxprom98.i, !dbg !5234
  store i32 %call96.i, i32* %arrayidx100.i, align 4, !dbg !5236
  %108 = load i32, i32* %filter.addr.i, align 4, !dbg !5237
  %xor101.i = xor i32 %108, 1, !dbg !5238
  %idxprom102.i = sext i32 %xor101.i to i64, !dbg !5239
  %109 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5239
  %filterA103.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %109, i32 0, i32 2, !dbg !5240
  %arrayidx104.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA103.i, i64 0, i64 %idxprom102.i, !dbg !5239
  %110 = load i32, i32* %arrayidx104.i, align 4, !dbg !5239
  %111 = load i32, i32* %filter.addr.i, align 4, !dbg !5241
  %idxprom105.i = sext i32 %111 to i64, !dbg !5242
  %112 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5242
  %filterB106.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %112, i32 0, i32 3, !dbg !5243
  %arrayidx107.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterB106.i, i64 0, i64 %idxprom105.i, !dbg !5242
  store i32 %110, i32* %arrayidx107.i, align 4, !dbg !5244
  %113 = load i32, i32* %delayB.addr.i, align 4, !dbg !5245
  %idxprom108.i = sext i32 %113 to i64, !dbg !5246
  %114 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5246
  %buf109.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %114, i32 0, i32 0, !dbg !5247
  %115 = load i32*, i32** %buf109.i, align 8, !dbg !5247
  %arrayidx110.i = getelementptr inbounds i32, i32* %115, i64 %idxprom108.i, !dbg !5246
  %116 = load i32, i32* %arrayidx110.i, align 4, !dbg !5246
  %117 = load i32, i32* %filter.addr.i, align 4, !dbg !5248
  %idxprom111.i = sext i32 %117 to i64, !dbg !5249
  %118 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5249
  %coeffsB.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %118, i32 0, i32 5, !dbg !5250
  %arrayidx112.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB.i, i64 0, i64 %idxprom111.i, !dbg !5249
  %arrayidx113.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx112.i, i64 0, i64 0, !dbg !5249
  %119 = load i32, i32* %arrayidx113.i, align 4, !dbg !5249
  %mul114.i = mul nsw i32 %116, %119, !dbg !5251
  %120 = load i32, i32* %delayB.addr.i, align 4, !dbg !5252
  %sub115.i = sub nsw i32 %120, 1, !dbg !5253
  %idxprom116.i = sext i32 %sub115.i to i64, !dbg !5254
  %121 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5254
  %buf117.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %121, i32 0, i32 0, !dbg !5255
  %122 = load i32*, i32** %buf117.i, align 8, !dbg !5255
  %arrayidx118.i = getelementptr inbounds i32, i32* %122, i64 %idxprom116.i, !dbg !5254
  %123 = load i32, i32* %arrayidx118.i, align 4, !dbg !5254
  %124 = load i32, i32* %filter.addr.i, align 4, !dbg !5256
  %idxprom119.i = sext i32 %124 to i64, !dbg !5257
  %125 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5257
  %coeffsB120.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %125, i32 0, i32 5, !dbg !5258
  %arrayidx121.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB120.i, i64 0, i64 %idxprom119.i, !dbg !5257
  %arrayidx122.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx121.i, i64 0, i64 1, !dbg !5257
  %126 = load i32, i32* %arrayidx122.i, align 4, !dbg !5257
  %mul123.i = mul nsw i32 %123, %126, !dbg !5259
  %add124.i = add nsw i32 %mul114.i, %mul123.i, !dbg !5260
  %127 = load i32, i32* %delayB.addr.i, align 4, !dbg !5261
  %sub125.i = sub nsw i32 %127, 2, !dbg !5262
  %idxprom126.i = sext i32 %sub125.i to i64, !dbg !5263
  %128 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5263
  %buf127.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %128, i32 0, i32 0, !dbg !5264
  %129 = load i32*, i32** %buf127.i, align 8, !dbg !5264
  %arrayidx128.i = getelementptr inbounds i32, i32* %129, i64 %idxprom126.i, !dbg !5263
  %130 = load i32, i32* %arrayidx128.i, align 4, !dbg !5263
  %131 = load i32, i32* %filter.addr.i, align 4, !dbg !5265
  %idxprom129.i = sext i32 %131 to i64, !dbg !5266
  %132 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5266
  %coeffsB130.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %132, i32 0, i32 5, !dbg !5267
  %arrayidx131.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB130.i, i64 0, i64 %idxprom129.i, !dbg !5266
  %arrayidx132.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx131.i, i64 0, i64 2, !dbg !5266
  %133 = load i32, i32* %arrayidx132.i, align 4, !dbg !5266
  %mul133.i = mul nsw i32 %130, %133, !dbg !5268
  %add134.i = add nsw i32 %add124.i, %mul133.i, !dbg !5269
  %134 = load i32, i32* %delayB.addr.i, align 4, !dbg !5270
  %sub135.i = sub nsw i32 %134, 3, !dbg !5271
  %idxprom136.i = sext i32 %sub135.i to i64, !dbg !5272
  %135 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5272
  %buf137.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %135, i32 0, i32 0, !dbg !5273
  %136 = load i32*, i32** %buf137.i, align 8, !dbg !5273
  %arrayidx138.i = getelementptr inbounds i32, i32* %136, i64 %idxprom136.i, !dbg !5272
  %137 = load i32, i32* %arrayidx138.i, align 4, !dbg !5272
  %138 = load i32, i32* %filter.addr.i, align 4, !dbg !5274
  %idxprom139.i = sext i32 %138 to i64, !dbg !5275
  %139 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5275
  %coeffsB140.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %139, i32 0, i32 5, !dbg !5276
  %arrayidx141.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB140.i, i64 0, i64 %idxprom139.i, !dbg !5275
  %arrayidx142.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx141.i, i64 0, i64 3, !dbg !5275
  %140 = load i32, i32* %arrayidx142.i, align 4, !dbg !5275
  %mul143.i = mul nsw i32 %137, %140, !dbg !5277
  %add144.i = add nsw i32 %add134.i, %mul143.i, !dbg !5278
  %141 = load i32, i32* %delayB.addr.i, align 4, !dbg !5279
  %sub145.i = sub nsw i32 %141, 4, !dbg !5280
  %idxprom146.i = sext i32 %sub145.i to i64, !dbg !5281
  %142 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5281
  %buf147.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %142, i32 0, i32 0, !dbg !5282
  %143 = load i32*, i32** %buf147.i, align 8, !dbg !5282
  %arrayidx148.i = getelementptr inbounds i32, i32* %143, i64 %idxprom146.i, !dbg !5281
  %144 = load i32, i32* %arrayidx148.i, align 4, !dbg !5281
  %145 = load i32, i32* %filter.addr.i, align 4, !dbg !5283
  %idxprom149.i = sext i32 %145 to i64, !dbg !5284
  %146 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5284
  %coeffsB150.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %146, i32 0, i32 5, !dbg !5285
  %arrayidx151.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB150.i, i64 0, i64 %idxprom149.i, !dbg !5284
  %arrayidx152.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx151.i, i64 0, i64 4, !dbg !5284
  %147 = load i32, i32* %arrayidx152.i, align 4, !dbg !5284
  %mul153.i = mul nsw i32 %144, %147, !dbg !5286
  %add154.i = add nsw i32 %add144.i, %mul153.i, !dbg !5287
  store i32 %add154.i, i32* %predictionB.i, align 4, !dbg !5288
  %148 = load i32, i32* %decoded.addr.i, align 4, !dbg !5289
  %149 = load i32, i32* %predictionA.i, align 4, !dbg !5290
  %150 = load i32, i32* %predictionB.i, align 4, !dbg !5291
  %shr155.i = ashr i32 %150, 1, !dbg !5292
  %add156.i = add nsw i32 %149, %shr155.i, !dbg !5293
  %shr157.i = ashr i32 %add156.i, 10, !dbg !5294
  %add158.i = add nsw i32 %148, %shr157.i, !dbg !5295
  %151 = load i32, i32* %filter.addr.i, align 4, !dbg !5296
  %idxprom159.i = sext i32 %151 to i64, !dbg !5297
  %152 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5297
  %lastA160.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %152, i32 0, i32 1, !dbg !5298
  %arrayidx161.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA160.i, i64 0, i64 %idxprom159.i, !dbg !5297
  store i32 %add158.i, i32* %arrayidx161.i, align 4, !dbg !5299
  %153 = load i32, i32* %filter.addr.i, align 4, !dbg !5300
  %idxprom162.i = sext i32 %153 to i64, !dbg !5301
  %154 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5301
  %lastA163.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %154, i32 0, i32 1, !dbg !5302
  %arrayidx164.i = getelementptr inbounds [2 x i32], [2 x i32]* %lastA163.i, i64 0, i64 %idxprom162.i, !dbg !5301
  %155 = load i32, i32* %arrayidx164.i, align 4, !dbg !5301
  %156 = load i32, i32* %filter.addr.i, align 4, !dbg !5303
  %idxprom165.i = sext i32 %156 to i64, !dbg !5304
  %157 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5304
  %filterA166.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %157, i32 0, i32 2, !dbg !5305
  %arrayidx167.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA166.i, i64 0, i64 %idxprom165.i, !dbg !5304
  %158 = load i32, i32* %arrayidx167.i, align 4, !dbg !5304
  %mul168.i = mul nsw i32 %158, 31, !dbg !5306
  %shr169.i = ashr i32 %mul168.i, 5, !dbg !5307
  %add170.i = add nsw i32 %155, %shr169.i, !dbg !5308
  %159 = load i32, i32* %filter.addr.i, align 4, !dbg !5309
  %idxprom171.i = sext i32 %159 to i64, !dbg !5310
  %160 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5310
  %filterA172.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %160, i32 0, i32 2, !dbg !5311
  %arrayidx173.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA172.i, i64 0, i64 %idxprom171.i, !dbg !5310
  store i32 %add170.i, i32* %arrayidx173.i, align 4, !dbg !5312
  %161 = load i32, i32* %decoded.addr.i, align 4, !dbg !5313
  %call174.i = call i32 @APESIGN(i32 %161) #8, !dbg !5314
  store i32 %call174.i, i32* %sign.i, align 4, !dbg !5315
  %162 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5316
  %idxprom175.i = sext i32 %162 to i64, !dbg !5317
  %163 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5317
  %buf176.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %163, i32 0, i32 0, !dbg !5318
  %164 = load i32*, i32** %buf176.i, align 8, !dbg !5318
  %arrayidx177.i = getelementptr inbounds i32, i32* %164, i64 %idxprom175.i, !dbg !5317
  %165 = load i32, i32* %arrayidx177.i, align 4, !dbg !5317
  %166 = load i32, i32* %sign.i, align 4, !dbg !5319
  %mul178.i = mul nsw i32 %165, %166, !dbg !5320
  %167 = load i32, i32* %filter.addr.i, align 4, !dbg !5321
  %idxprom179.i = sext i32 %167 to i64, !dbg !5322
  %168 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5322
  %coeffsA180.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %168, i32 0, i32 4, !dbg !5323
  %arrayidx181.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA180.i, i64 0, i64 %idxprom179.i, !dbg !5322
  %arrayidx182.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx181.i, i64 0, i64 0, !dbg !5322
  %169 = load i32, i32* %arrayidx182.i, align 8, !dbg !5324
  %add183.i = add nsw i32 %169, %mul178.i, !dbg !5324
  store i32 %add183.i, i32* %arrayidx182.i, align 8, !dbg !5324
  %170 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5325
  %sub184.i = sub nsw i32 %170, 1, !dbg !5326
  %idxprom185.i = sext i32 %sub184.i to i64, !dbg !5327
  %171 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5327
  %buf186.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %171, i32 0, i32 0, !dbg !5328
  %172 = load i32*, i32** %buf186.i, align 8, !dbg !5328
  %arrayidx187.i = getelementptr inbounds i32, i32* %172, i64 %idxprom185.i, !dbg !5327
  %173 = load i32, i32* %arrayidx187.i, align 4, !dbg !5327
  %174 = load i32, i32* %sign.i, align 4, !dbg !5329
  %mul188.i = mul nsw i32 %173, %174, !dbg !5330
  %175 = load i32, i32* %filter.addr.i, align 4, !dbg !5331
  %idxprom189.i = sext i32 %175 to i64, !dbg !5332
  %176 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5332
  %coeffsA190.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %176, i32 0, i32 4, !dbg !5333
  %arrayidx191.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA190.i, i64 0, i64 %idxprom189.i, !dbg !5332
  %arrayidx192.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx191.i, i64 0, i64 1, !dbg !5332
  %177 = load i32, i32* %arrayidx192.i, align 4, !dbg !5334
  %add193.i = add nsw i32 %177, %mul188.i, !dbg !5334
  store i32 %add193.i, i32* %arrayidx192.i, align 4, !dbg !5334
  %178 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5335
  %sub194.i = sub nsw i32 %178, 2, !dbg !5336
  %idxprom195.i = sext i32 %sub194.i to i64, !dbg !5337
  %179 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5337
  %buf196.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %179, i32 0, i32 0, !dbg !5338
  %180 = load i32*, i32** %buf196.i, align 8, !dbg !5338
  %arrayidx197.i = getelementptr inbounds i32, i32* %180, i64 %idxprom195.i, !dbg !5337
  %181 = load i32, i32* %arrayidx197.i, align 4, !dbg !5337
  %182 = load i32, i32* %sign.i, align 4, !dbg !5339
  %mul198.i = mul nsw i32 %181, %182, !dbg !5340
  %183 = load i32, i32* %filter.addr.i, align 4, !dbg !5341
  %idxprom199.i = sext i32 %183 to i64, !dbg !5342
  %184 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5342
  %coeffsA200.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %184, i32 0, i32 4, !dbg !5343
  %arrayidx201.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA200.i, i64 0, i64 %idxprom199.i, !dbg !5342
  %arrayidx202.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx201.i, i64 0, i64 2, !dbg !5342
  %185 = load i32, i32* %arrayidx202.i, align 8, !dbg !5344
  %add203.i = add nsw i32 %185, %mul198.i, !dbg !5344
  store i32 %add203.i, i32* %arrayidx202.i, align 8, !dbg !5344
  %186 = load i32, i32* %adaptA.addr.i, align 4, !dbg !5345
  %sub204.i = sub nsw i32 %186, 3, !dbg !5346
  %idxprom205.i = sext i32 %sub204.i to i64, !dbg !5347
  %187 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5347
  %buf206.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %187, i32 0, i32 0, !dbg !5348
  %188 = load i32*, i32** %buf206.i, align 8, !dbg !5348
  %arrayidx207.i = getelementptr inbounds i32, i32* %188, i64 %idxprom205.i, !dbg !5347
  %189 = load i32, i32* %arrayidx207.i, align 4, !dbg !5347
  %190 = load i32, i32* %sign.i, align 4, !dbg !5349
  %mul208.i = mul nsw i32 %189, %190, !dbg !5350
  %191 = load i32, i32* %filter.addr.i, align 4, !dbg !5351
  %idxprom209.i = sext i32 %191 to i64, !dbg !5352
  %192 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5352
  %coeffsA210.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %192, i32 0, i32 4, !dbg !5353
  %arrayidx211.i = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA210.i, i64 0, i64 %idxprom209.i, !dbg !5352
  %arrayidx212.i = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx211.i, i64 0, i64 3, !dbg !5352
  %193 = load i32, i32* %arrayidx212.i, align 4, !dbg !5354
  %add213.i = add nsw i32 %193, %mul208.i, !dbg !5354
  store i32 %add213.i, i32* %arrayidx212.i, align 4, !dbg !5354
  %194 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5355
  %idxprom214.i = sext i32 %194 to i64, !dbg !5356
  %195 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5356
  %buf215.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %195, i32 0, i32 0, !dbg !5357
  %196 = load i32*, i32** %buf215.i, align 8, !dbg !5357
  %arrayidx216.i = getelementptr inbounds i32, i32* %196, i64 %idxprom214.i, !dbg !5356
  %197 = load i32, i32* %arrayidx216.i, align 4, !dbg !5356
  %198 = load i32, i32* %sign.i, align 4, !dbg !5358
  %mul217.i = mul nsw i32 %197, %198, !dbg !5359
  %199 = load i32, i32* %filter.addr.i, align 4, !dbg !5360
  %idxprom218.i = sext i32 %199 to i64, !dbg !5361
  %200 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5361
  %coeffsB219.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %200, i32 0, i32 5, !dbg !5362
  %arrayidx220.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB219.i, i64 0, i64 %idxprom218.i, !dbg !5361
  %arrayidx221.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx220.i, i64 0, i64 0, !dbg !5361
  %201 = load i32, i32* %arrayidx221.i, align 4, !dbg !5363
  %add222.i = add nsw i32 %201, %mul217.i, !dbg !5363
  store i32 %add222.i, i32* %arrayidx221.i, align 4, !dbg !5363
  %202 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5364
  %sub223.i = sub nsw i32 %202, 1, !dbg !5365
  %idxprom224.i = sext i32 %sub223.i to i64, !dbg !5366
  %203 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5366
  %buf225.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %203, i32 0, i32 0, !dbg !5367
  %204 = load i32*, i32** %buf225.i, align 8, !dbg !5367
  %arrayidx226.i = getelementptr inbounds i32, i32* %204, i64 %idxprom224.i, !dbg !5366
  %205 = load i32, i32* %arrayidx226.i, align 4, !dbg !5366
  %206 = load i32, i32* %sign.i, align 4, !dbg !5368
  %mul227.i = mul nsw i32 %205, %206, !dbg !5369
  %207 = load i32, i32* %filter.addr.i, align 4, !dbg !5370
  %idxprom228.i = sext i32 %207 to i64, !dbg !5371
  %208 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5371
  %coeffsB229.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %208, i32 0, i32 5, !dbg !5372
  %arrayidx230.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB229.i, i64 0, i64 %idxprom228.i, !dbg !5371
  %arrayidx231.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx230.i, i64 0, i64 1, !dbg !5371
  %209 = load i32, i32* %arrayidx231.i, align 4, !dbg !5373
  %add232.i = add nsw i32 %209, %mul227.i, !dbg !5373
  store i32 %add232.i, i32* %arrayidx231.i, align 4, !dbg !5373
  %210 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5374
  %sub233.i = sub nsw i32 %210, 2, !dbg !5375
  %idxprom234.i = sext i32 %sub233.i to i64, !dbg !5376
  %211 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5376
  %buf235.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %211, i32 0, i32 0, !dbg !5377
  %212 = load i32*, i32** %buf235.i, align 8, !dbg !5377
  %arrayidx236.i = getelementptr inbounds i32, i32* %212, i64 %idxprom234.i, !dbg !5376
  %213 = load i32, i32* %arrayidx236.i, align 4, !dbg !5376
  %214 = load i32, i32* %sign.i, align 4, !dbg !5378
  %mul237.i = mul nsw i32 %213, %214, !dbg !5379
  %215 = load i32, i32* %filter.addr.i, align 4, !dbg !5380
  %idxprom238.i = sext i32 %215 to i64, !dbg !5381
  %216 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5381
  %coeffsB239.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %216, i32 0, i32 5, !dbg !5382
  %arrayidx240.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB239.i, i64 0, i64 %idxprom238.i, !dbg !5381
  %arrayidx241.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx240.i, i64 0, i64 2, !dbg !5381
  %217 = load i32, i32* %arrayidx241.i, align 4, !dbg !5383
  %add242.i = add nsw i32 %217, %mul237.i, !dbg !5383
  store i32 %add242.i, i32* %arrayidx241.i, align 4, !dbg !5383
  %218 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5384
  %sub243.i = sub nsw i32 %218, 3, !dbg !5385
  %idxprom244.i = sext i32 %sub243.i to i64, !dbg !5386
  %219 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5386
  %buf245.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %219, i32 0, i32 0, !dbg !5387
  %220 = load i32*, i32** %buf245.i, align 8, !dbg !5387
  %arrayidx246.i = getelementptr inbounds i32, i32* %220, i64 %idxprom244.i, !dbg !5386
  %221 = load i32, i32* %arrayidx246.i, align 4, !dbg !5386
  %222 = load i32, i32* %sign.i, align 4, !dbg !5388
  %mul247.i = mul nsw i32 %221, %222, !dbg !5389
  %223 = load i32, i32* %filter.addr.i, align 4, !dbg !5390
  %idxprom248.i = sext i32 %223 to i64, !dbg !5391
  %224 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5391
  %coeffsB249.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %224, i32 0, i32 5, !dbg !5392
  %arrayidx250.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB249.i, i64 0, i64 %idxprom248.i, !dbg !5391
  %arrayidx251.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx250.i, i64 0, i64 3, !dbg !5391
  %225 = load i32, i32* %arrayidx251.i, align 4, !dbg !5393
  %add252.i = add nsw i32 %225, %mul247.i, !dbg !5393
  store i32 %add252.i, i32* %arrayidx251.i, align 4, !dbg !5393
  %226 = load i32, i32* %adaptB.addr.i, align 4, !dbg !5394
  %sub253.i = sub nsw i32 %226, 4, !dbg !5395
  %idxprom254.i = sext i32 %sub253.i to i64, !dbg !5396
  %227 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5396
  %buf255.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %227, i32 0, i32 0, !dbg !5397
  %228 = load i32*, i32** %buf255.i, align 8, !dbg !5397
  %arrayidx256.i = getelementptr inbounds i32, i32* %228, i64 %idxprom254.i, !dbg !5396
  %229 = load i32, i32* %arrayidx256.i, align 4, !dbg !5396
  %230 = load i32, i32* %sign.i, align 4, !dbg !5398
  %mul257.i = mul nsw i32 %229, %230, !dbg !5399
  %231 = load i32, i32* %filter.addr.i, align 4, !dbg !5400
  %idxprom258.i = sext i32 %231 to i64, !dbg !5401
  %232 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5401
  %coeffsB259.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %232, i32 0, i32 5, !dbg !5402
  %arrayidx260.i = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB259.i, i64 0, i64 %idxprom258.i, !dbg !5401
  %arrayidx261.i = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx260.i, i64 0, i64 4, !dbg !5401
  %233 = load i32, i32* %arrayidx261.i, align 4, !dbg !5403
  %add262.i = add nsw i32 %233, %mul257.i, !dbg !5403
  store i32 %add262.i, i32* %arrayidx261.i, align 4, !dbg !5403
  %234 = load i32, i32* %filter.addr.i, align 4, !dbg !5404
  %idxprom263.i = sext i32 %234 to i64, !dbg !5405
  %235 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i, align 8, !dbg !5405
  %filterA264.i = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %235, i32 0, i32 2, !dbg !5406
  %arrayidx265.i = getelementptr inbounds [2 x i32], [2 x i32]* %filterA264.i, i64 0, i64 %idxprom263.i, !dbg !5405
  %236 = load i32, i32* %arrayidx265.i, align 4, !dbg !5405
  %237 = load i32*, i32** %decoded0, align 8, !dbg !5407
  store i32 %236, i32* %237, align 4, !dbg !5408
  %238 = load i32*, i32** %decoded0, align 8, !dbg !5409
  %incdec.ptr = getelementptr inbounds i32, i32* %238, i32 1, !dbg !5409
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !5409
  %239 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5410
  %240 = load i32*, i32** %decoded1, align 8, !dbg !5411
  %241 = load i32, i32* %240, align 4, !dbg !5412
  store %struct.APEPredictor* %239, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5413
  store i32 %241, i32* %decoded.addr.i19, align 4, !dbg !5413
  store i32 1, i32* %filter.addr.i20, align 4, !dbg !5413
  store i32 34, i32* %delayA.addr.i21, align 4, !dbg !5413
  store i32 26, i32* %delayB.addr.i22, align 4, !dbg !5413
  store i32 14, i32* %adaptA.addr.i23, align 4, !dbg !5413
  store i32 5, i32* %adaptB.addr.i24, align 4, !dbg !5413
  %242 = load i32, i32* %filter.addr.i20, align 4, !dbg !5414
  %idxprom.i28 = sext i32 %242 to i64, !dbg !5415
  %243 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5415
  %lastA.i29 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %243, i32 0, i32 1, !dbg !5416
  %arrayidx.i30 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA.i29, i64 0, i64 %idxprom.i28, !dbg !5415
  %244 = load i32, i32* %arrayidx.i30, align 4, !dbg !5415
  %245 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5417
  %idxprom1.i31 = sext i32 %245 to i64, !dbg !5418
  %246 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5418
  %buf.i32 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %246, i32 0, i32 0, !dbg !5419
  %247 = load i32*, i32** %buf.i32, align 8, !dbg !5419
  %arrayidx2.i33 = getelementptr inbounds i32, i32* %247, i64 %idxprom1.i31, !dbg !5418
  store i32 %244, i32* %arrayidx2.i33, align 4, !dbg !5420
  %248 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5421
  %idxprom3.i34 = sext i32 %248 to i64, !dbg !5422
  %249 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5422
  %buf4.i35 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %249, i32 0, i32 0, !dbg !5423
  %250 = load i32*, i32** %buf4.i35, align 8, !dbg !5423
  %arrayidx5.i36 = getelementptr inbounds i32, i32* %250, i64 %idxprom3.i34, !dbg !5422
  %251 = load i32, i32* %arrayidx5.i36, align 4, !dbg !5422
  %call.i37 = call i32 @APESIGN(i32 %251) #8, !dbg !5424
  %252 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5425
  %idxprom6.i38 = sext i32 %252 to i64, !dbg !5426
  %253 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5426
  %buf7.i39 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %253, i32 0, i32 0, !dbg !5427
  %254 = load i32*, i32** %buf7.i39, align 8, !dbg !5427
  %arrayidx8.i40 = getelementptr inbounds i32, i32* %254, i64 %idxprom6.i38, !dbg !5426
  store i32 %call.i37, i32* %arrayidx8.i40, align 4, !dbg !5428
  %255 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5429
  %idxprom9.i41 = sext i32 %255 to i64, !dbg !5430
  %256 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5430
  %buf10.i42 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %256, i32 0, i32 0, !dbg !5431
  %257 = load i32*, i32** %buf10.i42, align 8, !dbg !5431
  %arrayidx11.i43 = getelementptr inbounds i32, i32* %257, i64 %idxprom9.i41, !dbg !5430
  %258 = load i32, i32* %arrayidx11.i43, align 4, !dbg !5430
  %259 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5432
  %sub.i44 = sub nsw i32 %259, 1, !dbg !5433
  %idxprom12.i45 = sext i32 %sub.i44 to i64, !dbg !5434
  %260 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5434
  %buf13.i46 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %260, i32 0, i32 0, !dbg !5435
  %261 = load i32*, i32** %buf13.i46, align 8, !dbg !5435
  %arrayidx14.i47 = getelementptr inbounds i32, i32* %261, i64 %idxprom12.i45, !dbg !5434
  %262 = load i32, i32* %arrayidx14.i47, align 4, !dbg !5434
  %sub15.i48 = sub nsw i32 %258, %262, !dbg !5436
  %263 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5437
  %sub16.i49 = sub nsw i32 %263, 1, !dbg !5438
  %idxprom17.i50 = sext i32 %sub16.i49 to i64, !dbg !5439
  %264 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5439
  %buf18.i51 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %264, i32 0, i32 0, !dbg !5440
  %265 = load i32*, i32** %buf18.i51, align 8, !dbg !5440
  %arrayidx19.i52 = getelementptr inbounds i32, i32* %265, i64 %idxprom17.i50, !dbg !5439
  store i32 %sub15.i48, i32* %arrayidx19.i52, align 4, !dbg !5441
  %266 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5442
  %sub20.i53 = sub nsw i32 %266, 1, !dbg !5443
  %idxprom21.i54 = sext i32 %sub20.i53 to i64, !dbg !5444
  %267 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5444
  %buf22.i55 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %267, i32 0, i32 0, !dbg !5445
  %268 = load i32*, i32** %buf22.i55, align 8, !dbg !5445
  %arrayidx23.i56 = getelementptr inbounds i32, i32* %268, i64 %idxprom21.i54, !dbg !5444
  %269 = load i32, i32* %arrayidx23.i56, align 4, !dbg !5444
  %call24.i57 = call i32 @APESIGN(i32 %269) #8, !dbg !5446
  %270 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5447
  %sub25.i58 = sub nsw i32 %270, 1, !dbg !5448
  %idxprom26.i59 = sext i32 %sub25.i58 to i64, !dbg !5449
  %271 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5449
  %buf27.i60 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %271, i32 0, i32 0, !dbg !5450
  %272 = load i32*, i32** %buf27.i60, align 8, !dbg !5450
  %arrayidx28.i61 = getelementptr inbounds i32, i32* %272, i64 %idxprom26.i59, !dbg !5449
  store i32 %call24.i57, i32* %arrayidx28.i61, align 4, !dbg !5451
  %273 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5452
  %idxprom29.i62 = sext i32 %273 to i64, !dbg !5453
  %274 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5453
  %buf30.i63 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %274, i32 0, i32 0, !dbg !5454
  %275 = load i32*, i32** %buf30.i63, align 8, !dbg !5454
  %arrayidx31.i64 = getelementptr inbounds i32, i32* %275, i64 %idxprom29.i62, !dbg !5453
  %276 = load i32, i32* %arrayidx31.i64, align 4, !dbg !5453
  %277 = load i32, i32* %filter.addr.i20, align 4, !dbg !5455
  %idxprom32.i65 = sext i32 %277 to i64, !dbg !5456
  %278 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5456
  %coeffsA.i66 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %278, i32 0, i32 4, !dbg !5457
  %arrayidx33.i67 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA.i66, i64 0, i64 %idxprom32.i65, !dbg !5456
  %arrayidx34.i68 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx33.i67, i64 0, i64 0, !dbg !5456
  %279 = load i32, i32* %arrayidx34.i68, align 8, !dbg !5456
  %mul.i69 = mul nsw i32 %276, %279, !dbg !5458
  %280 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5459
  %sub35.i70 = sub nsw i32 %280, 1, !dbg !5460
  %idxprom36.i71 = sext i32 %sub35.i70 to i64, !dbg !5461
  %281 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5461
  %buf37.i72 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %281, i32 0, i32 0, !dbg !5462
  %282 = load i32*, i32** %buf37.i72, align 8, !dbg !5462
  %arrayidx38.i73 = getelementptr inbounds i32, i32* %282, i64 %idxprom36.i71, !dbg !5461
  %283 = load i32, i32* %arrayidx38.i73, align 4, !dbg !5461
  %284 = load i32, i32* %filter.addr.i20, align 4, !dbg !5463
  %idxprom39.i74 = sext i32 %284 to i64, !dbg !5464
  %285 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5464
  %coeffsA40.i75 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %285, i32 0, i32 4, !dbg !5465
  %arrayidx41.i76 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA40.i75, i64 0, i64 %idxprom39.i74, !dbg !5464
  %arrayidx42.i77 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41.i76, i64 0, i64 1, !dbg !5464
  %286 = load i32, i32* %arrayidx42.i77, align 4, !dbg !5464
  %mul43.i78 = mul nsw i32 %283, %286, !dbg !5466
  %add.i79 = add nsw i32 %mul.i69, %mul43.i78, !dbg !5467
  %287 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5468
  %sub44.i80 = sub nsw i32 %287, 2, !dbg !5469
  %idxprom45.i81 = sext i32 %sub44.i80 to i64, !dbg !5470
  %288 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5470
  %buf46.i82 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %288, i32 0, i32 0, !dbg !5471
  %289 = load i32*, i32** %buf46.i82, align 8, !dbg !5471
  %arrayidx47.i83 = getelementptr inbounds i32, i32* %289, i64 %idxprom45.i81, !dbg !5470
  %290 = load i32, i32* %arrayidx47.i83, align 4, !dbg !5470
  %291 = load i32, i32* %filter.addr.i20, align 4, !dbg !5472
  %idxprom48.i84 = sext i32 %291 to i64, !dbg !5473
  %292 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5473
  %coeffsA49.i85 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %292, i32 0, i32 4, !dbg !5474
  %arrayidx50.i86 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA49.i85, i64 0, i64 %idxprom48.i84, !dbg !5473
  %arrayidx51.i87 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx50.i86, i64 0, i64 2, !dbg !5473
  %293 = load i32, i32* %arrayidx51.i87, align 8, !dbg !5473
  %mul52.i88 = mul nsw i32 %290, %293, !dbg !5475
  %add53.i89 = add nsw i32 %add.i79, %mul52.i88, !dbg !5476
  %294 = load i32, i32* %delayA.addr.i21, align 4, !dbg !5477
  %sub54.i90 = sub nsw i32 %294, 3, !dbg !5478
  %idxprom55.i91 = sext i32 %sub54.i90 to i64, !dbg !5479
  %295 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5479
  %buf56.i92 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %295, i32 0, i32 0, !dbg !5480
  %296 = load i32*, i32** %buf56.i92, align 8, !dbg !5480
  %arrayidx57.i93 = getelementptr inbounds i32, i32* %296, i64 %idxprom55.i91, !dbg !5479
  %297 = load i32, i32* %arrayidx57.i93, align 4, !dbg !5479
  %298 = load i32, i32* %filter.addr.i20, align 4, !dbg !5481
  %idxprom58.i94 = sext i32 %298 to i64, !dbg !5482
  %299 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5482
  %coeffsA59.i95 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %299, i32 0, i32 4, !dbg !5483
  %arrayidx60.i96 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA59.i95, i64 0, i64 %idxprom58.i94, !dbg !5482
  %arrayidx61.i97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx60.i96, i64 0, i64 3, !dbg !5482
  %300 = load i32, i32* %arrayidx61.i97, align 4, !dbg !5482
  %mul62.i98 = mul nsw i32 %297, %300, !dbg !5484
  %add63.i99 = add nsw i32 %add53.i89, %mul62.i98, !dbg !5485
  store i32 %add63.i99, i32* %predictionA.i25, align 4, !dbg !5486
  %301 = load i32, i32* %filter.addr.i20, align 4, !dbg !5487
  %xor.i100 = xor i32 %301, 1, !dbg !5488
  %idxprom64.i101 = sext i32 %xor.i100 to i64, !dbg !5489
  %302 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5489
  %filterA.i102 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %302, i32 0, i32 2, !dbg !5490
  %arrayidx65.i103 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA.i102, i64 0, i64 %idxprom64.i101, !dbg !5489
  %303 = load i32, i32* %arrayidx65.i103, align 4, !dbg !5489
  %304 = load i32, i32* %filter.addr.i20, align 4, !dbg !5491
  %idxprom66.i104 = sext i32 %304 to i64, !dbg !5492
  %305 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5492
  %filterB.i105 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %305, i32 0, i32 3, !dbg !5493
  %arrayidx67.i106 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB.i105, i64 0, i64 %idxprom66.i104, !dbg !5492
  %306 = load i32, i32* %arrayidx67.i106, align 4, !dbg !5492
  %mul68.i107 = mul nsw i32 %306, 31, !dbg !5494
  %shr.i108 = ashr i32 %mul68.i107, 5, !dbg !5495
  %sub69.i109 = sub nsw i32 %303, %shr.i108, !dbg !5496
  %307 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5497
  %idxprom70.i110 = sext i32 %307 to i64, !dbg !5498
  %308 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5498
  %buf71.i111 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %308, i32 0, i32 0, !dbg !5499
  %309 = load i32*, i32** %buf71.i111, align 8, !dbg !5499
  %arrayidx72.i112 = getelementptr inbounds i32, i32* %309, i64 %idxprom70.i110, !dbg !5498
  store i32 %sub69.i109, i32* %arrayidx72.i112, align 4, !dbg !5500
  %310 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5501
  %idxprom73.i113 = sext i32 %310 to i64, !dbg !5502
  %311 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5502
  %buf74.i114 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %311, i32 0, i32 0, !dbg !5503
  %312 = load i32*, i32** %buf74.i114, align 8, !dbg !5503
  %arrayidx75.i115 = getelementptr inbounds i32, i32* %312, i64 %idxprom73.i113, !dbg !5502
  %313 = load i32, i32* %arrayidx75.i115, align 4, !dbg !5502
  %call76.i116 = call i32 @APESIGN(i32 %313) #8, !dbg !5504
  %314 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5505
  %idxprom77.i117 = sext i32 %314 to i64, !dbg !5506
  %315 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5506
  %buf78.i118 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %315, i32 0, i32 0, !dbg !5507
  %316 = load i32*, i32** %buf78.i118, align 8, !dbg !5507
  %arrayidx79.i119 = getelementptr inbounds i32, i32* %316, i64 %idxprom77.i117, !dbg !5506
  store i32 %call76.i116, i32* %arrayidx79.i119, align 4, !dbg !5508
  %317 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5509
  %idxprom80.i120 = sext i32 %317 to i64, !dbg !5510
  %318 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5510
  %buf81.i121 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %318, i32 0, i32 0, !dbg !5511
  %319 = load i32*, i32** %buf81.i121, align 8, !dbg !5511
  %arrayidx82.i122 = getelementptr inbounds i32, i32* %319, i64 %idxprom80.i120, !dbg !5510
  %320 = load i32, i32* %arrayidx82.i122, align 4, !dbg !5510
  %321 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5512
  %sub83.i123 = sub nsw i32 %321, 1, !dbg !5513
  %idxprom84.i124 = sext i32 %sub83.i123 to i64, !dbg !5514
  %322 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5514
  %buf85.i125 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %322, i32 0, i32 0, !dbg !5515
  %323 = load i32*, i32** %buf85.i125, align 8, !dbg !5515
  %arrayidx86.i126 = getelementptr inbounds i32, i32* %323, i64 %idxprom84.i124, !dbg !5514
  %324 = load i32, i32* %arrayidx86.i126, align 4, !dbg !5514
  %sub87.i127 = sub nsw i32 %320, %324, !dbg !5516
  %325 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5517
  %sub88.i128 = sub nsw i32 %325, 1, !dbg !5518
  %idxprom89.i129 = sext i32 %sub88.i128 to i64, !dbg !5519
  %326 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5519
  %buf90.i130 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %326, i32 0, i32 0, !dbg !5520
  %327 = load i32*, i32** %buf90.i130, align 8, !dbg !5520
  %arrayidx91.i131 = getelementptr inbounds i32, i32* %327, i64 %idxprom89.i129, !dbg !5519
  store i32 %sub87.i127, i32* %arrayidx91.i131, align 4, !dbg !5521
  %328 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5522
  %sub92.i132 = sub nsw i32 %328, 1, !dbg !5523
  %idxprom93.i133 = sext i32 %sub92.i132 to i64, !dbg !5524
  %329 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5524
  %buf94.i134 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %329, i32 0, i32 0, !dbg !5525
  %330 = load i32*, i32** %buf94.i134, align 8, !dbg !5525
  %arrayidx95.i135 = getelementptr inbounds i32, i32* %330, i64 %idxprom93.i133, !dbg !5524
  %331 = load i32, i32* %arrayidx95.i135, align 4, !dbg !5524
  %call96.i136 = call i32 @APESIGN(i32 %331) #8, !dbg !5526
  %332 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5527
  %sub97.i137 = sub nsw i32 %332, 1, !dbg !5528
  %idxprom98.i138 = sext i32 %sub97.i137 to i64, !dbg !5529
  %333 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5529
  %buf99.i139 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %333, i32 0, i32 0, !dbg !5530
  %334 = load i32*, i32** %buf99.i139, align 8, !dbg !5530
  %arrayidx100.i140 = getelementptr inbounds i32, i32* %334, i64 %idxprom98.i138, !dbg !5529
  store i32 %call96.i136, i32* %arrayidx100.i140, align 4, !dbg !5531
  %335 = load i32, i32* %filter.addr.i20, align 4, !dbg !5532
  %xor101.i141 = xor i32 %335, 1, !dbg !5533
  %idxprom102.i142 = sext i32 %xor101.i141 to i64, !dbg !5534
  %336 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5534
  %filterA103.i143 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %336, i32 0, i32 2, !dbg !5535
  %arrayidx104.i144 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA103.i143, i64 0, i64 %idxprom102.i142, !dbg !5534
  %337 = load i32, i32* %arrayidx104.i144, align 4, !dbg !5534
  %338 = load i32, i32* %filter.addr.i20, align 4, !dbg !5536
  %idxprom105.i145 = sext i32 %338 to i64, !dbg !5537
  %339 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5537
  %filterB106.i146 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %339, i32 0, i32 3, !dbg !5538
  %arrayidx107.i147 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB106.i146, i64 0, i64 %idxprom105.i145, !dbg !5537
  store i32 %337, i32* %arrayidx107.i147, align 4, !dbg !5539
  %340 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5540
  %idxprom108.i148 = sext i32 %340 to i64, !dbg !5541
  %341 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5541
  %buf109.i149 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %341, i32 0, i32 0, !dbg !5542
  %342 = load i32*, i32** %buf109.i149, align 8, !dbg !5542
  %arrayidx110.i150 = getelementptr inbounds i32, i32* %342, i64 %idxprom108.i148, !dbg !5541
  %343 = load i32, i32* %arrayidx110.i150, align 4, !dbg !5541
  %344 = load i32, i32* %filter.addr.i20, align 4, !dbg !5543
  %idxprom111.i151 = sext i32 %344 to i64, !dbg !5544
  %345 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5544
  %coeffsB.i152 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %345, i32 0, i32 5, !dbg !5545
  %arrayidx112.i153 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB.i152, i64 0, i64 %idxprom111.i151, !dbg !5544
  %arrayidx113.i154 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx112.i153, i64 0, i64 0, !dbg !5544
  %346 = load i32, i32* %arrayidx113.i154, align 4, !dbg !5544
  %mul114.i155 = mul nsw i32 %343, %346, !dbg !5546
  %347 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5547
  %sub115.i156 = sub nsw i32 %347, 1, !dbg !5548
  %idxprom116.i157 = sext i32 %sub115.i156 to i64, !dbg !5549
  %348 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5549
  %buf117.i158 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %348, i32 0, i32 0, !dbg !5550
  %349 = load i32*, i32** %buf117.i158, align 8, !dbg !5550
  %arrayidx118.i159 = getelementptr inbounds i32, i32* %349, i64 %idxprom116.i157, !dbg !5549
  %350 = load i32, i32* %arrayidx118.i159, align 4, !dbg !5549
  %351 = load i32, i32* %filter.addr.i20, align 4, !dbg !5551
  %idxprom119.i160 = sext i32 %351 to i64, !dbg !5552
  %352 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5552
  %coeffsB120.i161 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %352, i32 0, i32 5, !dbg !5553
  %arrayidx121.i162 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB120.i161, i64 0, i64 %idxprom119.i160, !dbg !5552
  %arrayidx122.i163 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx121.i162, i64 0, i64 1, !dbg !5552
  %353 = load i32, i32* %arrayidx122.i163, align 4, !dbg !5552
  %mul123.i164 = mul nsw i32 %350, %353, !dbg !5554
  %add124.i165 = add nsw i32 %mul114.i155, %mul123.i164, !dbg !5555
  %354 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5556
  %sub125.i166 = sub nsw i32 %354, 2, !dbg !5557
  %idxprom126.i167 = sext i32 %sub125.i166 to i64, !dbg !5558
  %355 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5558
  %buf127.i168 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %355, i32 0, i32 0, !dbg !5559
  %356 = load i32*, i32** %buf127.i168, align 8, !dbg !5559
  %arrayidx128.i169 = getelementptr inbounds i32, i32* %356, i64 %idxprom126.i167, !dbg !5558
  %357 = load i32, i32* %arrayidx128.i169, align 4, !dbg !5558
  %358 = load i32, i32* %filter.addr.i20, align 4, !dbg !5560
  %idxprom129.i170 = sext i32 %358 to i64, !dbg !5561
  %359 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5561
  %coeffsB130.i171 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %359, i32 0, i32 5, !dbg !5562
  %arrayidx131.i172 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB130.i171, i64 0, i64 %idxprom129.i170, !dbg !5561
  %arrayidx132.i173 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx131.i172, i64 0, i64 2, !dbg !5561
  %360 = load i32, i32* %arrayidx132.i173, align 4, !dbg !5561
  %mul133.i174 = mul nsw i32 %357, %360, !dbg !5563
  %add134.i175 = add nsw i32 %add124.i165, %mul133.i174, !dbg !5564
  %361 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5565
  %sub135.i176 = sub nsw i32 %361, 3, !dbg !5566
  %idxprom136.i177 = sext i32 %sub135.i176 to i64, !dbg !5567
  %362 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5567
  %buf137.i178 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %362, i32 0, i32 0, !dbg !5568
  %363 = load i32*, i32** %buf137.i178, align 8, !dbg !5568
  %arrayidx138.i179 = getelementptr inbounds i32, i32* %363, i64 %idxprom136.i177, !dbg !5567
  %364 = load i32, i32* %arrayidx138.i179, align 4, !dbg !5567
  %365 = load i32, i32* %filter.addr.i20, align 4, !dbg !5569
  %idxprom139.i180 = sext i32 %365 to i64, !dbg !5570
  %366 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5570
  %coeffsB140.i181 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %366, i32 0, i32 5, !dbg !5571
  %arrayidx141.i182 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB140.i181, i64 0, i64 %idxprom139.i180, !dbg !5570
  %arrayidx142.i183 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx141.i182, i64 0, i64 3, !dbg !5570
  %367 = load i32, i32* %arrayidx142.i183, align 4, !dbg !5570
  %mul143.i184 = mul nsw i32 %364, %367, !dbg !5572
  %add144.i185 = add nsw i32 %add134.i175, %mul143.i184, !dbg !5573
  %368 = load i32, i32* %delayB.addr.i22, align 4, !dbg !5574
  %sub145.i186 = sub nsw i32 %368, 4, !dbg !5575
  %idxprom146.i187 = sext i32 %sub145.i186 to i64, !dbg !5576
  %369 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5576
  %buf147.i188 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %369, i32 0, i32 0, !dbg !5577
  %370 = load i32*, i32** %buf147.i188, align 8, !dbg !5577
  %arrayidx148.i189 = getelementptr inbounds i32, i32* %370, i64 %idxprom146.i187, !dbg !5576
  %371 = load i32, i32* %arrayidx148.i189, align 4, !dbg !5576
  %372 = load i32, i32* %filter.addr.i20, align 4, !dbg !5578
  %idxprom149.i190 = sext i32 %372 to i64, !dbg !5579
  %373 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5579
  %coeffsB150.i191 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %373, i32 0, i32 5, !dbg !5580
  %arrayidx151.i192 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB150.i191, i64 0, i64 %idxprom149.i190, !dbg !5579
  %arrayidx152.i193 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx151.i192, i64 0, i64 4, !dbg !5579
  %374 = load i32, i32* %arrayidx152.i193, align 4, !dbg !5579
  %mul153.i194 = mul nsw i32 %371, %374, !dbg !5581
  %add154.i195 = add nsw i32 %add144.i185, %mul153.i194, !dbg !5582
  store i32 %add154.i195, i32* %predictionB.i26, align 4, !dbg !5583
  %375 = load i32, i32* %decoded.addr.i19, align 4, !dbg !5584
  %376 = load i32, i32* %predictionA.i25, align 4, !dbg !5585
  %377 = load i32, i32* %predictionB.i26, align 4, !dbg !5586
  %shr155.i196 = ashr i32 %377, 1, !dbg !5587
  %add156.i197 = add nsw i32 %376, %shr155.i196, !dbg !5588
  %shr157.i198 = ashr i32 %add156.i197, 10, !dbg !5589
  %add158.i199 = add nsw i32 %375, %shr157.i198, !dbg !5590
  %378 = load i32, i32* %filter.addr.i20, align 4, !dbg !5591
  %idxprom159.i200 = sext i32 %378 to i64, !dbg !5592
  %379 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5592
  %lastA160.i201 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %379, i32 0, i32 1, !dbg !5593
  %arrayidx161.i202 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA160.i201, i64 0, i64 %idxprom159.i200, !dbg !5592
  store i32 %add158.i199, i32* %arrayidx161.i202, align 4, !dbg !5594
  %380 = load i32, i32* %filter.addr.i20, align 4, !dbg !5595
  %idxprom162.i203 = sext i32 %380 to i64, !dbg !5596
  %381 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5596
  %lastA163.i204 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %381, i32 0, i32 1, !dbg !5597
  %arrayidx164.i205 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA163.i204, i64 0, i64 %idxprom162.i203, !dbg !5596
  %382 = load i32, i32* %arrayidx164.i205, align 4, !dbg !5596
  %383 = load i32, i32* %filter.addr.i20, align 4, !dbg !5598
  %idxprom165.i206 = sext i32 %383 to i64, !dbg !5599
  %384 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5599
  %filterA166.i207 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %384, i32 0, i32 2, !dbg !5600
  %arrayidx167.i208 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA166.i207, i64 0, i64 %idxprom165.i206, !dbg !5599
  %385 = load i32, i32* %arrayidx167.i208, align 4, !dbg !5599
  %mul168.i209 = mul nsw i32 %385, 31, !dbg !5601
  %shr169.i210 = ashr i32 %mul168.i209, 5, !dbg !5602
  %add170.i211 = add nsw i32 %382, %shr169.i210, !dbg !5603
  %386 = load i32, i32* %filter.addr.i20, align 4, !dbg !5604
  %idxprom171.i212 = sext i32 %386 to i64, !dbg !5605
  %387 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5605
  %filterA172.i213 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %387, i32 0, i32 2, !dbg !5606
  %arrayidx173.i214 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA172.i213, i64 0, i64 %idxprom171.i212, !dbg !5605
  store i32 %add170.i211, i32* %arrayidx173.i214, align 4, !dbg !5607
  %388 = load i32, i32* %decoded.addr.i19, align 4, !dbg !5608
  %call174.i215 = call i32 @APESIGN(i32 %388) #8, !dbg !5609
  store i32 %call174.i215, i32* %sign.i27, align 4, !dbg !5610
  %389 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5611
  %idxprom175.i216 = sext i32 %389 to i64, !dbg !5612
  %390 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5612
  %buf176.i217 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %390, i32 0, i32 0, !dbg !5613
  %391 = load i32*, i32** %buf176.i217, align 8, !dbg !5613
  %arrayidx177.i218 = getelementptr inbounds i32, i32* %391, i64 %idxprom175.i216, !dbg !5612
  %392 = load i32, i32* %arrayidx177.i218, align 4, !dbg !5612
  %393 = load i32, i32* %sign.i27, align 4, !dbg !5614
  %mul178.i219 = mul nsw i32 %392, %393, !dbg !5615
  %394 = load i32, i32* %filter.addr.i20, align 4, !dbg !5616
  %idxprom179.i220 = sext i32 %394 to i64, !dbg !5617
  %395 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5617
  %coeffsA180.i221 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %395, i32 0, i32 4, !dbg !5618
  %arrayidx181.i222 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA180.i221, i64 0, i64 %idxprom179.i220, !dbg !5617
  %arrayidx182.i223 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx181.i222, i64 0, i64 0, !dbg !5617
  %396 = load i32, i32* %arrayidx182.i223, align 8, !dbg !5619
  %add183.i224 = add nsw i32 %396, %mul178.i219, !dbg !5619
  store i32 %add183.i224, i32* %arrayidx182.i223, align 8, !dbg !5619
  %397 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5620
  %sub184.i225 = sub nsw i32 %397, 1, !dbg !5621
  %idxprom185.i226 = sext i32 %sub184.i225 to i64, !dbg !5622
  %398 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5622
  %buf186.i227 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %398, i32 0, i32 0, !dbg !5623
  %399 = load i32*, i32** %buf186.i227, align 8, !dbg !5623
  %arrayidx187.i228 = getelementptr inbounds i32, i32* %399, i64 %idxprom185.i226, !dbg !5622
  %400 = load i32, i32* %arrayidx187.i228, align 4, !dbg !5622
  %401 = load i32, i32* %sign.i27, align 4, !dbg !5624
  %mul188.i229 = mul nsw i32 %400, %401, !dbg !5625
  %402 = load i32, i32* %filter.addr.i20, align 4, !dbg !5626
  %idxprom189.i230 = sext i32 %402 to i64, !dbg !5627
  %403 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5627
  %coeffsA190.i231 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %403, i32 0, i32 4, !dbg !5628
  %arrayidx191.i232 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA190.i231, i64 0, i64 %idxprom189.i230, !dbg !5627
  %arrayidx192.i233 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx191.i232, i64 0, i64 1, !dbg !5627
  %404 = load i32, i32* %arrayidx192.i233, align 4, !dbg !5629
  %add193.i234 = add nsw i32 %404, %mul188.i229, !dbg !5629
  store i32 %add193.i234, i32* %arrayidx192.i233, align 4, !dbg !5629
  %405 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5630
  %sub194.i235 = sub nsw i32 %405, 2, !dbg !5631
  %idxprom195.i236 = sext i32 %sub194.i235 to i64, !dbg !5632
  %406 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5632
  %buf196.i237 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %406, i32 0, i32 0, !dbg !5633
  %407 = load i32*, i32** %buf196.i237, align 8, !dbg !5633
  %arrayidx197.i238 = getelementptr inbounds i32, i32* %407, i64 %idxprom195.i236, !dbg !5632
  %408 = load i32, i32* %arrayidx197.i238, align 4, !dbg !5632
  %409 = load i32, i32* %sign.i27, align 4, !dbg !5634
  %mul198.i239 = mul nsw i32 %408, %409, !dbg !5635
  %410 = load i32, i32* %filter.addr.i20, align 4, !dbg !5636
  %idxprom199.i240 = sext i32 %410 to i64, !dbg !5637
  %411 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5637
  %coeffsA200.i241 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %411, i32 0, i32 4, !dbg !5638
  %arrayidx201.i242 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA200.i241, i64 0, i64 %idxprom199.i240, !dbg !5637
  %arrayidx202.i243 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx201.i242, i64 0, i64 2, !dbg !5637
  %412 = load i32, i32* %arrayidx202.i243, align 8, !dbg !5639
  %add203.i244 = add nsw i32 %412, %mul198.i239, !dbg !5639
  store i32 %add203.i244, i32* %arrayidx202.i243, align 8, !dbg !5639
  %413 = load i32, i32* %adaptA.addr.i23, align 4, !dbg !5640
  %sub204.i245 = sub nsw i32 %413, 3, !dbg !5641
  %idxprom205.i246 = sext i32 %sub204.i245 to i64, !dbg !5642
  %414 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5642
  %buf206.i247 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %414, i32 0, i32 0, !dbg !5643
  %415 = load i32*, i32** %buf206.i247, align 8, !dbg !5643
  %arrayidx207.i248 = getelementptr inbounds i32, i32* %415, i64 %idxprom205.i246, !dbg !5642
  %416 = load i32, i32* %arrayidx207.i248, align 4, !dbg !5642
  %417 = load i32, i32* %sign.i27, align 4, !dbg !5644
  %mul208.i249 = mul nsw i32 %416, %417, !dbg !5645
  %418 = load i32, i32* %filter.addr.i20, align 4, !dbg !5646
  %idxprom209.i250 = sext i32 %418 to i64, !dbg !5647
  %419 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5647
  %coeffsA210.i251 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %419, i32 0, i32 4, !dbg !5648
  %arrayidx211.i252 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA210.i251, i64 0, i64 %idxprom209.i250, !dbg !5647
  %arrayidx212.i253 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx211.i252, i64 0, i64 3, !dbg !5647
  %420 = load i32, i32* %arrayidx212.i253, align 4, !dbg !5649
  %add213.i254 = add nsw i32 %420, %mul208.i249, !dbg !5649
  store i32 %add213.i254, i32* %arrayidx212.i253, align 4, !dbg !5649
  %421 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5650
  %idxprom214.i255 = sext i32 %421 to i64, !dbg !5651
  %422 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5651
  %buf215.i256 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %422, i32 0, i32 0, !dbg !5652
  %423 = load i32*, i32** %buf215.i256, align 8, !dbg !5652
  %arrayidx216.i257 = getelementptr inbounds i32, i32* %423, i64 %idxprom214.i255, !dbg !5651
  %424 = load i32, i32* %arrayidx216.i257, align 4, !dbg !5651
  %425 = load i32, i32* %sign.i27, align 4, !dbg !5653
  %mul217.i258 = mul nsw i32 %424, %425, !dbg !5654
  %426 = load i32, i32* %filter.addr.i20, align 4, !dbg !5655
  %idxprom218.i259 = sext i32 %426 to i64, !dbg !5656
  %427 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5656
  %coeffsB219.i260 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %427, i32 0, i32 5, !dbg !5657
  %arrayidx220.i261 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB219.i260, i64 0, i64 %idxprom218.i259, !dbg !5656
  %arrayidx221.i262 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx220.i261, i64 0, i64 0, !dbg !5656
  %428 = load i32, i32* %arrayidx221.i262, align 4, !dbg !5658
  %add222.i263 = add nsw i32 %428, %mul217.i258, !dbg !5658
  store i32 %add222.i263, i32* %arrayidx221.i262, align 4, !dbg !5658
  %429 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5659
  %sub223.i264 = sub nsw i32 %429, 1, !dbg !5660
  %idxprom224.i265 = sext i32 %sub223.i264 to i64, !dbg !5661
  %430 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5661
  %buf225.i266 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %430, i32 0, i32 0, !dbg !5662
  %431 = load i32*, i32** %buf225.i266, align 8, !dbg !5662
  %arrayidx226.i267 = getelementptr inbounds i32, i32* %431, i64 %idxprom224.i265, !dbg !5661
  %432 = load i32, i32* %arrayidx226.i267, align 4, !dbg !5661
  %433 = load i32, i32* %sign.i27, align 4, !dbg !5663
  %mul227.i268 = mul nsw i32 %432, %433, !dbg !5664
  %434 = load i32, i32* %filter.addr.i20, align 4, !dbg !5665
  %idxprom228.i269 = sext i32 %434 to i64, !dbg !5666
  %435 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5666
  %coeffsB229.i270 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %435, i32 0, i32 5, !dbg !5667
  %arrayidx230.i271 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB229.i270, i64 0, i64 %idxprom228.i269, !dbg !5666
  %arrayidx231.i272 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx230.i271, i64 0, i64 1, !dbg !5666
  %436 = load i32, i32* %arrayidx231.i272, align 4, !dbg !5668
  %add232.i273 = add nsw i32 %436, %mul227.i268, !dbg !5668
  store i32 %add232.i273, i32* %arrayidx231.i272, align 4, !dbg !5668
  %437 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5669
  %sub233.i274 = sub nsw i32 %437, 2, !dbg !5670
  %idxprom234.i275 = sext i32 %sub233.i274 to i64, !dbg !5671
  %438 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5671
  %buf235.i276 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %438, i32 0, i32 0, !dbg !5672
  %439 = load i32*, i32** %buf235.i276, align 8, !dbg !5672
  %arrayidx236.i277 = getelementptr inbounds i32, i32* %439, i64 %idxprom234.i275, !dbg !5671
  %440 = load i32, i32* %arrayidx236.i277, align 4, !dbg !5671
  %441 = load i32, i32* %sign.i27, align 4, !dbg !5673
  %mul237.i278 = mul nsw i32 %440, %441, !dbg !5674
  %442 = load i32, i32* %filter.addr.i20, align 4, !dbg !5675
  %idxprom238.i279 = sext i32 %442 to i64, !dbg !5676
  %443 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5676
  %coeffsB239.i280 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %443, i32 0, i32 5, !dbg !5677
  %arrayidx240.i281 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB239.i280, i64 0, i64 %idxprom238.i279, !dbg !5676
  %arrayidx241.i282 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx240.i281, i64 0, i64 2, !dbg !5676
  %444 = load i32, i32* %arrayidx241.i282, align 4, !dbg !5678
  %add242.i283 = add nsw i32 %444, %mul237.i278, !dbg !5678
  store i32 %add242.i283, i32* %arrayidx241.i282, align 4, !dbg !5678
  %445 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5679
  %sub243.i284 = sub nsw i32 %445, 3, !dbg !5680
  %idxprom244.i285 = sext i32 %sub243.i284 to i64, !dbg !5681
  %446 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5681
  %buf245.i286 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %446, i32 0, i32 0, !dbg !5682
  %447 = load i32*, i32** %buf245.i286, align 8, !dbg !5682
  %arrayidx246.i287 = getelementptr inbounds i32, i32* %447, i64 %idxprom244.i285, !dbg !5681
  %448 = load i32, i32* %arrayidx246.i287, align 4, !dbg !5681
  %449 = load i32, i32* %sign.i27, align 4, !dbg !5683
  %mul247.i288 = mul nsw i32 %448, %449, !dbg !5684
  %450 = load i32, i32* %filter.addr.i20, align 4, !dbg !5685
  %idxprom248.i289 = sext i32 %450 to i64, !dbg !5686
  %451 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5686
  %coeffsB249.i290 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %451, i32 0, i32 5, !dbg !5687
  %arrayidx250.i291 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB249.i290, i64 0, i64 %idxprom248.i289, !dbg !5686
  %arrayidx251.i292 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx250.i291, i64 0, i64 3, !dbg !5686
  %452 = load i32, i32* %arrayidx251.i292, align 4, !dbg !5688
  %add252.i293 = add nsw i32 %452, %mul247.i288, !dbg !5688
  store i32 %add252.i293, i32* %arrayidx251.i292, align 4, !dbg !5688
  %453 = load i32, i32* %adaptB.addr.i24, align 4, !dbg !5689
  %sub253.i294 = sub nsw i32 %453, 4, !dbg !5690
  %idxprom254.i295 = sext i32 %sub253.i294 to i64, !dbg !5691
  %454 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5691
  %buf255.i296 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %454, i32 0, i32 0, !dbg !5692
  %455 = load i32*, i32** %buf255.i296, align 8, !dbg !5692
  %arrayidx256.i297 = getelementptr inbounds i32, i32* %455, i64 %idxprom254.i295, !dbg !5691
  %456 = load i32, i32* %arrayidx256.i297, align 4, !dbg !5691
  %457 = load i32, i32* %sign.i27, align 4, !dbg !5693
  %mul257.i298 = mul nsw i32 %456, %457, !dbg !5694
  %458 = load i32, i32* %filter.addr.i20, align 4, !dbg !5695
  %idxprom258.i299 = sext i32 %458 to i64, !dbg !5696
  %459 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5696
  %coeffsB259.i300 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %459, i32 0, i32 5, !dbg !5697
  %arrayidx260.i301 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB259.i300, i64 0, i64 %idxprom258.i299, !dbg !5696
  %arrayidx261.i302 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx260.i301, i64 0, i64 4, !dbg !5696
  %460 = load i32, i32* %arrayidx261.i302, align 4, !dbg !5698
  %add262.i303 = add nsw i32 %460, %mul257.i298, !dbg !5698
  store i32 %add262.i303, i32* %arrayidx261.i302, align 4, !dbg !5698
  %461 = load i32, i32* %filter.addr.i20, align 4, !dbg !5699
  %idxprom263.i304 = sext i32 %461 to i64, !dbg !5700
  %462 = load %struct.APEPredictor*, %struct.APEPredictor** %p.addr.i18, align 8, !dbg !5700
  %filterA264.i305 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %462, i32 0, i32 2, !dbg !5701
  %arrayidx265.i306 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA264.i305, i64 0, i64 %idxprom263.i304, !dbg !5700
  %463 = load i32, i32* %arrayidx265.i306, align 4, !dbg !5700
  %464 = load i32*, i32** %decoded1, align 8, !dbg !5702
  store i32 %463, i32* %464, align 4, !dbg !5703
  %465 = load i32*, i32** %decoded1, align 8, !dbg !5704
  %incdec.ptr9 = getelementptr inbounds i32, i32* %465, i32 1, !dbg !5704
  store i32* %incdec.ptr9, i32** %decoded1, align 8, !dbg !5704
  %466 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5705
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %466, i32 0, i32 0, !dbg !5706
  %467 = load i32*, i32** %buf, align 8, !dbg !5707
  %incdec.ptr10 = getelementptr inbounds i32, i32* %467, i32 1, !dbg !5707
  store i32* %incdec.ptr10, i32** %buf, align 8, !dbg !5707
  %468 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5708
  %buf11 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %468, i32 0, i32 0, !dbg !5710
  %469 = load i32*, i32** %buf11, align 8, !dbg !5710
  %470 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5711
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %470, i32 0, i32 6, !dbg !5712
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !5711
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 512, !dbg !5713
  %cmp = icmp eq i32* %469, %add.ptr, !dbg !5714
  br i1 %cmp, label %if.then, label %if.end, !dbg !5715

if.then:                                          ; preds = %while.body
  %471 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5716
  %historybuffer12 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %471, i32 0, i32 6, !dbg !5718
  %arraydecay13 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer12, i32 0, i32 0, !dbg !5719
  %472 = bitcast i32* %arraydecay13 to i8*, !dbg !5719
  %473 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5720
  %buf14 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %473, i32 0, i32 0, !dbg !5721
  %474 = load i32*, i32** %buf14, align 8, !dbg !5721
  %475 = bitcast i32* %474 to i8*, !dbg !5719
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %472, i8* %475, i64 200, i32 4, i1 false), !dbg !5719
  %476 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5722
  %historybuffer15 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %476, i32 0, i32 6, !dbg !5723
  %arraydecay16 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer15, i32 0, i32 0, !dbg !5722
  %477 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !5724
  %buf17 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %477, i32 0, i32 0, !dbg !5725
  store i32* %arraydecay16, i32** %buf17, align 8, !dbg !5726
  br label %if.end, !dbg !5727

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !5728, !llvm.loop !5730

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5731
}

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #2

declare void @ff_llauddsp_init(%struct.LLAudDSPContext*) #2

; Function Attrs: nounwind uwtable
define internal void @decode_array_0000(%struct.APEContext* %ctx, %struct.GetBitContext* %gb, i32* %out, %struct.APERice* %rice, i32 %blockstodecode) #1 !dbg !5732 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %out.addr = alloca i32*, align 8
  %rice.addr = alloca %struct.APERice*, align 8
  %blockstodecode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ksummax = alloca i32, align 4
  %ksummin = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !5737, metadata !1747), !dbg !5738
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5739, metadata !1747), !dbg !5740
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !5741, metadata !1747), !dbg !5742
  store %struct.APERice* %rice, %struct.APERice** %rice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APERice** %rice.addr, metadata !5743, metadata !1747), !dbg !5744
  store i32 %blockstodecode, i32* %blockstodecode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockstodecode.addr, metadata !5745, metadata !1747), !dbg !5746
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5747, metadata !1747), !dbg !5748
  call void @llvm.dbg.declare(metadata i32* %ksummax, metadata !5749, metadata !1747), !dbg !5750
  call void @llvm.dbg.declare(metadata i32* %ksummin, metadata !5751, metadata !1747), !dbg !5752
  %0 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5753
  %ksum = getelementptr inbounds %struct.APERice, %struct.APERice* %0, i32 0, i32 1, !dbg !5754
  store i32 0, i32* %ksum, align 4, !dbg !5755
  store i32 0, i32* %i, align 4, !dbg !5756
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5759
  %2 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5762
  %cmp = icmp sgt i32 %2, 5, !dbg !5763
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5764

cond.true:                                        ; preds = %for.cond
  br label %cond.end, !dbg !5765

cond.false:                                       ; preds = %for.cond
  %3 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5767
  br label %cond.end, !dbg !5769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 5, %cond.true ], [ %3, %cond.false ], !dbg !5770
  %cmp1 = icmp slt i32 %1, %cond, !dbg !5772
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5773

for.body:                                         ; preds = %cond.end
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5774
  %gb2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 23, !dbg !5776
  %call = call i32 @get_rice_ook(%struct.GetBitContext* %gb2, i32 10), !dbg !5777
  %5 = load i32, i32* %i, align 4, !dbg !5778
  %idxprom = sext i32 %5 to i64, !dbg !5779
  %6 = load i32*, i32** %out.addr, align 8, !dbg !5779
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !5779
  store i32 %call, i32* %arrayidx, align 4, !dbg !5780
  %7 = load i32, i32* %i, align 4, !dbg !5781
  %idxprom3 = sext i32 %7 to i64, !dbg !5782
  %8 = load i32*, i32** %out.addr, align 8, !dbg !5782
  %arrayidx4 = getelementptr inbounds i32, i32* %8, i64 %idxprom3, !dbg !5782
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !5782
  %10 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5783
  %ksum5 = getelementptr inbounds %struct.APERice, %struct.APERice* %10, i32 0, i32 1, !dbg !5784
  %11 = load i32, i32* %ksum5, align 4, !dbg !5785
  %add = add i32 %11, %9, !dbg !5785
  store i32 %add, i32* %ksum5, align 4, !dbg !5785
  br label %for.inc, !dbg !5786

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !5787
  %inc = add nsw i32 %12, 1, !dbg !5787
  store i32 %inc, i32* %i, align 4, !dbg !5787
  br label %for.cond, !dbg !5789, !llvm.loop !5790

for.end:                                          ; preds = %cond.end
  %13 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5792
  %ksum6 = getelementptr inbounds %struct.APERice, %struct.APERice* %13, i32 0, i32 1, !dbg !5793
  %14 = load i32, i32* %ksum6, align 4, !dbg !5793
  %div = udiv i32 %14, 10, !dbg !5794
  %or = or i32 %div, 1, !dbg !5795
  %15 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5796
  %sub = sub nsw i32 31, %15, !dbg !5797
  %add7 = add nsw i32 %sub, 1, !dbg !5798
  %16 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5799
  %k = getelementptr inbounds %struct.APERice, %struct.APERice* %16, i32 0, i32 0, !dbg !5800
  store i32 %add7, i32* %k, align 4, !dbg !5801
  %17 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5802
  %k8 = getelementptr inbounds %struct.APERice, %struct.APERice* %17, i32 0, i32 0, !dbg !5804
  %18 = load i32, i32* %k8, align 4, !dbg !5804
  %cmp9 = icmp uge i32 %18, 24, !dbg !5805
  br i1 %cmp9, label %if.then, label %if.end, !dbg !5806

if.then:                                          ; preds = %for.end
  br label %for.end112, !dbg !5807

if.end:                                           ; preds = %for.end
  br label %for.cond10, !dbg !5808

for.cond10:                                       ; preds = %for.inc38, %if.end
  %19 = load i32, i32* %i, align 4, !dbg !5809
  %20 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5813
  %cmp11 = icmp sgt i32 %20, 64, !dbg !5814
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !5815

cond.true12:                                      ; preds = %for.cond10
  br label %cond.end14, !dbg !5816

cond.false13:                                     ; preds = %for.cond10
  %21 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5818
  br label %cond.end14, !dbg !5820

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 64, %cond.true12 ], [ %21, %cond.false13 ], !dbg !5821
  %cmp16 = icmp slt i32 %19, %cond15, !dbg !5823
  br i1 %cmp16, label %for.body17, label %for.end40, !dbg !5824

for.body17:                                       ; preds = %cond.end14
  %22 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5825
  %gb18 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %22, i32 0, i32 23, !dbg !5827
  %23 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5828
  %k19 = getelementptr inbounds %struct.APERice, %struct.APERice* %23, i32 0, i32 0, !dbg !5829
  %24 = load i32, i32* %k19, align 4, !dbg !5829
  %call20 = call i32 @get_rice_ook(%struct.GetBitContext* %gb18, i32 %24), !dbg !5830
  %25 = load i32, i32* %i, align 4, !dbg !5831
  %idxprom21 = sext i32 %25 to i64, !dbg !5832
  %26 = load i32*, i32** %out.addr, align 8, !dbg !5832
  %arrayidx22 = getelementptr inbounds i32, i32* %26, i64 %idxprom21, !dbg !5832
  store i32 %call20, i32* %arrayidx22, align 4, !dbg !5833
  %27 = load i32, i32* %i, align 4, !dbg !5834
  %idxprom23 = sext i32 %27 to i64, !dbg !5835
  %28 = load i32*, i32** %out.addr, align 8, !dbg !5835
  %arrayidx24 = getelementptr inbounds i32, i32* %28, i64 %idxprom23, !dbg !5835
  %29 = load i32, i32* %arrayidx24, align 4, !dbg !5835
  %30 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5836
  %ksum25 = getelementptr inbounds %struct.APERice, %struct.APERice* %30, i32 0, i32 1, !dbg !5837
  %31 = load i32, i32* %ksum25, align 4, !dbg !5838
  %add26 = add i32 %31, %29, !dbg !5838
  store i32 %add26, i32* %ksum25, align 4, !dbg !5838
  %32 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5839
  %ksum27 = getelementptr inbounds %struct.APERice, %struct.APERice* %32, i32 0, i32 1, !dbg !5840
  %33 = load i32, i32* %ksum27, align 4, !dbg !5840
  %34 = load i32, i32* %i, align 4, !dbg !5841
  %add28 = add nsw i32 %34, 1, !dbg !5842
  %mul = mul nsw i32 %add28, 2, !dbg !5843
  %div29 = udiv i32 %33, %mul, !dbg !5844
  %or30 = or i32 %div29, 1, !dbg !5845
  %35 = call i32 @llvm.ctlz.i32(i32 %or30, i1 true), !dbg !5846
  %sub31 = sub nsw i32 31, %35, !dbg !5847
  %add32 = add nsw i32 %sub31, 1, !dbg !5848
  %36 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5849
  %k33 = getelementptr inbounds %struct.APERice, %struct.APERice* %36, i32 0, i32 0, !dbg !5850
  store i32 %add32, i32* %k33, align 4, !dbg !5851
  %37 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5852
  %k34 = getelementptr inbounds %struct.APERice, %struct.APERice* %37, i32 0, i32 0, !dbg !5854
  %38 = load i32, i32* %k34, align 4, !dbg !5854
  %cmp35 = icmp uge i32 %38, 24, !dbg !5855
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !5856

if.then36:                                        ; preds = %for.body17
  br label %for.end112, !dbg !5857

if.end37:                                         ; preds = %for.body17
  br label %for.inc38, !dbg !5858

for.inc38:                                        ; preds = %if.end37
  %39 = load i32, i32* %i, align 4, !dbg !5859
  %inc39 = add nsw i32 %39, 1, !dbg !5859
  store i32 %inc39, i32* %i, align 4, !dbg !5859
  br label %for.cond10, !dbg !5861, !llvm.loop !5862

for.end40:                                        ; preds = %cond.end14
  %40 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5863
  %k41 = getelementptr inbounds %struct.APERice, %struct.APERice* %40, i32 0, i32 0, !dbg !5864
  %41 = load i32, i32* %k41, align 4, !dbg !5864
  %add42 = add i32 %41, 7, !dbg !5865
  %shl = shl i32 1, %add42, !dbg !5866
  store i32 %shl, i32* %ksummax, align 4, !dbg !5867
  %42 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5868
  %k43 = getelementptr inbounds %struct.APERice, %struct.APERice* %42, i32 0, i32 0, !dbg !5869
  %43 = load i32, i32* %k43, align 4, !dbg !5869
  %tobool = icmp ne i32 %43, 0, !dbg !5868
  br i1 %tobool, label %cond.true44, label %cond.false48, !dbg !5868

cond.true44:                                      ; preds = %for.end40
  %44 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5870
  %k45 = getelementptr inbounds %struct.APERice, %struct.APERice* %44, i32 0, i32 0, !dbg !5872
  %45 = load i32, i32* %k45, align 4, !dbg !5872
  %add46 = add i32 %45, 6, !dbg !5873
  %shl47 = shl i32 1, %add46, !dbg !5874
  br label %cond.end49, !dbg !5875

cond.false48:                                     ; preds = %for.end40
  br label %cond.end49, !dbg !5876

cond.end49:                                       ; preds = %cond.false48, %cond.true44
  %cond50 = phi i32 [ %shl47, %cond.true44 ], [ 0, %cond.false48 ], !dbg !5878
  store i32 %cond50, i32* %ksummin, align 4, !dbg !5880
  br label %for.cond51, !dbg !5881

for.cond51:                                       ; preds = %for.inc95, %cond.end49
  %46 = load i32, i32* %i, align 4, !dbg !5882
  %47 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5886
  %cmp52 = icmp slt i32 %46, %47, !dbg !5887
  br i1 %cmp52, label %for.body53, label %for.end97, !dbg !5888

for.body53:                                       ; preds = %for.cond51
  %48 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !5889
  %gb54 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %48, i32 0, i32 23, !dbg !5891
  %49 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5892
  %k55 = getelementptr inbounds %struct.APERice, %struct.APERice* %49, i32 0, i32 0, !dbg !5893
  %50 = load i32, i32* %k55, align 4, !dbg !5893
  %call56 = call i32 @get_rice_ook(%struct.GetBitContext* %gb54, i32 %50), !dbg !5894
  %51 = load i32, i32* %i, align 4, !dbg !5895
  %idxprom57 = sext i32 %51 to i64, !dbg !5896
  %52 = load i32*, i32** %out.addr, align 8, !dbg !5896
  %arrayidx58 = getelementptr inbounds i32, i32* %52, i64 %idxprom57, !dbg !5896
  store i32 %call56, i32* %arrayidx58, align 4, !dbg !5897
  %53 = load i32, i32* %i, align 4, !dbg !5898
  %idxprom59 = sext i32 %53 to i64, !dbg !5899
  %54 = load i32*, i32** %out.addr, align 8, !dbg !5899
  %arrayidx60 = getelementptr inbounds i32, i32* %54, i64 %idxprom59, !dbg !5899
  %55 = load i32, i32* %arrayidx60, align 4, !dbg !5899
  %56 = load i32, i32* %i, align 4, !dbg !5900
  %sub61 = sub nsw i32 %56, 64, !dbg !5901
  %idxprom62 = sext i32 %sub61 to i64, !dbg !5902
  %57 = load i32*, i32** %out.addr, align 8, !dbg !5902
  %arrayidx63 = getelementptr inbounds i32, i32* %57, i64 %idxprom62, !dbg !5902
  %58 = load i32, i32* %arrayidx63, align 4, !dbg !5902
  %sub64 = sub nsw i32 %55, %58, !dbg !5903
  %59 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5904
  %ksum65 = getelementptr inbounds %struct.APERice, %struct.APERice* %59, i32 0, i32 1, !dbg !5905
  %60 = load i32, i32* %ksum65, align 4, !dbg !5906
  %add66 = add i32 %60, %sub64, !dbg !5906
  store i32 %add66, i32* %ksum65, align 4, !dbg !5906
  br label %while.cond, !dbg !5907

while.cond:                                       ; preds = %cond.end74, %for.body53
  %61 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5908
  %ksum67 = getelementptr inbounds %struct.APERice, %struct.APERice* %61, i32 0, i32 1, !dbg !5910
  %62 = load i32, i32* %ksum67, align 4, !dbg !5910
  %63 = load i32, i32* %ksummin, align 4, !dbg !5911
  %cmp68 = icmp ult i32 %62, %63, !dbg !5912
  br i1 %cmp68, label %while.body, label %while.end, !dbg !5913

while.body:                                       ; preds = %while.cond
  %64 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5914
  %k69 = getelementptr inbounds %struct.APERice, %struct.APERice* %64, i32 0, i32 0, !dbg !5916
  %65 = load i32, i32* %k69, align 4, !dbg !5917
  %dec = add i32 %65, -1, !dbg !5917
  store i32 %dec, i32* %k69, align 4, !dbg !5917
  %66 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5918
  %k70 = getelementptr inbounds %struct.APERice, %struct.APERice* %66, i32 0, i32 0, !dbg !5919
  %67 = load i32, i32* %k70, align 4, !dbg !5919
  %tobool71 = icmp ne i32 %67, 0, !dbg !5918
  br i1 %tobool71, label %cond.true72, label %cond.false73, !dbg !5918

cond.true72:                                      ; preds = %while.body
  %68 = load i32, i32* %ksummin, align 4, !dbg !5920
  %shr = ashr i32 %68, 1, !dbg !5922
  br label %cond.end74, !dbg !5923

cond.false73:                                     ; preds = %while.body
  br label %cond.end74, !dbg !5924

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %shr, %cond.true72 ], [ 0, %cond.false73 ], !dbg !5926
  store i32 %cond75, i32* %ksummin, align 4, !dbg !5928
  %69 = load i32, i32* %ksummax, align 4, !dbg !5929
  %shr76 = ashr i32 %69, 1, !dbg !5929
  store i32 %shr76, i32* %ksummax, align 4, !dbg !5929
  br label %while.cond, !dbg !5930, !llvm.loop !5932

while.end:                                        ; preds = %while.cond
  br label %while.cond77, !dbg !5933

while.cond77:                                     ; preds = %cond.end92, %while.end
  %70 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5934
  %ksum78 = getelementptr inbounds %struct.APERice, %struct.APERice* %70, i32 0, i32 1, !dbg !5935
  %71 = load i32, i32* %ksum78, align 4, !dbg !5935
  %72 = load i32, i32* %ksummax, align 4, !dbg !5936
  %cmp79 = icmp uge i32 %71, %72, !dbg !5937
  br i1 %cmp79, label %while.body80, label %while.end94, !dbg !5938

while.body80:                                     ; preds = %while.cond77
  %73 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5939
  %k81 = getelementptr inbounds %struct.APERice, %struct.APERice* %73, i32 0, i32 0, !dbg !5941
  %74 = load i32, i32* %k81, align 4, !dbg !5942
  %inc82 = add i32 %74, 1, !dbg !5942
  store i32 %inc82, i32* %k81, align 4, !dbg !5942
  %75 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !5943
  %k83 = getelementptr inbounds %struct.APERice, %struct.APERice* %75, i32 0, i32 0, !dbg !5945
  %76 = load i32, i32* %k83, align 4, !dbg !5945
  %cmp84 = icmp ugt i32 %76, 24, !dbg !5946
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !5947

if.then85:                                        ; preds = %while.body80
  br label %for.end112, !dbg !5948

if.end86:                                         ; preds = %while.body80
  %77 = load i32, i32* %ksummax, align 4, !dbg !5949
  %shl87 = shl i32 %77, 1, !dbg !5949
  store i32 %shl87, i32* %ksummax, align 4, !dbg !5949
  %78 = load i32, i32* %ksummin, align 4, !dbg !5950
  %tobool88 = icmp ne i32 %78, 0, !dbg !5950
  br i1 %tobool88, label %cond.true89, label %cond.false91, !dbg !5950

cond.true89:                                      ; preds = %if.end86
  %79 = load i32, i32* %ksummin, align 4, !dbg !5951
  %shl90 = shl i32 %79, 1, !dbg !5953
  br label %cond.end92, !dbg !5954

cond.false91:                                     ; preds = %if.end86
  br label %cond.end92, !dbg !5955

cond.end92:                                       ; preds = %cond.false91, %cond.true89
  %cond93 = phi i32 [ %shl90, %cond.true89 ], [ 128, %cond.false91 ], !dbg !5957
  store i32 %cond93, i32* %ksummin, align 4, !dbg !5959
  br label %while.cond77, !dbg !5960, !llvm.loop !5961

while.end94:                                      ; preds = %while.cond77
  br label %for.inc95, !dbg !5962

for.inc95:                                        ; preds = %while.end94
  %80 = load i32, i32* %i, align 4, !dbg !5963
  %inc96 = add nsw i32 %80, 1, !dbg !5963
  store i32 %inc96, i32* %i, align 4, !dbg !5963
  br label %for.cond51, !dbg !5965, !llvm.loop !5966

for.end97:                                        ; preds = %for.cond51
  store i32 0, i32* %i, align 4, !dbg !5967
  br label %for.cond98, !dbg !5969

for.cond98:                                       ; preds = %for.inc110, %for.end97
  %81 = load i32, i32* %i, align 4, !dbg !5970
  %82 = load i32, i32* %blockstodecode.addr, align 4, !dbg !5973
  %cmp99 = icmp slt i32 %81, %82, !dbg !5974
  br i1 %cmp99, label %for.body100, label %for.end112, !dbg !5975

for.body100:                                      ; preds = %for.cond98
  %83 = load i32, i32* %i, align 4, !dbg !5976
  %idxprom101 = sext i32 %83 to i64, !dbg !5977
  %84 = load i32*, i32** %out.addr, align 8, !dbg !5977
  %arrayidx102 = getelementptr inbounds i32, i32* %84, i64 %idxprom101, !dbg !5977
  %85 = load i32, i32* %arrayidx102, align 4, !dbg !5977
  %shr103 = ashr i32 %85, 1, !dbg !5978
  %86 = load i32, i32* %i, align 4, !dbg !5979
  %idxprom104 = sext i32 %86 to i64, !dbg !5980
  %87 = load i32*, i32** %out.addr, align 8, !dbg !5980
  %arrayidx105 = getelementptr inbounds i32, i32* %87, i64 %idxprom104, !dbg !5980
  %88 = load i32, i32* %arrayidx105, align 4, !dbg !5980
  %and = and i32 %88, 1, !dbg !5981
  %sub106 = sub nsw i32 %and, 1, !dbg !5982
  %xor = xor i32 %shr103, %sub106, !dbg !5983
  %add107 = add nsw i32 %xor, 1, !dbg !5984
  %89 = load i32, i32* %i, align 4, !dbg !5985
  %idxprom108 = sext i32 %89 to i64, !dbg !5986
  %90 = load i32*, i32** %out.addr, align 8, !dbg !5986
  %arrayidx109 = getelementptr inbounds i32, i32* %90, i64 %idxprom108, !dbg !5986
  store i32 %add107, i32* %arrayidx109, align 4, !dbg !5987
  br label %for.inc110, !dbg !5986

for.inc110:                                       ; preds = %for.body100
  %91 = load i32, i32* %i, align 4, !dbg !5988
  %inc111 = add nsw i32 %91, 1, !dbg !5988
  store i32 %inc111, i32* %i, align 4, !dbg !5988
  br label %for.cond98, !dbg !5990, !llvm.loop !5991

for.end112:                                       ; preds = %if.then, %if.then36, %if.then85, %for.cond98
  ret void, !dbg !5993
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_rice_ook(%struct.GetBitContext* %gb, i32 %k) #4 !dbg !5994 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %k.addr = alloca i32, align 4
  %x = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5997, metadata !1747), !dbg !5998
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !5999, metadata !1747), !dbg !6000
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6001, metadata !1747), !dbg !6002
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6003
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6004
  %call = call i32 @get_bits_left(%struct.GetBitContext* %1), !dbg !6005
  %call1 = call i32 @get_unary(%struct.GetBitContext* %0, i32 1, i32 %call), !dbg !6006
  store i32 %call1, i32* %x, align 4, !dbg !6008
  %2 = load i32, i32* %k.addr, align 4, !dbg !6009
  %tobool = icmp ne i32 %2, 0, !dbg !6009
  br i1 %tobool, label %if.then, label %if.end, !dbg !6011

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %x, align 4, !dbg !6012
  %4 = load i32, i32* %k.addr, align 4, !dbg !6013
  %shl = shl i32 %3, %4, !dbg !6014
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6015
  %6 = load i32, i32* %k.addr, align 4, !dbg !6016
  %call2 = call i32 @get_bits(%struct.GetBitContext* %5, i32 %6), !dbg !6017
  %or = or i32 %shl, %call2, !dbg !6018
  store i32 %or, i32* %x, align 4, !dbg !6019
  br label %if.end, !dbg !6020

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %x, align 4, !dbg !6021
  ret i32 %7, !dbg !6022
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_unary(%struct.GetBitContext* %gb, i32 %stop, i32 %len) #4 !dbg !6023 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %stop.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6027, metadata !1747), !dbg !6028
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !6029, metadata !1747), !dbg !6030
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6031, metadata !1747), !dbg !6032
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6033, metadata !1747), !dbg !6034
  store i32 0, i32* %i, align 4, !dbg !6035
  br label %for.cond, !dbg !6037

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6038
  %1 = load i32, i32* %len.addr, align 4, !dbg !6041
  %cmp = icmp slt i32 %0, %1, !dbg !6042
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6043

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6044
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !6046
  %3 = load i32, i32* %stop.addr, align 4, !dbg !6047
  %cmp1 = icmp ne i32 %call, %3, !dbg !6048
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end, !dbg !6049

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !6051

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6053
  %inc = add nsw i32 %5, 1, !dbg !6053
  store i32 %inc, i32* %i, align 4, !dbg !6053
  br label %for.cond, !dbg !6055, !llvm.loop !6056

for.end:                                          ; preds = %land.end
  %6 = load i32, i32* %i, align 4, !dbg !6058
  ret i32 %6, !dbg !6059
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !6060 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6063, metadata !1747), !dbg !6064
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6065
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6066
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6066
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6067
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6068
  %sub = sub nsw i32 %1, %call, !dbg !6069
  ret i32 %sub, !dbg !6070
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6071 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2162, metadata !1747), !dbg !6074
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6076, metadata !1747), !dbg !6077
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6078, metadata !1747), !dbg !6079
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6080, metadata !1747), !dbg !6081
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6082, metadata !1747), !dbg !6083
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6084
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6085
  %1 = load i32, i32* %index, align 8, !dbg !6085
  store i32 %1, i32* %re_index, align 4, !dbg !6083
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6086, metadata !1747), !dbg !6087
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6088, metadata !1747), !dbg !6089
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6090
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6091
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6091
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6089
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6092
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6093
  %5 = load i8*, i8** %buffer, align 8, !dbg !6093
  %6 = load i32, i32* %re_index, align 4, !dbg !6094
  %shr = lshr i32 %6, 3, !dbg !6095
  %idx.ext = zext i32 %shr to i64, !dbg !6096
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6096
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6097
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6097
  %8 = load i32, i32* %l, align 1, !dbg !6097
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6098
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6099
  %shl.i = shl i32 %9, 8, !dbg !6100
  %and.i = and i32 %shl.i, 65280, !dbg !6101
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6102
  %shr.i = lshr i32 %10, 8, !dbg !6103
  %and1.i = and i32 %shr.i, 255, !dbg !6104
  %or.i = or i32 %and.i, %and1.i, !dbg !6105
  %shl2.i = shl i32 %or.i, 16, !dbg !6106
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6107
  %shr3.i = lshr i32 %11, 16, !dbg !6108
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6109
  %and5.i = and i32 %shl4.i, 65280, !dbg !6110
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6111
  %shr6.i = lshr i32 %12, 16, !dbg !6112
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6113
  %and8.i = and i32 %shr7.i, 255, !dbg !6114
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6115
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6116
  %13 = load i32, i32* %re_index, align 4, !dbg !6117
  %and = and i32 %13, 7, !dbg !6118
  %shl = shl i32 %or10.i, %and, !dbg !6119
  store i32 %shl, i32* %re_cache, align 4, !dbg !6120
  %14 = load i32, i32* %re_cache, align 4, !dbg !6121
  %15 = load i32, i32* %n.addr, align 4, !dbg !6122
  %conv = trunc i32 %15 to i8, !dbg !6122
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !6123
  store i32 %call4, i32* %tmp, align 4, !dbg !6124
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6125
  %17 = load i32, i32* %re_index, align 4, !dbg !6126
  %18 = load i32, i32* %n.addr, align 4, !dbg !6127
  %add = add i32 %17, %18, !dbg !6128
  %cmp = icmp ugt i32 %16, %add, !dbg !6129
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6130

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6131
  %20 = load i32, i32* %n.addr, align 4, !dbg !6133
  %add6 = add i32 %19, %20, !dbg !6134
  br label %cond.end, !dbg !6135

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6136
  br label %cond.end, !dbg !6138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6139
  store i32 %cond, i32* %re_index, align 4, !dbg !6141
  %22 = load i32, i32* %re_index, align 4, !dbg !6142
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6143
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6144
  store i32 %22, i32* %index7, align 8, !dbg !6145
  %24 = load i32, i32* %tmp, align 4, !dbg !6146
  ret i32 %24, !dbg !6147
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !6148 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6151, metadata !1747), !dbg !6152
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6153, metadata !1747), !dbg !6154
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6155
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6156
  %1 = load i32, i32* %index1, align 8, !dbg !6156
  store i32 %1, i32* %index, align 4, !dbg !6154
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6157, metadata !1747), !dbg !6158
  %2 = load i32, i32* %index, align 4, !dbg !6159
  %shr = lshr i32 %2, 3, !dbg !6160
  %idxprom = zext i32 %shr to i64, !dbg !6161
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6161
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !6162
  %4 = load i8*, i8** %buffer, align 8, !dbg !6162
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !6161
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6161
  store i8 %5, i8* %result, align 1, !dbg !6158
  %6 = load i32, i32* %index, align 4, !dbg !6163
  %and = and i32 %6, 7, !dbg !6164
  %7 = load i8, i8* %result, align 1, !dbg !6165
  %conv = zext i8 %7 to i32, !dbg !6165
  %shl = shl i32 %conv, %and, !dbg !6165
  %conv2 = trunc i32 %shl to i8, !dbg !6165
  store i8 %conv2, i8* %result, align 1, !dbg !6165
  %8 = load i8, i8* %result, align 1, !dbg !6166
  %conv3 = zext i8 %8 to i32, !dbg !6166
  %shr4 = ashr i32 %conv3, 7, !dbg !6166
  %conv5 = trunc i32 %shr4 to i8, !dbg !6166
  store i8 %conv5, i8* %result, align 1, !dbg !6166
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6167
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !6169
  %10 = load i32, i32* %index6, align 8, !dbg !6169
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6170
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !6171
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6171
  %cmp = icmp slt i32 %10, %12, !dbg !6172
  br i1 %cmp, label %if.then, label %if.end, !dbg !6173

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !6174
  %inc = add i32 %13, 1, !dbg !6174
  store i32 %inc, i32* %index, align 4, !dbg !6174
  br label %if.end, !dbg !6175

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !6176
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6177
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !6178
  store i32 %14, i32* %index8, align 8, !dbg !6179
  %16 = load i8, i8* %result, align 1, !dbg !6180
  %conv9 = zext i8 %16 to i32, !dbg !6180
  ret i32 %conv9, !dbg !6181
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !6182 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6187, metadata !1747), !dbg !6188
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6189
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6190
  %1 = load i32, i32* %index, align 8, !dbg !6190
  ret i32 %1, !dbg !6191
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !6192 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6196, metadata !1747), !dbg !6197
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !6198, metadata !1747), !dbg !6199
  %0 = load i32, i32* %a.addr, align 4, !dbg !6200
  %1 = load i8, i8* %s.addr, align 1, !dbg !6201
  %conv = sext i8 %1 to i32, !dbg !6201
  %sub = sub nsw i32 0, %conv, !dbg !6202
  %conv1 = trunc i32 %sub to i8, !dbg !6203
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !6200, !srcloc !6204
  store i32 %2, i32* %a.addr, align 4, !dbg !6200
  %3 = load i32, i32* %a.addr, align 4, !dbg !6205
  ret i32 %3, !dbg !6206
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ape_decode_value_3860(%struct.APEContext* %ctx, %struct.GetBitContext* %gb, %struct.APERice* %rice) #4 !dbg !6207 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.APEContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %rice.addr = alloca %struct.APERice*, align 8
  %x = alloca i32, align 4
  %overflow = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6210, metadata !1747), !dbg !6211
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6212, metadata !1747), !dbg !6213
  store %struct.APERice* %rice, %struct.APERice** %rice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APERice** %rice.addr, metadata !6214, metadata !1747), !dbg !6215
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6216, metadata !1747), !dbg !6217
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !6218, metadata !1747), !dbg !6219
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6220
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6221
  %call = call i32 @get_bits_left(%struct.GetBitContext* %1), !dbg !6222
  %call1 = call i32 @get_unary(%struct.GetBitContext* %0, i32 1, i32 %call), !dbg !6223
  store i32 %call1, i32* %overflow, align 4, !dbg !6225
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6226
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 7, !dbg !6228
  %3 = load i32, i32* %fileversion, align 4, !dbg !6228
  %cmp = icmp sgt i32 %3, 3880, !dbg !6229
  br i1 %cmp, label %if.then, label %if.end, !dbg !6230

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !6231

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load i32, i32* %overflow, align 4, !dbg !6233
  %cmp2 = icmp uge i32 %4, 16, !dbg !6235
  br i1 %cmp2, label %while.body, label %while.end, !dbg !6236

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %overflow, align 4, !dbg !6237
  %sub = sub i32 %5, 16, !dbg !6237
  store i32 %sub, i32* %overflow, align 4, !dbg !6237
  %6 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6239
  %k = getelementptr inbounds %struct.APERice, %struct.APERice* %6, i32 0, i32 0, !dbg !6240
  %7 = load i32, i32* %k, align 4, !dbg !6241
  %add = add i32 %7, 4, !dbg !6241
  store i32 %add, i32* %k, align 4, !dbg !6241
  br label %while.cond, !dbg !6242, !llvm.loop !6244

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !6245

if.end:                                           ; preds = %while.end, %entry
  %8 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6246
  %k3 = getelementptr inbounds %struct.APERice, %struct.APERice* %8, i32 0, i32 0, !dbg !6248
  %9 = load i32, i32* %k3, align 4, !dbg !6248
  %tobool = icmp ne i32 %9, 0, !dbg !6246
  br i1 %tobool, label %if.else, label %if.then4, !dbg !6249

if.then4:                                         ; preds = %if.end
  %10 = load i32, i32* %overflow, align 4, !dbg !6250
  store i32 %10, i32* %x, align 4, !dbg !6251
  br label %if.end15, !dbg !6252

if.else:                                          ; preds = %if.end
  %11 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6253
  %k5 = getelementptr inbounds %struct.APERice, %struct.APERice* %11, i32 0, i32 0, !dbg !6255
  %12 = load i32, i32* %k5, align 4, !dbg !6255
  %cmp6 = icmp ule i32 %12, 25, !dbg !6256
  br i1 %cmp6, label %if.then7, label %if.else12, !dbg !6257

if.then7:                                         ; preds = %if.else
  %13 = load i32, i32* %overflow, align 4, !dbg !6258
  %14 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6260
  %k8 = getelementptr inbounds %struct.APERice, %struct.APERice* %14, i32 0, i32 0, !dbg !6261
  %15 = load i32, i32* %k8, align 4, !dbg !6261
  %shl = shl i32 %13, %15, !dbg !6262
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6263
  %17 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6264
  %k9 = getelementptr inbounds %struct.APERice, %struct.APERice* %17, i32 0, i32 0, !dbg !6265
  %18 = load i32, i32* %k9, align 4, !dbg !6265
  %call10 = call i32 @get_bits(%struct.GetBitContext* %16, i32 %18), !dbg !6266
  %add11 = add i32 %shl, %call10, !dbg !6267
  store i32 %add11, i32* %x, align 4, !dbg !6268
  br label %if.end14, !dbg !6269

if.else12:                                        ; preds = %if.else
  %19 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6270
  %avctx = getelementptr inbounds %struct.APEContext, %struct.APEContext* %19, i32 0, i32 1, !dbg !6272
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6272
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !6270
  %22 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6273
  %k13 = getelementptr inbounds %struct.APERice, %struct.APERice* %22, i32 0, i32 0, !dbg !6274
  %23 = load i32, i32* %k13, align 4, !dbg !6274
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i32 0, i32 0), i32 %23), !dbg !6275
  store i32 -1094995529, i32* %retval, align 4, !dbg !6276
  br label %return, !dbg !6276

if.end14:                                         ; preds = %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then4
  %24 = load i32, i32* %x, align 4, !dbg !6277
  %25 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6278
  %ksum = getelementptr inbounds %struct.APERice, %struct.APERice* %25, i32 0, i32 1, !dbg !6279
  %26 = load i32, i32* %ksum, align 4, !dbg !6279
  %add16 = add i32 %26, 8, !dbg !6280
  %shr = lshr i32 %add16, 4, !dbg !6281
  %sub17 = sub i32 %24, %shr, !dbg !6282
  %27 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6283
  %ksum18 = getelementptr inbounds %struct.APERice, %struct.APERice* %27, i32 0, i32 1, !dbg !6284
  %28 = load i32, i32* %ksum18, align 4, !dbg !6285
  %add19 = add i32 %28, %sub17, !dbg !6285
  store i32 %add19, i32* %ksum18, align 4, !dbg !6285
  %29 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6286
  %ksum20 = getelementptr inbounds %struct.APERice, %struct.APERice* %29, i32 0, i32 1, !dbg !6288
  %30 = load i32, i32* %ksum20, align 4, !dbg !6288
  %31 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6289
  %k21 = getelementptr inbounds %struct.APERice, %struct.APERice* %31, i32 0, i32 0, !dbg !6290
  %32 = load i32, i32* %k21, align 4, !dbg !6290
  %tobool22 = icmp ne i32 %32, 0, !dbg !6289
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !6289

cond.true:                                        ; preds = %if.end15
  %33 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6291
  %k23 = getelementptr inbounds %struct.APERice, %struct.APERice* %33, i32 0, i32 0, !dbg !6293
  %34 = load i32, i32* %k23, align 4, !dbg !6293
  %add24 = add i32 %34, 4, !dbg !6294
  %shl25 = shl i32 1, %add24, !dbg !6295
  br label %cond.end, !dbg !6296

cond.false:                                       ; preds = %if.end15
  br label %cond.end, !dbg !6297

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shl25, %cond.true ], [ 0, %cond.false ], !dbg !6299
  %cmp26 = icmp ult i32 %30, %cond, !dbg !6301
  br i1 %cmp26, label %if.then27, label %if.else29, !dbg !6302

if.then27:                                        ; preds = %cond.end
  %35 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6303
  %k28 = getelementptr inbounds %struct.APERice, %struct.APERice* %35, i32 0, i32 0, !dbg !6304
  %36 = load i32, i32* %k28, align 4, !dbg !6305
  %dec = add i32 %36, -1, !dbg !6305
  store i32 %dec, i32* %k28, align 4, !dbg !6305
  br label %if.end40, !dbg !6303

if.else29:                                        ; preds = %cond.end
  %37 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6306
  %ksum30 = getelementptr inbounds %struct.APERice, %struct.APERice* %37, i32 0, i32 1, !dbg !6308
  %38 = load i32, i32* %ksum30, align 4, !dbg !6308
  %39 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6309
  %k31 = getelementptr inbounds %struct.APERice, %struct.APERice* %39, i32 0, i32 0, !dbg !6310
  %40 = load i32, i32* %k31, align 4, !dbg !6310
  %add32 = add i32 %40, 5, !dbg !6311
  %shl33 = shl i32 1, %add32, !dbg !6312
  %cmp34 = icmp uge i32 %38, %shl33, !dbg !6313
  br i1 %cmp34, label %land.lhs.true, label %if.end39, !dbg !6314

land.lhs.true:                                    ; preds = %if.else29
  %41 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6315
  %k35 = getelementptr inbounds %struct.APERice, %struct.APERice* %41, i32 0, i32 0, !dbg !6317
  %42 = load i32, i32* %k35, align 4, !dbg !6317
  %cmp36 = icmp ult i32 %42, 24, !dbg !6318
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !6319

if.then37:                                        ; preds = %land.lhs.true
  %43 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6320
  %k38 = getelementptr inbounds %struct.APERice, %struct.APERice* %43, i32 0, i32 0, !dbg !6321
  %44 = load i32, i32* %k38, align 4, !dbg !6322
  %inc = add i32 %44, 1, !dbg !6322
  store i32 %inc, i32* %k38, align 4, !dbg !6322
  br label %if.end39, !dbg !6320

if.end39:                                         ; preds = %if.then37, %land.lhs.true, %if.else29
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then27
  %45 = load i32, i32* %x, align 4, !dbg !6323
  %shr41 = lshr i32 %45, 1, !dbg !6324
  %46 = load i32, i32* %x, align 4, !dbg !6325
  %and = and i32 %46, 1, !dbg !6326
  %sub42 = sub i32 %and, 1, !dbg !6327
  %xor = xor i32 %shr41, %sub42, !dbg !6328
  %add43 = add i32 %xor, 1, !dbg !6329
  store i32 %add43, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %if.end40, %if.else12
  %47 = load i32, i32* %retval, align 4, !dbg !6331
  ret i32 %47, !dbg !6331
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ape_decode_value_3900(%struct.APEContext* %ctx, %struct.APERice* %rice) #4 !dbg !6332 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.APEContext*, align 8
  %rice.addr = alloca %struct.APERice*, align 8
  %x = alloca i32, align 4
  %overflow = alloca i32, align 4
  %tmpk = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6335, metadata !1747), !dbg !6336
  store %struct.APERice* %rice, %struct.APERice** %rice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APERice** %rice.addr, metadata !6337, metadata !1747), !dbg !6338
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6339, metadata !1747), !dbg !6340
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !6341, metadata !1747), !dbg !6342
  call void @llvm.dbg.declare(metadata i32* %tmpk, metadata !6343, metadata !1747), !dbg !6344
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6345
  %call = call i32 @range_get_symbol(%struct.APEContext* %0, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @counts_3970, i32 0, i32 0), i16* getelementptr inbounds ([21 x i16], [21 x i16]* @counts_diff_3970, i32 0, i32 0)), !dbg !6346
  store i32 %call, i32* %overflow, align 4, !dbg !6347
  %1 = load i32, i32* %overflow, align 4, !dbg !6348
  %cmp = icmp eq i32 %1, 63, !dbg !6350
  br i1 %cmp, label %if.then, label %if.else, !dbg !6351

if.then:                                          ; preds = %entry
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6352
  %call1 = call i32 @range_decode_bits(%struct.APEContext* %2, i32 5), !dbg !6354
  store i32 %call1, i32* %tmpk, align 4, !dbg !6355
  store i32 0, i32* %overflow, align 4, !dbg !6356
  br label %if.end, !dbg !6357

if.else:                                          ; preds = %entry
  %3 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6358
  %k = getelementptr inbounds %struct.APERice, %struct.APERice* %3, i32 0, i32 0, !dbg !6359
  %4 = load i32, i32* %k, align 4, !dbg !6359
  %cmp2 = icmp ult i32 %4, 1, !dbg !6360
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6361

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !6362

cond.false:                                       ; preds = %if.else
  %5 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6364
  %k3 = getelementptr inbounds %struct.APERice, %struct.APERice* %5, i32 0, i32 0, !dbg !6366
  %6 = load i32, i32* %k3, align 4, !dbg !6366
  %sub = sub i32 %6, 1, !dbg !6367
  br label %cond.end, !dbg !6368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !6369
  store i32 %cond, i32* %tmpk, align 4, !dbg !6371
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %7 = load i32, i32* %tmpk, align 4, !dbg !6372
  %cmp4 = icmp sle i32 %7, 16, !dbg !6374
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !6375

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6376
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 7, !dbg !6378
  %9 = load i32, i32* %fileversion, align 4, !dbg !6378
  %cmp5 = icmp slt i32 %9, 3910, !dbg !6379
  br i1 %cmp5, label %if.then6, label %if.else11, !dbg !6380

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load i32, i32* %tmpk, align 4, !dbg !6381
  %cmp7 = icmp sgt i32 %10, 23, !dbg !6384
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6385

if.then8:                                         ; preds = %if.then6
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6386
  %avctx = getelementptr inbounds %struct.APEContext, %struct.APEContext* %11, i32 0, i32 1, !dbg !6388
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6388
  %13 = bitcast %struct.AVCodecContext* %12 to i8*, !dbg !6386
  %14 = load i32, i32* %tmpk, align 4, !dbg !6389
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 %14), !dbg !6390
  store i32 -1094995529, i32* %retval, align 4, !dbg !6391
  br label %return, !dbg !6391

if.end9:                                          ; preds = %if.then6
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6392
  %16 = load i32, i32* %tmpk, align 4, !dbg !6393
  %call10 = call i32 @range_decode_bits(%struct.APEContext* %15, i32 %16), !dbg !6394
  store i32 %call10, i32* %x, align 4, !dbg !6395
  br label %if.end20, !dbg !6396

if.else11:                                        ; preds = %lor.lhs.false
  %17 = load i32, i32* %tmpk, align 4, !dbg !6397
  %cmp12 = icmp sle i32 %17, 31, !dbg !6400
  br i1 %cmp12, label %if.then13, label %if.else17, !dbg !6397

if.then13:                                        ; preds = %if.else11
  %18 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6401
  %call14 = call i32 @range_decode_bits(%struct.APEContext* %18, i32 16), !dbg !6403
  store i32 %call14, i32* %x, align 4, !dbg !6404
  %19 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6405
  %20 = load i32, i32* %tmpk, align 4, !dbg !6406
  %sub15 = sub nsw i32 %20, 16, !dbg !6407
  %call16 = call i32 @range_decode_bits(%struct.APEContext* %19, i32 %sub15), !dbg !6408
  %shl = shl i32 %call16, 16, !dbg !6409
  %21 = load i32, i32* %x, align 4, !dbg !6410
  %or = or i32 %21, %shl, !dbg !6410
  store i32 %or, i32* %x, align 4, !dbg !6410
  br label %if.end19, !dbg !6411

if.else17:                                        ; preds = %if.else11
  %22 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6412
  %avctx18 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %22, i32 0, i32 1, !dbg !6414
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx18, align 8, !dbg !6414
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !6412
  %25 = load i32, i32* %tmpk, align 4, !dbg !6415
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 %25), !dbg !6416
  store i32 -1094995529, i32* %retval, align 4, !dbg !6417
  br label %return, !dbg !6417

if.end19:                                         ; preds = %if.then13
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end9
  %26 = load i32, i32* %overflow, align 4, !dbg !6418
  %27 = load i32, i32* %tmpk, align 4, !dbg !6419
  %shl21 = shl i32 %26, %27, !dbg !6420
  %28 = load i32, i32* %x, align 4, !dbg !6421
  %add = add i32 %28, %shl21, !dbg !6421
  store i32 %add, i32* %x, align 4, !dbg !6421
  %29 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6422
  %30 = load i32, i32* %x, align 4, !dbg !6423
  call void @update_rice(%struct.APERice* %29, i32 %30), !dbg !6424
  %31 = load i32, i32* %x, align 4, !dbg !6425
  %shr = lshr i32 %31, 1, !dbg !6426
  %32 = load i32, i32* %x, align 4, !dbg !6427
  %and = and i32 %32, 1, !dbg !6428
  %sub22 = sub i32 %and, 1, !dbg !6429
  %xor = xor i32 %shr, %sub22, !dbg !6430
  %add23 = add i32 %xor, 1, !dbg !6431
  store i32 %add23, i32* %retval, align 4, !dbg !6432
  br label %return, !dbg !6432

return:                                           ; preds = %if.end20, %if.else17, %if.then8
  %33 = load i32, i32* %retval, align 4, !dbg !6433
  ret i32 %33, !dbg !6433
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @range_get_symbol(%struct.APEContext* %ctx, i16* %counts, i16* %counts_diff) #4 !dbg !6434 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.APEContext*, align 8
  %counts.addr = alloca i16*, align 8
  %counts_diff.addr = alloca i16*, align 8
  %symbol = alloca i32, align 4
  %cf = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6437, metadata !1747), !dbg !6438
  store i16* %counts, i16** %counts.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %counts.addr, metadata !6439, metadata !1747), !dbg !6440
  store i16* %counts_diff, i16** %counts_diff.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %counts_diff.addr, metadata !6441, metadata !1747), !dbg !6442
  call void @llvm.dbg.declare(metadata i32* %symbol, metadata !6443, metadata !1747), !dbg !6444
  call void @llvm.dbg.declare(metadata i32* %cf, metadata !6445, metadata !1747), !dbg !6446
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6447
  %call = call i32 @range_decode_culshift(%struct.APEContext* %0, i32 16), !dbg !6448
  store i32 %call, i32* %cf, align 4, !dbg !6449
  %1 = load i32, i32* %cf, align 4, !dbg !6450
  %cmp = icmp sgt i32 %1, 65492, !dbg !6452
  br i1 %cmp, label %if.then, label %if.end3, !dbg !6453

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cf, align 4, !dbg !6454
  %sub = sub nsw i32 %2, 65535, !dbg !6456
  %add = add nsw i32 %sub, 63, !dbg !6457
  store i32 %add, i32* %symbol, align 4, !dbg !6458
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6459
  %4 = load i32, i32* %cf, align 4, !dbg !6460
  call void @range_decode_update(%struct.APEContext* %3, i32 1, i32 %4), !dbg !6461
  %5 = load i32, i32* %cf, align 4, !dbg !6462
  %cmp1 = icmp sgt i32 %5, 65535, !dbg !6464
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6465

if.then2:                                         ; preds = %if.then
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6466
  %error = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 28, !dbg !6467
  store i32 1, i32* %error, align 8, !dbg !6468
  br label %if.end, !dbg !6466

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i32, i32* %symbol, align 4, !dbg !6469
  store i32 %7, i32* %retval, align 4, !dbg !6470
  br label %return, !dbg !6470

if.end3:                                          ; preds = %entry
  store i32 0, i32* %symbol, align 4, !dbg !6471
  br label %for.cond, !dbg !6473

for.cond:                                         ; preds = %for.inc, %if.end3
  %8 = load i32, i32* %symbol, align 4, !dbg !6474
  %add4 = add nsw i32 %8, 1, !dbg !6477
  %idxprom = sext i32 %add4 to i64, !dbg !6478
  %9 = load i16*, i16** %counts.addr, align 8, !dbg !6478
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !6478
  %10 = load i16, i16* %arrayidx, align 2, !dbg !6478
  %conv = zext i16 %10 to i32, !dbg !6478
  %11 = load i32, i32* %cf, align 4, !dbg !6479
  %cmp5 = icmp sle i32 %conv, %11, !dbg !6480
  br i1 %cmp5, label %for.body, label %for.end, !dbg !6481

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !6482

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %symbol, align 4, !dbg !6484
  %inc = add nsw i32 %12, 1, !dbg !6484
  store i32 %inc, i32* %symbol, align 4, !dbg !6484
  br label %for.cond, !dbg !6486, !llvm.loop !6487

for.end:                                          ; preds = %for.cond
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6489
  %14 = load i32, i32* %symbol, align 4, !dbg !6490
  %idxprom7 = sext i32 %14 to i64, !dbg !6491
  %15 = load i16*, i16** %counts_diff.addr, align 8, !dbg !6491
  %arrayidx8 = getelementptr inbounds i16, i16* %15, i64 %idxprom7, !dbg !6491
  %16 = load i16, i16* %arrayidx8, align 2, !dbg !6491
  %conv9 = zext i16 %16 to i32, !dbg !6491
  %17 = load i32, i32* %symbol, align 4, !dbg !6492
  %idxprom10 = sext i32 %17 to i64, !dbg !6493
  %18 = load i16*, i16** %counts.addr, align 8, !dbg !6493
  %arrayidx11 = getelementptr inbounds i16, i16* %18, i64 %idxprom10, !dbg !6493
  %19 = load i16, i16* %arrayidx11, align 2, !dbg !6493
  %conv12 = zext i16 %19 to i32, !dbg !6493
  call void @range_decode_update(%struct.APEContext* %13, i32 %conv9, i32 %conv12), !dbg !6494
  %20 = load i32, i32* %symbol, align 4, !dbg !6495
  store i32 %20, i32* %retval, align 4, !dbg !6496
  br label %return, !dbg !6496

return:                                           ; preds = %for.end, %if.end
  %21 = load i32, i32* %retval, align 4, !dbg !6497
  ret i32 %21, !dbg !6497
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @range_decode_bits(%struct.APEContext* %ctx, i32 %n) #4 !dbg !6498 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %n.addr = alloca i32, align 4
  %sym = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6501, metadata !1747), !dbg !6502
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6503, metadata !1747), !dbg !6504
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !6505, metadata !1747), !dbg !6506
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6507
  %1 = load i32, i32* %n.addr, align 4, !dbg !6508
  %call = call i32 @range_decode_culshift(%struct.APEContext* %0, i32 %1), !dbg !6509
  store i32 %call, i32* %sym, align 4, !dbg !6506
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6510
  %3 = load i32, i32* %sym, align 4, !dbg !6511
  call void @range_decode_update(%struct.APEContext* %2, i32 1, i32 %3), !dbg !6512
  %4 = load i32, i32* %sym, align 4, !dbg !6513
  ret i32 %4, !dbg !6514
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @update_rice(%struct.APERice* %rice, i32 %x) #4 !dbg !6515 {
entry:
  %rice.addr = alloca %struct.APERice*, align 8
  %x.addr = alloca i32, align 4
  %lim = alloca i32, align 4
  store %struct.APERice* %rice, %struct.APERice** %rice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APERice** %rice.addr, metadata !6518, metadata !1747), !dbg !6519
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6520, metadata !1747), !dbg !6521
  call void @llvm.dbg.declare(metadata i32* %lim, metadata !6522, metadata !1747), !dbg !6523
  %0 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6524
  %k = getelementptr inbounds %struct.APERice, %struct.APERice* %0, i32 0, i32 0, !dbg !6525
  %1 = load i32, i32* %k, align 4, !dbg !6525
  %tobool = icmp ne i32 %1, 0, !dbg !6524
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6524

cond.true:                                        ; preds = %entry
  %2 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6526
  %k1 = getelementptr inbounds %struct.APERice, %struct.APERice* %2, i32 0, i32 0, !dbg !6528
  %3 = load i32, i32* %k1, align 4, !dbg !6528
  %add = add i32 %3, 4, !dbg !6529
  %shl = shl i32 1, %add, !dbg !6530
  br label %cond.end, !dbg !6531

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6532

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shl, %cond.true ], [ 0, %cond.false ], !dbg !6534
  store i32 %cond, i32* %lim, align 4, !dbg !6536
  %4 = load i32, i32* %x.addr, align 4, !dbg !6537
  %add2 = add i32 %4, 1, !dbg !6538
  %div = udiv i32 %add2, 2, !dbg !6539
  %5 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6540
  %ksum = getelementptr inbounds %struct.APERice, %struct.APERice* %5, i32 0, i32 1, !dbg !6541
  %6 = load i32, i32* %ksum, align 4, !dbg !6541
  %add3 = add i32 %6, 16, !dbg !6542
  %shr = lshr i32 %add3, 5, !dbg !6543
  %sub = sub i32 %div, %shr, !dbg !6544
  %7 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6545
  %ksum4 = getelementptr inbounds %struct.APERice, %struct.APERice* %7, i32 0, i32 1, !dbg !6546
  %8 = load i32, i32* %ksum4, align 4, !dbg !6547
  %add5 = add i32 %8, %sub, !dbg !6547
  store i32 %add5, i32* %ksum4, align 4, !dbg !6547
  %9 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6548
  %ksum6 = getelementptr inbounds %struct.APERice, %struct.APERice* %9, i32 0, i32 1, !dbg !6550
  %10 = load i32, i32* %ksum6, align 4, !dbg !6550
  %11 = load i32, i32* %lim, align 4, !dbg !6551
  %cmp = icmp ult i32 %10, %11, !dbg !6552
  br i1 %cmp, label %if.then, label %if.else, !dbg !6553

if.then:                                          ; preds = %cond.end
  %12 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6554
  %k7 = getelementptr inbounds %struct.APERice, %struct.APERice* %12, i32 0, i32 0, !dbg !6555
  %13 = load i32, i32* %k7, align 4, !dbg !6556
  %dec = add i32 %13, -1, !dbg !6556
  store i32 %dec, i32* %k7, align 4, !dbg !6556
  br label %if.end15, !dbg !6554

if.else:                                          ; preds = %cond.end
  %14 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6557
  %ksum8 = getelementptr inbounds %struct.APERice, %struct.APERice* %14, i32 0, i32 1, !dbg !6559
  %15 = load i32, i32* %ksum8, align 4, !dbg !6559
  %16 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6560
  %k9 = getelementptr inbounds %struct.APERice, %struct.APERice* %16, i32 0, i32 0, !dbg !6561
  %17 = load i32, i32* %k9, align 4, !dbg !6561
  %add10 = add i32 %17, 5, !dbg !6562
  %shl11 = shl i32 1, %add10, !dbg !6563
  %cmp12 = icmp uge i32 %15, %shl11, !dbg !6564
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !6565

if.then13:                                        ; preds = %if.else
  %18 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6566
  %k14 = getelementptr inbounds %struct.APERice, %struct.APERice* %18, i32 0, i32 0, !dbg !6567
  %19 = load i32, i32* %k14, align 4, !dbg !6568
  %inc = add i32 %19, 1, !dbg !6568
  store i32 %inc, i32* %k14, align 4, !dbg !6568
  br label %if.end, !dbg !6566

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  ret void, !dbg !6569
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @range_decode_culshift(%struct.APEContext* %ctx, i32 %shift) #4 !dbg !6570 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %shift.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6571, metadata !1747), !dbg !6572
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !6573, metadata !1747), !dbg !6574
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6575
  call void @range_dec_normalize(%struct.APEContext* %0), !dbg !6576
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6577
  %rc = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 19, !dbg !6578
  %range = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc, i32 0, i32 1, !dbg !6579
  %2 = load i32, i32* %range, align 4, !dbg !6579
  %3 = load i32, i32* %shift.addr, align 4, !dbg !6580
  %shr = lshr i32 %2, %3, !dbg !6581
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6582
  %rc1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 19, !dbg !6583
  %help = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc1, i32 0, i32 2, !dbg !6584
  store i32 %shr, i32* %help, align 8, !dbg !6585
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6586
  %rc2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 19, !dbg !6587
  %low = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc2, i32 0, i32 0, !dbg !6588
  %6 = load i32, i32* %low, align 8, !dbg !6588
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6589
  %rc3 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 19, !dbg !6590
  %help4 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc3, i32 0, i32 2, !dbg !6591
  %8 = load i32, i32* %help4, align 8, !dbg !6591
  %div = udiv i32 %6, %8, !dbg !6592
  ret i32 %div, !dbg !6593
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @range_decode_update(%struct.APEContext* %ctx, i32 %sy_f, i32 %lt_f) #4 !dbg !6594 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %sy_f.addr = alloca i32, align 4
  %lt_f.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6597, metadata !1747), !dbg !6598
  store i32 %sy_f, i32* %sy_f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sy_f.addr, metadata !6599, metadata !1747), !dbg !6600
  store i32 %lt_f, i32* %lt_f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lt_f.addr, metadata !6601, metadata !1747), !dbg !6602
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6603
  %rc = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 19, !dbg !6604
  %help = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc, i32 0, i32 2, !dbg !6605
  %1 = load i32, i32* %help, align 8, !dbg !6605
  %2 = load i32, i32* %lt_f.addr, align 4, !dbg !6606
  %mul = mul i32 %1, %2, !dbg !6607
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6608
  %rc1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %3, i32 0, i32 19, !dbg !6609
  %low = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc1, i32 0, i32 0, !dbg !6610
  %4 = load i32, i32* %low, align 8, !dbg !6611
  %sub = sub i32 %4, %mul, !dbg !6611
  store i32 %sub, i32* %low, align 8, !dbg !6611
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6612
  %rc2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 19, !dbg !6613
  %help3 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc2, i32 0, i32 2, !dbg !6614
  %6 = load i32, i32* %help3, align 8, !dbg !6614
  %7 = load i32, i32* %sy_f.addr, align 4, !dbg !6615
  %mul4 = mul i32 %6, %7, !dbg !6616
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6617
  %rc5 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 19, !dbg !6618
  %range = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc5, i32 0, i32 1, !dbg !6619
  store i32 %mul4, i32* %range, align 4, !dbg !6620
  ret void, !dbg !6621
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @range_dec_normalize(%struct.APEContext* %ctx) #4 !dbg !6622 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6625, metadata !1747), !dbg !6626
  br label %while.cond, !dbg !6627

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6628
  %rc = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 19, !dbg !6630
  %range = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc, i32 0, i32 1, !dbg !6631
  %1 = load i32, i32* %range, align 4, !dbg !6631
  %cmp = icmp ule i32 %1, 8388608, !dbg !6632
  br i1 %cmp, label %while.body, label %while.end, !dbg !6633

while.body:                                       ; preds = %while.cond
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6634
  %rc1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 19, !dbg !6636
  %buffer = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc1, i32 0, i32 3, !dbg !6637
  %3 = load i32, i32* %buffer, align 4, !dbg !6638
  %shl = shl i32 %3, 8, !dbg !6638
  store i32 %shl, i32* %buffer, align 4, !dbg !6638
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6639
  %ptr = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 27, !dbg !6641
  %5 = load i8*, i8** %ptr, align 8, !dbg !6641
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6642
  %data_end = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 25, !dbg !6643
  %7 = load i8*, i8** %data_end, align 8, !dbg !6643
  %cmp2 = icmp ult i8* %5, %7, !dbg !6644
  br i1 %cmp2, label %if.then, label %if.else, !dbg !6645

if.then:                                          ; preds = %while.body
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6646
  %ptr3 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %8, i32 0, i32 27, !dbg !6648
  %9 = load i8*, i8** %ptr3, align 8, !dbg !6648
  %10 = load i8, i8* %9, align 1, !dbg !6649
  %conv = zext i8 %10 to i32, !dbg !6649
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6650
  %rc4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %11, i32 0, i32 19, !dbg !6651
  %buffer5 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc4, i32 0, i32 3, !dbg !6652
  %12 = load i32, i32* %buffer5, align 4, !dbg !6653
  %add = add i32 %12, %conv, !dbg !6653
  store i32 %add, i32* %buffer5, align 4, !dbg !6653
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6654
  %ptr6 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 27, !dbg !6655
  %14 = load i8*, i8** %ptr6, align 8, !dbg !6656
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6656
  store i8* %incdec.ptr, i8** %ptr6, align 8, !dbg !6656
  br label %if.end, !dbg !6657

if.else:                                          ; preds = %while.body
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6658
  %error = getelementptr inbounds %struct.APEContext, %struct.APEContext* %15, i32 0, i32 28, !dbg !6660
  store i32 1, i32* %error, align 8, !dbg !6661
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6662
  %rc7 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %16, i32 0, i32 19, !dbg !6663
  %low = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc7, i32 0, i32 0, !dbg !6664
  %17 = load i32, i32* %low, align 8, !dbg !6664
  %shl8 = shl i32 %17, 8, !dbg !6665
  %18 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6666
  %rc9 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %18, i32 0, i32 19, !dbg !6667
  %buffer10 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc9, i32 0, i32 3, !dbg !6668
  %19 = load i32, i32* %buffer10, align 4, !dbg !6668
  %shr = lshr i32 %19, 1, !dbg !6669
  %and = and i32 %shr, 255, !dbg !6670
  %or = or i32 %shl8, %and, !dbg !6671
  %20 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6672
  %rc11 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %20, i32 0, i32 19, !dbg !6673
  %low12 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc11, i32 0, i32 0, !dbg !6674
  store i32 %or, i32* %low12, align 8, !dbg !6675
  %21 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6676
  %rc13 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %21, i32 0, i32 19, !dbg !6677
  %range14 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc13, i32 0, i32 1, !dbg !6678
  %22 = load i32, i32* %range14, align 4, !dbg !6679
  %shl15 = shl i32 %22, 8, !dbg !6679
  store i32 %shl15, i32* %range14, align 4, !dbg !6679
  br label %while.cond, !dbg !6680, !llvm.loop !6682

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6683
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @range_start_decoding(%struct.APEContext* %ctx) #4 !dbg !6684 {
entry:
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !6685, metadata !1747), !dbg !6687
  %ctx.addr = alloca %struct.APEContext*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6689, metadata !1747), !dbg !6690
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6691
  %ptr = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 27, !dbg !6692
  store i8** %ptr, i8*** %b.addr.i, align 8, !dbg !6693
  %1 = load i8**, i8*** %b.addr.i, align 8, !dbg !6694
  %2 = load i8*, i8** %1, align 8, !dbg !6695
  %add.ptr.i = getelementptr inbounds i8, i8* %2, i64 1, !dbg !6695
  store i8* %add.ptr.i, i8** %1, align 8, !dbg !6695
  %3 = load i8**, i8*** %b.addr.i, align 8, !dbg !6696
  %4 = load i8*, i8** %3, align 8, !dbg !6697
  %add.ptr1.i = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !6698
  %5 = load i8, i8* %add.ptr1.i, align 1, !dbg !6699
  %conv.i = zext i8 %5 to i32, !dbg !6700
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6701
  %rc = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 19, !dbg !6702
  %buffer = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc, i32 0, i32 3, !dbg !6703
  store i32 %conv.i, i32* %buffer, align 4, !dbg !6704
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6705
  %rc1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 19, !dbg !6706
  %buffer2 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc1, i32 0, i32 3, !dbg !6707
  %8 = load i32, i32* %buffer2, align 4, !dbg !6707
  %shr = lshr i32 %8, 1, !dbg !6708
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6709
  %rc3 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 19, !dbg !6710
  %low = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc3, i32 0, i32 0, !dbg !6711
  store i32 %shr, i32* %low, align 8, !dbg !6712
  %10 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6713
  %rc4 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 19, !dbg !6714
  %range = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc4, i32 0, i32 1, !dbg !6715
  store i32 128, i32* %range, align 4, !dbg !6716
  ret void, !dbg !6717
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ape_decode_value_3990(%struct.APEContext* %ctx, %struct.APERice* %rice) #4 !dbg !6718 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %rice.addr = alloca %struct.APERice*, align 8
  %x = alloca i32, align 4
  %overflow = alloca i32, align 4
  %base = alloca i32, align 4
  %pivot = alloca i32, align 4
  %base_hi = alloca i32, align 4
  %base_lo = alloca i32, align 4
  %bbits = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6719, metadata !1747), !dbg !6720
  store %struct.APERice* %rice, %struct.APERice** %rice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APERice** %rice.addr, metadata !6721, metadata !1747), !dbg !6722
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6723, metadata !1747), !dbg !6724
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !6725, metadata !1747), !dbg !6726
  call void @llvm.dbg.declare(metadata i32* %base, metadata !6727, metadata !1747), !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %pivot, metadata !6729, metadata !1747), !dbg !6730
  %0 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6731
  %ksum = getelementptr inbounds %struct.APERice, %struct.APERice* %0, i32 0, i32 1, !dbg !6732
  %1 = load i32, i32* %ksum, align 4, !dbg !6732
  %shr = lshr i32 %1, 5, !dbg !6733
  store i32 %shr, i32* %pivot, align 4, !dbg !6734
  %2 = load i32, i32* %pivot, align 4, !dbg !6735
  %cmp = icmp eq i32 %2, 0, !dbg !6737
  br i1 %cmp, label %if.then, label %if.end, !dbg !6738

if.then:                                          ; preds = %entry
  store i32 1, i32* %pivot, align 4, !dbg !6739
  br label %if.end, !dbg !6740

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6741
  %call = call i32 @range_get_symbol(%struct.APEContext* %3, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @counts_3980, i32 0, i32 0), i16* getelementptr inbounds ([21 x i16], [21 x i16]* @counts_diff_3980, i32 0, i32 0)), !dbg !6742
  store i32 %call, i32* %overflow, align 4, !dbg !6743
  %4 = load i32, i32* %overflow, align 4, !dbg !6744
  %cmp1 = icmp eq i32 %4, 63, !dbg !6746
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !6747

if.then2:                                         ; preds = %if.end
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6748
  %call3 = call i32 @range_decode_bits(%struct.APEContext* %5, i32 16), !dbg !6750
  %shl = shl i32 %call3, 16, !dbg !6751
  store i32 %shl, i32* %overflow, align 4, !dbg !6752
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6753
  %call4 = call i32 @range_decode_bits(%struct.APEContext* %6, i32 16), !dbg !6754
  %7 = load i32, i32* %overflow, align 4, !dbg !6755
  %or = or i32 %7, %call4, !dbg !6755
  store i32 %or, i32* %overflow, align 4, !dbg !6755
  br label %if.end5, !dbg !6756

if.end5:                                          ; preds = %if.then2, %if.end
  %8 = load i32, i32* %pivot, align 4, !dbg !6757
  %cmp6 = icmp slt i32 %8, 65536, !dbg !6759
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6760

if.then7:                                         ; preds = %if.end5
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6761
  %10 = load i32, i32* %pivot, align 4, !dbg !6763
  %call8 = call i32 @range_decode_culfreq(%struct.APEContext* %9, i32 %10), !dbg !6764
  store i32 %call8, i32* %base, align 4, !dbg !6765
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6766
  %12 = load i32, i32* %base, align 4, !dbg !6767
  call void @range_decode_update(%struct.APEContext* %11, i32 1, i32 %12), !dbg !6768
  br label %if.end15, !dbg !6769

if.else:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %base_hi, metadata !6770, metadata !1747), !dbg !6772
  %13 = load i32, i32* %pivot, align 4, !dbg !6773
  store i32 %13, i32* %base_hi, align 4, !dbg !6772
  call void @llvm.dbg.declare(metadata i32* %base_lo, metadata !6774, metadata !1747), !dbg !6775
  call void @llvm.dbg.declare(metadata i32* %bbits, metadata !6776, metadata !1747), !dbg !6777
  store i32 0, i32* %bbits, align 4, !dbg !6777
  br label %while.cond, !dbg !6778

while.cond:                                       ; preds = %while.body, %if.else
  %14 = load i32, i32* %base_hi, align 4, !dbg !6779
  %and = and i32 %14, -65536, !dbg !6781
  %tobool = icmp ne i32 %and, 0, !dbg !6782
  br i1 %tobool, label %while.body, label %while.end, !dbg !6782

while.body:                                       ; preds = %while.cond
  %15 = load i32, i32* %base_hi, align 4, !dbg !6783
  %shr9 = ashr i32 %15, 1, !dbg !6783
  store i32 %shr9, i32* %base_hi, align 4, !dbg !6783
  %16 = load i32, i32* %bbits, align 4, !dbg !6785
  %inc = add nsw i32 %16, 1, !dbg !6785
  store i32 %inc, i32* %bbits, align 4, !dbg !6785
  br label %while.cond, !dbg !6786, !llvm.loop !6788

while.end:                                        ; preds = %while.cond
  %17 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6789
  %18 = load i32, i32* %base_hi, align 4, !dbg !6790
  %add = add nsw i32 %18, 1, !dbg !6791
  %call10 = call i32 @range_decode_culfreq(%struct.APEContext* %17, i32 %add), !dbg !6792
  store i32 %call10, i32* %base_hi, align 4, !dbg !6793
  %19 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6794
  %20 = load i32, i32* %base_hi, align 4, !dbg !6795
  call void @range_decode_update(%struct.APEContext* %19, i32 1, i32 %20), !dbg !6796
  %21 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6797
  %22 = load i32, i32* %bbits, align 4, !dbg !6798
  %shl11 = shl i32 1, %22, !dbg !6799
  %call12 = call i32 @range_decode_culfreq(%struct.APEContext* %21, i32 %shl11), !dbg !6800
  store i32 %call12, i32* %base_lo, align 4, !dbg !6801
  %23 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6802
  %24 = load i32, i32* %base_lo, align 4, !dbg !6803
  call void @range_decode_update(%struct.APEContext* %23, i32 1, i32 %24), !dbg !6804
  %25 = load i32, i32* %base_hi, align 4, !dbg !6805
  %26 = load i32, i32* %bbits, align 4, !dbg !6806
  %shl13 = shl i32 %25, %26, !dbg !6807
  %27 = load i32, i32* %base_lo, align 4, !dbg !6808
  %add14 = add nsw i32 %shl13, %27, !dbg !6809
  store i32 %add14, i32* %base, align 4, !dbg !6810
  br label %if.end15

if.end15:                                         ; preds = %while.end, %if.then7
  %28 = load i32, i32* %base, align 4, !dbg !6811
  %29 = load i32, i32* %overflow, align 4, !dbg !6812
  %30 = load i32, i32* %pivot, align 4, !dbg !6813
  %mul = mul i32 %29, %30, !dbg !6814
  %add16 = add i32 %28, %mul, !dbg !6815
  store i32 %add16, i32* %x, align 4, !dbg !6816
  %31 = load %struct.APERice*, %struct.APERice** %rice.addr, align 8, !dbg !6817
  %32 = load i32, i32* %x, align 4, !dbg !6818
  call void @update_rice(%struct.APERice* %31, i32 %32), !dbg !6819
  %33 = load i32, i32* %x, align 4, !dbg !6820
  %shr17 = lshr i32 %33, 1, !dbg !6821
  %34 = load i32, i32* %x, align 4, !dbg !6822
  %and18 = and i32 %34, 1, !dbg !6823
  %sub = sub i32 %and18, 1, !dbg !6824
  %xor = xor i32 %shr17, %sub, !dbg !6825
  %add19 = add i32 %xor, 1, !dbg !6826
  ret i32 %add19, !dbg !6827
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @range_decode_culfreq(%struct.APEContext* %ctx, i32 %tot_f) #4 !dbg !6828 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %tot_f.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !6829, metadata !1747), !dbg !6830
  store i32 %tot_f, i32* %tot_f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot_f.addr, metadata !6831, metadata !1747), !dbg !6832
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6833
  call void @range_dec_normalize(%struct.APEContext* %0), !dbg !6834
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6835
  %rc = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 19, !dbg !6836
  %range = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc, i32 0, i32 1, !dbg !6837
  %2 = load i32, i32* %range, align 4, !dbg !6837
  %3 = load i32, i32* %tot_f.addr, align 4, !dbg !6838
  %div = udiv i32 %2, %3, !dbg !6839
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6840
  %rc1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 19, !dbg !6841
  %help = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc1, i32 0, i32 2, !dbg !6842
  store i32 %div, i32* %help, align 8, !dbg !6843
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6844
  %rc2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 19, !dbg !6845
  %low = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc2, i32 0, i32 0, !dbg !6846
  %6 = load i32, i32* %low, align 8, !dbg !6846
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !6847
  %rc3 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 19, !dbg !6848
  %help4 = getelementptr inbounds %struct.APERangecoder, %struct.APERangecoder* %rc3, i32 0, i32 2, !dbg !6849
  %8 = load i32, i32* %help4, align 8, !dbg !6849
  %div5 = udiv i32 %6, %8, !dbg !6850
  ret i32 %div5, !dbg !6851
}

; Function Attrs: nounwind uwtable
define internal void @long_filter_high_3800(i32* %buffer, i32 %order, i32 %shift, i32 %length) #1 !dbg !6852 {
entry:
  %buffer.addr = alloca i32*, align 8
  %order.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dotprod = alloca i32, align 4
  %sign = alloca i32, align 4
  %coeffs = alloca [256 x i32], align 16
  %delay = alloca [256 x i32], align 16
  store i32* %buffer, i32** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.addr, metadata !6855, metadata !1747), !dbg !6856
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !6857, metadata !1747), !dbg !6858
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !6859, metadata !1747), !dbg !6860
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !6861, metadata !1747), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6863, metadata !1747), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6865, metadata !1747), !dbg !6866
  call void @llvm.dbg.declare(metadata i32* %dotprod, metadata !6867, metadata !1747), !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6869, metadata !1747), !dbg !6870
  call void @llvm.dbg.declare(metadata [256 x i32]* %coeffs, metadata !6871, metadata !1747), !dbg !6875
  call void @llvm.dbg.declare(metadata [256 x i32]* %delay, metadata !6876, metadata !1747), !dbg !6877
  %0 = load i32, i32* %order.addr, align 4, !dbg !6878
  %1 = load i32, i32* %length.addr, align 4, !dbg !6880
  %cmp = icmp sge i32 %0, %1, !dbg !6881
  br i1 %cmp, label %if.then, label %if.end, !dbg !6882

if.then:                                          ; preds = %entry
  br label %for.end52, !dbg !6883

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %coeffs, i32 0, i32 0, !dbg !6884
  %2 = bitcast i32* %arraydecay to i8*, !dbg !6884
  %3 = load i32, i32* %order.addr, align 4, !dbg !6885
  %conv = sext i32 %3 to i64, !dbg !6885
  %mul = mul i64 %conv, 4, !dbg !6886
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 %mul, i32 16, i1 false), !dbg !6884
  store i32 0, i32* %i, align 4, !dbg !6887
  br label %for.cond, !dbg !6889

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !6890
  %5 = load i32, i32* %order.addr, align 4, !dbg !6893
  %cmp1 = icmp slt i32 %4, %5, !dbg !6894
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6895

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6896
  %idxprom = sext i32 %6 to i64, !dbg !6897
  %7 = load i32*, i32** %buffer.addr, align 8, !dbg !6897
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !6897
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6897
  %9 = load i32, i32* %i, align 4, !dbg !6898
  %idxprom3 = sext i32 %9 to i64, !dbg !6899
  %arrayidx4 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom3, !dbg !6899
  store i32 %8, i32* %arrayidx4, align 4, !dbg !6900
  br label %for.inc, !dbg !6899

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6901
  %inc = add nsw i32 %10, 1, !dbg !6901
  store i32 %inc, i32* %i, align 4, !dbg !6901
  br label %for.cond, !dbg !6903, !llvm.loop !6904

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %order.addr, align 4, !dbg !6906
  store i32 %11, i32* %i, align 4, !dbg !6908
  br label %for.cond5, !dbg !6909

for.cond5:                                        ; preds = %for.inc50, %for.end
  %12 = load i32, i32* %i, align 4, !dbg !6910
  %13 = load i32, i32* %length.addr, align 4, !dbg !6913
  %cmp6 = icmp slt i32 %12, %13, !dbg !6914
  br i1 %cmp6, label %for.body8, label %for.end52, !dbg !6915

for.body8:                                        ; preds = %for.cond5
  store i32 0, i32* %dotprod, align 4, !dbg !6916
  %14 = load i32, i32* %i, align 4, !dbg !6918
  %idxprom9 = sext i32 %14 to i64, !dbg !6919
  %15 = load i32*, i32** %buffer.addr, align 8, !dbg !6919
  %arrayidx10 = getelementptr inbounds i32, i32* %15, i64 %idxprom9, !dbg !6919
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !6919
  %call = call i32 @APESIGN(i32 %16), !dbg !6920
  store i32 %call, i32* %sign, align 4, !dbg !6921
  store i32 0, i32* %j, align 4, !dbg !6922
  br label %for.cond11, !dbg !6924

for.cond11:                                       ; preds = %for.inc26, %for.body8
  %17 = load i32, i32* %j, align 4, !dbg !6925
  %18 = load i32, i32* %order.addr, align 4, !dbg !6928
  %cmp12 = icmp slt i32 %17, %18, !dbg !6929
  br i1 %cmp12, label %for.body14, label %for.end28, !dbg !6930

for.body14:                                       ; preds = %for.cond11
  %19 = load i32, i32* %j, align 4, !dbg !6931
  %idxprom15 = sext i32 %19 to i64, !dbg !6933
  %arrayidx16 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom15, !dbg !6933
  %20 = load i32, i32* %arrayidx16, align 4, !dbg !6933
  %21 = load i32, i32* %j, align 4, !dbg !6934
  %idxprom17 = sext i32 %21 to i64, !dbg !6935
  %arrayidx18 = getelementptr inbounds [256 x i32], [256 x i32]* %coeffs, i64 0, i64 %idxprom17, !dbg !6935
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !6935
  %mul19 = mul nsw i32 %20, %22, !dbg !6936
  %23 = load i32, i32* %dotprod, align 4, !dbg !6937
  %add = add nsw i32 %23, %mul19, !dbg !6937
  store i32 %add, i32* %dotprod, align 4, !dbg !6937
  %24 = load i32, i32* %j, align 4, !dbg !6938
  %idxprom20 = sext i32 %24 to i64, !dbg !6939
  %arrayidx21 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom20, !dbg !6939
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !6939
  %shr = ashr i32 %25, 31, !dbg !6940
  %or = or i32 %shr, 1, !dbg !6941
  %26 = load i32, i32* %sign, align 4, !dbg !6942
  %mul22 = mul nsw i32 %or, %26, !dbg !6943
  %27 = load i32, i32* %j, align 4, !dbg !6944
  %idxprom23 = sext i32 %27 to i64, !dbg !6945
  %arrayidx24 = getelementptr inbounds [256 x i32], [256 x i32]* %coeffs, i64 0, i64 %idxprom23, !dbg !6945
  %28 = load i32, i32* %arrayidx24, align 4, !dbg !6946
  %add25 = add nsw i32 %28, %mul22, !dbg !6946
  store i32 %add25, i32* %arrayidx24, align 4, !dbg !6946
  br label %for.inc26, !dbg !6947

for.inc26:                                        ; preds = %for.body14
  %29 = load i32, i32* %j, align 4, !dbg !6948
  %inc27 = add nsw i32 %29, 1, !dbg !6948
  store i32 %inc27, i32* %j, align 4, !dbg !6948
  br label %for.cond11, !dbg !6950, !llvm.loop !6951

for.end28:                                        ; preds = %for.cond11
  %30 = load i32, i32* %dotprod, align 4, !dbg !6953
  %31 = load i32, i32* %shift.addr, align 4, !dbg !6954
  %shr29 = ashr i32 %30, %31, !dbg !6955
  %32 = load i32, i32* %i, align 4, !dbg !6956
  %idxprom30 = sext i32 %32 to i64, !dbg !6957
  %33 = load i32*, i32** %buffer.addr, align 8, !dbg !6957
  %arrayidx31 = getelementptr inbounds i32, i32* %33, i64 %idxprom30, !dbg !6957
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !6958
  %sub = sub nsw i32 %34, %shr29, !dbg !6958
  store i32 %sub, i32* %arrayidx31, align 4, !dbg !6958
  store i32 0, i32* %j, align 4, !dbg !6959
  br label %for.cond32, !dbg !6961

for.cond32:                                       ; preds = %for.inc42, %for.end28
  %35 = load i32, i32* %j, align 4, !dbg !6962
  %36 = load i32, i32* %order.addr, align 4, !dbg !6965
  %sub33 = sub nsw i32 %36, 1, !dbg !6966
  %cmp34 = icmp slt i32 %35, %sub33, !dbg !6967
  br i1 %cmp34, label %for.body36, label %for.end44, !dbg !6968

for.body36:                                       ; preds = %for.cond32
  %37 = load i32, i32* %j, align 4, !dbg !6969
  %add37 = add nsw i32 %37, 1, !dbg !6970
  %idxprom38 = sext i32 %add37 to i64, !dbg !6971
  %arrayidx39 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom38, !dbg !6971
  %38 = load i32, i32* %arrayidx39, align 4, !dbg !6971
  %39 = load i32, i32* %j, align 4, !dbg !6972
  %idxprom40 = sext i32 %39 to i64, !dbg !6973
  %arrayidx41 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom40, !dbg !6973
  store i32 %38, i32* %arrayidx41, align 4, !dbg !6974
  br label %for.inc42, !dbg !6973

for.inc42:                                        ; preds = %for.body36
  %40 = load i32, i32* %j, align 4, !dbg !6975
  %inc43 = add nsw i32 %40, 1, !dbg !6975
  store i32 %inc43, i32* %j, align 4, !dbg !6975
  br label %for.cond32, !dbg !6977, !llvm.loop !6978

for.end44:                                        ; preds = %for.cond32
  %41 = load i32, i32* %i, align 4, !dbg !6980
  %idxprom45 = sext i32 %41 to i64, !dbg !6981
  %42 = load i32*, i32** %buffer.addr, align 8, !dbg !6981
  %arrayidx46 = getelementptr inbounds i32, i32* %42, i64 %idxprom45, !dbg !6981
  %43 = load i32, i32* %arrayidx46, align 4, !dbg !6981
  %44 = load i32, i32* %order.addr, align 4, !dbg !6982
  %sub47 = sub nsw i32 %44, 1, !dbg !6983
  %idxprom48 = sext i32 %sub47 to i64, !dbg !6984
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %delay, i64 0, i64 %idxprom48, !dbg !6984
  store i32 %43, i32* %arrayidx49, align 4, !dbg !6985
  br label %for.inc50, !dbg !6986

for.inc50:                                        ; preds = %for.end44
  %45 = load i32, i32* %i, align 4, !dbg !6987
  %inc51 = add nsw i32 %45, 1, !dbg !6987
  store i32 %inc51, i32* %i, align 4, !dbg !6987
  br label %for.cond5, !dbg !6989, !llvm.loop !6990

for.end52:                                        ; preds = %if.then, %for.cond5
  ret void, !dbg !6992
}

; Function Attrs: nounwind uwtable
define internal void @long_filter_ehigh_3830(i32* %buffer, i32 %length) #1 !dbg !6993 {
entry:
  %buffer.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dotprod = alloca i32, align 4
  %sign = alloca i32, align 4
  %coeffs = alloca [8 x i32], align 16
  %delay = alloca [8 x i32], align 16
  store i32* %buffer, i32** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.addr, metadata !6996, metadata !1747), !dbg !6997
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !6998, metadata !1747), !dbg !6999
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7000, metadata !1747), !dbg !7001
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7002, metadata !1747), !dbg !7003
  call void @llvm.dbg.declare(metadata i32* %dotprod, metadata !7004, metadata !1747), !dbg !7005
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !7006, metadata !1747), !dbg !7007
  call void @llvm.dbg.declare(metadata [8 x i32]* %coeffs, metadata !7008, metadata !1747), !dbg !7010
  %0 = bitcast [8 x i32]* %coeffs to i8*, !dbg !7010
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 32, i32 16, i1 false), !dbg !7010
  call void @llvm.dbg.declare(metadata [8 x i32]* %delay, metadata !7011, metadata !1747), !dbg !7012
  %1 = bitcast [8 x i32]* %delay to i8*, !dbg !7012
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 32, i32 16, i1 false), !dbg !7013
  store i32 0, i32* %i, align 4, !dbg !7015
  br label %for.cond, !dbg !7017

for.cond:                                         ; preds = %for.inc31, %entry
  %2 = load i32, i32* %i, align 4, !dbg !7018
  %3 = load i32, i32* %length.addr, align 4, !dbg !7021
  %cmp = icmp slt i32 %2, %3, !dbg !7022
  br i1 %cmp, label %for.body, label %for.end32, !dbg !7023

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dotprod, align 4, !dbg !7024
  %4 = load i32, i32* %i, align 4, !dbg !7026
  %idxprom = sext i32 %4 to i64, !dbg !7027
  %5 = load i32*, i32** %buffer.addr, align 8, !dbg !7027
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !7027
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7027
  %call = call i32 @APESIGN(i32 %6), !dbg !7028
  store i32 %call, i32* %sign, align 4, !dbg !7029
  store i32 7, i32* %j, align 4, !dbg !7030
  br label %for.cond1, !dbg !7032

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %j, align 4, !dbg !7033
  %cmp2 = icmp sge i32 %7, 0, !dbg !7036
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7037

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %j, align 4, !dbg !7038
  %idxprom4 = sext i32 %8 to i64, !dbg !7040
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %delay, i64 0, i64 %idxprom4, !dbg !7040
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !7040
  %10 = load i32, i32* %j, align 4, !dbg !7041
  %idxprom6 = sext i32 %10 to i64, !dbg !7042
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %coeffs, i64 0, i64 %idxprom6, !dbg !7042
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !7042
  %mul = mul nsw i32 %9, %11, !dbg !7043
  %12 = load i32, i32* %dotprod, align 4, !dbg !7044
  %add = add nsw i32 %12, %mul, !dbg !7044
  store i32 %add, i32* %dotprod, align 4, !dbg !7044
  %13 = load i32, i32* %j, align 4, !dbg !7045
  %idxprom8 = sext i32 %13 to i64, !dbg !7046
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %delay, i64 0, i64 %idxprom8, !dbg !7046
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !7046
  %shr = ashr i32 %14, 31, !dbg !7047
  %or = or i32 %shr, 1, !dbg !7048
  %15 = load i32, i32* %sign, align 4, !dbg !7049
  %mul10 = mul nsw i32 %or, %15, !dbg !7050
  %16 = load i32, i32* %j, align 4, !dbg !7051
  %idxprom11 = sext i32 %16 to i64, !dbg !7052
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %coeffs, i64 0, i64 %idxprom11, !dbg !7052
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !7053
  %add13 = add nsw i32 %17, %mul10, !dbg !7053
  store i32 %add13, i32* %arrayidx12, align 4, !dbg !7053
  br label %for.inc, !dbg !7054

for.inc:                                          ; preds = %for.body3
  %18 = load i32, i32* %j, align 4, !dbg !7055
  %dec = add nsw i32 %18, -1, !dbg !7055
  store i32 %dec, i32* %j, align 4, !dbg !7055
  br label %for.cond1, !dbg !7057, !llvm.loop !7058

for.end:                                          ; preds = %for.cond1
  store i32 7, i32* %j, align 4, !dbg !7060
  br label %for.cond14, !dbg !7062

for.cond14:                                       ; preds = %for.inc21, %for.end
  %19 = load i32, i32* %j, align 4, !dbg !7063
  %cmp15 = icmp sgt i32 %19, 0, !dbg !7066
  br i1 %cmp15, label %for.body16, label %for.end23, !dbg !7067

for.body16:                                       ; preds = %for.cond14
  %20 = load i32, i32* %j, align 4, !dbg !7068
  %sub = sub nsw i32 %20, 1, !dbg !7069
  %idxprom17 = sext i32 %sub to i64, !dbg !7070
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %delay, i64 0, i64 %idxprom17, !dbg !7070
  %21 = load i32, i32* %arrayidx18, align 4, !dbg !7070
  %22 = load i32, i32* %j, align 4, !dbg !7071
  %idxprom19 = sext i32 %22 to i64, !dbg !7072
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %delay, i64 0, i64 %idxprom19, !dbg !7072
  store i32 %21, i32* %arrayidx20, align 4, !dbg !7073
  br label %for.inc21, !dbg !7072

for.inc21:                                        ; preds = %for.body16
  %23 = load i32, i32* %j, align 4, !dbg !7074
  %dec22 = add nsw i32 %23, -1, !dbg !7074
  store i32 %dec22, i32* %j, align 4, !dbg !7074
  br label %for.cond14, !dbg !7076, !llvm.loop !7077

for.end23:                                        ; preds = %for.cond14
  %24 = load i32, i32* %i, align 4, !dbg !7079
  %idxprom24 = sext i32 %24 to i64, !dbg !7080
  %25 = load i32*, i32** %buffer.addr, align 8, !dbg !7080
  %arrayidx25 = getelementptr inbounds i32, i32* %25, i64 %idxprom24, !dbg !7080
  %26 = load i32, i32* %arrayidx25, align 4, !dbg !7080
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %delay, i64 0, i64 0, !dbg !7081
  store i32 %26, i32* %arrayidx26, align 16, !dbg !7082
  %27 = load i32, i32* %dotprod, align 4, !dbg !7083
  %shr27 = ashr i32 %27, 9, !dbg !7084
  %28 = load i32, i32* %i, align 4, !dbg !7085
  %idxprom28 = sext i32 %28 to i64, !dbg !7086
  %29 = load i32*, i32** %buffer.addr, align 8, !dbg !7086
  %arrayidx29 = getelementptr inbounds i32, i32* %29, i64 %idxprom28, !dbg !7086
  %30 = load i32, i32* %arrayidx29, align 4, !dbg !7087
  %sub30 = sub nsw i32 %30, %shr27, !dbg !7087
  store i32 %sub30, i32* %arrayidx29, align 4, !dbg !7087
  br label %for.inc31, !dbg !7088

for.inc31:                                        ; preds = %for.end23
  %31 = load i32, i32* %i, align 4, !dbg !7089
  %inc = add nsw i32 %31, 1, !dbg !7089
  store i32 %inc, i32* %i, align 4, !dbg !7089
  br label %for.cond, !dbg !7091, !llvm.loop !7092

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !7094
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @APESIGN(i32 %x) #4 !dbg !7095 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7098, metadata !1747), !dbg !7099
  %0 = load i32, i32* %x.addr, align 4, !dbg !7100
  %cmp = icmp slt i32 %0, 0, !dbg !7101
  %conv = zext i1 %cmp to i32, !dbg !7101
  %1 = load i32, i32* %x.addr, align 4, !dbg !7102
  %cmp1 = icmp sgt i32 %1, 0, !dbg !7103
  %conv2 = zext i1 %cmp1 to i32, !dbg !7103
  %sub = sub nsw i32 %conv, %conv2, !dbg !7104
  ret i32 %sub, !dbg !7105
}

; Function Attrs: nounwind uwtable
define internal void @ape_apply_filters(%struct.APEContext* %ctx, i32* %decoded0, i32* %decoded1, i32 %count) #1 !dbg !7106 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %decoded0.addr = alloca i32*, align 8
  %decoded1.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7109, metadata !1747), !dbg !7110
  store i32* %decoded0, i32** %decoded0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %decoded0.addr, metadata !7111, metadata !1747), !dbg !7112
  store i32* %decoded1, i32** %decoded1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %decoded1.addr, metadata !7113, metadata !1747), !dbg !7114
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7115, metadata !1747), !dbg !7116
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7117, metadata !1747), !dbg !7118
  store i32 0, i32* %i, align 4, !dbg !7119
  br label %for.cond, !dbg !7121

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7122
  %cmp = icmp slt i32 %0, 3, !dbg !7125
  br i1 %cmp, label %for.body, label %for.end, !dbg !7126

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7127
  %idxprom = sext i32 %1 to i64, !dbg !7130
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7131
  %fset = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 9, !dbg !7132
  %3 = load i32, i32* %fset, align 4, !dbg !7132
  %idxprom1 = sext i32 %3 to i64, !dbg !7130
  %arrayidx = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom1, !dbg !7130
  %arrayidx2 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !7130
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !7130
  %tobool = icmp ne i16 %4, 0, !dbg !7130
  br i1 %tobool, label %if.end, label %if.then, !dbg !7133

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7134

if.end:                                           ; preds = %for.body
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7135
  %6 = load i32, i32* %i, align 4, !dbg !7136
  %idxprom3 = sext i32 %6 to i64, !dbg !7137
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7137
  %filters = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 22, !dbg !7138
  %arrayidx4 = getelementptr inbounds [3 x [2 x %struct.APEFilter]], [3 x [2 x %struct.APEFilter]]* %filters, i64 0, i64 %idxprom3, !dbg !7137
  %arraydecay = getelementptr inbounds [2 x %struct.APEFilter], [2 x %struct.APEFilter]* %arrayidx4, i32 0, i32 0, !dbg !7137
  %8 = load i32*, i32** %decoded0.addr, align 8, !dbg !7139
  %9 = load i32*, i32** %decoded1.addr, align 8, !dbg !7140
  %10 = load i32, i32* %count.addr, align 4, !dbg !7141
  %11 = load i32, i32* %i, align 4, !dbg !7142
  %idxprom5 = sext i32 %11 to i64, !dbg !7143
  %12 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7144
  %fset6 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %12, i32 0, i32 9, !dbg !7145
  %13 = load i32, i32* %fset6, align 4, !dbg !7145
  %idxprom7 = sext i32 %13 to i64, !dbg !7143
  %arrayidx8 = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom7, !dbg !7143
  %arrayidx9 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx8, i64 0, i64 %idxprom5, !dbg !7143
  %14 = load i16, i16* %arrayidx9, align 2, !dbg !7143
  %conv = zext i16 %14 to i32, !dbg !7143
  %15 = load i32, i32* %i, align 4, !dbg !7146
  %idxprom10 = sext i32 %15 to i64, !dbg !7147
  %16 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7148
  %fset11 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %16, i32 0, i32 9, !dbg !7149
  %17 = load i32, i32* %fset11, align 4, !dbg !7149
  %idxprom12 = sext i32 %17 to i64, !dbg !7147
  %arrayidx13 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* @ape_filter_fracbits, i64 0, i64 %idxprom12, !dbg !7147
  %arrayidx14 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx13, i64 0, i64 %idxprom10, !dbg !7147
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !7147
  %conv15 = zext i8 %18 to i32, !dbg !7147
  call void @apply_filter(%struct.APEContext* %5, %struct.APEFilter* %arraydecay, i32* %8, i32* %9, i32 %10, i32 %conv, i32 %conv15), !dbg !7150
  br label %for.inc, !dbg !7151

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4, !dbg !7152
  %inc = add nsw i32 %19, 1, !dbg !7152
  store i32 %inc, i32* %i, align 4, !dbg !7152
  br label %for.cond, !dbg !7154, !llvm.loop !7155

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7157
}

; Function Attrs: nounwind uwtable
define internal void @apply_filter(%struct.APEContext* %ctx, %struct.APEFilter* %f, i32* %data0, i32* %data1, i32 %count, i32 %order, i32 %fracbits) #1 !dbg !7158 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %f.addr = alloca %struct.APEFilter*, align 8
  %data0.addr = alloca i32*, align 8
  %data1.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %fracbits.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7162, metadata !1747), !dbg !7163
  store %struct.APEFilter* %f, %struct.APEFilter** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEFilter** %f.addr, metadata !7164, metadata !1747), !dbg !7165
  store i32* %data0, i32** %data0.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data0.addr, metadata !7166, metadata !1747), !dbg !7167
  store i32* %data1, i32** %data1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data1.addr, metadata !7168, metadata !1747), !dbg !7169
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7170, metadata !1747), !dbg !7171
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7172, metadata !1747), !dbg !7173
  store i32 %fracbits, i32* %fracbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fracbits.addr, metadata !7174, metadata !1747), !dbg !7175
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7176
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7177
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 7, !dbg !7178
  %2 = load i32, i32* %fileversion, align 4, !dbg !7178
  %3 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7179
  %arrayidx = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %3, i64 0, !dbg !7179
  %4 = load i32*, i32** %data0.addr, align 8, !dbg !7180
  %5 = load i32, i32* %count.addr, align 4, !dbg !7181
  %6 = load i32, i32* %order.addr, align 4, !dbg !7182
  %7 = load i32, i32* %fracbits.addr, align 4, !dbg !7183
  call void @do_apply_filter(%struct.APEContext* %0, i32 %2, %struct.APEFilter* %arrayidx, i32* %4, i32 %5, i32 %6, i32 %7), !dbg !7184
  %8 = load i32*, i32** %data1.addr, align 8, !dbg !7185
  %tobool = icmp ne i32* %8, null, !dbg !7185
  br i1 %tobool, label %if.then, label %if.end, !dbg !7187

if.then:                                          ; preds = %entry
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7188
  %10 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7189
  %fileversion1 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 7, !dbg !7190
  %11 = load i32, i32* %fileversion1, align 4, !dbg !7190
  %12 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7191
  %arrayidx2 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %12, i64 1, !dbg !7191
  %13 = load i32*, i32** %data1.addr, align 8, !dbg !7192
  %14 = load i32, i32* %count.addr, align 4, !dbg !7193
  %15 = load i32, i32* %order.addr, align 4, !dbg !7194
  %16 = load i32, i32* %fracbits.addr, align 4, !dbg !7195
  call void @do_apply_filter(%struct.APEContext* %9, i32 %11, %struct.APEFilter* %arrayidx2, i32* %13, i32 %14, i32 %15, i32 %16), !dbg !7196
  br label %if.end, !dbg !7196

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7197
}

; Function Attrs: nounwind uwtable
define internal void @do_apply_filter(%struct.APEContext* %ctx, i32 %version, %struct.APEFilter* %f, i32* %data, i32 %count, i32 %order, i32 %fracbits) #1 !dbg !7198 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7201, metadata !1747), !dbg !7206
  %ctx.addr = alloca %struct.APEContext*, align 8
  %version.addr = alloca i32, align 4
  %f.addr = alloca %struct.APEFilter*, align 8
  %data.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %fracbits.addr = alloca i32, align 4
  %res = alloca i32, align 4
  %absres = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7209, metadata !1747), !dbg !7210
  store i32 %version, i32* %version.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %version.addr, metadata !7211, metadata !1747), !dbg !7212
  store %struct.APEFilter* %f, %struct.APEFilter** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEFilter** %f.addr, metadata !7213, metadata !1747), !dbg !7214
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7215, metadata !1747), !dbg !7216
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7217, metadata !1747), !dbg !7218
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7219, metadata !1747), !dbg !7220
  store i32 %fracbits, i32* %fracbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fracbits.addr, metadata !7221, metadata !1747), !dbg !7222
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7223, metadata !1747), !dbg !7224
  call void @llvm.dbg.declare(metadata i32* %absres, metadata !7225, metadata !1747), !dbg !7226
  br label %while.cond, !dbg !7227

while.cond:                                       ; preds = %if.end95, %entry
  %0 = load i32, i32* %count.addr, align 4, !dbg !7228
  %dec = add nsw i32 %0, -1, !dbg !7228
  store i32 %dec, i32* %count.addr, align 4, !dbg !7228
  %tobool = icmp ne i32 %0, 0, !dbg !7230
  br i1 %tobool, label %while.body, label %while.end, !dbg !7230

while.body:                                       ; preds = %while.cond
  %1 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7231
  %adsp = getelementptr inbounds %struct.APEContext, %struct.APEContext* %1, i32 0, i32 3, !dbg !7232
  %scalarproduct_and_madd_int16 = getelementptr inbounds %struct.LLAudDSPContext, %struct.LLAudDSPContext* %adsp, i32 0, i32 0, !dbg !7233
  %2 = load i32 (i16*, i16*, i16*, i32, i32)*, i32 (i16*, i16*, i16*, i32, i32)** %scalarproduct_and_madd_int16, align 8, !dbg !7233
  %3 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7234
  %coeffs = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %3, i32 0, i32 0, !dbg !7235
  %4 = load i16*, i16** %coeffs, align 8, !dbg !7235
  %5 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7236
  %delay = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %5, i32 0, i32 3, !dbg !7237
  %6 = load i16*, i16** %delay, align 8, !dbg !7237
  %7 = load i32, i32* %order.addr, align 4, !dbg !7238
  %idx.ext = sext i32 %7 to i64, !dbg !7239
  %idx.neg = sub i64 0, %idx.ext, !dbg !7239
  %add.ptr = getelementptr inbounds i16, i16* %6, i64 %idx.neg, !dbg !7239
  %8 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7240
  %adaptcoeffs = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %8, i32 0, i32 1, !dbg !7241
  %9 = load i16*, i16** %adaptcoeffs, align 8, !dbg !7241
  %10 = load i32, i32* %order.addr, align 4, !dbg !7242
  %idx.ext1 = sext i32 %10 to i64, !dbg !7243
  %idx.neg2 = sub i64 0, %idx.ext1, !dbg !7243
  %add.ptr3 = getelementptr inbounds i16, i16* %9, i64 %idx.neg2, !dbg !7243
  %11 = load i32, i32* %order.addr, align 4, !dbg !7244
  %12 = load i32*, i32** %data.addr, align 8, !dbg !7245
  %13 = load i32, i32* %12, align 4, !dbg !7246
  %call = call i32 @APESIGN(i32 %13), !dbg !7247
  %call4 = call i32 %2(i16* %4, i16* %add.ptr, i16* %add.ptr3, i32 %11, i32 %call), !dbg !7231
  store i32 %call4, i32* %res, align 4, !dbg !7248
  %14 = load i32, i32* %res, align 4, !dbg !7249
  %15 = load i32, i32* %fracbits.addr, align 4, !dbg !7250
  %sub = sub nsw i32 %15, 1, !dbg !7251
  %shl = shl i32 1, %sub, !dbg !7252
  %add = add nsw i32 %14, %shl, !dbg !7253
  %16 = load i32, i32* %fracbits.addr, align 4, !dbg !7254
  %shr = ashr i32 %add, %16, !dbg !7255
  store i32 %shr, i32* %res, align 4, !dbg !7256
  %17 = load i32*, i32** %data.addr, align 8, !dbg !7257
  %18 = load i32, i32* %17, align 4, !dbg !7258
  %19 = load i32, i32* %res, align 4, !dbg !7259
  %add5 = add nsw i32 %19, %18, !dbg !7259
  store i32 %add5, i32* %res, align 4, !dbg !7259
  %20 = load i32, i32* %res, align 4, !dbg !7260
  %21 = load i32*, i32** %data.addr, align 8, !dbg !7261
  %incdec.ptr = getelementptr inbounds i32, i32* %21, i32 1, !dbg !7261
  store i32* %incdec.ptr, i32** %data.addr, align 8, !dbg !7261
  store i32 %20, i32* %21, align 4, !dbg !7262
  %22 = load i32, i32* %res, align 4, !dbg !7263
  store i32 %22, i32* %a.addr.i, align 4, !dbg !7264
  %23 = load i32, i32* %a.addr.i, align 4, !dbg !7265
  %add.i = add i32 %23, 32768, !dbg !7267
  %and.i = and i32 %add.i, -65536, !dbg !7268
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7268
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7269

if.then.i:                                        ; preds = %while.body
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !7270
  %shr.i = ashr i32 %24, 31, !dbg !7272
  %xor.i = xor i32 %shr.i, 32767, !dbg !7273
  %conv.i = trunc i32 %xor.i to i16, !dbg !7274
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !7275
  br label %av_clip_int16_c.exit, !dbg !7275

if.else.i:                                        ; preds = %while.body
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !7276
  %conv1.i = trunc i32 %25 to i16, !dbg !7276
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !7277
  br label %av_clip_int16_c.exit, !dbg !7277

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %26 = load i16, i16* %retval.i, align 2, !dbg !7278
  %27 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7279
  %delay7 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %27, i32 0, i32 3, !dbg !7280
  %28 = load i16*, i16** %delay7, align 8, !dbg !7281
  %incdec.ptr8 = getelementptr inbounds i16, i16* %28, i32 1, !dbg !7281
  store i16* %incdec.ptr8, i16** %delay7, align 8, !dbg !7281
  store i16 %26, i16* %28, align 2, !dbg !7282
  %29 = load i32, i32* %version.addr, align 4, !dbg !7283
  %cmp = icmp slt i32 %29, 3980, !dbg !7285
  br i1 %cmp, label %if.then, label %if.else, !dbg !7286

if.then:                                          ; preds = %av_clip_int16_c.exit
  %30 = load i32, i32* %res, align 4, !dbg !7287
  %cmp9 = icmp eq i32 %30, 0, !dbg !7289
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !7290

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !7291

cond.false:                                       ; preds = %if.then
  %31 = load i32, i32* %res, align 4, !dbg !7293
  %shr10 = ashr i32 %31, 28, !dbg !7295
  %and = and i32 %shr10, 8, !dbg !7296
  %sub11 = sub nsw i32 %and, 4, !dbg !7297
  br label %cond.end, !dbg !7298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub11, %cond.false ], !dbg !7299
  %conv = trunc i32 %cond to i16, !dbg !7299
  %32 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7301
  %adaptcoeffs12 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %32, i32 0, i32 1, !dbg !7302
  %33 = load i16*, i16** %adaptcoeffs12, align 8, !dbg !7302
  %arrayidx = getelementptr inbounds i16, i16* %33, i64 0, !dbg !7301
  store i16 %conv, i16* %arrayidx, align 2, !dbg !7303
  %34 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7304
  %adaptcoeffs13 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %34, i32 0, i32 1, !dbg !7305
  %35 = load i16*, i16** %adaptcoeffs13, align 8, !dbg !7305
  %arrayidx14 = getelementptr inbounds i16, i16* %35, i64 -4, !dbg !7304
  %36 = load i16, i16* %arrayidx14, align 2, !dbg !7306
  %conv15 = sext i16 %36 to i32, !dbg !7306
  %shr16 = ashr i32 %conv15, 1, !dbg !7306
  %conv17 = trunc i32 %shr16 to i16, !dbg !7306
  store i16 %conv17, i16* %arrayidx14, align 2, !dbg !7306
  %37 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7307
  %adaptcoeffs18 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %37, i32 0, i32 1, !dbg !7308
  %38 = load i16*, i16** %adaptcoeffs18, align 8, !dbg !7308
  %arrayidx19 = getelementptr inbounds i16, i16* %38, i64 -8, !dbg !7307
  %39 = load i16, i16* %arrayidx19, align 2, !dbg !7309
  %conv20 = sext i16 %39 to i32, !dbg !7309
  %shr21 = ashr i32 %conv20, 1, !dbg !7309
  %conv22 = trunc i32 %shr21 to i16, !dbg !7309
  store i16 %conv22, i16* %arrayidx19, align 2, !dbg !7309
  br label %if.end66, !dbg !7310

if.else:                                          ; preds = %av_clip_int16_c.exit
  %40 = load i32, i32* %res, align 4, !dbg !7311
  %cmp23 = icmp sge i32 %40, 0, !dbg !7313
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !7314

cond.true25:                                      ; preds = %if.else
  %41 = load i32, i32* %res, align 4, !dbg !7315
  br label %cond.end28, !dbg !7317

cond.false26:                                     ; preds = %if.else
  %42 = load i32, i32* %res, align 4, !dbg !7318
  %sub27 = sub nsw i32 0, %42, !dbg !7320
  br label %cond.end28, !dbg !7321

cond.end28:                                       ; preds = %cond.false26, %cond.true25
  %cond29 = phi i32 [ %41, %cond.true25 ], [ %sub27, %cond.false26 ], !dbg !7322
  store i32 %cond29, i32* %absres, align 4, !dbg !7324
  %43 = load i32, i32* %absres, align 4, !dbg !7325
  %tobool30 = icmp ne i32 %43, 0, !dbg !7325
  br i1 %tobool30, label %if.then31, label %if.else44, !dbg !7327

if.then31:                                        ; preds = %cond.end28
  %44 = load i32, i32* %res, align 4, !dbg !7328
  %call32 = call i32 @APESIGN(i32 %44), !dbg !7329
  %45 = load i32, i32* %absres, align 4, !dbg !7330
  %46 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7331
  %avg = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %46, i32 0, i32 4, !dbg !7332
  %47 = load i32, i32* %avg, align 8, !dbg !7332
  %mul = mul nsw i32 %47, 3, !dbg !7333
  %cmp33 = icmp sgt i32 %45, %mul, !dbg !7334
  %conv34 = zext i1 %cmp33 to i32, !dbg !7334
  %48 = load i32, i32* %absres, align 4, !dbg !7335
  %49 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7336
  %avg35 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %49, i32 0, i32 4, !dbg !7337
  %50 = load i32, i32* %avg35, align 8, !dbg !7337
  %mul36 = mul nsw i32 %50, 4, !dbg !7338
  %div = sdiv i32 %mul36, 3, !dbg !7339
  %cmp37 = icmp sgt i32 %48, %div, !dbg !7340
  %conv38 = zext i1 %cmp37 to i32, !dbg !7340
  %add39 = add nsw i32 %conv34, %conv38, !dbg !7341
  %shl40 = shl i32 8, %add39, !dbg !7342
  %mul41 = mul nsw i32 %call32, %shl40, !dbg !7343
  %conv42 = trunc i32 %mul41 to i16, !dbg !7329
  %51 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7344
  %adaptcoeffs43 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %51, i32 0, i32 1, !dbg !7345
  %52 = load i16*, i16** %adaptcoeffs43, align 8, !dbg !7345
  store i16 %conv42, i16* %52, align 2, !dbg !7346
  br label %if.end, !dbg !7347

if.else44:                                        ; preds = %cond.end28
  %53 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7348
  %adaptcoeffs45 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %53, i32 0, i32 1, !dbg !7349
  %54 = load i16*, i16** %adaptcoeffs45, align 8, !dbg !7349
  store i16 0, i16* %54, align 2, !dbg !7350
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then31
  %55 = load i32, i32* %absres, align 4, !dbg !7351
  %56 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7352
  %avg46 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %56, i32 0, i32 4, !dbg !7353
  %57 = load i32, i32* %avg46, align 8, !dbg !7353
  %sub47 = sub nsw i32 %55, %57, !dbg !7354
  %div48 = sdiv i32 %sub47, 16, !dbg !7355
  %58 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7356
  %avg49 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %58, i32 0, i32 4, !dbg !7357
  %59 = load i32, i32* %avg49, align 8, !dbg !7358
  %add50 = add nsw i32 %59, %div48, !dbg !7358
  store i32 %add50, i32* %avg49, align 8, !dbg !7358
  %60 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7359
  %adaptcoeffs51 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %60, i32 0, i32 1, !dbg !7360
  %61 = load i16*, i16** %adaptcoeffs51, align 8, !dbg !7360
  %arrayidx52 = getelementptr inbounds i16, i16* %61, i64 -1, !dbg !7359
  %62 = load i16, i16* %arrayidx52, align 2, !dbg !7361
  %conv53 = sext i16 %62 to i32, !dbg !7361
  %shr54 = ashr i32 %conv53, 1, !dbg !7361
  %conv55 = trunc i32 %shr54 to i16, !dbg !7361
  store i16 %conv55, i16* %arrayidx52, align 2, !dbg !7361
  %63 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7362
  %adaptcoeffs56 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %63, i32 0, i32 1, !dbg !7363
  %64 = load i16*, i16** %adaptcoeffs56, align 8, !dbg !7363
  %arrayidx57 = getelementptr inbounds i16, i16* %64, i64 -2, !dbg !7362
  %65 = load i16, i16* %arrayidx57, align 2, !dbg !7364
  %conv58 = sext i16 %65 to i32, !dbg !7364
  %shr59 = ashr i32 %conv58, 1, !dbg !7364
  %conv60 = trunc i32 %shr59 to i16, !dbg !7364
  store i16 %conv60, i16* %arrayidx57, align 2, !dbg !7364
  %66 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7365
  %adaptcoeffs61 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %66, i32 0, i32 1, !dbg !7366
  %67 = load i16*, i16** %adaptcoeffs61, align 8, !dbg !7366
  %arrayidx62 = getelementptr inbounds i16, i16* %67, i64 -8, !dbg !7365
  %68 = load i16, i16* %arrayidx62, align 2, !dbg !7367
  %conv63 = sext i16 %68 to i32, !dbg !7367
  %shr64 = ashr i32 %conv63, 1, !dbg !7367
  %conv65 = trunc i32 %shr64 to i16, !dbg !7367
  store i16 %conv65, i16* %arrayidx62, align 2, !dbg !7367
  br label %if.end66

if.end66:                                         ; preds = %if.end, %cond.end
  %69 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7368
  %adaptcoeffs67 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %69, i32 0, i32 1, !dbg !7369
  %70 = load i16*, i16** %adaptcoeffs67, align 8, !dbg !7370
  %incdec.ptr68 = getelementptr inbounds i16, i16* %70, i32 1, !dbg !7370
  store i16* %incdec.ptr68, i16** %adaptcoeffs67, align 8, !dbg !7370
  %71 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7371
  %delay69 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %71, i32 0, i32 3, !dbg !7373
  %72 = load i16*, i16** %delay69, align 8, !dbg !7373
  %73 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7374
  %historybuffer = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %73, i32 0, i32 2, !dbg !7375
  %74 = load i16*, i16** %historybuffer, align 8, !dbg !7375
  %add.ptr70 = getelementptr inbounds i16, i16* %74, i64 512, !dbg !7376
  %75 = load i32, i32* %order.addr, align 4, !dbg !7377
  %mul71 = mul nsw i32 %75, 2, !dbg !7378
  %idx.ext72 = sext i32 %mul71 to i64, !dbg !7379
  %add.ptr73 = getelementptr inbounds i16, i16* %add.ptr70, i64 %idx.ext72, !dbg !7379
  %cmp74 = icmp eq i16* %72, %add.ptr73, !dbg !7380
  br i1 %cmp74, label %if.then76, label %if.end95, !dbg !7381

if.then76:                                        ; preds = %if.end66
  %76 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7382
  %historybuffer77 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %76, i32 0, i32 2, !dbg !7384
  %77 = load i16*, i16** %historybuffer77, align 8, !dbg !7384
  %78 = bitcast i16* %77 to i8*, !dbg !7385
  %79 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7386
  %delay78 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %79, i32 0, i32 3, !dbg !7387
  %80 = load i16*, i16** %delay78, align 8, !dbg !7387
  %81 = load i32, i32* %order.addr, align 4, !dbg !7388
  %mul79 = mul nsw i32 %81, 2, !dbg !7389
  %idx.ext80 = sext i32 %mul79 to i64, !dbg !7390
  %idx.neg81 = sub i64 0, %idx.ext80, !dbg !7390
  %add.ptr82 = getelementptr inbounds i16, i16* %80, i64 %idx.neg81, !dbg !7390
  %82 = bitcast i16* %add.ptr82 to i8*, !dbg !7385
  %83 = load i32, i32* %order.addr, align 4, !dbg !7391
  %mul83 = mul nsw i32 %83, 2, !dbg !7392
  %conv84 = sext i32 %mul83 to i64, !dbg !7393
  %mul85 = mul i64 %conv84, 2, !dbg !7394
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %78, i8* %82, i64 %mul85, i32 2, i1 false), !dbg !7385
  %84 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7395
  %historybuffer86 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %84, i32 0, i32 2, !dbg !7396
  %85 = load i16*, i16** %historybuffer86, align 8, !dbg !7396
  %86 = load i32, i32* %order.addr, align 4, !dbg !7397
  %mul87 = mul nsw i32 %86, 2, !dbg !7398
  %idx.ext88 = sext i32 %mul87 to i64, !dbg !7399
  %add.ptr89 = getelementptr inbounds i16, i16* %85, i64 %idx.ext88, !dbg !7399
  %87 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7400
  %delay90 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %87, i32 0, i32 3, !dbg !7401
  store i16* %add.ptr89, i16** %delay90, align 8, !dbg !7402
  %88 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7403
  %historybuffer91 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %88, i32 0, i32 2, !dbg !7404
  %89 = load i16*, i16** %historybuffer91, align 8, !dbg !7404
  %90 = load i32, i32* %order.addr, align 4, !dbg !7405
  %idx.ext92 = sext i32 %90 to i64, !dbg !7406
  %add.ptr93 = getelementptr inbounds i16, i16* %89, i64 %idx.ext92, !dbg !7406
  %91 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7407
  %adaptcoeffs94 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %91, i32 0, i32 1, !dbg !7408
  store i16* %add.ptr93, i16** %adaptcoeffs94, align 8, !dbg !7409
  br label %if.end95, !dbg !7410

if.end95:                                         ; preds = %if.then76, %if.end66
  br label %while.cond, !dbg !7411, !llvm.loop !7413

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7414
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

declare void @av_fast_padded_malloc(i8*, i32*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #4 !dbg !7415 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7418, metadata !1747), !dbg !7419
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7420, metadata !1747), !dbg !7421
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !7422, metadata !1747), !dbg !7423
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !7424
  %cmp = icmp sgt i32 %0, 268435455, !dbg !7426
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7427

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !7428
  %cmp1 = icmp slt i32 %1, 0, !dbg !7430
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7431

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !7432
  br label %if.end, !dbg !7433

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7434
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !7435
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !7436
  %mul = mul nsw i32 %4, 8, !dbg !7437
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !7438
  ret i32 %call, !dbg !7439
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7440 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7443, metadata !1747), !dbg !7447
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !7449, metadata !1747), !dbg !7450
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !7451, metadata !1747), !dbg !7452
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7453, metadata !1747), !dbg !7454
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7455, metadata !1747), !dbg !7456
  %0 = load i32, i32* %n.addr, align 4, !dbg !7457
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7458
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !7459
  %2 = load i32, i32* %index, align 8, !dbg !7459
  %sub = sub nsw i32 0, %2, !dbg !7460
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7461
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !7462
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7462
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7463
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !7464
  %6 = load i32, i32* %index1, align 8, !dbg !7464
  %sub2 = sub nsw i32 %4, %6, !dbg !7465
  store i32 %0, i32* %a.addr.i, align 4, !dbg !7466
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !7466
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !7466
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !7467
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !7469
  %cmp.i = icmp slt i32 %7, %8, !dbg !7470
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7471

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !7472
  store i32 %9, i32* %retval.i, align 4, !dbg !7474
  br label %av_clip_c.exit, !dbg !7474

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !7475
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !7477
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !7478
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7479

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !7480
  store i32 %12, i32* %retval.i, align 4, !dbg !7482
  br label %av_clip_c.exit, !dbg !7482

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !7483
  store i32 %13, i32* %retval.i, align 4, !dbg !7484
  br label %av_clip_c.exit, !dbg !7484

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !7485
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7486
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7487
  %16 = load i32, i32* %index3, align 8, !dbg !7488
  %add = add nsw i32 %16, %14, !dbg !7488
  store i32 %add, i32* %index3, align 8, !dbg !7488
  ret void, !dbg !7489
}

; Function Attrs: nounwind uwtable
define internal i32 @init_frame_decoder(%struct.APEContext* %ctx) #1 !dbg !7490 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.APEContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7493, metadata !1747), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7495, metadata !1747), !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7497, metadata !1747), !dbg !7498
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7499
  %call = call i32 @init_entropy_decoder(%struct.APEContext* %0), !dbg !7501
  store i32 %call, i32* %ret, align 4, !dbg !7502
  %cmp = icmp slt i32 %call, 0, !dbg !7503
  br i1 %cmp, label %if.then, label %if.end, !dbg !7504

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !7505
  store i32 %1, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

if.end:                                           ; preds = %entry
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7507
  call void @init_predictor_decoder(%struct.APEContext* %2), !dbg !7508
  store i32 0, i32* %i, align 4, !dbg !7509
  br label %for.cond, !dbg !7511

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !7512
  %cmp1 = icmp slt i32 %3, 3, !dbg !7515
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7516

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !7517
  %idxprom = sext i32 %4 to i64, !dbg !7520
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7521
  %fset = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 9, !dbg !7522
  %6 = load i32, i32* %fset, align 4, !dbg !7522
  %idxprom2 = sext i32 %6 to i64, !dbg !7520
  %arrayidx = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom2, !dbg !7520
  %arrayidx3 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !7520
  %7 = load i16, i16* %arrayidx3, align 2, !dbg !7520
  %tobool = icmp ne i16 %7, 0, !dbg !7520
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !7523

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !7524

if.end5:                                          ; preds = %for.body
  %8 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7525
  %9 = load i32, i32* %i, align 4, !dbg !7526
  %idxprom6 = sext i32 %9 to i64, !dbg !7527
  %10 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7527
  %filters = getelementptr inbounds %struct.APEContext, %struct.APEContext* %10, i32 0, i32 22, !dbg !7528
  %arrayidx7 = getelementptr inbounds [3 x [2 x %struct.APEFilter]], [3 x [2 x %struct.APEFilter]]* %filters, i64 0, i64 %idxprom6, !dbg !7527
  %arraydecay = getelementptr inbounds [2 x %struct.APEFilter], [2 x %struct.APEFilter]* %arrayidx7, i32 0, i32 0, !dbg !7527
  %11 = load i32, i32* %i, align 4, !dbg !7529
  %idxprom8 = sext i32 %11 to i64, !dbg !7530
  %12 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7530
  %filterbuf = getelementptr inbounds %struct.APEContext, %struct.APEContext* %12, i32 0, i32 18, !dbg !7531
  %arrayidx9 = getelementptr inbounds [3 x i16*], [3 x i16*]* %filterbuf, i64 0, i64 %idxprom8, !dbg !7530
  %13 = load i16*, i16** %arrayidx9, align 8, !dbg !7530
  %14 = load i32, i32* %i, align 4, !dbg !7532
  %idxprom10 = sext i32 %14 to i64, !dbg !7533
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7534
  %fset11 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %15, i32 0, i32 9, !dbg !7535
  %16 = load i32, i32* %fset11, align 4, !dbg !7535
  %idxprom12 = sext i32 %16 to i64, !dbg !7533
  %arrayidx13 = getelementptr inbounds [5 x [3 x i16]], [5 x [3 x i16]]* @ape_filter_orders, i64 0, i64 %idxprom12, !dbg !7533
  %arrayidx14 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx13, i64 0, i64 %idxprom10, !dbg !7533
  %17 = load i16, i16* %arrayidx14, align 2, !dbg !7533
  %conv = zext i16 %17 to i32, !dbg !7533
  call void @init_filter(%struct.APEContext* %8, %struct.APEFilter* %arraydecay, i16* %13, i32 %conv), !dbg !7536
  br label %for.inc, !dbg !7537

for.inc:                                          ; preds = %if.end5
  %18 = load i32, i32* %i, align 4, !dbg !7538
  %inc = add nsw i32 %18, 1, !dbg !7538
  store i32 %inc, i32* %i, align 4, !dbg !7538
  br label %for.cond, !dbg !7540, !llvm.loop !7541

for.end:                                          ; preds = %if.then4, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7543
  br label %return, !dbg !7543

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !7544
  ret i32 %19, !dbg !7544
}

declare void @av_fast_malloc(i8*, i32*, i64) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @ape_unpack_mono(%struct.APEContext* %ctx, i32 %count) #1 !dbg !7545 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7546, metadata !1747), !dbg !7547
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7548, metadata !1747), !dbg !7549
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7550
  %frameflags = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 12, !dbg !7552
  %1 = load i32, i32* %frameflags, align 8, !dbg !7552
  %and = and i32 %1, 3, !dbg !7553
  %tobool = icmp ne i32 %and, 0, !dbg !7553
  br i1 %tobool, label %if.then, label %if.end, !dbg !7554

if.then:                                          ; preds = %entry
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7555
  %avctx = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 1, !dbg !7557
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7557
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !7555
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0)), !dbg !7558
  br label %if.end4, !dbg !7559

if.end:                                           ; preds = %entry
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7560
  %entropy_decode_mono = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 29, !dbg !7561
  %6 = load void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)** %entropy_decode_mono, align 8, !dbg !7561
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7562
  %8 = load i32, i32* %count.addr, align 4, !dbg !7563
  call void %6(%struct.APEContext* %7, i32 %8), !dbg !7560
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7564
  %predictor_decode_mono = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 31, !dbg !7565
  %10 = load void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)** %predictor_decode_mono, align 8, !dbg !7565
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7566
  %12 = load i32, i32* %count.addr, align 4, !dbg !7567
  call void %10(%struct.APEContext* %11, i32 %12), !dbg !7564
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7568
  %channels = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 4, !dbg !7570
  %14 = load i32, i32* %channels, align 8, !dbg !7570
  %cmp = icmp eq i32 %14, 2, !dbg !7571
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !7572

if.then1:                                         ; preds = %if.end
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7573
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %15, i32 0, i32 16, !dbg !7575
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 1, !dbg !7573
  %16 = load i32*, i32** %arrayidx, align 8, !dbg !7573
  %17 = bitcast i32* %16 to i8*, !dbg !7576
  %18 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7577
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %18, i32 0, i32 16, !dbg !7578
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 0, !dbg !7577
  %19 = load i32*, i32** %arrayidx3, align 8, !dbg !7577
  %20 = bitcast i32* %19 to i8*, !dbg !7576
  %21 = load i32, i32* %count.addr, align 4, !dbg !7579
  %conv = sext i32 %21 to i64, !dbg !7579
  %mul = mul i64 %conv, 4, !dbg !7580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %20, i64 %mul, i32 4, i1 false), !dbg !7576
  br label %if.end4, !dbg !7581

if.end4:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !7582
}

; Function Attrs: nounwind uwtable
define internal void @ape_unpack_stereo(%struct.APEContext* %ctx, i32 %count) #1 !dbg !7583 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %count.addr = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %decoded0 = alloca i32*, align 8
  %decoded1 = alloca i32*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7584, metadata !1747), !dbg !7585
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7586, metadata !1747), !dbg !7587
  call void @llvm.dbg.declare(metadata i32* %left, metadata !7588, metadata !1747), !dbg !7589
  call void @llvm.dbg.declare(metadata i32* %right, metadata !7590, metadata !1747), !dbg !7591
  call void @llvm.dbg.declare(metadata i32** %decoded0, metadata !7592, metadata !1747), !dbg !7593
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7594
  %decoded = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 16, !dbg !7595
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded, i64 0, i64 0, !dbg !7594
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !7594
  store i32* %1, i32** %decoded0, align 8, !dbg !7593
  call void @llvm.dbg.declare(metadata i32** %decoded1, metadata !7596, metadata !1747), !dbg !7597
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7598
  %decoded2 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 16, !dbg !7599
  %arrayidx3 = getelementptr inbounds [2 x i32*], [2 x i32*]* %decoded2, i64 0, i64 1, !dbg !7598
  %3 = load i32*, i32** %arrayidx3, align 8, !dbg !7598
  store i32* %3, i32** %decoded1, align 8, !dbg !7597
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7600
  %frameflags = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 12, !dbg !7602
  %5 = load i32, i32* %frameflags, align 8, !dbg !7602
  %and = and i32 %5, 3, !dbg !7603
  %cmp = icmp eq i32 %and, 3, !dbg !7604
  br i1 %cmp, label %if.then, label %if.end, !dbg !7605

if.then:                                          ; preds = %entry
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7606
  %avctx = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 1, !dbg !7608
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7608
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !7606
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i32 0, i32 0)), !dbg !7609
  br label %while.end, !dbg !7610

if.end:                                           ; preds = %entry
  %9 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7611
  %entropy_decode_stereo = getelementptr inbounds %struct.APEContext, %struct.APEContext* %9, i32 0, i32 30, !dbg !7612
  %10 = load void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)** %entropy_decode_stereo, align 8, !dbg !7612
  %11 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7613
  %12 = load i32, i32* %count.addr, align 4, !dbg !7614
  call void %10(%struct.APEContext* %11, i32 %12), !dbg !7611
  %13 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7615
  %predictor_decode_stereo = getelementptr inbounds %struct.APEContext, %struct.APEContext* %13, i32 0, i32 32, !dbg !7616
  %14 = load void (%struct.APEContext*, i32)*, void (%struct.APEContext*, i32)** %predictor_decode_stereo, align 8, !dbg !7616
  %15 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7617
  %16 = load i32, i32* %count.addr, align 4, !dbg !7618
  call void %14(%struct.APEContext* %15, i32 %16), !dbg !7615
  br label %while.cond, !dbg !7619

while.cond:                                       ; preds = %while.body, %if.end
  %17 = load i32, i32* %count.addr, align 4, !dbg !7620
  %dec = add nsw i32 %17, -1, !dbg !7620
  store i32 %dec, i32* %count.addr, align 4, !dbg !7620
  %tobool = icmp ne i32 %17, 0, !dbg !7622
  br i1 %tobool, label %while.body, label %while.end, !dbg !7622

while.body:                                       ; preds = %while.cond
  %18 = load i32*, i32** %decoded1, align 8, !dbg !7623
  %19 = load i32, i32* %18, align 4, !dbg !7625
  %20 = load i32*, i32** %decoded0, align 8, !dbg !7626
  %21 = load i32, i32* %20, align 4, !dbg !7627
  %div = sdiv i32 %21, 2, !dbg !7628
  %sub = sub nsw i32 %19, %div, !dbg !7629
  store i32 %sub, i32* %left, align 4, !dbg !7630
  %22 = load i32, i32* %left, align 4, !dbg !7631
  %23 = load i32*, i32** %decoded0, align 8, !dbg !7632
  %24 = load i32, i32* %23, align 4, !dbg !7633
  %add = add nsw i32 %22, %24, !dbg !7634
  store i32 %add, i32* %right, align 4, !dbg !7635
  %25 = load i32, i32* %left, align 4, !dbg !7636
  %26 = load i32*, i32** %decoded0, align 8, !dbg !7637
  %incdec.ptr = getelementptr inbounds i32, i32* %26, i32 1, !dbg !7637
  store i32* %incdec.ptr, i32** %decoded0, align 8, !dbg !7637
  store i32 %25, i32* %26, align 4, !dbg !7638
  %27 = load i32, i32* %right, align 4, !dbg !7639
  %28 = load i32*, i32** %decoded1, align 8, !dbg !7640
  %incdec.ptr4 = getelementptr inbounds i32, i32* %28, i32 1, !dbg !7640
  store i32* %incdec.ptr4, i32** %decoded1, align 8, !dbg !7640
  store i32 %27, i32* %28, align 4, !dbg !7641
  br label %while.cond, !dbg !7642, !llvm.loop !7644

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !7645
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !7646 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7647, metadata !1747), !dbg !7648
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7649, metadata !1747), !dbg !7650
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !7651, metadata !1747), !dbg !7652
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !7653, metadata !1747), !dbg !7654
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7655, metadata !1747), !dbg !7656
  store i32 0, i32* %ret, align 4, !dbg !7656
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !7657
  %cmp = icmp sge i32 %0, 2147483135, !dbg !7659
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7660

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !7661
  %cmp1 = icmp slt i32 %1, 0, !dbg !7663
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7664

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !7665
  %tobool = icmp ne i8* %2, null, !dbg !7665
  br i1 %tobool, label %if.end, label %if.then, !dbg !7667

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !7668
  store i8* null, i8** %buffer.addr, align 8, !dbg !7670
  store i32 -1094995529, i32* %ret, align 4, !dbg !7671
  br label %if.end, !dbg !7672

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !7673
  %add = add nsw i32 %3, 7, !dbg !7674
  %shr = ashr i32 %add, 3, !dbg !7675
  store i32 %shr, i32* %buffer_size, align 4, !dbg !7676
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !7677
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7678
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !7679
  store i8* %4, i8** %buffer3, align 8, !dbg !7680
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !7681
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7682
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !7683
  store i32 %6, i32* %size_in_bits, align 4, !dbg !7684
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !7685
  %add4 = add nsw i32 %8, 8, !dbg !7686
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7687
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !7688
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !7689
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7690
  %11 = load i32, i32* %buffer_size, align 4, !dbg !7691
  %idx.ext = sext i32 %11 to i64, !dbg !7692
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7692
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7693
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !7694
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !7695
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7696
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !7697
  store i32 0, i32* %index, align 8, !dbg !7698
  %14 = load i32, i32* %ret, align 4, !dbg !7699
  ret i32 %14, !dbg !7700
}

; Function Attrs: nounwind uwtable
define internal i32 @init_entropy_decoder(%struct.APEContext* %ctx) #1 !dbg !7701 {
entry:
  %x.addr.i.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i40, metadata !2162, metadata !1747), !dbg !7702
  %b.addr.i41 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i41, metadata !2177, metadata !1747), !dbg !7707
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2162, metadata !1747), !dbg !7708
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2177, metadata !1747), !dbg !7713
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.APEContext*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7714, metadata !1747), !dbg !7715
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7716
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 7, !dbg !7717
  %1 = load i32, i32* %fileversion, align 4, !dbg !7717
  %cmp = icmp sge i32 %1, 3900, !dbg !7718
  br i1 %cmp, label %if.then, label %if.else, !dbg !7719

if.then:                                          ; preds = %entry
  %2 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7720
  %data_end = getelementptr inbounds %struct.APEContext, %struct.APEContext* %2, i32 0, i32 25, !dbg !7722
  %3 = load i8*, i8** %data_end, align 8, !dbg !7722
  %4 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7723
  %ptr = getelementptr inbounds %struct.APEContext, %struct.APEContext* %4, i32 0, i32 27, !dbg !7724
  %5 = load i8*, i8** %ptr, align 8, !dbg !7724
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !7725
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !7725
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7725
  %cmp1 = icmp slt i64 %sub.ptr.sub, 6, !dbg !7726
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7727

if.then2:                                         ; preds = %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !7728
  br label %return, !dbg !7728

if.end:                                           ; preds = %if.then
  %6 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7729
  %ptr3 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %6, i32 0, i32 27, !dbg !7730
  store i8** %ptr3, i8*** %b.addr.i, align 8, !dbg !7731
  %7 = load i8**, i8*** %b.addr.i, align 8, !dbg !7732
  %8 = load i8*, i8** %7, align 8, !dbg !7733
  %add.ptr.i = getelementptr inbounds i8, i8* %8, i64 4, !dbg !7733
  store i8* %add.ptr.i, i8** %7, align 8, !dbg !7733
  %9 = load i8**, i8*** %b.addr.i, align 8, !dbg !7734
  %10 = load i8*, i8** %9, align 8, !dbg !7735
  %add.ptr1.i = getelementptr inbounds i8, i8* %10, i64 -4, !dbg !7736
  %11 = bitcast i8* %add.ptr1.i to %union.unaligned_32*, !dbg !7737
  %l.i = bitcast %union.unaligned_32* %11 to i32*, !dbg !7737
  %12 = load i32, i32* %l.i, align 1, !dbg !7737
  store i32 %12, i32* %x.addr.i.i, align 4, !dbg !7738
  %13 = load i32, i32* %x.addr.i.i, align 4, !dbg !7739
  %shl.i.i = shl i32 %13, 8, !dbg !7740
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !7741
  %14 = load i32, i32* %x.addr.i.i, align 4, !dbg !7742
  %shr.i.i = lshr i32 %14, 8, !dbg !7743
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !7744
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !7745
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !7746
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !7747
  %shr3.i.i = lshr i32 %15, 16, !dbg !7748
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !7749
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !7750
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !7751
  %shr6.i.i = lshr i32 %16, 16, !dbg !7752
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !7753
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !7754
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !7755
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !7756
  %17 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7757
  %CRC = getelementptr inbounds %struct.APEContext, %struct.APEContext* %17, i32 0, i32 11, !dbg !7758
  store i32 %or10.i.i, i32* %CRC, align 4, !dbg !7759
  br label %if.end6, !dbg !7760

if.else:                                          ; preds = %entry
  %18 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7761
  %gb = getelementptr inbounds %struct.APEContext, %struct.APEContext* %18, i32 0, i32 23, !dbg !7763
  %call4 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !7764
  %19 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7765
  %CRC5 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %19, i32 0, i32 11, !dbg !7766
  store i32 %call4, i32* %CRC5, align 4, !dbg !7767
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  %20 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7768
  %frameflags = getelementptr inbounds %struct.APEContext, %struct.APEContext* %20, i32 0, i32 12, !dbg !7769
  store i32 0, i32* %frameflags, align 8, !dbg !7770
  %21 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7771
  %fileversion7 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %21, i32 0, i32 7, !dbg !7772
  %22 = load i32, i32* %fileversion7, align 4, !dbg !7772
  %cmp8 = icmp sgt i32 %22, 3820, !dbg !7773
  br i1 %cmp8, label %land.lhs.true, label %if.end24, !dbg !7774

land.lhs.true:                                    ; preds = %if.end6
  %23 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7775
  %CRC9 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %23, i32 0, i32 11, !dbg !7777
  %24 = load i32, i32* %CRC9, align 4, !dbg !7777
  %and = and i32 %24, -2147483648, !dbg !7778
  %tobool = icmp ne i32 %and, 0, !dbg !7778
  br i1 %tobool, label %if.then10, label %if.end24, !dbg !7779

if.then10:                                        ; preds = %land.lhs.true
  %25 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7780
  %CRC11 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %25, i32 0, i32 11, !dbg !7781
  %26 = load i32, i32* %CRC11, align 4, !dbg !7782
  %and12 = and i32 %26, 2147483647, !dbg !7782
  store i32 %and12, i32* %CRC11, align 4, !dbg !7782
  %27 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7783
  %data_end13 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %27, i32 0, i32 25, !dbg !7785
  %28 = load i8*, i8** %data_end13, align 8, !dbg !7785
  %29 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7786
  %ptr14 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %29, i32 0, i32 27, !dbg !7787
  %30 = load i8*, i8** %ptr14, align 8, !dbg !7787
  %sub.ptr.lhs.cast15 = ptrtoint i8* %28 to i64, !dbg !7788
  %sub.ptr.rhs.cast16 = ptrtoint i8* %30 to i64, !dbg !7788
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !7788
  %cmp18 = icmp slt i64 %sub.ptr.sub17, 6, !dbg !7789
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !7790

if.then19:                                        ; preds = %if.then10
  store i32 -1094995529, i32* %retval, align 4, !dbg !7791
  br label %return, !dbg !7791

if.end20:                                         ; preds = %if.then10
  %31 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7792
  %ptr21 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %31, i32 0, i32 27, !dbg !7793
  store i8** %ptr21, i8*** %b.addr.i41, align 8, !dbg !7794
  %32 = load i8**, i8*** %b.addr.i41, align 8, !dbg !7795
  %33 = load i8*, i8** %32, align 8, !dbg !7796
  %add.ptr.i42 = getelementptr inbounds i8, i8* %33, i64 4, !dbg !7796
  store i8* %add.ptr.i42, i8** %32, align 8, !dbg !7796
  %34 = load i8**, i8*** %b.addr.i41, align 8, !dbg !7797
  %35 = load i8*, i8** %34, align 8, !dbg !7798
  %add.ptr1.i43 = getelementptr inbounds i8, i8* %35, i64 -4, !dbg !7799
  %36 = bitcast i8* %add.ptr1.i43 to %union.unaligned_32*, !dbg !7800
  %l.i44 = bitcast %union.unaligned_32* %36 to i32*, !dbg !7800
  %37 = load i32, i32* %l.i44, align 1, !dbg !7800
  store i32 %37, i32* %x.addr.i.i40, align 4, !dbg !7801
  %38 = load i32, i32* %x.addr.i.i40, align 4, !dbg !7802
  %shl.i.i45 = shl i32 %38, 8, !dbg !7803
  %and.i.i46 = and i32 %shl.i.i45, 65280, !dbg !7804
  %39 = load i32, i32* %x.addr.i.i40, align 4, !dbg !7805
  %shr.i.i47 = lshr i32 %39, 8, !dbg !7806
  %and1.i.i48 = and i32 %shr.i.i47, 255, !dbg !7807
  %or.i.i49 = or i32 %and.i.i46, %and1.i.i48, !dbg !7808
  %shl2.i.i50 = shl i32 %or.i.i49, 16, !dbg !7809
  %40 = load i32, i32* %x.addr.i.i40, align 4, !dbg !7810
  %shr3.i.i51 = lshr i32 %40, 16, !dbg !7811
  %shl4.i.i52 = shl i32 %shr3.i.i51, 8, !dbg !7812
  %and5.i.i53 = and i32 %shl4.i.i52, 65280, !dbg !7813
  %41 = load i32, i32* %x.addr.i.i40, align 4, !dbg !7814
  %shr6.i.i54 = lshr i32 %41, 16, !dbg !7815
  %shr7.i.i55 = lshr i32 %shr6.i.i54, 8, !dbg !7816
  %and8.i.i56 = and i32 %shr7.i.i55, 255, !dbg !7817
  %or9.i.i57 = or i32 %and5.i.i53, %and8.i.i56, !dbg !7818
  %or10.i.i58 = or i32 %shl2.i.i50, %or9.i.i57, !dbg !7819
  %42 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7820
  %frameflags23 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %42, i32 0, i32 12, !dbg !7821
  store i32 %or10.i.i58, i32* %frameflags23, align 8, !dbg !7822
  br label %if.end24, !dbg !7823

if.end24:                                         ; preds = %if.end20, %land.lhs.true, %if.end6
  %43 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7824
  %riceX = getelementptr inbounds %struct.APEContext, %struct.APEContext* %43, i32 0, i32 20, !dbg !7825
  %k = getelementptr inbounds %struct.APERice, %struct.APERice* %riceX, i32 0, i32 0, !dbg !7826
  store i32 10, i32* %k, align 8, !dbg !7827
  %44 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7828
  %riceX25 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %44, i32 0, i32 20, !dbg !7829
  %k26 = getelementptr inbounds %struct.APERice, %struct.APERice* %riceX25, i32 0, i32 0, !dbg !7830
  %45 = load i32, i32* %k26, align 8, !dbg !7830
  %shl = shl i32 1, %45, !dbg !7831
  %mul = mul nsw i32 %shl, 16, !dbg !7832
  %46 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7833
  %riceX27 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %46, i32 0, i32 20, !dbg !7834
  %ksum = getelementptr inbounds %struct.APERice, %struct.APERice* %riceX27, i32 0, i32 1, !dbg !7835
  store i32 %mul, i32* %ksum, align 4, !dbg !7836
  %47 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7837
  %riceY = getelementptr inbounds %struct.APEContext, %struct.APEContext* %47, i32 0, i32 21, !dbg !7838
  %k28 = getelementptr inbounds %struct.APERice, %struct.APERice* %riceY, i32 0, i32 0, !dbg !7839
  store i32 10, i32* %k28, align 8, !dbg !7840
  %48 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7841
  %riceY29 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %48, i32 0, i32 21, !dbg !7842
  %k30 = getelementptr inbounds %struct.APERice, %struct.APERice* %riceY29, i32 0, i32 0, !dbg !7843
  %49 = load i32, i32* %k30, align 8, !dbg !7843
  %shl31 = shl i32 1, %49, !dbg !7844
  %mul32 = mul nsw i32 %shl31, 16, !dbg !7845
  %50 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7846
  %riceY33 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %50, i32 0, i32 21, !dbg !7847
  %ksum34 = getelementptr inbounds %struct.APERice, %struct.APERice* %riceY33, i32 0, i32 1, !dbg !7848
  store i32 %mul32, i32* %ksum34, align 4, !dbg !7849
  %51 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7850
  %fileversion35 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %51, i32 0, i32 7, !dbg !7852
  %52 = load i32, i32* %fileversion35, align 4, !dbg !7852
  %cmp36 = icmp sge i32 %52, 3900, !dbg !7853
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !7854

if.then37:                                        ; preds = %if.end24
  %53 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7855
  %ptr38 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %53, i32 0, i32 27, !dbg !7857
  %54 = load i8*, i8** %ptr38, align 8, !dbg !7858
  %incdec.ptr = getelementptr inbounds i8, i8* %54, i32 1, !dbg !7858
  store i8* %incdec.ptr, i8** %ptr38, align 8, !dbg !7858
  %55 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7859
  call void @range_start_decoding(%struct.APEContext* %55), !dbg !7860
  br label %if.end39, !dbg !7861

if.end39:                                         ; preds = %if.then37, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !7862
  br label %return, !dbg !7862

return:                                           ; preds = %if.end39, %if.then19, %if.then2
  %56 = load i32, i32* %retval, align 4, !dbg !7863
  ret i32 %56, !dbg !7863
}

; Function Attrs: nounwind uwtable
define internal void @init_predictor_decoder(%struct.APEContext* %ctx) #1 !dbg !7864 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %p = alloca %struct.APEPredictor*, align 8
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7865, metadata !1747), !dbg !7866
  call void @llvm.dbg.declare(metadata %struct.APEPredictor** %p, metadata !7867, metadata !1747), !dbg !7868
  %0 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7869
  %predictor = getelementptr inbounds %struct.APEContext, %struct.APEContext* %0, i32 0, i32 13, !dbg !7870
  store %struct.APEPredictor* %predictor, %struct.APEPredictor** %p, align 8, !dbg !7868
  %1 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7871
  %historybuffer = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %1, i32 0, i32 6, !dbg !7872
  %arraydecay = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer, i32 0, i32 0, !dbg !7873
  %2 = bitcast i32* %arraydecay to i8*, !dbg !7873
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 200, i32 8, i1 false), !dbg !7873
  %3 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7874
  %historybuffer1 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %3, i32 0, i32 6, !dbg !7875
  %arraydecay2 = getelementptr inbounds [562 x i32], [562 x i32]* %historybuffer1, i32 0, i32 0, !dbg !7874
  %4 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7876
  %buf = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %4, i32 0, i32 0, !dbg !7877
  store i32* %arraydecay2, i32** %buf, align 8, !dbg !7878
  %5 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7879
  %fileversion = getelementptr inbounds %struct.APEContext, %struct.APEContext* %5, i32 0, i32 7, !dbg !7881
  %6 = load i32, i32* %fileversion, align 4, !dbg !7881
  %cmp = icmp slt i32 %6, 3930, !dbg !7882
  br i1 %cmp, label %if.then, label %if.else15, !dbg !7883

if.then:                                          ; preds = %entry
  %7 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7884
  %compression_level = getelementptr inbounds %struct.APEContext, %struct.APEContext* %7, i32 0, i32 8, !dbg !7887
  %8 = load i32, i32* %compression_level, align 8, !dbg !7887
  %cmp3 = icmp eq i32 %8, 1000, !dbg !7888
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7889

if.then4:                                         ; preds = %if.then
  %9 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7890
  %coeffsA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %9, i32 0, i32 4, !dbg !7892
  %arrayidx = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA, i64 0, i64 0, !dbg !7890
  %arraydecay5 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i32 0, i32 0, !dbg !7893
  %10 = bitcast i32* %arraydecay5 to i8*, !dbg !7893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* bitcast ([1 x i32]* @initial_coeffs_fast_3320 to i8*), i64 4, i32 4, i1 false), !dbg !7893
  %11 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7894
  %coeffsA6 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %11, i32 0, i32 4, !dbg !7895
  %arrayidx7 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA6, i64 0, i64 1, !dbg !7894
  %arraydecay8 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx7, i32 0, i32 0, !dbg !7896
  %12 = bitcast i32* %arraydecay8 to i8*, !dbg !7896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* bitcast ([1 x i32]* @initial_coeffs_fast_3320 to i8*), i64 4, i32 4, i1 false), !dbg !7896
  br label %if.end, !dbg !7897

if.else:                                          ; preds = %if.then
  %13 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7898
  %coeffsA9 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %13, i32 0, i32 4, !dbg !7900
  %arrayidx10 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA9, i64 0, i64 0, !dbg !7898
  %arraydecay11 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx10, i32 0, i32 0, !dbg !7901
  %14 = bitcast i32* %arraydecay11 to i8*, !dbg !7901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* bitcast ([3 x i32]* @initial_coeffs_a_3800 to i8*), i64 12, i32 4, i1 false), !dbg !7901
  %15 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7902
  %coeffsA12 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %15, i32 0, i32 4, !dbg !7903
  %arrayidx13 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA12, i64 0, i64 1, !dbg !7902
  %arraydecay14 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx13, i32 0, i32 0, !dbg !7904
  %16 = bitcast i32* %arraydecay14 to i8*, !dbg !7904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* bitcast ([3 x i32]* @initial_coeffs_a_3800 to i8*), i64 12, i32 4, i1 false), !dbg !7904
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end22, !dbg !7905

if.else15:                                        ; preds = %entry
  %17 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7906
  %coeffsA16 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %17, i32 0, i32 4, !dbg !7908
  %arrayidx17 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA16, i64 0, i64 0, !dbg !7906
  %arraydecay18 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx17, i32 0, i32 0, !dbg !7909
  %18 = bitcast i32* %arraydecay18 to i8*, !dbg !7909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* bitcast ([4 x i32]* @initial_coeffs_3930 to i8*), i64 16, i32 8, i1 false), !dbg !7909
  %19 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7910
  %coeffsA19 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %19, i32 0, i32 4, !dbg !7911
  %arrayidx20 = getelementptr inbounds [2 x [4 x i32]], [2 x [4 x i32]]* %coeffsA19, i64 0, i64 1, !dbg !7910
  %arraydecay21 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx20, i32 0, i32 0, !dbg !7912
  %20 = bitcast i32* %arraydecay21 to i8*, !dbg !7912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* bitcast ([4 x i32]* @initial_coeffs_3930 to i8*), i64 16, i32 8, i1 false), !dbg !7912
  br label %if.end22

if.end22:                                         ; preds = %if.else15, %if.end
  %21 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7913
  %coeffsB = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %21, i32 0, i32 5, !dbg !7914
  %arraydecay23 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB, i32 0, i32 0, !dbg !7915
  %22 = bitcast [5 x i32]* %arraydecay23 to i8*, !dbg !7915
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 40, i32 8, i1 false), !dbg !7915
  %23 = load %struct.APEContext*, %struct.APEContext** %ctx.addr, align 8, !dbg !7916
  %fileversion24 = getelementptr inbounds %struct.APEContext, %struct.APEContext* %23, i32 0, i32 7, !dbg !7918
  %24 = load i32, i32* %fileversion24, align 4, !dbg !7918
  %cmp25 = icmp slt i32 %24, 3930, !dbg !7919
  br i1 %cmp25, label %if.then26, label %if.end33, !dbg !7920

if.then26:                                        ; preds = %if.end22
  %25 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7921
  %coeffsB27 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %25, i32 0, i32 5, !dbg !7923
  %arrayidx28 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB27, i64 0, i64 0, !dbg !7921
  %arraydecay29 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx28, i32 0, i32 0, !dbg !7924
  %26 = bitcast i32* %arraydecay29 to i8*, !dbg !7924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* bitcast ([2 x i32]* @initial_coeffs_b_3800 to i8*), i64 8, i32 4, i1 false), !dbg !7924
  %27 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7925
  %coeffsB30 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %27, i32 0, i32 5, !dbg !7926
  %arrayidx31 = getelementptr inbounds [2 x [5 x i32]], [2 x [5 x i32]]* %coeffsB30, i64 0, i64 1, !dbg !7925
  %arraydecay32 = getelementptr inbounds [5 x i32], [5 x i32]* %arrayidx31, i32 0, i32 0, !dbg !7927
  %28 = bitcast i32* %arraydecay32 to i8*, !dbg !7927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* bitcast ([2 x i32]* @initial_coeffs_b_3800 to i8*), i64 8, i32 4, i1 false), !dbg !7927
  br label %if.end33, !dbg !7928

if.end33:                                         ; preds = %if.then26, %if.end22
  %29 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7929
  %filterA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %29, i32 0, i32 2, !dbg !7930
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA, i64 0, i64 1, !dbg !7929
  store i32 0, i32* %arrayidx34, align 4, !dbg !7931
  %30 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7932
  %filterA35 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %30, i32 0, i32 2, !dbg !7933
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %filterA35, i64 0, i64 0, !dbg !7932
  store i32 0, i32* %arrayidx36, align 8, !dbg !7934
  %31 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7935
  %filterB = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %31, i32 0, i32 3, !dbg !7936
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB, i64 0, i64 1, !dbg !7935
  store i32 0, i32* %arrayidx37, align 4, !dbg !7937
  %32 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7938
  %filterB38 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %32, i32 0, i32 3, !dbg !7939
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %filterB38, i64 0, i64 0, !dbg !7938
  store i32 0, i32* %arrayidx39, align 8, !dbg !7940
  %33 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7941
  %lastA = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %33, i32 0, i32 1, !dbg !7942
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA, i64 0, i64 1, !dbg !7941
  store i32 0, i32* %arrayidx40, align 4, !dbg !7943
  %34 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7944
  %lastA41 = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %34, i32 0, i32 1, !dbg !7945
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %lastA41, i64 0, i64 0, !dbg !7944
  store i32 0, i32* %arrayidx42, align 8, !dbg !7946
  %35 = load %struct.APEPredictor*, %struct.APEPredictor** %p, align 8, !dbg !7947
  %sample_pos = getelementptr inbounds %struct.APEPredictor, %struct.APEPredictor* %35, i32 0, i32 7, !dbg !7948
  store i32 0, i32* %sample_pos, align 8, !dbg !7949
  ret void, !dbg !7950
}

; Function Attrs: nounwind uwtable
define internal void @init_filter(%struct.APEContext* %ctx, %struct.APEFilter* %f, i16* %buf, i32 %order) #1 !dbg !7951 {
entry:
  %ctx.addr = alloca %struct.APEContext*, align 8
  %f.addr = alloca %struct.APEFilter*, align 8
  %buf.addr = alloca i16*, align 8
  %order.addr = alloca i32, align 4
  store %struct.APEContext* %ctx, %struct.APEContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEContext** %ctx.addr, metadata !7954, metadata !1747), !dbg !7955
  store %struct.APEFilter* %f, %struct.APEFilter** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEFilter** %f.addr, metadata !7956, metadata !1747), !dbg !7957
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !7958, metadata !1747), !dbg !7959
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7960, metadata !1747), !dbg !7961
  %0 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7962
  %arrayidx = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %0, i64 0, !dbg !7962
  %1 = load i16*, i16** %buf.addr, align 8, !dbg !7963
  %2 = load i32, i32* %order.addr, align 4, !dbg !7964
  call void @do_init_filter(%struct.APEFilter* %arrayidx, i16* %1, i32 %2), !dbg !7965
  %3 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !7966
  %arrayidx1 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %3, i64 1, !dbg !7966
  %4 = load i16*, i16** %buf.addr, align 8, !dbg !7967
  %5 = load i32, i32* %order.addr, align 4, !dbg !7968
  %mul = mul nsw i32 %5, 3, !dbg !7969
  %idx.ext = sext i32 %mul to i64, !dbg !7970
  %add.ptr = getelementptr inbounds i16, i16* %4, i64 %idx.ext, !dbg !7970
  %add.ptr2 = getelementptr inbounds i16, i16* %add.ptr, i64 512, !dbg !7971
  %6 = load i32, i32* %order.addr, align 4, !dbg !7972
  call void @do_init_filter(%struct.APEFilter* %arrayidx1, i16* %add.ptr2, i32 %6), !dbg !7973
  ret void, !dbg !7974
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7975 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7976, metadata !1747), !dbg !7977
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7978, metadata !1747), !dbg !7979
  %0 = load i32, i32* %n.addr, align 4, !dbg !7980
  %tobool = icmp ne i32 %0, 0, !dbg !7980
  br i1 %tobool, label %if.else, label %if.then, !dbg !7982

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !7985
  %cmp = icmp sle i32 %1, 25, !dbg !7987
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !7988

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7989
  %3 = load i32, i32* %n.addr, align 4, !dbg !7991
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7992
  store i32 %call, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7994, metadata !1747), !dbg !7996
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7997
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !7998
  %5 = load i32, i32* %n.addr, align 4, !dbg !7999
  %sub = sub nsw i32 %5, 16, !dbg !8000
  %shl = shl i32 %call3, %sub, !dbg !8001
  store i32 %shl, i32* %ret, align 4, !dbg !7996
  %6 = load i32, i32* %ret, align 4, !dbg !8002
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8003
  %8 = load i32, i32* %n.addr, align 4, !dbg !8004
  %sub4 = sub nsw i32 %8, 16, !dbg !8005
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !8006
  %or = or i32 %6, %call5, !dbg !8007
  store i32 %or, i32* %retval, align 4, !dbg !8008
  br label %return, !dbg !8008

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8009
  ret i32 %9, !dbg !8009
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @do_init_filter(%struct.APEFilter* %f, i16* %buf, i32 %order) #1 !dbg !8010 {
entry:
  %f.addr = alloca %struct.APEFilter*, align 8
  %buf.addr = alloca i16*, align 8
  %order.addr = alloca i32, align 4
  store %struct.APEFilter* %f, %struct.APEFilter** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APEFilter** %f.addr, metadata !8013, metadata !1747), !dbg !8014
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !8015, metadata !1747), !dbg !8016
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !8017, metadata !1747), !dbg !8018
  %0 = load i16*, i16** %buf.addr, align 8, !dbg !8019
  %1 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8020
  %coeffs = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %1, i32 0, i32 0, !dbg !8021
  store i16* %0, i16** %coeffs, align 8, !dbg !8022
  %2 = load i16*, i16** %buf.addr, align 8, !dbg !8023
  %3 = load i32, i32* %order.addr, align 4, !dbg !8024
  %idx.ext = sext i32 %3 to i64, !dbg !8025
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext, !dbg !8025
  %4 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8026
  %historybuffer = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %4, i32 0, i32 2, !dbg !8027
  store i16* %add.ptr, i16** %historybuffer, align 8, !dbg !8028
  %5 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8029
  %historybuffer1 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %5, i32 0, i32 2, !dbg !8030
  %6 = load i16*, i16** %historybuffer1, align 8, !dbg !8030
  %7 = load i32, i32* %order.addr, align 4, !dbg !8031
  %mul = mul nsw i32 %7, 2, !dbg !8032
  %idx.ext2 = sext i32 %mul to i64, !dbg !8033
  %add.ptr3 = getelementptr inbounds i16, i16* %6, i64 %idx.ext2, !dbg !8033
  %8 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8034
  %delay = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %8, i32 0, i32 3, !dbg !8035
  store i16* %add.ptr3, i16** %delay, align 8, !dbg !8036
  %9 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8037
  %historybuffer4 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %9, i32 0, i32 2, !dbg !8038
  %10 = load i16*, i16** %historybuffer4, align 8, !dbg !8038
  %11 = load i32, i32* %order.addr, align 4, !dbg !8039
  %idx.ext5 = sext i32 %11 to i64, !dbg !8040
  %add.ptr6 = getelementptr inbounds i16, i16* %10, i64 %idx.ext5, !dbg !8040
  %12 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8041
  %adaptcoeffs = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %12, i32 0, i32 1, !dbg !8042
  store i16* %add.ptr6, i16** %adaptcoeffs, align 8, !dbg !8043
  %13 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8044
  %historybuffer7 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %13, i32 0, i32 2, !dbg !8045
  %14 = load i16*, i16** %historybuffer7, align 8, !dbg !8045
  %15 = bitcast i16* %14 to i8*, !dbg !8046
  %16 = load i32, i32* %order.addr, align 4, !dbg !8047
  %mul8 = mul nsw i32 %16, 2, !dbg !8048
  %conv = sext i32 %mul8 to i64, !dbg !8049
  %mul9 = mul i64 %conv, 2, !dbg !8050
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %mul9, i32 2, i1 false), !dbg !8046
  %17 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8051
  %coeffs10 = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %17, i32 0, i32 0, !dbg !8052
  %18 = load i16*, i16** %coeffs10, align 8, !dbg !8052
  %19 = bitcast i16* %18 to i8*, !dbg !8053
  %20 = load i32, i32* %order.addr, align 4, !dbg !8054
  %conv11 = sext i32 %20 to i64, !dbg !8054
  %mul12 = mul i64 %conv11, 2, !dbg !8055
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %mul12, i32 2, i1 false), !dbg !8053
  %21 = load %struct.APEFilter*, %struct.APEFilter** %f.addr, align 8, !dbg !8056
  %avg = getelementptr inbounds %struct.APEFilter, %struct.APEFilter* %21, i32 0, i32 4, !dbg !8057
  store i32 0, i32* %avg, align 8, !dbg !8058
  ret void, !dbg !8059
}

declare void @av_freep(i8*) #2

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1741, !1742}
!llvm.ident = !{!1743}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !917, globals: !949)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--apedec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "APECompressionLevel", file: !910, line: 67, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/apedec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!911 = !{!912, !913, !914, !915, !916}
!912 = !DIEnumerator(name: "COMPRESSION_LEVEL_FAST", value: 1000)
!913 = !DIEnumerator(name: "COMPRESSION_LEVEL_NORMAL", value: 2000)
!914 = !DIEnumerator(name: "COMPRESSION_LEVEL_HIGH", value: 3000)
!915 = !DIEnumerator(name: "COMPRESSION_LEVEL_EXTRA_HIGH", value: 4000)
!916 = !DIEnumerator(name: "COMPRESSION_LEVEL_INSANE", value: 5000)
!917 = !{!918, !919, !920, !929, !935, !934, !937, !939, !940, !941, !943, !944, !947}
!918 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!919 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !923, line: 222, size: 16, align: 8, elements: !924)
!923 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!924 = !{!925}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !922, file: !923, line: 222, baseType: !926, size: 16, align: 16)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !927, line: 49, baseType: !928)
!927 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!928 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64, align: 64)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !923, line: 221, size: 32, align: 8, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !931, file: !923, line: 221, baseType: !934, size: 32, align: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !927, line: 51, baseType: !919)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !927, line: 48, baseType: !936)
!936 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !927, line: 37, baseType: !946)
!946 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !927, line: 38, baseType: !918)
!949 = !{!950, !1704, !1705, !1711, !1716, !1720, !1724, !1725, !1726, !1728, !1733, !1735, !1737}
!950 = distinct !DIGlobalVariable(name: "ff_ape_decoder", scope: !0, file: !910, line: 1577, type: !951, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_ape_decoder)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !953)
!953 = !{!954, !958, !959, !960, !961, !962, !971, !974, !977, !980, !985, !986, !1061, !1069, !1070, !1071, !1073, !1619, !1625, !1633, !1637, !1638, !1675, !1679, !1683, !1684, !1688, !1692, !1693, !1697, !1698, !1699}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !952, file: !14, line: 3475, baseType: !955, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !952, file: !14, line: 3480, baseType: !955, size: 64, align: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !952, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !952, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !952, file: !14, line: 3487, baseType: !918, size: 32, align: 32, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !952, file: !14, line: 3488, baseType: !963, size: 64, align: 64, offset: 256)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !966, line: 61, baseType: !967)
!966 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !966, line: 58, size: 64, align: 32, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !967, file: !966, line: 59, baseType: !918, size: 32, align: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !967, file: !966, line: 60, baseType: !918, size: 32, align: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !952, file: !14, line: 3489, baseType: !972, size: 64, align: 64, offset: 320)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !952, file: !14, line: 3490, baseType: !975, size: 64, align: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !952, file: !14, line: 3491, baseType: !978, size: 64, align: 64, offset: 448)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !952, file: !14, line: 3492, baseType: !981, size: 64, align: 64, offset: 512)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !927, line: 55, baseType: !984)
!984 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !952, file: !14, line: 3493, baseType: !935, size: 8, align: 8, offset: 576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !952, file: !14, line: 3494, baseType: !987, size: 64, align: 64, offset: 640)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !991)
!991 = !{!992, !993, !997, !1020, !1021, !1022, !1023, !1027, !1033, !1035, !1039}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !990, file: !713, line: 72, baseType: !955, size: 64, align: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !990, file: !713, line: 78, baseType: !994, size: 64, align: 64, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!955, !939}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !990, file: !713, line: 85, baseType: !998, size: 64, align: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1016, !1017, !1018, !1019}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1000, file: !691, line: 247, baseType: !955, size: 64, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1000, file: !691, line: 253, baseType: !955, size: 64, align: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1000, file: !691, line: 259, baseType: !918, size: 32, align: 32, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1000, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1000, file: !691, line: 271, baseType: !1007, size: 64, align: 64, offset: 192)
!1007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1000, file: !691, line: 265, size: 64, align: 64, elements: !1008)
!1008 = !{!1009, !1012, !1014, !1015}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1007, file: !691, line: 266, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !927, line: 40, baseType: !1011)
!1011 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1007, file: !691, line: 267, baseType: !1013, size: 64, align: 64)
!1013 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1007, file: !691, line: 268, baseType: !955, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1007, file: !691, line: 270, baseType: !965, size: 64, align: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1000, file: !691, line: 272, baseType: !1013, size: 64, align: 64, offset: 256)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1000, file: !691, line: 273, baseType: !1013, size: 64, align: 64, offset: 320)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1000, file: !691, line: 275, baseType: !918, size: 32, align: 32, offset: 384)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1000, file: !691, line: 300, baseType: !955, size: 64, align: 64, offset: 448)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !990, file: !713, line: 93, baseType: !918, size: 32, align: 32, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !990, file: !713, line: 99, baseType: !918, size: 32, align: 32, offset: 224)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !990, file: !713, line: 108, baseType: !918, size: 32, align: 32, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !990, file: !713, line: 113, baseType: !1024, size: 64, align: 64, offset: 320)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!939, !939, !939}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !990, file: !713, line: 123, baseType: !1028, size: 64, align: 64, offset: 384)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!1031, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !990, file: !713, line: 130, baseType: !1034, size: 32, align: 32, offset: 448)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !990, file: !713, line: 136, baseType: !1036, size: 64, align: 64, offset: 512)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!1034, !939}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !990, file: !713, line: 142, baseType: !1040, size: 64, align: 64, offset: 576)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!918, !1043, !939, !955, !918}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1046)
!1046 = !{!1047, !1059, !1060}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1045, file: !691, line: 360, baseType: !1048, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1057, !1058}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1051, file: !691, line: 307, baseType: !955, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1051, file: !691, line: 313, baseType: !1013, size: 64, align: 64, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1051, file: !691, line: 313, baseType: !1013, size: 64, align: 64, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1051, file: !691, line: 318, baseType: !1013, size: 64, align: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1051, file: !691, line: 318, baseType: !1013, size: 64, align: 64, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1051, file: !691, line: 323, baseType: !918, size: 32, align: 32, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1045, file: !691, line: 364, baseType: !918, size: 32, align: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1045, file: !691, line: 368, baseType: !918, size: 32, align: 32, offset: 96)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !952, file: !14, line: 3495, baseType: !1062, size: 64, align: 64, offset: 704)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1065, file: !14, line: 3402, baseType: !918, size: 32, align: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1065, file: !14, line: 3403, baseType: !955, size: 64, align: 64, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !952, file: !14, line: 3507, baseType: !955, size: 64, align: 64, offset: 768)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !952, file: !14, line: 3516, baseType: !918, size: 32, align: 32, offset: 832)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !952, file: !14, line: 3517, baseType: !1072, size: 64, align: 64, offset: 896)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !952, file: !14, line: 3527, baseType: !1074, size: 64, align: 64, offset: 960)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!918, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1087, !1088, !1089, !1090, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1369, !1373, !1374, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1557, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1079, file: !14, line: 1561, baseType: !987, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1079, file: !14, line: 1562, baseType: !918, size: 32, align: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1079, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1079, file: !14, line: 1565, baseType: !1085, size: 64, align: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1079, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1079, file: !14, line: 1581, baseType: !919, size: 32, align: 32, offset: 224)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1079, file: !14, line: 1583, baseType: !939, size: 64, align: 64, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1079, file: !14, line: 1591, baseType: !1091, size: 64, align: 64, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1093, line: 129, size: 1664, align: 64, elements: !1094)
!1093 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1094 = !{!1095, !1096, !1097, !1098, !1195, !1216, !1217, !1246, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1092, file: !1093, line: 136, baseType: !918, size: 32, align: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1092, file: !1093, line: 151, baseType: !918, size: 32, align: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1092, file: !1093, line: 157, baseType: !918, size: 32, align: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1092, file: !1093, line: 159, baseType: !1099, size: 64, align: 64, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1102)
!1102 = !{!1103, !1107, !1109, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1147, !1149, !1150, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1183, !1184, !1185, !1186, !1187, !1188, !1191, !1192, !1193, !1194}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1101, file: !744, line: 282, baseType: !1104, size: 512, align: 64)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 512, align: 64, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 8)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1101, file: !744, line: 299, baseType: !1108, size: 256, align: 32, offset: 512)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 256, align: 32, elements: !1105)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1101, file: !744, line: 315, baseType: !1110, size: 64, align: 64, offset: 768)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1101, file: !744, line: 326, baseType: !918, size: 32, align: 32, offset: 832)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1101, file: !744, line: 326, baseType: !918, size: 32, align: 32, offset: 864)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1101, file: !744, line: 334, baseType: !918, size: 32, align: 32, offset: 896)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1101, file: !744, line: 341, baseType: !918, size: 32, align: 32, offset: 928)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1101, file: !744, line: 346, baseType: !918, size: 32, align: 32, offset: 960)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1101, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1101, file: !744, line: 356, baseType: !965, size: 64, align: 32, offset: 1024)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1101, file: !744, line: 361, baseType: !1010, size: 64, align: 64, offset: 1088)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1101, file: !744, line: 369, baseType: !1010, size: 64, align: 64, offset: 1152)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1101, file: !744, line: 377, baseType: !1010, size: 64, align: 64, offset: 1216)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1101, file: !744, line: 382, baseType: !918, size: 32, align: 32, offset: 1280)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1101, file: !744, line: 386, baseType: !918, size: 32, align: 32, offset: 1312)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1101, file: !744, line: 391, baseType: !918, size: 32, align: 32, offset: 1344)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1101, file: !744, line: 396, baseType: !939, size: 64, align: 64, offset: 1408)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1101, file: !744, line: 403, baseType: !1126, size: 512, align: 64, offset: 1472)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 512, align: 64, elements: !1105)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1101, file: !744, line: 410, baseType: !918, size: 32, align: 32, offset: 1984)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1101, file: !744, line: 415, baseType: !918, size: 32, align: 32, offset: 2016)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1101, file: !744, line: 420, baseType: !918, size: 32, align: 32, offset: 2048)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1101, file: !744, line: 425, baseType: !918, size: 32, align: 32, offset: 2080)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1101, file: !744, line: 435, baseType: !1010, size: 64, align: 64, offset: 2112)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1101, file: !744, line: 440, baseType: !918, size: 32, align: 32, offset: 2176)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1101, file: !744, line: 445, baseType: !983, size: 64, align: 64, offset: 2240)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1101, file: !744, line: 459, baseType: !1135, size: 512, align: 64, offset: 2304)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 512, align: 64, elements: !1105)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64, align: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1138, line: 94, baseType: !1139)
!1138 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1138, line: 81, size: 192, align: 64, elements: !1140)
!1140 = !{!1141, !1145, !1146}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1139, file: !1138, line: 82, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1138, line: 73, baseType: !1144)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1138, line: 73, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1139, file: !1138, line: 89, baseType: !943, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1139, file: !1138, line: 93, baseType: !918, size: 32, align: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1101, file: !744, line: 473, baseType: !1148, size: 64, align: 64, offset: 2816)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1101, file: !744, line: 477, baseType: !918, size: 32, align: 32, offset: 2880)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1101, file: !744, line: 479, baseType: !1151, size: 64, align: 64, offset: 2944)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1164}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1154, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1154, file: !744, line: 203, baseType: !943, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1154, file: !744, line: 204, baseType: !918, size: 32, align: 32, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1154, file: !744, line: 205, baseType: !1160, size: 64, align: 64, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1162, line: 86, baseType: !1163)
!1162 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1162, line: 86, flags: DIFlagFwdDecl)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1154, file: !744, line: 206, baseType: !1136, size: 64, align: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1101, file: !744, line: 480, baseType: !918, size: 32, align: 32, offset: 3008)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1101, file: !744, line: 505, baseType: !918, size: 32, align: 32, offset: 3040)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1101, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1101, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1101, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1101, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1101, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1101, file: !744, line: 532, baseType: !1010, size: 64, align: 64, offset: 3264)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1101, file: !744, line: 539, baseType: !1010, size: 64, align: 64, offset: 3328)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1101, file: !744, line: 547, baseType: !1010, size: 64, align: 64, offset: 3392)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1101, file: !744, line: 554, baseType: !1160, size: 64, align: 64, offset: 3456)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1101, file: !744, line: 563, baseType: !918, size: 32, align: 32, offset: 3520)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1101, file: !744, line: 572, baseType: !918, size: 32, align: 32, offset: 3552)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1101, file: !744, line: 581, baseType: !918, size: 32, align: 32, offset: 3584)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1101, file: !744, line: 588, baseType: !1180, size: 64, align: 64, offset: 3648)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !927, line: 36, baseType: !1182)
!1182 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1101, file: !744, line: 593, baseType: !918, size: 32, align: 32, offset: 3712)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1101, file: !744, line: 596, baseType: !918, size: 32, align: 32, offset: 3744)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1101, file: !744, line: 599, baseType: !1136, size: 64, align: 64, offset: 3776)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1101, file: !744, line: 605, baseType: !1136, size: 64, align: 64, offset: 3840)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1101, file: !744, line: 616, baseType: !1136, size: 64, align: 64, offset: 3904)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1101, file: !744, line: 626, baseType: !1189, size: 64, align: 64, offset: 3968)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1190, line: 216, baseType: !984)
!1190 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1101, file: !744, line: 627, baseType: !1189, size: 64, align: 64, offset: 4032)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1101, file: !744, line: 628, baseType: !1189, size: 64, align: 64, offset: 4096)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1101, file: !744, line: 629, baseType: !1189, size: 64, align: 64, offset: 4160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1101, file: !744, line: 645, baseType: !1136, size: 64, align: 64, offset: 4224)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1092, file: !1093, line: 161, baseType: !1196, size: 64, align: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1093, line: 117, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1093, line: 100, size: 832, align: 64, elements: !1199)
!1199 = !{!1200, !1207, !1208, !1209, !1210, !1211, !1213, !1214, !1215}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1198, file: !1093, line: 105, baseType: !1201, size: 256, align: 64)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1202, size: 256, align: 64, elements: !1205)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1138, line: 238, baseType: !1204)
!1204 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1138, line: 238, flags: DIFlagFwdDecl)
!1205 = !{!1206}
!1206 = !DISubrange(count: 4)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1198, file: !1093, line: 110, baseType: !918, size: 32, align: 32, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1198, file: !1093, line: 111, baseType: !918, size: 32, align: 32, offset: 288)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1198, file: !1093, line: 111, baseType: !918, size: 32, align: 32, offset: 320)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1198, file: !1093, line: 112, baseType: !1108, size: 256, align: 32, offset: 352)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1198, file: !1093, line: 113, baseType: !1212, size: 128, align: 32, offset: 608)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 128, align: 32, elements: !1205)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1198, file: !1093, line: 114, baseType: !918, size: 32, align: 32, offset: 736)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1198, file: !1093, line: 115, baseType: !918, size: 32, align: 32, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1198, file: !1093, line: 116, baseType: !918, size: 32, align: 32, offset: 800)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1092, file: !1093, line: 163, baseType: !939, size: 64, align: 64, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1092, file: !1093, line: 165, baseType: !1218, size: 128, align: 64, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1093, line: 122, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1093, line: 119, size: 128, align: 64, elements: !1220)
!1220 = !{!1221, !1245}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1219, file: !1093, line: 120, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1241, !1242, !1243, !1244}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1224, file: !14, line: 1451, baseType: !1136, size: 64, align: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1224, file: !14, line: 1461, baseType: !1010, size: 64, align: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1224, file: !14, line: 1467, baseType: !1010, size: 64, align: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1224, file: !14, line: 1468, baseType: !943, size: 64, align: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1224, file: !14, line: 1469, baseType: !918, size: 32, align: 32, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1224, file: !14, line: 1470, baseType: !918, size: 32, align: 32, offset: 288)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1224, file: !14, line: 1474, baseType: !918, size: 32, align: 32, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1224, file: !14, line: 1479, baseType: !1234, size: 64, align: 64, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1237)
!1237 = !{!1238, !1239, !1240}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1236, file: !14, line: 1412, baseType: !943, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1236, file: !14, line: 1413, baseType: !918, size: 32, align: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1236, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1224, file: !14, line: 1480, baseType: !918, size: 32, align: 32, offset: 448)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1224, file: !14, line: 1486, baseType: !1010, size: 64, align: 64, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1224, file: !14, line: 1488, baseType: !1010, size: 64, align: 64, offset: 576)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1224, file: !14, line: 1497, baseType: !1010, size: 64, align: 64, offset: 640)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1219, file: !1093, line: 121, baseType: !1099, size: 64, align: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1092, file: !1093, line: 166, baseType: !1247, size: 128, align: 64, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1093, line: 127, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1093, line: 124, size: 128, align: 64, elements: !1249)
!1249 = !{!1250, !1323}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1248, file: !1093, line: 125, baseType: !1251, size: 64, align: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1255)
!1255 = !{!1256, !1257, !1281, !1285, !1286, !1320, !1321, !1322}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1254, file: !14, line: 5751, baseType: !987, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1254, file: !14, line: 5756, baseType: !1258, size: 64, align: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64, align: 64)
!1259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1261)
!1261 = !{!1262, !1263, !1266, !1267, !1268, !1272, !1276, !1280}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1260, file: !14, line: 5797, baseType: !955, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1260, file: !14, line: 5804, baseType: !1264, size: 64, align: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1260, file: !14, line: 5815, baseType: !987, size: 64, align: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1260, file: !14, line: 5825, baseType: !918, size: 32, align: 32, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1260, file: !14, line: 5826, baseType: !1269, size: 64, align: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!918, !1252}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1260, file: !14, line: 5827, baseType: !1273, size: 64, align: 64, offset: 320)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64, align: 64)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!918, !1252, !1222}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1260, file: !14, line: 5828, baseType: !1277, size: 64, align: 64, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !1252}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1260, file: !14, line: 5829, baseType: !1277, size: 64, align: 64, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1254, file: !14, line: 5762, baseType: !1282, size: 64, align: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1284)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1254, file: !14, line: 5768, baseType: !939, size: 64, align: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1254, file: !14, line: 5775, baseType: !1287, size: 64, align: 64, offset: 256)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1289, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1289, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1289, file: !14, line: 3948, baseType: !934, size: 32, align: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1289, file: !14, line: 3958, baseType: !943, size: 64, align: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1289, file: !14, line: 3962, baseType: !918, size: 32, align: 32, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1289, file: !14, line: 3968, baseType: !918, size: 32, align: 32, offset: 224)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1289, file: !14, line: 3973, baseType: !1010, size: 64, align: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1289, file: !14, line: 3986, baseType: !918, size: 32, align: 32, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1289, file: !14, line: 3999, baseType: !918, size: 32, align: 32, offset: 352)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1289, file: !14, line: 4004, baseType: !918, size: 32, align: 32, offset: 384)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1289, file: !14, line: 4005, baseType: !918, size: 32, align: 32, offset: 416)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1289, file: !14, line: 4010, baseType: !918, size: 32, align: 32, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1289, file: !14, line: 4011, baseType: !918, size: 32, align: 32, offset: 480)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1289, file: !14, line: 4020, baseType: !965, size: 64, align: 32, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1289, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1289, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1289, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1289, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1289, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1289, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1289, file: !14, line: 4039, baseType: !918, size: 32, align: 32, offset: 768)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1289, file: !14, line: 4046, baseType: !983, size: 64, align: 64, offset: 832)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1289, file: !14, line: 4050, baseType: !918, size: 32, align: 32, offset: 896)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1289, file: !14, line: 4054, baseType: !918, size: 32, align: 32, offset: 928)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1289, file: !14, line: 4061, baseType: !918, size: 32, align: 32, offset: 960)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1289, file: !14, line: 4065, baseType: !918, size: 32, align: 32, offset: 992)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1289, file: !14, line: 4073, baseType: !918, size: 32, align: 32, offset: 1024)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1289, file: !14, line: 4080, baseType: !918, size: 32, align: 32, offset: 1056)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1289, file: !14, line: 4084, baseType: !918, size: 32, align: 32, offset: 1088)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1254, file: !14, line: 5781, baseType: !1287, size: 64, align: 64, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1254, file: !14, line: 5787, baseType: !965, size: 64, align: 32, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1254, file: !14, line: 5793, baseType: !965, size: 64, align: 32, offset: 448)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1248, file: !1093, line: 126, baseType: !918, size: 32, align: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1092, file: !1093, line: 172, baseType: !1222, size: 64, align: 64, offset: 576)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1092, file: !1093, line: 177, baseType: !943, size: 64, align: 64, offset: 640)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1092, file: !1093, line: 178, baseType: !919, size: 32, align: 32, offset: 704)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1092, file: !1093, line: 180, baseType: !939, size: 64, align: 64, offset: 768)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1092, file: !1093, line: 185, baseType: !918, size: 32, align: 32, offset: 832)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1092, file: !1093, line: 190, baseType: !939, size: 64, align: 64, offset: 896)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1092, file: !1093, line: 195, baseType: !918, size: 32, align: 32, offset: 960)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1092, file: !1093, line: 200, baseType: !1222, size: 64, align: 64, offset: 1024)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1092, file: !1093, line: 201, baseType: !918, size: 32, align: 32, offset: 1088)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1092, file: !1093, line: 202, baseType: !1099, size: 64, align: 64, offset: 1152)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1092, file: !1093, line: 203, baseType: !918, size: 32, align: 32, offset: 1216)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1092, file: !1093, line: 205, baseType: !918, size: 32, align: 32, offset: 1248)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1092, file: !1093, line: 206, baseType: !918, size: 32, align: 32, offset: 1280)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1092, file: !1093, line: 209, baseType: !1189, size: 64, align: 64, offset: 1344)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1092, file: !1093, line: 212, baseType: !1189, size: 64, align: 64, offset: 1408)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1092, file: !1093, line: 213, baseType: !1099, size: 64, align: 64, offset: 1472)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1092, file: !1093, line: 215, baseType: !918, size: 32, align: 32, offset: 1536)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1092, file: !1093, line: 217, baseType: !918, size: 32, align: 32, offset: 1568)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1092, file: !1093, line: 220, baseType: !918, size: 32, align: 32, offset: 1600)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1079, file: !14, line: 1598, baseType: !939, size: 64, align: 64, offset: 384)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1079, file: !14, line: 1606, baseType: !1010, size: 64, align: 64, offset: 448)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1079, file: !14, line: 1614, baseType: !918, size: 32, align: 32, offset: 512)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1079, file: !14, line: 1622, baseType: !918, size: 32, align: 32, offset: 544)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1079, file: !14, line: 1628, baseType: !918, size: 32, align: 32, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1079, file: !14, line: 1636, baseType: !918, size: 32, align: 32, offset: 608)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1079, file: !14, line: 1643, baseType: !918, size: 32, align: 32, offset: 640)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1079, file: !14, line: 1657, baseType: !943, size: 64, align: 64, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1079, file: !14, line: 1658, baseType: !918, size: 32, align: 32, offset: 768)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1079, file: !14, line: 1679, baseType: !965, size: 64, align: 32, offset: 800)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1079, file: !14, line: 1688, baseType: !918, size: 32, align: 32, offset: 864)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1079, file: !14, line: 1712, baseType: !918, size: 32, align: 32, offset: 896)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1079, file: !14, line: 1729, baseType: !918, size: 32, align: 32, offset: 928)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1079, file: !14, line: 1729, baseType: !918, size: 32, align: 32, offset: 960)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1079, file: !14, line: 1744, baseType: !918, size: 32, align: 32, offset: 992)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1079, file: !14, line: 1744, baseType: !918, size: 32, align: 32, offset: 1024)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1079, file: !14, line: 1751, baseType: !918, size: 32, align: 32, offset: 1056)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1079, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1079, file: !14, line: 1791, baseType: !1362, size: 64, align: 64, offset: 1152)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !1365, !1366, !1368, !918, !918, !918}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1079, file: !14, line: 1808, baseType: !1370, size: 64, align: 64, offset: 1216)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!473, !1365, !972}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1079, file: !14, line: 1816, baseType: !918, size: 32, align: 32, offset: 1280)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1079, file: !14, line: 1825, baseType: !1375, size: 32, align: 32, offset: 1312)
!1375 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1079, file: !14, line: 1830, baseType: !918, size: 32, align: 32, offset: 1344)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1079, file: !14, line: 1838, baseType: !1375, size: 32, align: 32, offset: 1376)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1079, file: !14, line: 1846, baseType: !918, size: 32, align: 32, offset: 1408)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1079, file: !14, line: 1851, baseType: !918, size: 32, align: 32, offset: 1440)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1079, file: !14, line: 1861, baseType: !1375, size: 32, align: 32, offset: 1472)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1079, file: !14, line: 1868, baseType: !1375, size: 32, align: 32, offset: 1504)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1079, file: !14, line: 1875, baseType: !1375, size: 32, align: 32, offset: 1536)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1079, file: !14, line: 1882, baseType: !1375, size: 32, align: 32, offset: 1568)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1079, file: !14, line: 1889, baseType: !1375, size: 32, align: 32, offset: 1600)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1079, file: !14, line: 1896, baseType: !1375, size: 32, align: 32, offset: 1632)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1079, file: !14, line: 1903, baseType: !1375, size: 32, align: 32, offset: 1664)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1079, file: !14, line: 1910, baseType: !918, size: 32, align: 32, offset: 1696)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1079, file: !14, line: 1915, baseType: !918, size: 32, align: 32, offset: 1728)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1079, file: !14, line: 1926, baseType: !1368, size: 64, align: 64, offset: 1792)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1079, file: !14, line: 1935, baseType: !965, size: 64, align: 32, offset: 1856)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1079, file: !14, line: 1942, baseType: !918, size: 32, align: 32, offset: 1920)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1079, file: !14, line: 1948, baseType: !918, size: 32, align: 32, offset: 1952)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1079, file: !14, line: 1954, baseType: !918, size: 32, align: 32, offset: 1984)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1079, file: !14, line: 1960, baseType: !918, size: 32, align: 32, offset: 2016)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1079, file: !14, line: 1984, baseType: !918, size: 32, align: 32, offset: 2048)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1079, file: !14, line: 1991, baseType: !918, size: 32, align: 32, offset: 2080)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1079, file: !14, line: 1996, baseType: !918, size: 32, align: 32, offset: 2112)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1079, file: !14, line: 2004, baseType: !918, size: 32, align: 32, offset: 2144)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1079, file: !14, line: 2011, baseType: !918, size: 32, align: 32, offset: 2176)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1079, file: !14, line: 2018, baseType: !918, size: 32, align: 32, offset: 2208)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1079, file: !14, line: 2027, baseType: !918, size: 32, align: 32, offset: 2240)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1079, file: !14, line: 2034, baseType: !918, size: 32, align: 32, offset: 2272)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1079, file: !14, line: 2044, baseType: !918, size: 32, align: 32, offset: 2304)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1079, file: !14, line: 2054, baseType: !1405, size: 64, align: 64, offset: 2368)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1079, file: !14, line: 2061, baseType: !1405, size: 64, align: 64, offset: 2432)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1079, file: !14, line: 2066, baseType: !918, size: 32, align: 32, offset: 2496)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1079, file: !14, line: 2070, baseType: !918, size: 32, align: 32, offset: 2528)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1079, file: !14, line: 2078, baseType: !918, size: 32, align: 32, offset: 2560)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1079, file: !14, line: 2085, baseType: !918, size: 32, align: 32, offset: 2592)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1079, file: !14, line: 2092, baseType: !918, size: 32, align: 32, offset: 2624)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1079, file: !14, line: 2099, baseType: !918, size: 32, align: 32, offset: 2656)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1079, file: !14, line: 2106, baseType: !918, size: 32, align: 32, offset: 2688)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1079, file: !14, line: 2113, baseType: !918, size: 32, align: 32, offset: 2720)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1079, file: !14, line: 2120, baseType: !918, size: 32, align: 32, offset: 2752)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1079, file: !14, line: 2125, baseType: !918, size: 32, align: 32, offset: 2784)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1079, file: !14, line: 2133, baseType: !918, size: 32, align: 32, offset: 2816)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1079, file: !14, line: 2140, baseType: !918, size: 32, align: 32, offset: 2848)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1079, file: !14, line: 2145, baseType: !918, size: 32, align: 32, offset: 2880)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1079, file: !14, line: 2153, baseType: !918, size: 32, align: 32, offset: 2912)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1079, file: !14, line: 2158, baseType: !918, size: 32, align: 32, offset: 2944)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1079, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1079, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1079, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1079, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1079, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1079, file: !14, line: 2203, baseType: !918, size: 32, align: 32, offset: 3136)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1079, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1079, file: !14, line: 2212, baseType: !918, size: 32, align: 32, offset: 3200)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1079, file: !14, line: 2213, baseType: !918, size: 32, align: 32, offset: 3232)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1079, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1079, file: !14, line: 2232, baseType: !918, size: 32, align: 32, offset: 3296)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1079, file: !14, line: 2243, baseType: !918, size: 32, align: 32, offset: 3328)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1079, file: !14, line: 2249, baseType: !918, size: 32, align: 32, offset: 3360)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1079, file: !14, line: 2256, baseType: !918, size: 32, align: 32, offset: 3392)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1079, file: !14, line: 2263, baseType: !983, size: 64, align: 64, offset: 3456)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1079, file: !14, line: 2270, baseType: !983, size: 64, align: 64, offset: 3520)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1079, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1079, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1079, file: !14, line: 2367, baseType: !1441, size: 64, align: 64, offset: 3648)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64, align: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!918, !1365, !1099, !918}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1079, file: !14, line: 2383, baseType: !918, size: 32, align: 32, offset: 3712)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1079, file: !14, line: 2386, baseType: !1375, size: 32, align: 32, offset: 3744)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1079, file: !14, line: 2387, baseType: !1375, size: 32, align: 32, offset: 3776)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1079, file: !14, line: 2394, baseType: !918, size: 32, align: 32, offset: 3808)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1079, file: !14, line: 2401, baseType: !918, size: 32, align: 32, offset: 3840)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1079, file: !14, line: 2408, baseType: !918, size: 32, align: 32, offset: 3872)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1079, file: !14, line: 2415, baseType: !918, size: 32, align: 32, offset: 3904)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1079, file: !14, line: 2422, baseType: !918, size: 32, align: 32, offset: 3936)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1079, file: !14, line: 2423, baseType: !1453, size: 64, align: 64, offset: 3968)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64, align: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1455, file: !14, line: 827, baseType: !918, size: 32, align: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1455, file: !14, line: 828, baseType: !918, size: 32, align: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1455, file: !14, line: 829, baseType: !918, size: 32, align: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1455, file: !14, line: 830, baseType: !1375, size: 32, align: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1079, file: !14, line: 2430, baseType: !1010, size: 64, align: 64, offset: 4032)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1079, file: !14, line: 2437, baseType: !1010, size: 64, align: 64, offset: 4096)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1079, file: !14, line: 2444, baseType: !1375, size: 32, align: 32, offset: 4160)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1079, file: !14, line: 2451, baseType: !1375, size: 32, align: 32, offset: 4192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1079, file: !14, line: 2458, baseType: !918, size: 32, align: 32, offset: 4224)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1079, file: !14, line: 2469, baseType: !918, size: 32, align: 32, offset: 4256)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1079, file: !14, line: 2475, baseType: !918, size: 32, align: 32, offset: 4288)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1079, file: !14, line: 2481, baseType: !918, size: 32, align: 32, offset: 4320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1079, file: !14, line: 2485, baseType: !918, size: 32, align: 32, offset: 4352)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1079, file: !14, line: 2489, baseType: !918, size: 32, align: 32, offset: 4384)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1079, file: !14, line: 2493, baseType: !918, size: 32, align: 32, offset: 4416)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1079, file: !14, line: 2501, baseType: !918, size: 32, align: 32, offset: 4448)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1079, file: !14, line: 2506, baseType: !918, size: 32, align: 32, offset: 4480)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1079, file: !14, line: 2510, baseType: !918, size: 32, align: 32, offset: 4512)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1079, file: !14, line: 2514, baseType: !1010, size: 64, align: 64, offset: 4544)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1079, file: !14, line: 2528, baseType: !1477, size: 64, align: 64, offset: 4608)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{null, !1365, !939, !918, !918}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1079, file: !14, line: 2534, baseType: !918, size: 32, align: 32, offset: 4672)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1079, file: !14, line: 2545, baseType: !918, size: 32, align: 32, offset: 4704)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1079, file: !14, line: 2547, baseType: !918, size: 32, align: 32, offset: 4736)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1079, file: !14, line: 2549, baseType: !918, size: 32, align: 32, offset: 4768)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1079, file: !14, line: 2551, baseType: !918, size: 32, align: 32, offset: 4800)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1079, file: !14, line: 2553, baseType: !918, size: 32, align: 32, offset: 4832)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1079, file: !14, line: 2555, baseType: !918, size: 32, align: 32, offset: 4864)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1079, file: !14, line: 2557, baseType: !918, size: 32, align: 32, offset: 4896)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1079, file: !14, line: 2559, baseType: !918, size: 32, align: 32, offset: 4928)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1079, file: !14, line: 2563, baseType: !918, size: 32, align: 32, offset: 4960)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1079, file: !14, line: 2571, baseType: !1491, size: 64, align: 64, offset: 4992)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1079, file: !14, line: 2579, baseType: !1491, size: 64, align: 64, offset: 5056)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1079, file: !14, line: 2586, baseType: !918, size: 32, align: 32, offset: 5120)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1079, file: !14, line: 2615, baseType: !918, size: 32, align: 32, offset: 5152)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1079, file: !14, line: 2627, baseType: !918, size: 32, align: 32, offset: 5184)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1079, file: !14, line: 2637, baseType: !918, size: 32, align: 32, offset: 5216)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1079, file: !14, line: 2681, baseType: !918, size: 32, align: 32, offset: 5248)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1079, file: !14, line: 2709, baseType: !1010, size: 64, align: 64, offset: 5312)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1079, file: !14, line: 2716, baseType: !1500, size: 64, align: 64, offset: 5376)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508, !1509, !1513, !1517, !1521, !1522, !1523, !1524, !1530, !1531, !1532, !1533, !1534}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1502, file: !14, line: 3642, baseType: !955, size: 64, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1502, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1502, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1502, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1502, file: !14, line: 3669, baseType: !918, size: 32, align: 32, offset: 160)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1502, file: !14, line: 3682, baseType: !1510, size: 64, align: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!918, !1077, !1099}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1502, file: !14, line: 3698, baseType: !1514, size: 64, align: 64, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64, align: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!918, !1077, !937, !934}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1502, file: !14, line: 3712, baseType: !1518, size: 64, align: 64, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!918, !1077, !918, !937, !934}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1502, file: !14, line: 3726, baseType: !1514, size: 64, align: 64, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1502, file: !14, line: 3737, baseType: !1074, size: 64, align: 64, offset: 448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1502, file: !14, line: 3746, baseType: !918, size: 32, align: 32, offset: 512)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1502, file: !14, line: 3757, baseType: !1525, size: 64, align: 64, offset: 576)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1528}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1502, file: !14, line: 3766, baseType: !1074, size: 64, align: 64, offset: 640)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1502, file: !14, line: 3774, baseType: !1074, size: 64, align: 64, offset: 704)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1502, file: !14, line: 3780, baseType: !918, size: 32, align: 32, offset: 768)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1502, file: !14, line: 3785, baseType: !918, size: 32, align: 32, offset: 800)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1502, file: !14, line: 3795, baseType: !1535, size: 64, align: 64, offset: 832)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64, align: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!918, !1077, !1136}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1079, file: !14, line: 2728, baseType: !939, size: 64, align: 64, offset: 5440)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1079, file: !14, line: 2735, baseType: !1126, size: 512, align: 64, offset: 5504)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1079, file: !14, line: 2742, baseType: !918, size: 32, align: 32, offset: 6016)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1079, file: !14, line: 2755, baseType: !918, size: 32, align: 32, offset: 6048)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1079, file: !14, line: 2776, baseType: !918, size: 32, align: 32, offset: 6080)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1079, file: !14, line: 2783, baseType: !918, size: 32, align: 32, offset: 6112)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1079, file: !14, line: 2791, baseType: !918, size: 32, align: 32, offset: 6144)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1079, file: !14, line: 2802, baseType: !1099, size: 64, align: 64, offset: 6208)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1079, file: !14, line: 2811, baseType: !918, size: 32, align: 32, offset: 6272)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1079, file: !14, line: 2821, baseType: !918, size: 32, align: 32, offset: 6304)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1079, file: !14, line: 2830, baseType: !918, size: 32, align: 32, offset: 6336)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1079, file: !14, line: 2840, baseType: !918, size: 32, align: 32, offset: 6368)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1079, file: !14, line: 2851, baseType: !1551, size: 64, align: 64, offset: 6400)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!918, !1365, !1554, !939, !1368, !918, !918}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64, align: 64)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!918, !1365, !939}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1079, file: !14, line: 2871, baseType: !1558, size: 64, align: 64, offset: 6464)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64, align: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!918, !1365, !1561, !939, !1368, !918}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64, align: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!918, !1365, !939, !918, !918}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1079, file: !14, line: 2878, baseType: !918, size: 32, align: 32, offset: 6528)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1079, file: !14, line: 2885, baseType: !918, size: 32, align: 32, offset: 6560)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1079, file: !14, line: 3005, baseType: !918, size: 32, align: 32, offset: 6592)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1079, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1079, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1079, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1079, file: !14, line: 3037, baseType: !943, size: 64, align: 64, offset: 6720)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1079, file: !14, line: 3038, baseType: !918, size: 32, align: 32, offset: 6784)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1079, file: !14, line: 3050, baseType: !983, size: 64, align: 64, offset: 6848)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1079, file: !14, line: 3065, baseType: !918, size: 32, align: 32, offset: 6912)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1079, file: !14, line: 3083, baseType: !918, size: 32, align: 32, offset: 6944)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1079, file: !14, line: 3092, baseType: !965, size: 64, align: 32, offset: 6976)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1079, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1079, file: !14, line: 3106, baseType: !965, size: 64, align: 32, offset: 7072)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1079, file: !14, line: 3113, baseType: !1579, size: 64, align: 64, offset: 7168)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589, !1592}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1582, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1582, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1582, file: !14, line: 720, baseType: !955, size: 64, align: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1582, file: !14, line: 724, baseType: !955, size: 64, align: 64, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1582, file: !14, line: 728, baseType: !918, size: 32, align: 32, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1582, file: !14, line: 734, baseType: !1590, size: 64, align: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1582, file: !14, line: 739, baseType: !1593, size: 64, align: 64, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1079, file: !14, line: 3129, baseType: !1010, size: 64, align: 64, offset: 7232)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1079, file: !14, line: 3130, baseType: !1010, size: 64, align: 64, offset: 7296)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1079, file: !14, line: 3131, baseType: !1010, size: 64, align: 64, offset: 7360)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1079, file: !14, line: 3132, baseType: !1010, size: 64, align: 64, offset: 7424)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1079, file: !14, line: 3139, baseType: !1491, size: 64, align: 64, offset: 7488)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1079, file: !14, line: 3147, baseType: !918, size: 32, align: 32, offset: 7552)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1079, file: !14, line: 3165, baseType: !918, size: 32, align: 32, offset: 7584)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1079, file: !14, line: 3172, baseType: !918, size: 32, align: 32, offset: 7616)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1079, file: !14, line: 3180, baseType: !918, size: 32, align: 32, offset: 7648)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1079, file: !14, line: 3191, baseType: !1405, size: 64, align: 64, offset: 7680)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1079, file: !14, line: 3199, baseType: !943, size: 64, align: 64, offset: 7744)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1079, file: !14, line: 3207, baseType: !1491, size: 64, align: 64, offset: 7808)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1079, file: !14, line: 3214, baseType: !919, size: 32, align: 32, offset: 7872)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1079, file: !14, line: 3224, baseType: !1234, size: 64, align: 64, offset: 7936)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1079, file: !14, line: 3225, baseType: !918, size: 32, align: 32, offset: 8000)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1079, file: !14, line: 3249, baseType: !1136, size: 64, align: 64, offset: 8064)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1079, file: !14, line: 3256, baseType: !918, size: 32, align: 32, offset: 8128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1079, file: !14, line: 3271, baseType: !918, size: 32, align: 32, offset: 8160)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1079, file: !14, line: 3279, baseType: !1010, size: 64, align: 64, offset: 8192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1079, file: !14, line: 3301, baseType: !1136, size: 64, align: 64, offset: 8256)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1079, file: !14, line: 3310, baseType: !918, size: 32, align: 32, offset: 8320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1079, file: !14, line: 3337, baseType: !918, size: 32, align: 32, offset: 8352)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1079, file: !14, line: 3351, baseType: !918, size: 32, align: 32, offset: 8384)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1079, file: !14, line: 3359, baseType: !918, size: 32, align: 32, offset: 8416)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !952, file: !14, line: 3535, baseType: !1620, size: 64, align: 64, offset: 1024)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64, align: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!918, !1077, !1623}
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !952, file: !14, line: 3541, baseType: !1626, size: 64, align: 64, offset: 1088)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1093, line: 223, size: 128, align: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1629, file: !1093, line: 224, baseType: !937, size: 64, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1629, file: !1093, line: 225, baseType: !937, size: 64, align: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !952, file: !14, line: 3549, baseType: !1634, size: 64, align: 64, offset: 1152)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{null, !1072}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !952, file: !14, line: 3551, baseType: !1074, size: 64, align: 64, offset: 1216)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !952, file: !14, line: 3552, baseType: !1639, size: 64, align: 64, offset: 1280)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!918, !1077, !943, !918, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650, !1674}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1644, file: !14, line: 3921, baseType: !926, size: 16, align: 16)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1644, file: !14, line: 3922, baseType: !934, size: 32, align: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1644, file: !14, line: 3923, baseType: !934, size: 32, align: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1644, file: !14, line: 3924, baseType: !919, size: 32, align: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1644, file: !14, line: 3925, baseType: !1651, size: 64, align: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64, align: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1667, !1669, !1670, !1671, !1672, !1673}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1654, file: !14, line: 3886, baseType: !918, size: 32, align: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1654, file: !14, line: 3887, baseType: !918, size: 32, align: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1654, file: !14, line: 3888, baseType: !918, size: 32, align: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1654, file: !14, line: 3889, baseType: !918, size: 32, align: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1654, file: !14, line: 3890, baseType: !918, size: 32, align: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1654, file: !14, line: 3897, baseType: !1662, size: 768, align: 64, offset: 192)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1663, file: !14, line: 3855, baseType: !1104, size: 512, align: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1663, file: !14, line: 3857, baseType: !1108, size: 256, align: 32, offset: 512)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1654, file: !14, line: 3903, baseType: !1668, size: 256, align: 64, offset: 960)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 256, align: 64, elements: !1205)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1654, file: !14, line: 3904, baseType: !1212, size: 128, align: 32, offset: 1216)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1654, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1654, file: !14, line: 3908, baseType: !1491, size: 64, align: 64, offset: 1408)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1654, file: !14, line: 3915, baseType: !1491, size: 64, align: 64, offset: 1472)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1654, file: !14, line: 3917, baseType: !918, size: 32, align: 32, offset: 1536)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1644, file: !14, line: 3926, baseType: !1010, size: 64, align: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !952, file: !14, line: 3564, baseType: !1676, size: 64, align: 64, offset: 1344)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!918, !1077, !1222, !1366, !1368}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !952, file: !14, line: 3566, baseType: !1680, size: 64, align: 64, offset: 1408)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!918, !1077, !939, !1368, !1222}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !952, file: !14, line: 3567, baseType: !1074, size: 64, align: 64, offset: 1472)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !952, file: !14, line: 3576, baseType: !1685, size: 64, align: 64, offset: 1536)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!918, !1077, !1366}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !952, file: !14, line: 3577, baseType: !1689, size: 64, align: 64, offset: 1600)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64, align: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!918, !1077, !1222}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !952, file: !14, line: 3584, baseType: !1510, size: 64, align: 64, offset: 1664)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !952, file: !14, line: 3589, baseType: !1694, size: 64, align: 64, offset: 1728)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64, align: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{null, !1077}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !952, file: !14, line: 3594, baseType: !918, size: 32, align: 32, offset: 1792)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !952, file: !14, line: 3600, baseType: !955, size: 64, align: 64, offset: 1856)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !952, file: !14, line: 3609, baseType: !1700, size: 64, align: 64, offset: 1920)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1704 = distinct !DIGlobalVariable(name: "ape_decoder_class", scope: !0, file: !910, line: 1570, type: !988, isLocal: true, isDefinition: true, variable: %struct.AVClass* @ape_decoder_class)
!1705 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !910, line: 1564, type: !1706, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @options)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1707, size: 1536, align: 64, elements: !1709)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !691, line: 301, baseType: !1000)
!1709 = !{!1710}
!1710 = !DISubrange(count: 3)
!1711 = distinct !DIGlobalVariable(name: "ape_filter_orders", scope: !0, file: !910, line: 79, type: !1712, isLocal: true, isDefinition: true, variable: [5 x [3 x i16]]* @ape_filter_orders)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 240, align: 16, elements: !1714)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!1714 = !{!1715, !1710}
!1715 = !DISubrange(count: 5)
!1716 = distinct !DIGlobalVariable(name: "counts_3970", scope: !0, file: !910, line: 393, type: !1717, isLocal: true, isDefinition: true, variable: [22 x i16]* @counts_3970)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 352, align: 16, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 22)
!1720 = distinct !DIGlobalVariable(name: "counts_diff_3970", scope: !0, file: !910, line: 402, type: !1721, isLocal: true, isDefinition: true, variable: [21 x i16]* @counts_diff_3970)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 336, align: 16, elements: !1722)
!1722 = !{!1723}
!1723 = !DISubrange(count: 21)
!1724 = distinct !DIGlobalVariable(name: "counts_3980", scope: !0, file: !910, line: 411, type: !1717, isLocal: true, isDefinition: true, variable: [22 x i16]* @counts_3980)
!1725 = distinct !DIGlobalVariable(name: "counts_diff_3980", scope: !0, file: !910, line: 420, type: !1721, isLocal: true, isDefinition: true, variable: [21 x i16]* @counts_diff_3980)
!1726 = distinct !DIGlobalVariable(name: "ape_filter_fracbits", scope: !0, file: !910, line: 88, type: !1727, isLocal: true, isDefinition: true, variable: [5 x [3 x i8]]* @ape_filter_fracbits)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 120, align: 8, elements: !1714)
!1728 = distinct !DIGlobalVariable(name: "initial_coeffs_fast_3320", scope: !0, file: !910, line: 757, type: !1729, isLocal: true, isDefinition: true, variable: [1 x i32]* @initial_coeffs_fast_3320)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 32, align: 32, elements: !1731)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!1731 = !{!1732}
!1732 = !DISubrange(count: 1)
!1733 = distinct !DIGlobalVariable(name: "initial_coeffs_a_3800", scope: !0, file: !910, line: 761, type: !1734, isLocal: true, isDefinition: true, variable: [3 x i32]* @initial_coeffs_a_3800)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 96, align: 32, elements: !1709)
!1735 = distinct !DIGlobalVariable(name: "initial_coeffs_3930", scope: !0, file: !910, line: 769, type: !1736, isLocal: true, isDefinition: true, variable: [4 x i32]* @initial_coeffs_3930)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 128, align: 32, elements: !1205)
!1737 = distinct !DIGlobalVariable(name: "initial_coeffs_b_3800", scope: !0, file: !910, line: 765, type: !1738, isLocal: true, isDefinition: true, variable: [2 x i32]* @initial_coeffs_b_3800)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 64, align: 32, elements: !1739)
!1739 = !{!1740}
!1740 = !DISubrange(count: 2)
!1741 = !{i32 2, !"Dwarf Version", i32 4}
!1742 = !{i32 2, !"Debug Info Version", i32 3}
!1743 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1744 = distinct !DISubprogram(name: "ape_decode_init", scope: !910, file: !910, line: 215, type: !1075, isLocal: true, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!1745 = !{}
!1746 = !DILocalVariable(name: "avctx", arg: 1, scope: !1744, file: !910, line: 215, type: !1077)
!1747 = !DIExpression()
!1748 = !DILocation(line: 215, column: 66, scope: !1744)
!1749 = !DILocalVariable(name: "s", scope: !1744, file: !910, line: 217, type: !1750)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64, align: 64)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "APEContext", file: !910, line: 178, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APEContext", file: !910, line: 136, size: 23104, align: 64, elements: !1753)
!1753 = !{!1754, !1756, !1757, !1771, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1816, !1817, !1818, !1820, !1821, !1823, !1831, !1837, !1838, !1849, !1859, !1860, !1861, !1862, !1863, !1864, !1869, !1870, !1871}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1752, file: !910, line: 137, baseType: !1755, size: 64, align: 64)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1752, file: !910, line: 138, baseType: !1077, size: 64, align: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1752, file: !910, line: 139, baseType: !1758, size: 128, align: 64, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !1759, line: 27, baseType: !1760)
!1759 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !1759, line: 24, size: 128, align: 64, elements: !1761)
!1761 = !{!1762, !1766}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !1760, file: !1759, line: 25, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64, align: 64)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !940, !941, !918}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !1760, file: !1759, line: 26, baseType: !1767, size: 64, align: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64, align: 64)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{null, !1405, !1770, !918}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "adsp", scope: !1752, file: !910, line: 140, baseType: !1772, size: 128, align: 64, offset: 256)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLAudDSPContext", file: !1773, line: 44, baseType: !1774)
!1773 = !DIFile(filename: "libavcodec/lossless_audiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLAudDSPContext", file: !1773, line: 28, size: 128, align: 64, elements: !1775)
!1775 = !{!1776, !1782}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_and_madd_int16", scope: !1774, file: !1773, line: 35, baseType: !1777, size: 64, align: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!948, !944, !1780, !1780, !918, !918}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_and_madd_int32", scope: !1774, file: !1773, line: 40, baseType: !1783, size: 64, align: 64, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!948, !944, !1786, !1780, !918, !918}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1752, file: !910, line: 141, baseType: !918, size: 32, align: 32, offset: 384)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1752, file: !910, line: 142, baseType: !918, size: 32, align: 32, offset: 416)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !1752, file: !910, line: 143, baseType: !918, size: 32, align: 32, offset: 448)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "fileversion", scope: !1752, file: !910, line: 145, baseType: !918, size: 32, align: 32, offset: 480)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1752, file: !910, line: 146, baseType: !918, size: 32, align: 32, offset: 512)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "fset", scope: !1752, file: !910, line: 147, baseType: !918, size: 32, align: 32, offset: 544)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1752, file: !910, line: 148, baseType: !918, size: 32, align: 32, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "CRC", scope: !1752, file: !910, line: 150, baseType: !934, size: 32, align: 32, offset: 608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "frameflags", scope: !1752, file: !910, line: 151, baseType: !918, size: 32, align: 32, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "predictor", scope: !1752, file: !910, line: 152, baseType: !1797, size: 18880, align: 64, offset: 704)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "APEPredictor", file: !910, line: 133, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APEPredictor", file: !910, line: 120, size: 18880, align: 64, elements: !1799)
!1799 = !{!1800, !1801, !1803, !1804, !1805, !1808, !1811, !1815}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1798, file: !910, line: 121, baseType: !947, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "lastA", scope: !1798, file: !910, line: 123, baseType: !1802, size: 64, align: 32, offset: 64)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 64, align: 32, elements: !1739)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "filterA", scope: !1798, file: !910, line: 125, baseType: !1802, size: 64, align: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "filterB", scope: !1798, file: !910, line: 126, baseType: !1802, size: 64, align: 32, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "coeffsA", scope: !1798, file: !910, line: 128, baseType: !1806, size: 256, align: 32, offset: 256)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 256, align: 32, elements: !1807)
!1807 = !{!1740, !1206}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "coeffsB", scope: !1798, file: !910, line: 129, baseType: !1809, size: 320, align: 32, offset: 512)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 320, align: 32, elements: !1810)
!1810 = !{!1740, !1715}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "historybuffer", scope: !1798, file: !910, line: 130, baseType: !1812, size: 17984, align: 32, offset: 832)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 17984, align: 32, elements: !1813)
!1813 = !{!1814}
!1814 = !DISubrange(count: 562)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "sample_pos", scope: !1798, file: !910, line: 132, baseType: !919, size: 32, align: 32, offset: 18816)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_buffer", scope: !1752, file: !910, line: 154, baseType: !947, size: 64, align: 64, offset: 19584)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_size", scope: !1752, file: !910, line: 155, baseType: !918, size: 32, align: 32, offset: 19648)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "decoded", scope: !1752, file: !910, line: 156, baseType: !1819, size: 128, align: 64, offset: 19712)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 128, align: 64, elements: !1739)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_per_loop", scope: !1752, file: !910, line: 157, baseType: !918, size: 32, align: 32, offset: 19840)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "filterbuf", scope: !1752, file: !910, line: 159, baseType: !1822, size: 192, align: 64, offset: 19904)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 192, align: 64, elements: !1709)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1752, file: !910, line: 161, baseType: !1824, size: 128, align: 32, offset: 20096)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "APERangecoder", file: !910, line: 117, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APERangecoder", file: !910, line: 112, size: 128, align: 32, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1825, file: !910, line: 113, baseType: !934, size: 32, align: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1825, file: !910, line: 114, baseType: !934, size: 32, align: 32, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1825, file: !910, line: 115, baseType: !934, size: 32, align: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1825, file: !910, line: 116, baseType: !919, size: 32, align: 32, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "riceX", scope: !1752, file: !910, line: 162, baseType: !1832, size: 64, align: 32, offset: 20224)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "APERice", file: !910, line: 110, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APERice", file: !910, line: 107, size: 64, align: 32, elements: !1834)
!1834 = !{!1835, !1836}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1833, file: !910, line: 108, baseType: !934, size: 32, align: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ksum", scope: !1833, file: !910, line: 109, baseType: !934, size: 32, align: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "riceY", scope: !1752, file: !910, line: 163, baseType: !1832, size: 64, align: 32, offset: 20288)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1752, file: !910, line: 164, baseType: !1839, size: 1920, align: 64, offset: 20352)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1840, size: 1920, align: 64, elements: !1848)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "APEFilter", file: !910, line: 105, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APEFilter", file: !910, line: 98, size: 320, align: 64, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1841, file: !910, line: 99, baseType: !944, size: 64, align: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcoeffs", scope: !1841, file: !910, line: 100, baseType: !944, size: 64, align: 64, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "historybuffer", scope: !1841, file: !910, line: 101, baseType: !944, size: 64, align: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1841, file: !910, line: 102, baseType: !944, size: 64, align: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "avg", scope: !1841, file: !910, line: 104, baseType: !918, size: 32, align: 32, offset: 256)
!1848 = !{!1710, !1740}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1752, file: !910, line: 165, baseType: !1850, size: 256, align: 64, offset: 22272)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1851, line: 70, baseType: !1852)
!1851 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1851, line: 61, size: 256, align: 64, elements: !1853)
!1853 = !{!1854, !1855, !1856, !1857, !1858}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1852, file: !1851, line: 62, baseType: !937, size: 64, align: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1852, file: !1851, line: 62, baseType: !937, size: 64, align: 64, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1852, file: !1851, line: 67, baseType: !918, size: 32, align: 32, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1852, file: !1851, line: 68, baseType: !918, size: 32, align: 32, offset: 160)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1852, file: !1851, line: 69, baseType: !918, size: 32, align: 32, offset: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1752, file: !910, line: 167, baseType: !943, size: 64, align: 64, offset: 22528)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "data_end", scope: !1752, file: !910, line: 168, baseType: !943, size: 64, align: 64, offset: 22592)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1752, file: !910, line: 169, baseType: !918, size: 32, align: 32, offset: 22656)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1752, file: !910, line: 170, baseType: !937, size: 64, align: 64, offset: 22720)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1752, file: !910, line: 172, baseType: !918, size: 32, align: 32, offset: 22784)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_decode_mono", scope: !1752, file: !910, line: 174, baseType: !1865, size: 64, align: 64, offset: 22848)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64, align: 64)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{null, !1868, !918}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_decode_stereo", scope: !1752, file: !910, line: 175, baseType: !1865, size: 64, align: 64, offset: 22912)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_decode_mono", scope: !1752, file: !910, line: 176, baseType: !1865, size: 64, align: 64, offset: 22976)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_decode_stereo", scope: !1752, file: !910, line: 177, baseType: !1865, size: 64, align: 64, offset: 23040)
!1872 = !DILocation(line: 217, column: 17, scope: !1744)
!1873 = !DILocation(line: 217, column: 21, scope: !1744)
!1874 = !DILocation(line: 217, column: 28, scope: !1744)
!1875 = !DILocalVariable(name: "i", scope: !1744, file: !910, line: 218, type: !918)
!1876 = !DILocation(line: 218, column: 9, scope: !1744)
!1877 = !DILocation(line: 220, column: 9, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 220, column: 9)
!1879 = !DILocation(line: 220, column: 16, scope: !1878)
!1880 = !DILocation(line: 220, column: 31, scope: !1878)
!1881 = !DILocation(line: 220, column: 9, scope: !1744)
!1882 = !DILocation(line: 221, column: 16, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1878, file: !910, line: 220, column: 37)
!1884 = !DILocation(line: 221, column: 9, scope: !1883)
!1885 = !DILocation(line: 222, column: 9, scope: !1883)
!1886 = !DILocation(line: 224, column: 9, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 224, column: 9)
!1888 = !DILocation(line: 224, column: 16, scope: !1887)
!1889 = !DILocation(line: 224, column: 25, scope: !1887)
!1890 = !DILocation(line: 224, column: 9, scope: !1744)
!1891 = !DILocation(line: 225, column: 16, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1887, file: !910, line: 224, column: 30)
!1893 = !DILocation(line: 225, column: 9, scope: !1892)
!1894 = !DILocation(line: 226, column: 9, scope: !1892)
!1895 = !DILocation(line: 228, column: 14, scope: !1744)
!1896 = !DILocation(line: 228, column: 21, scope: !1744)
!1897 = !DILocation(line: 228, column: 5, scope: !1744)
!1898 = !DILocation(line: 228, column: 8, scope: !1744)
!1899 = !DILocation(line: 228, column: 12, scope: !1744)
!1900 = !DILocation(line: 229, column: 13, scope: !1744)
!1901 = !DILocation(line: 229, column: 16, scope: !1744)
!1902 = !DILocation(line: 229, column: 5, scope: !1744)
!1903 = !DILocation(line: 231, column: 9, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 229, column: 21)
!1905 = !DILocation(line: 231, column: 16, scope: !1904)
!1906 = !DILocation(line: 231, column: 27, scope: !1904)
!1907 = !DILocation(line: 232, column: 9, scope: !1904)
!1908 = !DILocation(line: 234, column: 9, scope: !1904)
!1909 = !DILocation(line: 234, column: 16, scope: !1904)
!1910 = !DILocation(line: 234, column: 27, scope: !1904)
!1911 = !DILocation(line: 235, column: 9, scope: !1904)
!1912 = !DILocation(line: 237, column: 9, scope: !1904)
!1913 = !DILocation(line: 237, column: 16, scope: !1904)
!1914 = !DILocation(line: 237, column: 27, scope: !1904)
!1915 = !DILocation(line: 238, column: 9, scope: !1904)
!1916 = !DILocation(line: 240, column: 31, scope: !1904)
!1917 = !DILocation(line: 241, column: 59, scope: !1904)
!1918 = !DILocation(line: 241, column: 62, scope: !1904)
!1919 = !DILocation(line: 240, column: 9, scope: !1904)
!1920 = !DILocation(line: 242, column: 9, scope: !1904)
!1921 = !DILocation(line: 244, column: 16, scope: !1744)
!1922 = !DILocation(line: 244, column: 5, scope: !1744)
!1923 = !DILocation(line: 244, column: 8, scope: !1744)
!1924 = !DILocation(line: 244, column: 14, scope: !1744)
!1925 = !DILocation(line: 245, column: 19, scope: !1744)
!1926 = !DILocation(line: 245, column: 26, scope: !1744)
!1927 = !DILocation(line: 245, column: 5, scope: !1744)
!1928 = !DILocation(line: 245, column: 8, scope: !1744)
!1929 = !DILocation(line: 245, column: 17, scope: !1744)
!1930 = !DILocation(line: 246, column: 54, scope: !1744)
!1931 = !DILocation(line: 246, column: 61, scope: !1744)
!1932 = !DILocation(line: 246, column: 74, scope: !1744)
!1933 = !DILocation(line: 246, column: 22, scope: !1744)
!1934 = !DILocation(line: 246, column: 5, scope: !1744)
!1935 = !DILocation(line: 246, column: 8, scope: !1744)
!1936 = !DILocation(line: 246, column: 20, scope: !1744)
!1937 = !DILocation(line: 247, column: 60, scope: !1744)
!1938 = !DILocation(line: 247, column: 67, scope: !1744)
!1939 = !DILocation(line: 247, column: 77, scope: !1744)
!1940 = !DILocation(line: 247, column: 84, scope: !1744)
!1941 = !DILocation(line: 247, column: 28, scope: !1744)
!1942 = !DILocation(line: 247, column: 5, scope: !1744)
!1943 = !DILocation(line: 247, column: 8, scope: !1744)
!1944 = !DILocation(line: 247, column: 26, scope: !1744)
!1945 = !DILocation(line: 248, column: 48, scope: !1744)
!1946 = !DILocation(line: 248, column: 55, scope: !1744)
!1947 = !DILocation(line: 248, column: 65, scope: !1744)
!1948 = !DILocation(line: 248, column: 72, scope: !1744)
!1949 = !DILocation(line: 248, column: 16, scope: !1744)
!1950 = !DILocation(line: 248, column: 5, scope: !1744)
!1951 = !DILocation(line: 248, column: 8, scope: !1744)
!1952 = !DILocation(line: 248, column: 14, scope: !1744)
!1953 = !DILocation(line: 250, column: 12, scope: !1744)
!1954 = !DILocation(line: 251, column: 12, scope: !1744)
!1955 = !DILocation(line: 251, column: 15, scope: !1744)
!1956 = !DILocation(line: 251, column: 34, scope: !1744)
!1957 = !DILocation(line: 251, column: 37, scope: !1744)
!1958 = !DILocation(line: 250, column: 5, scope: !1744)
!1959 = !DILocation(line: 252, column: 9, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 252, column: 9)
!1961 = !DILocation(line: 252, column: 12, scope: !1960)
!1962 = !DILocation(line: 252, column: 30, scope: !1960)
!1963 = !DILocation(line: 252, column: 37, scope: !1960)
!1964 = !DILocation(line: 252, column: 40, scope: !1965)
!1965 = !DILexicalBlockFile(scope: !1960, file: !910, discriminator: 1)
!1966 = !DILocation(line: 252, column: 43, scope: !1965)
!1967 = !DILocation(line: 252, column: 61, scope: !1965)
!1968 = !DILocation(line: 252, column: 88, scope: !1965)
!1969 = !DILocation(line: 253, column: 10, scope: !1960)
!1970 = !DILocation(line: 253, column: 13, scope: !1960)
!1971 = !DILocation(line: 253, column: 31, scope: !1960)
!1972 = !DILocation(line: 254, column: 10, scope: !1960)
!1973 = !DILocation(line: 254, column: 13, scope: !1960)
!1974 = !DILocation(line: 254, column: 25, scope: !1960)
!1975 = !DILocation(line: 254, column: 32, scope: !1960)
!1976 = !DILocation(line: 254, column: 35, scope: !1965)
!1977 = !DILocation(line: 254, column: 38, scope: !1965)
!1978 = !DILocation(line: 254, column: 56, scope: !1965)
!1979 = !DILocation(line: 252, column: 9, scope: !1980)
!1980 = !DILexicalBlockFile(scope: !1744, file: !910, discriminator: 2)
!1981 = !DILocation(line: 255, column: 16, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1960, file: !910, line: 254, column: 86)
!1983 = !DILocation(line: 256, column: 16, scope: !1982)
!1984 = !DILocation(line: 256, column: 19, scope: !1982)
!1985 = !DILocation(line: 255, column: 9, scope: !1982)
!1986 = !DILocation(line: 257, column: 9, scope: !1982)
!1987 = !DILocation(line: 259, column: 15, scope: !1744)
!1988 = !DILocation(line: 259, column: 18, scope: !1744)
!1989 = !DILocation(line: 259, column: 36, scope: !1744)
!1990 = !DILocation(line: 259, column: 43, scope: !1744)
!1991 = !DILocation(line: 259, column: 5, scope: !1744)
!1992 = !DILocation(line: 259, column: 8, scope: !1744)
!1993 = !DILocation(line: 259, column: 13, scope: !1744)
!1994 = !DILocation(line: 260, column: 12, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 260, column: 5)
!1996 = !DILocation(line: 260, column: 10, scope: !1995)
!1997 = !DILocation(line: 260, column: 17, scope: !1998)
!1998 = !DILexicalBlockFile(scope: !1999, file: !910, discriminator: 1)
!1999 = distinct !DILexicalBlock(scope: !1995, file: !910, line: 260, column: 5)
!2000 = !DILocation(line: 260, column: 19, scope: !1998)
!2001 = !DILocation(line: 260, column: 5, scope: !1998)
!2002 = !DILocation(line: 261, column: 41, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !910, line: 261, column: 13)
!2004 = distinct !DILexicalBlock(scope: !1999, file: !910, line: 260, column: 29)
!2005 = !DILocation(line: 261, column: 14, scope: !2003)
!2006 = !DILocation(line: 261, column: 32, scope: !2003)
!2007 = !DILocation(line: 261, column: 35, scope: !2003)
!2008 = !DILocation(line: 261, column: 13, scope: !2004)
!2009 = !DILocation(line: 262, column: 13, scope: !2003)
!2010 = !DILocation(line: 263, column: 67, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2004, file: !910, line: 263, column: 9)
!2012 = !DILocation(line: 263, column: 40, scope: !2011)
!2013 = !DILocation(line: 263, column: 58, scope: !2011)
!2014 = !DILocation(line: 263, column: 61, scope: !2011)
!2015 = !DILocation(line: 263, column: 70, scope: !2011)
!2016 = !DILocation(line: 263, column: 74, scope: !2011)
!2017 = !DILocation(line: 263, column: 81, scope: !2011)
!2018 = !DILocation(line: 263, column: 39, scope: !2011)
!2019 = !DILocation(line: 263, column: 29, scope: !2011)
!2020 = !DILocation(line: 263, column: 24, scope: !2011)
!2021 = !DILocation(line: 263, column: 11, scope: !2011)
!2022 = !DILocation(line: 263, column: 14, scope: !2011)
!2023 = !DILocation(line: 263, column: 27, scope: !2011)
!2024 = !DILocation(line: 263, column: 106, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2011, file: !910, line: 263, column: 91)
!2026 = !DILocation(line: 263, column: 93, scope: !2025)
!2027 = !DILocation(line: 263, column: 96, scope: !2025)
!2028 = !DILocation(line: 263, column: 92, scope: !2025)
!2029 = !DILocation(line: 263, column: 110, scope: !2025)
!2030 = !DILocation(line: 263, column: 142, scope: !2031)
!2031 = !DILexicalBlockFile(scope: !2025, file: !910, discriminator: 1)
!2032 = !DILocation(line: 263, column: 115, scope: !2031)
!2033 = !DILocation(line: 263, column: 133, scope: !2031)
!2034 = !DILocation(line: 263, column: 136, scope: !2031)
!2035 = !DILocation(line: 263, column: 145, scope: !2031)
!2036 = !DILocation(line: 263, column: 149, scope: !2031)
!2037 = !DILocation(line: 263, column: 156, scope: !2031)
!2038 = !DILocation(line: 263, column: 161, scope: !2031)
!2039 = !DILocation(line: 263, column: 91, scope: !2031)
!2040 = !DILocation(line: 263, column: 176, scope: !2041)
!2041 = !DILexicalBlockFile(scope: !2042, file: !910, discriminator: 2)
!2042 = distinct !DILexicalBlock(scope: !2025, file: !910, line: 263, column: 167)
!2043 = !DILocation(line: 263, column: 169, scope: !2041)
!2044 = !DILocation(line: 263, column: 217, scope: !2041)
!2045 = !DILocation(line: 266, column: 5, scope: !2004)
!2046 = !DILocation(line: 260, column: 25, scope: !2047)
!2047 = !DILexicalBlockFile(scope: !1999, file: !910, discriminator: 2)
!2048 = !DILocation(line: 260, column: 5, scope: !2047)
!2049 = distinct !{!2049, !2050}
!2050 = !DILocation(line: 260, column: 5, scope: !1744)
!2051 = !DILocation(line: 268, column: 9, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 268, column: 9)
!2053 = !DILocation(line: 268, column: 12, scope: !2052)
!2054 = !DILocation(line: 268, column: 24, scope: !2052)
!2055 = !DILocation(line: 268, column: 9, scope: !1744)
!2056 = !DILocation(line: 269, column: 9, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2052, file: !910, line: 268, column: 32)
!2058 = !DILocation(line: 269, column: 12, scope: !2057)
!2059 = !DILocation(line: 269, column: 32, scope: !2057)
!2060 = !DILocation(line: 270, column: 9, scope: !2057)
!2061 = !DILocation(line: 270, column: 12, scope: !2057)
!2062 = !DILocation(line: 270, column: 34, scope: !2057)
!2063 = !DILocation(line: 271, column: 5, scope: !2057)
!2064 = !DILocation(line: 271, column: 16, scope: !2065)
!2065 = !DILexicalBlockFile(scope: !2066, file: !910, discriminator: 1)
!2066 = distinct !DILexicalBlock(scope: !2052, file: !910, line: 271, column: 16)
!2067 = !DILocation(line: 271, column: 19, scope: !2065)
!2068 = !DILocation(line: 271, column: 31, scope: !2065)
!2069 = !DILocation(line: 272, column: 9, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2066, file: !910, line: 271, column: 39)
!2071 = !DILocation(line: 272, column: 12, scope: !2070)
!2072 = !DILocation(line: 272, column: 32, scope: !2070)
!2073 = !DILocation(line: 273, column: 9, scope: !2070)
!2074 = !DILocation(line: 273, column: 12, scope: !2070)
!2075 = !DILocation(line: 273, column: 34, scope: !2070)
!2076 = !DILocation(line: 274, column: 5, scope: !2070)
!2077 = !DILocation(line: 274, column: 16, scope: !2078)
!2078 = !DILexicalBlockFile(scope: !2079, file: !910, discriminator: 1)
!2079 = distinct !DILexicalBlock(scope: !2066, file: !910, line: 274, column: 16)
!2080 = !DILocation(line: 274, column: 19, scope: !2078)
!2081 = !DILocation(line: 274, column: 31, scope: !2078)
!2082 = !DILocation(line: 275, column: 9, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2079, file: !910, line: 274, column: 39)
!2084 = !DILocation(line: 275, column: 12, scope: !2083)
!2085 = !DILocation(line: 275, column: 32, scope: !2083)
!2086 = !DILocation(line: 276, column: 9, scope: !2083)
!2087 = !DILocation(line: 276, column: 12, scope: !2083)
!2088 = !DILocation(line: 276, column: 34, scope: !2083)
!2089 = !DILocation(line: 277, column: 5, scope: !2083)
!2090 = !DILocation(line: 277, column: 16, scope: !2091)
!2091 = !DILexicalBlockFile(scope: !2092, file: !910, discriminator: 1)
!2092 = distinct !DILexicalBlock(scope: !2079, file: !910, line: 277, column: 16)
!2093 = !DILocation(line: 277, column: 19, scope: !2091)
!2094 = !DILocation(line: 277, column: 31, scope: !2091)
!2095 = !DILocation(line: 278, column: 9, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !910, line: 277, column: 39)
!2097 = !DILocation(line: 278, column: 12, scope: !2096)
!2098 = !DILocation(line: 278, column: 32, scope: !2096)
!2099 = !DILocation(line: 279, column: 9, scope: !2096)
!2100 = !DILocation(line: 279, column: 12, scope: !2096)
!2101 = !DILocation(line: 279, column: 34, scope: !2096)
!2102 = !DILocation(line: 280, column: 5, scope: !2096)
!2103 = !DILocation(line: 281, column: 9, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2092, file: !910, line: 280, column: 12)
!2105 = !DILocation(line: 281, column: 12, scope: !2104)
!2106 = !DILocation(line: 281, column: 32, scope: !2104)
!2107 = !DILocation(line: 282, column: 9, scope: !2104)
!2108 = !DILocation(line: 282, column: 12, scope: !2104)
!2109 = !DILocation(line: 282, column: 34, scope: !2104)
!2110 = !DILocation(line: 285, column: 9, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !1744, file: !910, line: 285, column: 9)
!2112 = !DILocation(line: 285, column: 12, scope: !2111)
!2113 = !DILocation(line: 285, column: 24, scope: !2111)
!2114 = !DILocation(line: 285, column: 9, scope: !1744)
!2115 = !DILocation(line: 286, column: 9, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2111, file: !910, line: 285, column: 32)
!2117 = !DILocation(line: 286, column: 12, scope: !2116)
!2118 = !DILocation(line: 286, column: 34, scope: !2116)
!2119 = !DILocation(line: 287, column: 9, scope: !2116)
!2120 = !DILocation(line: 287, column: 12, scope: !2116)
!2121 = !DILocation(line: 287, column: 36, scope: !2116)
!2122 = !DILocation(line: 288, column: 5, scope: !2116)
!2123 = !DILocation(line: 288, column: 16, scope: !2124)
!2124 = !DILexicalBlockFile(scope: !2125, file: !910, discriminator: 1)
!2125 = distinct !DILexicalBlock(scope: !2111, file: !910, line: 288, column: 16)
!2126 = !DILocation(line: 288, column: 19, scope: !2124)
!2127 = !DILocation(line: 288, column: 31, scope: !2124)
!2128 = !DILocation(line: 289, column: 9, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2125, file: !910, line: 288, column: 39)
!2130 = !DILocation(line: 289, column: 12, scope: !2129)
!2131 = !DILocation(line: 289, column: 34, scope: !2129)
!2132 = !DILocation(line: 290, column: 9, scope: !2129)
!2133 = !DILocation(line: 290, column: 12, scope: !2129)
!2134 = !DILocation(line: 290, column: 36, scope: !2129)
!2135 = !DILocation(line: 291, column: 5, scope: !2129)
!2136 = !DILocation(line: 292, column: 9, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2125, file: !910, line: 291, column: 12)
!2138 = !DILocation(line: 292, column: 12, scope: !2137)
!2139 = !DILocation(line: 292, column: 34, scope: !2137)
!2140 = !DILocation(line: 293, column: 9, scope: !2137)
!2141 = !DILocation(line: 293, column: 12, scope: !2137)
!2142 = !DILocation(line: 293, column: 36, scope: !2137)
!2143 = !DILocation(line: 296, column: 23, scope: !1744)
!2144 = !DILocation(line: 296, column: 26, scope: !1744)
!2145 = !DILocation(line: 296, column: 5, scope: !1744)
!2146 = !DILocation(line: 297, column: 23, scope: !1744)
!2147 = !DILocation(line: 297, column: 26, scope: !1744)
!2148 = !DILocation(line: 297, column: 5, scope: !1744)
!2149 = !DILocation(line: 298, column: 30, scope: !1744)
!2150 = !DILocation(line: 298, column: 37, scope: !1744)
!2151 = !DILocation(line: 298, column: 45, scope: !1744)
!2152 = !DILocation(line: 298, column: 29, scope: !1744)
!2153 = !DILocation(line: 298, column: 5, scope: !1744)
!2154 = !DILocation(line: 298, column: 12, scope: !1744)
!2155 = !DILocation(line: 298, column: 27, scope: !1744)
!2156 = !DILocation(line: 300, column: 5, scope: !1744)
!2157 = !DILocation(line: 302, column: 22, scope: !1744)
!2158 = !DILocation(line: 302, column: 5, scope: !1744)
!2159 = !DILocation(line: 303, column: 5, scope: !1744)
!2160 = !DILocation(line: 304, column: 1, scope: !1744)
!2161 = distinct !DISubprogram(name: "ape_decode_frame", scope: !910, file: !910, line: 1404, type: !1681, isLocal: true, isDefinition: true, scopeLine: 1406, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2162 = !DILocalVariable(name: "x", arg: 1, scope: !2163, file: !2164, line: 66, type: !934)
!2163 = distinct !DISubprogram(name: "av_bswap32", scope: !2164, file: !2164, line: 66, type: !2165, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2164 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!934, !934}
!2167 = !DILocation(line: 66, column: 98, scope: !2163, inlinedAt: !2168)
!2168 = distinct !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !2174)
!2169 = distinct !DISubprogram(name: "bytestream_get_be32", scope: !2170, file: !2170, line: 92, type: !2171, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2170 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!919, !2173}
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!2174 = distinct !DILocation(line: 1450, column: 18, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2176, file: !910, line: 1421, column: 20)
!2176 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1421, column: 8)
!2177 = !DILocalVariable(name: "b", arg: 1, scope: !2169, file: !2170, line: 92, type: !2173)
!2178 = !DILocation(line: 92, column: 95, scope: !2169, inlinedAt: !2174)
!2179 = !DILocation(line: 66, column: 98, scope: !2163, inlinedAt: !2180)
!2180 = distinct !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !2181)
!2181 = distinct !DILocation(line: 1449, column: 19, scope: !2175)
!2182 = !DILocation(line: 92, column: 95, scope: !2169, inlinedAt: !2181)
!2183 = !DILocalVariable(name: "avctx", arg: 1, scope: !2161, file: !910, line: 1404, type: !1077)
!2184 = !DILocation(line: 1404, column: 45, scope: !2161)
!2185 = !DILocalVariable(name: "data", arg: 2, scope: !2161, file: !910, line: 1404, type: !939)
!2186 = !DILocation(line: 1404, column: 58, scope: !2161)
!2187 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2161, file: !910, line: 1405, type: !1368)
!2188 = !DILocation(line: 1405, column: 34, scope: !2161)
!2189 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2161, file: !910, line: 1405, type: !1222)
!2190 = !DILocation(line: 1405, column: 59, scope: !2161)
!2191 = !DILocalVariable(name: "frame", scope: !2161, file: !910, line: 1407, type: !1099)
!2192 = !DILocation(line: 1407, column: 14, scope: !2161)
!2193 = !DILocation(line: 1407, column: 22, scope: !2161)
!2194 = !DILocalVariable(name: "buf", scope: !2161, file: !910, line: 1408, type: !937)
!2195 = !DILocation(line: 1408, column: 20, scope: !2161)
!2196 = !DILocation(line: 1408, column: 26, scope: !2161)
!2197 = !DILocation(line: 1408, column: 33, scope: !2161)
!2198 = !DILocalVariable(name: "s", scope: !2161, file: !910, line: 1409, type: !1750)
!2199 = !DILocation(line: 1409, column: 17, scope: !2161)
!2200 = !DILocation(line: 1409, column: 21, scope: !2161)
!2201 = !DILocation(line: 1409, column: 28, scope: !2161)
!2202 = !DILocalVariable(name: "sample8", scope: !2161, file: !910, line: 1410, type: !943)
!2203 = !DILocation(line: 1410, column: 14, scope: !2161)
!2204 = !DILocalVariable(name: "sample16", scope: !2161, file: !910, line: 1411, type: !944)
!2205 = !DILocation(line: 1411, column: 14, scope: !2161)
!2206 = !DILocalVariable(name: "sample24", scope: !2161, file: !910, line: 1412, type: !947)
!2207 = !DILocation(line: 1412, column: 14, scope: !2161)
!2208 = !DILocalVariable(name: "i", scope: !2161, file: !910, line: 1413, type: !918)
!2209 = !DILocation(line: 1413, column: 9, scope: !2161)
!2210 = !DILocalVariable(name: "ch", scope: !2161, file: !910, line: 1413, type: !918)
!2211 = !DILocation(line: 1413, column: 12, scope: !2161)
!2212 = !DILocalVariable(name: "ret", scope: !2161, file: !910, line: 1413, type: !918)
!2213 = !DILocation(line: 1413, column: 16, scope: !2161)
!2214 = !DILocalVariable(name: "blockstodecode", scope: !2161, file: !910, line: 1414, type: !918)
!2215 = !DILocation(line: 1414, column: 9, scope: !2161)
!2216 = !DILocalVariable(name: "decoded_buffer_size", scope: !2161, file: !910, line: 1415, type: !983)
!2217 = !DILocation(line: 1415, column: 14, scope: !2161)
!2218 = !DILocation(line: 1419, column: 5, scope: !2161)
!2219 = distinct !{!2219, !2218}
!2220 = !DILocation(line: 1419, column: 16, scope: !2221)
!2221 = !DILexicalBlockFile(scope: !2222, file: !910, discriminator: 1)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !910, line: 1419, column: 14)
!2223 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1419, column: 8)
!2224 = !DILocation(line: 1419, column: 19, scope: !2221)
!2225 = !DILocation(line: 1419, column: 27, scope: !2221)
!2226 = !DILocation(line: 1419, column: 14, scope: !2221)
!2227 = !DILocation(line: 1419, column: 36, scope: !2228)
!2228 = !DILexicalBlockFile(scope: !2229, file: !910, discriminator: 2)
!2229 = distinct !DILexicalBlock(scope: !2222, file: !910, line: 1419, column: 34)
!2230 = !DILocation(line: 1419, column: 92, scope: !2231)
!2231 = !DILexicalBlockFile(scope: !2228, file: !910, discriminator: 4)
!2232 = !DILocation(line: 1419, column: 92, scope: !2228)
!2233 = !DILocation(line: 1419, column: 103, scope: !2234)
!2234 = !DILexicalBlockFile(scope: !2223, file: !910, discriminator: 3)
!2235 = !DILocation(line: 1421, column: 9, scope: !2176)
!2236 = !DILocation(line: 1421, column: 12, scope: !2176)
!2237 = !DILocation(line: 1421, column: 8, scope: !2161)
!2238 = !DILocalVariable(name: "nblocks", scope: !2175, file: !910, line: 1422, type: !934)
!2239 = !DILocation(line: 1422, column: 18, scope: !2175)
!2240 = !DILocalVariable(name: "offset", scope: !2175, file: !910, line: 1422, type: !934)
!2241 = !DILocation(line: 1422, column: 27, scope: !2175)
!2242 = !DILocalVariable(name: "buf_size", scope: !2175, file: !910, line: 1423, type: !918)
!2243 = !DILocation(line: 1423, column: 13, scope: !2175)
!2244 = !DILocation(line: 1425, column: 14, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1425, column: 13)
!2246 = !DILocation(line: 1425, column: 21, scope: !2245)
!2247 = !DILocation(line: 1425, column: 13, scope: !2175)
!2248 = !DILocation(line: 1426, column: 14, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2245, file: !910, line: 1425, column: 27)
!2250 = !DILocation(line: 1426, column: 28, scope: !2249)
!2251 = !DILocation(line: 1427, column: 13, scope: !2249)
!2252 = !DILocation(line: 1429, column: 13, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1429, column: 13)
!2254 = !DILocation(line: 1429, column: 20, scope: !2253)
!2255 = !DILocation(line: 1429, column: 25, scope: !2253)
!2256 = !DILocation(line: 1429, column: 13, scope: !2175)
!2257 = !DILocation(line: 1430, column: 20, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2253, file: !910, line: 1429, column: 30)
!2259 = !DILocation(line: 1430, column: 13, scope: !2258)
!2260 = !DILocation(line: 1431, column: 13, scope: !2258)
!2261 = !DILocation(line: 1433, column: 20, scope: !2175)
!2262 = !DILocation(line: 1433, column: 27, scope: !2175)
!2263 = !DILocation(line: 1433, column: 32, scope: !2175)
!2264 = !DILocation(line: 1433, column: 18, scope: !2175)
!2265 = !DILocation(line: 1434, column: 13, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1434, column: 13)
!2267 = !DILocation(line: 1434, column: 25, scope: !2266)
!2268 = !DILocation(line: 1434, column: 32, scope: !2266)
!2269 = !DILocation(line: 1434, column: 22, scope: !2266)
!2270 = !DILocation(line: 1434, column: 13, scope: !2175)
!2271 = !DILocation(line: 1435, column: 20, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2266, file: !910, line: 1434, column: 38)
!2273 = !DILocation(line: 1435, column: 13, scope: !2272)
!2274 = !DILocation(line: 1437, column: 9, scope: !2272)
!2275 = !DILocation(line: 1438, column: 13, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1438, column: 13)
!2277 = !DILocation(line: 1438, column: 16, scope: !2276)
!2278 = !DILocation(line: 1438, column: 28, scope: !2276)
!2279 = !DILocation(line: 1438, column: 13, scope: !2175)
!2280 = !DILocation(line: 1439, column: 22, scope: !2276)
!2281 = !DILocation(line: 1439, column: 13, scope: !2276)
!2282 = !DILocation(line: 1440, column: 32, scope: !2175)
!2283 = !DILocation(line: 1440, column: 35, scope: !2175)
!2284 = !DILocation(line: 1440, column: 31, scope: !2175)
!2285 = !DILocation(line: 1440, column: 42, scope: !2175)
!2286 = !DILocation(line: 1440, column: 45, scope: !2175)
!2287 = !DILocation(line: 1440, column: 56, scope: !2175)
!2288 = !DILocation(line: 1440, column: 9, scope: !2175)
!2289 = !DILocation(line: 1441, column: 14, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1441, column: 13)
!2291 = !DILocation(line: 1441, column: 17, scope: !2290)
!2292 = !DILocation(line: 1441, column: 13, scope: !2175)
!2293 = !DILocation(line: 1442, column: 13, scope: !2290)
!2294 = !DILocation(line: 1443, column: 9, scope: !2175)
!2295 = !DILocation(line: 1443, column: 12, scope: !2175)
!2296 = !DILocation(line: 1443, column: 17, scope: !2175)
!2297 = !DILocation(line: 1443, column: 40, scope: !2175)
!2298 = !DILocation(line: 1443, column: 43, scope: !2175)
!2299 = !DILocation(line: 1443, column: 27, scope: !2175)
!2300 = !DILocation(line: 1443, column: 68, scope: !2175)
!2301 = !DILocation(line: 1443, column: 49, scope: !2175)
!2302 = !DILocation(line: 1444, column: 27, scope: !2175)
!2303 = !DILocation(line: 1444, column: 36, scope: !2175)
!2304 = !DILocation(line: 1445, column: 16, scope: !2175)
!2305 = !DILocation(line: 1445, column: 19, scope: !2175)
!2306 = !DILocation(line: 1445, column: 27, scope: !2175)
!2307 = !DILocation(line: 1445, column: 36, scope: !2175)
!2308 = !DILocation(line: 1445, column: 24, scope: !2175)
!2309 = !DILocation(line: 1445, column: 46, scope: !2175)
!2310 = !DILocation(line: 1445, column: 55, scope: !2175)
!2311 = !DILocation(line: 1445, column: 9, scope: !2175)
!2312 = !DILocation(line: 1446, column: 18, scope: !2175)
!2313 = !DILocation(line: 1446, column: 21, scope: !2175)
!2314 = !DILocation(line: 1446, column: 9, scope: !2175)
!2315 = !DILocation(line: 1446, column: 12, scope: !2175)
!2316 = !DILocation(line: 1446, column: 16, scope: !2175)
!2317 = !DILocation(line: 1447, column: 23, scope: !2175)
!2318 = !DILocation(line: 1447, column: 26, scope: !2175)
!2319 = !DILocation(line: 1447, column: 33, scope: !2175)
!2320 = !DILocation(line: 1447, column: 31, scope: !2175)
!2321 = !DILocation(line: 1447, column: 9, scope: !2175)
!2322 = !DILocation(line: 1447, column: 12, scope: !2175)
!2323 = !DILocation(line: 1447, column: 21, scope: !2175)
!2324 = !DILocation(line: 1449, column: 40, scope: !2175)
!2325 = !DILocation(line: 1449, column: 43, scope: !2175)
!2326 = !DILocation(line: 1449, column: 19, scope: !2175)
!2327 = !DILocation(line: 92, column: 102, scope: !2169, inlinedAt: !2181)
!2328 = !DILocation(line: 92, column: 105, scope: !2169, inlinedAt: !2181)
!2329 = !DILocation(line: 92, column: 162, scope: !2169, inlinedAt: !2181)
!2330 = !DILocation(line: 92, column: 161, scope: !2169, inlinedAt: !2181)
!2331 = !DILocation(line: 92, column: 164, scope: !2169, inlinedAt: !2181)
!2332 = !DILocation(line: 92, column: 171, scope: !2169, inlinedAt: !2181)
!2333 = !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !2181)
!2334 = !DILocation(line: 68, column: 16, scope: !2163, inlinedAt: !2180)
!2335 = !DILocation(line: 68, column: 19, scope: !2163, inlinedAt: !2180)
!2336 = !DILocation(line: 68, column: 24, scope: !2163, inlinedAt: !2180)
!2337 = !DILocation(line: 68, column: 38, scope: !2163, inlinedAt: !2180)
!2338 = !DILocation(line: 68, column: 41, scope: !2163, inlinedAt: !2180)
!2339 = !DILocation(line: 68, column: 46, scope: !2163, inlinedAt: !2180)
!2340 = !DILocation(line: 68, column: 34, scope: !2163, inlinedAt: !2180)
!2341 = !DILocation(line: 68, column: 57, scope: !2163, inlinedAt: !2180)
!2342 = !DILocation(line: 68, column: 69, scope: !2163, inlinedAt: !2180)
!2343 = !DILocation(line: 68, column: 72, scope: !2163, inlinedAt: !2180)
!2344 = !DILocation(line: 68, column: 79, scope: !2163, inlinedAt: !2180)
!2345 = !DILocation(line: 68, column: 84, scope: !2163, inlinedAt: !2180)
!2346 = !DILocation(line: 68, column: 99, scope: !2163, inlinedAt: !2180)
!2347 = !DILocation(line: 68, column: 102, scope: !2163, inlinedAt: !2180)
!2348 = !DILocation(line: 68, column: 109, scope: !2163, inlinedAt: !2180)
!2349 = !DILocation(line: 68, column: 114, scope: !2163, inlinedAt: !2180)
!2350 = !DILocation(line: 68, column: 94, scope: !2163, inlinedAt: !2180)
!2351 = !DILocation(line: 68, column: 63, scope: !2163, inlinedAt: !2180)
!2352 = !DILocation(line: 1449, column: 17, scope: !2175)
!2353 = !DILocation(line: 1450, column: 39, scope: !2175)
!2354 = !DILocation(line: 1450, column: 42, scope: !2175)
!2355 = !DILocation(line: 1450, column: 18, scope: !2175)
!2356 = !DILocation(line: 92, column: 102, scope: !2169, inlinedAt: !2174)
!2357 = !DILocation(line: 92, column: 105, scope: !2169, inlinedAt: !2174)
!2358 = !DILocation(line: 92, column: 162, scope: !2169, inlinedAt: !2174)
!2359 = !DILocation(line: 92, column: 161, scope: !2169, inlinedAt: !2174)
!2360 = !DILocation(line: 92, column: 164, scope: !2169, inlinedAt: !2174)
!2361 = !DILocation(line: 92, column: 171, scope: !2169, inlinedAt: !2174)
!2362 = !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !2174)
!2363 = !DILocation(line: 68, column: 16, scope: !2163, inlinedAt: !2168)
!2364 = !DILocation(line: 68, column: 19, scope: !2163, inlinedAt: !2168)
!2365 = !DILocation(line: 68, column: 24, scope: !2163, inlinedAt: !2168)
!2366 = !DILocation(line: 68, column: 38, scope: !2163, inlinedAt: !2168)
!2367 = !DILocation(line: 68, column: 41, scope: !2163, inlinedAt: !2168)
!2368 = !DILocation(line: 68, column: 46, scope: !2163, inlinedAt: !2168)
!2369 = !DILocation(line: 68, column: 34, scope: !2163, inlinedAt: !2168)
!2370 = !DILocation(line: 68, column: 57, scope: !2163, inlinedAt: !2168)
!2371 = !DILocation(line: 68, column: 69, scope: !2163, inlinedAt: !2168)
!2372 = !DILocation(line: 68, column: 72, scope: !2163, inlinedAt: !2168)
!2373 = !DILocation(line: 68, column: 79, scope: !2163, inlinedAt: !2168)
!2374 = !DILocation(line: 68, column: 84, scope: !2163, inlinedAt: !2168)
!2375 = !DILocation(line: 68, column: 99, scope: !2163, inlinedAt: !2168)
!2376 = !DILocation(line: 68, column: 102, scope: !2163, inlinedAt: !2168)
!2377 = !DILocation(line: 68, column: 109, scope: !2163, inlinedAt: !2168)
!2378 = !DILocation(line: 68, column: 114, scope: !2163, inlinedAt: !2168)
!2379 = !DILocation(line: 68, column: 94, scope: !2163, inlinedAt: !2168)
!2380 = !DILocation(line: 68, column: 63, scope: !2163, inlinedAt: !2168)
!2381 = !DILocation(line: 1450, column: 16, scope: !2175)
!2382 = !DILocation(line: 1451, column: 13, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1451, column: 13)
!2384 = !DILocation(line: 1451, column: 16, scope: !2383)
!2385 = !DILocation(line: 1451, column: 28, scope: !2383)
!2386 = !DILocation(line: 1451, column: 13, scope: !2175)
!2387 = !DILocation(line: 1452, column: 17, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !910, line: 1452, column: 17)
!2389 = distinct !DILexicalBlock(scope: !2383, file: !910, line: 1451, column: 37)
!2390 = !DILocation(line: 1452, column: 24, scope: !2388)
!2391 = !DILocation(line: 1452, column: 17, scope: !2389)
!2392 = !DILocation(line: 1453, column: 24, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2388, file: !910, line: 1452, column: 29)
!2394 = !DILocation(line: 1453, column: 17, scope: !2393)
!2395 = !DILocation(line: 1454, column: 17, scope: !2393)
!2396 = !DILocation(line: 1454, column: 20, scope: !2393)
!2397 = !DILocation(line: 1454, column: 25, scope: !2393)
!2398 = !DILocation(line: 1455, column: 17, scope: !2393)
!2399 = !DILocation(line: 1457, column: 17, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2389, file: !910, line: 1457, column: 17)
!2401 = !DILocation(line: 1457, column: 20, scope: !2400)
!2402 = !DILocation(line: 1457, column: 31, scope: !2400)
!2403 = !DILocation(line: 1457, column: 34, scope: !2400)
!2404 = !DILocation(line: 1457, column: 29, scope: !2400)
!2405 = !DILocation(line: 1457, column: 40, scope: !2400)
!2406 = !DILocation(line: 1457, column: 38, scope: !2400)
!2407 = !DILocation(line: 1457, column: 17, scope: !2389)
!2408 = !DILocation(line: 1458, column: 24, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2400, file: !910, line: 1457, column: 48)
!2410 = !DILocation(line: 1458, column: 17, scope: !2409)
!2411 = !DILocation(line: 1459, column: 17, scope: !2409)
!2412 = !DILocation(line: 1461, column: 23, scope: !2389)
!2413 = !DILocation(line: 1461, column: 13, scope: !2389)
!2414 = !DILocation(line: 1461, column: 16, scope: !2389)
!2415 = !DILocation(line: 1461, column: 20, scope: !2389)
!2416 = !DILocation(line: 1462, column: 9, scope: !2389)
!2417 = !DILocation(line: 1463, column: 40, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2419, file: !910, line: 1463, column: 17)
!2419 = distinct !DILexicalBlock(scope: !2383, file: !910, line: 1462, column: 16)
!2420 = !DILocation(line: 1463, column: 43, scope: !2418)
!2421 = !DILocation(line: 1463, column: 47, scope: !2418)
!2422 = !DILocation(line: 1463, column: 50, scope: !2418)
!2423 = !DILocation(line: 1463, column: 55, scope: !2418)
!2424 = !DILocation(line: 1463, column: 58, scope: !2418)
!2425 = !DILocation(line: 1463, column: 69, scope: !2418)
!2426 = !DILocation(line: 1463, column: 72, scope: !2418)
!2427 = !DILocation(line: 1463, column: 67, scope: !2418)
!2428 = !DILocation(line: 1463, column: 24, scope: !2418)
!2429 = !DILocation(line: 1463, column: 22, scope: !2418)
!2430 = !DILocation(line: 1463, column: 78, scope: !2418)
!2431 = !DILocation(line: 1463, column: 17, scope: !2419)
!2432 = !DILocation(line: 1464, column: 24, scope: !2418)
!2433 = !DILocation(line: 1464, column: 17, scope: !2418)
!2434 = !DILocation(line: 1465, column: 17, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2419, file: !910, line: 1465, column: 17)
!2436 = !DILocation(line: 1465, column: 20, scope: !2435)
!2437 = !DILocation(line: 1465, column: 32, scope: !2435)
!2438 = !DILocation(line: 1465, column: 17, scope: !2419)
!2439 = !DILocation(line: 1466, column: 33, scope: !2435)
!2440 = !DILocation(line: 1466, column: 36, scope: !2435)
!2441 = !DILocation(line: 1466, column: 40, scope: !2435)
!2442 = !DILocation(line: 1466, column: 47, scope: !2435)
!2443 = !DILocation(line: 1466, column: 17, scope: !2435)
!2444 = !DILocation(line: 1468, column: 33, scope: !2435)
!2445 = !DILocation(line: 1468, column: 36, scope: !2435)
!2446 = !DILocation(line: 1468, column: 40, scope: !2435)
!2447 = !DILocation(line: 1468, column: 17, scope: !2435)
!2448 = !DILocation(line: 1471, column: 14, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1471, column: 13)
!2450 = !DILocation(line: 1471, column: 22, scope: !2449)
!2451 = !DILocation(line: 1471, column: 25, scope: !2452)
!2452 = !DILexicalBlockFile(scope: !2449, file: !910, discriminator: 1)
!2453 = !DILocation(line: 1471, column: 33, scope: !2452)
!2454 = !DILocation(line: 1471, column: 13, scope: !2452)
!2455 = !DILocation(line: 1472, column: 20, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2449, file: !910, line: 1471, column: 84)
!2457 = !DILocation(line: 1473, column: 20, scope: !2456)
!2458 = !DILocation(line: 1472, column: 13, scope: !2456)
!2459 = !DILocation(line: 1474, column: 13, scope: !2456)
!2460 = !DILocation(line: 1478, column: 32, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2175, file: !910, line: 1478, column: 13)
!2462 = !DILocation(line: 1478, column: 13, scope: !2461)
!2463 = !DILocation(line: 1478, column: 35, scope: !2461)
!2464 = !DILocation(line: 1478, column: 13, scope: !2175)
!2465 = !DILocation(line: 1479, column: 20, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2461, file: !910, line: 1478, column: 40)
!2467 = !DILocation(line: 1479, column: 13, scope: !2466)
!2468 = !DILocation(line: 1480, column: 13, scope: !2466)
!2469 = !DILocation(line: 1482, column: 22, scope: !2175)
!2470 = !DILocation(line: 1482, column: 9, scope: !2175)
!2471 = !DILocation(line: 1482, column: 12, scope: !2175)
!2472 = !DILocation(line: 1482, column: 20, scope: !2175)
!2473 = !DILocation(line: 1483, column: 5, scope: !2175)
!2474 = !DILocation(line: 1485, column: 10, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1485, column: 9)
!2476 = !DILocation(line: 1485, column: 13, scope: !2475)
!2477 = !DILocation(line: 1485, column: 9, scope: !2161)
!2478 = !DILocation(line: 1486, column: 10, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2475, file: !910, line: 1485, column: 19)
!2480 = !DILocation(line: 1486, column: 24, scope: !2479)
!2481 = !DILocation(line: 1487, column: 16, scope: !2479)
!2482 = !DILocation(line: 1487, column: 23, scope: !2479)
!2483 = !DILocation(line: 1487, column: 9, scope: !2479)
!2484 = !DILocation(line: 1490, column: 24, scope: !2161)
!2485 = !DILocation(line: 1490, column: 27, scope: !2161)
!2486 = !DILocation(line: 1490, column: 47, scope: !2161)
!2487 = !DILocation(line: 1490, column: 50, scope: !2161)
!2488 = !DILocation(line: 1490, column: 44, scope: !2161)
!2489 = !DILocation(line: 1490, column: 23, scope: !2161)
!2490 = !DILocation(line: 1490, column: 62, scope: !2491)
!2491 = !DILexicalBlockFile(scope: !2161, file: !910, discriminator: 1)
!2492 = !DILocation(line: 1490, column: 65, scope: !2491)
!2493 = !DILocation(line: 1490, column: 23, scope: !2491)
!2494 = !DILocation(line: 1490, column: 77, scope: !2495)
!2495 = !DILexicalBlockFile(scope: !2161, file: !910, discriminator: 2)
!2496 = !DILocation(line: 1490, column: 80, scope: !2495)
!2497 = !DILocation(line: 1490, column: 23, scope: !2495)
!2498 = !DILocation(line: 1490, column: 23, scope: !2499)
!2499 = !DILexicalBlockFile(scope: !2161, file: !910, discriminator: 3)
!2500 = !DILocation(line: 1490, column: 20, scope: !2499)
!2501 = !DILocation(line: 1493, column: 9, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1493, column: 9)
!2503 = !DILocation(line: 1493, column: 12, scope: !2502)
!2504 = !DILocation(line: 1493, column: 24, scope: !2502)
!2505 = !DILocation(line: 1493, column: 9, scope: !2161)
!2506 = !DILocation(line: 1494, column: 26, scope: !2502)
!2507 = !DILocation(line: 1494, column: 29, scope: !2502)
!2508 = !DILocation(line: 1494, column: 24, scope: !2502)
!2509 = !DILocation(line: 1494, column: 9, scope: !2502)
!2510 = !DILocation(line: 1497, column: 36, scope: !2161)
!2511 = !DILocation(line: 1497, column: 51, scope: !2161)
!2512 = !DILocation(line: 1497, column: 55, scope: !2161)
!2513 = !DILocation(line: 1497, column: 58, scope: !2161)
!2514 = !DILocation(line: 1497, column: 33, scope: !2161)
!2515 = !DILocation(line: 1497, column: 31, scope: !2161)
!2516 = !DILocation(line: 1497, column: 69, scope: !2161)
!2517 = !DILocation(line: 1497, column: 25, scope: !2161)
!2518 = !DILocation(line: 1498, column: 5, scope: !2161)
!2519 = distinct !{!2519, !2518}
!2520 = !DILocation(line: 1498, column: 16, scope: !2521)
!2521 = !DILexicalBlockFile(scope: !2522, file: !910, discriminator: 1)
!2522 = distinct !DILexicalBlock(scope: !2523, file: !910, line: 1498, column: 14)
!2523 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1498, column: 8)
!2524 = !DILocation(line: 1498, column: 36, scope: !2521)
!2525 = !DILocation(line: 1498, column: 14, scope: !2521)
!2526 = !DILocation(line: 1498, column: 54, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2528, file: !910, discriminator: 2)
!2528 = distinct !DILexicalBlock(scope: !2522, file: !910, line: 1498, column: 52)
!2529 = !DILocation(line: 1498, column: 110, scope: !2530)
!2530 = !DILexicalBlockFile(scope: !2527, file: !910, discriminator: 4)
!2531 = !DILocation(line: 1498, column: 110, scope: !2527)
!2532 = !DILocation(line: 1498, column: 121, scope: !2533)
!2533 = !DILexicalBlockFile(scope: !2523, file: !910, discriminator: 3)
!2534 = !DILocation(line: 1499, column: 21, scope: !2161)
!2535 = !DILocation(line: 1499, column: 24, scope: !2161)
!2536 = !DILocation(line: 1499, column: 20, scope: !2161)
!2537 = !DILocation(line: 1499, column: 41, scope: !2161)
!2538 = !DILocation(line: 1499, column: 44, scope: !2161)
!2539 = !DILocation(line: 1499, column: 58, scope: !2161)
!2540 = !DILocation(line: 1499, column: 5, scope: !2161)
!2541 = !DILocation(line: 1500, column: 10, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1500, column: 9)
!2543 = !DILocation(line: 1500, column: 13, scope: !2542)
!2544 = !DILocation(line: 1500, column: 9, scope: !2161)
!2545 = !DILocation(line: 1501, column: 9, scope: !2542)
!2546 = !DILocation(line: 1502, column: 12, scope: !2161)
!2547 = !DILocation(line: 1502, column: 15, scope: !2161)
!2548 = !DILocation(line: 1502, column: 5, scope: !2161)
!2549 = !DILocation(line: 1502, column: 34, scope: !2161)
!2550 = !DILocation(line: 1502, column: 37, scope: !2161)
!2551 = !DILocation(line: 1503, column: 21, scope: !2161)
!2552 = !DILocation(line: 1503, column: 24, scope: !2161)
!2553 = !DILocation(line: 1503, column: 5, scope: !2161)
!2554 = !DILocation(line: 1503, column: 8, scope: !2161)
!2555 = !DILocation(line: 1503, column: 19, scope: !2161)
!2556 = !DILocation(line: 1504, column: 21, scope: !2161)
!2557 = !DILocation(line: 1504, column: 24, scope: !2161)
!2558 = !DILocation(line: 1504, column: 44, scope: !2161)
!2559 = !DILocation(line: 1504, column: 59, scope: !2161)
!2560 = !DILocation(line: 1504, column: 63, scope: !2161)
!2561 = !DILocation(line: 1504, column: 66, scope: !2161)
!2562 = !DILocation(line: 1504, column: 39, scope: !2161)
!2563 = !DILocation(line: 1504, column: 5, scope: !2161)
!2564 = !DILocation(line: 1504, column: 8, scope: !2161)
!2565 = !DILocation(line: 1504, column: 19, scope: !2161)
!2566 = !DILocation(line: 1507, column: 25, scope: !2161)
!2567 = !DILocation(line: 1507, column: 5, scope: !2161)
!2568 = !DILocation(line: 1507, column: 12, scope: !2161)
!2569 = !DILocation(line: 1507, column: 23, scope: !2161)
!2570 = !DILocation(line: 1508, column: 30, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1508, column: 9)
!2572 = !DILocation(line: 1508, column: 37, scope: !2571)
!2573 = !DILocation(line: 1508, column: 16, scope: !2571)
!2574 = !DILocation(line: 1508, column: 14, scope: !2571)
!2575 = !DILocation(line: 1508, column: 48, scope: !2571)
!2576 = !DILocation(line: 1508, column: 9, scope: !2161)
!2577 = !DILocation(line: 1509, column: 16, scope: !2571)
!2578 = !DILocation(line: 1509, column: 9, scope: !2571)
!2579 = !DILocation(line: 1511, column: 5, scope: !2161)
!2580 = !DILocation(line: 1511, column: 8, scope: !2161)
!2581 = !DILocation(line: 1511, column: 13, scope: !2161)
!2582 = !DILocation(line: 1513, column: 10, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1513, column: 9)
!2584 = !DILocation(line: 1513, column: 13, scope: !2583)
!2585 = !DILocation(line: 1513, column: 22, scope: !2583)
!2586 = !DILocation(line: 1513, column: 28, scope: !2583)
!2587 = !DILocation(line: 1513, column: 32, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !2583, file: !910, discriminator: 1)
!2589 = !DILocation(line: 1513, column: 35, scope: !2588)
!2590 = !DILocation(line: 1513, column: 46, scope: !2588)
!2591 = !DILocation(line: 1513, column: 9, scope: !2588)
!2592 = !DILocation(line: 1514, column: 25, scope: !2583)
!2593 = !DILocation(line: 1514, column: 28, scope: !2583)
!2594 = !DILocation(line: 1514, column: 9, scope: !2583)
!2595 = !DILocation(line: 1516, column: 27, scope: !2583)
!2596 = !DILocation(line: 1516, column: 30, scope: !2583)
!2597 = !DILocation(line: 1516, column: 9, scope: !2583)
!2598 = !DILocation(line: 46, column: 9, scope: !2599, inlinedAt: !2603)
!2599 = distinct !DISubprogram(name: "emms_c", scope: !2600, file: !2600, line: 37, type: !2601, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2600 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2601 = !DISubroutineType(types: !2602)
!2602 = !{null}
!2603 = distinct !DILocation(line: 1517, column: 5, scope: !2161)
!2604 = !{i32 100457}
!2605 = !DILocation(line: 1519, column: 9, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1519, column: 9)
!2607 = !DILocation(line: 1519, column: 12, scope: !2606)
!2608 = !DILocation(line: 1519, column: 9, scope: !2161)
!2609 = !DILocation(line: 1520, column: 9, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2606, file: !910, line: 1519, column: 19)
!2611 = !DILocation(line: 1520, column: 12, scope: !2610)
!2612 = !DILocation(line: 1520, column: 19, scope: !2610)
!2613 = !DILocation(line: 1521, column: 16, scope: !2610)
!2614 = !DILocation(line: 1521, column: 9, scope: !2610)
!2615 = !DILocation(line: 1522, column: 9, scope: !2610)
!2616 = !DILocation(line: 1525, column: 13, scope: !2161)
!2617 = !DILocation(line: 1525, column: 16, scope: !2161)
!2618 = !DILocation(line: 1525, column: 5, scope: !2161)
!2619 = !DILocation(line: 1527, column: 17, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2621, file: !910, line: 1527, column: 9)
!2621 = distinct !DILexicalBlock(scope: !2161, file: !910, line: 1525, column: 21)
!2622 = !DILocation(line: 1527, column: 14, scope: !2620)
!2623 = !DILocation(line: 1527, column: 22, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2625, file: !910, discriminator: 1)
!2625 = distinct !DILexicalBlock(scope: !2620, file: !910, line: 1527, column: 9)
!2626 = !DILocation(line: 1527, column: 27, scope: !2624)
!2627 = !DILocation(line: 1527, column: 30, scope: !2624)
!2628 = !DILocation(line: 1527, column: 25, scope: !2624)
!2629 = !DILocation(line: 1527, column: 9, scope: !2624)
!2630 = !DILocation(line: 1528, column: 46, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2625, file: !910, line: 1527, column: 46)
!2632 = !DILocation(line: 1528, column: 34, scope: !2631)
!2633 = !DILocation(line: 1528, column: 41, scope: !2631)
!2634 = !DILocation(line: 1528, column: 21, scope: !2631)
!2635 = !DILocation(line: 1529, column: 20, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2631, file: !910, line: 1529, column: 13)
!2637 = !DILocation(line: 1529, column: 18, scope: !2636)
!2638 = !DILocation(line: 1529, column: 25, scope: !2639)
!2639 = !DILexicalBlockFile(scope: !2640, file: !910, discriminator: 1)
!2640 = distinct !DILexicalBlock(scope: !2636, file: !910, line: 1529, column: 13)
!2641 = !DILocation(line: 1529, column: 29, scope: !2639)
!2642 = !DILocation(line: 1529, column: 27, scope: !2639)
!2643 = !DILocation(line: 1529, column: 13, scope: !2639)
!2644 = !DILocation(line: 1530, column: 46, scope: !2640)
!2645 = !DILocation(line: 1530, column: 31, scope: !2640)
!2646 = !DILocation(line: 1530, column: 42, scope: !2640)
!2647 = !DILocation(line: 1530, column: 34, scope: !2640)
!2648 = !DILocation(line: 1530, column: 49, scope: !2640)
!2649 = !DILocation(line: 1530, column: 57, scope: !2640)
!2650 = !DILocation(line: 1530, column: 30, scope: !2640)
!2651 = !DILocation(line: 1530, column: 25, scope: !2640)
!2652 = !DILocation(line: 1530, column: 28, scope: !2640)
!2653 = !DILocation(line: 1530, column: 17, scope: !2640)
!2654 = !DILocation(line: 1529, column: 46, scope: !2655)
!2655 = !DILexicalBlockFile(scope: !2640, file: !910, discriminator: 2)
!2656 = !DILocation(line: 1529, column: 13, scope: !2655)
!2657 = distinct !{!2657, !2658}
!2658 = !DILocation(line: 1529, column: 13, scope: !2631)
!2659 = !DILocation(line: 1531, column: 9, scope: !2631)
!2660 = !DILocation(line: 1527, column: 42, scope: !2661)
!2661 = !DILexicalBlockFile(scope: !2625, file: !910, discriminator: 2)
!2662 = !DILocation(line: 1527, column: 9, scope: !2661)
!2663 = distinct !{!2663, !2664}
!2664 = !DILocation(line: 1527, column: 9, scope: !2621)
!2665 = !DILocation(line: 1532, column: 9, scope: !2621)
!2666 = !DILocation(line: 1534, column: 17, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2621, file: !910, line: 1534, column: 9)
!2668 = !DILocation(line: 1534, column: 14, scope: !2667)
!2669 = !DILocation(line: 1534, column: 22, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !2671, file: !910, discriminator: 1)
!2671 = distinct !DILexicalBlock(scope: !2667, file: !910, line: 1534, column: 9)
!2672 = !DILocation(line: 1534, column: 27, scope: !2670)
!2673 = !DILocation(line: 1534, column: 30, scope: !2670)
!2674 = !DILocation(line: 1534, column: 25, scope: !2670)
!2675 = !DILocation(line: 1534, column: 9, scope: !2670)
!2676 = !DILocation(line: 1535, column: 47, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2671, file: !910, line: 1534, column: 46)
!2678 = !DILocation(line: 1535, column: 35, scope: !2677)
!2679 = !DILocation(line: 1535, column: 42, scope: !2677)
!2680 = !DILocation(line: 1535, column: 24, scope: !2677)
!2681 = !DILocation(line: 1535, column: 22, scope: !2677)
!2682 = !DILocation(line: 1536, column: 20, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2677, file: !910, line: 1536, column: 13)
!2684 = !DILocation(line: 1536, column: 18, scope: !2683)
!2685 = !DILocation(line: 1536, column: 25, scope: !2686)
!2686 = !DILexicalBlockFile(scope: !2687, file: !910, discriminator: 1)
!2687 = distinct !DILexicalBlock(scope: !2683, file: !910, line: 1536, column: 13)
!2688 = !DILocation(line: 1536, column: 29, scope: !2686)
!2689 = !DILocation(line: 1536, column: 27, scope: !2686)
!2690 = !DILocation(line: 1536, column: 13, scope: !2686)
!2691 = !DILocation(line: 1537, column: 46, scope: !2687)
!2692 = !DILocation(line: 1537, column: 31, scope: !2687)
!2693 = !DILocation(line: 1537, column: 42, scope: !2687)
!2694 = !DILocation(line: 1537, column: 34, scope: !2687)
!2695 = !DILocation(line: 1537, column: 26, scope: !2687)
!2696 = !DILocation(line: 1537, column: 29, scope: !2687)
!2697 = !DILocation(line: 1537, column: 17, scope: !2687)
!2698 = !DILocation(line: 1536, column: 46, scope: !2699)
!2699 = !DILexicalBlockFile(scope: !2687, file: !910, discriminator: 2)
!2700 = !DILocation(line: 1536, column: 13, scope: !2699)
!2701 = distinct !{!2701, !2702}
!2702 = !DILocation(line: 1536, column: 13, scope: !2677)
!2703 = !DILocation(line: 1538, column: 9, scope: !2677)
!2704 = !DILocation(line: 1534, column: 42, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !2671, file: !910, discriminator: 2)
!2706 = !DILocation(line: 1534, column: 9, scope: !2705)
!2707 = distinct !{!2707, !2708}
!2708 = !DILocation(line: 1534, column: 9, scope: !2621)
!2709 = !DILocation(line: 1539, column: 9, scope: !2621)
!2710 = !DILocation(line: 1541, column: 17, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2621, file: !910, line: 1541, column: 9)
!2712 = !DILocation(line: 1541, column: 14, scope: !2711)
!2713 = !DILocation(line: 1541, column: 22, scope: !2714)
!2714 = !DILexicalBlockFile(scope: !2715, file: !910, discriminator: 1)
!2715 = distinct !DILexicalBlock(scope: !2711, file: !910, line: 1541, column: 9)
!2716 = !DILocation(line: 1541, column: 27, scope: !2714)
!2717 = !DILocation(line: 1541, column: 30, scope: !2714)
!2718 = !DILocation(line: 1541, column: 25, scope: !2714)
!2719 = !DILocation(line: 1541, column: 9, scope: !2714)
!2720 = !DILocation(line: 1542, column: 47, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2715, file: !910, line: 1541, column: 46)
!2722 = !DILocation(line: 1542, column: 35, scope: !2721)
!2723 = !DILocation(line: 1542, column: 42, scope: !2721)
!2724 = !DILocation(line: 1542, column: 24, scope: !2721)
!2725 = !DILocation(line: 1542, column: 22, scope: !2721)
!2726 = !DILocation(line: 1543, column: 20, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2721, file: !910, line: 1543, column: 13)
!2728 = !DILocation(line: 1543, column: 18, scope: !2727)
!2729 = !DILocation(line: 1543, column: 25, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2731, file: !910, discriminator: 1)
!2731 = distinct !DILexicalBlock(scope: !2727, file: !910, line: 1543, column: 13)
!2732 = !DILocation(line: 1543, column: 29, scope: !2730)
!2733 = !DILocation(line: 1543, column: 27, scope: !2730)
!2734 = !DILocation(line: 1543, column: 13, scope: !2730)
!2735 = !DILocation(line: 1544, column: 46, scope: !2731)
!2736 = !DILocation(line: 1544, column: 31, scope: !2731)
!2737 = !DILocation(line: 1544, column: 42, scope: !2731)
!2738 = !DILocation(line: 1544, column: 34, scope: !2731)
!2739 = !DILocation(line: 1544, column: 49, scope: !2731)
!2740 = !DILocation(line: 1544, column: 26, scope: !2731)
!2741 = !DILocation(line: 1544, column: 29, scope: !2731)
!2742 = !DILocation(line: 1544, column: 17, scope: !2731)
!2743 = !DILocation(line: 1543, column: 46, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2731, file: !910, discriminator: 2)
!2745 = !DILocation(line: 1543, column: 13, scope: !2744)
!2746 = distinct !{!2746, !2747}
!2747 = !DILocation(line: 1543, column: 13, scope: !2721)
!2748 = !DILocation(line: 1545, column: 9, scope: !2721)
!2749 = !DILocation(line: 1541, column: 42, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2715, file: !910, discriminator: 2)
!2751 = !DILocation(line: 1541, column: 9, scope: !2750)
!2752 = distinct !{!2752, !2753}
!2753 = !DILocation(line: 1541, column: 9, scope: !2621)
!2754 = !DILocation(line: 1546, column: 9, scope: !2621)
!2755 = !DILocation(line: 1549, column: 19, scope: !2161)
!2756 = !DILocation(line: 1549, column: 5, scope: !2161)
!2757 = !DILocation(line: 1549, column: 8, scope: !2161)
!2758 = !DILocation(line: 1549, column: 16, scope: !2161)
!2759 = !DILocation(line: 1551, column: 6, scope: !2161)
!2760 = !DILocation(line: 1551, column: 20, scope: !2161)
!2761 = !DILocation(line: 1553, column: 13, scope: !2161)
!2762 = !DILocation(line: 1553, column: 16, scope: !2161)
!2763 = !DILocation(line: 1553, column: 12, scope: !2161)
!2764 = !DILocation(line: 1553, column: 26, scope: !2491)
!2765 = !DILocation(line: 1553, column: 33, scope: !2491)
!2766 = !DILocation(line: 1553, column: 12, scope: !2491)
!2767 = !DILocation(line: 1553, column: 12, scope: !2495)
!2768 = !DILocation(line: 1553, column: 12, scope: !2499)
!2769 = !DILocation(line: 1553, column: 5, scope: !2499)
!2770 = !DILocation(line: 1554, column: 1, scope: !2161)
!2771 = distinct !DISubprogram(name: "ape_decode_close", scope: !910, file: !910, line: 200, type: !1075, isLocal: true, isDefinition: true, scopeLine: 201, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2772 = !DILocalVariable(name: "avctx", arg: 1, scope: !2771, file: !910, line: 200, type: !1077)
!2773 = !DILocation(line: 200, column: 67, scope: !2771)
!2774 = !DILocalVariable(name: "s", scope: !2771, file: !910, line: 202, type: !1750)
!2775 = !DILocation(line: 202, column: 17, scope: !2771)
!2776 = !DILocation(line: 202, column: 21, scope: !2771)
!2777 = !DILocation(line: 202, column: 28, scope: !2771)
!2778 = !DILocalVariable(name: "i", scope: !2771, file: !910, line: 203, type: !918)
!2779 = !DILocation(line: 203, column: 9, scope: !2771)
!2780 = !DILocation(line: 205, column: 12, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2771, file: !910, line: 205, column: 5)
!2782 = !DILocation(line: 205, column: 10, scope: !2781)
!2783 = !DILocation(line: 205, column: 17, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2785, file: !910, discriminator: 1)
!2785 = distinct !DILexicalBlock(scope: !2781, file: !910, line: 205, column: 5)
!2786 = !DILocation(line: 205, column: 19, scope: !2784)
!2787 = !DILocation(line: 205, column: 5, scope: !2784)
!2788 = !DILocation(line: 206, column: 32, scope: !2785)
!2789 = !DILocation(line: 206, column: 19, scope: !2785)
!2790 = !DILocation(line: 206, column: 22, scope: !2785)
!2791 = !DILocation(line: 206, column: 18, scope: !2785)
!2792 = !DILocation(line: 206, column: 9, scope: !2785)
!2793 = !DILocation(line: 205, column: 25, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2785, file: !910, discriminator: 2)
!2795 = !DILocation(line: 205, column: 5, scope: !2794)
!2796 = distinct !{!2796, !2797}
!2797 = !DILocation(line: 205, column: 5, scope: !2771)
!2798 = !DILocation(line: 208, column: 15, scope: !2771)
!2799 = !DILocation(line: 208, column: 18, scope: !2771)
!2800 = !DILocation(line: 208, column: 14, scope: !2771)
!2801 = !DILocation(line: 208, column: 5, scope: !2771)
!2802 = !DILocation(line: 209, column: 15, scope: !2771)
!2803 = !DILocation(line: 209, column: 18, scope: !2771)
!2804 = !DILocation(line: 209, column: 14, scope: !2771)
!2805 = !DILocation(line: 209, column: 5, scope: !2771)
!2806 = !DILocation(line: 210, column: 23, scope: !2771)
!2807 = !DILocation(line: 210, column: 26, scope: !2771)
!2808 = !DILocation(line: 210, column: 36, scope: !2771)
!2809 = !DILocation(line: 210, column: 5, scope: !2771)
!2810 = !DILocation(line: 210, column: 8, scope: !2771)
!2811 = !DILocation(line: 210, column: 21, scope: !2771)
!2812 = !DILocation(line: 212, column: 5, scope: !2771)
!2813 = distinct !DISubprogram(name: "ape_flush", scope: !910, file: !910, line: 1556, type: !1695, isLocal: true, isDefinition: true, scopeLine: 1557, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2814 = !DILocalVariable(name: "avctx", arg: 1, scope: !2813, file: !910, line: 1556, type: !1077)
!2815 = !DILocation(line: 1556, column: 39, scope: !2813)
!2816 = !DILocalVariable(name: "s", scope: !2813, file: !910, line: 1558, type: !1750)
!2817 = !DILocation(line: 1558, column: 17, scope: !2813)
!2818 = !DILocation(line: 1558, column: 21, scope: !2813)
!2819 = !DILocation(line: 1558, column: 28, scope: !2813)
!2820 = !DILocation(line: 1559, column: 5, scope: !2813)
!2821 = !DILocation(line: 1559, column: 8, scope: !2813)
!2822 = !DILocation(line: 1559, column: 15, scope: !2813)
!2823 = !DILocation(line: 1560, column: 1, scope: !2813)
!2824 = distinct !DISubprogram(name: "entropy_decode_mono_0000", scope: !910, file: !910, line: 632, type: !2825, isLocal: true, isDefinition: true, scopeLine: 633, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{null, !1750, !918}
!2827 = !DILocalVariable(name: "ctx", arg: 1, scope: !2824, file: !910, line: 632, type: !1750)
!2828 = !DILocation(line: 632, column: 50, scope: !2824)
!2829 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2824, file: !910, line: 632, type: !918)
!2830 = !DILocation(line: 632, column: 59, scope: !2824)
!2831 = !DILocation(line: 634, column: 23, scope: !2824)
!2832 = !DILocation(line: 634, column: 29, scope: !2824)
!2833 = !DILocation(line: 634, column: 34, scope: !2824)
!2834 = !DILocation(line: 634, column: 38, scope: !2824)
!2835 = !DILocation(line: 634, column: 43, scope: !2824)
!2836 = !DILocation(line: 634, column: 56, scope: !2824)
!2837 = !DILocation(line: 634, column: 61, scope: !2824)
!2838 = !DILocation(line: 635, column: 23, scope: !2824)
!2839 = !DILocation(line: 634, column: 5, scope: !2824)
!2840 = !DILocation(line: 636, column: 1, scope: !2824)
!2841 = distinct !DISubprogram(name: "entropy_decode_stereo_0000", scope: !910, file: !910, line: 638, type: !2825, isLocal: true, isDefinition: true, scopeLine: 639, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2842 = !DILocalVariable(name: "ctx", arg: 1, scope: !2841, file: !910, line: 638, type: !1750)
!2843 = !DILocation(line: 638, column: 52, scope: !2841)
!2844 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2841, file: !910, line: 638, type: !918)
!2845 = !DILocation(line: 638, column: 61, scope: !2841)
!2846 = !DILocation(line: 640, column: 23, scope: !2841)
!2847 = !DILocation(line: 640, column: 29, scope: !2841)
!2848 = !DILocation(line: 640, column: 34, scope: !2841)
!2849 = !DILocation(line: 640, column: 38, scope: !2841)
!2850 = !DILocation(line: 640, column: 43, scope: !2841)
!2851 = !DILocation(line: 640, column: 56, scope: !2841)
!2852 = !DILocation(line: 640, column: 61, scope: !2841)
!2853 = !DILocation(line: 641, column: 23, scope: !2841)
!2854 = !DILocation(line: 640, column: 5, scope: !2841)
!2855 = !DILocation(line: 642, column: 23, scope: !2841)
!2856 = !DILocation(line: 642, column: 29, scope: !2841)
!2857 = !DILocation(line: 642, column: 34, scope: !2841)
!2858 = !DILocation(line: 642, column: 38, scope: !2841)
!2859 = !DILocation(line: 642, column: 43, scope: !2841)
!2860 = !DILocation(line: 642, column: 56, scope: !2841)
!2861 = !DILocation(line: 642, column: 61, scope: !2841)
!2862 = !DILocation(line: 643, column: 23, scope: !2841)
!2863 = !DILocation(line: 642, column: 5, scope: !2841)
!2864 = !DILocation(line: 644, column: 1, scope: !2841)
!2865 = distinct !DISubprogram(name: "entropy_decode_mono_3860", scope: !910, file: !910, line: 646, type: !2825, isLocal: true, isDefinition: true, scopeLine: 647, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2866 = !DILocalVariable(name: "ctx", arg: 1, scope: !2865, file: !910, line: 646, type: !1750)
!2867 = !DILocation(line: 646, column: 50, scope: !2865)
!2868 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2865, file: !910, line: 646, type: !918)
!2869 = !DILocation(line: 646, column: 59, scope: !2865)
!2870 = !DILocalVariable(name: "decoded0", scope: !2865, file: !910, line: 648, type: !947)
!2871 = !DILocation(line: 648, column: 14, scope: !2865)
!2872 = !DILocation(line: 648, column: 25, scope: !2865)
!2873 = !DILocation(line: 648, column: 30, scope: !2865)
!2874 = !DILocation(line: 650, column: 5, scope: !2865)
!2875 = !DILocation(line: 650, column: 26, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2865, file: !910, discriminator: 1)
!2877 = !DILocation(line: 650, column: 5, scope: !2876)
!2878 = !DILocation(line: 651, column: 45, scope: !2865)
!2879 = !DILocation(line: 651, column: 51, scope: !2865)
!2880 = !DILocation(line: 651, column: 56, scope: !2865)
!2881 = !DILocation(line: 651, column: 61, scope: !2865)
!2882 = !DILocation(line: 651, column: 66, scope: !2865)
!2883 = !DILocation(line: 651, column: 23, scope: !2865)
!2884 = !DILocation(line: 651, column: 18, scope: !2865)
!2885 = !DILocation(line: 651, column: 21, scope: !2865)
!2886 = !DILocation(line: 650, column: 5, scope: !2887)
!2887 = !DILexicalBlockFile(scope: !2865, file: !910, discriminator: 2)
!2888 = distinct !{!2888, !2874}
!2889 = !DILocation(line: 652, column: 1, scope: !2865)
!2890 = distinct !DISubprogram(name: "entropy_decode_stereo_3860", scope: !910, file: !910, line: 654, type: !2825, isLocal: true, isDefinition: true, scopeLine: 655, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2891 = !DILocalVariable(name: "ctx", arg: 1, scope: !2890, file: !910, line: 654, type: !1750)
!2892 = !DILocation(line: 654, column: 52, scope: !2890)
!2893 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2890, file: !910, line: 654, type: !918)
!2894 = !DILocation(line: 654, column: 61, scope: !2890)
!2895 = !DILocalVariable(name: "decoded0", scope: !2890, file: !910, line: 656, type: !947)
!2896 = !DILocation(line: 656, column: 14, scope: !2890)
!2897 = !DILocation(line: 656, column: 25, scope: !2890)
!2898 = !DILocation(line: 656, column: 30, scope: !2890)
!2899 = !DILocalVariable(name: "decoded1", scope: !2890, file: !910, line: 657, type: !947)
!2900 = !DILocation(line: 657, column: 14, scope: !2890)
!2901 = !DILocation(line: 657, column: 25, scope: !2890)
!2902 = !DILocation(line: 657, column: 30, scope: !2890)
!2903 = !DILocalVariable(name: "blocks", scope: !2890, file: !910, line: 658, type: !918)
!2904 = !DILocation(line: 658, column: 9, scope: !2890)
!2905 = !DILocation(line: 658, column: 18, scope: !2890)
!2906 = !DILocation(line: 660, column: 5, scope: !2890)
!2907 = !DILocation(line: 660, column: 26, scope: !2908)
!2908 = !DILexicalBlockFile(scope: !2890, file: !910, discriminator: 1)
!2909 = !DILocation(line: 660, column: 5, scope: !2908)
!2910 = !DILocation(line: 661, column: 45, scope: !2890)
!2911 = !DILocation(line: 661, column: 51, scope: !2890)
!2912 = !DILocation(line: 661, column: 56, scope: !2890)
!2913 = !DILocation(line: 661, column: 61, scope: !2890)
!2914 = !DILocation(line: 661, column: 66, scope: !2890)
!2915 = !DILocation(line: 661, column: 23, scope: !2890)
!2916 = !DILocation(line: 661, column: 18, scope: !2890)
!2917 = !DILocation(line: 661, column: 21, scope: !2890)
!2918 = !DILocation(line: 660, column: 5, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2890, file: !910, discriminator: 2)
!2920 = distinct !{!2920, !2906}
!2921 = !DILocation(line: 662, column: 5, scope: !2890)
!2922 = !DILocation(line: 662, column: 18, scope: !2908)
!2923 = !DILocation(line: 662, column: 5, scope: !2908)
!2924 = !DILocation(line: 663, column: 45, scope: !2890)
!2925 = !DILocation(line: 663, column: 51, scope: !2890)
!2926 = !DILocation(line: 663, column: 56, scope: !2890)
!2927 = !DILocation(line: 663, column: 61, scope: !2890)
!2928 = !DILocation(line: 663, column: 66, scope: !2890)
!2929 = !DILocation(line: 663, column: 23, scope: !2890)
!2930 = !DILocation(line: 663, column: 18, scope: !2890)
!2931 = !DILocation(line: 663, column: 21, scope: !2890)
!2932 = !DILocation(line: 662, column: 5, scope: !2919)
!2933 = distinct !{!2933, !2921}
!2934 = !DILocation(line: 664, column: 1, scope: !2890)
!2935 = distinct !DISubprogram(name: "entropy_decode_mono_3900", scope: !910, file: !910, line: 666, type: !2825, isLocal: true, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2936 = !DILocalVariable(name: "ctx", arg: 1, scope: !2935, file: !910, line: 666, type: !1750)
!2937 = !DILocation(line: 666, column: 50, scope: !2935)
!2938 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2935, file: !910, line: 666, type: !918)
!2939 = !DILocation(line: 666, column: 59, scope: !2935)
!2940 = !DILocalVariable(name: "decoded0", scope: !2935, file: !910, line: 668, type: !947)
!2941 = !DILocation(line: 668, column: 14, scope: !2935)
!2942 = !DILocation(line: 668, column: 25, scope: !2935)
!2943 = !DILocation(line: 668, column: 30, scope: !2935)
!2944 = !DILocation(line: 670, column: 5, scope: !2935)
!2945 = !DILocation(line: 670, column: 26, scope: !2946)
!2946 = !DILexicalBlockFile(scope: !2935, file: !910, discriminator: 1)
!2947 = !DILocation(line: 670, column: 5, scope: !2946)
!2948 = !DILocation(line: 671, column: 45, scope: !2935)
!2949 = !DILocation(line: 671, column: 51, scope: !2935)
!2950 = !DILocation(line: 671, column: 56, scope: !2935)
!2951 = !DILocation(line: 671, column: 23, scope: !2935)
!2952 = !DILocation(line: 671, column: 18, scope: !2935)
!2953 = !DILocation(line: 671, column: 21, scope: !2935)
!2954 = !DILocation(line: 670, column: 5, scope: !2955)
!2955 = !DILexicalBlockFile(scope: !2935, file: !910, discriminator: 2)
!2956 = distinct !{!2956, !2944}
!2957 = !DILocation(line: 672, column: 1, scope: !2935)
!2958 = distinct !DISubprogram(name: "entropy_decode_stereo_3900", scope: !910, file: !910, line: 674, type: !2825, isLocal: true, isDefinition: true, scopeLine: 675, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!2959 = !DILocalVariable(name: "ctx", arg: 1, scope: !2958, file: !910, line: 674, type: !1750)
!2960 = !DILocation(line: 674, column: 52, scope: !2958)
!2961 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !2958, file: !910, line: 674, type: !918)
!2962 = !DILocation(line: 674, column: 61, scope: !2958)
!2963 = !DILocalVariable(name: "decoded0", scope: !2958, file: !910, line: 676, type: !947)
!2964 = !DILocation(line: 676, column: 14, scope: !2958)
!2965 = !DILocation(line: 676, column: 25, scope: !2958)
!2966 = !DILocation(line: 676, column: 30, scope: !2958)
!2967 = !DILocalVariable(name: "decoded1", scope: !2958, file: !910, line: 677, type: !947)
!2968 = !DILocation(line: 677, column: 14, scope: !2958)
!2969 = !DILocation(line: 677, column: 25, scope: !2958)
!2970 = !DILocation(line: 677, column: 30, scope: !2958)
!2971 = !DILocalVariable(name: "blocks", scope: !2958, file: !910, line: 678, type: !918)
!2972 = !DILocation(line: 678, column: 9, scope: !2958)
!2973 = !DILocation(line: 678, column: 18, scope: !2958)
!2974 = !DILocation(line: 680, column: 5, scope: !2958)
!2975 = !DILocation(line: 680, column: 26, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2958, file: !910, discriminator: 1)
!2977 = !DILocation(line: 680, column: 5, scope: !2976)
!2978 = !DILocation(line: 681, column: 45, scope: !2958)
!2979 = !DILocation(line: 681, column: 51, scope: !2958)
!2980 = !DILocation(line: 681, column: 56, scope: !2958)
!2981 = !DILocation(line: 681, column: 23, scope: !2958)
!2982 = !DILocation(line: 681, column: 18, scope: !2958)
!2983 = !DILocation(line: 681, column: 21, scope: !2958)
!2984 = !DILocation(line: 680, column: 5, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2958, file: !910, discriminator: 2)
!2986 = distinct !{!2986, !2974}
!2987 = !DILocation(line: 682, column: 25, scope: !2958)
!2988 = !DILocation(line: 682, column: 5, scope: !2958)
!2989 = !DILocation(line: 684, column: 5, scope: !2958)
!2990 = !DILocation(line: 684, column: 10, scope: !2958)
!2991 = !DILocation(line: 684, column: 14, scope: !2958)
!2992 = !DILocation(line: 685, column: 26, scope: !2958)
!2993 = !DILocation(line: 685, column: 5, scope: !2958)
!2994 = !DILocation(line: 686, column: 5, scope: !2958)
!2995 = !DILocation(line: 686, column: 18, scope: !2976)
!2996 = !DILocation(line: 686, column: 5, scope: !2976)
!2997 = !DILocation(line: 687, column: 45, scope: !2958)
!2998 = !DILocation(line: 687, column: 51, scope: !2958)
!2999 = !DILocation(line: 687, column: 56, scope: !2958)
!3000 = !DILocation(line: 687, column: 23, scope: !2958)
!3001 = !DILocation(line: 687, column: 18, scope: !2958)
!3002 = !DILocation(line: 687, column: 21, scope: !2958)
!3003 = !DILocation(line: 686, column: 5, scope: !2985)
!3004 = distinct !{!3004, !2994}
!3005 = !DILocation(line: 688, column: 1, scope: !2958)
!3006 = distinct !DISubprogram(name: "entropy_decode_stereo_3930", scope: !910, file: !910, line: 690, type: !2825, isLocal: true, isDefinition: true, scopeLine: 691, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3007 = !DILocalVariable(name: "ctx", arg: 1, scope: !3006, file: !910, line: 690, type: !1750)
!3008 = !DILocation(line: 690, column: 52, scope: !3006)
!3009 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !3006, file: !910, line: 690, type: !918)
!3010 = !DILocation(line: 690, column: 61, scope: !3006)
!3011 = !DILocalVariable(name: "decoded0", scope: !3006, file: !910, line: 692, type: !947)
!3012 = !DILocation(line: 692, column: 14, scope: !3006)
!3013 = !DILocation(line: 692, column: 25, scope: !3006)
!3014 = !DILocation(line: 692, column: 30, scope: !3006)
!3015 = !DILocalVariable(name: "decoded1", scope: !3006, file: !910, line: 693, type: !947)
!3016 = !DILocation(line: 693, column: 14, scope: !3006)
!3017 = !DILocation(line: 693, column: 25, scope: !3006)
!3018 = !DILocation(line: 693, column: 30, scope: !3006)
!3019 = !DILocation(line: 695, column: 5, scope: !3006)
!3020 = !DILocation(line: 695, column: 26, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !3006, file: !910, discriminator: 1)
!3022 = !DILocation(line: 695, column: 5, scope: !3021)
!3023 = !DILocation(line: 696, column: 45, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3006, file: !910, line: 695, column: 30)
!3025 = !DILocation(line: 696, column: 51, scope: !3024)
!3026 = !DILocation(line: 696, column: 56, scope: !3024)
!3027 = !DILocation(line: 696, column: 23, scope: !3024)
!3028 = !DILocation(line: 696, column: 18, scope: !3024)
!3029 = !DILocation(line: 696, column: 21, scope: !3024)
!3030 = !DILocation(line: 697, column: 45, scope: !3024)
!3031 = !DILocation(line: 697, column: 51, scope: !3024)
!3032 = !DILocation(line: 697, column: 56, scope: !3024)
!3033 = !DILocation(line: 697, column: 23, scope: !3024)
!3034 = !DILocation(line: 697, column: 18, scope: !3024)
!3035 = !DILocation(line: 697, column: 21, scope: !3024)
!3036 = !DILocation(line: 695, column: 5, scope: !3037)
!3037 = !DILexicalBlockFile(scope: !3006, file: !910, discriminator: 2)
!3038 = distinct !{!3038, !3019}
!3039 = !DILocation(line: 699, column: 1, scope: !3006)
!3040 = distinct !DISubprogram(name: "entropy_decode_mono_3990", scope: !910, file: !910, line: 701, type: !2825, isLocal: true, isDefinition: true, scopeLine: 702, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3041 = !DILocalVariable(name: "ctx", arg: 1, scope: !3040, file: !910, line: 701, type: !1750)
!3042 = !DILocation(line: 701, column: 50, scope: !3040)
!3043 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !3040, file: !910, line: 701, type: !918)
!3044 = !DILocation(line: 701, column: 59, scope: !3040)
!3045 = !DILocalVariable(name: "decoded0", scope: !3040, file: !910, line: 703, type: !947)
!3046 = !DILocation(line: 703, column: 14, scope: !3040)
!3047 = !DILocation(line: 703, column: 25, scope: !3040)
!3048 = !DILocation(line: 703, column: 30, scope: !3040)
!3049 = !DILocation(line: 705, column: 5, scope: !3040)
!3050 = !DILocation(line: 705, column: 26, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3040, file: !910, discriminator: 1)
!3052 = !DILocation(line: 705, column: 5, scope: !3051)
!3053 = !DILocation(line: 706, column: 45, scope: !3040)
!3054 = !DILocation(line: 706, column: 51, scope: !3040)
!3055 = !DILocation(line: 706, column: 56, scope: !3040)
!3056 = !DILocation(line: 706, column: 23, scope: !3040)
!3057 = !DILocation(line: 706, column: 18, scope: !3040)
!3058 = !DILocation(line: 706, column: 21, scope: !3040)
!3059 = !DILocation(line: 705, column: 5, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !3040, file: !910, discriminator: 2)
!3061 = distinct !{!3061, !3049}
!3062 = !DILocation(line: 707, column: 1, scope: !3040)
!3063 = distinct !DISubprogram(name: "entropy_decode_stereo_3990", scope: !910, file: !910, line: 709, type: !2825, isLocal: true, isDefinition: true, scopeLine: 710, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3064 = !DILocalVariable(name: "ctx", arg: 1, scope: !3063, file: !910, line: 709, type: !1750)
!3065 = !DILocation(line: 709, column: 52, scope: !3063)
!3066 = !DILocalVariable(name: "blockstodecode", arg: 2, scope: !3063, file: !910, line: 709, type: !918)
!3067 = !DILocation(line: 709, column: 61, scope: !3063)
!3068 = !DILocalVariable(name: "decoded0", scope: !3063, file: !910, line: 711, type: !947)
!3069 = !DILocation(line: 711, column: 14, scope: !3063)
!3070 = !DILocation(line: 711, column: 25, scope: !3063)
!3071 = !DILocation(line: 711, column: 30, scope: !3063)
!3072 = !DILocalVariable(name: "decoded1", scope: !3063, file: !910, line: 712, type: !947)
!3073 = !DILocation(line: 712, column: 14, scope: !3063)
!3074 = !DILocation(line: 712, column: 25, scope: !3063)
!3075 = !DILocation(line: 712, column: 30, scope: !3063)
!3076 = !DILocation(line: 714, column: 5, scope: !3063)
!3077 = !DILocation(line: 714, column: 26, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3063, file: !910, discriminator: 1)
!3079 = !DILocation(line: 714, column: 5, scope: !3078)
!3080 = !DILocation(line: 715, column: 45, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3063, file: !910, line: 714, column: 30)
!3082 = !DILocation(line: 715, column: 51, scope: !3081)
!3083 = !DILocation(line: 715, column: 56, scope: !3081)
!3084 = !DILocation(line: 715, column: 23, scope: !3081)
!3085 = !DILocation(line: 715, column: 18, scope: !3081)
!3086 = !DILocation(line: 715, column: 21, scope: !3081)
!3087 = !DILocation(line: 716, column: 45, scope: !3081)
!3088 = !DILocation(line: 716, column: 51, scope: !3081)
!3089 = !DILocation(line: 716, column: 56, scope: !3081)
!3090 = !DILocation(line: 716, column: 23, scope: !3081)
!3091 = !DILocation(line: 716, column: 18, scope: !3081)
!3092 = !DILocation(line: 716, column: 21, scope: !3081)
!3093 = !DILocation(line: 714, column: 5, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3063, file: !910, discriminator: 2)
!3095 = distinct !{!3095, !3076}
!3096 = !DILocation(line: 718, column: 1, scope: !3063)
!3097 = distinct !DISubprogram(name: "predictor_decode_mono_3800", scope: !910, file: !910, line: 990, type: !2825, isLocal: true, isDefinition: true, scopeLine: 991, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3098 = !DILocalVariable(name: "p", arg: 1, scope: !3099, file: !910, line: 844, type: !3102)
!3099 = distinct !DISubprogram(name: "filter_3800", scope: !910, file: !910, line: 844, type: !3100, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!918, !3102, !976, !976, !976, !976, !976, !976}
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64, align: 64)
!3103 = !DILocation(line: 844, column: 76, scope: !3099, inlinedAt: !3104)
!3104 = distinct !DILocation(line: 1017, column: 25, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !910, line: 1016, column: 16)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !910, line: 1013, column: 13)
!3107 = distinct !DILexicalBlock(scope: !3097, file: !910, line: 1012, column: 21)
!3108 = !DILocalVariable(name: "decoded", arg: 2, scope: !3099, file: !910, line: 845, type: !976)
!3109 = !DILocation(line: 845, column: 51, scope: !3099, inlinedAt: !3104)
!3110 = !DILocalVariable(name: "filter", arg: 3, scope: !3099, file: !910, line: 845, type: !976)
!3111 = !DILocation(line: 845, column: 70, scope: !3099, inlinedAt: !3104)
!3112 = !DILocalVariable(name: "delayA", arg: 4, scope: !3099, file: !910, line: 846, type: !976)
!3113 = !DILocation(line: 846, column: 51, scope: !3099, inlinedAt: !3104)
!3114 = !DILocalVariable(name: "delayB", arg: 5, scope: !3099, file: !910, line: 846, type: !976)
!3115 = !DILocation(line: 846, column: 69, scope: !3099, inlinedAt: !3104)
!3116 = !DILocalVariable(name: "start", arg: 6, scope: !3099, file: !910, line: 847, type: !976)
!3117 = !DILocation(line: 847, column: 51, scope: !3099, inlinedAt: !3104)
!3118 = !DILocalVariable(name: "shift", arg: 7, scope: !3099, file: !910, line: 847, type: !976)
!3119 = !DILocation(line: 847, column: 68, scope: !3099, inlinedAt: !3104)
!3120 = !DILocalVariable(name: "predictionA", scope: !3099, file: !910, line: 849, type: !948)
!3121 = !DILocation(line: 849, column: 13, scope: !3099, inlinedAt: !3104)
!3122 = !DILocalVariable(name: "predictionB", scope: !3099, file: !910, line: 849, type: !948)
!3123 = !DILocation(line: 849, column: 26, scope: !3099, inlinedAt: !3104)
!3124 = !DILocalVariable(name: "sign", scope: !3099, file: !910, line: 849, type: !948)
!3125 = !DILocation(line: 849, column: 39, scope: !3099, inlinedAt: !3104)
!3126 = !DILocalVariable(name: "d0", scope: !3099, file: !910, line: 850, type: !948)
!3127 = !DILocation(line: 850, column: 13, scope: !3099, inlinedAt: !3104)
!3128 = !DILocalVariable(name: "d1", scope: !3099, file: !910, line: 850, type: !948)
!3129 = !DILocation(line: 850, column: 17, scope: !3099, inlinedAt: !3104)
!3130 = !DILocalVariable(name: "d2", scope: !3099, file: !910, line: 850, type: !948)
!3131 = !DILocation(line: 850, column: 21, scope: !3099, inlinedAt: !3104)
!3132 = !DILocalVariable(name: "d3", scope: !3099, file: !910, line: 850, type: !948)
!3133 = !DILocation(line: 850, column: 25, scope: !3099, inlinedAt: !3104)
!3134 = !DILocalVariable(name: "d4", scope: !3099, file: !910, line: 850, type: !948)
!3135 = !DILocation(line: 850, column: 29, scope: !3099, inlinedAt: !3104)
!3136 = !DILocalVariable(name: "p", arg: 1, scope: !3137, file: !910, line: 818, type: !3102)
!3137 = distinct !DISubprogram(name: "filter_fast_3320", scope: !910, file: !910, line: 818, type: !3138, isLocal: true, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!918, !3102, !976, !976, !976}
!3140 = !DILocation(line: 818, column: 81, scope: !3137, inlinedAt: !3141)
!3141 = distinct !DILocation(line: 1014, column: 25, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3106, file: !910, line: 1013, column: 63)
!3143 = !DILocalVariable(name: "decoded", arg: 2, scope: !3137, file: !910, line: 819, type: !976)
!3144 = !DILocation(line: 819, column: 56, scope: !3137, inlinedAt: !3141)
!3145 = !DILocalVariable(name: "filter", arg: 3, scope: !3137, file: !910, line: 819, type: !976)
!3146 = !DILocation(line: 819, column: 75, scope: !3137, inlinedAt: !3141)
!3147 = !DILocalVariable(name: "delayA", arg: 4, scope: !3137, file: !910, line: 820, type: !976)
!3148 = !DILocation(line: 820, column: 56, scope: !3137, inlinedAt: !3141)
!3149 = !DILocalVariable(name: "predictionA", scope: !3137, file: !910, line: 822, type: !948)
!3150 = !DILocation(line: 822, column: 13, scope: !3137, inlinedAt: !3141)
!3151 = !DILocalVariable(name: "ctx", arg: 1, scope: !3097, file: !910, line: 990, type: !1750)
!3152 = !DILocation(line: 990, column: 52, scope: !3097)
!3153 = !DILocalVariable(name: "count", arg: 2, scope: !3097, file: !910, line: 990, type: !918)
!3154 = !DILocation(line: 990, column: 61, scope: !3097)
!3155 = !DILocalVariable(name: "p", scope: !3097, file: !910, line: 992, type: !3102)
!3156 = !DILocation(line: 992, column: 19, scope: !3097)
!3157 = !DILocation(line: 992, column: 24, scope: !3097)
!3158 = !DILocation(line: 992, column: 29, scope: !3097)
!3159 = !DILocalVariable(name: "decoded0", scope: !3097, file: !910, line: 993, type: !947)
!3160 = !DILocation(line: 993, column: 14, scope: !3097)
!3161 = !DILocation(line: 993, column: 25, scope: !3097)
!3162 = !DILocation(line: 993, column: 30, scope: !3097)
!3163 = !DILocalVariable(name: "start", scope: !3097, file: !910, line: 994, type: !918)
!3164 = !DILocation(line: 994, column: 9, scope: !3097)
!3165 = !DILocalVariable(name: "shift", scope: !3097, file: !910, line: 994, type: !918)
!3166 = !DILocation(line: 994, column: 20, scope: !3097)
!3167 = !DILocation(line: 996, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3097, file: !910, line: 996, column: 9)
!3169 = !DILocation(line: 996, column: 14, scope: !3168)
!3170 = !DILocation(line: 996, column: 32, scope: !3168)
!3171 = !DILocation(line: 996, column: 9, scope: !3097)
!3172 = !DILocation(line: 997, column: 15, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3168, file: !910, line: 996, column: 59)
!3174 = !DILocation(line: 998, column: 31, scope: !3173)
!3175 = !DILocation(line: 998, column: 48, scope: !3173)
!3176 = !DILocation(line: 998, column: 9, scope: !3173)
!3177 = !DILocation(line: 999, column: 5, scope: !3173)
!3178 = !DILocation(line: 999, column: 16, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3180, file: !910, discriminator: 1)
!3180 = distinct !DILexicalBlock(scope: !3168, file: !910, line: 999, column: 16)
!3181 = !DILocation(line: 999, column: 21, scope: !3179)
!3182 = !DILocation(line: 999, column: 39, scope: !3179)
!3183 = !DILocalVariable(name: "order", scope: !3184, file: !910, line: 1000, type: !918)
!3184 = distinct !DILexicalBlock(scope: !3180, file: !910, line: 999, column: 72)
!3185 = !DILocation(line: 1000, column: 13, scope: !3184)
!3186 = !DILocalVariable(name: "shift2", scope: !3184, file: !910, line: 1000, type: !918)
!3187 = !DILocation(line: 1000, column: 26, scope: !3184)
!3188 = !DILocation(line: 1002, column: 13, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !910, line: 1002, column: 13)
!3190 = !DILocation(line: 1002, column: 18, scope: !3189)
!3191 = !DILocation(line: 1002, column: 30, scope: !3189)
!3192 = !DILocation(line: 1002, column: 13, scope: !3184)
!3193 = !DILocation(line: 1003, column: 19, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3189, file: !910, line: 1002, column: 39)
!3195 = !DILocation(line: 1004, column: 18, scope: !3194)
!3196 = !DILocation(line: 1005, column: 19, scope: !3194)
!3197 = !DILocation(line: 1006, column: 36, scope: !3194)
!3198 = !DILocation(line: 1006, column: 47, scope: !3194)
!3199 = !DILocation(line: 1006, column: 45, scope: !3194)
!3200 = !DILocation(line: 1006, column: 54, scope: !3194)
!3201 = !DILocation(line: 1006, column: 62, scope: !3194)
!3202 = !DILocation(line: 1006, column: 60, scope: !3194)
!3203 = !DILocation(line: 1006, column: 13, scope: !3194)
!3204 = !DILocation(line: 1007, column: 9, scope: !3194)
!3205 = !DILocation(line: 1008, column: 17, scope: !3184)
!3206 = !DILocation(line: 1008, column: 15, scope: !3184)
!3207 = !DILocation(line: 1009, column: 31, scope: !3184)
!3208 = !DILocation(line: 1009, column: 41, scope: !3184)
!3209 = !DILocation(line: 1009, column: 48, scope: !3184)
!3210 = !DILocation(line: 1009, column: 56, scope: !3184)
!3211 = !DILocation(line: 1009, column: 9, scope: !3184)
!3212 = !DILocation(line: 1010, column: 5, scope: !3184)
!3213 = !DILocation(line: 1012, column: 5, scope: !3097)
!3214 = !DILocation(line: 1012, column: 17, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3097, file: !910, discriminator: 1)
!3216 = !DILocation(line: 1012, column: 5, scope: !3215)
!3217 = !DILocation(line: 1013, column: 13, scope: !3106)
!3218 = !DILocation(line: 1013, column: 18, scope: !3106)
!3219 = !DILocation(line: 1013, column: 36, scope: !3106)
!3220 = !DILocation(line: 1013, column: 13, scope: !3107)
!3221 = !DILocation(line: 1014, column: 42, scope: !3142)
!3222 = !DILocation(line: 1014, column: 46, scope: !3142)
!3223 = !DILocation(line: 1014, column: 45, scope: !3142)
!3224 = !DILocation(line: 1014, column: 25, scope: !3142)
!3225 = !DILocation(line: 824, column: 31, scope: !3137, inlinedAt: !3141)
!3226 = !DILocation(line: 824, column: 22, scope: !3137, inlinedAt: !3141)
!3227 = !DILocation(line: 824, column: 25, scope: !3137, inlinedAt: !3141)
!3228 = !DILocation(line: 824, column: 12, scope: !3137, inlinedAt: !3141)
!3229 = !DILocation(line: 824, column: 5, scope: !3137, inlinedAt: !3141)
!3230 = !DILocation(line: 824, column: 8, scope: !3137, inlinedAt: !3141)
!3231 = !DILocation(line: 824, column: 20, scope: !3137, inlinedAt: !3141)
!3232 = !DILocation(line: 825, column: 9, scope: !3233, inlinedAt: !3141)
!3233 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 825, column: 9)
!3234 = !DILocation(line: 825, column: 12, scope: !3233, inlinedAt: !3141)
!3235 = !DILocation(line: 825, column: 23, scope: !3233, inlinedAt: !3141)
!3236 = !DILocation(line: 825, column: 9, scope: !3137, inlinedAt: !3141)
!3237 = !DILocation(line: 826, column: 28, scope: !3238, inlinedAt: !3141)
!3238 = distinct !DILexicalBlock(scope: !3233, file: !910, line: 825, column: 28)
!3239 = !DILocation(line: 826, column: 18, scope: !3238, inlinedAt: !3141)
!3240 = !DILocation(line: 826, column: 9, scope: !3238, inlinedAt: !3141)
!3241 = !DILocation(line: 826, column: 12, scope: !3238, inlinedAt: !3141)
!3242 = !DILocation(line: 826, column: 26, scope: !3238, inlinedAt: !3141)
!3243 = !DILocation(line: 827, column: 30, scope: !3238, inlinedAt: !3141)
!3244 = !DILocation(line: 827, column: 20, scope: !3238, inlinedAt: !3141)
!3245 = !DILocation(line: 827, column: 9, scope: !3238, inlinedAt: !3141)
!3246 = !DILocation(line: 827, column: 12, scope: !3238, inlinedAt: !3141)
!3247 = !DILocation(line: 827, column: 28, scope: !3238, inlinedAt: !3141)
!3248 = !DILocation(line: 828, column: 16, scope: !3238, inlinedAt: !3141)
!3249 = !DILocation(line: 828, column: 9, scope: !3238, inlinedAt: !3141)
!3250 = !DILocation(line: 831, column: 26, scope: !3137, inlinedAt: !3141)
!3251 = !DILocation(line: 831, column: 19, scope: !3137, inlinedAt: !3141)
!3252 = !DILocation(line: 831, column: 22, scope: !3137, inlinedAt: !3141)
!3253 = !DILocation(line: 831, column: 34, scope: !3137, inlinedAt: !3141)
!3254 = !DILocation(line: 831, column: 47, scope: !3137, inlinedAt: !3141)
!3255 = !DILocation(line: 831, column: 54, scope: !3137, inlinedAt: !3141)
!3256 = !DILocation(line: 831, column: 40, scope: !3137, inlinedAt: !3141)
!3257 = !DILocation(line: 831, column: 43, scope: !3137, inlinedAt: !3141)
!3258 = !DILocation(line: 831, column: 38, scope: !3137, inlinedAt: !3141)
!3259 = !DILocation(line: 831, column: 17, scope: !3137, inlinedAt: !3141)
!3260 = !DILocation(line: 832, column: 24, scope: !3137, inlinedAt: !3141)
!3261 = !DILocation(line: 832, column: 35, scope: !3137, inlinedAt: !3141)
!3262 = !DILocation(line: 832, column: 60, scope: !3137, inlinedAt: !3141)
!3263 = !DILocation(line: 832, column: 49, scope: !3137, inlinedAt: !3141)
!3264 = !DILocation(line: 832, column: 52, scope: !3137, inlinedAt: !3141)
!3265 = !DILocation(line: 832, column: 47, scope: !3137, inlinedAt: !3141)
!3266 = !DILocation(line: 832, column: 71, scope: !3137, inlinedAt: !3141)
!3267 = !DILocation(line: 832, column: 32, scope: !3137, inlinedAt: !3141)
!3268 = !DILocation(line: 832, column: 14, scope: !3137, inlinedAt: !3141)
!3269 = !DILocation(line: 832, column: 5, scope: !3137, inlinedAt: !3141)
!3270 = !DILocation(line: 832, column: 8, scope: !3137, inlinedAt: !3141)
!3271 = !DILocation(line: 832, column: 22, scope: !3137, inlinedAt: !3141)
!3272 = !DILocation(line: 834, column: 10, scope: !3273, inlinedAt: !3141)
!3273 = distinct !DILexicalBlock(scope: !3137, file: !910, line: 834, column: 9)
!3274 = !DILocation(line: 834, column: 20, scope: !3273, inlinedAt: !3141)
!3275 = !DILocation(line: 834, column: 18, scope: !3273, inlinedAt: !3141)
!3276 = !DILocation(line: 834, column: 33, scope: !3273, inlinedAt: !3141)
!3277 = !DILocation(line: 834, column: 9, scope: !3137, inlinedAt: !3141)
!3278 = !DILocation(line: 835, column: 20, scope: !3273, inlinedAt: !3141)
!3279 = !DILocation(line: 835, column: 9, scope: !3273, inlinedAt: !3141)
!3280 = !DILocation(line: 835, column: 12, scope: !3273, inlinedAt: !3141)
!3281 = !DILocation(line: 835, column: 30, scope: !3273, inlinedAt: !3141)
!3282 = !DILocation(line: 837, column: 20, scope: !3273, inlinedAt: !3141)
!3283 = !DILocation(line: 837, column: 9, scope: !3273, inlinedAt: !3141)
!3284 = !DILocation(line: 837, column: 12, scope: !3273, inlinedAt: !3141)
!3285 = !DILocation(line: 837, column: 30, scope: !3273, inlinedAt: !3141)
!3286 = !DILocation(line: 839, column: 36, scope: !3137, inlinedAt: !3141)
!3287 = !DILocation(line: 839, column: 27, scope: !3137, inlinedAt: !3141)
!3288 = !DILocation(line: 839, column: 30, scope: !3137, inlinedAt: !3141)
!3289 = !DILocation(line: 839, column: 16, scope: !3137, inlinedAt: !3141)
!3290 = !DILocation(line: 839, column: 5, scope: !3137, inlinedAt: !3141)
!3291 = !DILocation(line: 839, column: 8, scope: !3137, inlinedAt: !3141)
!3292 = !DILocation(line: 839, column: 24, scope: !3137, inlinedAt: !3141)
!3293 = !DILocation(line: 841, column: 23, scope: !3137, inlinedAt: !3141)
!3294 = !DILocation(line: 841, column: 12, scope: !3137, inlinedAt: !3141)
!3295 = !DILocation(line: 841, column: 15, scope: !3137, inlinedAt: !3141)
!3296 = !DILocation(line: 841, column: 5, scope: !3137, inlinedAt: !3141)
!3297 = !DILocation(line: 842, column: 1, scope: !3137, inlinedAt: !3141)
!3298 = !DILocation(line: 1014, column: 14, scope: !3142)
!3299 = !DILocation(line: 1014, column: 23, scope: !3142)
!3300 = !DILocation(line: 1015, column: 21, scope: !3142)
!3301 = !DILocation(line: 1016, column: 9, scope: !3142)
!3302 = !DILocation(line: 1017, column: 37, scope: !3105)
!3303 = !DILocation(line: 1017, column: 41, scope: !3105)
!3304 = !DILocation(line: 1017, column: 40, scope: !3105)
!3305 = !DILocation(line: 1018, column: 37, scope: !3105)
!3306 = !DILocation(line: 1018, column: 44, scope: !3105)
!3307 = !DILocation(line: 1017, column: 25, scope: !3105)
!3308 = !DILocation(line: 852, column: 31, scope: !3099, inlinedAt: !3104)
!3309 = !DILocation(line: 852, column: 22, scope: !3099, inlinedAt: !3104)
!3310 = !DILocation(line: 852, column: 25, scope: !3099, inlinedAt: !3104)
!3311 = !DILocation(line: 852, column: 12, scope: !3099, inlinedAt: !3104)
!3312 = !DILocation(line: 852, column: 5, scope: !3099, inlinedAt: !3104)
!3313 = !DILocation(line: 852, column: 8, scope: !3099, inlinedAt: !3104)
!3314 = !DILocation(line: 852, column: 20, scope: !3099, inlinedAt: !3104)
!3315 = !DILocation(line: 853, column: 33, scope: !3099, inlinedAt: !3104)
!3316 = !DILocation(line: 853, column: 22, scope: !3099, inlinedAt: !3104)
!3317 = !DILocation(line: 853, column: 25, scope: !3099, inlinedAt: !3104)
!3318 = !DILocation(line: 853, column: 12, scope: !3099, inlinedAt: !3104)
!3319 = !DILocation(line: 853, column: 5, scope: !3099, inlinedAt: !3104)
!3320 = !DILocation(line: 853, column: 8, scope: !3099, inlinedAt: !3104)
!3321 = !DILocation(line: 853, column: 20, scope: !3099, inlinedAt: !3104)
!3322 = !DILocation(line: 854, column: 9, scope: !3323, inlinedAt: !3104)
!3323 = distinct !DILexicalBlock(scope: !3099, file: !910, line: 854, column: 9)
!3324 = !DILocation(line: 854, column: 12, scope: !3323, inlinedAt: !3104)
!3325 = !DILocation(line: 854, column: 25, scope: !3323, inlinedAt: !3104)
!3326 = !DILocation(line: 854, column: 23, scope: !3323, inlinedAt: !3104)
!3327 = !DILocation(line: 854, column: 9, scope: !3099, inlinedAt: !3104)
!3328 = !DILocation(line: 855, column: 23, scope: !3329, inlinedAt: !3104)
!3329 = distinct !DILexicalBlock(scope: !3323, file: !910, line: 854, column: 32)
!3330 = !DILocation(line: 855, column: 44, scope: !3329, inlinedAt: !3104)
!3331 = !DILocation(line: 855, column: 33, scope: !3329, inlinedAt: !3104)
!3332 = !DILocation(line: 855, column: 36, scope: !3329, inlinedAt: !3104)
!3333 = !DILocation(line: 855, column: 31, scope: !3329, inlinedAt: !3104)
!3334 = !DILocation(line: 855, column: 21, scope: !3329, inlinedAt: !3104)
!3335 = !DILocation(line: 856, column: 28, scope: !3329, inlinedAt: !3104)
!3336 = !DILocation(line: 856, column: 18, scope: !3329, inlinedAt: !3104)
!3337 = !DILocation(line: 856, column: 9, scope: !3329, inlinedAt: !3104)
!3338 = !DILocation(line: 856, column: 12, scope: !3329, inlinedAt: !3104)
!3339 = !DILocation(line: 856, column: 26, scope: !3329, inlinedAt: !3104)
!3340 = !DILocation(line: 857, column: 30, scope: !3329, inlinedAt: !3104)
!3341 = !DILocation(line: 857, column: 20, scope: !3329, inlinedAt: !3104)
!3342 = !DILocation(line: 857, column: 9, scope: !3329, inlinedAt: !3104)
!3343 = !DILocation(line: 857, column: 12, scope: !3329, inlinedAt: !3104)
!3344 = !DILocation(line: 857, column: 28, scope: !3329, inlinedAt: !3104)
!3345 = !DILocation(line: 858, column: 30, scope: !3329, inlinedAt: !3104)
!3346 = !DILocation(line: 858, column: 20, scope: !3329, inlinedAt: !3104)
!3347 = !DILocation(line: 858, column: 9, scope: !3329, inlinedAt: !3104)
!3348 = !DILocation(line: 858, column: 12, scope: !3329, inlinedAt: !3104)
!3349 = !DILocation(line: 858, column: 28, scope: !3329, inlinedAt: !3104)
!3350 = !DILocation(line: 859, column: 16, scope: !3329, inlinedAt: !3104)
!3351 = !DILocation(line: 859, column: 9, scope: !3329, inlinedAt: !3104)
!3352 = !DILocation(line: 861, column: 17, scope: !3099, inlinedAt: !3104)
!3353 = !DILocation(line: 861, column: 10, scope: !3099, inlinedAt: !3104)
!3354 = !DILocation(line: 861, column: 13, scope: !3099, inlinedAt: !3104)
!3355 = !DILocation(line: 861, column: 8, scope: !3099, inlinedAt: !3104)
!3356 = !DILocation(line: 862, column: 18, scope: !3099, inlinedAt: !3104)
!3357 = !DILocation(line: 862, column: 11, scope: !3099, inlinedAt: !3104)
!3358 = !DILocation(line: 862, column: 14, scope: !3099, inlinedAt: !3104)
!3359 = !DILocation(line: 862, column: 35, scope: !3099, inlinedAt: !3104)
!3360 = !DILocation(line: 862, column: 42, scope: !3099, inlinedAt: !3104)
!3361 = !DILocation(line: 862, column: 28, scope: !3099, inlinedAt: !3104)
!3362 = !DILocation(line: 862, column: 31, scope: !3099, inlinedAt: !3104)
!3363 = !DILocation(line: 862, column: 26, scope: !3099, inlinedAt: !3104)
!3364 = !DILocation(line: 862, column: 48, scope: !3099, inlinedAt: !3104)
!3365 = !DILocation(line: 862, column: 8, scope: !3099, inlinedAt: !3104)
!3366 = !DILocation(line: 863, column: 17, scope: !3099, inlinedAt: !3104)
!3367 = !DILocation(line: 863, column: 10, scope: !3099, inlinedAt: !3104)
!3368 = !DILocation(line: 863, column: 13, scope: !3099, inlinedAt: !3104)
!3369 = !DILocation(line: 863, column: 36, scope: !3099, inlinedAt: !3104)
!3370 = !DILocation(line: 863, column: 43, scope: !3099, inlinedAt: !3104)
!3371 = !DILocation(line: 863, column: 29, scope: !3099, inlinedAt: !3104)
!3372 = !DILocation(line: 863, column: 32, scope: !3099, inlinedAt: !3104)
!3373 = !DILocation(line: 863, column: 57, scope: !3099, inlinedAt: !3104)
!3374 = !DILocation(line: 863, column: 64, scope: !3099, inlinedAt: !3104)
!3375 = !DILocation(line: 863, column: 50, scope: !3099, inlinedAt: !3104)
!3376 = !DILocation(line: 863, column: 53, scope: !3099, inlinedAt: !3104)
!3377 = !DILocation(line: 863, column: 48, scope: !3099, inlinedAt: !3104)
!3378 = !DILocation(line: 863, column: 70, scope: !3099, inlinedAt: !3104)
!3379 = !DILocation(line: 863, column: 25, scope: !3099, inlinedAt: !3104)
!3380 = !DILocation(line: 863, column: 8, scope: !3099, inlinedAt: !3104)
!3381 = !DILocation(line: 864, column: 17, scope: !3099, inlinedAt: !3104)
!3382 = !DILocation(line: 864, column: 10, scope: !3099, inlinedAt: !3104)
!3383 = !DILocation(line: 864, column: 13, scope: !3099, inlinedAt: !3104)
!3384 = !DILocation(line: 864, column: 25, scope: !3099, inlinedAt: !3104)
!3385 = !DILocation(line: 864, column: 38, scope: !3099, inlinedAt: !3104)
!3386 = !DILocation(line: 864, column: 45, scope: !3099, inlinedAt: !3104)
!3387 = !DILocation(line: 864, column: 31, scope: !3099, inlinedAt: !3104)
!3388 = !DILocation(line: 864, column: 34, scope: !3099, inlinedAt: !3104)
!3389 = !DILocation(line: 864, column: 29, scope: !3099, inlinedAt: !3104)
!3390 = !DILocation(line: 864, column: 8, scope: !3099, inlinedAt: !3104)
!3391 = !DILocation(line: 865, column: 17, scope: !3099, inlinedAt: !3104)
!3392 = !DILocation(line: 865, column: 10, scope: !3099, inlinedAt: !3104)
!3393 = !DILocation(line: 865, column: 13, scope: !3099, inlinedAt: !3104)
!3394 = !DILocation(line: 865, column: 8, scope: !3099, inlinedAt: !3104)
!3395 = !DILocation(line: 867, column: 19, scope: !3099, inlinedAt: !3104)
!3396 = !DILocation(line: 867, column: 35, scope: !3099, inlinedAt: !3104)
!3397 = !DILocation(line: 867, column: 24, scope: !3099, inlinedAt: !3104)
!3398 = !DILocation(line: 867, column: 27, scope: !3099, inlinedAt: !3104)
!3399 = !DILocation(line: 867, column: 22, scope: !3099, inlinedAt: !3104)
!3400 = !DILocation(line: 868, column: 19, scope: !3099, inlinedAt: !3104)
!3401 = !DILocation(line: 868, column: 35, scope: !3099, inlinedAt: !3104)
!3402 = !DILocation(line: 868, column: 24, scope: !3099, inlinedAt: !3104)
!3403 = !DILocation(line: 868, column: 27, scope: !3099, inlinedAt: !3104)
!3404 = !DILocation(line: 868, column: 22, scope: !3099, inlinedAt: !3104)
!3405 = !DILocation(line: 867, column: 46, scope: !3099, inlinedAt: !3104)
!3406 = !DILocation(line: 869, column: 19, scope: !3099, inlinedAt: !3104)
!3407 = !DILocation(line: 869, column: 35, scope: !3099, inlinedAt: !3104)
!3408 = !DILocation(line: 869, column: 24, scope: !3099, inlinedAt: !3104)
!3409 = !DILocation(line: 869, column: 27, scope: !3099, inlinedAt: !3104)
!3410 = !DILocation(line: 869, column: 22, scope: !3099, inlinedAt: !3104)
!3411 = !DILocation(line: 868, column: 46, scope: !3099, inlinedAt: !3104)
!3412 = !DILocation(line: 867, column: 17, scope: !3099, inlinedAt: !3104)
!3413 = !DILocation(line: 871, column: 20, scope: !3099, inlinedAt: !3104)
!3414 = !DILocation(line: 871, column: 12, scope: !3099, inlinedAt: !3104)
!3415 = !DILocation(line: 871, column: 10, scope: !3099, inlinedAt: !3104)
!3416 = !DILocation(line: 872, column: 33, scope: !3099, inlinedAt: !3104)
!3417 = !DILocation(line: 872, column: 36, scope: !3099, inlinedAt: !3104)
!3418 = !DILocation(line: 872, column: 43, scope: !3099, inlinedAt: !3104)
!3419 = !DILocation(line: 872, column: 48, scope: !3099, inlinedAt: !3104)
!3420 = !DILocation(line: 872, column: 55, scope: !3099, inlinedAt: !3104)
!3421 = !DILocation(line: 872, column: 53, scope: !3099, inlinedAt: !3104)
!3422 = !DILocation(line: 872, column: 16, scope: !3099, inlinedAt: !3104)
!3423 = !DILocation(line: 872, column: 5, scope: !3099, inlinedAt: !3104)
!3424 = !DILocation(line: 872, column: 8, scope: !3099, inlinedAt: !3104)
!3425 = !DILocation(line: 872, column: 27, scope: !3099, inlinedAt: !3104)
!3426 = !DILocation(line: 873, column: 33, scope: !3099, inlinedAt: !3104)
!3427 = !DILocation(line: 873, column: 36, scope: !3099, inlinedAt: !3104)
!3428 = !DILocation(line: 873, column: 43, scope: !3099, inlinedAt: !3104)
!3429 = !DILocation(line: 873, column: 48, scope: !3099, inlinedAt: !3104)
!3430 = !DILocation(line: 873, column: 55, scope: !3099, inlinedAt: !3104)
!3431 = !DILocation(line: 873, column: 53, scope: !3099, inlinedAt: !3104)
!3432 = !DILocation(line: 873, column: 16, scope: !3099, inlinedAt: !3104)
!3433 = !DILocation(line: 873, column: 5, scope: !3099, inlinedAt: !3104)
!3434 = !DILocation(line: 873, column: 8, scope: !3099, inlinedAt: !3104)
!3435 = !DILocation(line: 873, column: 27, scope: !3099, inlinedAt: !3104)
!3436 = !DILocation(line: 874, column: 33, scope: !3099, inlinedAt: !3104)
!3437 = !DILocation(line: 874, column: 36, scope: !3099, inlinedAt: !3104)
!3438 = !DILocation(line: 874, column: 43, scope: !3099, inlinedAt: !3104)
!3439 = !DILocation(line: 874, column: 48, scope: !3099, inlinedAt: !3104)
!3440 = !DILocation(line: 874, column: 55, scope: !3099, inlinedAt: !3104)
!3441 = !DILocation(line: 874, column: 53, scope: !3099, inlinedAt: !3104)
!3442 = !DILocation(line: 874, column: 16, scope: !3099, inlinedAt: !3104)
!3443 = !DILocation(line: 874, column: 5, scope: !3099, inlinedAt: !3104)
!3444 = !DILocation(line: 874, column: 8, scope: !3099, inlinedAt: !3104)
!3445 = !DILocation(line: 874, column: 27, scope: !3099, inlinedAt: !3104)
!3446 = !DILocation(line: 876, column: 19, scope: !3099, inlinedAt: !3104)
!3447 = !DILocation(line: 876, column: 35, scope: !3099, inlinedAt: !3104)
!3448 = !DILocation(line: 876, column: 24, scope: !3099, inlinedAt: !3104)
!3449 = !DILocation(line: 876, column: 27, scope: !3099, inlinedAt: !3104)
!3450 = !DILocation(line: 876, column: 22, scope: !3099, inlinedAt: !3104)
!3451 = !DILocation(line: 877, column: 19, scope: !3099, inlinedAt: !3104)
!3452 = !DILocation(line: 877, column: 35, scope: !3099, inlinedAt: !3104)
!3453 = !DILocation(line: 877, column: 24, scope: !3099, inlinedAt: !3104)
!3454 = !DILocation(line: 877, column: 27, scope: !3099, inlinedAt: !3104)
!3455 = !DILocation(line: 877, column: 22, scope: !3099, inlinedAt: !3104)
!3456 = !DILocation(line: 876, column: 46, scope: !3099, inlinedAt: !3104)
!3457 = !DILocation(line: 876, column: 17, scope: !3099, inlinedAt: !3104)
!3458 = !DILocation(line: 878, column: 24, scope: !3099, inlinedAt: !3104)
!3459 = !DILocation(line: 878, column: 35, scope: !3099, inlinedAt: !3104)
!3460 = !DILocation(line: 878, column: 47, scope: !3099, inlinedAt: !3104)
!3461 = !DILocation(line: 878, column: 32, scope: !3099, inlinedAt: !3104)
!3462 = !DILocation(line: 878, column: 14, scope: !3099, inlinedAt: !3104)
!3463 = !DILocation(line: 878, column: 5, scope: !3099, inlinedAt: !3104)
!3464 = !DILocation(line: 878, column: 8, scope: !3099, inlinedAt: !3104)
!3465 = !DILocation(line: 878, column: 22, scope: !3099, inlinedAt: !3104)
!3466 = !DILocation(line: 879, column: 29, scope: !3099, inlinedAt: !3104)
!3467 = !DILocation(line: 879, column: 20, scope: !3099, inlinedAt: !3104)
!3468 = !DILocation(line: 879, column: 23, scope: !3099, inlinedAt: !3104)
!3469 = !DILocation(line: 879, column: 12, scope: !3099, inlinedAt: !3104)
!3470 = !DILocation(line: 879, column: 10, scope: !3099, inlinedAt: !3104)
!3471 = !DILocation(line: 880, column: 33, scope: !3099, inlinedAt: !3104)
!3472 = !DILocation(line: 880, column: 36, scope: !3099, inlinedAt: !3104)
!3473 = !DILocation(line: 880, column: 43, scope: !3099, inlinedAt: !3104)
!3474 = !DILocation(line: 880, column: 48, scope: !3099, inlinedAt: !3104)
!3475 = !DILocation(line: 880, column: 55, scope: !3099, inlinedAt: !3104)
!3476 = !DILocation(line: 880, column: 53, scope: !3099, inlinedAt: !3104)
!3477 = !DILocation(line: 880, column: 16, scope: !3099, inlinedAt: !3104)
!3478 = !DILocation(line: 880, column: 5, scope: !3099, inlinedAt: !3104)
!3479 = !DILocation(line: 880, column: 8, scope: !3099, inlinedAt: !3104)
!3480 = !DILocation(line: 880, column: 27, scope: !3099, inlinedAt: !3104)
!3481 = !DILocation(line: 881, column: 33, scope: !3099, inlinedAt: !3104)
!3482 = !DILocation(line: 881, column: 36, scope: !3099, inlinedAt: !3104)
!3483 = !DILocation(line: 881, column: 43, scope: !3099, inlinedAt: !3104)
!3484 = !DILocation(line: 881, column: 48, scope: !3099, inlinedAt: !3104)
!3485 = !DILocation(line: 881, column: 55, scope: !3099, inlinedAt: !3104)
!3486 = !DILocation(line: 881, column: 53, scope: !3099, inlinedAt: !3104)
!3487 = !DILocation(line: 881, column: 16, scope: !3099, inlinedAt: !3104)
!3488 = !DILocation(line: 881, column: 5, scope: !3099, inlinedAt: !3104)
!3489 = !DILocation(line: 881, column: 8, scope: !3099, inlinedAt: !3104)
!3490 = !DILocation(line: 881, column: 27, scope: !3099, inlinedAt: !3104)
!3491 = !DILocation(line: 883, column: 35, scope: !3099, inlinedAt: !3104)
!3492 = !DILocation(line: 883, column: 26, scope: !3099, inlinedAt: !3104)
!3493 = !DILocation(line: 883, column: 29, scope: !3099, inlinedAt: !3104)
!3494 = !DILocation(line: 883, column: 46, scope: !3099, inlinedAt: !3104)
!3495 = !DILocation(line: 883, column: 61, scope: !3099, inlinedAt: !3104)
!3496 = !DILocation(line: 883, column: 58, scope: !3099, inlinedAt: !3104)
!3497 = !DILocation(line: 883, column: 43, scope: !3099, inlinedAt: !3104)
!3498 = !DILocation(line: 883, column: 16, scope: !3099, inlinedAt: !3104)
!3499 = !DILocation(line: 883, column: 5, scope: !3099, inlinedAt: !3104)
!3500 = !DILocation(line: 883, column: 8, scope: !3099, inlinedAt: !3104)
!3501 = !DILocation(line: 883, column: 24, scope: !3099, inlinedAt: !3104)
!3502 = !DILocation(line: 884, column: 37, scope: !3099, inlinedAt: !3104)
!3503 = !DILocation(line: 884, column: 26, scope: !3099, inlinedAt: !3104)
!3504 = !DILocation(line: 884, column: 29, scope: !3099, inlinedAt: !3104)
!3505 = !DILocation(line: 884, column: 60, scope: !3099, inlinedAt: !3104)
!3506 = !DILocation(line: 884, column: 49, scope: !3099, inlinedAt: !3104)
!3507 = !DILocation(line: 884, column: 52, scope: !3099, inlinedAt: !3104)
!3508 = !DILocation(line: 884, column: 68, scope: !3099, inlinedAt: !3104)
!3509 = !DILocation(line: 884, column: 74, scope: !3099, inlinedAt: !3104)
!3510 = !DILocation(line: 884, column: 45, scope: !3099, inlinedAt: !3104)
!3511 = !DILocation(line: 884, column: 16, scope: !3099, inlinedAt: !3104)
!3512 = !DILocation(line: 884, column: 5, scope: !3099, inlinedAt: !3104)
!3513 = !DILocation(line: 884, column: 8, scope: !3099, inlinedAt: !3104)
!3514 = !DILocation(line: 884, column: 24, scope: !3099, inlinedAt: !3104)
!3515 = !DILocation(line: 886, column: 23, scope: !3099, inlinedAt: !3104)
!3516 = !DILocation(line: 886, column: 12, scope: !3099, inlinedAt: !3104)
!3517 = !DILocation(line: 886, column: 15, scope: !3099, inlinedAt: !3104)
!3518 = !DILocation(line: 886, column: 5, scope: !3099, inlinedAt: !3104)
!3519 = !DILocation(line: 887, column: 1, scope: !3099, inlinedAt: !3104)
!3520 = !DILocation(line: 1017, column: 14, scope: !3105)
!3521 = !DILocation(line: 1017, column: 23, scope: !3105)
!3522 = !DILocation(line: 1019, column: 21, scope: !3105)
!3523 = !DILocation(line: 1023, column: 9, scope: !3107)
!3524 = !DILocation(line: 1023, column: 12, scope: !3107)
!3525 = !DILocation(line: 1023, column: 15, scope: !3107)
!3526 = !DILocation(line: 1024, column: 9, scope: !3107)
!3527 = !DILocation(line: 1024, column: 12, scope: !3107)
!3528 = !DILocation(line: 1024, column: 22, scope: !3107)
!3529 = !DILocation(line: 1027, column: 13, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3107, file: !910, line: 1027, column: 13)
!3531 = !DILocation(line: 1027, column: 16, scope: !3530)
!3532 = !DILocation(line: 1027, column: 23, scope: !3530)
!3533 = !DILocation(line: 1027, column: 26, scope: !3530)
!3534 = !DILocation(line: 1027, column: 40, scope: !3530)
!3535 = !DILocation(line: 1027, column: 20, scope: !3530)
!3536 = !DILocation(line: 1027, column: 13, scope: !3107)
!3537 = !DILocation(line: 1028, column: 21, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3530, file: !910, line: 1027, column: 47)
!3539 = !DILocation(line: 1028, column: 24, scope: !3538)
!3540 = !DILocation(line: 1028, column: 13, scope: !3538)
!3541 = !DILocation(line: 1028, column: 39, scope: !3538)
!3542 = !DILocation(line: 1028, column: 42, scope: !3538)
!3543 = !DILocation(line: 1030, column: 22, scope: !3538)
!3544 = !DILocation(line: 1030, column: 25, scope: !3538)
!3545 = !DILocation(line: 1030, column: 13, scope: !3538)
!3546 = !DILocation(line: 1030, column: 16, scope: !3538)
!3547 = !DILocation(line: 1030, column: 20, scope: !3538)
!3548 = !DILocation(line: 1031, column: 9, scope: !3538)
!3549 = !DILocation(line: 1012, column: 5, scope: !3550)
!3550 = !DILexicalBlockFile(scope: !3097, file: !910, discriminator: 2)
!3551 = distinct !{!3551, !3213}
!3552 = !DILocation(line: 1033, column: 1, scope: !3097)
!3553 = distinct !DISubprogram(name: "predictor_decode_stereo_3800", scope: !910, file: !910, line: 935, type: !2825, isLocal: true, isDefinition: true, scopeLine: 936, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!3554 = !DILocation(line: 844, column: 76, scope: !3099, inlinedAt: !3555)
!3555 = distinct !DILocation(line: 969, column: 25, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !910, line: 968, column: 16)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !910, line: 963, column: 13)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !910, line: 961, column: 21)
!3559 = !DILocation(line: 845, column: 51, scope: !3099, inlinedAt: !3555)
!3560 = !DILocation(line: 845, column: 70, scope: !3099, inlinedAt: !3555)
!3561 = !DILocation(line: 846, column: 51, scope: !3099, inlinedAt: !3555)
!3562 = !DILocation(line: 846, column: 69, scope: !3099, inlinedAt: !3555)
!3563 = !DILocation(line: 847, column: 51, scope: !3099, inlinedAt: !3555)
!3564 = !DILocation(line: 847, column: 68, scope: !3099, inlinedAt: !3555)
!3565 = !DILocation(line: 849, column: 13, scope: !3099, inlinedAt: !3555)
!3566 = !DILocation(line: 849, column: 26, scope: !3099, inlinedAt: !3555)
!3567 = !DILocation(line: 849, column: 39, scope: !3099, inlinedAt: !3555)
!3568 = !DILocation(line: 850, column: 13, scope: !3099, inlinedAt: !3555)
!3569 = !DILocation(line: 850, column: 17, scope: !3099, inlinedAt: !3555)
!3570 = !DILocation(line: 850, column: 21, scope: !3099, inlinedAt: !3555)
!3571 = !DILocation(line: 850, column: 25, scope: !3099, inlinedAt: !3555)
!3572 = !DILocation(line: 850, column: 29, scope: !3099, inlinedAt: !3555)
!3573 = !DILocation(line: 818, column: 81, scope: !3137, inlinedAt: !3574)
!3574 = distinct !DILocation(line: 966, column: 25, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3557, file: !910, line: 963, column: 63)
!3576 = !DILocation(line: 819, column: 56, scope: !3137, inlinedAt: !3574)
!3577 = !DILocation(line: 819, column: 75, scope: !3137, inlinedAt: !3574)
!3578 = !DILocation(line: 820, column: 56, scope: !3137, inlinedAt: !3574)
!3579 = !DILocation(line: 822, column: 13, scope: !3137, inlinedAt: !3574)
!3580 = !DILocation(line: 844, column: 76, scope: !3099, inlinedAt: !3581)
!3581 = distinct !DILocation(line: 972, column: 25, scope: !3556)
!3582 = !DILocation(line: 845, column: 51, scope: !3099, inlinedAt: !3581)
!3583 = !DILocation(line: 845, column: 70, scope: !3099, inlinedAt: !3581)
!3584 = !DILocation(line: 846, column: 51, scope: !3099, inlinedAt: !3581)
!3585 = !DILocation(line: 846, column: 69, scope: !3099, inlinedAt: !3581)
!3586 = !DILocation(line: 847, column: 51, scope: !3099, inlinedAt: !3581)
!3587 = !DILocation(line: 847, column: 68, scope: !3099, inlinedAt: !3581)
!3588 = !DILocation(line: 849, column: 13, scope: !3099, inlinedAt: !3581)
!3589 = !DILocation(line: 849, column: 26, scope: !3099, inlinedAt: !3581)
!3590 = !DILocation(line: 849, column: 39, scope: !3099, inlinedAt: !3581)
!3591 = !DILocation(line: 850, column: 13, scope: !3099, inlinedAt: !3581)
!3592 = !DILocation(line: 850, column: 17, scope: !3099, inlinedAt: !3581)
!3593 = !DILocation(line: 850, column: 21, scope: !3099, inlinedAt: !3581)
!3594 = !DILocation(line: 850, column: 25, scope: !3099, inlinedAt: !3581)
!3595 = !DILocation(line: 850, column: 29, scope: !3099, inlinedAt: !3581)
!3596 = !DILocation(line: 818, column: 81, scope: !3137, inlinedAt: !3597)
!3597 = distinct !DILocation(line: 964, column: 25, scope: !3575)
!3598 = !DILocation(line: 819, column: 56, scope: !3137, inlinedAt: !3597)
!3599 = !DILocation(line: 819, column: 75, scope: !3137, inlinedAt: !3597)
!3600 = !DILocation(line: 820, column: 56, scope: !3137, inlinedAt: !3597)
!3601 = !DILocation(line: 822, column: 13, scope: !3137, inlinedAt: !3597)
!3602 = !DILocalVariable(name: "ctx", arg: 1, scope: !3553, file: !910, line: 935, type: !1750)
!3603 = !DILocation(line: 935, column: 54, scope: !3553)
!3604 = !DILocalVariable(name: "count", arg: 2, scope: !3553, file: !910, line: 935, type: !918)
!3605 = !DILocation(line: 935, column: 63, scope: !3553)
!3606 = !DILocalVariable(name: "p", scope: !3553, file: !910, line: 937, type: !3102)
!3607 = !DILocation(line: 937, column: 19, scope: !3553)
!3608 = !DILocation(line: 937, column: 24, scope: !3553)
!3609 = !DILocation(line: 937, column: 29, scope: !3553)
!3610 = !DILocalVariable(name: "decoded0", scope: !3553, file: !910, line: 938, type: !947)
!3611 = !DILocation(line: 938, column: 14, scope: !3553)
!3612 = !DILocation(line: 938, column: 25, scope: !3553)
!3613 = !DILocation(line: 938, column: 30, scope: !3553)
!3614 = !DILocalVariable(name: "decoded1", scope: !3553, file: !910, line: 939, type: !947)
!3615 = !DILocation(line: 939, column: 14, scope: !3553)
!3616 = !DILocation(line: 939, column: 25, scope: !3553)
!3617 = !DILocation(line: 939, column: 30, scope: !3553)
!3618 = !DILocalVariable(name: "start", scope: !3553, file: !910, line: 940, type: !918)
!3619 = !DILocation(line: 940, column: 9, scope: !3553)
!3620 = !DILocalVariable(name: "shift", scope: !3553, file: !910, line: 940, type: !918)
!3621 = !DILocation(line: 940, column: 20, scope: !3553)
!3622 = !DILocation(line: 942, column: 9, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3553, file: !910, line: 942, column: 9)
!3624 = !DILocation(line: 942, column: 14, scope: !3623)
!3625 = !DILocation(line: 942, column: 32, scope: !3623)
!3626 = !DILocation(line: 942, column: 9, scope: !3553)
!3627 = !DILocation(line: 943, column: 15, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3623, file: !910, line: 942, column: 59)
!3629 = !DILocation(line: 944, column: 31, scope: !3628)
!3630 = !DILocation(line: 944, column: 48, scope: !3628)
!3631 = !DILocation(line: 944, column: 9, scope: !3628)
!3632 = !DILocation(line: 945, column: 31, scope: !3628)
!3633 = !DILocation(line: 945, column: 48, scope: !3628)
!3634 = !DILocation(line: 945, column: 9, scope: !3628)
!3635 = !DILocation(line: 946, column: 5, scope: !3628)
!3636 = !DILocation(line: 946, column: 16, scope: !3637)
!3637 = !DILexicalBlockFile(scope: !3638, file: !910, discriminator: 1)
!3638 = distinct !DILexicalBlock(scope: !3623, file: !910, line: 946, column: 16)
!3639 = !DILocation(line: 946, column: 21, scope: !3637)
!3640 = !DILocation(line: 946, column: 39, scope: !3637)
!3641 = !DILocalVariable(name: "order", scope: !3642, file: !910, line: 947, type: !918)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !910, line: 946, column: 72)
!3643 = !DILocation(line: 947, column: 13, scope: !3642)
!3644 = !DILocalVariable(name: "shift2", scope: !3642, file: !910, line: 947, type: !918)
!3645 = !DILocation(line: 947, column: 26, scope: !3642)
!3646 = !DILocation(line: 949, column: 13, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3642, file: !910, line: 949, column: 13)
!3648 = !DILocation(line: 949, column: 18, scope: !3647)
!3649 = !DILocation(line: 949, column: 30, scope: !3647)
!3650 = !DILocation(line: 949, column: 13, scope: !3642)
!3651 = !DILocation(line: 950, column: 19, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3647, file: !910, line: 949, column: 39)
!3653 = !DILocation(line: 951, column: 18, scope: !3652)
!3654 = !DILocation(line: 952, column: 19, scope: !3652)
!3655 = !DILocation(line: 953, column: 36, scope: !3652)
!3656 = !DILocation(line: 953, column: 47, scope: !3652)
!3657 = !DILocation(line: 953, column: 45, scope: !3652)
!3658 = !DILocation(line: 953, column: 54, scope: !3652)
!3659 = !DILocation(line: 953, column: 62, scope: !3652)
!3660 = !DILocation(line: 953, column: 60, scope: !3652)
!3661 = !DILocation(line: 953, column: 13, scope: !3652)
!3662 = !DILocation(line: 954, column: 36, scope: !3652)
!3663 = !DILocation(line: 954, column: 47, scope: !3652)
!3664 = !DILocation(line: 954, column: 45, scope: !3652)
!3665 = !DILocation(line: 954, column: 54, scope: !3652)
!3666 = !DILocation(line: 954, column: 62, scope: !3652)
!3667 = !DILocation(line: 954, column: 60, scope: !3652)
!3668 = !DILocation(line: 954, column: 13, scope: !3652)
!3669 = !DILocation(line: 955, column: 9, scope: !3652)
!3670 = !DILocation(line: 956, column: 17, scope: !3642)
!3671 = !DILocation(line: 956, column: 15, scope: !3642)
!3672 = !DILocation(line: 957, column: 31, scope: !3642)
!3673 = !DILocation(line: 957, column: 41, scope: !3642)
!3674 = !DILocation(line: 957, column: 48, scope: !3642)
!3675 = !DILocation(line: 957, column: 56, scope: !3642)
!3676 = !DILocation(line: 957, column: 9, scope: !3642)
!3677 = !DILocation(line: 958, column: 31, scope: !3642)
!3678 = !DILocation(line: 958, column: 41, scope: !3642)
!3679 = !DILocation(line: 958, column: 48, scope: !3642)
!3680 = !DILocation(line: 958, column: 56, scope: !3642)
!3681 = !DILocation(line: 958, column: 9, scope: !3642)
!3682 = !DILocation(line: 959, column: 5, scope: !3642)
!3683 = !DILocation(line: 961, column: 5, scope: !3553)
!3684 = !DILocation(line: 961, column: 17, scope: !3685)
!3685 = !DILexicalBlockFile(scope: !3553, file: !910, discriminator: 1)
!3686 = !DILocation(line: 961, column: 5, scope: !3685)
!3687 = !DILocalVariable(name: "X", scope: !3558, file: !910, line: 962, type: !918)
!3688 = !DILocation(line: 962, column: 13, scope: !3558)
!3689 = !DILocation(line: 962, column: 18, scope: !3558)
!3690 = !DILocation(line: 962, column: 17, scope: !3558)
!3691 = !DILocalVariable(name: "Y", scope: !3558, file: !910, line: 962, type: !918)
!3692 = !DILocation(line: 962, column: 28, scope: !3558)
!3693 = !DILocation(line: 962, column: 33, scope: !3558)
!3694 = !DILocation(line: 962, column: 32, scope: !3558)
!3695 = !DILocation(line: 963, column: 13, scope: !3557)
!3696 = !DILocation(line: 963, column: 18, scope: !3557)
!3697 = !DILocation(line: 963, column: 36, scope: !3557)
!3698 = !DILocation(line: 963, column: 13, scope: !3558)
!3699 = !DILocation(line: 964, column: 42, scope: !3575)
!3700 = !DILocation(line: 964, column: 45, scope: !3575)
!3701 = !DILocation(line: 964, column: 25, scope: !3575)
!3702 = !DILocation(line: 824, column: 31, scope: !3137, inlinedAt: !3597)
!3703 = !DILocation(line: 824, column: 22, scope: !3137, inlinedAt: !3597)
!3704 = !DILocation(line: 824, column: 25, scope: !3137, inlinedAt: !3597)
!3705 = !DILocation(line: 824, column: 12, scope: !3137, inlinedAt: !3597)
!3706 = !DILocation(line: 824, column: 5, scope: !3137, inlinedAt: !3597)
!3707 = !DILocation(line: 824, column: 8, scope: !3137, inlinedAt: !3597)
!3708 = !DILocation(line: 824, column: 20, scope: !3137, inlinedAt: !3597)
!3709 = !DILocation(line: 825, column: 9, scope: !3233, inlinedAt: !3597)
!3710 = !DILocation(line: 825, column: 12, scope: !3233, inlinedAt: !3597)
!3711 = !DILocation(line: 825, column: 23, scope: !3233, inlinedAt: !3597)
!3712 = !DILocation(line: 825, column: 9, scope: !3137, inlinedAt: !3597)
!3713 = !DILocation(line: 826, column: 28, scope: !3238, inlinedAt: !3597)
!3714 = !DILocation(line: 826, column: 18, scope: !3238, inlinedAt: !3597)
!3715 = !DILocation(line: 826, column: 9, scope: !3238, inlinedAt: !3597)
!3716 = !DILocation(line: 826, column: 12, scope: !3238, inlinedAt: !3597)
!3717 = !DILocation(line: 826, column: 26, scope: !3238, inlinedAt: !3597)
!3718 = !DILocation(line: 827, column: 30, scope: !3238, inlinedAt: !3597)
!3719 = !DILocation(line: 827, column: 20, scope: !3238, inlinedAt: !3597)
!3720 = !DILocation(line: 827, column: 9, scope: !3238, inlinedAt: !3597)
!3721 = !DILocation(line: 827, column: 12, scope: !3238, inlinedAt: !3597)
!3722 = !DILocation(line: 827, column: 28, scope: !3238, inlinedAt: !3597)
!3723 = !DILocation(line: 828, column: 16, scope: !3238, inlinedAt: !3597)
!3724 = !DILocation(line: 828, column: 9, scope: !3238, inlinedAt: !3597)
!3725 = !DILocation(line: 831, column: 26, scope: !3137, inlinedAt: !3597)
!3726 = !DILocation(line: 831, column: 19, scope: !3137, inlinedAt: !3597)
!3727 = !DILocation(line: 831, column: 22, scope: !3137, inlinedAt: !3597)
!3728 = !DILocation(line: 831, column: 34, scope: !3137, inlinedAt: !3597)
!3729 = !DILocation(line: 831, column: 47, scope: !3137, inlinedAt: !3597)
!3730 = !DILocation(line: 831, column: 54, scope: !3137, inlinedAt: !3597)
!3731 = !DILocation(line: 831, column: 40, scope: !3137, inlinedAt: !3597)
!3732 = !DILocation(line: 831, column: 43, scope: !3137, inlinedAt: !3597)
!3733 = !DILocation(line: 831, column: 38, scope: !3137, inlinedAt: !3597)
!3734 = !DILocation(line: 831, column: 17, scope: !3137, inlinedAt: !3597)
!3735 = !DILocation(line: 832, column: 24, scope: !3137, inlinedAt: !3597)
!3736 = !DILocation(line: 832, column: 35, scope: !3137, inlinedAt: !3597)
!3737 = !DILocation(line: 832, column: 60, scope: !3137, inlinedAt: !3597)
!3738 = !DILocation(line: 832, column: 49, scope: !3137, inlinedAt: !3597)
!3739 = !DILocation(line: 832, column: 52, scope: !3137, inlinedAt: !3597)
!3740 = !DILocation(line: 832, column: 47, scope: !3137, inlinedAt: !3597)
!3741 = !DILocation(line: 832, column: 71, scope: !3137, inlinedAt: !3597)
!3742 = !DILocation(line: 832, column: 32, scope: !3137, inlinedAt: !3597)
!3743 = !DILocation(line: 832, column: 14, scope: !3137, inlinedAt: !3597)
!3744 = !DILocation(line: 832, column: 5, scope: !3137, inlinedAt: !3597)
!3745 = !DILocation(line: 832, column: 8, scope: !3137, inlinedAt: !3597)
!3746 = !DILocation(line: 832, column: 22, scope: !3137, inlinedAt: !3597)
!3747 = !DILocation(line: 834, column: 10, scope: !3273, inlinedAt: !3597)
!3748 = !DILocation(line: 834, column: 20, scope: !3273, inlinedAt: !3597)
!3749 = !DILocation(line: 834, column: 18, scope: !3273, inlinedAt: !3597)
!3750 = !DILocation(line: 834, column: 33, scope: !3273, inlinedAt: !3597)
!3751 = !DILocation(line: 834, column: 9, scope: !3137, inlinedAt: !3597)
!3752 = !DILocation(line: 835, column: 20, scope: !3273, inlinedAt: !3597)
!3753 = !DILocation(line: 835, column: 9, scope: !3273, inlinedAt: !3597)
!3754 = !DILocation(line: 835, column: 12, scope: !3273, inlinedAt: !3597)
!3755 = !DILocation(line: 835, column: 30, scope: !3273, inlinedAt: !3597)
!3756 = !DILocation(line: 837, column: 20, scope: !3273, inlinedAt: !3597)
!3757 = !DILocation(line: 837, column: 9, scope: !3273, inlinedAt: !3597)
!3758 = !DILocation(line: 837, column: 12, scope: !3273, inlinedAt: !3597)
!3759 = !DILocation(line: 837, column: 30, scope: !3273, inlinedAt: !3597)
!3760 = !DILocation(line: 839, column: 36, scope: !3137, inlinedAt: !3597)
!3761 = !DILocation(line: 839, column: 27, scope: !3137, inlinedAt: !3597)
!3762 = !DILocation(line: 839, column: 30, scope: !3137, inlinedAt: !3597)
!3763 = !DILocation(line: 839, column: 16, scope: !3137, inlinedAt: !3597)
!3764 = !DILocation(line: 839, column: 5, scope: !3137, inlinedAt: !3597)
!3765 = !DILocation(line: 839, column: 8, scope: !3137, inlinedAt: !3597)
!3766 = !DILocation(line: 839, column: 24, scope: !3137, inlinedAt: !3597)
!3767 = !DILocation(line: 841, column: 23, scope: !3137, inlinedAt: !3597)
!3768 = !DILocation(line: 841, column: 12, scope: !3137, inlinedAt: !3597)
!3769 = !DILocation(line: 841, column: 15, scope: !3137, inlinedAt: !3597)
!3770 = !DILocation(line: 841, column: 5, scope: !3137, inlinedAt: !3597)
!3771 = !DILocation(line: 842, column: 1, scope: !3137, inlinedAt: !3597)
!3772 = !DILocation(line: 964, column: 14, scope: !3575)
!3773 = !DILocation(line: 964, column: 23, scope: !3575)
!3774 = !DILocation(line: 965, column: 21, scope: !3575)
!3775 = !DILocation(line: 966, column: 42, scope: !3575)
!3776 = !DILocation(line: 966, column: 45, scope: !3575)
!3777 = !DILocation(line: 966, column: 25, scope: !3575)
!3778 = !DILocation(line: 824, column: 31, scope: !3137, inlinedAt: !3574)
!3779 = !DILocation(line: 824, column: 22, scope: !3137, inlinedAt: !3574)
!3780 = !DILocation(line: 824, column: 25, scope: !3137, inlinedAt: !3574)
!3781 = !DILocation(line: 824, column: 12, scope: !3137, inlinedAt: !3574)
!3782 = !DILocation(line: 824, column: 5, scope: !3137, inlinedAt: !3574)
!3783 = !DILocation(line: 824, column: 8, scope: !3137, inlinedAt: !3574)
!3784 = !DILocation(line: 824, column: 20, scope: !3137, inlinedAt: !3574)
!3785 = !DILocation(line: 825, column: 9, scope: !3233, inlinedAt: !3574)
!3786 = !DILocation(line: 825, column: 12, scope: !3233, inlinedAt: !3574)
!3787 = !DILocation(line: 825, column: 23, scope: !3233, inlinedAt: !3574)
!3788 = !DILocation(line: 825, column: 9, scope: !3137, inlinedAt: !3574)
!3789 = !DILocation(line: 826, column: 28, scope: !3238, inlinedAt: !3574)
!3790 = !DILocation(line: 826, column: 18, scope: !3238, inlinedAt: !3574)
!3791 = !DILocation(line: 826, column: 9, scope: !3238, inlinedAt: !3574)
!3792 = !DILocation(line: 826, column: 12, scope: !3238, inlinedAt: !3574)
!3793 = !DILocation(line: 826, column: 26, scope: !3238, inlinedAt: !3574)
!3794 = !DILocation(line: 827, column: 30, scope: !3238, inlinedAt: !3574)
!3795 = !DILocation(line: 827, column: 20, scope: !3238, inlinedAt: !3574)
!3796 = !DILocation(line: 827, column: 9, scope: !3238, inlinedAt: !3574)
!3797 = !DILocation(line: 827, column: 12, scope: !3238, inlinedAt: !3574)
!3798 = !DILocation(line: 827, column: 28, scope: !3238, inlinedAt: !3574)
!3799 = !DILocation(line: 828, column: 16, scope: !3238, inlinedAt: !3574)
!3800 = !DILocation(line: 828, column: 9, scope: !3238, inlinedAt: !3574)
!3801 = !DILocation(line: 831, column: 26, scope: !3137, inlinedAt: !3574)
!3802 = !DILocation(line: 831, column: 19, scope: !3137, inlinedAt: !3574)
!3803 = !DILocation(line: 831, column: 22, scope: !3137, inlinedAt: !3574)
!3804 = !DILocation(line: 831, column: 34, scope: !3137, inlinedAt: !3574)
!3805 = !DILocation(line: 831, column: 47, scope: !3137, inlinedAt: !3574)
!3806 = !DILocation(line: 831, column: 54, scope: !3137, inlinedAt: !3574)
!3807 = !DILocation(line: 831, column: 40, scope: !3137, inlinedAt: !3574)
!3808 = !DILocation(line: 831, column: 43, scope: !3137, inlinedAt: !3574)
!3809 = !DILocation(line: 831, column: 38, scope: !3137, inlinedAt: !3574)
!3810 = !DILocation(line: 831, column: 17, scope: !3137, inlinedAt: !3574)
!3811 = !DILocation(line: 832, column: 24, scope: !3137, inlinedAt: !3574)
!3812 = !DILocation(line: 832, column: 35, scope: !3137, inlinedAt: !3574)
!3813 = !DILocation(line: 832, column: 60, scope: !3137, inlinedAt: !3574)
!3814 = !DILocation(line: 832, column: 49, scope: !3137, inlinedAt: !3574)
!3815 = !DILocation(line: 832, column: 52, scope: !3137, inlinedAt: !3574)
!3816 = !DILocation(line: 832, column: 47, scope: !3137, inlinedAt: !3574)
!3817 = !DILocation(line: 832, column: 71, scope: !3137, inlinedAt: !3574)
!3818 = !DILocation(line: 832, column: 32, scope: !3137, inlinedAt: !3574)
!3819 = !DILocation(line: 832, column: 14, scope: !3137, inlinedAt: !3574)
!3820 = !DILocation(line: 832, column: 5, scope: !3137, inlinedAt: !3574)
!3821 = !DILocation(line: 832, column: 8, scope: !3137, inlinedAt: !3574)
!3822 = !DILocation(line: 832, column: 22, scope: !3137, inlinedAt: !3574)
!3823 = !DILocation(line: 834, column: 10, scope: !3273, inlinedAt: !3574)
!3824 = !DILocation(line: 834, column: 20, scope: !3273, inlinedAt: !3574)
!3825 = !DILocation(line: 834, column: 18, scope: !3273, inlinedAt: !3574)
!3826 = !DILocation(line: 834, column: 33, scope: !3273, inlinedAt: !3574)
!3827 = !DILocation(line: 834, column: 9, scope: !3137, inlinedAt: !3574)
!3828 = !DILocation(line: 835, column: 20, scope: !3273, inlinedAt: !3574)
!3829 = !DILocation(line: 835, column: 9, scope: !3273, inlinedAt: !3574)
!3830 = !DILocation(line: 835, column: 12, scope: !3273, inlinedAt: !3574)
!3831 = !DILocation(line: 835, column: 30, scope: !3273, inlinedAt: !3574)
!3832 = !DILocation(line: 837, column: 20, scope: !3273, inlinedAt: !3574)
!3833 = !DILocation(line: 837, column: 9, scope: !3273, inlinedAt: !3574)
!3834 = !DILocation(line: 837, column: 12, scope: !3273, inlinedAt: !3574)
!3835 = !DILocation(line: 837, column: 30, scope: !3273, inlinedAt: !3574)
!3836 = !DILocation(line: 839, column: 36, scope: !3137, inlinedAt: !3574)
!3837 = !DILocation(line: 839, column: 27, scope: !3137, inlinedAt: !3574)
!3838 = !DILocation(line: 839, column: 30, scope: !3137, inlinedAt: !3574)
!3839 = !DILocation(line: 839, column: 16, scope: !3137, inlinedAt: !3574)
!3840 = !DILocation(line: 839, column: 5, scope: !3137, inlinedAt: !3574)
!3841 = !DILocation(line: 839, column: 8, scope: !3137, inlinedAt: !3574)
!3842 = !DILocation(line: 839, column: 24, scope: !3137, inlinedAt: !3574)
!3843 = !DILocation(line: 841, column: 23, scope: !3137, inlinedAt: !3574)
!3844 = !DILocation(line: 841, column: 12, scope: !3137, inlinedAt: !3574)
!3845 = !DILocation(line: 841, column: 15, scope: !3137, inlinedAt: !3574)
!3846 = !DILocation(line: 841, column: 5, scope: !3137, inlinedAt: !3574)
!3847 = !DILocation(line: 842, column: 1, scope: !3137, inlinedAt: !3574)
!3848 = !DILocation(line: 966, column: 14, scope: !3575)
!3849 = !DILocation(line: 966, column: 23, scope: !3575)
!3850 = !DILocation(line: 967, column: 21, scope: !3575)
!3851 = !DILocation(line: 968, column: 9, scope: !3575)
!3852 = !DILocation(line: 969, column: 37, scope: !3556)
!3853 = !DILocation(line: 969, column: 40, scope: !3556)
!3854 = !DILocation(line: 970, column: 37, scope: !3556)
!3855 = !DILocation(line: 970, column: 44, scope: !3556)
!3856 = !DILocation(line: 969, column: 25, scope: !3556)
!3857 = !DILocation(line: 852, column: 31, scope: !3099, inlinedAt: !3555)
!3858 = !DILocation(line: 852, column: 22, scope: !3099, inlinedAt: !3555)
!3859 = !DILocation(line: 852, column: 25, scope: !3099, inlinedAt: !3555)
!3860 = !DILocation(line: 852, column: 12, scope: !3099, inlinedAt: !3555)
!3861 = !DILocation(line: 852, column: 5, scope: !3099, inlinedAt: !3555)
!3862 = !DILocation(line: 852, column: 8, scope: !3099, inlinedAt: !3555)
!3863 = !DILocation(line: 852, column: 20, scope: !3099, inlinedAt: !3555)
!3864 = !DILocation(line: 853, column: 33, scope: !3099, inlinedAt: !3555)
!3865 = !DILocation(line: 853, column: 22, scope: !3099, inlinedAt: !3555)
!3866 = !DILocation(line: 853, column: 25, scope: !3099, inlinedAt: !3555)
!3867 = !DILocation(line: 853, column: 12, scope: !3099, inlinedAt: !3555)
!3868 = !DILocation(line: 853, column: 5, scope: !3099, inlinedAt: !3555)
!3869 = !DILocation(line: 853, column: 8, scope: !3099, inlinedAt: !3555)
!3870 = !DILocation(line: 853, column: 20, scope: !3099, inlinedAt: !3555)
!3871 = !DILocation(line: 854, column: 9, scope: !3323, inlinedAt: !3555)
!3872 = !DILocation(line: 854, column: 12, scope: !3323, inlinedAt: !3555)
!3873 = !DILocation(line: 854, column: 25, scope: !3323, inlinedAt: !3555)
!3874 = !DILocation(line: 854, column: 23, scope: !3323, inlinedAt: !3555)
!3875 = !DILocation(line: 854, column: 9, scope: !3099, inlinedAt: !3555)
!3876 = !DILocation(line: 855, column: 23, scope: !3329, inlinedAt: !3555)
!3877 = !DILocation(line: 855, column: 44, scope: !3329, inlinedAt: !3555)
!3878 = !DILocation(line: 855, column: 33, scope: !3329, inlinedAt: !3555)
!3879 = !DILocation(line: 855, column: 36, scope: !3329, inlinedAt: !3555)
!3880 = !DILocation(line: 855, column: 31, scope: !3329, inlinedAt: !3555)
!3881 = !DILocation(line: 855, column: 21, scope: !3329, inlinedAt: !3555)
!3882 = !DILocation(line: 856, column: 28, scope: !3329, inlinedAt: !3555)
!3883 = !DILocation(line: 856, column: 18, scope: !3329, inlinedAt: !3555)
!3884 = !DILocation(line: 856, column: 9, scope: !3329, inlinedAt: !3555)
!3885 = !DILocation(line: 856, column: 12, scope: !3329, inlinedAt: !3555)
!3886 = !DILocation(line: 856, column: 26, scope: !3329, inlinedAt: !3555)
!3887 = !DILocation(line: 857, column: 30, scope: !3329, inlinedAt: !3555)
!3888 = !DILocation(line: 857, column: 20, scope: !3329, inlinedAt: !3555)
!3889 = !DILocation(line: 857, column: 9, scope: !3329, inlinedAt: !3555)
!3890 = !DILocation(line: 857, column: 12, scope: !3329, inlinedAt: !3555)
!3891 = !DILocation(line: 857, column: 28, scope: !3329, inlinedAt: !3555)
!3892 = !DILocation(line: 858, column: 30, scope: !3329, inlinedAt: !3555)
!3893 = !DILocation(line: 858, column: 20, scope: !3329, inlinedAt: !3555)
!3894 = !DILocation(line: 858, column: 9, scope: !3329, inlinedAt: !3555)
!3895 = !DILocation(line: 858, column: 12, scope: !3329, inlinedAt: !3555)
!3896 = !DILocation(line: 858, column: 28, scope: !3329, inlinedAt: !3555)
!3897 = !DILocation(line: 859, column: 16, scope: !3329, inlinedAt: !3555)
!3898 = !DILocation(line: 859, column: 9, scope: !3329, inlinedAt: !3555)
!3899 = !DILocation(line: 861, column: 17, scope: !3099, inlinedAt: !3555)
!3900 = !DILocation(line: 861, column: 10, scope: !3099, inlinedAt: !3555)
!3901 = !DILocation(line: 861, column: 13, scope: !3099, inlinedAt: !3555)
!3902 = !DILocation(line: 861, column: 8, scope: !3099, inlinedAt: !3555)
!3903 = !DILocation(line: 862, column: 18, scope: !3099, inlinedAt: !3555)
!3904 = !DILocation(line: 862, column: 11, scope: !3099, inlinedAt: !3555)
!3905 = !DILocation(line: 862, column: 14, scope: !3099, inlinedAt: !3555)
!3906 = !DILocation(line: 862, column: 35, scope: !3099, inlinedAt: !3555)
!3907 = !DILocation(line: 862, column: 42, scope: !3099, inlinedAt: !3555)
!3908 = !DILocation(line: 862, column: 28, scope: !3099, inlinedAt: !3555)
!3909 = !DILocation(line: 862, column: 31, scope: !3099, inlinedAt: !3555)
!3910 = !DILocation(line: 862, column: 26, scope: !3099, inlinedAt: !3555)
!3911 = !DILocation(line: 862, column: 48, scope: !3099, inlinedAt: !3555)
!3912 = !DILocation(line: 862, column: 8, scope: !3099, inlinedAt: !3555)
!3913 = !DILocation(line: 863, column: 17, scope: !3099, inlinedAt: !3555)
!3914 = !DILocation(line: 863, column: 10, scope: !3099, inlinedAt: !3555)
!3915 = !DILocation(line: 863, column: 13, scope: !3099, inlinedAt: !3555)
!3916 = !DILocation(line: 863, column: 36, scope: !3099, inlinedAt: !3555)
!3917 = !DILocation(line: 863, column: 43, scope: !3099, inlinedAt: !3555)
!3918 = !DILocation(line: 863, column: 29, scope: !3099, inlinedAt: !3555)
!3919 = !DILocation(line: 863, column: 32, scope: !3099, inlinedAt: !3555)
!3920 = !DILocation(line: 863, column: 57, scope: !3099, inlinedAt: !3555)
!3921 = !DILocation(line: 863, column: 64, scope: !3099, inlinedAt: !3555)
!3922 = !DILocation(line: 863, column: 50, scope: !3099, inlinedAt: !3555)
!3923 = !DILocation(line: 863, column: 53, scope: !3099, inlinedAt: !3555)
!3924 = !DILocation(line: 863, column: 48, scope: !3099, inlinedAt: !3555)
!3925 = !DILocation(line: 863, column: 70, scope: !3099, inlinedAt: !3555)
!3926 = !DILocation(line: 863, column: 25, scope: !3099, inlinedAt: !3555)
!3927 = !DILocation(line: 863, column: 8, scope: !3099, inlinedAt: !3555)
!3928 = !DILocation(line: 864, column: 17, scope: !3099, inlinedAt: !3555)
!3929 = !DILocation(line: 864, column: 10, scope: !3099, inlinedAt: !3555)
!3930 = !DILocation(line: 864, column: 13, scope: !3099, inlinedAt: !3555)
!3931 = !DILocation(line: 864, column: 25, scope: !3099, inlinedAt: !3555)
!3932 = !DILocation(line: 864, column: 38, scope: !3099, inlinedAt: !3555)
!3933 = !DILocation(line: 864, column: 45, scope: !3099, inlinedAt: !3555)
!3934 = !DILocation(line: 864, column: 31, scope: !3099, inlinedAt: !3555)
!3935 = !DILocation(line: 864, column: 34, scope: !3099, inlinedAt: !3555)
!3936 = !DILocation(line: 864, column: 29, scope: !3099, inlinedAt: !3555)
!3937 = !DILocation(line: 864, column: 8, scope: !3099, inlinedAt: !3555)
!3938 = !DILocation(line: 865, column: 17, scope: !3099, inlinedAt: !3555)
!3939 = !DILocation(line: 865, column: 10, scope: !3099, inlinedAt: !3555)
!3940 = !DILocation(line: 865, column: 13, scope: !3099, inlinedAt: !3555)
!3941 = !DILocation(line: 865, column: 8, scope: !3099, inlinedAt: !3555)
!3942 = !DILocation(line: 867, column: 19, scope: !3099, inlinedAt: !3555)
!3943 = !DILocation(line: 867, column: 35, scope: !3099, inlinedAt: !3555)
!3944 = !DILocation(line: 867, column: 24, scope: !3099, inlinedAt: !3555)
!3945 = !DILocation(line: 867, column: 27, scope: !3099, inlinedAt: !3555)
!3946 = !DILocation(line: 867, column: 22, scope: !3099, inlinedAt: !3555)
!3947 = !DILocation(line: 868, column: 19, scope: !3099, inlinedAt: !3555)
!3948 = !DILocation(line: 868, column: 35, scope: !3099, inlinedAt: !3555)
!3949 = !DILocation(line: 868, column: 24, scope: !3099, inlinedAt: !3555)
!3950 = !DILocation(line: 868, column: 27, scope: !3099, inlinedAt: !3555)
!3951 = !DILocation(line: 868, column: 22, scope: !3099, inlinedAt: !3555)
!3952 = !DILocation(line: 867, column: 46, scope: !3099, inlinedAt: !3555)
!3953 = !DILocation(line: 869, column: 19, scope: !3099, inlinedAt: !3555)
!3954 = !DILocation(line: 869, column: 35, scope: !3099, inlinedAt: !3555)
!3955 = !DILocation(line: 869, column: 24, scope: !3099, inlinedAt: !3555)
!3956 = !DILocation(line: 869, column: 27, scope: !3099, inlinedAt: !3555)
!3957 = !DILocation(line: 869, column: 22, scope: !3099, inlinedAt: !3555)
!3958 = !DILocation(line: 868, column: 46, scope: !3099, inlinedAt: !3555)
!3959 = !DILocation(line: 867, column: 17, scope: !3099, inlinedAt: !3555)
!3960 = !DILocation(line: 871, column: 20, scope: !3099, inlinedAt: !3555)
!3961 = !DILocation(line: 871, column: 12, scope: !3099, inlinedAt: !3555)
!3962 = !DILocation(line: 871, column: 10, scope: !3099, inlinedAt: !3555)
!3963 = !DILocation(line: 872, column: 33, scope: !3099, inlinedAt: !3555)
!3964 = !DILocation(line: 872, column: 36, scope: !3099, inlinedAt: !3555)
!3965 = !DILocation(line: 872, column: 43, scope: !3099, inlinedAt: !3555)
!3966 = !DILocation(line: 872, column: 48, scope: !3099, inlinedAt: !3555)
!3967 = !DILocation(line: 872, column: 55, scope: !3099, inlinedAt: !3555)
!3968 = !DILocation(line: 872, column: 53, scope: !3099, inlinedAt: !3555)
!3969 = !DILocation(line: 872, column: 16, scope: !3099, inlinedAt: !3555)
!3970 = !DILocation(line: 872, column: 5, scope: !3099, inlinedAt: !3555)
!3971 = !DILocation(line: 872, column: 8, scope: !3099, inlinedAt: !3555)
!3972 = !DILocation(line: 872, column: 27, scope: !3099, inlinedAt: !3555)
!3973 = !DILocation(line: 873, column: 33, scope: !3099, inlinedAt: !3555)
!3974 = !DILocation(line: 873, column: 36, scope: !3099, inlinedAt: !3555)
!3975 = !DILocation(line: 873, column: 43, scope: !3099, inlinedAt: !3555)
!3976 = !DILocation(line: 873, column: 48, scope: !3099, inlinedAt: !3555)
!3977 = !DILocation(line: 873, column: 55, scope: !3099, inlinedAt: !3555)
!3978 = !DILocation(line: 873, column: 53, scope: !3099, inlinedAt: !3555)
!3979 = !DILocation(line: 873, column: 16, scope: !3099, inlinedAt: !3555)
!3980 = !DILocation(line: 873, column: 5, scope: !3099, inlinedAt: !3555)
!3981 = !DILocation(line: 873, column: 8, scope: !3099, inlinedAt: !3555)
!3982 = !DILocation(line: 873, column: 27, scope: !3099, inlinedAt: !3555)
!3983 = !DILocation(line: 874, column: 33, scope: !3099, inlinedAt: !3555)
!3984 = !DILocation(line: 874, column: 36, scope: !3099, inlinedAt: !3555)
!3985 = !DILocation(line: 874, column: 43, scope: !3099, inlinedAt: !3555)
!3986 = !DILocation(line: 874, column: 48, scope: !3099, inlinedAt: !3555)
!3987 = !DILocation(line: 874, column: 55, scope: !3099, inlinedAt: !3555)
!3988 = !DILocation(line: 874, column: 53, scope: !3099, inlinedAt: !3555)
!3989 = !DILocation(line: 874, column: 16, scope: !3099, inlinedAt: !3555)
!3990 = !DILocation(line: 874, column: 5, scope: !3099, inlinedAt: !3555)
!3991 = !DILocation(line: 874, column: 8, scope: !3099, inlinedAt: !3555)
!3992 = !DILocation(line: 874, column: 27, scope: !3099, inlinedAt: !3555)
!3993 = !DILocation(line: 876, column: 19, scope: !3099, inlinedAt: !3555)
!3994 = !DILocation(line: 876, column: 35, scope: !3099, inlinedAt: !3555)
!3995 = !DILocation(line: 876, column: 24, scope: !3099, inlinedAt: !3555)
!3996 = !DILocation(line: 876, column: 27, scope: !3099, inlinedAt: !3555)
!3997 = !DILocation(line: 876, column: 22, scope: !3099, inlinedAt: !3555)
!3998 = !DILocation(line: 877, column: 19, scope: !3099, inlinedAt: !3555)
!3999 = !DILocation(line: 877, column: 35, scope: !3099, inlinedAt: !3555)
!4000 = !DILocation(line: 877, column: 24, scope: !3099, inlinedAt: !3555)
!4001 = !DILocation(line: 877, column: 27, scope: !3099, inlinedAt: !3555)
!4002 = !DILocation(line: 877, column: 22, scope: !3099, inlinedAt: !3555)
!4003 = !DILocation(line: 876, column: 46, scope: !3099, inlinedAt: !3555)
!4004 = !DILocation(line: 876, column: 17, scope: !3099, inlinedAt: !3555)
!4005 = !DILocation(line: 878, column: 24, scope: !3099, inlinedAt: !3555)
!4006 = !DILocation(line: 878, column: 35, scope: !3099, inlinedAt: !3555)
!4007 = !DILocation(line: 878, column: 47, scope: !3099, inlinedAt: !3555)
!4008 = !DILocation(line: 878, column: 32, scope: !3099, inlinedAt: !3555)
!4009 = !DILocation(line: 878, column: 14, scope: !3099, inlinedAt: !3555)
!4010 = !DILocation(line: 878, column: 5, scope: !3099, inlinedAt: !3555)
!4011 = !DILocation(line: 878, column: 8, scope: !3099, inlinedAt: !3555)
!4012 = !DILocation(line: 878, column: 22, scope: !3099, inlinedAt: !3555)
!4013 = !DILocation(line: 879, column: 29, scope: !3099, inlinedAt: !3555)
!4014 = !DILocation(line: 879, column: 20, scope: !3099, inlinedAt: !3555)
!4015 = !DILocation(line: 879, column: 23, scope: !3099, inlinedAt: !3555)
!4016 = !DILocation(line: 879, column: 12, scope: !3099, inlinedAt: !3555)
!4017 = !DILocation(line: 879, column: 10, scope: !3099, inlinedAt: !3555)
!4018 = !DILocation(line: 880, column: 33, scope: !3099, inlinedAt: !3555)
!4019 = !DILocation(line: 880, column: 36, scope: !3099, inlinedAt: !3555)
!4020 = !DILocation(line: 880, column: 43, scope: !3099, inlinedAt: !3555)
!4021 = !DILocation(line: 880, column: 48, scope: !3099, inlinedAt: !3555)
!4022 = !DILocation(line: 880, column: 55, scope: !3099, inlinedAt: !3555)
!4023 = !DILocation(line: 880, column: 53, scope: !3099, inlinedAt: !3555)
!4024 = !DILocation(line: 880, column: 16, scope: !3099, inlinedAt: !3555)
!4025 = !DILocation(line: 880, column: 5, scope: !3099, inlinedAt: !3555)
!4026 = !DILocation(line: 880, column: 8, scope: !3099, inlinedAt: !3555)
!4027 = !DILocation(line: 880, column: 27, scope: !3099, inlinedAt: !3555)
!4028 = !DILocation(line: 881, column: 33, scope: !3099, inlinedAt: !3555)
!4029 = !DILocation(line: 881, column: 36, scope: !3099, inlinedAt: !3555)
!4030 = !DILocation(line: 881, column: 43, scope: !3099, inlinedAt: !3555)
!4031 = !DILocation(line: 881, column: 48, scope: !3099, inlinedAt: !3555)
!4032 = !DILocation(line: 881, column: 55, scope: !3099, inlinedAt: !3555)
!4033 = !DILocation(line: 881, column: 53, scope: !3099, inlinedAt: !3555)
!4034 = !DILocation(line: 881, column: 16, scope: !3099, inlinedAt: !3555)
!4035 = !DILocation(line: 881, column: 5, scope: !3099, inlinedAt: !3555)
!4036 = !DILocation(line: 881, column: 8, scope: !3099, inlinedAt: !3555)
!4037 = !DILocation(line: 881, column: 27, scope: !3099, inlinedAt: !3555)
!4038 = !DILocation(line: 883, column: 35, scope: !3099, inlinedAt: !3555)
!4039 = !DILocation(line: 883, column: 26, scope: !3099, inlinedAt: !3555)
!4040 = !DILocation(line: 883, column: 29, scope: !3099, inlinedAt: !3555)
!4041 = !DILocation(line: 883, column: 46, scope: !3099, inlinedAt: !3555)
!4042 = !DILocation(line: 883, column: 61, scope: !3099, inlinedAt: !3555)
!4043 = !DILocation(line: 883, column: 58, scope: !3099, inlinedAt: !3555)
!4044 = !DILocation(line: 883, column: 43, scope: !3099, inlinedAt: !3555)
!4045 = !DILocation(line: 883, column: 16, scope: !3099, inlinedAt: !3555)
!4046 = !DILocation(line: 883, column: 5, scope: !3099, inlinedAt: !3555)
!4047 = !DILocation(line: 883, column: 8, scope: !3099, inlinedAt: !3555)
!4048 = !DILocation(line: 883, column: 24, scope: !3099, inlinedAt: !3555)
!4049 = !DILocation(line: 884, column: 37, scope: !3099, inlinedAt: !3555)
!4050 = !DILocation(line: 884, column: 26, scope: !3099, inlinedAt: !3555)
!4051 = !DILocation(line: 884, column: 29, scope: !3099, inlinedAt: !3555)
!4052 = !DILocation(line: 884, column: 60, scope: !3099, inlinedAt: !3555)
!4053 = !DILocation(line: 884, column: 49, scope: !3099, inlinedAt: !3555)
!4054 = !DILocation(line: 884, column: 52, scope: !3099, inlinedAt: !3555)
!4055 = !DILocation(line: 884, column: 68, scope: !3099, inlinedAt: !3555)
!4056 = !DILocation(line: 884, column: 74, scope: !3099, inlinedAt: !3555)
!4057 = !DILocation(line: 884, column: 45, scope: !3099, inlinedAt: !3555)
!4058 = !DILocation(line: 884, column: 16, scope: !3099, inlinedAt: !3555)
!4059 = !DILocation(line: 884, column: 5, scope: !3099, inlinedAt: !3555)
!4060 = !DILocation(line: 884, column: 8, scope: !3099, inlinedAt: !3555)
!4061 = !DILocation(line: 884, column: 24, scope: !3099, inlinedAt: !3555)
!4062 = !DILocation(line: 886, column: 23, scope: !3099, inlinedAt: !3555)
!4063 = !DILocation(line: 886, column: 12, scope: !3099, inlinedAt: !3555)
!4064 = !DILocation(line: 886, column: 15, scope: !3099, inlinedAt: !3555)
!4065 = !DILocation(line: 886, column: 5, scope: !3099, inlinedAt: !3555)
!4066 = !DILocation(line: 887, column: 1, scope: !3099, inlinedAt: !3555)
!4067 = !DILocation(line: 969, column: 14, scope: !3556)
!4068 = !DILocation(line: 969, column: 23, scope: !3556)
!4069 = !DILocation(line: 971, column: 21, scope: !3556)
!4070 = !DILocation(line: 972, column: 37, scope: !3556)
!4071 = !DILocation(line: 972, column: 40, scope: !3556)
!4072 = !DILocation(line: 973, column: 37, scope: !3556)
!4073 = !DILocation(line: 973, column: 44, scope: !3556)
!4074 = !DILocation(line: 972, column: 25, scope: !3556)
!4075 = !DILocation(line: 852, column: 31, scope: !3099, inlinedAt: !3581)
!4076 = !DILocation(line: 852, column: 22, scope: !3099, inlinedAt: !3581)
!4077 = !DILocation(line: 852, column: 25, scope: !3099, inlinedAt: !3581)
!4078 = !DILocation(line: 852, column: 12, scope: !3099, inlinedAt: !3581)
!4079 = !DILocation(line: 852, column: 5, scope: !3099, inlinedAt: !3581)
!4080 = !DILocation(line: 852, column: 8, scope: !3099, inlinedAt: !3581)
!4081 = !DILocation(line: 852, column: 20, scope: !3099, inlinedAt: !3581)
!4082 = !DILocation(line: 853, column: 33, scope: !3099, inlinedAt: !3581)
!4083 = !DILocation(line: 853, column: 22, scope: !3099, inlinedAt: !3581)
!4084 = !DILocation(line: 853, column: 25, scope: !3099, inlinedAt: !3581)
!4085 = !DILocation(line: 853, column: 12, scope: !3099, inlinedAt: !3581)
!4086 = !DILocation(line: 853, column: 5, scope: !3099, inlinedAt: !3581)
!4087 = !DILocation(line: 853, column: 8, scope: !3099, inlinedAt: !3581)
!4088 = !DILocation(line: 853, column: 20, scope: !3099, inlinedAt: !3581)
!4089 = !DILocation(line: 854, column: 9, scope: !3323, inlinedAt: !3581)
!4090 = !DILocation(line: 854, column: 12, scope: !3323, inlinedAt: !3581)
!4091 = !DILocation(line: 854, column: 25, scope: !3323, inlinedAt: !3581)
!4092 = !DILocation(line: 854, column: 23, scope: !3323, inlinedAt: !3581)
!4093 = !DILocation(line: 854, column: 9, scope: !3099, inlinedAt: !3581)
!4094 = !DILocation(line: 855, column: 23, scope: !3329, inlinedAt: !3581)
!4095 = !DILocation(line: 855, column: 44, scope: !3329, inlinedAt: !3581)
!4096 = !DILocation(line: 855, column: 33, scope: !3329, inlinedAt: !3581)
!4097 = !DILocation(line: 855, column: 36, scope: !3329, inlinedAt: !3581)
!4098 = !DILocation(line: 855, column: 31, scope: !3329, inlinedAt: !3581)
!4099 = !DILocation(line: 855, column: 21, scope: !3329, inlinedAt: !3581)
!4100 = !DILocation(line: 856, column: 28, scope: !3329, inlinedAt: !3581)
!4101 = !DILocation(line: 856, column: 18, scope: !3329, inlinedAt: !3581)
!4102 = !DILocation(line: 856, column: 9, scope: !3329, inlinedAt: !3581)
!4103 = !DILocation(line: 856, column: 12, scope: !3329, inlinedAt: !3581)
!4104 = !DILocation(line: 856, column: 26, scope: !3329, inlinedAt: !3581)
!4105 = !DILocation(line: 857, column: 30, scope: !3329, inlinedAt: !3581)
!4106 = !DILocation(line: 857, column: 20, scope: !3329, inlinedAt: !3581)
!4107 = !DILocation(line: 857, column: 9, scope: !3329, inlinedAt: !3581)
!4108 = !DILocation(line: 857, column: 12, scope: !3329, inlinedAt: !3581)
!4109 = !DILocation(line: 857, column: 28, scope: !3329, inlinedAt: !3581)
!4110 = !DILocation(line: 858, column: 30, scope: !3329, inlinedAt: !3581)
!4111 = !DILocation(line: 858, column: 20, scope: !3329, inlinedAt: !3581)
!4112 = !DILocation(line: 858, column: 9, scope: !3329, inlinedAt: !3581)
!4113 = !DILocation(line: 858, column: 12, scope: !3329, inlinedAt: !3581)
!4114 = !DILocation(line: 858, column: 28, scope: !3329, inlinedAt: !3581)
!4115 = !DILocation(line: 859, column: 16, scope: !3329, inlinedAt: !3581)
!4116 = !DILocation(line: 859, column: 9, scope: !3329, inlinedAt: !3581)
!4117 = !DILocation(line: 861, column: 17, scope: !3099, inlinedAt: !3581)
!4118 = !DILocation(line: 861, column: 10, scope: !3099, inlinedAt: !3581)
!4119 = !DILocation(line: 861, column: 13, scope: !3099, inlinedAt: !3581)
!4120 = !DILocation(line: 861, column: 8, scope: !3099, inlinedAt: !3581)
!4121 = !DILocation(line: 862, column: 18, scope: !3099, inlinedAt: !3581)
!4122 = !DILocation(line: 862, column: 11, scope: !3099, inlinedAt: !3581)
!4123 = !DILocation(line: 862, column: 14, scope: !3099, inlinedAt: !3581)
!4124 = !DILocation(line: 862, column: 35, scope: !3099, inlinedAt: !3581)
!4125 = !DILocation(line: 862, column: 42, scope: !3099, inlinedAt: !3581)
!4126 = !DILocation(line: 862, column: 28, scope: !3099, inlinedAt: !3581)
!4127 = !DILocation(line: 862, column: 31, scope: !3099, inlinedAt: !3581)
!4128 = !DILocation(line: 862, column: 26, scope: !3099, inlinedAt: !3581)
!4129 = !DILocation(line: 862, column: 48, scope: !3099, inlinedAt: !3581)
!4130 = !DILocation(line: 862, column: 8, scope: !3099, inlinedAt: !3581)
!4131 = !DILocation(line: 863, column: 17, scope: !3099, inlinedAt: !3581)
!4132 = !DILocation(line: 863, column: 10, scope: !3099, inlinedAt: !3581)
!4133 = !DILocation(line: 863, column: 13, scope: !3099, inlinedAt: !3581)
!4134 = !DILocation(line: 863, column: 36, scope: !3099, inlinedAt: !3581)
!4135 = !DILocation(line: 863, column: 43, scope: !3099, inlinedAt: !3581)
!4136 = !DILocation(line: 863, column: 29, scope: !3099, inlinedAt: !3581)
!4137 = !DILocation(line: 863, column: 32, scope: !3099, inlinedAt: !3581)
!4138 = !DILocation(line: 863, column: 57, scope: !3099, inlinedAt: !3581)
!4139 = !DILocation(line: 863, column: 64, scope: !3099, inlinedAt: !3581)
!4140 = !DILocation(line: 863, column: 50, scope: !3099, inlinedAt: !3581)
!4141 = !DILocation(line: 863, column: 53, scope: !3099, inlinedAt: !3581)
!4142 = !DILocation(line: 863, column: 48, scope: !3099, inlinedAt: !3581)
!4143 = !DILocation(line: 863, column: 70, scope: !3099, inlinedAt: !3581)
!4144 = !DILocation(line: 863, column: 25, scope: !3099, inlinedAt: !3581)
!4145 = !DILocation(line: 863, column: 8, scope: !3099, inlinedAt: !3581)
!4146 = !DILocation(line: 864, column: 17, scope: !3099, inlinedAt: !3581)
!4147 = !DILocation(line: 864, column: 10, scope: !3099, inlinedAt: !3581)
!4148 = !DILocation(line: 864, column: 13, scope: !3099, inlinedAt: !3581)
!4149 = !DILocation(line: 864, column: 25, scope: !3099, inlinedAt: !3581)
!4150 = !DILocation(line: 864, column: 38, scope: !3099, inlinedAt: !3581)
!4151 = !DILocation(line: 864, column: 45, scope: !3099, inlinedAt: !3581)
!4152 = !DILocation(line: 864, column: 31, scope: !3099, inlinedAt: !3581)
!4153 = !DILocation(line: 864, column: 34, scope: !3099, inlinedAt: !3581)
!4154 = !DILocation(line: 864, column: 29, scope: !3099, inlinedAt: !3581)
!4155 = !DILocation(line: 864, column: 8, scope: !3099, inlinedAt: !3581)
!4156 = !DILocation(line: 865, column: 17, scope: !3099, inlinedAt: !3581)
!4157 = !DILocation(line: 865, column: 10, scope: !3099, inlinedAt: !3581)
!4158 = !DILocation(line: 865, column: 13, scope: !3099, inlinedAt: !3581)
!4159 = !DILocation(line: 865, column: 8, scope: !3099, inlinedAt: !3581)
!4160 = !DILocation(line: 867, column: 19, scope: !3099, inlinedAt: !3581)
!4161 = !DILocation(line: 867, column: 35, scope: !3099, inlinedAt: !3581)
!4162 = !DILocation(line: 867, column: 24, scope: !3099, inlinedAt: !3581)
!4163 = !DILocation(line: 867, column: 27, scope: !3099, inlinedAt: !3581)
!4164 = !DILocation(line: 867, column: 22, scope: !3099, inlinedAt: !3581)
!4165 = !DILocation(line: 868, column: 19, scope: !3099, inlinedAt: !3581)
!4166 = !DILocation(line: 868, column: 35, scope: !3099, inlinedAt: !3581)
!4167 = !DILocation(line: 868, column: 24, scope: !3099, inlinedAt: !3581)
!4168 = !DILocation(line: 868, column: 27, scope: !3099, inlinedAt: !3581)
!4169 = !DILocation(line: 868, column: 22, scope: !3099, inlinedAt: !3581)
!4170 = !DILocation(line: 867, column: 46, scope: !3099, inlinedAt: !3581)
!4171 = !DILocation(line: 869, column: 19, scope: !3099, inlinedAt: !3581)
!4172 = !DILocation(line: 869, column: 35, scope: !3099, inlinedAt: !3581)
!4173 = !DILocation(line: 869, column: 24, scope: !3099, inlinedAt: !3581)
!4174 = !DILocation(line: 869, column: 27, scope: !3099, inlinedAt: !3581)
!4175 = !DILocation(line: 869, column: 22, scope: !3099, inlinedAt: !3581)
!4176 = !DILocation(line: 868, column: 46, scope: !3099, inlinedAt: !3581)
!4177 = !DILocation(line: 867, column: 17, scope: !3099, inlinedAt: !3581)
!4178 = !DILocation(line: 871, column: 20, scope: !3099, inlinedAt: !3581)
!4179 = !DILocation(line: 871, column: 12, scope: !3099, inlinedAt: !3581)
!4180 = !DILocation(line: 871, column: 10, scope: !3099, inlinedAt: !3581)
!4181 = !DILocation(line: 872, column: 33, scope: !3099, inlinedAt: !3581)
!4182 = !DILocation(line: 872, column: 36, scope: !3099, inlinedAt: !3581)
!4183 = !DILocation(line: 872, column: 43, scope: !3099, inlinedAt: !3581)
!4184 = !DILocation(line: 872, column: 48, scope: !3099, inlinedAt: !3581)
!4185 = !DILocation(line: 872, column: 55, scope: !3099, inlinedAt: !3581)
!4186 = !DILocation(line: 872, column: 53, scope: !3099, inlinedAt: !3581)
!4187 = !DILocation(line: 872, column: 16, scope: !3099, inlinedAt: !3581)
!4188 = !DILocation(line: 872, column: 5, scope: !3099, inlinedAt: !3581)
!4189 = !DILocation(line: 872, column: 8, scope: !3099, inlinedAt: !3581)
!4190 = !DILocation(line: 872, column: 27, scope: !3099, inlinedAt: !3581)
!4191 = !DILocation(line: 873, column: 33, scope: !3099, inlinedAt: !3581)
!4192 = !DILocation(line: 873, column: 36, scope: !3099, inlinedAt: !3581)
!4193 = !DILocation(line: 873, column: 43, scope: !3099, inlinedAt: !3581)
!4194 = !DILocation(line: 873, column: 48, scope: !3099, inlinedAt: !3581)
!4195 = !DILocation(line: 873, column: 55, scope: !3099, inlinedAt: !3581)
!4196 = !DILocation(line: 873, column: 53, scope: !3099, inlinedAt: !3581)
!4197 = !DILocation(line: 873, column: 16, scope: !3099, inlinedAt: !3581)
!4198 = !DILocation(line: 873, column: 5, scope: !3099, inlinedAt: !3581)
!4199 = !DILocation(line: 873, column: 8, scope: !3099, inlinedAt: !3581)
!4200 = !DILocation(line: 873, column: 27, scope: !3099, inlinedAt: !3581)
!4201 = !DILocation(line: 874, column: 33, scope: !3099, inlinedAt: !3581)
!4202 = !DILocation(line: 874, column: 36, scope: !3099, inlinedAt: !3581)
!4203 = !DILocation(line: 874, column: 43, scope: !3099, inlinedAt: !3581)
!4204 = !DILocation(line: 874, column: 48, scope: !3099, inlinedAt: !3581)
!4205 = !DILocation(line: 874, column: 55, scope: !3099, inlinedAt: !3581)
!4206 = !DILocation(line: 874, column: 53, scope: !3099, inlinedAt: !3581)
!4207 = !DILocation(line: 874, column: 16, scope: !3099, inlinedAt: !3581)
!4208 = !DILocation(line: 874, column: 5, scope: !3099, inlinedAt: !3581)
!4209 = !DILocation(line: 874, column: 8, scope: !3099, inlinedAt: !3581)
!4210 = !DILocation(line: 874, column: 27, scope: !3099, inlinedAt: !3581)
!4211 = !DILocation(line: 876, column: 19, scope: !3099, inlinedAt: !3581)
!4212 = !DILocation(line: 876, column: 35, scope: !3099, inlinedAt: !3581)
!4213 = !DILocation(line: 876, column: 24, scope: !3099, inlinedAt: !3581)
!4214 = !DILocation(line: 876, column: 27, scope: !3099, inlinedAt: !3581)
!4215 = !DILocation(line: 876, column: 22, scope: !3099, inlinedAt: !3581)
!4216 = !DILocation(line: 877, column: 19, scope: !3099, inlinedAt: !3581)
!4217 = !DILocation(line: 877, column: 35, scope: !3099, inlinedAt: !3581)
!4218 = !DILocation(line: 877, column: 24, scope: !3099, inlinedAt: !3581)
!4219 = !DILocation(line: 877, column: 27, scope: !3099, inlinedAt: !3581)
!4220 = !DILocation(line: 877, column: 22, scope: !3099, inlinedAt: !3581)
!4221 = !DILocation(line: 876, column: 46, scope: !3099, inlinedAt: !3581)
!4222 = !DILocation(line: 876, column: 17, scope: !3099, inlinedAt: !3581)
!4223 = !DILocation(line: 878, column: 24, scope: !3099, inlinedAt: !3581)
!4224 = !DILocation(line: 878, column: 35, scope: !3099, inlinedAt: !3581)
!4225 = !DILocation(line: 878, column: 47, scope: !3099, inlinedAt: !3581)
!4226 = !DILocation(line: 878, column: 32, scope: !3099, inlinedAt: !3581)
!4227 = !DILocation(line: 878, column: 14, scope: !3099, inlinedAt: !3581)
!4228 = !DILocation(line: 878, column: 5, scope: !3099, inlinedAt: !3581)
!4229 = !DILocation(line: 878, column: 8, scope: !3099, inlinedAt: !3581)
!4230 = !DILocation(line: 878, column: 22, scope: !3099, inlinedAt: !3581)
!4231 = !DILocation(line: 879, column: 29, scope: !3099, inlinedAt: !3581)
!4232 = !DILocation(line: 879, column: 20, scope: !3099, inlinedAt: !3581)
!4233 = !DILocation(line: 879, column: 23, scope: !3099, inlinedAt: !3581)
!4234 = !DILocation(line: 879, column: 12, scope: !3099, inlinedAt: !3581)
!4235 = !DILocation(line: 879, column: 10, scope: !3099, inlinedAt: !3581)
!4236 = !DILocation(line: 880, column: 33, scope: !3099, inlinedAt: !3581)
!4237 = !DILocation(line: 880, column: 36, scope: !3099, inlinedAt: !3581)
!4238 = !DILocation(line: 880, column: 43, scope: !3099, inlinedAt: !3581)
!4239 = !DILocation(line: 880, column: 48, scope: !3099, inlinedAt: !3581)
!4240 = !DILocation(line: 880, column: 55, scope: !3099, inlinedAt: !3581)
!4241 = !DILocation(line: 880, column: 53, scope: !3099, inlinedAt: !3581)
!4242 = !DILocation(line: 880, column: 16, scope: !3099, inlinedAt: !3581)
!4243 = !DILocation(line: 880, column: 5, scope: !3099, inlinedAt: !3581)
!4244 = !DILocation(line: 880, column: 8, scope: !3099, inlinedAt: !3581)
!4245 = !DILocation(line: 880, column: 27, scope: !3099, inlinedAt: !3581)
!4246 = !DILocation(line: 881, column: 33, scope: !3099, inlinedAt: !3581)
!4247 = !DILocation(line: 881, column: 36, scope: !3099, inlinedAt: !3581)
!4248 = !DILocation(line: 881, column: 43, scope: !3099, inlinedAt: !3581)
!4249 = !DILocation(line: 881, column: 48, scope: !3099, inlinedAt: !3581)
!4250 = !DILocation(line: 881, column: 55, scope: !3099, inlinedAt: !3581)
!4251 = !DILocation(line: 881, column: 53, scope: !3099, inlinedAt: !3581)
!4252 = !DILocation(line: 881, column: 16, scope: !3099, inlinedAt: !3581)
!4253 = !DILocation(line: 881, column: 5, scope: !3099, inlinedAt: !3581)
!4254 = !DILocation(line: 881, column: 8, scope: !3099, inlinedAt: !3581)
!4255 = !DILocation(line: 881, column: 27, scope: !3099, inlinedAt: !3581)
!4256 = !DILocation(line: 883, column: 35, scope: !3099, inlinedAt: !3581)
!4257 = !DILocation(line: 883, column: 26, scope: !3099, inlinedAt: !3581)
!4258 = !DILocation(line: 883, column: 29, scope: !3099, inlinedAt: !3581)
!4259 = !DILocation(line: 883, column: 46, scope: !3099, inlinedAt: !3581)
!4260 = !DILocation(line: 883, column: 61, scope: !3099, inlinedAt: !3581)
!4261 = !DILocation(line: 883, column: 58, scope: !3099, inlinedAt: !3581)
!4262 = !DILocation(line: 883, column: 43, scope: !3099, inlinedAt: !3581)
!4263 = !DILocation(line: 883, column: 16, scope: !3099, inlinedAt: !3581)
!4264 = !DILocation(line: 883, column: 5, scope: !3099, inlinedAt: !3581)
!4265 = !DILocation(line: 883, column: 8, scope: !3099, inlinedAt: !3581)
!4266 = !DILocation(line: 883, column: 24, scope: !3099, inlinedAt: !3581)
!4267 = !DILocation(line: 884, column: 37, scope: !3099, inlinedAt: !3581)
!4268 = !DILocation(line: 884, column: 26, scope: !3099, inlinedAt: !3581)
!4269 = !DILocation(line: 884, column: 29, scope: !3099, inlinedAt: !3581)
!4270 = !DILocation(line: 884, column: 60, scope: !3099, inlinedAt: !3581)
!4271 = !DILocation(line: 884, column: 49, scope: !3099, inlinedAt: !3581)
!4272 = !DILocation(line: 884, column: 52, scope: !3099, inlinedAt: !3581)
!4273 = !DILocation(line: 884, column: 68, scope: !3099, inlinedAt: !3581)
!4274 = !DILocation(line: 884, column: 74, scope: !3099, inlinedAt: !3581)
!4275 = !DILocation(line: 884, column: 45, scope: !3099, inlinedAt: !3581)
!4276 = !DILocation(line: 884, column: 16, scope: !3099, inlinedAt: !3581)
!4277 = !DILocation(line: 884, column: 5, scope: !3099, inlinedAt: !3581)
!4278 = !DILocation(line: 884, column: 8, scope: !3099, inlinedAt: !3581)
!4279 = !DILocation(line: 884, column: 24, scope: !3099, inlinedAt: !3581)
!4280 = !DILocation(line: 886, column: 23, scope: !3099, inlinedAt: !3581)
!4281 = !DILocation(line: 886, column: 12, scope: !3099, inlinedAt: !3581)
!4282 = !DILocation(line: 886, column: 15, scope: !3099, inlinedAt: !3581)
!4283 = !DILocation(line: 886, column: 5, scope: !3099, inlinedAt: !3581)
!4284 = !DILocation(line: 887, column: 1, scope: !3099, inlinedAt: !3581)
!4285 = !DILocation(line: 972, column: 14, scope: !3556)
!4286 = !DILocation(line: 972, column: 23, scope: !3556)
!4287 = !DILocation(line: 974, column: 21, scope: !3556)
!4288 = !DILocation(line: 978, column: 9, scope: !3558)
!4289 = !DILocation(line: 978, column: 12, scope: !3558)
!4290 = !DILocation(line: 978, column: 15, scope: !3558)
!4291 = !DILocation(line: 979, column: 9, scope: !3558)
!4292 = !DILocation(line: 979, column: 12, scope: !3558)
!4293 = !DILocation(line: 979, column: 22, scope: !3558)
!4294 = !DILocation(line: 982, column: 13, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !3558, file: !910, line: 982, column: 13)
!4296 = !DILocation(line: 982, column: 16, scope: !4295)
!4297 = !DILocation(line: 982, column: 23, scope: !4295)
!4298 = !DILocation(line: 982, column: 26, scope: !4295)
!4299 = !DILocation(line: 982, column: 40, scope: !4295)
!4300 = !DILocation(line: 982, column: 20, scope: !4295)
!4301 = !DILocation(line: 982, column: 13, scope: !3558)
!4302 = !DILocation(line: 983, column: 21, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4295, file: !910, line: 982, column: 47)
!4304 = !DILocation(line: 983, column: 24, scope: !4303)
!4305 = !DILocation(line: 983, column: 13, scope: !4303)
!4306 = !DILocation(line: 983, column: 39, scope: !4303)
!4307 = !DILocation(line: 983, column: 42, scope: !4303)
!4308 = !DILocation(line: 985, column: 22, scope: !4303)
!4309 = !DILocation(line: 985, column: 25, scope: !4303)
!4310 = !DILocation(line: 985, column: 13, scope: !4303)
!4311 = !DILocation(line: 985, column: 16, scope: !4303)
!4312 = !DILocation(line: 985, column: 20, scope: !4303)
!4313 = !DILocation(line: 986, column: 9, scope: !4303)
!4314 = !DILocation(line: 961, column: 5, scope: !4315)
!4315 = !DILexicalBlockFile(scope: !3553, file: !910, discriminator: 2)
!4316 = distinct !{!4316, !3683}
!4317 = !DILocation(line: 988, column: 1, scope: !3553)
!4318 = distinct !DISubprogram(name: "predictor_decode_mono_3930", scope: !910, file: !910, line: 1093, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1094, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!4319 = !DILocalVariable(name: "p", arg: 1, scope: !4320, file: !910, line: 1035, type: !3102)
!4320 = distinct !DISubprogram(name: "predictor_update_3930", scope: !910, file: !910, line: 1035, type: !3138, isLocal: true, isDefinition: true, scopeLine: 1038, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!4321 = !DILocation(line: 1035, column: 86, scope: !4320, inlinedAt: !4322)
!4322 = distinct !DILocation(line: 1101, column: 21, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !910, line: 1100, column: 21)
!4324 = !DILocalVariable(name: "decoded", arg: 2, scope: !4320, file: !910, line: 1036, type: !976)
!4325 = !DILocation(line: 1036, column: 61, scope: !4320, inlinedAt: !4322)
!4326 = !DILocalVariable(name: "filter", arg: 3, scope: !4320, file: !910, line: 1036, type: !976)
!4327 = !DILocation(line: 1036, column: 80, scope: !4320, inlinedAt: !4322)
!4328 = !DILocalVariable(name: "delayA", arg: 4, scope: !4320, file: !910, line: 1037, type: !976)
!4329 = !DILocation(line: 1037, column: 61, scope: !4320, inlinedAt: !4322)
!4330 = !DILocalVariable(name: "predictionA", scope: !4320, file: !910, line: 1039, type: !948)
!4331 = !DILocation(line: 1039, column: 13, scope: !4320, inlinedAt: !4322)
!4332 = !DILocalVariable(name: "sign", scope: !4320, file: !910, line: 1039, type: !948)
!4333 = !DILocation(line: 1039, column: 26, scope: !4320, inlinedAt: !4322)
!4334 = !DILocalVariable(name: "d0", scope: !4320, file: !910, line: 1040, type: !948)
!4335 = !DILocation(line: 1040, column: 13, scope: !4320, inlinedAt: !4322)
!4336 = !DILocalVariable(name: "d1", scope: !4320, file: !910, line: 1040, type: !948)
!4337 = !DILocation(line: 1040, column: 17, scope: !4320, inlinedAt: !4322)
!4338 = !DILocalVariable(name: "d2", scope: !4320, file: !910, line: 1040, type: !948)
!4339 = !DILocation(line: 1040, column: 21, scope: !4320, inlinedAt: !4322)
!4340 = !DILocalVariable(name: "d3", scope: !4320, file: !910, line: 1040, type: !948)
!4341 = !DILocation(line: 1040, column: 25, scope: !4320, inlinedAt: !4322)
!4342 = !DILocalVariable(name: "ctx", arg: 1, scope: !4318, file: !910, line: 1093, type: !1750)
!4343 = !DILocation(line: 1093, column: 52, scope: !4318)
!4344 = !DILocalVariable(name: "count", arg: 2, scope: !4318, file: !910, line: 1093, type: !918)
!4345 = !DILocation(line: 1093, column: 61, scope: !4318)
!4346 = !DILocalVariable(name: "p", scope: !4318, file: !910, line: 1095, type: !3102)
!4347 = !DILocation(line: 1095, column: 19, scope: !4318)
!4348 = !DILocation(line: 1095, column: 24, scope: !4318)
!4349 = !DILocation(line: 1095, column: 29, scope: !4318)
!4350 = !DILocalVariable(name: "decoded0", scope: !4318, file: !910, line: 1096, type: !947)
!4351 = !DILocation(line: 1096, column: 14, scope: !4318)
!4352 = !DILocation(line: 1096, column: 25, scope: !4318)
!4353 = !DILocation(line: 1096, column: 30, scope: !4318)
!4354 = !DILocation(line: 1098, column: 23, scope: !4318)
!4355 = !DILocation(line: 1098, column: 28, scope: !4318)
!4356 = !DILocation(line: 1098, column: 33, scope: !4318)
!4357 = !DILocation(line: 1098, column: 50, scope: !4318)
!4358 = !DILocation(line: 1098, column: 5, scope: !4318)
!4359 = !DILocation(line: 1100, column: 5, scope: !4318)
!4360 = !DILocation(line: 1100, column: 17, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4318, file: !910, discriminator: 1)
!4362 = !DILocation(line: 1100, column: 5, scope: !4361)
!4363 = !DILocation(line: 1101, column: 43, scope: !4323)
!4364 = !DILocation(line: 1101, column: 47, scope: !4323)
!4365 = !DILocation(line: 1101, column: 46, scope: !4323)
!4366 = !DILocation(line: 1101, column: 21, scope: !4323)
!4367 = !DILocation(line: 1042, column: 31, scope: !4320, inlinedAt: !4322)
!4368 = !DILocation(line: 1042, column: 22, scope: !4320, inlinedAt: !4322)
!4369 = !DILocation(line: 1042, column: 25, scope: !4320, inlinedAt: !4322)
!4370 = !DILocation(line: 1042, column: 12, scope: !4320, inlinedAt: !4322)
!4371 = !DILocation(line: 1042, column: 5, scope: !4320, inlinedAt: !4322)
!4372 = !DILocation(line: 1042, column: 8, scope: !4320, inlinedAt: !4322)
!4373 = !DILocation(line: 1042, column: 20, scope: !4320, inlinedAt: !4322)
!4374 = !DILocation(line: 1043, column: 17, scope: !4320, inlinedAt: !4322)
!4375 = !DILocation(line: 1043, column: 10, scope: !4320, inlinedAt: !4322)
!4376 = !DILocation(line: 1043, column: 13, scope: !4320, inlinedAt: !4322)
!4377 = !DILocation(line: 1043, column: 8, scope: !4320, inlinedAt: !4322)
!4378 = !DILocation(line: 1044, column: 17, scope: !4320, inlinedAt: !4322)
!4379 = !DILocation(line: 1044, column: 10, scope: !4320, inlinedAt: !4322)
!4380 = !DILocation(line: 1044, column: 13, scope: !4320, inlinedAt: !4322)
!4381 = !DILocation(line: 1044, column: 35, scope: !4320, inlinedAt: !4322)
!4382 = !DILocation(line: 1044, column: 42, scope: !4320, inlinedAt: !4322)
!4383 = !DILocation(line: 1044, column: 28, scope: !4320, inlinedAt: !4322)
!4384 = !DILocation(line: 1044, column: 31, scope: !4320, inlinedAt: !4322)
!4385 = !DILocation(line: 1044, column: 26, scope: !4320, inlinedAt: !4322)
!4386 = !DILocation(line: 1044, column: 8, scope: !4320, inlinedAt: !4322)
!4387 = !DILocation(line: 1045, column: 17, scope: !4320, inlinedAt: !4322)
!4388 = !DILocation(line: 1045, column: 24, scope: !4320, inlinedAt: !4322)
!4389 = !DILocation(line: 1045, column: 10, scope: !4320, inlinedAt: !4322)
!4390 = !DILocation(line: 1045, column: 13, scope: !4320, inlinedAt: !4322)
!4391 = !DILocation(line: 1045, column: 38, scope: !4320, inlinedAt: !4322)
!4392 = !DILocation(line: 1045, column: 45, scope: !4320, inlinedAt: !4322)
!4393 = !DILocation(line: 1045, column: 31, scope: !4320, inlinedAt: !4322)
!4394 = !DILocation(line: 1045, column: 34, scope: !4320, inlinedAt: !4322)
!4395 = !DILocation(line: 1045, column: 29, scope: !4320, inlinedAt: !4322)
!4396 = !DILocation(line: 1045, column: 8, scope: !4320, inlinedAt: !4322)
!4397 = !DILocation(line: 1046, column: 17, scope: !4320, inlinedAt: !4322)
!4398 = !DILocation(line: 1046, column: 24, scope: !4320, inlinedAt: !4322)
!4399 = !DILocation(line: 1046, column: 10, scope: !4320, inlinedAt: !4322)
!4400 = !DILocation(line: 1046, column: 13, scope: !4320, inlinedAt: !4322)
!4401 = !DILocation(line: 1046, column: 38, scope: !4320, inlinedAt: !4322)
!4402 = !DILocation(line: 1046, column: 45, scope: !4320, inlinedAt: !4322)
!4403 = !DILocation(line: 1046, column: 31, scope: !4320, inlinedAt: !4322)
!4404 = !DILocation(line: 1046, column: 34, scope: !4320, inlinedAt: !4322)
!4405 = !DILocation(line: 1046, column: 29, scope: !4320, inlinedAt: !4322)
!4406 = !DILocation(line: 1046, column: 8, scope: !4320, inlinedAt: !4322)
!4407 = !DILocation(line: 1048, column: 19, scope: !4320, inlinedAt: !4322)
!4408 = !DILocation(line: 1048, column: 35, scope: !4320, inlinedAt: !4322)
!4409 = !DILocation(line: 1048, column: 24, scope: !4320, inlinedAt: !4322)
!4410 = !DILocation(line: 1048, column: 27, scope: !4320, inlinedAt: !4322)
!4411 = !DILocation(line: 1048, column: 22, scope: !4320, inlinedAt: !4322)
!4412 = !DILocation(line: 1049, column: 19, scope: !4320, inlinedAt: !4322)
!4413 = !DILocation(line: 1049, column: 35, scope: !4320, inlinedAt: !4322)
!4414 = !DILocation(line: 1049, column: 24, scope: !4320, inlinedAt: !4322)
!4415 = !DILocation(line: 1049, column: 27, scope: !4320, inlinedAt: !4322)
!4416 = !DILocation(line: 1049, column: 22, scope: !4320, inlinedAt: !4322)
!4417 = !DILocation(line: 1048, column: 46, scope: !4320, inlinedAt: !4322)
!4418 = !DILocation(line: 1050, column: 19, scope: !4320, inlinedAt: !4322)
!4419 = !DILocation(line: 1050, column: 35, scope: !4320, inlinedAt: !4322)
!4420 = !DILocation(line: 1050, column: 24, scope: !4320, inlinedAt: !4322)
!4421 = !DILocation(line: 1050, column: 27, scope: !4320, inlinedAt: !4322)
!4422 = !DILocation(line: 1050, column: 22, scope: !4320, inlinedAt: !4322)
!4423 = !DILocation(line: 1049, column: 46, scope: !4320, inlinedAt: !4322)
!4424 = !DILocation(line: 1051, column: 19, scope: !4320, inlinedAt: !4322)
!4425 = !DILocation(line: 1051, column: 35, scope: !4320, inlinedAt: !4322)
!4426 = !DILocation(line: 1051, column: 24, scope: !4320, inlinedAt: !4322)
!4427 = !DILocation(line: 1051, column: 27, scope: !4320, inlinedAt: !4322)
!4428 = !DILocation(line: 1051, column: 22, scope: !4320, inlinedAt: !4322)
!4429 = !DILocation(line: 1050, column: 46, scope: !4320, inlinedAt: !4322)
!4430 = !DILocation(line: 1048, column: 17, scope: !4320, inlinedAt: !4322)
!4431 = !DILocation(line: 1053, column: 24, scope: !4320, inlinedAt: !4322)
!4432 = !DILocation(line: 1053, column: 35, scope: !4320, inlinedAt: !4322)
!4433 = !DILocation(line: 1053, column: 47, scope: !4320, inlinedAt: !4322)
!4434 = !DILocation(line: 1053, column: 32, scope: !4320, inlinedAt: !4322)
!4435 = !DILocation(line: 1053, column: 14, scope: !4320, inlinedAt: !4322)
!4436 = !DILocation(line: 1053, column: 5, scope: !4320, inlinedAt: !4322)
!4437 = !DILocation(line: 1053, column: 8, scope: !4320, inlinedAt: !4322)
!4438 = !DILocation(line: 1053, column: 22, scope: !4320, inlinedAt: !4322)
!4439 = !DILocation(line: 1054, column: 35, scope: !4320, inlinedAt: !4322)
!4440 = !DILocation(line: 1054, column: 26, scope: !4320, inlinedAt: !4322)
!4441 = !DILocation(line: 1054, column: 29, scope: !4320, inlinedAt: !4322)
!4442 = !DILocation(line: 1054, column: 58, scope: !4320, inlinedAt: !4322)
!4443 = !DILocation(line: 1054, column: 47, scope: !4320, inlinedAt: !4322)
!4444 = !DILocation(line: 1054, column: 50, scope: !4320, inlinedAt: !4322)
!4445 = !DILocation(line: 1054, column: 66, scope: !4320, inlinedAt: !4322)
!4446 = !DILocation(line: 1054, column: 72, scope: !4320, inlinedAt: !4322)
!4447 = !DILocation(line: 1054, column: 43, scope: !4320, inlinedAt: !4322)
!4448 = !DILocation(line: 1054, column: 16, scope: !4320, inlinedAt: !4322)
!4449 = !DILocation(line: 1054, column: 5, scope: !4320, inlinedAt: !4322)
!4450 = !DILocation(line: 1054, column: 8, scope: !4320, inlinedAt: !4322)
!4451 = !DILocation(line: 1054, column: 24, scope: !4320, inlinedAt: !4322)
!4452 = !DILocation(line: 1056, column: 20, scope: !4320, inlinedAt: !4322)
!4453 = !DILocation(line: 1056, column: 12, scope: !4320, inlinedAt: !4322)
!4454 = !DILocation(line: 1056, column: 10, scope: !4320, inlinedAt: !4322)
!4455 = !DILocation(line: 1057, column: 32, scope: !4320, inlinedAt: !4322)
!4456 = !DILocation(line: 1057, column: 35, scope: !4320, inlinedAt: !4322)
!4457 = !DILocation(line: 1057, column: 40, scope: !4320, inlinedAt: !4322)
!4458 = !DILocation(line: 1057, column: 44, scope: !4320, inlinedAt: !4322)
!4459 = !DILocation(line: 1057, column: 51, scope: !4320, inlinedAt: !4322)
!4460 = !DILocation(line: 1057, column: 49, scope: !4320, inlinedAt: !4322)
!4461 = !DILocation(line: 1057, column: 16, scope: !4320, inlinedAt: !4322)
!4462 = !DILocation(line: 1057, column: 5, scope: !4320, inlinedAt: !4322)
!4463 = !DILocation(line: 1057, column: 8, scope: !4320, inlinedAt: !4322)
!4464 = !DILocation(line: 1057, column: 27, scope: !4320, inlinedAt: !4322)
!4465 = !DILocation(line: 1058, column: 32, scope: !4320, inlinedAt: !4322)
!4466 = !DILocation(line: 1058, column: 35, scope: !4320, inlinedAt: !4322)
!4467 = !DILocation(line: 1058, column: 40, scope: !4320, inlinedAt: !4322)
!4468 = !DILocation(line: 1058, column: 44, scope: !4320, inlinedAt: !4322)
!4469 = !DILocation(line: 1058, column: 51, scope: !4320, inlinedAt: !4322)
!4470 = !DILocation(line: 1058, column: 49, scope: !4320, inlinedAt: !4322)
!4471 = !DILocation(line: 1058, column: 16, scope: !4320, inlinedAt: !4322)
!4472 = !DILocation(line: 1058, column: 5, scope: !4320, inlinedAt: !4322)
!4473 = !DILocation(line: 1058, column: 8, scope: !4320, inlinedAt: !4322)
!4474 = !DILocation(line: 1058, column: 27, scope: !4320, inlinedAt: !4322)
!4475 = !DILocation(line: 1059, column: 32, scope: !4320, inlinedAt: !4322)
!4476 = !DILocation(line: 1059, column: 35, scope: !4320, inlinedAt: !4322)
!4477 = !DILocation(line: 1059, column: 40, scope: !4320, inlinedAt: !4322)
!4478 = !DILocation(line: 1059, column: 44, scope: !4320, inlinedAt: !4322)
!4479 = !DILocation(line: 1059, column: 51, scope: !4320, inlinedAt: !4322)
!4480 = !DILocation(line: 1059, column: 49, scope: !4320, inlinedAt: !4322)
!4481 = !DILocation(line: 1059, column: 16, scope: !4320, inlinedAt: !4322)
!4482 = !DILocation(line: 1059, column: 5, scope: !4320, inlinedAt: !4322)
!4483 = !DILocation(line: 1059, column: 8, scope: !4320, inlinedAt: !4322)
!4484 = !DILocation(line: 1059, column: 27, scope: !4320, inlinedAt: !4322)
!4485 = !DILocation(line: 1060, column: 32, scope: !4320, inlinedAt: !4322)
!4486 = !DILocation(line: 1060, column: 35, scope: !4320, inlinedAt: !4322)
!4487 = !DILocation(line: 1060, column: 40, scope: !4320, inlinedAt: !4322)
!4488 = !DILocation(line: 1060, column: 44, scope: !4320, inlinedAt: !4322)
!4489 = !DILocation(line: 1060, column: 51, scope: !4320, inlinedAt: !4322)
!4490 = !DILocation(line: 1060, column: 49, scope: !4320, inlinedAt: !4322)
!4491 = !DILocation(line: 1060, column: 16, scope: !4320, inlinedAt: !4322)
!4492 = !DILocation(line: 1060, column: 5, scope: !4320, inlinedAt: !4322)
!4493 = !DILocation(line: 1060, column: 8, scope: !4320, inlinedAt: !4322)
!4494 = !DILocation(line: 1060, column: 27, scope: !4320, inlinedAt: !4322)
!4495 = !DILocation(line: 1062, column: 23, scope: !4320, inlinedAt: !4322)
!4496 = !DILocation(line: 1062, column: 12, scope: !4320, inlinedAt: !4322)
!4497 = !DILocation(line: 1062, column: 15, scope: !4320, inlinedAt: !4322)
!4498 = !DILocation(line: 1101, column: 10, scope: !4323)
!4499 = !DILocation(line: 1101, column: 19, scope: !4323)
!4500 = !DILocation(line: 1102, column: 17, scope: !4323)
!4501 = !DILocation(line: 1104, column: 9, scope: !4323)
!4502 = !DILocation(line: 1104, column: 12, scope: !4323)
!4503 = !DILocation(line: 1104, column: 15, scope: !4323)
!4504 = !DILocation(line: 1107, column: 13, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4323, file: !910, line: 1107, column: 13)
!4506 = !DILocation(line: 1107, column: 16, scope: !4505)
!4507 = !DILocation(line: 1107, column: 23, scope: !4505)
!4508 = !DILocation(line: 1107, column: 26, scope: !4505)
!4509 = !DILocation(line: 1107, column: 40, scope: !4505)
!4510 = !DILocation(line: 1107, column: 20, scope: !4505)
!4511 = !DILocation(line: 1107, column: 13, scope: !4323)
!4512 = !DILocation(line: 1108, column: 21, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4505, file: !910, line: 1107, column: 47)
!4514 = !DILocation(line: 1108, column: 24, scope: !4513)
!4515 = !DILocation(line: 1108, column: 13, scope: !4513)
!4516 = !DILocation(line: 1108, column: 39, scope: !4513)
!4517 = !DILocation(line: 1108, column: 42, scope: !4513)
!4518 = !DILocation(line: 1110, column: 22, scope: !4513)
!4519 = !DILocation(line: 1110, column: 25, scope: !4513)
!4520 = !DILocation(line: 1110, column: 13, scope: !4513)
!4521 = !DILocation(line: 1110, column: 16, scope: !4513)
!4522 = !DILocation(line: 1110, column: 20, scope: !4513)
!4523 = !DILocation(line: 1111, column: 9, scope: !4513)
!4524 = !DILocation(line: 1100, column: 5, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !4318, file: !910, discriminator: 2)
!4526 = distinct !{!4526, !4359}
!4527 = !DILocation(line: 1113, column: 1, scope: !4318)
!4528 = distinct !DISubprogram(name: "predictor_decode_stereo_3930", scope: !910, file: !910, line: 1065, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1066, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!4529 = !DILocation(line: 1035, column: 86, scope: !4320, inlinedAt: !4530)
!4530 = distinct !DILocation(line: 1078, column: 21, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !910, line: 1073, column: 21)
!4532 = !DILocation(line: 1036, column: 61, scope: !4320, inlinedAt: !4530)
!4533 = !DILocation(line: 1036, column: 80, scope: !4320, inlinedAt: !4530)
!4534 = !DILocation(line: 1037, column: 61, scope: !4320, inlinedAt: !4530)
!4535 = !DILocation(line: 1039, column: 13, scope: !4320, inlinedAt: !4530)
!4536 = !DILocation(line: 1039, column: 26, scope: !4320, inlinedAt: !4530)
!4537 = !DILocation(line: 1040, column: 13, scope: !4320, inlinedAt: !4530)
!4538 = !DILocation(line: 1040, column: 17, scope: !4320, inlinedAt: !4530)
!4539 = !DILocation(line: 1040, column: 21, scope: !4320, inlinedAt: !4530)
!4540 = !DILocation(line: 1040, column: 25, scope: !4320, inlinedAt: !4530)
!4541 = !DILocation(line: 1035, column: 86, scope: !4320, inlinedAt: !4542)
!4542 = distinct !DILocation(line: 1076, column: 21, scope: !4531)
!4543 = !DILocation(line: 1036, column: 61, scope: !4320, inlinedAt: !4542)
!4544 = !DILocation(line: 1036, column: 80, scope: !4320, inlinedAt: !4542)
!4545 = !DILocation(line: 1037, column: 61, scope: !4320, inlinedAt: !4542)
!4546 = !DILocation(line: 1039, column: 13, scope: !4320, inlinedAt: !4542)
!4547 = !DILocation(line: 1039, column: 26, scope: !4320, inlinedAt: !4542)
!4548 = !DILocation(line: 1040, column: 13, scope: !4320, inlinedAt: !4542)
!4549 = !DILocation(line: 1040, column: 17, scope: !4320, inlinedAt: !4542)
!4550 = !DILocation(line: 1040, column: 21, scope: !4320, inlinedAt: !4542)
!4551 = !DILocation(line: 1040, column: 25, scope: !4320, inlinedAt: !4542)
!4552 = !DILocalVariable(name: "ctx", arg: 1, scope: !4528, file: !910, line: 1065, type: !1750)
!4553 = !DILocation(line: 1065, column: 54, scope: !4528)
!4554 = !DILocalVariable(name: "count", arg: 2, scope: !4528, file: !910, line: 1065, type: !918)
!4555 = !DILocation(line: 1065, column: 63, scope: !4528)
!4556 = !DILocalVariable(name: "p", scope: !4528, file: !910, line: 1067, type: !3102)
!4557 = !DILocation(line: 1067, column: 19, scope: !4528)
!4558 = !DILocation(line: 1067, column: 24, scope: !4528)
!4559 = !DILocation(line: 1067, column: 29, scope: !4528)
!4560 = !DILocalVariable(name: "decoded0", scope: !4528, file: !910, line: 1068, type: !947)
!4561 = !DILocation(line: 1068, column: 14, scope: !4528)
!4562 = !DILocation(line: 1068, column: 25, scope: !4528)
!4563 = !DILocation(line: 1068, column: 30, scope: !4528)
!4564 = !DILocalVariable(name: "decoded1", scope: !4528, file: !910, line: 1069, type: !947)
!4565 = !DILocation(line: 1069, column: 14, scope: !4528)
!4566 = !DILocation(line: 1069, column: 25, scope: !4528)
!4567 = !DILocation(line: 1069, column: 30, scope: !4528)
!4568 = !DILocation(line: 1071, column: 23, scope: !4528)
!4569 = !DILocation(line: 1071, column: 28, scope: !4528)
!4570 = !DILocation(line: 1071, column: 33, scope: !4528)
!4571 = !DILocation(line: 1071, column: 45, scope: !4528)
!4572 = !DILocation(line: 1071, column: 50, scope: !4528)
!4573 = !DILocation(line: 1071, column: 62, scope: !4528)
!4574 = !DILocation(line: 1071, column: 5, scope: !4528)
!4575 = !DILocation(line: 1073, column: 5, scope: !4528)
!4576 = !DILocation(line: 1073, column: 17, scope: !4577)
!4577 = !DILexicalBlockFile(scope: !4528, file: !910, discriminator: 1)
!4578 = !DILocation(line: 1073, column: 5, scope: !4577)
!4579 = !DILocalVariable(name: "Y", scope: !4531, file: !910, line: 1075, type: !918)
!4580 = !DILocation(line: 1075, column: 13, scope: !4531)
!4581 = !DILocation(line: 1075, column: 18, scope: !4531)
!4582 = !DILocation(line: 1075, column: 17, scope: !4531)
!4583 = !DILocalVariable(name: "X", scope: !4531, file: !910, line: 1075, type: !918)
!4584 = !DILocation(line: 1075, column: 28, scope: !4531)
!4585 = !DILocation(line: 1075, column: 33, scope: !4531)
!4586 = !DILocation(line: 1075, column: 32, scope: !4531)
!4587 = !DILocation(line: 1076, column: 43, scope: !4531)
!4588 = !DILocation(line: 1076, column: 46, scope: !4531)
!4589 = !DILocation(line: 1076, column: 21, scope: !4531)
!4590 = !DILocation(line: 1042, column: 31, scope: !4320, inlinedAt: !4542)
!4591 = !DILocation(line: 1042, column: 22, scope: !4320, inlinedAt: !4542)
!4592 = !DILocation(line: 1042, column: 25, scope: !4320, inlinedAt: !4542)
!4593 = !DILocation(line: 1042, column: 12, scope: !4320, inlinedAt: !4542)
!4594 = !DILocation(line: 1042, column: 5, scope: !4320, inlinedAt: !4542)
!4595 = !DILocation(line: 1042, column: 8, scope: !4320, inlinedAt: !4542)
!4596 = !DILocation(line: 1042, column: 20, scope: !4320, inlinedAt: !4542)
!4597 = !DILocation(line: 1043, column: 17, scope: !4320, inlinedAt: !4542)
!4598 = !DILocation(line: 1043, column: 10, scope: !4320, inlinedAt: !4542)
!4599 = !DILocation(line: 1043, column: 13, scope: !4320, inlinedAt: !4542)
!4600 = !DILocation(line: 1043, column: 8, scope: !4320, inlinedAt: !4542)
!4601 = !DILocation(line: 1044, column: 17, scope: !4320, inlinedAt: !4542)
!4602 = !DILocation(line: 1044, column: 10, scope: !4320, inlinedAt: !4542)
!4603 = !DILocation(line: 1044, column: 13, scope: !4320, inlinedAt: !4542)
!4604 = !DILocation(line: 1044, column: 35, scope: !4320, inlinedAt: !4542)
!4605 = !DILocation(line: 1044, column: 42, scope: !4320, inlinedAt: !4542)
!4606 = !DILocation(line: 1044, column: 28, scope: !4320, inlinedAt: !4542)
!4607 = !DILocation(line: 1044, column: 31, scope: !4320, inlinedAt: !4542)
!4608 = !DILocation(line: 1044, column: 26, scope: !4320, inlinedAt: !4542)
!4609 = !DILocation(line: 1044, column: 8, scope: !4320, inlinedAt: !4542)
!4610 = !DILocation(line: 1045, column: 17, scope: !4320, inlinedAt: !4542)
!4611 = !DILocation(line: 1045, column: 24, scope: !4320, inlinedAt: !4542)
!4612 = !DILocation(line: 1045, column: 10, scope: !4320, inlinedAt: !4542)
!4613 = !DILocation(line: 1045, column: 13, scope: !4320, inlinedAt: !4542)
!4614 = !DILocation(line: 1045, column: 38, scope: !4320, inlinedAt: !4542)
!4615 = !DILocation(line: 1045, column: 45, scope: !4320, inlinedAt: !4542)
!4616 = !DILocation(line: 1045, column: 31, scope: !4320, inlinedAt: !4542)
!4617 = !DILocation(line: 1045, column: 34, scope: !4320, inlinedAt: !4542)
!4618 = !DILocation(line: 1045, column: 29, scope: !4320, inlinedAt: !4542)
!4619 = !DILocation(line: 1045, column: 8, scope: !4320, inlinedAt: !4542)
!4620 = !DILocation(line: 1046, column: 17, scope: !4320, inlinedAt: !4542)
!4621 = !DILocation(line: 1046, column: 24, scope: !4320, inlinedAt: !4542)
!4622 = !DILocation(line: 1046, column: 10, scope: !4320, inlinedAt: !4542)
!4623 = !DILocation(line: 1046, column: 13, scope: !4320, inlinedAt: !4542)
!4624 = !DILocation(line: 1046, column: 38, scope: !4320, inlinedAt: !4542)
!4625 = !DILocation(line: 1046, column: 45, scope: !4320, inlinedAt: !4542)
!4626 = !DILocation(line: 1046, column: 31, scope: !4320, inlinedAt: !4542)
!4627 = !DILocation(line: 1046, column: 34, scope: !4320, inlinedAt: !4542)
!4628 = !DILocation(line: 1046, column: 29, scope: !4320, inlinedAt: !4542)
!4629 = !DILocation(line: 1046, column: 8, scope: !4320, inlinedAt: !4542)
!4630 = !DILocation(line: 1048, column: 19, scope: !4320, inlinedAt: !4542)
!4631 = !DILocation(line: 1048, column: 35, scope: !4320, inlinedAt: !4542)
!4632 = !DILocation(line: 1048, column: 24, scope: !4320, inlinedAt: !4542)
!4633 = !DILocation(line: 1048, column: 27, scope: !4320, inlinedAt: !4542)
!4634 = !DILocation(line: 1048, column: 22, scope: !4320, inlinedAt: !4542)
!4635 = !DILocation(line: 1049, column: 19, scope: !4320, inlinedAt: !4542)
!4636 = !DILocation(line: 1049, column: 35, scope: !4320, inlinedAt: !4542)
!4637 = !DILocation(line: 1049, column: 24, scope: !4320, inlinedAt: !4542)
!4638 = !DILocation(line: 1049, column: 27, scope: !4320, inlinedAt: !4542)
!4639 = !DILocation(line: 1049, column: 22, scope: !4320, inlinedAt: !4542)
!4640 = !DILocation(line: 1048, column: 46, scope: !4320, inlinedAt: !4542)
!4641 = !DILocation(line: 1050, column: 19, scope: !4320, inlinedAt: !4542)
!4642 = !DILocation(line: 1050, column: 35, scope: !4320, inlinedAt: !4542)
!4643 = !DILocation(line: 1050, column: 24, scope: !4320, inlinedAt: !4542)
!4644 = !DILocation(line: 1050, column: 27, scope: !4320, inlinedAt: !4542)
!4645 = !DILocation(line: 1050, column: 22, scope: !4320, inlinedAt: !4542)
!4646 = !DILocation(line: 1049, column: 46, scope: !4320, inlinedAt: !4542)
!4647 = !DILocation(line: 1051, column: 19, scope: !4320, inlinedAt: !4542)
!4648 = !DILocation(line: 1051, column: 35, scope: !4320, inlinedAt: !4542)
!4649 = !DILocation(line: 1051, column: 24, scope: !4320, inlinedAt: !4542)
!4650 = !DILocation(line: 1051, column: 27, scope: !4320, inlinedAt: !4542)
!4651 = !DILocation(line: 1051, column: 22, scope: !4320, inlinedAt: !4542)
!4652 = !DILocation(line: 1050, column: 46, scope: !4320, inlinedAt: !4542)
!4653 = !DILocation(line: 1048, column: 17, scope: !4320, inlinedAt: !4542)
!4654 = !DILocation(line: 1053, column: 24, scope: !4320, inlinedAt: !4542)
!4655 = !DILocation(line: 1053, column: 35, scope: !4320, inlinedAt: !4542)
!4656 = !DILocation(line: 1053, column: 47, scope: !4320, inlinedAt: !4542)
!4657 = !DILocation(line: 1053, column: 32, scope: !4320, inlinedAt: !4542)
!4658 = !DILocation(line: 1053, column: 14, scope: !4320, inlinedAt: !4542)
!4659 = !DILocation(line: 1053, column: 5, scope: !4320, inlinedAt: !4542)
!4660 = !DILocation(line: 1053, column: 8, scope: !4320, inlinedAt: !4542)
!4661 = !DILocation(line: 1053, column: 22, scope: !4320, inlinedAt: !4542)
!4662 = !DILocation(line: 1054, column: 35, scope: !4320, inlinedAt: !4542)
!4663 = !DILocation(line: 1054, column: 26, scope: !4320, inlinedAt: !4542)
!4664 = !DILocation(line: 1054, column: 29, scope: !4320, inlinedAt: !4542)
!4665 = !DILocation(line: 1054, column: 58, scope: !4320, inlinedAt: !4542)
!4666 = !DILocation(line: 1054, column: 47, scope: !4320, inlinedAt: !4542)
!4667 = !DILocation(line: 1054, column: 50, scope: !4320, inlinedAt: !4542)
!4668 = !DILocation(line: 1054, column: 66, scope: !4320, inlinedAt: !4542)
!4669 = !DILocation(line: 1054, column: 72, scope: !4320, inlinedAt: !4542)
!4670 = !DILocation(line: 1054, column: 43, scope: !4320, inlinedAt: !4542)
!4671 = !DILocation(line: 1054, column: 16, scope: !4320, inlinedAt: !4542)
!4672 = !DILocation(line: 1054, column: 5, scope: !4320, inlinedAt: !4542)
!4673 = !DILocation(line: 1054, column: 8, scope: !4320, inlinedAt: !4542)
!4674 = !DILocation(line: 1054, column: 24, scope: !4320, inlinedAt: !4542)
!4675 = !DILocation(line: 1056, column: 20, scope: !4320, inlinedAt: !4542)
!4676 = !DILocation(line: 1056, column: 12, scope: !4320, inlinedAt: !4542)
!4677 = !DILocation(line: 1056, column: 10, scope: !4320, inlinedAt: !4542)
!4678 = !DILocation(line: 1057, column: 32, scope: !4320, inlinedAt: !4542)
!4679 = !DILocation(line: 1057, column: 35, scope: !4320, inlinedAt: !4542)
!4680 = !DILocation(line: 1057, column: 40, scope: !4320, inlinedAt: !4542)
!4681 = !DILocation(line: 1057, column: 44, scope: !4320, inlinedAt: !4542)
!4682 = !DILocation(line: 1057, column: 51, scope: !4320, inlinedAt: !4542)
!4683 = !DILocation(line: 1057, column: 49, scope: !4320, inlinedAt: !4542)
!4684 = !DILocation(line: 1057, column: 16, scope: !4320, inlinedAt: !4542)
!4685 = !DILocation(line: 1057, column: 5, scope: !4320, inlinedAt: !4542)
!4686 = !DILocation(line: 1057, column: 8, scope: !4320, inlinedAt: !4542)
!4687 = !DILocation(line: 1057, column: 27, scope: !4320, inlinedAt: !4542)
!4688 = !DILocation(line: 1058, column: 32, scope: !4320, inlinedAt: !4542)
!4689 = !DILocation(line: 1058, column: 35, scope: !4320, inlinedAt: !4542)
!4690 = !DILocation(line: 1058, column: 40, scope: !4320, inlinedAt: !4542)
!4691 = !DILocation(line: 1058, column: 44, scope: !4320, inlinedAt: !4542)
!4692 = !DILocation(line: 1058, column: 51, scope: !4320, inlinedAt: !4542)
!4693 = !DILocation(line: 1058, column: 49, scope: !4320, inlinedAt: !4542)
!4694 = !DILocation(line: 1058, column: 16, scope: !4320, inlinedAt: !4542)
!4695 = !DILocation(line: 1058, column: 5, scope: !4320, inlinedAt: !4542)
!4696 = !DILocation(line: 1058, column: 8, scope: !4320, inlinedAt: !4542)
!4697 = !DILocation(line: 1058, column: 27, scope: !4320, inlinedAt: !4542)
!4698 = !DILocation(line: 1059, column: 32, scope: !4320, inlinedAt: !4542)
!4699 = !DILocation(line: 1059, column: 35, scope: !4320, inlinedAt: !4542)
!4700 = !DILocation(line: 1059, column: 40, scope: !4320, inlinedAt: !4542)
!4701 = !DILocation(line: 1059, column: 44, scope: !4320, inlinedAt: !4542)
!4702 = !DILocation(line: 1059, column: 51, scope: !4320, inlinedAt: !4542)
!4703 = !DILocation(line: 1059, column: 49, scope: !4320, inlinedAt: !4542)
!4704 = !DILocation(line: 1059, column: 16, scope: !4320, inlinedAt: !4542)
!4705 = !DILocation(line: 1059, column: 5, scope: !4320, inlinedAt: !4542)
!4706 = !DILocation(line: 1059, column: 8, scope: !4320, inlinedAt: !4542)
!4707 = !DILocation(line: 1059, column: 27, scope: !4320, inlinedAt: !4542)
!4708 = !DILocation(line: 1060, column: 32, scope: !4320, inlinedAt: !4542)
!4709 = !DILocation(line: 1060, column: 35, scope: !4320, inlinedAt: !4542)
!4710 = !DILocation(line: 1060, column: 40, scope: !4320, inlinedAt: !4542)
!4711 = !DILocation(line: 1060, column: 44, scope: !4320, inlinedAt: !4542)
!4712 = !DILocation(line: 1060, column: 51, scope: !4320, inlinedAt: !4542)
!4713 = !DILocation(line: 1060, column: 49, scope: !4320, inlinedAt: !4542)
!4714 = !DILocation(line: 1060, column: 16, scope: !4320, inlinedAt: !4542)
!4715 = !DILocation(line: 1060, column: 5, scope: !4320, inlinedAt: !4542)
!4716 = !DILocation(line: 1060, column: 8, scope: !4320, inlinedAt: !4542)
!4717 = !DILocation(line: 1060, column: 27, scope: !4320, inlinedAt: !4542)
!4718 = !DILocation(line: 1062, column: 23, scope: !4320, inlinedAt: !4542)
!4719 = !DILocation(line: 1062, column: 12, scope: !4320, inlinedAt: !4542)
!4720 = !DILocation(line: 1062, column: 15, scope: !4320, inlinedAt: !4542)
!4721 = !DILocation(line: 1076, column: 10, scope: !4531)
!4722 = !DILocation(line: 1076, column: 19, scope: !4531)
!4723 = !DILocation(line: 1077, column: 17, scope: !4531)
!4724 = !DILocation(line: 1078, column: 43, scope: !4531)
!4725 = !DILocation(line: 1078, column: 46, scope: !4531)
!4726 = !DILocation(line: 1078, column: 21, scope: !4531)
!4727 = !DILocation(line: 1042, column: 31, scope: !4320, inlinedAt: !4530)
!4728 = !DILocation(line: 1042, column: 22, scope: !4320, inlinedAt: !4530)
!4729 = !DILocation(line: 1042, column: 25, scope: !4320, inlinedAt: !4530)
!4730 = !DILocation(line: 1042, column: 12, scope: !4320, inlinedAt: !4530)
!4731 = !DILocation(line: 1042, column: 5, scope: !4320, inlinedAt: !4530)
!4732 = !DILocation(line: 1042, column: 8, scope: !4320, inlinedAt: !4530)
!4733 = !DILocation(line: 1042, column: 20, scope: !4320, inlinedAt: !4530)
!4734 = !DILocation(line: 1043, column: 17, scope: !4320, inlinedAt: !4530)
!4735 = !DILocation(line: 1043, column: 10, scope: !4320, inlinedAt: !4530)
!4736 = !DILocation(line: 1043, column: 13, scope: !4320, inlinedAt: !4530)
!4737 = !DILocation(line: 1043, column: 8, scope: !4320, inlinedAt: !4530)
!4738 = !DILocation(line: 1044, column: 17, scope: !4320, inlinedAt: !4530)
!4739 = !DILocation(line: 1044, column: 10, scope: !4320, inlinedAt: !4530)
!4740 = !DILocation(line: 1044, column: 13, scope: !4320, inlinedAt: !4530)
!4741 = !DILocation(line: 1044, column: 35, scope: !4320, inlinedAt: !4530)
!4742 = !DILocation(line: 1044, column: 42, scope: !4320, inlinedAt: !4530)
!4743 = !DILocation(line: 1044, column: 28, scope: !4320, inlinedAt: !4530)
!4744 = !DILocation(line: 1044, column: 31, scope: !4320, inlinedAt: !4530)
!4745 = !DILocation(line: 1044, column: 26, scope: !4320, inlinedAt: !4530)
!4746 = !DILocation(line: 1044, column: 8, scope: !4320, inlinedAt: !4530)
!4747 = !DILocation(line: 1045, column: 17, scope: !4320, inlinedAt: !4530)
!4748 = !DILocation(line: 1045, column: 24, scope: !4320, inlinedAt: !4530)
!4749 = !DILocation(line: 1045, column: 10, scope: !4320, inlinedAt: !4530)
!4750 = !DILocation(line: 1045, column: 13, scope: !4320, inlinedAt: !4530)
!4751 = !DILocation(line: 1045, column: 38, scope: !4320, inlinedAt: !4530)
!4752 = !DILocation(line: 1045, column: 45, scope: !4320, inlinedAt: !4530)
!4753 = !DILocation(line: 1045, column: 31, scope: !4320, inlinedAt: !4530)
!4754 = !DILocation(line: 1045, column: 34, scope: !4320, inlinedAt: !4530)
!4755 = !DILocation(line: 1045, column: 29, scope: !4320, inlinedAt: !4530)
!4756 = !DILocation(line: 1045, column: 8, scope: !4320, inlinedAt: !4530)
!4757 = !DILocation(line: 1046, column: 17, scope: !4320, inlinedAt: !4530)
!4758 = !DILocation(line: 1046, column: 24, scope: !4320, inlinedAt: !4530)
!4759 = !DILocation(line: 1046, column: 10, scope: !4320, inlinedAt: !4530)
!4760 = !DILocation(line: 1046, column: 13, scope: !4320, inlinedAt: !4530)
!4761 = !DILocation(line: 1046, column: 38, scope: !4320, inlinedAt: !4530)
!4762 = !DILocation(line: 1046, column: 45, scope: !4320, inlinedAt: !4530)
!4763 = !DILocation(line: 1046, column: 31, scope: !4320, inlinedAt: !4530)
!4764 = !DILocation(line: 1046, column: 34, scope: !4320, inlinedAt: !4530)
!4765 = !DILocation(line: 1046, column: 29, scope: !4320, inlinedAt: !4530)
!4766 = !DILocation(line: 1046, column: 8, scope: !4320, inlinedAt: !4530)
!4767 = !DILocation(line: 1048, column: 19, scope: !4320, inlinedAt: !4530)
!4768 = !DILocation(line: 1048, column: 35, scope: !4320, inlinedAt: !4530)
!4769 = !DILocation(line: 1048, column: 24, scope: !4320, inlinedAt: !4530)
!4770 = !DILocation(line: 1048, column: 27, scope: !4320, inlinedAt: !4530)
!4771 = !DILocation(line: 1048, column: 22, scope: !4320, inlinedAt: !4530)
!4772 = !DILocation(line: 1049, column: 19, scope: !4320, inlinedAt: !4530)
!4773 = !DILocation(line: 1049, column: 35, scope: !4320, inlinedAt: !4530)
!4774 = !DILocation(line: 1049, column: 24, scope: !4320, inlinedAt: !4530)
!4775 = !DILocation(line: 1049, column: 27, scope: !4320, inlinedAt: !4530)
!4776 = !DILocation(line: 1049, column: 22, scope: !4320, inlinedAt: !4530)
!4777 = !DILocation(line: 1048, column: 46, scope: !4320, inlinedAt: !4530)
!4778 = !DILocation(line: 1050, column: 19, scope: !4320, inlinedAt: !4530)
!4779 = !DILocation(line: 1050, column: 35, scope: !4320, inlinedAt: !4530)
!4780 = !DILocation(line: 1050, column: 24, scope: !4320, inlinedAt: !4530)
!4781 = !DILocation(line: 1050, column: 27, scope: !4320, inlinedAt: !4530)
!4782 = !DILocation(line: 1050, column: 22, scope: !4320, inlinedAt: !4530)
!4783 = !DILocation(line: 1049, column: 46, scope: !4320, inlinedAt: !4530)
!4784 = !DILocation(line: 1051, column: 19, scope: !4320, inlinedAt: !4530)
!4785 = !DILocation(line: 1051, column: 35, scope: !4320, inlinedAt: !4530)
!4786 = !DILocation(line: 1051, column: 24, scope: !4320, inlinedAt: !4530)
!4787 = !DILocation(line: 1051, column: 27, scope: !4320, inlinedAt: !4530)
!4788 = !DILocation(line: 1051, column: 22, scope: !4320, inlinedAt: !4530)
!4789 = !DILocation(line: 1050, column: 46, scope: !4320, inlinedAt: !4530)
!4790 = !DILocation(line: 1048, column: 17, scope: !4320, inlinedAt: !4530)
!4791 = !DILocation(line: 1053, column: 24, scope: !4320, inlinedAt: !4530)
!4792 = !DILocation(line: 1053, column: 35, scope: !4320, inlinedAt: !4530)
!4793 = !DILocation(line: 1053, column: 47, scope: !4320, inlinedAt: !4530)
!4794 = !DILocation(line: 1053, column: 32, scope: !4320, inlinedAt: !4530)
!4795 = !DILocation(line: 1053, column: 14, scope: !4320, inlinedAt: !4530)
!4796 = !DILocation(line: 1053, column: 5, scope: !4320, inlinedAt: !4530)
!4797 = !DILocation(line: 1053, column: 8, scope: !4320, inlinedAt: !4530)
!4798 = !DILocation(line: 1053, column: 22, scope: !4320, inlinedAt: !4530)
!4799 = !DILocation(line: 1054, column: 35, scope: !4320, inlinedAt: !4530)
!4800 = !DILocation(line: 1054, column: 26, scope: !4320, inlinedAt: !4530)
!4801 = !DILocation(line: 1054, column: 29, scope: !4320, inlinedAt: !4530)
!4802 = !DILocation(line: 1054, column: 58, scope: !4320, inlinedAt: !4530)
!4803 = !DILocation(line: 1054, column: 47, scope: !4320, inlinedAt: !4530)
!4804 = !DILocation(line: 1054, column: 50, scope: !4320, inlinedAt: !4530)
!4805 = !DILocation(line: 1054, column: 66, scope: !4320, inlinedAt: !4530)
!4806 = !DILocation(line: 1054, column: 72, scope: !4320, inlinedAt: !4530)
!4807 = !DILocation(line: 1054, column: 43, scope: !4320, inlinedAt: !4530)
!4808 = !DILocation(line: 1054, column: 16, scope: !4320, inlinedAt: !4530)
!4809 = !DILocation(line: 1054, column: 5, scope: !4320, inlinedAt: !4530)
!4810 = !DILocation(line: 1054, column: 8, scope: !4320, inlinedAt: !4530)
!4811 = !DILocation(line: 1054, column: 24, scope: !4320, inlinedAt: !4530)
!4812 = !DILocation(line: 1056, column: 20, scope: !4320, inlinedAt: !4530)
!4813 = !DILocation(line: 1056, column: 12, scope: !4320, inlinedAt: !4530)
!4814 = !DILocation(line: 1056, column: 10, scope: !4320, inlinedAt: !4530)
!4815 = !DILocation(line: 1057, column: 32, scope: !4320, inlinedAt: !4530)
!4816 = !DILocation(line: 1057, column: 35, scope: !4320, inlinedAt: !4530)
!4817 = !DILocation(line: 1057, column: 40, scope: !4320, inlinedAt: !4530)
!4818 = !DILocation(line: 1057, column: 44, scope: !4320, inlinedAt: !4530)
!4819 = !DILocation(line: 1057, column: 51, scope: !4320, inlinedAt: !4530)
!4820 = !DILocation(line: 1057, column: 49, scope: !4320, inlinedAt: !4530)
!4821 = !DILocation(line: 1057, column: 16, scope: !4320, inlinedAt: !4530)
!4822 = !DILocation(line: 1057, column: 5, scope: !4320, inlinedAt: !4530)
!4823 = !DILocation(line: 1057, column: 8, scope: !4320, inlinedAt: !4530)
!4824 = !DILocation(line: 1057, column: 27, scope: !4320, inlinedAt: !4530)
!4825 = !DILocation(line: 1058, column: 32, scope: !4320, inlinedAt: !4530)
!4826 = !DILocation(line: 1058, column: 35, scope: !4320, inlinedAt: !4530)
!4827 = !DILocation(line: 1058, column: 40, scope: !4320, inlinedAt: !4530)
!4828 = !DILocation(line: 1058, column: 44, scope: !4320, inlinedAt: !4530)
!4829 = !DILocation(line: 1058, column: 51, scope: !4320, inlinedAt: !4530)
!4830 = !DILocation(line: 1058, column: 49, scope: !4320, inlinedAt: !4530)
!4831 = !DILocation(line: 1058, column: 16, scope: !4320, inlinedAt: !4530)
!4832 = !DILocation(line: 1058, column: 5, scope: !4320, inlinedAt: !4530)
!4833 = !DILocation(line: 1058, column: 8, scope: !4320, inlinedAt: !4530)
!4834 = !DILocation(line: 1058, column: 27, scope: !4320, inlinedAt: !4530)
!4835 = !DILocation(line: 1059, column: 32, scope: !4320, inlinedAt: !4530)
!4836 = !DILocation(line: 1059, column: 35, scope: !4320, inlinedAt: !4530)
!4837 = !DILocation(line: 1059, column: 40, scope: !4320, inlinedAt: !4530)
!4838 = !DILocation(line: 1059, column: 44, scope: !4320, inlinedAt: !4530)
!4839 = !DILocation(line: 1059, column: 51, scope: !4320, inlinedAt: !4530)
!4840 = !DILocation(line: 1059, column: 49, scope: !4320, inlinedAt: !4530)
!4841 = !DILocation(line: 1059, column: 16, scope: !4320, inlinedAt: !4530)
!4842 = !DILocation(line: 1059, column: 5, scope: !4320, inlinedAt: !4530)
!4843 = !DILocation(line: 1059, column: 8, scope: !4320, inlinedAt: !4530)
!4844 = !DILocation(line: 1059, column: 27, scope: !4320, inlinedAt: !4530)
!4845 = !DILocation(line: 1060, column: 32, scope: !4320, inlinedAt: !4530)
!4846 = !DILocation(line: 1060, column: 35, scope: !4320, inlinedAt: !4530)
!4847 = !DILocation(line: 1060, column: 40, scope: !4320, inlinedAt: !4530)
!4848 = !DILocation(line: 1060, column: 44, scope: !4320, inlinedAt: !4530)
!4849 = !DILocation(line: 1060, column: 51, scope: !4320, inlinedAt: !4530)
!4850 = !DILocation(line: 1060, column: 49, scope: !4320, inlinedAt: !4530)
!4851 = !DILocation(line: 1060, column: 16, scope: !4320, inlinedAt: !4530)
!4852 = !DILocation(line: 1060, column: 5, scope: !4320, inlinedAt: !4530)
!4853 = !DILocation(line: 1060, column: 8, scope: !4320, inlinedAt: !4530)
!4854 = !DILocation(line: 1060, column: 27, scope: !4320, inlinedAt: !4530)
!4855 = !DILocation(line: 1062, column: 23, scope: !4320, inlinedAt: !4530)
!4856 = !DILocation(line: 1062, column: 12, scope: !4320, inlinedAt: !4530)
!4857 = !DILocation(line: 1062, column: 15, scope: !4320, inlinedAt: !4530)
!4858 = !DILocation(line: 1078, column: 10, scope: !4531)
!4859 = !DILocation(line: 1078, column: 19, scope: !4531)
!4860 = !DILocation(line: 1079, column: 17, scope: !4531)
!4861 = !DILocation(line: 1082, column: 9, scope: !4531)
!4862 = !DILocation(line: 1082, column: 12, scope: !4531)
!4863 = !DILocation(line: 1082, column: 15, scope: !4531)
!4864 = !DILocation(line: 1085, column: 13, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4531, file: !910, line: 1085, column: 13)
!4866 = !DILocation(line: 1085, column: 16, scope: !4865)
!4867 = !DILocation(line: 1085, column: 23, scope: !4865)
!4868 = !DILocation(line: 1085, column: 26, scope: !4865)
!4869 = !DILocation(line: 1085, column: 40, scope: !4865)
!4870 = !DILocation(line: 1085, column: 20, scope: !4865)
!4871 = !DILocation(line: 1085, column: 13, scope: !4531)
!4872 = !DILocation(line: 1086, column: 21, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4865, file: !910, line: 1085, column: 47)
!4874 = !DILocation(line: 1086, column: 24, scope: !4873)
!4875 = !DILocation(line: 1086, column: 13, scope: !4873)
!4876 = !DILocation(line: 1086, column: 39, scope: !4873)
!4877 = !DILocation(line: 1086, column: 42, scope: !4873)
!4878 = !DILocation(line: 1088, column: 22, scope: !4873)
!4879 = !DILocation(line: 1088, column: 25, scope: !4873)
!4880 = !DILocation(line: 1088, column: 13, scope: !4873)
!4881 = !DILocation(line: 1088, column: 16, scope: !4873)
!4882 = !DILocation(line: 1088, column: 20, scope: !4873)
!4883 = !DILocation(line: 1089, column: 9, scope: !4873)
!4884 = !DILocation(line: 1073, column: 5, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !4528, file: !910, discriminator: 2)
!4886 = distinct !{!4886, !4575}
!4887 = !DILocation(line: 1091, column: 1, scope: !4528)
!4888 = distinct !DISubprogram(name: "predictor_decode_mono_3950", scope: !910, file: !910, line: 1191, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!4889 = !DILocalVariable(name: "ctx", arg: 1, scope: !4888, file: !910, line: 1191, type: !1750)
!4890 = !DILocation(line: 1191, column: 52, scope: !4888)
!4891 = !DILocalVariable(name: "count", arg: 2, scope: !4888, file: !910, line: 1191, type: !918)
!4892 = !DILocation(line: 1191, column: 61, scope: !4888)
!4893 = !DILocalVariable(name: "p", scope: !4888, file: !910, line: 1193, type: !3102)
!4894 = !DILocation(line: 1193, column: 19, scope: !4888)
!4895 = !DILocation(line: 1193, column: 24, scope: !4888)
!4896 = !DILocation(line: 1193, column: 29, scope: !4888)
!4897 = !DILocalVariable(name: "decoded0", scope: !4888, file: !910, line: 1194, type: !947)
!4898 = !DILocation(line: 1194, column: 14, scope: !4888)
!4899 = !DILocation(line: 1194, column: 25, scope: !4888)
!4900 = !DILocation(line: 1194, column: 30, scope: !4888)
!4901 = !DILocalVariable(name: "predictionA", scope: !4888, file: !910, line: 1195, type: !948)
!4902 = !DILocation(line: 1195, column: 13, scope: !4888)
!4903 = !DILocalVariable(name: "currentA", scope: !4888, file: !910, line: 1195, type: !948)
!4904 = !DILocation(line: 1195, column: 26, scope: !4888)
!4905 = !DILocalVariable(name: "A", scope: !4888, file: !910, line: 1195, type: !948)
!4906 = !DILocation(line: 1195, column: 36, scope: !4888)
!4907 = !DILocalVariable(name: "sign", scope: !4888, file: !910, line: 1195, type: !948)
!4908 = !DILocation(line: 1195, column: 39, scope: !4888)
!4909 = !DILocation(line: 1197, column: 23, scope: !4888)
!4910 = !DILocation(line: 1197, column: 28, scope: !4888)
!4911 = !DILocation(line: 1197, column: 33, scope: !4888)
!4912 = !DILocation(line: 1197, column: 50, scope: !4888)
!4913 = !DILocation(line: 1197, column: 5, scope: !4888)
!4914 = !DILocation(line: 1199, column: 16, scope: !4888)
!4915 = !DILocation(line: 1199, column: 19, scope: !4888)
!4916 = !DILocation(line: 1199, column: 14, scope: !4888)
!4917 = !DILocation(line: 1201, column: 5, scope: !4888)
!4918 = !DILocation(line: 1201, column: 17, scope: !4919)
!4919 = !DILexicalBlockFile(scope: !4888, file: !910, discriminator: 1)
!4920 = !DILocation(line: 1201, column: 5, scope: !4919)
!4921 = !DILocation(line: 1202, column: 14, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4888, file: !910, line: 1201, column: 21)
!4923 = !DILocation(line: 1202, column: 13, scope: !4922)
!4924 = !DILocation(line: 1202, column: 11, scope: !4922)
!4925 = !DILocation(line: 1204, column: 30, scope: !4922)
!4926 = !DILocation(line: 1204, column: 9, scope: !4922)
!4927 = !DILocation(line: 1204, column: 12, scope: !4922)
!4928 = !DILocation(line: 1204, column: 28, scope: !4922)
!4929 = !DILocation(line: 1205, column: 34, scope: !4922)
!4930 = !DILocation(line: 1205, column: 37, scope: !4922)
!4931 = !DILocation(line: 1205, column: 55, scope: !4922)
!4932 = !DILocation(line: 1205, column: 58, scope: !4922)
!4933 = !DILocation(line: 1205, column: 53, scope: !4922)
!4934 = !DILocation(line: 1205, column: 9, scope: !4922)
!4935 = !DILocation(line: 1205, column: 12, scope: !4922)
!4936 = !DILocation(line: 1205, column: 32, scope: !4922)
!4937 = !DILocation(line: 1207, column: 23, scope: !4922)
!4938 = !DILocation(line: 1207, column: 26, scope: !4922)
!4939 = !DILocation(line: 1207, column: 45, scope: !4922)
!4940 = !DILocation(line: 1207, column: 48, scope: !4922)
!4941 = !DILocation(line: 1207, column: 43, scope: !4922)
!4942 = !DILocation(line: 1208, column: 23, scope: !4922)
!4943 = !DILocation(line: 1208, column: 26, scope: !4922)
!4944 = !DILocation(line: 1208, column: 48, scope: !4922)
!4945 = !DILocation(line: 1208, column: 51, scope: !4922)
!4946 = !DILocation(line: 1208, column: 46, scope: !4922)
!4947 = !DILocation(line: 1207, column: 62, scope: !4922)
!4948 = !DILocation(line: 1209, column: 23, scope: !4922)
!4949 = !DILocation(line: 1209, column: 26, scope: !4922)
!4950 = !DILocation(line: 1209, column: 48, scope: !4922)
!4951 = !DILocation(line: 1209, column: 51, scope: !4922)
!4952 = !DILocation(line: 1209, column: 46, scope: !4922)
!4953 = !DILocation(line: 1208, column: 65, scope: !4922)
!4954 = !DILocation(line: 1210, column: 23, scope: !4922)
!4955 = !DILocation(line: 1210, column: 26, scope: !4922)
!4956 = !DILocation(line: 1210, column: 48, scope: !4922)
!4957 = !DILocation(line: 1210, column: 51, scope: !4922)
!4958 = !DILocation(line: 1210, column: 46, scope: !4922)
!4959 = !DILocation(line: 1209, column: 65, scope: !4922)
!4960 = !DILocation(line: 1207, column: 21, scope: !4922)
!4961 = !DILocation(line: 1212, column: 20, scope: !4922)
!4962 = !DILocation(line: 1212, column: 25, scope: !4922)
!4963 = !DILocation(line: 1212, column: 37, scope: !4922)
!4964 = !DILocation(line: 1212, column: 22, scope: !4922)
!4965 = !DILocation(line: 1212, column: 18, scope: !4922)
!4966 = !DILocation(line: 1214, column: 30, scope: !4922)
!4967 = !DILocation(line: 1214, column: 33, scope: !4922)
!4968 = !DILocation(line: 1214, column: 22, scope: !4922)
!4969 = !DILocation(line: 1214, column: 9, scope: !4922)
!4970 = !DILocation(line: 1214, column: 12, scope: !4922)
!4971 = !DILocation(line: 1214, column: 20, scope: !4922)
!4972 = !DILocation(line: 1215, column: 34, scope: !4922)
!4973 = !DILocation(line: 1215, column: 37, scope: !4922)
!4974 = !DILocation(line: 1215, column: 26, scope: !4922)
!4975 = !DILocation(line: 1215, column: 9, scope: !4922)
!4976 = !DILocation(line: 1215, column: 12, scope: !4922)
!4977 = !DILocation(line: 1215, column: 24, scope: !4922)
!4978 = !DILocation(line: 1217, column: 24, scope: !4922)
!4979 = !DILocation(line: 1217, column: 16, scope: !4922)
!4980 = !DILocation(line: 1217, column: 14, scope: !4922)
!4981 = !DILocation(line: 1218, column: 29, scope: !4922)
!4982 = !DILocation(line: 1218, column: 32, scope: !4922)
!4983 = !DILocation(line: 1218, column: 43, scope: !4922)
!4984 = !DILocation(line: 1218, column: 41, scope: !4922)
!4985 = !DILocation(line: 1218, column: 9, scope: !4922)
!4986 = !DILocation(line: 1218, column: 12, scope: !4922)
!4987 = !DILocation(line: 1218, column: 26, scope: !4922)
!4988 = !DILocation(line: 1219, column: 29, scope: !4922)
!4989 = !DILocation(line: 1219, column: 32, scope: !4922)
!4990 = !DILocation(line: 1219, column: 46, scope: !4922)
!4991 = !DILocation(line: 1219, column: 44, scope: !4922)
!4992 = !DILocation(line: 1219, column: 9, scope: !4922)
!4993 = !DILocation(line: 1219, column: 12, scope: !4922)
!4994 = !DILocation(line: 1219, column: 26, scope: !4922)
!4995 = !DILocation(line: 1220, column: 29, scope: !4922)
!4996 = !DILocation(line: 1220, column: 32, scope: !4922)
!4997 = !DILocation(line: 1220, column: 46, scope: !4922)
!4998 = !DILocation(line: 1220, column: 44, scope: !4922)
!4999 = !DILocation(line: 1220, column: 9, scope: !4922)
!5000 = !DILocation(line: 1220, column: 12, scope: !4922)
!5001 = !DILocation(line: 1220, column: 26, scope: !4922)
!5002 = !DILocation(line: 1221, column: 29, scope: !4922)
!5003 = !DILocation(line: 1221, column: 32, scope: !4922)
!5004 = !DILocation(line: 1221, column: 46, scope: !4922)
!5005 = !DILocation(line: 1221, column: 44, scope: !4922)
!5006 = !DILocation(line: 1221, column: 9, scope: !4922)
!5007 = !DILocation(line: 1221, column: 12, scope: !4922)
!5008 = !DILocation(line: 1221, column: 26, scope: !4922)
!5009 = !DILocation(line: 1223, column: 9, scope: !4922)
!5010 = !DILocation(line: 1223, column: 12, scope: !4922)
!5011 = !DILocation(line: 1223, column: 15, scope: !4922)
!5012 = !DILocation(line: 1226, column: 13, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4922, file: !910, line: 1226, column: 13)
!5014 = !DILocation(line: 1226, column: 16, scope: !5013)
!5015 = !DILocation(line: 1226, column: 23, scope: !5013)
!5016 = !DILocation(line: 1226, column: 26, scope: !5013)
!5017 = !DILocation(line: 1226, column: 40, scope: !5013)
!5018 = !DILocation(line: 1226, column: 20, scope: !5013)
!5019 = !DILocation(line: 1226, column: 13, scope: !4922)
!5020 = !DILocation(line: 1227, column: 21, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5013, file: !910, line: 1226, column: 47)
!5022 = !DILocation(line: 1227, column: 24, scope: !5021)
!5023 = !DILocation(line: 1227, column: 13, scope: !5021)
!5024 = !DILocation(line: 1227, column: 39, scope: !5021)
!5025 = !DILocation(line: 1227, column: 42, scope: !5021)
!5026 = !DILocation(line: 1229, column: 22, scope: !5021)
!5027 = !DILocation(line: 1229, column: 25, scope: !5021)
!5028 = !DILocation(line: 1229, column: 13, scope: !5021)
!5029 = !DILocation(line: 1229, column: 16, scope: !5021)
!5030 = !DILocation(line: 1229, column: 20, scope: !5021)
!5031 = !DILocation(line: 1230, column: 9, scope: !5021)
!5032 = !DILocation(line: 1232, column: 25, scope: !4922)
!5033 = !DILocation(line: 1232, column: 38, scope: !4922)
!5034 = !DILocation(line: 1232, column: 41, scope: !4922)
!5035 = !DILocation(line: 1232, column: 52, scope: !4922)
!5036 = !DILocation(line: 1232, column: 58, scope: !4922)
!5037 = !DILocation(line: 1232, column: 34, scope: !4922)
!5038 = !DILocation(line: 1232, column: 9, scope: !4922)
!5039 = !DILocation(line: 1232, column: 12, scope: !4922)
!5040 = !DILocation(line: 1232, column: 23, scope: !4922)
!5041 = !DILocation(line: 1233, column: 25, scope: !4922)
!5042 = !DILocation(line: 1233, column: 28, scope: !4922)
!5043 = !DILocation(line: 1233, column: 19, scope: !4922)
!5044 = !DILocation(line: 1233, column: 23, scope: !4922)
!5045 = !DILocation(line: 1201, column: 5, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !4888, file: !910, discriminator: 2)
!5047 = distinct !{!5047, !4917}
!5048 = !DILocation(line: 1236, column: 19, scope: !4888)
!5049 = !DILocation(line: 1236, column: 5, scope: !4888)
!5050 = !DILocation(line: 1236, column: 8, scope: !4888)
!5051 = !DILocation(line: 1236, column: 17, scope: !4888)
!5052 = !DILocation(line: 1237, column: 1, scope: !4888)
!5053 = distinct !DISubprogram(name: "predictor_decode_stereo_3950", scope: !910, file: !910, line: 1162, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1163, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!5054 = !DILocalVariable(name: "p", arg: 1, scope: !5055, file: !910, line: 1115, type: !3102)
!5055 = distinct !DISubprogram(name: "predictor_update_filter", scope: !910, file: !910, line: 1115, type: !3100, isLocal: true, isDefinition: true, scopeLine: 1119, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!5056 = !DILocation(line: 1115, column: 88, scope: !5055, inlinedAt: !5057)
!5057 = distinct !DILocation(line: 1175, column: 21, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5053, file: !910, line: 1170, column: 21)
!5059 = !DILocalVariable(name: "decoded", arg: 2, scope: !5055, file: !910, line: 1116, type: !976)
!5060 = !DILocation(line: 1116, column: 63, scope: !5055, inlinedAt: !5057)
!5061 = !DILocalVariable(name: "filter", arg: 3, scope: !5055, file: !910, line: 1116, type: !976)
!5062 = !DILocation(line: 1116, column: 82, scope: !5055, inlinedAt: !5057)
!5063 = !DILocalVariable(name: "delayA", arg: 4, scope: !5055, file: !910, line: 1117, type: !976)
!5064 = !DILocation(line: 1117, column: 63, scope: !5055, inlinedAt: !5057)
!5065 = !DILocalVariable(name: "delayB", arg: 5, scope: !5055, file: !910, line: 1117, type: !976)
!5066 = !DILocation(line: 1117, column: 81, scope: !5055, inlinedAt: !5057)
!5067 = !DILocalVariable(name: "adaptA", arg: 6, scope: !5055, file: !910, line: 1118, type: !976)
!5068 = !DILocation(line: 1118, column: 63, scope: !5055, inlinedAt: !5057)
!5069 = !DILocalVariable(name: "adaptB", arg: 7, scope: !5055, file: !910, line: 1118, type: !976)
!5070 = !DILocation(line: 1118, column: 81, scope: !5055, inlinedAt: !5057)
!5071 = !DILocalVariable(name: "predictionA", scope: !5055, file: !910, line: 1120, type: !948)
!5072 = !DILocation(line: 1120, column: 13, scope: !5055, inlinedAt: !5057)
!5073 = !DILocalVariable(name: "predictionB", scope: !5055, file: !910, line: 1120, type: !948)
!5074 = !DILocation(line: 1120, column: 26, scope: !5055, inlinedAt: !5057)
!5075 = !DILocalVariable(name: "sign", scope: !5055, file: !910, line: 1120, type: !948)
!5076 = !DILocation(line: 1120, column: 39, scope: !5055, inlinedAt: !5057)
!5077 = !DILocation(line: 1115, column: 88, scope: !5055, inlinedAt: !5078)
!5078 = distinct !DILocation(line: 1172, column: 21, scope: !5058)
!5079 = !DILocation(line: 1116, column: 63, scope: !5055, inlinedAt: !5078)
!5080 = !DILocation(line: 1116, column: 82, scope: !5055, inlinedAt: !5078)
!5081 = !DILocation(line: 1117, column: 63, scope: !5055, inlinedAt: !5078)
!5082 = !DILocation(line: 1117, column: 81, scope: !5055, inlinedAt: !5078)
!5083 = !DILocation(line: 1118, column: 63, scope: !5055, inlinedAt: !5078)
!5084 = !DILocation(line: 1118, column: 81, scope: !5055, inlinedAt: !5078)
!5085 = !DILocation(line: 1120, column: 13, scope: !5055, inlinedAt: !5078)
!5086 = !DILocation(line: 1120, column: 26, scope: !5055, inlinedAt: !5078)
!5087 = !DILocation(line: 1120, column: 39, scope: !5055, inlinedAt: !5078)
!5088 = !DILocalVariable(name: "ctx", arg: 1, scope: !5053, file: !910, line: 1162, type: !1750)
!5089 = !DILocation(line: 1162, column: 54, scope: !5053)
!5090 = !DILocalVariable(name: "count", arg: 2, scope: !5053, file: !910, line: 1162, type: !918)
!5091 = !DILocation(line: 1162, column: 63, scope: !5053)
!5092 = !DILocalVariable(name: "p", scope: !5053, file: !910, line: 1164, type: !3102)
!5093 = !DILocation(line: 1164, column: 19, scope: !5053)
!5094 = !DILocation(line: 1164, column: 24, scope: !5053)
!5095 = !DILocation(line: 1164, column: 29, scope: !5053)
!5096 = !DILocalVariable(name: "decoded0", scope: !5053, file: !910, line: 1165, type: !947)
!5097 = !DILocation(line: 1165, column: 14, scope: !5053)
!5098 = !DILocation(line: 1165, column: 25, scope: !5053)
!5099 = !DILocation(line: 1165, column: 30, scope: !5053)
!5100 = !DILocalVariable(name: "decoded1", scope: !5053, file: !910, line: 1166, type: !947)
!5101 = !DILocation(line: 1166, column: 14, scope: !5053)
!5102 = !DILocation(line: 1166, column: 25, scope: !5053)
!5103 = !DILocation(line: 1166, column: 30, scope: !5053)
!5104 = !DILocation(line: 1168, column: 23, scope: !5053)
!5105 = !DILocation(line: 1168, column: 28, scope: !5053)
!5106 = !DILocation(line: 1168, column: 33, scope: !5053)
!5107 = !DILocation(line: 1168, column: 45, scope: !5053)
!5108 = !DILocation(line: 1168, column: 50, scope: !5053)
!5109 = !DILocation(line: 1168, column: 62, scope: !5053)
!5110 = !DILocation(line: 1168, column: 5, scope: !5053)
!5111 = !DILocation(line: 1170, column: 5, scope: !5053)
!5112 = !DILocation(line: 1170, column: 17, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !5053, file: !910, discriminator: 1)
!5114 = !DILocation(line: 1170, column: 5, scope: !5113)
!5115 = !DILocation(line: 1172, column: 45, scope: !5058)
!5116 = !DILocation(line: 1172, column: 49, scope: !5058)
!5117 = !DILocation(line: 1172, column: 48, scope: !5058)
!5118 = !DILocation(line: 1172, column: 21, scope: !5058)
!5119 = !DILocation(line: 1122, column: 31, scope: !5055, inlinedAt: !5078)
!5120 = !DILocation(line: 1122, column: 22, scope: !5055, inlinedAt: !5078)
!5121 = !DILocation(line: 1122, column: 25, scope: !5055, inlinedAt: !5078)
!5122 = !DILocation(line: 1122, column: 12, scope: !5055, inlinedAt: !5078)
!5123 = !DILocation(line: 1122, column: 5, scope: !5055, inlinedAt: !5078)
!5124 = !DILocation(line: 1122, column: 8, scope: !5055, inlinedAt: !5078)
!5125 = !DILocation(line: 1122, column: 20, scope: !5055, inlinedAt: !5078)
!5126 = !DILocation(line: 1123, column: 37, scope: !5055, inlinedAt: !5078)
!5127 = !DILocation(line: 1123, column: 30, scope: !5055, inlinedAt: !5078)
!5128 = !DILocation(line: 1123, column: 33, scope: !5055, inlinedAt: !5078)
!5129 = !DILocation(line: 1123, column: 22, scope: !5055, inlinedAt: !5078)
!5130 = !DILocation(line: 1123, column: 12, scope: !5055, inlinedAt: !5078)
!5131 = !DILocation(line: 1123, column: 5, scope: !5055, inlinedAt: !5078)
!5132 = !DILocation(line: 1123, column: 8, scope: !5055, inlinedAt: !5078)
!5133 = !DILocation(line: 1123, column: 20, scope: !5055, inlinedAt: !5078)
!5134 = !DILocation(line: 1124, column: 33, scope: !5055, inlinedAt: !5078)
!5135 = !DILocation(line: 1124, column: 26, scope: !5055, inlinedAt: !5078)
!5136 = !DILocation(line: 1124, column: 29, scope: !5055, inlinedAt: !5078)
!5137 = !DILocation(line: 1124, column: 50, scope: !5055, inlinedAt: !5078)
!5138 = !DILocation(line: 1124, column: 57, scope: !5055, inlinedAt: !5078)
!5139 = !DILocation(line: 1124, column: 43, scope: !5055, inlinedAt: !5078)
!5140 = !DILocation(line: 1124, column: 46, scope: !5055, inlinedAt: !5078)
!5141 = !DILocation(line: 1124, column: 41, scope: !5055, inlinedAt: !5078)
!5142 = !DILocation(line: 1124, column: 12, scope: !5055, inlinedAt: !5078)
!5143 = !DILocation(line: 1124, column: 19, scope: !5055, inlinedAt: !5078)
!5144 = !DILocation(line: 1124, column: 5, scope: !5055, inlinedAt: !5078)
!5145 = !DILocation(line: 1124, column: 8, scope: !5055, inlinedAt: !5078)
!5146 = !DILocation(line: 1124, column: 24, scope: !5055, inlinedAt: !5078)
!5147 = !DILocation(line: 1125, column: 41, scope: !5055, inlinedAt: !5078)
!5148 = !DILocation(line: 1125, column: 48, scope: !5055, inlinedAt: !5078)
!5149 = !DILocation(line: 1125, column: 34, scope: !5055, inlinedAt: !5078)
!5150 = !DILocation(line: 1125, column: 37, scope: !5055, inlinedAt: !5078)
!5151 = !DILocation(line: 1125, column: 26, scope: !5055, inlinedAt: !5078)
!5152 = !DILocation(line: 1125, column: 12, scope: !5055, inlinedAt: !5078)
!5153 = !DILocation(line: 1125, column: 19, scope: !5055, inlinedAt: !5078)
!5154 = !DILocation(line: 1125, column: 5, scope: !5055, inlinedAt: !5078)
!5155 = !DILocation(line: 1125, column: 8, scope: !5055, inlinedAt: !5078)
!5156 = !DILocation(line: 1125, column: 24, scope: !5055, inlinedAt: !5078)
!5157 = !DILocation(line: 1127, column: 26, scope: !5055, inlinedAt: !5078)
!5158 = !DILocation(line: 1127, column: 19, scope: !5055, inlinedAt: !5078)
!5159 = !DILocation(line: 1127, column: 22, scope: !5055, inlinedAt: !5078)
!5160 = !DILocation(line: 1127, column: 48, scope: !5055, inlinedAt: !5078)
!5161 = !DILocation(line: 1127, column: 37, scope: !5055, inlinedAt: !5078)
!5162 = !DILocation(line: 1127, column: 40, scope: !5055, inlinedAt: !5078)
!5163 = !DILocation(line: 1127, column: 35, scope: !5055, inlinedAt: !5078)
!5164 = !DILocation(line: 1128, column: 26, scope: !5055, inlinedAt: !5078)
!5165 = !DILocation(line: 1128, column: 33, scope: !5055, inlinedAt: !5078)
!5166 = !DILocation(line: 1128, column: 19, scope: !5055, inlinedAt: !5078)
!5167 = !DILocation(line: 1128, column: 22, scope: !5055, inlinedAt: !5078)
!5168 = !DILocation(line: 1128, column: 51, scope: !5055, inlinedAt: !5078)
!5169 = !DILocation(line: 1128, column: 40, scope: !5055, inlinedAt: !5078)
!5170 = !DILocation(line: 1128, column: 43, scope: !5055, inlinedAt: !5078)
!5171 = !DILocation(line: 1128, column: 38, scope: !5055, inlinedAt: !5078)
!5172 = !DILocation(line: 1127, column: 59, scope: !5055, inlinedAt: !5078)
!5173 = !DILocation(line: 1129, column: 26, scope: !5055, inlinedAt: !5078)
!5174 = !DILocation(line: 1129, column: 33, scope: !5055, inlinedAt: !5078)
!5175 = !DILocation(line: 1129, column: 19, scope: !5055, inlinedAt: !5078)
!5176 = !DILocation(line: 1129, column: 22, scope: !5055, inlinedAt: !5078)
!5177 = !DILocation(line: 1129, column: 51, scope: !5055, inlinedAt: !5078)
!5178 = !DILocation(line: 1129, column: 40, scope: !5055, inlinedAt: !5078)
!5179 = !DILocation(line: 1129, column: 43, scope: !5055, inlinedAt: !5078)
!5180 = !DILocation(line: 1129, column: 38, scope: !5055, inlinedAt: !5078)
!5181 = !DILocation(line: 1128, column: 62, scope: !5055, inlinedAt: !5078)
!5182 = !DILocation(line: 1130, column: 26, scope: !5055, inlinedAt: !5078)
!5183 = !DILocation(line: 1130, column: 33, scope: !5055, inlinedAt: !5078)
!5184 = !DILocation(line: 1130, column: 19, scope: !5055, inlinedAt: !5078)
!5185 = !DILocation(line: 1130, column: 22, scope: !5055, inlinedAt: !5078)
!5186 = !DILocation(line: 1130, column: 51, scope: !5055, inlinedAt: !5078)
!5187 = !DILocation(line: 1130, column: 40, scope: !5055, inlinedAt: !5078)
!5188 = !DILocation(line: 1130, column: 43, scope: !5055, inlinedAt: !5078)
!5189 = !DILocation(line: 1130, column: 38, scope: !5055, inlinedAt: !5078)
!5190 = !DILocation(line: 1129, column: 62, scope: !5055, inlinedAt: !5078)
!5191 = !DILocation(line: 1127, column: 17, scope: !5055, inlinedAt: !5078)
!5192 = !DILocation(line: 1133, column: 33, scope: !5055, inlinedAt: !5078)
!5193 = !DILocation(line: 1133, column: 40, scope: !5055, inlinedAt: !5078)
!5194 = !DILocation(line: 1133, column: 22, scope: !5055, inlinedAt: !5078)
!5195 = !DILocation(line: 1133, column: 25, scope: !5055, inlinedAt: !5078)
!5196 = !DILocation(line: 1133, column: 60, scope: !5055, inlinedAt: !5078)
!5197 = !DILocation(line: 1133, column: 49, scope: !5055, inlinedAt: !5078)
!5198 = !DILocation(line: 1133, column: 52, scope: !5055, inlinedAt: !5078)
!5199 = !DILocation(line: 1133, column: 68, scope: !5055, inlinedAt: !5078)
!5200 = !DILocation(line: 1133, column: 74, scope: !5055, inlinedAt: !5078)
!5201 = !DILocation(line: 1133, column: 45, scope: !5055, inlinedAt: !5078)
!5202 = !DILocation(line: 1133, column: 12, scope: !5055, inlinedAt: !5078)
!5203 = !DILocation(line: 1133, column: 5, scope: !5055, inlinedAt: !5078)
!5204 = !DILocation(line: 1133, column: 8, scope: !5055, inlinedAt: !5078)
!5205 = !DILocation(line: 1133, column: 20, scope: !5055, inlinedAt: !5078)
!5206 = !DILocation(line: 1134, column: 37, scope: !5055, inlinedAt: !5078)
!5207 = !DILocation(line: 1134, column: 30, scope: !5055, inlinedAt: !5078)
!5208 = !DILocation(line: 1134, column: 33, scope: !5055, inlinedAt: !5078)
!5209 = !DILocation(line: 1134, column: 22, scope: !5055, inlinedAt: !5078)
!5210 = !DILocation(line: 1134, column: 12, scope: !5055, inlinedAt: !5078)
!5211 = !DILocation(line: 1134, column: 5, scope: !5055, inlinedAt: !5078)
!5212 = !DILocation(line: 1134, column: 8, scope: !5055, inlinedAt: !5078)
!5213 = !DILocation(line: 1134, column: 20, scope: !5055, inlinedAt: !5078)
!5214 = !DILocation(line: 1135, column: 33, scope: !5055, inlinedAt: !5078)
!5215 = !DILocation(line: 1135, column: 26, scope: !5055, inlinedAt: !5078)
!5216 = !DILocation(line: 1135, column: 29, scope: !5055, inlinedAt: !5078)
!5217 = !DILocation(line: 1135, column: 50, scope: !5055, inlinedAt: !5078)
!5218 = !DILocation(line: 1135, column: 57, scope: !5055, inlinedAt: !5078)
!5219 = !DILocation(line: 1135, column: 43, scope: !5055, inlinedAt: !5078)
!5220 = !DILocation(line: 1135, column: 46, scope: !5055, inlinedAt: !5078)
!5221 = !DILocation(line: 1135, column: 41, scope: !5055, inlinedAt: !5078)
!5222 = !DILocation(line: 1135, column: 12, scope: !5055, inlinedAt: !5078)
!5223 = !DILocation(line: 1135, column: 19, scope: !5055, inlinedAt: !5078)
!5224 = !DILocation(line: 1135, column: 5, scope: !5055, inlinedAt: !5078)
!5225 = !DILocation(line: 1135, column: 8, scope: !5055, inlinedAt: !5078)
!5226 = !DILocation(line: 1135, column: 24, scope: !5055, inlinedAt: !5078)
!5227 = !DILocation(line: 1136, column: 41, scope: !5055, inlinedAt: !5078)
!5228 = !DILocation(line: 1136, column: 48, scope: !5055, inlinedAt: !5078)
!5229 = !DILocation(line: 1136, column: 34, scope: !5055, inlinedAt: !5078)
!5230 = !DILocation(line: 1136, column: 37, scope: !5055, inlinedAt: !5078)
!5231 = !DILocation(line: 1136, column: 26, scope: !5055, inlinedAt: !5078)
!5232 = !DILocation(line: 1136, column: 12, scope: !5055, inlinedAt: !5078)
!5233 = !DILocation(line: 1136, column: 19, scope: !5055, inlinedAt: !5078)
!5234 = !DILocation(line: 1136, column: 5, scope: !5055, inlinedAt: !5078)
!5235 = !DILocation(line: 1136, column: 8, scope: !5055, inlinedAt: !5078)
!5236 = !DILocation(line: 1136, column: 24, scope: !5055, inlinedAt: !5078)
!5237 = !DILocation(line: 1137, column: 37, scope: !5055, inlinedAt: !5078)
!5238 = !DILocation(line: 1137, column: 44, scope: !5055, inlinedAt: !5078)
!5239 = !DILocation(line: 1137, column: 26, scope: !5055, inlinedAt: !5078)
!5240 = !DILocation(line: 1137, column: 29, scope: !5055, inlinedAt: !5078)
!5241 = !DILocation(line: 1137, column: 16, scope: !5055, inlinedAt: !5078)
!5242 = !DILocation(line: 1137, column: 5, scope: !5055, inlinedAt: !5078)
!5243 = !DILocation(line: 1137, column: 8, scope: !5055, inlinedAt: !5078)
!5244 = !DILocation(line: 1137, column: 24, scope: !5055, inlinedAt: !5078)
!5245 = !DILocation(line: 1139, column: 26, scope: !5055, inlinedAt: !5078)
!5246 = !DILocation(line: 1139, column: 19, scope: !5055, inlinedAt: !5078)
!5247 = !DILocation(line: 1139, column: 22, scope: !5055, inlinedAt: !5078)
!5248 = !DILocation(line: 1139, column: 48, scope: !5055, inlinedAt: !5078)
!5249 = !DILocation(line: 1139, column: 37, scope: !5055, inlinedAt: !5078)
!5250 = !DILocation(line: 1139, column: 40, scope: !5055, inlinedAt: !5078)
!5251 = !DILocation(line: 1139, column: 35, scope: !5055, inlinedAt: !5078)
!5252 = !DILocation(line: 1140, column: 26, scope: !5055, inlinedAt: !5078)
!5253 = !DILocation(line: 1140, column: 33, scope: !5055, inlinedAt: !5078)
!5254 = !DILocation(line: 1140, column: 19, scope: !5055, inlinedAt: !5078)
!5255 = !DILocation(line: 1140, column: 22, scope: !5055, inlinedAt: !5078)
!5256 = !DILocation(line: 1140, column: 51, scope: !5055, inlinedAt: !5078)
!5257 = !DILocation(line: 1140, column: 40, scope: !5055, inlinedAt: !5078)
!5258 = !DILocation(line: 1140, column: 43, scope: !5055, inlinedAt: !5078)
!5259 = !DILocation(line: 1140, column: 38, scope: !5055, inlinedAt: !5078)
!5260 = !DILocation(line: 1139, column: 59, scope: !5055, inlinedAt: !5078)
!5261 = !DILocation(line: 1141, column: 26, scope: !5055, inlinedAt: !5078)
!5262 = !DILocation(line: 1141, column: 33, scope: !5055, inlinedAt: !5078)
!5263 = !DILocation(line: 1141, column: 19, scope: !5055, inlinedAt: !5078)
!5264 = !DILocation(line: 1141, column: 22, scope: !5055, inlinedAt: !5078)
!5265 = !DILocation(line: 1141, column: 51, scope: !5055, inlinedAt: !5078)
!5266 = !DILocation(line: 1141, column: 40, scope: !5055, inlinedAt: !5078)
!5267 = !DILocation(line: 1141, column: 43, scope: !5055, inlinedAt: !5078)
!5268 = !DILocation(line: 1141, column: 38, scope: !5055, inlinedAt: !5078)
!5269 = !DILocation(line: 1140, column: 62, scope: !5055, inlinedAt: !5078)
!5270 = !DILocation(line: 1142, column: 26, scope: !5055, inlinedAt: !5078)
!5271 = !DILocation(line: 1142, column: 33, scope: !5055, inlinedAt: !5078)
!5272 = !DILocation(line: 1142, column: 19, scope: !5055, inlinedAt: !5078)
!5273 = !DILocation(line: 1142, column: 22, scope: !5055, inlinedAt: !5078)
!5274 = !DILocation(line: 1142, column: 51, scope: !5055, inlinedAt: !5078)
!5275 = !DILocation(line: 1142, column: 40, scope: !5055, inlinedAt: !5078)
!5276 = !DILocation(line: 1142, column: 43, scope: !5055, inlinedAt: !5078)
!5277 = !DILocation(line: 1142, column: 38, scope: !5055, inlinedAt: !5078)
!5278 = !DILocation(line: 1141, column: 62, scope: !5055, inlinedAt: !5078)
!5279 = !DILocation(line: 1143, column: 26, scope: !5055, inlinedAt: !5078)
!5280 = !DILocation(line: 1143, column: 33, scope: !5055, inlinedAt: !5078)
!5281 = !DILocation(line: 1143, column: 19, scope: !5055, inlinedAt: !5078)
!5282 = !DILocation(line: 1143, column: 22, scope: !5055, inlinedAt: !5078)
!5283 = !DILocation(line: 1143, column: 51, scope: !5055, inlinedAt: !5078)
!5284 = !DILocation(line: 1143, column: 40, scope: !5055, inlinedAt: !5078)
!5285 = !DILocation(line: 1143, column: 43, scope: !5055, inlinedAt: !5078)
!5286 = !DILocation(line: 1143, column: 38, scope: !5055, inlinedAt: !5078)
!5287 = !DILocation(line: 1142, column: 62, scope: !5055, inlinedAt: !5078)
!5288 = !DILocation(line: 1139, column: 17, scope: !5055, inlinedAt: !5078)
!5289 = !DILocation(line: 1145, column: 24, scope: !5055, inlinedAt: !5078)
!5290 = !DILocation(line: 1145, column: 36, scope: !5055, inlinedAt: !5078)
!5291 = !DILocation(line: 1145, column: 51, scope: !5055, inlinedAt: !5078)
!5292 = !DILocation(line: 1145, column: 63, scope: !5055, inlinedAt: !5078)
!5293 = !DILocation(line: 1145, column: 48, scope: !5055, inlinedAt: !5078)
!5294 = !DILocation(line: 1145, column: 70, scope: !5055, inlinedAt: !5078)
!5295 = !DILocation(line: 1145, column: 32, scope: !5055, inlinedAt: !5078)
!5296 = !DILocation(line: 1145, column: 14, scope: !5055, inlinedAt: !5078)
!5297 = !DILocation(line: 1145, column: 5, scope: !5055, inlinedAt: !5078)
!5298 = !DILocation(line: 1145, column: 8, scope: !5055, inlinedAt: !5078)
!5299 = !DILocation(line: 1145, column: 22, scope: !5055, inlinedAt: !5078)
!5300 = !DILocation(line: 1146, column: 35, scope: !5055, inlinedAt: !5078)
!5301 = !DILocation(line: 1146, column: 26, scope: !5055, inlinedAt: !5078)
!5302 = !DILocation(line: 1146, column: 29, scope: !5055, inlinedAt: !5078)
!5303 = !DILocation(line: 1146, column: 58, scope: !5055, inlinedAt: !5078)
!5304 = !DILocation(line: 1146, column: 47, scope: !5055, inlinedAt: !5078)
!5305 = !DILocation(line: 1146, column: 50, scope: !5055, inlinedAt: !5078)
!5306 = !DILocation(line: 1146, column: 66, scope: !5055, inlinedAt: !5078)
!5307 = !DILocation(line: 1146, column: 72, scope: !5055, inlinedAt: !5078)
!5308 = !DILocation(line: 1146, column: 43, scope: !5055, inlinedAt: !5078)
!5309 = !DILocation(line: 1146, column: 16, scope: !5055, inlinedAt: !5078)
!5310 = !DILocation(line: 1146, column: 5, scope: !5055, inlinedAt: !5078)
!5311 = !DILocation(line: 1146, column: 8, scope: !5055, inlinedAt: !5078)
!5312 = !DILocation(line: 1146, column: 24, scope: !5055, inlinedAt: !5078)
!5313 = !DILocation(line: 1148, column: 20, scope: !5055, inlinedAt: !5078)
!5314 = !DILocation(line: 1148, column: 12, scope: !5055, inlinedAt: !5078)
!5315 = !DILocation(line: 1148, column: 10, scope: !5055, inlinedAt: !5078)
!5316 = !DILocation(line: 1149, column: 37, scope: !5055, inlinedAt: !5078)
!5317 = !DILocation(line: 1149, column: 30, scope: !5055, inlinedAt: !5078)
!5318 = !DILocation(line: 1149, column: 33, scope: !5055, inlinedAt: !5078)
!5319 = !DILocation(line: 1149, column: 48, scope: !5055, inlinedAt: !5078)
!5320 = !DILocation(line: 1149, column: 46, scope: !5055, inlinedAt: !5078)
!5321 = !DILocation(line: 1149, column: 16, scope: !5055, inlinedAt: !5078)
!5322 = !DILocation(line: 1149, column: 5, scope: !5055, inlinedAt: !5078)
!5323 = !DILocation(line: 1149, column: 8, scope: !5055, inlinedAt: !5078)
!5324 = !DILocation(line: 1149, column: 27, scope: !5055, inlinedAt: !5078)
!5325 = !DILocation(line: 1150, column: 37, scope: !5055, inlinedAt: !5078)
!5326 = !DILocation(line: 1150, column: 44, scope: !5055, inlinedAt: !5078)
!5327 = !DILocation(line: 1150, column: 30, scope: !5055, inlinedAt: !5078)
!5328 = !DILocation(line: 1150, column: 33, scope: !5055, inlinedAt: !5078)
!5329 = !DILocation(line: 1150, column: 51, scope: !5055, inlinedAt: !5078)
!5330 = !DILocation(line: 1150, column: 49, scope: !5055, inlinedAt: !5078)
!5331 = !DILocation(line: 1150, column: 16, scope: !5055, inlinedAt: !5078)
!5332 = !DILocation(line: 1150, column: 5, scope: !5055, inlinedAt: !5078)
!5333 = !DILocation(line: 1150, column: 8, scope: !5055, inlinedAt: !5078)
!5334 = !DILocation(line: 1150, column: 27, scope: !5055, inlinedAt: !5078)
!5335 = !DILocation(line: 1151, column: 37, scope: !5055, inlinedAt: !5078)
!5336 = !DILocation(line: 1151, column: 44, scope: !5055, inlinedAt: !5078)
!5337 = !DILocation(line: 1151, column: 30, scope: !5055, inlinedAt: !5078)
!5338 = !DILocation(line: 1151, column: 33, scope: !5055, inlinedAt: !5078)
!5339 = !DILocation(line: 1151, column: 51, scope: !5055, inlinedAt: !5078)
!5340 = !DILocation(line: 1151, column: 49, scope: !5055, inlinedAt: !5078)
!5341 = !DILocation(line: 1151, column: 16, scope: !5055, inlinedAt: !5078)
!5342 = !DILocation(line: 1151, column: 5, scope: !5055, inlinedAt: !5078)
!5343 = !DILocation(line: 1151, column: 8, scope: !5055, inlinedAt: !5078)
!5344 = !DILocation(line: 1151, column: 27, scope: !5055, inlinedAt: !5078)
!5345 = !DILocation(line: 1152, column: 37, scope: !5055, inlinedAt: !5078)
!5346 = !DILocation(line: 1152, column: 44, scope: !5055, inlinedAt: !5078)
!5347 = !DILocation(line: 1152, column: 30, scope: !5055, inlinedAt: !5078)
!5348 = !DILocation(line: 1152, column: 33, scope: !5055, inlinedAt: !5078)
!5349 = !DILocation(line: 1152, column: 51, scope: !5055, inlinedAt: !5078)
!5350 = !DILocation(line: 1152, column: 49, scope: !5055, inlinedAt: !5078)
!5351 = !DILocation(line: 1152, column: 16, scope: !5055, inlinedAt: !5078)
!5352 = !DILocation(line: 1152, column: 5, scope: !5055, inlinedAt: !5078)
!5353 = !DILocation(line: 1152, column: 8, scope: !5055, inlinedAt: !5078)
!5354 = !DILocation(line: 1152, column: 27, scope: !5055, inlinedAt: !5078)
!5355 = !DILocation(line: 1153, column: 37, scope: !5055, inlinedAt: !5078)
!5356 = !DILocation(line: 1153, column: 30, scope: !5055, inlinedAt: !5078)
!5357 = !DILocation(line: 1153, column: 33, scope: !5055, inlinedAt: !5078)
!5358 = !DILocation(line: 1153, column: 48, scope: !5055, inlinedAt: !5078)
!5359 = !DILocation(line: 1153, column: 46, scope: !5055, inlinedAt: !5078)
!5360 = !DILocation(line: 1153, column: 16, scope: !5055, inlinedAt: !5078)
!5361 = !DILocation(line: 1153, column: 5, scope: !5055, inlinedAt: !5078)
!5362 = !DILocation(line: 1153, column: 8, scope: !5055, inlinedAt: !5078)
!5363 = !DILocation(line: 1153, column: 27, scope: !5055, inlinedAt: !5078)
!5364 = !DILocation(line: 1154, column: 37, scope: !5055, inlinedAt: !5078)
!5365 = !DILocation(line: 1154, column: 44, scope: !5055, inlinedAt: !5078)
!5366 = !DILocation(line: 1154, column: 30, scope: !5055, inlinedAt: !5078)
!5367 = !DILocation(line: 1154, column: 33, scope: !5055, inlinedAt: !5078)
!5368 = !DILocation(line: 1154, column: 51, scope: !5055, inlinedAt: !5078)
!5369 = !DILocation(line: 1154, column: 49, scope: !5055, inlinedAt: !5078)
!5370 = !DILocation(line: 1154, column: 16, scope: !5055, inlinedAt: !5078)
!5371 = !DILocation(line: 1154, column: 5, scope: !5055, inlinedAt: !5078)
!5372 = !DILocation(line: 1154, column: 8, scope: !5055, inlinedAt: !5078)
!5373 = !DILocation(line: 1154, column: 27, scope: !5055, inlinedAt: !5078)
!5374 = !DILocation(line: 1155, column: 37, scope: !5055, inlinedAt: !5078)
!5375 = !DILocation(line: 1155, column: 44, scope: !5055, inlinedAt: !5078)
!5376 = !DILocation(line: 1155, column: 30, scope: !5055, inlinedAt: !5078)
!5377 = !DILocation(line: 1155, column: 33, scope: !5055, inlinedAt: !5078)
!5378 = !DILocation(line: 1155, column: 51, scope: !5055, inlinedAt: !5078)
!5379 = !DILocation(line: 1155, column: 49, scope: !5055, inlinedAt: !5078)
!5380 = !DILocation(line: 1155, column: 16, scope: !5055, inlinedAt: !5078)
!5381 = !DILocation(line: 1155, column: 5, scope: !5055, inlinedAt: !5078)
!5382 = !DILocation(line: 1155, column: 8, scope: !5055, inlinedAt: !5078)
!5383 = !DILocation(line: 1155, column: 27, scope: !5055, inlinedAt: !5078)
!5384 = !DILocation(line: 1156, column: 37, scope: !5055, inlinedAt: !5078)
!5385 = !DILocation(line: 1156, column: 44, scope: !5055, inlinedAt: !5078)
!5386 = !DILocation(line: 1156, column: 30, scope: !5055, inlinedAt: !5078)
!5387 = !DILocation(line: 1156, column: 33, scope: !5055, inlinedAt: !5078)
!5388 = !DILocation(line: 1156, column: 51, scope: !5055, inlinedAt: !5078)
!5389 = !DILocation(line: 1156, column: 49, scope: !5055, inlinedAt: !5078)
!5390 = !DILocation(line: 1156, column: 16, scope: !5055, inlinedAt: !5078)
!5391 = !DILocation(line: 1156, column: 5, scope: !5055, inlinedAt: !5078)
!5392 = !DILocation(line: 1156, column: 8, scope: !5055, inlinedAt: !5078)
!5393 = !DILocation(line: 1156, column: 27, scope: !5055, inlinedAt: !5078)
!5394 = !DILocation(line: 1157, column: 37, scope: !5055, inlinedAt: !5078)
!5395 = !DILocation(line: 1157, column: 44, scope: !5055, inlinedAt: !5078)
!5396 = !DILocation(line: 1157, column: 30, scope: !5055, inlinedAt: !5078)
!5397 = !DILocation(line: 1157, column: 33, scope: !5055, inlinedAt: !5078)
!5398 = !DILocation(line: 1157, column: 51, scope: !5055, inlinedAt: !5078)
!5399 = !DILocation(line: 1157, column: 49, scope: !5055, inlinedAt: !5078)
!5400 = !DILocation(line: 1157, column: 16, scope: !5055, inlinedAt: !5078)
!5401 = !DILocation(line: 1157, column: 5, scope: !5055, inlinedAt: !5078)
!5402 = !DILocation(line: 1157, column: 8, scope: !5055, inlinedAt: !5078)
!5403 = !DILocation(line: 1157, column: 27, scope: !5055, inlinedAt: !5078)
!5404 = !DILocation(line: 1159, column: 23, scope: !5055, inlinedAt: !5078)
!5405 = !DILocation(line: 1159, column: 12, scope: !5055, inlinedAt: !5078)
!5406 = !DILocation(line: 1159, column: 15, scope: !5055, inlinedAt: !5078)
!5407 = !DILocation(line: 1172, column: 10, scope: !5058)
!5408 = !DILocation(line: 1172, column: 19, scope: !5058)
!5409 = !DILocation(line: 1174, column: 17, scope: !5058)
!5410 = !DILocation(line: 1175, column: 45, scope: !5058)
!5411 = !DILocation(line: 1175, column: 49, scope: !5058)
!5412 = !DILocation(line: 1175, column: 48, scope: !5058)
!5413 = !DILocation(line: 1175, column: 21, scope: !5058)
!5414 = !DILocation(line: 1122, column: 31, scope: !5055, inlinedAt: !5057)
!5415 = !DILocation(line: 1122, column: 22, scope: !5055, inlinedAt: !5057)
!5416 = !DILocation(line: 1122, column: 25, scope: !5055, inlinedAt: !5057)
!5417 = !DILocation(line: 1122, column: 12, scope: !5055, inlinedAt: !5057)
!5418 = !DILocation(line: 1122, column: 5, scope: !5055, inlinedAt: !5057)
!5419 = !DILocation(line: 1122, column: 8, scope: !5055, inlinedAt: !5057)
!5420 = !DILocation(line: 1122, column: 20, scope: !5055, inlinedAt: !5057)
!5421 = !DILocation(line: 1123, column: 37, scope: !5055, inlinedAt: !5057)
!5422 = !DILocation(line: 1123, column: 30, scope: !5055, inlinedAt: !5057)
!5423 = !DILocation(line: 1123, column: 33, scope: !5055, inlinedAt: !5057)
!5424 = !DILocation(line: 1123, column: 22, scope: !5055, inlinedAt: !5057)
!5425 = !DILocation(line: 1123, column: 12, scope: !5055, inlinedAt: !5057)
!5426 = !DILocation(line: 1123, column: 5, scope: !5055, inlinedAt: !5057)
!5427 = !DILocation(line: 1123, column: 8, scope: !5055, inlinedAt: !5057)
!5428 = !DILocation(line: 1123, column: 20, scope: !5055, inlinedAt: !5057)
!5429 = !DILocation(line: 1124, column: 33, scope: !5055, inlinedAt: !5057)
!5430 = !DILocation(line: 1124, column: 26, scope: !5055, inlinedAt: !5057)
!5431 = !DILocation(line: 1124, column: 29, scope: !5055, inlinedAt: !5057)
!5432 = !DILocation(line: 1124, column: 50, scope: !5055, inlinedAt: !5057)
!5433 = !DILocation(line: 1124, column: 57, scope: !5055, inlinedAt: !5057)
!5434 = !DILocation(line: 1124, column: 43, scope: !5055, inlinedAt: !5057)
!5435 = !DILocation(line: 1124, column: 46, scope: !5055, inlinedAt: !5057)
!5436 = !DILocation(line: 1124, column: 41, scope: !5055, inlinedAt: !5057)
!5437 = !DILocation(line: 1124, column: 12, scope: !5055, inlinedAt: !5057)
!5438 = !DILocation(line: 1124, column: 19, scope: !5055, inlinedAt: !5057)
!5439 = !DILocation(line: 1124, column: 5, scope: !5055, inlinedAt: !5057)
!5440 = !DILocation(line: 1124, column: 8, scope: !5055, inlinedAt: !5057)
!5441 = !DILocation(line: 1124, column: 24, scope: !5055, inlinedAt: !5057)
!5442 = !DILocation(line: 1125, column: 41, scope: !5055, inlinedAt: !5057)
!5443 = !DILocation(line: 1125, column: 48, scope: !5055, inlinedAt: !5057)
!5444 = !DILocation(line: 1125, column: 34, scope: !5055, inlinedAt: !5057)
!5445 = !DILocation(line: 1125, column: 37, scope: !5055, inlinedAt: !5057)
!5446 = !DILocation(line: 1125, column: 26, scope: !5055, inlinedAt: !5057)
!5447 = !DILocation(line: 1125, column: 12, scope: !5055, inlinedAt: !5057)
!5448 = !DILocation(line: 1125, column: 19, scope: !5055, inlinedAt: !5057)
!5449 = !DILocation(line: 1125, column: 5, scope: !5055, inlinedAt: !5057)
!5450 = !DILocation(line: 1125, column: 8, scope: !5055, inlinedAt: !5057)
!5451 = !DILocation(line: 1125, column: 24, scope: !5055, inlinedAt: !5057)
!5452 = !DILocation(line: 1127, column: 26, scope: !5055, inlinedAt: !5057)
!5453 = !DILocation(line: 1127, column: 19, scope: !5055, inlinedAt: !5057)
!5454 = !DILocation(line: 1127, column: 22, scope: !5055, inlinedAt: !5057)
!5455 = !DILocation(line: 1127, column: 48, scope: !5055, inlinedAt: !5057)
!5456 = !DILocation(line: 1127, column: 37, scope: !5055, inlinedAt: !5057)
!5457 = !DILocation(line: 1127, column: 40, scope: !5055, inlinedAt: !5057)
!5458 = !DILocation(line: 1127, column: 35, scope: !5055, inlinedAt: !5057)
!5459 = !DILocation(line: 1128, column: 26, scope: !5055, inlinedAt: !5057)
!5460 = !DILocation(line: 1128, column: 33, scope: !5055, inlinedAt: !5057)
!5461 = !DILocation(line: 1128, column: 19, scope: !5055, inlinedAt: !5057)
!5462 = !DILocation(line: 1128, column: 22, scope: !5055, inlinedAt: !5057)
!5463 = !DILocation(line: 1128, column: 51, scope: !5055, inlinedAt: !5057)
!5464 = !DILocation(line: 1128, column: 40, scope: !5055, inlinedAt: !5057)
!5465 = !DILocation(line: 1128, column: 43, scope: !5055, inlinedAt: !5057)
!5466 = !DILocation(line: 1128, column: 38, scope: !5055, inlinedAt: !5057)
!5467 = !DILocation(line: 1127, column: 59, scope: !5055, inlinedAt: !5057)
!5468 = !DILocation(line: 1129, column: 26, scope: !5055, inlinedAt: !5057)
!5469 = !DILocation(line: 1129, column: 33, scope: !5055, inlinedAt: !5057)
!5470 = !DILocation(line: 1129, column: 19, scope: !5055, inlinedAt: !5057)
!5471 = !DILocation(line: 1129, column: 22, scope: !5055, inlinedAt: !5057)
!5472 = !DILocation(line: 1129, column: 51, scope: !5055, inlinedAt: !5057)
!5473 = !DILocation(line: 1129, column: 40, scope: !5055, inlinedAt: !5057)
!5474 = !DILocation(line: 1129, column: 43, scope: !5055, inlinedAt: !5057)
!5475 = !DILocation(line: 1129, column: 38, scope: !5055, inlinedAt: !5057)
!5476 = !DILocation(line: 1128, column: 62, scope: !5055, inlinedAt: !5057)
!5477 = !DILocation(line: 1130, column: 26, scope: !5055, inlinedAt: !5057)
!5478 = !DILocation(line: 1130, column: 33, scope: !5055, inlinedAt: !5057)
!5479 = !DILocation(line: 1130, column: 19, scope: !5055, inlinedAt: !5057)
!5480 = !DILocation(line: 1130, column: 22, scope: !5055, inlinedAt: !5057)
!5481 = !DILocation(line: 1130, column: 51, scope: !5055, inlinedAt: !5057)
!5482 = !DILocation(line: 1130, column: 40, scope: !5055, inlinedAt: !5057)
!5483 = !DILocation(line: 1130, column: 43, scope: !5055, inlinedAt: !5057)
!5484 = !DILocation(line: 1130, column: 38, scope: !5055, inlinedAt: !5057)
!5485 = !DILocation(line: 1129, column: 62, scope: !5055, inlinedAt: !5057)
!5486 = !DILocation(line: 1127, column: 17, scope: !5055, inlinedAt: !5057)
!5487 = !DILocation(line: 1133, column: 33, scope: !5055, inlinedAt: !5057)
!5488 = !DILocation(line: 1133, column: 40, scope: !5055, inlinedAt: !5057)
!5489 = !DILocation(line: 1133, column: 22, scope: !5055, inlinedAt: !5057)
!5490 = !DILocation(line: 1133, column: 25, scope: !5055, inlinedAt: !5057)
!5491 = !DILocation(line: 1133, column: 60, scope: !5055, inlinedAt: !5057)
!5492 = !DILocation(line: 1133, column: 49, scope: !5055, inlinedAt: !5057)
!5493 = !DILocation(line: 1133, column: 52, scope: !5055, inlinedAt: !5057)
!5494 = !DILocation(line: 1133, column: 68, scope: !5055, inlinedAt: !5057)
!5495 = !DILocation(line: 1133, column: 74, scope: !5055, inlinedAt: !5057)
!5496 = !DILocation(line: 1133, column: 45, scope: !5055, inlinedAt: !5057)
!5497 = !DILocation(line: 1133, column: 12, scope: !5055, inlinedAt: !5057)
!5498 = !DILocation(line: 1133, column: 5, scope: !5055, inlinedAt: !5057)
!5499 = !DILocation(line: 1133, column: 8, scope: !5055, inlinedAt: !5057)
!5500 = !DILocation(line: 1133, column: 20, scope: !5055, inlinedAt: !5057)
!5501 = !DILocation(line: 1134, column: 37, scope: !5055, inlinedAt: !5057)
!5502 = !DILocation(line: 1134, column: 30, scope: !5055, inlinedAt: !5057)
!5503 = !DILocation(line: 1134, column: 33, scope: !5055, inlinedAt: !5057)
!5504 = !DILocation(line: 1134, column: 22, scope: !5055, inlinedAt: !5057)
!5505 = !DILocation(line: 1134, column: 12, scope: !5055, inlinedAt: !5057)
!5506 = !DILocation(line: 1134, column: 5, scope: !5055, inlinedAt: !5057)
!5507 = !DILocation(line: 1134, column: 8, scope: !5055, inlinedAt: !5057)
!5508 = !DILocation(line: 1134, column: 20, scope: !5055, inlinedAt: !5057)
!5509 = !DILocation(line: 1135, column: 33, scope: !5055, inlinedAt: !5057)
!5510 = !DILocation(line: 1135, column: 26, scope: !5055, inlinedAt: !5057)
!5511 = !DILocation(line: 1135, column: 29, scope: !5055, inlinedAt: !5057)
!5512 = !DILocation(line: 1135, column: 50, scope: !5055, inlinedAt: !5057)
!5513 = !DILocation(line: 1135, column: 57, scope: !5055, inlinedAt: !5057)
!5514 = !DILocation(line: 1135, column: 43, scope: !5055, inlinedAt: !5057)
!5515 = !DILocation(line: 1135, column: 46, scope: !5055, inlinedAt: !5057)
!5516 = !DILocation(line: 1135, column: 41, scope: !5055, inlinedAt: !5057)
!5517 = !DILocation(line: 1135, column: 12, scope: !5055, inlinedAt: !5057)
!5518 = !DILocation(line: 1135, column: 19, scope: !5055, inlinedAt: !5057)
!5519 = !DILocation(line: 1135, column: 5, scope: !5055, inlinedAt: !5057)
!5520 = !DILocation(line: 1135, column: 8, scope: !5055, inlinedAt: !5057)
!5521 = !DILocation(line: 1135, column: 24, scope: !5055, inlinedAt: !5057)
!5522 = !DILocation(line: 1136, column: 41, scope: !5055, inlinedAt: !5057)
!5523 = !DILocation(line: 1136, column: 48, scope: !5055, inlinedAt: !5057)
!5524 = !DILocation(line: 1136, column: 34, scope: !5055, inlinedAt: !5057)
!5525 = !DILocation(line: 1136, column: 37, scope: !5055, inlinedAt: !5057)
!5526 = !DILocation(line: 1136, column: 26, scope: !5055, inlinedAt: !5057)
!5527 = !DILocation(line: 1136, column: 12, scope: !5055, inlinedAt: !5057)
!5528 = !DILocation(line: 1136, column: 19, scope: !5055, inlinedAt: !5057)
!5529 = !DILocation(line: 1136, column: 5, scope: !5055, inlinedAt: !5057)
!5530 = !DILocation(line: 1136, column: 8, scope: !5055, inlinedAt: !5057)
!5531 = !DILocation(line: 1136, column: 24, scope: !5055, inlinedAt: !5057)
!5532 = !DILocation(line: 1137, column: 37, scope: !5055, inlinedAt: !5057)
!5533 = !DILocation(line: 1137, column: 44, scope: !5055, inlinedAt: !5057)
!5534 = !DILocation(line: 1137, column: 26, scope: !5055, inlinedAt: !5057)
!5535 = !DILocation(line: 1137, column: 29, scope: !5055, inlinedAt: !5057)
!5536 = !DILocation(line: 1137, column: 16, scope: !5055, inlinedAt: !5057)
!5537 = !DILocation(line: 1137, column: 5, scope: !5055, inlinedAt: !5057)
!5538 = !DILocation(line: 1137, column: 8, scope: !5055, inlinedAt: !5057)
!5539 = !DILocation(line: 1137, column: 24, scope: !5055, inlinedAt: !5057)
!5540 = !DILocation(line: 1139, column: 26, scope: !5055, inlinedAt: !5057)
!5541 = !DILocation(line: 1139, column: 19, scope: !5055, inlinedAt: !5057)
!5542 = !DILocation(line: 1139, column: 22, scope: !5055, inlinedAt: !5057)
!5543 = !DILocation(line: 1139, column: 48, scope: !5055, inlinedAt: !5057)
!5544 = !DILocation(line: 1139, column: 37, scope: !5055, inlinedAt: !5057)
!5545 = !DILocation(line: 1139, column: 40, scope: !5055, inlinedAt: !5057)
!5546 = !DILocation(line: 1139, column: 35, scope: !5055, inlinedAt: !5057)
!5547 = !DILocation(line: 1140, column: 26, scope: !5055, inlinedAt: !5057)
!5548 = !DILocation(line: 1140, column: 33, scope: !5055, inlinedAt: !5057)
!5549 = !DILocation(line: 1140, column: 19, scope: !5055, inlinedAt: !5057)
!5550 = !DILocation(line: 1140, column: 22, scope: !5055, inlinedAt: !5057)
!5551 = !DILocation(line: 1140, column: 51, scope: !5055, inlinedAt: !5057)
!5552 = !DILocation(line: 1140, column: 40, scope: !5055, inlinedAt: !5057)
!5553 = !DILocation(line: 1140, column: 43, scope: !5055, inlinedAt: !5057)
!5554 = !DILocation(line: 1140, column: 38, scope: !5055, inlinedAt: !5057)
!5555 = !DILocation(line: 1139, column: 59, scope: !5055, inlinedAt: !5057)
!5556 = !DILocation(line: 1141, column: 26, scope: !5055, inlinedAt: !5057)
!5557 = !DILocation(line: 1141, column: 33, scope: !5055, inlinedAt: !5057)
!5558 = !DILocation(line: 1141, column: 19, scope: !5055, inlinedAt: !5057)
!5559 = !DILocation(line: 1141, column: 22, scope: !5055, inlinedAt: !5057)
!5560 = !DILocation(line: 1141, column: 51, scope: !5055, inlinedAt: !5057)
!5561 = !DILocation(line: 1141, column: 40, scope: !5055, inlinedAt: !5057)
!5562 = !DILocation(line: 1141, column: 43, scope: !5055, inlinedAt: !5057)
!5563 = !DILocation(line: 1141, column: 38, scope: !5055, inlinedAt: !5057)
!5564 = !DILocation(line: 1140, column: 62, scope: !5055, inlinedAt: !5057)
!5565 = !DILocation(line: 1142, column: 26, scope: !5055, inlinedAt: !5057)
!5566 = !DILocation(line: 1142, column: 33, scope: !5055, inlinedAt: !5057)
!5567 = !DILocation(line: 1142, column: 19, scope: !5055, inlinedAt: !5057)
!5568 = !DILocation(line: 1142, column: 22, scope: !5055, inlinedAt: !5057)
!5569 = !DILocation(line: 1142, column: 51, scope: !5055, inlinedAt: !5057)
!5570 = !DILocation(line: 1142, column: 40, scope: !5055, inlinedAt: !5057)
!5571 = !DILocation(line: 1142, column: 43, scope: !5055, inlinedAt: !5057)
!5572 = !DILocation(line: 1142, column: 38, scope: !5055, inlinedAt: !5057)
!5573 = !DILocation(line: 1141, column: 62, scope: !5055, inlinedAt: !5057)
!5574 = !DILocation(line: 1143, column: 26, scope: !5055, inlinedAt: !5057)
!5575 = !DILocation(line: 1143, column: 33, scope: !5055, inlinedAt: !5057)
!5576 = !DILocation(line: 1143, column: 19, scope: !5055, inlinedAt: !5057)
!5577 = !DILocation(line: 1143, column: 22, scope: !5055, inlinedAt: !5057)
!5578 = !DILocation(line: 1143, column: 51, scope: !5055, inlinedAt: !5057)
!5579 = !DILocation(line: 1143, column: 40, scope: !5055, inlinedAt: !5057)
!5580 = !DILocation(line: 1143, column: 43, scope: !5055, inlinedAt: !5057)
!5581 = !DILocation(line: 1143, column: 38, scope: !5055, inlinedAt: !5057)
!5582 = !DILocation(line: 1142, column: 62, scope: !5055, inlinedAt: !5057)
!5583 = !DILocation(line: 1139, column: 17, scope: !5055, inlinedAt: !5057)
!5584 = !DILocation(line: 1145, column: 24, scope: !5055, inlinedAt: !5057)
!5585 = !DILocation(line: 1145, column: 36, scope: !5055, inlinedAt: !5057)
!5586 = !DILocation(line: 1145, column: 51, scope: !5055, inlinedAt: !5057)
!5587 = !DILocation(line: 1145, column: 63, scope: !5055, inlinedAt: !5057)
!5588 = !DILocation(line: 1145, column: 48, scope: !5055, inlinedAt: !5057)
!5589 = !DILocation(line: 1145, column: 70, scope: !5055, inlinedAt: !5057)
!5590 = !DILocation(line: 1145, column: 32, scope: !5055, inlinedAt: !5057)
!5591 = !DILocation(line: 1145, column: 14, scope: !5055, inlinedAt: !5057)
!5592 = !DILocation(line: 1145, column: 5, scope: !5055, inlinedAt: !5057)
!5593 = !DILocation(line: 1145, column: 8, scope: !5055, inlinedAt: !5057)
!5594 = !DILocation(line: 1145, column: 22, scope: !5055, inlinedAt: !5057)
!5595 = !DILocation(line: 1146, column: 35, scope: !5055, inlinedAt: !5057)
!5596 = !DILocation(line: 1146, column: 26, scope: !5055, inlinedAt: !5057)
!5597 = !DILocation(line: 1146, column: 29, scope: !5055, inlinedAt: !5057)
!5598 = !DILocation(line: 1146, column: 58, scope: !5055, inlinedAt: !5057)
!5599 = !DILocation(line: 1146, column: 47, scope: !5055, inlinedAt: !5057)
!5600 = !DILocation(line: 1146, column: 50, scope: !5055, inlinedAt: !5057)
!5601 = !DILocation(line: 1146, column: 66, scope: !5055, inlinedAt: !5057)
!5602 = !DILocation(line: 1146, column: 72, scope: !5055, inlinedAt: !5057)
!5603 = !DILocation(line: 1146, column: 43, scope: !5055, inlinedAt: !5057)
!5604 = !DILocation(line: 1146, column: 16, scope: !5055, inlinedAt: !5057)
!5605 = !DILocation(line: 1146, column: 5, scope: !5055, inlinedAt: !5057)
!5606 = !DILocation(line: 1146, column: 8, scope: !5055, inlinedAt: !5057)
!5607 = !DILocation(line: 1146, column: 24, scope: !5055, inlinedAt: !5057)
!5608 = !DILocation(line: 1148, column: 20, scope: !5055, inlinedAt: !5057)
!5609 = !DILocation(line: 1148, column: 12, scope: !5055, inlinedAt: !5057)
!5610 = !DILocation(line: 1148, column: 10, scope: !5055, inlinedAt: !5057)
!5611 = !DILocation(line: 1149, column: 37, scope: !5055, inlinedAt: !5057)
!5612 = !DILocation(line: 1149, column: 30, scope: !5055, inlinedAt: !5057)
!5613 = !DILocation(line: 1149, column: 33, scope: !5055, inlinedAt: !5057)
!5614 = !DILocation(line: 1149, column: 48, scope: !5055, inlinedAt: !5057)
!5615 = !DILocation(line: 1149, column: 46, scope: !5055, inlinedAt: !5057)
!5616 = !DILocation(line: 1149, column: 16, scope: !5055, inlinedAt: !5057)
!5617 = !DILocation(line: 1149, column: 5, scope: !5055, inlinedAt: !5057)
!5618 = !DILocation(line: 1149, column: 8, scope: !5055, inlinedAt: !5057)
!5619 = !DILocation(line: 1149, column: 27, scope: !5055, inlinedAt: !5057)
!5620 = !DILocation(line: 1150, column: 37, scope: !5055, inlinedAt: !5057)
!5621 = !DILocation(line: 1150, column: 44, scope: !5055, inlinedAt: !5057)
!5622 = !DILocation(line: 1150, column: 30, scope: !5055, inlinedAt: !5057)
!5623 = !DILocation(line: 1150, column: 33, scope: !5055, inlinedAt: !5057)
!5624 = !DILocation(line: 1150, column: 51, scope: !5055, inlinedAt: !5057)
!5625 = !DILocation(line: 1150, column: 49, scope: !5055, inlinedAt: !5057)
!5626 = !DILocation(line: 1150, column: 16, scope: !5055, inlinedAt: !5057)
!5627 = !DILocation(line: 1150, column: 5, scope: !5055, inlinedAt: !5057)
!5628 = !DILocation(line: 1150, column: 8, scope: !5055, inlinedAt: !5057)
!5629 = !DILocation(line: 1150, column: 27, scope: !5055, inlinedAt: !5057)
!5630 = !DILocation(line: 1151, column: 37, scope: !5055, inlinedAt: !5057)
!5631 = !DILocation(line: 1151, column: 44, scope: !5055, inlinedAt: !5057)
!5632 = !DILocation(line: 1151, column: 30, scope: !5055, inlinedAt: !5057)
!5633 = !DILocation(line: 1151, column: 33, scope: !5055, inlinedAt: !5057)
!5634 = !DILocation(line: 1151, column: 51, scope: !5055, inlinedAt: !5057)
!5635 = !DILocation(line: 1151, column: 49, scope: !5055, inlinedAt: !5057)
!5636 = !DILocation(line: 1151, column: 16, scope: !5055, inlinedAt: !5057)
!5637 = !DILocation(line: 1151, column: 5, scope: !5055, inlinedAt: !5057)
!5638 = !DILocation(line: 1151, column: 8, scope: !5055, inlinedAt: !5057)
!5639 = !DILocation(line: 1151, column: 27, scope: !5055, inlinedAt: !5057)
!5640 = !DILocation(line: 1152, column: 37, scope: !5055, inlinedAt: !5057)
!5641 = !DILocation(line: 1152, column: 44, scope: !5055, inlinedAt: !5057)
!5642 = !DILocation(line: 1152, column: 30, scope: !5055, inlinedAt: !5057)
!5643 = !DILocation(line: 1152, column: 33, scope: !5055, inlinedAt: !5057)
!5644 = !DILocation(line: 1152, column: 51, scope: !5055, inlinedAt: !5057)
!5645 = !DILocation(line: 1152, column: 49, scope: !5055, inlinedAt: !5057)
!5646 = !DILocation(line: 1152, column: 16, scope: !5055, inlinedAt: !5057)
!5647 = !DILocation(line: 1152, column: 5, scope: !5055, inlinedAt: !5057)
!5648 = !DILocation(line: 1152, column: 8, scope: !5055, inlinedAt: !5057)
!5649 = !DILocation(line: 1152, column: 27, scope: !5055, inlinedAt: !5057)
!5650 = !DILocation(line: 1153, column: 37, scope: !5055, inlinedAt: !5057)
!5651 = !DILocation(line: 1153, column: 30, scope: !5055, inlinedAt: !5057)
!5652 = !DILocation(line: 1153, column: 33, scope: !5055, inlinedAt: !5057)
!5653 = !DILocation(line: 1153, column: 48, scope: !5055, inlinedAt: !5057)
!5654 = !DILocation(line: 1153, column: 46, scope: !5055, inlinedAt: !5057)
!5655 = !DILocation(line: 1153, column: 16, scope: !5055, inlinedAt: !5057)
!5656 = !DILocation(line: 1153, column: 5, scope: !5055, inlinedAt: !5057)
!5657 = !DILocation(line: 1153, column: 8, scope: !5055, inlinedAt: !5057)
!5658 = !DILocation(line: 1153, column: 27, scope: !5055, inlinedAt: !5057)
!5659 = !DILocation(line: 1154, column: 37, scope: !5055, inlinedAt: !5057)
!5660 = !DILocation(line: 1154, column: 44, scope: !5055, inlinedAt: !5057)
!5661 = !DILocation(line: 1154, column: 30, scope: !5055, inlinedAt: !5057)
!5662 = !DILocation(line: 1154, column: 33, scope: !5055, inlinedAt: !5057)
!5663 = !DILocation(line: 1154, column: 51, scope: !5055, inlinedAt: !5057)
!5664 = !DILocation(line: 1154, column: 49, scope: !5055, inlinedAt: !5057)
!5665 = !DILocation(line: 1154, column: 16, scope: !5055, inlinedAt: !5057)
!5666 = !DILocation(line: 1154, column: 5, scope: !5055, inlinedAt: !5057)
!5667 = !DILocation(line: 1154, column: 8, scope: !5055, inlinedAt: !5057)
!5668 = !DILocation(line: 1154, column: 27, scope: !5055, inlinedAt: !5057)
!5669 = !DILocation(line: 1155, column: 37, scope: !5055, inlinedAt: !5057)
!5670 = !DILocation(line: 1155, column: 44, scope: !5055, inlinedAt: !5057)
!5671 = !DILocation(line: 1155, column: 30, scope: !5055, inlinedAt: !5057)
!5672 = !DILocation(line: 1155, column: 33, scope: !5055, inlinedAt: !5057)
!5673 = !DILocation(line: 1155, column: 51, scope: !5055, inlinedAt: !5057)
!5674 = !DILocation(line: 1155, column: 49, scope: !5055, inlinedAt: !5057)
!5675 = !DILocation(line: 1155, column: 16, scope: !5055, inlinedAt: !5057)
!5676 = !DILocation(line: 1155, column: 5, scope: !5055, inlinedAt: !5057)
!5677 = !DILocation(line: 1155, column: 8, scope: !5055, inlinedAt: !5057)
!5678 = !DILocation(line: 1155, column: 27, scope: !5055, inlinedAt: !5057)
!5679 = !DILocation(line: 1156, column: 37, scope: !5055, inlinedAt: !5057)
!5680 = !DILocation(line: 1156, column: 44, scope: !5055, inlinedAt: !5057)
!5681 = !DILocation(line: 1156, column: 30, scope: !5055, inlinedAt: !5057)
!5682 = !DILocation(line: 1156, column: 33, scope: !5055, inlinedAt: !5057)
!5683 = !DILocation(line: 1156, column: 51, scope: !5055, inlinedAt: !5057)
!5684 = !DILocation(line: 1156, column: 49, scope: !5055, inlinedAt: !5057)
!5685 = !DILocation(line: 1156, column: 16, scope: !5055, inlinedAt: !5057)
!5686 = !DILocation(line: 1156, column: 5, scope: !5055, inlinedAt: !5057)
!5687 = !DILocation(line: 1156, column: 8, scope: !5055, inlinedAt: !5057)
!5688 = !DILocation(line: 1156, column: 27, scope: !5055, inlinedAt: !5057)
!5689 = !DILocation(line: 1157, column: 37, scope: !5055, inlinedAt: !5057)
!5690 = !DILocation(line: 1157, column: 44, scope: !5055, inlinedAt: !5057)
!5691 = !DILocation(line: 1157, column: 30, scope: !5055, inlinedAt: !5057)
!5692 = !DILocation(line: 1157, column: 33, scope: !5055, inlinedAt: !5057)
!5693 = !DILocation(line: 1157, column: 51, scope: !5055, inlinedAt: !5057)
!5694 = !DILocation(line: 1157, column: 49, scope: !5055, inlinedAt: !5057)
!5695 = !DILocation(line: 1157, column: 16, scope: !5055, inlinedAt: !5057)
!5696 = !DILocation(line: 1157, column: 5, scope: !5055, inlinedAt: !5057)
!5697 = !DILocation(line: 1157, column: 8, scope: !5055, inlinedAt: !5057)
!5698 = !DILocation(line: 1157, column: 27, scope: !5055, inlinedAt: !5057)
!5699 = !DILocation(line: 1159, column: 23, scope: !5055, inlinedAt: !5057)
!5700 = !DILocation(line: 1159, column: 12, scope: !5055, inlinedAt: !5057)
!5701 = !DILocation(line: 1159, column: 15, scope: !5055, inlinedAt: !5057)
!5702 = !DILocation(line: 1175, column: 10, scope: !5058)
!5703 = !DILocation(line: 1175, column: 19, scope: !5058)
!5704 = !DILocation(line: 1177, column: 17, scope: !5058)
!5705 = !DILocation(line: 1180, column: 9, scope: !5058)
!5706 = !DILocation(line: 1180, column: 12, scope: !5058)
!5707 = !DILocation(line: 1180, column: 15, scope: !5058)
!5708 = !DILocation(line: 1183, column: 13, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5058, file: !910, line: 1183, column: 13)
!5710 = !DILocation(line: 1183, column: 16, scope: !5709)
!5711 = !DILocation(line: 1183, column: 23, scope: !5709)
!5712 = !DILocation(line: 1183, column: 26, scope: !5709)
!5713 = !DILocation(line: 1183, column: 40, scope: !5709)
!5714 = !DILocation(line: 1183, column: 20, scope: !5709)
!5715 = !DILocation(line: 1183, column: 13, scope: !5058)
!5716 = !DILocation(line: 1184, column: 21, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5709, file: !910, line: 1183, column: 47)
!5718 = !DILocation(line: 1184, column: 24, scope: !5717)
!5719 = !DILocation(line: 1184, column: 13, scope: !5717)
!5720 = !DILocation(line: 1184, column: 39, scope: !5717)
!5721 = !DILocation(line: 1184, column: 42, scope: !5717)
!5722 = !DILocation(line: 1186, column: 22, scope: !5717)
!5723 = !DILocation(line: 1186, column: 25, scope: !5717)
!5724 = !DILocation(line: 1186, column: 13, scope: !5717)
!5725 = !DILocation(line: 1186, column: 16, scope: !5717)
!5726 = !DILocation(line: 1186, column: 20, scope: !5717)
!5727 = !DILocation(line: 1187, column: 9, scope: !5717)
!5728 = !DILocation(line: 1170, column: 5, scope: !5729)
!5729 = !DILexicalBlockFile(scope: !5053, file: !910, discriminator: 2)
!5730 = distinct !{!5730, !5111}
!5731 = !DILocation(line: 1189, column: 1, scope: !5053)
!5732 = distinct !DISubprogram(name: "decode_array_0000", scope: !910, file: !910, line: 588, type: !5733, isLocal: true, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{null, !1750, !5735, !947, !5736, !918}
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64, align: 64)
!5736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64, align: 64)
!5737 = !DILocalVariable(name: "ctx", arg: 1, scope: !5732, file: !910, line: 588, type: !1750)
!5738 = !DILocation(line: 588, column: 43, scope: !5732)
!5739 = !DILocalVariable(name: "gb", arg: 2, scope: !5732, file: !910, line: 588, type: !5735)
!5740 = !DILocation(line: 588, column: 63, scope: !5732)
!5741 = !DILocalVariable(name: "out", arg: 3, scope: !5732, file: !910, line: 589, type: !947)
!5742 = !DILocation(line: 589, column: 40, scope: !5732)
!5743 = !DILocalVariable(name: "rice", arg: 4, scope: !5732, file: !910, line: 589, type: !5736)
!5744 = !DILocation(line: 589, column: 54, scope: !5732)
!5745 = !DILocalVariable(name: "blockstodecode", arg: 5, scope: !5732, file: !910, line: 589, type: !918)
!5746 = !DILocation(line: 589, column: 64, scope: !5732)
!5747 = !DILocalVariable(name: "i", scope: !5732, file: !910, line: 591, type: !918)
!5748 = !DILocation(line: 591, column: 9, scope: !5732)
!5749 = !DILocalVariable(name: "ksummax", scope: !5732, file: !910, line: 592, type: !918)
!5750 = !DILocation(line: 592, column: 9, scope: !5732)
!5751 = !DILocalVariable(name: "ksummin", scope: !5732, file: !910, line: 592, type: !918)
!5752 = !DILocation(line: 592, column: 18, scope: !5732)
!5753 = !DILocation(line: 594, column: 5, scope: !5732)
!5754 = !DILocation(line: 594, column: 11, scope: !5732)
!5755 = !DILocation(line: 594, column: 16, scope: !5732)
!5756 = !DILocation(line: 595, column: 12, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5732, file: !910, line: 595, column: 5)
!5758 = !DILocation(line: 595, column: 10, scope: !5757)
!5759 = !DILocation(line: 595, column: 17, scope: !5760)
!5760 = !DILexicalBlockFile(scope: !5761, file: !910, discriminator: 1)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !910, line: 595, column: 5)
!5762 = !DILocation(line: 595, column: 23, scope: !5760)
!5763 = !DILocation(line: 595, column: 39, scope: !5760)
!5764 = !DILocation(line: 595, column: 22, scope: !5760)
!5765 = !DILocation(line: 595, column: 22, scope: !5766)
!5766 = !DILexicalBlockFile(scope: !5761, file: !910, discriminator: 2)
!5767 = !DILocation(line: 595, column: 54, scope: !5768)
!5768 = !DILexicalBlockFile(scope: !5761, file: !910, discriminator: 3)
!5769 = !DILocation(line: 595, column: 22, scope: !5768)
!5770 = !DILocation(line: 595, column: 22, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !5761, file: !910, discriminator: 4)
!5772 = !DILocation(line: 595, column: 19, scope: !5771)
!5773 = !DILocation(line: 595, column: 5, scope: !5771)
!5774 = !DILocation(line: 596, column: 32, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5761, file: !910, line: 595, column: 77)
!5776 = !DILocation(line: 596, column: 37, scope: !5775)
!5777 = !DILocation(line: 596, column: 18, scope: !5775)
!5778 = !DILocation(line: 596, column: 13, scope: !5775)
!5779 = !DILocation(line: 596, column: 9, scope: !5775)
!5780 = !DILocation(line: 596, column: 16, scope: !5775)
!5781 = !DILocation(line: 597, column: 27, scope: !5775)
!5782 = !DILocation(line: 597, column: 23, scope: !5775)
!5783 = !DILocation(line: 597, column: 9, scope: !5775)
!5784 = !DILocation(line: 597, column: 15, scope: !5775)
!5785 = !DILocation(line: 597, column: 20, scope: !5775)
!5786 = !DILocation(line: 598, column: 5, scope: !5775)
!5787 = !DILocation(line: 595, column: 73, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !5761, file: !910, discriminator: 5)
!5789 = !DILocation(line: 595, column: 5, scope: !5788)
!5790 = distinct !{!5790, !5791}
!5791 = !DILocation(line: 595, column: 5, scope: !5732)
!5792 = !DILocation(line: 599, column: 36, scope: !5732)
!5793 = !DILocation(line: 599, column: 42, scope: !5732)
!5794 = !DILocation(line: 599, column: 47, scope: !5732)
!5795 = !DILocation(line: 599, column: 52, scope: !5732)
!5796 = !DILocation(line: 599, column: 21, scope: !5732)
!5797 = !DILocation(line: 599, column: 19, scope: !5732)
!5798 = !DILocation(line: 599, column: 57, scope: !5732)
!5799 = !DILocation(line: 599, column: 5, scope: !5732)
!5800 = !DILocation(line: 599, column: 11, scope: !5732)
!5801 = !DILocation(line: 599, column: 13, scope: !5732)
!5802 = !DILocation(line: 600, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5732, file: !910, line: 600, column: 9)
!5804 = !DILocation(line: 600, column: 15, scope: !5803)
!5805 = !DILocation(line: 600, column: 17, scope: !5803)
!5806 = !DILocation(line: 600, column: 9, scope: !5732)
!5807 = !DILocation(line: 601, column: 9, scope: !5803)
!5808 = !DILocation(line: 602, column: 5, scope: !5732)
!5809 = !DILocation(line: 602, column: 12, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5811, file: !910, discriminator: 1)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !910, line: 602, column: 5)
!5812 = distinct !DILexicalBlock(scope: !5732, file: !910, line: 602, column: 5)
!5813 = !DILocation(line: 602, column: 18, scope: !5810)
!5814 = !DILocation(line: 602, column: 34, scope: !5810)
!5815 = !DILocation(line: 602, column: 17, scope: !5810)
!5816 = !DILocation(line: 602, column: 17, scope: !5817)
!5817 = !DILexicalBlockFile(scope: !5811, file: !910, discriminator: 2)
!5818 = !DILocation(line: 602, column: 51, scope: !5819)
!5819 = !DILexicalBlockFile(scope: !5811, file: !910, discriminator: 3)
!5820 = !DILocation(line: 602, column: 17, scope: !5819)
!5821 = !DILocation(line: 602, column: 17, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !5811, file: !910, discriminator: 4)
!5823 = !DILocation(line: 602, column: 14, scope: !5822)
!5824 = !DILocation(line: 602, column: 5, scope: !5822)
!5825 = !DILocation(line: 603, column: 32, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5811, file: !910, line: 602, column: 74)
!5827 = !DILocation(line: 603, column: 37, scope: !5826)
!5828 = !DILocation(line: 603, column: 41, scope: !5826)
!5829 = !DILocation(line: 603, column: 47, scope: !5826)
!5830 = !DILocation(line: 603, column: 18, scope: !5826)
!5831 = !DILocation(line: 603, column: 13, scope: !5826)
!5832 = !DILocation(line: 603, column: 9, scope: !5826)
!5833 = !DILocation(line: 603, column: 16, scope: !5826)
!5834 = !DILocation(line: 604, column: 27, scope: !5826)
!5835 = !DILocation(line: 604, column: 23, scope: !5826)
!5836 = !DILocation(line: 604, column: 9, scope: !5826)
!5837 = !DILocation(line: 604, column: 15, scope: !5826)
!5838 = !DILocation(line: 604, column: 20, scope: !5826)
!5839 = !DILocation(line: 605, column: 40, scope: !5826)
!5840 = !DILocation(line: 605, column: 46, scope: !5826)
!5841 = !DILocation(line: 605, column: 55, scope: !5826)
!5842 = !DILocation(line: 605, column: 57, scope: !5826)
!5843 = !DILocation(line: 605, column: 62, scope: !5826)
!5844 = !DILocation(line: 605, column: 51, scope: !5826)
!5845 = !DILocation(line: 605, column: 67, scope: !5826)
!5846 = !DILocation(line: 605, column: 25, scope: !5826)
!5847 = !DILocation(line: 605, column: 23, scope: !5826)
!5848 = !DILocation(line: 605, column: 72, scope: !5826)
!5849 = !DILocation(line: 605, column: 9, scope: !5826)
!5850 = !DILocation(line: 605, column: 15, scope: !5826)
!5851 = !DILocation(line: 605, column: 17, scope: !5826)
!5852 = !DILocation(line: 606, column: 13, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5826, file: !910, line: 606, column: 13)
!5854 = !DILocation(line: 606, column: 19, scope: !5853)
!5855 = !DILocation(line: 606, column: 21, scope: !5853)
!5856 = !DILocation(line: 606, column: 13, scope: !5826)
!5857 = !DILocation(line: 607, column: 13, scope: !5853)
!5858 = !DILocation(line: 608, column: 5, scope: !5826)
!5859 = !DILocation(line: 602, column: 70, scope: !5860)
!5860 = !DILexicalBlockFile(scope: !5811, file: !910, discriminator: 5)
!5861 = !DILocation(line: 602, column: 5, scope: !5860)
!5862 = distinct !{!5862, !5808}
!5863 = !DILocation(line: 609, column: 20, scope: !5732)
!5864 = !DILocation(line: 609, column: 26, scope: !5732)
!5865 = !DILocation(line: 609, column: 28, scope: !5732)
!5866 = !DILocation(line: 609, column: 17, scope: !5732)
!5867 = !DILocation(line: 609, column: 13, scope: !5732)
!5868 = !DILocation(line: 610, column: 15, scope: !5732)
!5869 = !DILocation(line: 610, column: 21, scope: !5732)
!5870 = !DILocation(line: 610, column: 31, scope: !5871)
!5871 = !DILexicalBlockFile(scope: !5732, file: !910, discriminator: 1)
!5872 = !DILocation(line: 610, column: 37, scope: !5871)
!5873 = !DILocation(line: 610, column: 39, scope: !5871)
!5874 = !DILocation(line: 610, column: 28, scope: !5871)
!5875 = !DILocation(line: 610, column: 15, scope: !5871)
!5876 = !DILocation(line: 610, column: 15, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5732, file: !910, discriminator: 2)
!5878 = !DILocation(line: 610, column: 15, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5732, file: !910, discriminator: 3)
!5880 = !DILocation(line: 610, column: 13, scope: !5879)
!5881 = !DILocation(line: 611, column: 5, scope: !5732)
!5882 = !DILocation(line: 611, column: 12, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5884, file: !910, discriminator: 1)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !910, line: 611, column: 5)
!5885 = distinct !DILexicalBlock(scope: !5732, file: !910, line: 611, column: 5)
!5886 = !DILocation(line: 611, column: 16, scope: !5883)
!5887 = !DILocation(line: 611, column: 14, scope: !5883)
!5888 = !DILocation(line: 611, column: 5, scope: !5883)
!5889 = !DILocation(line: 612, column: 32, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5884, file: !910, line: 611, column: 37)
!5891 = !DILocation(line: 612, column: 37, scope: !5890)
!5892 = !DILocation(line: 612, column: 41, scope: !5890)
!5893 = !DILocation(line: 612, column: 47, scope: !5890)
!5894 = !DILocation(line: 612, column: 18, scope: !5890)
!5895 = !DILocation(line: 612, column: 13, scope: !5890)
!5896 = !DILocation(line: 612, column: 9, scope: !5890)
!5897 = !DILocation(line: 612, column: 16, scope: !5890)
!5898 = !DILocation(line: 613, column: 27, scope: !5890)
!5899 = !DILocation(line: 613, column: 23, scope: !5890)
!5900 = !DILocation(line: 613, column: 36, scope: !5890)
!5901 = !DILocation(line: 613, column: 38, scope: !5890)
!5902 = !DILocation(line: 613, column: 32, scope: !5890)
!5903 = !DILocation(line: 613, column: 30, scope: !5890)
!5904 = !DILocation(line: 613, column: 9, scope: !5890)
!5905 = !DILocation(line: 613, column: 15, scope: !5890)
!5906 = !DILocation(line: 613, column: 20, scope: !5890)
!5907 = !DILocation(line: 614, column: 9, scope: !5890)
!5908 = !DILocation(line: 614, column: 16, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !5890, file: !910, discriminator: 1)
!5910 = !DILocation(line: 614, column: 22, scope: !5909)
!5911 = !DILocation(line: 614, column: 29, scope: !5909)
!5912 = !DILocation(line: 614, column: 27, scope: !5909)
!5913 = !DILocation(line: 614, column: 9, scope: !5909)
!5914 = !DILocation(line: 615, column: 13, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5890, file: !910, line: 614, column: 38)
!5916 = !DILocation(line: 615, column: 19, scope: !5915)
!5917 = !DILocation(line: 615, column: 20, scope: !5915)
!5918 = !DILocation(line: 616, column: 23, scope: !5915)
!5919 = !DILocation(line: 616, column: 29, scope: !5915)
!5920 = !DILocation(line: 616, column: 33, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5915, file: !910, discriminator: 1)
!5922 = !DILocation(line: 616, column: 41, scope: !5921)
!5923 = !DILocation(line: 616, column: 23, scope: !5921)
!5924 = !DILocation(line: 616, column: 23, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !5915, file: !910, discriminator: 2)
!5926 = !DILocation(line: 616, column: 23, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !5915, file: !910, discriminator: 3)
!5928 = !DILocation(line: 616, column: 21, scope: !5927)
!5929 = !DILocation(line: 617, column: 21, scope: !5915)
!5930 = !DILocation(line: 614, column: 9, scope: !5931)
!5931 = !DILexicalBlockFile(scope: !5890, file: !910, discriminator: 2)
!5932 = distinct !{!5932, !5907}
!5933 = !DILocation(line: 619, column: 9, scope: !5890)
!5934 = !DILocation(line: 619, column: 16, scope: !5909)
!5935 = !DILocation(line: 619, column: 22, scope: !5909)
!5936 = !DILocation(line: 619, column: 30, scope: !5909)
!5937 = !DILocation(line: 619, column: 27, scope: !5909)
!5938 = !DILocation(line: 619, column: 9, scope: !5909)
!5939 = !DILocation(line: 620, column: 13, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5890, file: !910, line: 619, column: 39)
!5941 = !DILocation(line: 620, column: 19, scope: !5940)
!5942 = !DILocation(line: 620, column: 20, scope: !5940)
!5943 = !DILocation(line: 621, column: 17, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5940, file: !910, line: 621, column: 17)
!5945 = !DILocation(line: 621, column: 23, scope: !5944)
!5946 = !DILocation(line: 621, column: 25, scope: !5944)
!5947 = !DILocation(line: 621, column: 17, scope: !5940)
!5948 = !DILocation(line: 622, column: 17, scope: !5944)
!5949 = !DILocation(line: 623, column: 21, scope: !5940)
!5950 = !DILocation(line: 624, column: 23, scope: !5940)
!5951 = !DILocation(line: 624, column: 33, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5940, file: !910, discriminator: 1)
!5953 = !DILocation(line: 624, column: 41, scope: !5952)
!5954 = !DILocation(line: 624, column: 23, scope: !5952)
!5955 = !DILocation(line: 624, column: 23, scope: !5956)
!5956 = !DILexicalBlockFile(scope: !5940, file: !910, discriminator: 2)
!5957 = !DILocation(line: 624, column: 23, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !5940, file: !910, discriminator: 3)
!5959 = !DILocation(line: 624, column: 21, scope: !5958)
!5960 = !DILocation(line: 619, column: 9, scope: !5931)
!5961 = distinct !{!5961, !5933}
!5962 = !DILocation(line: 626, column: 5, scope: !5890)
!5963 = !DILocation(line: 611, column: 33, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5884, file: !910, discriminator: 2)
!5965 = !DILocation(line: 611, column: 5, scope: !5964)
!5966 = distinct !{!5966, !5881}
!5967 = !DILocation(line: 628, column: 12, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5732, file: !910, line: 628, column: 5)
!5969 = !DILocation(line: 628, column: 10, scope: !5968)
!5970 = !DILocation(line: 628, column: 17, scope: !5971)
!5971 = !DILexicalBlockFile(scope: !5972, file: !910, discriminator: 1)
!5972 = distinct !DILexicalBlock(scope: !5968, file: !910, line: 628, column: 5)
!5973 = !DILocation(line: 628, column: 21, scope: !5971)
!5974 = !DILocation(line: 628, column: 19, scope: !5971)
!5975 = !DILocation(line: 628, column: 5, scope: !5971)
!5976 = !DILocation(line: 629, column: 24, scope: !5972)
!5977 = !DILocation(line: 629, column: 20, scope: !5972)
!5978 = !DILocation(line: 629, column: 27, scope: !5972)
!5979 = !DILocation(line: 629, column: 41, scope: !5972)
!5980 = !DILocation(line: 629, column: 37, scope: !5972)
!5981 = !DILocation(line: 629, column: 44, scope: !5972)
!5982 = !DILocation(line: 629, column: 49, scope: !5972)
!5983 = !DILocation(line: 629, column: 33, scope: !5972)
!5984 = !DILocation(line: 629, column: 55, scope: !5972)
!5985 = !DILocation(line: 629, column: 13, scope: !5972)
!5986 = !DILocation(line: 629, column: 9, scope: !5972)
!5987 = !DILocation(line: 629, column: 16, scope: !5972)
!5988 = !DILocation(line: 628, column: 38, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !5972, file: !910, discriminator: 2)
!5990 = !DILocation(line: 628, column: 5, scope: !5989)
!5991 = distinct !{!5991, !5992}
!5992 = !DILocation(line: 628, column: 5, scope: !5732)
!5993 = !DILocation(line: 630, column: 1, scope: !5732)
!5994 = distinct !DISubprogram(name: "get_rice_ook", scope: !910, file: !910, line: 467, type: !5995, isLocal: true, isDefinition: true, scopeLine: 468, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!918, !5735, !918}
!5997 = !DILocalVariable(name: "gb", arg: 1, scope: !5994, file: !910, line: 467, type: !5735)
!5998 = !DILocation(line: 467, column: 47, scope: !5994)
!5999 = !DILocalVariable(name: "k", arg: 2, scope: !5994, file: !910, line: 467, type: !918)
!6000 = !DILocation(line: 467, column: 55, scope: !5994)
!6001 = !DILocalVariable(name: "x", scope: !5994, file: !910, line: 469, type: !919)
!6002 = !DILocation(line: 469, column: 18, scope: !5994)
!6003 = !DILocation(line: 471, column: 19, scope: !5994)
!6004 = !DILocation(line: 471, column: 40, scope: !5994)
!6005 = !DILocation(line: 471, column: 26, scope: !5994)
!6006 = !DILocation(line: 471, column: 9, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !5994, file: !910, discriminator: 1)
!6008 = !DILocation(line: 471, column: 7, scope: !5994)
!6009 = !DILocation(line: 473, column: 9, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5994, file: !910, line: 473, column: 9)
!6011 = !DILocation(line: 473, column: 9, scope: !5994)
!6012 = !DILocation(line: 474, column: 14, scope: !6010)
!6013 = !DILocation(line: 474, column: 19, scope: !6010)
!6014 = !DILocation(line: 474, column: 16, scope: !6010)
!6015 = !DILocation(line: 474, column: 33, scope: !6010)
!6016 = !DILocation(line: 474, column: 37, scope: !6010)
!6017 = !DILocation(line: 474, column: 24, scope: !6010)
!6018 = !DILocation(line: 474, column: 22, scope: !6010)
!6019 = !DILocation(line: 474, column: 11, scope: !6010)
!6020 = !DILocation(line: 474, column: 9, scope: !6010)
!6021 = !DILocation(line: 476, column: 12, scope: !5994)
!6022 = !DILocation(line: 476, column: 5, scope: !5994)
!6023 = distinct !DISubprogram(name: "get_unary", scope: !6024, file: !6024, line: 46, type: !6025, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6024 = !DIFile(filename: "libavcodec/unary.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!918, !5735, !918, !918}
!6027 = !DILocalVariable(name: "gb", arg: 1, scope: !6023, file: !6024, line: 46, type: !5735)
!6028 = !DILocation(line: 46, column: 44, scope: !6023)
!6029 = !DILocalVariable(name: "stop", arg: 2, scope: !6023, file: !6024, line: 46, type: !918)
!6030 = !DILocation(line: 46, column: 52, scope: !6023)
!6031 = !DILocalVariable(name: "len", arg: 3, scope: !6023, file: !6024, line: 46, type: !918)
!6032 = !DILocation(line: 46, column: 62, scope: !6023)
!6033 = !DILocalVariable(name: "i", scope: !6023, file: !6024, line: 48, type: !918)
!6034 = !DILocation(line: 48, column: 9, scope: !6023)
!6035 = !DILocation(line: 50, column: 11, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6023, file: !6024, line: 50, column: 5)
!6037 = !DILocation(line: 50, column: 9, scope: !6036)
!6038 = !DILocation(line: 50, column: 16, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !6040, file: !6024, discriminator: 1)
!6040 = distinct !DILexicalBlock(scope: !6036, file: !6024, line: 50, column: 5)
!6041 = !DILocation(line: 50, column: 20, scope: !6039)
!6042 = !DILocation(line: 50, column: 18, scope: !6039)
!6043 = !DILocation(line: 50, column: 24, scope: !6039)
!6044 = !DILocation(line: 50, column: 37, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6040, file: !6024, discriminator: 2)
!6046 = !DILocation(line: 50, column: 27, scope: !6045)
!6047 = !DILocation(line: 50, column: 44, scope: !6045)
!6048 = !DILocation(line: 50, column: 41, scope: !6045)
!6049 = !DILocation(line: 50, column: 5, scope: !6050)
!6050 = !DILexicalBlockFile(scope: !6036, file: !6024, discriminator: 3)
!6051 = !DILocation(line: 50, column: 5, scope: !6052)
!6052 = !DILexicalBlockFile(scope: !6036, file: !6024, discriminator: 4)
!6053 = !DILocation(line: 50, column: 51, scope: !6054)
!6054 = !DILexicalBlockFile(scope: !6040, file: !6024, discriminator: 5)
!6055 = !DILocation(line: 50, column: 5, scope: !6054)
!6056 = distinct !{!6056, !6057}
!6057 = !DILocation(line: 50, column: 5, scope: !6023)
!6058 = !DILocation(line: 51, column: 12, scope: !6023)
!6059 = !DILocation(line: 51, column: 5, scope: !6023)
!6060 = distinct !DISubprogram(name: "get_bits_left", scope: !1851, file: !1851, line: 814, type: !6061, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!918, !5735}
!6063 = !DILocalVariable(name: "gb", arg: 1, scope: !6060, file: !1851, line: 814, type: !5735)
!6064 = !DILocation(line: 814, column: 48, scope: !6060)
!6065 = !DILocation(line: 816, column: 12, scope: !6060)
!6066 = !DILocation(line: 816, column: 16, scope: !6060)
!6067 = !DILocation(line: 816, column: 46, scope: !6060)
!6068 = !DILocation(line: 816, column: 31, scope: !6060)
!6069 = !DILocation(line: 816, column: 29, scope: !6060)
!6070 = !DILocation(line: 816, column: 5, scope: !6060)
!6071 = distinct !DISubprogram(name: "get_bits", scope: !1851, file: !1851, line: 381, type: !6072, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!919, !5735, !918}
!6074 = !DILocation(line: 66, column: 98, scope: !2163, inlinedAt: !6075)
!6075 = distinct !DILocation(line: 401, column: 16, scope: !6071)
!6076 = !DILocalVariable(name: "s", arg: 1, scope: !6071, file: !1851, line: 381, type: !5735)
!6077 = !DILocation(line: 381, column: 52, scope: !6071)
!6078 = !DILocalVariable(name: "n", arg: 2, scope: !6071, file: !1851, line: 381, type: !918)
!6079 = !DILocation(line: 381, column: 59, scope: !6071)
!6080 = !DILocalVariable(name: "tmp", scope: !6071, file: !1851, line: 383, type: !918)
!6081 = !DILocation(line: 383, column: 18, scope: !6071)
!6082 = !DILocalVariable(name: "re_index", scope: !6071, file: !1851, line: 399, type: !919)
!6083 = !DILocation(line: 399, column: 18, scope: !6071)
!6084 = !DILocation(line: 399, column: 30, scope: !6071)
!6085 = !DILocation(line: 399, column: 34, scope: !6071)
!6086 = !DILocalVariable(name: "re_cache", scope: !6071, file: !1851, line: 399, type: !919)
!6087 = !DILocation(line: 399, column: 78, scope: !6071)
!6088 = !DILocalVariable(name: "re_size_plus8", scope: !6071, file: !1851, line: 399, type: !919)
!6089 = !DILocation(line: 399, column: 101, scope: !6071)
!6090 = !DILocation(line: 399, column: 118, scope: !6071)
!6091 = !DILocation(line: 399, column: 122, scope: !6071)
!6092 = !DILocation(line: 401, column: 60, scope: !6071)
!6093 = !DILocation(line: 401, column: 64, scope: !6071)
!6094 = !DILocation(line: 401, column: 74, scope: !6071)
!6095 = !DILocation(line: 401, column: 83, scope: !6071)
!6096 = !DILocation(line: 401, column: 71, scope: !6071)
!6097 = !DILocation(line: 401, column: 92, scope: !6071)
!6098 = !DILocation(line: 401, column: 16, scope: !6071)
!6099 = !DILocation(line: 68, column: 16, scope: !2163, inlinedAt: !6075)
!6100 = !DILocation(line: 68, column: 19, scope: !2163, inlinedAt: !6075)
!6101 = !DILocation(line: 68, column: 24, scope: !2163, inlinedAt: !6075)
!6102 = !DILocation(line: 68, column: 38, scope: !2163, inlinedAt: !6075)
!6103 = !DILocation(line: 68, column: 41, scope: !2163, inlinedAt: !6075)
!6104 = !DILocation(line: 68, column: 46, scope: !2163, inlinedAt: !6075)
!6105 = !DILocation(line: 68, column: 34, scope: !2163, inlinedAt: !6075)
!6106 = !DILocation(line: 68, column: 57, scope: !2163, inlinedAt: !6075)
!6107 = !DILocation(line: 68, column: 69, scope: !2163, inlinedAt: !6075)
!6108 = !DILocation(line: 68, column: 72, scope: !2163, inlinedAt: !6075)
!6109 = !DILocation(line: 68, column: 79, scope: !2163, inlinedAt: !6075)
!6110 = !DILocation(line: 68, column: 84, scope: !2163, inlinedAt: !6075)
!6111 = !DILocation(line: 68, column: 99, scope: !2163, inlinedAt: !6075)
!6112 = !DILocation(line: 68, column: 102, scope: !2163, inlinedAt: !6075)
!6113 = !DILocation(line: 68, column: 109, scope: !2163, inlinedAt: !6075)
!6114 = !DILocation(line: 68, column: 114, scope: !2163, inlinedAt: !6075)
!6115 = !DILocation(line: 68, column: 94, scope: !2163, inlinedAt: !6075)
!6116 = !DILocation(line: 68, column: 63, scope: !2163, inlinedAt: !6075)
!6117 = !DILocation(line: 401, column: 100, scope: !6071)
!6118 = !DILocation(line: 401, column: 109, scope: !6071)
!6119 = !DILocation(line: 401, column: 96, scope: !6071)
!6120 = !DILocation(line: 401, column: 14, scope: !6071)
!6121 = !DILocation(line: 402, column: 21, scope: !6071)
!6122 = !DILocation(line: 402, column: 31, scope: !6071)
!6123 = !DILocation(line: 402, column: 11, scope: !6071)
!6124 = !DILocation(line: 402, column: 9, scope: !6071)
!6125 = !DILocation(line: 403, column: 18, scope: !6071)
!6126 = !DILocation(line: 403, column: 36, scope: !6071)
!6127 = !DILocation(line: 403, column: 48, scope: !6071)
!6128 = !DILocation(line: 403, column: 45, scope: !6071)
!6129 = !DILocation(line: 403, column: 33, scope: !6071)
!6130 = !DILocation(line: 403, column: 17, scope: !6071)
!6131 = !DILocation(line: 403, column: 55, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6071, file: !1851, discriminator: 1)
!6133 = !DILocation(line: 403, column: 67, scope: !6132)
!6134 = !DILocation(line: 403, column: 64, scope: !6132)
!6135 = !DILocation(line: 403, column: 17, scope: !6132)
!6136 = !DILocation(line: 403, column: 74, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !6071, file: !1851, discriminator: 2)
!6138 = !DILocation(line: 403, column: 17, scope: !6137)
!6139 = !DILocation(line: 403, column: 17, scope: !6140)
!6140 = !DILexicalBlockFile(scope: !6071, file: !1851, discriminator: 3)
!6141 = !DILocation(line: 403, column: 14, scope: !6140)
!6142 = !DILocation(line: 404, column: 18, scope: !6071)
!6143 = !DILocation(line: 404, column: 6, scope: !6071)
!6144 = !DILocation(line: 404, column: 10, scope: !6071)
!6145 = !DILocation(line: 404, column: 16, scope: !6071)
!6146 = !DILocation(line: 406, column: 12, scope: !6071)
!6147 = !DILocation(line: 406, column: 5, scope: !6071)
!6148 = distinct !DISubprogram(name: "get_bits1", scope: !1851, file: !1851, line: 487, type: !6149, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6149 = !DISubroutineType(types: !6150)
!6150 = !{!919, !5735}
!6151 = !DILocalVariable(name: "s", arg: 1, scope: !6148, file: !1851, line: 487, type: !5735)
!6152 = !DILocation(line: 487, column: 53, scope: !6148)
!6153 = !DILocalVariable(name: "index", scope: !6148, file: !1851, line: 499, type: !919)
!6154 = !DILocation(line: 499, column: 18, scope: !6148)
!6155 = !DILocation(line: 499, column: 26, scope: !6148)
!6156 = !DILocation(line: 499, column: 29, scope: !6148)
!6157 = !DILocalVariable(name: "result", scope: !6148, file: !1851, line: 500, type: !935)
!6158 = !DILocation(line: 500, column: 13, scope: !6148)
!6159 = !DILocation(line: 500, column: 32, scope: !6148)
!6160 = !DILocation(line: 500, column: 38, scope: !6148)
!6161 = !DILocation(line: 500, column: 22, scope: !6148)
!6162 = !DILocation(line: 500, column: 25, scope: !6148)
!6163 = !DILocation(line: 505, column: 16, scope: !6148)
!6164 = !DILocation(line: 505, column: 22, scope: !6148)
!6165 = !DILocation(line: 505, column: 12, scope: !6148)
!6166 = !DILocation(line: 506, column: 12, scope: !6148)
!6167 = !DILocation(line: 509, column: 9, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6148, file: !1851, line: 509, column: 9)
!6169 = !DILocation(line: 509, column: 12, scope: !6168)
!6170 = !DILocation(line: 509, column: 20, scope: !6168)
!6171 = !DILocation(line: 509, column: 23, scope: !6168)
!6172 = !DILocation(line: 509, column: 18, scope: !6168)
!6173 = !DILocation(line: 509, column: 9, scope: !6148)
!6174 = !DILocation(line: 511, column: 14, scope: !6168)
!6175 = !DILocation(line: 511, column: 9, scope: !6168)
!6176 = !DILocation(line: 512, column: 16, scope: !6148)
!6177 = !DILocation(line: 512, column: 5, scope: !6148)
!6178 = !DILocation(line: 512, column: 8, scope: !6148)
!6179 = !DILocation(line: 512, column: 14, scope: !6148)
!6180 = !DILocation(line: 514, column: 12, scope: !6148)
!6181 = !DILocation(line: 514, column: 5, scope: !6148)
!6182 = distinct !DISubprogram(name: "get_bits_count", scope: !1851, file: !1851, line: 219, type: !6183, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!918, !6185}
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 64, align: 64)
!6186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!6187 = !DILocalVariable(name: "s", arg: 1, scope: !6182, file: !1851, line: 219, type: !6185)
!6188 = !DILocation(line: 219, column: 55, scope: !6182)
!6189 = !DILocation(line: 224, column: 12, scope: !6182)
!6190 = !DILocation(line: 224, column: 15, scope: !6182)
!6191 = !DILocation(line: 224, column: 5, scope: !6182)
!6192 = distinct !DISubprogram(name: "NEG_USR32", scope: !6193, file: !6193, line: 124, type: !6194, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6193 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!934, !934, !1181}
!6196 = !DILocalVariable(name: "a", arg: 1, scope: !6192, file: !6193, line: 124, type: !934)
!6197 = !DILocation(line: 124, column: 43, scope: !6192)
!6198 = !DILocalVariable(name: "s", arg: 2, scope: !6192, file: !6193, line: 124, type: !1181)
!6199 = !DILocation(line: 124, column: 53, scope: !6192)
!6200 = !DILocation(line: 125, column: 5, scope: !6192)
!6201 = !DILocation(line: 127, column: 29, scope: !6192)
!6202 = !DILocation(line: 127, column: 28, scope: !6192)
!6203 = !DILocation(line: 127, column: 18, scope: !6192)
!6204 = !{i32 213116, i32 213130}
!6205 = !DILocation(line: 129, column: 12, scope: !6192)
!6206 = !DILocation(line: 129, column: 5, scope: !6192)
!6207 = distinct !DISubprogram(name: "ape_decode_value_3860", scope: !910, file: !910, line: 479, type: !6208, isLocal: true, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!918, !1750, !5735, !5736}
!6210 = !DILocalVariable(name: "ctx", arg: 1, scope: !6207, file: !910, line: 479, type: !1750)
!6211 = !DILocation(line: 479, column: 53, scope: !6207)
!6212 = !DILocalVariable(name: "gb", arg: 2, scope: !6207, file: !910, line: 479, type: !5735)
!6213 = !DILocation(line: 479, column: 73, scope: !6207)
!6214 = !DILocalVariable(name: "rice", arg: 3, scope: !6207, file: !910, line: 480, type: !5736)
!6215 = !DILocation(line: 480, column: 50, scope: !6207)
!6216 = !DILocalVariable(name: "x", scope: !6207, file: !910, line: 482, type: !919)
!6217 = !DILocation(line: 482, column: 18, scope: !6207)
!6218 = !DILocalVariable(name: "overflow", scope: !6207, file: !910, line: 482, type: !919)
!6219 = !DILocation(line: 482, column: 21, scope: !6207)
!6220 = !DILocation(line: 484, column: 26, scope: !6207)
!6221 = !DILocation(line: 484, column: 47, scope: !6207)
!6222 = !DILocation(line: 484, column: 33, scope: !6207)
!6223 = !DILocation(line: 484, column: 16, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6207, file: !910, discriminator: 1)
!6225 = !DILocation(line: 484, column: 14, scope: !6207)
!6226 = !DILocation(line: 486, column: 9, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6207, file: !910, line: 486, column: 9)
!6228 = !DILocation(line: 486, column: 14, scope: !6227)
!6229 = !DILocation(line: 486, column: 26, scope: !6227)
!6230 = !DILocation(line: 486, column: 9, scope: !6207)
!6231 = !DILocation(line: 487, column: 9, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6227, file: !910, line: 486, column: 34)
!6233 = !DILocation(line: 487, column: 16, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6232, file: !910, discriminator: 1)
!6235 = !DILocation(line: 487, column: 25, scope: !6234)
!6236 = !DILocation(line: 487, column: 9, scope: !6234)
!6237 = !DILocation(line: 488, column: 22, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !910, line: 487, column: 32)
!6239 = !DILocation(line: 489, column: 13, scope: !6238)
!6240 = !DILocation(line: 489, column: 19, scope: !6238)
!6241 = !DILocation(line: 489, column: 21, scope: !6238)
!6242 = !DILocation(line: 487, column: 9, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !6232, file: !910, discriminator: 2)
!6244 = distinct !{!6244, !6231}
!6245 = !DILocation(line: 491, column: 5, scope: !6232)
!6246 = !DILocation(line: 493, column: 10, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6207, file: !910, line: 493, column: 9)
!6248 = !DILocation(line: 493, column: 16, scope: !6247)
!6249 = !DILocation(line: 493, column: 9, scope: !6207)
!6250 = !DILocation(line: 494, column: 13, scope: !6247)
!6251 = !DILocation(line: 494, column: 11, scope: !6247)
!6252 = !DILocation(line: 494, column: 9, scope: !6247)
!6253 = !DILocation(line: 495, column: 13, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6247, file: !910, line: 495, column: 13)
!6255 = !DILocation(line: 495, column: 19, scope: !6254)
!6256 = !DILocation(line: 495, column: 21, scope: !6254)
!6257 = !DILocation(line: 495, column: 13, scope: !6247)
!6258 = !DILocation(line: 496, column: 14, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6254, file: !910, line: 495, column: 28)
!6260 = !DILocation(line: 496, column: 26, scope: !6259)
!6261 = !DILocation(line: 496, column: 32, scope: !6259)
!6262 = !DILocation(line: 496, column: 23, scope: !6259)
!6263 = !DILocation(line: 496, column: 46, scope: !6259)
!6264 = !DILocation(line: 496, column: 50, scope: !6259)
!6265 = !DILocation(line: 496, column: 56, scope: !6259)
!6266 = !DILocation(line: 496, column: 37, scope: !6259)
!6267 = !DILocation(line: 496, column: 35, scope: !6259)
!6268 = !DILocation(line: 496, column: 11, scope: !6259)
!6269 = !DILocation(line: 497, column: 5, scope: !6259)
!6270 = !DILocation(line: 498, column: 16, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6254, file: !910, line: 497, column: 12)
!6272 = !DILocation(line: 498, column: 21, scope: !6271)
!6273 = !DILocation(line: 498, column: 71, scope: !6271)
!6274 = !DILocation(line: 498, column: 77, scope: !6271)
!6275 = !DILocation(line: 498, column: 9, scope: !6271)
!6276 = !DILocation(line: 499, column: 9, scope: !6271)
!6277 = !DILocation(line: 501, column: 19, scope: !6207)
!6278 = !DILocation(line: 501, column: 24, scope: !6207)
!6279 = !DILocation(line: 501, column: 30, scope: !6207)
!6280 = !DILocation(line: 501, column: 35, scope: !6207)
!6281 = !DILocation(line: 501, column: 39, scope: !6207)
!6282 = !DILocation(line: 501, column: 21, scope: !6207)
!6283 = !DILocation(line: 501, column: 5, scope: !6207)
!6284 = !DILocation(line: 501, column: 11, scope: !6207)
!6285 = !DILocation(line: 501, column: 16, scope: !6207)
!6286 = !DILocation(line: 502, column: 9, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6207, file: !910, line: 502, column: 9)
!6288 = !DILocation(line: 502, column: 15, scope: !6287)
!6289 = !DILocation(line: 502, column: 23, scope: !6287)
!6290 = !DILocation(line: 502, column: 29, scope: !6287)
!6291 = !DILocation(line: 502, column: 39, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !6287, file: !910, discriminator: 1)
!6293 = !DILocation(line: 502, column: 45, scope: !6292)
!6294 = !DILocation(line: 502, column: 47, scope: !6292)
!6295 = !DILocation(line: 502, column: 35, scope: !6292)
!6296 = !DILocation(line: 502, column: 23, scope: !6292)
!6297 = !DILocation(line: 502, column: 23, scope: !6298)
!6298 = !DILexicalBlockFile(scope: !6287, file: !910, discriminator: 2)
!6299 = !DILocation(line: 502, column: 23, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6287, file: !910, discriminator: 3)
!6301 = !DILocation(line: 502, column: 20, scope: !6300)
!6302 = !DILocation(line: 502, column: 9, scope: !6300)
!6303 = !DILocation(line: 503, column: 9, scope: !6287)
!6304 = !DILocation(line: 503, column: 15, scope: !6287)
!6305 = !DILocation(line: 503, column: 16, scope: !6287)
!6306 = !DILocation(line: 504, column: 14, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6287, file: !910, line: 504, column: 14)
!6308 = !DILocation(line: 504, column: 20, scope: !6307)
!6309 = !DILocation(line: 504, column: 35, scope: !6307)
!6310 = !DILocation(line: 504, column: 41, scope: !6307)
!6311 = !DILocation(line: 504, column: 43, scope: !6307)
!6312 = !DILocation(line: 504, column: 31, scope: !6307)
!6313 = !DILocation(line: 504, column: 25, scope: !6307)
!6314 = !DILocation(line: 504, column: 49, scope: !6307)
!6315 = !DILocation(line: 504, column: 52, scope: !6316)
!6316 = !DILexicalBlockFile(scope: !6307, file: !910, discriminator: 1)
!6317 = !DILocation(line: 504, column: 58, scope: !6316)
!6318 = !DILocation(line: 504, column: 60, scope: !6316)
!6319 = !DILocation(line: 504, column: 14, scope: !6316)
!6320 = !DILocation(line: 505, column: 9, scope: !6307)
!6321 = !DILocation(line: 505, column: 15, scope: !6307)
!6322 = !DILocation(line: 505, column: 16, scope: !6307)
!6323 = !DILocation(line: 508, column: 14, scope: !6207)
!6324 = !DILocation(line: 508, column: 16, scope: !6207)
!6325 = !DILocation(line: 508, column: 26, scope: !6207)
!6326 = !DILocation(line: 508, column: 28, scope: !6207)
!6327 = !DILocation(line: 508, column: 33, scope: !6207)
!6328 = !DILocation(line: 508, column: 22, scope: !6207)
!6329 = !DILocation(line: 508, column: 39, scope: !6207)
!6330 = !DILocation(line: 508, column: 5, scope: !6207)
!6331 = !DILocation(line: 509, column: 1, scope: !6207)
!6332 = distinct !DISubprogram(name: "ape_decode_value_3900", scope: !910, file: !910, line: 511, type: !6333, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!918, !1750, !5736}
!6335 = !DILocalVariable(name: "ctx", arg: 1, scope: !6332, file: !910, line: 511, type: !1750)
!6336 = !DILocation(line: 511, column: 53, scope: !6332)
!6337 = !DILocalVariable(name: "rice", arg: 2, scope: !6332, file: !910, line: 511, type: !5736)
!6338 = !DILocation(line: 511, column: 67, scope: !6332)
!6339 = !DILocalVariable(name: "x", scope: !6332, file: !910, line: 513, type: !919)
!6340 = !DILocation(line: 513, column: 18, scope: !6332)
!6341 = !DILocalVariable(name: "overflow", scope: !6332, file: !910, line: 513, type: !919)
!6342 = !DILocation(line: 513, column: 21, scope: !6332)
!6343 = !DILocalVariable(name: "tmpk", scope: !6332, file: !910, line: 514, type: !918)
!6344 = !DILocation(line: 514, column: 9, scope: !6332)
!6345 = !DILocation(line: 516, column: 33, scope: !6332)
!6346 = !DILocation(line: 516, column: 16, scope: !6332)
!6347 = !DILocation(line: 516, column: 14, scope: !6332)
!6348 = !DILocation(line: 518, column: 9, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6332, file: !910, line: 518, column: 9)
!6350 = !DILocation(line: 518, column: 18, scope: !6349)
!6351 = !DILocation(line: 518, column: 9, scope: !6332)
!6352 = !DILocation(line: 519, column: 34, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6349, file: !910, line: 518, column: 31)
!6354 = !DILocation(line: 519, column: 16, scope: !6353)
!6355 = !DILocation(line: 519, column: 14, scope: !6353)
!6356 = !DILocation(line: 520, column: 18, scope: !6353)
!6357 = !DILocation(line: 521, column: 5, scope: !6353)
!6358 = !DILocation(line: 522, column: 17, scope: !6349)
!6359 = !DILocation(line: 522, column: 23, scope: !6349)
!6360 = !DILocation(line: 522, column: 25, scope: !6349)
!6361 = !DILocation(line: 522, column: 16, scope: !6349)
!6362 = !DILocation(line: 522, column: 16, scope: !6363)
!6363 = !DILexicalBlockFile(scope: !6349, file: !910, discriminator: 1)
!6364 = !DILocation(line: 522, column: 36, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6349, file: !910, discriminator: 2)
!6366 = !DILocation(line: 522, column: 42, scope: !6365)
!6367 = !DILocation(line: 522, column: 44, scope: !6365)
!6368 = !DILocation(line: 522, column: 16, scope: !6365)
!6369 = !DILocation(line: 522, column: 16, scope: !6370)
!6370 = !DILexicalBlockFile(scope: !6349, file: !910, discriminator: 3)
!6371 = !DILocation(line: 522, column: 14, scope: !6370)
!6372 = !DILocation(line: 524, column: 9, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6332, file: !910, line: 524, column: 9)
!6374 = !DILocation(line: 524, column: 14, scope: !6373)
!6375 = !DILocation(line: 524, column: 20, scope: !6373)
!6376 = !DILocation(line: 524, column: 23, scope: !6377)
!6377 = !DILexicalBlockFile(scope: !6373, file: !910, discriminator: 1)
!6378 = !DILocation(line: 524, column: 28, scope: !6377)
!6379 = !DILocation(line: 524, column: 40, scope: !6377)
!6380 = !DILocation(line: 524, column: 9, scope: !6377)
!6381 = !DILocation(line: 525, column: 13, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !910, line: 525, column: 13)
!6383 = distinct !DILexicalBlock(scope: !6373, file: !910, line: 524, column: 48)
!6384 = !DILocation(line: 525, column: 18, scope: !6382)
!6385 = !DILocation(line: 525, column: 13, scope: !6383)
!6386 = !DILocation(line: 526, column: 20, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6382, file: !910, line: 525, column: 24)
!6388 = !DILocation(line: 526, column: 25, scope: !6387)
!6389 = !DILocation(line: 526, column: 59, scope: !6387)
!6390 = !DILocation(line: 526, column: 13, scope: !6387)
!6391 = !DILocation(line: 527, column: 13, scope: !6387)
!6392 = !DILocation(line: 529, column: 31, scope: !6383)
!6393 = !DILocation(line: 529, column: 36, scope: !6383)
!6394 = !DILocation(line: 529, column: 13, scope: !6383)
!6395 = !DILocation(line: 529, column: 11, scope: !6383)
!6396 = !DILocation(line: 530, column: 5, scope: !6383)
!6397 = !DILocation(line: 530, column: 16, scope: !6398)
!6398 = !DILexicalBlockFile(scope: !6399, file: !910, discriminator: 1)
!6399 = distinct !DILexicalBlock(scope: !6373, file: !910, line: 530, column: 16)
!6400 = !DILocation(line: 530, column: 21, scope: !6398)
!6401 = !DILocation(line: 531, column: 31, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6399, file: !910, line: 530, column: 28)
!6403 = !DILocation(line: 531, column: 13, scope: !6402)
!6404 = !DILocation(line: 531, column: 11, scope: !6402)
!6405 = !DILocation(line: 532, column: 33, scope: !6402)
!6406 = !DILocation(line: 532, column: 38, scope: !6402)
!6407 = !DILocation(line: 532, column: 43, scope: !6402)
!6408 = !DILocation(line: 532, column: 15, scope: !6402)
!6409 = !DILocation(line: 532, column: 49, scope: !6402)
!6410 = !DILocation(line: 532, column: 11, scope: !6402)
!6411 = !DILocation(line: 533, column: 5, scope: !6402)
!6412 = !DILocation(line: 534, column: 16, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6399, file: !910, line: 533, column: 12)
!6414 = !DILocation(line: 534, column: 21, scope: !6413)
!6415 = !DILocation(line: 534, column: 55, scope: !6413)
!6416 = !DILocation(line: 534, column: 9, scope: !6413)
!6417 = !DILocation(line: 535, column: 9, scope: !6413)
!6418 = !DILocation(line: 537, column: 10, scope: !6332)
!6419 = !DILocation(line: 537, column: 22, scope: !6332)
!6420 = !DILocation(line: 537, column: 19, scope: !6332)
!6421 = !DILocation(line: 537, column: 7, scope: !6332)
!6422 = !DILocation(line: 539, column: 17, scope: !6332)
!6423 = !DILocation(line: 539, column: 23, scope: !6332)
!6424 = !DILocation(line: 539, column: 5, scope: !6332)
!6425 = !DILocation(line: 542, column: 14, scope: !6332)
!6426 = !DILocation(line: 542, column: 16, scope: !6332)
!6427 = !DILocation(line: 542, column: 26, scope: !6332)
!6428 = !DILocation(line: 542, column: 28, scope: !6332)
!6429 = !DILocation(line: 542, column: 33, scope: !6332)
!6430 = !DILocation(line: 542, column: 22, scope: !6332)
!6431 = !DILocation(line: 542, column: 39, scope: !6332)
!6432 = !DILocation(line: 542, column: 5, scope: !6332)
!6433 = !DILocation(line: 543, column: 1, scope: !6332)
!6434 = distinct !DISubprogram(name: "range_get_symbol", scope: !910, file: !910, line: 432, type: !6435, isLocal: true, isDefinition: true, scopeLine: 435, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!918, !1750, !1770, !1770}
!6437 = !DILocalVariable(name: "ctx", arg: 1, scope: !6434, file: !910, line: 432, type: !1750)
!6438 = !DILocation(line: 432, column: 48, scope: !6434)
!6439 = !DILocalVariable(name: "counts", arg: 2, scope: !6434, file: !910, line: 433, type: !1770)
!6440 = !DILocation(line: 433, column: 51, scope: !6434)
!6441 = !DILocalVariable(name: "counts_diff", arg: 3, scope: !6434, file: !910, line: 434, type: !1770)
!6442 = !DILocation(line: 434, column: 51, scope: !6434)
!6443 = !DILocalVariable(name: "symbol", scope: !6434, file: !910, line: 436, type: !918)
!6444 = !DILocation(line: 436, column: 9, scope: !6434)
!6445 = !DILocalVariable(name: "cf", scope: !6434, file: !910, line: 436, type: !918)
!6446 = !DILocation(line: 436, column: 17, scope: !6434)
!6447 = !DILocation(line: 438, column: 32, scope: !6434)
!6448 = !DILocation(line: 438, column: 10, scope: !6434)
!6449 = !DILocation(line: 438, column: 8, scope: !6434)
!6450 = !DILocation(line: 440, column: 8, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6434, file: !910, line: 440, column: 8)
!6452 = !DILocation(line: 440, column: 11, scope: !6451)
!6453 = !DILocation(line: 440, column: 8, scope: !6434)
!6454 = !DILocation(line: 441, column: 17, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !910, line: 440, column: 19)
!6456 = !DILocation(line: 441, column: 20, scope: !6455)
!6457 = !DILocation(line: 441, column: 28, scope: !6455)
!6458 = !DILocation(line: 441, column: 15, scope: !6455)
!6459 = !DILocation(line: 442, column: 29, scope: !6455)
!6460 = !DILocation(line: 442, column: 37, scope: !6455)
!6461 = !DILocation(line: 442, column: 9, scope: !6455)
!6462 = !DILocation(line: 443, column: 12, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6455, file: !910, line: 443, column: 12)
!6464 = !DILocation(line: 443, column: 15, scope: !6463)
!6465 = !DILocation(line: 443, column: 12, scope: !6455)
!6466 = !DILocation(line: 444, column: 13, scope: !6463)
!6467 = !DILocation(line: 444, column: 18, scope: !6463)
!6468 = !DILocation(line: 444, column: 23, scope: !6463)
!6469 = !DILocation(line: 445, column: 16, scope: !6455)
!6470 = !DILocation(line: 445, column: 9, scope: !6455)
!6471 = !DILocation(line: 448, column: 17, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6434, file: !910, line: 448, column: 5)
!6473 = !DILocation(line: 448, column: 10, scope: !6472)
!6474 = !DILocation(line: 448, column: 29, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !6476, file: !910, discriminator: 1)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !910, line: 448, column: 5)
!6477 = !DILocation(line: 448, column: 36, scope: !6475)
!6478 = !DILocation(line: 448, column: 22, scope: !6475)
!6479 = !DILocation(line: 448, column: 44, scope: !6475)
!6480 = !DILocation(line: 448, column: 41, scope: !6475)
!6481 = !DILocation(line: 448, column: 5, scope: !6475)
!6482 = !DILocation(line: 448, column: 5, scope: !6483)
!6483 = !DILexicalBlockFile(scope: !6472, file: !910, discriminator: 2)
!6484 = !DILocation(line: 448, column: 54, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6476, file: !910, discriminator: 3)
!6486 = !DILocation(line: 448, column: 5, scope: !6485)
!6487 = distinct !{!6487, !6488}
!6488 = !DILocation(line: 448, column: 5, scope: !6434)
!6489 = !DILocation(line: 450, column: 25, scope: !6434)
!6490 = !DILocation(line: 450, column: 42, scope: !6434)
!6491 = !DILocation(line: 450, column: 30, scope: !6434)
!6492 = !DILocation(line: 450, column: 58, scope: !6434)
!6493 = !DILocation(line: 450, column: 51, scope: !6434)
!6494 = !DILocation(line: 450, column: 5, scope: !6434)
!6495 = !DILocation(line: 452, column: 12, scope: !6434)
!6496 = !DILocation(line: 452, column: 5, scope: !6434)
!6497 = !DILocation(line: 453, column: 1, scope: !6434)
!6498 = distinct !DISubprogram(name: "range_decode_bits", scope: !910, file: !910, line: 380, type: !6499, isLocal: true, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{!918, !1750, !918}
!6501 = !DILocalVariable(name: "ctx", arg: 1, scope: !6498, file: !910, line: 380, type: !1750)
!6502 = !DILocation(line: 380, column: 49, scope: !6498)
!6503 = !DILocalVariable(name: "n", arg: 2, scope: !6498, file: !910, line: 380, type: !918)
!6504 = !DILocation(line: 380, column: 58, scope: !6498)
!6505 = !DILocalVariable(name: "sym", scope: !6498, file: !910, line: 382, type: !918)
!6506 = !DILocation(line: 382, column: 9, scope: !6498)
!6507 = !DILocation(line: 382, column: 37, scope: !6498)
!6508 = !DILocation(line: 382, column: 42, scope: !6498)
!6509 = !DILocation(line: 382, column: 15, scope: !6498)
!6510 = !DILocation(line: 383, column: 25, scope: !6498)
!6511 = !DILocation(line: 383, column: 33, scope: !6498)
!6512 = !DILocation(line: 383, column: 5, scope: !6498)
!6513 = !DILocation(line: 384, column: 12, scope: !6498)
!6514 = !DILocation(line: 384, column: 5, scope: !6498)
!6515 = distinct !DISubprogram(name: "update_rice", scope: !910, file: !910, line: 456, type: !6516, isLocal: true, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6516 = !DISubroutineType(types: !6517)
!6517 = !{null, !5736, !919}
!6518 = !DILocalVariable(name: "rice", arg: 1, scope: !6515, file: !910, line: 456, type: !5736)
!6519 = !DILocation(line: 456, column: 41, scope: !6515)
!6520 = !DILocalVariable(name: "x", arg: 2, scope: !6515, file: !910, line: 456, type: !919)
!6521 = !DILocation(line: 456, column: 60, scope: !6515)
!6522 = !DILocalVariable(name: "lim", scope: !6515, file: !910, line: 458, type: !918)
!6523 = !DILocation(line: 458, column: 9, scope: !6515)
!6524 = !DILocation(line: 458, column: 15, scope: !6515)
!6525 = !DILocation(line: 458, column: 21, scope: !6515)
!6526 = !DILocation(line: 458, column: 32, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !6515, file: !910, discriminator: 1)
!6528 = !DILocation(line: 458, column: 38, scope: !6527)
!6529 = !DILocation(line: 458, column: 40, scope: !6527)
!6530 = !DILocation(line: 458, column: 28, scope: !6527)
!6531 = !DILocation(line: 458, column: 15, scope: !6527)
!6532 = !DILocation(line: 458, column: 15, scope: !6533)
!6533 = !DILexicalBlockFile(scope: !6515, file: !910, discriminator: 2)
!6534 = !DILocation(line: 458, column: 15, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !6515, file: !910, discriminator: 3)
!6536 = !DILocation(line: 458, column: 9, scope: !6535)
!6537 = !DILocation(line: 459, column: 21, scope: !6515)
!6538 = !DILocation(line: 459, column: 23, scope: !6515)
!6539 = !DILocation(line: 459, column: 28, scope: !6515)
!6540 = !DILocation(line: 459, column: 37, scope: !6515)
!6541 = !DILocation(line: 459, column: 43, scope: !6515)
!6542 = !DILocation(line: 459, column: 48, scope: !6515)
!6543 = !DILocation(line: 459, column: 54, scope: !6515)
!6544 = !DILocation(line: 459, column: 33, scope: !6515)
!6545 = !DILocation(line: 459, column: 5, scope: !6515)
!6546 = !DILocation(line: 459, column: 11, scope: !6515)
!6547 = !DILocation(line: 459, column: 16, scope: !6515)
!6548 = !DILocation(line: 461, column: 9, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6515, file: !910, line: 461, column: 9)
!6550 = !DILocation(line: 461, column: 15, scope: !6549)
!6551 = !DILocation(line: 461, column: 22, scope: !6549)
!6552 = !DILocation(line: 461, column: 20, scope: !6549)
!6553 = !DILocation(line: 461, column: 9, scope: !6515)
!6554 = !DILocation(line: 462, column: 9, scope: !6549)
!6555 = !DILocation(line: 462, column: 15, scope: !6549)
!6556 = !DILocation(line: 462, column: 16, scope: !6549)
!6557 = !DILocation(line: 463, column: 14, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6549, file: !910, line: 463, column: 14)
!6559 = !DILocation(line: 463, column: 20, scope: !6558)
!6560 = !DILocation(line: 463, column: 35, scope: !6558)
!6561 = !DILocation(line: 463, column: 41, scope: !6558)
!6562 = !DILocation(line: 463, column: 43, scope: !6558)
!6563 = !DILocation(line: 463, column: 31, scope: !6558)
!6564 = !DILocation(line: 463, column: 25, scope: !6558)
!6565 = !DILocation(line: 463, column: 14, scope: !6549)
!6566 = !DILocation(line: 464, column: 9, scope: !6558)
!6567 = !DILocation(line: 464, column: 15, scope: !6558)
!6568 = !DILocation(line: 464, column: 16, scope: !6558)
!6569 = !DILocation(line: 465, column: 1, scope: !6515)
!6570 = distinct !DISubprogram(name: "range_decode_culshift", scope: !910, file: !910, line: 359, type: !6499, isLocal: true, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6571 = !DILocalVariable(name: "ctx", arg: 1, scope: !6570, file: !910, line: 359, type: !1750)
!6572 = !DILocation(line: 359, column: 53, scope: !6570)
!6573 = !DILocalVariable(name: "shift", arg: 2, scope: !6570, file: !910, line: 359, type: !918)
!6574 = !DILocation(line: 359, column: 62, scope: !6570)
!6575 = !DILocation(line: 361, column: 25, scope: !6570)
!6576 = !DILocation(line: 361, column: 5, scope: !6570)
!6577 = !DILocation(line: 362, column: 20, scope: !6570)
!6578 = !DILocation(line: 362, column: 25, scope: !6570)
!6579 = !DILocation(line: 362, column: 28, scope: !6570)
!6580 = !DILocation(line: 362, column: 37, scope: !6570)
!6581 = !DILocation(line: 362, column: 34, scope: !6570)
!6582 = !DILocation(line: 362, column: 5, scope: !6570)
!6583 = !DILocation(line: 362, column: 10, scope: !6570)
!6584 = !DILocation(line: 362, column: 13, scope: !6570)
!6585 = !DILocation(line: 362, column: 18, scope: !6570)
!6586 = !DILocation(line: 363, column: 12, scope: !6570)
!6587 = !DILocation(line: 363, column: 17, scope: !6570)
!6588 = !DILocation(line: 363, column: 20, scope: !6570)
!6589 = !DILocation(line: 363, column: 26, scope: !6570)
!6590 = !DILocation(line: 363, column: 31, scope: !6570)
!6591 = !DILocation(line: 363, column: 34, scope: !6570)
!6592 = !DILocation(line: 363, column: 24, scope: !6570)
!6593 = !DILocation(line: 363, column: 5, scope: !6570)
!6594 = distinct !DISubprogram(name: "range_decode_update", scope: !910, file: !910, line: 373, type: !6595, isLocal: true, isDefinition: true, scopeLine: 374, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{null, !1750, !918, !918}
!6597 = !DILocalVariable(name: "ctx", arg: 1, scope: !6594, file: !910, line: 373, type: !1750)
!6598 = !DILocation(line: 373, column: 52, scope: !6594)
!6599 = !DILocalVariable(name: "sy_f", arg: 2, scope: !6594, file: !910, line: 373, type: !918)
!6600 = !DILocation(line: 373, column: 61, scope: !6594)
!6601 = !DILocalVariable(name: "lt_f", arg: 3, scope: !6594, file: !910, line: 373, type: !918)
!6602 = !DILocation(line: 373, column: 71, scope: !6594)
!6603 = !DILocation(line: 375, column: 20, scope: !6594)
!6604 = !DILocation(line: 375, column: 25, scope: !6594)
!6605 = !DILocation(line: 375, column: 28, scope: !6594)
!6606 = !DILocation(line: 375, column: 35, scope: !6594)
!6607 = !DILocation(line: 375, column: 33, scope: !6594)
!6608 = !DILocation(line: 375, column: 5, scope: !6594)
!6609 = !DILocation(line: 375, column: 10, scope: !6594)
!6610 = !DILocation(line: 375, column: 13, scope: !6594)
!6611 = !DILocation(line: 375, column: 17, scope: !6594)
!6612 = !DILocation(line: 376, column: 21, scope: !6594)
!6613 = !DILocation(line: 376, column: 26, scope: !6594)
!6614 = !DILocation(line: 376, column: 29, scope: !6594)
!6615 = !DILocation(line: 376, column: 36, scope: !6594)
!6616 = !DILocation(line: 376, column: 34, scope: !6594)
!6617 = !DILocation(line: 376, column: 5, scope: !6594)
!6618 = !DILocation(line: 376, column: 10, scope: !6594)
!6619 = !DILocation(line: 376, column: 13, scope: !6594)
!6620 = !DILocation(line: 376, column: 19, scope: !6594)
!6621 = !DILocation(line: 377, column: 1, scope: !6594)
!6622 = distinct !DISubprogram(name: "range_dec_normalize", scope: !910, file: !910, line: 326, type: !6623, isLocal: true, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{null, !1750}
!6625 = !DILocalVariable(name: "ctx", arg: 1, scope: !6622, file: !910, line: 326, type: !1750)
!6626 = !DILocation(line: 326, column: 52, scope: !6622)
!6627 = !DILocation(line: 328, column: 5, scope: !6622)
!6628 = !DILocation(line: 328, column: 12, scope: !6629)
!6629 = !DILexicalBlockFile(scope: !6622, file: !910, discriminator: 1)
!6630 = !DILocation(line: 328, column: 17, scope: !6629)
!6631 = !DILocation(line: 328, column: 20, scope: !6629)
!6632 = !DILocation(line: 328, column: 26, scope: !6629)
!6633 = !DILocation(line: 328, column: 5, scope: !6629)
!6634 = !DILocation(line: 329, column: 9, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6622, file: !910, line: 328, column: 66)
!6636 = !DILocation(line: 329, column: 14, scope: !6635)
!6637 = !DILocation(line: 329, column: 17, scope: !6635)
!6638 = !DILocation(line: 329, column: 24, scope: !6635)
!6639 = !DILocation(line: 330, column: 12, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !910, line: 330, column: 12)
!6641 = !DILocation(line: 330, column: 17, scope: !6640)
!6642 = !DILocation(line: 330, column: 23, scope: !6640)
!6643 = !DILocation(line: 330, column: 28, scope: !6640)
!6644 = !DILocation(line: 330, column: 21, scope: !6640)
!6645 = !DILocation(line: 330, column: 12, scope: !6635)
!6646 = !DILocation(line: 331, column: 32, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6640, file: !910, line: 330, column: 38)
!6648 = !DILocation(line: 331, column: 37, scope: !6647)
!6649 = !DILocation(line: 331, column: 31, scope: !6647)
!6650 = !DILocation(line: 331, column: 13, scope: !6647)
!6651 = !DILocation(line: 331, column: 18, scope: !6647)
!6652 = !DILocation(line: 331, column: 21, scope: !6647)
!6653 = !DILocation(line: 331, column: 28, scope: !6647)
!6654 = !DILocation(line: 332, column: 13, scope: !6647)
!6655 = !DILocation(line: 332, column: 18, scope: !6647)
!6656 = !DILocation(line: 332, column: 21, scope: !6647)
!6657 = !DILocation(line: 333, column: 9, scope: !6647)
!6658 = !DILocation(line: 334, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6640, file: !910, line: 333, column: 16)
!6660 = !DILocation(line: 334, column: 18, scope: !6659)
!6661 = !DILocation(line: 334, column: 24, scope: !6659)
!6662 = !DILocation(line: 336, column: 24, scope: !6635)
!6663 = !DILocation(line: 336, column: 29, scope: !6635)
!6664 = !DILocation(line: 336, column: 32, scope: !6635)
!6665 = !DILocation(line: 336, column: 36, scope: !6635)
!6666 = !DILocation(line: 336, column: 46, scope: !6635)
!6667 = !DILocation(line: 336, column: 51, scope: !6635)
!6668 = !DILocation(line: 336, column: 54, scope: !6635)
!6669 = !DILocation(line: 336, column: 61, scope: !6635)
!6670 = !DILocation(line: 336, column: 67, scope: !6635)
!6671 = !DILocation(line: 336, column: 42, scope: !6635)
!6672 = !DILocation(line: 336, column: 9, scope: !6635)
!6673 = !DILocation(line: 336, column: 14, scope: !6635)
!6674 = !DILocation(line: 336, column: 17, scope: !6635)
!6675 = !DILocation(line: 336, column: 21, scope: !6635)
!6676 = !DILocation(line: 337, column: 9, scope: !6635)
!6677 = !DILocation(line: 337, column: 14, scope: !6635)
!6678 = !DILocation(line: 337, column: 17, scope: !6635)
!6679 = !DILocation(line: 337, column: 23, scope: !6635)
!6680 = !DILocation(line: 328, column: 5, scope: !6681)
!6681 = !DILexicalBlockFile(scope: !6622, file: !910, discriminator: 2)
!6682 = distinct !{!6682, !6627}
!6683 = !DILocation(line: 339, column: 1, scope: !6622)
!6684 = distinct !DISubprogram(name: "range_start_decoding", scope: !910, file: !910, line: 318, type: !6623, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6685 = !DILocalVariable(name: "b", arg: 1, scope: !6686, file: !2170, line: 95, type: !2173)
!6686 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !2170, file: !2170, line: 95, type: !2171, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6687 = !DILocation(line: 95, column: 95, scope: !6686, inlinedAt: !6688)
!6688 = distinct !DILocation(line: 320, column: 22, scope: !6684)
!6689 = !DILocalVariable(name: "ctx", arg: 1, scope: !6684, file: !910, line: 318, type: !1750)
!6690 = !DILocation(line: 318, column: 53, scope: !6684)
!6691 = !DILocation(line: 320, column: 43, scope: !6684)
!6692 = !DILocation(line: 320, column: 48, scope: !6684)
!6693 = !DILocation(line: 320, column: 22, scope: !6684)
!6694 = !DILocation(line: 95, column: 102, scope: !6686, inlinedAt: !6688)
!6695 = !DILocation(line: 95, column: 105, scope: !6686, inlinedAt: !6688)
!6696 = !DILocation(line: 95, column: 138, scope: !6686, inlinedAt: !6688)
!6697 = !DILocation(line: 95, column: 137, scope: !6686, inlinedAt: !6688)
!6698 = !DILocation(line: 95, column: 140, scope: !6686, inlinedAt: !6688)
!6699 = !DILocation(line: 95, column: 119, scope: !6686, inlinedAt: !6688)
!6700 = !DILocation(line: 95, column: 118, scope: !6686, inlinedAt: !6688)
!6701 = !DILocation(line: 320, column: 5, scope: !6684)
!6702 = !DILocation(line: 320, column: 10, scope: !6684)
!6703 = !DILocation(line: 320, column: 13, scope: !6684)
!6704 = !DILocation(line: 320, column: 20, scope: !6684)
!6705 = !DILocation(line: 321, column: 19, scope: !6684)
!6706 = !DILocation(line: 321, column: 24, scope: !6684)
!6707 = !DILocation(line: 321, column: 27, scope: !6684)
!6708 = !DILocation(line: 321, column: 34, scope: !6684)
!6709 = !DILocation(line: 321, column: 5, scope: !6684)
!6710 = !DILocation(line: 321, column: 10, scope: !6684)
!6711 = !DILocation(line: 321, column: 13, scope: !6684)
!6712 = !DILocation(line: 321, column: 17, scope: !6684)
!6713 = !DILocation(line: 322, column: 5, scope: !6684)
!6714 = !DILocation(line: 322, column: 10, scope: !6684)
!6715 = !DILocation(line: 322, column: 13, scope: !6684)
!6716 = !DILocation(line: 322, column: 19, scope: !6684)
!6717 = !DILocation(line: 323, column: 1, scope: !6684)
!6718 = distinct !DISubprogram(name: "ape_decode_value_3990", scope: !910, file: !910, line: 545, type: !6333, isLocal: true, isDefinition: true, scopeLine: 546, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6719 = !DILocalVariable(name: "ctx", arg: 1, scope: !6718, file: !910, line: 545, type: !1750)
!6720 = !DILocation(line: 545, column: 53, scope: !6718)
!6721 = !DILocalVariable(name: "rice", arg: 2, scope: !6718, file: !910, line: 545, type: !5736)
!6722 = !DILocation(line: 545, column: 67, scope: !6718)
!6723 = !DILocalVariable(name: "x", scope: !6718, file: !910, line: 547, type: !919)
!6724 = !DILocation(line: 547, column: 18, scope: !6718)
!6725 = !DILocalVariable(name: "overflow", scope: !6718, file: !910, line: 547, type: !919)
!6726 = !DILocation(line: 547, column: 21, scope: !6718)
!6727 = !DILocalVariable(name: "base", scope: !6718, file: !910, line: 548, type: !918)
!6728 = !DILocation(line: 548, column: 9, scope: !6718)
!6729 = !DILocalVariable(name: "pivot", scope: !6718, file: !910, line: 548, type: !918)
!6730 = !DILocation(line: 548, column: 15, scope: !6718)
!6731 = !DILocation(line: 550, column: 13, scope: !6718)
!6732 = !DILocation(line: 550, column: 19, scope: !6718)
!6733 = !DILocation(line: 550, column: 24, scope: !6718)
!6734 = !DILocation(line: 550, column: 11, scope: !6718)
!6735 = !DILocation(line: 551, column: 9, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6718, file: !910, line: 551, column: 9)
!6737 = !DILocation(line: 551, column: 15, scope: !6736)
!6738 = !DILocation(line: 551, column: 9, scope: !6718)
!6739 = !DILocation(line: 552, column: 15, scope: !6736)
!6740 = !DILocation(line: 552, column: 9, scope: !6736)
!6741 = !DILocation(line: 554, column: 33, scope: !6718)
!6742 = !DILocation(line: 554, column: 16, scope: !6718)
!6743 = !DILocation(line: 554, column: 14, scope: !6718)
!6744 = !DILocation(line: 556, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6718, file: !910, line: 556, column: 9)
!6746 = !DILocation(line: 556, column: 18, scope: !6745)
!6747 = !DILocation(line: 556, column: 9, scope: !6718)
!6748 = !DILocation(line: 557, column: 38, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !910, line: 556, column: 31)
!6750 = !DILocation(line: 557, column: 20, scope: !6749)
!6751 = !DILocation(line: 557, column: 47, scope: !6749)
!6752 = !DILocation(line: 557, column: 18, scope: !6749)
!6753 = !DILocation(line: 558, column: 39, scope: !6749)
!6754 = !DILocation(line: 558, column: 21, scope: !6749)
!6755 = !DILocation(line: 558, column: 18, scope: !6749)
!6756 = !DILocation(line: 559, column: 5, scope: !6749)
!6757 = !DILocation(line: 561, column: 9, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6718, file: !910, line: 561, column: 9)
!6759 = !DILocation(line: 561, column: 15, scope: !6758)
!6760 = !DILocation(line: 561, column: 9, scope: !6718)
!6761 = !DILocation(line: 562, column: 37, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6758, file: !910, line: 561, column: 26)
!6763 = !DILocation(line: 562, column: 42, scope: !6762)
!6764 = !DILocation(line: 562, column: 16, scope: !6762)
!6765 = !DILocation(line: 562, column: 14, scope: !6762)
!6766 = !DILocation(line: 563, column: 29, scope: !6762)
!6767 = !DILocation(line: 563, column: 37, scope: !6762)
!6768 = !DILocation(line: 563, column: 9, scope: !6762)
!6769 = !DILocation(line: 564, column: 5, scope: !6762)
!6770 = !DILocalVariable(name: "base_hi", scope: !6771, file: !910, line: 565, type: !918)
!6771 = distinct !DILexicalBlock(scope: !6758, file: !910, line: 564, column: 12)
!6772 = !DILocation(line: 565, column: 13, scope: !6771)
!6773 = !DILocation(line: 565, column: 23, scope: !6771)
!6774 = !DILocalVariable(name: "base_lo", scope: !6771, file: !910, line: 565, type: !918)
!6775 = !DILocation(line: 565, column: 30, scope: !6771)
!6776 = !DILocalVariable(name: "bbits", scope: !6771, file: !910, line: 566, type: !918)
!6777 = !DILocation(line: 566, column: 13, scope: !6771)
!6778 = !DILocation(line: 568, column: 9, scope: !6771)
!6779 = !DILocation(line: 568, column: 16, scope: !6780)
!6780 = !DILexicalBlockFile(scope: !6771, file: !910, discriminator: 1)
!6781 = !DILocation(line: 568, column: 24, scope: !6780)
!6782 = !DILocation(line: 568, column: 9, scope: !6780)
!6783 = !DILocation(line: 569, column: 21, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6771, file: !910, line: 568, column: 35)
!6785 = !DILocation(line: 570, column: 18, scope: !6784)
!6786 = !DILocation(line: 568, column: 9, scope: !6787)
!6787 = !DILexicalBlockFile(scope: !6771, file: !910, discriminator: 2)
!6788 = distinct !{!6788, !6778}
!6789 = !DILocation(line: 572, column: 40, scope: !6771)
!6790 = !DILocation(line: 572, column: 45, scope: !6771)
!6791 = !DILocation(line: 572, column: 53, scope: !6771)
!6792 = !DILocation(line: 572, column: 19, scope: !6771)
!6793 = !DILocation(line: 572, column: 17, scope: !6771)
!6794 = !DILocation(line: 573, column: 29, scope: !6771)
!6795 = !DILocation(line: 573, column: 37, scope: !6771)
!6796 = !DILocation(line: 573, column: 9, scope: !6771)
!6797 = !DILocation(line: 574, column: 40, scope: !6771)
!6798 = !DILocation(line: 574, column: 50, scope: !6771)
!6799 = !DILocation(line: 574, column: 47, scope: !6771)
!6800 = !DILocation(line: 574, column: 19, scope: !6771)
!6801 = !DILocation(line: 574, column: 17, scope: !6771)
!6802 = !DILocation(line: 575, column: 29, scope: !6771)
!6803 = !DILocation(line: 575, column: 37, scope: !6771)
!6804 = !DILocation(line: 575, column: 9, scope: !6771)
!6805 = !DILocation(line: 577, column: 17, scope: !6771)
!6806 = !DILocation(line: 577, column: 28, scope: !6771)
!6807 = !DILocation(line: 577, column: 25, scope: !6771)
!6808 = !DILocation(line: 577, column: 37, scope: !6771)
!6809 = !DILocation(line: 577, column: 35, scope: !6771)
!6810 = !DILocation(line: 577, column: 14, scope: !6771)
!6811 = !DILocation(line: 580, column: 9, scope: !6718)
!6812 = !DILocation(line: 580, column: 16, scope: !6718)
!6813 = !DILocation(line: 580, column: 27, scope: !6718)
!6814 = !DILocation(line: 580, column: 25, scope: !6718)
!6815 = !DILocation(line: 580, column: 14, scope: !6718)
!6816 = !DILocation(line: 580, column: 7, scope: !6718)
!6817 = !DILocation(line: 582, column: 17, scope: !6718)
!6818 = !DILocation(line: 582, column: 23, scope: !6718)
!6819 = !DILocation(line: 582, column: 5, scope: !6718)
!6820 = !DILocation(line: 585, column: 14, scope: !6718)
!6821 = !DILocation(line: 585, column: 16, scope: !6718)
!6822 = !DILocation(line: 585, column: 26, scope: !6718)
!6823 = !DILocation(line: 585, column: 28, scope: !6718)
!6824 = !DILocation(line: 585, column: 33, scope: !6718)
!6825 = !DILocation(line: 585, column: 22, scope: !6718)
!6826 = !DILocation(line: 585, column: 39, scope: !6718)
!6827 = !DILocation(line: 585, column: 5, scope: !6718)
!6828 = distinct !DISubprogram(name: "range_decode_culfreq", scope: !910, file: !910, line: 347, type: !6499, isLocal: true, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6829 = !DILocalVariable(name: "ctx", arg: 1, scope: !6828, file: !910, line: 347, type: !1750)
!6830 = !DILocation(line: 347, column: 52, scope: !6828)
!6831 = !DILocalVariable(name: "tot_f", arg: 2, scope: !6828, file: !910, line: 347, type: !918)
!6832 = !DILocation(line: 347, column: 61, scope: !6828)
!6833 = !DILocation(line: 349, column: 25, scope: !6828)
!6834 = !DILocation(line: 349, column: 5, scope: !6828)
!6835 = !DILocation(line: 350, column: 20, scope: !6828)
!6836 = !DILocation(line: 350, column: 25, scope: !6828)
!6837 = !DILocation(line: 350, column: 28, scope: !6828)
!6838 = !DILocation(line: 350, column: 36, scope: !6828)
!6839 = !DILocation(line: 350, column: 34, scope: !6828)
!6840 = !DILocation(line: 350, column: 5, scope: !6828)
!6841 = !DILocation(line: 350, column: 10, scope: !6828)
!6842 = !DILocation(line: 350, column: 13, scope: !6828)
!6843 = !DILocation(line: 350, column: 18, scope: !6828)
!6844 = !DILocation(line: 351, column: 12, scope: !6828)
!6845 = !DILocation(line: 351, column: 17, scope: !6828)
!6846 = !DILocation(line: 351, column: 20, scope: !6828)
!6847 = !DILocation(line: 351, column: 26, scope: !6828)
!6848 = !DILocation(line: 351, column: 31, scope: !6828)
!6849 = !DILocation(line: 351, column: 34, scope: !6828)
!6850 = !DILocation(line: 351, column: 24, scope: !6828)
!6851 = !DILocation(line: 351, column: 5, scope: !6828)
!6852 = distinct !DISubprogram(name: "long_filter_high_3800", scope: !910, file: !910, line: 889, type: !6853, isLocal: true, isDefinition: true, scopeLine: 890, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{null, !947, !918, !918, !918}
!6855 = !DILocalVariable(name: "buffer", arg: 1, scope: !6852, file: !910, line: 889, type: !947)
!6856 = !DILocation(line: 889, column: 44, scope: !6852)
!6857 = !DILocalVariable(name: "order", arg: 2, scope: !6852, file: !910, line: 889, type: !918)
!6858 = !DILocation(line: 889, column: 56, scope: !6852)
!6859 = !DILocalVariable(name: "shift", arg: 3, scope: !6852, file: !910, line: 889, type: !918)
!6860 = !DILocation(line: 889, column: 67, scope: !6852)
!6861 = !DILocalVariable(name: "length", arg: 4, scope: !6852, file: !910, line: 889, type: !918)
!6862 = !DILocation(line: 889, column: 78, scope: !6852)
!6863 = !DILocalVariable(name: "i", scope: !6852, file: !910, line: 891, type: !918)
!6864 = !DILocation(line: 891, column: 9, scope: !6852)
!6865 = !DILocalVariable(name: "j", scope: !6852, file: !910, line: 891, type: !918)
!6866 = !DILocation(line: 891, column: 12, scope: !6852)
!6867 = !DILocalVariable(name: "dotprod", scope: !6852, file: !910, line: 892, type: !948)
!6868 = !DILocation(line: 892, column: 13, scope: !6852)
!6869 = !DILocalVariable(name: "sign", scope: !6852, file: !910, line: 892, type: !948)
!6870 = !DILocation(line: 892, column: 22, scope: !6852)
!6871 = !DILocalVariable(name: "coeffs", scope: !6852, file: !910, line: 893, type: !6872)
!6872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 8192, align: 32, elements: !6873)
!6873 = !{!6874}
!6874 = !DISubrange(count: 256)
!6875 = !DILocation(line: 893, column: 13, scope: !6852)
!6876 = !DILocalVariable(name: "delay", scope: !6852, file: !910, line: 893, type: !6872)
!6877 = !DILocation(line: 893, column: 26, scope: !6852)
!6878 = !DILocation(line: 895, column: 9, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6852, file: !910, line: 895, column: 9)
!6880 = !DILocation(line: 895, column: 18, scope: !6879)
!6881 = !DILocation(line: 895, column: 15, scope: !6879)
!6882 = !DILocation(line: 895, column: 9, scope: !6852)
!6883 = !DILocation(line: 896, column: 9, scope: !6879)
!6884 = !DILocation(line: 898, column: 5, scope: !6852)
!6885 = !DILocation(line: 898, column: 23, scope: !6852)
!6886 = !DILocation(line: 898, column: 29, scope: !6852)
!6887 = !DILocation(line: 899, column: 12, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6852, file: !910, line: 899, column: 5)
!6889 = !DILocation(line: 899, column: 10, scope: !6888)
!6890 = !DILocation(line: 899, column: 17, scope: !6891)
!6891 = !DILexicalBlockFile(scope: !6892, file: !910, discriminator: 1)
!6892 = distinct !DILexicalBlock(scope: !6888, file: !910, line: 899, column: 5)
!6893 = !DILocation(line: 899, column: 21, scope: !6891)
!6894 = !DILocation(line: 899, column: 19, scope: !6891)
!6895 = !DILocation(line: 899, column: 5, scope: !6891)
!6896 = !DILocation(line: 900, column: 27, scope: !6892)
!6897 = !DILocation(line: 900, column: 20, scope: !6892)
!6898 = !DILocation(line: 900, column: 15, scope: !6892)
!6899 = !DILocation(line: 900, column: 9, scope: !6892)
!6900 = !DILocation(line: 900, column: 18, scope: !6892)
!6901 = !DILocation(line: 899, column: 29, scope: !6902)
!6902 = !DILexicalBlockFile(scope: !6892, file: !910, discriminator: 2)
!6903 = !DILocation(line: 899, column: 5, scope: !6902)
!6904 = distinct !{!6904, !6905}
!6905 = !DILocation(line: 899, column: 5, scope: !6852)
!6906 = !DILocation(line: 901, column: 14, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6852, file: !910, line: 901, column: 5)
!6908 = !DILocation(line: 901, column: 12, scope: !6907)
!6909 = !DILocation(line: 901, column: 10, scope: !6907)
!6910 = !DILocation(line: 901, column: 21, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !6912, file: !910, discriminator: 1)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !910, line: 901, column: 5)
!6913 = !DILocation(line: 901, column: 25, scope: !6911)
!6914 = !DILocation(line: 901, column: 23, scope: !6911)
!6915 = !DILocation(line: 901, column: 5, scope: !6911)
!6916 = !DILocation(line: 902, column: 17, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6912, file: !910, line: 901, column: 38)
!6918 = !DILocation(line: 903, column: 31, scope: !6917)
!6919 = !DILocation(line: 903, column: 24, scope: !6917)
!6920 = !DILocation(line: 903, column: 16, scope: !6917)
!6921 = !DILocation(line: 903, column: 14, scope: !6917)
!6922 = !DILocation(line: 904, column: 16, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6917, file: !910, line: 904, column: 9)
!6924 = !DILocation(line: 904, column: 14, scope: !6923)
!6925 = !DILocation(line: 904, column: 21, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !6927, file: !910, discriminator: 1)
!6927 = distinct !DILexicalBlock(scope: !6923, file: !910, line: 904, column: 9)
!6928 = !DILocation(line: 904, column: 25, scope: !6926)
!6929 = !DILocation(line: 904, column: 23, scope: !6926)
!6930 = !DILocation(line: 904, column: 9, scope: !6926)
!6931 = !DILocation(line: 905, column: 30, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6927, file: !910, line: 904, column: 37)
!6933 = !DILocation(line: 905, column: 24, scope: !6932)
!6934 = !DILocation(line: 905, column: 42, scope: !6932)
!6935 = !DILocation(line: 905, column: 35, scope: !6932)
!6936 = !DILocation(line: 905, column: 33, scope: !6932)
!6937 = !DILocation(line: 905, column: 21, scope: !6932)
!6938 = !DILocation(line: 906, column: 34, scope: !6932)
!6939 = !DILocation(line: 906, column: 28, scope: !6932)
!6940 = !DILocation(line: 906, column: 37, scope: !6932)
!6941 = !DILocation(line: 906, column: 44, scope: !6932)
!6942 = !DILocation(line: 906, column: 51, scope: !6932)
!6943 = !DILocation(line: 906, column: 49, scope: !6932)
!6944 = !DILocation(line: 906, column: 20, scope: !6932)
!6945 = !DILocation(line: 906, column: 13, scope: !6932)
!6946 = !DILocation(line: 906, column: 23, scope: !6932)
!6947 = !DILocation(line: 907, column: 9, scope: !6932)
!6948 = !DILocation(line: 904, column: 33, scope: !6949)
!6949 = !DILexicalBlockFile(scope: !6927, file: !910, discriminator: 2)
!6950 = !DILocation(line: 904, column: 9, scope: !6949)
!6951 = distinct !{!6951, !6952}
!6952 = !DILocation(line: 904, column: 9, scope: !6917)
!6953 = !DILocation(line: 908, column: 22, scope: !6917)
!6954 = !DILocation(line: 908, column: 33, scope: !6917)
!6955 = !DILocation(line: 908, column: 30, scope: !6917)
!6956 = !DILocation(line: 908, column: 16, scope: !6917)
!6957 = !DILocation(line: 908, column: 9, scope: !6917)
!6958 = !DILocation(line: 908, column: 19, scope: !6917)
!6959 = !DILocation(line: 909, column: 16, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6917, file: !910, line: 909, column: 9)
!6961 = !DILocation(line: 909, column: 14, scope: !6960)
!6962 = !DILocation(line: 909, column: 21, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !6964, file: !910, discriminator: 1)
!6964 = distinct !DILexicalBlock(scope: !6960, file: !910, line: 909, column: 9)
!6965 = !DILocation(line: 909, column: 25, scope: !6963)
!6966 = !DILocation(line: 909, column: 31, scope: !6963)
!6967 = !DILocation(line: 909, column: 23, scope: !6963)
!6968 = !DILocation(line: 909, column: 9, scope: !6963)
!6969 = !DILocation(line: 910, column: 30, scope: !6964)
!6970 = !DILocation(line: 910, column: 32, scope: !6964)
!6971 = !DILocation(line: 910, column: 24, scope: !6964)
!6972 = !DILocation(line: 910, column: 19, scope: !6964)
!6973 = !DILocation(line: 910, column: 13, scope: !6964)
!6974 = !DILocation(line: 910, column: 22, scope: !6964)
!6975 = !DILocation(line: 909, column: 37, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6964, file: !910, discriminator: 2)
!6977 = !DILocation(line: 909, column: 9, scope: !6976)
!6978 = distinct !{!6978, !6979}
!6979 = !DILocation(line: 909, column: 9, scope: !6917)
!6980 = !DILocation(line: 911, column: 35, scope: !6917)
!6981 = !DILocation(line: 911, column: 28, scope: !6917)
!6982 = !DILocation(line: 911, column: 15, scope: !6917)
!6983 = !DILocation(line: 911, column: 21, scope: !6917)
!6984 = !DILocation(line: 911, column: 9, scope: !6917)
!6985 = !DILocation(line: 911, column: 26, scope: !6917)
!6986 = !DILocation(line: 912, column: 5, scope: !6917)
!6987 = !DILocation(line: 901, column: 34, scope: !6988)
!6988 = !DILexicalBlockFile(scope: !6912, file: !910, discriminator: 2)
!6989 = !DILocation(line: 901, column: 5, scope: !6988)
!6990 = distinct !{!6990, !6991}
!6991 = !DILocation(line: 901, column: 5, scope: !6852)
!6992 = !DILocation(line: 913, column: 1, scope: !6852)
!6993 = distinct !DISubprogram(name: "long_filter_ehigh_3830", scope: !910, file: !910, line: 915, type: !6994, isLocal: true, isDefinition: true, scopeLine: 916, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!6994 = !DISubroutineType(types: !6995)
!6995 = !{null, !947, !918}
!6996 = !DILocalVariable(name: "buffer", arg: 1, scope: !6993, file: !910, line: 915, type: !947)
!6997 = !DILocation(line: 915, column: 45, scope: !6993)
!6998 = !DILocalVariable(name: "length", arg: 2, scope: !6993, file: !910, line: 915, type: !918)
!6999 = !DILocation(line: 915, column: 57, scope: !6993)
!7000 = !DILocalVariable(name: "i", scope: !6993, file: !910, line: 917, type: !918)
!7001 = !DILocation(line: 917, column: 9, scope: !6993)
!7002 = !DILocalVariable(name: "j", scope: !6993, file: !910, line: 917, type: !918)
!7003 = !DILocation(line: 917, column: 12, scope: !6993)
!7004 = !DILocalVariable(name: "dotprod", scope: !6993, file: !910, line: 918, type: !948)
!7005 = !DILocation(line: 918, column: 13, scope: !6993)
!7006 = !DILocalVariable(name: "sign", scope: !6993, file: !910, line: 918, type: !948)
!7007 = !DILocation(line: 918, column: 22, scope: !6993)
!7008 = !DILocalVariable(name: "coeffs", scope: !6993, file: !910, line: 919, type: !7009)
!7009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 256, align: 32, elements: !1105)
!7010 = !DILocation(line: 919, column: 13, scope: !6993)
!7011 = !DILocalVariable(name: "delay", scope: !6993, file: !910, line: 919, type: !7009)
!7012 = !DILocation(line: 919, column: 32, scope: !6993)
!7013 = !DILocation(line: 919, column: 32, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !6993, file: !910, discriminator: 1)
!7015 = !DILocation(line: 921, column: 12, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6993, file: !910, line: 921, column: 5)
!7017 = !DILocation(line: 921, column: 10, scope: !7016)
!7018 = !DILocation(line: 921, column: 17, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !7020, file: !910, discriminator: 1)
!7020 = distinct !DILexicalBlock(scope: !7016, file: !910, line: 921, column: 5)
!7021 = !DILocation(line: 921, column: 21, scope: !7019)
!7022 = !DILocation(line: 921, column: 19, scope: !7019)
!7023 = !DILocation(line: 921, column: 5, scope: !7019)
!7024 = !DILocation(line: 922, column: 17, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7020, file: !910, line: 921, column: 34)
!7026 = !DILocation(line: 923, column: 31, scope: !7025)
!7027 = !DILocation(line: 923, column: 24, scope: !7025)
!7028 = !DILocation(line: 923, column: 16, scope: !7025)
!7029 = !DILocation(line: 923, column: 14, scope: !7025)
!7030 = !DILocation(line: 924, column: 16, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7025, file: !910, line: 924, column: 9)
!7032 = !DILocation(line: 924, column: 14, scope: !7031)
!7033 = !DILocation(line: 924, column: 21, scope: !7034)
!7034 = !DILexicalBlockFile(scope: !7035, file: !910, discriminator: 1)
!7035 = distinct !DILexicalBlock(scope: !7031, file: !910, line: 924, column: 9)
!7036 = !DILocation(line: 924, column: 23, scope: !7034)
!7037 = !DILocation(line: 924, column: 9, scope: !7034)
!7038 = !DILocation(line: 925, column: 30, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !910, line: 924, column: 34)
!7040 = !DILocation(line: 925, column: 24, scope: !7039)
!7041 = !DILocation(line: 925, column: 42, scope: !7039)
!7042 = !DILocation(line: 925, column: 35, scope: !7039)
!7043 = !DILocation(line: 925, column: 33, scope: !7039)
!7044 = !DILocation(line: 925, column: 21, scope: !7039)
!7045 = !DILocation(line: 926, column: 34, scope: !7039)
!7046 = !DILocation(line: 926, column: 28, scope: !7039)
!7047 = !DILocation(line: 926, column: 37, scope: !7039)
!7048 = !DILocation(line: 926, column: 44, scope: !7039)
!7049 = !DILocation(line: 926, column: 51, scope: !7039)
!7050 = !DILocation(line: 926, column: 49, scope: !7039)
!7051 = !DILocation(line: 926, column: 20, scope: !7039)
!7052 = !DILocation(line: 926, column: 13, scope: !7039)
!7053 = !DILocation(line: 926, column: 23, scope: !7039)
!7054 = !DILocation(line: 927, column: 9, scope: !7039)
!7055 = !DILocation(line: 924, column: 30, scope: !7056)
!7056 = !DILexicalBlockFile(scope: !7035, file: !910, discriminator: 2)
!7057 = !DILocation(line: 924, column: 9, scope: !7056)
!7058 = distinct !{!7058, !7059}
!7059 = !DILocation(line: 924, column: 9, scope: !7025)
!7060 = !DILocation(line: 928, column: 16, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7025, file: !910, line: 928, column: 9)
!7062 = !DILocation(line: 928, column: 14, scope: !7061)
!7063 = !DILocation(line: 928, column: 21, scope: !7064)
!7064 = !DILexicalBlockFile(scope: !7065, file: !910, discriminator: 1)
!7065 = distinct !DILexicalBlock(scope: !7061, file: !910, line: 928, column: 9)
!7066 = !DILocation(line: 928, column: 23, scope: !7064)
!7067 = !DILocation(line: 928, column: 9, scope: !7064)
!7068 = !DILocation(line: 929, column: 30, scope: !7065)
!7069 = !DILocation(line: 929, column: 32, scope: !7065)
!7070 = !DILocation(line: 929, column: 24, scope: !7065)
!7071 = !DILocation(line: 929, column: 19, scope: !7065)
!7072 = !DILocation(line: 929, column: 13, scope: !7065)
!7073 = !DILocation(line: 929, column: 22, scope: !7065)
!7074 = !DILocation(line: 928, column: 29, scope: !7075)
!7075 = !DILexicalBlockFile(scope: !7065, file: !910, discriminator: 2)
!7076 = !DILocation(line: 928, column: 9, scope: !7075)
!7077 = distinct !{!7077, !7078}
!7078 = !DILocation(line: 928, column: 9, scope: !7025)
!7079 = !DILocation(line: 930, column: 27, scope: !7025)
!7080 = !DILocation(line: 930, column: 20, scope: !7025)
!7081 = !DILocation(line: 930, column: 9, scope: !7025)
!7082 = !DILocation(line: 930, column: 18, scope: !7025)
!7083 = !DILocation(line: 931, column: 22, scope: !7025)
!7084 = !DILocation(line: 931, column: 30, scope: !7025)
!7085 = !DILocation(line: 931, column: 16, scope: !7025)
!7086 = !DILocation(line: 931, column: 9, scope: !7025)
!7087 = !DILocation(line: 931, column: 19, scope: !7025)
!7088 = !DILocation(line: 932, column: 5, scope: !7025)
!7089 = !DILocation(line: 921, column: 30, scope: !7090)
!7090 = !DILexicalBlockFile(scope: !7020, file: !910, discriminator: 2)
!7091 = !DILocation(line: 921, column: 5, scope: !7090)
!7092 = distinct !{!7092, !7093}
!7093 = !DILocation(line: 921, column: 5, scope: !6993)
!7094 = !DILocation(line: 933, column: 1, scope: !6993)
!7095 = distinct !DISubprogram(name: "APESIGN", scope: !910, file: !910, line: 814, type: !7096, isLocal: true, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!918, !948}
!7098 = !DILocalVariable(name: "x", arg: 1, scope: !7095, file: !910, line: 814, type: !948)
!7099 = !DILocation(line: 814, column: 35, scope: !7095)
!7100 = !DILocation(line: 815, column: 13, scope: !7095)
!7101 = !DILocation(line: 815, column: 15, scope: !7095)
!7102 = !DILocation(line: 815, column: 23, scope: !7095)
!7103 = !DILocation(line: 815, column: 25, scope: !7095)
!7104 = !DILocation(line: 815, column: 20, scope: !7095)
!7105 = !DILocation(line: 815, column: 5, scope: !7095)
!7106 = distinct !DISubprogram(name: "ape_apply_filters", scope: !910, file: !910, line: 1328, type: !7107, isLocal: true, isDefinition: true, scopeLine: 1330, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{null, !1750, !947, !947, !918}
!7109 = !DILocalVariable(name: "ctx", arg: 1, scope: !7106, file: !910, line: 1328, type: !1750)
!7110 = !DILocation(line: 1328, column: 43, scope: !7106)
!7111 = !DILocalVariable(name: "decoded0", arg: 2, scope: !7106, file: !910, line: 1328, type: !947)
!7112 = !DILocation(line: 1328, column: 57, scope: !7106)
!7113 = !DILocalVariable(name: "decoded1", arg: 3, scope: !7106, file: !910, line: 1329, type: !947)
!7114 = !DILocation(line: 1329, column: 40, scope: !7106)
!7115 = !DILocalVariable(name: "count", arg: 4, scope: !7106, file: !910, line: 1329, type: !918)
!7116 = !DILocation(line: 1329, column: 54, scope: !7106)
!7117 = !DILocalVariable(name: "i", scope: !7106, file: !910, line: 1331, type: !918)
!7118 = !DILocation(line: 1331, column: 9, scope: !7106)
!7119 = !DILocation(line: 1333, column: 12, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7106, file: !910, line: 1333, column: 5)
!7121 = !DILocation(line: 1333, column: 10, scope: !7120)
!7122 = !DILocation(line: 1333, column: 17, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7124, file: !910, discriminator: 1)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !910, line: 1333, column: 5)
!7125 = !DILocation(line: 1333, column: 19, scope: !7123)
!7126 = !DILocation(line: 1333, column: 5, scope: !7123)
!7127 = !DILocation(line: 1334, column: 43, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !910, line: 1334, column: 13)
!7129 = distinct !DILexicalBlock(scope: !7124, file: !910, line: 1333, column: 29)
!7130 = !DILocation(line: 1334, column: 14, scope: !7128)
!7131 = !DILocation(line: 1334, column: 32, scope: !7128)
!7132 = !DILocation(line: 1334, column: 37, scope: !7128)
!7133 = !DILocation(line: 1334, column: 13, scope: !7129)
!7134 = !DILocation(line: 1335, column: 13, scope: !7128)
!7135 = !DILocation(line: 1336, column: 22, scope: !7129)
!7136 = !DILocation(line: 1336, column: 40, scope: !7129)
!7137 = !DILocation(line: 1336, column: 27, scope: !7129)
!7138 = !DILocation(line: 1336, column: 32, scope: !7129)
!7139 = !DILocation(line: 1336, column: 44, scope: !7129)
!7140 = !DILocation(line: 1336, column: 54, scope: !7129)
!7141 = !DILocation(line: 1336, column: 64, scope: !7129)
!7142 = !DILocation(line: 1337, column: 51, scope: !7129)
!7143 = !DILocation(line: 1337, column: 22, scope: !7129)
!7144 = !DILocation(line: 1337, column: 40, scope: !7129)
!7145 = !DILocation(line: 1337, column: 45, scope: !7129)
!7146 = !DILocation(line: 1338, column: 53, scope: !7129)
!7147 = !DILocation(line: 1338, column: 22, scope: !7129)
!7148 = !DILocation(line: 1338, column: 42, scope: !7129)
!7149 = !DILocation(line: 1338, column: 47, scope: !7129)
!7150 = !DILocation(line: 1336, column: 9, scope: !7129)
!7151 = !DILocation(line: 1339, column: 5, scope: !7129)
!7152 = !DILocation(line: 1333, column: 25, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !7124, file: !910, discriminator: 2)
!7154 = !DILocation(line: 1333, column: 5, scope: !7153)
!7155 = distinct !{!7155, !7156}
!7156 = !DILocation(line: 1333, column: 5, scope: !7106)
!7157 = !DILocation(line: 1340, column: 1, scope: !7106)
!7158 = distinct !DISubprogram(name: "apply_filter", scope: !910, file: !910, line: 1319, type: !7159, isLocal: true, isDefinition: true, scopeLine: 1322, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7159 = !DISubroutineType(types: !7160)
!7160 = !{null, !1750, !7161, !947, !947, !918, !918, !918}
!7161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64, align: 64)
!7162 = !DILocalVariable(name: "ctx", arg: 1, scope: !7158, file: !910, line: 1319, type: !1750)
!7163 = !DILocation(line: 1319, column: 38, scope: !7158)
!7164 = !DILocalVariable(name: "f", arg: 2, scope: !7158, file: !910, line: 1319, type: !7161)
!7165 = !DILocation(line: 1319, column: 54, scope: !7158)
!7166 = !DILocalVariable(name: "data0", arg: 3, scope: !7158, file: !910, line: 1320, type: !947)
!7167 = !DILocation(line: 1320, column: 35, scope: !7158)
!7168 = !DILocalVariable(name: "data1", arg: 4, scope: !7158, file: !910, line: 1320, type: !947)
!7169 = !DILocation(line: 1320, column: 51, scope: !7158)
!7170 = !DILocalVariable(name: "count", arg: 5, scope: !7158, file: !910, line: 1321, type: !918)
!7171 = !DILocation(line: 1321, column: 30, scope: !7158)
!7172 = !DILocalVariable(name: "order", arg: 6, scope: !7158, file: !910, line: 1321, type: !918)
!7173 = !DILocation(line: 1321, column: 41, scope: !7158)
!7174 = !DILocalVariable(name: "fracbits", arg: 7, scope: !7158, file: !910, line: 1321, type: !918)
!7175 = !DILocation(line: 1321, column: 52, scope: !7158)
!7176 = !DILocation(line: 1323, column: 21, scope: !7158)
!7177 = !DILocation(line: 1323, column: 26, scope: !7158)
!7178 = !DILocation(line: 1323, column: 31, scope: !7158)
!7179 = !DILocation(line: 1323, column: 45, scope: !7158)
!7180 = !DILocation(line: 1323, column: 51, scope: !7158)
!7181 = !DILocation(line: 1323, column: 58, scope: !7158)
!7182 = !DILocation(line: 1323, column: 65, scope: !7158)
!7183 = !DILocation(line: 1323, column: 72, scope: !7158)
!7184 = !DILocation(line: 1323, column: 5, scope: !7158)
!7185 = !DILocation(line: 1324, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7158, file: !910, line: 1324, column: 9)
!7187 = !DILocation(line: 1324, column: 9, scope: !7158)
!7188 = !DILocation(line: 1325, column: 25, scope: !7186)
!7189 = !DILocation(line: 1325, column: 30, scope: !7186)
!7190 = !DILocation(line: 1325, column: 35, scope: !7186)
!7191 = !DILocation(line: 1325, column: 49, scope: !7186)
!7192 = !DILocation(line: 1325, column: 55, scope: !7186)
!7193 = !DILocation(line: 1325, column: 62, scope: !7186)
!7194 = !DILocation(line: 1325, column: 69, scope: !7186)
!7195 = !DILocation(line: 1325, column: 76, scope: !7186)
!7196 = !DILocation(line: 1325, column: 9, scope: !7186)
!7197 = !DILocation(line: 1326, column: 1, scope: !7158)
!7198 = distinct !DISubprogram(name: "do_apply_filter", scope: !910, file: !910, line: 1257, type: !7199, isLocal: true, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{null, !1750, !918, !7161, !947, !918, !918, !918}
!7201 = !DILocalVariable(name: "a", arg: 1, scope: !7202, file: !7203, line: 192, type: !918)
!7202 = distinct !DISubprogram(name: "av_clip_int16_c", scope: !7203, file: !7203, line: 192, type: !7204, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7203 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!945, !918}
!7206 = !DILocation(line: 192, column: 97, scope: !7202, inlinedAt: !7207)
!7207 = distinct !DILocation(line: 1274, column: 23, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7198, file: !910, line: 1263, column: 21)
!7209 = !DILocalVariable(name: "ctx", arg: 1, scope: !7198, file: !910, line: 1257, type: !1750)
!7210 = !DILocation(line: 1257, column: 41, scope: !7198)
!7211 = !DILocalVariable(name: "version", arg: 2, scope: !7198, file: !910, line: 1257, type: !918)
!7212 = !DILocation(line: 1257, column: 50, scope: !7198)
!7213 = !DILocalVariable(name: "f", arg: 3, scope: !7198, file: !910, line: 1257, type: !7161)
!7214 = !DILocation(line: 1257, column: 70, scope: !7198)
!7215 = !DILocalVariable(name: "data", arg: 4, scope: !7198, file: !910, line: 1258, type: !947)
!7216 = !DILocation(line: 1258, column: 38, scope: !7198)
!7217 = !DILocalVariable(name: "count", arg: 5, scope: !7198, file: !910, line: 1258, type: !918)
!7218 = !DILocation(line: 1258, column: 48, scope: !7198)
!7219 = !DILocalVariable(name: "order", arg: 6, scope: !7198, file: !910, line: 1258, type: !918)
!7220 = !DILocation(line: 1258, column: 59, scope: !7198)
!7221 = !DILocalVariable(name: "fracbits", arg: 7, scope: !7198, file: !910, line: 1258, type: !918)
!7222 = !DILocation(line: 1258, column: 70, scope: !7198)
!7223 = !DILocalVariable(name: "res", scope: !7198, file: !910, line: 1260, type: !918)
!7224 = !DILocation(line: 1260, column: 9, scope: !7198)
!7225 = !DILocalVariable(name: "absres", scope: !7198, file: !910, line: 1261, type: !918)
!7226 = !DILocation(line: 1261, column: 9, scope: !7198)
!7227 = !DILocation(line: 1263, column: 5, scope: !7198)
!7228 = !DILocation(line: 1263, column: 17, scope: !7229)
!7229 = !DILexicalBlockFile(scope: !7198, file: !910, discriminator: 1)
!7230 = !DILocation(line: 1263, column: 5, scope: !7229)
!7231 = !DILocation(line: 1265, column: 15, scope: !7208)
!7232 = !DILocation(line: 1265, column: 20, scope: !7208)
!7233 = !DILocation(line: 1265, column: 25, scope: !7208)
!7234 = !DILocation(line: 1265, column: 54, scope: !7208)
!7235 = !DILocation(line: 1265, column: 57, scope: !7208)
!7236 = !DILocation(line: 1266, column: 54, scope: !7208)
!7237 = !DILocation(line: 1266, column: 57, scope: !7208)
!7238 = !DILocation(line: 1266, column: 65, scope: !7208)
!7239 = !DILocation(line: 1266, column: 63, scope: !7208)
!7240 = !DILocation(line: 1267, column: 54, scope: !7208)
!7241 = !DILocation(line: 1267, column: 57, scope: !7208)
!7242 = !DILocation(line: 1267, column: 71, scope: !7208)
!7243 = !DILocation(line: 1267, column: 69, scope: !7208)
!7244 = !DILocation(line: 1268, column: 54, scope: !7208)
!7245 = !DILocation(line: 1268, column: 70, scope: !7208)
!7246 = !DILocation(line: 1268, column: 69, scope: !7208)
!7247 = !DILocation(line: 1268, column: 61, scope: !7208)
!7248 = !DILocation(line: 1265, column: 13, scope: !7208)
!7249 = !DILocation(line: 1269, column: 16, scope: !7208)
!7250 = !DILocation(line: 1269, column: 29, scope: !7208)
!7251 = !DILocation(line: 1269, column: 38, scope: !7208)
!7252 = !DILocation(line: 1269, column: 25, scope: !7208)
!7253 = !DILocation(line: 1269, column: 20, scope: !7208)
!7254 = !DILocation(line: 1269, column: 48, scope: !7208)
!7255 = !DILocation(line: 1269, column: 45, scope: !7208)
!7256 = !DILocation(line: 1269, column: 13, scope: !7208)
!7257 = !DILocation(line: 1270, column: 17, scope: !7208)
!7258 = !DILocation(line: 1270, column: 16, scope: !7208)
!7259 = !DILocation(line: 1270, column: 13, scope: !7208)
!7260 = !DILocation(line: 1271, column: 19, scope: !7208)
!7261 = !DILocation(line: 1271, column: 14, scope: !7208)
!7262 = !DILocation(line: 1271, column: 17, scope: !7208)
!7263 = !DILocation(line: 1274, column: 39, scope: !7208)
!7264 = !DILocation(line: 1274, column: 23, scope: !7208)
!7265 = !DILocation(line: 194, column: 10, scope: !7266, inlinedAt: !7207)
!7266 = distinct !DILexicalBlock(scope: !7202, file: !7203, line: 194, column: 9)
!7267 = !DILocation(line: 194, column: 11, scope: !7266, inlinedAt: !7207)
!7268 = !DILocation(line: 194, column: 21, scope: !7266, inlinedAt: !7207)
!7269 = !DILocation(line: 194, column: 9, scope: !7202, inlinedAt: !7207)
!7270 = !DILocation(line: 194, column: 40, scope: !7271, inlinedAt: !7207)
!7271 = !DILexicalBlockFile(scope: !7266, file: !7203, discriminator: 1)
!7272 = !DILocation(line: 194, column: 41, scope: !7271, inlinedAt: !7207)
!7273 = !DILocation(line: 194, column: 47, scope: !7271, inlinedAt: !7207)
!7274 = !DILocation(line: 194, column: 39, scope: !7271, inlinedAt: !7207)
!7275 = !DILocation(line: 194, column: 32, scope: !7271, inlinedAt: !7207)
!7276 = !DILocation(line: 195, column: 17, scope: !7266, inlinedAt: !7207)
!7277 = !DILocation(line: 195, column: 10, scope: !7266, inlinedAt: !7207)
!7278 = !DILocation(line: 196, column: 1, scope: !7202, inlinedAt: !7207)
!7279 = !DILocation(line: 1274, column: 10, scope: !7208)
!7280 = !DILocation(line: 1274, column: 13, scope: !7208)
!7281 = !DILocation(line: 1274, column: 18, scope: !7208)
!7282 = !DILocation(line: 1274, column: 21, scope: !7208)
!7283 = !DILocation(line: 1276, column: 13, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7208, file: !910, line: 1276, column: 13)
!7285 = !DILocation(line: 1276, column: 21, scope: !7284)
!7286 = !DILocation(line: 1276, column: 13, scope: !7208)
!7287 = !DILocation(line: 1278, column: 34, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7284, file: !910, line: 1276, column: 29)
!7289 = !DILocation(line: 1278, column: 38, scope: !7288)
!7290 = !DILocation(line: 1278, column: 33, scope: !7288)
!7291 = !DILocation(line: 1278, column: 33, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7288, file: !910, discriminator: 1)
!7293 = !DILocation(line: 1278, column: 52, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7288, file: !910, discriminator: 2)
!7295 = !DILocation(line: 1278, column: 56, scope: !7294)
!7296 = !DILocation(line: 1278, column: 63, scope: !7294)
!7297 = !DILocation(line: 1278, column: 68, scope: !7294)
!7298 = !DILocation(line: 1278, column: 33, scope: !7294)
!7299 = !DILocation(line: 1278, column: 33, scope: !7300)
!7300 = !DILexicalBlockFile(scope: !7288, file: !910, discriminator: 3)
!7301 = !DILocation(line: 1278, column: 13, scope: !7300)
!7302 = !DILocation(line: 1278, column: 16, scope: !7300)
!7303 = !DILocation(line: 1278, column: 31, scope: !7300)
!7304 = !DILocation(line: 1279, column: 13, scope: !7288)
!7305 = !DILocation(line: 1279, column: 16, scope: !7288)
!7306 = !DILocation(line: 1279, column: 32, scope: !7288)
!7307 = !DILocation(line: 1280, column: 13, scope: !7288)
!7308 = !DILocation(line: 1280, column: 16, scope: !7288)
!7309 = !DILocation(line: 1280, column: 32, scope: !7288)
!7310 = !DILocation(line: 1281, column: 9, scope: !7288)
!7311 = !DILocation(line: 1285, column: 24, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7284, file: !910, line: 1281, column: 16)
!7313 = !DILocation(line: 1285, column: 29, scope: !7312)
!7314 = !DILocation(line: 1285, column: 23, scope: !7312)
!7315 = !DILocation(line: 1285, column: 37, scope: !7316)
!7316 = !DILexicalBlockFile(scope: !7312, file: !910, discriminator: 1)
!7317 = !DILocation(line: 1285, column: 23, scope: !7316)
!7318 = !DILocation(line: 1285, column: 47, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !7312, file: !910, discriminator: 2)
!7320 = !DILocation(line: 1285, column: 45, scope: !7319)
!7321 = !DILocation(line: 1285, column: 23, scope: !7319)
!7322 = !DILocation(line: 1285, column: 23, scope: !7323)
!7323 = !DILexicalBlockFile(scope: !7312, file: !910, discriminator: 3)
!7324 = !DILocation(line: 1285, column: 20, scope: !7323)
!7325 = !DILocation(line: 1286, column: 17, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7312, file: !910, line: 1286, column: 17)
!7327 = !DILocation(line: 1286, column: 17, scope: !7312)
!7328 = !DILocation(line: 1287, column: 43, scope: !7326)
!7329 = !DILocation(line: 1287, column: 35, scope: !7326)
!7330 = !DILocation(line: 1288, column: 43, scope: !7326)
!7331 = !DILocation(line: 1288, column: 52, scope: !7326)
!7332 = !DILocation(line: 1288, column: 55, scope: !7326)
!7333 = !DILocation(line: 1288, column: 59, scope: !7326)
!7334 = !DILocation(line: 1288, column: 50, scope: !7326)
!7335 = !DILocation(line: 1288, column: 67, scope: !7326)
!7336 = !DILocation(line: 1288, column: 76, scope: !7326)
!7337 = !DILocation(line: 1288, column: 79, scope: !7326)
!7338 = !DILocation(line: 1288, column: 83, scope: !7326)
!7339 = !DILocation(line: 1288, column: 87, scope: !7326)
!7340 = !DILocation(line: 1288, column: 74, scope: !7326)
!7341 = !DILocation(line: 1288, column: 64, scope: !7326)
!7342 = !DILocation(line: 1288, column: 38, scope: !7326)
!7343 = !DILocation(line: 1287, column: 48, scope: !7326)
!7344 = !DILocation(line: 1287, column: 18, scope: !7326)
!7345 = !DILocation(line: 1287, column: 21, scope: !7326)
!7346 = !DILocation(line: 1287, column: 33, scope: !7326)
!7347 = !DILocation(line: 1287, column: 17, scope: !7326)
!7348 = !DILocation(line: 1298, column: 18, scope: !7326)
!7349 = !DILocation(line: 1298, column: 21, scope: !7326)
!7350 = !DILocation(line: 1298, column: 33, scope: !7326)
!7351 = !DILocation(line: 1300, column: 24, scope: !7312)
!7352 = !DILocation(line: 1300, column: 33, scope: !7312)
!7353 = !DILocation(line: 1300, column: 36, scope: !7312)
!7354 = !DILocation(line: 1300, column: 31, scope: !7312)
!7355 = !DILocation(line: 1300, column: 41, scope: !7312)
!7356 = !DILocation(line: 1300, column: 13, scope: !7312)
!7357 = !DILocation(line: 1300, column: 16, scope: !7312)
!7358 = !DILocation(line: 1300, column: 20, scope: !7312)
!7359 = !DILocation(line: 1302, column: 13, scope: !7312)
!7360 = !DILocation(line: 1302, column: 16, scope: !7312)
!7361 = !DILocation(line: 1302, column: 32, scope: !7312)
!7362 = !DILocation(line: 1303, column: 13, scope: !7312)
!7363 = !DILocation(line: 1303, column: 16, scope: !7312)
!7364 = !DILocation(line: 1303, column: 32, scope: !7312)
!7365 = !DILocation(line: 1304, column: 13, scope: !7312)
!7366 = !DILocation(line: 1304, column: 16, scope: !7312)
!7367 = !DILocation(line: 1304, column: 32, scope: !7312)
!7368 = !DILocation(line: 1307, column: 9, scope: !7208)
!7369 = !DILocation(line: 1307, column: 12, scope: !7208)
!7370 = !DILocation(line: 1307, column: 23, scope: !7208)
!7371 = !DILocation(line: 1310, column: 13, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7208, file: !910, line: 1310, column: 13)
!7373 = !DILocation(line: 1310, column: 16, scope: !7372)
!7374 = !DILocation(line: 1310, column: 25, scope: !7372)
!7375 = !DILocation(line: 1310, column: 28, scope: !7372)
!7376 = !DILocation(line: 1310, column: 42, scope: !7372)
!7377 = !DILocation(line: 1310, column: 51, scope: !7372)
!7378 = !DILocation(line: 1310, column: 57, scope: !7372)
!7379 = !DILocation(line: 1310, column: 48, scope: !7372)
!7380 = !DILocation(line: 1310, column: 22, scope: !7372)
!7381 = !DILocation(line: 1310, column: 13, scope: !7208)
!7382 = !DILocation(line: 1311, column: 21, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7372, file: !910, line: 1310, column: 63)
!7384 = !DILocation(line: 1311, column: 24, scope: !7383)
!7385 = !DILocation(line: 1311, column: 13, scope: !7383)
!7386 = !DILocation(line: 1311, column: 39, scope: !7383)
!7387 = !DILocation(line: 1311, column: 42, scope: !7383)
!7388 = !DILocation(line: 1311, column: 51, scope: !7383)
!7389 = !DILocation(line: 1311, column: 57, scope: !7383)
!7390 = !DILocation(line: 1311, column: 48, scope: !7383)
!7391 = !DILocation(line: 1312, column: 22, scope: !7383)
!7392 = !DILocation(line: 1312, column: 28, scope: !7383)
!7393 = !DILocation(line: 1312, column: 21, scope: !7383)
!7394 = !DILocation(line: 1312, column: 33, scope: !7383)
!7395 = !DILocation(line: 1313, column: 24, scope: !7383)
!7396 = !DILocation(line: 1313, column: 27, scope: !7383)
!7397 = !DILocation(line: 1313, column: 43, scope: !7383)
!7398 = !DILocation(line: 1313, column: 49, scope: !7383)
!7399 = !DILocation(line: 1313, column: 41, scope: !7383)
!7400 = !DILocation(line: 1313, column: 13, scope: !7383)
!7401 = !DILocation(line: 1313, column: 16, scope: !7383)
!7402 = !DILocation(line: 1313, column: 22, scope: !7383)
!7403 = !DILocation(line: 1314, column: 30, scope: !7383)
!7404 = !DILocation(line: 1314, column: 33, scope: !7383)
!7405 = !DILocation(line: 1314, column: 49, scope: !7383)
!7406 = !DILocation(line: 1314, column: 47, scope: !7383)
!7407 = !DILocation(line: 1314, column: 13, scope: !7383)
!7408 = !DILocation(line: 1314, column: 16, scope: !7383)
!7409 = !DILocation(line: 1314, column: 28, scope: !7383)
!7410 = !DILocation(line: 1315, column: 9, scope: !7383)
!7411 = !DILocation(line: 1263, column: 5, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7198, file: !910, discriminator: 2)
!7413 = distinct !{!7413, !7227}
!7414 = !DILocation(line: 1317, column: 1, scope: !7198)
!7415 = distinct !DISubprogram(name: "init_get_bits8", scope: !1851, file: !1851, line: 650, type: !7416, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!918, !5735, !937, !918}
!7418 = !DILocalVariable(name: "s", arg: 1, scope: !7415, file: !1851, line: 650, type: !5735)
!7419 = !DILocation(line: 650, column: 49, scope: !7415)
!7420 = !DILocalVariable(name: "buffer", arg: 2, scope: !7415, file: !1851, line: 650, type: !937)
!7421 = !DILocation(line: 650, column: 67, scope: !7415)
!7422 = !DILocalVariable(name: "byte_size", arg: 3, scope: !7415, file: !1851, line: 651, type: !918)
!7423 = !DILocation(line: 651, column: 38, scope: !7415)
!7424 = !DILocation(line: 653, column: 9, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7415, file: !1851, line: 653, column: 9)
!7426 = !DILocation(line: 653, column: 19, scope: !7425)
!7427 = !DILocation(line: 653, column: 36, scope: !7425)
!7428 = !DILocation(line: 653, column: 39, scope: !7429)
!7429 = !DILexicalBlockFile(scope: !7425, file: !1851, discriminator: 1)
!7430 = !DILocation(line: 653, column: 49, scope: !7429)
!7431 = !DILocation(line: 653, column: 9, scope: !7429)
!7432 = !DILocation(line: 654, column: 19, scope: !7425)
!7433 = !DILocation(line: 654, column: 9, scope: !7425)
!7434 = !DILocation(line: 655, column: 26, scope: !7415)
!7435 = !DILocation(line: 655, column: 29, scope: !7415)
!7436 = !DILocation(line: 655, column: 37, scope: !7415)
!7437 = !DILocation(line: 655, column: 47, scope: !7415)
!7438 = !DILocation(line: 655, column: 12, scope: !7415)
!7439 = !DILocation(line: 655, column: 5, scope: !7415)
!7440 = distinct !DISubprogram(name: "skip_bits_long", scope: !1851, file: !1851, line: 293, type: !7441, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{null, !5735, !918}
!7443 = !DILocalVariable(name: "a", arg: 1, scope: !7444, file: !7203, line: 127, type: !918)
!7444 = distinct !DISubprogram(name: "av_clip_c", scope: !7203, file: !7203, line: 127, type: !7445, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!918, !918, !918, !918}
!7447 = !DILocation(line: 127, column: 87, scope: !7444, inlinedAt: !7448)
!7448 = distinct !DILocation(line: 301, column: 17, scope: !7440)
!7449 = !DILocalVariable(name: "amin", arg: 2, scope: !7444, file: !7203, line: 127, type: !918)
!7450 = !DILocation(line: 127, column: 94, scope: !7444, inlinedAt: !7448)
!7451 = !DILocalVariable(name: "amax", arg: 3, scope: !7444, file: !7203, line: 127, type: !918)
!7452 = !DILocation(line: 127, column: 104, scope: !7444, inlinedAt: !7448)
!7453 = !DILocalVariable(name: "s", arg: 1, scope: !7440, file: !1851, line: 293, type: !5735)
!7454 = !DILocation(line: 293, column: 50, scope: !7440)
!7455 = !DILocalVariable(name: "n", arg: 2, scope: !7440, file: !1851, line: 293, type: !918)
!7456 = !DILocation(line: 293, column: 57, scope: !7440)
!7457 = !DILocation(line: 301, column: 27, scope: !7440)
!7458 = !DILocation(line: 301, column: 31, scope: !7440)
!7459 = !DILocation(line: 301, column: 34, scope: !7440)
!7460 = !DILocation(line: 301, column: 30, scope: !7440)
!7461 = !DILocation(line: 301, column: 41, scope: !7440)
!7462 = !DILocation(line: 301, column: 44, scope: !7440)
!7463 = !DILocation(line: 301, column: 65, scope: !7440)
!7464 = !DILocation(line: 301, column: 68, scope: !7440)
!7465 = !DILocation(line: 301, column: 63, scope: !7440)
!7466 = !DILocation(line: 301, column: 17, scope: !7440)
!7467 = !DILocation(line: 132, column: 9, scope: !7468, inlinedAt: !7448)
!7468 = distinct !DILexicalBlock(scope: !7444, file: !7203, line: 132, column: 9)
!7469 = !DILocation(line: 132, column: 13, scope: !7468, inlinedAt: !7448)
!7470 = !DILocation(line: 132, column: 11, scope: !7468, inlinedAt: !7448)
!7471 = !DILocation(line: 132, column: 9, scope: !7444, inlinedAt: !7448)
!7472 = !DILocation(line: 132, column: 26, scope: !7473, inlinedAt: !7448)
!7473 = !DILexicalBlockFile(scope: !7468, file: !7203, discriminator: 1)
!7474 = !DILocation(line: 132, column: 19, scope: !7473, inlinedAt: !7448)
!7475 = !DILocation(line: 133, column: 14, scope: !7476, inlinedAt: !7448)
!7476 = distinct !DILexicalBlock(scope: !7468, file: !7203, line: 133, column: 14)
!7477 = !DILocation(line: 133, column: 18, scope: !7476, inlinedAt: !7448)
!7478 = !DILocation(line: 133, column: 16, scope: !7476, inlinedAt: !7448)
!7479 = !DILocation(line: 133, column: 14, scope: !7468, inlinedAt: !7448)
!7480 = !DILocation(line: 133, column: 31, scope: !7481, inlinedAt: !7448)
!7481 = !DILexicalBlockFile(scope: !7476, file: !7203, discriminator: 1)
!7482 = !DILocation(line: 133, column: 24, scope: !7481, inlinedAt: !7448)
!7483 = !DILocation(line: 134, column: 17, scope: !7476, inlinedAt: !7448)
!7484 = !DILocation(line: 134, column: 10, scope: !7476, inlinedAt: !7448)
!7485 = !DILocation(line: 135, column: 1, scope: !7444, inlinedAt: !7448)
!7486 = !DILocation(line: 301, column: 5, scope: !7440)
!7487 = !DILocation(line: 301, column: 8, scope: !7440)
!7488 = !DILocation(line: 301, column: 14, scope: !7440)
!7489 = !DILocation(line: 304, column: 1, scope: !7440)
!7490 = distinct !DISubprogram(name: "init_frame_decoder", scope: !910, file: !910, line: 1342, type: !7491, isLocal: true, isDefinition: true, scopeLine: 1343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{!918, !1750}
!7493 = !DILocalVariable(name: "ctx", arg: 1, scope: !7490, file: !910, line: 1342, type: !1750)
!7494 = !DILocation(line: 1342, column: 43, scope: !7490)
!7495 = !DILocalVariable(name: "i", scope: !7490, file: !910, line: 1344, type: !918)
!7496 = !DILocation(line: 1344, column: 9, scope: !7490)
!7497 = !DILocalVariable(name: "ret", scope: !7490, file: !910, line: 1344, type: !918)
!7498 = !DILocation(line: 1344, column: 12, scope: !7490)
!7499 = !DILocation(line: 1345, column: 37, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7490, file: !910, line: 1345, column: 9)
!7501 = !DILocation(line: 1345, column: 16, scope: !7500)
!7502 = !DILocation(line: 1345, column: 14, scope: !7500)
!7503 = !DILocation(line: 1345, column: 43, scope: !7500)
!7504 = !DILocation(line: 1345, column: 9, scope: !7490)
!7505 = !DILocation(line: 1346, column: 16, scope: !7500)
!7506 = !DILocation(line: 1346, column: 9, scope: !7500)
!7507 = !DILocation(line: 1347, column: 28, scope: !7490)
!7508 = !DILocation(line: 1347, column: 5, scope: !7490)
!7509 = !DILocation(line: 1349, column: 12, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7490, file: !910, line: 1349, column: 5)
!7511 = !DILocation(line: 1349, column: 10, scope: !7510)
!7512 = !DILocation(line: 1349, column: 17, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !7514, file: !910, discriminator: 1)
!7514 = distinct !DILexicalBlock(scope: !7510, file: !910, line: 1349, column: 5)
!7515 = !DILocation(line: 1349, column: 19, scope: !7513)
!7516 = !DILocation(line: 1349, column: 5, scope: !7513)
!7517 = !DILocation(line: 1350, column: 43, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !910, line: 1350, column: 13)
!7519 = distinct !DILexicalBlock(scope: !7514, file: !910, line: 1349, column: 29)
!7520 = !DILocation(line: 1350, column: 14, scope: !7518)
!7521 = !DILocation(line: 1350, column: 32, scope: !7518)
!7522 = !DILocation(line: 1350, column: 37, scope: !7518)
!7523 = !DILocation(line: 1350, column: 13, scope: !7519)
!7524 = !DILocation(line: 1351, column: 13, scope: !7518)
!7525 = !DILocation(line: 1352, column: 21, scope: !7519)
!7526 = !DILocation(line: 1352, column: 39, scope: !7519)
!7527 = !DILocation(line: 1352, column: 26, scope: !7519)
!7528 = !DILocation(line: 1352, column: 31, scope: !7519)
!7529 = !DILocation(line: 1352, column: 58, scope: !7519)
!7530 = !DILocation(line: 1352, column: 43, scope: !7519)
!7531 = !DILocation(line: 1352, column: 48, scope: !7519)
!7532 = !DILocation(line: 1353, column: 50, scope: !7519)
!7533 = !DILocation(line: 1353, column: 21, scope: !7519)
!7534 = !DILocation(line: 1353, column: 39, scope: !7519)
!7535 = !DILocation(line: 1353, column: 44, scope: !7519)
!7536 = !DILocation(line: 1352, column: 9, scope: !7519)
!7537 = !DILocation(line: 1354, column: 5, scope: !7519)
!7538 = !DILocation(line: 1349, column: 25, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7514, file: !910, discriminator: 2)
!7540 = !DILocation(line: 1349, column: 5, scope: !7539)
!7541 = distinct !{!7541, !7542}
!7542 = !DILocation(line: 1349, column: 5, scope: !7490)
!7543 = !DILocation(line: 1355, column: 5, scope: !7490)
!7544 = !DILocation(line: 1356, column: 1, scope: !7490)
!7545 = distinct !DISubprogram(name: "ape_unpack_mono", scope: !910, file: !910, line: 1358, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7546 = !DILocalVariable(name: "ctx", arg: 1, scope: !7545, file: !910, line: 1358, type: !1750)
!7547 = !DILocation(line: 1358, column: 41, scope: !7545)
!7548 = !DILocalVariable(name: "count", arg: 2, scope: !7545, file: !910, line: 1358, type: !918)
!7549 = !DILocation(line: 1358, column: 50, scope: !7545)
!7550 = !DILocation(line: 1360, column: 9, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7545, file: !910, line: 1360, column: 9)
!7552 = !DILocation(line: 1360, column: 14, scope: !7551)
!7553 = !DILocation(line: 1360, column: 25, scope: !7551)
!7554 = !DILocation(line: 1360, column: 9, scope: !7545)
!7555 = !DILocation(line: 1362, column: 16, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7551, file: !910, line: 1360, column: 30)
!7557 = !DILocation(line: 1362, column: 21, scope: !7556)
!7558 = !DILocation(line: 1362, column: 9, scope: !7556)
!7559 = !DILocation(line: 1363, column: 9, scope: !7556)
!7560 = !DILocation(line: 1366, column: 5, scope: !7545)
!7561 = !DILocation(line: 1366, column: 10, scope: !7545)
!7562 = !DILocation(line: 1366, column: 30, scope: !7545)
!7563 = !DILocation(line: 1366, column: 35, scope: !7545)
!7564 = !DILocation(line: 1369, column: 5, scope: !7545)
!7565 = !DILocation(line: 1369, column: 10, scope: !7545)
!7566 = !DILocation(line: 1369, column: 32, scope: !7545)
!7567 = !DILocation(line: 1369, column: 37, scope: !7545)
!7568 = !DILocation(line: 1372, column: 9, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7545, file: !910, line: 1372, column: 9)
!7570 = !DILocation(line: 1372, column: 14, scope: !7569)
!7571 = !DILocation(line: 1372, column: 23, scope: !7569)
!7572 = !DILocation(line: 1372, column: 9, scope: !7545)
!7573 = !DILocation(line: 1373, column: 16, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7569, file: !910, line: 1372, column: 29)
!7575 = !DILocation(line: 1373, column: 21, scope: !7574)
!7576 = !DILocation(line: 1373, column: 9, scope: !7574)
!7577 = !DILocation(line: 1373, column: 33, scope: !7574)
!7578 = !DILocation(line: 1373, column: 38, scope: !7574)
!7579 = !DILocation(line: 1373, column: 50, scope: !7574)
!7580 = !DILocation(line: 1373, column: 56, scope: !7574)
!7581 = !DILocation(line: 1374, column: 5, scope: !7574)
!7582 = !DILocation(line: 1375, column: 1, scope: !7545)
!7583 = distinct !DISubprogram(name: "ape_unpack_stereo", scope: !910, file: !910, line: 1377, type: !2825, isLocal: true, isDefinition: true, scopeLine: 1378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7584 = !DILocalVariable(name: "ctx", arg: 1, scope: !7583, file: !910, line: 1377, type: !1750)
!7585 = !DILocation(line: 1377, column: 43, scope: !7583)
!7586 = !DILocalVariable(name: "count", arg: 2, scope: !7583, file: !910, line: 1377, type: !918)
!7587 = !DILocation(line: 1377, column: 52, scope: !7583)
!7588 = !DILocalVariable(name: "left", scope: !7583, file: !910, line: 1379, type: !948)
!7589 = !DILocation(line: 1379, column: 13, scope: !7583)
!7590 = !DILocalVariable(name: "right", scope: !7583, file: !910, line: 1379, type: !948)
!7591 = !DILocation(line: 1379, column: 19, scope: !7583)
!7592 = !DILocalVariable(name: "decoded0", scope: !7583, file: !910, line: 1380, type: !947)
!7593 = !DILocation(line: 1380, column: 14, scope: !7583)
!7594 = !DILocation(line: 1380, column: 25, scope: !7583)
!7595 = !DILocation(line: 1380, column: 30, scope: !7583)
!7596 = !DILocalVariable(name: "decoded1", scope: !7583, file: !910, line: 1381, type: !947)
!7597 = !DILocation(line: 1381, column: 14, scope: !7583)
!7598 = !DILocation(line: 1381, column: 25, scope: !7583)
!7599 = !DILocation(line: 1381, column: 30, scope: !7583)
!7600 = !DILocation(line: 1383, column: 10, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7583, file: !910, line: 1383, column: 9)
!7602 = !DILocation(line: 1383, column: 15, scope: !7601)
!7603 = !DILocation(line: 1383, column: 26, scope: !7601)
!7604 = !DILocation(line: 1383, column: 31, scope: !7601)
!7605 = !DILocation(line: 1383, column: 9, scope: !7583)
!7606 = !DILocation(line: 1385, column: 16, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7601, file: !910, line: 1383, column: 37)
!7608 = !DILocation(line: 1385, column: 21, scope: !7607)
!7609 = !DILocation(line: 1385, column: 9, scope: !7607)
!7610 = !DILocation(line: 1386, column: 9, scope: !7607)
!7611 = !DILocation(line: 1389, column: 5, scope: !7583)
!7612 = !DILocation(line: 1389, column: 10, scope: !7583)
!7613 = !DILocation(line: 1389, column: 32, scope: !7583)
!7614 = !DILocation(line: 1389, column: 37, scope: !7583)
!7615 = !DILocation(line: 1392, column: 5, scope: !7583)
!7616 = !DILocation(line: 1392, column: 10, scope: !7583)
!7617 = !DILocation(line: 1392, column: 34, scope: !7583)
!7618 = !DILocation(line: 1392, column: 39, scope: !7583)
!7619 = !DILocation(line: 1395, column: 5, scope: !7583)
!7620 = !DILocation(line: 1395, column: 17, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !7583, file: !910, discriminator: 1)
!7622 = !DILocation(line: 1395, column: 5, scope: !7621)
!7623 = !DILocation(line: 1396, column: 17, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7583, file: !910, line: 1395, column: 21)
!7625 = !DILocation(line: 1396, column: 16, scope: !7624)
!7626 = !DILocation(line: 1396, column: 30, scope: !7624)
!7627 = !DILocation(line: 1396, column: 29, scope: !7624)
!7628 = !DILocation(line: 1396, column: 39, scope: !7624)
!7629 = !DILocation(line: 1396, column: 26, scope: !7624)
!7630 = !DILocation(line: 1396, column: 14, scope: !7624)
!7631 = !DILocation(line: 1397, column: 17, scope: !7624)
!7632 = !DILocation(line: 1397, column: 25, scope: !7624)
!7633 = !DILocation(line: 1397, column: 24, scope: !7624)
!7634 = !DILocation(line: 1397, column: 22, scope: !7624)
!7635 = !DILocation(line: 1397, column: 15, scope: !7624)
!7636 = !DILocation(line: 1399, column: 25, scope: !7624)
!7637 = !DILocation(line: 1399, column: 19, scope: !7624)
!7638 = !DILocation(line: 1399, column: 23, scope: !7624)
!7639 = !DILocation(line: 1400, column: 25, scope: !7624)
!7640 = !DILocation(line: 1400, column: 19, scope: !7624)
!7641 = !DILocation(line: 1400, column: 23, scope: !7624)
!7642 = !DILocation(line: 1395, column: 5, scope: !7643)
!7643 = !DILexicalBlockFile(scope: !7583, file: !910, discriminator: 2)
!7644 = distinct !{!7644, !7619}
!7645 = !DILocation(line: 1402, column: 1, scope: !7583)
!7646 = distinct !DISubprogram(name: "init_get_bits", scope: !1851, file: !1851, line: 615, type: !7416, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7647 = !DILocalVariable(name: "s", arg: 1, scope: !7646, file: !1851, line: 615, type: !5735)
!7648 = !DILocation(line: 615, column: 48, scope: !7646)
!7649 = !DILocalVariable(name: "buffer", arg: 2, scope: !7646, file: !1851, line: 615, type: !937)
!7650 = !DILocation(line: 615, column: 66, scope: !7646)
!7651 = !DILocalVariable(name: "bit_size", arg: 3, scope: !7646, file: !1851, line: 616, type: !918)
!7652 = !DILocation(line: 616, column: 37, scope: !7646)
!7653 = !DILocalVariable(name: "buffer_size", scope: !7646, file: !1851, line: 618, type: !918)
!7654 = !DILocation(line: 618, column: 9, scope: !7646)
!7655 = !DILocalVariable(name: "ret", scope: !7646, file: !1851, line: 619, type: !918)
!7656 = !DILocation(line: 619, column: 9, scope: !7646)
!7657 = !DILocation(line: 621, column: 9, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7646, file: !1851, line: 621, column: 9)
!7659 = !DILocation(line: 621, column: 18, scope: !7658)
!7660 = !DILocation(line: 621, column: 64, scope: !7658)
!7661 = !DILocation(line: 621, column: 67, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !7658, file: !1851, discriminator: 1)
!7663 = !DILocation(line: 621, column: 76, scope: !7662)
!7664 = !DILocation(line: 621, column: 80, scope: !7662)
!7665 = !DILocation(line: 621, column: 84, scope: !7666)
!7666 = !DILexicalBlockFile(scope: !7658, file: !1851, discriminator: 2)
!7667 = !DILocation(line: 621, column: 9, scope: !7666)
!7668 = !DILocation(line: 622, column: 18, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7658, file: !1851, line: 621, column: 92)
!7670 = !DILocation(line: 623, column: 16, scope: !7669)
!7671 = !DILocation(line: 624, column: 13, scope: !7669)
!7672 = !DILocation(line: 625, column: 5, scope: !7669)
!7673 = !DILocation(line: 627, column: 20, scope: !7646)
!7674 = !DILocation(line: 627, column: 29, scope: !7646)
!7675 = !DILocation(line: 627, column: 34, scope: !7646)
!7676 = !DILocation(line: 627, column: 17, scope: !7646)
!7677 = !DILocation(line: 629, column: 17, scope: !7646)
!7678 = !DILocation(line: 629, column: 5, scope: !7646)
!7679 = !DILocation(line: 629, column: 8, scope: !7646)
!7680 = !DILocation(line: 629, column: 15, scope: !7646)
!7681 = !DILocation(line: 630, column: 23, scope: !7646)
!7682 = !DILocation(line: 630, column: 5, scope: !7646)
!7683 = !DILocation(line: 630, column: 8, scope: !7646)
!7684 = !DILocation(line: 630, column: 21, scope: !7646)
!7685 = !DILocation(line: 631, column: 29, scope: !7646)
!7686 = !DILocation(line: 631, column: 38, scope: !7646)
!7687 = !DILocation(line: 631, column: 5, scope: !7646)
!7688 = !DILocation(line: 631, column: 8, scope: !7646)
!7689 = !DILocation(line: 631, column: 27, scope: !7646)
!7690 = !DILocation(line: 632, column: 21, scope: !7646)
!7691 = !DILocation(line: 632, column: 30, scope: !7646)
!7692 = !DILocation(line: 632, column: 28, scope: !7646)
!7693 = !DILocation(line: 632, column: 5, scope: !7646)
!7694 = !DILocation(line: 632, column: 8, scope: !7646)
!7695 = !DILocation(line: 632, column: 19, scope: !7646)
!7696 = !DILocation(line: 633, column: 5, scope: !7646)
!7697 = !DILocation(line: 633, column: 8, scope: !7646)
!7698 = !DILocation(line: 633, column: 14, scope: !7646)
!7699 = !DILocation(line: 639, column: 12, scope: !7646)
!7700 = !DILocation(line: 639, column: 5, scope: !7646)
!7701 = distinct !DISubprogram(name: "init_entropy_decoder", scope: !910, file: !910, line: 720, type: !7491, isLocal: true, isDefinition: true, scopeLine: 721, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7702 = !DILocation(line: 66, column: 98, scope: !2163, inlinedAt: !7703)
!7703 = distinct !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !7704)
!7704 = distinct !DILocation(line: 738, column: 27, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !910, line: 733, column: 63)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !910, line: 733, column: 9)
!7707 = !DILocation(line: 92, column: 95, scope: !2169, inlinedAt: !7704)
!7708 = !DILocation(line: 66, column: 98, scope: !2163, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !7710)
!7710 = distinct !DILocation(line: 726, column: 20, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !910, line: 723, column: 35)
!7712 = distinct !DILexicalBlock(scope: !7701, file: !910, line: 723, column: 9)
!7713 = !DILocation(line: 92, column: 95, scope: !2169, inlinedAt: !7710)
!7714 = !DILocalVariable(name: "ctx", arg: 1, scope: !7701, file: !910, line: 720, type: !1750)
!7715 = !DILocation(line: 720, column: 45, scope: !7701)
!7716 = !DILocation(line: 723, column: 9, scope: !7712)
!7717 = !DILocation(line: 723, column: 14, scope: !7712)
!7718 = !DILocation(line: 723, column: 26, scope: !7712)
!7719 = !DILocation(line: 723, column: 9, scope: !7701)
!7720 = !DILocation(line: 724, column: 13, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7711, file: !910, line: 724, column: 13)
!7722 = !DILocation(line: 724, column: 18, scope: !7721)
!7723 = !DILocation(line: 724, column: 29, scope: !7721)
!7724 = !DILocation(line: 724, column: 34, scope: !7721)
!7725 = !DILocation(line: 724, column: 27, scope: !7721)
!7726 = !DILocation(line: 724, column: 38, scope: !7721)
!7727 = !DILocation(line: 724, column: 13, scope: !7711)
!7728 = !DILocation(line: 725, column: 13, scope: !7721)
!7729 = !DILocation(line: 726, column: 41, scope: !7711)
!7730 = !DILocation(line: 726, column: 46, scope: !7711)
!7731 = !DILocation(line: 726, column: 20, scope: !7711)
!7732 = !DILocation(line: 92, column: 102, scope: !2169, inlinedAt: !7710)
!7733 = !DILocation(line: 92, column: 105, scope: !2169, inlinedAt: !7710)
!7734 = !DILocation(line: 92, column: 162, scope: !2169, inlinedAt: !7710)
!7735 = !DILocation(line: 92, column: 161, scope: !2169, inlinedAt: !7710)
!7736 = !DILocation(line: 92, column: 164, scope: !2169, inlinedAt: !7710)
!7737 = !DILocation(line: 92, column: 171, scope: !2169, inlinedAt: !7710)
!7738 = !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !7710)
!7739 = !DILocation(line: 68, column: 16, scope: !2163, inlinedAt: !7709)
!7740 = !DILocation(line: 68, column: 19, scope: !2163, inlinedAt: !7709)
!7741 = !DILocation(line: 68, column: 24, scope: !2163, inlinedAt: !7709)
!7742 = !DILocation(line: 68, column: 38, scope: !2163, inlinedAt: !7709)
!7743 = !DILocation(line: 68, column: 41, scope: !2163, inlinedAt: !7709)
!7744 = !DILocation(line: 68, column: 46, scope: !2163, inlinedAt: !7709)
!7745 = !DILocation(line: 68, column: 34, scope: !2163, inlinedAt: !7709)
!7746 = !DILocation(line: 68, column: 57, scope: !2163, inlinedAt: !7709)
!7747 = !DILocation(line: 68, column: 69, scope: !2163, inlinedAt: !7709)
!7748 = !DILocation(line: 68, column: 72, scope: !2163, inlinedAt: !7709)
!7749 = !DILocation(line: 68, column: 79, scope: !2163, inlinedAt: !7709)
!7750 = !DILocation(line: 68, column: 84, scope: !2163, inlinedAt: !7709)
!7751 = !DILocation(line: 68, column: 99, scope: !2163, inlinedAt: !7709)
!7752 = !DILocation(line: 68, column: 102, scope: !2163, inlinedAt: !7709)
!7753 = !DILocation(line: 68, column: 109, scope: !2163, inlinedAt: !7709)
!7754 = !DILocation(line: 68, column: 114, scope: !2163, inlinedAt: !7709)
!7755 = !DILocation(line: 68, column: 94, scope: !2163, inlinedAt: !7709)
!7756 = !DILocation(line: 68, column: 63, scope: !2163, inlinedAt: !7709)
!7757 = !DILocation(line: 726, column: 9, scope: !7711)
!7758 = !DILocation(line: 726, column: 14, scope: !7711)
!7759 = !DILocation(line: 726, column: 18, scope: !7711)
!7760 = !DILocation(line: 727, column: 5, scope: !7711)
!7761 = !DILocation(line: 728, column: 35, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7712, file: !910, line: 727, column: 12)
!7763 = !DILocation(line: 728, column: 40, scope: !7762)
!7764 = !DILocation(line: 728, column: 20, scope: !7762)
!7765 = !DILocation(line: 728, column: 9, scope: !7762)
!7766 = !DILocation(line: 728, column: 14, scope: !7762)
!7767 = !DILocation(line: 728, column: 18, scope: !7762)
!7768 = !DILocation(line: 732, column: 5, scope: !7701)
!7769 = !DILocation(line: 732, column: 10, scope: !7701)
!7770 = !DILocation(line: 732, column: 21, scope: !7701)
!7771 = !DILocation(line: 733, column: 10, scope: !7706)
!7772 = !DILocation(line: 733, column: 15, scope: !7706)
!7773 = !DILocation(line: 733, column: 27, scope: !7706)
!7774 = !DILocation(line: 733, column: 35, scope: !7706)
!7775 = !DILocation(line: 733, column: 39, scope: !7776)
!7776 = !DILexicalBlockFile(scope: !7706, file: !910, discriminator: 1)
!7777 = !DILocation(line: 733, column: 44, scope: !7776)
!7778 = !DILocation(line: 733, column: 48, scope: !7776)
!7779 = !DILocation(line: 733, column: 9, scope: !7776)
!7780 = !DILocation(line: 734, column: 9, scope: !7705)
!7781 = !DILocation(line: 734, column: 14, scope: !7705)
!7782 = !DILocation(line: 734, column: 18, scope: !7705)
!7783 = !DILocation(line: 736, column: 13, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7705, file: !910, line: 736, column: 13)
!7785 = !DILocation(line: 736, column: 18, scope: !7784)
!7786 = !DILocation(line: 736, column: 29, scope: !7784)
!7787 = !DILocation(line: 736, column: 34, scope: !7784)
!7788 = !DILocation(line: 736, column: 27, scope: !7784)
!7789 = !DILocation(line: 736, column: 38, scope: !7784)
!7790 = !DILocation(line: 736, column: 13, scope: !7705)
!7791 = !DILocation(line: 737, column: 13, scope: !7784)
!7792 = !DILocation(line: 738, column: 48, scope: !7705)
!7793 = !DILocation(line: 738, column: 53, scope: !7705)
!7794 = !DILocation(line: 738, column: 27, scope: !7705)
!7795 = !DILocation(line: 92, column: 102, scope: !2169, inlinedAt: !7704)
!7796 = !DILocation(line: 92, column: 105, scope: !2169, inlinedAt: !7704)
!7797 = !DILocation(line: 92, column: 162, scope: !2169, inlinedAt: !7704)
!7798 = !DILocation(line: 92, column: 161, scope: !2169, inlinedAt: !7704)
!7799 = !DILocation(line: 92, column: 164, scope: !2169, inlinedAt: !7704)
!7800 = !DILocation(line: 92, column: 171, scope: !2169, inlinedAt: !7704)
!7801 = !DILocation(line: 92, column: 118, scope: !2169, inlinedAt: !7704)
!7802 = !DILocation(line: 68, column: 16, scope: !2163, inlinedAt: !7703)
!7803 = !DILocation(line: 68, column: 19, scope: !2163, inlinedAt: !7703)
!7804 = !DILocation(line: 68, column: 24, scope: !2163, inlinedAt: !7703)
!7805 = !DILocation(line: 68, column: 38, scope: !2163, inlinedAt: !7703)
!7806 = !DILocation(line: 68, column: 41, scope: !2163, inlinedAt: !7703)
!7807 = !DILocation(line: 68, column: 46, scope: !2163, inlinedAt: !7703)
!7808 = !DILocation(line: 68, column: 34, scope: !2163, inlinedAt: !7703)
!7809 = !DILocation(line: 68, column: 57, scope: !2163, inlinedAt: !7703)
!7810 = !DILocation(line: 68, column: 69, scope: !2163, inlinedAt: !7703)
!7811 = !DILocation(line: 68, column: 72, scope: !2163, inlinedAt: !7703)
!7812 = !DILocation(line: 68, column: 79, scope: !2163, inlinedAt: !7703)
!7813 = !DILocation(line: 68, column: 84, scope: !2163, inlinedAt: !7703)
!7814 = !DILocation(line: 68, column: 99, scope: !2163, inlinedAt: !7703)
!7815 = !DILocation(line: 68, column: 102, scope: !2163, inlinedAt: !7703)
!7816 = !DILocation(line: 68, column: 109, scope: !2163, inlinedAt: !7703)
!7817 = !DILocation(line: 68, column: 114, scope: !2163, inlinedAt: !7703)
!7818 = !DILocation(line: 68, column: 94, scope: !2163, inlinedAt: !7703)
!7819 = !DILocation(line: 68, column: 63, scope: !2163, inlinedAt: !7703)
!7820 = !DILocation(line: 738, column: 9, scope: !7705)
!7821 = !DILocation(line: 738, column: 14, scope: !7705)
!7822 = !DILocation(line: 738, column: 25, scope: !7705)
!7823 = !DILocation(line: 739, column: 5, scope: !7705)
!7824 = !DILocation(line: 742, column: 5, scope: !7701)
!7825 = !DILocation(line: 742, column: 10, scope: !7701)
!7826 = !DILocation(line: 742, column: 16, scope: !7701)
!7827 = !DILocation(line: 742, column: 18, scope: !7701)
!7828 = !DILocation(line: 743, column: 29, scope: !7701)
!7829 = !DILocation(line: 743, column: 34, scope: !7701)
!7830 = !DILocation(line: 743, column: 40, scope: !7701)
!7831 = !DILocation(line: 743, column: 26, scope: !7701)
!7832 = !DILocation(line: 743, column: 43, scope: !7701)
!7833 = !DILocation(line: 743, column: 5, scope: !7701)
!7834 = !DILocation(line: 743, column: 10, scope: !7701)
!7835 = !DILocation(line: 743, column: 16, scope: !7701)
!7836 = !DILocation(line: 743, column: 21, scope: !7701)
!7837 = !DILocation(line: 744, column: 5, scope: !7701)
!7838 = !DILocation(line: 744, column: 10, scope: !7701)
!7839 = !DILocation(line: 744, column: 16, scope: !7701)
!7840 = !DILocation(line: 744, column: 18, scope: !7701)
!7841 = !DILocation(line: 745, column: 29, scope: !7701)
!7842 = !DILocation(line: 745, column: 34, scope: !7701)
!7843 = !DILocation(line: 745, column: 40, scope: !7701)
!7844 = !DILocation(line: 745, column: 26, scope: !7701)
!7845 = !DILocation(line: 745, column: 43, scope: !7701)
!7846 = !DILocation(line: 745, column: 5, scope: !7701)
!7847 = !DILocation(line: 745, column: 10, scope: !7701)
!7848 = !DILocation(line: 745, column: 16, scope: !7701)
!7849 = !DILocation(line: 745, column: 21, scope: !7701)
!7850 = !DILocation(line: 747, column: 9, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7701, file: !910, line: 747, column: 9)
!7852 = !DILocation(line: 747, column: 14, scope: !7851)
!7853 = !DILocation(line: 747, column: 26, scope: !7851)
!7854 = !DILocation(line: 747, column: 9, scope: !7701)
!7855 = !DILocation(line: 749, column: 9, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7851, file: !910, line: 747, column: 35)
!7857 = !DILocation(line: 749, column: 14, scope: !7856)
!7858 = !DILocation(line: 749, column: 17, scope: !7856)
!7859 = !DILocation(line: 751, column: 30, scope: !7856)
!7860 = !DILocation(line: 751, column: 9, scope: !7856)
!7861 = !DILocation(line: 752, column: 5, scope: !7856)
!7862 = !DILocation(line: 754, column: 5, scope: !7701)
!7863 = !DILocation(line: 755, column: 1, scope: !7701)
!7864 = distinct !DISubprogram(name: "init_predictor_decoder", scope: !910, file: !910, line: 773, type: !6623, isLocal: true, isDefinition: true, scopeLine: 774, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7865 = !DILocalVariable(name: "ctx", arg: 1, scope: !7864, file: !910, line: 773, type: !1750)
!7866 = !DILocation(line: 773, column: 48, scope: !7864)
!7867 = !DILocalVariable(name: "p", scope: !7864, file: !910, line: 775, type: !3102)
!7868 = !DILocation(line: 775, column: 19, scope: !7864)
!7869 = !DILocation(line: 775, column: 24, scope: !7864)
!7870 = !DILocation(line: 775, column: 29, scope: !7864)
!7871 = !DILocation(line: 778, column: 12, scope: !7864)
!7872 = !DILocation(line: 778, column: 15, scope: !7864)
!7873 = !DILocation(line: 778, column: 5, scope: !7864)
!7874 = !DILocation(line: 779, column: 14, scope: !7864)
!7875 = !DILocation(line: 779, column: 17, scope: !7864)
!7876 = !DILocation(line: 779, column: 5, scope: !7864)
!7877 = !DILocation(line: 779, column: 8, scope: !7864)
!7878 = !DILocation(line: 779, column: 12, scope: !7864)
!7879 = !DILocation(line: 782, column: 9, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7864, file: !910, line: 782, column: 9)
!7881 = !DILocation(line: 782, column: 14, scope: !7880)
!7882 = !DILocation(line: 782, column: 26, scope: !7880)
!7883 = !DILocation(line: 782, column: 9, scope: !7864)
!7884 = !DILocation(line: 783, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !910, line: 783, column: 13)
!7886 = distinct !DILexicalBlock(scope: !7880, file: !910, line: 782, column: 34)
!7887 = !DILocation(line: 783, column: 18, scope: !7885)
!7888 = !DILocation(line: 783, column: 36, scope: !7885)
!7889 = !DILocation(line: 783, column: 13, scope: !7886)
!7890 = !DILocation(line: 784, column: 20, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7885, file: !910, line: 783, column: 63)
!7892 = !DILocation(line: 784, column: 23, scope: !7891)
!7893 = !DILocation(line: 784, column: 13, scope: !7891)
!7894 = !DILocation(line: 786, column: 20, scope: !7891)
!7895 = !DILocation(line: 786, column: 23, scope: !7891)
!7896 = !DILocation(line: 786, column: 13, scope: !7891)
!7897 = !DILocation(line: 788, column: 9, scope: !7891)
!7898 = !DILocation(line: 789, column: 20, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7885, file: !910, line: 788, column: 16)
!7900 = !DILocation(line: 789, column: 23, scope: !7899)
!7901 = !DILocation(line: 789, column: 13, scope: !7899)
!7902 = !DILocation(line: 791, column: 20, scope: !7899)
!7903 = !DILocation(line: 791, column: 23, scope: !7899)
!7904 = !DILocation(line: 791, column: 13, scope: !7899)
!7905 = !DILocation(line: 794, column: 5, scope: !7886)
!7906 = !DILocation(line: 795, column: 16, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7880, file: !910, line: 794, column: 12)
!7908 = !DILocation(line: 795, column: 19, scope: !7907)
!7909 = !DILocation(line: 795, column: 9, scope: !7907)
!7910 = !DILocation(line: 796, column: 16, scope: !7907)
!7911 = !DILocation(line: 796, column: 19, scope: !7907)
!7912 = !DILocation(line: 796, column: 9, scope: !7907)
!7913 = !DILocation(line: 798, column: 12, scope: !7864)
!7914 = !DILocation(line: 798, column: 15, scope: !7864)
!7915 = !DILocation(line: 798, column: 5, scope: !7864)
!7916 = !DILocation(line: 799, column: 9, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7864, file: !910, line: 799, column: 9)
!7918 = !DILocation(line: 799, column: 14, scope: !7917)
!7919 = !DILocation(line: 799, column: 26, scope: !7917)
!7920 = !DILocation(line: 799, column: 9, scope: !7864)
!7921 = !DILocation(line: 800, column: 16, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7917, file: !910, line: 799, column: 34)
!7923 = !DILocation(line: 800, column: 19, scope: !7922)
!7924 = !DILocation(line: 800, column: 9, scope: !7922)
!7925 = !DILocation(line: 802, column: 16, scope: !7922)
!7926 = !DILocation(line: 802, column: 19, scope: !7922)
!7927 = !DILocation(line: 802, column: 9, scope: !7922)
!7928 = !DILocation(line: 804, column: 5, scope: !7922)
!7929 = !DILocation(line: 806, column: 21, scope: !7864)
!7930 = !DILocation(line: 806, column: 24, scope: !7864)
!7931 = !DILocation(line: 806, column: 35, scope: !7864)
!7932 = !DILocation(line: 806, column: 5, scope: !7864)
!7933 = !DILocation(line: 806, column: 8, scope: !7864)
!7934 = !DILocation(line: 806, column: 19, scope: !7864)
!7935 = !DILocation(line: 807, column: 21, scope: !7864)
!7936 = !DILocation(line: 807, column: 24, scope: !7864)
!7937 = !DILocation(line: 807, column: 35, scope: !7864)
!7938 = !DILocation(line: 807, column: 5, scope: !7864)
!7939 = !DILocation(line: 807, column: 8, scope: !7864)
!7940 = !DILocation(line: 807, column: 19, scope: !7864)
!7941 = !DILocation(line: 808, column: 19, scope: !7864)
!7942 = !DILocation(line: 808, column: 22, scope: !7864)
!7943 = !DILocation(line: 808, column: 31, scope: !7864)
!7944 = !DILocation(line: 808, column: 5, scope: !7864)
!7945 = !DILocation(line: 808, column: 8, scope: !7864)
!7946 = !DILocation(line: 808, column: 17, scope: !7864)
!7947 = !DILocation(line: 810, column: 5, scope: !7864)
!7948 = !DILocation(line: 810, column: 8, scope: !7864)
!7949 = !DILocation(line: 810, column: 19, scope: !7864)
!7950 = !DILocation(line: 811, column: 1, scope: !7864)
!7951 = distinct !DISubprogram(name: "init_filter", scope: !910, file: !910, line: 1251, type: !7952, isLocal: true, isDefinition: true, scopeLine: 1252, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{null, !1750, !7161, !944, !918}
!7954 = !DILocalVariable(name: "ctx", arg: 1, scope: !7951, file: !910, line: 1251, type: !1750)
!7955 = !DILocation(line: 1251, column: 37, scope: !7951)
!7956 = !DILocalVariable(name: "f", arg: 2, scope: !7951, file: !910, line: 1251, type: !7161)
!7957 = !DILocation(line: 1251, column: 53, scope: !7951)
!7958 = !DILocalVariable(name: "buf", arg: 3, scope: !7951, file: !910, line: 1251, type: !944)
!7959 = !DILocation(line: 1251, column: 65, scope: !7951)
!7960 = !DILocalVariable(name: "order", arg: 4, scope: !7951, file: !910, line: 1251, type: !918)
!7961 = !DILocation(line: 1251, column: 74, scope: !7951)
!7962 = !DILocation(line: 1253, column: 21, scope: !7951)
!7963 = !DILocation(line: 1253, column: 27, scope: !7951)
!7964 = !DILocation(line: 1253, column: 32, scope: !7951)
!7965 = !DILocation(line: 1253, column: 5, scope: !7951)
!7966 = !DILocation(line: 1254, column: 21, scope: !7951)
!7967 = !DILocation(line: 1254, column: 27, scope: !7951)
!7968 = !DILocation(line: 1254, column: 33, scope: !7951)
!7969 = !DILocation(line: 1254, column: 39, scope: !7951)
!7970 = !DILocation(line: 1254, column: 31, scope: !7951)
!7971 = !DILocation(line: 1254, column: 43, scope: !7951)
!7972 = !DILocation(line: 1254, column: 50, scope: !7951)
!7973 = !DILocation(line: 1254, column: 5, scope: !7951)
!7974 = !DILocation(line: 1255, column: 1, scope: !7951)
!7975 = distinct !DISubprogram(name: "get_bits_long", scope: !1851, file: !1851, line: 531, type: !6072, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!7976 = !DILocalVariable(name: "s", arg: 1, scope: !7975, file: !1851, line: 531, type: !5735)
!7977 = !DILocation(line: 531, column: 57, scope: !7975)
!7978 = !DILocalVariable(name: "n", arg: 2, scope: !7975, file: !1851, line: 531, type: !918)
!7979 = !DILocation(line: 531, column: 64, scope: !7975)
!7980 = !DILocation(line: 534, column: 10, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7975, file: !1851, line: 534, column: 9)
!7982 = !DILocation(line: 534, column: 9, scope: !7975)
!7983 = !DILocation(line: 535, column: 9, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7981, file: !1851, line: 534, column: 13)
!7985 = !DILocation(line: 540, column: 16, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7981, file: !1851, line: 540, column: 16)
!7987 = !DILocation(line: 540, column: 18, scope: !7986)
!7988 = !DILocation(line: 540, column: 16, scope: !7981)
!7989 = !DILocation(line: 541, column: 25, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7986, file: !1851, line: 540, column: 25)
!7991 = !DILocation(line: 541, column: 28, scope: !7990)
!7992 = !DILocation(line: 541, column: 16, scope: !7990)
!7993 = !DILocation(line: 541, column: 9, scope: !7990)
!7994 = !DILocalVariable(name: "ret", scope: !7995, file: !1851, line: 547, type: !919)
!7995 = distinct !DILexicalBlock(scope: !7986, file: !1851, line: 542, column: 12)
!7996 = !DILocation(line: 547, column: 18, scope: !7995)
!7997 = !DILocation(line: 547, column: 33, scope: !7995)
!7998 = !DILocation(line: 547, column: 24, scope: !7995)
!7999 = !DILocation(line: 547, column: 44, scope: !7995)
!8000 = !DILocation(line: 547, column: 46, scope: !7995)
!8001 = !DILocation(line: 547, column: 40, scope: !7995)
!8002 = !DILocation(line: 548, column: 16, scope: !7995)
!8003 = !DILocation(line: 548, column: 31, scope: !7995)
!8004 = !DILocation(line: 548, column: 34, scope: !7995)
!8005 = !DILocation(line: 548, column: 36, scope: !7995)
!8006 = !DILocation(line: 548, column: 22, scope: !7995)
!8007 = !DILocation(line: 548, column: 20, scope: !7995)
!8008 = !DILocation(line: 548, column: 9, scope: !7995)
!8009 = !DILocation(line: 552, column: 1, scope: !7975)
!8010 = distinct !DISubprogram(name: "do_init_filter", scope: !910, file: !910, line: 1239, type: !8011, isLocal: true, isDefinition: true, scopeLine: 1240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1745)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{null, !7161, !944, !918}
!8013 = !DILocalVariable(name: "f", arg: 1, scope: !8010, file: !910, line: 1239, type: !7161)
!8014 = !DILocation(line: 1239, column: 39, scope: !8010)
!8015 = !DILocalVariable(name: "buf", arg: 2, scope: !8010, file: !910, line: 1239, type: !944)
!8016 = !DILocation(line: 1239, column: 51, scope: !8010)
!8017 = !DILocalVariable(name: "order", arg: 3, scope: !8010, file: !910, line: 1239, type: !918)
!8018 = !DILocation(line: 1239, column: 60, scope: !8010)
!8019 = !DILocation(line: 1241, column: 17, scope: !8010)
!8020 = !DILocation(line: 1241, column: 5, scope: !8010)
!8021 = !DILocation(line: 1241, column: 8, scope: !8010)
!8022 = !DILocation(line: 1241, column: 15, scope: !8010)
!8023 = !DILocation(line: 1242, column: 24, scope: !8010)
!8024 = !DILocation(line: 1242, column: 30, scope: !8010)
!8025 = !DILocation(line: 1242, column: 28, scope: !8010)
!8026 = !DILocation(line: 1242, column: 5, scope: !8010)
!8027 = !DILocation(line: 1242, column: 8, scope: !8010)
!8028 = !DILocation(line: 1242, column: 22, scope: !8010)
!8029 = !DILocation(line: 1243, column: 16, scope: !8010)
!8030 = !DILocation(line: 1243, column: 19, scope: !8010)
!8031 = !DILocation(line: 1243, column: 35, scope: !8010)
!8032 = !DILocation(line: 1243, column: 41, scope: !8010)
!8033 = !DILocation(line: 1243, column: 33, scope: !8010)
!8034 = !DILocation(line: 1243, column: 5, scope: !8010)
!8035 = !DILocation(line: 1243, column: 8, scope: !8010)
!8036 = !DILocation(line: 1243, column: 14, scope: !8010)
!8037 = !DILocation(line: 1244, column: 22, scope: !8010)
!8038 = !DILocation(line: 1244, column: 25, scope: !8010)
!8039 = !DILocation(line: 1244, column: 41, scope: !8010)
!8040 = !DILocation(line: 1244, column: 39, scope: !8010)
!8041 = !DILocation(line: 1244, column: 5, scope: !8010)
!8042 = !DILocation(line: 1244, column: 8, scope: !8010)
!8043 = !DILocation(line: 1244, column: 20, scope: !8010)
!8044 = !DILocation(line: 1246, column: 12, scope: !8010)
!8045 = !DILocation(line: 1246, column: 15, scope: !8010)
!8046 = !DILocation(line: 1246, column: 5, scope: !8010)
!8047 = !DILocation(line: 1246, column: 34, scope: !8010)
!8048 = !DILocation(line: 1246, column: 40, scope: !8010)
!8049 = !DILocation(line: 1246, column: 33, scope: !8010)
!8050 = !DILocation(line: 1246, column: 45, scope: !8010)
!8051 = !DILocation(line: 1247, column: 12, scope: !8010)
!8052 = !DILocation(line: 1247, column: 15, scope: !8010)
!8053 = !DILocation(line: 1247, column: 5, scope: !8010)
!8054 = !DILocation(line: 1247, column: 26, scope: !8010)
!8055 = !DILocation(line: 1247, column: 32, scope: !8010)
!8056 = !DILocation(line: 1248, column: 5, scope: !8010)
!8057 = !DILocation(line: 1248, column: 8, scope: !8010)
!8058 = !DILocation(line: 1248, column: 12, scope: !8010)
!8059 = !DILocation(line: 1249, column: 1, scope: !8010)
