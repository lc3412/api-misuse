; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--diracdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--diracdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type { %struct.AVClass*, i32, i32, i32, [12 x i32], i32, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.AVCodecContext*, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.Picture*, %struct.Picture**, %struct.Picture**, i64, i64, i64, %struct.PutBitContext, i32, i32, [32 x %struct.MpegEncContext*], i32, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture*, %struct.Picture*, %struct.Picture*, [3 x i32], i16*, [3 x i16*], i8*, i8*, i8*, i8*, i8*, [16 x i16]*, [3 x [16 x i16]*], i32, i8*, i8*, i8*, i8*, %struct.ScratchpadContext, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, [5 x i32], i32, i32, i32, %struct.BlockDSPContext, %struct.FDCTDSPContext, %struct.H264ChromaContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, %struct.MECmpContext, %struct.MpegVideoDSPContext, %struct.MpegvideoEncDSPContext, %struct.PixblockDSPContext, %struct.QpelDSPContext, %struct.VideoDSPContext, %struct.H263DSPContext, i32, i32, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i8*], [2 x [2 x i8*]], i32, i32, i32, i32, i32, [2 x [4 x [2 x i32]]], [2 x [2 x i32]], [2 x [2 x [2 x i32]]], i8*, [2 x [64 x i16]], %struct.MotionEstContext, i32, i32, i32, i32, i32, i16*, [6 x i32], [6 x i32], [3 x i8*], i32*, [64 x i16], [64 x i16], [64 x i16], [64 x i16], i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [12 x i32], [64 x i32]*, [64 x i32]*, [64 x i32]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [64 x i32]*, [2 x i32], [64 x i16]*, i64, i32, i32, i32, %struct.RateControlContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.GetBitContext, i32, i32, %struct.ParseContext, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i16, i16, i16, i16, i32, [2 x [2 x i32]], [2 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PutBitContext, %struct.PutBitContext, i32, i32, i32, i8*, i32, i32, i32, [3 x i32], %struct.MJpegContext*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [65 x [65 x [2 x i32]]]]*, i32, i32, %struct.GetBitContext, i32, i32, i8*, i32, [2 x [2 x i32]], i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8*, %struct.AVTimecode, i8*, i32, i32, [12 x [64 x i16]*], [64 x i16]*, [12 x [64 x i16]]*, i32 (%struct.MpegEncContext*, [64 x i16]*)*, [12 x [64 x i32]]*, i32, [3 x [256 x i16]]*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, void (%struct.MpegEncContext*, i16*)*, i32, i32, float, float, i32, float, float, float, i32, i32, i32, i8*, float*, float*, i32, %struct.ERContext, i32, [18 x %struct.AVFrame*], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.ScratchpadContext = type { i8*, i8*, i8*, i8* }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.FDCTDSPContext = type { void (i16*)*, void (i16*)* }
%struct.H264ChromaContext = type { [4 x void (i8*, i8*, i64, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.MpegVideoDSPContext = type { void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* }
%struct.MpegvideoEncDSPContext = type { i32 (i16*, i16*, i16*, i32)*, void (i16*, i16*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, [4 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i32, i32, i32, i32, i32)* }
%struct.PixblockDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)* }
%struct.QpelDSPContext = type { [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.H263DSPContext = type { void (i8*, i32, i32)*, void (i8*, i32, i32)* }
%struct.MotionEstContext = type { %struct.AVCodecContext*, i32, [4 x [2 x i32]], [4 x [2 x i32]], i8*, i8*, [2 x i8*], i8*, i32, i32*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i8*]], [4 x [4 x i8*]], i32, i32, i64, i64, i32, [4 x void (i8*, i8*, i64, i32)*]*, [4 x void (i8*, i8*, i64, i32)*]*, [16 x void (i8*, i8*, i64)*]*, [16 x void (i8*, i8*, i64)*]*, [16385 x i8]*, i8*, i32 (%struct.MpegEncContext*, i32*, i32*, i32, i32, i32, i32, i32)* }
%struct.RateControlContext = type { i32, %struct.RateControlEntry*, double, [5 x %struct.Predictor], double, double, double, double, double, [5 x double], i64, i64, [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i32], i32, i8*, float, i32, %struct.AVExpr* }
%struct.RateControlEntry = type { i32, float, i32, i32, i32, i32, i32, i64, i32, float, i64, i64, i32, i32, i32, i32 }
%struct.Predictor = type { double, double, double }
%struct.AVExpr = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.MJpegContext = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.ERContext = type { %struct.AVCodecContext*, %struct.MECmpContext, i32, i32*, i32, i32, i32, i64, i64, i32, i32, i8*, i8*, [3 x i16*], i8*, i8*, [2 x [4 x [2 x i32]]], %struct.ERPicture, %struct.ERPicture, %struct.ERPicture, [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*], i16, i16, i32, i32, i32, void (i8*, i32, i32, i32, [2 x [4 x [2 x i32]]]*, i32, i32, i32, i32)*, i8* }
%struct.ERPicture = type { %struct.AVFrame*, %struct.ThreadFrame*, [2 x [2 x i16]*], [2 x i8*], i32*, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.DiracContext = type { %struct.AVCodecContext*, %struct.MpegvideoEncDSPContext, %struct.VideoDSPContext, %struct.DiracDSPContext, %struct.DiracGolombLUT*, %struct.DiracVersionInfo, %struct.GetBitContext, %struct.AVDiracSeqHeader, i32, i64, [3 x %struct.Plane], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, %struct.DiracSlice*, i32, [6 x %struct.anon], %struct.anon.0, %struct.anon.1, [2 x %struct.anon.2], i8, [2 x i16], i32, i32, i32, i32, i32, i8*, %struct.DiracBlock*, [4 x i8*], i8*, i16*, i8*, i32, [4 x i8], [3 x [1024 x i8]], [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*], void (i16*, i8*, i32, i8*, i32)*, void (i8*, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32)*, %struct.DiracFrame*, [2 x %struct.DiracFrame*], [9 x %struct.DiracFrame*], [6 x %struct.DiracFrame*], [14 x %struct.DiracFrame], [8 x i8] }
%struct.DiracDSPContext = type { void (i8*, i8*, i8*, i8*, i32, i32, i32)*, [3 x [4 x void (i8*, i8**, i32, i32)*]], [3 x [4 x void (i8*, i8**, i32, i32)*]], [3 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i8*, i32, i32, i32)*, void (i8*, i16*, i32, i16*, i32, i32, i32)*, [3 x void (i16*, i8*, i32, i8*, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32, i32)*], [3 x void (i8*, i32, i32, i32, i32)*], [3 x void (i8*, i8*, i32, i32, i32, i32, i32)*] }
%struct.DiracGolombLUT = type { i64, i64, [8 x i32], i32, i32, i32, i8, i8 }
%struct.DiracVersionInfo = type { i32, i32 }
%struct.AVDiracSeqHeader = type { i32, i32, i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i32, i32, %struct.AVRational, %struct.AVRational, i32, i32, i32, i32, i32, %struct.DiracVersionInfo, i32 }
%struct.Plane = type { %struct.DWTPlane, i32, i32, i64, i8, i8, i8, i8, i8, i8, [5 x [4 x %struct.SubBand]] }
%struct.DWTPlane = type { i32, i32, i32, i8*, i8*, i8* }
%struct.SubBand = type { i32, i32, i32, i32, i32, i32, i32, i8*, %struct.SubBand*, i32, i8* }
%struct.DiracSlice = type { %struct.GetBitContext, i32, i32, i32 }
%struct.anon = type { i32, i32 }
%struct.anon.0 = type { %struct.AVRational, [5 x [4 x i8]] }
%struct.anon.1 = type { i32, i64 }
%struct.anon.2 = type { [2 x i32], [2 x [2 x i32]], [2 x i32], i32, i32 }
%struct.DiracBlock = type { %union.anon.3, i8 }
%union.anon.3 = type { [2 x [2 x i16]] }
%struct.DiracFrame = type { %struct.AVFrame*, [3 x i32], [3 x [4 x i8*]], [3 x [4 x i8*]], i32 }
%union.unaligned_32 = type { i32 }
%struct.DWTContext = type { i8*, i8*, i32, i32, i32, i32, i32, void (%struct.DWTContext*, i32, i32, i32, i32)*, void ()*, void ()*, void ()*, void ()*, void ()*, void (i8*, i8*, i32)*, [8 x %struct.DWTCompose] }
%struct.DWTCompose = type { [8 x i8*], i32 }
%struct.DiracArith = type { i32, i16, i16, i8*, i8*, [22 x i16], i32, i32 }
%union.unaligned_16 = type { i16 }
%struct.SliceCoeffs = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [6 x i8] c"dirac\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"BBC Dirac VC-2\00", align 1
@ff_dirac_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 116, i32 8226, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 11456, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @dirac_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @dirac_decode_frame, i32 (%struct.AVCodecContext*)* @dirac_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @dirac_decode_flush, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@dirac_arith_init = internal global i32 0, align 4
@.str.2 = private unnamed_addr constant [64 x i8] c"Data unit with size %d is larger than input buffer, discarding\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Error in dirac_decode_data_unit\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Delay frame overflow\0A\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"error parsing sequence header\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"Schroedinger %d.%d.%d\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Dropping frame without sequence header\0A\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"framelist full\0A\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"num_refs of 3\0A\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Invalid low delay flag\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"stride >= w\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"libavcodec/diracdec.c\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"PICTURE_NUM: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Reference not found\0A\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"Reference could not be allocated\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"Frame to retire not found\0A\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Reference frame overflow\0A\00", align 1
@ff_interleaved_golomb_vlc_len = external constant [256 x i8], align 16
@ff_interleaved_ue_golomb_vlc_code = external constant [256 x i8], align 16
@ff_interleaved_dirac_golomb_vlc_code = external constant [256 x i8], align 16
@dirac_unpack_prediction_parameters.default_blen = internal constant [4 x i8] c"\04\0C\10\18", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"Block prediction index too high\0A\00", align 1
@.str.20 = private unnamed_addr constant [63 x i8] c"invalid x/y block length (%d/%d) for x/y chroma shift (%d/%d)\0A\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"Block separation too small\0A\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"Block separation greater than size\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Unsupported large block size\0A\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"MV precision finer than eighth-pel\0A\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"Unknown picture prediction mode\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"weight_log2denom unsupported or invalid\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"dirac_get_arith_uint overflow\0A\00", align 1
@ff_dirac_next_ctx = external constant [22 x i8], align 16
@ff_dirac_prob_branchless = external global [256 x [2 x i16]], align 16
@pred_sbsplit.avgsplit = internal constant [7 x i8] c"\00\00\01\01\01\02\02", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"wavelet_idx is too big\0A\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"invalid number of DWT decompositions\0A\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"codeblock width invalid\0A\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"codeblock height invalid\0A\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"unknown codeblock mode\0A\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"Invalid numx/y\0A\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"Invalid lowdelay.bytes.den\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"too many prefix bytes\0A\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"Low Delay: Has Custom Quantization Matrix!\0A\00", align 1
@.str.37 = private unnamed_addr constant [56 x i8] c"Mandatory custom low delay matrix missing for depth %d\0A\00", align 1
@ff_dirac_default_qmat = external constant [7 x [4 x [4 x i8]]], align 16
@.str.38 = private unnamed_addr constant [40 x i8] c"slice params buffer allocation failure\0A\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"thread buffer allocation failure\0A\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"too many bytes\0A\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"too few slices\0A\00", align 1
@.str.42 = private unnamed_addr constant [33 x i8] c"Invalid quantization index - %i\0A\00", align 1
@ff_dirac_qscale_tab = external constant [116 x i32], align 16
@ff_dirac_qoffset_intra_tab = external constant [120 x i32], align 16
@.str.43 = private unnamed_addr constant [18 x i8] c"end too far away\0A\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"Unsupported quant %d\0A\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"Invalid quant\0A\00", align 1
@ff_dirac_qoffset_inter_tab = external constant [122 x i32], align 16
@epel_weights = internal constant [4 x [4 x [4 x i8]]] [[4 x [4 x i8]] [[4 x i8] c"\10\00\00\00", [4 x i8] c"\0C\04\00\00", [4 x i8] c"\08\08\00\00", [4 x i8] c"\04\0C\00\00"], [4 x [4 x i8]] [[4 x i8] c"\0C\00\04\00", [4 x i8] c"\09\03\03\01", [4 x i8] c"\06\06\02\02", [4 x i8] c"\03\09\01\03"], [4 x [4 x i8]] [[4 x i8] c"\08\00\08\00", [4 x i8] c"\06\02\06\02", [4 x i8] c"\04\04\04\04", [4 x i8] c"\02\06\02\06"], [4 x [4 x i8]] [[4 x i8] c"\04\00\0C\00", [4 x i8] c"\03\01\09\03", [4 x i8] c"\02\02\06\06", [4 x i8] c"\01\03\03\09"]], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @dirac_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2945 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.DiracContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2946, metadata !2947), !dbg !2948
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !2949, metadata !2947), !dbg !2950
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2951
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2952
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2952
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !2951
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !2950
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2953, metadata !2947), !dbg !2954
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2955, metadata !2947), !dbg !2956
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2957
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2958
  %avctx1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 0, !dbg !2959
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx1, align 16, !dbg !2960
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2961
  %frame_number = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 9, !dbg !2962
  store i64 -1, i64* %frame_number, align 16, !dbg !2963
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2964
  %thread_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 30, !dbg !2965
  store i8* null, i8** %thread_buf, align 8, !dbg !2966
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2967
  %threads_num_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 31, !dbg !2968
  store i32 -1, i32* %threads_num_buf, align 16, !dbg !2969
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2970
  %thread_buf_size = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 32, !dbg !2971
  store i32 -1, i32* %thread_buf_size, align 4, !dbg !2972
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2973
  %reader_ctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 4, !dbg !2974
  %call = call i32 @ff_dirac_golomb_reader_init(%struct.DiracGolombLUT** %reader_ctx), !dbg !2975
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2976
  %diracdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 3, !dbg !2977
  call void @ff_diracdsp_init(%struct.DiracDSPContext* %diracdsp), !dbg !2978
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2979
  %mpvencdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 1, !dbg !2980
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2981
  call void @ff_mpegvideoencdsp_init(%struct.MpegvideoEncDSPContext* %mpvencdsp, %struct.AVCodecContext* %12), !dbg !2982
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2983
  %vdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 2, !dbg !2984
  call void @ff_videodsp_init(%struct.VideoDSPContext* %vdsp, i32 8), !dbg !2985
  store i32 0, i32* %i, align 4, !dbg !2986
  br label %for.cond, !dbg !2988

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !dbg !2989
  %cmp = icmp slt i32 %14, 14, !dbg !2992
  br i1 %cmp, label %for.body, label %for.end, !dbg !2993

for.body:                                         ; preds = %for.cond
  %call2 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2994
  %15 = load i32, i32* %i, align 4, !dbg !2996
  %idxprom = sext i32 %15 to i64, !dbg !2997
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !2997
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 64, !dbg !2998
  %arrayidx = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom, !dbg !2997
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx, i32 0, i32 0, !dbg !2999
  store %struct.AVFrame* %call2, %struct.AVFrame** %avframe, align 8, !dbg !3000
  %17 = load i32, i32* %i, align 4, !dbg !3001
  %idxprom3 = sext i32 %17 to i64, !dbg !3003
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3003
  %all_frames4 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 64, !dbg !3004
  %arrayidx5 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames4, i64 0, i64 %idxprom3, !dbg !3003
  %avframe6 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx5, i32 0, i32 0, !dbg !3005
  %19 = load %struct.AVFrame*, %struct.AVFrame** %avframe6, align 8, !dbg !3005
  %tobool = icmp ne %struct.AVFrame* %19, null, !dbg !3003
  br i1 %tobool, label %if.end, label %if.then, !dbg !3006

if.then:                                          ; preds = %for.body
  br label %while.cond, !dbg !3007

while.cond:                                       ; preds = %while.body, %if.then
  %20 = load i32, i32* %i, align 4, !dbg !3009
  %cmp7 = icmp sgt i32 %20, 0, !dbg !3011
  br i1 %cmp7, label %while.body, label %while.end, !dbg !3012

while.body:                                       ; preds = %while.cond
  %21 = load i32, i32* %i, align 4, !dbg !3013
  %dec = add nsw i32 %21, -1, !dbg !3013
  store i32 %dec, i32* %i, align 4, !dbg !3013
  %idxprom8 = sext i32 %dec to i64, !dbg !3014
  %22 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3014
  %all_frames9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %22, i32 0, i32 64, !dbg !3015
  %arrayidx10 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames9, i64 0, i64 %idxprom8, !dbg !3014
  %avframe11 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx10, i32 0, i32 0, !dbg !3016
  call void @av_frame_free(%struct.AVFrame** %avframe11), !dbg !3017
  br label %while.cond, !dbg !3018, !llvm.loop !3020

while.end:                                        ; preds = %while.cond
  store i32 -12, i32* %retval, align 4, !dbg !3021
  br label %return, !dbg !3021

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3022

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !3023
  %inc = add nsw i32 %23, 1, !dbg !3023
  store i32 %inc, i32* %i, align 4, !dbg !3023
  br label %for.cond, !dbg !3025, !llvm.loop !3026

for.end:                                          ; preds = %for.cond
  %call12 = call i32 @pthread_once(i32* @dirac_arith_init, void ()* @ff_dirac_init_arith_tables), !dbg !3028
  store i32 %call12, i32* %ret, align 4, !dbg !3029
  %24 = load i32, i32* %ret, align 4, !dbg !3030
  %cmp13 = icmp ne i32 %24, 0, !dbg !3032
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3033

if.then14:                                        ; preds = %for.end
  store i32 -1313558101, i32* %retval, align 4, !dbg !3034
  br label %return, !dbg !3034

if.end15:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

return:                                           ; preds = %if.end15, %if.then14, %while.end
  %25 = load i32, i32* %retval, align 4, !dbg !3036
  ret i32 %25, !dbg !3036
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %pkt) #1 !dbg !3037 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3038, metadata !2947), !dbg !3043
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.DiracContext*, align 8
  %picture = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %i = alloca i32, align 4
  %buf_idx = alloca i32, align 4
  %ret = alloca i32, align 4
  %data_unit_size = alloca i32, align 4
  %delayed_frame = alloca %struct.DiracFrame*, align 8
  %min_num = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3048, metadata !2947), !dbg !3049
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3050, metadata !2947), !dbg !3051
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !3052, metadata !2947), !dbg !3053
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3054, metadata !2947), !dbg !3055
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !3056, metadata !2947), !dbg !3057
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3058
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3059
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3059
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !3058
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picture, metadata !3060, metadata !2947), !dbg !3061
  %3 = load i8*, i8** %data.addr, align 8, !dbg !3062
  %4 = bitcast i8* %3 to %struct.AVFrame*, !dbg !3062
  store %struct.AVFrame* %4, %struct.AVFrame** %picture, align 8, !dbg !3061
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3063, metadata !2947), !dbg !3064
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3065
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 3, !dbg !3066
  %6 = load i8*, i8** %data1, align 8, !dbg !3066
  store i8* %6, i8** %buf, align 8, !dbg !3064
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !3067, metadata !2947), !dbg !3068
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3069
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 4, !dbg !3070
  %8 = load i32, i32* %size, align 8, !dbg !3070
  store i32 %8, i32* %buf_size, align 4, !dbg !3068
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3071, metadata !2947), !dbg !3072
  call void @llvm.dbg.declare(metadata i32* %buf_idx, metadata !3073, metadata !2947), !dbg !3074
  store i32 0, i32* %buf_idx, align 4, !dbg !3074
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3075, metadata !2947), !dbg !3076
  call void @llvm.dbg.declare(metadata i32* %data_unit_size, metadata !3077, metadata !2947), !dbg !3078
  store i32 0, i32* %i, align 4, !dbg !3079
  br label %for.cond, !dbg !3081

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !3082
  %cmp = icmp slt i32 %9, 14, !dbg !3085
  br i1 %cmp, label %for.body, label %for.end, !dbg !3086

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !3087
  %idxprom = sext i32 %10 to i64, !dbg !3089
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3089
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 64, !dbg !3090
  %arrayidx = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom, !dbg !3089
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx, i32 0, i32 0, !dbg !3091
  %12 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !3091
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 0, !dbg !3092
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !3089
  %13 = load i8*, i8** %arrayidx3, align 8, !dbg !3089
  %tobool = icmp ne i8* %13, null, !dbg !3089
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3093

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !3094
  %idxprom4 = sext i32 %14 to i64, !dbg !3096
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3096
  %all_frames5 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %15, i32 0, i32 64, !dbg !3097
  %arrayidx6 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames5, i64 0, i64 %idxprom4, !dbg !3096
  %reference = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx6, i32 0, i32 4, !dbg !3098
  %16 = load i32, i32* %reference, align 8, !dbg !3098
  %tobool7 = icmp ne i32 %16, 0, !dbg !3096
  br i1 %tobool7, label %if.end, label %if.then, !dbg !3099

if.then:                                          ; preds = %land.lhs.true
  %17 = load i32, i32* %i, align 4, !dbg !3100
  %idxprom8 = sext i32 %17 to i64, !dbg !3102
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3102
  %all_frames9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 64, !dbg !3103
  %arrayidx10 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames9, i64 0, i64 %idxprom8, !dbg !3102
  %avframe11 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx10, i32 0, i32 0, !dbg !3104
  %19 = load %struct.AVFrame*, %struct.AVFrame** %avframe11, align 8, !dbg !3104
  call void @av_frame_unref(%struct.AVFrame* %19), !dbg !3105
  %20 = load i32, i32* %i, align 4, !dbg !3106
  %idxprom12 = sext i32 %20 to i64, !dbg !3107
  %21 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3107
  %all_frames13 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %21, i32 0, i32 64, !dbg !3108
  %arrayidx14 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames13, i64 0, i64 %idxprom12, !dbg !3107
  %interpolated = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx14, i32 0, i32 1, !dbg !3109
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %interpolated, i32 0, i32 0, !dbg !3110
  %22 = bitcast i32* %arraydecay to i8*, !dbg !3110
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 12, i32 8, i1 false), !dbg !3110
  br label %if.end, !dbg !3111

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3112

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !3114
  %inc = add nsw i32 %23, 1, !dbg !3114
  store i32 %inc, i32* %i, align 4, !dbg !3114
  br label %for.cond, !dbg !3116, !llvm.loop !3117

for.end:                                          ; preds = %for.cond
  %24 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3119
  %current_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %24, i32 0, i32 60, !dbg !3120
  store %struct.DiracFrame* null, %struct.DiracFrame** %current_picture, align 8, !dbg !3121
  %25 = load i32*, i32** %got_frame.addr, align 8, !dbg !3122
  store i32 0, i32* %25, align 4, !dbg !3123
  %26 = load i32, i32* %buf_size, align 4, !dbg !3124
  %cmp15 = icmp eq i32 %26, 0, !dbg !3126
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3127

if.then16:                                        ; preds = %for.end
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3128
  %28 = load i8*, i8** %data.addr, align 8, !dbg !3129
  %29 = bitcast i8* %28 to %struct.AVFrame*, !dbg !3130
  %30 = load i32*, i32** %got_frame.addr, align 8, !dbg !3131
  %call = call i32 @get_delayed_pic(%struct.DiracContext* %27, %struct.AVFrame* %29, i32* %30), !dbg !3132
  store i32 %call, i32* %retval, align 4, !dbg !3133
  br label %return, !dbg !3133

if.end17:                                         ; preds = %for.end
  br label %for.cond18, !dbg !3134

for.cond18:                                       ; preds = %if.end78, %if.end68, %if.end17
  br label %for.cond19, !dbg !3135

for.cond19:                                       ; preds = %for.inc49, %for.cond18
  %31 = load i32, i32* %buf_idx, align 4, !dbg !3136
  %add = add nsw i32 %31, 13, !dbg !3140
  %32 = load i32, i32* %buf_size, align 4, !dbg !3141
  %cmp20 = icmp slt i32 %add, %32, !dbg !3142
  br i1 %cmp20, label %for.body21, label %for.end51, !dbg !3143

for.body21:                                       ; preds = %for.cond19
  %33 = load i32, i32* %buf_idx, align 4, !dbg !3144
  %idxprom22 = sext i32 %33 to i64, !dbg !3147
  %34 = load i8*, i8** %buf, align 8, !dbg !3147
  %arrayidx23 = getelementptr inbounds i8, i8* %34, i64 %idxprom22, !dbg !3147
  %35 = load i8, i8* %arrayidx23, align 1, !dbg !3147
  %conv = zext i8 %35 to i32, !dbg !3147
  %cmp24 = icmp eq i32 %conv, 66, !dbg !3148
  br i1 %cmp24, label %land.lhs.true26, label %if.end48, !dbg !3149

land.lhs.true26:                                  ; preds = %for.body21
  %36 = load i32, i32* %buf_idx, align 4, !dbg !3150
  %add27 = add nsw i32 %36, 1, !dbg !3152
  %idxprom28 = sext i32 %add27 to i64, !dbg !3153
  %37 = load i8*, i8** %buf, align 8, !dbg !3153
  %arrayidx29 = getelementptr inbounds i8, i8* %37, i64 %idxprom28, !dbg !3153
  %38 = load i8, i8* %arrayidx29, align 1, !dbg !3153
  %conv30 = zext i8 %38 to i32, !dbg !3153
  %cmp31 = icmp eq i32 %conv30, 66, !dbg !3154
  br i1 %cmp31, label %land.lhs.true33, label %if.end48, !dbg !3155

land.lhs.true33:                                  ; preds = %land.lhs.true26
  %39 = load i32, i32* %buf_idx, align 4, !dbg !3156
  %add34 = add nsw i32 %39, 2, !dbg !3157
  %idxprom35 = sext i32 %add34 to i64, !dbg !3158
  %40 = load i8*, i8** %buf, align 8, !dbg !3158
  %arrayidx36 = getelementptr inbounds i8, i8* %40, i64 %idxprom35, !dbg !3158
  %41 = load i8, i8* %arrayidx36, align 1, !dbg !3158
  %conv37 = zext i8 %41 to i32, !dbg !3158
  %cmp38 = icmp eq i32 %conv37, 67, !dbg !3159
  br i1 %cmp38, label %land.lhs.true40, label %if.end48, !dbg !3160

land.lhs.true40:                                  ; preds = %land.lhs.true33
  %42 = load i32, i32* %buf_idx, align 4, !dbg !3161
  %add41 = add nsw i32 %42, 3, !dbg !3162
  %idxprom42 = sext i32 %add41 to i64, !dbg !3163
  %43 = load i8*, i8** %buf, align 8, !dbg !3163
  %arrayidx43 = getelementptr inbounds i8, i8* %43, i64 %idxprom42, !dbg !3163
  %44 = load i8, i8* %arrayidx43, align 1, !dbg !3163
  %conv44 = zext i8 %44 to i32, !dbg !3163
  %cmp45 = icmp eq i32 %conv44, 68, !dbg !3164
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !3165

if.then47:                                        ; preds = %land.lhs.true40
  br label %for.end51, !dbg !3167

if.end48:                                         ; preds = %land.lhs.true40, %land.lhs.true33, %land.lhs.true26, %for.body21
  br label %for.inc49, !dbg !3168

for.inc49:                                        ; preds = %if.end48
  %45 = load i32, i32* %buf_idx, align 4, !dbg !3169
  %inc50 = add nsw i32 %45, 1, !dbg !3169
  store i32 %inc50, i32* %buf_idx, align 4, !dbg !3169
  br label %for.cond19, !dbg !3171, !llvm.loop !3172

for.end51:                                        ; preds = %if.then47, %for.cond19
  %46 = load i32, i32* %buf_idx, align 4, !dbg !3173
  %add52 = add nsw i32 %46, 13, !dbg !3175
  %47 = load i32, i32* %buf_size, align 4, !dbg !3176
  %cmp53 = icmp sge i32 %add52, %47, !dbg !3177
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !3178

if.then55:                                        ; preds = %for.end51
  br label %for.end80, !dbg !3179

if.end56:                                         ; preds = %for.end51
  %48 = load i8*, i8** %buf, align 8, !dbg !3180
  %49 = load i32, i32* %buf_idx, align 4, !dbg !3181
  %idx.ext = sext i32 %49 to i64, !dbg !3182
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %idx.ext, !dbg !3182
  %add.ptr57 = getelementptr inbounds i8, i8* %add.ptr, i64 5, !dbg !3183
  %50 = bitcast i8* %add.ptr57 to %union.unaligned_32*, !dbg !3184
  %l = bitcast %union.unaligned_32* %50 to i32*, !dbg !3184
  %51 = load i32, i32* %l, align 1, !dbg !3184
  store i32 %51, i32* %x.addr.i, align 4, !dbg !3185
  %52 = load i32, i32* %x.addr.i, align 4, !dbg !3186
  %shl.i = shl i32 %52, 8, !dbg !3187
  %and.i = and i32 %shl.i, 65280, !dbg !3188
  %53 = load i32, i32* %x.addr.i, align 4, !dbg !3189
  %shr.i = lshr i32 %53, 8, !dbg !3190
  %and1.i = and i32 %shr.i, 255, !dbg !3191
  %or.i = or i32 %and.i, %and1.i, !dbg !3192
  %shl2.i = shl i32 %or.i, 16, !dbg !3193
  %54 = load i32, i32* %x.addr.i, align 4, !dbg !3194
  %shr3.i = lshr i32 %54, 16, !dbg !3195
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3196
  %and5.i = and i32 %shl4.i, 65280, !dbg !3197
  %55 = load i32, i32* %x.addr.i, align 4, !dbg !3198
  %shr6.i = lshr i32 %55, 16, !dbg !3199
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3200
  %and8.i = and i32 %shr7.i, 255, !dbg !3201
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3202
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3203
  store i32 %or10.i, i32* %data_unit_size, align 4, !dbg !3204
  %56 = load i32, i32* %data_unit_size, align 4, !dbg !3205
  %57 = load i32, i32* %buf_size, align 4, !dbg !3207
  %58 = load i32, i32* %buf_idx, align 4, !dbg !3208
  %sub = sub nsw i32 %57, %58, !dbg !3209
  %cmp59 = icmp ugt i32 %56, %sub, !dbg !3210
  br i1 %cmp59, label %if.then62, label %lor.lhs.false, !dbg !3211

lor.lhs.false:                                    ; preds = %if.end56
  %59 = load i32, i32* %data_unit_size, align 4, !dbg !3212
  %tobool61 = icmp ne i32 %59, 0, !dbg !3212
  br i1 %tobool61, label %if.end70, label %if.then62, !dbg !3214

if.then62:                                        ; preds = %lor.lhs.false, %if.end56
  %60 = load i32, i32* %data_unit_size, align 4, !dbg !3215
  %61 = load i32, i32* %buf_size, align 4, !dbg !3218
  %62 = load i32, i32* %buf_idx, align 4, !dbg !3219
  %sub63 = sub nsw i32 %61, %62, !dbg !3220
  %cmp64 = icmp ugt i32 %60, %sub63, !dbg !3221
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !3222

if.then66:                                        ; preds = %if.then62
  %63 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3223
  %avctx67 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %63, i32 0, i32 0, !dbg !3224
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx67, align 16, !dbg !3224
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !3223
  %66 = load i32, i32* %data_unit_size, align 4, !dbg !3225
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2, i32 0, i32 0), i32 %66), !dbg !3226
  br label %if.end68, !dbg !3226

if.end68:                                         ; preds = %if.then66, %if.then62
  %67 = load i32, i32* %buf_idx, align 4, !dbg !3227
  %add69 = add nsw i32 %67, 4, !dbg !3227
  store i32 %add69, i32* %buf_idx, align 4, !dbg !3227
  br label %for.cond18, !dbg !3228, !llvm.loop !3229

if.end70:                                         ; preds = %lor.lhs.false
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3230
  %69 = load i8*, i8** %buf, align 8, !dbg !3231
  %70 = load i32, i32* %buf_idx, align 4, !dbg !3232
  %idx.ext71 = sext i32 %70 to i64, !dbg !3233
  %add.ptr72 = getelementptr inbounds i8, i8* %69, i64 %idx.ext71, !dbg !3233
  %71 = load i32, i32* %data_unit_size, align 4, !dbg !3234
  %call73 = call i32 @dirac_decode_data_unit(%struct.AVCodecContext* %68, i8* %add.ptr72, i32 %71), !dbg !3235
  store i32 %call73, i32* %ret, align 4, !dbg !3236
  %72 = load i32, i32* %ret, align 4, !dbg !3237
  %cmp74 = icmp slt i32 %72, 0, !dbg !3239
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !3240

if.then76:                                        ; preds = %if.end70
  %73 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3241
  %avctx77 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %73, i32 0, i32 0, !dbg !3243
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx77, align 16, !dbg !3243
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !3241
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i32 0, i32 0)), !dbg !3244
  %76 = load i32, i32* %ret, align 4, !dbg !3245
  store i32 %76, i32* %retval, align 4, !dbg !3246
  br label %return, !dbg !3246

if.end78:                                         ; preds = %if.end70
  %77 = load i32, i32* %data_unit_size, align 4, !dbg !3247
  %78 = load i32, i32* %buf_idx, align 4, !dbg !3248
  %add79 = add i32 %78, %77, !dbg !3248
  store i32 %add79, i32* %buf_idx, align 4, !dbg !3248
  br label %for.cond18, !dbg !3249, !llvm.loop !3229

for.end80:                                        ; preds = %if.then55
  %79 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3251
  %current_picture81 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %79, i32 0, i32 60, !dbg !3253
  %80 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture81, align 8, !dbg !3253
  %tobool82 = icmp ne %struct.DiracFrame* %80, null, !dbg !3251
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !3254

if.then83:                                        ; preds = %for.end80
  %81 = load i32, i32* %buf_size, align 4, !dbg !3255
  store i32 %81, i32* %retval, align 4, !dbg !3256
  br label %return, !dbg !3256

if.end84:                                         ; preds = %for.end80
  %82 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3257
  %current_picture85 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %82, i32 0, i32 60, !dbg !3259
  %83 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture85, align 8, !dbg !3259
  %avframe86 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %83, i32 0, i32 0, !dbg !3260
  %84 = load %struct.AVFrame*, %struct.AVFrame** %avframe86, align 8, !dbg !3260
  %display_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %84, i32 0, i32 14, !dbg !3261
  %85 = load i32, i32* %display_picture_number, align 4, !dbg !3261
  %conv87 = sext i32 %85 to i64, !dbg !3257
  %86 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3262
  %frame_number = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %86, i32 0, i32 9, !dbg !3263
  %87 = load i64, i64* %frame_number, align 16, !dbg !3263
  %cmp88 = icmp sgt i64 %conv87, %87, !dbg !3264
  br i1 %cmp88, label %if.then90, label %if.else, !dbg !3265

if.then90:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %delayed_frame, metadata !3266, metadata !2947), !dbg !3268
  %88 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3269
  %delay_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %88, i32 0, i32 63, !dbg !3270
  %arraydecay91 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames, i32 0, i32 0, !dbg !3269
  %89 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3271
  %frame_number92 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %89, i32 0, i32 9, !dbg !3272
  %90 = load i64, i64* %frame_number92, align 16, !dbg !3272
  %conv93 = trunc i64 %90 to i32, !dbg !3271
  %call94 = call %struct.DiracFrame* @remove_frame(%struct.DiracFrame** %arraydecay91, i32 %conv93), !dbg !3273
  store %struct.DiracFrame* %call94, %struct.DiracFrame** %delayed_frame, align 8, !dbg !3268
  %91 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3274
  %current_picture95 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %91, i32 0, i32 60, !dbg !3275
  %92 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture95, align 8, !dbg !3275
  %reference96 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %92, i32 0, i32 4, !dbg !3276
  %93 = load i32, i32* %reference96, align 8, !dbg !3277
  %or = or i32 %93, 4, !dbg !3277
  store i32 %or, i32* %reference96, align 8, !dbg !3277
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3278
  %delay_frames97 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 63, !dbg !3280
  %arraydecay98 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames97, i32 0, i32 0, !dbg !3278
  %95 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3281
  %current_picture99 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %95, i32 0, i32 60, !dbg !3282
  %96 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture99, align 8, !dbg !3282
  %call100 = call i32 @add_frame(%struct.DiracFrame** %arraydecay98, i32 5, %struct.DiracFrame* %96), !dbg !3283
  %tobool101 = icmp ne i32 %call100, 0, !dbg !3283
  br i1 %tobool101, label %if.then102, label %if.end137, !dbg !3284

if.then102:                                       ; preds = %if.then90
  call void @llvm.dbg.declare(metadata i32* %min_num, metadata !3285, metadata !2947), !dbg !3287
  %97 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3288
  %delay_frames103 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %97, i32 0, i32 63, !dbg !3289
  %arrayidx104 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames103, i64 0, i64 0, !dbg !3288
  %98 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx104, align 8, !dbg !3288
  %avframe105 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %98, i32 0, i32 0, !dbg !3290
  %99 = load %struct.AVFrame*, %struct.AVFrame** %avframe105, align 8, !dbg !3290
  %display_picture_number106 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %99, i32 0, i32 14, !dbg !3291
  %100 = load i32, i32* %display_picture_number106, align 4, !dbg !3291
  store i32 %100, i32* %min_num, align 4, !dbg !3287
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3292
  %102 = bitcast %struct.AVCodecContext* %101 to i8*, !dbg !3292
  call void (i8*, i32, i8*, ...) @av_log(i8* %102, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0)), !dbg !3293
  store i32 1, i32* %i, align 4, !dbg !3294
  br label %for.cond107, !dbg !3296

for.cond107:                                      ; preds = %for.inc127, %if.then102
  %103 = load i32, i32* %i, align 4, !dbg !3297
  %idxprom108 = sext i32 %103 to i64, !dbg !3300
  %104 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3300
  %delay_frames109 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %104, i32 0, i32 63, !dbg !3301
  %arrayidx110 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames109, i64 0, i64 %idxprom108, !dbg !3300
  %105 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx110, align 8, !dbg !3300
  %tobool111 = icmp ne %struct.DiracFrame* %105, null, !dbg !3302
  br i1 %tobool111, label %for.body112, label %for.end129, !dbg !3302

for.body112:                                      ; preds = %for.cond107
  %106 = load i32, i32* %i, align 4, !dbg !3303
  %idxprom113 = sext i32 %106 to i64, !dbg !3305
  %107 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3305
  %delay_frames114 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %107, i32 0, i32 63, !dbg !3306
  %arrayidx115 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames114, i64 0, i64 %idxprom113, !dbg !3305
  %108 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx115, align 8, !dbg !3305
  %avframe116 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %108, i32 0, i32 0, !dbg !3307
  %109 = load %struct.AVFrame*, %struct.AVFrame** %avframe116, align 8, !dbg !3307
  %display_picture_number117 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %109, i32 0, i32 14, !dbg !3308
  %110 = load i32, i32* %display_picture_number117, align 4, !dbg !3308
  %111 = load i32, i32* %min_num, align 4, !dbg !3309
  %cmp118 = icmp slt i32 %110, %111, !dbg !3310
  br i1 %cmp118, label %if.then120, label %if.end126, !dbg !3311

if.then120:                                       ; preds = %for.body112
  %112 = load i32, i32* %i, align 4, !dbg !3312
  %idxprom121 = sext i32 %112 to i64, !dbg !3313
  %113 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3313
  %delay_frames122 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %113, i32 0, i32 63, !dbg !3314
  %arrayidx123 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames122, i64 0, i64 %idxprom121, !dbg !3313
  %114 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx123, align 8, !dbg !3313
  %avframe124 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %114, i32 0, i32 0, !dbg !3315
  %115 = load %struct.AVFrame*, %struct.AVFrame** %avframe124, align 8, !dbg !3315
  %display_picture_number125 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %115, i32 0, i32 14, !dbg !3316
  %116 = load i32, i32* %display_picture_number125, align 4, !dbg !3316
  store i32 %116, i32* %min_num, align 4, !dbg !3317
  br label %if.end126, !dbg !3318

if.end126:                                        ; preds = %if.then120, %for.body112
  br label %for.inc127, !dbg !3319

for.inc127:                                       ; preds = %if.end126
  %117 = load i32, i32* %i, align 4, !dbg !3321
  %inc128 = add nsw i32 %117, 1, !dbg !3321
  store i32 %inc128, i32* %i, align 4, !dbg !3321
  br label %for.cond107, !dbg !3323, !llvm.loop !3324

for.end129:                                       ; preds = %for.cond107
  %118 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3326
  %delay_frames130 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %118, i32 0, i32 63, !dbg !3327
  %arraydecay131 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames130, i32 0, i32 0, !dbg !3326
  %119 = load i32, i32* %min_num, align 4, !dbg !3328
  %call132 = call %struct.DiracFrame* @remove_frame(%struct.DiracFrame** %arraydecay131, i32 %119), !dbg !3329
  store %struct.DiracFrame* %call132, %struct.DiracFrame** %delayed_frame, align 8, !dbg !3330
  %120 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3331
  %delay_frames133 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %120, i32 0, i32 63, !dbg !3332
  %arraydecay134 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames133, i32 0, i32 0, !dbg !3331
  %121 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3333
  %current_picture135 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %121, i32 0, i32 60, !dbg !3334
  %122 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture135, align 8, !dbg !3334
  %call136 = call i32 @add_frame(%struct.DiracFrame** %arraydecay134, i32 5, %struct.DiracFrame* %122), !dbg !3335
  br label %if.end137, !dbg !3336

if.end137:                                        ; preds = %for.end129, %if.then90
  %123 = load %struct.DiracFrame*, %struct.DiracFrame** %delayed_frame, align 8, !dbg !3337
  %tobool138 = icmp ne %struct.DiracFrame* %123, null, !dbg !3337
  br i1 %tobool138, label %if.then139, label %if.end147, !dbg !3339

if.then139:                                       ; preds = %if.end137
  %124 = load %struct.DiracFrame*, %struct.DiracFrame** %delayed_frame, align 8, !dbg !3340
  %reference140 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %124, i32 0, i32 4, !dbg !3342
  %125 = load i32, i32* %reference140, align 8, !dbg !3343
  %xor = xor i32 %125, 4, !dbg !3343
  store i32 %xor, i32* %reference140, align 8, !dbg !3343
  %126 = load i8*, i8** %data.addr, align 8, !dbg !3344
  %127 = bitcast i8* %126 to %struct.AVFrame*, !dbg !3344
  %128 = load %struct.DiracFrame*, %struct.DiracFrame** %delayed_frame, align 8, !dbg !3346
  %avframe141 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %128, i32 0, i32 0, !dbg !3347
  %129 = load %struct.AVFrame*, %struct.AVFrame** %avframe141, align 8, !dbg !3347
  %call142 = call i32 @av_frame_ref(%struct.AVFrame* %127, %struct.AVFrame* %129), !dbg !3348
  store i32 %call142, i32* %ret, align 4, !dbg !3349
  %cmp143 = icmp slt i32 %call142, 0, !dbg !3350
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !3351

if.then145:                                       ; preds = %if.then139
  %130 = load i32, i32* %ret, align 4, !dbg !3352
  store i32 %130, i32* %retval, align 4, !dbg !3353
  br label %return, !dbg !3353

if.end146:                                        ; preds = %if.then139
  %131 = load i32*, i32** %got_frame.addr, align 8, !dbg !3354
  store i32 1, i32* %131, align 4, !dbg !3355
  br label %if.end147, !dbg !3356

if.end147:                                        ; preds = %if.end146, %if.end137
  br label %if.end164, !dbg !3357

if.else:                                          ; preds = %if.end84
  %132 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3358
  %current_picture148 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %132, i32 0, i32 60, !dbg !3361
  %133 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture148, align 8, !dbg !3361
  %avframe149 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %133, i32 0, i32 0, !dbg !3362
  %134 = load %struct.AVFrame*, %struct.AVFrame** %avframe149, align 8, !dbg !3362
  %display_picture_number150 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %134, i32 0, i32 14, !dbg !3363
  %135 = load i32, i32* %display_picture_number150, align 4, !dbg !3363
  %conv151 = sext i32 %135 to i64, !dbg !3358
  %136 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3364
  %frame_number152 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %136, i32 0, i32 9, !dbg !3365
  %137 = load i64, i64* %frame_number152, align 16, !dbg !3365
  %cmp153 = icmp eq i64 %conv151, %137, !dbg !3366
  br i1 %cmp153, label %if.then155, label %if.end163, !dbg !3358

if.then155:                                       ; preds = %if.else
  %138 = load i8*, i8** %data.addr, align 8, !dbg !3367
  %139 = bitcast i8* %138 to %struct.AVFrame*, !dbg !3367
  %140 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3370
  %current_picture156 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %140, i32 0, i32 60, !dbg !3371
  %141 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture156, align 8, !dbg !3371
  %avframe157 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %141, i32 0, i32 0, !dbg !3372
  %142 = load %struct.AVFrame*, %struct.AVFrame** %avframe157, align 8, !dbg !3372
  %call158 = call i32 @av_frame_ref(%struct.AVFrame* %139, %struct.AVFrame* %142), !dbg !3373
  store i32 %call158, i32* %ret, align 4, !dbg !3374
  %cmp159 = icmp slt i32 %call158, 0, !dbg !3375
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !3376

if.then161:                                       ; preds = %if.then155
  %143 = load i32, i32* %ret, align 4, !dbg !3377
  store i32 %143, i32* %retval, align 4, !dbg !3378
  br label %return, !dbg !3378

if.end162:                                        ; preds = %if.then155
  %144 = load i32*, i32** %got_frame.addr, align 8, !dbg !3379
  store i32 1, i32* %144, align 4, !dbg !3380
  br label %if.end163, !dbg !3381

if.end163:                                        ; preds = %if.end162, %if.else
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end147
  %145 = load i32*, i32** %got_frame.addr, align 8, !dbg !3382
  %146 = load i32, i32* %145, align 4, !dbg !3384
  %tobool165 = icmp ne i32 %146, 0, !dbg !3384
  br i1 %tobool165, label %if.then166, label %if.end171, !dbg !3385

if.then166:                                       ; preds = %if.end164
  %147 = load %struct.AVFrame*, %struct.AVFrame** %picture, align 8, !dbg !3386
  %display_picture_number167 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %147, i32 0, i32 14, !dbg !3387
  %148 = load i32, i32* %display_picture_number167, align 4, !dbg !3387
  %conv168 = sext i32 %148 to i64, !dbg !3386
  %add169 = add nsw i64 %conv168, 1, !dbg !3388
  %149 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3389
  %frame_number170 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %149, i32 0, i32 9, !dbg !3390
  store i64 %add169, i64* %frame_number170, align 16, !dbg !3391
  br label %if.end171, !dbg !3389

if.end171:                                        ; preds = %if.then166, %if.end164
  %150 = load i32, i32* %buf_idx, align 4, !dbg !3392
  store i32 %150, i32* %retval, align 4, !dbg !3393
  br label %return, !dbg !3393

return:                                           ; preds = %if.end171, %if.then161, %if.then145, %if.then83, %if.then76, %if.then16
  %151 = load i32, i32* %retval, align 4, !dbg !3394
  ret i32 %151, !dbg !3394
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @dirac_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3395 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.DiracContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3396, metadata !2947), !dbg !3397
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !3398, metadata !2947), !dbg !3399
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3400
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3401
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3401
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !3400
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !3399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3402, metadata !2947), !dbg !3403
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3404
  %reader_ctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %3, i32 0, i32 4, !dbg !3405
  call void @ff_dirac_golomb_reader_end(%struct.DiracGolombLUT** %reader_ctx), !dbg !3406
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3407
  call void @dirac_decode_flush(%struct.AVCodecContext* %4), !dbg !3408
  store i32 0, i32* %i, align 4, !dbg !3409
  br label %for.cond, !dbg !3411

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3412
  %cmp = icmp slt i32 %5, 14, !dbg !3415
  br i1 %cmp, label %for.body, label %for.end, !dbg !3416

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !3417
  %idxprom = sext i32 %6 to i64, !dbg !3418
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3418
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 64, !dbg !3419
  %arrayidx = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom, !dbg !3418
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx, i32 0, i32 0, !dbg !3420
  call void @av_frame_free(%struct.AVFrame** %avframe), !dbg !3421
  br label %for.inc, !dbg !3421

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !3422
  %inc = add nsw i32 %8, 1, !dbg !3422
  store i32 %inc, i32* %i, align 4, !dbg !3422
  br label %for.cond, !dbg !3424, !llvm.loop !3425

for.end:                                          ; preds = %for.cond
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3427
  %thread_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 30, !dbg !3428
  %10 = bitcast i8** %thread_buf to i8*, !dbg !3429
  call void @av_freep(i8* %10), !dbg !3430
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3431
  %slice_params_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 33, !dbg !3432
  %12 = bitcast %struct.DiracSlice** %slice_params_buf to i8*, !dbg !3433
  call void @av_freep(i8* %12), !dbg !3434
  ret i32 0, !dbg !3435
}

; Function Attrs: nounwind uwtable
define internal void @dirac_decode_flush(%struct.AVCodecContext* %avctx) #1 !dbg !3436 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.DiracContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3437, metadata !2947), !dbg !3438
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !3439, metadata !2947), !dbg !3440
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3441
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3442
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3442
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !3441
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !3440
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3443
  call void @free_sequence_buffers(%struct.DiracContext* %3), !dbg !3444
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3445
  %seen_sequence_header = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 8, !dbg !3446
  store i32 0, i32* %seen_sequence_header, align 8, !dbg !3447
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3448
  %frame_number = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 9, !dbg !3449
  store i64 -1, i64* %frame_number, align 16, !dbg !3450
  ret void, !dbg !3451
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i32 @ff_dirac_golomb_reader_init(%struct.DiracGolombLUT**) #3

declare void @ff_diracdsp_init(%struct.DiracDSPContext*) #3

declare void @ff_mpegvideoencdsp_init(%struct.MpegvideoEncDSPContext*, %struct.AVCodecContext*) #3

declare void @ff_videodsp_init(%struct.VideoDSPContext*, i32) #3

declare %struct.AVFrame* @av_frame_alloc() #3

declare void @av_frame_free(%struct.AVFrame**) #3

declare i32 @pthread_once(i32*, void ()*) #3

declare void @ff_dirac_init_arith_tables() #3

declare void @av_frame_unref(%struct.AVFrame*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @get_delayed_pic(%struct.DiracContext* %s, %struct.AVFrame* %picture, i32* %got_frame) #1 !dbg !3452 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %picture.addr = alloca %struct.AVFrame*, align 8
  %got_frame.addr = alloca i32*, align 8
  %out = alloca %struct.DiracFrame*, align 8
  %i = alloca i32, align 4
  %out_idx = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !3455, metadata !2947), !dbg !3456
  store %struct.AVFrame* %picture, %struct.AVFrame** %picture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picture.addr, metadata !3457, metadata !2947), !dbg !3458
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !3459, metadata !2947), !dbg !3460
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %out, metadata !3461, metadata !2947), !dbg !3462
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3463
  %delay_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 63, !dbg !3464
  %arrayidx = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames, i64 0, i64 0, !dbg !3463
  %1 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx, align 8, !dbg !3463
  store %struct.DiracFrame* %1, %struct.DiracFrame** %out, align 8, !dbg !3462
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3465, metadata !2947), !dbg !3466
  call void @llvm.dbg.declare(metadata i32* %out_idx, metadata !3467, metadata !2947), !dbg !3468
  store i32 0, i32* %out_idx, align 4, !dbg !3468
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3469, metadata !2947), !dbg !3470
  store i32 1, i32* %i, align 4, !dbg !3471
  br label %for.cond, !dbg !3473

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3474
  %idxprom = sext i32 %2 to i64, !dbg !3477
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3477
  %delay_frames1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %3, i32 0, i32 63, !dbg !3478
  %arrayidx2 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames1, i64 0, i64 %idxprom, !dbg !3477
  %4 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx2, align 8, !dbg !3477
  %tobool = icmp ne %struct.DiracFrame* %4, null, !dbg !3479
  br i1 %tobool, label %for.body, label %for.end, !dbg !3479

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !3480
  %idxprom3 = sext i32 %5 to i64, !dbg !3482
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3482
  %delay_frames4 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 63, !dbg !3483
  %arrayidx5 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames4, i64 0, i64 %idxprom3, !dbg !3482
  %7 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx5, align 8, !dbg !3482
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %7, i32 0, i32 0, !dbg !3484
  %8 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !3484
  %display_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 14, !dbg !3485
  %9 = load i32, i32* %display_picture_number, align 4, !dbg !3485
  %10 = load %struct.DiracFrame*, %struct.DiracFrame** %out, align 8, !dbg !3486
  %avframe6 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %10, i32 0, i32 0, !dbg !3487
  %11 = load %struct.AVFrame*, %struct.AVFrame** %avframe6, align 8, !dbg !3487
  %display_picture_number7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 14, !dbg !3488
  %12 = load i32, i32* %display_picture_number7, align 4, !dbg !3488
  %cmp = icmp slt i32 %9, %12, !dbg !3489
  br i1 %cmp, label %if.then, label %if.end, !dbg !3490

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !3491
  %idxprom8 = sext i32 %13 to i64, !dbg !3493
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3493
  %delay_frames9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 63, !dbg !3494
  %arrayidx10 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames9, i64 0, i64 %idxprom8, !dbg !3493
  %15 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx10, align 8, !dbg !3493
  store %struct.DiracFrame* %15, %struct.DiracFrame** %out, align 8, !dbg !3495
  %16 = load i32, i32* %i, align 4, !dbg !3496
  store i32 %16, i32* %out_idx, align 4, !dbg !3497
  br label %if.end, !dbg !3498

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3499

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !3501
  %inc = add nsw i32 %17, 1, !dbg !3501
  store i32 %inc, i32* %i, align 4, !dbg !3501
  br label %for.cond, !dbg !3503, !llvm.loop !3504

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %out_idx, align 4, !dbg !3506
  store i32 %18, i32* %i, align 4, !dbg !3508
  br label %for.cond11, !dbg !3509

for.cond11:                                       ; preds = %for.inc23, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !3510
  %idxprom12 = sext i32 %19 to i64, !dbg !3513
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3513
  %delay_frames13 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 63, !dbg !3514
  %arrayidx14 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames13, i64 0, i64 %idxprom12, !dbg !3513
  %21 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx14, align 8, !dbg !3513
  %tobool15 = icmp ne %struct.DiracFrame* %21, null, !dbg !3515
  br i1 %tobool15, label %for.body16, label %for.end25, !dbg !3515

for.body16:                                       ; preds = %for.cond11
  %22 = load i32, i32* %i, align 4, !dbg !3516
  %add = add nsw i32 %22, 1, !dbg !3517
  %idxprom17 = sext i32 %add to i64, !dbg !3518
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3518
  %delay_frames18 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 63, !dbg !3519
  %arrayidx19 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames18, i64 0, i64 %idxprom17, !dbg !3518
  %24 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx19, align 8, !dbg !3518
  %25 = load i32, i32* %i, align 4, !dbg !3520
  %idxprom20 = sext i32 %25 to i64, !dbg !3521
  %26 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !3521
  %delay_frames21 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %26, i32 0, i32 63, !dbg !3522
  %arrayidx22 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames21, i64 0, i64 %idxprom20, !dbg !3521
  store %struct.DiracFrame* %24, %struct.DiracFrame** %arrayidx22, align 8, !dbg !3523
  br label %for.inc23, !dbg !3521

for.inc23:                                        ; preds = %for.body16
  %27 = load i32, i32* %i, align 4, !dbg !3524
  %inc24 = add nsw i32 %27, 1, !dbg !3524
  store i32 %inc24, i32* %i, align 4, !dbg !3524
  br label %for.cond11, !dbg !3526, !llvm.loop !3527

for.end25:                                        ; preds = %for.cond11
  %28 = load %struct.DiracFrame*, %struct.DiracFrame** %out, align 8, !dbg !3529
  %tobool26 = icmp ne %struct.DiracFrame* %28, null, !dbg !3529
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !3531

if.then27:                                        ; preds = %for.end25
  %29 = load %struct.DiracFrame*, %struct.DiracFrame** %out, align 8, !dbg !3532
  %reference = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %29, i32 0, i32 4, !dbg !3534
  %30 = load i32, i32* %reference, align 8, !dbg !3535
  %xor = xor i32 %30, 4, !dbg !3535
  store i32 %xor, i32* %reference, align 8, !dbg !3535
  %31 = load %struct.AVFrame*, %struct.AVFrame** %picture.addr, align 8, !dbg !3536
  %32 = load %struct.DiracFrame*, %struct.DiracFrame** %out, align 8, !dbg !3538
  %avframe28 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %32, i32 0, i32 0, !dbg !3539
  %33 = load %struct.AVFrame*, %struct.AVFrame** %avframe28, align 8, !dbg !3539
  %call = call i32 @av_frame_ref(%struct.AVFrame* %31, %struct.AVFrame* %33), !dbg !3540
  store i32 %call, i32* %ret, align 4, !dbg !3541
  %cmp29 = icmp slt i32 %call, 0, !dbg !3542
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !3543

if.then30:                                        ; preds = %if.then27
  %34 = load i32, i32* %ret, align 4, !dbg !3544
  store i32 %34, i32* %retval, align 4, !dbg !3545
  br label %return, !dbg !3545

if.end31:                                         ; preds = %if.then27
  %35 = load i32*, i32** %got_frame.addr, align 8, !dbg !3546
  store i32 1, i32* %35, align 4, !dbg !3547
  br label %if.end32, !dbg !3548

if.end32:                                         ; preds = %if.end31, %for.end25
  store i32 0, i32* %retval, align 4, !dbg !3549
  br label %return, !dbg !3549

return:                                           ; preds = %if.end32, %if.then30
  %36 = load i32, i32* %retval, align 4, !dbg !3550
  ret i32 %36, !dbg !3550
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @dirac_decode_data_unit(%struct.AVCodecContext* %avctx, i8* %buf, i32 %size) #1 !dbg !3551 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %s = alloca %struct.DiracContext*, align 8
  %pic = alloca %struct.DiracFrame*, align 8
  %dsh = alloca %struct.AVDiracSeqHeader*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %parse_code = alloca i8, align 1
  %tmp = alloca i32, align 4
  %ver = alloca [3 x i32], align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3554, metadata !2947), !dbg !3555
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !3556, metadata !2947), !dbg !3557
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3558, metadata !2947), !dbg !3559
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !3560, metadata !2947), !dbg !3561
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3562
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3563
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3563
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !3562
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %pic, metadata !3564, metadata !2947), !dbg !3565
  store %struct.DiracFrame* null, %struct.DiracFrame** %pic, align 8, !dbg !3565
  call void @llvm.dbg.declare(metadata %struct.AVDiracSeqHeader** %dsh, metadata !3566, metadata !2947), !dbg !3568
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3569, metadata !2947), !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3571, metadata !2947), !dbg !3572
  call void @llvm.dbg.declare(metadata i8* %parse_code, metadata !3573, metadata !2947), !dbg !3574
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3575, metadata !2947), !dbg !3576
  %3 = load i32, i32* %size.addr, align 4, !dbg !3577
  %cmp = icmp slt i32 %3, 13, !dbg !3579
  br i1 %cmp, label %if.then, label %if.end, !dbg !3580

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !3581
  br label %return, !dbg !3581

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !3582
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 4, !dbg !3582
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3582
  store i8 %5, i8* %parse_code, align 1, !dbg !3583
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3584
  %gb = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 6, !dbg !3585
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !3586
  %arrayidx1 = getelementptr inbounds i8, i8* %7, i64 13, !dbg !3586
  %8 = load i32, i32* %size.addr, align 4, !dbg !3587
  %sub = sub nsw i32 %8, 13, !dbg !3588
  %mul = mul nsw i32 8, %sub, !dbg !3589
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %arrayidx1, i32 %mul), !dbg !3590
  %9 = load i8, i8* %parse_code, align 1, !dbg !3591
  %conv = zext i8 %9 to i32, !dbg !3591
  %cmp2 = icmp eq i32 %conv, 0, !dbg !3593
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !3594

if.then4:                                         ; preds = %if.end
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3595
  %seen_sequence_header = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 8, !dbg !3598
  %11 = load i32, i32* %seen_sequence_header, align 8, !dbg !3598
  %tobool = icmp ne i32 %11, 0, !dbg !3595
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !3599

if.then5:                                         ; preds = %if.then4
  store i32 0, i32* %retval, align 4, !dbg !3600
  br label %return, !dbg !3600

if.end6:                                          ; preds = %if.then4
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !3601
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 13, !dbg !3602
  %13 = load i32, i32* %size.addr, align 4, !dbg !3603
  %sub7 = sub nsw i32 %13, 13, !dbg !3604
  %conv8 = sext i32 %sub7 to i64, !dbg !3603
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3605
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !3605
  %call9 = call i32 @av_dirac_parse_sequence_header(%struct.AVDiracSeqHeader** %dsh, i8* %add.ptr, i64 %conv8, i8* %15), !dbg !3606
  store i32 %call9, i32* %ret, align 4, !dbg !3607
  %16 = load i32, i32* %ret, align 4, !dbg !3608
  %cmp10 = icmp slt i32 %16, 0, !dbg !3610
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3611

if.then12:                                        ; preds = %if.end6
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3612
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !3612
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i32 0, i32 0)), !dbg !3614
  %19 = load i32, i32* %ret, align 4, !dbg !3615
  store i32 %19, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

if.end13:                                         ; preds = %if.end6
  %20 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3617
  %width = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %20, i32 0, i32 0, !dbg !3619
  %21 = load i32, i32* %width, align 4, !dbg !3619
  %conv14 = zext i32 %21 to i64, !dbg !3620
  %add = add nsw i64 %conv14, 32, !dbg !3621
  %sub15 = sub nsw i64 %add, 1, !dbg !3622
  %shr = ashr i64 %sub15, 5, !dbg !3623
  %shl = shl i64 %shr, 5, !dbg !3624
  %22 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3625
  %height = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %22, i32 0, i32 1, !dbg !3626
  %23 = load i32, i32* %height, align 4, !dbg !3626
  %conv16 = zext i32 %23 to i64, !dbg !3627
  %add17 = add nsw i64 %conv16, 32, !dbg !3628
  %sub18 = sub nsw i64 %add17, 1, !dbg !3629
  %shr19 = ashr i64 %sub18, 5, !dbg !3630
  %shl20 = shl i64 %shr19, 5, !dbg !3631
  %mul21 = mul nsw i64 %shl, %shl20, !dbg !3632
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3633
  %max_pixels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 185, !dbg !3634
  %25 = load i64, i64* %max_pixels, align 8, !dbg !3634
  %cmp22 = icmp sgt i64 %mul21, %25, !dbg !3635
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3636

if.then24:                                        ; preds = %if.end13
  store i32 -34, i32* %ret, align 4, !dbg !3637
  br label %if.end25, !dbg !3638

if.end25:                                         ; preds = %if.then24, %if.end13
  %26 = load i32, i32* %ret, align 4, !dbg !3639
  %cmp26 = icmp sge i32 %26, 0, !dbg !3641
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !3642

if.then28:                                        ; preds = %if.end25
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3643
  %28 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3644
  %width29 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %28, i32 0, i32 0, !dbg !3645
  %29 = load i32, i32* %width29, align 4, !dbg !3645
  %30 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3646
  %height30 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %30, i32 0, i32 1, !dbg !3647
  %31 = load i32, i32* %height30, align 4, !dbg !3647
  %call31 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %27, i32 %29, i32 %31), !dbg !3648
  store i32 %call31, i32* %ret, align 4, !dbg !3649
  br label %if.end32, !dbg !3650

if.end32:                                         ; preds = %if.then28, %if.end25
  %32 = load i32, i32* %ret, align 4, !dbg !3651
  %cmp33 = icmp slt i32 %32, 0, !dbg !3653
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !3654

if.then35:                                        ; preds = %if.end32
  %33 = bitcast %struct.AVDiracSeqHeader** %dsh to i8*, !dbg !3655
  call void @av_freep(i8* %33), !dbg !3657
  %34 = load i32, i32* %ret, align 4, !dbg !3658
  store i32 %34, i32* %retval, align 4, !dbg !3659
  br label %return, !dbg !3659

if.end36:                                         ; preds = %if.end32
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3660
  %36 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3661
  %sample_aspect_ratio = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %36, i32 0, i32 16, !dbg !3662
  %37 = bitcast %struct.AVRational* %sample_aspect_ratio to i64*, !dbg !3663
  %38 = load i64, i64* %37, align 4, !dbg !3663
  %call37 = call i32 @ff_set_sar(%struct.AVCodecContext* %35, i64 %38), !dbg !3663
  %39 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3664
  %pix_fmt = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %39, i32 0, i32 17, !dbg !3665
  %40 = load i32, i32* %pix_fmt, align 4, !dbg !3665
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3666
  %pix_fmt38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 25, !dbg !3667
  store i32 %40, i32* %pix_fmt38, align 8, !dbg !3668
  %42 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3669
  %color_range = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %42, i32 0, i32 18, !dbg !3670
  %43 = load i32, i32* %color_range, align 4, !dbg !3670
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3671
  %color_range39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 78, !dbg !3672
  store i32 %43, i32* %color_range39, align 8, !dbg !3673
  %45 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3674
  %color_trc = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %45, i32 0, i32 20, !dbg !3675
  %46 = load i32, i32* %color_trc, align 4, !dbg !3675
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3676
  %color_trc40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 76, !dbg !3677
  store i32 %46, i32* %color_trc40, align 8, !dbg !3678
  %48 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3679
  %color_primaries = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %48, i32 0, i32 19, !dbg !3680
  %49 = load i32, i32* %color_primaries, align 4, !dbg !3680
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3681
  %color_primaries41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 75, !dbg !3682
  store i32 %49, i32* %color_primaries41, align 4, !dbg !3683
  %51 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3684
  %colorspace = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %51, i32 0, i32 21, !dbg !3685
  %52 = load i32, i32* %colorspace, align 4, !dbg !3685
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3686
  %colorspace42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 77, !dbg !3687
  store i32 %52, i32* %colorspace42, align 4, !dbg !3688
  %54 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3689
  %profile = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %54, i32 0, i32 13, !dbg !3690
  %55 = load i32, i32* %profile, align 4, !dbg !3690
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3691
  %profile43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 153, !dbg !3692
  store i32 %55, i32* %profile43, align 4, !dbg !3693
  %57 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3694
  %level = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %57, i32 0, i32 14, !dbg !3695
  %58 = load i32, i32* %level, align 4, !dbg !3695
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3696
  %level44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 154, !dbg !3697
  store i32 %58, i32* %level44, align 8, !dbg !3698
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3699
  %framerate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 163, !dbg !3700
  %61 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3701
  %framerate45 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %61, i32 0, i32 15, !dbg !3702
  %62 = bitcast %struct.AVRational* %framerate to i8*, !dbg !3702
  %63 = bitcast %struct.AVRational* %framerate45 to i8*, !dbg !3702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false), !dbg !3702
  %64 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3703
  %bit_depth = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %64, i32 0, i32 23, !dbg !3704
  %65 = load i32, i32* %bit_depth, align 4, !dbg !3704
  %66 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3705
  %bit_depth46 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %66, i32 0, i32 13, !dbg !3706
  store i32 %65, i32* %bit_depth46, align 16, !dbg !3707
  %67 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3708
  %version = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %67, i32 0, i32 22, !dbg !3709
  %major = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %version, i32 0, i32 0, !dbg !3710
  %68 = load i32, i32* %major, align 4, !dbg !3710
  %69 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3711
  %version47 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %69, i32 0, i32 5, !dbg !3712
  %major48 = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %version47, i32 0, i32 0, !dbg !3713
  store i32 %68, i32* %major48, align 16, !dbg !3714
  %70 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3715
  %version49 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %70, i32 0, i32 22, !dbg !3716
  %minor = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %version49, i32 0, i32 1, !dbg !3717
  %71 = load i32, i32* %minor, align 4, !dbg !3717
  %72 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3718
  %version50 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %72, i32 0, i32 5, !dbg !3719
  %minor51 = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %version50, i32 0, i32 1, !dbg !3720
  store i32 %71, i32* %minor51, align 4, !dbg !3721
  %73 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3722
  %seq = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %73, i32 0, i32 7, !dbg !3723
  %74 = load %struct.AVDiracSeqHeader*, %struct.AVDiracSeqHeader** %dsh, align 8, !dbg !3724
  %75 = bitcast %struct.AVDiracSeqHeader* %seq to i8*, !dbg !3725
  %76 = bitcast %struct.AVDiracSeqHeader* %74 to i8*, !dbg !3725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 80, i32 4, i1 false), !dbg !3725
  %77 = bitcast %struct.AVDiracSeqHeader** %dsh to i8*, !dbg !3726
  call void @av_freep(i8* %77), !dbg !3727
  %78 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3728
  %bit_depth52 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %78, i32 0, i32 13, !dbg !3729
  %79 = load i32, i32* %bit_depth52, align 16, !dbg !3729
  %cmp53 = icmp sgt i32 %79, 8, !dbg !3730
  %conv54 = zext i1 %cmp53 to i32, !dbg !3730
  %80 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3731
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %80, i32 0, i32 14, !dbg !3732
  store i32 %conv54, i32* %pshift, align 4, !dbg !3733
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3734
  %pix_fmt55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 25, !dbg !3735
  %82 = load i32, i32* %pix_fmt55, align 8, !dbg !3735
  %83 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3736
  %chroma_x_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %83, i32 0, i32 11, !dbg !3737
  %84 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3738
  %chroma_y_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %84, i32 0, i32 12, !dbg !3739
  %call56 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %82, i32* %chroma_x_shift, i32* %chroma_y_shift), !dbg !3740
  store i32 %call56, i32* %ret, align 4, !dbg !3741
  %85 = load i32, i32* %ret, align 4, !dbg !3742
  %cmp57 = icmp slt i32 %85, 0, !dbg !3744
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !3745

if.then59:                                        ; preds = %if.end36
  %86 = load i32, i32* %ret, align 4, !dbg !3746
  store i32 %86, i32* %retval, align 4, !dbg !3747
  br label %return, !dbg !3747

if.end60:                                         ; preds = %if.end36
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3748
  %call61 = call i32 @alloc_sequence_buffers(%struct.DiracContext* %87), !dbg !3749
  store i32 %call61, i32* %ret, align 4, !dbg !3750
  %88 = load i32, i32* %ret, align 4, !dbg !3751
  %cmp62 = icmp slt i32 %88, 0, !dbg !3753
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !3754

if.then64:                                        ; preds = %if.end60
  %89 = load i32, i32* %ret, align 4, !dbg !3755
  store i32 %89, i32* %retval, align 4, !dbg !3756
  br label %return, !dbg !3756

if.end65:                                         ; preds = %if.end60
  %90 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3757
  %seen_sequence_header66 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %90, i32 0, i32 8, !dbg !3758
  store i32 1, i32* %seen_sequence_header66, align 8, !dbg !3759
  br label %if.end412, !dbg !3760

if.else:                                          ; preds = %if.end
  %91 = load i8, i8* %parse_code, align 1, !dbg !3761
  %conv67 = zext i8 %91 to i32, !dbg !3761
  %cmp68 = icmp eq i32 %conv67, 16, !dbg !3764
  br i1 %cmp68, label %if.then70, label %if.else72, !dbg !3761

if.then70:                                        ; preds = %if.else
  %92 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3765
  call void @free_sequence_buffers(%struct.DiracContext* %92), !dbg !3767
  %93 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3768
  %seen_sequence_header71 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %93, i32 0, i32 8, !dbg !3769
  store i32 0, i32* %seen_sequence_header71, align 8, !dbg !3770
  br label %if.end411, !dbg !3771

if.else72:                                        ; preds = %if.else
  %94 = load i8, i8* %parse_code, align 1, !dbg !3772
  %conv73 = zext i8 %94 to i32, !dbg !3772
  %cmp74 = icmp eq i32 %conv73, 32, !dbg !3775
  br i1 %cmp74, label %if.then76, label %if.else106, !dbg !3772

if.then76:                                        ; preds = %if.else72
  %95 = load i8*, i8** %buf.addr, align 8, !dbg !3776
  %arrayidx77 = getelementptr inbounds i8, i8* %95, i64 13, !dbg !3776
  %96 = load i8, i8* %arrayidx77, align 1, !dbg !3776
  %conv78 = zext i8 %96 to i32, !dbg !3776
  %cmp79 = icmp eq i32 %conv78, 1, !dbg !3779
  br i1 %cmp79, label %if.then81, label %if.end105, !dbg !3780

if.then81:                                        ; preds = %if.then76
  call void @llvm.dbg.declare(metadata [3 x i32]* %ver, metadata !3781, metadata !2947), !dbg !3783
  %97 = load i8*, i8** %buf.addr, align 8, !dbg !3784
  %add.ptr83 = getelementptr inbounds i8, i8* %97, i64 14, !dbg !3786
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i32 0, i32 0, !dbg !3787
  %arraydecay84 = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i32 0, i32 0, !dbg !3788
  %add.ptr85 = getelementptr inbounds i32, i32* %arraydecay84, i64 1, !dbg !3789
  %arraydecay86 = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i32 0, i32 0, !dbg !3790
  %add.ptr87 = getelementptr inbounds i32, i32* %arraydecay86, i64 2, !dbg !3791
  %call88 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr83, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32* %arraydecay, i32* %add.ptr85, i32* %add.ptr87) #9, !dbg !3792
  %cmp89 = icmp eq i32 %call88, 3, !dbg !3793
  br i1 %cmp89, label %if.then91, label %if.end104, !dbg !3794

if.then91:                                        ; preds = %if.then81
  %arrayidx92 = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i64 0, i64 0, !dbg !3795
  %98 = load i32, i32* %arrayidx92, align 4, !dbg !3795
  %cmp93 = icmp eq i32 %98, 1, !dbg !3797
  br i1 %cmp93, label %land.lhs.true, label %if.end103, !dbg !3798

land.lhs.true:                                    ; preds = %if.then91
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i64 0, i64 1, !dbg !3799
  %99 = load i32, i32* %arrayidx95, align 4, !dbg !3799
  %cmp96 = icmp eq i32 %99, 0, !dbg !3801
  br i1 %cmp96, label %land.lhs.true98, label %if.end103, !dbg !3802

land.lhs.true98:                                  ; preds = %land.lhs.true
  %arrayidx99 = getelementptr inbounds [3 x i32], [3 x i32]* %ver, i64 0, i64 2, !dbg !3803
  %100 = load i32, i32* %arrayidx99, align 4, !dbg !3803
  %cmp100 = icmp sle i32 %100, 7, !dbg !3805
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !3806

if.then102:                                       ; preds = %land.lhs.true98
  %101 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3807
  %old_delta_quant = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %101, i32 0, i32 26, !dbg !3808
  store i32 1, i32* %old_delta_quant, align 4, !dbg !3809
  br label %if.end103, !dbg !3807

if.end103:                                        ; preds = %if.then102, %land.lhs.true98, %land.lhs.true, %if.then91
  br label %if.end104, !dbg !3810

if.end104:                                        ; preds = %if.end103, %if.then81
  br label %if.end105, !dbg !3812

if.end105:                                        ; preds = %if.end104, %if.then76
  br label %if.end410, !dbg !3813

if.else106:                                       ; preds = %if.else72
  %102 = load i8, i8* %parse_code, align 1, !dbg !3814
  %conv107 = zext i8 %102 to i32, !dbg !3814
  %and = and i32 %conv107, 8, !dbg !3817
  %tobool108 = icmp ne i32 %and, 0, !dbg !3817
  br i1 %tobool108, label %if.then109, label %if.end409, !dbg !3814

if.then109:                                       ; preds = %if.else106
  %103 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3818
  %seen_sequence_header110 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %103, i32 0, i32 8, !dbg !3821
  %104 = load i32, i32* %seen_sequence_header110, align 8, !dbg !3821
  %tobool111 = icmp ne i32 %104, 0, !dbg !3818
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !3822

if.then112:                                       ; preds = %if.then109
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3823
  %106 = bitcast %struct.AVCodecContext* %105 to i8*, !dbg !3823
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 48, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i32 0, i32 0)), !dbg !3825
  store i32 -1094995529, i32* %retval, align 4, !dbg !3826
  br label %return, !dbg !3826

if.end113:                                        ; preds = %if.then109
  store i32 0, i32* %i, align 4, !dbg !3827
  br label %for.cond, !dbg !3829

for.cond:                                         ; preds = %for.inc, %if.end113
  %107 = load i32, i32* %i, align 4, !dbg !3830
  %cmp114 = icmp slt i32 %107, 14, !dbg !3833
  br i1 %cmp114, label %for.body, label %for.end, !dbg !3834

for.body:                                         ; preds = %for.cond
  %108 = load i32, i32* %i, align 4, !dbg !3835
  %idxprom = sext i32 %108 to i64, !dbg !3837
  %109 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3837
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %109, i32 0, i32 64, !dbg !3838
  %arrayidx116 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom, !dbg !3837
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx116, i32 0, i32 0, !dbg !3839
  %110 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !3839
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %110, i32 0, i32 0, !dbg !3840
  %arrayidx117 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !3837
  %111 = load i8*, i8** %arrayidx117, align 8, !dbg !3837
  %cmp118 = icmp eq i8* %111, null, !dbg !3841
  br i1 %cmp118, label %if.then120, label %if.end124, !dbg !3842

if.then120:                                       ; preds = %for.body
  %112 = load i32, i32* %i, align 4, !dbg !3843
  %idxprom121 = sext i32 %112 to i64, !dbg !3844
  %113 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3844
  %all_frames122 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %113, i32 0, i32 64, !dbg !3845
  %arrayidx123 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames122, i64 0, i64 %idxprom121, !dbg !3844
  store %struct.DiracFrame* %arrayidx123, %struct.DiracFrame** %pic, align 8, !dbg !3846
  br label %if.end124, !dbg !3847

if.end124:                                        ; preds = %if.then120, %for.body
  br label %for.inc, !dbg !3848

for.inc:                                          ; preds = %if.end124
  %114 = load i32, i32* %i, align 4, !dbg !3850
  %inc = add nsw i32 %114, 1, !dbg !3850
  store i32 %inc, i32* %i, align 4, !dbg !3850
  br label %for.cond, !dbg !3852, !llvm.loop !3853

for.end:                                          ; preds = %for.cond
  %115 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3855
  %tobool125 = icmp ne %struct.DiracFrame* %115, null, !dbg !3855
  br i1 %tobool125, label %if.end127, label %if.then126, !dbg !3857

if.then126:                                       ; preds = %for.end
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3858
  %117 = bitcast %struct.AVCodecContext* %116 to i8*, !dbg !3858
  call void (i8*, i32, i8*, ...) @av_log(i8* %117, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0)), !dbg !3860
  store i32 -1094995529, i32* %retval, align 4, !dbg !3861
  br label %return, !dbg !3861

if.end127:                                        ; preds = %for.end
  %118 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3862
  %avframe128 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %118, i32 0, i32 0, !dbg !3863
  %119 = load %struct.AVFrame*, %struct.AVFrame** %avframe128, align 8, !dbg !3863
  call void @av_frame_unref(%struct.AVFrame* %119), !dbg !3864
  %120 = load i8, i8* %parse_code, align 1, !dbg !3865
  %conv129 = zext i8 %120 to i32, !dbg !3865
  %and130 = and i32 %conv129, 3, !dbg !3866
  store i32 %and130, i32* %tmp, align 4, !dbg !3867
  %121 = load i32, i32* %tmp, align 4, !dbg !3868
  %cmp131 = icmp ugt i32 %121, 2, !dbg !3870
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !3871

if.then133:                                       ; preds = %if.end127
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3872
  %123 = bitcast %struct.AVCodecContext* %122 to i8*, !dbg !3872
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0)), !dbg !3874
  store i32 -1094995529, i32* %retval, align 4, !dbg !3875
  br label %return, !dbg !3875

if.end134:                                        ; preds = %if.end127
  %124 = load i32, i32* %tmp, align 4, !dbg !3876
  %125 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3877
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %125, i32 0, i32 23, !dbg !3878
  store i32 %124, i32* %num_refs, align 8, !dbg !3879
  %126 = load i8, i8* %parse_code, align 1, !dbg !3880
  %conv135 = zext i8 %126 to i32, !dbg !3880
  %and136 = and i32 %conv135, 72, !dbg !3881
  %cmp137 = icmp eq i32 %and136, 8, !dbg !3882
  %conv138 = zext i1 %cmp137 to i32, !dbg !3882
  %127 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3883
  %is_arith = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %127, i32 0, i32 16, !dbg !3884
  store i32 %conv138, i32* %is_arith, align 4, !dbg !3885
  %128 = load i8, i8* %parse_code, align 1, !dbg !3886
  %conv139 = zext i8 %128 to i32, !dbg !3886
  %and140 = and i32 %conv139, 136, !dbg !3887
  %cmp141 = icmp eq i32 %and140, 136, !dbg !3888
  %conv142 = zext i1 %cmp141 to i32, !dbg !3888
  %129 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3889
  %low_delay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %129, i32 0, i32 18, !dbg !3890
  store i32 %conv142, i32* %low_delay, align 4, !dbg !3891
  %130 = load i8, i8* %parse_code, align 1, !dbg !3892
  %conv143 = zext i8 %130 to i32, !dbg !3892
  %and144 = and i32 %conv143, 136, !dbg !3893
  %cmp145 = icmp eq i32 %and144, 8, !dbg !3894
  %conv146 = zext i1 %cmp145 to i32, !dbg !3894
  %131 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3895
  %core_syntax = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %131, i32 0, i32 17, !dbg !3896
  store i32 %conv146, i32* %core_syntax, align 16, !dbg !3897
  %132 = load i8, i8* %parse_code, align 1, !dbg !3898
  %conv147 = zext i8 %132 to i32, !dbg !3898
  %and148 = and i32 %conv147, 248, !dbg !3899
  %cmp149 = icmp eq i32 %and148, 200, !dbg !3900
  %conv150 = zext i1 %cmp149 to i32, !dbg !3900
  %133 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3901
  %ld_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %133, i32 0, i32 20, !dbg !3902
  store i32 %conv150, i32* %ld_picture, align 4, !dbg !3903
  %134 = load i8, i8* %parse_code, align 1, !dbg !3904
  %conv151 = zext i8 %134 to i32, !dbg !3904
  %and152 = and i32 %conv151, 248, !dbg !3905
  %cmp153 = icmp eq i32 %and152, 232, !dbg !3906
  %conv154 = zext i1 %cmp153 to i32, !dbg !3906
  %135 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3907
  %hq_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %135, i32 0, i32 19, !dbg !3908
  store i32 %conv154, i32* %hq_picture, align 8, !dbg !3909
  %136 = load i8, i8* %parse_code, align 1, !dbg !3910
  %conv155 = zext i8 %136 to i32, !dbg !3910
  %and156 = and i32 %conv155, 40, !dbg !3911
  %cmp157 = icmp eq i32 %and156, 8, !dbg !3912
  %conv158 = zext i1 %cmp157 to i32, !dbg !3912
  %137 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3913
  %dc_prediction = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %137, i32 0, i32 21, !dbg !3914
  store i32 %conv158, i32* %dc_prediction, align 16, !dbg !3915
  %138 = load i8, i8* %parse_code, align 1, !dbg !3916
  %conv159 = zext i8 %138 to i32, !dbg !3916
  %and160 = and i32 %conv159, 12, !dbg !3917
  %cmp161 = icmp eq i32 %and160, 12, !dbg !3918
  %conv162 = zext i1 %cmp161 to i32, !dbg !3918
  %139 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3919
  %reference = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %139, i32 0, i32 4, !dbg !3920
  store i32 %conv162, i32* %reference, align 8, !dbg !3921
  %140 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3922
  %num_refs163 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %140, i32 0, i32 23, !dbg !3923
  %141 = load i32, i32* %num_refs163, align 8, !dbg !3923
  %cmp164 = icmp eq i32 %141, 0, !dbg !3924
  %conv165 = zext i1 %cmp164 to i32, !dbg !3924
  %142 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3925
  %avframe166 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %142, i32 0, i32 0, !dbg !3926
  %143 = load %struct.AVFrame*, %struct.AVFrame** %avframe166, align 8, !dbg !3926
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %143, i32 0, i32 7, !dbg !3927
  store i32 %conv165, i32* %key_frame, align 8, !dbg !3928
  %144 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3929
  %num_refs167 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %144, i32 0, i32 23, !dbg !3930
  %145 = load i32, i32* %num_refs167, align 8, !dbg !3930
  %add168 = add nsw i32 %145, 1, !dbg !3931
  %146 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3932
  %avframe169 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %146, i32 0, i32 0, !dbg !3933
  %147 = load %struct.AVFrame*, %struct.AVFrame** %avframe169, align 8, !dbg !3933
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %147, i32 0, i32 8, !dbg !3934
  store i32 %add168, i32* %pict_type, align 4, !dbg !3935
  %148 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3936
  %version170 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %148, i32 0, i32 5, !dbg !3938
  %minor171 = getelementptr inbounds %struct.DiracVersionInfo, %struct.DiracVersionInfo* %version170, i32 0, i32 1, !dbg !3939
  %149 = load i32, i32* %minor171, align 4, !dbg !3939
  %cmp172 = icmp eq i32 %149, 2, !dbg !3940
  br i1 %cmp172, label %land.lhs.true174, label %if.end180, !dbg !3941

land.lhs.true174:                                 ; preds = %if.end134
  %150 = load i8, i8* %parse_code, align 1, !dbg !3942
  %conv175 = zext i8 %150 to i32, !dbg !3942
  %cmp176 = icmp eq i32 %conv175, 136, !dbg !3944
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !3945

if.then178:                                       ; preds = %land.lhs.true174
  %151 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3946
  %ld_picture179 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %151, i32 0, i32 20, !dbg !3947
  store i32 1, i32* %ld_picture179, align 4, !dbg !3948
  br label %if.end180, !dbg !3946

if.end180:                                        ; preds = %if.then178, %land.lhs.true174, %if.end134
  %152 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3949
  %low_delay181 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %152, i32 0, i32 18, !dbg !3951
  %153 = load i32, i32* %low_delay181, align 4, !dbg !3951
  %tobool182 = icmp ne i32 %153, 0, !dbg !3949
  br i1 %tobool182, label %land.lhs.true183, label %if.end189, !dbg !3952

land.lhs.true183:                                 ; preds = %if.end180
  %154 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3953
  %ld_picture184 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %154, i32 0, i32 20, !dbg !3955
  %155 = load i32, i32* %ld_picture184, align 4, !dbg !3955
  %tobool185 = icmp ne i32 %155, 0, !dbg !3953
  br i1 %tobool185, label %if.end189, label %lor.lhs.false, !dbg !3956

lor.lhs.false:                                    ; preds = %land.lhs.true183
  %156 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3957
  %hq_picture186 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %156, i32 0, i32 19, !dbg !3959
  %157 = load i32, i32* %hq_picture186, align 8, !dbg !3959
  %tobool187 = icmp ne i32 %157, 0, !dbg !3957
  br i1 %tobool187, label %if.end189, label %if.then188, !dbg !3960

if.then188:                                       ; preds = %lor.lhs.false
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3961
  %159 = bitcast %struct.AVCodecContext* %158 to i8*, !dbg !3961
  call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0)), !dbg !3963
  store i32 -1094995529, i32* %retval, align 4, !dbg !3964
  br label %return, !dbg !3964

if.end189:                                        ; preds = %lor.lhs.false, %land.lhs.true183, %if.end180
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3965
  %161 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3967
  %avframe190 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %161, i32 0, i32 0, !dbg !3968
  %162 = load %struct.AVFrame*, %struct.AVFrame** %avframe190, align 8, !dbg !3968
  %163 = load i8, i8* %parse_code, align 1, !dbg !3969
  %conv191 = zext i8 %163 to i32, !dbg !3969
  %and192 = and i32 %conv191, 12, !dbg !3970
  %cmp193 = icmp eq i32 %and192, 12, !dbg !3971
  %cond = select i1 %cmp193, i32 1, i32 0, !dbg !3972
  %call195 = call i32 @get_buffer_with_edge(%struct.AVCodecContext* %160, %struct.AVFrame* %162, i32 %cond), !dbg !3973
  store i32 %call195, i32* %ret, align 4, !dbg !3974
  %cmp196 = icmp slt i32 %call195, 0, !dbg !3975
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !3976

if.then198:                                       ; preds = %if.end189
  %164 = load i32, i32* %ret, align 4, !dbg !3977
  store i32 %164, i32* %retval, align 4, !dbg !3978
  br label %return, !dbg !3978

if.end199:                                        ; preds = %if.end189
  %165 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3979
  %166 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3980
  %current_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %166, i32 0, i32 60, !dbg !3981
  store %struct.DiracFrame* %165, %struct.DiracFrame** %current_picture, align 8, !dbg !3982
  %167 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3983
  %avframe200 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %167, i32 0, i32 0, !dbg !3984
  %168 = load %struct.AVFrame*, %struct.AVFrame** %avframe200, align 8, !dbg !3984
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %168, i32 0, i32 1, !dbg !3985
  %arrayidx201 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !3983
  %169 = load i32, i32* %arrayidx201, align 8, !dbg !3983
  %conv202 = sext i32 %169 to i64, !dbg !3983
  %170 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3986
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %170, i32 0, i32 10, !dbg !3987
  %arrayidx203 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 0, !dbg !3986
  %stride = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx203, i32 0, i32 3, !dbg !3988
  store i64 %conv202, i64* %stride, align 8, !dbg !3989
  %171 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3990
  %avframe204 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %171, i32 0, i32 0, !dbg !3991
  %172 = load %struct.AVFrame*, %struct.AVFrame** %avframe204, align 8, !dbg !3991
  %linesize205 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %172, i32 0, i32 1, !dbg !3992
  %arrayidx206 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize205, i64 0, i64 1, !dbg !3990
  %173 = load i32, i32* %arrayidx206, align 4, !dbg !3990
  %conv207 = sext i32 %173 to i64, !dbg !3990
  %174 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !3993
  %plane208 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %174, i32 0, i32 10, !dbg !3994
  %arrayidx209 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane208, i64 0, i64 1, !dbg !3993
  %stride210 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx209, i32 0, i32 3, !dbg !3995
  store i64 %conv207, i64* %stride210, align 8, !dbg !3996
  %175 = load %struct.DiracFrame*, %struct.DiracFrame** %pic, align 8, !dbg !3997
  %avframe211 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %175, i32 0, i32 0, !dbg !3998
  %176 = load %struct.AVFrame*, %struct.AVFrame** %avframe211, align 8, !dbg !3998
  %linesize212 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %176, i32 0, i32 1, !dbg !3999
  %arrayidx213 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize212, i64 0, i64 2, !dbg !3997
  %177 = load i32, i32* %arrayidx213, align 8, !dbg !3997
  %conv214 = sext i32 %177 to i64, !dbg !3997
  %178 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4000
  %plane215 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %178, i32 0, i32 10, !dbg !4001
  %arrayidx216 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane215, i64 0, i64 2, !dbg !4000
  %stride217 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx216, i32 0, i32 3, !dbg !4002
  store i64 %conv214, i64* %stride217, align 8, !dbg !4003
  %179 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4004
  %180 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4006
  %plane218 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %180, i32 0, i32 10, !dbg !4007
  %arrayidx219 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane218, i64 0, i64 0, !dbg !4006
  %stride220 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx219, i32 0, i32 3, !dbg !4008
  %181 = load i64, i64* %stride220, align 8, !dbg !4008
  %cmp221 = icmp sge i64 %181, 0, !dbg !4009
  br i1 %cmp221, label %cond.true, label %cond.false, !dbg !4010

cond.true:                                        ; preds = %if.end199
  %182 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4011
  %plane223 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %182, i32 0, i32 10, !dbg !4013
  %arrayidx224 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane223, i64 0, i64 0, !dbg !4011
  %stride225 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx224, i32 0, i32 3, !dbg !4014
  %183 = load i64, i64* %stride225, align 8, !dbg !4014
  br label %cond.end, !dbg !4015

cond.false:                                       ; preds = %if.end199
  %184 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4016
  %plane226 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %184, i32 0, i32 10, !dbg !4018
  %arrayidx227 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane226, i64 0, i64 0, !dbg !4016
  %stride228 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx227, i32 0, i32 3, !dbg !4019
  %185 = load i64, i64* %stride228, align 8, !dbg !4019
  %sub229 = sub nsw i64 0, %185, !dbg !4020
  br label %cond.end, !dbg !4021

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond230 = phi i64 [ %183, %cond.true ], [ %sub229, %cond.false ], !dbg !4022
  %186 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4024
  %plane231 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %186, i32 0, i32 10, !dbg !4025
  %arrayidx232 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane231, i64 0, i64 1, !dbg !4024
  %stride233 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx232, i32 0, i32 3, !dbg !4026
  %187 = load i64, i64* %stride233, align 8, !dbg !4026
  %cmp234 = icmp sge i64 %187, 0, !dbg !4027
  br i1 %cmp234, label %cond.true236, label %cond.false240, !dbg !4028

cond.true236:                                     ; preds = %cond.end
  %188 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4029
  %plane237 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %188, i32 0, i32 10, !dbg !4031
  %arrayidx238 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane237, i64 0, i64 1, !dbg !4029
  %stride239 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx238, i32 0, i32 3, !dbg !4032
  %189 = load i64, i64* %stride239, align 8, !dbg !4032
  br label %cond.end245, !dbg !4033

cond.false240:                                    ; preds = %cond.end
  %190 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4034
  %plane241 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %190, i32 0, i32 10, !dbg !4036
  %arrayidx242 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane241, i64 0, i64 1, !dbg !4034
  %stride243 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx242, i32 0, i32 3, !dbg !4037
  %191 = load i64, i64* %stride243, align 8, !dbg !4037
  %sub244 = sub nsw i64 0, %191, !dbg !4038
  br label %cond.end245, !dbg !4039

cond.end245:                                      ; preds = %cond.false240, %cond.true236
  %cond246 = phi i64 [ %189, %cond.true236 ], [ %sub244, %cond.false240 ], !dbg !4040
  %cmp247 = icmp sgt i64 %cond230, %cond246, !dbg !4042
  br i1 %cmp247, label %cond.true249, label %cond.false266, !dbg !4043

cond.true249:                                     ; preds = %cond.end245
  %192 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4044
  %plane250 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %192, i32 0, i32 10, !dbg !4046
  %arrayidx251 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane250, i64 0, i64 0, !dbg !4044
  %stride252 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx251, i32 0, i32 3, !dbg !4047
  %193 = load i64, i64* %stride252, align 8, !dbg !4047
  %cmp253 = icmp sge i64 %193, 0, !dbg !4048
  br i1 %cmp253, label %cond.true255, label %cond.false259, !dbg !4049

cond.true255:                                     ; preds = %cond.true249
  %194 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4050
  %plane256 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %194, i32 0, i32 10, !dbg !4052
  %arrayidx257 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane256, i64 0, i64 0, !dbg !4050
  %stride258 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx257, i32 0, i32 3, !dbg !4053
  %195 = load i64, i64* %stride258, align 8, !dbg !4053
  br label %cond.end264, !dbg !4054

cond.false259:                                    ; preds = %cond.true249
  %196 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4055
  %plane260 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %196, i32 0, i32 10, !dbg !4057
  %arrayidx261 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane260, i64 0, i64 0, !dbg !4055
  %stride262 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx261, i32 0, i32 3, !dbg !4058
  %197 = load i64, i64* %stride262, align 8, !dbg !4058
  %sub263 = sub nsw i64 0, %197, !dbg !4059
  br label %cond.end264, !dbg !4060

cond.end264:                                      ; preds = %cond.false259, %cond.true255
  %cond265 = phi i64 [ %195, %cond.true255 ], [ %sub263, %cond.false259 ], !dbg !4061
  br label %cond.end283, !dbg !4063

cond.false266:                                    ; preds = %cond.end245
  %198 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4064
  %plane267 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %198, i32 0, i32 10, !dbg !4066
  %arrayidx268 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane267, i64 0, i64 1, !dbg !4064
  %stride269 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx268, i32 0, i32 3, !dbg !4067
  %199 = load i64, i64* %stride269, align 8, !dbg !4067
  %cmp270 = icmp sge i64 %199, 0, !dbg !4068
  br i1 %cmp270, label %cond.true272, label %cond.false276, !dbg !4069

cond.true272:                                     ; preds = %cond.false266
  %200 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4070
  %plane273 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %200, i32 0, i32 10, !dbg !4072
  %arrayidx274 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane273, i64 0, i64 1, !dbg !4070
  %stride275 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx274, i32 0, i32 3, !dbg !4073
  %201 = load i64, i64* %stride275, align 8, !dbg !4073
  br label %cond.end281, !dbg !4074

cond.false276:                                    ; preds = %cond.false266
  %202 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4075
  %plane277 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %202, i32 0, i32 10, !dbg !4077
  %arrayidx278 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane277, i64 0, i64 1, !dbg !4075
  %stride279 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx278, i32 0, i32 3, !dbg !4078
  %203 = load i64, i64* %stride279, align 8, !dbg !4078
  %sub280 = sub nsw i64 0, %203, !dbg !4079
  br label %cond.end281, !dbg !4080

cond.end281:                                      ; preds = %cond.false276, %cond.true272
  %cond282 = phi i64 [ %201, %cond.true272 ], [ %sub280, %cond.false276 ], !dbg !4081
  br label %cond.end283, !dbg !4083

cond.end283:                                      ; preds = %cond.end281, %cond.end264
  %cond284 = phi i64 [ %cond265, %cond.end264 ], [ %cond282, %cond.end281 ], !dbg !4084
  %204 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4086
  %plane285 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %204, i32 0, i32 10, !dbg !4087
  %arrayidx286 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane285, i64 0, i64 2, !dbg !4086
  %stride287 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx286, i32 0, i32 3, !dbg !4088
  %205 = load i64, i64* %stride287, align 8, !dbg !4088
  %cmp288 = icmp sge i64 %205, 0, !dbg !4089
  br i1 %cmp288, label %cond.true290, label %cond.false294, !dbg !4090

cond.true290:                                     ; preds = %cond.end283
  %206 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4091
  %plane291 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %206, i32 0, i32 10, !dbg !4093
  %arrayidx292 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane291, i64 0, i64 2, !dbg !4091
  %stride293 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx292, i32 0, i32 3, !dbg !4094
  %207 = load i64, i64* %stride293, align 8, !dbg !4094
  br label %cond.end299, !dbg !4095

cond.false294:                                    ; preds = %cond.end283
  %208 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4096
  %plane295 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %208, i32 0, i32 10, !dbg !4098
  %arrayidx296 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane295, i64 0, i64 2, !dbg !4096
  %stride297 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx296, i32 0, i32 3, !dbg !4099
  %209 = load i64, i64* %stride297, align 8, !dbg !4099
  %sub298 = sub nsw i64 0, %209, !dbg !4100
  br label %cond.end299, !dbg !4101

cond.end299:                                      ; preds = %cond.false294, %cond.true290
  %cond300 = phi i64 [ %207, %cond.true290 ], [ %sub298, %cond.false294 ], !dbg !4102
  %cmp301 = icmp sgt i64 %cond284, %cond300, !dbg !4104
  br i1 %cmp301, label %cond.true303, label %cond.false374, !dbg !4105

cond.true303:                                     ; preds = %cond.end299
  %210 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4106
  %plane304 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %210, i32 0, i32 10, !dbg !4108
  %arrayidx305 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane304, i64 0, i64 0, !dbg !4106
  %stride306 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx305, i32 0, i32 3, !dbg !4109
  %211 = load i64, i64* %stride306, align 8, !dbg !4109
  %cmp307 = icmp sge i64 %211, 0, !dbg !4110
  br i1 %cmp307, label %cond.true309, label %cond.false313, !dbg !4111

cond.true309:                                     ; preds = %cond.true303
  %212 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4112
  %plane310 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %212, i32 0, i32 10, !dbg !4114
  %arrayidx311 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane310, i64 0, i64 0, !dbg !4112
  %stride312 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx311, i32 0, i32 3, !dbg !4115
  %213 = load i64, i64* %stride312, align 8, !dbg !4115
  br label %cond.end318, !dbg !4116

cond.false313:                                    ; preds = %cond.true303
  %214 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4117
  %plane314 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %214, i32 0, i32 10, !dbg !4119
  %arrayidx315 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane314, i64 0, i64 0, !dbg !4117
  %stride316 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx315, i32 0, i32 3, !dbg !4120
  %215 = load i64, i64* %stride316, align 8, !dbg !4120
  %sub317 = sub nsw i64 0, %215, !dbg !4121
  br label %cond.end318, !dbg !4122

cond.end318:                                      ; preds = %cond.false313, %cond.true309
  %cond319 = phi i64 [ %213, %cond.true309 ], [ %sub317, %cond.false313 ], !dbg !4123
  %216 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4125
  %plane320 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %216, i32 0, i32 10, !dbg !4126
  %arrayidx321 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane320, i64 0, i64 1, !dbg !4125
  %stride322 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx321, i32 0, i32 3, !dbg !4127
  %217 = load i64, i64* %stride322, align 8, !dbg !4127
  %cmp323 = icmp sge i64 %217, 0, !dbg !4128
  br i1 %cmp323, label %cond.true325, label %cond.false329, !dbg !4129

cond.true325:                                     ; preds = %cond.end318
  %218 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4130
  %plane326 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %218, i32 0, i32 10, !dbg !4132
  %arrayidx327 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane326, i64 0, i64 1, !dbg !4130
  %stride328 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx327, i32 0, i32 3, !dbg !4133
  %219 = load i64, i64* %stride328, align 8, !dbg !4133
  br label %cond.end334, !dbg !4134

cond.false329:                                    ; preds = %cond.end318
  %220 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4135
  %plane330 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %220, i32 0, i32 10, !dbg !4137
  %arrayidx331 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane330, i64 0, i64 1, !dbg !4135
  %stride332 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx331, i32 0, i32 3, !dbg !4138
  %221 = load i64, i64* %stride332, align 8, !dbg !4138
  %sub333 = sub nsw i64 0, %221, !dbg !4139
  br label %cond.end334, !dbg !4140

cond.end334:                                      ; preds = %cond.false329, %cond.true325
  %cond335 = phi i64 [ %219, %cond.true325 ], [ %sub333, %cond.false329 ], !dbg !4141
  %cmp336 = icmp sgt i64 %cond319, %cond335, !dbg !4143
  br i1 %cmp336, label %cond.true338, label %cond.false355, !dbg !4144

cond.true338:                                     ; preds = %cond.end334
  %222 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4145
  %plane339 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %222, i32 0, i32 10, !dbg !4147
  %arrayidx340 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane339, i64 0, i64 0, !dbg !4145
  %stride341 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx340, i32 0, i32 3, !dbg !4148
  %223 = load i64, i64* %stride341, align 8, !dbg !4148
  %cmp342 = icmp sge i64 %223, 0, !dbg !4149
  br i1 %cmp342, label %cond.true344, label %cond.false348, !dbg !4150

cond.true344:                                     ; preds = %cond.true338
  %224 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4151
  %plane345 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %224, i32 0, i32 10, !dbg !4153
  %arrayidx346 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane345, i64 0, i64 0, !dbg !4151
  %stride347 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx346, i32 0, i32 3, !dbg !4154
  %225 = load i64, i64* %stride347, align 8, !dbg !4154
  br label %cond.end353, !dbg !4155

cond.false348:                                    ; preds = %cond.true338
  %226 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4156
  %plane349 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %226, i32 0, i32 10, !dbg !4158
  %arrayidx350 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane349, i64 0, i64 0, !dbg !4156
  %stride351 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx350, i32 0, i32 3, !dbg !4159
  %227 = load i64, i64* %stride351, align 8, !dbg !4159
  %sub352 = sub nsw i64 0, %227, !dbg !4160
  br label %cond.end353, !dbg !4161

cond.end353:                                      ; preds = %cond.false348, %cond.true344
  %cond354 = phi i64 [ %225, %cond.true344 ], [ %sub352, %cond.false348 ], !dbg !4162
  br label %cond.end372, !dbg !4164

cond.false355:                                    ; preds = %cond.end334
  %228 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4165
  %plane356 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %228, i32 0, i32 10, !dbg !4167
  %arrayidx357 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane356, i64 0, i64 1, !dbg !4165
  %stride358 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx357, i32 0, i32 3, !dbg !4168
  %229 = load i64, i64* %stride358, align 8, !dbg !4168
  %cmp359 = icmp sge i64 %229, 0, !dbg !4169
  br i1 %cmp359, label %cond.true361, label %cond.false365, !dbg !4170

cond.true361:                                     ; preds = %cond.false355
  %230 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4171
  %plane362 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %230, i32 0, i32 10, !dbg !4173
  %arrayidx363 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane362, i64 0, i64 1, !dbg !4171
  %stride364 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx363, i32 0, i32 3, !dbg !4174
  %231 = load i64, i64* %stride364, align 8, !dbg !4174
  br label %cond.end370, !dbg !4175

cond.false365:                                    ; preds = %cond.false355
  %232 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4176
  %plane366 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %232, i32 0, i32 10, !dbg !4178
  %arrayidx367 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane366, i64 0, i64 1, !dbg !4176
  %stride368 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx367, i32 0, i32 3, !dbg !4179
  %233 = load i64, i64* %stride368, align 8, !dbg !4179
  %sub369 = sub nsw i64 0, %233, !dbg !4180
  br label %cond.end370, !dbg !4181

cond.end370:                                      ; preds = %cond.false365, %cond.true361
  %cond371 = phi i64 [ %231, %cond.true361 ], [ %sub369, %cond.false365 ], !dbg !4182
  br label %cond.end372, !dbg !4184

cond.end372:                                      ; preds = %cond.end370, %cond.end353
  %cond373 = phi i64 [ %cond354, %cond.end353 ], [ %cond371, %cond.end370 ], !dbg !4185
  br label %cond.end391, !dbg !4187

cond.false374:                                    ; preds = %cond.end299
  %234 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4188
  %plane375 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %234, i32 0, i32 10, !dbg !4190
  %arrayidx376 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane375, i64 0, i64 2, !dbg !4188
  %stride377 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx376, i32 0, i32 3, !dbg !4191
  %235 = load i64, i64* %stride377, align 8, !dbg !4191
  %cmp378 = icmp sge i64 %235, 0, !dbg !4192
  br i1 %cmp378, label %cond.true380, label %cond.false384, !dbg !4193

cond.true380:                                     ; preds = %cond.false374
  %236 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4194
  %plane381 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %236, i32 0, i32 10, !dbg !4196
  %arrayidx382 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane381, i64 0, i64 2, !dbg !4194
  %stride383 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx382, i32 0, i32 3, !dbg !4197
  %237 = load i64, i64* %stride383, align 8, !dbg !4197
  br label %cond.end389, !dbg !4198

cond.false384:                                    ; preds = %cond.false374
  %238 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4199
  %plane385 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %238, i32 0, i32 10, !dbg !4201
  %arrayidx386 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane385, i64 0, i64 2, !dbg !4199
  %stride387 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx386, i32 0, i32 3, !dbg !4202
  %239 = load i64, i64* %stride387, align 8, !dbg !4202
  %sub388 = sub nsw i64 0, %239, !dbg !4203
  br label %cond.end389, !dbg !4204

cond.end389:                                      ; preds = %cond.false384, %cond.true380
  %cond390 = phi i64 [ %237, %cond.true380 ], [ %sub388, %cond.false384 ], !dbg !4205
  br label %cond.end391, !dbg !4207

cond.end391:                                      ; preds = %cond.end389, %cond.end372
  %cond392 = phi i64 [ %cond373, %cond.end372 ], [ %cond390, %cond.end389 ], !dbg !4208
  %conv393 = trunc i64 %cond392 to i32, !dbg !4210
  %call394 = call i32 @alloc_buffers(%struct.DiracContext* %179, i32 %conv393), !dbg !4211
  %cmp395 = icmp slt i32 %call394, 0, !dbg !4212
  br i1 %cmp395, label %if.then397, label %if.end398, !dbg !4211

if.then397:                                       ; preds = %cond.end391
  store i32 -12, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

if.end398:                                        ; preds = %cond.end391
  %240 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4214
  %call399 = call i32 @dirac_decode_picture_header(%struct.DiracContext* %240), !dbg !4215
  store i32 %call399, i32* %ret, align 4, !dbg !4216
  %241 = load i32, i32* %ret, align 4, !dbg !4217
  %cmp400 = icmp slt i32 %241, 0, !dbg !4219
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !4220

if.then402:                                       ; preds = %if.end398
  %242 = load i32, i32* %ret, align 4, !dbg !4221
  store i32 %242, i32* %retval, align 4, !dbg !4222
  br label %return, !dbg !4222

if.end403:                                        ; preds = %if.end398
  %243 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !4223
  %call404 = call i32 @dirac_decode_frame_internal(%struct.DiracContext* %243), !dbg !4224
  store i32 %call404, i32* %ret, align 4, !dbg !4225
  %244 = load i32, i32* %ret, align 4, !dbg !4226
  %cmp405 = icmp slt i32 %244, 0, !dbg !4228
  br i1 %cmp405, label %if.then407, label %if.end408, !dbg !4229

if.then407:                                       ; preds = %if.end403
  %245 = load i32, i32* %ret, align 4, !dbg !4230
  store i32 %245, i32* %retval, align 4, !dbg !4231
  br label %return, !dbg !4231

if.end408:                                        ; preds = %if.end403
  br label %if.end409, !dbg !4232

if.end409:                                        ; preds = %if.end408, %if.else106
  br label %if.end410

if.end410:                                        ; preds = %if.end409, %if.end105
  br label %if.end411

if.end411:                                        ; preds = %if.end410, %if.then70
  br label %if.end412

if.end412:                                        ; preds = %if.end411, %if.end65
  store i32 0, i32* %retval, align 4, !dbg !4233
  br label %return, !dbg !4233

return:                                           ; preds = %if.end412, %if.then407, %if.then402, %if.then397, %if.then198, %if.then188, %if.then133, %if.then126, %if.then112, %if.then64, %if.then59, %if.then35, %if.then12, %if.then5, %if.then
  %246 = load i32, i32* %retval, align 4, !dbg !4234
  ret i32 %246, !dbg !4234
}

; Function Attrs: nounwind uwtable
define internal %struct.DiracFrame* @remove_frame(%struct.DiracFrame** %framelist, i32 %picnum) #1 !dbg !4235 {
entry:
  %framelist.addr = alloca %struct.DiracFrame**, align 8
  %picnum.addr = alloca i32, align 4
  %remove_pic = alloca %struct.DiracFrame*, align 8
  %i = alloca i32, align 4
  %remove_idx = alloca i32, align 4
  store %struct.DiracFrame** %framelist, %struct.DiracFrame*** %framelist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracFrame*** %framelist.addr, metadata !4239, metadata !2947), !dbg !4240
  store i32 %picnum, i32* %picnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %picnum.addr, metadata !4241, metadata !2947), !dbg !4242
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %remove_pic, metadata !4243, metadata !2947), !dbg !4244
  store %struct.DiracFrame* null, %struct.DiracFrame** %remove_pic, align 8, !dbg !4244
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4245, metadata !2947), !dbg !4246
  call void @llvm.dbg.declare(metadata i32* %remove_idx, metadata !4247, metadata !2947), !dbg !4248
  store i32 -1, i32* %remove_idx, align 4, !dbg !4248
  store i32 0, i32* %i, align 4, !dbg !4249
  br label %for.cond, !dbg !4251

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4252
  %idxprom = sext i32 %0 to i64, !dbg !4255
  %1 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4255
  %arrayidx = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %1, i64 %idxprom, !dbg !4255
  %2 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx, align 8, !dbg !4255
  %tobool = icmp ne %struct.DiracFrame* %2, null, !dbg !4256
  br i1 %tobool, label %for.body, label %for.end, !dbg !4256

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4257
  %idxprom1 = sext i32 %3 to i64, !dbg !4259
  %4 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4259
  %arrayidx2 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %4, i64 %idxprom1, !dbg !4259
  %5 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx2, align 8, !dbg !4259
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %5, i32 0, i32 0, !dbg !4260
  %6 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !4260
  %display_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 14, !dbg !4261
  %7 = load i32, i32* %display_picture_number, align 4, !dbg !4261
  %8 = load i32, i32* %picnum.addr, align 4, !dbg !4262
  %cmp = icmp eq i32 %7, %8, !dbg !4263
  br i1 %cmp, label %if.then, label %if.end, !dbg !4264

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !4265
  %idxprom3 = sext i32 %9 to i64, !dbg !4267
  %10 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4267
  %arrayidx4 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %10, i64 %idxprom3, !dbg !4267
  %11 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx4, align 8, !dbg !4267
  store %struct.DiracFrame* %11, %struct.DiracFrame** %remove_pic, align 8, !dbg !4268
  %12 = load i32, i32* %i, align 4, !dbg !4269
  store i32 %12, i32* %remove_idx, align 4, !dbg !4270
  br label %if.end, !dbg !4271

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4272

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !4274
  %inc = add nsw i32 %13, 1, !dbg !4274
  store i32 %inc, i32* %i, align 4, !dbg !4274
  br label %for.cond, !dbg !4276, !llvm.loop !4277

for.end:                                          ; preds = %for.cond
  %14 = load %struct.DiracFrame*, %struct.DiracFrame** %remove_pic, align 8, !dbg !4279
  %tobool5 = icmp ne %struct.DiracFrame* %14, null, !dbg !4279
  br i1 %tobool5, label %if.then6, label %if.end19, !dbg !4281

if.then6:                                         ; preds = %for.end
  %15 = load i32, i32* %remove_idx, align 4, !dbg !4282
  store i32 %15, i32* %i, align 4, !dbg !4284
  br label %for.cond7, !dbg !4285

for.cond7:                                        ; preds = %for.inc16, %if.then6
  %16 = load i32, i32* %i, align 4, !dbg !4286
  %idxprom8 = sext i32 %16 to i64, !dbg !4289
  %17 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4289
  %arrayidx9 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %17, i64 %idxprom8, !dbg !4289
  %18 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx9, align 8, !dbg !4289
  %tobool10 = icmp ne %struct.DiracFrame* %18, null, !dbg !4290
  br i1 %tobool10, label %for.body11, label %for.end18, !dbg !4290

for.body11:                                       ; preds = %for.cond7
  %19 = load i32, i32* %i, align 4, !dbg !4291
  %add = add nsw i32 %19, 1, !dbg !4292
  %idxprom12 = sext i32 %add to i64, !dbg !4293
  %20 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4293
  %arrayidx13 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %20, i64 %idxprom12, !dbg !4293
  %21 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx13, align 8, !dbg !4293
  %22 = load i32, i32* %i, align 4, !dbg !4294
  %idxprom14 = sext i32 %22 to i64, !dbg !4295
  %23 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4295
  %arrayidx15 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %23, i64 %idxprom14, !dbg !4295
  store %struct.DiracFrame* %21, %struct.DiracFrame** %arrayidx15, align 8, !dbg !4296
  br label %for.inc16, !dbg !4295

for.inc16:                                        ; preds = %for.body11
  %24 = load i32, i32* %i, align 4, !dbg !4297
  %inc17 = add nsw i32 %24, 1, !dbg !4297
  store i32 %inc17, i32* %i, align 4, !dbg !4297
  br label %for.cond7, !dbg !4299, !llvm.loop !4300

for.end18:                                        ; preds = %for.cond7
  br label %if.end19, !dbg !4302

if.end19:                                         ; preds = %for.end18, %for.end
  %25 = load %struct.DiracFrame*, %struct.DiracFrame** %remove_pic, align 8, !dbg !4304
  ret %struct.DiracFrame* %25, !dbg !4305
}

; Function Attrs: nounwind uwtable
define internal i32 @add_frame(%struct.DiracFrame** %framelist, i32 %maxframes, %struct.DiracFrame* %frame) #1 !dbg !4306 {
entry:
  %retval = alloca i32, align 4
  %framelist.addr = alloca %struct.DiracFrame**, align 8
  %maxframes.addr = alloca i32, align 4
  %frame.addr = alloca %struct.DiracFrame*, align 8
  %i = alloca i32, align 4
  store %struct.DiracFrame** %framelist, %struct.DiracFrame*** %framelist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracFrame*** %framelist.addr, metadata !4309, metadata !2947), !dbg !4310
  store i32 %maxframes, i32* %maxframes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxframes.addr, metadata !4311, metadata !2947), !dbg !4312
  store %struct.DiracFrame* %frame, %struct.DiracFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %frame.addr, metadata !4313, metadata !2947), !dbg !4314
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4315, metadata !2947), !dbg !4316
  store i32 0, i32* %i, align 4, !dbg !4317
  br label %for.cond, !dbg !4319

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4320
  %1 = load i32, i32* %maxframes.addr, align 4, !dbg !4323
  %cmp = icmp slt i32 %0, %1, !dbg !4324
  br i1 %cmp, label %for.body, label %for.end, !dbg !4325

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !4326
  %idxprom = sext i32 %2 to i64, !dbg !4328
  %3 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4328
  %arrayidx = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %3, i64 %idxprom, !dbg !4328
  %4 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx, align 8, !dbg !4328
  %tobool = icmp ne %struct.DiracFrame* %4, null, !dbg !4328
  br i1 %tobool, label %if.end, label %if.then, !dbg !4329

if.then:                                          ; preds = %for.body
  %5 = load %struct.DiracFrame*, %struct.DiracFrame** %frame.addr, align 8, !dbg !4330
  %6 = load i32, i32* %i, align 4, !dbg !4332
  %idxprom1 = sext i32 %6 to i64, !dbg !4333
  %7 = load %struct.DiracFrame**, %struct.DiracFrame*** %framelist.addr, align 8, !dbg !4333
  %arrayidx2 = getelementptr inbounds %struct.DiracFrame*, %struct.DiracFrame** %7, i64 %idxprom1, !dbg !4333
  store %struct.DiracFrame* %5, %struct.DiracFrame** %arrayidx2, align 8, !dbg !4334
  store i32 0, i32* %retval, align 4, !dbg !4335
  br label %return, !dbg !4335

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4336

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !4338
  %inc = add nsw i32 %8, 1, !dbg !4338
  store i32 %inc, i32* %i, align 4, !dbg !4338
  br label %for.cond, !dbg !4340, !llvm.loop !4341

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !4343
  br label %return, !dbg !4343

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4344
  ret i32 %9, !dbg !4344
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !4345 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4349, metadata !2947), !dbg !4350
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4351, metadata !2947), !dbg !4352
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !4353, metadata !2947), !dbg !4354
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !4355, metadata !2947), !dbg !4356
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4357, metadata !2947), !dbg !4358
  store i32 0, i32* %ret, align 4, !dbg !4358
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !4359
  %cmp = icmp sge i32 %0, 2147483135, !dbg !4361
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4362

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !4363
  %cmp1 = icmp slt i32 %1, 0, !dbg !4365
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4366

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4367
  %tobool = icmp ne i8* %2, null, !dbg !4367
  br i1 %tobool, label %if.end, label %if.then, !dbg !4369

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !4370
  store i8* null, i8** %buffer.addr, align 8, !dbg !4372
  store i32 -1094995529, i32* %ret, align 4, !dbg !4373
  br label %if.end, !dbg !4374

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !4375
  %add = add nsw i32 %3, 7, !dbg !4376
  %shr = ashr i32 %add, 3, !dbg !4377
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4378
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4379
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4380
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4381
  store i8* %4, i8** %buffer3, align 8, !dbg !4382
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4383
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4384
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4385
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4386
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4387
  %add4 = add nsw i32 %8, 8, !dbg !4388
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4389
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4390
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4391
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4392
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4393
  %idx.ext = sext i32 %11 to i64, !dbg !4394
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4394
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4395
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4396
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4397
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4398
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4399
  store i32 0, i32* %index, align 8, !dbg !4400
  %14 = load i32, i32* %ret, align 4, !dbg !4401
  ret i32 %14, !dbg !4402
}

declare i32 @av_dirac_parse_sequence_header(%struct.AVDiracSeqHeader**, i8*, i64, i8*) #3

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #3

declare void @av_freep(i8*) #3

declare i32 @ff_set_sar(%struct.AVCodecContext*, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32*, i32*) #3

; Function Attrs: nounwind uwtable
define internal i32 @alloc_sequence_buffers(%struct.DiracContext* %s) #1 !dbg !4403 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %sbwidth = alloca i32, align 4
  %sbheight = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %top_padding = alloca i32, align 4
  %max_xblen = alloca i32, align 4
  %max_yblen = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !4404, metadata !2947), !dbg !4405
  call void @llvm.dbg.declare(metadata i32* %sbwidth, metadata !4406, metadata !2947), !dbg !4407
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4408
  %seq = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 7, !dbg !4409
  %width = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq, i32 0, i32 0, !dbg !4410
  %1 = load i32, i32* %width, align 8, !dbg !4410
  %add = add i32 %1, 4, !dbg !4411
  %sub = sub i32 %add, 1, !dbg !4412
  %div = udiv i32 %sub, 4, !dbg !4413
  store i32 %div, i32* %sbwidth, align 4, !dbg !4407
  call void @llvm.dbg.declare(metadata i32* %sbheight, metadata !4414, metadata !2947), !dbg !4415
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4416
  %seq1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 7, !dbg !4417
  %height = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq1, i32 0, i32 1, !dbg !4418
  %3 = load i32, i32* %height, align 4, !dbg !4418
  %add2 = add i32 %3, 4, !dbg !4419
  %sub3 = sub i32 %add2, 1, !dbg !4420
  %div4 = udiv i32 %sub3, 4, !dbg !4421
  store i32 %div4, i32* %sbheight, align 4, !dbg !4415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4422, metadata !2947), !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4424, metadata !2947), !dbg !4425
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4426, metadata !2947), !dbg !4427
  call void @llvm.dbg.declare(metadata i32* %top_padding, metadata !4428, metadata !2947), !dbg !4429
  store i32 0, i32* %i, align 4, !dbg !4430
  br label %for.cond, !dbg !4432

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !4433
  %cmp = icmp slt i32 %4, 3, !dbg !4436
  br i1 %cmp, label %for.body, label %for.end, !dbg !4437

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %max_xblen, metadata !4438, metadata !2947), !dbg !4440
  %5 = load i32, i32* %i, align 4, !dbg !4441
  %tobool = icmp ne i32 %5, 0, !dbg !4441
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4441

cond.true:                                        ; preds = %for.body
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4442
  %chroma_x_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 11, !dbg !4444
  %7 = load i32, i32* %chroma_x_shift, align 8, !dbg !4444
  br label %cond.end, !dbg !4445

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !4446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !4448
  %shr = ashr i32 32, %cond, !dbg !4450
  store i32 %shr, i32* %max_xblen, align 4, !dbg !4451
  call void @llvm.dbg.declare(metadata i32* %max_yblen, metadata !4452, metadata !2947), !dbg !4453
  %8 = load i32, i32* %i, align 4, !dbg !4454
  %tobool5 = icmp ne i32 %8, 0, !dbg !4454
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !4454

cond.true6:                                       ; preds = %cond.end
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4455
  %chroma_y_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 12, !dbg !4456
  %10 = load i32, i32* %chroma_y_shift, align 4, !dbg !4456
  br label %cond.end8, !dbg !4457

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !4458

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i32 [ %10, %cond.true6 ], [ 0, %cond.false7 ], !dbg !4459
  %shr10 = ashr i32 32, %cond9, !dbg !4460
  store i32 %shr10, i32* %max_yblen, align 4, !dbg !4461
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4462
  %seq11 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 7, !dbg !4463
  %width12 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq11, i32 0, i32 0, !dbg !4464
  %12 = load i32, i32* %width12, align 8, !dbg !4464
  %13 = load i32, i32* %i, align 4, !dbg !4465
  %tobool13 = icmp ne i32 %13, 0, !dbg !4465
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !4465

cond.true14:                                      ; preds = %cond.end8
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4466
  %chroma_x_shift15 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 11, !dbg !4467
  %15 = load i32, i32* %chroma_x_shift15, align 8, !dbg !4467
  br label %cond.end17, !dbg !4468

cond.false16:                                     ; preds = %cond.end8
  br label %cond.end17, !dbg !4469

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi i32 [ %15, %cond.true14 ], [ 0, %cond.false16 ], !dbg !4470
  %shr19 = lshr i32 %12, %cond18, !dbg !4471
  store i32 %shr19, i32* %w, align 4, !dbg !4472
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4473
  %seq20 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 7, !dbg !4474
  %height21 = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq20, i32 0, i32 1, !dbg !4475
  %17 = load i32, i32* %height21, align 4, !dbg !4475
  %18 = load i32, i32* %i, align 4, !dbg !4476
  %tobool22 = icmp ne i32 %18, 0, !dbg !4476
  br i1 %tobool22, label %cond.true23, label %cond.false25, !dbg !4476

cond.true23:                                      ; preds = %cond.end17
  %19 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4477
  %chroma_y_shift24 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %19, i32 0, i32 12, !dbg !4478
  %20 = load i32, i32* %chroma_y_shift24, align 4, !dbg !4478
  br label %cond.end26, !dbg !4479

cond.false25:                                     ; preds = %cond.end17
  br label %cond.end26, !dbg !4480

cond.end26:                                       ; preds = %cond.false25, %cond.true23
  %cond27 = phi i32 [ %20, %cond.true23 ], [ 0, %cond.false25 ], !dbg !4481
  %shr28 = lshr i32 %17, %cond27, !dbg !4482
  store i32 %shr28, i32* %h, align 4, !dbg !4483
  %21 = load i32, i32* %max_yblen, align 4, !dbg !4484
  %div29 = sdiv i32 %21, 2, !dbg !4485
  %cmp30 = icmp sgt i32 32, %div29, !dbg !4486
  br i1 %cmp30, label %cond.true31, label %cond.false32, !dbg !4487

cond.true31:                                      ; preds = %cond.end26
  br label %cond.end34, !dbg !4488

cond.false32:                                     ; preds = %cond.end26
  %22 = load i32, i32* %max_yblen, align 4, !dbg !4489
  %div33 = sdiv i32 %22, 2, !dbg !4490
  br label %cond.end34, !dbg !4491

cond.end34:                                       ; preds = %cond.false32, %cond.true31
  %cond35 = phi i32 [ 32, %cond.true31 ], [ %div33, %cond.false32 ], !dbg !4492
  store i32 %cond35, i32* %top_padding, align 4, !dbg !4493
  %23 = load i32, i32* %w, align 4, !dbg !4494
  %add36 = add nsw i32 %23, 32, !dbg !4495
  %sub37 = sub nsw i32 %add36, 1, !dbg !4496
  %shr38 = ashr i32 %sub37, 5, !dbg !4497
  %shl = shl i32 %shr38, 5, !dbg !4498
  %add39 = add nsw i32 %shl, 8, !dbg !4499
  %sub40 = sub nsw i32 %add39, 1, !dbg !4500
  %and = and i32 %sub40, -8, !dbg !4501
  store i32 %and, i32* %w, align 4, !dbg !4502
  %24 = load i32, i32* %top_padding, align 4, !dbg !4503
  %25 = load i32, i32* %h, align 4, !dbg !4504
  %add41 = add nsw i32 %25, 32, !dbg !4505
  %sub42 = sub nsw i32 %add41, 1, !dbg !4506
  %shr43 = ashr i32 %sub42, 5, !dbg !4507
  %shl44 = shl i32 %shr43, 5, !dbg !4508
  %add45 = add nsw i32 %24, %shl44, !dbg !4509
  %26 = load i32, i32* %max_yblen, align 4, !dbg !4510
  %div46 = sdiv i32 %26, 2, !dbg !4511
  %add47 = add nsw i32 %add45, %div46, !dbg !4512
  store i32 %add47, i32* %h, align 4, !dbg !4513
  %27 = load i32, i32* %w, align 4, !dbg !4514
  %28 = load i32, i32* %max_xblen, align 4, !dbg !4515
  %add48 = add nsw i32 %27, %28, !dbg !4516
  %conv = sext i32 %add48 to i64, !dbg !4517
  %29 = load i32, i32* %h, align 4, !dbg !4518
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4519
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 14, !dbg !4520
  %31 = load i32, i32* %pshift, align 4, !dbg !4520
  %shl49 = shl i32 2, %31, !dbg !4521
  %mul = mul nsw i32 %29, %shl49, !dbg !4522
  %conv50 = sext i32 %mul to i64, !dbg !4518
  %call = call i8* @av_mallocz_array(i64 %conv, i64 %conv50), !dbg !4523
  %32 = load i32, i32* %i, align 4, !dbg !4524
  %idxprom = sext i32 %32 to i64, !dbg !4525
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4525
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 10, !dbg !4526
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom, !dbg !4525
  %idwt = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx, i32 0, i32 0, !dbg !4527
  %buf_base = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt, i32 0, i32 4, !dbg !4528
  store i8* %call, i8** %buf_base, align 8, !dbg !4529
  %34 = load i32, i32* %w, align 4, !dbg !4530
  %add51 = add nsw i32 %34, 16, !dbg !4531
  %conv52 = sext i32 %add51 to i64, !dbg !4532
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4533
  %pshift53 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 14, !dbg !4534
  %36 = load i32, i32* %pshift53, align 4, !dbg !4534
  %shl54 = shl i32 2, %36, !dbg !4535
  %conv55 = sext i32 %shl54 to i64, !dbg !4536
  %call56 = call i8* @av_malloc_array(i64 %conv52, i64 %conv55), !dbg !4537
  %37 = load i32, i32* %i, align 4, !dbg !4538
  %idxprom57 = sext i32 %37 to i64, !dbg !4539
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4539
  %plane58 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 10, !dbg !4540
  %arrayidx59 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane58, i64 0, i64 %idxprom57, !dbg !4539
  %idwt60 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx59, i32 0, i32 0, !dbg !4541
  %tmp = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt60, i32 0, i32 5, !dbg !4542
  store i8* %call56, i8** %tmp, align 8, !dbg !4543
  %39 = load i32, i32* %i, align 4, !dbg !4544
  %idxprom61 = sext i32 %39 to i64, !dbg !4545
  %40 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4545
  %plane62 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %40, i32 0, i32 10, !dbg !4546
  %arrayidx63 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane62, i64 0, i64 %idxprom61, !dbg !4545
  %idwt64 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx63, i32 0, i32 0, !dbg !4547
  %buf_base65 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt64, i32 0, i32 4, !dbg !4548
  %41 = load i8*, i8** %buf_base65, align 8, !dbg !4548
  %42 = load i32, i32* %top_padding, align 4, !dbg !4549
  %43 = load i32, i32* %w, align 4, !dbg !4550
  %mul66 = mul nsw i32 %42, %43, !dbg !4551
  %44 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4552
  %pshift67 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %44, i32 0, i32 14, !dbg !4553
  %45 = load i32, i32* %pshift67, align 4, !dbg !4553
  %shl68 = shl i32 2, %45, !dbg !4554
  %mul69 = mul nsw i32 %mul66, %shl68, !dbg !4555
  %idx.ext = sext i32 %mul69 to i64, !dbg !4556
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !4556
  %46 = load i32, i32* %i, align 4, !dbg !4557
  %idxprom70 = sext i32 %46 to i64, !dbg !4558
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4558
  %plane71 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %47, i32 0, i32 10, !dbg !4559
  %arrayidx72 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane71, i64 0, i64 %idxprom70, !dbg !4558
  %idwt73 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx72, i32 0, i32 0, !dbg !4560
  %buf = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt73, i32 0, i32 3, !dbg !4561
  store i8* %add.ptr, i8** %buf, align 8, !dbg !4562
  %48 = load i32, i32* %i, align 4, !dbg !4563
  %idxprom74 = sext i32 %48 to i64, !dbg !4565
  %49 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4565
  %plane75 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %49, i32 0, i32 10, !dbg !4566
  %arrayidx76 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane75, i64 0, i64 %idxprom74, !dbg !4565
  %idwt77 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx76, i32 0, i32 0, !dbg !4567
  %buf_base78 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt77, i32 0, i32 4, !dbg !4568
  %50 = load i8*, i8** %buf_base78, align 8, !dbg !4568
  %tobool79 = icmp ne i8* %50, null, !dbg !4565
  br i1 %tobool79, label %lor.lhs.false, label %if.then, !dbg !4569

lor.lhs.false:                                    ; preds = %cond.end34
  %51 = load i32, i32* %i, align 4, !dbg !4570
  %idxprom80 = sext i32 %51 to i64, !dbg !4572
  %52 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4572
  %plane81 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %52, i32 0, i32 10, !dbg !4573
  %arrayidx82 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane81, i64 0, i64 %idxprom80, !dbg !4572
  %idwt83 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx82, i32 0, i32 0, !dbg !4574
  %tmp84 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt83, i32 0, i32 5, !dbg !4575
  %53 = load i8*, i8** %tmp84, align 8, !dbg !4575
  %tobool85 = icmp ne i8* %53, null, !dbg !4572
  br i1 %tobool85, label %if.end, label %if.then, !dbg !4576

if.then:                                          ; preds = %lor.lhs.false, %cond.end34
  store i32 -12, i32* %retval, align 4, !dbg !4577
  br label %return, !dbg !4577

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !4578

for.inc:                                          ; preds = %if.end
  %54 = load i32, i32* %i, align 4, !dbg !4579
  %inc = add nsw i32 %54, 1, !dbg !4579
  store i32 %inc, i32* %i, align 4, !dbg !4579
  br label %for.cond, !dbg !4581, !llvm.loop !4582

for.end:                                          ; preds = %for.cond
  %55 = load i32, i32* %sbwidth, align 4, !dbg !4584
  %conv86 = sext i32 %55 to i64, !dbg !4584
  %56 = load i32, i32* %sbheight, align 4, !dbg !4585
  %conv87 = sext i32 %56 to i64, !dbg !4585
  %call88 = call i8* @av_malloc_array(i64 %conv86, i64 %conv87), !dbg !4586
  %57 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4587
  %sbsplit = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %57, i32 0, i32 46, !dbg !4588
  store i8* %call88, i8** %sbsplit, align 16, !dbg !4589
  %58 = load i32, i32* %sbwidth, align 4, !dbg !4590
  %conv89 = sext i32 %58 to i64, !dbg !4590
  %59 = load i32, i32* %sbheight, align 4, !dbg !4591
  %mul90 = mul nsw i32 %59, 16, !dbg !4592
  %conv91 = sext i32 %mul90 to i64, !dbg !4591
  %mul92 = mul i64 %conv91, 10, !dbg !4593
  %call93 = call i8* @av_malloc_array(i64 %conv89, i64 %mul92), !dbg !4594
  %60 = bitcast i8* %call93 to %struct.DiracBlock*, !dbg !4594
  %61 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4595
  %blmotion = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %61, i32 0, i32 47, !dbg !4596
  store %struct.DiracBlock* %60, %struct.DiracBlock** %blmotion, align 8, !dbg !4597
  %62 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4598
  %sbsplit94 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %62, i32 0, i32 46, !dbg !4600
  %63 = load i8*, i8** %sbsplit94, align 16, !dbg !4600
  %tobool95 = icmp ne i8* %63, null, !dbg !4598
  br i1 %tobool95, label %lor.lhs.false96, label %if.then99, !dbg !4601

lor.lhs.false96:                                  ; preds = %for.end
  %64 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4602
  %blmotion97 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %64, i32 0, i32 47, !dbg !4604
  %65 = load %struct.DiracBlock*, %struct.DiracBlock** %blmotion97, align 8, !dbg !4604
  %tobool98 = icmp ne %struct.DiracBlock* %65, null, !dbg !4602
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !4605

if.then99:                                        ; preds = %lor.lhs.false96, %for.end
  store i32 -12, i32* %retval, align 4, !dbg !4606
  br label %return, !dbg !4606

if.end100:                                        ; preds = %lor.lhs.false96
  store i32 0, i32* %retval, align 4, !dbg !4607
  br label %return, !dbg !4607

return:                                           ; preds = %if.end100, %if.then99, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !4608
  ret i32 %66, !dbg !4608
}

; Function Attrs: nounwind uwtable
define internal void @free_sequence_buffers(%struct.DiracContext* %s) #1 !dbg !4609 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !4612, metadata !2947), !dbg !4613
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4614, metadata !2947), !dbg !4615
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4616, metadata !2947), !dbg !4617
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4618, metadata !2947), !dbg !4619
  store i32 0, i32* %i, align 4, !dbg !4620
  br label %for.cond, !dbg !4622

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4623
  %cmp = icmp slt i32 %0, 14, !dbg !4626
  br i1 %cmp, label %for.body, label %for.end27, !dbg !4627

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !4628
  %idxprom = sext i32 %1 to i64, !dbg !4631
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4631
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 64, !dbg !4632
  %arrayidx = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom, !dbg !4631
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx, i32 0, i32 0, !dbg !4633
  %3 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !4633
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i32 0, i32 0, !dbg !4634
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4631
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !4631
  %tobool = icmp ne i8* %4, null, !dbg !4631
  br i1 %tobool, label %if.then, label %if.end, !dbg !4635

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !4636
  %idxprom2 = sext i32 %5 to i64, !dbg !4638
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4638
  %all_frames3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 64, !dbg !4639
  %arrayidx4 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames3, i64 0, i64 %idxprom2, !dbg !4638
  %avframe5 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx4, i32 0, i32 0, !dbg !4640
  %7 = load %struct.AVFrame*, %struct.AVFrame** %avframe5, align 8, !dbg !4640
  call void @av_frame_unref(%struct.AVFrame* %7), !dbg !4641
  %8 = load i32, i32* %i, align 4, !dbg !4642
  %idxprom6 = sext i32 %8 to i64, !dbg !4643
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4643
  %all_frames7 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 64, !dbg !4644
  %arrayidx8 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames7, i64 0, i64 %idxprom6, !dbg !4643
  %interpolated = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx8, i32 0, i32 1, !dbg !4645
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %interpolated, i32 0, i32 0, !dbg !4646
  %10 = bitcast i32* %arraydecay to i8*, !dbg !4646
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 12, i32 8, i1 false), !dbg !4646
  br label %if.end, !dbg !4647

if.end:                                           ; preds = %if.then, %for.body
  store i32 0, i32* %j, align 4, !dbg !4648
  br label %for.cond9, !dbg !4650

for.cond9:                                        ; preds = %for.inc22, %if.end
  %11 = load i32, i32* %j, align 4, !dbg !4651
  %cmp10 = icmp slt i32 %11, 3, !dbg !4654
  br i1 %cmp10, label %for.body11, label %for.end24, !dbg !4655

for.body11:                                       ; preds = %for.cond9
  store i32 1, i32* %k, align 4, !dbg !4656
  br label %for.cond12, !dbg !4658

for.cond12:                                       ; preds = %for.inc, %for.body11
  %12 = load i32, i32* %k, align 4, !dbg !4659
  %cmp13 = icmp slt i32 %12, 4, !dbg !4662
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !4663

for.body14:                                       ; preds = %for.cond12
  %13 = load i32, i32* %k, align 4, !dbg !4664
  %idxprom15 = sext i32 %13 to i64, !dbg !4665
  %14 = load i32, i32* %j, align 4, !dbg !4666
  %idxprom16 = sext i32 %14 to i64, !dbg !4665
  %15 = load i32, i32* %i, align 4, !dbg !4667
  %idxprom17 = sext i32 %15 to i64, !dbg !4665
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4665
  %all_frames18 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 64, !dbg !4668
  %arrayidx19 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames18, i64 0, i64 %idxprom17, !dbg !4665
  %hpel_base = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx19, i32 0, i32 3, !dbg !4669
  %arrayidx20 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel_base, i64 0, i64 %idxprom16, !dbg !4665
  %arrayidx21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx20, i64 0, i64 %idxprom15, !dbg !4665
  %17 = bitcast i8** %arrayidx21 to i8*, !dbg !4670
  call void @av_freep(i8* %17), !dbg !4671
  br label %for.inc, !dbg !4671

for.inc:                                          ; preds = %for.body14
  %18 = load i32, i32* %k, align 4, !dbg !4672
  %inc = add nsw i32 %18, 1, !dbg !4672
  store i32 %inc, i32* %k, align 4, !dbg !4672
  br label %for.cond12, !dbg !4674, !llvm.loop !4675

for.end:                                          ; preds = %for.cond12
  br label %for.inc22, !dbg !4677

for.inc22:                                        ; preds = %for.end
  %19 = load i32, i32* %j, align 4, !dbg !4679
  %inc23 = add nsw i32 %19, 1, !dbg !4679
  store i32 %inc23, i32* %j, align 4, !dbg !4679
  br label %for.cond9, !dbg !4681, !llvm.loop !4682

for.end24:                                        ; preds = %for.cond9
  br label %for.inc25, !dbg !4684

for.inc25:                                        ; preds = %for.end24
  %20 = load i32, i32* %i, align 4, !dbg !4685
  %inc26 = add nsw i32 %20, 1, !dbg !4685
  store i32 %inc26, i32* %i, align 4, !dbg !4685
  br label %for.cond, !dbg !4687, !llvm.loop !4688

for.end27:                                        ; preds = %for.cond
  %21 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4690
  %ref_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %21, i32 0, i32 62, !dbg !4691
  %arraydecay28 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames, i32 0, i32 0, !dbg !4692
  %22 = bitcast %struct.DiracFrame** %arraydecay28 to i8*, !dbg !4692
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 72, i32 16, i1 false), !dbg !4692
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4693
  %delay_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 63, !dbg !4694
  %arraydecay29 = getelementptr inbounds [6 x %struct.DiracFrame*], [6 x %struct.DiracFrame*]* %delay_frames, i32 0, i32 0, !dbg !4695
  %24 = bitcast %struct.DiracFrame** %arraydecay29 to i8*, !dbg !4695
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 48, i32 8, i1 false), !dbg !4695
  store i32 0, i32* %i, align 4, !dbg !4696
  br label %for.cond30, !dbg !4698

for.cond30:                                       ; preds = %for.inc39, %for.end27
  %25 = load i32, i32* %i, align 4, !dbg !4699
  %cmp31 = icmp slt i32 %25, 3, !dbg !4702
  br i1 %cmp31, label %for.body32, label %for.end41, !dbg !4703

for.body32:                                       ; preds = %for.cond30
  %26 = load i32, i32* %i, align 4, !dbg !4704
  %idxprom33 = sext i32 %26 to i64, !dbg !4706
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4706
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 10, !dbg !4707
  %arrayidx34 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom33, !dbg !4706
  %idwt = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx34, i32 0, i32 0, !dbg !4708
  %buf_base = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt, i32 0, i32 4, !dbg !4709
  %28 = bitcast i8** %buf_base to i8*, !dbg !4710
  call void @av_freep(i8* %28), !dbg !4711
  %29 = load i32, i32* %i, align 4, !dbg !4712
  %idxprom35 = sext i32 %29 to i64, !dbg !4713
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4713
  %plane36 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 10, !dbg !4714
  %arrayidx37 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane36, i64 0, i64 %idxprom35, !dbg !4713
  %idwt38 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx37, i32 0, i32 0, !dbg !4715
  %tmp = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt38, i32 0, i32 5, !dbg !4716
  %31 = bitcast i8** %tmp to i8*, !dbg !4717
  call void @av_freep(i8* %31), !dbg !4718
  br label %for.inc39, !dbg !4719

for.inc39:                                        ; preds = %for.body32
  %32 = load i32, i32* %i, align 4, !dbg !4720
  %inc40 = add nsw i32 %32, 1, !dbg !4720
  store i32 %inc40, i32* %i, align 4, !dbg !4720
  br label %for.cond30, !dbg !4722, !llvm.loop !4723

for.end41:                                        ; preds = %for.cond30
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4725
  %buffer_stride = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 52, !dbg !4726
  store i32 0, i32* %buffer_stride, align 8, !dbg !4727
  %34 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4728
  %sbsplit = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %34, i32 0, i32 46, !dbg !4729
  %35 = bitcast i8** %sbsplit to i8*, !dbg !4730
  call void @av_freep(i8* %35), !dbg !4731
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4732
  %blmotion = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 47, !dbg !4733
  %37 = bitcast %struct.DiracBlock** %blmotion to i8*, !dbg !4734
  call void @av_freep(i8* %37), !dbg !4735
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4736
  %edge_emu_buffer_base = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 49, !dbg !4737
  %39 = bitcast i8** %edge_emu_buffer_base to i8*, !dbg !4738
  call void @av_freep(i8* %39), !dbg !4739
  %40 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4740
  %mctmp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %40, i32 0, i32 50, !dbg !4741
  %41 = bitcast i16** %mctmp to i8*, !dbg !4742
  call void @av_freep(i8* %41), !dbg !4743
  %42 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4744
  %mcscratch = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %42, i32 0, i32 51, !dbg !4745
  %43 = bitcast i8** %mcscratch to i8*, !dbg !4746
  call void @av_freep(i8* %43), !dbg !4747
  ret void, !dbg !4748
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #6

; Function Attrs: nounwind uwtable
define internal i32 @get_buffer_with_edge(%struct.AVCodecContext* %avctx, %struct.AVFrame* %f, i32 %flags) #1 !dbg !4749 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %f.addr = alloca %struct.AVFrame*, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %chroma_x_shift = alloca i32, align 4
  %chroma_y_shift = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4752, metadata !2947), !dbg !4753
  store %struct.AVFrame* %f, %struct.AVFrame** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %f.addr, metadata !4754, metadata !2947), !dbg !4755
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4756, metadata !2947), !dbg !4757
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4758, metadata !2947), !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4760, metadata !2947), !dbg !4761
  call void @llvm.dbg.declare(metadata i32* %chroma_x_shift, metadata !4762, metadata !2947), !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %chroma_y_shift, metadata !4764, metadata !2947), !dbg !4765
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4766
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 25, !dbg !4767
  %1 = load i32, i32* %pix_fmt, align 8, !dbg !4767
  %call = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %1, i32* %chroma_x_shift, i32* %chroma_y_shift), !dbg !4768
  store i32 %call, i32* %ret, align 4, !dbg !4769
  %2 = load i32, i32* %ret, align 4, !dbg !4770
  %cmp = icmp slt i32 %2, 0, !dbg !4772
  br i1 %cmp, label %if.then, label %if.end, !dbg !4773

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !4774
  store i32 %3, i32* %retval, align 4, !dbg !4775
  br label %return, !dbg !4775

if.end:                                           ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4776
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 20, !dbg !4777
  %5 = load i32, i32* %width, align 4, !dbg !4777
  %add = add nsw i32 %5, 32, !dbg !4778
  %6 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4779
  %width1 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %6, i32 0, i32 3, !dbg !4780
  store i32 %add, i32* %width1, align 8, !dbg !4781
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4782
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 21, !dbg !4783
  %8 = load i32, i32* %height, align 8, !dbg !4783
  %add2 = add nsw i32 %8, 32, !dbg !4784
  %add3 = add nsw i32 %add2, 2, !dbg !4785
  %9 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4786
  %height4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 4, !dbg !4787
  store i32 %add3, i32* %height4, align 4, !dbg !4788
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4789
  %11 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4790
  %12 = load i32, i32* %flags.addr, align 4, !dbg !4791
  %call5 = call i32 @ff_get_buffer(%struct.AVCodecContext* %10, %struct.AVFrame* %11, i32 %12), !dbg !4792
  store i32 %call5, i32* %ret, align 4, !dbg !4793
  %13 = load i32, i32* %ret, align 4, !dbg !4794
  %cmp6 = icmp slt i32 %13, 0, !dbg !4796
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4797

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !4798
  store i32 %14, i32* %retval, align 4, !dbg !4799
  br label %return, !dbg !4799

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4800
  br label %for.cond, !dbg !4802

for.cond:                                         ; preds = %for.inc, %if.end8
  %15 = load i32, i32* %i, align 4, !dbg !4803
  %idxprom = sext i32 %15 to i64, !dbg !4806
  %16 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4806
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 0, !dbg !4807
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !4806
  %17 = load i8*, i8** %arrayidx, align 8, !dbg !4806
  %tobool = icmp ne i8* %17, null, !dbg !4808
  br i1 %tobool, label %for.body, label %for.end, !dbg !4808

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4809, metadata !2947), !dbg !4811
  %18 = load i32, i32* %i, align 4, !dbg !4812
  %tobool9 = icmp ne i32 %18, 0, !dbg !4812
  br i1 %tobool9, label %land.lhs.true, label %cond.false, !dbg !4813

land.lhs.true:                                    ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4814
  %cmp10 = icmp slt i32 %19, 3, !dbg !4816
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4817

cond.true:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %chroma_y_shift, align 4, !dbg !4818
  br label %cond.end, !dbg !4820

cond.false:                                       ; preds = %land.lhs.true, %for.body
  br label %cond.end, !dbg !4821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ 0, %cond.false ], !dbg !4823
  %shr = ashr i32 16, %cond, !dbg !4825
  %21 = load i32, i32* %i, align 4, !dbg !4826
  %idxprom11 = sext i32 %21 to i64, !dbg !4827
  %22 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4827
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 1, !dbg !4828
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom11, !dbg !4827
  %23 = load i32, i32* %arrayidx12, align 4, !dbg !4827
  %mul = mul nsw i32 %shr, %23, !dbg !4829
  %add13 = add nsw i32 %mul, 32, !dbg !4830
  store i32 %add13, i32* %offset, align 4, !dbg !4831
  %24 = load i32, i32* %offset, align 4, !dbg !4832
  %25 = load i32, i32* %i, align 4, !dbg !4833
  %idxprom14 = sext i32 %25 to i64, !dbg !4834
  %26 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4834
  %data15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 0, !dbg !4835
  %arrayidx16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data15, i64 0, i64 %idxprom14, !dbg !4834
  %27 = load i8*, i8** %arrayidx16, align 8, !dbg !4836
  %idx.ext = sext i32 %24 to i64, !dbg !4836
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !4836
  store i8* %add.ptr, i8** %arrayidx16, align 8, !dbg !4836
  br label %for.inc, !dbg !4837

for.inc:                                          ; preds = %cond.end
  %28 = load i32, i32* %i, align 4, !dbg !4838
  %inc = add nsw i32 %28, 1, !dbg !4838
  store i32 %inc, i32* %i, align 4, !dbg !4838
  br label %for.cond, !dbg !4840, !llvm.loop !4841

for.end:                                          ; preds = %for.cond
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4843
  %width17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 20, !dbg !4844
  %30 = load i32, i32* %width17, align 4, !dbg !4844
  %31 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4845
  %width18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 3, !dbg !4846
  store i32 %30, i32* %width18, align 8, !dbg !4847
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4848
  %height19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 21, !dbg !4849
  %33 = load i32, i32* %height19, align 8, !dbg !4849
  %34 = load %struct.AVFrame*, %struct.AVFrame** %f.addr, align 8, !dbg !4850
  %height20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 4, !dbg !4851
  store i32 %33, i32* %height20, align 4, !dbg !4852
  store i32 0, i32* %retval, align 4, !dbg !4853
  br label %return, !dbg !4853

return:                                           ; preds = %for.end, %if.then7, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !4854
  ret i32 %35, !dbg !4854
}

; Function Attrs: nounwind uwtable
define internal i32 @alloc_buffers(%struct.DiracContext* %s, i32 %stride) #1 !dbg !4855 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %stride.addr = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !4858, metadata !2947), !dbg !4859
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4860, metadata !2947), !dbg !4861
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4862, metadata !2947), !dbg !4863
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4864
  %seq = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 7, !dbg !4865
  %width = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq, i32 0, i32 0, !dbg !4866
  %1 = load i32, i32* %width, align 8, !dbg !4866
  store i32 %1, i32* %w, align 4, !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4867, metadata !2947), !dbg !4868
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4869
  %seq1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 7, !dbg !4870
  %height = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq1, i32 0, i32 1, !dbg !4871
  %3 = load i32, i32* %height, align 4, !dbg !4871
  store i32 %3, i32* %h, align 4, !dbg !4868
  br label %do.body, !dbg !4872, !llvm.loop !4873

do.body:                                          ; preds = %entry
  %4 = load i32, i32* %stride.addr, align 4, !dbg !4874
  %5 = load i32, i32* %w, align 4, !dbg !4878
  %cmp = icmp sge i32 %4, %5, !dbg !4879
  br i1 %cmp, label %if.end, label %if.then, !dbg !4880

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 328), !dbg !4881
  call void @abort() #10, !dbg !4884
  unreachable, !dbg !4886

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !4887

do.end:                                           ; preds = %if.end
  %6 = load i32, i32* %stride.addr, align 4, !dbg !4889
  %add = add nsw i32 %6, 64, !dbg !4889
  store i32 %add, i32* %stride.addr, align 4, !dbg !4889
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4890
  %buffer_stride = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 52, !dbg !4892
  %8 = load i32, i32* %buffer_stride, align 8, !dbg !4892
  %9 = load i32, i32* %stride.addr, align 4, !dbg !4893
  %cmp2 = icmp sge i32 %8, %9, !dbg !4894
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4895

if.then3:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !4896
  br label %return, !dbg !4896

if.end4:                                          ; preds = %do.end
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4897
  %buffer_stride5 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 52, !dbg !4898
  store i32 0, i32* %buffer_stride5, align 8, !dbg !4899
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4900
  %edge_emu_buffer_base = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 49, !dbg !4901
  %12 = bitcast i8** %edge_emu_buffer_base to i8*, !dbg !4902
  call void @av_freep(i8* %12), !dbg !4903
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4904
  %edge_emu_buffer = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 48, !dbg !4905
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %edge_emu_buffer, i32 0, i32 0, !dbg !4906
  %14 = bitcast i8** %arraydecay to i8*, !dbg !4906
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 32, i32 16, i1 false), !dbg !4906
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4907
  %mctmp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %15, i32 0, i32 50, !dbg !4908
  %16 = bitcast i16** %mctmp to i8*, !dbg !4909
  call void @av_freep(i8* %16), !dbg !4910
  %17 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4911
  %mcscratch = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %17, i32 0, i32 51, !dbg !4912
  %18 = bitcast i8** %mcscratch to i8*, !dbg !4913
  call void @av_freep(i8* %18), !dbg !4914
  %19 = load i32, i32* %stride.addr, align 4, !dbg !4915
  %conv = sext i32 %19 to i64, !dbg !4915
  %call = call i8* @av_malloc_array(i64 %conv, i64 32), !dbg !4916
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4917
  %edge_emu_buffer_base6 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 49, !dbg !4918
  store i8* %call, i8** %edge_emu_buffer_base6, align 16, !dbg !4919
  %21 = load i32, i32* %stride.addr, align 4, !dbg !4920
  %add7 = add nsw i32 %21, 32, !dbg !4921
  %conv8 = sext i32 %add7 to i64, !dbg !4922
  %22 = load i32, i32* %h, align 4, !dbg !4923
  %add9 = add nsw i32 %22, 32, !dbg !4924
  %conv10 = sext i32 %add9 to i64, !dbg !4925
  %mul = mul i64 %conv10, 2, !dbg !4926
  %call11 = call i8* @av_malloc_array(i64 %conv8, i64 %mul), !dbg !4927
  %23 = bitcast i8* %call11 to i16*, !dbg !4927
  %24 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4928
  %mctmp12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %24, i32 0, i32 50, !dbg !4929
  store i16* %23, i16** %mctmp12, align 8, !dbg !4930
  %25 = load i32, i32* %stride.addr, align 4, !dbg !4931
  %conv13 = sext i32 %25 to i64, !dbg !4931
  %call14 = call i8* @av_malloc_array(i64 %conv13, i64 32), !dbg !4932
  %26 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4933
  %mcscratch15 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %26, i32 0, i32 51, !dbg !4934
  store i8* %call14, i8** %mcscratch15, align 16, !dbg !4935
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4936
  %edge_emu_buffer_base16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 49, !dbg !4938
  %28 = load i8*, i8** %edge_emu_buffer_base16, align 16, !dbg !4938
  %tobool = icmp ne i8* %28, null, !dbg !4936
  br i1 %tobool, label %lor.lhs.false, label %if.then22, !dbg !4939

lor.lhs.false:                                    ; preds = %if.end4
  %29 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4940
  %mctmp17 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %29, i32 0, i32 50, !dbg !4942
  %30 = load i16*, i16** %mctmp17, align 8, !dbg !4942
  %tobool18 = icmp ne i16* %30, null, !dbg !4940
  br i1 %tobool18, label %lor.lhs.false19, label %if.then22, !dbg !4943

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4944
  %mcscratch20 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 51, !dbg !4946
  %32 = load i8*, i8** %mcscratch20, align 16, !dbg !4946
  %tobool21 = icmp ne i8* %32, null, !dbg !4944
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4947

if.then22:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !4948
  br label %return, !dbg !4948

if.end23:                                         ; preds = %lor.lhs.false19
  %33 = load i32, i32* %stride.addr, align 4, !dbg !4949
  %34 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4950
  %buffer_stride24 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %34, i32 0, i32 52, !dbg !4951
  store i32 %33, i32* %buffer_stride24, align 8, !dbg !4952
  store i32 0, i32* %retval, align 4, !dbg !4953
  br label %return, !dbg !4953

return:                                           ; preds = %if.end23, %if.then22, %if.then3
  %35 = load i32, i32* %retval, align 4, !dbg !4954
  ret i32 %35, !dbg !4954
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_decode_picture_header(%struct.DiracContext* %s) #1 !dbg !4955 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %retire = alloca i32, align 4
  %picnum = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %refdist = alloca i64, align 8
  %refnum = alloca i64, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %retire_pic = alloca %struct.DiracFrame*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !4956, metadata !2947), !dbg !4957
  call void @llvm.dbg.declare(metadata i32* %retire, metadata !4958, metadata !2947), !dbg !4959
  call void @llvm.dbg.declare(metadata i32* %picnum, metadata !4960, metadata !2947), !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4962, metadata !2947), !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4964, metadata !2947), !dbg !4965
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4966, metadata !2947), !dbg !4967
  call void @llvm.dbg.declare(metadata i64* %refdist, metadata !4968, metadata !2947), !dbg !4969
  call void @llvm.dbg.declare(metadata i64* %refnum, metadata !4970, metadata !2947), !dbg !4971
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !4972, metadata !2947), !dbg !4973
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4974
  %gb1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 6, !dbg !4975
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !4973
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4976
  %call = call i32 @get_bits_long(%struct.GetBitContext* %1, i32 32), !dbg !4977
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4978
  %current_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 60, !dbg !4979
  %3 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture, align 8, !dbg !4979
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %3, i32 0, i32 0, !dbg !4980
  %4 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !4980
  %display_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 14, !dbg !4981
  store i32 %call, i32* %display_picture_number, align 4, !dbg !4982
  store i32 %call, i32* %picnum, align 4, !dbg !4983
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4984
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 0, !dbg !4985
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !4985
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !4984
  %8 = load i32, i32* %picnum, align 4, !dbg !4986
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i32 %8), !dbg !4987
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4988
  %frame_number = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 9, !dbg !4990
  %10 = load i64, i64* %frame_number, align 16, !dbg !4990
  %cmp = icmp slt i64 %10, 0, !dbg !4991
  br i1 %cmp, label %if.then, label %if.end, !dbg !4992

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %picnum, align 4, !dbg !4993
  %conv = zext i32 %11 to i64, !dbg !4993
  %12 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4994
  %frame_number2 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %12, i32 0, i32 9, !dbg !4995
  store i64 %conv, i64* %frame_number2, align 16, !dbg !4996
  br label %if.end, !dbg !4994

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !4997
  %ref_pics = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 61, !dbg !4998
  %arrayidx = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics, i64 0, i64 1, !dbg !4997
  store %struct.DiracFrame* null, %struct.DiracFrame** %arrayidx, align 8, !dbg !4999
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5000
  %ref_pics3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 61, !dbg !5001
  %arrayidx4 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics3, i64 0, i64 0, !dbg !5000
  store %struct.DiracFrame* null, %struct.DiracFrame** %arrayidx4, align 16, !dbg !5002
  store i32 0, i32* %i, align 4, !dbg !5003
  br label %for.cond, !dbg !5005

for.cond:                                         ; preds = %for.inc127, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !5006
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5009
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 23, !dbg !5010
  %17 = load i32, i32* %num_refs, align 8, !dbg !5010
  %cmp5 = icmp slt i32 %15, %17, !dbg !5011
  br i1 %cmp5, label %for.body, label %for.end129, !dbg !5012

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %picnum, align 4, !dbg !5013
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5015
  %call7 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %19), !dbg !5016
  %add = add i32 %18, %call7, !dbg !5017
  %conv8 = zext i32 %add to i64, !dbg !5018
  store i64 %conv8, i64* %refnum, align 8, !dbg !5019
  store i64 9223372036854775807, i64* %refdist, align 8, !dbg !5020
  store i32 0, i32* %j, align 4, !dbg !5021
  br label %for.cond9, !dbg !5023

for.cond9:                                        ; preds = %for.inc, %for.body
  %20 = load i32, i32* %j, align 4, !dbg !5024
  %cmp10 = icmp slt i32 %20, 8, !dbg !5027
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !5028

land.rhs:                                         ; preds = %for.cond9
  %21 = load i64, i64* %refdist, align 8, !dbg !5029
  %tobool = icmp ne i64 %21, 0, !dbg !5031
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond9
  %22 = phi i1 [ false, %for.cond9 ], [ %tobool, %land.rhs ]
  br i1 %22, label %for.body12, label %for.end, !dbg !5032

for.body12:                                       ; preds = %land.end
  %23 = load i32, i32* %j, align 4, !dbg !5034
  %idxprom = sext i32 %23 to i64, !dbg !5036
  %24 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5036
  %ref_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %24, i32 0, i32 62, !dbg !5037
  %arrayidx13 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames, i64 0, i64 %idxprom, !dbg !5036
  %25 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx13, align 8, !dbg !5036
  %tobool14 = icmp ne %struct.DiracFrame* %25, null, !dbg !5036
  br i1 %tobool14, label %land.lhs.true, label %if.end75, !dbg !5038

land.lhs.true:                                    ; preds = %for.body12
  %26 = load i32, i32* %j, align 4, !dbg !5039
  %idxprom15 = sext i32 %26 to i64, !dbg !5041
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5041
  %ref_frames16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 62, !dbg !5042
  %arrayidx17 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames16, i64 0, i64 %idxprom15, !dbg !5041
  %28 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx17, align 8, !dbg !5041
  %avframe18 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %28, i32 0, i32 0, !dbg !5043
  %29 = load %struct.AVFrame*, %struct.AVFrame** %avframe18, align 8, !dbg !5043
  %display_picture_number19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 14, !dbg !5044
  %30 = load i32, i32* %display_picture_number19, align 4, !dbg !5044
  %conv20 = sext i32 %30 to i64, !dbg !5041
  %31 = load i64, i64* %refnum, align 8, !dbg !5045
  %sub = sub nsw i64 %conv20, %31, !dbg !5046
  %cmp21 = icmp sge i64 %sub, 0, !dbg !5047
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !5048

cond.true:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %j, align 4, !dbg !5049
  %idxprom23 = sext i32 %32 to i64, !dbg !5051
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5051
  %ref_frames24 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 62, !dbg !5052
  %arrayidx25 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames24, i64 0, i64 %idxprom23, !dbg !5051
  %34 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx25, align 8, !dbg !5051
  %avframe26 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %34, i32 0, i32 0, !dbg !5053
  %35 = load %struct.AVFrame*, %struct.AVFrame** %avframe26, align 8, !dbg !5053
  %display_picture_number27 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 14, !dbg !5054
  %36 = load i32, i32* %display_picture_number27, align 4, !dbg !5054
  %conv28 = sext i32 %36 to i64, !dbg !5051
  %37 = load i64, i64* %refnum, align 8, !dbg !5055
  %sub29 = sub nsw i64 %conv28, %37, !dbg !5056
  br label %cond.end, !dbg !5057

cond.false:                                       ; preds = %land.lhs.true
  %38 = load i32, i32* %j, align 4, !dbg !5058
  %idxprom30 = sext i32 %38 to i64, !dbg !5060
  %39 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5060
  %ref_frames31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %39, i32 0, i32 62, !dbg !5061
  %arrayidx32 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames31, i64 0, i64 %idxprom30, !dbg !5060
  %40 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx32, align 8, !dbg !5060
  %avframe33 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %40, i32 0, i32 0, !dbg !5062
  %41 = load %struct.AVFrame*, %struct.AVFrame** %avframe33, align 8, !dbg !5062
  %display_picture_number34 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 14, !dbg !5063
  %42 = load i32, i32* %display_picture_number34, align 4, !dbg !5063
  %conv35 = sext i32 %42 to i64, !dbg !5060
  %43 = load i64, i64* %refnum, align 8, !dbg !5064
  %sub36 = sub nsw i64 %conv35, %43, !dbg !5065
  %sub37 = sub nsw i64 0, %sub36, !dbg !5066
  br label %cond.end, !dbg !5067

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub29, %cond.true ], [ %sub37, %cond.false ], !dbg !5068
  %44 = load i64, i64* %refdist, align 8, !dbg !5070
  %cmp38 = icmp slt i64 %cond, %44, !dbg !5071
  br i1 %cmp38, label %if.then40, label %if.end75, !dbg !5072

if.then40:                                        ; preds = %cond.end
  %45 = load i32, i32* %j, align 4, !dbg !5073
  %idxprom41 = sext i32 %45 to i64, !dbg !5075
  %46 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5075
  %ref_frames42 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %46, i32 0, i32 62, !dbg !5076
  %arrayidx43 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames42, i64 0, i64 %idxprom41, !dbg !5075
  %47 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx43, align 8, !dbg !5075
  %48 = load i32, i32* %i, align 4, !dbg !5077
  %idxprom44 = sext i32 %48 to i64, !dbg !5078
  %49 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5078
  %ref_pics45 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %49, i32 0, i32 61, !dbg !5079
  %arrayidx46 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics45, i64 0, i64 %idxprom44, !dbg !5078
  store %struct.DiracFrame* %47, %struct.DiracFrame** %arrayidx46, align 8, !dbg !5080
  %50 = load i32, i32* %j, align 4, !dbg !5081
  %idxprom47 = sext i32 %50 to i64, !dbg !5082
  %51 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5082
  %ref_frames48 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %51, i32 0, i32 62, !dbg !5083
  %arrayidx49 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames48, i64 0, i64 %idxprom47, !dbg !5082
  %52 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx49, align 8, !dbg !5082
  %avframe50 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %52, i32 0, i32 0, !dbg !5084
  %53 = load %struct.AVFrame*, %struct.AVFrame** %avframe50, align 8, !dbg !5084
  %display_picture_number51 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %53, i32 0, i32 14, !dbg !5085
  %54 = load i32, i32* %display_picture_number51, align 4, !dbg !5085
  %conv52 = sext i32 %54 to i64, !dbg !5082
  %55 = load i64, i64* %refnum, align 8, !dbg !5086
  %sub53 = sub nsw i64 %conv52, %55, !dbg !5087
  %cmp54 = icmp sge i64 %sub53, 0, !dbg !5088
  br i1 %cmp54, label %cond.true56, label %cond.false64, !dbg !5089

cond.true56:                                      ; preds = %if.then40
  %56 = load i32, i32* %j, align 4, !dbg !5090
  %idxprom57 = sext i32 %56 to i64, !dbg !5092
  %57 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5092
  %ref_frames58 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %57, i32 0, i32 62, !dbg !5093
  %arrayidx59 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames58, i64 0, i64 %idxprom57, !dbg !5092
  %58 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx59, align 8, !dbg !5092
  %avframe60 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %58, i32 0, i32 0, !dbg !5094
  %59 = load %struct.AVFrame*, %struct.AVFrame** %avframe60, align 8, !dbg !5094
  %display_picture_number61 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 14, !dbg !5095
  %60 = load i32, i32* %display_picture_number61, align 4, !dbg !5095
  %conv62 = sext i32 %60 to i64, !dbg !5092
  %61 = load i64, i64* %refnum, align 8, !dbg !5096
  %sub63 = sub nsw i64 %conv62, %61, !dbg !5097
  br label %cond.end73, !dbg !5098

cond.false64:                                     ; preds = %if.then40
  %62 = load i32, i32* %j, align 4, !dbg !5099
  %idxprom65 = sext i32 %62 to i64, !dbg !5101
  %63 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5101
  %ref_frames66 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %63, i32 0, i32 62, !dbg !5102
  %arrayidx67 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames66, i64 0, i64 %idxprom65, !dbg !5101
  %64 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx67, align 8, !dbg !5101
  %avframe68 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %64, i32 0, i32 0, !dbg !5103
  %65 = load %struct.AVFrame*, %struct.AVFrame** %avframe68, align 8, !dbg !5103
  %display_picture_number69 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 14, !dbg !5104
  %66 = load i32, i32* %display_picture_number69, align 4, !dbg !5104
  %conv70 = sext i32 %66 to i64, !dbg !5101
  %67 = load i64, i64* %refnum, align 8, !dbg !5105
  %sub71 = sub nsw i64 %conv70, %67, !dbg !5106
  %sub72 = sub nsw i64 0, %sub71, !dbg !5107
  br label %cond.end73, !dbg !5108

cond.end73:                                       ; preds = %cond.false64, %cond.true56
  %cond74 = phi i64 [ %sub63, %cond.true56 ], [ %sub72, %cond.false64 ], !dbg !5109
  store i64 %cond74, i64* %refdist, align 8, !dbg !5111
  br label %if.end75, !dbg !5112

if.end75:                                         ; preds = %cond.end73, %cond.end, %for.body12
  br label %for.inc, !dbg !5113

for.inc:                                          ; preds = %if.end75
  %68 = load i32, i32* %j, align 4, !dbg !5115
  %inc = add nsw i32 %68, 1, !dbg !5115
  store i32 %inc, i32* %j, align 4, !dbg !5115
  br label %for.cond9, !dbg !5117, !llvm.loop !5118

for.end:                                          ; preds = %land.end
  %69 = load i32, i32* %i, align 4, !dbg !5120
  %idxprom76 = sext i32 %69 to i64, !dbg !5122
  %70 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5122
  %ref_pics77 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %70, i32 0, i32 61, !dbg !5123
  %arrayidx78 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics77, i64 0, i64 %idxprom76, !dbg !5122
  %71 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx78, align 8, !dbg !5122
  %tobool79 = icmp ne %struct.DiracFrame* %71, null, !dbg !5122
  br i1 %tobool79, label %lor.lhs.false, label %if.then81, !dbg !5124

lor.lhs.false:                                    ; preds = %for.end
  %72 = load i64, i64* %refdist, align 8, !dbg !5125
  %tobool80 = icmp ne i64 %72, 0, !dbg !5125
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !5127

if.then81:                                        ; preds = %lor.lhs.false, %for.end
  %73 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5128
  %avctx82 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %73, i32 0, i32 0, !dbg !5129
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx82, align 16, !dbg !5129
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !5128
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i32 0, i32 0)), !dbg !5130
  br label %if.end83, !dbg !5130

if.end83:                                         ; preds = %if.then81, %lor.lhs.false
  %76 = load i32, i32* %i, align 4, !dbg !5131
  %idxprom84 = sext i32 %76 to i64, !dbg !5133
  %77 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5133
  %ref_pics85 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %77, i32 0, i32 61, !dbg !5134
  %arrayidx86 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics85, i64 0, i64 %idxprom84, !dbg !5133
  %78 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx86, align 8, !dbg !5133
  %tobool87 = icmp ne %struct.DiracFrame* %78, null, !dbg !5133
  br i1 %tobool87, label %if.end119, label %if.then88, !dbg !5135

if.then88:                                        ; preds = %if.end83
  store i32 0, i32* %j, align 4, !dbg !5136
  br label %for.cond89, !dbg !5138

for.cond89:                                       ; preds = %for.inc116, %if.then88
  %79 = load i32, i32* %j, align 4, !dbg !5139
  %cmp90 = icmp slt i32 %79, 14, !dbg !5142
  br i1 %cmp90, label %for.body92, label %for.end118, !dbg !5143

for.body92:                                       ; preds = %for.cond89
  %80 = load i32, i32* %j, align 4, !dbg !5144
  %idxprom93 = sext i32 %80 to i64, !dbg !5146
  %81 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5146
  %all_frames = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %81, i32 0, i32 64, !dbg !5147
  %arrayidx94 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames, i64 0, i64 %idxprom93, !dbg !5146
  %avframe95 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %arrayidx94, i32 0, i32 0, !dbg !5148
  %82 = load %struct.AVFrame*, %struct.AVFrame** %avframe95, align 8, !dbg !5148
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 0, !dbg !5149
  %arrayidx96 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5146
  %83 = load i8*, i8** %arrayidx96, align 8, !dbg !5146
  %tobool97 = icmp ne i8* %83, null, !dbg !5146
  br i1 %tobool97, label %if.end115, label %if.then98, !dbg !5150

if.then98:                                        ; preds = %for.body92
  %84 = load i32, i32* %j, align 4, !dbg !5151
  %idxprom99 = sext i32 %84 to i64, !dbg !5153
  %85 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5153
  %all_frames100 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %85, i32 0, i32 64, !dbg !5154
  %arrayidx101 = getelementptr inbounds [14 x %struct.DiracFrame], [14 x %struct.DiracFrame]* %all_frames100, i64 0, i64 %idxprom99, !dbg !5153
  %86 = load i32, i32* %i, align 4, !dbg !5155
  %idxprom102 = sext i32 %86 to i64, !dbg !5156
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5156
  %ref_pics103 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 61, !dbg !5157
  %arrayidx104 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics103, i64 0, i64 %idxprom102, !dbg !5156
  store %struct.DiracFrame* %arrayidx101, %struct.DiracFrame** %arrayidx104, align 8, !dbg !5158
  %88 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5159
  %avctx105 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %88, i32 0, i32 0, !dbg !5160
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx105, align 16, !dbg !5160
  %90 = load i32, i32* %i, align 4, !dbg !5161
  %idxprom106 = sext i32 %90 to i64, !dbg !5162
  %91 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5162
  %ref_pics107 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %91, i32 0, i32 61, !dbg !5163
  %arrayidx108 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics107, i64 0, i64 %idxprom106, !dbg !5162
  %92 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx108, align 8, !dbg !5162
  %avframe109 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %92, i32 0, i32 0, !dbg !5164
  %93 = load %struct.AVFrame*, %struct.AVFrame** %avframe109, align 8, !dbg !5164
  %call110 = call i32 @get_buffer_with_edge(%struct.AVCodecContext* %89, %struct.AVFrame* %93, i32 1), !dbg !5165
  store i32 %call110, i32* %ret, align 4, !dbg !5166
  %94 = load i32, i32* %ret, align 4, !dbg !5167
  %cmp111 = icmp slt i32 %94, 0, !dbg !5169
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !5170

if.then113:                                       ; preds = %if.then98
  %95 = load i32, i32* %ret, align 4, !dbg !5171
  store i32 %95, i32* %retval, align 4, !dbg !5172
  br label %return, !dbg !5172

if.end114:                                        ; preds = %if.then98
  br label %for.end118, !dbg !5173

if.end115:                                        ; preds = %for.body92
  br label %for.inc116, !dbg !5174

for.inc116:                                       ; preds = %if.end115
  %96 = load i32, i32* %j, align 4, !dbg !5176
  %inc117 = add nsw i32 %96, 1, !dbg !5176
  store i32 %inc117, i32* %j, align 4, !dbg !5176
  br label %for.cond89, !dbg !5178, !llvm.loop !5179

for.end118:                                       ; preds = %if.end114, %for.cond89
  br label %if.end119, !dbg !5181

if.end119:                                        ; preds = %for.end118, %if.end83
  %97 = load i32, i32* %i, align 4, !dbg !5182
  %idxprom120 = sext i32 %97 to i64, !dbg !5184
  %98 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5184
  %ref_pics121 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %98, i32 0, i32 61, !dbg !5185
  %arrayidx122 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics121, i64 0, i64 %idxprom120, !dbg !5184
  %99 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx122, align 8, !dbg !5184
  %tobool123 = icmp ne %struct.DiracFrame* %99, null, !dbg !5184
  br i1 %tobool123, label %if.end126, label %if.then124, !dbg !5186

if.then124:                                       ; preds = %if.end119
  %100 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5187
  %avctx125 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %100, i32 0, i32 0, !dbg !5189
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx125, align 16, !dbg !5189
  %102 = bitcast %struct.AVCodecContext* %101 to i8*, !dbg !5187
  call void (i8*, i32, i8*, ...) @av_log(i8* %102, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i32 0, i32 0)), !dbg !5190
  store i32 -1094995529, i32* %retval, align 4, !dbg !5191
  br label %return, !dbg !5191

if.end126:                                        ; preds = %if.end119
  br label %for.inc127, !dbg !5192

for.inc127:                                       ; preds = %if.end126
  %103 = load i32, i32* %i, align 4, !dbg !5193
  %inc128 = add nsw i32 %103, 1, !dbg !5193
  store i32 %inc128, i32* %i, align 4, !dbg !5193
  br label %for.cond, !dbg !5195, !llvm.loop !5196

for.end129:                                       ; preds = %for.cond
  %104 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5198
  %current_picture130 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %104, i32 0, i32 60, !dbg !5200
  %105 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture130, align 8, !dbg !5200
  %reference = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %105, i32 0, i32 4, !dbg !5201
  %106 = load i32, i32* %reference, align 8, !dbg !5201
  %tobool131 = icmp ne i32 %106, 0, !dbg !5198
  br i1 %tobool131, label %if.then132, label %if.end161, !dbg !5202

if.then132:                                       ; preds = %for.end129
  %107 = load i32, i32* %picnum, align 4, !dbg !5203
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5205
  %call133 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %108), !dbg !5206
  %add134 = add i32 %107, %call133, !dbg !5207
  store i32 %add134, i32* %retire, align 4, !dbg !5208
  %109 = load i32, i32* %retire, align 4, !dbg !5209
  %110 = load i32, i32* %picnum, align 4, !dbg !5211
  %cmp135 = icmp ne i32 %109, %110, !dbg !5212
  br i1 %cmp135, label %if.then137, label %if.end145, !dbg !5213

if.then137:                                       ; preds = %if.then132
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %retire_pic, metadata !5214, metadata !2947), !dbg !5216
  %111 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5217
  %ref_frames138 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %111, i32 0, i32 62, !dbg !5218
  %arraydecay = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames138, i32 0, i32 0, !dbg !5217
  %112 = load i32, i32* %retire, align 4, !dbg !5219
  %call139 = call %struct.DiracFrame* @remove_frame(%struct.DiracFrame** %arraydecay, i32 %112), !dbg !5220
  store %struct.DiracFrame* %call139, %struct.DiracFrame** %retire_pic, align 8, !dbg !5216
  %113 = load %struct.DiracFrame*, %struct.DiracFrame** %retire_pic, align 8, !dbg !5221
  %tobool140 = icmp ne %struct.DiracFrame* %113, null, !dbg !5221
  br i1 %tobool140, label %if.then141, label %if.else, !dbg !5223

if.then141:                                       ; preds = %if.then137
  %114 = load %struct.DiracFrame*, %struct.DiracFrame** %retire_pic, align 8, !dbg !5224
  %reference142 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %114, i32 0, i32 4, !dbg !5225
  %115 = load i32, i32* %reference142, align 8, !dbg !5226
  %and = and i32 %115, 4, !dbg !5226
  store i32 %and, i32* %reference142, align 8, !dbg !5226
  br label %if.end144, !dbg !5224

if.else:                                          ; preds = %if.then137
  %116 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5227
  %avctx143 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %116, i32 0, i32 0, !dbg !5228
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx143, align 16, !dbg !5228
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !5227
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0)), !dbg !5229
  br label %if.end144

if.end144:                                        ; preds = %if.else, %if.then141
  br label %if.end145, !dbg !5230

if.end145:                                        ; preds = %if.end144, %if.then132
  br label %while.cond, !dbg !5231

while.cond:                                       ; preds = %while.body, %if.end145
  %119 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5232
  %ref_frames146 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %119, i32 0, i32 62, !dbg !5234
  %arraydecay147 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames146, i32 0, i32 0, !dbg !5232
  %120 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5235
  %current_picture148 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %120, i32 0, i32 60, !dbg !5236
  %121 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture148, align 8, !dbg !5236
  %call149 = call i32 @add_frame(%struct.DiracFrame** %arraydecay147, i32 8, %struct.DiracFrame* %121), !dbg !5237
  %tobool150 = icmp ne i32 %call149, 0, !dbg !5238
  br i1 %tobool150, label %while.body, label %while.end, !dbg !5238

while.body:                                       ; preds = %while.cond
  %122 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5239
  %avctx151 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %122, i32 0, i32 0, !dbg !5241
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx151, align 16, !dbg !5241
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !5239
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0)), !dbg !5242
  %125 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5243
  %ref_frames152 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %125, i32 0, i32 62, !dbg !5244
  %arraydecay153 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames152, i32 0, i32 0, !dbg !5243
  %126 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5245
  %ref_frames154 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %126, i32 0, i32 62, !dbg !5246
  %arrayidx155 = getelementptr inbounds [9 x %struct.DiracFrame*], [9 x %struct.DiracFrame*]* %ref_frames154, i64 0, i64 0, !dbg !5245
  %127 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx155, align 16, !dbg !5245
  %avframe156 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %127, i32 0, i32 0, !dbg !5247
  %128 = load %struct.AVFrame*, %struct.AVFrame** %avframe156, align 8, !dbg !5247
  %display_picture_number157 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %128, i32 0, i32 14, !dbg !5248
  %129 = load i32, i32* %display_picture_number157, align 4, !dbg !5248
  %call158 = call %struct.DiracFrame* @remove_frame(%struct.DiracFrame** %arraydecay153, i32 %129), !dbg !5249
  %reference159 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %call158, i32 0, i32 4, !dbg !5250
  %130 = load i32, i32* %reference159, align 8, !dbg !5251
  %and160 = and i32 %130, 4, !dbg !5251
  store i32 %and160, i32* %reference159, align 8, !dbg !5251
  br label %while.cond, !dbg !5252, !llvm.loop !5254

while.end:                                        ; preds = %while.cond
  br label %if.end161, !dbg !5255

if.end161:                                        ; preds = %while.end, %for.end129
  %131 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5256
  %num_refs162 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %131, i32 0, i32 23, !dbg !5258
  %132 = load i32, i32* %num_refs162, align 8, !dbg !5258
  %tobool163 = icmp ne i32 %132, 0, !dbg !5256
  br i1 %tobool163, label %if.then164, label %if.end175, !dbg !5259

if.then164:                                       ; preds = %if.end161
  %133 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5260
  %call165 = call i32 @dirac_unpack_prediction_parameters(%struct.DiracContext* %133), !dbg !5262
  store i32 %call165, i32* %ret, align 4, !dbg !5263
  %134 = load i32, i32* %ret, align 4, !dbg !5264
  %cmp166 = icmp slt i32 %134, 0, !dbg !5266
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !5267

if.then168:                                       ; preds = %if.then164
  %135 = load i32, i32* %ret, align 4, !dbg !5268
  store i32 %135, i32* %retval, align 4, !dbg !5269
  br label %return, !dbg !5269

if.end169:                                        ; preds = %if.then164
  %136 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5270
  %call170 = call i32 @dirac_unpack_block_motion_data(%struct.DiracContext* %136), !dbg !5271
  store i32 %call170, i32* %ret, align 4, !dbg !5272
  %137 = load i32, i32* %ret, align 4, !dbg !5273
  %cmp171 = icmp slt i32 %137, 0, !dbg !5275
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !5276

if.then173:                                       ; preds = %if.end169
  %138 = load i32, i32* %ret, align 4, !dbg !5277
  store i32 %138, i32* %retval, align 4, !dbg !5278
  br label %return, !dbg !5278

if.end174:                                        ; preds = %if.end169
  br label %if.end175, !dbg !5279

if.end175:                                        ; preds = %if.end174, %if.end161
  %139 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5280
  %call176 = call i32 @dirac_unpack_idwt_params(%struct.DiracContext* %139), !dbg !5281
  store i32 %call176, i32* %ret, align 4, !dbg !5282
  %140 = load i32, i32* %ret, align 4, !dbg !5283
  %cmp177 = icmp slt i32 %140, 0, !dbg !5285
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !5286

if.then179:                                       ; preds = %if.end175
  %141 = load i32, i32* %ret, align 4, !dbg !5287
  store i32 %141, i32* %retval, align 4, !dbg !5288
  br label %return, !dbg !5288

if.end180:                                        ; preds = %if.end175
  %142 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5289
  call void @init_planes(%struct.DiracContext* %142), !dbg !5290
  store i32 0, i32* %retval, align 4, !dbg !5291
  br label %return, !dbg !5291

return:                                           ; preds = %if.end180, %if.then179, %if.then173, %if.then168, %if.then124, %if.then113
  %143 = load i32, i32* %retval, align 4, !dbg !5292
  ret i32 %143, !dbg !5292
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_decode_frame_internal(%struct.DiracContext* %s) #1 !dbg !5293 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %d = alloca %struct.DWTContext, align 8
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %comp = alloca i32, align 4
  %dsty = alloca i32, align 4
  %ret = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %p17 = alloca %struct.Plane*, align 8
  %frame = alloca i8*, align 8
  %idx = alloca i32, align 4
  %rowheight = alloca i32, align 4
  %ret103 = alloca i32, align 4
  %h = alloca i32, align 4
  %start = alloca i32, align 4
  %mctmp130 = alloca i16*, align 8
  %blocks = alloca %struct.DiracBlock*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !5294, metadata !2947), !dbg !5295
  call void @llvm.dbg.declare(metadata %struct.DWTContext* %d, metadata !5296, metadata !2947), !dbg !5331
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5332, metadata !2947), !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5334, metadata !2947), !dbg !5335
  call void @llvm.dbg.declare(metadata i32* %comp, metadata !5336, metadata !2947), !dbg !5337
  call void @llvm.dbg.declare(metadata i32* %dsty, metadata !5338, metadata !2947), !dbg !5339
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5340, metadata !2947), !dbg !5341
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5342
  %low_delay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 18, !dbg !5344
  %1 = load i32, i32* %low_delay, align 4, !dbg !5344
  %tobool = icmp ne i32 %1, 0, !dbg !5342
  br i1 %tobool, label %if.then, label %if.end12, !dbg !5345

if.then:                                          ; preds = %entry
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5346
  %hq_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 19, !dbg !5349
  %3 = load i32, i32* %hq_picture, align 8, !dbg !5349
  %tobool1 = icmp ne i32 %3, 0, !dbg !5346
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5350

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %comp, align 4, !dbg !5351
  br label %for.cond, !dbg !5354

for.cond:                                         ; preds = %for.inc, %if.then2
  %4 = load i32, i32* %comp, align 4, !dbg !5355
  %cmp = icmp slt i32 %4, 3, !dbg !5358
  br i1 %cmp, label %for.body, label %for.end, !dbg !5359

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !5360, metadata !2947), !dbg !5363
  %5 = load i32, i32* %comp, align 4, !dbg !5364
  %idxprom = sext i32 %5 to i64, !dbg !5365
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5365
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 10, !dbg !5366
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom, !dbg !5365
  store %struct.Plane* %arrayidx, %struct.Plane** %p, align 8, !dbg !5363
  %7 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !5367
  %idwt = getelementptr inbounds %struct.Plane, %struct.Plane* %7, i32 0, i32 0, !dbg !5368
  %buf = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt, i32 0, i32 3, !dbg !5369
  %8 = load i8*, i8** %buf, align 8, !dbg !5369
  %9 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !5370
  %idwt3 = getelementptr inbounds %struct.Plane, %struct.Plane* %9, i32 0, i32 0, !dbg !5371
  %stride = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt3, i32 0, i32 2, !dbg !5372
  %10 = load i32, i32* %stride, align 8, !dbg !5372
  %11 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !5373
  %idwt4 = getelementptr inbounds %struct.Plane, %struct.Plane* %11, i32 0, i32 0, !dbg !5374
  %height = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt4, i32 0, i32 1, !dbg !5375
  %12 = load i32, i32* %height, align 4, !dbg !5375
  %mul = mul nsw i32 %10, %12, !dbg !5376
  %conv = sext i32 %mul to i64, !dbg !5370
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %conv, i32 1, i1 false), !dbg !5377
  br label %for.inc, !dbg !5378

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %comp, align 4, !dbg !5379
  %inc = add nsw i32 %13, 1, !dbg !5379
  store i32 %inc, i32* %comp, align 4, !dbg !5379
  br label %for.cond, !dbg !5381, !llvm.loop !5382

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5384

if.end:                                           ; preds = %for.end, %if.then
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5385
  %zero_res = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 15, !dbg !5387
  %15 = load i32, i32* %zero_res, align 8, !dbg !5387
  %tobool5 = icmp ne i32 %15, 0, !dbg !5385
  br i1 %tobool5, label %if.end11, label %if.then6, !dbg !5388

if.then6:                                         ; preds = %if.end
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5389
  %call = call i32 @decode_lowdelay(%struct.DiracContext* %16), !dbg !5392
  store i32 %call, i32* %ret, align 4, !dbg !5393
  %cmp7 = icmp slt i32 %call, 0, !dbg !5394
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !5395

if.then9:                                         ; preds = %if.then6
  %17 = load i32, i32* %ret, align 4, !dbg !5396
  store i32 %17, i32* %retval, align 4, !dbg !5397
  br label %return, !dbg !5397

if.end10:                                         ; preds = %if.then6
  br label %if.end11, !dbg !5398

if.end11:                                         ; preds = %if.end10, %if.end
  br label %if.end12, !dbg !5399

if.end12:                                         ; preds = %if.end11, %entry
  store i32 0, i32* %comp, align 4, !dbg !5400
  br label %for.cond13, !dbg !5402

for.cond13:                                       ; preds = %for.inc204, %if.end12
  %18 = load i32, i32* %comp, align 4, !dbg !5403
  %cmp14 = icmp slt i32 %18, 3, !dbg !5406
  br i1 %cmp14, label %for.body16, label %for.end206, !dbg !5407

for.body16:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %struct.Plane** %p17, metadata !5408, metadata !2947), !dbg !5410
  %19 = load i32, i32* %comp, align 4, !dbg !5411
  %idxprom18 = sext i32 %19 to i64, !dbg !5412
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5412
  %plane19 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 10, !dbg !5413
  %arrayidx20 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane19, i64 0, i64 %idxprom18, !dbg !5412
  store %struct.Plane* %arrayidx20, %struct.Plane** %p17, align 8, !dbg !5410
  call void @llvm.dbg.declare(metadata i8** %frame, metadata !5414, metadata !2947), !dbg !5415
  %21 = load i32, i32* %comp, align 4, !dbg !5416
  %idxprom21 = sext i32 %21 to i64, !dbg !5417
  %22 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5417
  %current_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %22, i32 0, i32 60, !dbg !5418
  %23 = load %struct.DiracFrame*, %struct.DiracFrame** %current_picture, align 8, !dbg !5418
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %23, i32 0, i32 0, !dbg !5419
  %24 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !5419
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 0, !dbg !5420
  %arrayidx22 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom21, !dbg !5417
  %25 = load i8*, i8** %arrayidx22, align 8, !dbg !5417
  store i8* %25, i8** %frame, align 8, !dbg !5415
  store i32 0, i32* %i, align 4, !dbg !5421
  br label %for.cond23, !dbg !5423

for.cond23:                                       ; preds = %for.inc30, %for.body16
  %26 = load i32, i32* %i, align 4, !dbg !5424
  %cmp24 = icmp slt i32 %26, 4, !dbg !5427
  br i1 %cmp24, label %for.body26, label %for.end32, !dbg !5428

for.body26:                                       ; preds = %for.cond23
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5429
  %edge_emu_buffer_base = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 49, !dbg !5430
  %28 = load i8*, i8** %edge_emu_buffer_base, align 16, !dbg !5430
  %29 = load i32, i32* %i, align 4, !dbg !5431
  %30 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5432
  %width = getelementptr inbounds %struct.Plane, %struct.Plane* %30, i32 0, i32 1, !dbg !5433
  %31 = load i32, i32* %width, align 8, !dbg !5433
  %add = add nsw i32 %31, 16, !dbg !5434
  %sub = sub nsw i32 %add, 1, !dbg !5435
  %and = and i32 %sub, -16, !dbg !5436
  %mul27 = mul nsw i32 %29, %and, !dbg !5437
  %idx.ext = sext i32 %mul27 to i64, !dbg !5438
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !5438
  %32 = load i32, i32* %i, align 4, !dbg !5439
  %idxprom28 = sext i32 %32 to i64, !dbg !5440
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5440
  %edge_emu_buffer = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 48, !dbg !5441
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %edge_emu_buffer, i64 0, i64 %idxprom28, !dbg !5440
  store i8* %add.ptr, i8** %arrayidx29, align 8, !dbg !5442
  br label %for.inc30, !dbg !5440

for.inc30:                                        ; preds = %for.body26
  %34 = load i32, i32* %i, align 4, !dbg !5443
  %inc31 = add nsw i32 %34, 1, !dbg !5443
  store i32 %inc31, i32* %i, align 4, !dbg !5443
  br label %for.cond23, !dbg !5445, !llvm.loop !5446

for.end32:                                        ; preds = %for.cond23
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5448
  %zero_res33 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 15, !dbg !5450
  %36 = load i32, i32* %zero_res33, align 8, !dbg !5450
  %tobool34 = icmp ne i32 %36, 0, !dbg !5448
  br i1 %tobool34, label %if.end51, label %land.lhs.true, !dbg !5451

land.lhs.true:                                    ; preds = %for.end32
  %37 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5452
  %low_delay35 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %37, i32 0, i32 18, !dbg !5454
  %38 = load i32, i32* %low_delay35, align 4, !dbg !5454
  %tobool36 = icmp ne i32 %38, 0, !dbg !5452
  br i1 %tobool36, label %if.end51, label %if.then37, !dbg !5455

if.then37:                                        ; preds = %land.lhs.true
  %39 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5456
  %idwt38 = getelementptr inbounds %struct.Plane, %struct.Plane* %39, i32 0, i32 0, !dbg !5458
  %buf39 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt38, i32 0, i32 3, !dbg !5459
  %40 = load i8*, i8** %buf39, align 8, !dbg !5459
  %41 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5460
  %idwt40 = getelementptr inbounds %struct.Plane, %struct.Plane* %41, i32 0, i32 0, !dbg !5461
  %stride41 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt40, i32 0, i32 2, !dbg !5462
  %42 = load i32, i32* %stride41, align 8, !dbg !5462
  %43 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5463
  %idwt42 = getelementptr inbounds %struct.Plane, %struct.Plane* %43, i32 0, i32 0, !dbg !5464
  %height43 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt42, i32 0, i32 1, !dbg !5465
  %44 = load i32, i32* %height43, align 4, !dbg !5465
  %mul44 = mul nsw i32 %42, %44, !dbg !5466
  %conv45 = sext i32 %mul44 to i64, !dbg !5460
  call void @llvm.memset.p0i8.i64(i8* %40, i8 0, i64 %conv45, i32 1, i1 false), !dbg !5467
  %45 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5468
  %46 = load i32, i32* %comp, align 4, !dbg !5469
  %call46 = call i32 @decode_component(%struct.DiracContext* %45, i32 %46), !dbg !5470
  store i32 %call46, i32* %ret, align 4, !dbg !5471
  %47 = load i32, i32* %ret, align 4, !dbg !5472
  %cmp47 = icmp slt i32 %47, 0, !dbg !5474
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5475

if.then49:                                        ; preds = %if.then37
  %48 = load i32, i32* %ret, align 4, !dbg !5476
  store i32 %48, i32* %retval, align 4, !dbg !5477
  br label %return, !dbg !5477

if.end50:                                         ; preds = %if.then37
  br label %if.end51, !dbg !5478

if.end51:                                         ; preds = %if.end50, %land.lhs.true, %for.end32
  %49 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5479
  %idwt52 = getelementptr inbounds %struct.Plane, %struct.Plane* %49, i32 0, i32 0, !dbg !5480
  %50 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5481
  %wavelet_idx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %50, i32 0, i32 25, !dbg !5482
  %51 = load i32, i32* %wavelet_idx, align 16, !dbg !5482
  %add53 = add i32 %51, 2, !dbg !5483
  %52 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5484
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %52, i32 0, i32 24, !dbg !5485
  %53 = load i32, i32* %wavelet_depth, align 4, !dbg !5485
  %54 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5486
  %bit_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %54, i32 0, i32 13, !dbg !5487
  %55 = load i32, i32* %bit_depth, align 16, !dbg !5487
  %call54 = call i32 @ff_spatial_idwt_init(%struct.DWTContext* %d, %struct.DWTPlane* %idwt52, i32 %add53, i32 %53, i32 %55), !dbg !5488
  store i32 %call54, i32* %ret, align 4, !dbg !5489
  %56 = load i32, i32* %ret, align 4, !dbg !5490
  %cmp55 = icmp slt i32 %56, 0, !dbg !5492
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !5493

if.then57:                                        ; preds = %if.end51
  %57 = load i32, i32* %ret, align 4, !dbg !5494
  store i32 %57, i32* %retval, align 4, !dbg !5495
  br label %return, !dbg !5495

if.end58:                                         ; preds = %if.end51
  %58 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5496
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %58, i32 0, i32 23, !dbg !5498
  %59 = load i32, i32* %num_refs, align 8, !dbg !5498
  %tobool59 = icmp ne i32 %59, 0, !dbg !5496
  br i1 %tobool59, label %if.else, label %if.then60, !dbg !5499

if.then60:                                        ; preds = %if.end58
  store i32 0, i32* %y, align 4, !dbg !5500
  br label %for.cond61, !dbg !5503

for.cond61:                                       ; preds = %for.inc87, %if.then60
  %60 = load i32, i32* %y, align 4, !dbg !5504
  %61 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5507
  %height62 = getelementptr inbounds %struct.Plane, %struct.Plane* %61, i32 0, i32 2, !dbg !5508
  %62 = load i32, i32* %height62, align 4, !dbg !5508
  %cmp63 = icmp slt i32 %60, %62, !dbg !5509
  br i1 %cmp63, label %for.body65, label %for.end89, !dbg !5510

for.body65:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5511, metadata !2947), !dbg !5513
  %63 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5514
  %bit_depth66 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %63, i32 0, i32 13, !dbg !5515
  %64 = load i32, i32* %bit_depth66, align 16, !dbg !5515
  %sub67 = sub nsw i32 %64, 8, !dbg !5516
  %shr = ashr i32 %sub67, 1, !dbg !5517
  store i32 %shr, i32* %idx, align 4, !dbg !5513
  %65 = load i32, i32* %y, align 4, !dbg !5518
  %add68 = add nsw i32 %65, 16, !dbg !5519
  call void @ff_spatial_idwt_slice2(%struct.DWTContext* %d, i32 %add68), !dbg !5520
  %66 = load i32, i32* %idx, align 4, !dbg !5521
  %idxprom69 = sext i32 %66 to i64, !dbg !5522
  %67 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5522
  %diracdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %67, i32 0, i32 3, !dbg !5523
  %put_signed_rect_clamped = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp, i32 0, i32 3, !dbg !5524
  %arrayidx70 = getelementptr inbounds [3 x void (i8*, i32, i8*, i32, i32, i32)*], [3 x void (i8*, i32, i8*, i32, i32, i32)*]* %put_signed_rect_clamped, i64 0, i64 %idxprom69, !dbg !5522
  %68 = load void (i8*, i32, i8*, i32, i32, i32)*, void (i8*, i32, i8*, i32, i32, i32)** %arrayidx70, align 8, !dbg !5522
  %69 = load i8*, i8** %frame, align 8, !dbg !5525
  %70 = load i32, i32* %y, align 4, !dbg !5526
  %conv71 = sext i32 %70 to i64, !dbg !5526
  %71 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5527
  %stride72 = getelementptr inbounds %struct.Plane, %struct.Plane* %71, i32 0, i32 3, !dbg !5528
  %72 = load i64, i64* %stride72, align 8, !dbg !5528
  %mul73 = mul nsw i64 %conv71, %72, !dbg !5529
  %add.ptr74 = getelementptr inbounds i8, i8* %69, i64 %mul73, !dbg !5530
  %73 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5531
  %stride75 = getelementptr inbounds %struct.Plane, %struct.Plane* %73, i32 0, i32 3, !dbg !5532
  %74 = load i64, i64* %stride75, align 8, !dbg !5532
  %conv76 = trunc i64 %74 to i32, !dbg !5531
  %75 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5533
  %idwt77 = getelementptr inbounds %struct.Plane, %struct.Plane* %75, i32 0, i32 0, !dbg !5534
  %buf78 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt77, i32 0, i32 3, !dbg !5535
  %76 = load i8*, i8** %buf78, align 8, !dbg !5535
  %77 = load i32, i32* %y, align 4, !dbg !5536
  %78 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5537
  %idwt79 = getelementptr inbounds %struct.Plane, %struct.Plane* %78, i32 0, i32 0, !dbg !5538
  %stride80 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt79, i32 0, i32 2, !dbg !5539
  %79 = load i32, i32* %stride80, align 8, !dbg !5539
  %mul81 = mul nsw i32 %77, %79, !dbg !5540
  %idx.ext82 = sext i32 %mul81 to i64, !dbg !5541
  %add.ptr83 = getelementptr inbounds i8, i8* %76, i64 %idx.ext82, !dbg !5541
  %80 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5542
  %idwt84 = getelementptr inbounds %struct.Plane, %struct.Plane* %80, i32 0, i32 0, !dbg !5543
  %stride85 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt84, i32 0, i32 2, !dbg !5544
  %81 = load i32, i32* %stride85, align 8, !dbg !5544
  %82 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5545
  %width86 = getelementptr inbounds %struct.Plane, %struct.Plane* %82, i32 0, i32 1, !dbg !5546
  %83 = load i32, i32* %width86, align 8, !dbg !5546
  call void %68(i8* %add.ptr74, i32 %conv76, i8* %add.ptr83, i32 %81, i32 %83, i32 16), !dbg !5522
  br label %for.inc87, !dbg !5547

for.inc87:                                        ; preds = %for.body65
  %84 = load i32, i32* %y, align 4, !dbg !5548
  %add88 = add nsw i32 %84, 16, !dbg !5548
  store i32 %add88, i32* %y, align 4, !dbg !5548
  br label %for.cond61, !dbg !5550, !llvm.loop !5551

for.end89:                                        ; preds = %for.cond61
  br label %if.end203, !dbg !5553

if.else:                                          ; preds = %if.end58
  call void @llvm.dbg.declare(metadata i32* %rowheight, metadata !5554, metadata !2947), !dbg !5556
  %85 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5557
  %ybsep = getelementptr inbounds %struct.Plane, %struct.Plane* %85, i32 0, i32 7, !dbg !5558
  %86 = load i8, i8* %ybsep, align 1, !dbg !5558
  %conv90 = zext i8 %86 to i64, !dbg !5557
  %87 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5559
  %stride91 = getelementptr inbounds %struct.Plane, %struct.Plane* %87, i32 0, i32 3, !dbg !5560
  %88 = load i64, i64* %stride91, align 8, !dbg !5560
  %mul92 = mul nsw i64 %conv90, %88, !dbg !5561
  %conv93 = trunc i64 %mul92 to i32, !dbg !5557
  store i32 %conv93, i32* %rowheight, align 4, !dbg !5556
  %89 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5562
  %90 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5563
  %width94 = getelementptr inbounds %struct.Plane, %struct.Plane* %90, i32 0, i32 1, !dbg !5564
  %91 = load i32, i32* %width94, align 8, !dbg !5564
  %92 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5565
  %height95 = getelementptr inbounds %struct.Plane, %struct.Plane* %92, i32 0, i32 2, !dbg !5566
  %93 = load i32, i32* %height95, align 4, !dbg !5566
  %94 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5567
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %94, i32 0, i32 4, !dbg !5568
  %95 = load i8, i8* %xblen, align 8, !dbg !5568
  %conv96 = zext i8 %95 to i32, !dbg !5567
  %96 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5569
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %96, i32 0, i32 5, !dbg !5570
  %97 = load i8, i8* %yblen, align 1, !dbg !5570
  %conv97 = zext i8 %97 to i32, !dbg !5569
  call void @select_dsp_funcs(%struct.DiracContext* %89, i32 %91, i32 %93, i32 %conv96, i32 %conv97), !dbg !5571
  store i32 0, i32* %i, align 4, !dbg !5572
  br label %for.cond98, !dbg !5574

for.cond98:                                       ; preds = %for.inc113, %if.else
  %98 = load i32, i32* %i, align 4, !dbg !5575
  %99 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5578
  %num_refs99 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %99, i32 0, i32 23, !dbg !5579
  %100 = load i32, i32* %num_refs99, align 8, !dbg !5579
  %cmp100 = icmp slt i32 %98, %100, !dbg !5580
  br i1 %cmp100, label %for.body102, label %for.end115, !dbg !5581

for.body102:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata i32* %ret103, metadata !5582, metadata !2947), !dbg !5584
  %101 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5585
  %102 = load i32, i32* %i, align 4, !dbg !5586
  %idxprom104 = sext i32 %102 to i64, !dbg !5587
  %103 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5587
  %ref_pics = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %103, i32 0, i32 61, !dbg !5588
  %arrayidx105 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics, i64 0, i64 %idxprom104, !dbg !5587
  %104 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx105, align 8, !dbg !5587
  %105 = load i32, i32* %comp, align 4, !dbg !5589
  %106 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5590
  %width106 = getelementptr inbounds %struct.Plane, %struct.Plane* %106, i32 0, i32 1, !dbg !5591
  %107 = load i32, i32* %width106, align 8, !dbg !5591
  %108 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5592
  %height107 = getelementptr inbounds %struct.Plane, %struct.Plane* %108, i32 0, i32 2, !dbg !5593
  %109 = load i32, i32* %height107, align 4, !dbg !5593
  %call108 = call i32 @interpolate_refplane(%struct.DiracContext* %101, %struct.DiracFrame* %104, i32 %105, i32 %107, i32 %109), !dbg !5594
  store i32 %call108, i32* %ret103, align 4, !dbg !5584
  %110 = load i32, i32* %ret103, align 4, !dbg !5595
  %cmp109 = icmp slt i32 %110, 0, !dbg !5597
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !5598

if.then111:                                       ; preds = %for.body102
  %111 = load i32, i32* %ret103, align 4, !dbg !5599
  store i32 %111, i32* %retval, align 4, !dbg !5600
  br label %return, !dbg !5600

if.end112:                                        ; preds = %for.body102
  br label %for.inc113, !dbg !5601

for.inc113:                                       ; preds = %if.end112
  %112 = load i32, i32* %i, align 4, !dbg !5602
  %inc114 = add nsw i32 %112, 1, !dbg !5602
  store i32 %inc114, i32* %i, align 4, !dbg !5602
  br label %for.cond98, !dbg !5604, !llvm.loop !5605

for.end115:                                       ; preds = %for.cond98
  %113 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5607
  %mctmp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %113, i32 0, i32 50, !dbg !5608
  %114 = load i16*, i16** %mctmp, align 8, !dbg !5608
  %115 = bitcast i16* %114 to i8*, !dbg !5609
  %116 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5610
  %yoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %116, i32 0, i32 9, !dbg !5611
  %117 = load i8, i8* %yoffset, align 1, !dbg !5611
  %conv116 = zext i8 %117 to i32, !dbg !5610
  %mul117 = mul nsw i32 4, %conv116, !dbg !5612
  %conv118 = sext i32 %mul117 to i64, !dbg !5613
  %118 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5614
  %stride119 = getelementptr inbounds %struct.Plane, %struct.Plane* %118, i32 0, i32 3, !dbg !5615
  %119 = load i64, i64* %stride119, align 8, !dbg !5615
  %mul120 = mul nsw i64 %conv118, %119, !dbg !5616
  call void @llvm.memset.p0i8.i64(i8* %115, i8 0, i64 %mul120, i32 2, i1 false), !dbg !5609
  %120 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5617
  %yoffset121 = getelementptr inbounds %struct.Plane, %struct.Plane* %120, i32 0, i32 9, !dbg !5618
  %121 = load i8, i8* %yoffset121, align 1, !dbg !5618
  %conv122 = zext i8 %121 to i32, !dbg !5617
  %sub123 = sub nsw i32 0, %conv122, !dbg !5619
  store i32 %sub123, i32* %dsty, align 4, !dbg !5620
  store i32 0, i32* %y, align 4, !dbg !5621
  br label %for.cond124, !dbg !5623

for.cond124:                                      ; preds = %for.inc200, %for.end115
  %122 = load i32, i32* %y, align 4, !dbg !5624
  %123 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5627
  %blheight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %123, i32 0, i32 43, !dbg !5628
  %124 = load i32, i32* %blheight, align 16, !dbg !5628
  %cmp125 = icmp slt i32 %122, %124, !dbg !5629
  br i1 %cmp125, label %for.body127, label %for.end202, !dbg !5630

for.body127:                                      ; preds = %for.cond124
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5631, metadata !2947), !dbg !5633
  store i32 0, i32* %h, align 4, !dbg !5633
  call void @llvm.dbg.declare(metadata i32* %start, metadata !5634, metadata !2947), !dbg !5635
  %125 = load i32, i32* %dsty, align 4, !dbg !5636
  %cmp128 = icmp sgt i32 %125, 0, !dbg !5637
  br i1 %cmp128, label %cond.true, label %cond.false, !dbg !5638

cond.true:                                        ; preds = %for.body127
  %126 = load i32, i32* %dsty, align 4, !dbg !5639
  br label %cond.end, !dbg !5641

cond.false:                                       ; preds = %for.body127
  br label %cond.end, !dbg !5642

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %126, %cond.true ], [ 0, %cond.false ], !dbg !5644
  store i32 %cond, i32* %start, align 4, !dbg !5646
  call void @llvm.dbg.declare(metadata i16** %mctmp130, metadata !5647, metadata !2947), !dbg !5648
  %127 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5649
  %mctmp131 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %127, i32 0, i32 50, !dbg !5650
  %128 = load i16*, i16** %mctmp131, align 8, !dbg !5650
  %129 = load i32, i32* %y, align 4, !dbg !5651
  %130 = load i32, i32* %rowheight, align 4, !dbg !5652
  %mul132 = mul nsw i32 %129, %130, !dbg !5653
  %idx.ext133 = sext i32 %mul132 to i64, !dbg !5654
  %add.ptr134 = getelementptr inbounds i16, i16* %128, i64 %idx.ext133, !dbg !5654
  store i16* %add.ptr134, i16** %mctmp130, align 8, !dbg !5648
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %blocks, metadata !5655, metadata !2947), !dbg !5656
  %131 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5657
  %blmotion = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %131, i32 0, i32 47, !dbg !5658
  %132 = load %struct.DiracBlock*, %struct.DiracBlock** %blmotion, align 8, !dbg !5658
  %133 = load i32, i32* %y, align 4, !dbg !5659
  %134 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5660
  %blwidth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %134, i32 0, i32 42, !dbg !5661
  %135 = load i32, i32* %blwidth, align 4, !dbg !5661
  %mul135 = mul nsw i32 %133, %135, !dbg !5662
  %idx.ext136 = sext i32 %mul135 to i64, !dbg !5663
  %add.ptr137 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %132, i64 %idx.ext136, !dbg !5663
  store %struct.DiracBlock* %add.ptr137, %struct.DiracBlock** %blocks, align 8, !dbg !5656
  %136 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5664
  %137 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5665
  %138 = load i32, i32* %y, align 4, !dbg !5666
  call void @init_obmc_weights(%struct.DiracContext* %136, %struct.Plane* %137, i32 %138), !dbg !5667
  %139 = load i32, i32* %y, align 4, !dbg !5668
  %140 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5670
  %blheight138 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %140, i32 0, i32 43, !dbg !5671
  %141 = load i32, i32* %blheight138, align 16, !dbg !5671
  %sub139 = sub nsw i32 %141, 1, !dbg !5672
  %cmp140 = icmp eq i32 %139, %sub139, !dbg !5673
  br i1 %cmp140, label %if.then148, label %lor.lhs.false, !dbg !5674

lor.lhs.false:                                    ; preds = %cond.end
  %142 = load i32, i32* %start, align 4, !dbg !5675
  %143 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5677
  %ybsep142 = getelementptr inbounds %struct.Plane, %struct.Plane* %143, i32 0, i32 7, !dbg !5678
  %144 = load i8, i8* %ybsep142, align 1, !dbg !5678
  %conv143 = zext i8 %144 to i32, !dbg !5677
  %add144 = add nsw i32 %142, %conv143, !dbg !5679
  %145 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5680
  %height145 = getelementptr inbounds %struct.Plane, %struct.Plane* %145, i32 0, i32 2, !dbg !5681
  %146 = load i32, i32* %height145, align 4, !dbg !5681
  %cmp146 = icmp sgt i32 %add144, %146, !dbg !5682
  br i1 %cmp146, label %if.then148, label %if.else151, !dbg !5683

if.then148:                                       ; preds = %lor.lhs.false, %cond.end
  %147 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5684
  %height149 = getelementptr inbounds %struct.Plane, %struct.Plane* %147, i32 0, i32 2, !dbg !5685
  %148 = load i32, i32* %height149, align 4, !dbg !5685
  %149 = load i32, i32* %start, align 4, !dbg !5686
  %sub150 = sub nsw i32 %148, %149, !dbg !5687
  store i32 %sub150, i32* %h, align 4, !dbg !5688
  br label %if.end156, !dbg !5689

if.else151:                                       ; preds = %lor.lhs.false
  %150 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5690
  %ybsep152 = getelementptr inbounds %struct.Plane, %struct.Plane* %150, i32 0, i32 7, !dbg !5691
  %151 = load i8, i8* %ybsep152, align 1, !dbg !5691
  %conv153 = zext i8 %151 to i32, !dbg !5690
  %152 = load i32, i32* %start, align 4, !dbg !5692
  %153 = load i32, i32* %dsty, align 4, !dbg !5693
  %sub154 = sub nsw i32 %152, %153, !dbg !5694
  %sub155 = sub nsw i32 %conv153, %sub154, !dbg !5695
  store i32 %sub155, i32* %h, align 4, !dbg !5696
  br label %if.end156

if.end156:                                        ; preds = %if.else151, %if.then148
  %154 = load i32, i32* %h, align 4, !dbg !5697
  %cmp157 = icmp slt i32 %154, 0, !dbg !5699
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !5700

if.then159:                                       ; preds = %if.end156
  br label %for.end202, !dbg !5701

if.end160:                                        ; preds = %if.end156
  %155 = load i16*, i16** %mctmp130, align 8, !dbg !5702
  %156 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5703
  %yoffset161 = getelementptr inbounds %struct.Plane, %struct.Plane* %156, i32 0, i32 9, !dbg !5704
  %157 = load i8, i8* %yoffset161, align 1, !dbg !5704
  %conv162 = zext i8 %157 to i32, !dbg !5703
  %mul163 = mul nsw i32 2, %conv162, !dbg !5705
  %conv164 = sext i32 %mul163 to i64, !dbg !5706
  %158 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5707
  %stride165 = getelementptr inbounds %struct.Plane, %struct.Plane* %158, i32 0, i32 3, !dbg !5708
  %159 = load i64, i64* %stride165, align 8, !dbg !5708
  %mul166 = mul nsw i64 %conv164, %159, !dbg !5709
  %add.ptr167 = getelementptr inbounds i16, i16* %155, i64 %mul166, !dbg !5710
  %160 = bitcast i16* %add.ptr167 to i8*, !dbg !5711
  %161 = load i32, i32* %rowheight, align 4, !dbg !5712
  %mul168 = mul nsw i32 2, %161, !dbg !5713
  %conv169 = sext i32 %mul168 to i64, !dbg !5714
  call void @llvm.memset.p0i8.i64(i8* %160, i8 0, i64 %conv169, i32 2, i1 false), !dbg !5711
  %162 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5715
  %163 = load %struct.DiracBlock*, %struct.DiracBlock** %blocks, align 8, !dbg !5716
  %164 = load i16*, i16** %mctmp130, align 8, !dbg !5717
  %165 = load i32, i32* %comp, align 4, !dbg !5718
  %166 = load i32, i32* %dsty, align 4, !dbg !5719
  call void @mc_row(%struct.DiracContext* %162, %struct.DiracBlock* %163, i16* %164, i32 %165, i32 %166), !dbg !5720
  %167 = load i32, i32* %start, align 4, !dbg !5721
  %168 = load i32, i32* %dsty, align 4, !dbg !5722
  %sub170 = sub nsw i32 %167, %168, !dbg !5723
  %conv171 = sext i32 %sub170 to i64, !dbg !5724
  %169 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5725
  %stride172 = getelementptr inbounds %struct.Plane, %struct.Plane* %169, i32 0, i32 3, !dbg !5726
  %170 = load i64, i64* %stride172, align 8, !dbg !5726
  %mul173 = mul nsw i64 %conv171, %170, !dbg !5727
  %171 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5728
  %xoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %171, i32 0, i32 8, !dbg !5729
  %172 = load i8, i8* %xoffset, align 4, !dbg !5729
  %conv174 = zext i8 %172 to i64, !dbg !5728
  %add175 = add nsw i64 %mul173, %conv174, !dbg !5730
  %173 = load i16*, i16** %mctmp130, align 8, !dbg !5731
  %add.ptr176 = getelementptr inbounds i16, i16* %173, i64 %add175, !dbg !5731
  store i16* %add.ptr176, i16** %mctmp130, align 8, !dbg !5731
  %174 = load i32, i32* %start, align 4, !dbg !5732
  %175 = load i32, i32* %h, align 4, !dbg !5733
  %add177 = add nsw i32 %174, %175, !dbg !5734
  call void @ff_spatial_idwt_slice2(%struct.DWTContext* %d, i32 %add177), !dbg !5735
  %176 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5736
  %diracdsp178 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %176, i32 0, i32 3, !dbg !5737
  %add_rect_clamped = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp178, i32 0, i32 5, !dbg !5738
  %177 = load void (i8*, i16*, i32, i16*, i32, i32, i32)*, void (i8*, i16*, i32, i16*, i32, i32, i32)** %add_rect_clamped, align 8, !dbg !5738
  %178 = load i8*, i8** %frame, align 8, !dbg !5739
  %179 = load i32, i32* %start, align 4, !dbg !5740
  %conv179 = sext i32 %179 to i64, !dbg !5740
  %180 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5741
  %stride180 = getelementptr inbounds %struct.Plane, %struct.Plane* %180, i32 0, i32 3, !dbg !5742
  %181 = load i64, i64* %stride180, align 8, !dbg !5742
  %mul181 = mul nsw i64 %conv179, %181, !dbg !5743
  %add.ptr182 = getelementptr inbounds i8, i8* %178, i64 %mul181, !dbg !5744
  %182 = load i16*, i16** %mctmp130, align 8, !dbg !5745
  %183 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5746
  %stride183 = getelementptr inbounds %struct.Plane, %struct.Plane* %183, i32 0, i32 3, !dbg !5747
  %184 = load i64, i64* %stride183, align 8, !dbg !5747
  %conv184 = trunc i64 %184 to i32, !dbg !5746
  %185 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5748
  %idwt185 = getelementptr inbounds %struct.Plane, %struct.Plane* %185, i32 0, i32 0, !dbg !5749
  %buf186 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt185, i32 0, i32 3, !dbg !5750
  %186 = load i8*, i8** %buf186, align 8, !dbg !5750
  %187 = bitcast i8* %186 to i16*, !dbg !5751
  %188 = load i32, i32* %start, align 4, !dbg !5752
  %189 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5753
  %idwt187 = getelementptr inbounds %struct.Plane, %struct.Plane* %189, i32 0, i32 0, !dbg !5754
  %stride188 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt187, i32 0, i32 2, !dbg !5755
  %190 = load i32, i32* %stride188, align 8, !dbg !5755
  %shr189 = ashr i32 %190, 1, !dbg !5756
  %mul190 = mul nsw i32 %188, %shr189, !dbg !5757
  %idx.ext191 = sext i32 %mul190 to i64, !dbg !5758
  %add.ptr192 = getelementptr inbounds i16, i16* %187, i64 %idx.ext191, !dbg !5758
  %191 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5759
  %idwt193 = getelementptr inbounds %struct.Plane, %struct.Plane* %191, i32 0, i32 0, !dbg !5760
  %stride194 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt193, i32 0, i32 2, !dbg !5761
  %192 = load i32, i32* %stride194, align 8, !dbg !5761
  %shr195 = ashr i32 %192, 1, !dbg !5762
  %193 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5763
  %width196 = getelementptr inbounds %struct.Plane, %struct.Plane* %193, i32 0, i32 1, !dbg !5764
  %194 = load i32, i32* %width196, align 8, !dbg !5764
  %195 = load i32, i32* %h, align 4, !dbg !5765
  call void %177(i8* %add.ptr182, i16* %182, i32 %conv184, i16* %add.ptr192, i32 %shr195, i32 %194, i32 %195), !dbg !5736
  %196 = load %struct.Plane*, %struct.Plane** %p17, align 8, !dbg !5766
  %ybsep197 = getelementptr inbounds %struct.Plane, %struct.Plane* %196, i32 0, i32 7, !dbg !5767
  %197 = load i8, i8* %ybsep197, align 1, !dbg !5767
  %conv198 = zext i8 %197 to i32, !dbg !5766
  %198 = load i32, i32* %dsty, align 4, !dbg !5768
  %add199 = add nsw i32 %198, %conv198, !dbg !5768
  store i32 %add199, i32* %dsty, align 4, !dbg !5768
  br label %for.inc200, !dbg !5769

for.inc200:                                       ; preds = %if.end160
  %199 = load i32, i32* %y, align 4, !dbg !5770
  %inc201 = add nsw i32 %199, 1, !dbg !5770
  store i32 %inc201, i32* %y, align 4, !dbg !5770
  br label %for.cond124, !dbg !5772, !llvm.loop !5773

for.end202:                                       ; preds = %if.then159, %for.cond124
  br label %if.end203

if.end203:                                        ; preds = %for.end202, %for.end89
  br label %for.inc204, !dbg !5775

for.inc204:                                       ; preds = %if.end203
  %200 = load i32, i32* %comp, align 4, !dbg !5776
  %inc205 = add nsw i32 %200, 1, !dbg !5776
  store i32 %inc205, i32* %comp, align 4, !dbg !5776
  br label %for.cond13, !dbg !5778, !llvm.loop !5779

for.end206:                                       ; preds = %for.cond13
  store i32 0, i32* %retval, align 4, !dbg !5781
  br label %return, !dbg !5781

return:                                           ; preds = %for.end206, %if.then111, %if.then57, %if.then49, %if.then9
  %201 = load i32, i32* %retval, align 4, !dbg !5782
  ret i32 %201, !dbg !5782
}

declare i8* @av_mallocz_array(i64, i64) #3

declare i8* @av_malloc_array(i64, i64) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !5783 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5786, metadata !2947), !dbg !5787
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5788, metadata !2947), !dbg !5789
  %0 = load i32, i32* %n.addr, align 4, !dbg !5790
  %tobool = icmp ne i32 %0, 0, !dbg !5790
  br i1 %tobool, label %if.else, label %if.then, !dbg !5792

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5793
  br label %return, !dbg !5793

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !5795
  %cmp = icmp sle i32 %1, 25, !dbg !5797
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !5798

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5799
  %3 = load i32, i32* %n.addr, align 4, !dbg !5801
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !5802
  store i32 %call, i32* %retval, align 4, !dbg !5803
  br label %return, !dbg !5803

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5804, metadata !2947), !dbg !5806
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5807
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !5808
  %5 = load i32, i32* %n.addr, align 4, !dbg !5809
  %sub = sub nsw i32 %5, 16, !dbg !5810
  %shl = shl i32 %call3, %sub, !dbg !5811
  store i32 %shl, i32* %ret, align 4, !dbg !5806
  %6 = load i32, i32* %ret, align 4, !dbg !5812
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5813
  %8 = load i32, i32* %n.addr, align 4, !dbg !5814
  %sub4 = sub nsw i32 %8, 16, !dbg !5815
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !5816
  %or = or i32 %6, %call5, !dbg !5817
  store i32 %or, i32* %retval, align 4, !dbg !5818
  br label %return, !dbg !5818

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5819
  ret i32 %9, !dbg !5819
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dirac_get_se_golomb(%struct.GetBitContext* %gb) #5 !dbg !5820 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5824, metadata !2947), !dbg !5825
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5826, metadata !2947), !dbg !5827
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5828
  %call = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %0), !dbg !5829
  store i32 %call, i32* %ret, align 4, !dbg !5827
  %1 = load i32, i32* %ret, align 4, !dbg !5830
  %tobool = icmp ne i32 %1, 0, !dbg !5830
  br i1 %tobool, label %if.then, label %if.end, !dbg !5832

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !5833, metadata !2947), !dbg !5835
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5836
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !5837
  %sub = sub i32 0, %call1, !dbg !5838
  store i32 %sub, i32* %sign, align 4, !dbg !5835
  %3 = load i32, i32* %ret, align 4, !dbg !5839
  %4 = load i32, i32* %sign, align 4, !dbg !5840
  %xor = xor i32 %3, %4, !dbg !5841
  %5 = load i32, i32* %sign, align 4, !dbg !5842
  %sub2 = sub i32 %xor, %5, !dbg !5843
  store i32 %sub2, i32* %ret, align 4, !dbg !5844
  br label %if.end, !dbg !5845

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !5846
  ret i32 %6, !dbg !5847
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_unpack_prediction_parameters(%struct.DiracContext* %s) #1 !dbg !2667 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %idx = alloca i32, align 4
  %ref = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !5848, metadata !2947), !dbg !5849
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !5850, metadata !2947), !dbg !5851
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5852
  %gb1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 6, !dbg !5853
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5854, metadata !2947), !dbg !5855
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !5856, metadata !2947), !dbg !5857
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5858
  %call = call i8* @align_get_bits(%struct.GetBitContext* %1), !dbg !5859
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5860
  %call2 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %2), !dbg !5861
  store i32 %call2, i32* %idx, align 4, !dbg !5862
  %3 = load i32, i32* %idx, align 4, !dbg !5863
  %cmp = icmp ugt i32 %3, 4, !dbg !5865
  br i1 %cmp, label %if.then, label %if.end, !dbg !5866

if.then:                                          ; preds = %entry
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5867
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 0, !dbg !5869
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !5869
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !5867
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i32 0, i32 0)), !dbg !5870
  store i32 -1094995529, i32* %retval, align 4, !dbg !5871
  br label %return, !dbg !5871

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %idx, align 4, !dbg !5872
  %cmp3 = icmp eq i32 %7, 0, !dbg !5874
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5875

if.then4:                                         ; preds = %if.end
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5876
  %call5 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %8), !dbg !5878
  %conv = trunc i32 %call5 to i8, !dbg !5878
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5879
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 10, !dbg !5880
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 0, !dbg !5879
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx, i32 0, i32 4, !dbg !5881
  store i8 %conv, i8* %xblen, align 8, !dbg !5882
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5883
  %call6 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %10), !dbg !5884
  %conv7 = trunc i32 %call6 to i8, !dbg !5884
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5885
  %plane8 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 10, !dbg !5886
  %arrayidx9 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane8, i64 0, i64 0, !dbg !5885
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx9, i32 0, i32 5, !dbg !5887
  store i8 %conv7, i8* %yblen, align 1, !dbg !5888
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5889
  %call10 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %12), !dbg !5890
  %conv11 = trunc i32 %call10 to i8, !dbg !5890
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5891
  %plane12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 10, !dbg !5892
  %arrayidx13 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane12, i64 0, i64 0, !dbg !5891
  %xbsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx13, i32 0, i32 6, !dbg !5893
  store i8 %conv11, i8* %xbsep, align 2, !dbg !5894
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5895
  %call14 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %14), !dbg !5896
  %conv15 = trunc i32 %call14 to i8, !dbg !5896
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5897
  %plane16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %15, i32 0, i32 10, !dbg !5898
  %arrayidx17 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane16, i64 0, i64 0, !dbg !5897
  %ybsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx17, i32 0, i32 7, !dbg !5899
  store i8 %conv15, i8* %ybsep, align 1, !dbg !5900
  br label %if.end37, !dbg !5901

if.else:                                          ; preds = %if.end
  %16 = load i32, i32* %idx, align 4, !dbg !5902
  %sub = sub i32 %16, 1, !dbg !5904
  %idxprom = zext i32 %sub to i64, !dbg !5905
  %arrayidx18 = getelementptr inbounds [4 x i8], [4 x i8]* @dirac_unpack_prediction_parameters.default_blen, i64 0, i64 %idxprom, !dbg !5905
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !5905
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5906
  %plane19 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 10, !dbg !5907
  %arrayidx20 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane19, i64 0, i64 0, !dbg !5906
  %xblen21 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx20, i32 0, i32 4, !dbg !5908
  store i8 %17, i8* %xblen21, align 8, !dbg !5909
  %19 = load i32, i32* %idx, align 4, !dbg !5910
  %sub22 = sub i32 %19, 1, !dbg !5911
  %idxprom23 = zext i32 %sub22 to i64, !dbg !5912
  %arrayidx24 = getelementptr inbounds [4 x i8], [4 x i8]* @dirac_unpack_prediction_parameters.default_blen, i64 0, i64 %idxprom23, !dbg !5912
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !5912
  %21 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5913
  %plane25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %21, i32 0, i32 10, !dbg !5914
  %arrayidx26 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane25, i64 0, i64 0, !dbg !5913
  %yblen27 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx26, i32 0, i32 5, !dbg !5915
  store i8 %20, i8* %yblen27, align 1, !dbg !5916
  %22 = load i32, i32* %idx, align 4, !dbg !5917
  %mul = mul i32 4, %22, !dbg !5918
  %conv28 = trunc i32 %mul to i8, !dbg !5919
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5920
  %plane29 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 10, !dbg !5921
  %arrayidx30 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane29, i64 0, i64 0, !dbg !5920
  %xbsep31 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx30, i32 0, i32 6, !dbg !5922
  store i8 %conv28, i8* %xbsep31, align 2, !dbg !5923
  %24 = load i32, i32* %idx, align 4, !dbg !5924
  %mul32 = mul i32 4, %24, !dbg !5925
  %conv33 = trunc i32 %mul32 to i8, !dbg !5926
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5927
  %plane34 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 10, !dbg !5928
  %arrayidx35 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane34, i64 0, i64 0, !dbg !5927
  %ybsep36 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx35, i32 0, i32 7, !dbg !5929
  store i8 %conv33, i8* %ybsep36, align 1, !dbg !5930
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then4
  %26 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5931
  %plane38 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %26, i32 0, i32 10, !dbg !5933
  %arrayidx39 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane38, i64 0, i64 0, !dbg !5931
  %xblen40 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx39, i32 0, i32 4, !dbg !5934
  %27 = load i8, i8* %xblen40, align 8, !dbg !5934
  %conv41 = zext i8 %27 to i32, !dbg !5931
  %28 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5935
  %chroma_x_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %28, i32 0, i32 11, !dbg !5936
  %29 = load i32, i32* %chroma_x_shift, align 8, !dbg !5936
  %shl = shl i32 1, %29, !dbg !5937
  %rem = srem i32 %conv41, %shl, !dbg !5938
  %cmp42 = icmp ne i32 %rem, 0, !dbg !5939
  br i1 %cmp42, label %if.then61, label %lor.lhs.false, !dbg !5940

lor.lhs.false:                                    ; preds = %if.end37
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5941
  %plane44 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 10, !dbg !5942
  %arrayidx45 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane44, i64 0, i64 0, !dbg !5941
  %yblen46 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx45, i32 0, i32 5, !dbg !5943
  %31 = load i8, i8* %yblen46, align 1, !dbg !5943
  %conv47 = zext i8 %31 to i32, !dbg !5941
  %32 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5944
  %chroma_y_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %32, i32 0, i32 12, !dbg !5945
  %33 = load i32, i32* %chroma_y_shift, align 4, !dbg !5945
  %shl48 = shl i32 1, %33, !dbg !5946
  %rem49 = srem i32 %conv47, %shl48, !dbg !5947
  %cmp50 = icmp ne i32 %rem49, 0, !dbg !5948
  br i1 %cmp50, label %if.then61, label %lor.lhs.false52, !dbg !5949

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %34 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5950
  %plane53 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %34, i32 0, i32 10, !dbg !5951
  %arrayidx54 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane53, i64 0, i64 0, !dbg !5950
  %xblen55 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx54, i32 0, i32 4, !dbg !5952
  %35 = load i8, i8* %xblen55, align 8, !dbg !5952
  %tobool = icmp ne i8 %35, 0, !dbg !5950
  br i1 %tobool, label %lor.lhs.false56, label %if.then61, !dbg !5953

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5954
  %plane57 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 10, !dbg !5956
  %arrayidx58 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane57, i64 0, i64 0, !dbg !5954
  %yblen59 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx58, i32 0, i32 5, !dbg !5957
  %37 = load i8, i8* %yblen59, align 1, !dbg !5957
  %tobool60 = icmp ne i8 %37, 0, !dbg !5954
  br i1 %tobool60, label %if.end73, label %if.then61, !dbg !5958

if.then61:                                        ; preds = %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false, %if.end37
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5960
  %avctx62 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 0, !dbg !5962
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx62, align 16, !dbg !5962
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !5960
  %41 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5963
  %plane63 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %41, i32 0, i32 10, !dbg !5964
  %arrayidx64 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane63, i64 0, i64 0, !dbg !5963
  %xblen65 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx64, i32 0, i32 4, !dbg !5965
  %42 = load i8, i8* %xblen65, align 8, !dbg !5965
  %conv66 = zext i8 %42 to i32, !dbg !5963
  %43 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5966
  %plane67 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %43, i32 0, i32 10, !dbg !5967
  %arrayidx68 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane67, i64 0, i64 0, !dbg !5966
  %yblen69 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx68, i32 0, i32 5, !dbg !5968
  %44 = load i8, i8* %yblen69, align 1, !dbg !5968
  %conv70 = zext i8 %44 to i32, !dbg !5966
  %45 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5969
  %chroma_x_shift71 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %45, i32 0, i32 11, !dbg !5970
  %46 = load i32, i32* %chroma_x_shift71, align 8, !dbg !5970
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5971
  %chroma_y_shift72 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %47, i32 0, i32 12, !dbg !5972
  %48 = load i32, i32* %chroma_y_shift72, align 4, !dbg !5972
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.20, i32 0, i32 0), i32 %conv66, i32 %conv70, i32 %46, i32 %48), !dbg !5973
  store i32 -1094995529, i32* %retval, align 4, !dbg !5974
  br label %return, !dbg !5974

if.end73:                                         ; preds = %lor.lhs.false56
  %49 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5975
  %plane74 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %49, i32 0, i32 10, !dbg !5977
  %arrayidx75 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane74, i64 0, i64 0, !dbg !5975
  %xbsep76 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx75, i32 0, i32 6, !dbg !5978
  %50 = load i8, i8* %xbsep76, align 2, !dbg !5978
  %tobool77 = icmp ne i8 %50, 0, !dbg !5975
  br i1 %tobool77, label %lor.lhs.false78, label %if.then106, !dbg !5979

lor.lhs.false78:                                  ; preds = %if.end73
  %51 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5980
  %plane79 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %51, i32 0, i32 10, !dbg !5982
  %arrayidx80 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane79, i64 0, i64 0, !dbg !5980
  %ybsep81 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx80, i32 0, i32 7, !dbg !5983
  %52 = load i8, i8* %ybsep81, align 1, !dbg !5983
  %tobool82 = icmp ne i8 %52, 0, !dbg !5980
  br i1 %tobool82, label %lor.lhs.false83, label %if.then106, !dbg !5984

lor.lhs.false83:                                  ; preds = %lor.lhs.false78
  %53 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5985
  %plane84 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %53, i32 0, i32 10, !dbg !5987
  %arrayidx85 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane84, i64 0, i64 0, !dbg !5985
  %xbsep86 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx85, i32 0, i32 6, !dbg !5988
  %54 = load i8, i8* %xbsep86, align 2, !dbg !5988
  %conv87 = zext i8 %54 to i32, !dbg !5985
  %55 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5989
  %plane88 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %55, i32 0, i32 10, !dbg !5990
  %arrayidx89 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane88, i64 0, i64 0, !dbg !5989
  %xblen90 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx89, i32 0, i32 4, !dbg !5991
  %56 = load i8, i8* %xblen90, align 8, !dbg !5991
  %conv91 = zext i8 %56 to i32, !dbg !5989
  %div = sdiv i32 %conv91, 2, !dbg !5992
  %cmp92 = icmp slt i32 %conv87, %div, !dbg !5993
  br i1 %cmp92, label %if.then106, label %lor.lhs.false94, !dbg !5994

lor.lhs.false94:                                  ; preds = %lor.lhs.false83
  %57 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5995
  %plane95 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %57, i32 0, i32 10, !dbg !5997
  %arrayidx96 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane95, i64 0, i64 0, !dbg !5995
  %ybsep97 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx96, i32 0, i32 7, !dbg !5998
  %58 = load i8, i8* %ybsep97, align 1, !dbg !5998
  %conv98 = zext i8 %58 to i32, !dbg !5995
  %59 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !5999
  %plane99 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %59, i32 0, i32 10, !dbg !6000
  %arrayidx100 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane99, i64 0, i64 0, !dbg !5999
  %yblen101 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx100, i32 0, i32 5, !dbg !6001
  %60 = load i8, i8* %yblen101, align 1, !dbg !6001
  %conv102 = zext i8 %60 to i32, !dbg !5999
  %div103 = sdiv i32 %conv102, 2, !dbg !6002
  %cmp104 = icmp slt i32 %conv98, %div103, !dbg !6003
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !6004

if.then106:                                       ; preds = %lor.lhs.false94, %lor.lhs.false83, %lor.lhs.false78, %if.end73
  %61 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6005
  %avctx107 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %61, i32 0, i32 0, !dbg !6007
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx107, align 16, !dbg !6007
  %63 = bitcast %struct.AVCodecContext* %62 to i8*, !dbg !6005
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i32 0, i32 0)), !dbg !6008
  store i32 -1094995529, i32* %retval, align 4, !dbg !6009
  br label %return, !dbg !6009

if.end108:                                        ; preds = %lor.lhs.false94
  %64 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6010
  %plane109 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %64, i32 0, i32 10, !dbg !6012
  %arrayidx110 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane109, i64 0, i64 0, !dbg !6010
  %xbsep111 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx110, i32 0, i32 6, !dbg !6013
  %65 = load i8, i8* %xbsep111, align 2, !dbg !6013
  %conv112 = zext i8 %65 to i32, !dbg !6010
  %66 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6014
  %plane113 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %66, i32 0, i32 10, !dbg !6015
  %arrayidx114 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane113, i64 0, i64 0, !dbg !6014
  %xblen115 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx114, i32 0, i32 4, !dbg !6016
  %67 = load i8, i8* %xblen115, align 8, !dbg !6016
  %conv116 = zext i8 %67 to i32, !dbg !6014
  %cmp117 = icmp sgt i32 %conv112, %conv116, !dbg !6017
  br i1 %cmp117, label %if.then130, label %lor.lhs.false119, !dbg !6018

lor.lhs.false119:                                 ; preds = %if.end108
  %68 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6019
  %plane120 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %68, i32 0, i32 10, !dbg !6021
  %arrayidx121 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane120, i64 0, i64 0, !dbg !6019
  %ybsep122 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx121, i32 0, i32 7, !dbg !6022
  %69 = load i8, i8* %ybsep122, align 1, !dbg !6022
  %conv123 = zext i8 %69 to i32, !dbg !6019
  %70 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6023
  %plane124 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %70, i32 0, i32 10, !dbg !6024
  %arrayidx125 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane124, i64 0, i64 0, !dbg !6023
  %yblen126 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx125, i32 0, i32 5, !dbg !6025
  %71 = load i8, i8* %yblen126, align 1, !dbg !6025
  %conv127 = zext i8 %71 to i32, !dbg !6023
  %cmp128 = icmp sgt i32 %conv123, %conv127, !dbg !6026
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !6027

if.then130:                                       ; preds = %lor.lhs.false119, %if.end108
  %72 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6028
  %avctx131 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %72, i32 0, i32 0, !dbg !6030
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx131, align 16, !dbg !6030
  %74 = bitcast %struct.AVCodecContext* %73 to i8*, !dbg !6028
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i32 0, i32 0)), !dbg !6031
  store i32 -1094995529, i32* %retval, align 4, !dbg !6032
  br label %return, !dbg !6032

if.end132:                                        ; preds = %lor.lhs.false119
  %75 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6033
  %plane133 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %75, i32 0, i32 10, !dbg !6035
  %arrayidx134 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane133, i64 0, i64 0, !dbg !6033
  %xblen135 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx134, i32 0, i32 4, !dbg !6036
  %76 = load i8, i8* %xblen135, align 8, !dbg !6036
  %conv136 = zext i8 %76 to i32, !dbg !6037
  %77 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6038
  %plane137 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %77, i32 0, i32 10, !dbg !6039
  %arrayidx138 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane137, i64 0, i64 0, !dbg !6038
  %yblen139 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx138, i32 0, i32 5, !dbg !6040
  %78 = load i8, i8* %yblen139, align 1, !dbg !6040
  %conv140 = zext i8 %78 to i32, !dbg !6041
  %cmp141 = icmp sgt i32 %conv136, %conv140, !dbg !6042
  br i1 %cmp141, label %cond.true, label %cond.false, !dbg !6037

cond.true:                                        ; preds = %if.end132
  %79 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6043
  %plane143 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %79, i32 0, i32 10, !dbg !6045
  %arrayidx144 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane143, i64 0, i64 0, !dbg !6043
  %xblen145 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx144, i32 0, i32 4, !dbg !6046
  %80 = load i8, i8* %xblen145, align 8, !dbg !6046
  %conv146 = zext i8 %80 to i32, !dbg !6047
  br label %cond.end, !dbg !6048

cond.false:                                       ; preds = %if.end132
  %81 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6049
  %plane147 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %81, i32 0, i32 10, !dbg !6051
  %arrayidx148 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane147, i64 0, i64 0, !dbg !6049
  %yblen149 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx148, i32 0, i32 5, !dbg !6052
  %82 = load i8, i8* %yblen149, align 1, !dbg !6052
  %conv150 = zext i8 %82 to i32, !dbg !6053
  br label %cond.end, !dbg !6054

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv146, %cond.true ], [ %conv150, %cond.false ], !dbg !6055
  %cmp151 = icmp sgt i32 %cond, 32, !dbg !6057
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !6058

if.then153:                                       ; preds = %cond.end
  %83 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6059
  %avctx154 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %83, i32 0, i32 0, !dbg !6061
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx154, align 16, !dbg !6061
  %85 = bitcast %struct.AVCodecContext* %84 to i8*, !dbg !6059
  call void (i8*, i32, i8*, ...) @av_log(i8* %85, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0)), !dbg !6062
  store i32 -1163346256, i32* %retval, align 4, !dbg !6063
  br label %return, !dbg !6063

if.end155:                                        ; preds = %cond.end
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6064
  %call156 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %86), !dbg !6065
  %conv157 = trunc i32 %call156 to i8, !dbg !6065
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6066
  %mv_precision = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 39, !dbg !6067
  store i8 %conv157, i8* %mv_precision, align 16, !dbg !6068
  %88 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6069
  %mv_precision158 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %88, i32 0, i32 39, !dbg !6071
  %89 = load i8, i8* %mv_precision158, align 16, !dbg !6071
  %conv159 = zext i8 %89 to i32, !dbg !6069
  %cmp160 = icmp sgt i32 %conv159, 3, !dbg !6072
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !6073

if.then162:                                       ; preds = %if.end155
  %90 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6074
  %avctx163 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %90, i32 0, i32 0, !dbg !6076
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx163, align 16, !dbg !6076
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !6074
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i32 0, i32 0)), !dbg !6077
  store i32 -1094995529, i32* %retval, align 4, !dbg !6078
  br label %return, !dbg !6078

if.end164:                                        ; preds = %if.end155
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6079
  %call165 = call i32 @get_bits1(%struct.GetBitContext* %93), !dbg !6080
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6081
  %globalmc_flag = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 22, !dbg !6082
  store i32 %call165, i32* %globalmc_flag, align 4, !dbg !6083
  %95 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6084
  %globalmc_flag166 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %95, i32 0, i32 22, !dbg !6086
  %96 = load i32, i32* %globalmc_flag166, align 4, !dbg !6086
  %tobool167 = icmp ne i32 %96, 0, !dbg !6084
  br i1 %tobool167, label %if.then168, label %if.end267, !dbg !6087

if.then168:                                       ; preds = %if.end164
  %97 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6088
  %globalmc = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %97, i32 0, i32 38, !dbg !6090
  %arraydecay = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc, i32 0, i32 0, !dbg !6091
  %98 = bitcast %struct.anon.2* %arraydecay to i8*, !dbg !6091
  call void @llvm.memset.p0i8.i64(i8* %98, i8 0, i64 80, i32 16, i1 false), !dbg !6091
  store i32 0, i32* %ref, align 4, !dbg !6092
  br label %for.cond, !dbg !6094

for.cond:                                         ; preds = %for.inc, %if.then168
  %99 = load i32, i32* %ref, align 4, !dbg !6095
  %100 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6098
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %100, i32 0, i32 23, !dbg !6099
  %101 = load i32, i32* %num_refs, align 8, !dbg !6099
  %cmp169 = icmp ult i32 %99, %101, !dbg !6100
  br i1 %cmp169, label %for.body, label %for.end, !dbg !6101

for.body:                                         ; preds = %for.cond
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6102
  %call171 = call i32 @get_bits1(%struct.GetBitContext* %102), !dbg !6105
  %tobool172 = icmp ne i32 %call171, 0, !dbg !6105
  br i1 %tobool172, label %if.then173, label %if.end185, !dbg !6106

if.then173:                                       ; preds = %for.body
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6107
  %call174 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %103), !dbg !6109
  %104 = load i32, i32* %ref, align 4, !dbg !6110
  %idxprom175 = zext i32 %104 to i64, !dbg !6111
  %105 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6111
  %globalmc176 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %105, i32 0, i32 38, !dbg !6112
  %arrayidx177 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc176, i64 0, i64 %idxprom175, !dbg !6111
  %pan_tilt = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx177, i32 0, i32 0, !dbg !6113
  %arrayidx178 = getelementptr inbounds [2 x i32], [2 x i32]* %pan_tilt, i64 0, i64 0, !dbg !6111
  store i32 %call174, i32* %arrayidx178, align 8, !dbg !6114
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6115
  %call179 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %106), !dbg !6116
  %107 = load i32, i32* %ref, align 4, !dbg !6117
  %idxprom180 = zext i32 %107 to i64, !dbg !6118
  %108 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6118
  %globalmc181 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %108, i32 0, i32 38, !dbg !6119
  %arrayidx182 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc181, i64 0, i64 %idxprom180, !dbg !6118
  %pan_tilt183 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx182, i32 0, i32 0, !dbg !6120
  %arrayidx184 = getelementptr inbounds [2 x i32], [2 x i32]* %pan_tilt183, i64 0, i64 1, !dbg !6118
  store i32 %call179, i32* %arrayidx184, align 4, !dbg !6121
  br label %if.end185, !dbg !6122

if.end185:                                        ; preds = %if.then173, %for.body
  %109 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6123
  %call186 = call i32 @get_bits1(%struct.GetBitContext* %109), !dbg !6125
  %tobool187 = icmp ne i32 %call186, 0, !dbg !6125
  br i1 %tobool187, label %if.then188, label %if.else220, !dbg !6126

if.then188:                                       ; preds = %if.end185
  %110 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6127
  %call189 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %110), !dbg !6129
  %111 = load i32, i32* %ref, align 4, !dbg !6130
  %idxprom190 = zext i32 %111 to i64, !dbg !6131
  %112 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6131
  %globalmc191 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %112, i32 0, i32 38, !dbg !6132
  %arrayidx192 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc191, i64 0, i64 %idxprom190, !dbg !6131
  %zrs_exp = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx192, i32 0, i32 3, !dbg !6133
  store i32 %call189, i32* %zrs_exp, align 8, !dbg !6134
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6135
  %call193 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %113), !dbg !6136
  %114 = load i32, i32* %ref, align 4, !dbg !6137
  %idxprom194 = zext i32 %114 to i64, !dbg !6138
  %115 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6138
  %globalmc195 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %115, i32 0, i32 38, !dbg !6139
  %arrayidx196 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc195, i64 0, i64 %idxprom194, !dbg !6138
  %zrs = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx196, i32 0, i32 1, !dbg !6140
  %arrayidx197 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs, i64 0, i64 0, !dbg !6138
  %arrayidx198 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx197, i64 0, i64 0, !dbg !6138
  store i32 %call193, i32* %arrayidx198, align 8, !dbg !6141
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6142
  %call199 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %116), !dbg !6143
  %117 = load i32, i32* %ref, align 4, !dbg !6144
  %idxprom200 = zext i32 %117 to i64, !dbg !6145
  %118 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6145
  %globalmc201 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %118, i32 0, i32 38, !dbg !6146
  %arrayidx202 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc201, i64 0, i64 %idxprom200, !dbg !6145
  %zrs203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx202, i32 0, i32 1, !dbg !6147
  %arrayidx204 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs203, i64 0, i64 0, !dbg !6145
  %arrayidx205 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx204, i64 0, i64 1, !dbg !6145
  store i32 %call199, i32* %arrayidx205, align 4, !dbg !6148
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6149
  %call206 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %119), !dbg !6150
  %120 = load i32, i32* %ref, align 4, !dbg !6151
  %idxprom207 = zext i32 %120 to i64, !dbg !6152
  %121 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6152
  %globalmc208 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %121, i32 0, i32 38, !dbg !6153
  %arrayidx209 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc208, i64 0, i64 %idxprom207, !dbg !6152
  %zrs210 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx209, i32 0, i32 1, !dbg !6154
  %arrayidx211 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs210, i64 0, i64 1, !dbg !6152
  %arrayidx212 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx211, i64 0, i64 0, !dbg !6152
  store i32 %call206, i32* %arrayidx212, align 8, !dbg !6155
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6156
  %call213 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %122), !dbg !6157
  %123 = load i32, i32* %ref, align 4, !dbg !6158
  %idxprom214 = zext i32 %123 to i64, !dbg !6159
  %124 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6159
  %globalmc215 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %124, i32 0, i32 38, !dbg !6160
  %arrayidx216 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc215, i64 0, i64 %idxprom214, !dbg !6159
  %zrs217 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx216, i32 0, i32 1, !dbg !6161
  %arrayidx218 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs217, i64 0, i64 1, !dbg !6159
  %arrayidx219 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx218, i64 0, i64 1, !dbg !6159
  store i32 %call213, i32* %arrayidx219, align 4, !dbg !6162
  br label %if.end233, !dbg !6163

if.else220:                                       ; preds = %if.end185
  %125 = load i32, i32* %ref, align 4, !dbg !6164
  %idxprom221 = zext i32 %125 to i64, !dbg !6166
  %126 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6166
  %globalmc222 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %126, i32 0, i32 38, !dbg !6167
  %arrayidx223 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc222, i64 0, i64 %idxprom221, !dbg !6166
  %zrs224 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx223, i32 0, i32 1, !dbg !6168
  %arrayidx225 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs224, i64 0, i64 0, !dbg !6166
  %arrayidx226 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx225, i64 0, i64 0, !dbg !6166
  store i32 1, i32* %arrayidx226, align 8, !dbg !6169
  %127 = load i32, i32* %ref, align 4, !dbg !6170
  %idxprom227 = zext i32 %127 to i64, !dbg !6171
  %128 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6171
  %globalmc228 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %128, i32 0, i32 38, !dbg !6172
  %arrayidx229 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc228, i64 0, i64 %idxprom227, !dbg !6171
  %zrs230 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx229, i32 0, i32 1, !dbg !6173
  %arrayidx231 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs230, i64 0, i64 1, !dbg !6171
  %arrayidx232 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx231, i64 0, i64 1, !dbg !6171
  store i32 1, i32* %arrayidx232, align 4, !dbg !6174
  br label %if.end233

if.end233:                                        ; preds = %if.else220, %if.then188
  %129 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6175
  %call234 = call i32 @get_bits1(%struct.GetBitContext* %129), !dbg !6177
  %tobool235 = icmp ne i32 %call234, 0, !dbg !6177
  br i1 %tobool235, label %if.then236, label %if.end252, !dbg !6178

if.then236:                                       ; preds = %if.end233
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6179
  %call237 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %130), !dbg !6181
  %131 = load i32, i32* %ref, align 4, !dbg !6182
  %idxprom238 = zext i32 %131 to i64, !dbg !6183
  %132 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6183
  %globalmc239 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %132, i32 0, i32 38, !dbg !6184
  %arrayidx240 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc239, i64 0, i64 %idxprom238, !dbg !6183
  %perspective_exp = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx240, i32 0, i32 4, !dbg !6185
  store i32 %call237, i32* %perspective_exp, align 4, !dbg !6186
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6187
  %call241 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %133), !dbg !6188
  %134 = load i32, i32* %ref, align 4, !dbg !6189
  %idxprom242 = zext i32 %134 to i64, !dbg !6190
  %135 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6190
  %globalmc243 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %135, i32 0, i32 38, !dbg !6191
  %arrayidx244 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc243, i64 0, i64 %idxprom242, !dbg !6190
  %perspective = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx244, i32 0, i32 2, !dbg !6192
  %arrayidx245 = getelementptr inbounds [2 x i32], [2 x i32]* %perspective, i64 0, i64 0, !dbg !6190
  store i32 %call241, i32* %arrayidx245, align 8, !dbg !6193
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6194
  %call246 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %136), !dbg !6195
  %137 = load i32, i32* %ref, align 4, !dbg !6196
  %idxprom247 = zext i32 %137 to i64, !dbg !6197
  %138 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6197
  %globalmc248 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %138, i32 0, i32 38, !dbg !6198
  %arrayidx249 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc248, i64 0, i64 %idxprom247, !dbg !6197
  %perspective250 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx249, i32 0, i32 2, !dbg !6199
  %arrayidx251 = getelementptr inbounds [2 x i32], [2 x i32]* %perspective250, i64 0, i64 1, !dbg !6197
  store i32 %call246, i32* %arrayidx251, align 4, !dbg !6200
  br label %if.end252, !dbg !6201

if.end252:                                        ; preds = %if.then236, %if.end233
  %139 = load i32, i32* %ref, align 4, !dbg !6202
  %idxprom253 = zext i32 %139 to i64, !dbg !6204
  %140 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6204
  %globalmc254 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %140, i32 0, i32 38, !dbg !6205
  %arrayidx255 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc254, i64 0, i64 %idxprom253, !dbg !6204
  %perspective_exp256 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx255, i32 0, i32 4, !dbg !6206
  %141 = load i32, i32* %perspective_exp256, align 4, !dbg !6206
  %conv257 = zext i32 %141 to i64, !dbg !6204
  %142 = load i32, i32* %ref, align 4, !dbg !6207
  %idxprom258 = zext i32 %142 to i64, !dbg !6208
  %143 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6208
  %globalmc259 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %143, i32 0, i32 38, !dbg !6209
  %arrayidx260 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc259, i64 0, i64 %idxprom258, !dbg !6208
  %zrs_exp261 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx260, i32 0, i32 3, !dbg !6210
  %144 = load i32, i32* %zrs_exp261, align 8, !dbg !6210
  %conv262 = zext i32 %144 to i64, !dbg !6211
  %add = add i64 %conv257, %conv262, !dbg !6212
  %cmp263 = icmp ugt i64 %add, 30, !dbg !6213
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !6214

if.then265:                                       ; preds = %if.end252
  store i32 -1094995529, i32* %retval, align 4, !dbg !6215
  br label %return, !dbg !6215

if.end266:                                        ; preds = %if.end252
  br label %for.inc, !dbg !6217

for.inc:                                          ; preds = %if.end266
  %145 = load i32, i32* %ref, align 4, !dbg !6218
  %inc = add i32 %145, 1, !dbg !6218
  store i32 %inc, i32* %ref, align 4, !dbg !6218
  br label %for.cond, !dbg !6220, !llvm.loop !6221

for.end:                                          ; preds = %for.cond
  br label %if.end267, !dbg !6223

if.end267:                                        ; preds = %for.end, %if.end164
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6224
  %call268 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %146), !dbg !6226
  %tobool269 = icmp ne i32 %call268, 0, !dbg !6226
  br i1 %tobool269, label %if.then270, label %if.end272, !dbg !6227

if.then270:                                       ; preds = %if.end267
  %147 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6228
  %avctx271 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %147, i32 0, i32 0, !dbg !6230
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx271, align 16, !dbg !6230
  %149 = bitcast %struct.AVCodecContext* %148 to i8*, !dbg !6228
  call void (i8*, i32, i8*, ...) @av_log(i8* %149, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i32 0, i32 0)), !dbg !6231
  store i32 -1094995529, i32* %retval, align 4, !dbg !6232
  br label %return, !dbg !6232

if.end272:                                        ; preds = %if.end267
  %150 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6233
  %weight_log2denom = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %150, i32 0, i32 41, !dbg !6234
  store i32 1, i32* %weight_log2denom, align 8, !dbg !6235
  %151 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6236
  %weight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %151, i32 0, i32 40, !dbg !6237
  %arrayidx273 = getelementptr inbounds [2 x i16], [2 x i16]* %weight, i64 0, i64 0, !dbg !6236
  store i16 1, i16* %arrayidx273, align 2, !dbg !6238
  %152 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6239
  %weight274 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %152, i32 0, i32 40, !dbg !6240
  %arrayidx275 = getelementptr inbounds [2 x i16], [2 x i16]* %weight274, i64 0, i64 1, !dbg !6239
  store i16 1, i16* %arrayidx275, align 2, !dbg !6241
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6242
  %call276 = call i32 @get_bits1(%struct.GetBitContext* %153), !dbg !6244
  %tobool277 = icmp ne i32 %call276, 0, !dbg !6244
  br i1 %tobool277, label %if.then278, label %if.end305, !dbg !6245

if.then278:                                       ; preds = %if.end272
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6246
  %call279 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %154), !dbg !6248
  %155 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6249
  %weight_log2denom280 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %155, i32 0, i32 41, !dbg !6250
  store i32 %call279, i32* %weight_log2denom280, align 8, !dbg !6251
  %156 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6252
  %weight_log2denom281 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %156, i32 0, i32 41, !dbg !6254
  %157 = load i32, i32* %weight_log2denom281, align 8, !dbg !6254
  %cmp282 = icmp ult i32 %157, 1, !dbg !6255
  br i1 %cmp282, label %if.then288, label %lor.lhs.false284, !dbg !6256

lor.lhs.false284:                                 ; preds = %if.then278
  %158 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6257
  %weight_log2denom285 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %158, i32 0, i32 41, !dbg !6259
  %159 = load i32, i32* %weight_log2denom285, align 8, !dbg !6259
  %cmp286 = icmp ugt i32 %159, 8, !dbg !6260
  br i1 %cmp286, label %if.then288, label %if.end291, !dbg !6261

if.then288:                                       ; preds = %lor.lhs.false284, %if.then278
  %160 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6262
  %avctx289 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %160, i32 0, i32 0, !dbg !6264
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx289, align 16, !dbg !6264
  %162 = bitcast %struct.AVCodecContext* %161 to i8*, !dbg !6262
  call void (i8*, i32, i8*, ...) @av_log(i8* %162, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0)), !dbg !6265
  %163 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6266
  %weight_log2denom290 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %163, i32 0, i32 41, !dbg !6267
  store i32 1, i32* %weight_log2denom290, align 8, !dbg !6268
  store i32 -1094995529, i32* %retval, align 4, !dbg !6269
  br label %return, !dbg !6269

if.end291:                                        ; preds = %lor.lhs.false284
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6270
  %call292 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %164), !dbg !6271
  %conv293 = trunc i32 %call292 to i16, !dbg !6271
  %165 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6272
  %weight294 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %165, i32 0, i32 40, !dbg !6273
  %arrayidx295 = getelementptr inbounds [2 x i16], [2 x i16]* %weight294, i64 0, i64 0, !dbg !6272
  store i16 %conv293, i16* %arrayidx295, align 2, !dbg !6274
  %166 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6275
  %num_refs296 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %166, i32 0, i32 23, !dbg !6277
  %167 = load i32, i32* %num_refs296, align 8, !dbg !6277
  %cmp297 = icmp eq i32 %167, 2, !dbg !6278
  br i1 %cmp297, label %if.then299, label %if.end304, !dbg !6279

if.then299:                                       ; preds = %if.end291
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6280
  %call300 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %168), !dbg !6281
  %conv301 = trunc i32 %call300 to i16, !dbg !6281
  %169 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6282
  %weight302 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %169, i32 0, i32 40, !dbg !6283
  %arrayidx303 = getelementptr inbounds [2 x i16], [2 x i16]* %weight302, i64 0, i64 1, !dbg !6282
  store i16 %conv301, i16* %arrayidx303, align 2, !dbg !6284
  br label %if.end304, !dbg !6282

if.end304:                                        ; preds = %if.then299, %if.end291
  br label %if.end305, !dbg !6285

if.end305:                                        ; preds = %if.end304, %if.end272
  store i32 0, i32* %retval, align 4, !dbg !6286
  br label %return, !dbg !6286

return:                                           ; preds = %if.end305, %if.then288, %if.then270, %if.then265, %if.then162, %if.then153, %if.then130, %if.then106, %if.then61, %if.then
  %170 = load i32, i32* %retval, align 4, !dbg !6287
  ret i32 %170, !dbg !6287
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_unpack_block_motion_data(%struct.DiracContext* %s) #1 !dbg !6288 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %sbsplit = alloca i8*, align 8
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %q = alloca i32, align 4
  %p = alloca i32, align 4
  %arith = alloca [8 x %struct.DiracArith], align 16
  %split = alloca i32, align 4
  %blkcnt = alloca i32, align 4
  %step = alloca i32, align 4
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %block = alloca %struct.DiracBlock*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !6289, metadata !2947), !dbg !6290
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !6291, metadata !2947), !dbg !6292
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6293
  %gb1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 6, !dbg !6294
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !6292
  call void @llvm.dbg.declare(metadata i8** %sbsplit, metadata !6295, metadata !2947), !dbg !6296
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6297
  %sbsplit2 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 46, !dbg !6298
  %2 = load i8*, i8** %sbsplit2, align 16, !dbg !6298
  store i8* %2, i8** %sbsplit, align 8, !dbg !6296
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6299, metadata !2947), !dbg !6300
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6301, metadata !2947), !dbg !6302
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6303, metadata !2947), !dbg !6304
  call void @llvm.dbg.declare(metadata i32* %q, metadata !6305, metadata !2947), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %p, metadata !6307, metadata !2947), !dbg !6308
  call void @llvm.dbg.declare(metadata [8 x %struct.DiracArith]* %arith, metadata !6309, metadata !2947), !dbg !6325
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6326
  %call = call i8* @align_get_bits(%struct.GetBitContext* %3), !dbg !6327
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6328
  %seq = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 7, !dbg !6329
  %width = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq, i32 0, i32 0, !dbg !6330
  %5 = load i32, i32* %width, align 8, !dbg !6330
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6331
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 10, !dbg !6332
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 0, !dbg !6331
  %xbsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx, i32 0, i32 6, !dbg !6333
  %7 = load i8, i8* %xbsep, align 2, !dbg !6333
  %conv = zext i8 %7 to i32, !dbg !6331
  %mul = mul nsw i32 4, %conv, !dbg !6334
  %add = add i32 %5, %mul, !dbg !6335
  %sub = sub i32 %add, 1, !dbg !6336
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6337
  %plane3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 10, !dbg !6338
  %arrayidx4 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane3, i64 0, i64 0, !dbg !6337
  %xbsep5 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx4, i32 0, i32 6, !dbg !6339
  %9 = load i8, i8* %xbsep5, align 2, !dbg !6339
  %conv6 = zext i8 %9 to i32, !dbg !6337
  %mul7 = mul nsw i32 4, %conv6, !dbg !6340
  %div = udiv i32 %sub, %mul7, !dbg !6341
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6342
  %sbwidth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 44, !dbg !6343
  store i32 %div, i32* %sbwidth, align 4, !dbg !6344
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6345
  %seq8 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 7, !dbg !6346
  %height = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq8, i32 0, i32 1, !dbg !6347
  %12 = load i32, i32* %height, align 4, !dbg !6347
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6348
  %plane9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 10, !dbg !6349
  %arrayidx10 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane9, i64 0, i64 0, !dbg !6348
  %ybsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx10, i32 0, i32 7, !dbg !6350
  %14 = load i8, i8* %ybsep, align 1, !dbg !6350
  %conv11 = zext i8 %14 to i32, !dbg !6348
  %mul12 = mul nsw i32 4, %conv11, !dbg !6351
  %add13 = add i32 %12, %mul12, !dbg !6352
  %sub14 = sub i32 %add13, 1, !dbg !6353
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6354
  %plane15 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %15, i32 0, i32 10, !dbg !6355
  %arrayidx16 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane15, i64 0, i64 0, !dbg !6354
  %ybsep17 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx16, i32 0, i32 7, !dbg !6356
  %16 = load i8, i8* %ybsep17, align 1, !dbg !6356
  %conv18 = zext i8 %16 to i32, !dbg !6354
  %mul19 = mul nsw i32 4, %conv18, !dbg !6357
  %div20 = udiv i32 %sub14, %mul19, !dbg !6358
  %17 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6359
  %sbheight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %17, i32 0, i32 45, !dbg !6360
  store i32 %div20, i32* %sbheight, align 8, !dbg !6361
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6362
  %sbwidth21 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 44, !dbg !6363
  %19 = load i32, i32* %sbwidth21, align 4, !dbg !6363
  %mul22 = mul nsw i32 4, %19, !dbg !6364
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6365
  %blwidth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 42, !dbg !6366
  store i32 %mul22, i32* %blwidth, align 4, !dbg !6367
  %21 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6368
  %sbheight23 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %21, i32 0, i32 45, !dbg !6369
  %22 = load i32, i32* %sbheight23, align 8, !dbg !6369
  %mul24 = mul nsw i32 4, %22, !dbg !6370
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6371
  %blheight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 43, !dbg !6372
  store i32 %mul24, i32* %blheight, align 16, !dbg !6373
  %arraydecay = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6374
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6375
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6376
  %call25 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %25), !dbg !6377
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %arraydecay, %struct.GetBitContext* %24, i32 %call25), !dbg !6378
  store i32 0, i32* %y, align 4, !dbg !6380
  br label %for.cond, !dbg !6382

for.cond:                                         ; preds = %for.inc45, %entry
  %26 = load i32, i32* %y, align 4, !dbg !6383
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6386
  %sbheight26 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 45, !dbg !6387
  %28 = load i32, i32* %sbheight26, align 8, !dbg !6387
  %cmp = icmp slt i32 %26, %28, !dbg !6388
  br i1 %cmp, label %for.body, label %for.end47, !dbg !6389

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6390
  br label %for.cond28, !dbg !6393

for.cond28:                                       ; preds = %for.inc, %for.body
  %29 = load i32, i32* %x, align 4, !dbg !6394
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6397
  %sbwidth29 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 44, !dbg !6398
  %31 = load i32, i32* %sbwidth29, align 4, !dbg !6398
  %cmp30 = icmp slt i32 %29, %31, !dbg !6399
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !6400

for.body32:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i32* %split, metadata !6401, metadata !2947), !dbg !6403
  %arraydecay33 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6404
  %call34 = call i32 @dirac_get_arith_uint(%struct.DiracArith* %arraydecay33, i32 7, i32 0), !dbg !6405
  store i32 %call34, i32* %split, align 4, !dbg !6403
  %32 = load i32, i32* %split, align 4, !dbg !6406
  %cmp35 = icmp ugt i32 %32, 2, !dbg !6408
  br i1 %cmp35, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %for.body32
  store i32 -1094995529, i32* %retval, align 4, !dbg !6410
  br label %return, !dbg !6410

if.end:                                           ; preds = %for.body32
  %33 = load i32, i32* %split, align 4, !dbg !6411
  %34 = load i8*, i8** %sbsplit, align 8, !dbg !6412
  %35 = load i32, i32* %x, align 4, !dbg !6413
  %idx.ext = sext i32 %35 to i64, !dbg !6414
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %idx.ext, !dbg !6414
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6415
  %sbwidth37 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 44, !dbg !6416
  %37 = load i32, i32* %sbwidth37, align 4, !dbg !6416
  %38 = load i32, i32* %x, align 4, !dbg !6417
  %39 = load i32, i32* %y, align 4, !dbg !6418
  %call38 = call i32 @pred_sbsplit(i8* %add.ptr, i32 %37, i32 %38, i32 %39), !dbg !6419
  %add39 = add i32 %33, %call38, !dbg !6420
  %rem = urem i32 %add39, 3, !dbg !6421
  %conv40 = trunc i32 %rem to i8, !dbg !6422
  %40 = load i32, i32* %x, align 4, !dbg !6423
  %idxprom = sext i32 %40 to i64, !dbg !6424
  %41 = load i8*, i8** %sbsplit, align 8, !dbg !6424
  %arrayidx41 = getelementptr inbounds i8, i8* %41, i64 %idxprom, !dbg !6424
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !6425
  br label %for.inc, !dbg !6426

for.inc:                                          ; preds = %if.end
  %42 = load i32, i32* %x, align 4, !dbg !6427
  %inc = add nsw i32 %42, 1, !dbg !6427
  store i32 %inc, i32* %x, align 4, !dbg !6427
  br label %for.cond28, !dbg !6429, !llvm.loop !6430

for.end:                                          ; preds = %for.cond28
  %43 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6432
  %sbwidth42 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %43, i32 0, i32 44, !dbg !6433
  %44 = load i32, i32* %sbwidth42, align 4, !dbg !6433
  %45 = load i8*, i8** %sbsplit, align 8, !dbg !6434
  %idx.ext43 = sext i32 %44 to i64, !dbg !6434
  %add.ptr44 = getelementptr inbounds i8, i8* %45, i64 %idx.ext43, !dbg !6434
  store i8* %add.ptr44, i8** %sbsplit, align 8, !dbg !6434
  br label %for.inc45, !dbg !6435

for.inc45:                                        ; preds = %for.end
  %46 = load i32, i32* %y, align 4, !dbg !6436
  %inc46 = add nsw i32 %46, 1, !dbg !6436
  store i32 %inc46, i32* %y, align 4, !dbg !6436
  br label %for.cond, !dbg !6438, !llvm.loop !6439

for.end47:                                        ; preds = %for.cond
  %arraydecay48 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6441
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6442
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6443
  %call49 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %48), !dbg !6444
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %arraydecay48, %struct.GetBitContext* %47, i32 %call49), !dbg !6445
  store i32 0, i32* %i, align 4, !dbg !6446
  br label %for.cond50, !dbg !6448

for.cond50:                                       ; preds = %for.inc66, %for.end47
  %49 = load i32, i32* %i, align 4, !dbg !6449
  %50 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6452
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %50, i32 0, i32 23, !dbg !6453
  %51 = load i32, i32* %num_refs, align 8, !dbg !6453
  %cmp51 = icmp slt i32 %49, %51, !dbg !6454
  br i1 %cmp51, label %for.body53, label %for.end68, !dbg !6455

for.body53:                                       ; preds = %for.cond50
  %arraydecay54 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6456
  %add.ptr55 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %arraydecay54, i64 4, !dbg !6458
  %52 = load i32, i32* %i, align 4, !dbg !6459
  %mul56 = mul nsw i32 2, %52, !dbg !6460
  %idx.ext57 = sext i32 %mul56 to i64, !dbg !6461
  %add.ptr58 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr55, i64 %idx.ext57, !dbg !6461
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6462
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6463
  %call59 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %54), !dbg !6464
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %add.ptr58, %struct.GetBitContext* %53, i32 %call59), !dbg !6465
  %arraydecay60 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6467
  %add.ptr61 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %arraydecay60, i64 5, !dbg !6468
  %55 = load i32, i32* %i, align 4, !dbg !6469
  %mul62 = mul nsw i32 2, %55, !dbg !6470
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !6471
  %add.ptr64 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr61, i64 %idx.ext63, !dbg !6471
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6472
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6473
  %call65 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %57), !dbg !6474
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %add.ptr64, %struct.GetBitContext* %56, i32 %call65), !dbg !6475
  br label %for.inc66, !dbg !6476

for.inc66:                                        ; preds = %for.body53
  %58 = load i32, i32* %i, align 4, !dbg !6477
  %inc67 = add nsw i32 %58, 1, !dbg !6477
  store i32 %inc67, i32* %i, align 4, !dbg !6477
  br label %for.cond50, !dbg !6479, !llvm.loop !6480

for.end68:                                        ; preds = %for.cond50
  store i32 0, i32* %i, align 4, !dbg !6482
  br label %for.cond69, !dbg !6484

for.cond69:                                       ; preds = %for.inc78, %for.end68
  %59 = load i32, i32* %i, align 4, !dbg !6485
  %cmp70 = icmp slt i32 %59, 3, !dbg !6488
  br i1 %cmp70, label %for.body72, label %for.end80, !dbg !6489

for.body72:                                       ; preds = %for.cond69
  %arraydecay73 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6490
  %add.ptr74 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %arraydecay73, i64 1, !dbg !6491
  %60 = load i32, i32* %i, align 4, !dbg !6492
  %idx.ext75 = sext i32 %60 to i64, !dbg !6493
  %add.ptr76 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr74, i64 %idx.ext75, !dbg !6493
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6494
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6495
  %call77 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %62), !dbg !6496
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %add.ptr76, %struct.GetBitContext* %61, i32 %call77), !dbg !6497
  br label %for.inc78, !dbg !6498

for.inc78:                                        ; preds = %for.body72
  %63 = load i32, i32* %i, align 4, !dbg !6499
  %inc79 = add nsw i32 %63, 1, !dbg !6499
  store i32 %inc79, i32* %i, align 4, !dbg !6499
  br label %for.cond69, !dbg !6501, !llvm.loop !6502

for.end80:                                        ; preds = %for.cond69
  store i32 0, i32* %y, align 4, !dbg !6504
  br label %for.cond81, !dbg !6506

for.cond81:                                       ; preds = %for.inc136, %for.end80
  %64 = load i32, i32* %y, align 4, !dbg !6507
  %65 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6510
  %sbheight82 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %65, i32 0, i32 45, !dbg !6511
  %66 = load i32, i32* %sbheight82, align 8, !dbg !6511
  %cmp83 = icmp slt i32 %64, %66, !dbg !6512
  br i1 %cmp83, label %for.body85, label %for.end138, !dbg !6513

for.body85:                                       ; preds = %for.cond81
  store i32 0, i32* %x, align 4, !dbg !6514
  br label %for.cond86, !dbg !6516

for.cond86:                                       ; preds = %for.inc133, %for.body85
  %67 = load i32, i32* %x, align 4, !dbg !6517
  %68 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6520
  %sbwidth87 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %68, i32 0, i32 44, !dbg !6521
  %69 = load i32, i32* %sbwidth87, align 4, !dbg !6521
  %cmp88 = icmp slt i32 %67, %69, !dbg !6522
  br i1 %cmp88, label %for.body90, label %for.end135, !dbg !6523

for.body90:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata i32* %blkcnt, metadata !6524, metadata !2947), !dbg !6526
  %70 = load i32, i32* %y, align 4, !dbg !6527
  %71 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6528
  %sbwidth91 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %71, i32 0, i32 44, !dbg !6529
  %72 = load i32, i32* %sbwidth91, align 4, !dbg !6529
  %mul92 = mul nsw i32 %70, %72, !dbg !6530
  %73 = load i32, i32* %x, align 4, !dbg !6531
  %add93 = add nsw i32 %mul92, %73, !dbg !6532
  %idxprom94 = sext i32 %add93 to i64, !dbg !6533
  %74 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6533
  %sbsplit95 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %74, i32 0, i32 46, !dbg !6534
  %75 = load i8*, i8** %sbsplit95, align 16, !dbg !6534
  %arrayidx96 = getelementptr inbounds i8, i8* %75, i64 %idxprom94, !dbg !6533
  %76 = load i8, i8* %arrayidx96, align 1, !dbg !6533
  %conv97 = zext i8 %76 to i32, !dbg !6533
  %shl = shl i32 1, %conv97, !dbg !6535
  store i32 %shl, i32* %blkcnt, align 4, !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6536, metadata !2947), !dbg !6537
  %77 = load i32, i32* %y, align 4, !dbg !6538
  %78 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6539
  %sbwidth98 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %78, i32 0, i32 44, !dbg !6540
  %79 = load i32, i32* %sbwidth98, align 4, !dbg !6540
  %mul99 = mul nsw i32 %77, %79, !dbg !6541
  %80 = load i32, i32* %x, align 4, !dbg !6542
  %add100 = add nsw i32 %mul99, %80, !dbg !6543
  %idxprom101 = sext i32 %add100 to i64, !dbg !6544
  %81 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6544
  %sbsplit102 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %81, i32 0, i32 46, !dbg !6545
  %82 = load i8*, i8** %sbsplit102, align 16, !dbg !6545
  %arrayidx103 = getelementptr inbounds i8, i8* %82, i64 %idxprom101, !dbg !6544
  %83 = load i8, i8* %arrayidx103, align 1, !dbg !6544
  %conv104 = zext i8 %83 to i32, !dbg !6544
  %shr = ashr i32 4, %conv104, !dbg !6546
  store i32 %shr, i32* %step, align 4, !dbg !6537
  store i32 0, i32* %q, align 4, !dbg !6547
  br label %for.cond105, !dbg !6549

for.cond105:                                      ; preds = %for.inc130, %for.body90
  %84 = load i32, i32* %q, align 4, !dbg !6550
  %85 = load i32, i32* %blkcnt, align 4, !dbg !6553
  %cmp106 = icmp slt i32 %84, %85, !dbg !6554
  br i1 %cmp106, label %for.body108, label %for.end132, !dbg !6555

for.body108:                                      ; preds = %for.cond105
  store i32 0, i32* %p, align 4, !dbg !6556
  br label %for.cond109, !dbg !6558

for.cond109:                                      ; preds = %for.inc127, %for.body108
  %86 = load i32, i32* %p, align 4, !dbg !6559
  %87 = load i32, i32* %blkcnt, align 4, !dbg !6562
  %cmp110 = icmp slt i32 %86, %87, !dbg !6563
  br i1 %cmp110, label %for.body112, label %for.end129, !dbg !6564

for.body112:                                      ; preds = %for.cond109
  call void @llvm.dbg.declare(metadata i32* %bx, metadata !6565, metadata !2947), !dbg !6567
  %88 = load i32, i32* %x, align 4, !dbg !6568
  %mul113 = mul nsw i32 4, %88, !dbg !6569
  %89 = load i32, i32* %p, align 4, !dbg !6570
  %90 = load i32, i32* %step, align 4, !dbg !6571
  %mul114 = mul nsw i32 %89, %90, !dbg !6572
  %add115 = add nsw i32 %mul113, %mul114, !dbg !6573
  store i32 %add115, i32* %bx, align 4, !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %by, metadata !6574, metadata !2947), !dbg !6575
  %91 = load i32, i32* %y, align 4, !dbg !6576
  %mul116 = mul nsw i32 4, %91, !dbg !6577
  %92 = load i32, i32* %q, align 4, !dbg !6578
  %93 = load i32, i32* %step, align 4, !dbg !6579
  %mul117 = mul nsw i32 %92, %93, !dbg !6580
  %add118 = add nsw i32 %mul116, %mul117, !dbg !6581
  store i32 %add118, i32* %by, align 4, !dbg !6575
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block, metadata !6582, metadata !2947), !dbg !6583
  %94 = load i32, i32* %by, align 4, !dbg !6584
  %95 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6585
  %blwidth119 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %95, i32 0, i32 42, !dbg !6586
  %96 = load i32, i32* %blwidth119, align 4, !dbg !6586
  %mul120 = mul nsw i32 %94, %96, !dbg !6587
  %97 = load i32, i32* %bx, align 4, !dbg !6588
  %add121 = add nsw i32 %mul120, %97, !dbg !6589
  %idxprom122 = sext i32 %add121 to i64, !dbg !6590
  %98 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6590
  %blmotion = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %98, i32 0, i32 47, !dbg !6591
  %99 = load %struct.DiracBlock*, %struct.DiracBlock** %blmotion, align 8, !dbg !6591
  %arrayidx123 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %99, i64 %idxprom122, !dbg !6590
  store %struct.DiracBlock* %arrayidx123, %struct.DiracBlock** %block, align 8, !dbg !6583
  %100 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6592
  %arraydecay124 = getelementptr inbounds [8 x %struct.DiracArith], [8 x %struct.DiracArith]* %arith, i32 0, i32 0, !dbg !6593
  %101 = load %struct.DiracBlock*, %struct.DiracBlock** %block, align 8, !dbg !6594
  %102 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6595
  %blwidth125 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %102, i32 0, i32 42, !dbg !6596
  %103 = load i32, i32* %blwidth125, align 4, !dbg !6596
  %104 = load i32, i32* %bx, align 4, !dbg !6597
  %105 = load i32, i32* %by, align 4, !dbg !6598
  call void @decode_block_params(%struct.DiracContext* %100, %struct.DiracArith* %arraydecay124, %struct.DiracBlock* %101, i32 %103, i32 %104, i32 %105), !dbg !6599
  %106 = load %struct.DiracBlock*, %struct.DiracBlock** %block, align 8, !dbg !6600
  %107 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6601
  %blwidth126 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %107, i32 0, i32 42, !dbg !6602
  %108 = load i32, i32* %blwidth126, align 4, !dbg !6602
  %109 = load i32, i32* %step, align 4, !dbg !6603
  call void @propagate_block_data(%struct.DiracBlock* %106, i32 %108, i32 %109), !dbg !6604
  br label %for.inc127, !dbg !6605

for.inc127:                                       ; preds = %for.body112
  %110 = load i32, i32* %p, align 4, !dbg !6606
  %inc128 = add nsw i32 %110, 1, !dbg !6606
  store i32 %inc128, i32* %p, align 4, !dbg !6606
  br label %for.cond109, !dbg !6608, !llvm.loop !6609

for.end129:                                       ; preds = %for.cond109
  br label %for.inc130, !dbg !6611

for.inc130:                                       ; preds = %for.end129
  %111 = load i32, i32* %q, align 4, !dbg !6613
  %inc131 = add nsw i32 %111, 1, !dbg !6613
  store i32 %inc131, i32* %q, align 4, !dbg !6613
  br label %for.cond105, !dbg !6615, !llvm.loop !6616

for.end132:                                       ; preds = %for.cond105
  br label %for.inc133, !dbg !6618

for.inc133:                                       ; preds = %for.end132
  %112 = load i32, i32* %x, align 4, !dbg !6619
  %inc134 = add nsw i32 %112, 1, !dbg !6619
  store i32 %inc134, i32* %x, align 4, !dbg !6619
  br label %for.cond86, !dbg !6621, !llvm.loop !6622

for.end135:                                       ; preds = %for.cond86
  br label %for.inc136, !dbg !6624

for.inc136:                                       ; preds = %for.end135
  %113 = load i32, i32* %y, align 4, !dbg !6626
  %inc137 = add nsw i32 %113, 1, !dbg !6626
  store i32 %inc137, i32* %y, align 4, !dbg !6626
  br label %for.cond81, !dbg !6628, !llvm.loop !6629

for.end138:                                       ; preds = %for.cond81
  store i32 0, i32* %retval, align 4, !dbg !6631
  br label %return, !dbg !6631

return:                                           ; preds = %for.end138, %if.then
  %114 = load i32, i32* %retval, align 4, !dbg !6632
  ret i32 %114, !dbg !6632
}

; Function Attrs: nounwind uwtable
define internal i32 @dirac_unpack_idwt_params(%struct.DiracContext* %s) #1 !dbg !6633 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %level = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !6634, metadata !2947), !dbg !6635
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !6636, metadata !2947), !dbg !6637
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6638
  %gb1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 6, !dbg !6639
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6640, metadata !2947), !dbg !6641
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6642, metadata !2947), !dbg !6643
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6644, metadata !2947), !dbg !6645
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6646
  %call = call i8* @align_get_bits(%struct.GetBitContext* %1), !dbg !6647
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6648
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 23, !dbg !6649
  %3 = load i32, i32* %num_refs, align 8, !dbg !6649
  %tobool = icmp ne i32 %3, 0, !dbg !6648
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6648

cond.true:                                        ; preds = %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6650
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !6652
  br label %cond.end, !dbg !6653

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ 0, %cond.false ], !dbg !6656
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6658
  %zero_res = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 15, !dbg !6659
  store i32 %cond, i32* %zero_res, align 8, !dbg !6660
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6661
  %zero_res3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 15, !dbg !6663
  %7 = load i32, i32* %zero_res3, align 8, !dbg !6663
  %tobool4 = icmp ne i32 %7, 0, !dbg !6661
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6664

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !6665
  br label %return, !dbg !6665

if.end:                                           ; preds = %cond.end
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6666
  %call5 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %8), !dbg !6667
  store i32 %call5, i32* %tmp, align 4, !dbg !6668
  %9 = load i32, i32* %tmp, align 4, !dbg !6669
  %cmp = icmp ugt i32 %9, 6, !dbg !6671
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6672

if.then6:                                         ; preds = %if.end
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6673
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 0, !dbg !6676
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !6676
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !6673
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0)), !dbg !6677
  store i32 -1094995529, i32* %retval, align 4, !dbg !6678
  br label %return, !dbg !6678

if.end7:                                          ; preds = %if.end
  %13 = load i32, i32* %tmp, align 4, !dbg !6679
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6680
  %wavelet_idx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 25, !dbg !6681
  store i32 %13, i32* %wavelet_idx, align 16, !dbg !6682
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6683
  %call8 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %15), !dbg !6684
  store i32 %call8, i32* %tmp, align 4, !dbg !6685
  %16 = load i32, i32* %tmp, align 4, !dbg !6686
  %cmp9 = icmp ugt i32 %16, 5, !dbg !6688
  br i1 %cmp9, label %if.then11, label %lor.lhs.false, !dbg !6689

lor.lhs.false:                                    ; preds = %if.end7
  %17 = load i32, i32* %tmp, align 4, !dbg !6690
  %cmp10 = icmp ult i32 %17, 1, !dbg !6692
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !6693

if.then11:                                        ; preds = %lor.lhs.false, %if.end7
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6694
  %avctx12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 0, !dbg !6697
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx12, align 16, !dbg !6697
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !6694
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i32 0, i32 0)), !dbg !6698
  store i32 -1094995529, i32* %retval, align 4, !dbg !6699
  br label %return, !dbg !6699

if.end13:                                         ; preds = %lor.lhs.false
  %21 = load i32, i32* %tmp, align 4, !dbg !6700
  %22 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6701
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %22, i32 0, i32 24, !dbg !6702
  store i32 %21, i32* %wavelet_depth, align 4, !dbg !6703
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6704
  %low_delay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 18, !dbg !6706
  %24 = load i32, i32* %low_delay, align 4, !dbg !6706
  %tobool14 = icmp ne i32 %24, 0, !dbg !6704
  br i1 %tobool14, label %if.else67, label %if.then15, !dbg !6707

if.then15:                                        ; preds = %if.end13
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6708
  %call16 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !6711
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6711
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6712

if.then18:                                        ; preds = %if.then15
  store i32 0, i32* %i, align 4, !dbg !6713
  br label %for.cond, !dbg !6716

for.cond:                                         ; preds = %for.inc, %if.then18
  %26 = load i32, i32* %i, align 4, !dbg !6717
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6720
  %wavelet_depth19 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 24, !dbg !6721
  %28 = load i32, i32* %wavelet_depth19, align 4, !dbg !6721
  %cmp20 = icmp ule i32 %26, %28, !dbg !6722
  br i1 %cmp20, label %for.body, label %for.end, !dbg !6723

for.body:                                         ; preds = %for.cond
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6724
  %call21 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %29), !dbg !6726
  store i32 %call21, i32* %tmp, align 4, !dbg !6727
  %30 = load i32, i32* %tmp, align 4, !dbg !6728
  %cmp22 = icmp ult i32 %30, 1, !dbg !6730
  br i1 %cmp22, label %if.then27, label %lor.lhs.false23, !dbg !6731

lor.lhs.false23:                                  ; preds = %for.body
  %31 = load i32, i32* %tmp, align 4, !dbg !6732
  %32 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6734
  %avctx24 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %32, i32 0, i32 0, !dbg !6735
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx24, align 16, !dbg !6735
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 20, !dbg !6736
  %34 = load i32, i32* %width, align 4, !dbg !6736
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6737
  %wavelet_depth25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 24, !dbg !6738
  %36 = load i32, i32* %wavelet_depth25, align 4, !dbg !6738
  %37 = load i32, i32* %i, align 4, !dbg !6739
  %sub = sub i32 %36, %37, !dbg !6740
  %shr = ashr i32 %34, %sub, !dbg !6741
  %cmp26 = icmp ugt i32 %31, %shr, !dbg !6742
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !6743

if.then27:                                        ; preds = %lor.lhs.false23, %for.body
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6744
  %avctx28 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 0, !dbg !6747
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx28, align 16, !dbg !6747
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !6744
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i32 0, i32 0)), !dbg !6748
  store i32 -1094995529, i32* %retval, align 4, !dbg !6749
  br label %return, !dbg !6749

if.end29:                                         ; preds = %lor.lhs.false23
  %41 = load i32, i32* %tmp, align 4, !dbg !6750
  %42 = load i32, i32* %i, align 4, !dbg !6752
  %idxprom = sext i32 %42 to i64, !dbg !6753
  %43 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6753
  %codeblock = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %43, i32 0, i32 35, !dbg !6754
  %arrayidx = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock, i64 0, i64 %idxprom, !dbg !6753
  %width30 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !6755
  store i32 %41, i32* %width30, align 4, !dbg !6756
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6757
  %call31 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %44), !dbg !6758
  store i32 %call31, i32* %tmp, align 4, !dbg !6759
  %45 = load i32, i32* %tmp, align 4, !dbg !6760
  %cmp32 = icmp ult i32 %45, 1, !dbg !6762
  br i1 %cmp32, label %if.then39, label %lor.lhs.false33, !dbg !6763

lor.lhs.false33:                                  ; preds = %if.end29
  %46 = load i32, i32* %tmp, align 4, !dbg !6764
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6766
  %avctx34 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %47, i32 0, i32 0, !dbg !6767
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx34, align 16, !dbg !6767
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 21, !dbg !6768
  %49 = load i32, i32* %height, align 8, !dbg !6768
  %50 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6769
  %wavelet_depth35 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %50, i32 0, i32 24, !dbg !6770
  %51 = load i32, i32* %wavelet_depth35, align 4, !dbg !6770
  %52 = load i32, i32* %i, align 4, !dbg !6771
  %sub36 = sub i32 %51, %52, !dbg !6772
  %shr37 = ashr i32 %49, %sub36, !dbg !6773
  %cmp38 = icmp ugt i32 %46, %shr37, !dbg !6774
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !6775

if.then39:                                        ; preds = %lor.lhs.false33, %if.end29
  %53 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6776
  %avctx40 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %53, i32 0, i32 0, !dbg !6779
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx40, align 16, !dbg !6779
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !6776
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i32 0, i32 0)), !dbg !6780
  store i32 -1094995529, i32* %retval, align 4, !dbg !6781
  br label %return, !dbg !6781

if.end41:                                         ; preds = %lor.lhs.false33
  %56 = load i32, i32* %tmp, align 4, !dbg !6782
  %57 = load i32, i32* %i, align 4, !dbg !6783
  %idxprom42 = sext i32 %57 to i64, !dbg !6784
  %58 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6784
  %codeblock43 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %58, i32 0, i32 35, !dbg !6785
  %arrayidx44 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock43, i64 0, i64 %idxprom42, !dbg !6784
  %height45 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx44, i32 0, i32 1, !dbg !6786
  store i32 %56, i32* %height45, align 4, !dbg !6787
  br label %for.inc, !dbg !6788

for.inc:                                          ; preds = %if.end41
  %59 = load i32, i32* %i, align 4, !dbg !6789
  %inc = add nsw i32 %59, 1, !dbg !6789
  store i32 %inc, i32* %i, align 4, !dbg !6789
  br label %for.cond, !dbg !6791, !llvm.loop !6792

for.end:                                          ; preds = %for.cond
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6794
  %call46 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %60), !dbg !6795
  store i32 %call46, i32* %tmp, align 4, !dbg !6796
  %61 = load i32, i32* %tmp, align 4, !dbg !6797
  %cmp47 = icmp ugt i32 %61, 1, !dbg !6799
  br i1 %cmp47, label %if.then48, label %if.end50, !dbg !6800

if.then48:                                        ; preds = %for.end
  %62 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6801
  %avctx49 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %62, i32 0, i32 0, !dbg !6804
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx49, align 16, !dbg !6804
  %64 = bitcast %struct.AVCodecContext* %63 to i8*, !dbg !6801
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i32 0, i32 0)), !dbg !6805
  store i32 -1094995529, i32* %retval, align 4, !dbg !6806
  br label %return, !dbg !6806

if.end50:                                         ; preds = %for.end
  %65 = load i32, i32* %tmp, align 4, !dbg !6807
  %66 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6809
  %codeblock_mode = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %66, i32 0, i32 27, !dbg !6810
  store i32 %65, i32* %codeblock_mode, align 8, !dbg !6811
  br label %if.end66, !dbg !6812

if.else:                                          ; preds = %if.then15
  store i32 0, i32* %i, align 4, !dbg !6813
  br label %for.cond51, !dbg !6816

for.cond51:                                       ; preds = %for.inc63, %if.else
  %67 = load i32, i32* %i, align 4, !dbg !6817
  %68 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6820
  %wavelet_depth52 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %68, i32 0, i32 24, !dbg !6821
  %69 = load i32, i32* %wavelet_depth52, align 4, !dbg !6821
  %cmp53 = icmp ule i32 %67, %69, !dbg !6822
  br i1 %cmp53, label %for.body54, label %for.end65, !dbg !6823

for.body54:                                       ; preds = %for.cond51
  %70 = load i32, i32* %i, align 4, !dbg !6824
  %idxprom55 = sext i32 %70 to i64, !dbg !6825
  %71 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6825
  %codeblock56 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %71, i32 0, i32 35, !dbg !6826
  %arrayidx57 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock56, i64 0, i64 %idxprom55, !dbg !6825
  %height58 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx57, i32 0, i32 1, !dbg !6827
  store i32 1, i32* %height58, align 4, !dbg !6828
  %72 = load i32, i32* %i, align 4, !dbg !6829
  %idxprom59 = sext i32 %72 to i64, !dbg !6830
  %73 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6830
  %codeblock60 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %73, i32 0, i32 35, !dbg !6831
  %arrayidx61 = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock60, i64 0, i64 %idxprom59, !dbg !6830
  %width62 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx61, i32 0, i32 0, !dbg !6832
  store i32 1, i32* %width62, align 4, !dbg !6833
  br label %for.inc63, !dbg !6830

for.inc63:                                        ; preds = %for.body54
  %74 = load i32, i32* %i, align 4, !dbg !6834
  %inc64 = add nsw i32 %74, 1, !dbg !6834
  store i32 %inc64, i32* %i, align 4, !dbg !6834
  br label %for.cond51, !dbg !6836, !llvm.loop !6837

for.end65:                                        ; preds = %for.cond51
  br label %if.end66

if.end66:                                         ; preds = %for.end65, %if.end50
  br label %if.end215, !dbg !6839

if.else67:                                        ; preds = %if.end13
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6840
  %call68 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %75), !dbg !6842
  %76 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6843
  %num_x = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %76, i32 0, i32 28, !dbg !6844
  store i32 %call68, i32* %num_x, align 4, !dbg !6845
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6846
  %call69 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %77), !dbg !6847
  %78 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6848
  %num_y = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %78, i32 0, i32 29, !dbg !6849
  store i32 %call69, i32* %num_y, align 16, !dbg !6850
  %79 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6851
  %num_x70 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %79, i32 0, i32 28, !dbg !6853
  %80 = load i32, i32* %num_x70, align 4, !dbg !6853
  %81 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6854
  %num_y71 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %81, i32 0, i32 29, !dbg !6855
  %82 = load i32, i32* %num_y71, align 16, !dbg !6855
  %mul = mul i32 %80, %82, !dbg !6856
  %cmp72 = icmp eq i32 %mul, 0, !dbg !6857
  br i1 %cmp72, label %if.then98, label %lor.lhs.false73, !dbg !6858

lor.lhs.false73:                                  ; preds = %if.else67
  %83 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6859
  %num_x74 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %83, i32 0, i32 28, !dbg !6861
  %84 = load i32, i32* %num_x74, align 4, !dbg !6861
  %conv = zext i32 %84 to i64, !dbg !6859
  %85 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6862
  %num_y75 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %85, i32 0, i32 29, !dbg !6863
  %86 = load i32, i32* %num_y75, align 16, !dbg !6863
  %conv76 = zext i32 %86 to i64, !dbg !6864
  %mul77 = mul i64 %conv, %conv76, !dbg !6865
  %cmp78 = icmp ugt i64 %mul77, 2147483647, !dbg !6866
  br i1 %cmp78, label %if.then98, label %lor.lhs.false80, !dbg !6867

lor.lhs.false80:                                  ; preds = %lor.lhs.false73
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6868
  %num_x81 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 28, !dbg !6869
  %88 = load i32, i32* %num_x81, align 4, !dbg !6869
  %conv82 = zext i32 %88 to i64, !dbg !6868
  %89 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6870
  %avctx83 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %89, i32 0, i32 0, !dbg !6871
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx83, align 16, !dbg !6871
  %width84 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 20, !dbg !6872
  %91 = load i32, i32* %width84, align 4, !dbg !6872
  %conv85 = sext i32 %91 to i64, !dbg !6873
  %mul86 = mul i64 %conv82, %conv85, !dbg !6874
  %cmp87 = icmp ugt i64 %mul86, 2147483647, !dbg !6875
  br i1 %cmp87, label %if.then98, label %lor.lhs.false89, !dbg !6876

lor.lhs.false89:                                  ; preds = %lor.lhs.false80
  %92 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6877
  %num_y90 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %92, i32 0, i32 29, !dbg !6878
  %93 = load i32, i32* %num_y90, align 16, !dbg !6878
  %conv91 = zext i32 %93 to i64, !dbg !6877
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6879
  %avctx92 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 0, !dbg !6880
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx92, align 16, !dbg !6880
  %height93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %95, i32 0, i32 21, !dbg !6881
  %96 = load i32, i32* %height93, align 8, !dbg !6881
  %conv94 = sext i32 %96 to i64, !dbg !6882
  %mul95 = mul i64 %conv91, %conv94, !dbg !6883
  %cmp96 = icmp ugt i64 %mul95, 2147483647, !dbg !6884
  br i1 %cmp96, label %if.then98, label %if.end102, !dbg !6885

if.then98:                                        ; preds = %lor.lhs.false89, %lor.lhs.false80, %lor.lhs.false73, %if.else67
  %97 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6887
  %avctx99 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %97, i32 0, i32 0, !dbg !6889
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 16, !dbg !6889
  %99 = bitcast %struct.AVCodecContext* %98 to i8*, !dbg !6887
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i32 0, i32 0)), !dbg !6890
  %100 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6891
  %num_y100 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %100, i32 0, i32 29, !dbg !6892
  store i32 0, i32* %num_y100, align 16, !dbg !6893
  %101 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6894
  %num_x101 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %101, i32 0, i32 28, !dbg !6895
  store i32 0, i32* %num_x101, align 4, !dbg !6896
  store i32 -1094995529, i32* %retval, align 4, !dbg !6897
  br label %return, !dbg !6897

if.end102:                                        ; preds = %lor.lhs.false89
  %102 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6898
  %ld_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %102, i32 0, i32 20, !dbg !6900
  %103 = load i32, i32* %ld_picture, align 4, !dbg !6900
  %tobool103 = icmp ne i32 %103, 0, !dbg !6898
  br i1 %tobool103, label %if.then104, label %if.else117, !dbg !6901

if.then104:                                       ; preds = %if.end102
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6902
  %call105 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %104), !dbg !6904
  %105 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6905
  %lowdelay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %105, i32 0, i32 36, !dbg !6906
  %bytes = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay, i32 0, i32 0, !dbg !6907
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes, i32 0, i32 0, !dbg !6908
  store i32 %call105, i32* %num, align 4, !dbg !6909
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6910
  %call106 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %106), !dbg !6911
  %107 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6912
  %lowdelay107 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %107, i32 0, i32 36, !dbg !6913
  %bytes108 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay107, i32 0, i32 0, !dbg !6914
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes108, i32 0, i32 1, !dbg !6915
  store i32 %call106, i32* %den, align 4, !dbg !6916
  %108 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6917
  %lowdelay109 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %108, i32 0, i32 36, !dbg !6919
  %bytes110 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay109, i32 0, i32 0, !dbg !6920
  %den111 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes110, i32 0, i32 1, !dbg !6921
  %109 = load i32, i32* %den111, align 4, !dbg !6921
  %cmp112 = icmp sle i32 %109, 0, !dbg !6922
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !6923

if.then114:                                       ; preds = %if.then104
  %110 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6924
  %avctx115 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %110, i32 0, i32 0, !dbg !6926
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx115, align 16, !dbg !6926
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !6924
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i32 0, i32 0)), !dbg !6927
  store i32 -1094995529, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end116:                                        ; preds = %if.then104
  br label %if.end132, !dbg !6929

if.else117:                                       ; preds = %if.end102
  %113 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6930
  %hq_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %113, i32 0, i32 19, !dbg !6933
  %114 = load i32, i32* %hq_picture, align 8, !dbg !6933
  %tobool118 = icmp ne i32 %114, 0, !dbg !6930
  br i1 %tobool118, label %if.then119, label %if.end131, !dbg !6930

if.then119:                                       ; preds = %if.else117
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6934
  %call120 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %115), !dbg !6936
  %116 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6937
  %highquality = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %116, i32 0, i32 37, !dbg !6938
  %prefix_bytes = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality, i32 0, i32 0, !dbg !6939
  store i32 %call120, i32* %prefix_bytes, align 16, !dbg !6940
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6941
  %call121 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %117), !dbg !6942
  %conv122 = zext i32 %call121 to i64, !dbg !6942
  %118 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6943
  %highquality123 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %118, i32 0, i32 37, !dbg !6944
  %size_scaler = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality123, i32 0, i32 1, !dbg !6945
  store i64 %conv122, i64* %size_scaler, align 8, !dbg !6946
  %119 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6947
  %highquality124 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %119, i32 0, i32 37, !dbg !6949
  %prefix_bytes125 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality124, i32 0, i32 0, !dbg !6950
  %120 = load i32, i32* %prefix_bytes125, align 16, !dbg !6950
  %cmp126 = icmp uge i32 %120, 268435455, !dbg !6951
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !6952

if.then128:                                       ; preds = %if.then119
  %121 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6953
  %avctx129 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %121, i32 0, i32 0, !dbg !6955
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx129, align 16, !dbg !6955
  %123 = bitcast %struct.AVCodecContext* %122 to i8*, !dbg !6953
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0)), !dbg !6956
  store i32 -1094995529, i32* %retval, align 4, !dbg !6957
  br label %return, !dbg !6957

if.end130:                                        ; preds = %if.then119
  br label %if.end131, !dbg !6958

if.end131:                                        ; preds = %if.end130, %if.else117
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end116
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6959
  %call133 = call i32 @get_bits1(%struct.GetBitContext* %124), !dbg !6961
  %tobool134 = icmp ne i32 %call133, 0, !dbg !6961
  br i1 %tobool134, label %if.then135, label %if.else161, !dbg !6962

if.then135:                                       ; preds = %if.end132
  %125 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6963
  %avctx136 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %125, i32 0, i32 0, !dbg !6965
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx136, align 16, !dbg !6965
  %127 = bitcast %struct.AVCodecContext* %126 to i8*, !dbg !6963
  call void (i8*, i32, i8*, ...) @av_log(i8* %127, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0)), !dbg !6966
  store i32 0, i32* %level, align 4, !dbg !6967
  br label %for.cond137, !dbg !6969

for.cond137:                                      ; preds = %for.inc158, %if.then135
  %128 = load i32, i32* %level, align 4, !dbg !6970
  %129 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6973
  %wavelet_depth138 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %129, i32 0, i32 24, !dbg !6974
  %130 = load i32, i32* %wavelet_depth138, align 4, !dbg !6974
  %cmp139 = icmp ult i32 %128, %130, !dbg !6975
  br i1 %cmp139, label %for.body141, label %for.end160, !dbg !6976

for.body141:                                      ; preds = %for.cond137
  %131 = load i32, i32* %level, align 4, !dbg !6977
  %tobool142 = icmp ne i32 %131, 0, !dbg !6980
  %lnot = xor i1 %tobool142, true, !dbg !6980
  %lnot143 = xor i1 %lnot, true, !dbg !6981
  %lnot.ext = zext i1 %lnot143 to i32, !dbg !6981
  store i32 %lnot.ext, i32* %i, align 4, !dbg !6982
  br label %for.cond144, !dbg !6983

for.cond144:                                      ; preds = %for.inc155, %for.body141
  %132 = load i32, i32* %i, align 4, !dbg !6984
  %cmp145 = icmp slt i32 %132, 4, !dbg !6987
  br i1 %cmp145, label %for.body147, label %for.end157, !dbg !6988

for.body147:                                      ; preds = %for.cond144
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6989
  %call148 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %133), !dbg !6991
  %conv149 = trunc i32 %call148 to i8, !dbg !6991
  %134 = load i32, i32* %i, align 4, !dbg !6992
  %idxprom150 = sext i32 %134 to i64, !dbg !6993
  %135 = load i32, i32* %level, align 4, !dbg !6994
  %idxprom151 = sext i32 %135 to i64, !dbg !6993
  %136 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !6993
  %lowdelay152 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %136, i32 0, i32 36, !dbg !6995
  %quant = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay152, i32 0, i32 1, !dbg !6996
  %arrayidx153 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant, i64 0, i64 %idxprom151, !dbg !6993
  %arrayidx154 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx153, i64 0, i64 %idxprom150, !dbg !6993
  store i8 %conv149, i8* %arrayidx154, align 1, !dbg !6997
  br label %for.inc155, !dbg !6998

for.inc155:                                       ; preds = %for.body147
  %137 = load i32, i32* %i, align 4, !dbg !6999
  %inc156 = add nsw i32 %137, 1, !dbg !6999
  store i32 %inc156, i32* %i, align 4, !dbg !6999
  br label %for.cond144, !dbg !7001, !llvm.loop !7002

for.end157:                                       ; preds = %for.cond144
  br label %for.inc158, !dbg !7004

for.inc158:                                       ; preds = %for.end157
  %138 = load i32, i32* %level, align 4, !dbg !7005
  %inc159 = add nsw i32 %138, 1, !dbg !7005
  store i32 %inc159, i32* %level, align 4, !dbg !7005
  br label %for.cond137, !dbg !7007, !llvm.loop !7008

for.end160:                                       ; preds = %for.cond137
  br label %if.end214, !dbg !7010

if.else161:                                       ; preds = %if.end132
  %139 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7011
  %wavelet_depth162 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %139, i32 0, i32 24, !dbg !7014
  %140 = load i32, i32* %wavelet_depth162, align 4, !dbg !7014
  %cmp163 = icmp ugt i32 %140, 4, !dbg !7015
  br i1 %cmp163, label %if.then165, label %if.end168, !dbg !7016

if.then165:                                       ; preds = %if.else161
  %141 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7017
  %avctx166 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %141, i32 0, i32 0, !dbg !7019
  %142 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx166, align 16, !dbg !7019
  %143 = bitcast %struct.AVCodecContext* %142 to i8*, !dbg !7017
  %144 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7020
  %wavelet_depth167 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %144, i32 0, i32 24, !dbg !7021
  %145 = load i32, i32* %wavelet_depth167, align 4, !dbg !7021
  call void (i8*, i32, i8*, ...) @av_log(i8* %143, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.37, i32 0, i32 0), i32 %145), !dbg !7022
  store i32 -1094995529, i32* %retval, align 4, !dbg !7023
  br label %return, !dbg !7023

if.end168:                                        ; preds = %if.else161
  store i32 0, i32* %level, align 4, !dbg !7024
  br label %for.cond169, !dbg !7026

for.cond169:                                      ; preds = %for.inc211, %if.end168
  %146 = load i32, i32* %level, align 4, !dbg !7027
  %147 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7030
  %wavelet_depth170 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %147, i32 0, i32 24, !dbg !7031
  %148 = load i32, i32* %wavelet_depth170, align 4, !dbg !7031
  %cmp171 = icmp ult i32 %146, %148, !dbg !7032
  br i1 %cmp171, label %for.body173, label %for.end213, !dbg !7033

for.body173:                                      ; preds = %for.cond169
  store i32 0, i32* %i, align 4, !dbg !7034
  br label %for.cond174, !dbg !7036

for.cond174:                                      ; preds = %for.inc208, %for.body173
  %149 = load i32, i32* %i, align 4, !dbg !7037
  %cmp175 = icmp slt i32 %149, 4, !dbg !7040
  br i1 %cmp175, label %for.body177, label %for.end210, !dbg !7041

for.body177:                                      ; preds = %for.cond174
  %150 = load i32, i32* %i, align 4, !dbg !7042
  %idxprom178 = sext i32 %150 to i64, !dbg !7044
  %151 = load i32, i32* %level, align 4, !dbg !7045
  %idxprom179 = sext i32 %151 to i64, !dbg !7044
  %152 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7046
  %wavelet_idx180 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %152, i32 0, i32 25, !dbg !7047
  %153 = load i32, i32* %wavelet_idx180, align 16, !dbg !7047
  %idxprom181 = zext i32 %153 to i64, !dbg !7044
  %arrayidx182 = getelementptr inbounds [7 x [4 x [4 x i8]]], [7 x [4 x [4 x i8]]]* @ff_dirac_default_qmat, i64 0, i64 %idxprom181, !dbg !7044
  %arrayidx183 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx182, i64 0, i64 %idxprom179, !dbg !7044
  %arrayidx184 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx183, i64 0, i64 %idxprom178, !dbg !7044
  %154 = load i8, i8* %arrayidx184, align 1, !dbg !7044
  %155 = load i32, i32* %i, align 4, !dbg !7048
  %idxprom185 = sext i32 %155 to i64, !dbg !7049
  %156 = load i32, i32* %level, align 4, !dbg !7050
  %idxprom186 = sext i32 %156 to i64, !dbg !7049
  %157 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7049
  %lowdelay187 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %157, i32 0, i32 36, !dbg !7051
  %quant188 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay187, i32 0, i32 1, !dbg !7052
  %arrayidx189 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant188, i64 0, i64 %idxprom186, !dbg !7049
  %arrayidx190 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx189, i64 0, i64 %idxprom185, !dbg !7049
  store i8 %154, i8* %arrayidx190, align 1, !dbg !7053
  %158 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7054
  %wavelet_idx191 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %158, i32 0, i32 25, !dbg !7056
  %159 = load i32, i32* %wavelet_idx191, align 16, !dbg !7056
  %cmp192 = icmp eq i32 %159, 3, !dbg !7057
  br i1 %cmp192, label %if.then194, label %if.end207, !dbg !7058

if.then194:                                       ; preds = %for.body177
  %160 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7059
  %wavelet_depth195 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %160, i32 0, i32 24, !dbg !7060
  %161 = load i32, i32* %wavelet_depth195, align 4, !dbg !7060
  %sub196 = sub i32 %161, 1, !dbg !7061
  %162 = load i32, i32* %level, align 4, !dbg !7062
  %sub197 = sub i32 %sub196, %162, !dbg !7063
  %mul198 = mul i32 4, %sub197, !dbg !7064
  %163 = load i32, i32* %i, align 4, !dbg !7065
  %idxprom199 = sext i32 %163 to i64, !dbg !7066
  %164 = load i32, i32* %level, align 4, !dbg !7067
  %idxprom200 = sext i32 %164 to i64, !dbg !7066
  %165 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7066
  %lowdelay201 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %165, i32 0, i32 36, !dbg !7068
  %quant202 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay201, i32 0, i32 1, !dbg !7069
  %arrayidx203 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant202, i64 0, i64 %idxprom200, !dbg !7066
  %arrayidx204 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx203, i64 0, i64 %idxprom199, !dbg !7066
  %166 = load i8, i8* %arrayidx204, align 1, !dbg !7070
  %conv205 = zext i8 %166 to i32, !dbg !7070
  %add = add i32 %conv205, %mul198, !dbg !7070
  %conv206 = trunc i32 %add to i8, !dbg !7070
  store i8 %conv206, i8* %arrayidx204, align 1, !dbg !7070
  br label %if.end207, !dbg !7066

if.end207:                                        ; preds = %if.then194, %for.body177
  br label %for.inc208, !dbg !7071

for.inc208:                                       ; preds = %if.end207
  %167 = load i32, i32* %i, align 4, !dbg !7072
  %inc209 = add nsw i32 %167, 1, !dbg !7072
  store i32 %inc209, i32* %i, align 4, !dbg !7072
  br label %for.cond174, !dbg !7074, !llvm.loop !7075

for.end210:                                       ; preds = %for.cond174
  br label %for.inc211, !dbg !7077

for.inc211:                                       ; preds = %for.end210
  %168 = load i32, i32* %level, align 4, !dbg !7079
  %inc212 = add nsw i32 %168, 1, !dbg !7079
  store i32 %inc212, i32* %level, align 4, !dbg !7079
  br label %for.cond169, !dbg !7081, !llvm.loop !7082

for.end213:                                       ; preds = %for.cond169
  br label %if.end214

if.end214:                                        ; preds = %for.end213, %for.end160
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !7084
  br label %return, !dbg !7084

return:                                           ; preds = %if.end215, %if.then165, %if.then128, %if.then114, %if.then98, %if.then48, %if.then39, %if.then27, %if.then11, %if.then6, %if.then
  %169 = load i32, i32* %retval, align 4, !dbg !7085
  ret i32 %169, !dbg !7085
}

; Function Attrs: nounwind uwtable
define internal void @init_planes(%struct.DiracContext* %s) #1 !dbg !7086 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %level = alloca i32, align 4
  %orientation = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %b = alloca %struct.SubBand*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !7087, metadata !2947), !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7089, metadata !2947), !dbg !7090
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7091, metadata !2947), !dbg !7092
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7093, metadata !2947), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7095, metadata !2947), !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !7097, metadata !2947), !dbg !7098
  store i32 0, i32* %i, align 4, !dbg !7099
  br label %for.cond, !dbg !7101

for.cond:                                         ; preds = %for.inc131, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7102
  %cmp = icmp slt i32 %0, 3, !dbg !7105
  br i1 %cmp, label %for.body, label %for.end133, !dbg !7106

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !7107, metadata !2947), !dbg !7109
  %1 = load i32, i32* %i, align 4, !dbg !7110
  %idxprom = sext i32 %1 to i64, !dbg !7111
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7111
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 10, !dbg !7112
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom, !dbg !7111
  store %struct.Plane* %arrayidx, %struct.Plane** %p, align 8, !dbg !7109
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7113
  %seq = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %3, i32 0, i32 7, !dbg !7114
  %width = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq, i32 0, i32 0, !dbg !7115
  %4 = load i32, i32* %width, align 8, !dbg !7115
  %5 = load i32, i32* %i, align 4, !dbg !7116
  %tobool = icmp ne i32 %5, 0, !dbg !7116
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7116

cond.true:                                        ; preds = %for.body
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7117
  %chroma_x_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 11, !dbg !7119
  %7 = load i32, i32* %chroma_x_shift, align 8, !dbg !7119
  br label %cond.end, !dbg !7120

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !7123
  %shr = lshr i32 %4, %cond, !dbg !7125
  %8 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7126
  %width1 = getelementptr inbounds %struct.Plane, %struct.Plane* %8, i32 0, i32 1, !dbg !7127
  store i32 %shr, i32* %width1, align 8, !dbg !7128
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7129
  %seq2 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 7, !dbg !7130
  %height = getelementptr inbounds %struct.AVDiracSeqHeader, %struct.AVDiracSeqHeader* %seq2, i32 0, i32 1, !dbg !7131
  %10 = load i32, i32* %height, align 4, !dbg !7131
  %11 = load i32, i32* %i, align 4, !dbg !7132
  %tobool3 = icmp ne i32 %11, 0, !dbg !7132
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !7132

cond.true4:                                       ; preds = %cond.end
  %12 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7133
  %chroma_y_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %12, i32 0, i32 12, !dbg !7134
  %13 = load i32, i32* %chroma_y_shift, align 4, !dbg !7134
  br label %cond.end6, !dbg !7135

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !7136

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ %13, %cond.true4 ], [ 0, %cond.false5 ], !dbg !7137
  %shr8 = lshr i32 %10, %cond7, !dbg !7138
  %14 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7139
  %height9 = getelementptr inbounds %struct.Plane, %struct.Plane* %14, i32 0, i32 2, !dbg !7140
  store i32 %shr8, i32* %height9, align 4, !dbg !7141
  %15 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7142
  %width10 = getelementptr inbounds %struct.Plane, %struct.Plane* %15, i32 0, i32 1, !dbg !7143
  %16 = load i32, i32* %width10, align 8, !dbg !7143
  %17 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7144
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %17, i32 0, i32 24, !dbg !7145
  %18 = load i32, i32* %wavelet_depth, align 4, !dbg !7145
  %shl = shl i32 1, %18, !dbg !7146
  %add = add nsw i32 %16, %shl, !dbg !7147
  %sub = sub nsw i32 %add, 1, !dbg !7148
  %19 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7149
  %wavelet_depth11 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %19, i32 0, i32 24, !dbg !7150
  %20 = load i32, i32* %wavelet_depth11, align 4, !dbg !7150
  %shr12 = ashr i32 %sub, %20, !dbg !7151
  %21 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7152
  %wavelet_depth13 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %21, i32 0, i32 24, !dbg !7153
  %22 = load i32, i32* %wavelet_depth13, align 4, !dbg !7153
  %shl14 = shl i32 %shr12, %22, !dbg !7154
  store i32 %shl14, i32* %w, align 4, !dbg !7155
  %23 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7156
  %idwt = getelementptr inbounds %struct.Plane, %struct.Plane* %23, i32 0, i32 0, !dbg !7157
  %width15 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt, i32 0, i32 0, !dbg !7158
  store i32 %shl14, i32* %width15, align 8, !dbg !7159
  %24 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7160
  %height16 = getelementptr inbounds %struct.Plane, %struct.Plane* %24, i32 0, i32 2, !dbg !7161
  %25 = load i32, i32* %height16, align 4, !dbg !7161
  %26 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7162
  %wavelet_depth17 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %26, i32 0, i32 24, !dbg !7163
  %27 = load i32, i32* %wavelet_depth17, align 4, !dbg !7163
  %shl18 = shl i32 1, %27, !dbg !7164
  %add19 = add nsw i32 %25, %shl18, !dbg !7165
  %sub20 = sub nsw i32 %add19, 1, !dbg !7166
  %28 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7167
  %wavelet_depth21 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %28, i32 0, i32 24, !dbg !7168
  %29 = load i32, i32* %wavelet_depth21, align 4, !dbg !7168
  %shr22 = ashr i32 %sub20, %29, !dbg !7169
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7170
  %wavelet_depth23 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 24, !dbg !7171
  %31 = load i32, i32* %wavelet_depth23, align 4, !dbg !7171
  %shl24 = shl i32 %shr22, %31, !dbg !7172
  store i32 %shl24, i32* %h, align 4, !dbg !7173
  %32 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7174
  %idwt25 = getelementptr inbounds %struct.Plane, %struct.Plane* %32, i32 0, i32 0, !dbg !7175
  %height26 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt25, i32 0, i32 1, !dbg !7176
  store i32 %shl24, i32* %height26, align 4, !dbg !7177
  %33 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7178
  %idwt27 = getelementptr inbounds %struct.Plane, %struct.Plane* %33, i32 0, i32 0, !dbg !7179
  %width28 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt27, i32 0, i32 0, !dbg !7180
  %34 = load i32, i32* %width28, align 8, !dbg !7180
  %add29 = add nsw i32 %34, 8, !dbg !7181
  %sub30 = sub nsw i32 %add29, 1, !dbg !7182
  %and = and i32 %sub30, -8, !dbg !7183
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7184
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 14, !dbg !7185
  %36 = load i32, i32* %pshift, align 4, !dbg !7185
  %add31 = add nsw i32 1, %36, !dbg !7186
  %shl32 = shl i32 %and, %add31, !dbg !7187
  %37 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7188
  %idwt33 = getelementptr inbounds %struct.Plane, %struct.Plane* %37, i32 0, i32 0, !dbg !7189
  %stride = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt33, i32 0, i32 2, !dbg !7190
  store i32 %shl32, i32* %stride, align 8, !dbg !7191
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7192
  %wavelet_depth34 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 24, !dbg !7194
  %39 = load i32, i32* %wavelet_depth34, align 4, !dbg !7194
  %sub35 = sub i32 %39, 1, !dbg !7195
  store i32 %sub35, i32* %level, align 4, !dbg !7196
  br label %for.cond36, !dbg !7197

for.cond36:                                       ; preds = %for.inc86, %cond.end6
  %40 = load i32, i32* %level, align 4, !dbg !7198
  %cmp37 = icmp sge i32 %40, 0, !dbg !7201
  br i1 %cmp37, label %for.body38, label %for.end87, !dbg !7202

for.body38:                                       ; preds = %for.cond36
  %41 = load i32, i32* %w, align 4, !dbg !7203
  %shr39 = ashr i32 %41, 1, !dbg !7205
  store i32 %shr39, i32* %w, align 4, !dbg !7206
  %42 = load i32, i32* %h, align 4, !dbg !7207
  %shr40 = ashr i32 %42, 1, !dbg !7208
  store i32 %shr40, i32* %h, align 4, !dbg !7209
  %43 = load i32, i32* %level, align 4, !dbg !7210
  %tobool41 = icmp ne i32 %43, 0, !dbg !7212
  %lnot = xor i1 %tobool41, true, !dbg !7212
  %lnot42 = xor i1 %lnot, true, !dbg !7213
  %lnot.ext = zext i1 %lnot42 to i32, !dbg !7213
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !7214
  br label %for.cond43, !dbg !7215

for.cond43:                                       ; preds = %for.inc, %for.body38
  %44 = load i32, i32* %orientation, align 4, !dbg !7216
  %cmp44 = icmp slt i32 %44, 4, !dbg !7219
  br i1 %cmp44, label %for.body45, label %for.end, !dbg !7220

for.body45:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !7221, metadata !2947), !dbg !7224
  %45 = load i32, i32* %orientation, align 4, !dbg !7225
  %idxprom46 = sext i32 %45 to i64, !dbg !7226
  %46 = load i32, i32* %level, align 4, !dbg !7227
  %idxprom47 = sext i32 %46 to i64, !dbg !7226
  %47 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7226
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %47, i32 0, i32 10, !dbg !7228
  %arrayidx48 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom47, !dbg !7226
  %arrayidx49 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx48, i64 0, i64 %idxprom46, !dbg !7226
  store %struct.SubBand* %arrayidx49, %struct.SubBand** %b, align 8, !dbg !7224
  %48 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7229
  %pshift50 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %48, i32 0, i32 14, !dbg !7230
  %49 = load i32, i32* %pshift50, align 4, !dbg !7230
  %50 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7231
  %pshift51 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %50, i32 0, i32 5, !dbg !7232
  store i32 %49, i32* %pshift51, align 4, !dbg !7233
  %51 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7234
  %idwt52 = getelementptr inbounds %struct.Plane, %struct.Plane* %51, i32 0, i32 0, !dbg !7235
  %buf = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt52, i32 0, i32 3, !dbg !7236
  %52 = load i8*, i8** %buf, align 8, !dbg !7236
  %53 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7237
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %53, i32 0, i32 7, !dbg !7238
  store i8* %52, i8** %ibuf, align 8, !dbg !7239
  %54 = load i32, i32* %level, align 4, !dbg !7240
  %55 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7241
  %level53 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %55, i32 0, i32 0, !dbg !7242
  store i32 %54, i32* %level53, align 8, !dbg !7243
  %56 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7244
  %idwt54 = getelementptr inbounds %struct.Plane, %struct.Plane* %56, i32 0, i32 0, !dbg !7245
  %stride55 = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %idwt54, i32 0, i32 2, !dbg !7246
  %57 = load i32, i32* %stride55, align 8, !dbg !7246
  %58 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7247
  %wavelet_depth56 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %58, i32 0, i32 24, !dbg !7248
  %59 = load i32, i32* %wavelet_depth56, align 4, !dbg !7248
  %60 = load i32, i32* %level, align 4, !dbg !7249
  %sub57 = sub i32 %59, %60, !dbg !7250
  %shl58 = shl i32 %57, %sub57, !dbg !7251
  %61 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7252
  %stride59 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %61, i32 0, i32 2, !dbg !7253
  store i32 %shl58, i32* %stride59, align 8, !dbg !7254
  %62 = load i32, i32* %w, align 4, !dbg !7255
  %63 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7256
  %width60 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %63, i32 0, i32 3, !dbg !7257
  store i32 %62, i32* %width60, align 4, !dbg !7258
  %64 = load i32, i32* %h, align 4, !dbg !7259
  %65 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7260
  %height61 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %65, i32 0, i32 4, !dbg !7261
  store i32 %64, i32* %height61, align 8, !dbg !7262
  %66 = load i32, i32* %orientation, align 4, !dbg !7263
  %67 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7264
  %orientation62 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %67, i32 0, i32 1, !dbg !7265
  store i32 %66, i32* %orientation62, align 4, !dbg !7266
  %68 = load i32, i32* %orientation, align 4, !dbg !7267
  %and63 = and i32 %68, 1, !dbg !7269
  %tobool64 = icmp ne i32 %and63, 0, !dbg !7269
  br i1 %tobool64, label %if.then, label %if.end, !dbg !7270

if.then:                                          ; preds = %for.body45
  %69 = load i32, i32* %w, align 4, !dbg !7271
  %70 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7272
  %pshift65 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %70, i32 0, i32 5, !dbg !7273
  %71 = load i32, i32* %pshift65, align 4, !dbg !7273
  %add66 = add nsw i32 1, %71, !dbg !7274
  %shl67 = shl i32 %69, %add66, !dbg !7275
  %72 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7276
  %ibuf68 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %72, i32 0, i32 7, !dbg !7277
  %73 = load i8*, i8** %ibuf68, align 8, !dbg !7278
  %idx.ext = sext i32 %shl67 to i64, !dbg !7278
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !7278
  store i8* %add.ptr, i8** %ibuf68, align 8, !dbg !7278
  br label %if.end, !dbg !7276

if.end:                                           ; preds = %if.then, %for.body45
  %74 = load i32, i32* %orientation, align 4, !dbg !7279
  %cmp69 = icmp sgt i32 %74, 1, !dbg !7281
  br i1 %cmp69, label %if.then70, label %if.end76, !dbg !7282

if.then70:                                        ; preds = %if.end
  %75 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7283
  %stride71 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %75, i32 0, i32 2, !dbg !7284
  %76 = load i32, i32* %stride71, align 8, !dbg !7284
  %shr72 = ashr i32 %76, 1, !dbg !7285
  %77 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7286
  %ibuf73 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %77, i32 0, i32 7, !dbg !7287
  %78 = load i8*, i8** %ibuf73, align 8, !dbg !7288
  %idx.ext74 = sext i32 %shr72 to i64, !dbg !7288
  %add.ptr75 = getelementptr inbounds i8, i8* %78, i64 %idx.ext74, !dbg !7288
  store i8* %add.ptr75, i8** %ibuf73, align 8, !dbg !7288
  br label %if.end76, !dbg !7286

if.end76:                                         ; preds = %if.then70, %if.end
  %79 = load i32, i32* %level, align 4, !dbg !7289
  %tobool77 = icmp ne i32 %79, 0, !dbg !7289
  br i1 %tobool77, label %if.then78, label %if.end85, !dbg !7291

if.then78:                                        ; preds = %if.end76
  %80 = load i32, i32* %orientation, align 4, !dbg !7292
  %idxprom79 = sext i32 %80 to i64, !dbg !7293
  %81 = load i32, i32* %level, align 4, !dbg !7294
  %sub80 = sub nsw i32 %81, 1, !dbg !7295
  %idxprom81 = sext i32 %sub80 to i64, !dbg !7293
  %82 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7293
  %band82 = getelementptr inbounds %struct.Plane, %struct.Plane* %82, i32 0, i32 10, !dbg !7296
  %arrayidx83 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band82, i64 0, i64 %idxprom81, !dbg !7293
  %arrayidx84 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx83, i64 0, i64 %idxprom79, !dbg !7293
  %83 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !7297
  %parent = getelementptr inbounds %struct.SubBand, %struct.SubBand* %83, i32 0, i32 8, !dbg !7298
  store %struct.SubBand* %arrayidx84, %struct.SubBand** %parent, align 8, !dbg !7299
  br label %if.end85, !dbg !7297

if.end85:                                         ; preds = %if.then78, %if.end76
  br label %for.inc, !dbg !7300

for.inc:                                          ; preds = %if.end85
  %84 = load i32, i32* %orientation, align 4, !dbg !7301
  %inc = add nsw i32 %84, 1, !dbg !7301
  store i32 %inc, i32* %orientation, align 4, !dbg !7301
  br label %for.cond43, !dbg !7303, !llvm.loop !7304

for.end:                                          ; preds = %for.cond43
  br label %for.inc86, !dbg !7306

for.inc86:                                        ; preds = %for.end
  %85 = load i32, i32* %level, align 4, !dbg !7307
  %dec = add nsw i32 %85, -1, !dbg !7307
  store i32 %dec, i32* %level, align 4, !dbg !7307
  br label %for.cond36, !dbg !7309, !llvm.loop !7310

for.end87:                                        ; preds = %for.cond36
  %86 = load i32, i32* %i, align 4, !dbg !7312
  %cmp88 = icmp sgt i32 %86, 0, !dbg !7314
  br i1 %cmp88, label %if.then89, label %if.end117, !dbg !7315

if.then89:                                        ; preds = %for.end87
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7316
  %plane90 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 10, !dbg !7318
  %arrayidx91 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane90, i64 0, i64 0, !dbg !7316
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx91, i32 0, i32 4, !dbg !7319
  %88 = load i8, i8* %xblen, align 8, !dbg !7319
  %conv = zext i8 %88 to i32, !dbg !7316
  %89 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7320
  %chroma_x_shift92 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %89, i32 0, i32 11, !dbg !7321
  %90 = load i32, i32* %chroma_x_shift92, align 8, !dbg !7321
  %shr93 = ashr i32 %conv, %90, !dbg !7322
  %conv94 = trunc i32 %shr93 to i8, !dbg !7316
  %91 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7323
  %xblen95 = getelementptr inbounds %struct.Plane, %struct.Plane* %91, i32 0, i32 4, !dbg !7324
  store i8 %conv94, i8* %xblen95, align 8, !dbg !7325
  %92 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7326
  %plane96 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %92, i32 0, i32 10, !dbg !7327
  %arrayidx97 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane96, i64 0, i64 0, !dbg !7326
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx97, i32 0, i32 5, !dbg !7328
  %93 = load i8, i8* %yblen, align 1, !dbg !7328
  %conv98 = zext i8 %93 to i32, !dbg !7326
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7329
  %chroma_y_shift99 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 12, !dbg !7330
  %95 = load i32, i32* %chroma_y_shift99, align 4, !dbg !7330
  %shr100 = ashr i32 %conv98, %95, !dbg !7331
  %conv101 = trunc i32 %shr100 to i8, !dbg !7326
  %96 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7332
  %yblen102 = getelementptr inbounds %struct.Plane, %struct.Plane* %96, i32 0, i32 5, !dbg !7333
  store i8 %conv101, i8* %yblen102, align 1, !dbg !7334
  %97 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7335
  %plane103 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %97, i32 0, i32 10, !dbg !7336
  %arrayidx104 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane103, i64 0, i64 0, !dbg !7335
  %xbsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx104, i32 0, i32 6, !dbg !7337
  %98 = load i8, i8* %xbsep, align 2, !dbg !7337
  %conv105 = zext i8 %98 to i32, !dbg !7335
  %99 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7338
  %chroma_x_shift106 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %99, i32 0, i32 11, !dbg !7339
  %100 = load i32, i32* %chroma_x_shift106, align 8, !dbg !7339
  %shr107 = ashr i32 %conv105, %100, !dbg !7340
  %conv108 = trunc i32 %shr107 to i8, !dbg !7335
  %101 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7341
  %xbsep109 = getelementptr inbounds %struct.Plane, %struct.Plane* %101, i32 0, i32 6, !dbg !7342
  store i8 %conv108, i8* %xbsep109, align 2, !dbg !7343
  %102 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7344
  %plane110 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %102, i32 0, i32 10, !dbg !7345
  %arrayidx111 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane110, i64 0, i64 0, !dbg !7344
  %ybsep = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx111, i32 0, i32 7, !dbg !7346
  %103 = load i8, i8* %ybsep, align 1, !dbg !7346
  %conv112 = zext i8 %103 to i32, !dbg !7344
  %104 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7347
  %chroma_y_shift113 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %104, i32 0, i32 12, !dbg !7348
  %105 = load i32, i32* %chroma_y_shift113, align 4, !dbg !7348
  %shr114 = ashr i32 %conv112, %105, !dbg !7349
  %conv115 = trunc i32 %shr114 to i8, !dbg !7344
  %106 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7350
  %ybsep116 = getelementptr inbounds %struct.Plane, %struct.Plane* %106, i32 0, i32 7, !dbg !7351
  store i8 %conv115, i8* %ybsep116, align 1, !dbg !7352
  br label %if.end117, !dbg !7353

if.end117:                                        ; preds = %if.then89, %for.end87
  %107 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7354
  %xblen118 = getelementptr inbounds %struct.Plane, %struct.Plane* %107, i32 0, i32 4, !dbg !7355
  %108 = load i8, i8* %xblen118, align 8, !dbg !7355
  %conv119 = zext i8 %108 to i32, !dbg !7354
  %109 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7356
  %xbsep120 = getelementptr inbounds %struct.Plane, %struct.Plane* %109, i32 0, i32 6, !dbg !7357
  %110 = load i8, i8* %xbsep120, align 2, !dbg !7357
  %conv121 = zext i8 %110 to i32, !dbg !7356
  %sub122 = sub nsw i32 %conv119, %conv121, !dbg !7358
  %div = sdiv i32 %sub122, 2, !dbg !7359
  %conv123 = trunc i32 %div to i8, !dbg !7360
  %111 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7361
  %xoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %111, i32 0, i32 8, !dbg !7362
  store i8 %conv123, i8* %xoffset, align 4, !dbg !7363
  %112 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7364
  %yblen124 = getelementptr inbounds %struct.Plane, %struct.Plane* %112, i32 0, i32 5, !dbg !7365
  %113 = load i8, i8* %yblen124, align 1, !dbg !7365
  %conv125 = zext i8 %113 to i32, !dbg !7364
  %114 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7366
  %ybsep126 = getelementptr inbounds %struct.Plane, %struct.Plane* %114, i32 0, i32 7, !dbg !7367
  %115 = load i8, i8* %ybsep126, align 1, !dbg !7367
  %conv127 = zext i8 %115 to i32, !dbg !7366
  %sub128 = sub nsw i32 %conv125, %conv127, !dbg !7368
  %div129 = sdiv i32 %sub128, 2, !dbg !7369
  %conv130 = trunc i32 %div129 to i8, !dbg !7370
  %116 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !7371
  %yoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %116, i32 0, i32 9, !dbg !7372
  store i8 %conv130, i8* %yoffset, align 1, !dbg !7373
  br label %for.inc131, !dbg !7374

for.inc131:                                       ; preds = %if.end117
  %117 = load i32, i32* %i, align 4, !dbg !7375
  %inc132 = add nsw i32 %117, 1, !dbg !7375
  store i32 %inc132, i32* %i, align 4, !dbg !7375
  br label %for.cond, !dbg !7377, !llvm.loop !7378

for.end133:                                       ; preds = %for.cond
  ret void, !dbg !7380
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !7381 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3038, metadata !2947), !dbg !7382
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7384, metadata !2947), !dbg !7385
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7386, metadata !2947), !dbg !7387
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7388, metadata !2947), !dbg !7389
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7390, metadata !2947), !dbg !7391
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7392
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7393
  %1 = load i32, i32* %index, align 8, !dbg !7393
  store i32 %1, i32* %re_index, align 4, !dbg !7391
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7394, metadata !2947), !dbg !7395
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7396, metadata !2947), !dbg !7397
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7398
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7399
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7399
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7397
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7400
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7401
  %5 = load i8*, i8** %buffer, align 8, !dbg !7401
  %6 = load i32, i32* %re_index, align 4, !dbg !7402
  %shr = lshr i32 %6, 3, !dbg !7403
  %idx.ext = zext i32 %shr to i64, !dbg !7404
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7404
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7405
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7405
  %8 = load i32, i32* %l, align 1, !dbg !7405
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7406
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7407
  %shl.i = shl i32 %9, 8, !dbg !7408
  %and.i = and i32 %shl.i, 65280, !dbg !7409
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7410
  %shr.i = lshr i32 %10, 8, !dbg !7411
  %and1.i = and i32 %shr.i, 255, !dbg !7412
  %or.i = or i32 %and.i, %and1.i, !dbg !7413
  %shl2.i = shl i32 %or.i, 16, !dbg !7414
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7415
  %shr3.i = lshr i32 %11, 16, !dbg !7416
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7417
  %and5.i = and i32 %shl4.i, 65280, !dbg !7418
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7419
  %shr6.i = lshr i32 %12, 16, !dbg !7420
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7421
  %and8.i = and i32 %shr7.i, 255, !dbg !7422
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7423
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7424
  %13 = load i32, i32* %re_index, align 4, !dbg !7425
  %and = and i32 %13, 7, !dbg !7426
  %shl = shl i32 %or10.i, %and, !dbg !7427
  store i32 %shl, i32* %re_cache, align 4, !dbg !7428
  %14 = load i32, i32* %re_cache, align 4, !dbg !7429
  %15 = load i32, i32* %n.addr, align 4, !dbg !7430
  %conv = trunc i32 %15 to i8, !dbg !7430
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7431
  store i32 %call4, i32* %tmp, align 4, !dbg !7432
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7433
  %17 = load i32, i32* %re_index, align 4, !dbg !7434
  %18 = load i32, i32* %n.addr, align 4, !dbg !7435
  %add = add i32 %17, %18, !dbg !7436
  %cmp = icmp ugt i32 %16, %add, !dbg !7437
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7438

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7439
  %20 = load i32, i32* %n.addr, align 4, !dbg !7441
  %add6 = add i32 %19, %20, !dbg !7442
  br label %cond.end, !dbg !7443

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7444
  br label %cond.end, !dbg !7446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7447
  store i32 %cond, i32* %re_index, align 4, !dbg !7449
  %22 = load i32, i32* %re_index, align 4, !dbg !7450
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7451
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7452
  store i32 %22, i32* %index7, align 8, !dbg !7453
  %24 = load i32, i32* %tmp, align 4, !dbg !7454
  ret i32 %24, !dbg !7455
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !7456 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7460, metadata !2947), !dbg !7461
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7462, metadata !2947), !dbg !7463
  %0 = load i32, i32* %a.addr, align 4, !dbg !7464
  %1 = load i8, i8* %s.addr, align 1, !dbg !7465
  %conv = sext i8 %1 to i32, !dbg !7465
  %sub = sub nsw i32 0, %conv, !dbg !7466
  %conv1 = trunc i32 %sub to i8, !dbg !7467
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7464, !srcloc !7468
  store i32 %2, i32* %a.addr, align 4, !dbg !7464
  %3 = load i32, i32* %a.addr, align 4, !dbg !7469
  ret i32 %3, !dbg !7470
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb) #5 !dbg !7471 {
entry:
  %x.addr.i78 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i78, metadata !3038, metadata !2947), !dbg !7474
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3038, metadata !2947), !dbg !7479
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7481, metadata !2947), !dbg !7482
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !7483, metadata !2947), !dbg !7484
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7485, metadata !2947), !dbg !7486
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7487
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7488
  %1 = load i32, i32* %index, align 8, !dbg !7488
  store i32 %1, i32* %re_index, align 4, !dbg !7486
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7489, metadata !2947), !dbg !7490
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7491, metadata !2947), !dbg !7492
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7493
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7494
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7494
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7492
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7495
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7496
  %5 = load i8*, i8** %buffer, align 8, !dbg !7496
  %6 = load i32, i32* %re_index, align 4, !dbg !7497
  %shr = lshr i32 %6, 3, !dbg !7498
  %idx.ext = zext i32 %shr to i64, !dbg !7499
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7499
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7500
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7500
  %8 = load i32, i32* %l, align 1, !dbg !7500
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7501
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7502
  %shl.i = shl i32 %9, 8, !dbg !7503
  %and.i = and i32 %shl.i, 65280, !dbg !7504
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7505
  %shr.i = lshr i32 %10, 8, !dbg !7506
  %and1.i = and i32 %shr.i, 255, !dbg !7507
  %or.i = or i32 %and.i, %and1.i, !dbg !7508
  %shl2.i = shl i32 %or.i, 16, !dbg !7509
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7510
  %shr3.i = lshr i32 %11, 16, !dbg !7511
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7512
  %and5.i = and i32 %shl4.i, 65280, !dbg !7513
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7514
  %shr6.i = lshr i32 %12, 16, !dbg !7515
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7516
  %and8.i = and i32 %shr7.i, 255, !dbg !7517
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7518
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7519
  %13 = load i32, i32* %re_index, align 4, !dbg !7520
  %and = and i32 %13, 7, !dbg !7521
  %shl = shl i32 %or10.i, %and, !dbg !7522
  store i32 %shl, i32* %re_cache, align 4, !dbg !7523
  %14 = load i32, i32* %re_cache, align 4, !dbg !7524
  store i32 %14, i32* %buf, align 4, !dbg !7525
  %15 = load i32, i32* %buf, align 4, !dbg !7526
  %and1 = and i32 %15, -1434451968, !dbg !7527
  %tobool = icmp ne i32 %and1, 0, !dbg !7527
  br i1 %tobool, label %if.then, label %if.else, !dbg !7528

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %buf, align 4, !dbg !7529
  %shr2 = lshr i32 %16, 24, !dbg !7529
  store i32 %shr2, i32* %buf, align 4, !dbg !7529
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !7531
  %18 = load i32, i32* %re_index, align 4, !dbg !7532
  %19 = load i32, i32* %buf, align 4, !dbg !7533
  %idxprom = zext i32 %19 to i64, !dbg !7534
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom, !dbg !7534
  %20 = load i8, i8* %arrayidx, align 1, !dbg !7534
  %conv = zext i8 %20 to i32, !dbg !7535
  %add = add i32 %18, %conv, !dbg !7536
  %cmp = icmp ugt i32 %17, %add, !dbg !7537
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7538

cond.true:                                        ; preds = %if.then
  %21 = load i32, i32* %re_index, align 4, !dbg !7539
  %22 = load i32, i32* %buf, align 4, !dbg !7541
  %idxprom4 = zext i32 %22 to i64, !dbg !7542
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom4, !dbg !7542
  %23 = load i8, i8* %arrayidx5, align 1, !dbg !7542
  %conv6 = zext i8 %23 to i32, !dbg !7543
  %add7 = add i32 %21, %conv6, !dbg !7544
  br label %cond.end, !dbg !7545

cond.false:                                       ; preds = %if.then
  %24 = load i32, i32* %re_size_plus8, align 4, !dbg !7546
  br label %cond.end, !dbg !7548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add7, %cond.true ], [ %24, %cond.false ], !dbg !7549
  store i32 %cond, i32* %re_index, align 4, !dbg !7551
  %25 = load i32, i32* %re_index, align 4, !dbg !7552
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7553
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %26, i32 0, i32 2, !dbg !7554
  store i32 %25, i32* %index8, align 8, !dbg !7555
  %27 = load i32, i32* %buf, align 4, !dbg !7556
  %idxprom9 = zext i32 %27 to i64, !dbg !7557
  %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_ue_golomb_vlc_code, i64 0, i64 %idxprom9, !dbg !7557
  %28 = load i8, i8* %arrayidx10, align 1, !dbg !7557
  %conv11 = zext i8 %28 to i32, !dbg !7557
  store i32 %conv11, i32* %retval, align 4, !dbg !7558
  br label %return, !dbg !7558

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7559, metadata !2947), !dbg !7560
  store i32 1, i32* %ret, align 4, !dbg !7560
  br label %do.body, !dbg !7561, !llvm.loop !7562

do.body:                                          ; preds = %land.end, %if.else
  %29 = load i32, i32* %buf, align 4, !dbg !7563
  %shr12 = lshr i32 %29, 24, !dbg !7563
  store i32 %shr12, i32* %buf, align 4, !dbg !7563
  %30 = load i32, i32* %re_size_plus8, align 4, !dbg !7564
  %31 = load i32, i32* %re_index, align 4, !dbg !7565
  %32 = load i32, i32* %buf, align 4, !dbg !7566
  %idxprom13 = zext i32 %32 to i64, !dbg !7567
  %arrayidx14 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom13, !dbg !7567
  %33 = load i8, i8* %arrayidx14, align 1, !dbg !7567
  %conv15 = zext i8 %33 to i32, !dbg !7568
  %cmp16 = icmp sgt i32 %conv15, 8, !dbg !7569
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !7568

cond.true18:                                      ; preds = %do.body
  br label %cond.end23, !dbg !7570

cond.false19:                                     ; preds = %do.body
  %34 = load i32, i32* %buf, align 4, !dbg !7572
  %idxprom20 = zext i32 %34 to i64, !dbg !7574
  %arrayidx21 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom20, !dbg !7574
  %35 = load i8, i8* %arrayidx21, align 1, !dbg !7574
  %conv22 = zext i8 %35 to i32, !dbg !7575
  br label %cond.end23, !dbg !7576

cond.end23:                                       ; preds = %cond.false19, %cond.true18
  %cond24 = phi i32 [ 8, %cond.true18 ], [ %conv22, %cond.false19 ], !dbg !7577
  %add25 = add i32 %31, %cond24, !dbg !7579
  %cmp26 = icmp ugt i32 %30, %add25, !dbg !7580
  br i1 %cmp26, label %cond.true28, label %cond.false42, !dbg !7581

cond.true28:                                      ; preds = %cond.end23
  %36 = load i32, i32* %re_index, align 4, !dbg !7582
  %37 = load i32, i32* %buf, align 4, !dbg !7584
  %idxprom29 = zext i32 %37 to i64, !dbg !7585
  %arrayidx30 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom29, !dbg !7585
  %38 = load i8, i8* %arrayidx30, align 1, !dbg !7585
  %conv31 = zext i8 %38 to i32, !dbg !7586
  %cmp32 = icmp sgt i32 %conv31, 8, !dbg !7587
  br i1 %cmp32, label %cond.true34, label %cond.false35, !dbg !7586

cond.true34:                                      ; preds = %cond.true28
  br label %cond.end39, !dbg !7588

cond.false35:                                     ; preds = %cond.true28
  %39 = load i32, i32* %buf, align 4, !dbg !7590
  %idxprom36 = zext i32 %39 to i64, !dbg !7592
  %arrayidx37 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom36, !dbg !7592
  %40 = load i8, i8* %arrayidx37, align 1, !dbg !7592
  %conv38 = zext i8 %40 to i32, !dbg !7593
  br label %cond.end39, !dbg !7594

cond.end39:                                       ; preds = %cond.false35, %cond.true34
  %cond40 = phi i32 [ 8, %cond.true34 ], [ %conv38, %cond.false35 ], !dbg !7595
  %add41 = add i32 %36, %cond40, !dbg !7597
  br label %cond.end43, !dbg !7598

cond.false42:                                     ; preds = %cond.end23
  %41 = load i32, i32* %re_size_plus8, align 4, !dbg !7599
  br label %cond.end43, !dbg !7601

cond.end43:                                       ; preds = %cond.false42, %cond.end39
  %cond44 = phi i32 [ %add41, %cond.end39 ], [ %41, %cond.false42 ], !dbg !7602
  store i32 %cond44, i32* %re_index, align 4, !dbg !7604
  %42 = load i32, i32* %buf, align 4, !dbg !7605
  %idxprom45 = zext i32 %42 to i64, !dbg !7607
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom45, !dbg !7607
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !7607
  %conv47 = zext i8 %43 to i32, !dbg !7607
  %cmp48 = icmp ne i32 %conv47, 9, !dbg !7608
  br i1 %cmp48, label %if.then50, label %if.end, !dbg !7609

if.then50:                                        ; preds = %cond.end43
  %44 = load i32, i32* %buf, align 4, !dbg !7610
  %idxprom51 = zext i32 %44 to i64, !dbg !7612
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_golomb_vlc_len, i64 0, i64 %idxprom51, !dbg !7612
  %45 = load i8, i8* %arrayidx52, align 1, !dbg !7612
  %conv53 = zext i8 %45 to i32, !dbg !7612
  %sub = sub nsw i32 %conv53, 1, !dbg !7613
  %shr54 = ashr i32 %sub, 1, !dbg !7614
  %46 = load i32, i32* %ret, align 4, !dbg !7615
  %shl55 = shl i32 %46, %shr54, !dbg !7615
  store i32 %shl55, i32* %ret, align 4, !dbg !7615
  %47 = load i32, i32* %buf, align 4, !dbg !7616
  %idxprom56 = zext i32 %47 to i64, !dbg !7617
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %idxprom56, !dbg !7617
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !7617
  %conv58 = zext i8 %48 to i32, !dbg !7617
  %49 = load i32, i32* %ret, align 4, !dbg !7618
  %or = or i32 %49, %conv58, !dbg !7618
  store i32 %or, i32* %ret, align 4, !dbg !7618
  br label %do.end, !dbg !7619

if.end:                                           ; preds = %cond.end43
  %50 = load i32, i32* %ret, align 4, !dbg !7620
  %shl59 = shl i32 %50, 4, !dbg !7621
  %51 = load i32, i32* %buf, align 4, !dbg !7622
  %idxprom60 = zext i32 %51 to i64, !dbg !7623
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_interleaved_dirac_golomb_vlc_code, i64 0, i64 %idxprom60, !dbg !7623
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !7623
  %conv62 = zext i8 %52 to i32, !dbg !7623
  %or63 = or i32 %shl59, %conv62, !dbg !7624
  store i32 %or63, i32* %ret, align 4, !dbg !7625
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7626
  %buffer64 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %53, i32 0, i32 0, !dbg !7627
  %54 = load i8*, i8** %buffer64, align 8, !dbg !7627
  %55 = load i32, i32* %re_index, align 4, !dbg !7628
  %shr65 = lshr i32 %55, 3, !dbg !7629
  %idx.ext66 = zext i32 %shr65 to i64, !dbg !7630
  %add.ptr67 = getelementptr inbounds i8, i8* %54, i64 %idx.ext66, !dbg !7630
  %56 = bitcast i8* %add.ptr67 to %union.unaligned_32*, !dbg !7631
  %l68 = bitcast %union.unaligned_32* %56 to i32*, !dbg !7631
  %57 = load i32, i32* %l68, align 1, !dbg !7631
  store i32 %57, i32* %x.addr.i78, align 4, !dbg !7632
  %58 = load i32, i32* %x.addr.i78, align 4, !dbg !7633
  %shl.i79 = shl i32 %58, 8, !dbg !7634
  %and.i80 = and i32 %shl.i79, 65280, !dbg !7635
  %59 = load i32, i32* %x.addr.i78, align 4, !dbg !7636
  %shr.i81 = lshr i32 %59, 8, !dbg !7637
  %and1.i82 = and i32 %shr.i81, 255, !dbg !7638
  %or.i83 = or i32 %and.i80, %and1.i82, !dbg !7639
  %shl2.i84 = shl i32 %or.i83, 16, !dbg !7640
  %60 = load i32, i32* %x.addr.i78, align 4, !dbg !7641
  %shr3.i85 = lshr i32 %60, 16, !dbg !7642
  %shl4.i86 = shl i32 %shr3.i85, 8, !dbg !7643
  %and5.i87 = and i32 %shl4.i86, 65280, !dbg !7644
  %61 = load i32, i32* %x.addr.i78, align 4, !dbg !7645
  %shr6.i88 = lshr i32 %61, 16, !dbg !7646
  %shr7.i89 = lshr i32 %shr6.i88, 8, !dbg !7647
  %and8.i90 = and i32 %shr7.i89, 255, !dbg !7648
  %or9.i91 = or i32 %and5.i87, %and8.i90, !dbg !7649
  %or10.i92 = or i32 %shl2.i84, %or9.i91, !dbg !7650
  %62 = load i32, i32* %re_index, align 4, !dbg !7651
  %and70 = and i32 %62, 7, !dbg !7652
  %shl71 = shl i32 %or10.i92, %and70, !dbg !7653
  store i32 %shl71, i32* %re_cache, align 4, !dbg !7654
  %63 = load i32, i32* %re_cache, align 4, !dbg !7655
  store i32 %63, i32* %buf, align 4, !dbg !7656
  br label %do.cond, !dbg !7657

do.cond:                                          ; preds = %if.end
  %64 = load i32, i32* %ret, align 4, !dbg !7658
  %cmp72 = icmp ult i32 %64, 134217728, !dbg !7660
  br i1 %cmp72, label %land.rhs, label %land.end, !dbg !7661

land.rhs:                                         ; preds = %do.cond
  %65 = load i32, i32* %re_index, align 4, !dbg !7662
  %66 = load i32, i32* %re_size_plus8, align 4, !dbg !7664
  %cmp74 = icmp ult i32 %65, %66, !dbg !7665
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %67 = phi i1 [ false, %do.cond ], [ %cmp74, %land.rhs ]
  br i1 %67, label %do.body, label %do.end, !dbg !7666, !llvm.loop !7562

do.end:                                           ; preds = %land.end, %if.then50
  %68 = load i32, i32* %re_index, align 4, !dbg !7667
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7668
  %index76 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %69, i32 0, i32 2, !dbg !7669
  store i32 %68, i32* %index76, align 8, !dbg !7670
  %70 = load i32, i32* %ret, align 4, !dbg !7671
  %sub77 = sub i32 %70, 1, !dbg !7672
  store i32 %sub77, i32* %retval, align 4, !dbg !7673
  br label %return, !dbg !7673

return:                                           ; preds = %do.end, %cond.end
  %71 = load i32, i32* %retval, align 4, !dbg !7674
  ret i32 %71, !dbg !7674
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !7675 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7676, metadata !2947), !dbg !7677
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7678, metadata !2947), !dbg !7679
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7680
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7681
  %1 = load i32, i32* %index1, align 8, !dbg !7681
  store i32 %1, i32* %index, align 4, !dbg !7679
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7682, metadata !2947), !dbg !7683
  %2 = load i32, i32* %index, align 4, !dbg !7684
  %shr = lshr i32 %2, 3, !dbg !7685
  %idxprom = zext i32 %shr to i64, !dbg !7686
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7686
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !7687
  %4 = load i8*, i8** %buffer, align 8, !dbg !7687
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7686
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7686
  store i8 %5, i8* %result, align 1, !dbg !7683
  %6 = load i32, i32* %index, align 4, !dbg !7688
  %and = and i32 %6, 7, !dbg !7689
  %7 = load i8, i8* %result, align 1, !dbg !7690
  %conv = zext i8 %7 to i32, !dbg !7690
  %shl = shl i32 %conv, %and, !dbg !7690
  %conv2 = trunc i32 %shl to i8, !dbg !7690
  store i8 %conv2, i8* %result, align 1, !dbg !7690
  %8 = load i8, i8* %result, align 1, !dbg !7691
  %conv3 = zext i8 %8 to i32, !dbg !7691
  %shr4 = ashr i32 %conv3, 7, !dbg !7691
  %conv5 = trunc i32 %shr4 to i8, !dbg !7691
  store i8 %conv5, i8* %result, align 1, !dbg !7691
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7692
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !7694
  %10 = load i32, i32* %index6, align 8, !dbg !7694
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7695
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !7696
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7696
  %cmp = icmp slt i32 %10, %12, !dbg !7697
  br i1 %cmp, label %if.then, label %if.end, !dbg !7698

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !7699
  %inc = add i32 %13, 1, !dbg !7699
  store i32 %inc, i32* %index, align 4, !dbg !7699
  br label %if.end, !dbg !7700

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !7701
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7702
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7703
  store i32 %14, i32* %index8, align 8, !dbg !7704
  %16 = load i8, i8* %result, align 1, !dbg !7705
  %conv9 = zext i8 %16 to i32, !dbg !7705
  ret i32 %conv9, !dbg !7706
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #5 !dbg !7707 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7710, metadata !2947), !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7712, metadata !2947), !dbg !7713
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7714
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !7715
  %sub = sub nsw i32 0, %call, !dbg !7716
  %and = and i32 %sub, 7, !dbg !7717
  store i32 %and, i32* %n, align 4, !dbg !7713
  %1 = load i32, i32* %n, align 4, !dbg !7718
  %tobool = icmp ne i32 %1, 0, !dbg !7718
  br i1 %tobool, label %if.then, label %if.end, !dbg !7720

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7721
  %3 = load i32, i32* %n, align 4, !dbg !7722
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7723
  br label %if.end, !dbg !7723

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7724
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7725
  %5 = load i8*, i8** %buffer, align 8, !dbg !7725
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7726
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !7727
  %7 = load i32, i32* %index, align 8, !dbg !7727
  %shr = ashr i32 %7, 3, !dbg !7728
  %idx.ext = sext i32 %shr to i64, !dbg !7729
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7729
  ret i8* %add.ptr, !dbg !7730
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !7731 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7736, metadata !2947), !dbg !7737
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7738
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7739
  %1 = load i32, i32* %index, align 8, !dbg !7739
  ret i32 %1, !dbg !7740
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !7741 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7744, metadata !2947), !dbg !7745
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7746, metadata !2947), !dbg !7747
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7748, metadata !2947), !dbg !7749
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7750
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7751
  %1 = load i32, i32* %index, align 8, !dbg !7751
  store i32 %1, i32* %re_index, align 4, !dbg !7749
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7752, metadata !2947), !dbg !7753
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7754, metadata !2947), !dbg !7755
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7756
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7757
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7757
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7755
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !7758
  %5 = load i32, i32* %re_index, align 4, !dbg !7759
  %6 = load i32, i32* %n.addr, align 4, !dbg !7760
  %add = add i32 %5, %6, !dbg !7761
  %cmp = icmp ugt i32 %4, %add, !dbg !7762
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7763

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !7764
  %8 = load i32, i32* %n.addr, align 4, !dbg !7766
  %add1 = add i32 %7, %8, !dbg !7767
  br label %cond.end, !dbg !7768

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !7769
  br label %cond.end, !dbg !7771

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !7772
  store i32 %cond, i32* %re_index, align 4, !dbg !7774
  %10 = load i32, i32* %re_index, align 4, !dbg !7775
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7776
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !7777
  store i32 %10, i32* %index2, align 8, !dbg !7778
  ret void, !dbg !7779
}

declare void @ff_dirac_init_arith_decoder(%struct.DiracArith*, %struct.GetBitContext*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dirac_get_arith_uint(%struct.DiracArith* %c, i32 %follow_ctx, i32 %data_ctx) #5 !dbg !7780 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.DiracArith*, align 8
  %follow_ctx.addr = alloca i32, align 4
  %data_ctx.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !7784, metadata !2947), !dbg !7785
  store i32 %follow_ctx, i32* %follow_ctx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %follow_ctx.addr, metadata !7786, metadata !2947), !dbg !7787
  store i32 %data_ctx, i32* %data_ctx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_ctx.addr, metadata !7788, metadata !2947), !dbg !7789
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7790, metadata !2947), !dbg !7791
  store i32 1, i32* %ret, align 4, !dbg !7791
  br label %while.cond, !dbg !7792

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !7793
  %1 = load i32, i32* %follow_ctx.addr, align 4, !dbg !7795
  %call = call i32 @dirac_get_arith_bit(%struct.DiracArith* %0, i32 %1), !dbg !7796
  %tobool = icmp ne i32 %call, 0, !dbg !7797
  %lnot = xor i1 %tobool, true, !dbg !7797
  br i1 %lnot, label %while.body, label %while.end, !dbg !7798

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %ret, align 4, !dbg !7799
  %cmp = icmp sge i32 %2, 1073741824, !dbg !7802
  br i1 %cmp, label %if.then, label %if.end, !dbg !7803

if.then:                                          ; preds = %while.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0)), !dbg !7804
  %3 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !7806
  %error = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %3, i32 0, i32 6, !dbg !7807
  store i32 -1094995529, i32* %error, align 4, !dbg !7808
  store i32 -1, i32* %retval, align 4, !dbg !7809
  br label %return, !dbg !7809

if.end:                                           ; preds = %while.body
  %4 = load i32, i32* %ret, align 4, !dbg !7810
  %shl = shl i32 %4, 1, !dbg !7810
  store i32 %shl, i32* %ret, align 4, !dbg !7810
  %5 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !7811
  %6 = load i32, i32* %data_ctx.addr, align 4, !dbg !7812
  %call1 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %5, i32 %6), !dbg !7813
  %7 = load i32, i32* %ret, align 4, !dbg !7814
  %add = add nsw i32 %7, %call1, !dbg !7814
  store i32 %add, i32* %ret, align 4, !dbg !7814
  %8 = load i32, i32* %follow_ctx.addr, align 4, !dbg !7815
  %idxprom = sext i32 %8 to i64, !dbg !7816
  %arrayidx = getelementptr inbounds [22 x i8], [22 x i8]* @ff_dirac_next_ctx, i64 0, i64 %idxprom, !dbg !7816
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7816
  %conv = zext i8 %9 to i32, !dbg !7816
  store i32 %conv, i32* %follow_ctx.addr, align 4, !dbg !7817
  br label %while.cond, !dbg !7818, !llvm.loop !7820

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %ret, align 4, !dbg !7821
  %sub = sub nsw i32 %10, 1, !dbg !7822
  store i32 %sub, i32* %retval, align 4, !dbg !7823
  br label %return, !dbg !7823

return:                                           ; preds = %while.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7824
  ret i32 %11, !dbg !7824
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pred_sbsplit(i8* %sbsplit, i32 %stride, i32 %x, i32 %y) #5 !dbg !2933 {
entry:
  %retval = alloca i32, align 4
  %sbsplit.addr = alloca i8*, align 8
  %stride.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store i8* %sbsplit, i8** %sbsplit.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sbsplit.addr, metadata !7825, metadata !2947), !dbg !7826
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7827, metadata !2947), !dbg !7828
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7829, metadata !2947), !dbg !7830
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7831, metadata !2947), !dbg !7832
  %0 = load i32, i32* %x.addr, align 4, !dbg !7833
  %1 = load i32, i32* %y.addr, align 4, !dbg !7835
  %or = or i32 %0, %1, !dbg !7836
  %tobool = icmp ne i32 %or, 0, !dbg !7836
  br i1 %tobool, label %if.else, label %if.then, !dbg !7837

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7838
  br label %return, !dbg !7838

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %y.addr, align 4, !dbg !7839
  %tobool1 = icmp ne i32 %2, 0, !dbg !7839
  br i1 %tobool1, label %if.else3, label %if.then2, !dbg !7841

if.then2:                                         ; preds = %if.else
  %3 = load i8*, i8** %sbsplit.addr, align 8, !dbg !7842
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 -1, !dbg !7842
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7842
  %conv = zext i8 %4 to i32, !dbg !7842
  store i32 %conv, i32* %retval, align 4, !dbg !7843
  br label %return, !dbg !7843

if.else3:                                         ; preds = %if.else
  %5 = load i32, i32* %x.addr, align 4, !dbg !7844
  %tobool4 = icmp ne i32 %5, 0, !dbg !7844
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !7846

if.then5:                                         ; preds = %if.else3
  %6 = load i32, i32* %stride.addr, align 4, !dbg !7847
  %sub = sub nsw i32 0, %6, !dbg !7848
  %idxprom = sext i32 %sub to i64, !dbg !7849
  %7 = load i8*, i8** %sbsplit.addr, align 8, !dbg !7849
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !7849
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !7849
  %conv7 = zext i8 %8 to i32, !dbg !7849
  store i32 %conv7, i32* %retval, align 4, !dbg !7850
  br label %return, !dbg !7850

if.end:                                           ; preds = %if.else3
  br label %if.end8

if.end8:                                          ; preds = %if.end
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  %9 = load i8*, i8** %sbsplit.addr, align 8, !dbg !7851
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !7851
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !7851
  %conv11 = zext i8 %10 to i32, !dbg !7851
  %11 = load i32, i32* %stride.addr, align 4, !dbg !7852
  %sub12 = sub nsw i32 0, %11, !dbg !7853
  %idxprom13 = sext i32 %sub12 to i64, !dbg !7854
  %12 = load i8*, i8** %sbsplit.addr, align 8, !dbg !7854
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 %idxprom13, !dbg !7854
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !7854
  %conv15 = zext i8 %13 to i32, !dbg !7854
  %add = add nsw i32 %conv11, %conv15, !dbg !7855
  %14 = load i32, i32* %stride.addr, align 4, !dbg !7856
  %sub16 = sub nsw i32 0, %14, !dbg !7857
  %sub17 = sub nsw i32 %sub16, 1, !dbg !7858
  %idxprom18 = sext i32 %sub17 to i64, !dbg !7859
  %15 = load i8*, i8** %sbsplit.addr, align 8, !dbg !7859
  %arrayidx19 = getelementptr inbounds i8, i8* %15, i64 %idxprom18, !dbg !7859
  %16 = load i8, i8* %arrayidx19, align 1, !dbg !7859
  %conv20 = zext i8 %16 to i32, !dbg !7859
  %add21 = add nsw i32 %add, %conv20, !dbg !7860
  %idxprom22 = sext i32 %add21 to i64, !dbg !7861
  %arrayidx23 = getelementptr inbounds [7 x i8], [7 x i8]* @pred_sbsplit.avgsplit, i64 0, i64 %idxprom22, !dbg !7861
  %17 = load i8, i8* %arrayidx23, align 1, !dbg !7861
  %conv24 = zext i8 %17 to i32, !dbg !7861
  store i32 %conv24, i32* %retval, align 4, !dbg !7862
  br label %return, !dbg !7862

return:                                           ; preds = %if.end9, %if.then5, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7863
  ret i32 %18, !dbg !7863
}

; Function Attrs: nounwind uwtable
define internal void @decode_block_params(%struct.DiracContext* %s, %struct.DiracArith* %arith, %struct.DiracBlock* %block, i32 %stride, i32 %x, i32 %y) #1 !dbg !7864 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %arith.addr = alloca %struct.DiracArith*, align 8
  %block.addr = alloca %struct.DiracBlock*, align 8
  %stride.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !7867, metadata !2947), !dbg !7868
  store %struct.DiracArith* %arith, %struct.DiracArith** %arith.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %arith.addr, metadata !7869, metadata !2947), !dbg !7870
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !7871, metadata !2947), !dbg !7872
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7873, metadata !2947), !dbg !7874
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7875, metadata !2947), !dbg !7876
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7877, metadata !2947), !dbg !7878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7879, metadata !2947), !dbg !7880
  %0 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7881
  %1 = load i32, i32* %stride.addr, align 4, !dbg !7882
  %2 = load i32, i32* %x.addr, align 4, !dbg !7883
  %3 = load i32, i32* %y.addr, align 4, !dbg !7884
  %call = call i32 @pred_block_mode(%struct.DiracBlock* %0, i32 %1, i32 %2, i32 %3, i32 1), !dbg !7885
  %conv = trunc i32 %call to i8, !dbg !7885
  %4 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7886
  %ref = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %4, i32 0, i32 1, !dbg !7887
  store i8 %conv, i8* %ref, align 2, !dbg !7888
  %5 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !7889
  %call1 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %5, i32 0), !dbg !7890
  %6 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7891
  %ref2 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %6, i32 0, i32 1, !dbg !7892
  %7 = load i8, i8* %ref2, align 2, !dbg !7893
  %conv3 = zext i8 %7 to i32, !dbg !7893
  %xor = xor i32 %conv3, %call1, !dbg !7893
  %conv4 = trunc i32 %xor to i8, !dbg !7893
  store i8 %conv4, i8* %ref2, align 2, !dbg !7893
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7894
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 23, !dbg !7896
  %9 = load i32, i32* %num_refs, align 8, !dbg !7896
  %cmp = icmp eq i32 %9, 2, !dbg !7897
  br i1 %cmp, label %if.then, label %if.end, !dbg !7898

if.then:                                          ; preds = %entry
  %10 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7899
  %11 = load i32, i32* %stride.addr, align 4, !dbg !7901
  %12 = load i32, i32* %x.addr, align 4, !dbg !7902
  %13 = load i32, i32* %y.addr, align 4, !dbg !7903
  %call6 = call i32 @pred_block_mode(%struct.DiracBlock* %10, i32 %11, i32 %12, i32 %13, i32 2), !dbg !7904
  %14 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7905
  %ref7 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %14, i32 0, i32 1, !dbg !7906
  %15 = load i8, i8* %ref7, align 2, !dbg !7907
  %conv8 = zext i8 %15 to i32, !dbg !7907
  %or = or i32 %conv8, %call6, !dbg !7907
  %conv9 = trunc i32 %or to i8, !dbg !7907
  store i8 %conv9, i8* %ref7, align 2, !dbg !7907
  %16 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !7908
  %call10 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %16, i32 1), !dbg !7909
  %shl = shl i32 %call10, 1, !dbg !7910
  %17 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7911
  %ref11 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %17, i32 0, i32 1, !dbg !7912
  %18 = load i8, i8* %ref11, align 2, !dbg !7913
  %conv12 = zext i8 %18 to i32, !dbg !7913
  %xor13 = xor i32 %conv12, %shl, !dbg !7913
  %conv14 = trunc i32 %xor13 to i8, !dbg !7913
  store i8 %conv14, i8* %ref11, align 2, !dbg !7913
  br label %if.end, !dbg !7914

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7915
  %ref15 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %19, i32 0, i32 1, !dbg !7917
  %20 = load i8, i8* %ref15, align 2, !dbg !7917
  %tobool = icmp ne i8 %20, 0, !dbg !7915
  br i1 %tobool, label %if.end23, label %if.then16, !dbg !7918

if.then16:                                        ; preds = %if.end
  %21 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7919
  %22 = load i32, i32* %stride.addr, align 4, !dbg !7921
  %23 = load i32, i32* %x.addr, align 4, !dbg !7922
  %24 = load i32, i32* %y.addr, align 4, !dbg !7923
  call void @pred_block_dc(%struct.DiracBlock* %21, i32 %22, i32 %23, i32 %24), !dbg !7924
  store i32 0, i32* %i, align 4, !dbg !7925
  br label %for.cond, !dbg !7927

for.cond:                                         ; preds = %for.inc, %if.then16
  %25 = load i32, i32* %i, align 4, !dbg !7928
  %cmp17 = icmp slt i32 %25, 3, !dbg !7931
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7932

for.body:                                         ; preds = %for.cond
  %26 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !7933
  %add.ptr = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %26, i64 1, !dbg !7934
  %27 = load i32, i32* %i, align 4, !dbg !7935
  %idx.ext = sext i32 %27 to i64, !dbg !7936
  %add.ptr19 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr, i64 %idx.ext, !dbg !7936
  %call20 = call i32 @dirac_get_arith_int(%struct.DiracArith* %add.ptr19, i32 7, i32 0), !dbg !7937
  %28 = load i32, i32* %i, align 4, !dbg !7938
  %idxprom = sext i32 %28 to i64, !dbg !7939
  %29 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7939
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %29, i32 0, i32 0, !dbg !7940
  %dc = bitcast %union.anon.3* %u to [3 x i16]*, !dbg !7941
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %dc, i64 0, i64 %idxprom, !dbg !7939
  %30 = load i16, i16* %arrayidx, align 2, !dbg !7942
  %conv21 = sext i16 %30 to i32, !dbg !7942
  %add = add i32 %conv21, %call20, !dbg !7942
  %conv22 = trunc i32 %add to i16, !dbg !7942
  store i16 %conv22, i16* %arrayidx, align 2, !dbg !7942
  br label %for.inc, !dbg !7939

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !7943
  %inc = add nsw i32 %31, 1, !dbg !7943
  store i32 %inc, i32* %i, align 4, !dbg !7943
  br label %for.cond, !dbg !7945, !llvm.loop !7946

for.end:                                          ; preds = %for.cond
  br label %for.end81, !dbg !7948

if.end23:                                         ; preds = %if.end
  %32 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7949
  %globalmc_flag = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %32, i32 0, i32 22, !dbg !7951
  %33 = load i32, i32* %globalmc_flag, align 4, !dbg !7951
  %tobool24 = icmp ne i32 %33, 0, !dbg !7949
  br i1 %tobool24, label %if.then25, label %if.end37, !dbg !7952

if.then25:                                        ; preds = %if.end23
  %34 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7953
  %35 = load i32, i32* %stride.addr, align 4, !dbg !7955
  %36 = load i32, i32* %x.addr, align 4, !dbg !7956
  %37 = load i32, i32* %y.addr, align 4, !dbg !7957
  %call26 = call i32 @pred_block_mode(%struct.DiracBlock* %34, i32 %35, i32 %36, i32 %37, i32 4), !dbg !7958
  %38 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7959
  %ref27 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %38, i32 0, i32 1, !dbg !7960
  %39 = load i8, i8* %ref27, align 2, !dbg !7961
  %conv28 = zext i8 %39 to i32, !dbg !7961
  %or29 = or i32 %conv28, %call26, !dbg !7961
  %conv30 = trunc i32 %or29 to i8, !dbg !7961
  store i8 %conv30, i8* %ref27, align 2, !dbg !7961
  %40 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !7962
  %call31 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %40, i32 2), !dbg !7963
  %shl32 = shl i32 %call31, 2, !dbg !7964
  %41 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7965
  %ref33 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %41, i32 0, i32 1, !dbg !7966
  %42 = load i8, i8* %ref33, align 2, !dbg !7967
  %conv34 = zext i8 %42 to i32, !dbg !7967
  %xor35 = xor i32 %conv34, %shl32, !dbg !7967
  %conv36 = trunc i32 %xor35 to i8, !dbg !7967
  store i8 %conv36, i8* %ref33, align 2, !dbg !7967
  br label %if.end37, !dbg !7968

if.end37:                                         ; preds = %if.then25, %if.end23
  store i32 0, i32* %i, align 4, !dbg !7969
  br label %for.cond38, !dbg !7971

for.cond38:                                       ; preds = %for.inc79, %if.end37
  %43 = load i32, i32* %i, align 4, !dbg !7972
  %44 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7975
  %num_refs39 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %44, i32 0, i32 23, !dbg !7976
  %45 = load i32, i32* %num_refs39, align 8, !dbg !7976
  %cmp40 = icmp slt i32 %43, %45, !dbg !7977
  br i1 %cmp40, label %for.body42, label %for.end81, !dbg !7978

for.body42:                                       ; preds = %for.cond38
  %46 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7979
  %ref43 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %46, i32 0, i32 1, !dbg !7981
  %47 = load i8, i8* %ref43, align 2, !dbg !7981
  %conv44 = zext i8 %47 to i32, !dbg !7979
  %48 = load i32, i32* %i, align 4, !dbg !7982
  %add45 = add nsw i32 %48, 1, !dbg !7983
  %and = and i32 %conv44, %add45, !dbg !7984
  %tobool46 = icmp ne i32 %and, 0, !dbg !7984
  br i1 %tobool46, label %if.then47, label %if.end78, !dbg !7985

if.then47:                                        ; preds = %for.body42
  %49 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7986
  %ref48 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %49, i32 0, i32 1, !dbg !7989
  %50 = load i8, i8* %ref48, align 2, !dbg !7989
  %conv49 = zext i8 %50 to i32, !dbg !7986
  %and50 = and i32 %conv49, 4, !dbg !7990
  %tobool51 = icmp ne i32 %and50, 0, !dbg !7990
  br i1 %tobool51, label %if.then52, label %if.else, !dbg !7991

if.then52:                                        ; preds = %if.then47
  %51 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !7992
  %52 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !7994
  %53 = load i32, i32* %x.addr, align 4, !dbg !7995
  %54 = load i32, i32* %y.addr, align 4, !dbg !7996
  %55 = load i32, i32* %i, align 4, !dbg !7997
  call void @global_mv(%struct.DiracContext* %51, %struct.DiracBlock* %52, i32 %53, i32 %54, i32 %55), !dbg !7998
  br label %if.end77, !dbg !7999

if.else:                                          ; preds = %if.then47
  %56 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8000
  %57 = load i32, i32* %stride.addr, align 4, !dbg !8002
  %58 = load i32, i32* %x.addr, align 4, !dbg !8003
  %59 = load i32, i32* %y.addr, align 4, !dbg !8004
  %60 = load i32, i32* %i, align 4, !dbg !8005
  call void @pred_mv(%struct.DiracBlock* %56, i32 %57, i32 %58, i32 %59, i32 %60), !dbg !8006
  %61 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !8007
  %add.ptr53 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %61, i64 4, !dbg !8008
  %62 = load i32, i32* %i, align 4, !dbg !8009
  %mul = mul nsw i32 2, %62, !dbg !8010
  %idx.ext54 = sext i32 %mul to i64, !dbg !8011
  %add.ptr55 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr53, i64 %idx.ext54, !dbg !8011
  %call56 = call i32 @dirac_get_arith_int(%struct.DiracArith* %add.ptr55, i32 4, i32 0), !dbg !8012
  %63 = load i32, i32* %i, align 4, !dbg !8013
  %idxprom57 = sext i32 %63 to i64, !dbg !8014
  %64 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8014
  %u58 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %64, i32 0, i32 0, !dbg !8015
  %mv = bitcast %union.anon.3* %u58 to [2 x [2 x i16]]*, !dbg !8016
  %arrayidx59 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv, i64 0, i64 %idxprom57, !dbg !8014
  %arrayidx60 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx59, i64 0, i64 0, !dbg !8014
  %65 = load i16, i16* %arrayidx60, align 2, !dbg !8017
  %conv61 = sext i16 %65 to i32, !dbg !8017
  %add62 = add i32 %conv61, %call56, !dbg !8017
  %conv63 = trunc i32 %add62 to i16, !dbg !8017
  store i16 %conv63, i16* %arrayidx60, align 2, !dbg !8017
  %66 = load %struct.DiracArith*, %struct.DiracArith** %arith.addr, align 8, !dbg !8018
  %add.ptr64 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %66, i64 5, !dbg !8019
  %67 = load i32, i32* %i, align 4, !dbg !8020
  %mul65 = mul nsw i32 2, %67, !dbg !8021
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !8022
  %add.ptr67 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %add.ptr64, i64 %idx.ext66, !dbg !8022
  %call68 = call i32 @dirac_get_arith_int(%struct.DiracArith* %add.ptr67, i32 4, i32 0), !dbg !8023
  %68 = load i32, i32* %i, align 4, !dbg !8024
  %idxprom69 = sext i32 %68 to i64, !dbg !8025
  %69 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8025
  %u70 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %69, i32 0, i32 0, !dbg !8026
  %mv71 = bitcast %union.anon.3* %u70 to [2 x [2 x i16]]*, !dbg !8027
  %arrayidx72 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv71, i64 0, i64 %idxprom69, !dbg !8025
  %arrayidx73 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx72, i64 0, i64 1, !dbg !8025
  %70 = load i16, i16* %arrayidx73, align 2, !dbg !8028
  %conv74 = sext i16 %70 to i32, !dbg !8028
  %add75 = add i32 %conv74, %call68, !dbg !8028
  %conv76 = trunc i32 %add75 to i16, !dbg !8028
  store i16 %conv76, i16* %arrayidx73, align 2, !dbg !8028
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then52
  br label %if.end78, !dbg !8029

if.end78:                                         ; preds = %if.end77, %for.body42
  br label %for.inc79, !dbg !8030

for.inc79:                                        ; preds = %if.end78
  %71 = load i32, i32* %i, align 4, !dbg !8032
  %inc80 = add nsw i32 %71, 1, !dbg !8032
  store i32 %inc80, i32* %i, align 4, !dbg !8032
  br label %for.cond38, !dbg !8034, !llvm.loop !8035

for.end81:                                        ; preds = %for.end, %for.cond38
  ret void, !dbg !8037
}

; Function Attrs: nounwind uwtable
define internal void @propagate_block_data(%struct.DiracBlock* %block, i32 %stride, i32 %size) #1 !dbg !8038 {
entry:
  %block.addr = alloca %struct.DiracBlock*, align 8
  %stride.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %dst = alloca %struct.DiracBlock*, align 8
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !8041, metadata !2947), !dbg !8042
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8043, metadata !2947), !dbg !8044
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8045, metadata !2947), !dbg !8046
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8047, metadata !2947), !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8049, metadata !2947), !dbg !8050
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %dst, metadata !8051, metadata !2947), !dbg !8052
  %0 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8053
  store %struct.DiracBlock* %0, %struct.DiracBlock** %dst, align 8, !dbg !8052
  store i32 1, i32* %x, align 4, !dbg !8054
  br label %for.cond, !dbg !8056

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %x, align 4, !dbg !8057
  %2 = load i32, i32* %size.addr, align 4, !dbg !8060
  %cmp = icmp slt i32 %1, %2, !dbg !8061
  br i1 %cmp, label %for.body, label %for.end, !dbg !8062

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %x, align 4, !dbg !8063
  %idxprom = sext i32 %3 to i64, !dbg !8064
  %4 = load %struct.DiracBlock*, %struct.DiracBlock** %dst, align 8, !dbg !8064
  %arrayidx = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %4, i64 %idxprom, !dbg !8064
  %5 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8065
  %6 = bitcast %struct.DiracBlock* %arrayidx to i8*, !dbg !8066
  %7 = bitcast %struct.DiracBlock* %5 to i8*, !dbg !8066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 10, i32 2, i1 false), !dbg !8066
  br label %for.inc, !dbg !8064

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %x, align 4, !dbg !8067
  %inc = add nsw i32 %8, 1, !dbg !8067
  store i32 %inc, i32* %x, align 4, !dbg !8067
  br label %for.cond, !dbg !8069, !llvm.loop !8070

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %y, align 4, !dbg !8072
  br label %for.cond1, !dbg !8074

for.cond1:                                        ; preds = %for.inc12, %for.end
  %9 = load i32, i32* %y, align 4, !dbg !8075
  %10 = load i32, i32* %size.addr, align 4, !dbg !8078
  %cmp2 = icmp slt i32 %9, %10, !dbg !8079
  br i1 %cmp2, label %for.body3, label %for.end14, !dbg !8080

for.body3:                                        ; preds = %for.cond1
  %11 = load i32, i32* %stride.addr, align 4, !dbg !8081
  %12 = load %struct.DiracBlock*, %struct.DiracBlock** %dst, align 8, !dbg !8083
  %idx.ext = sext i32 %11 to i64, !dbg !8083
  %add.ptr = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %12, i64 %idx.ext, !dbg !8083
  store %struct.DiracBlock* %add.ptr, %struct.DiracBlock** %dst, align 8, !dbg !8083
  store i32 0, i32* %x, align 4, !dbg !8084
  br label %for.cond4, !dbg !8086

for.cond4:                                        ; preds = %for.inc9, %for.body3
  %13 = load i32, i32* %x, align 4, !dbg !8087
  %14 = load i32, i32* %size.addr, align 4, !dbg !8090
  %cmp5 = icmp slt i32 %13, %14, !dbg !8091
  br i1 %cmp5, label %for.body6, label %for.end11, !dbg !8092

for.body6:                                        ; preds = %for.cond4
  %15 = load i32, i32* %x, align 4, !dbg !8093
  %idxprom7 = sext i32 %15 to i64, !dbg !8094
  %16 = load %struct.DiracBlock*, %struct.DiracBlock** %dst, align 8, !dbg !8094
  %arrayidx8 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %16, i64 %idxprom7, !dbg !8094
  %17 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8095
  %18 = bitcast %struct.DiracBlock* %arrayidx8 to i8*, !dbg !8096
  %19 = bitcast %struct.DiracBlock* %17 to i8*, !dbg !8096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 10, i32 2, i1 false), !dbg !8096
  br label %for.inc9, !dbg !8094

for.inc9:                                         ; preds = %for.body6
  %20 = load i32, i32* %x, align 4, !dbg !8097
  %inc10 = add nsw i32 %20, 1, !dbg !8097
  store i32 %inc10, i32* %x, align 4, !dbg !8097
  br label %for.cond4, !dbg !8099, !llvm.loop !8100

for.end11:                                        ; preds = %for.cond4
  br label %for.inc12, !dbg !8102

for.inc12:                                        ; preds = %for.end11
  %21 = load i32, i32* %y, align 4, !dbg !8103
  %inc13 = add nsw i32 %21, 1, !dbg !8103
  store i32 %inc13, i32* %y, align 4, !dbg !8103
  br label %for.cond1, !dbg !8105, !llvm.loop !8106

for.end14:                                        ; preds = %for.cond1
  ret void, !dbg !8108
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dirac_get_arith_bit(%struct.DiracArith* %c, i32 %ctx) #5 !dbg !8109 {
entry:
  %c.addr = alloca %struct.DiracArith*, align 8
  %ctx.addr = alloca i32, align 4
  %prob_zero = alloca i32, align 4
  %range_times_prob = alloca i32, align 4
  %bit = alloca i32, align 4
  %low = alloca i32, align 4
  %range = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !8112, metadata !2947), !dbg !8113
  store i32 %ctx, i32* %ctx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx.addr, metadata !8114, metadata !2947), !dbg !8115
  call void @llvm.dbg.declare(metadata i32* %prob_zero, metadata !8116, metadata !2947), !dbg !8117
  %0 = load i32, i32* %ctx.addr, align 4, !dbg !8118
  %idxprom = sext i32 %0 to i64, !dbg !8119
  %1 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8119
  %contexts = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %1, i32 0, i32 5, !dbg !8120
  %arrayidx = getelementptr inbounds [22 x i16], [22 x i16]* %contexts, i64 0, i64 %idxprom, !dbg !8119
  %2 = load i16, i16* %arrayidx, align 2, !dbg !8119
  %conv = zext i16 %2 to i32, !dbg !8119
  store i32 %conv, i32* %prob_zero, align 4, !dbg !8117
  call void @llvm.dbg.declare(metadata i32* %range_times_prob, metadata !8121, metadata !2947), !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !8123, metadata !2947), !dbg !8124
  call void @llvm.dbg.declare(metadata i32* %low, metadata !8125, metadata !2947), !dbg !8126
  %3 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8127
  %low1 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %3, i32 0, i32 0, !dbg !8128
  %4 = load i32, i32* %low1, align 8, !dbg !8128
  store i32 %4, i32* %low, align 4, !dbg !8126
  call void @llvm.dbg.declare(metadata i32* %range, metadata !8129, metadata !2947), !dbg !8130
  %5 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8131
  %range2 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %5, i32 0, i32 1, !dbg !8132
  %6 = load i16, i16* %range2, align 4, !dbg !8132
  %conv3 = zext i16 %6 to i32, !dbg !8131
  store i32 %conv3, i32* %range, align 4, !dbg !8130
  %7 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8133
  %range4 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %7, i32 0, i32 1, !dbg !8134
  %8 = load i16, i16* %range4, align 4, !dbg !8134
  %conv5 = zext i16 %8 to i32, !dbg !8133
  %9 = load i32, i32* %prob_zero, align 4, !dbg !8135
  %mul = mul nsw i32 %conv5, %9, !dbg !8136
  %shr = ashr i32 %mul, 16, !dbg !8137
  store i32 %shr, i32* %range_times_prob, align 4, !dbg !8138
  %10 = load i32, i32* %range_times_prob, align 4, !dbg !8139
  %shl = shl i32 %10, 16, !dbg !8140
  %11 = load i32, i32* %low, align 4, !dbg !8141
  %sub = sub i32 %11, %shl, !dbg !8141
  store i32 %sub, i32* %low, align 4, !dbg !8141
  %12 = load i32, i32* %range_times_prob, align 4, !dbg !8142
  %13 = load i32, i32* %range, align 4, !dbg !8143
  %sub6 = sub nsw i32 %13, %12, !dbg !8143
  store i32 %sub6, i32* %range, align 4, !dbg !8143
  store i32 0, i32* %bit, align 4, !dbg !8144
  %14 = load i32, i32* %bit, align 4, !dbg !8145
  %15 = load i32, i32* %range, align 4, !dbg !8145
  %16 = load i32, i32* %low, align 4, !dbg !8145
  %17 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8146
  %low7 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %17, i32 0, i32 0, !dbg !8147
  %18 = load i32, i32* %low7, align 8, !dbg !8147
  %19 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8148
  %low8 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %19, i32 0, i32 0, !dbg !8149
  %20 = load i32, i32* %low8, align 8, !dbg !8149
  %shr9 = lshr i32 %20, 16, !dbg !8150
  %21 = load i32, i32* %range_times_prob, align 4, !dbg !8151
  %22 = call { i32, i32, i32 } asm "cmpl   $5, $4 \0A\09setae  ${0:b}    \0A\09cmovb  $3, $2 \0A\09cmovb  $5, $1 \0A\09", "=q,=r,=r,r,r,r,0,1,2,~{dirflag},~{fpsr},~{flags}"(i32 %18, i32 %shr9, i32 %21, i32 %14, i32 %15, i32 %16) #2, !dbg !8145, !srcloc !8152
  %asmresult = extractvalue { i32, i32, i32 } %22, 0, !dbg !8145
  %asmresult10 = extractvalue { i32, i32, i32 } %22, 1, !dbg !8145
  %asmresult11 = extractvalue { i32, i32, i32 } %22, 2, !dbg !8145
  store i32 %asmresult, i32* %bit, align 4, !dbg !8145
  store i32 %asmresult10, i32* %range, align 4, !dbg !8145
  store i32 %asmresult11, i32* %low, align 4, !dbg !8145
  %23 = load i32, i32* %bit, align 4, !dbg !8153
  %idxprom12 = sext i32 %23 to i64, !dbg !8154
  %24 = load i32, i32* %prob_zero, align 4, !dbg !8155
  %shr13 = ashr i32 %24, 8, !dbg !8156
  %idxprom14 = sext i32 %shr13 to i64, !dbg !8154
  %arrayidx15 = getelementptr inbounds [256 x [2 x i16]], [256 x [2 x i16]]* @ff_dirac_prob_branchless, i64 0, i64 %idxprom14, !dbg !8154
  %arrayidx16 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx15, i64 0, i64 %idxprom12, !dbg !8154
  %25 = load i16, i16* %arrayidx16, align 2, !dbg !8154
  %conv17 = sext i16 %25 to i32, !dbg !8154
  %26 = load i32, i32* %ctx.addr, align 4, !dbg !8157
  %idxprom18 = sext i32 %26 to i64, !dbg !8158
  %27 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8158
  %contexts19 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %27, i32 0, i32 5, !dbg !8159
  %arrayidx20 = getelementptr inbounds [22 x i16], [22 x i16]* %contexts19, i64 0, i64 %idxprom18, !dbg !8158
  %28 = load i16, i16* %arrayidx20, align 2, !dbg !8160
  %conv21 = zext i16 %28 to i32, !dbg !8160
  %add = add nsw i32 %conv21, %conv17, !dbg !8160
  %conv22 = trunc i32 %add to i16, !dbg !8160
  store i16 %conv22, i16* %arrayidx20, align 2, !dbg !8160
  %29 = load i32, i32* %low, align 4, !dbg !8161
  %30 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8162
  %low23 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %30, i32 0, i32 0, !dbg !8163
  store i32 %29, i32* %low23, align 8, !dbg !8164
  %31 = load i32, i32* %range, align 4, !dbg !8165
  %conv24 = trunc i32 %31 to i16, !dbg !8165
  %32 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8166
  %range25 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %32, i32 0, i32 1, !dbg !8167
  store i16 %conv24, i16* %range25, align 4, !dbg !8168
  %33 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8169
  call void @renorm(%struct.DiracArith* %33), !dbg !8170
  %34 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8171
  call void @refill(%struct.DiracArith* %34), !dbg !8172
  %35 = load i32, i32* %bit, align 4, !dbg !8173
  ret i32 %35, !dbg !8174
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @renorm(%struct.DiracArith* %c) #5 !dbg !8175 {
entry:
  %c.addr = alloca %struct.DiracArith*, align 8
  %shift = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !8178, metadata !2947), !dbg !8179
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8180, metadata !2947), !dbg !8181
  %0 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8182
  %range = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %0, i32 0, i32 1, !dbg !8183
  %1 = load i16, i16* %range, align 4, !dbg !8183
  %conv = zext i16 %1 to i32, !dbg !8182
  %sub = sub nsw i32 %conv, 1, !dbg !8184
  %or = or i32 %sub, 1, !dbg !8185
  %2 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !8186
  %sub1 = sub nsw i32 31, %2, !dbg !8187
  %sub2 = sub nsw i32 14, %sub1, !dbg !8188
  %3 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8189
  %range3 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %3, i32 0, i32 1, !dbg !8190
  %4 = load i16, i16* %range3, align 4, !dbg !8190
  %conv4 = zext i16 %4 to i32, !dbg !8189
  %sub5 = sub nsw i32 %conv4, 1, !dbg !8191
  %shr = ashr i32 %sub5, 15, !dbg !8192
  %add = add nsw i32 %sub2, %shr, !dbg !8193
  store i32 %add, i32* %shift, align 4, !dbg !8181
  %5 = load i32, i32* %shift, align 4, !dbg !8194
  %6 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8195
  %low = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %6, i32 0, i32 0, !dbg !8196
  %7 = load i32, i32* %low, align 8, !dbg !8197
  %shl = shl i32 %7, %5, !dbg !8197
  store i32 %shl, i32* %low, align 8, !dbg !8197
  %8 = load i32, i32* %shift, align 4, !dbg !8198
  %9 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8199
  %range6 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %9, i32 0, i32 1, !dbg !8200
  %10 = load i16, i16* %range6, align 4, !dbg !8201
  %conv7 = zext i16 %10 to i32, !dbg !8201
  %shl8 = shl i32 %conv7, %8, !dbg !8201
  %conv9 = trunc i32 %shl8 to i16, !dbg !8201
  store i16 %conv9, i16* %range6, align 4, !dbg !8201
  %11 = load i32, i32* %shift, align 4, !dbg !8202
  %12 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8203
  %counter = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %12, i32 0, i32 2, !dbg !8204
  %13 = load i16, i16* %counter, align 2, !dbg !8205
  %conv10 = sext i16 %13 to i32, !dbg !8205
  %add11 = add nsw i32 %conv10, %11, !dbg !8205
  %conv12 = trunc i32 %add11 to i16, !dbg !8205
  store i16 %conv12, i16* %counter, align 2, !dbg !8205
  ret void, !dbg !8206
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @refill(%struct.DiracArith* %c) #5 !dbg !8207 {
entry:
  %x.addr.i.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i, metadata !8208, metadata !2947), !dbg !8212
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !8221, metadata !2947), !dbg !8222
  %c.addr = alloca %struct.DiracArith*, align 8
  %counter = alloca i32, align 4
  %new = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !8223, metadata !2947), !dbg !8224
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !8225, metadata !2947), !dbg !8226
  %0 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8227
  %counter1 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %0, i32 0, i32 2, !dbg !8228
  %1 = load i16, i16* %counter1, align 2, !dbg !8228
  %conv = sext i16 %1 to i32, !dbg !8227
  store i32 %conv, i32* %counter, align 4, !dbg !8226
  %2 = load i32, i32* %counter, align 4, !dbg !8229
  %cmp = icmp sge i32 %2, 0, !dbg !8230
  br i1 %cmp, label %if.then, label %if.end21, !dbg !8231

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %new, metadata !8232, metadata !2947), !dbg !8233
  %3 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8234
  %bytestream = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %3, i32 0, i32 3, !dbg !8235
  store i8** %bytestream, i8*** %b.addr.i, align 8, !dbg !8236
  %4 = load i8**, i8*** %b.addr.i, align 8, !dbg !8237
  %5 = load i8*, i8** %4, align 8, !dbg !8238
  %add.ptr.i = getelementptr inbounds i8, i8* %5, i64 2, !dbg !8238
  store i8* %add.ptr.i, i8** %4, align 8, !dbg !8238
  %6 = load i8**, i8*** %b.addr.i, align 8, !dbg !8239
  %7 = load i8*, i8** %6, align 8, !dbg !8240
  %add.ptr1.i = getelementptr inbounds i8, i8* %7, i64 -2, !dbg !8241
  %8 = bitcast i8* %add.ptr1.i to %union.unaligned_16*, !dbg !8242
  %l.i = bitcast %union.unaligned_16* %8 to i16*, !dbg !8242
  %9 = load i16, i16* %l.i, align 1, !dbg !8242
  store i16 %9, i16* %x.addr.i.i, align 2, !dbg !8243
  %10 = load i16, i16* %x.addr.i.i, align 2, !dbg !8244
  %conv.i.i = zext i16 %10 to i32, !dbg !8244
  %shr.i.i = ashr i32 %conv.i.i, 8, !dbg !8245
  %11 = load i16, i16* %x.addr.i.i, align 2, !dbg !8246
  %conv1.i.i = zext i16 %11 to i32, !dbg !8246
  %shl.i.i = shl i32 %conv1.i.i, 8, !dbg !8247
  %or.i.i = or i32 %shr.i.i, %shl.i.i, !dbg !8248
  %conv2.i.i = trunc i32 %or.i.i to i16, !dbg !8249
  store i16 %conv2.i.i, i16* %x.addr.i.i, align 2, !dbg !8250
  %12 = load i16, i16* %x.addr.i.i, align 2, !dbg !8251
  %conv.i = zext i16 %12 to i32, !dbg !8243
  store i32 %conv.i, i32* %new, align 4, !dbg !8233
  %13 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8252
  %bytestream3 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %13, i32 0, i32 3, !dbg !8254
  %14 = load i8*, i8** %bytestream3, align 8, !dbg !8254
  %15 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8255
  %bytestream_end = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %15, i32 0, i32 4, !dbg !8256
  %16 = load i8*, i8** %bytestream_end, align 8, !dbg !8256
  %cmp4 = icmp ugt i8* %14, %16, !dbg !8257
  br i1 %cmp4, label %if.then6, label %if.end20, !dbg !8258

if.then6:                                         ; preds = %if.then
  %17 = load i32, i32* %new, align 4, !dbg !8259
  %or = or i32 %17, 255, !dbg !8259
  store i32 %or, i32* %new, align 4, !dbg !8259
  %18 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8261
  %bytestream7 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %18, i32 0, i32 3, !dbg !8263
  %19 = load i8*, i8** %bytestream7, align 8, !dbg !8263
  %20 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8264
  %bytestream_end8 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %20, i32 0, i32 4, !dbg !8265
  %21 = load i8*, i8** %bytestream_end8, align 8, !dbg !8265
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 1, !dbg !8266
  %cmp9 = icmp ugt i8* %19, %add.ptr, !dbg !8267
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !8268

if.then11:                                        ; preds = %if.then6
  %22 = load i32, i32* %new, align 4, !dbg !8269
  %or12 = or i32 %22, 65280, !dbg !8269
  store i32 %or12, i32* %new, align 4, !dbg !8269
  br label %if.end, !dbg !8270

if.end:                                           ; preds = %if.then11, %if.then6
  %23 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8271
  %bytestream_end13 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %23, i32 0, i32 4, !dbg !8272
  %24 = load i8*, i8** %bytestream_end13, align 8, !dbg !8272
  %25 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8273
  %bytestream14 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %25, i32 0, i32 3, !dbg !8274
  store i8* %24, i8** %bytestream14, align 8, !dbg !8275
  %26 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8276
  %overread = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %26, i32 0, i32 7, !dbg !8277
  %27 = load i32, i32* %overread, align 8, !dbg !8278
  %inc = add nsw i32 %27, 1, !dbg !8278
  store i32 %inc, i32* %overread, align 8, !dbg !8278
  %28 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8279
  %overread15 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %28, i32 0, i32 7, !dbg !8281
  %29 = load i32, i32* %overread15, align 8, !dbg !8281
  %cmp16 = icmp sgt i32 %29, 4, !dbg !8282
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8283

if.then18:                                        ; preds = %if.end
  %30 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8284
  %error = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %30, i32 0, i32 6, !dbg !8285
  store i32 -1094995529, i32* %error, align 4, !dbg !8286
  br label %if.end19, !dbg !8284

if.end19:                                         ; preds = %if.then18, %if.end
  br label %if.end20, !dbg !8287

if.end20:                                         ; preds = %if.end19, %if.then
  %31 = load i32, i32* %new, align 4, !dbg !8288
  %32 = load i32, i32* %counter, align 4, !dbg !8289
  %shl = shl i32 %31, %32, !dbg !8290
  %33 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8291
  %low = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %33, i32 0, i32 0, !dbg !8292
  %34 = load i32, i32* %low, align 8, !dbg !8293
  %add = add i32 %34, %shl, !dbg !8293
  store i32 %add, i32* %low, align 8, !dbg !8293
  %35 = load i32, i32* %counter, align 4, !dbg !8294
  %sub = sub nsw i32 %35, 16, !dbg !8294
  store i32 %sub, i32* %counter, align 4, !dbg !8294
  br label %if.end21, !dbg !8295

if.end21:                                         ; preds = %if.end20, %entry
  %36 = load i32, i32* %counter, align 4, !dbg !8296
  %conv22 = trunc i32 %36 to i16, !dbg !8296
  %37 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8297
  %counter23 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %37, i32 0, i32 2, !dbg !8298
  store i16 %conv22, i16* %counter23, align 2, !dbg !8299
  ret void, !dbg !8300
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pred_block_mode(%struct.DiracBlock* %block, i32 %stride, i32 %x, i32 %y, i32 %refmask) #5 !dbg !8301 {
entry:
  %retval = alloca i32, align 4
  %block.addr = alloca %struct.DiracBlock*, align 8
  %stride.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %refmask.addr = alloca i32, align 4
  %pred = alloca i32, align 4
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !8304, metadata !2947), !dbg !8305
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8306, metadata !2947), !dbg !8307
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8308, metadata !2947), !dbg !8309
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8310, metadata !2947), !dbg !8311
  store i32 %refmask, i32* %refmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %refmask.addr, metadata !8312, metadata !2947), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !8314, metadata !2947), !dbg !8315
  %0 = load i32, i32* %x.addr, align 4, !dbg !8316
  %1 = load i32, i32* %y.addr, align 4, !dbg !8318
  %or = or i32 %0, %1, !dbg !8319
  %tobool = icmp ne i32 %or, 0, !dbg !8319
  br i1 %tobool, label %if.else, label %if.then, !dbg !8320

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8321
  br label %return, !dbg !8321

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %y.addr, align 4, !dbg !8322
  %tobool1 = icmp ne i32 %2, 0, !dbg !8322
  br i1 %tobool1, label %if.else3, label %if.then2, !dbg !8324

if.then2:                                         ; preds = %if.else
  %3 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8325
  %arrayidx = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %3, i64 -1, !dbg !8325
  %ref = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx, i32 0, i32 1, !dbg !8326
  %4 = load i8, i8* %ref, align 2, !dbg !8326
  %conv = zext i8 %4 to i32, !dbg !8325
  %5 = load i32, i32* %refmask.addr, align 4, !dbg !8327
  %and = and i32 %conv, %5, !dbg !8328
  store i32 %and, i32* %retval, align 4, !dbg !8329
  br label %return, !dbg !8329

if.else3:                                         ; preds = %if.else
  %6 = load i32, i32* %x.addr, align 4, !dbg !8330
  %tobool4 = icmp ne i32 %6, 0, !dbg !8330
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !8332

if.then5:                                         ; preds = %if.else3
  %7 = load i32, i32* %stride.addr, align 4, !dbg !8333
  %sub = sub nsw i32 0, %7, !dbg !8334
  %idxprom = sext i32 %sub to i64, !dbg !8335
  %8 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8335
  %arrayidx6 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %8, i64 %idxprom, !dbg !8335
  %ref7 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx6, i32 0, i32 1, !dbg !8336
  %9 = load i8, i8* %ref7, align 2, !dbg !8336
  %conv8 = zext i8 %9 to i32, !dbg !8335
  %10 = load i32, i32* %refmask.addr, align 4, !dbg !8337
  %and9 = and i32 %conv8, %10, !dbg !8338
  store i32 %and9, i32* %retval, align 4, !dbg !8339
  br label %return, !dbg !8339

if.end:                                           ; preds = %if.else3
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8340
  %arrayidx12 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %11, i64 -1, !dbg !8340
  %ref13 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx12, i32 0, i32 1, !dbg !8341
  %12 = load i8, i8* %ref13, align 2, !dbg !8341
  %conv14 = zext i8 %12 to i32, !dbg !8340
  %13 = load i32, i32* %refmask.addr, align 4, !dbg !8342
  %and15 = and i32 %conv14, %13, !dbg !8343
  %14 = load i32, i32* %stride.addr, align 4, !dbg !8344
  %sub16 = sub nsw i32 0, %14, !dbg !8345
  %idxprom17 = sext i32 %sub16 to i64, !dbg !8346
  %15 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8346
  %arrayidx18 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %15, i64 %idxprom17, !dbg !8346
  %ref19 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx18, i32 0, i32 1, !dbg !8347
  %16 = load i8, i8* %ref19, align 2, !dbg !8347
  %conv20 = zext i8 %16 to i32, !dbg !8346
  %17 = load i32, i32* %refmask.addr, align 4, !dbg !8348
  %and21 = and i32 %conv20, %17, !dbg !8349
  %add = add nsw i32 %and15, %and21, !dbg !8350
  %18 = load i32, i32* %stride.addr, align 4, !dbg !8351
  %sub22 = sub nsw i32 0, %18, !dbg !8352
  %sub23 = sub nsw i32 %sub22, 1, !dbg !8353
  %idxprom24 = sext i32 %sub23 to i64, !dbg !8354
  %19 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8354
  %arrayidx25 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %19, i64 %idxprom24, !dbg !8354
  %ref26 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx25, i32 0, i32 1, !dbg !8355
  %20 = load i8, i8* %ref26, align 2, !dbg !8355
  %conv27 = zext i8 %20 to i32, !dbg !8354
  %21 = load i32, i32* %refmask.addr, align 4, !dbg !8356
  %and28 = and i32 %conv27, %21, !dbg !8357
  %add29 = add nsw i32 %add, %and28, !dbg !8358
  store i32 %add29, i32* %pred, align 4, !dbg !8359
  %22 = load i32, i32* %pred, align 4, !dbg !8360
  %shr = ashr i32 %22, 1, !dbg !8361
  %23 = load i32, i32* %refmask.addr, align 4, !dbg !8362
  %and30 = and i32 %shr, %23, !dbg !8363
  store i32 %and30, i32* %retval, align 4, !dbg !8364
  br label %return, !dbg !8364

return:                                           ; preds = %if.end11, %if.then5, %if.then2, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8365
  ret i32 %24, !dbg !8365
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pred_block_dc(%struct.DiracBlock* %block, i32 %stride, i32 %x, i32 %y) #5 !dbg !8366 {
entry:
  %block.addr = alloca %struct.DiracBlock*, align 8
  %stride.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !8369, metadata !2947), !dbg !8370
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8371, metadata !2947), !dbg !8372
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8373, metadata !2947), !dbg !8374
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8375, metadata !2947), !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8377, metadata !2947), !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8379, metadata !2947), !dbg !8380
  store i32 0, i32* %n, align 4, !dbg !8380
  %0 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8381
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %0, i32 0, i32 0, !dbg !8382
  %dc = bitcast %union.anon.3* %u to [3 x i16]*, !dbg !8383
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %dc, i32 0, i32 0, !dbg !8384
  %1 = bitcast i16* %arraydecay to i8*, !dbg !8384
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 6, i32 2, i1 false), !dbg !8384
  %2 = load i32, i32* %x.addr, align 4, !dbg !8385
  %tobool = icmp ne i32 %2, 0, !dbg !8385
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8387

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8388
  %arrayidx = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %3, i64 -1, !dbg !8388
  %ref = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx, i32 0, i32 1, !dbg !8390
  %4 = load i8, i8* %ref, align 2, !dbg !8390
  %conv = zext i8 %4 to i32, !dbg !8388
  %and = and i32 %conv, 3, !dbg !8391
  %tobool1 = icmp ne i32 %and, 0, !dbg !8391
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8392

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !8393
  br label %for.cond, !dbg !8396

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !8397
  %cmp = icmp slt i32 %5, 3, !dbg !8400
  br i1 %cmp, label %for.body, label %for.end, !dbg !8401

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !8402
  %idxprom = sext i32 %6 to i64, !dbg !8403
  %7 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8403
  %arrayidx3 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %7, i64 -1, !dbg !8403
  %u4 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx3, i32 0, i32 0, !dbg !8404
  %dc5 = bitcast %union.anon.3* %u4 to [3 x i16]*, !dbg !8405
  %arrayidx6 = getelementptr inbounds [3 x i16], [3 x i16]* %dc5, i64 0, i64 %idxprom, !dbg !8403
  %8 = load i16, i16* %arrayidx6, align 2, !dbg !8403
  %conv7 = sext i16 %8 to i32, !dbg !8403
  %9 = load i32, i32* %i, align 4, !dbg !8406
  %idxprom8 = sext i32 %9 to i64, !dbg !8407
  %10 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8407
  %u9 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %10, i32 0, i32 0, !dbg !8408
  %dc10 = bitcast %union.anon.3* %u9 to [3 x i16]*, !dbg !8409
  %arrayidx11 = getelementptr inbounds [3 x i16], [3 x i16]* %dc10, i64 0, i64 %idxprom8, !dbg !8407
  %11 = load i16, i16* %arrayidx11, align 2, !dbg !8410
  %conv12 = sext i16 %11 to i32, !dbg !8410
  %add = add nsw i32 %conv12, %conv7, !dbg !8410
  %conv13 = trunc i32 %add to i16, !dbg !8410
  store i16 %conv13, i16* %arrayidx11, align 2, !dbg !8410
  br label %for.inc, !dbg !8407

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !8411
  %inc = add nsw i32 %12, 1, !dbg !8411
  store i32 %inc, i32* %i, align 4, !dbg !8411
  br label %for.cond, !dbg !8413, !llvm.loop !8414

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %n, align 4, !dbg !8416
  %inc14 = add nsw i32 %13, 1, !dbg !8416
  store i32 %inc14, i32* %n, align 4, !dbg !8416
  br label %if.end, !dbg !8417

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %14 = load i32, i32* %y.addr, align 4, !dbg !8418
  %tobool15 = icmp ne i32 %14, 0, !dbg !8418
  br i1 %tobool15, label %land.lhs.true16, label %if.end47, !dbg !8420

land.lhs.true16:                                  ; preds = %if.end
  %15 = load i32, i32* %stride.addr, align 4, !dbg !8421
  %sub = sub nsw i32 0, %15, !dbg !8423
  %idxprom17 = sext i32 %sub to i64, !dbg !8424
  %16 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8424
  %arrayidx18 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %16, i64 %idxprom17, !dbg !8424
  %ref19 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx18, i32 0, i32 1, !dbg !8425
  %17 = load i8, i8* %ref19, align 2, !dbg !8425
  %conv20 = zext i8 %17 to i32, !dbg !8424
  %and21 = and i32 %conv20, 3, !dbg !8426
  %tobool22 = icmp ne i32 %and21, 0, !dbg !8426
  br i1 %tobool22, label %if.end47, label %if.then23, !dbg !8427

if.then23:                                        ; preds = %land.lhs.true16
  store i32 0, i32* %i, align 4, !dbg !8428
  br label %for.cond24, !dbg !8431

for.cond24:                                       ; preds = %for.inc43, %if.then23
  %18 = load i32, i32* %i, align 4, !dbg !8432
  %cmp25 = icmp slt i32 %18, 3, !dbg !8435
  br i1 %cmp25, label %for.body27, label %for.end45, !dbg !8436

for.body27:                                       ; preds = %for.cond24
  %19 = load i32, i32* %i, align 4, !dbg !8437
  %idxprom28 = sext i32 %19 to i64, !dbg !8438
  %20 = load i32, i32* %stride.addr, align 4, !dbg !8439
  %sub29 = sub nsw i32 0, %20, !dbg !8440
  %idxprom30 = sext i32 %sub29 to i64, !dbg !8438
  %21 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8438
  %arrayidx31 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %21, i64 %idxprom30, !dbg !8438
  %u32 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx31, i32 0, i32 0, !dbg !8441
  %dc33 = bitcast %union.anon.3* %u32 to [3 x i16]*, !dbg !8442
  %arrayidx34 = getelementptr inbounds [3 x i16], [3 x i16]* %dc33, i64 0, i64 %idxprom28, !dbg !8438
  %22 = load i16, i16* %arrayidx34, align 2, !dbg !8438
  %conv35 = sext i16 %22 to i32, !dbg !8438
  %23 = load i32, i32* %i, align 4, !dbg !8443
  %idxprom36 = sext i32 %23 to i64, !dbg !8444
  %24 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8444
  %u37 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %24, i32 0, i32 0, !dbg !8445
  %dc38 = bitcast %union.anon.3* %u37 to [3 x i16]*, !dbg !8446
  %arrayidx39 = getelementptr inbounds [3 x i16], [3 x i16]* %dc38, i64 0, i64 %idxprom36, !dbg !8444
  %25 = load i16, i16* %arrayidx39, align 2, !dbg !8447
  %conv40 = sext i16 %25 to i32, !dbg !8447
  %add41 = add nsw i32 %conv40, %conv35, !dbg !8447
  %conv42 = trunc i32 %add41 to i16, !dbg !8447
  store i16 %conv42, i16* %arrayidx39, align 2, !dbg !8447
  br label %for.inc43, !dbg !8444

for.inc43:                                        ; preds = %for.body27
  %26 = load i32, i32* %i, align 4, !dbg !8448
  %inc44 = add nsw i32 %26, 1, !dbg !8448
  store i32 %inc44, i32* %i, align 4, !dbg !8448
  br label %for.cond24, !dbg !8450, !llvm.loop !8451

for.end45:                                        ; preds = %for.cond24
  %27 = load i32, i32* %n, align 4, !dbg !8453
  %inc46 = add nsw i32 %27, 1, !dbg !8453
  store i32 %inc46, i32* %n, align 4, !dbg !8453
  br label %if.end47, !dbg !8454

if.end47:                                         ; preds = %for.end45, %land.lhs.true16, %if.end
  %28 = load i32, i32* %x.addr, align 4, !dbg !8455
  %tobool48 = icmp ne i32 %28, 0, !dbg !8455
  br i1 %tobool48, label %land.lhs.true49, label %if.end83, !dbg !8457

land.lhs.true49:                                  ; preds = %if.end47
  %29 = load i32, i32* %y.addr, align 4, !dbg !8458
  %tobool50 = icmp ne i32 %29, 0, !dbg !8458
  br i1 %tobool50, label %land.lhs.true51, label %if.end83, !dbg !8460

land.lhs.true51:                                  ; preds = %land.lhs.true49
  %30 = load i32, i32* %stride.addr, align 4, !dbg !8461
  %sub52 = sub nsw i32 -1, %30, !dbg !8463
  %idxprom53 = sext i32 %sub52 to i64, !dbg !8464
  %31 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8464
  %arrayidx54 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %31, i64 %idxprom53, !dbg !8464
  %ref55 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx54, i32 0, i32 1, !dbg !8465
  %32 = load i8, i8* %ref55, align 2, !dbg !8465
  %conv56 = zext i8 %32 to i32, !dbg !8464
  %and57 = and i32 %conv56, 3, !dbg !8466
  %tobool58 = icmp ne i32 %and57, 0, !dbg !8466
  br i1 %tobool58, label %if.end83, label %if.then59, !dbg !8467

if.then59:                                        ; preds = %land.lhs.true51
  store i32 0, i32* %i, align 4, !dbg !8468
  br label %for.cond60, !dbg !8471

for.cond60:                                       ; preds = %for.inc79, %if.then59
  %33 = load i32, i32* %i, align 4, !dbg !8472
  %cmp61 = icmp slt i32 %33, 3, !dbg !8475
  br i1 %cmp61, label %for.body63, label %for.end81, !dbg !8476

for.body63:                                       ; preds = %for.cond60
  %34 = load i32, i32* %i, align 4, !dbg !8477
  %idxprom64 = sext i32 %34 to i64, !dbg !8478
  %35 = load i32, i32* %stride.addr, align 4, !dbg !8479
  %sub65 = sub nsw i32 -1, %35, !dbg !8480
  %idxprom66 = sext i32 %sub65 to i64, !dbg !8478
  %36 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8478
  %arrayidx67 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %36, i64 %idxprom66, !dbg !8478
  %u68 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx67, i32 0, i32 0, !dbg !8481
  %dc69 = bitcast %union.anon.3* %u68 to [3 x i16]*, !dbg !8482
  %arrayidx70 = getelementptr inbounds [3 x i16], [3 x i16]* %dc69, i64 0, i64 %idxprom64, !dbg !8478
  %37 = load i16, i16* %arrayidx70, align 2, !dbg !8478
  %conv71 = sext i16 %37 to i32, !dbg !8478
  %38 = load i32, i32* %i, align 4, !dbg !8483
  %idxprom72 = sext i32 %38 to i64, !dbg !8484
  %39 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8484
  %u73 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %39, i32 0, i32 0, !dbg !8485
  %dc74 = bitcast %union.anon.3* %u73 to [3 x i16]*, !dbg !8486
  %arrayidx75 = getelementptr inbounds [3 x i16], [3 x i16]* %dc74, i64 0, i64 %idxprom72, !dbg !8484
  %40 = load i16, i16* %arrayidx75, align 2, !dbg !8487
  %conv76 = sext i16 %40 to i32, !dbg !8487
  %add77 = add nsw i32 %conv76, %conv71, !dbg !8487
  %conv78 = trunc i32 %add77 to i16, !dbg !8487
  store i16 %conv78, i16* %arrayidx75, align 2, !dbg !8487
  br label %for.inc79, !dbg !8484

for.inc79:                                        ; preds = %for.body63
  %41 = load i32, i32* %i, align 4, !dbg !8488
  %inc80 = add nsw i32 %41, 1, !dbg !8488
  store i32 %inc80, i32* %i, align 4, !dbg !8488
  br label %for.cond60, !dbg !8490, !llvm.loop !8491

for.end81:                                        ; preds = %for.cond60
  %42 = load i32, i32* %n, align 4, !dbg !8493
  %inc82 = add nsw i32 %42, 1, !dbg !8493
  store i32 %inc82, i32* %n, align 4, !dbg !8493
  br label %if.end83, !dbg !8494

if.end83:                                         ; preds = %for.end81, %land.lhs.true51, %land.lhs.true49, %if.end47
  %43 = load i32, i32* %n, align 4, !dbg !8495
  %cmp84 = icmp eq i32 %43, 2, !dbg !8497
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !8498

if.then86:                                        ; preds = %if.end83
  store i32 0, i32* %i, align 4, !dbg !8499
  br label %for.cond87, !dbg !8502

for.cond87:                                       ; preds = %for.inc102, %if.then86
  %44 = load i32, i32* %i, align 4, !dbg !8503
  %cmp88 = icmp slt i32 %44, 3, !dbg !8506
  br i1 %cmp88, label %for.body90, label %for.end104, !dbg !8507

for.body90:                                       ; preds = %for.cond87
  %45 = load i32, i32* %i, align 4, !dbg !8508
  %idxprom91 = sext i32 %45 to i64, !dbg !8509
  %46 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8509
  %u92 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %46, i32 0, i32 0, !dbg !8510
  %dc93 = bitcast %union.anon.3* %u92 to [3 x i16]*, !dbg !8511
  %arrayidx94 = getelementptr inbounds [3 x i16], [3 x i16]* %dc93, i64 0, i64 %idxprom91, !dbg !8509
  %47 = load i16, i16* %arrayidx94, align 2, !dbg !8509
  %conv95 = sext i16 %47 to i32, !dbg !8509
  %add96 = add nsw i32 %conv95, 1, !dbg !8512
  %shr = ashr i32 %add96, 1, !dbg !8513
  %conv97 = trunc i32 %shr to i16, !dbg !8514
  %48 = load i32, i32* %i, align 4, !dbg !8515
  %idxprom98 = sext i32 %48 to i64, !dbg !8516
  %49 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8516
  %u99 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %49, i32 0, i32 0, !dbg !8517
  %dc100 = bitcast %union.anon.3* %u99 to [3 x i16]*, !dbg !8518
  %arrayidx101 = getelementptr inbounds [3 x i16], [3 x i16]* %dc100, i64 0, i64 %idxprom98, !dbg !8516
  store i16 %conv97, i16* %arrayidx101, align 2, !dbg !8519
  br label %for.inc102, !dbg !8516

for.inc102:                                       ; preds = %for.body90
  %50 = load i32, i32* %i, align 4, !dbg !8520
  %inc103 = add nsw i32 %50, 1, !dbg !8520
  store i32 %inc103, i32* %i, align 4, !dbg !8520
  br label %for.cond87, !dbg !8522, !llvm.loop !8523

for.end104:                                       ; preds = %for.cond87
  br label %if.end126, !dbg !8525

if.else:                                          ; preds = %if.end83
  %51 = load i32, i32* %n, align 4, !dbg !8526
  %cmp105 = icmp eq i32 %51, 3, !dbg !8529
  br i1 %cmp105, label %if.then107, label %if.end125, !dbg !8526

if.then107:                                       ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !8530
  br label %for.cond108, !dbg !8533

for.cond108:                                      ; preds = %for.inc122, %if.then107
  %52 = load i32, i32* %i, align 4, !dbg !8534
  %cmp109 = icmp slt i32 %52, 3, !dbg !8537
  br i1 %cmp109, label %for.body111, label %for.end124, !dbg !8538

for.body111:                                      ; preds = %for.cond108
  %53 = load i32, i32* %i, align 4, !dbg !8539
  %idxprom112 = sext i32 %53 to i64, !dbg !8540
  %54 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8540
  %u113 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %54, i32 0, i32 0, !dbg !8541
  %dc114 = bitcast %union.anon.3* %u113 to [3 x i16]*, !dbg !8542
  %arrayidx115 = getelementptr inbounds [3 x i16], [3 x i16]* %dc114, i64 0, i64 %idxprom112, !dbg !8540
  %55 = load i16, i16* %arrayidx115, align 2, !dbg !8540
  %conv116 = sext i16 %55 to i32, !dbg !8540
  %call = call i32 @divide3(i32 %conv116), !dbg !8543
  %conv117 = trunc i32 %call to i16, !dbg !8543
  %56 = load i32, i32* %i, align 4, !dbg !8544
  %idxprom118 = sext i32 %56 to i64, !dbg !8545
  %57 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8545
  %u119 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %57, i32 0, i32 0, !dbg !8546
  %dc120 = bitcast %union.anon.3* %u119 to [3 x i16]*, !dbg !8547
  %arrayidx121 = getelementptr inbounds [3 x i16], [3 x i16]* %dc120, i64 0, i64 %idxprom118, !dbg !8545
  store i16 %conv117, i16* %arrayidx121, align 2, !dbg !8548
  br label %for.inc122, !dbg !8545

for.inc122:                                       ; preds = %for.body111
  %58 = load i32, i32* %i, align 4, !dbg !8549
  %inc123 = add nsw i32 %58, 1, !dbg !8549
  store i32 %inc123, i32* %i, align 4, !dbg !8549
  br label %for.cond108, !dbg !8551, !llvm.loop !8552

for.end124:                                       ; preds = %for.cond108
  br label %if.end125, !dbg !8554

if.end125:                                        ; preds = %for.end124, %if.else
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %for.end104
  ret void, !dbg !8555
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dirac_get_arith_int(%struct.DiracArith* %c, i32 %follow_ctx, i32 %data_ctx) #5 !dbg !8556 {
entry:
  %c.addr = alloca %struct.DiracArith*, align 8
  %follow_ctx.addr = alloca i32, align 4
  %data_ctx.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !8557, metadata !2947), !dbg !8558
  store i32 %follow_ctx, i32* %follow_ctx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %follow_ctx.addr, metadata !8559, metadata !2947), !dbg !8560
  store i32 %data_ctx, i32* %data_ctx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_ctx.addr, metadata !8561, metadata !2947), !dbg !8562
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8563, metadata !2947), !dbg !8564
  %0 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8565
  %1 = load i32, i32* %follow_ctx.addr, align 4, !dbg !8566
  %2 = load i32, i32* %data_ctx.addr, align 4, !dbg !8567
  %call = call i32 @dirac_get_arith_uint(%struct.DiracArith* %0, i32 %1, i32 %2), !dbg !8568
  store i32 %call, i32* %ret, align 4, !dbg !8564
  %3 = load i32, i32* %ret, align 4, !dbg !8569
  %tobool = icmp ne i32 %3, 0, !dbg !8569
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8571

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !8572
  %5 = load i32, i32* %data_ctx.addr, align 4, !dbg !8574
  %add = add nsw i32 %5, 1, !dbg !8575
  %call1 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %4, i32 %add), !dbg !8576
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8576
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8577

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %ret, align 4, !dbg !8578
  %sub = sub nsw i32 0, %6, !dbg !8579
  store i32 %sub, i32* %ret, align 4, !dbg !8580
  br label %if.end, !dbg !8581

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %ret, align 4, !dbg !8582
  ret i32 %7, !dbg !8583
}

; Function Attrs: nounwind uwtable
define internal void @global_mv(%struct.DiracContext* %s, %struct.DiracBlock* %block, i32 %x, i32 %y, i32 %ref) #1 !dbg !8584 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %block.addr = alloca %struct.DiracBlock*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ref.addr = alloca i32, align 4
  %ez = alloca i32, align 4
  %ep = alloca i32, align 4
  %A = alloca [2 x i32]*, align 8
  %b = alloca i32*, align 8
  %c = alloca i32*, align 8
  %m = alloca i32, align 4
  %mx = alloca i64, align 8
  %my = alloca i64, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !8587, metadata !2947), !dbg !8588
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !8589, metadata !2947), !dbg !8590
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8591, metadata !2947), !dbg !8592
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8593, metadata !2947), !dbg !8594
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !8595, metadata !2947), !dbg !8596
  call void @llvm.dbg.declare(metadata i32* %ez, metadata !8597, metadata !2947), !dbg !8598
  %0 = load i32, i32* %ref.addr, align 4, !dbg !8599
  %idxprom = sext i32 %0 to i64, !dbg !8600
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8600
  %globalmc = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 38, !dbg !8601
  %arrayidx = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc, i64 0, i64 %idxprom, !dbg !8600
  %zrs_exp = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx, i32 0, i32 3, !dbg !8602
  %2 = load i32, i32* %zrs_exp, align 8, !dbg !8602
  store i32 %2, i32* %ez, align 4, !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !8603, metadata !2947), !dbg !8604
  %3 = load i32, i32* %ref.addr, align 4, !dbg !8605
  %idxprom1 = sext i32 %3 to i64, !dbg !8606
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8606
  %globalmc2 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 38, !dbg !8607
  %arrayidx3 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc2, i64 0, i64 %idxprom1, !dbg !8606
  %perspective_exp = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx3, i32 0, i32 4, !dbg !8608
  %5 = load i32, i32* %perspective_exp, align 4, !dbg !8608
  store i32 %5, i32* %ep, align 4, !dbg !8604
  call void @llvm.dbg.declare(metadata [2 x i32]** %A, metadata !8609, metadata !2947), !dbg !8611
  %6 = load i32, i32* %ref.addr, align 4, !dbg !8612
  %idxprom4 = sext i32 %6 to i64, !dbg !8613
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8613
  %globalmc5 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 38, !dbg !8614
  %arrayidx6 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc5, i64 0, i64 %idxprom4, !dbg !8613
  %zrs = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx6, i32 0, i32 1, !dbg !8615
  %arraydecay = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %zrs, i32 0, i32 0, !dbg !8613
  store [2 x i32]* %arraydecay, [2 x i32]** %A, align 8, !dbg !8611
  call void @llvm.dbg.declare(metadata i32** %b, metadata !8616, metadata !2947), !dbg !8617
  %8 = load i32, i32* %ref.addr, align 4, !dbg !8618
  %idxprom7 = sext i32 %8 to i64, !dbg !8619
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8619
  %globalmc8 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 38, !dbg !8620
  %arrayidx9 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc8, i64 0, i64 %idxprom7, !dbg !8619
  %pan_tilt = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx9, i32 0, i32 0, !dbg !8621
  %arraydecay10 = getelementptr inbounds [2 x i32], [2 x i32]* %pan_tilt, i32 0, i32 0, !dbg !8619
  store i32* %arraydecay10, i32** %b, align 8, !dbg !8617
  call void @llvm.dbg.declare(metadata i32** %c, metadata !8622, metadata !2947), !dbg !8623
  %10 = load i32, i32* %ref.addr, align 4, !dbg !8624
  %idxprom11 = sext i32 %10 to i64, !dbg !8625
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8625
  %globalmc12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 38, !dbg !8626
  %arrayidx13 = getelementptr inbounds [2 x %struct.anon.2], [2 x %struct.anon.2]* %globalmc12, i64 0, i64 %idxprom11, !dbg !8625
  %perspective = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx13, i32 0, i32 2, !dbg !8627
  %arraydecay14 = getelementptr inbounds [2 x i32], [2 x i32]* %perspective, i32 0, i32 0, !dbg !8625
  store i32* %arraydecay14, i32** %c, align 8, !dbg !8623
  call void @llvm.dbg.declare(metadata i32* %m, metadata !8628, metadata !2947), !dbg !8629
  %12 = load i32, i32* %ep, align 4, !dbg !8630
  %shl = shl i32 1, %12, !dbg !8631
  %13 = load i32*, i32** %c, align 8, !dbg !8632
  %arrayidx15 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !8632
  %14 = load i32, i32* %arrayidx15, align 4, !dbg !8632
  %15 = load i32, i32* %x.addr, align 4, !dbg !8633
  %mul = mul nsw i32 %14, %15, !dbg !8634
  %16 = load i32*, i32** %c, align 8, !dbg !8635
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i64 1, !dbg !8635
  %17 = load i32, i32* %arrayidx16, align 4, !dbg !8635
  %18 = load i32, i32* %y.addr, align 4, !dbg !8636
  %mul17 = mul nsw i32 %17, %18, !dbg !8637
  %add = add nsw i32 %mul, %mul17, !dbg !8638
  %sub = sub nsw i32 %shl, %add, !dbg !8639
  store i32 %sub, i32* %m, align 4, !dbg !8629
  call void @llvm.dbg.declare(metadata i64* %mx, metadata !8640, metadata !2947), !dbg !8641
  %19 = load i32, i32* %m, align 4, !dbg !8642
  %conv = sext i32 %19 to i64, !dbg !8642
  %20 = load [2 x i32]*, [2 x i32]** %A, align 8, !dbg !8643
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, !dbg !8643
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx18, i64 0, i64 0, !dbg !8643
  %21 = load i32, i32* %arrayidx19, align 4, !dbg !8643
  %conv20 = sext i32 %21 to i64, !dbg !8643
  %22 = load i32, i32* %x.addr, align 4, !dbg !8644
  %conv21 = sext i32 %22 to i64, !dbg !8645
  %mul22 = mul nsw i64 %conv20, %conv21, !dbg !8646
  %23 = load [2 x i32]*, [2 x i32]** %A, align 8, !dbg !8647
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %23, i64 0, !dbg !8647
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx23, i64 0, i64 1, !dbg !8647
  %24 = load i32, i32* %arrayidx24, align 4, !dbg !8647
  %conv25 = sext i32 %24 to i64, !dbg !8647
  %25 = load i32, i32* %y.addr, align 4, !dbg !8648
  %conv26 = sext i32 %25 to i64, !dbg !8649
  %mul27 = mul nsw i64 %conv25, %conv26, !dbg !8650
  %add28 = add nsw i64 %mul22, %mul27, !dbg !8651
  %26 = load i32, i32* %ez, align 4, !dbg !8652
  %shl29 = shl i32 1, %26, !dbg !8653
  %27 = load i32*, i32** %b, align 8, !dbg !8654
  %arrayidx30 = getelementptr inbounds i32, i32* %27, i64 0, !dbg !8654
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !8654
  %mul31 = mul nsw i32 %shl29, %28, !dbg !8655
  %conv32 = sext i32 %mul31 to i64, !dbg !8656
  %add33 = add nsw i64 %add28, %conv32, !dbg !8657
  %mul34 = mul nsw i64 %conv, %add33, !dbg !8658
  store i64 %mul34, i64* %mx, align 8, !dbg !8641
  call void @llvm.dbg.declare(metadata i64* %my, metadata !8659, metadata !2947), !dbg !8660
  %29 = load i32, i32* %m, align 4, !dbg !8661
  %conv35 = sext i32 %29 to i64, !dbg !8661
  %30 = load [2 x i32]*, [2 x i32]** %A, align 8, !dbg !8662
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 1, !dbg !8662
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx36, i64 0, i64 0, !dbg !8662
  %31 = load i32, i32* %arrayidx37, align 4, !dbg !8662
  %conv38 = sext i32 %31 to i64, !dbg !8662
  %32 = load i32, i32* %x.addr, align 4, !dbg !8663
  %conv39 = sext i32 %32 to i64, !dbg !8664
  %mul40 = mul nsw i64 %conv38, %conv39, !dbg !8665
  %33 = load [2 x i32]*, [2 x i32]** %A, align 8, !dbg !8666
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %33, i64 1, !dbg !8666
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx41, i64 0, i64 1, !dbg !8666
  %34 = load i32, i32* %arrayidx42, align 4, !dbg !8666
  %conv43 = sext i32 %34 to i64, !dbg !8666
  %35 = load i32, i32* %y.addr, align 4, !dbg !8667
  %conv44 = sext i32 %35 to i64, !dbg !8668
  %mul45 = mul nsw i64 %conv43, %conv44, !dbg !8669
  %add46 = add nsw i64 %mul40, %mul45, !dbg !8670
  %36 = load i32, i32* %ez, align 4, !dbg !8671
  %shl47 = shl i32 1, %36, !dbg !8672
  %37 = load i32*, i32** %b, align 8, !dbg !8673
  %arrayidx48 = getelementptr inbounds i32, i32* %37, i64 1, !dbg !8673
  %38 = load i32, i32* %arrayidx48, align 4, !dbg !8673
  %mul49 = mul nsw i32 %shl47, %38, !dbg !8674
  %conv50 = sext i32 %mul49 to i64, !dbg !8675
  %add51 = add nsw i64 %add46, %conv50, !dbg !8676
  %mul52 = mul nsw i64 %conv35, %add51, !dbg !8677
  store i64 %mul52, i64* %my, align 8, !dbg !8660
  %39 = load i64, i64* %mx, align 8, !dbg !8678
  %40 = load i32, i32* %ez, align 4, !dbg !8679
  %41 = load i32, i32* %ep, align 4, !dbg !8680
  %add53 = add nsw i32 %40, %41, !dbg !8681
  %shl54 = shl i32 1, %add53, !dbg !8682
  %conv55 = sext i32 %shl54 to i64, !dbg !8683
  %add56 = add nsw i64 %39, %conv55, !dbg !8684
  %42 = load i32, i32* %ez, align 4, !dbg !8685
  %43 = load i32, i32* %ep, align 4, !dbg !8686
  %add57 = add nsw i32 %42, %43, !dbg !8687
  %sh_prom = zext i32 %add57 to i64, !dbg !8688
  %shr = ashr i64 %add56, %sh_prom, !dbg !8688
  %conv58 = trunc i64 %shr to i16, !dbg !8689
  %44 = load i32, i32* %ref.addr, align 4, !dbg !8690
  %idxprom59 = sext i32 %44 to i64, !dbg !8691
  %45 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8691
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %45, i32 0, i32 0, !dbg !8692
  %mv = bitcast %union.anon.3* %u to [2 x [2 x i16]]*, !dbg !8693
  %arrayidx60 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv, i64 0, i64 %idxprom59, !dbg !8691
  %arrayidx61 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60, i64 0, i64 0, !dbg !8691
  store i16 %conv58, i16* %arrayidx61, align 2, !dbg !8694
  %46 = load i64, i64* %my, align 8, !dbg !8695
  %47 = load i32, i32* %ez, align 4, !dbg !8696
  %48 = load i32, i32* %ep, align 4, !dbg !8697
  %add62 = add nsw i32 %47, %48, !dbg !8698
  %shl63 = shl i32 1, %add62, !dbg !8699
  %conv64 = sext i32 %shl63 to i64, !dbg !8700
  %add65 = add nsw i64 %46, %conv64, !dbg !8701
  %49 = load i32, i32* %ez, align 4, !dbg !8702
  %50 = load i32, i32* %ep, align 4, !dbg !8703
  %add66 = add nsw i32 %49, %50, !dbg !8704
  %sh_prom67 = zext i32 %add66 to i64, !dbg !8705
  %shr68 = ashr i64 %add65, %sh_prom67, !dbg !8705
  %conv69 = trunc i64 %shr68 to i16, !dbg !8706
  %51 = load i32, i32* %ref.addr, align 4, !dbg !8707
  %idxprom70 = sext i32 %51 to i64, !dbg !8708
  %52 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8708
  %u71 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %52, i32 0, i32 0, !dbg !8709
  %mv72 = bitcast %union.anon.3* %u71 to [2 x [2 x i16]]*, !dbg !8710
  %arrayidx73 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv72, i64 0, i64 %idxprom70, !dbg !8708
  %arrayidx74 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx73, i64 0, i64 1, !dbg !8708
  store i16 %conv69, i16* %arrayidx74, align 2, !dbg !8711
  ret void, !dbg !8712
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pred_mv(%struct.DiracBlock* %block, i32 %stride, i32 %x, i32 %y, i32 %ref) #5 !dbg !8713 {
entry:
  %block.addr = alloca %struct.DiracBlock*, align 8
  %stride.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ref.addr = alloca i32, align 4
  %pred = alloca [3 x i16*], align 16
  %refmask = alloca i32, align 4
  %mask = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !8716, metadata !2947), !dbg !8717
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8718, metadata !2947), !dbg !8719
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8720, metadata !2947), !dbg !8721
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8722, metadata !2947), !dbg !8723
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !8724, metadata !2947), !dbg !8725
  call void @llvm.dbg.declare(metadata [3 x i16*]* %pred, metadata !8726, metadata !2947), !dbg !8727
  call void @llvm.dbg.declare(metadata i32* %refmask, metadata !8728, metadata !2947), !dbg !8729
  %0 = load i32, i32* %ref.addr, align 4, !dbg !8730
  %add = add nsw i32 %0, 1, !dbg !8731
  store i32 %add, i32* %refmask, align 4, !dbg !8729
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8732, metadata !2947), !dbg !8733
  %1 = load i32, i32* %refmask, align 4, !dbg !8734
  %or = or i32 %1, 4, !dbg !8735
  store i32 %or, i32* %mask, align 4, !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8736, metadata !2947), !dbg !8737
  store i32 0, i32* %n, align 4, !dbg !8737
  %2 = load i32, i32* %x.addr, align 4, !dbg !8738
  %tobool = icmp ne i32 %2, 0, !dbg !8738
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8740

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8741
  %arrayidx = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %3, i64 -1, !dbg !8741
  %ref1 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx, i32 0, i32 1, !dbg !8743
  %4 = load i8, i8* %ref1, align 2, !dbg !8743
  %conv = zext i8 %4 to i32, !dbg !8741
  %5 = load i32, i32* %mask, align 4, !dbg !8744
  %and = and i32 %conv, %5, !dbg !8745
  %6 = load i32, i32* %refmask, align 4, !dbg !8746
  %cmp = icmp eq i32 %and, %6, !dbg !8747
  br i1 %cmp, label %if.then, label %if.end, !dbg !8748

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %ref.addr, align 4, !dbg !8749
  %idxprom = sext i32 %7 to i64, !dbg !8750
  %8 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8750
  %arrayidx3 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %8, i64 -1, !dbg !8750
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx3, i32 0, i32 0, !dbg !8751
  %mv = bitcast %union.anon.3* %u to [2 x [2 x i16]]*, !dbg !8752
  %arrayidx4 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv, i64 0, i64 %idxprom, !dbg !8750
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx4, i32 0, i32 0, !dbg !8750
  %9 = load i32, i32* %n, align 4, !dbg !8753
  %inc = add nsw i32 %9, 1, !dbg !8753
  store i32 %inc, i32* %n, align 4, !dbg !8753
  %idxprom5 = sext i32 %9 to i64, !dbg !8754
  %arrayidx6 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 %idxprom5, !dbg !8754
  store i16* %arraydecay, i16** %arrayidx6, align 8, !dbg !8755
  br label %if.end, !dbg !8754

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i32, i32* %y.addr, align 4, !dbg !8756
  %tobool7 = icmp ne i32 %10, 0, !dbg !8756
  br i1 %tobool7, label %land.lhs.true8, label %if.end28, !dbg !8758

land.lhs.true8:                                   ; preds = %if.end
  %11 = load i32, i32* %stride.addr, align 4, !dbg !8759
  %sub = sub nsw i32 0, %11, !dbg !8761
  %idxprom9 = sext i32 %sub to i64, !dbg !8762
  %12 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8762
  %arrayidx10 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %12, i64 %idxprom9, !dbg !8762
  %ref11 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx10, i32 0, i32 1, !dbg !8763
  %13 = load i8, i8* %ref11, align 2, !dbg !8763
  %conv12 = zext i8 %13 to i32, !dbg !8762
  %14 = load i32, i32* %mask, align 4, !dbg !8764
  %and13 = and i32 %conv12, %14, !dbg !8765
  %15 = load i32, i32* %refmask, align 4, !dbg !8766
  %cmp14 = icmp eq i32 %and13, %15, !dbg !8767
  br i1 %cmp14, label %if.then16, label %if.end28, !dbg !8768

if.then16:                                        ; preds = %land.lhs.true8
  %16 = load i32, i32* %ref.addr, align 4, !dbg !8769
  %idxprom17 = sext i32 %16 to i64, !dbg !8770
  %17 = load i32, i32* %stride.addr, align 4, !dbg !8771
  %sub18 = sub nsw i32 0, %17, !dbg !8772
  %idxprom19 = sext i32 %sub18 to i64, !dbg !8770
  %18 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8770
  %arrayidx20 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %18, i64 %idxprom19, !dbg !8770
  %u21 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx20, i32 0, i32 0, !dbg !8773
  %mv22 = bitcast %union.anon.3* %u21 to [2 x [2 x i16]]*, !dbg !8774
  %arrayidx23 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv22, i64 0, i64 %idxprom17, !dbg !8770
  %arraydecay24 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx23, i32 0, i32 0, !dbg !8770
  %19 = load i32, i32* %n, align 4, !dbg !8775
  %inc25 = add nsw i32 %19, 1, !dbg !8775
  store i32 %inc25, i32* %n, align 4, !dbg !8775
  %idxprom26 = sext i32 %19 to i64, !dbg !8776
  %arrayidx27 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 %idxprom26, !dbg !8776
  store i16* %arraydecay24, i16** %arrayidx27, align 8, !dbg !8777
  br label %if.end28, !dbg !8776

if.end28:                                         ; preds = %if.then16, %land.lhs.true8, %if.end
  %20 = load i32, i32* %x.addr, align 4, !dbg !8778
  %tobool29 = icmp ne i32 %20, 0, !dbg !8778
  br i1 %tobool29, label %land.lhs.true30, label %if.end55, !dbg !8780

land.lhs.true30:                                  ; preds = %if.end28
  %21 = load i32, i32* %y.addr, align 4, !dbg !8781
  %tobool31 = icmp ne i32 %21, 0, !dbg !8781
  br i1 %tobool31, label %land.lhs.true32, label %if.end55, !dbg !8783

land.lhs.true32:                                  ; preds = %land.lhs.true30
  %22 = load i32, i32* %stride.addr, align 4, !dbg !8784
  %sub33 = sub nsw i32 0, %22, !dbg !8786
  %sub34 = sub nsw i32 %sub33, 1, !dbg !8787
  %idxprom35 = sext i32 %sub34 to i64, !dbg !8788
  %23 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8788
  %arrayidx36 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %23, i64 %idxprom35, !dbg !8788
  %ref37 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx36, i32 0, i32 1, !dbg !8789
  %24 = load i8, i8* %ref37, align 2, !dbg !8789
  %conv38 = zext i8 %24 to i32, !dbg !8788
  %25 = load i32, i32* %mask, align 4, !dbg !8790
  %and39 = and i32 %conv38, %25, !dbg !8791
  %26 = load i32, i32* %refmask, align 4, !dbg !8792
  %cmp40 = icmp eq i32 %and39, %26, !dbg !8793
  br i1 %cmp40, label %if.then42, label %if.end55, !dbg !8794

if.then42:                                        ; preds = %land.lhs.true32
  %27 = load i32, i32* %ref.addr, align 4, !dbg !8795
  %idxprom43 = sext i32 %27 to i64, !dbg !8796
  %28 = load i32, i32* %stride.addr, align 4, !dbg !8797
  %sub44 = sub nsw i32 0, %28, !dbg !8798
  %sub45 = sub nsw i32 %sub44, 1, !dbg !8799
  %idxprom46 = sext i32 %sub45 to i64, !dbg !8796
  %29 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8796
  %arrayidx47 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %29, i64 %idxprom46, !dbg !8796
  %u48 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %arrayidx47, i32 0, i32 0, !dbg !8800
  %mv49 = bitcast %union.anon.3* %u48 to [2 x [2 x i16]]*, !dbg !8801
  %arrayidx50 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv49, i64 0, i64 %idxprom43, !dbg !8796
  %arraydecay51 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx50, i32 0, i32 0, !dbg !8796
  %30 = load i32, i32* %n, align 4, !dbg !8802
  %inc52 = add nsw i32 %30, 1, !dbg !8802
  store i32 %inc52, i32* %n, align 4, !dbg !8802
  %idxprom53 = sext i32 %30 to i64, !dbg !8803
  %arrayidx54 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 %idxprom53, !dbg !8803
  store i16* %arraydecay51, i16** %arrayidx54, align 8, !dbg !8804
  br label %if.end55, !dbg !8803

if.end55:                                         ; preds = %if.then42, %land.lhs.true32, %land.lhs.true30, %if.end28
  %31 = load i32, i32* %n, align 4, !dbg !8805
  switch i32 %31, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb66
    i32 2, label %sw.bb81
    i32 3, label %sw.bb111
  ], !dbg !8806

sw.bb:                                            ; preds = %if.end55
  %32 = load i32, i32* %ref.addr, align 4, !dbg !8807
  %idxprom56 = sext i32 %32 to i64, !dbg !8809
  %33 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8809
  %u57 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %33, i32 0, i32 0, !dbg !8810
  %mv58 = bitcast %union.anon.3* %u57 to [2 x [2 x i16]]*, !dbg !8811
  %arrayidx59 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv58, i64 0, i64 %idxprom56, !dbg !8809
  %arrayidx60 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx59, i64 0, i64 0, !dbg !8809
  store i16 0, i16* %arrayidx60, align 2, !dbg !8812
  %34 = load i32, i32* %ref.addr, align 4, !dbg !8813
  %idxprom61 = sext i32 %34 to i64, !dbg !8814
  %35 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8814
  %u62 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %35, i32 0, i32 0, !dbg !8815
  %mv63 = bitcast %union.anon.3* %u62 to [2 x [2 x i16]]*, !dbg !8816
  %arrayidx64 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv63, i64 0, i64 %idxprom61, !dbg !8814
  %arrayidx65 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx64, i64 0, i64 1, !dbg !8814
  store i16 0, i16* %arrayidx65, align 2, !dbg !8817
  br label %sw.epilog, !dbg !8818

sw.bb66:                                          ; preds = %if.end55
  %arrayidx67 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8819
  %36 = load i16*, i16** %arrayidx67, align 16, !dbg !8819
  %arrayidx68 = getelementptr inbounds i16, i16* %36, i64 0, !dbg !8819
  %37 = load i16, i16* %arrayidx68, align 2, !dbg !8819
  %38 = load i32, i32* %ref.addr, align 4, !dbg !8820
  %idxprom69 = sext i32 %38 to i64, !dbg !8821
  %39 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8821
  %u70 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %39, i32 0, i32 0, !dbg !8822
  %mv71 = bitcast %union.anon.3* %u70 to [2 x [2 x i16]]*, !dbg !8823
  %arrayidx72 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv71, i64 0, i64 %idxprom69, !dbg !8821
  %arrayidx73 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx72, i64 0, i64 0, !dbg !8821
  store i16 %37, i16* %arrayidx73, align 2, !dbg !8824
  %arrayidx74 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8825
  %40 = load i16*, i16** %arrayidx74, align 16, !dbg !8825
  %arrayidx75 = getelementptr inbounds i16, i16* %40, i64 1, !dbg !8825
  %41 = load i16, i16* %arrayidx75, align 2, !dbg !8825
  %42 = load i32, i32* %ref.addr, align 4, !dbg !8826
  %idxprom76 = sext i32 %42 to i64, !dbg !8827
  %43 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8827
  %u77 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %43, i32 0, i32 0, !dbg !8828
  %mv78 = bitcast %union.anon.3* %u77 to [2 x [2 x i16]]*, !dbg !8829
  %arrayidx79 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv78, i64 0, i64 %idxprom76, !dbg !8827
  %arrayidx80 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx79, i64 0, i64 1, !dbg !8827
  store i16 %41, i16* %arrayidx80, align 2, !dbg !8830
  br label %sw.epilog, !dbg !8831

sw.bb81:                                          ; preds = %if.end55
  %arrayidx82 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8832
  %44 = load i16*, i16** %arrayidx82, align 16, !dbg !8832
  %arrayidx83 = getelementptr inbounds i16, i16* %44, i64 0, !dbg !8832
  %45 = load i16, i16* %arrayidx83, align 2, !dbg !8832
  %conv84 = sext i16 %45 to i32, !dbg !8832
  %arrayidx85 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 1, !dbg !8833
  %46 = load i16*, i16** %arrayidx85, align 8, !dbg !8833
  %arrayidx86 = getelementptr inbounds i16, i16* %46, i64 0, !dbg !8833
  %47 = load i16, i16* %arrayidx86, align 2, !dbg !8833
  %conv87 = sext i16 %47 to i32, !dbg !8833
  %add88 = add nsw i32 %conv84, %conv87, !dbg !8834
  %add89 = add nsw i32 %add88, 1, !dbg !8835
  %shr = ashr i32 %add89, 1, !dbg !8836
  %conv90 = trunc i32 %shr to i16, !dbg !8837
  %48 = load i32, i32* %ref.addr, align 4, !dbg !8838
  %idxprom91 = sext i32 %48 to i64, !dbg !8839
  %49 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8839
  %u92 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %49, i32 0, i32 0, !dbg !8840
  %mv93 = bitcast %union.anon.3* %u92 to [2 x [2 x i16]]*, !dbg !8841
  %arrayidx94 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv93, i64 0, i64 %idxprom91, !dbg !8839
  %arrayidx95 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx94, i64 0, i64 0, !dbg !8839
  store i16 %conv90, i16* %arrayidx95, align 2, !dbg !8842
  %arrayidx96 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8843
  %50 = load i16*, i16** %arrayidx96, align 16, !dbg !8843
  %arrayidx97 = getelementptr inbounds i16, i16* %50, i64 1, !dbg !8843
  %51 = load i16, i16* %arrayidx97, align 2, !dbg !8843
  %conv98 = sext i16 %51 to i32, !dbg !8843
  %arrayidx99 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 1, !dbg !8844
  %52 = load i16*, i16** %arrayidx99, align 8, !dbg !8844
  %arrayidx100 = getelementptr inbounds i16, i16* %52, i64 1, !dbg !8844
  %53 = load i16, i16* %arrayidx100, align 2, !dbg !8844
  %conv101 = sext i16 %53 to i32, !dbg !8844
  %add102 = add nsw i32 %conv98, %conv101, !dbg !8845
  %add103 = add nsw i32 %add102, 1, !dbg !8846
  %shr104 = ashr i32 %add103, 1, !dbg !8847
  %conv105 = trunc i32 %shr104 to i16, !dbg !8848
  %54 = load i32, i32* %ref.addr, align 4, !dbg !8849
  %idxprom106 = sext i32 %54 to i64, !dbg !8850
  %55 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8850
  %u107 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %55, i32 0, i32 0, !dbg !8851
  %mv108 = bitcast %union.anon.3* %u107 to [2 x [2 x i16]]*, !dbg !8852
  %arrayidx109 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv108, i64 0, i64 %idxprom106, !dbg !8850
  %arrayidx110 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx109, i64 0, i64 1, !dbg !8850
  store i16 %conv105, i16* %arrayidx110, align 2, !dbg !8853
  br label %sw.epilog, !dbg !8854

sw.bb111:                                         ; preds = %if.end55
  %arrayidx112 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8855
  %56 = load i16*, i16** %arrayidx112, align 16, !dbg !8855
  %arrayidx113 = getelementptr inbounds i16, i16* %56, i64 0, !dbg !8855
  %57 = load i16, i16* %arrayidx113, align 2, !dbg !8855
  %conv114 = sext i16 %57 to i32, !dbg !8855
  %arrayidx115 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 1, !dbg !8856
  %58 = load i16*, i16** %arrayidx115, align 8, !dbg !8856
  %arrayidx116 = getelementptr inbounds i16, i16* %58, i64 0, !dbg !8856
  %59 = load i16, i16* %arrayidx116, align 2, !dbg !8856
  %conv117 = sext i16 %59 to i32, !dbg !8856
  %arrayidx118 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 2, !dbg !8857
  %60 = load i16*, i16** %arrayidx118, align 16, !dbg !8857
  %arrayidx119 = getelementptr inbounds i16, i16* %60, i64 0, !dbg !8857
  %61 = load i16, i16* %arrayidx119, align 2, !dbg !8857
  %conv120 = sext i16 %61 to i32, !dbg !8857
  %call = call i32 @mid_pred(i32 %conv114, i32 %conv117, i32 %conv120) #2, !dbg !8858
  %conv121 = trunc i32 %call to i16, !dbg !8858
  %62 = load i32, i32* %ref.addr, align 4, !dbg !8859
  %idxprom122 = sext i32 %62 to i64, !dbg !8860
  %63 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8860
  %u123 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %63, i32 0, i32 0, !dbg !8861
  %mv124 = bitcast %union.anon.3* %u123 to [2 x [2 x i16]]*, !dbg !8862
  %arrayidx125 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv124, i64 0, i64 %idxprom122, !dbg !8860
  %arrayidx126 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx125, i64 0, i64 0, !dbg !8860
  store i16 %conv121, i16* %arrayidx126, align 2, !dbg !8863
  %arrayidx127 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 0, !dbg !8864
  %64 = load i16*, i16** %arrayidx127, align 16, !dbg !8864
  %arrayidx128 = getelementptr inbounds i16, i16* %64, i64 1, !dbg !8864
  %65 = load i16, i16* %arrayidx128, align 2, !dbg !8864
  %conv129 = sext i16 %65 to i32, !dbg !8864
  %arrayidx130 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 1, !dbg !8865
  %66 = load i16*, i16** %arrayidx130, align 8, !dbg !8865
  %arrayidx131 = getelementptr inbounds i16, i16* %66, i64 1, !dbg !8865
  %67 = load i16, i16* %arrayidx131, align 2, !dbg !8865
  %conv132 = sext i16 %67 to i32, !dbg !8865
  %arrayidx133 = getelementptr inbounds [3 x i16*], [3 x i16*]* %pred, i64 0, i64 2, !dbg !8866
  %68 = load i16*, i16** %arrayidx133, align 16, !dbg !8866
  %arrayidx134 = getelementptr inbounds i16, i16* %68, i64 1, !dbg !8866
  %69 = load i16, i16* %arrayidx134, align 2, !dbg !8866
  %conv135 = sext i16 %69 to i32, !dbg !8866
  %call136 = call i32 @mid_pred(i32 %conv129, i32 %conv132, i32 %conv135) #2, !dbg !8867
  %conv137 = trunc i32 %call136 to i16, !dbg !8867
  %70 = load i32, i32* %ref.addr, align 4, !dbg !8868
  %idxprom138 = sext i32 %70 to i64, !dbg !8869
  %71 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !8869
  %u139 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %71, i32 0, i32 0, !dbg !8870
  %mv140 = bitcast %union.anon.3* %u139 to [2 x [2 x i16]]*, !dbg !8871
  %arrayidx141 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv140, i64 0, i64 %idxprom138, !dbg !8869
  %arrayidx142 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx141, i64 0, i64 1, !dbg !8869
  store i16 %conv137, i16* %arrayidx142, align 2, !dbg !8872
  br label %sw.epilog, !dbg !8873

sw.epilog:                                        ; preds = %if.end55, %sw.bb111, %sw.bb81, %sw.bb66, %sw.bb
  ret void, !dbg !8874
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @divide3(i32 %x) #5 !dbg !8875 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8878, metadata !2947), !dbg !8879
  %0 = load i32, i32* %x.addr, align 4, !dbg !8880
  %add = add i32 %0, 1, !dbg !8881
  %mul = mul i32 %add, 21845, !dbg !8882
  %add1 = add i32 %mul, 10922, !dbg !8883
  %shr = ashr i32 %add1, 16, !dbg !8884
  ret i32 %shr, !dbg !8885
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @mid_pred(i32 %a, i32 %b, i32 %c) #8 !dbg !8886 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8889, metadata !2947), !dbg !8890
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8891, metadata !2947), !dbg !8892
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !8893, metadata !2947), !dbg !8894
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8895, metadata !2947), !dbg !8896
  %0 = load i32, i32* %b.addr, align 4, !dbg !8897
  store i32 %0, i32* %i, align 4, !dbg !8896
  %1 = load i32, i32* %i, align 4, !dbg !8898
  %2 = load i32, i32* %a.addr, align 4, !dbg !8898
  %3 = load i32, i32* %b.addr, align 4, !dbg !8899
  %4 = load i32, i32* %c.addr, align 4, !dbg !8900
  %5 = call { i32, i32 } asm "cmp    $2, $1 \0A\09cmovg  $1, $0 \0A\09cmovg  $2, $1 \0A\09cmp    $3, $1 \0A\09cmovl  $3, $1 \0A\09cmp    $1, $0 \0A\09cmovg  $1, $0 \0A\09", "=&r,=&r,r,r,0,1,~{dirflag},~{fpsr},~{flags}"(i32 %3, i32 %4, i32 %1, i32 %2) #2, !dbg !8898, !srcloc !8901
  %asmresult = extractvalue { i32, i32 } %5, 0, !dbg !8898
  %asmresult1 = extractvalue { i32, i32 } %5, 1, !dbg !8898
  store i32 %asmresult, i32* %i, align 4, !dbg !8898
  store i32 %asmresult1, i32* %a.addr, align 4, !dbg !8898
  %6 = load i32, i32* %i, align 4, !dbg !8902
  ret i32 %6, !dbg !8903
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_lowdelay(%struct.DiracContext* %s) #1 !dbg !8904 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %slice_x = alloca i32, align 4
  %slice_y = alloca i32, align 4
  %bufsize = alloca i32, align 4
  %coef_buf_size = alloca i64, align 8
  %bytes = alloca i64, align 8
  %buf = alloca i8*, align 8
  %slices = alloca %struct.DiracSlice*, align 8
  %tmp = alloca [5 x %struct.SliceCoeffs], align 16
  %slice_num = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !8905, metadata !2947), !dbg !8906
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !8907, metadata !2947), !dbg !8908
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8909
  %avctx1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 0, !dbg !8910
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 16, !dbg !8910
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !8908
  call void @llvm.dbg.declare(metadata i32* %slice_x, metadata !8911, metadata !2947), !dbg !8912
  call void @llvm.dbg.declare(metadata i32* %slice_y, metadata !8913, metadata !2947), !dbg !8914
  call void @llvm.dbg.declare(metadata i32* %bufsize, metadata !8915, metadata !2947), !dbg !8916
  call void @llvm.dbg.declare(metadata i64* %coef_buf_size, metadata !8917, metadata !2947), !dbg !8918
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8919, metadata !2947), !dbg !8920
  store i64 0, i64* %bytes, align 8, !dbg !8920
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8921, metadata !2947), !dbg !8922
  call void @llvm.dbg.declare(metadata %struct.DiracSlice** %slices, metadata !8923, metadata !2947), !dbg !8924
  call void @llvm.dbg.declare(metadata [5 x %struct.SliceCoeffs]* %tmp, metadata !8925, metadata !2947), !dbg !8935
  call void @llvm.dbg.declare(metadata i32* %slice_num, metadata !8936, metadata !2947), !dbg !8937
  store i32 0, i32* %slice_num, align 4, !dbg !8937
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8938
  %slice_params_num_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 34, !dbg !8940
  %3 = load i32, i32* %slice_params_num_buf, align 16, !dbg !8940
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8941
  %num_x = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 28, !dbg !8942
  %5 = load i32, i32* %num_x, align 4, !dbg !8942
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8943
  %num_y = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 29, !dbg !8944
  %7 = load i32, i32* %num_y, align 16, !dbg !8944
  %mul = mul i32 %5, %7, !dbg !8945
  %cmp = icmp ne i32 %3, %mul, !dbg !8946
  br i1 %cmp, label %if.then, label %if.end15, !dbg !8947

if.then:                                          ; preds = %entry
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8948
  %slice_params_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 33, !dbg !8950
  %9 = load %struct.DiracSlice*, %struct.DiracSlice** %slice_params_buf, align 8, !dbg !8950
  %10 = bitcast %struct.DiracSlice* %9 to i8*, !dbg !8948
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8951
  %num_x3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 28, !dbg !8952
  %12 = load i32, i32* %num_x3, align 4, !dbg !8952
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8953
  %num_y4 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 29, !dbg !8954
  %14 = load i32, i32* %num_y4, align 16, !dbg !8954
  %mul5 = mul i32 %12, %14, !dbg !8955
  %conv = zext i32 %mul5 to i64, !dbg !8951
  %call = call i8* @av_realloc_f(i8* %10, i64 %conv, i64 48), !dbg !8956
  %15 = bitcast i8* %call to %struct.DiracSlice*, !dbg !8956
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8957
  %slice_params_buf6 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 33, !dbg !8958
  store %struct.DiracSlice* %15, %struct.DiracSlice** %slice_params_buf6, align 8, !dbg !8959
  %17 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8960
  %slice_params_buf7 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %17, i32 0, i32 33, !dbg !8962
  %18 = load %struct.DiracSlice*, %struct.DiracSlice** %slice_params_buf7, align 8, !dbg !8962
  %tobool = icmp ne %struct.DiracSlice* %18, null, !dbg !8960
  br i1 %tobool, label %if.end, label %if.then8, !dbg !8963

if.then8:                                         ; preds = %if.then
  %19 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8964
  %avctx9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %19, i32 0, i32 0, !dbg !8966
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 16, !dbg !8966
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !8964
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38, i32 0, i32 0)), !dbg !8967
  %22 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8968
  %slice_params_num_buf10 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %22, i32 0, i32 34, !dbg !8969
  store i32 0, i32* %slice_params_num_buf10, align 16, !dbg !8970
  store i32 -12, i32* %retval, align 4, !dbg !8971
  br label %return, !dbg !8971

if.end:                                           ; preds = %if.then
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8972
  %num_x11 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 28, !dbg !8973
  %24 = load i32, i32* %num_x11, align 4, !dbg !8973
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8974
  %num_y12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 29, !dbg !8975
  %26 = load i32, i32* %num_y12, align 16, !dbg !8975
  %mul13 = mul i32 %24, %26, !dbg !8976
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8977
  %slice_params_num_buf14 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 34, !dbg !8978
  store i32 %mul13, i32* %slice_params_num_buf14, align 16, !dbg !8979
  br label %if.end15, !dbg !8980

if.end15:                                         ; preds = %if.end, %entry
  %28 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8981
  %slice_params_buf16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %28, i32 0, i32 33, !dbg !8982
  %29 = load %struct.DiracSlice*, %struct.DiracSlice** %slice_params_buf16, align 8, !dbg !8982
  store %struct.DiracSlice* %29, %struct.DiracSlice** %slices, align 8, !dbg !8983
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8984
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8985
  %num_x17 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 28, !dbg !8986
  %32 = load i32, i32* %num_x17, align 4, !dbg !8986
  %sub = sub i32 %32, 1, !dbg !8987
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8988
  %num_y18 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 29, !dbg !8989
  %34 = load i32, i32* %num_y18, align 16, !dbg !8989
  %sub19 = sub i32 %34, 1, !dbg !8990
  %arraydecay = getelementptr inbounds [5 x %struct.SliceCoeffs], [5 x %struct.SliceCoeffs]* %tmp, i32 0, i32 0, !dbg !8991
  %call20 = call i32 @subband_coeffs(%struct.DiracContext* %30, i32 %sub, i32 %sub19, i32 0, %struct.SliceCoeffs* %arraydecay), !dbg !8992
  %add = add nsw i32 %call20, 8, !dbg !8993
  %conv21 = sext i32 %add to i64, !dbg !8992
  store i64 %conv21, i64* %coef_buf_size, align 8, !dbg !8994
  %35 = load i64, i64* %coef_buf_size, align 8, !dbg !8995
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !8996
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 14, !dbg !8997
  %37 = load i32, i32* %pshift, align 4, !dbg !8997
  %add22 = add nsw i32 1, %37, !dbg !8998
  %sh_prom = zext i32 %add22 to i64, !dbg !8999
  %shl = shl i64 %35, %sh_prom, !dbg !8999
  %add23 = add nsw i64 %shl, 512, !dbg !9000
  store i64 %add23, i64* %coef_buf_size, align 8, !dbg !9001
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9002
  %threads_num_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 31, !dbg !9004
  %39 = load i32, i32* %threads_num_buf, align 16, !dbg !9004
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9005
  %thread_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 146, !dbg !9006
  %41 = load i32, i32* %thread_count, align 8, !dbg !9006
  %cmp24 = icmp ne i32 %39, %41, !dbg !9007
  br i1 %cmp24, label %if.then29, label %lor.lhs.false, !dbg !9008

lor.lhs.false:                                    ; preds = %if.end15
  %42 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9009
  %thread_buf_size = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %42, i32 0, i32 32, !dbg !9010
  %43 = load i32, i32* %thread_buf_size, align 4, !dbg !9010
  %conv26 = sext i32 %43 to i64, !dbg !9009
  %44 = load i64, i64* %coef_buf_size, align 8, !dbg !9011
  %cmp27 = icmp ne i64 %conv26, %44, !dbg !9012
  br i1 %cmp27, label %if.then29, label %if.end45, !dbg !9013

if.then29:                                        ; preds = %lor.lhs.false, %if.end15
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9015
  %thread_count30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 146, !dbg !9017
  %46 = load i32, i32* %thread_count30, align 8, !dbg !9017
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9018
  %threads_num_buf31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %47, i32 0, i32 31, !dbg !9019
  store i32 %46, i32* %threads_num_buf31, align 16, !dbg !9020
  %48 = load i64, i64* %coef_buf_size, align 8, !dbg !9021
  %conv32 = trunc i64 %48 to i32, !dbg !9021
  %49 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9022
  %thread_buf_size33 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %49, i32 0, i32 32, !dbg !9023
  store i32 %conv32, i32* %thread_buf_size33, align 4, !dbg !9024
  %50 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9025
  %thread_buf = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %50, i32 0, i32 30, !dbg !9026
  %51 = load i8*, i8** %thread_buf, align 8, !dbg !9026
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9027
  %thread_count34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 146, !dbg !9028
  %53 = load i32, i32* %thread_count34, align 8, !dbg !9028
  %conv35 = sext i32 %53 to i64, !dbg !9027
  %54 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9029
  %thread_buf_size36 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %54, i32 0, i32 32, !dbg !9030
  %55 = load i32, i32* %thread_buf_size36, align 4, !dbg !9030
  %conv37 = sext i32 %55 to i64, !dbg !9029
  %call38 = call i8* @av_realloc_f(i8* %51, i64 %conv35, i64 %conv37), !dbg !9031
  %56 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9032
  %thread_buf39 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %56, i32 0, i32 30, !dbg !9033
  store i8* %call38, i8** %thread_buf39, align 8, !dbg !9034
  %57 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9035
  %thread_buf40 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %57, i32 0, i32 30, !dbg !9037
  %58 = load i8*, i8** %thread_buf40, align 8, !dbg !9037
  %tobool41 = icmp ne i8* %58, null, !dbg !9035
  br i1 %tobool41, label %if.end44, label %if.then42, !dbg !9038

if.then42:                                        ; preds = %if.then29
  %59 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9039
  %avctx43 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %59, i32 0, i32 0, !dbg !9041
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx43, align 16, !dbg !9041
  %61 = bitcast %struct.AVCodecContext* %60 to i8*, !dbg !9039
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i32 0, i32 0)), !dbg !9042
  store i32 -12, i32* %retval, align 4, !dbg !9043
  br label %return, !dbg !9043

if.end44:                                         ; preds = %if.then29
  br label %if.end45, !dbg !9044

if.end45:                                         ; preds = %if.end44, %lor.lhs.false
  %62 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9045
  %gb = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %62, i32 0, i32 6, !dbg !9046
  %call46 = call i8* @align_get_bits(%struct.GetBitContext* %gb), !dbg !9047
  %63 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9048
  %gb47 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %63, i32 0, i32 6, !dbg !9049
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb47, i32 0, i32 0, !dbg !9050
  %64 = load i8*, i8** %buffer, align 8, !dbg !9050
  %65 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9051
  %gb48 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %65, i32 0, i32 6, !dbg !9052
  %call49 = call i32 @get_bits_count(%struct.GetBitContext* %gb48), !dbg !9053
  %div = sdiv i32 %call49, 8, !dbg !9054
  %idx.ext = sext i32 %div to i64, !dbg !9055
  %add.ptr = getelementptr inbounds i8, i8* %64, i64 %idx.ext, !dbg !9055
  store i8* %add.ptr, i8** %buf, align 8, !dbg !9056
  %66 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9057
  %gb50 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %66, i32 0, i32 6, !dbg !9058
  %call51 = call i32 @get_bits_left(%struct.GetBitContext* %gb50), !dbg !9059
  store i32 %call51, i32* %bufsize, align 4, !dbg !9060
  %67 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9061
  %hq_picture = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %67, i32 0, i32 19, !dbg !9063
  %68 = load i32, i32* %hq_picture, align 8, !dbg !9063
  %tobool52 = icmp ne i32 %68, 0, !dbg !9061
  br i1 %tobool52, label %if.then53, label %if.else137, !dbg !9064

if.then53:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9065, metadata !2947), !dbg !9067
  store i32 0, i32* %slice_y, align 4, !dbg !9068
  br label %for.cond, !dbg !9070

for.cond:                                         ; preds = %for.inc124, %if.then53
  %69 = load i32, i32* %bufsize, align 4, !dbg !9071
  %cmp55 = icmp sgt i32 %69, 0, !dbg !9074
  br i1 %cmp55, label %land.rhs, label %land.end, !dbg !9075

land.rhs:                                         ; preds = %for.cond
  %70 = load i32, i32* %slice_y, align 4, !dbg !9076
  %71 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9078
  %num_y57 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %71, i32 0, i32 29, !dbg !9079
  %72 = load i32, i32* %num_y57, align 16, !dbg !9079
  %cmp58 = icmp ult i32 %70, %72, !dbg !9080
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %73 = phi i1 [ false, %for.cond ], [ %cmp58, %land.rhs ]
  br i1 %73, label %for.body, label %for.end126, !dbg !9081

for.body:                                         ; preds = %land.end
  store i32 0, i32* %slice_x, align 4, !dbg !9083
  br label %for.cond60, !dbg !9086

for.cond60:                                       ; preds = %for.inc121, %for.body
  %74 = load i32, i32* %bufsize, align 4, !dbg !9087
  %cmp61 = icmp sgt i32 %74, 0, !dbg !9090
  br i1 %cmp61, label %land.rhs63, label %land.end67, !dbg !9091

land.rhs63:                                       ; preds = %for.cond60
  %75 = load i32, i32* %slice_x, align 4, !dbg !9092
  %76 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9094
  %num_x64 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %76, i32 0, i32 28, !dbg !9095
  %77 = load i32, i32* %num_x64, align 4, !dbg !9095
  %cmp65 = icmp ult i32 %75, %77, !dbg !9096
  br label %land.end67

land.end67:                                       ; preds = %land.rhs63, %for.cond60
  %78 = phi i1 [ false, %for.cond60 ], [ %cmp65, %land.rhs63 ]
  br i1 %78, label %for.body68, label %for.end123, !dbg !9097

for.body68:                                       ; preds = %land.end67
  %79 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9099
  %highquality = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %79, i32 0, i32 37, !dbg !9101
  %prefix_bytes = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality, i32 0, i32 0, !dbg !9102
  %80 = load i32, i32* %prefix_bytes, align 16, !dbg !9102
  %add69 = add i32 %80, 1, !dbg !9103
  %conv70 = zext i32 %add69 to i64, !dbg !9099
  store i64 %conv70, i64* %bytes, align 8, !dbg !9104
  store i32 0, i32* %i, align 4, !dbg !9105
  br label %for.cond71, !dbg !9107

for.cond71:                                       ; preds = %for.inc, %for.body68
  %81 = load i32, i32* %i, align 4, !dbg !9108
  %cmp72 = icmp slt i32 %81, 3, !dbg !9111
  br i1 %cmp72, label %for.body74, label %for.end, !dbg !9112

for.body74:                                       ; preds = %for.cond71
  %82 = load i64, i64* %bytes, align 8, !dbg !9113
  %83 = load i32, i32* %bufsize, align 4, !dbg !9116
  %div75 = sdiv i32 %83, 8, !dbg !9117
  %conv76 = sext i32 %div75 to i64, !dbg !9116
  %cmp77 = icmp sle i64 %82, %conv76, !dbg !9118
  br i1 %cmp77, label %if.then79, label %if.end85, !dbg !9119

if.then79:                                        ; preds = %for.body74
  %84 = load i64, i64* %bytes, align 8, !dbg !9120
  %85 = load i8*, i8** %buf, align 8, !dbg !9121
  %arrayidx = getelementptr inbounds i8, i8* %85, i64 %84, !dbg !9121
  %86 = load i8, i8* %arrayidx, align 1, !dbg !9121
  %conv80 = zext i8 %86 to i64, !dbg !9121
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9122
  %highquality81 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 37, !dbg !9123
  %size_scaler = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality81, i32 0, i32 1, !dbg !9124
  %88 = load i64, i64* %size_scaler, align 8, !dbg !9124
  %mul82 = mul i64 %conv80, %88, !dbg !9125
  %add83 = add i64 %mul82, 1, !dbg !9126
  %89 = load i64, i64* %bytes, align 8, !dbg !9127
  %add84 = add i64 %89, %add83, !dbg !9127
  store i64 %add84, i64* %bytes, align 8, !dbg !9127
  br label %if.end85, !dbg !9128

if.end85:                                         ; preds = %if.then79, %for.body74
  br label %for.inc, !dbg !9129

for.inc:                                          ; preds = %if.end85
  %90 = load i32, i32* %i, align 4, !dbg !9130
  %inc = add nsw i32 %90, 1, !dbg !9130
  store i32 %inc, i32* %i, align 4, !dbg !9130
  br label %for.cond71, !dbg !9132, !llvm.loop !9133

for.end:                                          ; preds = %for.cond71
  %91 = load i64, i64* %bytes, align 8, !dbg !9135
  %cmp86 = icmp sge i64 %91, 2147483647, !dbg !9137
  br i1 %cmp86, label %if.then93, label %lor.lhs.false88, !dbg !9138

lor.lhs.false88:                                  ; preds = %for.end
  %92 = load i64, i64* %bytes, align 8, !dbg !9139
  %mul89 = mul nsw i64 %92, 8, !dbg !9141
  %93 = load i32, i32* %bufsize, align 4, !dbg !9142
  %conv90 = sext i32 %93 to i64, !dbg !9142
  %cmp91 = icmp sgt i64 %mul89, %conv90, !dbg !9143
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !9144

if.then93:                                        ; preds = %lor.lhs.false88, %for.end
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9145
  %avctx94 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 0, !dbg !9147
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx94, align 16, !dbg !9147
  %96 = bitcast %struct.AVCodecContext* %95 to i8*, !dbg !9145
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0)), !dbg !9148
  store i32 -1094995529, i32* %retval, align 4, !dbg !9149
  br label %return, !dbg !9149

if.end95:                                         ; preds = %lor.lhs.false88
  %97 = load i64, i64* %bytes, align 8, !dbg !9150
  %conv96 = trunc i64 %97 to i32, !dbg !9150
  %98 = load i32, i32* %slice_num, align 4, !dbg !9151
  %idxprom = sext i32 %98 to i64, !dbg !9152
  %99 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9152
  %arrayidx97 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %99, i64 %idxprom, !dbg !9152
  %bytes98 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx97, i32 0, i32 3, !dbg !9153
  store i32 %conv96, i32* %bytes98, align 8, !dbg !9154
  %100 = load i32, i32* %slice_x, align 4, !dbg !9155
  %101 = load i32, i32* %slice_num, align 4, !dbg !9156
  %idxprom99 = sext i32 %101 to i64, !dbg !9157
  %102 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9157
  %arrayidx100 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %102, i64 %idxprom99, !dbg !9157
  %slice_x101 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx100, i32 0, i32 1, !dbg !9158
  store i32 %100, i32* %slice_x101, align 8, !dbg !9159
  %103 = load i32, i32* %slice_y, align 4, !dbg !9160
  %104 = load i32, i32* %slice_num, align 4, !dbg !9161
  %idxprom102 = sext i32 %104 to i64, !dbg !9162
  %105 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9162
  %arrayidx103 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %105, i64 %idxprom102, !dbg !9162
  %slice_y104 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx103, i32 0, i32 2, !dbg !9163
  store i32 %103, i32* %slice_y104, align 4, !dbg !9164
  %106 = load i32, i32* %slice_num, align 4, !dbg !9165
  %idxprom105 = sext i32 %106 to i64, !dbg !9166
  %107 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9166
  %arrayidx106 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %107, i64 %idxprom105, !dbg !9166
  %gb107 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx106, i32 0, i32 0, !dbg !9167
  %108 = load i8*, i8** %buf, align 8, !dbg !9168
  %109 = load i32, i32* %bufsize, align 4, !dbg !9169
  %call108 = call i32 @init_get_bits(%struct.GetBitContext* %gb107, i8* %108, i32 %109), !dbg !9170
  %110 = load i32, i32* %slice_num, align 4, !dbg !9171
  %inc109 = add nsw i32 %110, 1, !dbg !9171
  store i32 %inc109, i32* %slice_num, align 4, !dbg !9171
  %111 = load i64, i64* %bytes, align 8, !dbg !9172
  %112 = load i8*, i8** %buf, align 8, !dbg !9173
  %add.ptr110 = getelementptr inbounds i8, i8* %112, i64 %111, !dbg !9173
  store i8* %add.ptr110, i8** %buf, align 8, !dbg !9173
  %113 = load i32, i32* %bufsize, align 4, !dbg !9174
  %div111 = sdiv i32 %113, 8, !dbg !9176
  %conv112 = sext i32 %div111 to i64, !dbg !9174
  %114 = load i64, i64* %bytes, align 8, !dbg !9177
  %cmp113 = icmp sge i64 %conv112, %114, !dbg !9178
  br i1 %cmp113, label %if.then115, label %if.else, !dbg !9179

if.then115:                                       ; preds = %if.end95
  %115 = load i64, i64* %bytes, align 8, !dbg !9180
  %mul116 = mul nsw i64 %115, 8, !dbg !9181
  %116 = load i32, i32* %bufsize, align 4, !dbg !9182
  %conv117 = sext i32 %116 to i64, !dbg !9182
  %sub118 = sub nsw i64 %conv117, %mul116, !dbg !9182
  %conv119 = trunc i64 %sub118 to i32, !dbg !9182
  store i32 %conv119, i32* %bufsize, align 4, !dbg !9182
  br label %if.end120, !dbg !9183

if.else:                                          ; preds = %if.end95
  store i32 0, i32* %bufsize, align 4, !dbg !9184
  br label %if.end120

if.end120:                                        ; preds = %if.else, %if.then115
  br label %for.inc121, !dbg !9185

for.inc121:                                       ; preds = %if.end120
  %117 = load i32, i32* %slice_x, align 4, !dbg !9186
  %inc122 = add nsw i32 %117, 1, !dbg !9186
  store i32 %inc122, i32* %slice_x, align 4, !dbg !9186
  br label %for.cond60, !dbg !9188, !llvm.loop !9189

for.end123:                                       ; preds = %land.end67
  br label %for.inc124, !dbg !9191

for.inc124:                                       ; preds = %for.end123
  %118 = load i32, i32* %slice_y, align 4, !dbg !9192
  %inc125 = add nsw i32 %118, 1, !dbg !9192
  store i32 %inc125, i32* %slice_y, align 4, !dbg !9192
  br label %for.cond, !dbg !9194, !llvm.loop !9195

for.end126:                                       ; preds = %land.end
  %119 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9197
  %num_x127 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %119, i32 0, i32 28, !dbg !9199
  %120 = load i32, i32* %num_x127, align 4, !dbg !9199
  %121 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9200
  %num_y128 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %121, i32 0, i32 29, !dbg !9201
  %122 = load i32, i32* %num_y128, align 16, !dbg !9201
  %mul129 = mul i32 %120, %122, !dbg !9202
  %123 = load i32, i32* %slice_num, align 4, !dbg !9203
  %cmp130 = icmp ne i32 %mul129, %123, !dbg !9204
  br i1 %cmp130, label %if.then132, label %if.end134, !dbg !9205

if.then132:                                       ; preds = %for.end126
  %124 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9206
  %avctx133 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %124, i32 0, i32 0, !dbg !9208
  %125 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx133, align 16, !dbg !9208
  %126 = bitcast %struct.AVCodecContext* %125 to i8*, !dbg !9206
  call void (i8*, i32, i8*, ...) @av_log(i8* %126, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i32 0, i32 0)), !dbg !9209
  store i32 -1094995529, i32* %retval, align 4, !dbg !9210
  br label %return, !dbg !9210

if.end134:                                        ; preds = %for.end126
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9211
  %execute2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 151, !dbg !9212
  %128 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)** %execute2, align 8, !dbg !9212
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9213
  %130 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9214
  %131 = bitcast %struct.DiracSlice* %130 to i8*, !dbg !9214
  %132 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9215
  %num_y135 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %132, i32 0, i32 29, !dbg !9216
  %133 = load i32, i32* %num_y135, align 16, !dbg !9216
  %call136 = call i32 %128(%struct.AVCodecContext* %129, i32 (%struct.AVCodecContext*, i8*, i32, i32)* @decode_hq_slice_row, i8* %131, i32* null, i32 %133), !dbg !9211
  br label %if.end221, !dbg !9217

if.else137:                                       ; preds = %if.end45
  store i32 0, i32* %slice_y, align 4, !dbg !9218
  br label %for.cond138, !dbg !9221

for.cond138:                                      ; preds = %for.inc217, %if.else137
  %134 = load i32, i32* %bufsize, align 4, !dbg !9222
  %cmp139 = icmp sgt i32 %134, 0, !dbg !9225
  br i1 %cmp139, label %land.rhs141, label %land.end145, !dbg !9226

land.rhs141:                                      ; preds = %for.cond138
  %135 = load i32, i32* %slice_y, align 4, !dbg !9227
  %136 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9229
  %num_y142 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %136, i32 0, i32 29, !dbg !9230
  %137 = load i32, i32* %num_y142, align 16, !dbg !9230
  %cmp143 = icmp ult i32 %135, %137, !dbg !9231
  br label %land.end145

land.end145:                                      ; preds = %land.rhs141, %for.cond138
  %138 = phi i1 [ false, %for.cond138 ], [ %cmp143, %land.rhs141 ]
  br i1 %138, label %for.body146, label %for.end219, !dbg !9232

for.body146:                                      ; preds = %land.end145
  store i32 0, i32* %slice_x, align 4, !dbg !9234
  br label %for.cond147, !dbg !9237

for.cond147:                                      ; preds = %for.inc214, %for.body146
  %139 = load i32, i32* %bufsize, align 4, !dbg !9238
  %cmp148 = icmp sgt i32 %139, 0, !dbg !9241
  br i1 %cmp148, label %land.rhs150, label %land.end154, !dbg !9242

land.rhs150:                                      ; preds = %for.cond147
  %140 = load i32, i32* %slice_x, align 4, !dbg !9243
  %141 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9245
  %num_x151 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %141, i32 0, i32 28, !dbg !9246
  %142 = load i32, i32* %num_x151, align 4, !dbg !9246
  %cmp152 = icmp ult i32 %140, %142, !dbg !9247
  br label %land.end154

land.end154:                                      ; preds = %land.rhs150, %for.cond147
  %143 = phi i1 [ false, %for.cond147 ], [ %cmp152, %land.rhs150 ]
  br i1 %143, label %for.body155, label %for.end216, !dbg !9248

for.body155:                                      ; preds = %land.end154
  %144 = load i32, i32* %slice_num, align 4, !dbg !9250
  %add156 = add nsw i32 %144, 1, !dbg !9252
  %conv157 = sext i32 %add156 to i64, !dbg !9253
  %145 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9254
  %lowdelay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %145, i32 0, i32 36, !dbg !9255
  %bytes158 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay, i32 0, i32 0, !dbg !9256
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes158, i32 0, i32 0, !dbg !9257
  %146 = load i32, i32* %num, align 4, !dbg !9257
  %conv159 = sext i32 %146 to i64, !dbg !9258
  %mul160 = mul nsw i64 %conv157, %conv159, !dbg !9259
  %147 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9260
  %lowdelay161 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %147, i32 0, i32 36, !dbg !9261
  %bytes162 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay161, i32 0, i32 0, !dbg !9262
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes162, i32 0, i32 1, !dbg !9263
  %148 = load i32, i32* %den, align 4, !dbg !9263
  %conv163 = sext i32 %148 to i64, !dbg !9260
  %div164 = sdiv i64 %mul160, %conv163, !dbg !9264
  %149 = load i32, i32* %slice_num, align 4, !dbg !9265
  %conv165 = sext i32 %149 to i64, !dbg !9265
  %150 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9266
  %lowdelay166 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %150, i32 0, i32 36, !dbg !9267
  %bytes167 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay166, i32 0, i32 0, !dbg !9268
  %num168 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes167, i32 0, i32 0, !dbg !9269
  %151 = load i32, i32* %num168, align 4, !dbg !9269
  %conv169 = sext i32 %151 to i64, !dbg !9270
  %mul170 = mul nsw i64 %conv165, %conv169, !dbg !9271
  %152 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9272
  %lowdelay171 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %152, i32 0, i32 36, !dbg !9273
  %bytes172 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay171, i32 0, i32 0, !dbg !9274
  %den173 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %bytes172, i32 0, i32 1, !dbg !9275
  %153 = load i32, i32* %den173, align 4, !dbg !9275
  %conv174 = sext i32 %153 to i64, !dbg !9272
  %div175 = sdiv i64 %mul170, %conv174, !dbg !9276
  %sub176 = sub nsw i64 %div164, %div175, !dbg !9277
  store i64 %sub176, i64* %bytes, align 8, !dbg !9278
  %154 = load i64, i64* %bytes, align 8, !dbg !9279
  %cmp177 = icmp sge i64 %154, 2147483647, !dbg !9281
  br i1 %cmp177, label %if.then184, label %lor.lhs.false179, !dbg !9282

lor.lhs.false179:                                 ; preds = %for.body155
  %155 = load i64, i64* %bytes, align 8, !dbg !9283
  %mul180 = mul nsw i64 %155, 8, !dbg !9285
  %156 = load i32, i32* %bufsize, align 4, !dbg !9286
  %conv181 = sext i32 %156 to i64, !dbg !9286
  %cmp182 = icmp sgt i64 %mul180, %conv181, !dbg !9287
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !9288

if.then184:                                       ; preds = %lor.lhs.false179, %for.body155
  %157 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9289
  %avctx185 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %157, i32 0, i32 0, !dbg !9291
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx185, align 16, !dbg !9291
  %159 = bitcast %struct.AVCodecContext* %158 to i8*, !dbg !9289
  call void (i8*, i32, i8*, ...) @av_log(i8* %159, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0)), !dbg !9292
  store i32 -1094995529, i32* %retval, align 4, !dbg !9293
  br label %return, !dbg !9293

if.end186:                                        ; preds = %lor.lhs.false179
  %160 = load i64, i64* %bytes, align 8, !dbg !9294
  %conv187 = trunc i64 %160 to i32, !dbg !9294
  %161 = load i32, i32* %slice_num, align 4, !dbg !9295
  %idxprom188 = sext i32 %161 to i64, !dbg !9296
  %162 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9296
  %arrayidx189 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %162, i64 %idxprom188, !dbg !9296
  %bytes190 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx189, i32 0, i32 3, !dbg !9297
  store i32 %conv187, i32* %bytes190, align 8, !dbg !9298
  %163 = load i32, i32* %slice_x, align 4, !dbg !9299
  %164 = load i32, i32* %slice_num, align 4, !dbg !9300
  %idxprom191 = sext i32 %164 to i64, !dbg !9301
  %165 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9301
  %arrayidx192 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %165, i64 %idxprom191, !dbg !9301
  %slice_x193 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx192, i32 0, i32 1, !dbg !9302
  store i32 %163, i32* %slice_x193, align 8, !dbg !9303
  %166 = load i32, i32* %slice_y, align 4, !dbg !9304
  %167 = load i32, i32* %slice_num, align 4, !dbg !9305
  %idxprom194 = sext i32 %167 to i64, !dbg !9306
  %168 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9306
  %arrayidx195 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %168, i64 %idxprom194, !dbg !9306
  %slice_y196 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx195, i32 0, i32 2, !dbg !9307
  store i32 %166, i32* %slice_y196, align 4, !dbg !9308
  %169 = load i32, i32* %slice_num, align 4, !dbg !9309
  %idxprom197 = sext i32 %169 to i64, !dbg !9310
  %170 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9310
  %arrayidx198 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %170, i64 %idxprom197, !dbg !9310
  %gb199 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %arrayidx198, i32 0, i32 0, !dbg !9311
  %171 = load i8*, i8** %buf, align 8, !dbg !9312
  %172 = load i32, i32* %bufsize, align 4, !dbg !9313
  %call200 = call i32 @init_get_bits(%struct.GetBitContext* %gb199, i8* %171, i32 %172), !dbg !9314
  %173 = load i32, i32* %slice_num, align 4, !dbg !9315
  %inc201 = add nsw i32 %173, 1, !dbg !9315
  store i32 %inc201, i32* %slice_num, align 4, !dbg !9315
  %174 = load i64, i64* %bytes, align 8, !dbg !9316
  %175 = load i8*, i8** %buf, align 8, !dbg !9317
  %add.ptr202 = getelementptr inbounds i8, i8* %175, i64 %174, !dbg !9317
  store i8* %add.ptr202, i8** %buf, align 8, !dbg !9317
  %176 = load i32, i32* %bufsize, align 4, !dbg !9318
  %div203 = sdiv i32 %176, 8, !dbg !9320
  %conv204 = sext i32 %div203 to i64, !dbg !9318
  %177 = load i64, i64* %bytes, align 8, !dbg !9321
  %cmp205 = icmp sge i64 %conv204, %177, !dbg !9322
  br i1 %cmp205, label %if.then207, label %if.else212, !dbg !9323

if.then207:                                       ; preds = %if.end186
  %178 = load i64, i64* %bytes, align 8, !dbg !9324
  %mul208 = mul nsw i64 %178, 8, !dbg !9325
  %179 = load i32, i32* %bufsize, align 4, !dbg !9326
  %conv209 = sext i32 %179 to i64, !dbg !9326
  %sub210 = sub nsw i64 %conv209, %mul208, !dbg !9326
  %conv211 = trunc i64 %sub210 to i32, !dbg !9326
  store i32 %conv211, i32* %bufsize, align 4, !dbg !9326
  br label %if.end213, !dbg !9327

if.else212:                                       ; preds = %if.end186
  store i32 0, i32* %bufsize, align 4, !dbg !9328
  br label %if.end213

if.end213:                                        ; preds = %if.else212, %if.then207
  br label %for.inc214, !dbg !9329

for.inc214:                                       ; preds = %if.end213
  %180 = load i32, i32* %slice_x, align 4, !dbg !9330
  %inc215 = add nsw i32 %180, 1, !dbg !9330
  store i32 %inc215, i32* %slice_x, align 4, !dbg !9330
  br label %for.cond147, !dbg !9332, !llvm.loop !9333

for.end216:                                       ; preds = %land.end154
  br label %for.inc217, !dbg !9335

for.inc217:                                       ; preds = %for.end216
  %181 = load i32, i32* %slice_y, align 4, !dbg !9336
  %inc218 = add nsw i32 %181, 1, !dbg !9336
  store i32 %inc218, i32* %slice_y, align 4, !dbg !9336
  br label %for.cond138, !dbg !9338, !llvm.loop !9339

for.end219:                                       ; preds = %land.end145
  %182 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9341
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %182, i32 0, i32 150, !dbg !9342
  %183 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !9342
  %184 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9343
  %185 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !9344
  %186 = bitcast %struct.DiracSlice* %185 to i8*, !dbg !9344
  %187 = load i32, i32* %slice_num, align 4, !dbg !9345
  %call220 = call i32 %183(%struct.AVCodecContext* %184, i32 (%struct.AVCodecContext*, i8*)* @decode_lowdelay_slice, i8* %186, i32* null, i32 %187, i32 48), !dbg !9341
  br label %if.end221

if.end221:                                        ; preds = %for.end219, %if.end134
  %188 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9346
  %dc_prediction = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %188, i32 0, i32 21, !dbg !9348
  %189 = load i32, i32* %dc_prediction, align 16, !dbg !9348
  %tobool222 = icmp ne i32 %189, 0, !dbg !9346
  br i1 %tobool222, label %if.then223, label %if.end257, !dbg !9349

if.then223:                                       ; preds = %if.end221
  %190 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9350
  %pshift224 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %190, i32 0, i32 14, !dbg !9353
  %191 = load i32, i32* %pshift224, align 4, !dbg !9353
  %tobool225 = icmp ne i32 %191, 0, !dbg !9350
  br i1 %tobool225, label %if.then226, label %if.else240, !dbg !9354

if.then226:                                       ; preds = %if.then223
  %192 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9355
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %192, i32 0, i32 10, !dbg !9357
  %arrayidx227 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 0, !dbg !9355
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx227, i32 0, i32 10, !dbg !9358
  %arrayidx228 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 0, !dbg !9355
  %arrayidx229 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx228, i64 0, i64 0, !dbg !9355
  call void @intra_dc_prediction_10(%struct.SubBand* %arrayidx229), !dbg !9359
  %193 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9360
  %plane230 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %193, i32 0, i32 10, !dbg !9361
  %arrayidx231 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane230, i64 0, i64 1, !dbg !9360
  %band232 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx231, i32 0, i32 10, !dbg !9362
  %arrayidx233 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band232, i64 0, i64 0, !dbg !9360
  %arrayidx234 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx233, i64 0, i64 0, !dbg !9360
  call void @intra_dc_prediction_10(%struct.SubBand* %arrayidx234), !dbg !9363
  %194 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9364
  %plane235 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %194, i32 0, i32 10, !dbg !9365
  %arrayidx236 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane235, i64 0, i64 2, !dbg !9364
  %band237 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx236, i32 0, i32 10, !dbg !9366
  %arrayidx238 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band237, i64 0, i64 0, !dbg !9364
  %arrayidx239 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx238, i64 0, i64 0, !dbg !9364
  call void @intra_dc_prediction_10(%struct.SubBand* %arrayidx239), !dbg !9367
  br label %if.end256, !dbg !9368

if.else240:                                       ; preds = %if.then223
  %195 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9369
  %plane241 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %195, i32 0, i32 10, !dbg !9371
  %arrayidx242 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane241, i64 0, i64 0, !dbg !9369
  %band243 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx242, i32 0, i32 10, !dbg !9372
  %arrayidx244 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band243, i64 0, i64 0, !dbg !9369
  %arrayidx245 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx244, i64 0, i64 0, !dbg !9369
  call void @intra_dc_prediction_8(%struct.SubBand* %arrayidx245), !dbg !9373
  %196 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9374
  %plane246 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %196, i32 0, i32 10, !dbg !9375
  %arrayidx247 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane246, i64 0, i64 1, !dbg !9374
  %band248 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx247, i32 0, i32 10, !dbg !9376
  %arrayidx249 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band248, i64 0, i64 0, !dbg !9374
  %arrayidx250 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx249, i64 0, i64 0, !dbg !9374
  call void @intra_dc_prediction_8(%struct.SubBand* %arrayidx250), !dbg !9377
  %197 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9378
  %plane251 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %197, i32 0, i32 10, !dbg !9379
  %arrayidx252 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane251, i64 0, i64 2, !dbg !9378
  %band253 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx252, i32 0, i32 10, !dbg !9380
  %arrayidx254 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band253, i64 0, i64 0, !dbg !9378
  %arrayidx255 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx254, i64 0, i64 0, !dbg !9378
  call void @intra_dc_prediction_8(%struct.SubBand* %arrayidx255), !dbg !9381
  br label %if.end256

if.end256:                                        ; preds = %if.else240, %if.then226
  br label %if.end257, !dbg !9382

if.end257:                                        ; preds = %if.end256, %if.end221
  store i32 0, i32* %retval, align 4, !dbg !9383
  br label %return, !dbg !9383

return:                                           ; preds = %if.end257, %if.then184, %if.then132, %if.then93, %if.then42, %if.then8
  %198 = load i32, i32* %retval, align 4, !dbg !9384
  ret i32 %198, !dbg !9384
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_component(%struct.DiracContext* %s, i32 %comp) #1 !dbg !9385 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %comp.addr = alloca i32, align 4
  %avctx = alloca %struct.AVCodecContext*, align 8
  %bands = alloca [16 x %struct.SubBand*], align 16
  %orientation = alloca i32, align 4
  %level = alloca i32, align 4
  %num_bands = alloca i32, align 4
  %ret = alloca [16 x i32], align 16
  %i = alloca i32, align 4
  %damaged_count = alloca i32, align 4
  %b = alloca %struct.SubBand*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !9386, metadata !2947), !dbg !9387
  store i32 %comp, i32* %comp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %comp.addr, metadata !9388, metadata !2947), !dbg !9389
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !9390, metadata !2947), !dbg !9391
  %0 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9392
  %avctx1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %0, i32 0, i32 0, !dbg !9393
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 16, !dbg !9393
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !9391
  call void @llvm.dbg.declare(metadata [16 x %struct.SubBand*]* %bands, metadata !9394, metadata !2947), !dbg !9396
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !9397, metadata !2947), !dbg !9398
  call void @llvm.dbg.declare(metadata i32* %level, metadata !9399, metadata !2947), !dbg !9400
  call void @llvm.dbg.declare(metadata i32* %num_bands, metadata !9401, metadata !2947), !dbg !9402
  store i32 0, i32* %num_bands, align 4, !dbg !9402
  call void @llvm.dbg.declare(metadata [16 x i32]* %ret, metadata !9403, metadata !2947), !dbg !9405
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9406, metadata !2947), !dbg !9407
  call void @llvm.dbg.declare(metadata i32* %damaged_count, metadata !9408, metadata !2947), !dbg !9409
  store i32 0, i32* %damaged_count, align 4, !dbg !9409
  store i32 0, i32* %level, align 4, !dbg !9410
  br label %for.cond, !dbg !9412

for.cond:                                         ; preds = %for.inc95, %entry
  %2 = load i32, i32* %level, align 4, !dbg !9413
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9416
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %3, i32 0, i32 24, !dbg !9417
  %4 = load i32, i32* %wavelet_depth, align 4, !dbg !9417
  %cmp = icmp ult i32 %2, %4, !dbg !9418
  br i1 %cmp, label %for.body, label %for.end97, !dbg !9419

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %level, align 4, !dbg !9420
  %tobool = icmp ne i32 %5, 0, !dbg !9423
  %lnot = xor i1 %tobool, true, !dbg !9423
  %lnot2 = xor i1 %lnot, true, !dbg !9424
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9424
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !9425
  br label %for.cond3, !dbg !9426

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %orientation, align 4, !dbg !9427
  %cmp4 = icmp ult i32 %6, 4, !dbg !9430
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !9431

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !9432, metadata !2947), !dbg !9434
  %7 = load i32, i32* %orientation, align 4, !dbg !9435
  %idxprom = zext i32 %7 to i64, !dbg !9436
  %8 = load i32, i32* %level, align 4, !dbg !9437
  %idxprom6 = sext i32 %8 to i64, !dbg !9436
  %9 = load i32, i32* %comp.addr, align 4, !dbg !9438
  %idxprom7 = sext i32 %9 to i64, !dbg !9436
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9436
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 10, !dbg !9439
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom7, !dbg !9436
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx, i32 0, i32 10, !dbg !9440
  %arrayidx8 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom6, !dbg !9436
  %arrayidx9 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx8, i64 0, i64 %idxprom, !dbg !9436
  store %struct.SubBand* %arrayidx9, %struct.SubBand** %b, align 8, !dbg !9434
  %11 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9441
  %12 = load i32, i32* %num_bands, align 4, !dbg !9442
  %inc = add nsw i32 %12, 1, !dbg !9442
  store i32 %inc, i32* %num_bands, align 4, !dbg !9442
  %idxprom10 = sext i32 %12 to i64, !dbg !9443
  %arrayidx11 = getelementptr inbounds [16 x %struct.SubBand*], [16 x %struct.SubBand*]* %bands, i64 0, i64 %idxprom10, !dbg !9443
  store %struct.SubBand* %11, %struct.SubBand** %arrayidx11, align 8, !dbg !9444
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9445
  %gb = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 6, !dbg !9446
  %call = call i8* @align_get_bits(%struct.GetBitContext* %gb), !dbg !9447
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9448
  %gb12 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 6, !dbg !9449
  %call13 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb12), !dbg !9450
  %15 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9451
  %length = getelementptr inbounds %struct.SubBand, %struct.SubBand* %15, i32 0, i32 9, !dbg !9452
  store i32 %call13, i32* %length, align 8, !dbg !9453
  %16 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9454
  %length14 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %16, i32 0, i32 9, !dbg !9456
  %17 = load i32, i32* %length14, align 8, !dbg !9456
  %tobool15 = icmp ne i32 %17, 0, !dbg !9454
  br i1 %tobool15, label %if.then, label %if.end61, !dbg !9457

if.then:                                          ; preds = %for.body5
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9458
  %gb16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 6, !dbg !9460
  %call17 = call i32 @get_interleaved_ue_golomb(%struct.GetBitContext* %gb16), !dbg !9461
  %19 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9462
  %quant = getelementptr inbounds %struct.SubBand, %struct.SubBand* %19, i32 0, i32 6, !dbg !9463
  store i32 %call17, i32* %quant, align 8, !dbg !9464
  %20 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9465
  %quant18 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %20, i32 0, i32 6, !dbg !9467
  %21 = load i32, i32* %quant18, align 8, !dbg !9467
  %conv = sext i32 %21 to i64, !dbg !9465
  %cmp19 = icmp ugt i64 %conv, 115, !dbg !9468
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !9469

if.then21:                                        ; preds = %if.then
  %22 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9470
  %avctx22 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %22, i32 0, i32 0, !dbg !9472
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx22, align 16, !dbg !9472
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !9470
  %25 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9473
  %quant23 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %25, i32 0, i32 6, !dbg !9474
  %26 = load i32, i32* %quant23, align 8, !dbg !9474
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0), i32 %26), !dbg !9475
  %27 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9476
  %quant24 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %27, i32 0, i32 6, !dbg !9477
  store i32 0, i32* %quant24, align 8, !dbg !9478
  store i32 -1094995529, i32* %retval, align 4, !dbg !9479
  br label %return, !dbg !9479

if.end:                                           ; preds = %if.then
  %28 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9480
  %gb25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %28, i32 0, i32 6, !dbg !9481
  %call26 = call i8* @align_get_bits(%struct.GetBitContext* %gb25), !dbg !9482
  %29 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9483
  %gb27 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %29, i32 0, i32 6, !dbg !9484
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb27, i32 0, i32 0, !dbg !9485
  %30 = load i8*, i8** %buffer, align 8, !dbg !9485
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9486
  %gb28 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 6, !dbg !9487
  %call29 = call i32 @get_bits_count(%struct.GetBitContext* %gb28), !dbg !9488
  %div = sdiv i32 %call29, 8, !dbg !9489
  %idx.ext = sext i32 %div to i64, !dbg !9490
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !9490
  %32 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9491
  %coeff_data = getelementptr inbounds %struct.SubBand, %struct.SubBand* %32, i32 0, i32 10, !dbg !9492
  store i8* %add.ptr, i8** %coeff_data, align 8, !dbg !9493
  %33 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9494
  %length30 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %33, i32 0, i32 9, !dbg !9495
  %34 = load i32, i32* %length30, align 8, !dbg !9495
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9496
  %gb31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 6, !dbg !9497
  %call32 = call i32 @get_bits_left(%struct.GetBitContext* %gb31), !dbg !9498
  %div33 = sdiv i32 %call32, 8, !dbg !9499
  %cmp34 = icmp sgt i32 %div33, 0, !dbg !9500
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !9501

cond.true:                                        ; preds = %if.end
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9502
  %gb36 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 6, !dbg !9504
  %call37 = call i32 @get_bits_left(%struct.GetBitContext* %gb36), !dbg !9505
  %div38 = sdiv i32 %call37, 8, !dbg !9506
  br label %cond.end, !dbg !9507

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div38, %cond.true ], [ 0, %cond.false ], !dbg !9510
  %cmp39 = icmp ugt i32 %34, %cond, !dbg !9512
  br i1 %cmp39, label %cond.true41, label %cond.false54, !dbg !9513

cond.true41:                                      ; preds = %cond.end
  %37 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9514
  %gb42 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %37, i32 0, i32 6, !dbg !9516
  %call43 = call i32 @get_bits_left(%struct.GetBitContext* %gb42), !dbg !9517
  %div44 = sdiv i32 %call43, 8, !dbg !9518
  %cmp45 = icmp sgt i32 %div44, 0, !dbg !9519
  br i1 %cmp45, label %cond.true47, label %cond.false51, !dbg !9520

cond.true47:                                      ; preds = %cond.true41
  %38 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9521
  %gb48 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %38, i32 0, i32 6, !dbg !9523
  %call49 = call i32 @get_bits_left(%struct.GetBitContext* %gb48), !dbg !9524
  %div50 = sdiv i32 %call49, 8, !dbg !9525
  br label %cond.end52, !dbg !9526

cond.false51:                                     ; preds = %cond.true41
  br label %cond.end52, !dbg !9527

cond.end52:                                       ; preds = %cond.false51, %cond.true47
  %cond53 = phi i32 [ %div50, %cond.true47 ], [ 0, %cond.false51 ], !dbg !9529
  br label %cond.end56, !dbg !9531

cond.false54:                                     ; preds = %cond.end
  %39 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9532
  %length55 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %39, i32 0, i32 9, !dbg !9534
  %40 = load i32, i32* %length55, align 8, !dbg !9534
  br label %cond.end56, !dbg !9535

cond.end56:                                       ; preds = %cond.false54, %cond.end52
  %cond57 = phi i32 [ %cond53, %cond.end52 ], [ %40, %cond.false54 ], !dbg !9536
  %41 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9538
  %length58 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %41, i32 0, i32 9, !dbg !9539
  store i32 %cond57, i32* %length58, align 8, !dbg !9540
  %42 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9541
  %gb59 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %42, i32 0, i32 6, !dbg !9542
  %43 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !9543
  %length60 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %43, i32 0, i32 9, !dbg !9544
  %44 = load i32, i32* %length60, align 8, !dbg !9544
  %mul = mul i32 %44, 8, !dbg !9545
  call void @skip_bits_long(%struct.GetBitContext* %gb59, i32 %mul), !dbg !9546
  br label %if.end61, !dbg !9547

if.end61:                                         ; preds = %cond.end56, %for.body5
  br label %for.inc, !dbg !9548

for.inc:                                          ; preds = %if.end61
  %45 = load i32, i32* %orientation, align 4, !dbg !9549
  %inc62 = add i32 %45, 1, !dbg !9549
  store i32 %inc62, i32* %orientation, align 4, !dbg !9549
  br label %for.cond3, !dbg !9551, !llvm.loop !9552

for.end:                                          ; preds = %for.cond3
  %46 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9554
  %is_arith = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %46, i32 0, i32 16, !dbg !9556
  %47 = load i32, i32* %is_arith, align 4, !dbg !9556
  %tobool63 = icmp ne i32 %47, 0, !dbg !9554
  br i1 %tobool63, label %if.then64, label %if.end94, !dbg !9557

if.then64:                                        ; preds = %for.end
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9558
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 150, !dbg !9559
  %49 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !9559
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9560
  %51 = load i32, i32* %level, align 4, !dbg !9561
  %tobool65 = icmp ne i32 %51, 0, !dbg !9562
  %lnot66 = xor i1 %tobool65, true, !dbg !9562
  %lnot68 = xor i1 %lnot66, true, !dbg !9563
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !9563
  %idxprom70 = sext i32 %lnot.ext69 to i64, !dbg !9564
  %52 = load i32, i32* %level, align 4, !dbg !9565
  %idxprom71 = sext i32 %52 to i64, !dbg !9564
  %53 = load i32, i32* %comp.addr, align 4, !dbg !9566
  %idxprom72 = sext i32 %53 to i64, !dbg !9564
  %54 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9564
  %plane73 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %54, i32 0, i32 10, !dbg !9567
  %arrayidx74 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane73, i64 0, i64 %idxprom72, !dbg !9564
  %band75 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx74, i32 0, i32 10, !dbg !9568
  %arrayidx76 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band75, i64 0, i64 %idxprom71, !dbg !9564
  %arrayidx77 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx76, i64 0, i64 %idxprom70, !dbg !9564
  %55 = bitcast %struct.SubBand* %arrayidx77 to i8*, !dbg !9569
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %ret, i32 0, i32 0, !dbg !9570
  %56 = load i32, i32* %level, align 4, !dbg !9571
  %mul78 = mul nsw i32 3, %56, !dbg !9572
  %idx.ext79 = sext i32 %mul78 to i64, !dbg !9573
  %add.ptr80 = getelementptr inbounds i32, i32* %arraydecay, i64 %idx.ext79, !dbg !9573
  %57 = load i32, i32* %level, align 4, !dbg !9574
  %tobool81 = icmp ne i32 %57, 0, !dbg !9575
  %lnot82 = xor i1 %tobool81, true, !dbg !9575
  %lnot84 = xor i1 %lnot82, true, !dbg !9576
  %lnot.ext85 = zext i1 %lnot84 to i32, !dbg !9576
  %idx.ext86 = sext i32 %lnot.ext85 to i64, !dbg !9577
  %add.ptr87 = getelementptr inbounds i32, i32* %add.ptr80, i64 %idx.ext86, !dbg !9577
  %58 = load i32, i32* %level, align 4, !dbg !9578
  %tobool88 = icmp ne i32 %58, 0, !dbg !9579
  %lnot89 = xor i1 %tobool88, true, !dbg !9579
  %lnot91 = xor i1 %lnot89, true, !dbg !9580
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !9580
  %sub = sub nsw i32 4, %lnot.ext92, !dbg !9581
  %call93 = call i32 %49(%struct.AVCodecContext* %50, i32 (%struct.AVCodecContext*, i8*)* @decode_subband_arith, i8* %55, i32* %add.ptr87, i32 %sub, i32 64), !dbg !9558
  br label %if.end94, !dbg !9558

if.end94:                                         ; preds = %if.then64, %for.end
  br label %for.inc95, !dbg !9582

for.inc95:                                        ; preds = %if.end94
  %59 = load i32, i32* %level, align 4, !dbg !9583
  %inc96 = add nsw i32 %59, 1, !dbg !9583
  store i32 %inc96, i32* %level, align 4, !dbg !9583
  br label %for.cond, !dbg !9585, !llvm.loop !9586

for.end97:                                        ; preds = %for.cond
  %60 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9588
  %is_arith98 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %60, i32 0, i32 16, !dbg !9590
  %61 = load i32, i32* %is_arith98, align 4, !dbg !9590
  %tobool99 = icmp ne i32 %61, 0, !dbg !9588
  br i1 %tobool99, label %if.end105, label %if.then100, !dbg !9591

if.then100:                                       ; preds = %for.end97
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9592
  %execute101 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 150, !dbg !9593
  %63 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute101, align 8, !dbg !9593
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9594
  %arraydecay102 = getelementptr inbounds [16 x %struct.SubBand*], [16 x %struct.SubBand*]* %bands, i32 0, i32 0, !dbg !9595
  %65 = bitcast %struct.SubBand** %arraydecay102 to i8*, !dbg !9595
  %arraydecay103 = getelementptr inbounds [16 x i32], [16 x i32]* %ret, i32 0, i32 0, !dbg !9596
  %66 = load i32, i32* %num_bands, align 4, !dbg !9597
  %call104 = call i32 %63(%struct.AVCodecContext* %64, i32 (%struct.AVCodecContext*, i8*)* @decode_subband_golomb, i8* %65, i32* %arraydecay103, i32 %66, i32 8), !dbg !9592
  br label %if.end105, !dbg !9592

if.end105:                                        ; preds = %if.then100, %for.end97
  store i32 0, i32* %i, align 4, !dbg !9598
  br label %for.cond106, !dbg !9600

for.cond106:                                      ; preds = %for.inc119, %if.end105
  %67 = load i32, i32* %i, align 4, !dbg !9601
  %68 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9604
  %wavelet_depth107 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %68, i32 0, i32 24, !dbg !9605
  %69 = load i32, i32* %wavelet_depth107, align 4, !dbg !9605
  %mul108 = mul i32 %69, 3, !dbg !9606
  %add = add i32 %mul108, 1, !dbg !9607
  %cmp109 = icmp ult i32 %67, %add, !dbg !9608
  br i1 %cmp109, label %for.body111, label %for.end121, !dbg !9609

for.body111:                                      ; preds = %for.cond106
  %70 = load i32, i32* %i, align 4, !dbg !9610
  %idxprom112 = sext i32 %70 to i64, !dbg !9613
  %arrayidx113 = getelementptr inbounds [16 x i32], [16 x i32]* %ret, i64 0, i64 %idxprom112, !dbg !9613
  %71 = load i32, i32* %arrayidx113, align 4, !dbg !9613
  %cmp114 = icmp slt i32 %71, 0, !dbg !9614
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !9615

if.then116:                                       ; preds = %for.body111
  %72 = load i32, i32* %damaged_count, align 4, !dbg !9616
  %inc117 = add nsw i32 %72, 1, !dbg !9616
  store i32 %inc117, i32* %damaged_count, align 4, !dbg !9616
  br label %if.end118, !dbg !9617

if.end118:                                        ; preds = %if.then116, %for.body111
  br label %for.inc119, !dbg !9618

for.inc119:                                       ; preds = %if.end118
  %73 = load i32, i32* %i, align 4, !dbg !9619
  %inc120 = add nsw i32 %73, 1, !dbg !9619
  store i32 %inc120, i32* %i, align 4, !dbg !9619
  br label %for.cond106, !dbg !9621, !llvm.loop !9622

for.end121:                                       ; preds = %for.cond106
  %74 = load i32, i32* %damaged_count, align 4, !dbg !9624
  %75 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9626
  %wavelet_depth122 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %75, i32 0, i32 24, !dbg !9627
  %76 = load i32, i32* %wavelet_depth122, align 4, !dbg !9627
  %mul123 = mul i32 %76, 3, !dbg !9628
  %add124 = add i32 %mul123, 1, !dbg !9629
  %div125 = udiv i32 %add124, 2, !dbg !9630
  %cmp126 = icmp ugt i32 %74, %div125, !dbg !9631
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !9632

if.then128:                                       ; preds = %for.end121
  store i32 -1094995529, i32* %retval, align 4, !dbg !9633
  br label %return, !dbg !9633

if.end129:                                        ; preds = %for.end121
  store i32 0, i32* %retval, align 4, !dbg !9634
  br label %return, !dbg !9634

return:                                           ; preds = %if.end129, %if.then128, %if.then21
  %77 = load i32, i32* %retval, align 4, !dbg !9635
  ret i32 %77, !dbg !9635
}

declare i32 @ff_spatial_idwt_init(%struct.DWTContext*, %struct.DWTPlane*, i32, i32, i32) #3

declare void @ff_spatial_idwt_slice2(%struct.DWTContext*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @select_dsp_funcs(%struct.DiracContext* %s, i32 %width, i32 %height, i32 %xblen, i32 %yblen) #1 !dbg !9636 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %xblen.addr = alloca i32, align 4
  %yblen.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !9639, metadata !2947), !dbg !9640
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9641, metadata !2947), !dbg !9642
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9643, metadata !2947), !dbg !9644
  store i32 %xblen, i32* %xblen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xblen.addr, metadata !9645, metadata !2947), !dbg !9646
  store i32 %yblen, i32* %yblen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yblen.addr, metadata !9647, metadata !2947), !dbg !9648
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9649, metadata !2947), !dbg !9650
  store i32 0, i32* %idx, align 4, !dbg !9650
  %0 = load i32, i32* %xblen.addr, align 4, !dbg !9651
  %cmp = icmp sgt i32 %0, 8, !dbg !9653
  br i1 %cmp, label %if.then, label %if.end, !dbg !9654

if.then:                                          ; preds = %entry
  store i32 1, i32* %idx, align 4, !dbg !9655
  br label %if.end, !dbg !9656

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %xblen.addr, align 4, !dbg !9657
  %cmp1 = icmp sgt i32 %1, 16, !dbg !9659
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9660

if.then2:                                         ; preds = %if.end
  store i32 2, i32* %idx, align 4, !dbg !9661
  br label %if.end3, !dbg !9662

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9663
  %put_pixels_tab = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 55, !dbg !9664
  %arraydecay = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %put_pixels_tab, i32 0, i32 0, !dbg !9665
  %3 = bitcast void (i8*, i8**, i32, i32)** %arraydecay to i8*, !dbg !9665
  %4 = load i32, i32* %idx, align 4, !dbg !9666
  %idxprom = sext i32 %4 to i64, !dbg !9667
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9667
  %diracdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 3, !dbg !9668
  %put_dirac_pixels_tab = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp, i32 0, i32 1, !dbg !9669
  %arrayidx = getelementptr inbounds [3 x [4 x void (i8*, i8**, i32, i32)*]], [3 x [4 x void (i8*, i8**, i32, i32)*]]* %put_dirac_pixels_tab, i64 0, i64 %idxprom, !dbg !9667
  %arraydecay4 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %arrayidx, i32 0, i32 0, !dbg !9665
  %6 = bitcast void (i8*, i8**, i32, i32)** %arraydecay4 to i8*, !dbg !9665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %6, i64 32, i32 8, i1 false), !dbg !9665
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9670
  %avg_pixels_tab = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 56, !dbg !9671
  %arraydecay5 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %avg_pixels_tab, i32 0, i32 0, !dbg !9672
  %8 = bitcast void (i8*, i8**, i32, i32)** %arraydecay5 to i8*, !dbg !9672
  %9 = load i32, i32* %idx, align 4, !dbg !9673
  %idxprom6 = sext i32 %9 to i64, !dbg !9674
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9674
  %diracdsp7 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 3, !dbg !9675
  %avg_dirac_pixels_tab = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp7, i32 0, i32 2, !dbg !9676
  %arrayidx8 = getelementptr inbounds [3 x [4 x void (i8*, i8**, i32, i32)*]], [3 x [4 x void (i8*, i8**, i32, i32)*]]* %avg_dirac_pixels_tab, i64 0, i64 %idxprom6, !dbg !9674
  %arraydecay9 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %arrayidx8, i32 0, i32 0, !dbg !9672
  %11 = bitcast void (i8*, i8**, i32, i32)** %arraydecay9 to i8*, !dbg !9672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %11, i64 32, i32 8, i1 false), !dbg !9672
  %12 = load i32, i32* %idx, align 4, !dbg !9677
  %idxprom10 = sext i32 %12 to i64, !dbg !9678
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9678
  %diracdsp11 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 3, !dbg !9679
  %add_dirac_obmc = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp11, i32 0, i32 6, !dbg !9680
  %arrayidx12 = getelementptr inbounds [3 x void (i16*, i8*, i32, i8*, i32)*], [3 x void (i16*, i8*, i32, i8*, i32)*]* %add_dirac_obmc, i64 0, i64 %idxprom10, !dbg !9678
  %14 = load void (i16*, i8*, i32, i8*, i32)*, void (i16*, i8*, i32, i8*, i32)** %arrayidx12, align 8, !dbg !9678
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9681
  %add_obmc = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %15, i32 0, i32 57, !dbg !9682
  store void (i16*, i8*, i32, i8*, i32)* %14, void (i16*, i8*, i32, i8*, i32)** %add_obmc, align 16, !dbg !9683
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9684
  %weight_log2denom = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 41, !dbg !9686
  %17 = load i32, i32* %weight_log2denom, align 8, !dbg !9686
  %cmp13 = icmp ugt i32 %17, 1, !dbg !9687
  br i1 %cmp13, label %if.then23, label %lor.lhs.false, !dbg !9688

lor.lhs.false:                                    ; preds = %if.end3
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9689
  %weight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 40, !dbg !9691
  %arrayidx14 = getelementptr inbounds [2 x i16], [2 x i16]* %weight, i64 0, i64 0, !dbg !9689
  %19 = load i16, i16* %arrayidx14, align 2, !dbg !9689
  %conv = sext i16 %19 to i32, !dbg !9689
  %cmp15 = icmp ne i32 %conv, 1, !dbg !9692
  br i1 %cmp15, label %if.then23, label %lor.lhs.false17, !dbg !9693

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9694
  %weight18 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 40, !dbg !9696
  %arrayidx19 = getelementptr inbounds [2 x i16], [2 x i16]* %weight18, i64 0, i64 1, !dbg !9694
  %21 = load i16, i16* %arrayidx19, align 2, !dbg !9694
  %conv20 = sext i16 %21 to i32, !dbg !9694
  %cmp21 = icmp ne i32 %conv20, 1, !dbg !9697
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !9698

if.then23:                                        ; preds = %lor.lhs.false17, %lor.lhs.false, %if.end3
  %22 = load i32, i32* %idx, align 4, !dbg !9699
  %idxprom24 = sext i32 %22 to i64, !dbg !9701
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9701
  %diracdsp25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 3, !dbg !9702
  %weight_dirac_pixels_tab = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp25, i32 0, i32 8, !dbg !9703
  %arrayidx26 = getelementptr inbounds [3 x void (i8*, i32, i32, i32, i32)*], [3 x void (i8*, i32, i32, i32, i32)*]* %weight_dirac_pixels_tab, i64 0, i64 %idxprom24, !dbg !9701
  %24 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %arrayidx26, align 8, !dbg !9701
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9704
  %weight_func = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 58, !dbg !9705
  store void (i8*, i32, i32, i32, i32)* %24, void (i8*, i32, i32, i32, i32)** %weight_func, align 8, !dbg !9706
  %26 = load i32, i32* %idx, align 4, !dbg !9707
  %idxprom27 = sext i32 %26 to i64, !dbg !9708
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9708
  %diracdsp28 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 3, !dbg !9709
  %biweight_dirac_pixels_tab = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp28, i32 0, i32 9, !dbg !9710
  %arrayidx29 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32, i32, i32, i32)*], [3 x void (i8*, i8*, i32, i32, i32, i32, i32)*]* %biweight_dirac_pixels_tab, i64 0, i64 %idxprom27, !dbg !9708
  %28 = load void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32)** %arrayidx29, align 8, !dbg !9708
  %29 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9711
  %biweight_func = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %29, i32 0, i32 59, !dbg !9712
  store void (i8*, i8*, i32, i32, i32, i32, i32)* %28, void (i8*, i8*, i32, i32, i32, i32, i32)** %biweight_func, align 16, !dbg !9713
  br label %if.end32, !dbg !9714

if.else:                                          ; preds = %lor.lhs.false17
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9715
  %weight_func30 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 58, !dbg !9717
  store void (i8*, i32, i32, i32, i32)* null, void (i8*, i32, i32, i32, i32)** %weight_func30, align 8, !dbg !9718
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9719
  %biweight_func31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 59, !dbg !9720
  store void (i8*, i8*, i32, i32, i32, i32, i32)* null, void (i8*, i8*, i32, i32, i32, i32, i32)** %biweight_func31, align 16, !dbg !9721
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then23
  ret void, !dbg !9722
}

; Function Attrs: nounwind uwtable
define internal i32 @interpolate_refplane(%struct.DiracContext* %s, %struct.DiracFrame* %ref, i32 %plane, i32 %width, i32 %height) #1 !dbg !9723 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %ref.addr = alloca %struct.DiracFrame*, align 8
  %plane.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %edge = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !9726, metadata !2947), !dbg !9727
  store %struct.DiracFrame* %ref, %struct.DiracFrame** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracFrame** %ref.addr, metadata !9728, metadata !2947), !dbg !9729
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !9730, metadata !2947), !dbg !9731
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9732, metadata !2947), !dbg !9733
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9734, metadata !2947), !dbg !9735
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9736, metadata !2947), !dbg !9737
  call void @llvm.dbg.declare(metadata i32* %edge, metadata !9738, metadata !2947), !dbg !9739
  store i32 8, i32* %edge, align 4, !dbg !9739
  %0 = load i32, i32* %plane.addr, align 4, !dbg !9740
  %idxprom = sext i32 %0 to i64, !dbg !9741
  %1 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9741
  %avframe = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %1, i32 0, i32 0, !dbg !9742
  %2 = load %struct.AVFrame*, %struct.AVFrame** %avframe, align 8, !dbg !9742
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 0, !dbg !9743
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !9741
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9741
  %4 = load i32, i32* %plane.addr, align 4, !dbg !9744
  %idxprom1 = sext i32 %4 to i64, !dbg !9745
  %5 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9745
  %hpel = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %5, i32 0, i32 2, !dbg !9746
  %arrayidx2 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel, i64 0, i64 %idxprom1, !dbg !9745
  %arrayidx3 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx2, i64 0, i64 0, !dbg !9745
  store i8* %3, i8** %arrayidx3, align 8, !dbg !9747
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9748
  %mpvencdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 1, !dbg !9749
  %draw_edges = getelementptr inbounds %struct.MpegvideoEncDSPContext, %struct.MpegvideoEncDSPContext* %mpvencdsp, i32 0, i32 5, !dbg !9750
  %7 = load void (i8*, i32, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32, i32)** %draw_edges, align 8, !dbg !9750
  %8 = load i32, i32* %plane.addr, align 4, !dbg !9751
  %idxprom4 = sext i32 %8 to i64, !dbg !9752
  %9 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9752
  %hpel5 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %9, i32 0, i32 2, !dbg !9753
  %arrayidx6 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel5, i64 0, i64 %idxprom4, !dbg !9752
  %arrayidx7 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx6, i64 0, i64 0, !dbg !9752
  %10 = load i8*, i8** %arrayidx7, align 8, !dbg !9752
  %11 = load i32, i32* %plane.addr, align 4, !dbg !9754
  %idxprom8 = sext i32 %11 to i64, !dbg !9755
  %12 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9755
  %avframe9 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %12, i32 0, i32 0, !dbg !9756
  %13 = load %struct.AVFrame*, %struct.AVFrame** %avframe9, align 8, !dbg !9756
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 1, !dbg !9757
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom8, !dbg !9755
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !9755
  %15 = load i32, i32* %width.addr, align 4, !dbg !9758
  %16 = load i32, i32* %height.addr, align 4, !dbg !9759
  %17 = load i32, i32* %edge, align 4, !dbg !9760
  %18 = load i32, i32* %edge, align 4, !dbg !9761
  call void %7(i8* %10, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 3), !dbg !9748
  %19 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9762
  %mv_precision = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %19, i32 0, i32 39, !dbg !9764
  %20 = load i8, i8* %mv_precision, align 16, !dbg !9764
  %tobool = icmp ne i8 %20, 0, !dbg !9762
  br i1 %tobool, label %if.end, label %if.then, !dbg !9765

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9766
  br label %return, !dbg !9766

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !9767
  br label %for.cond, !dbg !9769

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i32, i32* %i, align 4, !dbg !9770
  %cmp = icmp slt i32 %21, 4, !dbg !9773
  br i1 %cmp, label %for.body, label %for.end, !dbg !9774

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %i, align 4, !dbg !9775
  %idxprom11 = sext i32 %22 to i64, !dbg !9778
  %23 = load i32, i32* %plane.addr, align 4, !dbg !9779
  %idxprom12 = sext i32 %23 to i64, !dbg !9778
  %24 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9778
  %hpel_base = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %24, i32 0, i32 3, !dbg !9780
  %arrayidx13 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel_base, i64 0, i64 %idxprom12, !dbg !9778
  %arrayidx14 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx13, i64 0, i64 %idxprom11, !dbg !9778
  %25 = load i8*, i8** %arrayidx14, align 8, !dbg !9778
  %tobool15 = icmp ne i8* %25, null, !dbg !9778
  br i1 %tobool15, label %if.end28, label %if.then16, !dbg !9781

if.then16:                                        ; preds = %for.body
  %26 = load i32, i32* %height.addr, align 4, !dbg !9782
  %27 = load i32, i32* %edge, align 4, !dbg !9783
  %mul = mul nsw i32 2, %27, !dbg !9784
  %add = add nsw i32 %26, %mul, !dbg !9785
  %28 = load i32, i32* %plane.addr, align 4, !dbg !9786
  %idxprom17 = sext i32 %28 to i64, !dbg !9787
  %29 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9787
  %avframe18 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %29, i32 0, i32 0, !dbg !9788
  %30 = load %struct.AVFrame*, %struct.AVFrame** %avframe18, align 8, !dbg !9788
  %linesize19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 1, !dbg !9789
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize19, i64 0, i64 %idxprom17, !dbg !9787
  %31 = load i32, i32* %arrayidx20, align 4, !dbg !9787
  %mul21 = mul nsw i32 %add, %31, !dbg !9790
  %add22 = add nsw i32 %mul21, 32, !dbg !9791
  %conv = sext i32 %add22 to i64, !dbg !9792
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !9793
  %32 = load i32, i32* %i, align 4, !dbg !9794
  %idxprom23 = sext i32 %32 to i64, !dbg !9795
  %33 = load i32, i32* %plane.addr, align 4, !dbg !9796
  %idxprom24 = sext i32 %33 to i64, !dbg !9795
  %34 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9795
  %hpel_base25 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %34, i32 0, i32 3, !dbg !9797
  %arrayidx26 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel_base25, i64 0, i64 %idxprom24, !dbg !9795
  %arrayidx27 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx26, i64 0, i64 %idxprom23, !dbg !9795
  store i8* %call, i8** %arrayidx27, align 8, !dbg !9798
  br label %if.end28, !dbg !9795

if.end28:                                         ; preds = %if.then16, %for.body
  %35 = load i32, i32* %i, align 4, !dbg !9799
  %idxprom29 = sext i32 %35 to i64, !dbg !9801
  %36 = load i32, i32* %plane.addr, align 4, !dbg !9802
  %idxprom30 = sext i32 %36 to i64, !dbg !9801
  %37 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9801
  %hpel_base31 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %37, i32 0, i32 3, !dbg !9803
  %arrayidx32 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel_base31, i64 0, i64 %idxprom30, !dbg !9801
  %arrayidx33 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !9801
  %38 = load i8*, i8** %arrayidx33, align 8, !dbg !9801
  %tobool34 = icmp ne i8* %38, null, !dbg !9801
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !9804

if.then35:                                        ; preds = %if.end28
  store i32 -12, i32* %retval, align 4, !dbg !9805
  br label %return, !dbg !9805

if.end36:                                         ; preds = %if.end28
  %39 = load i32, i32* %i, align 4, !dbg !9807
  %idxprom37 = sext i32 %39 to i64, !dbg !9808
  %40 = load i32, i32* %plane.addr, align 4, !dbg !9809
  %idxprom38 = sext i32 %40 to i64, !dbg !9808
  %41 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9808
  %hpel_base39 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %41, i32 0, i32 3, !dbg !9810
  %arrayidx40 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel_base39, i64 0, i64 %idxprom38, !dbg !9808
  %arrayidx41 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !9808
  %42 = load i8*, i8** %arrayidx41, align 8, !dbg !9808
  %43 = load i32, i32* %edge, align 4, !dbg !9811
  %44 = load i32, i32* %plane.addr, align 4, !dbg !9812
  %idxprom42 = sext i32 %44 to i64, !dbg !9813
  %45 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9813
  %avframe43 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %45, i32 0, i32 0, !dbg !9814
  %46 = load %struct.AVFrame*, %struct.AVFrame** %avframe43, align 8, !dbg !9814
  %linesize44 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 1, !dbg !9815
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize44, i64 0, i64 %idxprom42, !dbg !9813
  %47 = load i32, i32* %arrayidx45, align 4, !dbg !9813
  %mul46 = mul nsw i32 %43, %47, !dbg !9816
  %idx.ext = sext i32 %mul46 to i64, !dbg !9817
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !9817
  %add.ptr47 = getelementptr inbounds i8, i8* %add.ptr, i64 16, !dbg !9818
  %48 = load i32, i32* %i, align 4, !dbg !9819
  %idxprom48 = sext i32 %48 to i64, !dbg !9820
  %49 = load i32, i32* %plane.addr, align 4, !dbg !9821
  %idxprom49 = sext i32 %49 to i64, !dbg !9820
  %50 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9820
  %hpel50 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %50, i32 0, i32 2, !dbg !9822
  %arrayidx51 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel50, i64 0, i64 %idxprom49, !dbg !9820
  %arrayidx52 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !9820
  store i8* %add.ptr47, i8** %arrayidx52, align 8, !dbg !9823
  br label %for.inc, !dbg !9824

for.inc:                                          ; preds = %if.end36
  %51 = load i32, i32* %i, align 4, !dbg !9825
  %inc = add nsw i32 %51, 1, !dbg !9825
  store i32 %inc, i32* %i, align 4, !dbg !9825
  br label %for.cond, !dbg !9827, !llvm.loop !9828

for.end:                                          ; preds = %for.cond
  %52 = load i32, i32* %plane.addr, align 4, !dbg !9830
  %idxprom53 = sext i32 %52 to i64, !dbg !9832
  %53 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9832
  %interpolated = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %53, i32 0, i32 1, !dbg !9833
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %interpolated, i64 0, i64 %idxprom53, !dbg !9832
  %54 = load i32, i32* %arrayidx54, align 4, !dbg !9832
  %tobool55 = icmp ne i32 %54, 0, !dbg !9832
  br i1 %tobool55, label %if.end107, label %if.then56, !dbg !9834

if.then56:                                        ; preds = %for.end
  %55 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9835
  %diracdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %55, i32 0, i32 3, !dbg !9837
  %dirac_hpel_filter = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp, i32 0, i32 0, !dbg !9838
  %56 = load void (i8*, i8*, i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i8*, i8*, i32, i32, i32)** %dirac_hpel_filter, align 16, !dbg !9838
  %57 = load i32, i32* %plane.addr, align 4, !dbg !9839
  %idxprom57 = sext i32 %57 to i64, !dbg !9840
  %58 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9840
  %hpel58 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %58, i32 0, i32 2, !dbg !9841
  %arrayidx59 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel58, i64 0, i64 %idxprom57, !dbg !9840
  %arrayidx60 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx59, i64 0, i64 1, !dbg !9840
  %59 = load i8*, i8** %arrayidx60, align 8, !dbg !9840
  %60 = load i32, i32* %plane.addr, align 4, !dbg !9842
  %idxprom61 = sext i32 %60 to i64, !dbg !9843
  %61 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9843
  %hpel62 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %61, i32 0, i32 2, !dbg !9844
  %arrayidx63 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel62, i64 0, i64 %idxprom61, !dbg !9843
  %arrayidx64 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx63, i64 0, i64 2, !dbg !9843
  %62 = load i8*, i8** %arrayidx64, align 8, !dbg !9843
  %63 = load i32, i32* %plane.addr, align 4, !dbg !9845
  %idxprom65 = sext i32 %63 to i64, !dbg !9846
  %64 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9846
  %hpel66 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %64, i32 0, i32 2, !dbg !9847
  %arrayidx67 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel66, i64 0, i64 %idxprom65, !dbg !9846
  %arrayidx68 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx67, i64 0, i64 3, !dbg !9846
  %65 = load i8*, i8** %arrayidx68, align 8, !dbg !9846
  %66 = load i32, i32* %plane.addr, align 4, !dbg !9848
  %idxprom69 = sext i32 %66 to i64, !dbg !9849
  %67 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9849
  %hpel70 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %67, i32 0, i32 2, !dbg !9850
  %arrayidx71 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel70, i64 0, i64 %idxprom69, !dbg !9849
  %arrayidx72 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx71, i64 0, i64 0, !dbg !9849
  %68 = load i8*, i8** %arrayidx72, align 8, !dbg !9849
  %69 = load i32, i32* %plane.addr, align 4, !dbg !9851
  %idxprom73 = sext i32 %69 to i64, !dbg !9852
  %70 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9852
  %avframe74 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %70, i32 0, i32 0, !dbg !9853
  %71 = load %struct.AVFrame*, %struct.AVFrame** %avframe74, align 8, !dbg !9853
  %linesize75 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %71, i32 0, i32 1, !dbg !9854
  %arrayidx76 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize75, i64 0, i64 %idxprom73, !dbg !9852
  %72 = load i32, i32* %arrayidx76, align 4, !dbg !9852
  %73 = load i32, i32* %width.addr, align 4, !dbg !9855
  %74 = load i32, i32* %height.addr, align 4, !dbg !9856
  call void %56(i8* %59, i8* %62, i8* %65, i8* %68, i32 %72, i32 %73, i32 %74), !dbg !9835
  %75 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9857
  %mpvencdsp77 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %75, i32 0, i32 1, !dbg !9858
  %draw_edges78 = getelementptr inbounds %struct.MpegvideoEncDSPContext, %struct.MpegvideoEncDSPContext* %mpvencdsp77, i32 0, i32 5, !dbg !9859
  %76 = load void (i8*, i32, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32, i32)** %draw_edges78, align 8, !dbg !9859
  %77 = load i32, i32* %plane.addr, align 4, !dbg !9860
  %idxprom79 = sext i32 %77 to i64, !dbg !9861
  %78 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9861
  %hpel80 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %78, i32 0, i32 2, !dbg !9862
  %arrayidx81 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel80, i64 0, i64 %idxprom79, !dbg !9861
  %arrayidx82 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx81, i64 0, i64 1, !dbg !9861
  %79 = load i8*, i8** %arrayidx82, align 8, !dbg !9861
  %80 = load i32, i32* %plane.addr, align 4, !dbg !9863
  %idxprom83 = sext i32 %80 to i64, !dbg !9864
  %81 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9864
  %avframe84 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %81, i32 0, i32 0, !dbg !9865
  %82 = load %struct.AVFrame*, %struct.AVFrame** %avframe84, align 8, !dbg !9865
  %linesize85 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 1, !dbg !9866
  %arrayidx86 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize85, i64 0, i64 %idxprom83, !dbg !9864
  %83 = load i32, i32* %arrayidx86, align 4, !dbg !9864
  %84 = load i32, i32* %width.addr, align 4, !dbg !9867
  %85 = load i32, i32* %height.addr, align 4, !dbg !9868
  %86 = load i32, i32* %edge, align 4, !dbg !9869
  %87 = load i32, i32* %edge, align 4, !dbg !9870
  call void %76(i8* %79, i32 %83, i32 %84, i32 %85, i32 %86, i32 %87, i32 3), !dbg !9857
  %88 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9871
  %mpvencdsp87 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %88, i32 0, i32 1, !dbg !9872
  %draw_edges88 = getelementptr inbounds %struct.MpegvideoEncDSPContext, %struct.MpegvideoEncDSPContext* %mpvencdsp87, i32 0, i32 5, !dbg !9873
  %89 = load void (i8*, i32, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32, i32)** %draw_edges88, align 8, !dbg !9873
  %90 = load i32, i32* %plane.addr, align 4, !dbg !9874
  %idxprom89 = sext i32 %90 to i64, !dbg !9875
  %91 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9875
  %hpel90 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %91, i32 0, i32 2, !dbg !9876
  %arrayidx91 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel90, i64 0, i64 %idxprom89, !dbg !9875
  %arrayidx92 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx91, i64 0, i64 2, !dbg !9875
  %92 = load i8*, i8** %arrayidx92, align 8, !dbg !9875
  %93 = load i32, i32* %plane.addr, align 4, !dbg !9877
  %idxprom93 = sext i32 %93 to i64, !dbg !9878
  %94 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9878
  %avframe94 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %94, i32 0, i32 0, !dbg !9879
  %95 = load %struct.AVFrame*, %struct.AVFrame** %avframe94, align 8, !dbg !9879
  %linesize95 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %95, i32 0, i32 1, !dbg !9880
  %arrayidx96 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize95, i64 0, i64 %idxprom93, !dbg !9878
  %96 = load i32, i32* %arrayidx96, align 4, !dbg !9878
  %97 = load i32, i32* %width.addr, align 4, !dbg !9881
  %98 = load i32, i32* %height.addr, align 4, !dbg !9882
  %99 = load i32, i32* %edge, align 4, !dbg !9883
  %100 = load i32, i32* %edge, align 4, !dbg !9884
  call void %89(i8* %92, i32 %96, i32 %97, i32 %98, i32 %99, i32 %100, i32 3), !dbg !9871
  %101 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9885
  %mpvencdsp97 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %101, i32 0, i32 1, !dbg !9886
  %draw_edges98 = getelementptr inbounds %struct.MpegvideoEncDSPContext, %struct.MpegvideoEncDSPContext* %mpvencdsp97, i32 0, i32 5, !dbg !9887
  %102 = load void (i8*, i32, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32, i32)** %draw_edges98, align 8, !dbg !9887
  %103 = load i32, i32* %plane.addr, align 4, !dbg !9888
  %idxprom99 = sext i32 %103 to i64, !dbg !9889
  %104 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9889
  %hpel100 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %104, i32 0, i32 2, !dbg !9890
  %arrayidx101 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel100, i64 0, i64 %idxprom99, !dbg !9889
  %arrayidx102 = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx101, i64 0, i64 3, !dbg !9889
  %105 = load i8*, i8** %arrayidx102, align 8, !dbg !9889
  %106 = load i32, i32* %plane.addr, align 4, !dbg !9891
  %idxprom103 = sext i32 %106 to i64, !dbg !9892
  %107 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9892
  %avframe104 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %107, i32 0, i32 0, !dbg !9893
  %108 = load %struct.AVFrame*, %struct.AVFrame** %avframe104, align 8, !dbg !9893
  %linesize105 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 1, !dbg !9894
  %arrayidx106 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize105, i64 0, i64 %idxprom103, !dbg !9892
  %109 = load i32, i32* %arrayidx106, align 4, !dbg !9892
  %110 = load i32, i32* %width.addr, align 4, !dbg !9895
  %111 = load i32, i32* %height.addr, align 4, !dbg !9896
  %112 = load i32, i32* %edge, align 4, !dbg !9897
  %113 = load i32, i32* %edge, align 4, !dbg !9898
  call void %102(i8* %105, i32 %109, i32 %110, i32 %111, i32 %112, i32 %113, i32 3), !dbg !9885
  br label %if.end107, !dbg !9899

if.end107:                                        ; preds = %if.then56, %for.end
  %114 = load i32, i32* %plane.addr, align 4, !dbg !9900
  %idxprom108 = sext i32 %114 to i64, !dbg !9901
  %115 = load %struct.DiracFrame*, %struct.DiracFrame** %ref.addr, align 8, !dbg !9901
  %interpolated109 = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %115, i32 0, i32 1, !dbg !9902
  %arrayidx110 = getelementptr inbounds [3 x i32], [3 x i32]* %interpolated109, i64 0, i64 %idxprom108, !dbg !9901
  store i32 1, i32* %arrayidx110, align 4, !dbg !9903
  store i32 0, i32* %retval, align 4, !dbg !9904
  br label %return, !dbg !9904

return:                                           ; preds = %if.end107, %if.then35, %if.then
  %116 = load i32, i32* %retval, align 4, !dbg !9905
  ret i32 %116, !dbg !9905
}

; Function Attrs: nounwind uwtable
define internal void @init_obmc_weights(%struct.DiracContext* %s, %struct.Plane* %p, i32 %by) #1 !dbg !9906 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %p.addr = alloca %struct.Plane*, align 8
  %by.addr = alloca i32, align 4
  %top = alloca i32, align 4
  %bottom = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !9909, metadata !2947), !dbg !9910
  store %struct.Plane* %p, %struct.Plane** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Plane** %p.addr, metadata !9911, metadata !2947), !dbg !9912
  store i32 %by, i32* %by.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %by.addr, metadata !9913, metadata !2947), !dbg !9914
  call void @llvm.dbg.declare(metadata i32* %top, metadata !9915, metadata !2947), !dbg !9916
  %0 = load i32, i32* %by.addr, align 4, !dbg !9917
  %tobool = icmp ne i32 %0, 0, !dbg !9918
  %lnot = xor i1 %tobool, true, !dbg !9918
  %lnot.ext = zext i1 %lnot to i32, !dbg !9918
  store i32 %lnot.ext, i32* %top, align 4, !dbg !9916
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !9919, metadata !2947), !dbg !9920
  %1 = load i32, i32* %by.addr, align 4, !dbg !9921
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9922
  %blheight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 43, !dbg !9923
  %3 = load i32, i32* %blheight, align 16, !dbg !9923
  %sub = sub nsw i32 %3, 1, !dbg !9924
  %cmp = icmp eq i32 %1, %sub, !dbg !9925
  %conv = zext i1 %cmp to i32, !dbg !9925
  store i32 %conv, i32* %bottom, align 4, !dbg !9920
  %4 = load i32, i32* %top, align 4, !dbg !9926
  %tobool1 = icmp ne i32 %4, 0, !dbg !9926
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !9928

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %bottom, align 4, !dbg !9929
  %tobool2 = icmp ne i32 %5, 0, !dbg !9929
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !9931

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %by.addr, align 4, !dbg !9932
  %cmp4 = icmp eq i32 %6, 1, !dbg !9934
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9935

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %7 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !9936
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9938
  %obmc_weight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 54, !dbg !9939
  %arrayidx = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight, i64 0, i64 0, !dbg !9938
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx, i32 0, i32 0, !dbg !9938
  %9 = load i32, i32* %top, align 4, !dbg !9940
  %10 = load i32, i32* %bottom, align 4, !dbg !9941
  call void @init_obmc_weight(%struct.Plane* %7, i8* %arraydecay, i32 32, i32 1, i32 0, i32 %9, i32 %10), !dbg !9942
  %11 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !9943
  %12 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9944
  %obmc_weight6 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %12, i32 0, i32 54, !dbg !9945
  %arrayidx7 = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight6, i64 0, i64 1, !dbg !9944
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx7, i32 0, i32 0, !dbg !9944
  %13 = load i32, i32* %top, align 4, !dbg !9946
  %14 = load i32, i32* %bottom, align 4, !dbg !9947
  call void @init_obmc_weight(%struct.Plane* %11, i8* %arraydecay8, i32 32, i32 0, i32 0, i32 %13, i32 %14), !dbg !9948
  %15 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !9949
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9950
  %obmc_weight9 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 54, !dbg !9951
  %arrayidx10 = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight9, i64 0, i64 2, !dbg !9950
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx10, i32 0, i32 0, !dbg !9950
  %17 = load i32, i32* %top, align 4, !dbg !9952
  %18 = load i32, i32* %bottom, align 4, !dbg !9953
  call void @init_obmc_weight(%struct.Plane* %15, i8* %arraydecay11, i32 32, i32 0, i32 1, i32 %17, i32 %18), !dbg !9954
  br label %if.end, !dbg !9955

if.end:                                           ; preds = %if.then, %lor.lhs.false3
  ret void, !dbg !9956
}

; Function Attrs: nounwind uwtable
define internal void @mc_row(%struct.DiracContext* %s, %struct.DiracBlock* %block, i16* %mctmp, i32 %plane, i32 %dsty) #1 !dbg !9957 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %block.addr = alloca %struct.DiracBlock*, align 8
  %mctmp.addr = alloca i16*, align 8
  %plane.addr = alloca i32, align 4
  %dsty.addr = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %x = alloca i32, align 4
  %dstx = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !9960, metadata !2947), !dbg !9961
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !9962, metadata !2947), !dbg !9963
  store i16* %mctmp, i16** %mctmp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mctmp.addr, metadata !9964, metadata !2947), !dbg !9965
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !9966, metadata !2947), !dbg !9967
  store i32 %dsty, i32* %dsty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dsty.addr, metadata !9968, metadata !2947), !dbg !9969
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !9970, metadata !2947), !dbg !9971
  %0 = load i32, i32* %plane.addr, align 4, !dbg !9972
  %idxprom = sext i32 %0 to i64, !dbg !9973
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9973
  %plane1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 10, !dbg !9974
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane1, i64 0, i64 %idxprom, !dbg !9973
  store %struct.Plane* %arrayidx, %struct.Plane** %p, align 8, !dbg !9971
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9975, metadata !2947), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %dstx, metadata !9977, metadata !2947), !dbg !9978
  %2 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !9979
  %xbsep = getelementptr inbounds %struct.Plane, %struct.Plane* %2, i32 0, i32 6, !dbg !9980
  %3 = load i8, i8* %xbsep, align 2, !dbg !9980
  %conv = zext i8 %3 to i32, !dbg !9979
  %4 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !9981
  %xoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %4, i32 0, i32 8, !dbg !9982
  %5 = load i8, i8* %xoffset, align 4, !dbg !9982
  %conv2 = zext i8 %5 to i32, !dbg !9981
  %sub = sub nsw i32 %conv, %conv2, !dbg !9983
  store i32 %sub, i32* %dstx, align 4, !dbg !9978
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9984
  %7 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !9985
  %8 = load i16*, i16** %mctmp.addr, align 8, !dbg !9986
  %9 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !9987
  %obmc_weight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %9, i32 0, i32 54, !dbg !9988
  %arrayidx3 = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight, i64 0, i64 0, !dbg !9987
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx3, i32 0, i32 0, !dbg !9987
  %10 = load i32, i32* %plane.addr, align 4, !dbg !9989
  %11 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !9990
  %xoffset4 = getelementptr inbounds %struct.Plane, %struct.Plane* %11, i32 0, i32 8, !dbg !9991
  %12 = load i8, i8* %xoffset4, align 4, !dbg !9991
  %conv5 = zext i8 %12 to i32, !dbg !9990
  %sub6 = sub nsw i32 0, %conv5, !dbg !9992
  %13 = load i32, i32* %dsty.addr, align 4, !dbg !9993
  call void @block_mc(%struct.DiracContext* %6, %struct.DiracBlock* %7, i16* %8, i8* %arraydecay, i32 %10, i32 %sub6, i32 %13), !dbg !9994
  %14 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !9995
  %xbsep7 = getelementptr inbounds %struct.Plane, %struct.Plane* %14, i32 0, i32 6, !dbg !9996
  %15 = load i8, i8* %xbsep7, align 2, !dbg !9996
  %conv8 = zext i8 %15 to i32, !dbg !9995
  %16 = load i16*, i16** %mctmp.addr, align 8, !dbg !9997
  %idx.ext = sext i32 %conv8 to i64, !dbg !9997
  %add.ptr = getelementptr inbounds i16, i16* %16, i64 %idx.ext, !dbg !9997
  store i16* %add.ptr, i16** %mctmp.addr, align 8, !dbg !9997
  store i32 1, i32* %x, align 4, !dbg !9998
  br label %for.cond, !dbg !10000

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %x, align 4, !dbg !10001
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10004
  %blwidth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 42, !dbg !10005
  %19 = load i32, i32* %blwidth, align 4, !dbg !10005
  %sub9 = sub nsw i32 %19, 1, !dbg !10006
  %cmp = icmp slt i32 %17, %sub9, !dbg !10007
  br i1 %cmp, label %for.body, label %for.end, !dbg !10008

for.body:                                         ; preds = %for.cond
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10009
  %21 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !10011
  %22 = load i32, i32* %x, align 4, !dbg !10012
  %idx.ext11 = sext i32 %22 to i64, !dbg !10013
  %add.ptr12 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %21, i64 %idx.ext11, !dbg !10013
  %23 = load i16*, i16** %mctmp.addr, align 8, !dbg !10014
  %24 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10015
  %obmc_weight13 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %24, i32 0, i32 54, !dbg !10016
  %arrayidx14 = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight13, i64 0, i64 1, !dbg !10015
  %arraydecay15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx14, i32 0, i32 0, !dbg !10015
  %25 = load i32, i32* %plane.addr, align 4, !dbg !10017
  %26 = load i32, i32* %dstx, align 4, !dbg !10018
  %27 = load i32, i32* %dsty.addr, align 4, !dbg !10019
  call void @block_mc(%struct.DiracContext* %20, %struct.DiracBlock* %add.ptr12, i16* %23, i8* %arraydecay15, i32 %25, i32 %26, i32 %27), !dbg !10020
  %28 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !10021
  %xbsep16 = getelementptr inbounds %struct.Plane, %struct.Plane* %28, i32 0, i32 6, !dbg !10022
  %29 = load i8, i8* %xbsep16, align 2, !dbg !10022
  %conv17 = zext i8 %29 to i32, !dbg !10021
  %30 = load i32, i32* %dstx, align 4, !dbg !10023
  %add = add nsw i32 %30, %conv17, !dbg !10023
  store i32 %add, i32* %dstx, align 4, !dbg !10023
  %31 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !10024
  %xbsep18 = getelementptr inbounds %struct.Plane, %struct.Plane* %31, i32 0, i32 6, !dbg !10025
  %32 = load i8, i8* %xbsep18, align 2, !dbg !10025
  %conv19 = zext i8 %32 to i32, !dbg !10024
  %33 = load i16*, i16** %mctmp.addr, align 8, !dbg !10026
  %idx.ext20 = sext i32 %conv19 to i64, !dbg !10026
  %add.ptr21 = getelementptr inbounds i16, i16* %33, i64 %idx.ext20, !dbg !10026
  store i16* %add.ptr21, i16** %mctmp.addr, align 8, !dbg !10026
  br label %for.inc, !dbg !10027

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %x, align 4, !dbg !10028
  %inc = add nsw i32 %34, 1, !dbg !10028
  store i32 %inc, i32* %x, align 4, !dbg !10028
  br label %for.cond, !dbg !10030, !llvm.loop !10031

for.end:                                          ; preds = %for.cond
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10033
  %36 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !10034
  %37 = load i32, i32* %x, align 4, !dbg !10035
  %idx.ext22 = sext i32 %37 to i64, !dbg !10036
  %add.ptr23 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %36, i64 %idx.ext22, !dbg !10036
  %38 = load i16*, i16** %mctmp.addr, align 8, !dbg !10037
  %39 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10038
  %obmc_weight24 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %39, i32 0, i32 54, !dbg !10039
  %arrayidx25 = getelementptr inbounds [3 x [1024 x i8]], [3 x [1024 x i8]]* %obmc_weight24, i64 0, i64 2, !dbg !10038
  %arraydecay26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %arrayidx25, i32 0, i32 0, !dbg !10038
  %40 = load i32, i32* %plane.addr, align 4, !dbg !10040
  %41 = load i32, i32* %dstx, align 4, !dbg !10041
  %42 = load i32, i32* %dsty.addr, align 4, !dbg !10042
  call void @block_mc(%struct.DiracContext* %35, %struct.DiracBlock* %add.ptr23, i16* %38, i8* %arraydecay26, i32 %40, i32 %41, i32 %42), !dbg !10043
  ret void, !dbg !10044
}

declare i8* @av_realloc_f(i8*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @subband_coeffs(%struct.DiracContext* %s, i32 %x, i32 %y, i32 %p, %struct.SliceCoeffs* %c) #1 !dbg !10045 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %p.addr = alloca i32, align 4
  %c.addr = alloca %struct.SliceCoeffs*, align 8
  %level = alloca i32, align 4
  %coef = alloca i32, align 4
  %o = alloca %struct.SliceCoeffs*, align 8
  %b = alloca %struct.SubBand*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !10049, metadata !2947), !dbg !10050
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10051, metadata !2947), !dbg !10052
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10053, metadata !2947), !dbg !10054
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !10055, metadata !2947), !dbg !10056
  store %struct.SliceCoeffs* %c, %struct.SliceCoeffs** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SliceCoeffs** %c.addr, metadata !10057, metadata !2947), !dbg !10058
  call void @llvm.dbg.declare(metadata i32* %level, metadata !10059, metadata !2947), !dbg !10060
  call void @llvm.dbg.declare(metadata i32* %coef, metadata !10061, metadata !2947), !dbg !10062
  store i32 0, i32* %coef, align 4, !dbg !10062
  store i32 0, i32* %level, align 4, !dbg !10063
  br label %for.cond, !dbg !10065

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %level, align 4, !dbg !10066
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10069
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 24, !dbg !10070
  %2 = load i32, i32* %wavelet_depth, align 4, !dbg !10070
  %cmp = icmp ult i32 %0, %2, !dbg !10071
  br i1 %cmp, label %for.body, label %for.end, !dbg !10072

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SliceCoeffs** %o, metadata !10073, metadata !2947), !dbg !10075
  %3 = load i32, i32* %level, align 4, !dbg !10076
  %idxprom = sext i32 %3 to i64, !dbg !10077
  %4 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c.addr, align 8, !dbg !10077
  %arrayidx = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %4, i64 %idxprom, !dbg !10077
  store %struct.SliceCoeffs* %arrayidx, %struct.SliceCoeffs** %o, align 8, !dbg !10075
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b, metadata !10078, metadata !2947), !dbg !10079
  %5 = load i32, i32* %level, align 4, !dbg !10080
  %idxprom1 = sext i32 %5 to i64, !dbg !10081
  %6 = load i32, i32* %p.addr, align 4, !dbg !10082
  %idxprom2 = sext i32 %6 to i64, !dbg !10081
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10081
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 10, !dbg !10083
  %arrayidx3 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom2, !dbg !10081
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx3, i32 0, i32 10, !dbg !10084
  %arrayidx4 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom1, !dbg !10081
  %arrayidx5 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx4, i64 0, i64 3, !dbg !10081
  store %struct.SubBand* %arrayidx5, %struct.SubBand** %b, align 8, !dbg !10079
  %8 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !10085
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %8, i32 0, i32 4, !dbg !10086
  %9 = load i32, i32* %height, align 8, !dbg !10086
  %10 = load i32, i32* %y.addr, align 4, !dbg !10087
  %mul = mul nsw i32 %9, %10, !dbg !10088
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10089
  %num_y = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 29, !dbg !10090
  %12 = load i32, i32* %num_y, align 16, !dbg !10090
  %div = udiv i32 %mul, %12, !dbg !10091
  %13 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10092
  %top = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %13, i32 0, i32 1, !dbg !10093
  store i32 %div, i32* %top, align 4, !dbg !10094
  %14 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !10095
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 3, !dbg !10096
  %15 = load i32, i32* %width, align 4, !dbg !10096
  %16 = load i32, i32* %x.addr, align 4, !dbg !10097
  %mul6 = mul nsw i32 %15, %16, !dbg !10098
  %17 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10099
  %num_x = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %17, i32 0, i32 28, !dbg !10100
  %18 = load i32, i32* %num_x, align 4, !dbg !10100
  %div7 = udiv i32 %mul6, %18, !dbg !10101
  %19 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10102
  %left = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %19, i32 0, i32 0, !dbg !10103
  store i32 %div7, i32* %left, align 4, !dbg !10104
  %20 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !10105
  %width8 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %20, i32 0, i32 3, !dbg !10106
  %21 = load i32, i32* %width8, align 4, !dbg !10106
  %22 = load i32, i32* %x.addr, align 4, !dbg !10107
  %add = add nsw i32 %22, 1, !dbg !10108
  %mul9 = mul nsw i32 %21, %add, !dbg !10109
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10110
  %num_x10 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 28, !dbg !10111
  %24 = load i32, i32* %num_x10, align 4, !dbg !10111
  %div11 = udiv i32 %mul9, %24, !dbg !10112
  %25 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10113
  %left12 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %25, i32 0, i32 0, !dbg !10114
  %26 = load i32, i32* %left12, align 4, !dbg !10114
  %sub = sub i32 %div11, %26, !dbg !10115
  %27 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10116
  %tot_h = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %27, i32 0, i32 2, !dbg !10117
  store i32 %sub, i32* %tot_h, align 4, !dbg !10118
  %28 = load %struct.SubBand*, %struct.SubBand** %b, align 8, !dbg !10119
  %height13 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %28, i32 0, i32 4, !dbg !10120
  %29 = load i32, i32* %height13, align 8, !dbg !10120
  %30 = load i32, i32* %y.addr, align 4, !dbg !10121
  %add14 = add nsw i32 %30, 1, !dbg !10122
  %mul15 = mul nsw i32 %29, %add14, !dbg !10123
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10124
  %num_y16 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 29, !dbg !10125
  %32 = load i32, i32* %num_y16, align 16, !dbg !10125
  %div17 = udiv i32 %mul15, %32, !dbg !10126
  %33 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10127
  %top18 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %33, i32 0, i32 1, !dbg !10128
  %34 = load i32, i32* %top18, align 4, !dbg !10128
  %sub19 = sub i32 %div17, %34, !dbg !10129
  %35 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10130
  %tot_v = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %35, i32 0, i32 3, !dbg !10131
  store i32 %sub19, i32* %tot_v, align 4, !dbg !10132
  %36 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10133
  %tot_h20 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %36, i32 0, i32 2, !dbg !10134
  %37 = load i32, i32* %tot_h20, align 4, !dbg !10134
  %38 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10135
  %tot_v21 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %38, i32 0, i32 3, !dbg !10136
  %39 = load i32, i32* %tot_v21, align 4, !dbg !10136
  %mul22 = mul nsw i32 %37, %39, !dbg !10137
  %40 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10138
  %tot = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %40, i32 0, i32 4, !dbg !10139
  store i32 %mul22, i32* %tot, align 4, !dbg !10140
  %41 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %o, align 8, !dbg !10141
  %tot23 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %41, i32 0, i32 4, !dbg !10142
  %42 = load i32, i32* %tot23, align 4, !dbg !10142
  %43 = load i32, i32* %level, align 4, !dbg !10143
  %tobool = icmp ne i32 %43, 0, !dbg !10144
  %lnot = xor i1 %tobool, true, !dbg !10144
  %lnot24 = xor i1 %lnot, true, !dbg !10145
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !10145
  %sub25 = sub nsw i32 4, %lnot.ext, !dbg !10146
  %mul26 = mul nsw i32 %42, %sub25, !dbg !10147
  %44 = load i32, i32* %coef, align 4, !dbg !10148
  %add27 = add nsw i32 %44, %mul26, !dbg !10148
  store i32 %add27, i32* %coef, align 4, !dbg !10148
  br label %for.inc, !dbg !10149

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %level, align 4, !dbg !10150
  %inc = add nsw i32 %45, 1, !dbg !10150
  store i32 %inc, i32* %level, align 4, !dbg !10150
  br label %for.cond, !dbg !10152, !llvm.loop !10153

for.end:                                          ; preds = %for.cond
  %46 = load i32, i32* %coef, align 4, !dbg !10155
  ret i32 %46, !dbg !10156
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #5 !dbg !10157 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10158, metadata !2947), !dbg !10159
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10160
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !10161
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !10161
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10162
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !10163
  %sub = sub nsw i32 %1, %call, !dbg !10164
  ret i32 %sub, !dbg !10165
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_hq_slice_row(%struct.AVCodecContext* %avctx, i8* %arg, i32 %jobnr, i32 %threadnr) #1 !dbg !10166 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %jobnr.addr = alloca i32, align 4
  %threadnr.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.DiracContext*, align 8
  %slices = alloca %struct.DiracSlice*, align 8
  %thread_buf = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !10169, metadata !2947), !dbg !10170
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10171, metadata !2947), !dbg !10172
  store i32 %jobnr, i32* %jobnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %jobnr.addr, metadata !10173, metadata !2947), !dbg !10174
  store i32 %threadnr, i32* %threadnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threadnr.addr, metadata !10175, metadata !2947), !dbg !10176
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10177, metadata !2947), !dbg !10178
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !10179, metadata !2947), !dbg !10180
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10181
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !10182
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10182
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !10181
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !10180
  call void @llvm.dbg.declare(metadata %struct.DiracSlice** %slices, metadata !10183, metadata !2947), !dbg !10184
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !10185
  %4 = bitcast i8* %3 to %struct.DiracSlice*, !dbg !10186
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10187
  %num_x = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 28, !dbg !10188
  %6 = load i32, i32* %num_x, align 4, !dbg !10188
  %7 = load i32, i32* %jobnr.addr, align 4, !dbg !10189
  %mul = mul i32 %6, %7, !dbg !10190
  %idx.ext = zext i32 %mul to i64, !dbg !10191
  %add.ptr = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %4, i64 %idx.ext, !dbg !10191
  store %struct.DiracSlice* %add.ptr, %struct.DiracSlice** %slices, align 8, !dbg !10184
  call void @llvm.dbg.declare(metadata i8** %thread_buf, metadata !10192, metadata !2947), !dbg !10193
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10194
  %thread_buf_size = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 32, !dbg !10195
  %9 = load i32, i32* %thread_buf_size, align 4, !dbg !10195
  %10 = load i32, i32* %threadnr.addr, align 4, !dbg !10196
  %mul1 = mul nsw i32 %9, %10, !dbg !10197
  %idxprom = sext i32 %mul1 to i64, !dbg !10198
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10198
  %thread_buf2 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 30, !dbg !10199
  %12 = load i8*, i8** %thread_buf2, align 8, !dbg !10199
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %idxprom, !dbg !10198
  store i8* %arrayidx, i8** %thread_buf, align 8, !dbg !10193
  store i32 0, i32* %i, align 4, !dbg !10200
  br label %for.cond, !dbg !10202

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %i, align 4, !dbg !10203
  %14 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10206
  %num_x3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %14, i32 0, i32 28, !dbg !10207
  %15 = load i32, i32* %num_x3, align 4, !dbg !10207
  %cmp = icmp ult i32 %13, %15, !dbg !10208
  br i1 %cmp, label %for.body, label %for.end, !dbg !10209

for.body:                                         ; preds = %for.cond
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10210
  %17 = load i32, i32* %i, align 4, !dbg !10211
  %idxprom4 = sext i32 %17 to i64, !dbg !10212
  %18 = load %struct.DiracSlice*, %struct.DiracSlice** %slices, align 8, !dbg !10212
  %arrayidx5 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %18, i64 %idxprom4, !dbg !10212
  %19 = load i8*, i8** %thread_buf, align 8, !dbg !10213
  %call = call i32 @decode_hq_slice(%struct.DiracContext* %16, %struct.DiracSlice* %arrayidx5, i8* %19), !dbg !10214
  br label %for.inc, !dbg !10214

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !10215
  %inc = add nsw i32 %20, 1, !dbg !10215
  store i32 %inc, i32* %i, align 4, !dbg !10215
  br label %for.cond, !dbg !10217, !llvm.loop !10218

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !10220
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_lowdelay_slice(%struct.AVCodecContext* %avctx, i8* %arg) #1 !dbg !10221 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %s = alloca %struct.DiracContext*, align 8
  %slice = alloca %struct.DiracSlice*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %orientation = alloca i32, align 4
  %level = alloca i32, align 4
  %quant = alloca i32, align 4
  %chroma_bits = alloca i32, align 4
  %chroma_end = alloca i32, align 4
  %quant_base = alloca i32, align 4
  %length_bits = alloca i32, align 4
  %luma_bits = alloca i32, align 4
  %luma_end = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !10224, metadata !2947), !dbg !10225
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10226, metadata !2947), !dbg !10227
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !10228, metadata !2947), !dbg !10229
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !10230
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !10231
  %1 = load i8*, i8** %priv_data, align 8, !dbg !10231
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !10230
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !10229
  call void @llvm.dbg.declare(metadata %struct.DiracSlice** %slice, metadata !10232, metadata !2947), !dbg !10233
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !10234
  %4 = bitcast i8* %3 to %struct.DiracSlice*, !dbg !10234
  store %struct.DiracSlice* %4, %struct.DiracSlice** %slice, align 8, !dbg !10233
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !10235, metadata !2947), !dbg !10236
  %5 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10237
  %gb1 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %5, i32 0, i32 0, !dbg !10238
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !10236
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !10239, metadata !2947), !dbg !10240
  call void @llvm.dbg.declare(metadata i32* %level, metadata !10241, metadata !2947), !dbg !10242
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !10243, metadata !2947), !dbg !10244
  call void @llvm.dbg.declare(metadata i32* %chroma_bits, metadata !10245, metadata !2947), !dbg !10246
  call void @llvm.dbg.declare(metadata i32* %chroma_end, metadata !10247, metadata !2947), !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %quant_base, metadata !10249, metadata !2947), !dbg !10250
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10251
  %call = call i32 @get_bits(%struct.GetBitContext* %6, i32 7), !dbg !10252
  store i32 %call, i32* %quant_base, align 4, !dbg !10250
  call void @llvm.dbg.declare(metadata i32* %length_bits, metadata !10253, metadata !2947), !dbg !10254
  %7 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10255
  %bytes = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %7, i32 0, i32 3, !dbg !10256
  %8 = load i32, i32* %bytes, align 8, !dbg !10256
  %mul = mul nsw i32 8, %8, !dbg !10257
  %or = or i32 %mul, 1, !dbg !10258
  %9 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !10259
  %sub = sub nsw i32 31, %9, !dbg !10260
  %add = add nsw i32 %sub, 1, !dbg !10261
  store i32 %add, i32* %length_bits, align 4, !dbg !10254
  call void @llvm.dbg.declare(metadata i32* %luma_bits, metadata !10262, metadata !2947), !dbg !10263
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10264
  %11 = load i32, i32* %length_bits, align 4, !dbg !10265
  %call2 = call i32 @get_bits_long(%struct.GetBitContext* %10, i32 %11), !dbg !10266
  store i32 %call2, i32* %luma_bits, align 4, !dbg !10263
  call void @llvm.dbg.declare(metadata i32* %luma_end, metadata !10267, metadata !2947), !dbg !10268
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10269
  %call3 = call i32 @get_bits_count(%struct.GetBitContext* %12), !dbg !10270
  %13 = load i32, i32* %luma_bits, align 4, !dbg !10271
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10272
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %14), !dbg !10273
  %cmp = icmp sgt i32 %13, %call4, !dbg !10275
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10276

cond.true:                                        ; preds = %entry
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10277
  %call5 = call i32 @get_bits_left(%struct.GetBitContext* %15), !dbg !10279
  br label %cond.end, !dbg !10280

cond.false:                                       ; preds = %entry
  %16 = load i32, i32* %luma_bits, align 4, !dbg !10281
  br label %cond.end, !dbg !10283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call5, %cond.true ], [ %16, %cond.false ], !dbg !10284
  %add6 = add nsw i32 %call3, %cond, !dbg !10286
  store i32 %add6, i32* %luma_end, align 4, !dbg !10287
  store i32 0, i32* %level, align 4, !dbg !10288
  br label %for.cond, !dbg !10290

for.cond:                                         ; preds = %for.inc35, %cond.end
  %17 = load i32, i32* %level, align 4, !dbg !10291
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10294
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 24, !dbg !10295
  %19 = load i32, i32* %wavelet_depth, align 4, !dbg !10295
  %cmp7 = icmp ult i32 %17, %19, !dbg !10296
  br i1 %cmp7, label %for.body, label %for.end37, !dbg !10297

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %level, align 4, !dbg !10298
  %tobool = icmp ne i32 %20, 0, !dbg !10300
  %lnot = xor i1 %tobool, true, !dbg !10300
  %lnot8 = xor i1 %lnot, true, !dbg !10301
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !10301
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !10302
  br label %for.cond9, !dbg !10303

for.cond9:                                        ; preds = %for.inc, %for.body
  %21 = load i32, i32* %orientation, align 4, !dbg !10304
  %cmp10 = icmp ult i32 %21, 4, !dbg !10307
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !10308

for.body11:                                       ; preds = %for.cond9
  %22 = load i32, i32* %quant_base, align 4, !dbg !10309
  %23 = load i32, i32* %orientation, align 4, !dbg !10311
  %idxprom = zext i32 %23 to i64, !dbg !10312
  %24 = load i32, i32* %level, align 4, !dbg !10313
  %idxprom12 = sext i32 %24 to i64, !dbg !10312
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10312
  %lowdelay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 36, !dbg !10314
  %quant13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay, i32 0, i32 1, !dbg !10315
  %arrayidx = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant13, i64 0, i64 %idxprom12, !dbg !10312
  %arrayidx14 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !10312
  %26 = load i8, i8* %arrayidx14, align 1, !dbg !10312
  %conv = zext i8 %26 to i32, !dbg !10312
  %sub15 = sub nsw i32 %22, %conv, !dbg !10316
  %cmp16 = icmp sgt i32 %sub15, 0, !dbg !10317
  br i1 %cmp16, label %cond.true18, label %cond.false27, !dbg !10318

cond.true18:                                      ; preds = %for.body11
  %27 = load i32, i32* %quant_base, align 4, !dbg !10319
  %28 = load i32, i32* %orientation, align 4, !dbg !10321
  %idxprom19 = zext i32 %28 to i64, !dbg !10322
  %29 = load i32, i32* %level, align 4, !dbg !10323
  %idxprom20 = sext i32 %29 to i64, !dbg !10322
  %30 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10322
  %lowdelay21 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %30, i32 0, i32 36, !dbg !10324
  %quant22 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay21, i32 0, i32 1, !dbg !10325
  %arrayidx23 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant22, i64 0, i64 %idxprom20, !dbg !10322
  %arrayidx24 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx23, i64 0, i64 %idxprom19, !dbg !10322
  %31 = load i8, i8* %arrayidx24, align 1, !dbg !10322
  %conv25 = zext i8 %31 to i32, !dbg !10322
  %sub26 = sub nsw i32 %27, %conv25, !dbg !10326
  br label %cond.end28, !dbg !10327

cond.false27:                                     ; preds = %for.body11
  br label %cond.end28, !dbg !10328

cond.end28:                                       ; preds = %cond.false27, %cond.true18
  %cond29 = phi i32 [ %sub26, %cond.true18 ], [ 0, %cond.false27 ], !dbg !10330
  store i32 %cond29, i32* %quant, align 4, !dbg !10332
  %32 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10333
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10334
  %34 = load i32, i32* %quant, align 4, !dbg !10335
  %35 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10336
  %slice_x = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %35, i32 0, i32 1, !dbg !10337
  %36 = load i32, i32* %slice_x, align 8, !dbg !10337
  %37 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10338
  %slice_y = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %37, i32 0, i32 2, !dbg !10339
  %38 = load i32, i32* %slice_y, align 4, !dbg !10339
  %39 = load i32, i32* %luma_end, align 4, !dbg !10340
  %40 = load i32, i32* %orientation, align 4, !dbg !10341
  %idxprom30 = zext i32 %40 to i64, !dbg !10342
  %41 = load i32, i32* %level, align 4, !dbg !10343
  %idxprom31 = sext i32 %41 to i64, !dbg !10342
  %42 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10342
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %42, i32 0, i32 10, !dbg !10344
  %arrayidx32 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 0, !dbg !10342
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx32, i32 0, i32 10, !dbg !10345
  %arrayidx33 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom31, !dbg !10342
  %arrayidx34 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !10342
  call void @decode_subband(%struct.DiracContext* %32, %struct.GetBitContext* %33, i32 %34, i32 %36, i32 %38, i32 %39, %struct.SubBand* %arrayidx34, %struct.SubBand* null), !dbg !10346
  br label %for.inc, !dbg !10347

for.inc:                                          ; preds = %cond.end28
  %43 = load i32, i32* %orientation, align 4, !dbg !10348
  %inc = add i32 %43, 1, !dbg !10348
  store i32 %inc, i32* %orientation, align 4, !dbg !10348
  br label %for.cond9, !dbg !10350, !llvm.loop !10351

for.end:                                          ; preds = %for.cond9
  br label %for.inc35, !dbg !10353

for.inc35:                                        ; preds = %for.end
  %44 = load i32, i32* %level, align 4, !dbg !10355
  %inc36 = add nsw i32 %44, 1, !dbg !10355
  store i32 %inc36, i32* %level, align 4, !dbg !10355
  br label %for.cond, !dbg !10357, !llvm.loop !10358

for.end37:                                        ; preds = %for.cond
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10360
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10361
  %call38 = call i32 @get_bits_count(%struct.GetBitContext* %46), !dbg !10362
  %47 = load i32, i32* %luma_end, align 4, !dbg !10363
  %sub39 = sub nsw i32 %call38, %47, !dbg !10364
  call void @skip_bits_long(%struct.GetBitContext* %45, i32 %sub39), !dbg !10365
  %48 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10366
  %bytes40 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %48, i32 0, i32 3, !dbg !10367
  %49 = load i32, i32* %bytes40, align 8, !dbg !10367
  %mul41 = mul nsw i32 8, %49, !dbg !10368
  %sub42 = sub nsw i32 %mul41, 7, !dbg !10369
  %50 = load i32, i32* %length_bits, align 4, !dbg !10370
  %sub43 = sub nsw i32 %sub42, %50, !dbg !10371
  %51 = load i32, i32* %luma_bits, align 4, !dbg !10372
  %sub44 = sub nsw i32 %sub43, %51, !dbg !10373
  store i32 %sub44, i32* %chroma_bits, align 4, !dbg !10374
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10375
  %call45 = call i32 @get_bits_count(%struct.GetBitContext* %52), !dbg !10376
  %53 = load i32, i32* %chroma_bits, align 4, !dbg !10377
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10378
  %call46 = call i32 @get_bits_left(%struct.GetBitContext* %54), !dbg !10379
  %cmp47 = icmp sgt i32 %53, %call46, !dbg !10380
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !10381

cond.true49:                                      ; preds = %for.end37
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10382
  %call50 = call i32 @get_bits_left(%struct.GetBitContext* %55), !dbg !10383
  br label %cond.end52, !dbg !10384

cond.false51:                                     ; preds = %for.end37
  %56 = load i32, i32* %chroma_bits, align 4, !dbg !10385
  br label %cond.end52, !dbg !10386

cond.end52:                                       ; preds = %cond.false51, %cond.true49
  %cond53 = phi i32 [ %call50, %cond.true49 ], [ %56, %cond.false51 ], !dbg !10387
  %add54 = add nsw i32 %call45, %cond53, !dbg !10388
  store i32 %add54, i32* %chroma_end, align 4, !dbg !10389
  store i32 0, i32* %level, align 4, !dbg !10390
  br label %for.cond55, !dbg !10392

for.cond55:                                       ; preds = %for.inc110, %cond.end52
  %57 = load i32, i32* %level, align 4, !dbg !10393
  %58 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10396
  %wavelet_depth56 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %58, i32 0, i32 24, !dbg !10397
  %59 = load i32, i32* %wavelet_depth56, align 4, !dbg !10397
  %cmp57 = icmp ult i32 %57, %59, !dbg !10398
  br i1 %cmp57, label %for.body59, label %for.end112, !dbg !10399

for.body59:                                       ; preds = %for.cond55
  %60 = load i32, i32* %level, align 4, !dbg !10400
  %tobool60 = icmp ne i32 %60, 0, !dbg !10402
  %lnot61 = xor i1 %tobool60, true, !dbg !10402
  %lnot63 = xor i1 %lnot61, true, !dbg !10403
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !10403
  store i32 %lnot.ext64, i32* %orientation, align 4, !dbg !10404
  br label %for.cond65, !dbg !10405

for.cond65:                                       ; preds = %for.inc107, %for.body59
  %61 = load i32, i32* %orientation, align 4, !dbg !10406
  %cmp66 = icmp ult i32 %61, 4, !dbg !10409
  br i1 %cmp66, label %for.body68, label %for.end109, !dbg !10410

for.body68:                                       ; preds = %for.cond65
  %62 = load i32, i32* %quant_base, align 4, !dbg !10411
  %63 = load i32, i32* %orientation, align 4, !dbg !10413
  %idxprom69 = zext i32 %63 to i64, !dbg !10414
  %64 = load i32, i32* %level, align 4, !dbg !10415
  %idxprom70 = sext i32 %64 to i64, !dbg !10414
  %65 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10414
  %lowdelay71 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %65, i32 0, i32 36, !dbg !10416
  %quant72 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay71, i32 0, i32 1, !dbg !10417
  %arrayidx73 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant72, i64 0, i64 %idxprom70, !dbg !10414
  %arrayidx74 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx73, i64 0, i64 %idxprom69, !dbg !10414
  %66 = load i8, i8* %arrayidx74, align 1, !dbg !10414
  %conv75 = zext i8 %66 to i32, !dbg !10414
  %sub76 = sub nsw i32 %62, %conv75, !dbg !10418
  %cmp77 = icmp sgt i32 %sub76, 0, !dbg !10419
  br i1 %cmp77, label %cond.true79, label %cond.false88, !dbg !10420

cond.true79:                                      ; preds = %for.body68
  %67 = load i32, i32* %quant_base, align 4, !dbg !10421
  %68 = load i32, i32* %orientation, align 4, !dbg !10423
  %idxprom80 = zext i32 %68 to i64, !dbg !10424
  %69 = load i32, i32* %level, align 4, !dbg !10425
  %idxprom81 = sext i32 %69 to i64, !dbg !10424
  %70 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10424
  %lowdelay82 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %70, i32 0, i32 36, !dbg !10426
  %quant83 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay82, i32 0, i32 1, !dbg !10427
  %arrayidx84 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant83, i64 0, i64 %idxprom81, !dbg !10424
  %arrayidx85 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx84, i64 0, i64 %idxprom80, !dbg !10424
  %71 = load i8, i8* %arrayidx85, align 1, !dbg !10424
  %conv86 = zext i8 %71 to i32, !dbg !10424
  %sub87 = sub nsw i32 %67, %conv86, !dbg !10428
  br label %cond.end89, !dbg !10429

cond.false88:                                     ; preds = %for.body68
  br label %cond.end89, !dbg !10430

cond.end89:                                       ; preds = %cond.false88, %cond.true79
  %cond90 = phi i32 [ %sub87, %cond.true79 ], [ 0, %cond.false88 ], !dbg !10432
  store i32 %cond90, i32* %quant, align 4, !dbg !10434
  %72 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10435
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10436
  %74 = load i32, i32* %quant, align 4, !dbg !10437
  %75 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10438
  %slice_x91 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %75, i32 0, i32 1, !dbg !10439
  %76 = load i32, i32* %slice_x91, align 8, !dbg !10439
  %77 = load %struct.DiracSlice*, %struct.DiracSlice** %slice, align 8, !dbg !10440
  %slice_y92 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %77, i32 0, i32 2, !dbg !10441
  %78 = load i32, i32* %slice_y92, align 4, !dbg !10441
  %79 = load i32, i32* %chroma_end, align 4, !dbg !10442
  %80 = load i32, i32* %orientation, align 4, !dbg !10443
  %idxprom93 = zext i32 %80 to i64, !dbg !10444
  %81 = load i32, i32* %level, align 4, !dbg !10445
  %idxprom94 = sext i32 %81 to i64, !dbg !10444
  %82 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10444
  %plane95 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %82, i32 0, i32 10, !dbg !10446
  %arrayidx96 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane95, i64 0, i64 1, !dbg !10444
  %band97 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx96, i32 0, i32 10, !dbg !10447
  %arrayidx98 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band97, i64 0, i64 %idxprom94, !dbg !10444
  %arrayidx99 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx98, i64 0, i64 %idxprom93, !dbg !10444
  %83 = load i32, i32* %orientation, align 4, !dbg !10448
  %idxprom100 = zext i32 %83 to i64, !dbg !10449
  %84 = load i32, i32* %level, align 4, !dbg !10450
  %idxprom101 = sext i32 %84 to i64, !dbg !10449
  %85 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !10449
  %plane102 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %85, i32 0, i32 10, !dbg !10451
  %arrayidx103 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane102, i64 0, i64 2, !dbg !10449
  %band104 = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx103, i32 0, i32 10, !dbg !10452
  %arrayidx105 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band104, i64 0, i64 %idxprom101, !dbg !10449
  %arrayidx106 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx105, i64 0, i64 %idxprom100, !dbg !10449
  call void @decode_subband(%struct.DiracContext* %72, %struct.GetBitContext* %73, i32 %74, i32 %76, i32 %78, i32 %79, %struct.SubBand* %arrayidx99, %struct.SubBand* %arrayidx106), !dbg !10453
  br label %for.inc107, !dbg !10454

for.inc107:                                       ; preds = %cond.end89
  %86 = load i32, i32* %orientation, align 4, !dbg !10455
  %inc108 = add i32 %86, 1, !dbg !10455
  store i32 %inc108, i32* %orientation, align 4, !dbg !10455
  br label %for.cond65, !dbg !10457, !llvm.loop !10458

for.end109:                                       ; preds = %for.cond65
  br label %for.inc110, !dbg !10460

for.inc110:                                       ; preds = %for.end109
  %87 = load i32, i32* %level, align 4, !dbg !10462
  %inc111 = add nsw i32 %87, 1, !dbg !10462
  store i32 %inc111, i32* %level, align 4, !dbg !10462
  br label %for.cond55, !dbg !10464, !llvm.loop !10465

for.end112:                                       ; preds = %for.cond55
  ret i32 0, !dbg !10467
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @intra_dc_prediction_10(%struct.SubBand* %b) #5 !dbg !10468 {
entry:
  %b.addr = alloca %struct.SubBand*, align 8
  %buf = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %pred = alloca i32, align 4
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !10471, metadata !2947), !dbg !10472
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !10473, metadata !2947), !dbg !10474
  %0 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10475
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 7, !dbg !10476
  %1 = load i8*, i8** %ibuf, align 8, !dbg !10476
  %2 = bitcast i8* %1 to i32*, !dbg !10477
  store i32* %2, i32** %buf, align 8, !dbg !10474
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10478, metadata !2947), !dbg !10479
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10480, metadata !2947), !dbg !10481
  store i32 1, i32* %x, align 4, !dbg !10482
  br label %for.cond, !dbg !10484

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %x, align 4, !dbg !10485
  %4 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10488
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %4, i32 0, i32 3, !dbg !10489
  %5 = load i32, i32* %width, align 4, !dbg !10489
  %cmp = icmp slt i32 %3, %5, !dbg !10490
  br i1 %cmp, label %for.body, label %for.end, !dbg !10491

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %x, align 4, !dbg !10492
  %sub = sub nsw i32 %6, 1, !dbg !10494
  %idxprom = sext i32 %sub to i64, !dbg !10495
  %7 = load i32*, i32** %buf, align 8, !dbg !10495
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !10495
  %8 = load i32, i32* %arrayidx, align 4, !dbg !10495
  %9 = load i32, i32* %x, align 4, !dbg !10496
  %idxprom1 = sext i32 %9 to i64, !dbg !10497
  %10 = load i32*, i32** %buf, align 8, !dbg !10497
  %arrayidx2 = getelementptr inbounds i32, i32* %10, i64 %idxprom1, !dbg !10497
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !10498
  %add = add i32 %11, %8, !dbg !10498
  store i32 %add, i32* %arrayidx2, align 4, !dbg !10498
  br label %for.inc, !dbg !10497

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %x, align 4, !dbg !10499
  %inc = add nsw i32 %12, 1, !dbg !10499
  store i32 %inc, i32* %x, align 4, !dbg !10499
  br label %for.cond, !dbg !10501, !llvm.loop !10502

for.end:                                          ; preds = %for.cond
  %13 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10504
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %13, i32 0, i32 2, !dbg !10506
  %14 = load i32, i32* %stride, align 8, !dbg !10506
  %15 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10507
  %pshift = getelementptr inbounds %struct.SubBand, %struct.SubBand* %15, i32 0, i32 5, !dbg !10508
  %16 = load i32, i32* %pshift, align 4, !dbg !10508
  %add3 = add nsw i32 1, %16, !dbg !10509
  %shr = ashr i32 %14, %add3, !dbg !10510
  %17 = load i32*, i32** %buf, align 8, !dbg !10511
  %idx.ext = sext i32 %shr to i64, !dbg !10511
  %add.ptr = getelementptr inbounds i32, i32* %17, i64 %idx.ext, !dbg !10511
  store i32* %add.ptr, i32** %buf, align 8, !dbg !10511
  store i32 1, i32* %y, align 4, !dbg !10512
  br label %for.cond4, !dbg !10513

for.cond4:                                        ; preds = %for.inc52, %for.end
  %18 = load i32, i32* %y, align 4, !dbg !10514
  %19 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10518
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %19, i32 0, i32 4, !dbg !10519
  %20 = load i32, i32* %height, align 8, !dbg !10519
  %cmp5 = icmp slt i32 %18, %20, !dbg !10520
  br i1 %cmp5, label %for.body6, label %for.end54, !dbg !10521

for.body6:                                        ; preds = %for.cond4
  %21 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10522
  %stride7 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %21, i32 0, i32 2, !dbg !10525
  %22 = load i32, i32* %stride7, align 8, !dbg !10525
  %23 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10526
  %pshift8 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %23, i32 0, i32 5, !dbg !10527
  %24 = load i32, i32* %pshift8, align 4, !dbg !10527
  %add9 = add nsw i32 1, %24, !dbg !10528
  %shr10 = ashr i32 %22, %add9, !dbg !10529
  %sub11 = sub nsw i32 0, %shr10, !dbg !10530
  %idxprom12 = sext i32 %sub11 to i64, !dbg !10531
  %25 = load i32*, i32** %buf, align 8, !dbg !10531
  %arrayidx13 = getelementptr inbounds i32, i32* %25, i64 %idxprom12, !dbg !10531
  %26 = load i32, i32* %arrayidx13, align 4, !dbg !10531
  %27 = load i32*, i32** %buf, align 8, !dbg !10532
  %arrayidx14 = getelementptr inbounds i32, i32* %27, i64 0, !dbg !10532
  %28 = load i32, i32* %arrayidx14, align 4, !dbg !10533
  %add15 = add i32 %28, %26, !dbg !10533
  store i32 %add15, i32* %arrayidx14, align 4, !dbg !10533
  store i32 1, i32* %x, align 4, !dbg !10534
  br label %for.cond16, !dbg !10535

for.cond16:                                       ; preds = %for.inc43, %for.body6
  %29 = load i32, i32* %x, align 4, !dbg !10536
  %30 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10540
  %width17 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %30, i32 0, i32 3, !dbg !10541
  %31 = load i32, i32* %width17, align 4, !dbg !10541
  %cmp18 = icmp slt i32 %29, %31, !dbg !10542
  br i1 %cmp18, label %for.body19, label %for.end45, !dbg !10543

for.body19:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !10544, metadata !2947), !dbg !10546
  %32 = load i32, i32* %x, align 4, !dbg !10547
  %sub20 = sub nsw i32 %32, 1, !dbg !10549
  %idxprom21 = sext i32 %sub20 to i64, !dbg !10550
  %33 = load i32*, i32** %buf, align 8, !dbg !10550
  %arrayidx22 = getelementptr inbounds i32, i32* %33, i64 %idxprom21, !dbg !10550
  %34 = load i32, i32* %arrayidx22, align 4, !dbg !10550
  %35 = load i32, i32* %x, align 4, !dbg !10551
  %36 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10552
  %stride23 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %36, i32 0, i32 2, !dbg !10553
  %37 = load i32, i32* %stride23, align 8, !dbg !10553
  %38 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10554
  %pshift24 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %38, i32 0, i32 5, !dbg !10555
  %39 = load i32, i32* %pshift24, align 4, !dbg !10555
  %add25 = add nsw i32 1, %39, !dbg !10556
  %shr26 = ashr i32 %37, %add25, !dbg !10557
  %sub27 = sub nsw i32 %35, %shr26, !dbg !10558
  %idxprom28 = sext i32 %sub27 to i64, !dbg !10559
  %40 = load i32*, i32** %buf, align 8, !dbg !10559
  %arrayidx29 = getelementptr inbounds i32, i32* %40, i64 %idxprom28, !dbg !10559
  %41 = load i32, i32* %arrayidx29, align 4, !dbg !10559
  %add30 = add i32 %34, %41, !dbg !10560
  %42 = load i32, i32* %x, align 4, !dbg !10561
  %43 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10562
  %stride31 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %43, i32 0, i32 2, !dbg !10563
  %44 = load i32, i32* %stride31, align 8, !dbg !10563
  %45 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10564
  %pshift32 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %45, i32 0, i32 5, !dbg !10565
  %46 = load i32, i32* %pshift32, align 4, !dbg !10565
  %add33 = add nsw i32 1, %46, !dbg !10566
  %shr34 = ashr i32 %44, %add33, !dbg !10567
  %sub35 = sub nsw i32 %42, %shr34, !dbg !10568
  %sub36 = sub nsw i32 %sub35, 1, !dbg !10569
  %idxprom37 = sext i32 %sub36 to i64, !dbg !10570
  %47 = load i32*, i32** %buf, align 8, !dbg !10570
  %arrayidx38 = getelementptr inbounds i32, i32* %47, i64 %idxprom37, !dbg !10570
  %48 = load i32, i32* %arrayidx38, align 4, !dbg !10570
  %add39 = add i32 %add30, %48, !dbg !10571
  store i32 %add39, i32* %pred, align 4, !dbg !10572
  %49 = load i32, i32* %pred, align 4, !dbg !10573
  %call = call i32 @divide3(i32 %49), !dbg !10574
  %50 = load i32, i32* %x, align 4, !dbg !10575
  %idxprom40 = sext i32 %50 to i64, !dbg !10576
  %51 = load i32*, i32** %buf, align 8, !dbg !10576
  %arrayidx41 = getelementptr inbounds i32, i32* %51, i64 %idxprom40, !dbg !10576
  %52 = load i32, i32* %arrayidx41, align 4, !dbg !10577
  %add42 = add i32 %52, %call, !dbg !10577
  store i32 %add42, i32* %arrayidx41, align 4, !dbg !10577
  br label %for.inc43, !dbg !10578

for.inc43:                                        ; preds = %for.body19
  %53 = load i32, i32* %x, align 4, !dbg !10579
  %inc44 = add nsw i32 %53, 1, !dbg !10579
  store i32 %inc44, i32* %x, align 4, !dbg !10579
  br label %for.cond16, !dbg !10581, !llvm.loop !10582

for.end45:                                        ; preds = %for.cond16
  %54 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10584
  %stride46 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %54, i32 0, i32 2, !dbg !10586
  %55 = load i32, i32* %stride46, align 8, !dbg !10586
  %56 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10587
  %pshift47 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %56, i32 0, i32 5, !dbg !10588
  %57 = load i32, i32* %pshift47, align 4, !dbg !10588
  %add48 = add nsw i32 1, %57, !dbg !10589
  %shr49 = ashr i32 %55, %add48, !dbg !10590
  %58 = load i32*, i32** %buf, align 8, !dbg !10591
  %idx.ext50 = sext i32 %shr49 to i64, !dbg !10591
  %add.ptr51 = getelementptr inbounds i32, i32* %58, i64 %idx.ext50, !dbg !10591
  store i32* %add.ptr51, i32** %buf, align 8, !dbg !10591
  br label %for.inc52, !dbg !10592

for.inc52:                                        ; preds = %for.end45
  %59 = load i32, i32* %y, align 4, !dbg !10593
  %inc53 = add nsw i32 %59, 1, !dbg !10593
  store i32 %inc53, i32* %y, align 4, !dbg !10593
  br label %for.cond4, !dbg !10595, !llvm.loop !10596

for.end54:                                        ; preds = %for.cond4
  ret void, !dbg !10598
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @intra_dc_prediction_8(%struct.SubBand* %b) #5 !dbg !10600 {
entry:
  %b.addr = alloca %struct.SubBand*, align 8
  %buf = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %pred = alloca i32, align 4
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !10601, metadata !2947), !dbg !10602
  call void @llvm.dbg.declare(metadata i16** %buf, metadata !10603, metadata !2947), !dbg !10604
  %0 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10605
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 7, !dbg !10606
  %1 = load i8*, i8** %ibuf, align 8, !dbg !10606
  %2 = bitcast i8* %1 to i16*, !dbg !10607
  store i16* %2, i16** %buf, align 8, !dbg !10604
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10608, metadata !2947), !dbg !10609
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10610, metadata !2947), !dbg !10611
  store i32 1, i32* %x, align 4, !dbg !10612
  br label %for.cond, !dbg !10614

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %x, align 4, !dbg !10615
  %4 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10618
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %4, i32 0, i32 3, !dbg !10619
  %5 = load i32, i32* %width, align 4, !dbg !10619
  %cmp = icmp slt i32 %3, %5, !dbg !10620
  br i1 %cmp, label %for.body, label %for.end, !dbg !10621

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %x, align 4, !dbg !10622
  %sub = sub nsw i32 %6, 1, !dbg !10624
  %idxprom = sext i32 %sub to i64, !dbg !10625
  %7 = load i16*, i16** %buf, align 8, !dbg !10625
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !10625
  %8 = load i16, i16* %arrayidx, align 2, !dbg !10625
  %conv = sext i16 %8 to i32, !dbg !10625
  %9 = load i32, i32* %x, align 4, !dbg !10626
  %idxprom1 = sext i32 %9 to i64, !dbg !10627
  %10 = load i16*, i16** %buf, align 8, !dbg !10627
  %arrayidx2 = getelementptr inbounds i16, i16* %10, i64 %idxprom1, !dbg !10627
  %11 = load i16, i16* %arrayidx2, align 2, !dbg !10628
  %conv3 = sext i16 %11 to i32, !dbg !10628
  %add = add nsw i32 %conv3, %conv, !dbg !10628
  %conv4 = trunc i32 %add to i16, !dbg !10628
  store i16 %conv4, i16* %arrayidx2, align 2, !dbg !10628
  br label %for.inc, !dbg !10627

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %x, align 4, !dbg !10629
  %inc = add nsw i32 %12, 1, !dbg !10629
  store i32 %inc, i32* %x, align 4, !dbg !10629
  br label %for.cond, !dbg !10631, !llvm.loop !10632

for.end:                                          ; preds = %for.cond
  %13 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10634
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %13, i32 0, i32 2, !dbg !10636
  %14 = load i32, i32* %stride, align 8, !dbg !10636
  %15 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10637
  %pshift = getelementptr inbounds %struct.SubBand, %struct.SubBand* %15, i32 0, i32 5, !dbg !10638
  %16 = load i32, i32* %pshift, align 4, !dbg !10638
  %add5 = add nsw i32 1, %16, !dbg !10639
  %shr = ashr i32 %14, %add5, !dbg !10640
  %17 = load i16*, i16** %buf, align 8, !dbg !10641
  %idx.ext = sext i32 %shr to i64, !dbg !10641
  %add.ptr = getelementptr inbounds i16, i16* %17, i64 %idx.ext, !dbg !10641
  store i16* %add.ptr, i16** %buf, align 8, !dbg !10641
  store i32 1, i32* %y, align 4, !dbg !10642
  br label %for.cond6, !dbg !10643

for.cond6:                                        ; preds = %for.inc64, %for.end
  %18 = load i32, i32* %y, align 4, !dbg !10644
  %19 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10648
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %19, i32 0, i32 4, !dbg !10649
  %20 = load i32, i32* %height, align 8, !dbg !10649
  %cmp7 = icmp slt i32 %18, %20, !dbg !10650
  br i1 %cmp7, label %for.body9, label %for.end66, !dbg !10651

for.body9:                                        ; preds = %for.cond6
  %21 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10652
  %stride10 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %21, i32 0, i32 2, !dbg !10655
  %22 = load i32, i32* %stride10, align 8, !dbg !10655
  %23 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10656
  %pshift11 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %23, i32 0, i32 5, !dbg !10657
  %24 = load i32, i32* %pshift11, align 4, !dbg !10657
  %add12 = add nsw i32 1, %24, !dbg !10658
  %shr13 = ashr i32 %22, %add12, !dbg !10659
  %sub14 = sub nsw i32 0, %shr13, !dbg !10660
  %idxprom15 = sext i32 %sub14 to i64, !dbg !10661
  %25 = load i16*, i16** %buf, align 8, !dbg !10661
  %arrayidx16 = getelementptr inbounds i16, i16* %25, i64 %idxprom15, !dbg !10661
  %26 = load i16, i16* %arrayidx16, align 2, !dbg !10661
  %conv17 = sext i16 %26 to i32, !dbg !10661
  %27 = load i16*, i16** %buf, align 8, !dbg !10662
  %arrayidx18 = getelementptr inbounds i16, i16* %27, i64 0, !dbg !10662
  %28 = load i16, i16* %arrayidx18, align 2, !dbg !10663
  %conv19 = sext i16 %28 to i32, !dbg !10663
  %add20 = add nsw i32 %conv19, %conv17, !dbg !10663
  %conv21 = trunc i32 %add20 to i16, !dbg !10663
  store i16 %conv21, i16* %arrayidx18, align 2, !dbg !10663
  store i32 1, i32* %x, align 4, !dbg !10664
  br label %for.cond22, !dbg !10665

for.cond22:                                       ; preds = %for.inc55, %for.body9
  %29 = load i32, i32* %x, align 4, !dbg !10666
  %30 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10670
  %width23 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %30, i32 0, i32 3, !dbg !10671
  %31 = load i32, i32* %width23, align 4, !dbg !10671
  %cmp24 = icmp slt i32 %29, %31, !dbg !10672
  br i1 %cmp24, label %for.body26, label %for.end57, !dbg !10673

for.body26:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !10674, metadata !2947), !dbg !10676
  %32 = load i32, i32* %x, align 4, !dbg !10677
  %sub27 = sub nsw i32 %32, 1, !dbg !10679
  %idxprom28 = sext i32 %sub27 to i64, !dbg !10680
  %33 = load i16*, i16** %buf, align 8, !dbg !10680
  %arrayidx29 = getelementptr inbounds i16, i16* %33, i64 %idxprom28, !dbg !10680
  %34 = load i16, i16* %arrayidx29, align 2, !dbg !10680
  %conv30 = sext i16 %34 to i32, !dbg !10680
  %35 = load i32, i32* %x, align 4, !dbg !10681
  %36 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10682
  %stride31 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %36, i32 0, i32 2, !dbg !10683
  %37 = load i32, i32* %stride31, align 8, !dbg !10683
  %38 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10684
  %pshift32 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %38, i32 0, i32 5, !dbg !10685
  %39 = load i32, i32* %pshift32, align 4, !dbg !10685
  %add33 = add nsw i32 1, %39, !dbg !10686
  %shr34 = ashr i32 %37, %add33, !dbg !10687
  %sub35 = sub nsw i32 %35, %shr34, !dbg !10688
  %idxprom36 = sext i32 %sub35 to i64, !dbg !10689
  %40 = load i16*, i16** %buf, align 8, !dbg !10689
  %arrayidx37 = getelementptr inbounds i16, i16* %40, i64 %idxprom36, !dbg !10689
  %41 = load i16, i16* %arrayidx37, align 2, !dbg !10689
  %conv38 = sext i16 %41 to i32, !dbg !10689
  %add39 = add nsw i32 %conv30, %conv38, !dbg !10690
  %42 = load i32, i32* %x, align 4, !dbg !10691
  %43 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10692
  %stride40 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %43, i32 0, i32 2, !dbg !10693
  %44 = load i32, i32* %stride40, align 8, !dbg !10693
  %45 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10694
  %pshift41 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %45, i32 0, i32 5, !dbg !10695
  %46 = load i32, i32* %pshift41, align 4, !dbg !10695
  %add42 = add nsw i32 1, %46, !dbg !10696
  %shr43 = ashr i32 %44, %add42, !dbg !10697
  %sub44 = sub nsw i32 %42, %shr43, !dbg !10698
  %sub45 = sub nsw i32 %sub44, 1, !dbg !10699
  %idxprom46 = sext i32 %sub45 to i64, !dbg !10700
  %47 = load i16*, i16** %buf, align 8, !dbg !10700
  %arrayidx47 = getelementptr inbounds i16, i16* %47, i64 %idxprom46, !dbg !10700
  %48 = load i16, i16* %arrayidx47, align 2, !dbg !10700
  %conv48 = sext i16 %48 to i32, !dbg !10700
  %add49 = add nsw i32 %add39, %conv48, !dbg !10701
  store i32 %add49, i32* %pred, align 4, !dbg !10702
  %49 = load i32, i32* %pred, align 4, !dbg !10703
  %call = call i32 @divide3(i32 %49), !dbg !10704
  %50 = load i32, i32* %x, align 4, !dbg !10705
  %idxprom50 = sext i32 %50 to i64, !dbg !10706
  %51 = load i16*, i16** %buf, align 8, !dbg !10706
  %arrayidx51 = getelementptr inbounds i16, i16* %51, i64 %idxprom50, !dbg !10706
  %52 = load i16, i16* %arrayidx51, align 2, !dbg !10707
  %conv52 = sext i16 %52 to i32, !dbg !10707
  %add53 = add nsw i32 %conv52, %call, !dbg !10707
  %conv54 = trunc i32 %add53 to i16, !dbg !10707
  store i16 %conv54, i16* %arrayidx51, align 2, !dbg !10707
  br label %for.inc55, !dbg !10708

for.inc55:                                        ; preds = %for.body26
  %53 = load i32, i32* %x, align 4, !dbg !10709
  %inc56 = add nsw i32 %53, 1, !dbg !10709
  store i32 %inc56, i32* %x, align 4, !dbg !10709
  br label %for.cond22, !dbg !10711, !llvm.loop !10712

for.end57:                                        ; preds = %for.cond22
  %54 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10714
  %stride58 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %54, i32 0, i32 2, !dbg !10716
  %55 = load i32, i32* %stride58, align 8, !dbg !10716
  %56 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !10717
  %pshift59 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %56, i32 0, i32 5, !dbg !10718
  %57 = load i32, i32* %pshift59, align 4, !dbg !10718
  %add60 = add nsw i32 1, %57, !dbg !10719
  %shr61 = ashr i32 %55, %add60, !dbg !10720
  %58 = load i16*, i16** %buf, align 8, !dbg !10721
  %idx.ext62 = sext i32 %shr61 to i64, !dbg !10721
  %add.ptr63 = getelementptr inbounds i16, i16* %58, i64 %idx.ext62, !dbg !10721
  store i16* %add.ptr63, i16** %buf, align 8, !dbg !10721
  br label %for.inc64, !dbg !10722

for.inc64:                                        ; preds = %for.end57
  %59 = load i32, i32* %y, align 4, !dbg !10723
  %inc65 = add nsw i32 %59, 1, !dbg !10723
  store i32 %inc65, i32* %y, align 4, !dbg !10723
  br label %for.cond6, !dbg !10725, !llvm.loop !10726

for.end66:                                        ; preds = %for.cond6
  ret void, !dbg !10728
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_hq_slice(%struct.DiracContext* %s, %struct.DiracSlice* %slice, i8* %tmp_buf) #1 !dbg !10730 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %slice.addr = alloca %struct.DiracSlice*, align 8
  %tmp_buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %level = alloca i32, align 4
  %orientation = alloca i32, align 4
  %quant_idx = alloca i32, align 4
  %qfactor = alloca [5 x [4 x i32]], align 16
  %qoffset = alloca [5 x [4 x i32]], align 16
  %gb = alloca %struct.GetBitContext*, align 8
  %coeffs_num = alloca [5 x %struct.SliceCoeffs], align 16
  %quant = alloca i32, align 4
  %coef_num = alloca i32, align 4
  %coef_par = alloca i32, align 4
  %off = alloca i32, align 4
  %length = alloca i64, align 8
  %bits_end = alloca i64, align 8
  %addr = alloca i8*, align 8
  %start_b = alloca i32, align 4
  %end_b = alloca i32, align 4
  %c = alloca %struct.SliceCoeffs*, align 8
  %b1 = alloca %struct.SubBand*, align 8
  %buf = alloca i8*, align 8
  %qfunc = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !10733, metadata !2947), !dbg !10734
  store %struct.DiracSlice* %slice, %struct.DiracSlice** %slice.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracSlice** %slice.addr, metadata !10735, metadata !2947), !dbg !10736
  store i8* %tmp_buf, i8** %tmp_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmp_buf.addr, metadata !10737, metadata !2947), !dbg !10738
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10739, metadata !2947), !dbg !10740
  call void @llvm.dbg.declare(metadata i32* %level, metadata !10741, metadata !2947), !dbg !10742
  call void @llvm.dbg.declare(metadata i32* %orientation, metadata !10743, metadata !2947), !dbg !10744
  call void @llvm.dbg.declare(metadata i32* %quant_idx, metadata !10745, metadata !2947), !dbg !10746
  call void @llvm.dbg.declare(metadata [5 x [4 x i32]]* %qfactor, metadata !10747, metadata !2947), !dbg !10749
  call void @llvm.dbg.declare(metadata [5 x [4 x i32]]* %qoffset, metadata !10750, metadata !2947), !dbg !10751
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !10752, metadata !2947), !dbg !10753
  %0 = load %struct.DiracSlice*, %struct.DiracSlice** %slice.addr, align 8, !dbg !10754
  %gb1 = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %0, i32 0, i32 0, !dbg !10755
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !10753
  call void @llvm.dbg.declare(metadata [5 x %struct.SliceCoeffs]* %coeffs_num, metadata !10756, metadata !2947), !dbg !10757
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10758
  %2 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10759
  %highquality = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %2, i32 0, i32 37, !dbg !10760
  %prefix_bytes = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality, i32 0, i32 0, !dbg !10761
  %3 = load i32, i32* %prefix_bytes, align 16, !dbg !10761
  %mul = mul i32 8, %3, !dbg !10762
  call void @skip_bits_long(%struct.GetBitContext* %1, i32 %mul), !dbg !10763
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10764
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 8), !dbg !10765
  store i32 %call, i32* %quant_idx, align 4, !dbg !10766
  %5 = load i32, i32* %quant_idx, align 4, !dbg !10767
  %conv = sext i32 %5 to i64, !dbg !10767
  %cmp = icmp ugt i64 %conv, 115, !dbg !10769
  br i1 %cmp, label %if.then, label %if.end, !dbg !10770

if.then:                                          ; preds = %entry
  %6 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10771
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %6, i32 0, i32 0, !dbg !10773
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !10773
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !10771
  %9 = load i32, i32* %quant_idx, align 4, !dbg !10774
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.42, i32 0, i32 0), i32 %9), !dbg !10775
  store i32 -1094995529, i32* %retval, align 4, !dbg !10776
  br label %return, !dbg !10776

if.end:                                           ; preds = %entry
  store i32 0, i32* %level, align 4, !dbg !10777
  br label %for.cond, !dbg !10779

for.cond:                                         ; preds = %for.inc36, %if.end
  %10 = load i32, i32* %level, align 4, !dbg !10780
  %11 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10783
  %wavelet_depth = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %11, i32 0, i32 24, !dbg !10784
  %12 = load i32, i32* %wavelet_depth, align 4, !dbg !10784
  %cmp3 = icmp ult i32 %10, %12, !dbg !10785
  br i1 %cmp3, label %for.body, label %for.end38, !dbg !10786

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %level, align 4, !dbg !10787
  %tobool = icmp ne i32 %13, 0, !dbg !10790
  %lnot = xor i1 %tobool, true, !dbg !10790
  %lnot5 = xor i1 %lnot, true, !dbg !10791
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !10791
  store i32 %lnot.ext, i32* %orientation, align 4, !dbg !10792
  br label %for.cond6, !dbg !10793

for.cond6:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %orientation, align 4, !dbg !10794
  %cmp7 = icmp slt i32 %14, 4, !dbg !10797
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10798

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !10799, metadata !2947), !dbg !10801
  %15 = load i32, i32* %quant_idx, align 4, !dbg !10802
  %16 = load i32, i32* %orientation, align 4, !dbg !10803
  %idxprom = sext i32 %16 to i64, !dbg !10804
  %17 = load i32, i32* %level, align 4, !dbg !10805
  %idxprom10 = sext i32 %17 to i64, !dbg !10804
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10804
  %lowdelay = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 36, !dbg !10806
  %quant11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay, i32 0, i32 1, !dbg !10807
  %arrayidx = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant11, i64 0, i64 %idxprom10, !dbg !10804
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !10804
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !10804
  %conv13 = zext i8 %19 to i32, !dbg !10804
  %sub = sub nsw i32 %15, %conv13, !dbg !10808
  %cmp14 = icmp sgt i32 %sub, 0, !dbg !10809
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !10810

cond.true:                                        ; preds = %for.body9
  %20 = load i32, i32* %quant_idx, align 4, !dbg !10811
  %21 = load i32, i32* %orientation, align 4, !dbg !10813
  %idxprom16 = sext i32 %21 to i64, !dbg !10814
  %22 = load i32, i32* %level, align 4, !dbg !10815
  %idxprom17 = sext i32 %22 to i64, !dbg !10814
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10814
  %lowdelay18 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 36, !dbg !10816
  %quant19 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %lowdelay18, i32 0, i32 1, !dbg !10817
  %arrayidx20 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* %quant19, i64 0, i64 %idxprom17, !dbg !10814
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx20, i64 0, i64 %idxprom16, !dbg !10814
  %24 = load i8, i8* %arrayidx21, align 1, !dbg !10814
  %conv22 = zext i8 %24 to i32, !dbg !10814
  %sub23 = sub nsw i32 %20, %conv22, !dbg !10818
  br label %cond.end, !dbg !10819

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !10820

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub23, %cond.true ], [ 0, %cond.false ], !dbg !10822
  store i32 %cond, i32* %quant, align 4, !dbg !10824
  %25 = load i32, i32* %quant, align 4, !dbg !10825
  %idxprom24 = sext i32 %25 to i64, !dbg !10826
  %arrayidx25 = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom24, !dbg !10826
  %26 = load i32, i32* %arrayidx25, align 4, !dbg !10826
  %27 = load i32, i32* %orientation, align 4, !dbg !10827
  %idxprom26 = sext i32 %27 to i64, !dbg !10828
  %28 = load i32, i32* %level, align 4, !dbg !10829
  %idxprom27 = sext i32 %28 to i64, !dbg !10828
  %arrayidx28 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* %qfactor, i64 0, i64 %idxprom27, !dbg !10828
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !10828
  store i32 %26, i32* %arrayidx29, align 4, !dbg !10830
  %29 = load i32, i32* %quant, align 4, !dbg !10831
  %idxprom30 = sext i32 %29 to i64, !dbg !10832
  %arrayidx31 = getelementptr inbounds [120 x i32], [120 x i32]* @ff_dirac_qoffset_intra_tab, i64 0, i64 %idxprom30, !dbg !10832
  %30 = load i32, i32* %arrayidx31, align 4, !dbg !10832
  %add = add nsw i32 %30, 2, !dbg !10833
  %31 = load i32, i32* %orientation, align 4, !dbg !10834
  %idxprom32 = sext i32 %31 to i64, !dbg !10835
  %32 = load i32, i32* %level, align 4, !dbg !10836
  %idxprom33 = sext i32 %32 to i64, !dbg !10835
  %arrayidx34 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* %qoffset, i64 0, i64 %idxprom33, !dbg !10835
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !10835
  store i32 %add, i32* %arrayidx35, align 4, !dbg !10837
  br label %for.inc, !dbg !10838

for.inc:                                          ; preds = %cond.end
  %33 = load i32, i32* %orientation, align 4, !dbg !10839
  %inc = add nsw i32 %33, 1, !dbg !10839
  store i32 %inc, i32* %orientation, align 4, !dbg !10839
  br label %for.cond6, !dbg !10841, !llvm.loop !10842

for.end:                                          ; preds = %for.cond6
  br label %for.inc36, !dbg !10844

for.inc36:                                        ; preds = %for.end
  %34 = load i32, i32* %level, align 4, !dbg !10845
  %inc37 = add nsw i32 %34, 1, !dbg !10845
  store i32 %inc37, i32* %level, align 4, !dbg !10845
  br label %for.cond, !dbg !10847, !llvm.loop !10848

for.end38:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10850
  br label %for.cond39, !dbg !10852

for.cond39:                                       ; preds = %for.inc146, %for.end38
  %35 = load i32, i32* %i, align 4, !dbg !10853
  %cmp40 = icmp slt i32 %35, 3, !dbg !10856
  br i1 %cmp40, label %for.body42, label %for.end148, !dbg !10857

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32* %coef_num, metadata !10858, metadata !2947), !dbg !10860
  call void @llvm.dbg.declare(metadata i32* %coef_par, metadata !10861, metadata !2947), !dbg !10862
  call void @llvm.dbg.declare(metadata i32* %off, metadata !10863, metadata !2947), !dbg !10864
  store i32 0, i32* %off, align 4, !dbg !10864
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10865, metadata !2947), !dbg !10866
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10867
  %highquality43 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 37, !dbg !10868
  %size_scaler = getelementptr inbounds %struct.anon.1, %struct.anon.1* %highquality43, i32 0, i32 1, !dbg !10869
  %37 = load i64, i64* %size_scaler, align 8, !dbg !10869
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10870
  %call44 = call i32 @get_bits(%struct.GetBitContext* %38, i32 8), !dbg !10871
  %conv45 = zext i32 %call44 to i64, !dbg !10871
  %mul46 = mul i64 %37, %conv45, !dbg !10872
  store i64 %mul46, i64* %length, align 8, !dbg !10866
  call void @llvm.dbg.declare(metadata i64* %bits_end, metadata !10873, metadata !2947), !dbg !10874
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10875
  %call47 = call i32 @get_bits_count(%struct.GetBitContext* %39), !dbg !10876
  %conv48 = sext i32 %call47 to i64, !dbg !10876
  %40 = load i64, i64* %length, align 8, !dbg !10877
  %mul49 = mul nsw i64 8, %40, !dbg !10878
  %add50 = add nsw i64 %conv48, %mul49, !dbg !10879
  store i64 %add50, i64* %bits_end, align 8, !dbg !10874
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !10880, metadata !2947), !dbg !10881
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10882
  %call51 = call i8* @align_get_bits(%struct.GetBitContext* %41), !dbg !10883
  store i8* %call51, i8** %addr, align 8, !dbg !10881
  %42 = load i64, i64* %length, align 8, !dbg !10884
  %mul52 = mul nsw i64 %42, 8, !dbg !10886
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !10887
  %call53 = call i32 @get_bits_left(%struct.GetBitContext* %43), !dbg !10888
  %conv54 = sext i32 %call53 to i64, !dbg !10888
  %cmp55 = icmp sgt i64 %mul52, %conv54, !dbg !10889
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !10890

if.then57:                                        ; preds = %for.body42
  %44 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10891
  %avctx58 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %44, i32 0, i32 0, !dbg !10893
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx58, align 16, !dbg !10893
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !10891
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i32 0, i32 0)), !dbg !10894
  store i32 -1094995529, i32* %retval, align 4, !dbg !10895
  br label %return, !dbg !10895

if.end59:                                         ; preds = %for.body42
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10896
  %48 = load %struct.DiracSlice*, %struct.DiracSlice** %slice.addr, align 8, !dbg !10897
  %slice_x = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %48, i32 0, i32 1, !dbg !10898
  %49 = load i32, i32* %slice_x, align 8, !dbg !10898
  %50 = load %struct.DiracSlice*, %struct.DiracSlice** %slice.addr, align 8, !dbg !10899
  %slice_y = getelementptr inbounds %struct.DiracSlice, %struct.DiracSlice* %50, i32 0, i32 2, !dbg !10900
  %51 = load i32, i32* %slice_y, align 4, !dbg !10900
  %52 = load i32, i32* %i, align 4, !dbg !10901
  %arraydecay = getelementptr inbounds [5 x %struct.SliceCoeffs], [5 x %struct.SliceCoeffs]* %coeffs_num, i32 0, i32 0, !dbg !10902
  %call60 = call i32 @subband_coeffs(%struct.DiracContext* %47, i32 %49, i32 %51, i32 %52, %struct.SliceCoeffs* %arraydecay), !dbg !10903
  store i32 %call60, i32* %coef_num, align 4, !dbg !10904
  %53 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10905
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %53, i32 0, i32 14, !dbg !10907
  %54 = load i32, i32* %pshift, align 4, !dbg !10907
  %tobool61 = icmp ne i32 %54, 0, !dbg !10905
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !10908

if.then62:                                        ; preds = %if.end59
  %55 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10909
  %reader_ctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %55, i32 0, i32 4, !dbg !10910
  %56 = load %struct.DiracGolombLUT*, %struct.DiracGolombLUT** %reader_ctx, align 8, !dbg !10910
  %57 = load i8*, i8** %addr, align 8, !dbg !10911
  %58 = load i64, i64* %length, align 8, !dbg !10912
  %conv63 = trunc i64 %58 to i32, !dbg !10912
  %59 = load i8*, i8** %tmp_buf.addr, align 8, !dbg !10913
  %60 = load i32, i32* %coef_num, align 4, !dbg !10914
  %call64 = call i32 @ff_dirac_golomb_read_32bit(%struct.DiracGolombLUT* %56, i8* %57, i32 %conv63, i8* %59, i32 %60), !dbg !10915
  store i32 %call64, i32* %coef_par, align 4, !dbg !10916
  br label %if.end68, !dbg !10917

if.else:                                          ; preds = %if.end59
  %61 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10918
  %reader_ctx65 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %61, i32 0, i32 4, !dbg !10919
  %62 = load %struct.DiracGolombLUT*, %struct.DiracGolombLUT** %reader_ctx65, align 8, !dbg !10919
  %63 = load i8*, i8** %addr, align 8, !dbg !10920
  %64 = load i64, i64* %length, align 8, !dbg !10921
  %conv66 = trunc i64 %64 to i32, !dbg !10921
  %65 = load i8*, i8** %tmp_buf.addr, align 8, !dbg !10922
  %66 = load i32, i32* %coef_num, align 4, !dbg !10923
  %call67 = call i32 @ff_dirac_golomb_read_16bit(%struct.DiracGolombLUT* %62, i8* %63, i32 %conv66, i8* %65, i32 %66), !dbg !10924
  store i32 %call67, i32* %coef_par, align 4, !dbg !10925
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then62
  %67 = load i32, i32* %coef_num, align 4, !dbg !10926
  %68 = load i32, i32* %coef_par, align 4, !dbg !10928
  %cmp69 = icmp sgt i32 %67, %68, !dbg !10929
  br i1 %cmp69, label %if.then71, label %if.end83, !dbg !10930

if.then71:                                        ; preds = %if.end68
  call void @llvm.dbg.declare(metadata i32* %start_b, metadata !10931, metadata !2947), !dbg !10933
  %69 = load i32, i32* %coef_par, align 4, !dbg !10934
  %70 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10935
  %pshift72 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %70, i32 0, i32 14, !dbg !10936
  %71 = load i32, i32* %pshift72, align 4, !dbg !10936
  %add73 = add nsw i32 %71, 1, !dbg !10937
  %shl = shl i32 1, %add73, !dbg !10938
  %mul74 = mul nsw i32 %69, %shl, !dbg !10939
  store i32 %mul74, i32* %start_b, align 4, !dbg !10933
  call void @llvm.dbg.declare(metadata i32* %end_b, metadata !10940, metadata !2947), !dbg !10941
  %72 = load i32, i32* %coef_num, align 4, !dbg !10942
  %73 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10943
  %pshift75 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %73, i32 0, i32 14, !dbg !10944
  %74 = load i32, i32* %pshift75, align 4, !dbg !10944
  %add76 = add nsw i32 %74, 1, !dbg !10945
  %shl77 = shl i32 1, %add76, !dbg !10946
  %mul78 = mul nsw i32 %72, %shl77, !dbg !10947
  store i32 %mul78, i32* %end_b, align 4, !dbg !10941
  %75 = load i32, i32* %start_b, align 4, !dbg !10948
  %idxprom79 = sext i32 %75 to i64, !dbg !10949
  %76 = load i8*, i8** %tmp_buf.addr, align 8, !dbg !10949
  %arrayidx80 = getelementptr inbounds i8, i8* %76, i64 %idxprom79, !dbg !10949
  %77 = load i32, i32* %end_b, align 4, !dbg !10950
  %78 = load i32, i32* %start_b, align 4, !dbg !10951
  %sub81 = sub nsw i32 %77, %78, !dbg !10952
  %conv82 = sext i32 %sub81 to i64, !dbg !10950
  call void @llvm.memset.p0i8.i64(i8* %arrayidx80, i8 0, i64 %conv82, i32 1, i1 false), !dbg !10953
  br label %if.end83, !dbg !10954

if.end83:                                         ; preds = %if.then71, %if.end68
  store i32 0, i32* %level, align 4, !dbg !10955
  br label %for.cond84, !dbg !10957

for.cond84:                                       ; preds = %for.inc139, %if.end83
  %79 = load i32, i32* %level, align 4, !dbg !10958
  %80 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10961
  %wavelet_depth85 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %80, i32 0, i32 24, !dbg !10962
  %81 = load i32, i32* %wavelet_depth85, align 4, !dbg !10962
  %cmp86 = icmp ult i32 %79, %81, !dbg !10963
  br i1 %cmp86, label %for.body88, label %for.end141, !dbg !10964

for.body88:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata %struct.SliceCoeffs** %c, metadata !10965, metadata !2947), !dbg !10969
  %82 = load i32, i32* %level, align 4, !dbg !10970
  %idxprom89 = sext i32 %82 to i64, !dbg !10971
  %arrayidx90 = getelementptr inbounds [5 x %struct.SliceCoeffs], [5 x %struct.SliceCoeffs]* %coeffs_num, i64 0, i64 %idxprom89, !dbg !10971
  store %struct.SliceCoeffs* %arrayidx90, %struct.SliceCoeffs** %c, align 8, !dbg !10969
  %83 = load i32, i32* %level, align 4, !dbg !10972
  %tobool91 = icmp ne i32 %83, 0, !dbg !10974
  %lnot92 = xor i1 %tobool91, true, !dbg !10974
  %lnot94 = xor i1 %lnot92, true, !dbg !10975
  %lnot.ext95 = zext i1 %lnot94 to i32, !dbg !10975
  store i32 %lnot.ext95, i32* %orientation, align 4, !dbg !10976
  br label %for.cond96, !dbg !10977

for.cond96:                                       ; preds = %for.inc136, %for.body88
  %84 = load i32, i32* %orientation, align 4, !dbg !10978
  %cmp97 = icmp slt i32 %84, 4, !dbg !10981
  br i1 %cmp97, label %for.body99, label %for.end138, !dbg !10982

for.body99:                                       ; preds = %for.cond96
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b1, metadata !10983, metadata !2947), !dbg !10987
  %85 = load i32, i32* %orientation, align 4, !dbg !10988
  %idxprom100 = sext i32 %85 to i64, !dbg !10989
  %86 = load i32, i32* %level, align 4, !dbg !10990
  %idxprom101 = sext i32 %86 to i64, !dbg !10989
  %87 = load i32, i32* %i, align 4, !dbg !10991
  %idxprom102 = sext i32 %87 to i64, !dbg !10989
  %88 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !10989
  %plane = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %88, i32 0, i32 10, !dbg !10992
  %arrayidx103 = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane, i64 0, i64 %idxprom102, !dbg !10989
  %band = getelementptr inbounds %struct.Plane, %struct.Plane* %arrayidx103, i32 0, i32 10, !dbg !10993
  %arrayidx104 = getelementptr inbounds [5 x [4 x %struct.SubBand]], [5 x [4 x %struct.SubBand]]* %band, i64 0, i64 %idxprom101, !dbg !10989
  %arrayidx105 = getelementptr inbounds [4 x %struct.SubBand], [4 x %struct.SubBand]* %arrayidx104, i64 0, i64 %idxprom100, !dbg !10989
  store %struct.SubBand* %arrayidx105, %struct.SubBand** %b1, align 8, !dbg !10987
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10994, metadata !2947), !dbg !10995
  %89 = load %struct.SubBand*, %struct.SubBand** %b1, align 8, !dbg !10996
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %89, i32 0, i32 7, !dbg !10997
  %90 = load i8*, i8** %ibuf, align 8, !dbg !10997
  %91 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !10998
  %top = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %91, i32 0, i32 1, !dbg !10999
  %92 = load i32, i32* %top, align 4, !dbg !10999
  %93 = load %struct.SubBand*, %struct.SubBand** %b1, align 8, !dbg !11000
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %93, i32 0, i32 2, !dbg !11001
  %94 = load i32, i32* %stride, align 8, !dbg !11001
  %mul106 = mul nsw i32 %92, %94, !dbg !11002
  %idx.ext = sext i32 %mul106 to i64, !dbg !11003
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %idx.ext, !dbg !11003
  %95 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !11004
  %left = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %95, i32 0, i32 0, !dbg !11005
  %96 = load i32, i32* %left, align 4, !dbg !11005
  %97 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11006
  %pshift107 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %97, i32 0, i32 14, !dbg !11007
  %98 = load i32, i32* %pshift107, align 4, !dbg !11007
  %add108 = add nsw i32 %98, 1, !dbg !11008
  %shl109 = shl i32 %96, %add108, !dbg !11009
  %idx.ext110 = sext i32 %shl109 to i64, !dbg !11010
  %add.ptr111 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext110, !dbg !11010
  store i8* %add.ptr111, i8** %buf, align 8, !dbg !10995
  call void @llvm.dbg.declare(metadata i32* %qfunc, metadata !11011, metadata !2947), !dbg !11012
  %99 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11013
  %pshift112 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %99, i32 0, i32 14, !dbg !11014
  %100 = load i32, i32* %pshift112, align 4, !dbg !11014
  %101 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !11015
  %tot_h = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %101, i32 0, i32 2, !dbg !11016
  %102 = load i32, i32* %tot_h, align 4, !dbg !11016
  %cmp113 = icmp sle i32 %102, 2, !dbg !11017
  %conv114 = zext i1 %cmp113 to i32, !dbg !11017
  %mul115 = mul nsw i32 2, %conv114, !dbg !11018
  %add116 = add nsw i32 %100, %mul115, !dbg !11019
  store i32 %add116, i32* %qfunc, align 4, !dbg !11012
  %103 = load i32, i32* %qfunc, align 4, !dbg !11020
  %idxprom117 = sext i32 %103 to i64, !dbg !11021
  %104 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11021
  %diracdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %104, i32 0, i32 3, !dbg !11022
  %dequant_subband = getelementptr inbounds %struct.DiracDSPContext, %struct.DiracDSPContext* %diracdsp, i32 0, i32 7, !dbg !11023
  %arrayidx118 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32, i32)*]* %dequant_subband, i64 0, i64 %idxprom117, !dbg !11021
  %105 = load void (i8*, i8*, i64, i32, i32, i32, i32)*, void (i8*, i8*, i64, i32, i32, i32, i32)** %arrayidx118, align 8, !dbg !11021
  %106 = load i32, i32* %off, align 4, !dbg !11024
  %idxprom119 = sext i32 %106 to i64, !dbg !11025
  %107 = load i8*, i8** %tmp_buf.addr, align 8, !dbg !11025
  %arrayidx120 = getelementptr inbounds i8, i8* %107, i64 %idxprom119, !dbg !11025
  %108 = load i8*, i8** %buf, align 8, !dbg !11026
  %109 = load %struct.SubBand*, %struct.SubBand** %b1, align 8, !dbg !11027
  %stride121 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %109, i32 0, i32 2, !dbg !11028
  %110 = load i32, i32* %stride121, align 8, !dbg !11028
  %conv122 = sext i32 %110 to i64, !dbg !11027
  %111 = load i32, i32* %orientation, align 4, !dbg !11029
  %idxprom123 = sext i32 %111 to i64, !dbg !11030
  %112 = load i32, i32* %level, align 4, !dbg !11031
  %idxprom124 = sext i32 %112 to i64, !dbg !11030
  %arrayidx125 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* %qfactor, i64 0, i64 %idxprom124, !dbg !11030
  %arrayidx126 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx125, i64 0, i64 %idxprom123, !dbg !11030
  %113 = load i32, i32* %arrayidx126, align 4, !dbg !11030
  %114 = load i32, i32* %orientation, align 4, !dbg !11032
  %idxprom127 = sext i32 %114 to i64, !dbg !11033
  %115 = load i32, i32* %level, align 4, !dbg !11034
  %idxprom128 = sext i32 %115 to i64, !dbg !11033
  %arrayidx129 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* %qoffset, i64 0, i64 %idxprom128, !dbg !11033
  %arrayidx130 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx129, i64 0, i64 %idxprom127, !dbg !11033
  %116 = load i32, i32* %arrayidx130, align 4, !dbg !11033
  %117 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !11035
  %tot_v = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %117, i32 0, i32 3, !dbg !11036
  %118 = load i32, i32* %tot_v, align 4, !dbg !11036
  %119 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !11037
  %tot_h131 = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %119, i32 0, i32 2, !dbg !11038
  %120 = load i32, i32* %tot_h131, align 4, !dbg !11038
  call void %105(i8* %arrayidx120, i8* %108, i64 %conv122, i32 %113, i32 %116, i32 %118, i32 %120), !dbg !11021
  %121 = load %struct.SliceCoeffs*, %struct.SliceCoeffs** %c, align 8, !dbg !11039
  %tot = getelementptr inbounds %struct.SliceCoeffs, %struct.SliceCoeffs* %121, i32 0, i32 4, !dbg !11040
  %122 = load i32, i32* %tot, align 4, !dbg !11040
  %123 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11041
  %pshift132 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %123, i32 0, i32 14, !dbg !11042
  %124 = load i32, i32* %pshift132, align 4, !dbg !11042
  %add133 = add nsw i32 %124, 1, !dbg !11043
  %shl134 = shl i32 %122, %add133, !dbg !11044
  %125 = load i32, i32* %off, align 4, !dbg !11045
  %add135 = add nsw i32 %125, %shl134, !dbg !11045
  store i32 %add135, i32* %off, align 4, !dbg !11045
  br label %for.inc136, !dbg !11046

for.inc136:                                       ; preds = %for.body99
  %126 = load i32, i32* %orientation, align 4, !dbg !11047
  %inc137 = add nsw i32 %126, 1, !dbg !11047
  store i32 %inc137, i32* %orientation, align 4, !dbg !11047
  br label %for.cond96, !dbg !11049, !llvm.loop !11050

for.end138:                                       ; preds = %for.cond96
  br label %for.inc139, !dbg !11052

for.inc139:                                       ; preds = %for.end138
  %127 = load i32, i32* %level, align 4, !dbg !11053
  %inc140 = add nsw i32 %127, 1, !dbg !11053
  store i32 %inc140, i32* %level, align 4, !dbg !11053
  br label %for.cond84, !dbg !11055, !llvm.loop !11056

for.end141:                                       ; preds = %for.cond84
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !11058
  %129 = load i64, i64* %bits_end, align 8, !dbg !11059
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !11060
  %call142 = call i32 @get_bits_count(%struct.GetBitContext* %130), !dbg !11061
  %conv143 = sext i32 %call142 to i64, !dbg !11061
  %sub144 = sub nsw i64 %129, %conv143, !dbg !11062
  %conv145 = trunc i64 %sub144 to i32, !dbg !11059
  call void @skip_bits_long(%struct.GetBitContext* %128, i32 %conv145), !dbg !11063
  br label %for.inc146, !dbg !11065

for.inc146:                                       ; preds = %for.end141
  %131 = load i32, i32* %i, align 4, !dbg !11066
  %inc147 = add nsw i32 %131, 1, !dbg !11066
  store i32 %inc147, i32* %i, align 4, !dbg !11066
  br label %for.cond39, !dbg !11068, !llvm.loop !11069

for.end148:                                       ; preds = %for.cond39
  store i32 0, i32* %retval, align 4, !dbg !11071
  br label %return, !dbg !11071

return:                                           ; preds = %for.end148, %if.then57, %if.then
  %132 = load i32, i32* %retval, align 4, !dbg !11072
  ret i32 %132, !dbg !11072
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !11073 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !11074, metadata !2947), !dbg !11077
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !11079, metadata !2947), !dbg !11080
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !11081, metadata !2947), !dbg !11082
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !11083, metadata !2947), !dbg !11084
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11085, metadata !2947), !dbg !11086
  %0 = load i32, i32* %n.addr, align 4, !dbg !11087
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11088
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !11089
  %2 = load i32, i32* %index, align 8, !dbg !11089
  %sub = sub nsw i32 0, %2, !dbg !11090
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11091
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !11092
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !11092
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11093
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !11094
  %6 = load i32, i32* %index1, align 8, !dbg !11094
  %sub2 = sub nsw i32 %4, %6, !dbg !11095
  store i32 %0, i32* %a.addr.i, align 4, !dbg !11096
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !11096
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !11096
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !11097
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !11099
  %cmp.i = icmp slt i32 %7, %8, !dbg !11100
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !11101

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !11102
  store i32 %9, i32* %retval.i, align 4, !dbg !11104
  br label %av_clip_c.exit, !dbg !11104

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !11105
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !11107
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !11108
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !11109

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !11110
  store i32 %12, i32* %retval.i, align 4, !dbg !11112
  br label %av_clip_c.exit, !dbg !11112

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !11113
  store i32 %13, i32* %retval.i, align 4, !dbg !11114
  br label %av_clip_c.exit, !dbg !11114

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !11115
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11116
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !11117
  %16 = load i32, i32* %index3, align 8, !dbg !11118
  %add = add nsw i32 %16, %14, !dbg !11118
  store i32 %add, i32* %index3, align 8, !dbg !11118
  ret void, !dbg !11119
}

declare i32 @ff_dirac_golomb_read_32bit(%struct.DiracGolombLUT*, i8*, i32, i8*, i32) #3

declare i32 @ff_dirac_golomb_read_16bit(%struct.DiracGolombLUT*, i8*, i32, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @decode_subband(%struct.DiracContext* %s, %struct.GetBitContext* %gb, i32 %quant, i32 %slice_x, i32 %slice_y, i32 %bits_end, %struct.SubBand* %b1, %struct.SubBand* %b2) #1 !dbg !11120 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %quant.addr = alloca i32, align 4
  %slice_x.addr = alloca i32, align 4
  %slice_y.addr = alloca i32, align 4
  %bits_end.addr = alloca i32, align 4
  %b1.addr = alloca %struct.SubBand*, align 8
  %b2.addr = alloca %struct.SubBand*, align 8
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %top = alloca i32, align 4
  %bottom = alloca i32, align 4
  %qfactor = alloca i32, align 4
  %qoffset = alloca i32, align 4
  %buf1 = alloca i8*, align 8
  %buf2 = alloca i8*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %buf = alloca i32*, align 8
  %buf73 = alloca i16*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !11123, metadata !2947), !dbg !11124
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11125, metadata !2947), !dbg !11126
  store i32 %quant, i32* %quant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant.addr, metadata !11127, metadata !2947), !dbg !11128
  store i32 %slice_x, i32* %slice_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slice_x.addr, metadata !11129, metadata !2947), !dbg !11130
  store i32 %slice_y, i32* %slice_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slice_y.addr, metadata !11131, metadata !2947), !dbg !11132
  store i32 %bits_end, i32* %bits_end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits_end.addr, metadata !11133, metadata !2947), !dbg !11134
  store %struct.SubBand* %b1, %struct.SubBand** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b1.addr, metadata !11135, metadata !2947), !dbg !11136
  store %struct.SubBand* %b2, %struct.SubBand** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b2.addr, metadata !11137, metadata !2947), !dbg !11138
  call void @llvm.dbg.declare(metadata i32* %left, metadata !11139, metadata !2947), !dbg !11140
  %0 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11141
  %width = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 3, !dbg !11142
  %1 = load i32, i32* %width, align 4, !dbg !11142
  %2 = load i32, i32* %slice_x.addr, align 4, !dbg !11143
  %mul = mul nsw i32 %1, %2, !dbg !11144
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11145
  %num_x = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %3, i32 0, i32 28, !dbg !11146
  %4 = load i32, i32* %num_x, align 4, !dbg !11146
  %div = udiv i32 %mul, %4, !dbg !11147
  store i32 %div, i32* %left, align 4, !dbg !11140
  call void @llvm.dbg.declare(metadata i32* %right, metadata !11148, metadata !2947), !dbg !11149
  %5 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11150
  %width1 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %5, i32 0, i32 3, !dbg !11151
  %6 = load i32, i32* %width1, align 4, !dbg !11151
  %7 = load i32, i32* %slice_x.addr, align 4, !dbg !11152
  %add = add nsw i32 %7, 1, !dbg !11153
  %mul2 = mul nsw i32 %6, %add, !dbg !11154
  %8 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11155
  %num_x3 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %8, i32 0, i32 28, !dbg !11156
  %9 = load i32, i32* %num_x3, align 4, !dbg !11156
  %div4 = udiv i32 %mul2, %9, !dbg !11157
  store i32 %div4, i32* %right, align 4, !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %top, metadata !11158, metadata !2947), !dbg !11159
  %10 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11160
  %height = getelementptr inbounds %struct.SubBand, %struct.SubBand* %10, i32 0, i32 4, !dbg !11161
  %11 = load i32, i32* %height, align 8, !dbg !11161
  %12 = load i32, i32* %slice_y.addr, align 4, !dbg !11162
  %mul5 = mul nsw i32 %11, %12, !dbg !11163
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11164
  %num_y = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 29, !dbg !11165
  %14 = load i32, i32* %num_y, align 16, !dbg !11165
  %div6 = udiv i32 %mul5, %14, !dbg !11166
  store i32 %div6, i32* %top, align 4, !dbg !11159
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !11167, metadata !2947), !dbg !11168
  %15 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11169
  %height7 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %15, i32 0, i32 4, !dbg !11170
  %16 = load i32, i32* %height7, align 8, !dbg !11170
  %17 = load i32, i32* %slice_y.addr, align 4, !dbg !11171
  %add8 = add nsw i32 %17, 1, !dbg !11172
  %mul9 = mul nsw i32 %16, %add8, !dbg !11173
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11174
  %num_y10 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 29, !dbg !11175
  %19 = load i32, i32* %num_y10, align 16, !dbg !11175
  %div11 = udiv i32 %mul9, %19, !dbg !11176
  store i32 %div11, i32* %bottom, align 4, !dbg !11168
  call void @llvm.dbg.declare(metadata i32* %qfactor, metadata !11177, metadata !2947), !dbg !11178
  call void @llvm.dbg.declare(metadata i32* %qoffset, metadata !11179, metadata !2947), !dbg !11180
  call void @llvm.dbg.declare(metadata i8** %buf1, metadata !11181, metadata !2947), !dbg !11182
  %20 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11183
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %20, i32 0, i32 7, !dbg !11184
  %21 = load i8*, i8** %ibuf, align 8, !dbg !11184
  %22 = load i32, i32* %top, align 4, !dbg !11185
  %23 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11186
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %23, i32 0, i32 2, !dbg !11187
  %24 = load i32, i32* %stride, align 8, !dbg !11187
  %mul12 = mul nsw i32 %22, %24, !dbg !11188
  %idx.ext = sext i32 %mul12 to i64, !dbg !11189
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !11189
  store i8* %add.ptr, i8** %buf1, align 8, !dbg !11182
  call void @llvm.dbg.declare(metadata i8** %buf2, metadata !11190, metadata !2947), !dbg !11191
  %25 = load %struct.SubBand*, %struct.SubBand** %b2.addr, align 8, !dbg !11192
  %tobool = icmp ne %struct.SubBand* %25, null, !dbg !11192
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11192

cond.true:                                        ; preds = %entry
  %26 = load %struct.SubBand*, %struct.SubBand** %b2.addr, align 8, !dbg !11193
  %ibuf13 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %26, i32 0, i32 7, !dbg !11195
  %27 = load i8*, i8** %ibuf13, align 8, !dbg !11195
  %28 = load i32, i32* %top, align 4, !dbg !11196
  %29 = load %struct.SubBand*, %struct.SubBand** %b2.addr, align 8, !dbg !11197
  %stride14 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %29, i32 0, i32 2, !dbg !11198
  %30 = load i32, i32* %stride14, align 8, !dbg !11198
  %mul15 = mul nsw i32 %28, %30, !dbg !11199
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !11200
  %add.ptr17 = getelementptr inbounds i8, i8* %27, i64 %idx.ext16, !dbg !11200
  br label %cond.end, !dbg !11201

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr17, %cond.true ], [ null, %cond.false ], !dbg !11204
  store i8* %cond, i8** %buf2, align 8, !dbg !11206
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11207, metadata !2947), !dbg !11208
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11209, metadata !2947), !dbg !11210
  %31 = load i32, i32* %quant.addr, align 4, !dbg !11211
  %conv = sext i32 %31 to i64, !dbg !11211
  %cmp = icmp ugt i64 %conv, 115, !dbg !11213
  br i1 %cmp, label %if.then, label %if.end, !dbg !11214

if.then:                                          ; preds = %cond.end
  %32 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11215
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %32, i32 0, i32 0, !dbg !11217
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !11217
  %34 = bitcast %struct.AVCodecContext* %33 to i8*, !dbg !11215
  %35 = load i32, i32* %quant.addr, align 4, !dbg !11218
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0), i32 %35), !dbg !11219
  br label %if.end110, !dbg !11220

if.end:                                           ; preds = %cond.end
  %36 = load i32, i32* %quant.addr, align 4, !dbg !11221
  %idxprom = sext i32 %36 to i64, !dbg !11222
  %arrayidx = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom, !dbg !11222
  %37 = load i32, i32* %arrayidx, align 4, !dbg !11222
  store i32 %37, i32* %qfactor, align 4, !dbg !11223
  %38 = load i32, i32* %quant.addr, align 4, !dbg !11224
  %idxprom19 = sext i32 %38 to i64, !dbg !11225
  %arrayidx20 = getelementptr inbounds [120 x i32], [120 x i32]* @ff_dirac_qoffset_intra_tab, i64 0, i64 %idxprom19, !dbg !11225
  %39 = load i32, i32* %arrayidx20, align 4, !dbg !11225
  %add21 = add nsw i32 %39, 2, !dbg !11226
  store i32 %add21, i32* %qoffset, align 4, !dbg !11227
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11228
  %call = call i32 @get_bits_count(%struct.GetBitContext* %40), !dbg !11230
  %41 = load i32, i32* %bits_end.addr, align 4, !dbg !11231
  %cmp22 = icmp sge i32 %call, %41, !dbg !11232
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11233

if.then24:                                        ; preds = %if.end
  br label %if.end110, !dbg !11234

if.end25:                                         ; preds = %if.end
  %42 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11235
  %pshift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %42, i32 0, i32 14, !dbg !11237
  %43 = load i32, i32* %pshift, align 4, !dbg !11237
  %tobool26 = icmp ne i32 %43, 0, !dbg !11235
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !11238

if.then27:                                        ; preds = %if.end25
  %44 = load i32, i32* %top, align 4, !dbg !11239
  store i32 %44, i32* %y, align 4, !dbg !11242
  br label %for.cond, !dbg !11243

for.cond:                                         ; preds = %for.inc62, %if.then27
  %45 = load i32, i32* %y, align 4, !dbg !11244
  %46 = load i32, i32* %bottom, align 4, !dbg !11247
  %cmp28 = icmp slt i32 %45, %46, !dbg !11248
  br i1 %cmp28, label %for.body, label %for.end64, !dbg !11249

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %left, align 4, !dbg !11250
  store i32 %47, i32* %x, align 4, !dbg !11253
  br label %for.cond30, !dbg !11254

for.cond30:                                       ; preds = %for.inc, %for.body
  %48 = load i32, i32* %x, align 4, !dbg !11255
  %49 = load i32, i32* %right, align 4, !dbg !11258
  %cmp31 = icmp slt i32 %48, %49, !dbg !11259
  br i1 %cmp31, label %for.body33, label %for.end, !dbg !11260

for.body33:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !11261, metadata !2947), !dbg !11263
  %50 = load i8*, i8** %buf1, align 8, !dbg !11264
  %51 = bitcast i8* %50 to i32*, !dbg !11265
  store i32* %51, i32** %buf, align 8, !dbg !11263
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11266
  %53 = load i32, i32* %qfactor, align 4, !dbg !11267
  %54 = load i32, i32* %qoffset, align 4, !dbg !11268
  %call34 = call i32 @coeff_unpack_golomb(%struct.GetBitContext* %52, i32 %53, i32 %54), !dbg !11269
  %55 = load i32, i32* %x, align 4, !dbg !11270
  %idxprom35 = sext i32 %55 to i64, !dbg !11271
  %56 = load i32*, i32** %buf, align 8, !dbg !11271
  %arrayidx36 = getelementptr inbounds i32, i32* %56, i64 %idxprom35, !dbg !11271
  store i32 %call34, i32* %arrayidx36, align 4, !dbg !11272
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11273
  %call37 = call i32 @get_bits_count(%struct.GetBitContext* %57), !dbg !11275
  %58 = load i32, i32* %bits_end.addr, align 4, !dbg !11277
  %cmp38 = icmp sge i32 %call37, %58, !dbg !11278
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !11279

if.then40:                                        ; preds = %for.body33
  br label %if.end110, !dbg !11280

if.end41:                                         ; preds = %for.body33
  %59 = load i8*, i8** %buf2, align 8, !dbg !11282
  %tobool42 = icmp ne i8* %59, null, !dbg !11282
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !11282

if.then43:                                        ; preds = %if.end41
  %60 = load i8*, i8** %buf2, align 8, !dbg !11285
  %61 = bitcast i8* %60 to i32*, !dbg !11288
  store i32* %61, i32** %buf, align 8, !dbg !11289
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11290
  %63 = load i32, i32* %qfactor, align 4, !dbg !11291
  %64 = load i32, i32* %qoffset, align 4, !dbg !11292
  %call44 = call i32 @coeff_unpack_golomb(%struct.GetBitContext* %62, i32 %63, i32 %64), !dbg !11293
  %65 = load i32, i32* %x, align 4, !dbg !11294
  %idxprom45 = sext i32 %65 to i64, !dbg !11295
  %66 = load i32*, i32** %buf, align 8, !dbg !11295
  %arrayidx46 = getelementptr inbounds i32, i32* %66, i64 %idxprom45, !dbg !11295
  store i32 %call44, i32* %arrayidx46, align 4, !dbg !11296
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11297
  %call47 = call i32 @get_bits_count(%struct.GetBitContext* %67), !dbg !11298
  %68 = load i32, i32* %bits_end.addr, align 4, !dbg !11300
  %cmp48 = icmp sge i32 %call47, %68, !dbg !11301
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !11302

if.then50:                                        ; preds = %if.then43
  br label %if.end110, !dbg !11303

if.end51:                                         ; preds = %if.then43
  br label %if.end52, !dbg !11306

if.end52:                                         ; preds = %if.end51, %if.end41
  br label %for.inc, !dbg !11308

for.inc:                                          ; preds = %if.end52
  %69 = load i32, i32* %x, align 4, !dbg !11309
  %inc = add nsw i32 %69, 1, !dbg !11309
  store i32 %inc, i32* %x, align 4, !dbg !11309
  br label %for.cond30, !dbg !11311, !llvm.loop !11312

for.end:                                          ; preds = %for.cond30
  %70 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11314
  %stride53 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %70, i32 0, i32 2, !dbg !11315
  %71 = load i32, i32* %stride53, align 8, !dbg !11315
  %72 = load i8*, i8** %buf1, align 8, !dbg !11316
  %idx.ext54 = sext i32 %71 to i64, !dbg !11316
  %add.ptr55 = getelementptr inbounds i8, i8* %72, i64 %idx.ext54, !dbg !11316
  store i8* %add.ptr55, i8** %buf1, align 8, !dbg !11316
  %73 = load i8*, i8** %buf2, align 8, !dbg !11317
  %tobool56 = icmp ne i8* %73, null, !dbg !11317
  br i1 %tobool56, label %if.then57, label %if.end61, !dbg !11319

if.then57:                                        ; preds = %for.end
  %74 = load %struct.SubBand*, %struct.SubBand** %b2.addr, align 8, !dbg !11320
  %stride58 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %74, i32 0, i32 2, !dbg !11321
  %75 = load i32, i32* %stride58, align 8, !dbg !11321
  %76 = load i8*, i8** %buf2, align 8, !dbg !11322
  %idx.ext59 = sext i32 %75 to i64, !dbg !11322
  %add.ptr60 = getelementptr inbounds i8, i8* %76, i64 %idx.ext59, !dbg !11322
  store i8* %add.ptr60, i8** %buf2, align 8, !dbg !11322
  br label %if.end61, !dbg !11323

if.end61:                                         ; preds = %if.then57, %for.end
  br label %for.inc62, !dbg !11324

for.inc62:                                        ; preds = %if.end61
  %77 = load i32, i32* %y, align 4, !dbg !11325
  %inc63 = add nsw i32 %77, 1, !dbg !11325
  store i32 %inc63, i32* %y, align 4, !dbg !11325
  br label %for.cond, !dbg !11327, !llvm.loop !11328

for.end64:                                        ; preds = %for.cond
  br label %if.end110, !dbg !11330

if.else:                                          ; preds = %if.end25
  %78 = load i32, i32* %top, align 4, !dbg !11331
  store i32 %78, i32* %y, align 4, !dbg !11334
  br label %for.cond65, !dbg !11335

for.cond65:                                       ; preds = %for.inc107, %if.else
  %79 = load i32, i32* %y, align 4, !dbg !11336
  %80 = load i32, i32* %bottom, align 4, !dbg !11339
  %cmp66 = icmp slt i32 %79, %80, !dbg !11340
  br i1 %cmp66, label %for.body68, label %for.end109, !dbg !11341

for.body68:                                       ; preds = %for.cond65
  %81 = load i32, i32* %left, align 4, !dbg !11342
  store i32 %81, i32* %x, align 4, !dbg !11345
  br label %for.cond69, !dbg !11346

for.cond69:                                       ; preds = %for.inc95, %for.body68
  %82 = load i32, i32* %x, align 4, !dbg !11347
  %83 = load i32, i32* %right, align 4, !dbg !11350
  %cmp70 = icmp slt i32 %82, %83, !dbg !11351
  br i1 %cmp70, label %for.body72, label %for.end97, !dbg !11352

for.body72:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata i16** %buf73, metadata !11353, metadata !2947), !dbg !11355
  %84 = load i8*, i8** %buf1, align 8, !dbg !11356
  %85 = bitcast i8* %84 to i16*, !dbg !11357
  store i16* %85, i16** %buf73, align 8, !dbg !11355
  %86 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11358
  %87 = load i32, i32* %qfactor, align 4, !dbg !11359
  %88 = load i32, i32* %qoffset, align 4, !dbg !11360
  %call74 = call i32 @coeff_unpack_golomb(%struct.GetBitContext* %86, i32 %87, i32 %88), !dbg !11361
  %conv75 = trunc i32 %call74 to i16, !dbg !11361
  %89 = load i32, i32* %x, align 4, !dbg !11362
  %idxprom76 = sext i32 %89 to i64, !dbg !11363
  %90 = load i16*, i16** %buf73, align 8, !dbg !11363
  %arrayidx77 = getelementptr inbounds i16, i16* %90, i64 %idxprom76, !dbg !11363
  store i16 %conv75, i16* %arrayidx77, align 2, !dbg !11364
  %91 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11365
  %call78 = call i32 @get_bits_count(%struct.GetBitContext* %91), !dbg !11367
  %92 = load i32, i32* %bits_end.addr, align 4, !dbg !11369
  %cmp79 = icmp sge i32 %call78, %92, !dbg !11370
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !11371

if.then81:                                        ; preds = %for.body72
  br label %if.end110, !dbg !11372

if.end82:                                         ; preds = %for.body72
  %93 = load i8*, i8** %buf2, align 8, !dbg !11374
  %tobool83 = icmp ne i8* %93, null, !dbg !11374
  br i1 %tobool83, label %if.then84, label %if.end94, !dbg !11374

if.then84:                                        ; preds = %if.end82
  %94 = load i8*, i8** %buf2, align 8, !dbg !11377
  %95 = bitcast i8* %94 to i16*, !dbg !11380
  store i16* %95, i16** %buf73, align 8, !dbg !11381
  %96 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11382
  %97 = load i32, i32* %qfactor, align 4, !dbg !11383
  %98 = load i32, i32* %qoffset, align 4, !dbg !11384
  %call85 = call i32 @coeff_unpack_golomb(%struct.GetBitContext* %96, i32 %97, i32 %98), !dbg !11385
  %conv86 = trunc i32 %call85 to i16, !dbg !11385
  %99 = load i32, i32* %x, align 4, !dbg !11386
  %idxprom87 = sext i32 %99 to i64, !dbg !11387
  %100 = load i16*, i16** %buf73, align 8, !dbg !11387
  %arrayidx88 = getelementptr inbounds i16, i16* %100, i64 %idxprom87, !dbg !11387
  store i16 %conv86, i16* %arrayidx88, align 2, !dbg !11388
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11389
  %call89 = call i32 @get_bits_count(%struct.GetBitContext* %101), !dbg !11390
  %102 = load i32, i32* %bits_end.addr, align 4, !dbg !11392
  %cmp90 = icmp sge i32 %call89, %102, !dbg !11393
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !11394

if.then92:                                        ; preds = %if.then84
  br label %if.end110, !dbg !11395

if.end93:                                         ; preds = %if.then84
  br label %if.end94, !dbg !11398

if.end94:                                         ; preds = %if.end93, %if.end82
  br label %for.inc95, !dbg !11400

for.inc95:                                        ; preds = %if.end94
  %103 = load i32, i32* %x, align 4, !dbg !11401
  %inc96 = add nsw i32 %103, 1, !dbg !11401
  store i32 %inc96, i32* %x, align 4, !dbg !11401
  br label %for.cond69, !dbg !11403, !llvm.loop !11404

for.end97:                                        ; preds = %for.cond69
  %104 = load %struct.SubBand*, %struct.SubBand** %b1.addr, align 8, !dbg !11406
  %stride98 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %104, i32 0, i32 2, !dbg !11407
  %105 = load i32, i32* %stride98, align 8, !dbg !11407
  %106 = load i8*, i8** %buf1, align 8, !dbg !11408
  %idx.ext99 = sext i32 %105 to i64, !dbg !11408
  %add.ptr100 = getelementptr inbounds i8, i8* %106, i64 %idx.ext99, !dbg !11408
  store i8* %add.ptr100, i8** %buf1, align 8, !dbg !11408
  %107 = load i8*, i8** %buf2, align 8, !dbg !11409
  %tobool101 = icmp ne i8* %107, null, !dbg !11409
  br i1 %tobool101, label %if.then102, label %if.end106, !dbg !11411

if.then102:                                       ; preds = %for.end97
  %108 = load %struct.SubBand*, %struct.SubBand** %b2.addr, align 8, !dbg !11412
  %stride103 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %108, i32 0, i32 2, !dbg !11413
  %109 = load i32, i32* %stride103, align 8, !dbg !11413
  %110 = load i8*, i8** %buf2, align 8, !dbg !11414
  %idx.ext104 = sext i32 %109 to i64, !dbg !11414
  %add.ptr105 = getelementptr inbounds i8, i8* %110, i64 %idx.ext104, !dbg !11414
  store i8* %add.ptr105, i8** %buf2, align 8, !dbg !11414
  br label %if.end106, !dbg !11415

if.end106:                                        ; preds = %if.then102, %for.end97
  br label %for.inc107, !dbg !11416

for.inc107:                                       ; preds = %if.end106
  %111 = load i32, i32* %y, align 4, !dbg !11417
  %inc108 = add nsw i32 %111, 1, !dbg !11417
  store i32 %inc108, i32* %y, align 4, !dbg !11417
  br label %for.cond65, !dbg !11419, !llvm.loop !11420

for.end109:                                       ; preds = %for.cond65
  br label %if.end110

if.end110:                                        ; preds = %if.then, %if.then24, %if.then40, %if.then50, %if.then81, %if.then92, %for.end109, %for.end64
  ret void, !dbg !11422
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coeff_unpack_golomb(%struct.GetBitContext* %gb, i32 %qfactor, i32 %qoffset) #5 !dbg !11423 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %qfactor.addr = alloca i32, align 4
  %qoffset.addr = alloca i32, align 4
  %coeff = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11426, metadata !2947), !dbg !11427
  store i32 %qfactor, i32* %qfactor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qfactor.addr, metadata !11428, metadata !2947), !dbg !11429
  store i32 %qoffset, i32* %qoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qoffset.addr, metadata !11430, metadata !2947), !dbg !11431
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !11432, metadata !2947), !dbg !11433
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11434
  %call = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %0), !dbg !11435
  store i32 %call, i32* %coeff, align 4, !dbg !11433
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !11436, metadata !2947), !dbg !11438
  %1 = load i32, i32* %coeff, align 4, !dbg !11439
  %cmp = icmp sgt i32 %1, 0, !dbg !11440
  %cond = select i1 %cmp, i32 1, i32 -1, !dbg !11441
  store i32 %cond, i32* %sign, align 4, !dbg !11438
  %2 = load i32, i32* %coeff, align 4, !dbg !11442
  %tobool = icmp ne i32 %2, 0, !dbg !11442
  br i1 %tobool, label %if.then, label %if.end, !dbg !11444

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %sign, align 4, !dbg !11445
  %4 = load i32, i32* %sign, align 4, !dbg !11446
  %5 = load i32, i32* %coeff, align 4, !dbg !11447
  %mul = mul i32 %4, %5, !dbg !11448
  %6 = load i32, i32* %qfactor.addr, align 4, !dbg !11449
  %mul1 = mul i32 %mul, %6, !dbg !11450
  %7 = load i32, i32* %qoffset.addr, align 4, !dbg !11451
  %add = add i32 %mul1, %7, !dbg !11452
  %shr = lshr i32 %add, 2, !dbg !11453
  %mul2 = mul i32 %3, %shr, !dbg !11454
  store i32 %mul2, i32* %coeff, align 4, !dbg !11455
  br label %if.end, !dbg !11456

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %coeff, align 4, !dbg !11457
  ret i32 %8, !dbg !11458
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_subband_arith(%struct.AVCodecContext* %avctx, i8* %b) #1 !dbg !11459 {
entry:
  %retval.i = alloca i32, align 4
  %s.addr.i = alloca %struct.DiracContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr.i, metadata !11460, metadata !2947), !dbg !11464
  %b.addr.i = alloca %struct.SubBand*, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr.i, metadata !11466, metadata !2947), !dbg !11467
  %is_arith.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %is_arith.addr.i, metadata !11468, metadata !2947), !dbg !11469
  %cb_x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_x.i, metadata !11470, metadata !2947), !dbg !11471
  %cb_y.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_y.i, metadata !11472, metadata !2947), !dbg !11473
  %left.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %left.i, metadata !11474, metadata !2947), !dbg !11475
  %right.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %right.i, metadata !11476, metadata !2947), !dbg !11477
  %top.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %top.i, metadata !11478, metadata !2947), !dbg !11479
  %bottom.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bottom.i, metadata !11480, metadata !2947), !dbg !11481
  %c.i = alloca %struct.DiracArith, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith* %c.i, metadata !11482, metadata !2947), !dbg !11483
  %gb.i = alloca %struct.GetBitContext, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb.i, metadata !11484, metadata !2947), !dbg !11485
  %cb_width.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_width.i, metadata !11486, metadata !2947), !dbg !11487
  %cb_height.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_height.i, metadata !11488, metadata !2947), !dbg !11489
  %blockcnt_one.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %blockcnt_one.i, metadata !11490, metadata !2947), !dbg !11491
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !11492, metadata !2947), !dbg !11493
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %b.addr = alloca i8*, align 8
  %s = alloca %struct.DiracContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !11494, metadata !2947), !dbg !11495
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11496, metadata !2947), !dbg !11497
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !11498, metadata !2947), !dbg !11499
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11500
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !11501
  %1 = load i8*, i8** %priv_data, align 8, !dbg !11501
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !11500
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !11499
  %3 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !11502
  %4 = load i8*, i8** %b.addr, align 8, !dbg !11503
  %5 = bitcast i8* %4 to %struct.SubBand*, !dbg !11503
  store %struct.DiracContext* %3, %struct.DiracContext** %s.addr.i, align 8, !dbg !11504
  store %struct.SubBand* %5, %struct.SubBand** %b.addr.i, align 8, !dbg !11504
  store i32 1, i32* %is_arith.addr.i, align 4, !dbg !11504
  %6 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11505
  %level.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %6, i32 0, i32 0, !dbg !11506
  %7 = load i32, i32* %level.i, align 8, !dbg !11506
  %8 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11507
  %orientation.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %8, i32 0, i32 1, !dbg !11508
  %9 = load i32, i32* %orientation.i, align 4, !dbg !11508
  %cmp.i = icmp ne i32 %9, 0, !dbg !11509
  %conv.i = zext i1 %cmp.i to i32, !dbg !11509
  %add.i = add nsw i32 %7, %conv.i, !dbg !11510
  %idxprom.i = sext i32 %add.i to i64, !dbg !11511
  %10 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11511
  %codeblock.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %10, i32 0, i32 35, !dbg !11512
  %arrayidx.i = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock.i, i64 0, i64 %idxprom.i, !dbg !11511
  %width.i = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx.i, i32 0, i32 0, !dbg !11513
  %11 = load i32, i32* %width.i, align 4, !dbg !11513
  store i32 %11, i32* %cb_width.i, align 4, !dbg !11487
  %12 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11514
  %level1.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %12, i32 0, i32 0, !dbg !11515
  %13 = load i32, i32* %level1.i, align 8, !dbg !11515
  %14 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11516
  %orientation2.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 1, !dbg !11517
  %15 = load i32, i32* %orientation2.i, align 4, !dbg !11517
  %cmp3.i = icmp ne i32 %15, 0, !dbg !11518
  %conv4.i = zext i1 %cmp3.i to i32, !dbg !11518
  %add5.i = add nsw i32 %13, %conv4.i, !dbg !11519
  %idxprom6.i = sext i32 %add5.i to i64, !dbg !11520
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11520
  %codeblock7.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 35, !dbg !11521
  %arrayidx8.i = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock7.i, i64 0, i64 %idxprom6.i, !dbg !11520
  %height.i = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx8.i, i32 0, i32 1, !dbg !11522
  %17 = load i32, i32* %height.i, align 4, !dbg !11522
  store i32 %17, i32* %cb_height.i, align 4, !dbg !11489
  %18 = load i32, i32* %cb_width.i, align 4, !dbg !11523
  %19 = load i32, i32* %cb_height.i, align 4, !dbg !11524
  %add9.i = add nsw i32 %18, %19, !dbg !11525
  %cmp10.i = icmp eq i32 %add9.i, 2, !dbg !11526
  %conv11.i = zext i1 %cmp10.i to i32, !dbg !11526
  store i32 %conv11.i, i32* %blockcnt_one.i, align 4, !dbg !11491
  %20 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11527
  %length.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %20, i32 0, i32 9, !dbg !11529
  %21 = load i32, i32* %length.i, align 8, !dbg !11529
  %tobool.i = icmp ne i32 %21, 0, !dbg !11527
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !11530

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !11531
  br label %decode_subband_internal.exit, !dbg !11531

if.end.i:                                         ; preds = %entry
  %22 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11532
  %coeff_data.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %22, i32 0, i32 10, !dbg !11533
  %23 = load i8*, i8** %coeff_data.i, align 8, !dbg !11533
  %24 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11534
  %length12.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %24, i32 0, i32 9, !dbg !11535
  %25 = load i32, i32* %length12.i, align 8, !dbg !11535
  %call.i = call i32 @init_get_bits8(%struct.GetBitContext* %gb.i, i8* %23, i32 %25) #9, !dbg !11536
  %26 = load i32, i32* %is_arith.addr.i, align 4, !dbg !11537
  %tobool13.i = icmp ne i32 %26, 0, !dbg !11537
  br i1 %tobool13.i, label %if.then14.i, label %if.end16.i, !dbg !11539

if.then14.i:                                      ; preds = %if.end.i
  %27 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11540
  %length15.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %27, i32 0, i32 9, !dbg !11541
  %28 = load i32, i32* %length15.i, align 8, !dbg !11541
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %c.i, %struct.GetBitContext* %gb.i, i32 %28) #9, !dbg !11542
  br label %if.end16.i, !dbg !11542

if.end16.i:                                       ; preds = %if.then14.i, %if.end.i
  store i32 0, i32* %top.i, align 4, !dbg !11543
  store i32 0, i32* %cb_y.i, align 4, !dbg !11544
  br label %for.cond.i, !dbg !11546

for.cond.i:                                       ; preds = %for.end.i, %if.end16.i
  %29 = load i32, i32* %cb_y.i, align 4, !dbg !11547
  %30 = load i32, i32* %cb_height.i, align 4, !dbg !11550
  %cmp17.i = icmp slt i32 %29, %30, !dbg !11551
  br i1 %cmp17.i, label %for.body.i, label %for.end44.i, !dbg !11552

for.body.i:                                       ; preds = %for.cond.i
  %31 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11553
  %height19.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %31, i32 0, i32 4, !dbg !11555
  %32 = load i32, i32* %height19.i, align 8, !dbg !11555
  %conv20.i = sext i32 %32 to i64, !dbg !11553
  %33 = load i32, i32* %cb_y.i, align 4, !dbg !11556
  %conv21.i = sext i32 %33 to i64, !dbg !11556
  %add22.i = add nsw i64 %conv21.i, 1, !dbg !11557
  %mul.i = mul nsw i64 %conv20.i, %add22.i, !dbg !11558
  %34 = load i32, i32* %cb_height.i, align 4, !dbg !11559
  %conv23.i = sext i32 %34 to i64, !dbg !11559
  %div.i = sdiv i64 %mul.i, %conv23.i, !dbg !11560
  %conv24.i = trunc i64 %div.i to i32, !dbg !11561
  store i32 %conv24.i, i32* %bottom.i, align 4, !dbg !11562
  store i32 0, i32* %left.i, align 4, !dbg !11563
  store i32 0, i32* %cb_x.i, align 4, !dbg !11564
  br label %for.cond25.i, !dbg !11566

for.cond25.i:                                     ; preds = %if.end41.i, %for.body.i
  %35 = load i32, i32* %cb_x.i, align 4, !dbg !11567
  %36 = load i32, i32* %cb_width.i, align 4, !dbg !11570
  %cmp26.i = icmp slt i32 %35, %36, !dbg !11571
  br i1 %cmp26.i, label %for.body28.i, label %for.end.i, !dbg !11572

for.body28.i:                                     ; preds = %for.cond25.i
  %37 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11573
  %width29.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %37, i32 0, i32 3, !dbg !11575
  %38 = load i32, i32* %width29.i, align 4, !dbg !11575
  %conv30.i = sext i32 %38 to i64, !dbg !11573
  %39 = load i32, i32* %cb_x.i, align 4, !dbg !11576
  %conv31.i = sext i32 %39 to i64, !dbg !11576
  %add32.i = add nsw i64 %conv31.i, 1, !dbg !11577
  %mul33.i = mul nsw i64 %conv30.i, %add32.i, !dbg !11578
  %40 = load i32, i32* %cb_width.i, align 4, !dbg !11579
  %conv34.i = sext i32 %40 to i64, !dbg !11579
  %div35.i = sdiv i64 %mul33.i, %conv34.i, !dbg !11580
  %conv36.i = trunc i64 %div35.i to i32, !dbg !11581
  store i32 %conv36.i, i32* %right.i, align 4, !dbg !11582
  %41 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11583
  %42 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11584
  %43 = load i32, i32* %left.i, align 4, !dbg !11585
  %44 = load i32, i32* %right.i, align 4, !dbg !11586
  %45 = load i32, i32* %top.i, align 4, !dbg !11587
  %46 = load i32, i32* %bottom.i, align 4, !dbg !11588
  %47 = load i32, i32* %blockcnt_one.i, align 4, !dbg !11589
  %48 = load i32, i32* %is_arith.addr.i, align 4, !dbg !11590
  %call37.i = call i32 @codeblock(%struct.DiracContext* %41, %struct.SubBand* %42, %struct.GetBitContext* %gb.i, %struct.DiracArith* %c.i, i32 %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %48) #9, !dbg !11591
  store i32 %call37.i, i32* %ret.i, align 4, !dbg !11592
  %49 = load i32, i32* %ret.i, align 4, !dbg !11593
  %cmp38.i = icmp slt i32 %49, 0, !dbg !11595
  br i1 %cmp38.i, label %if.then40.i, label %if.end41.i, !dbg !11596

if.then40.i:                                      ; preds = %for.body28.i
  %50 = load i32, i32* %ret.i, align 4, !dbg !11597
  store i32 %50, i32* %retval.i, align 4, !dbg !11598
  br label %decode_subband_internal.exit, !dbg !11598

if.end41.i:                                       ; preds = %for.body28.i
  %51 = load i32, i32* %right.i, align 4, !dbg !11599
  store i32 %51, i32* %left.i, align 4, !dbg !11600
  %52 = load i32, i32* %cb_x.i, align 4, !dbg !11601
  %inc.i = add nsw i32 %52, 1, !dbg !11601
  store i32 %inc.i, i32* %cb_x.i, align 4, !dbg !11601
  br label %for.cond25.i, !dbg !11603, !llvm.loop !11604

for.end.i:                                        ; preds = %for.cond25.i
  %53 = load i32, i32* %bottom.i, align 4, !dbg !11606
  store i32 %53, i32* %top.i, align 4, !dbg !11607
  %54 = load i32, i32* %cb_y.i, align 4, !dbg !11608
  %inc43.i = add nsw i32 %54, 1, !dbg !11608
  store i32 %inc43.i, i32* %cb_y.i, align 4, !dbg !11608
  br label %for.cond.i, !dbg !11610, !llvm.loop !11611

for.end44.i:                                      ; preds = %for.cond.i
  %55 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11613
  %orientation45.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %55, i32 0, i32 1, !dbg !11615
  %56 = load i32, i32* %orientation45.i, align 4, !dbg !11615
  %cmp46.i = icmp eq i32 %56, 0, !dbg !11616
  br i1 %cmp46.i, label %land.lhs.true.i, label %if.end54.i, !dbg !11617

land.lhs.true.i:                                  ; preds = %for.end44.i
  %57 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11618
  %num_refs.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %57, i32 0, i32 23, !dbg !11620
  %58 = load i32, i32* %num_refs.i, align 8, !dbg !11620
  %cmp48.i = icmp eq i32 %58, 0, !dbg !11621
  br i1 %cmp48.i, label %if.then50.i, label %if.end54.i, !dbg !11622

if.then50.i:                                      ; preds = %land.lhs.true.i
  %59 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11623
  %pshift.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %59, i32 0, i32 14, !dbg !11626
  %60 = load i32, i32* %pshift.i, align 4, !dbg !11626
  %tobool51.i = icmp ne i32 %60, 0, !dbg !11623
  br i1 %tobool51.i, label %if.then52.i, label %if.else.i, !dbg !11627

if.then52.i:                                      ; preds = %if.then50.i
  %61 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11628
  call void @intra_dc_prediction_10(%struct.SubBand* %61) #9, !dbg !11630
  br label %if.end53.i, !dbg !11631

if.else.i:                                        ; preds = %if.then50.i
  %62 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11632
  call void @intra_dc_prediction_8(%struct.SubBand* %62) #9, !dbg !11634
  br label %if.end53.i, !dbg !11504

if.end53.i:                                       ; preds = %if.else.i, %if.then52.i
  br label %if.end54.i, !dbg !11635

if.end54.i:                                       ; preds = %if.end53.i, %land.lhs.true.i, %for.end44.i
  store i32 0, i32* %retval.i, align 4, !dbg !11636
  br label %decode_subband_internal.exit, !dbg !11636

decode_subband_internal.exit:                     ; preds = %if.then.i, %if.then40.i, %if.end54.i
  %63 = load i32, i32* %retval.i, align 4, !dbg !11637
  ret i32 %63, !dbg !11638
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_subband_golomb(%struct.AVCodecContext* %avctx, i8* %arg) #1 !dbg !11639 {
entry:
  %retval.i = alloca i32, align 4
  %s.addr.i = alloca %struct.DiracContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr.i, metadata !11460, metadata !2947), !dbg !11640
  %b.addr.i = alloca %struct.SubBand*, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr.i, metadata !11466, metadata !2947), !dbg !11642
  %is_arith.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %is_arith.addr.i, metadata !11468, metadata !2947), !dbg !11643
  %cb_x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_x.i, metadata !11470, metadata !2947), !dbg !11644
  %cb_y.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_y.i, metadata !11472, metadata !2947), !dbg !11645
  %left.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %left.i, metadata !11474, metadata !2947), !dbg !11646
  %right.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %right.i, metadata !11476, metadata !2947), !dbg !11647
  %top.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %top.i, metadata !11478, metadata !2947), !dbg !11648
  %bottom.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bottom.i, metadata !11480, metadata !2947), !dbg !11649
  %c.i = alloca %struct.DiracArith, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith* %c.i, metadata !11482, metadata !2947), !dbg !11650
  %gb.i = alloca %struct.GetBitContext, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb.i, metadata !11484, metadata !2947), !dbg !11651
  %cb_width.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_width.i, metadata !11486, metadata !2947), !dbg !11652
  %cb_height.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb_height.i, metadata !11488, metadata !2947), !dbg !11653
  %blockcnt_one.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %blockcnt_one.i, metadata !11490, metadata !2947), !dbg !11654
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !11492, metadata !2947), !dbg !11655
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %s = alloca %struct.DiracContext*, align 8
  %b = alloca %struct.SubBand**, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !11656, metadata !2947), !dbg !11657
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11658, metadata !2947), !dbg !11659
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s, metadata !11660, metadata !2947), !dbg !11661
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !11662
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !11663
  %1 = load i8*, i8** %priv_data, align 8, !dbg !11663
  %2 = bitcast i8* %1 to %struct.DiracContext*, !dbg !11662
  store %struct.DiracContext* %2, %struct.DiracContext** %s, align 8, !dbg !11661
  call void @llvm.dbg.declare(metadata %struct.SubBand*** %b, metadata !11664, metadata !2947), !dbg !11666
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !11667
  %4 = bitcast i8* %3 to %struct.SubBand**, !dbg !11667
  store %struct.SubBand** %4, %struct.SubBand*** %b, align 8, !dbg !11666
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s, align 8, !dbg !11668
  %6 = load %struct.SubBand**, %struct.SubBand*** %b, align 8, !dbg !11669
  %7 = load %struct.SubBand*, %struct.SubBand** %6, align 8, !dbg !11670
  store %struct.DiracContext* %5, %struct.DiracContext** %s.addr.i, align 8, !dbg !11671
  store %struct.SubBand* %7, %struct.SubBand** %b.addr.i, align 8, !dbg !11671
  store i32 0, i32* %is_arith.addr.i, align 4, !dbg !11671
  %8 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11672
  %level.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %8, i32 0, i32 0, !dbg !11673
  %9 = load i32, i32* %level.i, align 8, !dbg !11673
  %10 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11674
  %orientation.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %10, i32 0, i32 1, !dbg !11675
  %11 = load i32, i32* %orientation.i, align 4, !dbg !11675
  %cmp.i = icmp ne i32 %11, 0, !dbg !11676
  %conv.i = zext i1 %cmp.i to i32, !dbg !11676
  %add.i = add nsw i32 %9, %conv.i, !dbg !11677
  %idxprom.i = sext i32 %add.i to i64, !dbg !11678
  %12 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11678
  %codeblock.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %12, i32 0, i32 35, !dbg !11679
  %arrayidx.i = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock.i, i64 0, i64 %idxprom.i, !dbg !11678
  %width.i = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx.i, i32 0, i32 0, !dbg !11680
  %13 = load i32, i32* %width.i, align 4, !dbg !11680
  store i32 %13, i32* %cb_width.i, align 4, !dbg !11652
  %14 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11681
  %level1.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 0, !dbg !11682
  %15 = load i32, i32* %level1.i, align 8, !dbg !11682
  %16 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11683
  %orientation2.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %16, i32 0, i32 1, !dbg !11684
  %17 = load i32, i32* %orientation2.i, align 4, !dbg !11684
  %cmp3.i = icmp ne i32 %17, 0, !dbg !11685
  %conv4.i = zext i1 %cmp3.i to i32, !dbg !11685
  %add5.i = add nsw i32 %15, %conv4.i, !dbg !11686
  %idxprom6.i = sext i32 %add5.i to i64, !dbg !11687
  %18 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11687
  %codeblock7.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %18, i32 0, i32 35, !dbg !11688
  %arrayidx8.i = getelementptr inbounds [6 x %struct.anon], [6 x %struct.anon]* %codeblock7.i, i64 0, i64 %idxprom6.i, !dbg !11687
  %height.i = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx8.i, i32 0, i32 1, !dbg !11689
  %19 = load i32, i32* %height.i, align 4, !dbg !11689
  store i32 %19, i32* %cb_height.i, align 4, !dbg !11653
  %20 = load i32, i32* %cb_width.i, align 4, !dbg !11690
  %21 = load i32, i32* %cb_height.i, align 4, !dbg !11691
  %add9.i = add nsw i32 %20, %21, !dbg !11692
  %cmp10.i = icmp eq i32 %add9.i, 2, !dbg !11693
  %conv11.i = zext i1 %cmp10.i to i32, !dbg !11693
  store i32 %conv11.i, i32* %blockcnt_one.i, align 4, !dbg !11654
  %22 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11694
  %length.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %22, i32 0, i32 9, !dbg !11695
  %23 = load i32, i32* %length.i, align 8, !dbg !11695
  %tobool.i = icmp ne i32 %23, 0, !dbg !11694
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !11696

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !11697
  br label %decode_subband_internal.exit, !dbg !11697

if.end.i:                                         ; preds = %entry
  %24 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11698
  %coeff_data.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %24, i32 0, i32 10, !dbg !11699
  %25 = load i8*, i8** %coeff_data.i, align 8, !dbg !11699
  %26 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11700
  %length12.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %26, i32 0, i32 9, !dbg !11701
  %27 = load i32, i32* %length12.i, align 8, !dbg !11701
  %call.i = call i32 @init_get_bits8(%struct.GetBitContext* %gb.i, i8* %25, i32 %27) #9, !dbg !11702
  %28 = load i32, i32* %is_arith.addr.i, align 4, !dbg !11703
  %tobool13.i = icmp ne i32 %28, 0, !dbg !11703
  br i1 %tobool13.i, label %if.then14.i, label %if.end16.i, !dbg !11704

if.then14.i:                                      ; preds = %if.end.i
  %29 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11705
  %length15.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %29, i32 0, i32 9, !dbg !11706
  %30 = load i32, i32* %length15.i, align 8, !dbg !11706
  call void @ff_dirac_init_arith_decoder(%struct.DiracArith* %c.i, %struct.GetBitContext* %gb.i, i32 %30) #9, !dbg !11707
  br label %if.end16.i, !dbg !11707

if.end16.i:                                       ; preds = %if.then14.i, %if.end.i
  store i32 0, i32* %top.i, align 4, !dbg !11708
  store i32 0, i32* %cb_y.i, align 4, !dbg !11709
  br label %for.cond.i, !dbg !11710

for.cond.i:                                       ; preds = %for.end.i, %if.end16.i
  %31 = load i32, i32* %cb_y.i, align 4, !dbg !11711
  %32 = load i32, i32* %cb_height.i, align 4, !dbg !11712
  %cmp17.i = icmp slt i32 %31, %32, !dbg !11713
  br i1 %cmp17.i, label %for.body.i, label %for.end44.i, !dbg !11714

for.body.i:                                       ; preds = %for.cond.i
  %33 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11715
  %height19.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %33, i32 0, i32 4, !dbg !11716
  %34 = load i32, i32* %height19.i, align 8, !dbg !11716
  %conv20.i = sext i32 %34 to i64, !dbg !11715
  %35 = load i32, i32* %cb_y.i, align 4, !dbg !11717
  %conv21.i = sext i32 %35 to i64, !dbg !11717
  %add22.i = add nsw i64 %conv21.i, 1, !dbg !11718
  %mul.i = mul nsw i64 %conv20.i, %add22.i, !dbg !11719
  %36 = load i32, i32* %cb_height.i, align 4, !dbg !11720
  %conv23.i = sext i32 %36 to i64, !dbg !11720
  %div.i = sdiv i64 %mul.i, %conv23.i, !dbg !11721
  %conv24.i = trunc i64 %div.i to i32, !dbg !11722
  store i32 %conv24.i, i32* %bottom.i, align 4, !dbg !11723
  store i32 0, i32* %left.i, align 4, !dbg !11724
  store i32 0, i32* %cb_x.i, align 4, !dbg !11725
  br label %for.cond25.i, !dbg !11726

for.cond25.i:                                     ; preds = %if.end41.i, %for.body.i
  %37 = load i32, i32* %cb_x.i, align 4, !dbg !11727
  %38 = load i32, i32* %cb_width.i, align 4, !dbg !11728
  %cmp26.i = icmp slt i32 %37, %38, !dbg !11729
  br i1 %cmp26.i, label %for.body28.i, label %for.end.i, !dbg !11730

for.body28.i:                                     ; preds = %for.cond25.i
  %39 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11731
  %width29.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %39, i32 0, i32 3, !dbg !11732
  %40 = load i32, i32* %width29.i, align 4, !dbg !11732
  %conv30.i = sext i32 %40 to i64, !dbg !11731
  %41 = load i32, i32* %cb_x.i, align 4, !dbg !11733
  %conv31.i = sext i32 %41 to i64, !dbg !11733
  %add32.i = add nsw i64 %conv31.i, 1, !dbg !11734
  %mul33.i = mul nsw i64 %conv30.i, %add32.i, !dbg !11735
  %42 = load i32, i32* %cb_width.i, align 4, !dbg !11736
  %conv34.i = sext i32 %42 to i64, !dbg !11736
  %div35.i = sdiv i64 %mul33.i, %conv34.i, !dbg !11737
  %conv36.i = trunc i64 %div35.i to i32, !dbg !11738
  store i32 %conv36.i, i32* %right.i, align 4, !dbg !11739
  %43 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11740
  %44 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11741
  %45 = load i32, i32* %left.i, align 4, !dbg !11742
  %46 = load i32, i32* %right.i, align 4, !dbg !11743
  %47 = load i32, i32* %top.i, align 4, !dbg !11744
  %48 = load i32, i32* %bottom.i, align 4, !dbg !11745
  %49 = load i32, i32* %blockcnt_one.i, align 4, !dbg !11746
  %50 = load i32, i32* %is_arith.addr.i, align 4, !dbg !11747
  %call37.i = call i32 @codeblock(%struct.DiracContext* %43, %struct.SubBand* %44, %struct.GetBitContext* %gb.i, %struct.DiracArith* %c.i, i32 %45, i32 %46, i32 %47, i32 %48, i32 %49, i32 %50) #9, !dbg !11748
  store i32 %call37.i, i32* %ret.i, align 4, !dbg !11749
  %51 = load i32, i32* %ret.i, align 4, !dbg !11750
  %cmp38.i = icmp slt i32 %51, 0, !dbg !11751
  br i1 %cmp38.i, label %if.then40.i, label %if.end41.i, !dbg !11752

if.then40.i:                                      ; preds = %for.body28.i
  %52 = load i32, i32* %ret.i, align 4, !dbg !11753
  store i32 %52, i32* %retval.i, align 4, !dbg !11754
  br label %decode_subband_internal.exit, !dbg !11754

if.end41.i:                                       ; preds = %for.body28.i
  %53 = load i32, i32* %right.i, align 4, !dbg !11755
  store i32 %53, i32* %left.i, align 4, !dbg !11756
  %54 = load i32, i32* %cb_x.i, align 4, !dbg !11757
  %inc.i = add nsw i32 %54, 1, !dbg !11757
  store i32 %inc.i, i32* %cb_x.i, align 4, !dbg !11757
  br label %for.cond25.i, !dbg !11758, !llvm.loop !11604

for.end.i:                                        ; preds = %for.cond25.i
  %55 = load i32, i32* %bottom.i, align 4, !dbg !11759
  store i32 %55, i32* %top.i, align 4, !dbg !11760
  %56 = load i32, i32* %cb_y.i, align 4, !dbg !11761
  %inc43.i = add nsw i32 %56, 1, !dbg !11761
  store i32 %inc43.i, i32* %cb_y.i, align 4, !dbg !11761
  br label %for.cond.i, !dbg !11762, !llvm.loop !11611

for.end44.i:                                      ; preds = %for.cond.i
  %57 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11763
  %orientation45.i = getelementptr inbounds %struct.SubBand, %struct.SubBand* %57, i32 0, i32 1, !dbg !11764
  %58 = load i32, i32* %orientation45.i, align 4, !dbg !11764
  %cmp46.i = icmp eq i32 %58, 0, !dbg !11765
  br i1 %cmp46.i, label %land.lhs.true.i, label %if.end54.i, !dbg !11766

land.lhs.true.i:                                  ; preds = %for.end44.i
  %59 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11767
  %num_refs.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %59, i32 0, i32 23, !dbg !11768
  %60 = load i32, i32* %num_refs.i, align 8, !dbg !11768
  %cmp48.i = icmp eq i32 %60, 0, !dbg !11769
  br i1 %cmp48.i, label %if.then50.i, label %if.end54.i, !dbg !11770

if.then50.i:                                      ; preds = %land.lhs.true.i
  %61 = load %struct.DiracContext*, %struct.DiracContext** %s.addr.i, align 8, !dbg !11771
  %pshift.i = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %61, i32 0, i32 14, !dbg !11772
  %62 = load i32, i32* %pshift.i, align 4, !dbg !11772
  %tobool51.i = icmp ne i32 %62, 0, !dbg !11771
  br i1 %tobool51.i, label %if.then52.i, label %if.else.i, !dbg !11773

if.then52.i:                                      ; preds = %if.then50.i
  %63 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11774
  call void @intra_dc_prediction_10(%struct.SubBand* %63) #9, !dbg !11775
  br label %if.end53.i, !dbg !11776

if.else.i:                                        ; preds = %if.then50.i
  %64 = load %struct.SubBand*, %struct.SubBand** %b.addr.i, align 8, !dbg !11777
  call void @intra_dc_prediction_8(%struct.SubBand* %64) #9, !dbg !11778
  br label %if.end53.i, !dbg !11671

if.end53.i:                                       ; preds = %if.else.i, %if.then52.i
  br label %if.end54.i, !dbg !11779

if.end54.i:                                       ; preds = %if.end53.i, %land.lhs.true.i, %for.end44.i
  store i32 0, i32* %retval.i, align 4, !dbg !11780
  br label %decode_subband_internal.exit, !dbg !11780

decode_subband_internal.exit:                     ; preds = %if.then.i, %if.then40.i, %if.end54.i
  %65 = load i32, i32* %retval.i, align 4, !dbg !11781
  ret i32 %65, !dbg !11782
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #5 !dbg !11783 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !11784, metadata !2947), !dbg !11785
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11786, metadata !2947), !dbg !11787
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !11788, metadata !2947), !dbg !11789
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !11790
  %cmp = icmp sgt i32 %0, 268435455, !dbg !11792
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11793

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !11794
  %cmp1 = icmp slt i32 %1, 0, !dbg !11796
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11797

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !11798
  br label %if.end, !dbg !11799

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !11800
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !11801
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !11802
  %mul = mul nsw i32 %4, 8, !dbg !11803
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !11804
  ret i32 %call, !dbg !11805
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @codeblock(%struct.DiracContext* %s, %struct.SubBand* %b, %struct.GetBitContext* %gb, %struct.DiracArith* %c, i32 %left, i32 %right, i32 %top, i32 %bottom, i32 %blockcnt_one, i32 %is_arith) #5 !dbg !11806 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.DiracContext*, align 8
  %b.addr = alloca %struct.SubBand*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %c.addr = alloca %struct.DiracArith*, align 8
  %left.addr = alloca i32, align 4
  %right.addr = alloca i32, align 4
  %top.addr = alloca i32, align 4
  %bottom.addr = alloca i32, align 4
  %blockcnt_one.addr = alloca i32, align 4
  %is_arith.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %zero_block = alloca i32, align 4
  %qoffset = alloca i32, align 4
  %qfactor = alloca i32, align 4
  %buf = alloca i8*, align 8
  %quant = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !11809, metadata !2947), !dbg !11810
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !11811, metadata !2947), !dbg !11812
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11813, metadata !2947), !dbg !11814
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !11815, metadata !2947), !dbg !11816
  store i32 %left, i32* %left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %left.addr, metadata !11817, metadata !2947), !dbg !11818
  store i32 %right, i32* %right.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %right.addr, metadata !11819, metadata !2947), !dbg !11820
  store i32 %top, i32* %top.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %top.addr, metadata !11821, metadata !2947), !dbg !11822
  store i32 %bottom, i32* %bottom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bottom.addr, metadata !11823, metadata !2947), !dbg !11824
  store i32 %blockcnt_one, i32* %blockcnt_one.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blockcnt_one.addr, metadata !11825, metadata !2947), !dbg !11826
  store i32 %is_arith, i32* %is_arith.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_arith.addr, metadata !11827, metadata !2947), !dbg !11828
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11829, metadata !2947), !dbg !11830
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11831, metadata !2947), !dbg !11832
  call void @llvm.dbg.declare(metadata i32* %zero_block, metadata !11833, metadata !2947), !dbg !11834
  call void @llvm.dbg.declare(metadata i32* %qoffset, metadata !11835, metadata !2947), !dbg !11836
  call void @llvm.dbg.declare(metadata i32* %qfactor, metadata !11837, metadata !2947), !dbg !11838
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11839, metadata !2947), !dbg !11840
  %0 = load i32, i32* %blockcnt_one.addr, align 4, !dbg !11841
  %tobool = icmp ne i32 %0, 0, !dbg !11841
  br i1 %tobool, label %if.end7, label %if.then, !dbg !11843

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %is_arith.addr, align 4, !dbg !11844
  %tobool1 = icmp ne i32 %1, 0, !dbg !11844
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11847

if.then2:                                         ; preds = %if.then
  %2 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !11848
  %call = call i32 @dirac_get_arith_bit(%struct.DiracArith* %2, i32 18), !dbg !11849
  store i32 %call, i32* %zero_block, align 4, !dbg !11850
  br label %if.end, !dbg !11851

if.else:                                          ; preds = %if.then
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11852
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !11853
  store i32 %call3, i32* %zero_block, align 4, !dbg !11854
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %4 = load i32, i32* %zero_block, align 4, !dbg !11855
  %tobool4 = icmp ne i32 %4, 0, !dbg !11855
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11857

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11858
  br label %return, !dbg !11858

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !11859

if.end7:                                          ; preds = %if.end6, %entry
  %5 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11860
  %codeblock_mode = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %5, i32 0, i32 27, !dbg !11862
  %6 = load i32, i32* %codeblock_mode, align 8, !dbg !11862
  %tobool8 = icmp ne i32 %6, 0, !dbg !11860
  br i1 %tobool8, label %land.lhs.true, label %if.end26, !dbg !11863

land.lhs.true:                                    ; preds = %if.end7
  %7 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11864
  %old_delta_quant = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %7, i32 0, i32 26, !dbg !11866
  %8 = load i32, i32* %old_delta_quant, align 4, !dbg !11866
  %tobool9 = icmp ne i32 %8, 0, !dbg !11864
  br i1 %tobool9, label %land.lhs.true10, label %if.then12, !dbg !11867

land.lhs.true10:                                  ; preds = %land.lhs.true
  %9 = load i32, i32* %blockcnt_one.addr, align 4, !dbg !11868
  %tobool11 = icmp ne i32 %9, 0, !dbg !11868
  br i1 %tobool11, label %if.end26, label %if.then12, !dbg !11870

if.then12:                                        ; preds = %land.lhs.true10, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !11871, metadata !2947), !dbg !11873
  %10 = load i32, i32* %is_arith.addr, align 4, !dbg !11874
  %tobool13 = icmp ne i32 %10, 0, !dbg !11874
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11876

if.then14:                                        ; preds = %if.then12
  %11 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !11877
  %call15 = call i32 @dirac_get_arith_int(%struct.DiracArith* %11, i32 19, i32 20), !dbg !11878
  store i32 %call15, i32* %quant, align 4, !dbg !11879
  br label %if.end18, !dbg !11880

if.else16:                                        ; preds = %if.then12
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11881
  %call17 = call i32 @dirac_get_se_golomb(%struct.GetBitContext* %12), !dbg !11882
  store i32 %call17, i32* %quant, align 4, !dbg !11883
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.then14
  %13 = load i32, i32* %quant, align 4, !dbg !11884
  %14 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11886
  %quant19 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 6, !dbg !11887
  %15 = load i32, i32* %quant19, align 8, !dbg !11887
  %sub = sub nsw i32 2147483647, %15, !dbg !11888
  %cmp = icmp sgt i32 %13, %sub, !dbg !11889
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !11890

lor.lhs.false:                                    ; preds = %if.end18
  %16 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11891
  %quant20 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %16, i32 0, i32 6, !dbg !11893
  %17 = load i32, i32* %quant20, align 8, !dbg !11893
  %18 = load i32, i32* %quant, align 4, !dbg !11894
  %add = add nsw i32 %17, %18, !dbg !11895
  %cmp21 = icmp slt i32 %add, 0, !dbg !11896
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11897

if.then22:                                        ; preds = %lor.lhs.false, %if.end18
  %19 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11898
  %avctx = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %19, i32 0, i32 0, !dbg !11900
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !11900
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !11898
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0)), !dbg !11901
  store i32 -1094995529, i32* %retval, align 4, !dbg !11902
  br label %return, !dbg !11902

if.end23:                                         ; preds = %lor.lhs.false
  %22 = load i32, i32* %quant, align 4, !dbg !11903
  %23 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11904
  %quant24 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %23, i32 0, i32 6, !dbg !11905
  %24 = load i32, i32* %quant24, align 8, !dbg !11906
  %add25 = add nsw i32 %24, %22, !dbg !11906
  store i32 %add25, i32* %quant24, align 8, !dbg !11906
  br label %if.end26, !dbg !11907

if.end26:                                         ; preds = %if.end23, %land.lhs.true10, %if.end7
  %25 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11908
  %quant27 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %25, i32 0, i32 6, !dbg !11910
  %26 = load i32, i32* %quant27, align 8, !dbg !11910
  %conv = sext i32 %26 to i64, !dbg !11908
  %cmp28 = icmp ugt i64 %conv, 115, !dbg !11911
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !11912

if.then30:                                        ; preds = %if.end26
  %27 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11913
  %avctx31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %27, i32 0, i32 0, !dbg !11915
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx31, align 16, !dbg !11915
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !11913
  %30 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11916
  %quant32 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %30, i32 0, i32 6, !dbg !11917
  %31 = load i32, i32* %quant32, align 8, !dbg !11917
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0), i32 %31), !dbg !11918
  %32 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11919
  %quant33 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %32, i32 0, i32 6, !dbg !11920
  store i32 0, i32* %quant33, align 8, !dbg !11921
  store i32 -1094995529, i32* %retval, align 4, !dbg !11922
  br label %return, !dbg !11922

if.end34:                                         ; preds = %if.end26
  %33 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11923
  %quant35 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %33, i32 0, i32 6, !dbg !11924
  %34 = load i32, i32* %quant35, align 8, !dbg !11924
  %idxprom = sext i32 %34 to i64, !dbg !11925
  %arrayidx = getelementptr inbounds [116 x i32], [116 x i32]* @ff_dirac_qscale_tab, i64 0, i64 %idxprom, !dbg !11925
  %35 = load i32, i32* %arrayidx, align 4, !dbg !11925
  store i32 %35, i32* %qfactor, align 4, !dbg !11926
  %36 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !11927
  %num_refs = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %36, i32 0, i32 23, !dbg !11929
  %37 = load i32, i32* %num_refs, align 8, !dbg !11929
  %tobool36 = icmp ne i32 %37, 0, !dbg !11927
  br i1 %tobool36, label %if.else42, label %if.then37, !dbg !11930

if.then37:                                        ; preds = %if.end34
  %38 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11931
  %quant38 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %38, i32 0, i32 6, !dbg !11932
  %39 = load i32, i32* %quant38, align 8, !dbg !11932
  %idxprom39 = sext i32 %39 to i64, !dbg !11933
  %arrayidx40 = getelementptr inbounds [120 x i32], [120 x i32]* @ff_dirac_qoffset_intra_tab, i64 0, i64 %idxprom39, !dbg !11933
  %40 = load i32, i32* %arrayidx40, align 4, !dbg !11933
  %add41 = add nsw i32 %40, 2, !dbg !11934
  store i32 %add41, i32* %qoffset, align 4, !dbg !11935
  br label %if.end47, !dbg !11936

if.else42:                                        ; preds = %if.end34
  %41 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11937
  %quant43 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %41, i32 0, i32 6, !dbg !11938
  %42 = load i32, i32* %quant43, align 8, !dbg !11938
  %idxprom44 = sext i32 %42 to i64, !dbg !11939
  %arrayidx45 = getelementptr inbounds [122 x i32], [122 x i32]* @ff_dirac_qoffset_inter_tab, i64 0, i64 %idxprom44, !dbg !11939
  %43 = load i32, i32* %arrayidx45, align 4, !dbg !11939
  %add46 = add nsw i32 %43, 2, !dbg !11940
  store i32 %add46, i32* %qoffset, align 4, !dbg !11941
  br label %if.end47

if.end47:                                         ; preds = %if.else42, %if.then37
  %44 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11942
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %44, i32 0, i32 7, !dbg !11943
  %45 = load i8*, i8** %ibuf, align 8, !dbg !11943
  %46 = load i32, i32* %top.addr, align 4, !dbg !11944
  %47 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11945
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %47, i32 0, i32 2, !dbg !11946
  %48 = load i32, i32* %stride, align 8, !dbg !11946
  %mul = mul nsw i32 %46, %48, !dbg !11947
  %idx.ext = sext i32 %mul to i64, !dbg !11948
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 %idx.ext, !dbg !11948
  store i8* %add.ptr, i8** %buf, align 8, !dbg !11949
  %49 = load i32, i32* %is_arith.addr, align 4, !dbg !11950
  %tobool48 = icmp ne i32 %49, 0, !dbg !11950
  br i1 %tobool48, label %if.then49, label %if.else74, !dbg !11952

if.then49:                                        ; preds = %if.end47
  %50 = load i32, i32* %top.addr, align 4, !dbg !11953
  store i32 %50, i32* %y, align 4, !dbg !11956
  br label %for.cond, !dbg !11957

for.cond:                                         ; preds = %for.inc71, %if.then49
  %51 = load i32, i32* %y, align 4, !dbg !11958
  %52 = load i32, i32* %bottom.addr, align 4, !dbg !11961
  %cmp50 = icmp slt i32 %51, %52, !dbg !11962
  br i1 %cmp50, label %for.body, label %for.end73, !dbg !11963

for.body:                                         ; preds = %for.cond
  %53 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !11964
  %error = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %53, i32 0, i32 6, !dbg !11967
  %54 = load i32, i32* %error, align 4, !dbg !11967
  %tobool52 = icmp ne i32 %54, 0, !dbg !11964
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !11968

if.then53:                                        ; preds = %for.body
  %55 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !11969
  %error54 = getelementptr inbounds %struct.DiracArith, %struct.DiracArith* %55, i32 0, i32 6, !dbg !11970
  %56 = load i32, i32* %error54, align 4, !dbg !11970
  store i32 %56, i32* %retval, align 4, !dbg !11971
  br label %return, !dbg !11971

if.end55:                                         ; preds = %for.body
  %57 = load i32, i32* %left.addr, align 4, !dbg !11972
  store i32 %57, i32* %x, align 4, !dbg !11974
  br label %for.cond56, !dbg !11975

for.cond56:                                       ; preds = %for.inc, %if.end55
  %58 = load i32, i32* %x, align 4, !dbg !11976
  %59 = load i32, i32* %right.addr, align 4, !dbg !11979
  %cmp57 = icmp slt i32 %58, %59, !dbg !11980
  br i1 %cmp57, label %for.body59, label %for.end, !dbg !11981

for.body59:                                       ; preds = %for.cond56
  %60 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11982
  %pshift = getelementptr inbounds %struct.SubBand, %struct.SubBand* %60, i32 0, i32 5, !dbg !11985
  %61 = load i32, i32* %pshift, align 4, !dbg !11985
  %tobool60 = icmp ne i32 %61, 0, !dbg !11982
  br i1 %tobool60, label %if.then61, label %if.else64, !dbg !11986

if.then61:                                        ; preds = %for.body59
  %62 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !11987
  %63 = load i32, i32* %qfactor, align 4, !dbg !11989
  %64 = load i32, i32* %qoffset, align 4, !dbg !11990
  %65 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !11991
  %66 = load i8*, i8** %buf, align 8, !dbg !11992
  %67 = bitcast i8* %66 to i32*, !dbg !11993
  %68 = load i32, i32* %x, align 4, !dbg !11994
  %idx.ext62 = sext i32 %68 to i64, !dbg !11995
  %add.ptr63 = getelementptr inbounds i32, i32* %67, i64 %idx.ext62, !dbg !11995
  %69 = load i32, i32* %x, align 4, !dbg !11996
  %70 = load i32, i32* %y, align 4, !dbg !11997
  call void @coeff_unpack_arith_10(%struct.DiracArith* %62, i32 %63, i32 %64, %struct.SubBand* %65, i32* %add.ptr63, i32 %69, i32 %70), !dbg !11998
  br label %if.end67, !dbg !11999

if.else64:                                        ; preds = %for.body59
  %71 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !12000
  %72 = load i32, i32* %qfactor, align 4, !dbg !12002
  %73 = load i32, i32* %qoffset, align 4, !dbg !12003
  %74 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12004
  %75 = load i8*, i8** %buf, align 8, !dbg !12005
  %76 = bitcast i8* %75 to i16*, !dbg !12006
  %77 = load i32, i32* %x, align 4, !dbg !12007
  %idx.ext65 = sext i32 %77 to i64, !dbg !12008
  %add.ptr66 = getelementptr inbounds i16, i16* %76, i64 %idx.ext65, !dbg !12008
  %78 = load i32, i32* %x, align 4, !dbg !12009
  %79 = load i32, i32* %y, align 4, !dbg !12010
  call void @coeff_unpack_arith_8(%struct.DiracArith* %71, i32 %72, i32 %73, %struct.SubBand* %74, i16* %add.ptr66, i32 %78, i32 %79), !dbg !12011
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then61
  br label %for.inc, !dbg !12012

for.inc:                                          ; preds = %if.end67
  %80 = load i32, i32* %x, align 4, !dbg !12013
  %inc = add nsw i32 %80, 1, !dbg !12013
  store i32 %inc, i32* %x, align 4, !dbg !12013
  br label %for.cond56, !dbg !12015, !llvm.loop !12016

for.end:                                          ; preds = %for.cond56
  %81 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12018
  %stride68 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %81, i32 0, i32 2, !dbg !12019
  %82 = load i32, i32* %stride68, align 8, !dbg !12019
  %83 = load i8*, i8** %buf, align 8, !dbg !12020
  %idx.ext69 = sext i32 %82 to i64, !dbg !12020
  %add.ptr70 = getelementptr inbounds i8, i8* %83, i64 %idx.ext69, !dbg !12020
  store i8* %add.ptr70, i8** %buf, align 8, !dbg !12020
  br label %for.inc71, !dbg !12021

for.inc71:                                        ; preds = %for.end
  %84 = load i32, i32* %y, align 4, !dbg !12022
  %inc72 = add nsw i32 %84, 1, !dbg !12022
  store i32 %inc72, i32* %y, align 4, !dbg !12022
  br label %for.cond, !dbg !12024, !llvm.loop !12025

for.end73:                                        ; preds = %for.cond
  br label %if.end111, !dbg !12027

if.else74:                                        ; preds = %if.end47
  %85 = load i32, i32* %top.addr, align 4, !dbg !12028
  store i32 %85, i32* %y, align 4, !dbg !12031
  br label %for.cond75, !dbg !12032

for.cond75:                                       ; preds = %for.inc108, %if.else74
  %86 = load i32, i32* %y, align 4, !dbg !12033
  %87 = load i32, i32* %bottom.addr, align 4, !dbg !12036
  %cmp76 = icmp slt i32 %86, %87, !dbg !12037
  br i1 %cmp76, label %for.body78, label %for.end110, !dbg !12038

for.body78:                                       ; preds = %for.cond75
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12039
  %call79 = call i32 @get_bits_left(%struct.GetBitContext* %88), !dbg !12042
  %cmp80 = icmp slt i32 %call79, 1, !dbg !12043
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !12044

if.then82:                                        ; preds = %for.body78
  store i32 -1094995529, i32* %retval, align 4, !dbg !12045
  br label %return, !dbg !12045

if.end83:                                         ; preds = %for.body78
  %89 = load i32, i32* %left.addr, align 4, !dbg !12046
  store i32 %89, i32* %x, align 4, !dbg !12048
  br label %for.cond84, !dbg !12049

for.cond84:                                       ; preds = %for.inc102, %if.end83
  %90 = load i32, i32* %x, align 4, !dbg !12050
  %91 = load i32, i32* %right.addr, align 4, !dbg !12053
  %cmp85 = icmp slt i32 %90, %91, !dbg !12054
  br i1 %cmp85, label %for.body87, label %for.end104, !dbg !12055

for.body87:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata i32* %val, metadata !12056, metadata !2947), !dbg !12058
  %92 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12059
  %93 = load i32, i32* %qfactor, align 4, !dbg !12060
  %94 = load i32, i32* %qoffset, align 4, !dbg !12061
  %call88 = call i32 @coeff_unpack_golomb(%struct.GetBitContext* %92, i32 %93, i32 %94), !dbg !12062
  store i32 %call88, i32* %val, align 4, !dbg !12058
  %95 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12063
  %pshift89 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %95, i32 0, i32 5, !dbg !12065
  %96 = load i32, i32* %pshift89, align 4, !dbg !12065
  %tobool90 = icmp ne i32 %96, 0, !dbg !12063
  br i1 %tobool90, label %if.then91, label %if.else95, !dbg !12066

if.then91:                                        ; preds = %for.body87
  %97 = load i32, i32* %val, align 4, !dbg !12067
  %98 = load i32, i32* %x, align 4, !dbg !12069
  %mul92 = mul nsw i32 4, %98, !dbg !12070
  %idxprom93 = sext i32 %mul92 to i64, !dbg !12071
  %99 = load i8*, i8** %buf, align 8, !dbg !12071
  %arrayidx94 = getelementptr inbounds i8, i8* %99, i64 %idxprom93, !dbg !12071
  %100 = bitcast i8* %arrayidx94 to %union.unaligned_32*, !dbg !12072
  %l = bitcast %union.unaligned_32* %100 to i32*, !dbg !12072
  store i32 %97, i32* %l, align 1, !dbg !12073
  br label %if.end101, !dbg !12074

if.else95:                                        ; preds = %for.body87
  %101 = load i32, i32* %val, align 4, !dbg !12075
  %conv96 = trunc i32 %101 to i16, !dbg !12077
  %102 = load i32, i32* %x, align 4, !dbg !12078
  %mul97 = mul nsw i32 2, %102, !dbg !12079
  %idxprom98 = sext i32 %mul97 to i64, !dbg !12080
  %103 = load i8*, i8** %buf, align 8, !dbg !12080
  %arrayidx99 = getelementptr inbounds i8, i8* %103, i64 %idxprom98, !dbg !12080
  %104 = bitcast i8* %arrayidx99 to %union.unaligned_16*, !dbg !12081
  %l100 = bitcast %union.unaligned_16* %104 to i16*, !dbg !12081
  store i16 %conv96, i16* %l100, align 1, !dbg !12082
  br label %if.end101

if.end101:                                        ; preds = %if.else95, %if.then91
  br label %for.inc102, !dbg !12083

for.inc102:                                       ; preds = %if.end101
  %105 = load i32, i32* %x, align 4, !dbg !12084
  %inc103 = add nsw i32 %105, 1, !dbg !12084
  store i32 %inc103, i32* %x, align 4, !dbg !12084
  br label %for.cond84, !dbg !12086, !llvm.loop !12087

for.end104:                                       ; preds = %for.cond84
  %106 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12089
  %stride105 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %106, i32 0, i32 2, !dbg !12090
  %107 = load i32, i32* %stride105, align 8, !dbg !12090
  %108 = load i8*, i8** %buf, align 8, !dbg !12091
  %idx.ext106 = sext i32 %107 to i64, !dbg !12091
  %add.ptr107 = getelementptr inbounds i8, i8* %108, i64 %idx.ext106, !dbg !12091
  store i8* %add.ptr107, i8** %buf, align 8, !dbg !12091
  br label %for.inc108, !dbg !12092

for.inc108:                                       ; preds = %for.end104
  %109 = load i32, i32* %y, align 4, !dbg !12093
  %inc109 = add nsw i32 %109, 1, !dbg !12093
  store i32 %inc109, i32* %y, align 4, !dbg !12093
  br label %for.cond75, !dbg !12095, !llvm.loop !12096

for.end110:                                       ; preds = %for.cond75
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %for.end73
  store i32 0, i32* %retval, align 4, !dbg !12098
  br label %return, !dbg !12098

return:                                           ; preds = %if.end111, %if.then82, %if.then53, %if.then30, %if.then22, %if.then5
  %110 = load i32, i32* %retval, align 4, !dbg !12099
  ret i32 %110, !dbg !12099
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @coeff_unpack_arith_10(%struct.DiracArith* %c, i32 %qfactor, i32 %qoffset, %struct.SubBand* %b, i32* %buf, i32 %x, i32 %y) #5 !dbg !12100 {
entry:
  %c.addr = alloca %struct.DiracArith*, align 8
  %qfactor.addr = alloca i32, align 4
  %qoffset.addr = alloca i32, align 4
  %b.addr = alloca %struct.SubBand*, align 8
  %buf.addr = alloca i32*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %sign = alloca i32, align 4
  %sign_pred = alloca i32, align 4
  %pred_ctx = alloca i32, align 4
  %coeff = alloca i32, align 4
  %mstride = alloca i32, align 4
  %pbuf = alloca i32*, align 8
  %stride2 = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !12103, metadata !2947), !dbg !12104
  store i32 %qfactor, i32* %qfactor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qfactor.addr, metadata !12105, metadata !2947), !dbg !12106
  store i32 %qoffset, i32* %qoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qoffset.addr, metadata !12107, metadata !2947), !dbg !12108
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !12109, metadata !2947), !dbg !12110
  store i32* %buf, i32** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.addr, metadata !12111, metadata !2947), !dbg !12112
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12113, metadata !2947), !dbg !12114
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12115, metadata !2947), !dbg !12116
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !12117, metadata !2947), !dbg !12118
  call void @llvm.dbg.declare(metadata i32* %sign_pred, metadata !12119, metadata !2947), !dbg !12120
  store i32 0, i32* %sign_pred, align 4, !dbg !12120
  call void @llvm.dbg.declare(metadata i32* %pred_ctx, metadata !12121, metadata !2947), !dbg !12122
  store i32 0, i32* %pred_ctx, align 4, !dbg !12122
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !12123, metadata !2947), !dbg !12124
  call void @llvm.dbg.declare(metadata i32* %mstride, metadata !12125, metadata !2947), !dbg !12126
  %0 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12127
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 2, !dbg !12128
  %1 = load i32, i32* %stride, align 8, !dbg !12128
  %2 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12129
  %pshift = getelementptr inbounds %struct.SubBand, %struct.SubBand* %2, i32 0, i32 5, !dbg !12130
  %3 = load i32, i32* %pshift, align 4, !dbg !12130
  %add = add nsw i32 1, %3, !dbg !12131
  %shr = ashr i32 %1, %add, !dbg !12132
  %sub = sub nsw i32 0, %shr, !dbg !12133
  store i32 %sub, i32* %mstride, align 4, !dbg !12126
  %4 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12134
  %parent = getelementptr inbounds %struct.SubBand, %struct.SubBand* %4, i32 0, i32 8, !dbg !12136
  %5 = load %struct.SubBand*, %struct.SubBand** %parent, align 8, !dbg !12136
  %tobool = icmp ne %struct.SubBand* %5, null, !dbg !12134
  br i1 %tobool, label %if.then, label %if.end, !dbg !12137

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %pbuf, metadata !12138, metadata !2947), !dbg !12142
  %6 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12143
  %parent1 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %6, i32 0, i32 8, !dbg !12145
  %7 = load %struct.SubBand*, %struct.SubBand** %parent1, align 8, !dbg !12145
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %7, i32 0, i32 7, !dbg !12146
  %8 = load i8*, i8** %ibuf, align 8, !dbg !12146
  %9 = bitcast i8* %8 to i32*, !dbg !12147
  store i32* %9, i32** %pbuf, align 8, !dbg !12148
  call void @llvm.dbg.declare(metadata i32* %stride2, metadata !12149, metadata !2947), !dbg !12150
  %10 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12151
  %parent3 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %10, i32 0, i32 8, !dbg !12152
  %11 = load %struct.SubBand*, %struct.SubBand** %parent3, align 8, !dbg !12152
  %stride4 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %11, i32 0, i32 2, !dbg !12153
  %12 = load i32, i32* %stride4, align 8, !dbg !12153
  %13 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12154
  %parent5 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %13, i32 0, i32 8, !dbg !12155
  %14 = load %struct.SubBand*, %struct.SubBand** %parent5, align 8, !dbg !12155
  %pshift6 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 5, !dbg !12156
  %15 = load i32, i32* %pshift6, align 4, !dbg !12156
  %add7 = add nsw i32 1, %15, !dbg !12157
  %shr8 = ashr i32 %12, %add7, !dbg !12158
  store i32 %shr8, i32* %stride2, align 4, !dbg !12159
  %16 = load i32, i32* %stride2, align 4, !dbg !12160
  %17 = load i32, i32* %y.addr, align 4, !dbg !12161
  %shr9 = ashr i32 %17, 1, !dbg !12162
  %mul = mul nsw i32 %16, %shr9, !dbg !12163
  %18 = load i32, i32* %x.addr, align 4, !dbg !12164
  %shr10 = ashr i32 %18, 1, !dbg !12165
  %add11 = add nsw i32 %mul, %shr10, !dbg !12166
  %idxprom = sext i32 %add11 to i64, !dbg !12167
  %19 = load i32*, i32** %pbuf, align 8, !dbg !12167
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !12167
  %20 = load i32, i32* %arrayidx, align 4, !dbg !12167
  %tobool12 = icmp ne i32 %20, 0, !dbg !12168
  %lnot = xor i1 %tobool12, true, !dbg !12168
  %lnot13 = xor i1 %lnot, true, !dbg !12169
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !12169
  %shl = shl i32 %lnot.ext, 1, !dbg !12170
  %21 = load i32, i32* %pred_ctx, align 4, !dbg !12171
  %add14 = add nsw i32 %21, %shl, !dbg !12171
  store i32 %add14, i32* %pred_ctx, align 4, !dbg !12171
  br label %if.end, !dbg !12172

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12173
  %orientation = getelementptr inbounds %struct.SubBand, %struct.SubBand* %22, i32 0, i32 1, !dbg !12176
  %23 = load i32, i32* %orientation, align 4, !dbg !12176
  %cmp = icmp eq i32 %23, 1, !dbg !12177
  br i1 %cmp, label %if.then15, label %if.end18, !dbg !12173

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* %mstride, align 4, !dbg !12178
  %idxprom16 = sext i32 %24 to i64, !dbg !12180
  %25 = load i32*, i32** %buf.addr, align 8, !dbg !12180
  %arrayidx17 = getelementptr inbounds i32, i32* %25, i64 %idxprom16, !dbg !12180
  %26 = load i32, i32* %arrayidx17, align 4, !dbg !12180
  store i32 %26, i32* %sign_pred, align 4, !dbg !12181
  br label %if.end18, !dbg !12182

if.end18:                                         ; preds = %if.then15, %if.end
  %27 = load i32, i32* %x.addr, align 4, !dbg !12183
  %tobool19 = icmp ne i32 %27, 0, !dbg !12183
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !12183

if.then20:                                        ; preds = %if.end18
  %28 = load i32*, i32** %buf.addr, align 8, !dbg !12186
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 -1, !dbg !12186
  %29 = load i32, i32* %arrayidx21, align 4, !dbg !12186
  %30 = load i32, i32* %mstride, align 4, !dbg !12189
  %idxprom22 = sext i32 %30 to i64, !dbg !12190
  %31 = load i32*, i32** %buf.addr, align 8, !dbg !12190
  %arrayidx23 = getelementptr inbounds i32, i32* %31, i64 %idxprom22, !dbg !12190
  %32 = load i32, i32* %arrayidx23, align 4, !dbg !12190
  %or = or i32 %29, %32, !dbg !12191
  %33 = load i32, i32* %mstride, align 4, !dbg !12192
  %add24 = add nsw i32 -1, %33, !dbg !12193
  %idxprom25 = sext i32 %add24 to i64, !dbg !12194
  %34 = load i32*, i32** %buf.addr, align 8, !dbg !12194
  %arrayidx26 = getelementptr inbounds i32, i32* %34, i64 %idxprom25, !dbg !12194
  %35 = load i32, i32* %arrayidx26, align 4, !dbg !12194
  %or27 = or i32 %or, %35, !dbg !12195
  %tobool28 = icmp ne i32 %or27, 0, !dbg !12196
  %lnot29 = xor i1 %tobool28, true, !dbg !12196
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !12196
  %36 = load i32, i32* %pred_ctx, align 4, !dbg !12197
  %add31 = add nsw i32 %36, %lnot.ext30, !dbg !12197
  store i32 %add31, i32* %pred_ctx, align 4, !dbg !12197
  %37 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12198
  %orientation32 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %37, i32 0, i32 1, !dbg !12199
  %38 = load i32, i32* %orientation32, align 4, !dbg !12199
  %cmp33 = icmp eq i32 %38, 2, !dbg !12200
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !12198

if.then34:                                        ; preds = %if.then20
  %39 = load i32*, i32** %buf.addr, align 8, !dbg !12201
  %arrayidx35 = getelementptr inbounds i32, i32* %39, i64 -1, !dbg !12201
  %40 = load i32, i32* %arrayidx35, align 4, !dbg !12201
  store i32 %40, i32* %sign_pred, align 4, !dbg !12204
  br label %if.end36, !dbg !12205

if.end36:                                         ; preds = %if.then34, %if.then20
  br label %if.end43, !dbg !12206

if.else:                                          ; preds = %if.end18
  %41 = load i32, i32* %mstride, align 4, !dbg !12208
  %idxprom37 = sext i32 %41 to i64, !dbg !12211
  %42 = load i32*, i32** %buf.addr, align 8, !dbg !12211
  %arrayidx38 = getelementptr inbounds i32, i32* %42, i64 %idxprom37, !dbg !12211
  %43 = load i32, i32* %arrayidx38, align 4, !dbg !12211
  %tobool39 = icmp ne i32 %43, 0, !dbg !12212
  %lnot40 = xor i1 %tobool39, true, !dbg !12212
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !12212
  %44 = load i32, i32* %pred_ctx, align 4, !dbg !12213
  %add42 = add nsw i32 %44, %lnot.ext41, !dbg !12213
  store i32 %add42, i32* %pred_ctx, align 4, !dbg !12213
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end36
  %45 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !12214
  %46 = load i32, i32* %pred_ctx, align 4, !dbg !12216
  %call = call i32 @dirac_get_arith_uint(%struct.DiracArith* %45, i32 %46, i32 14), !dbg !12217
  store i32 %call, i32* %coeff, align 4, !dbg !12218
  %47 = load i32, i32* %coeff, align 4, !dbg !12219
  %tobool44 = icmp ne i32 %47, 0, !dbg !12219
  br i1 %tobool44, label %if.then45, label %if.end57, !dbg !12219

if.then45:                                        ; preds = %if.end43
  %48 = load i32, i32* %coeff, align 4, !dbg !12220
  %49 = load i32, i32* %qfactor.addr, align 4, !dbg !12224
  %mul46 = mul i32 %48, %49, !dbg !12225
  %50 = load i32, i32* %qoffset.addr, align 4, !dbg !12226
  %add47 = add i32 %mul46, %50, !dbg !12227
  %shr48 = lshr i32 %add47, 2, !dbg !12228
  store i32 %shr48, i32* %coeff, align 4, !dbg !12229
  %51 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !12230
  %52 = load i32, i32* %sign_pred, align 4, !dbg !12231
  %cmp49 = icmp sgt i32 %52, 0, !dbg !12232
  %conv = zext i1 %cmp49 to i32, !dbg !12232
  %add50 = add nsw i32 16, %conv, !dbg !12233
  %53 = load i32, i32* %sign_pred, align 4, !dbg !12234
  %cmp51 = icmp slt i32 %53, 0, !dbg !12235
  %conv52 = zext i1 %cmp51 to i32, !dbg !12235
  %sub53 = sub nsw i32 %add50, %conv52, !dbg !12236
  %call54 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %51, i32 %sub53), !dbg !12237
  store i32 %call54, i32* %sign, align 4, !dbg !12238
  %54 = load i32, i32* %coeff, align 4, !dbg !12239
  %55 = load i32, i32* %sign, align 4, !dbg !12240
  %sub55 = sub nsw i32 0, %55, !dbg !12241
  %xor = xor i32 %54, %sub55, !dbg !12242
  %56 = load i32, i32* %sign, align 4, !dbg !12243
  %add56 = add i32 %xor, %56, !dbg !12244
  store i32 %add56, i32* %coeff, align 4, !dbg !12245
  br label %if.end57, !dbg !12246

if.end57:                                         ; preds = %if.then45, %if.end43
  %57 = load i32, i32* %coeff, align 4, !dbg !12247
  %58 = load i32*, i32** %buf.addr, align 8, !dbg !12249
  store i32 %57, i32* %58, align 4, !dbg !12250
  ret void, !dbg !12251
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @coeff_unpack_arith_8(%struct.DiracArith* %c, i32 %qfactor, i32 %qoffset, %struct.SubBand* %b, i16* %buf, i32 %x, i32 %y) #5 !dbg !12252 {
entry:
  %c.addr = alloca %struct.DiracArith*, align 8
  %qfactor.addr = alloca i32, align 4
  %qoffset.addr = alloca i32, align 4
  %b.addr = alloca %struct.SubBand*, align 8
  %buf.addr = alloca i16*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %sign = alloca i32, align 4
  %sign_pred = alloca i32, align 4
  %pred_ctx = alloca i32, align 4
  %coeff = alloca i32, align 4
  %mstride = alloca i32, align 4
  %pbuf = alloca i16*, align 8
  %stride2 = alloca i32, align 4
  store %struct.DiracArith* %c, %struct.DiracArith** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracArith** %c.addr, metadata !12255, metadata !2947), !dbg !12256
  store i32 %qfactor, i32* %qfactor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qfactor.addr, metadata !12257, metadata !2947), !dbg !12258
  store i32 %qoffset, i32* %qoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qoffset.addr, metadata !12259, metadata !2947), !dbg !12260
  store %struct.SubBand* %b, %struct.SubBand** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubBand** %b.addr, metadata !12261, metadata !2947), !dbg !12262
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !12263, metadata !2947), !dbg !12264
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12265, metadata !2947), !dbg !12266
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12267, metadata !2947), !dbg !12268
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !12269, metadata !2947), !dbg !12270
  call void @llvm.dbg.declare(metadata i32* %sign_pred, metadata !12271, metadata !2947), !dbg !12272
  store i32 0, i32* %sign_pred, align 4, !dbg !12272
  call void @llvm.dbg.declare(metadata i32* %pred_ctx, metadata !12273, metadata !2947), !dbg !12274
  store i32 0, i32* %pred_ctx, align 4, !dbg !12274
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !12275, metadata !2947), !dbg !12276
  call void @llvm.dbg.declare(metadata i32* %mstride, metadata !12277, metadata !2947), !dbg !12278
  %0 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12279
  %stride = getelementptr inbounds %struct.SubBand, %struct.SubBand* %0, i32 0, i32 2, !dbg !12280
  %1 = load i32, i32* %stride, align 8, !dbg !12280
  %2 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12281
  %pshift = getelementptr inbounds %struct.SubBand, %struct.SubBand* %2, i32 0, i32 5, !dbg !12282
  %3 = load i32, i32* %pshift, align 4, !dbg !12282
  %add = add nsw i32 1, %3, !dbg !12283
  %shr = ashr i32 %1, %add, !dbg !12284
  %sub = sub nsw i32 0, %shr, !dbg !12285
  store i32 %sub, i32* %mstride, align 4, !dbg !12278
  %4 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12286
  %parent = getelementptr inbounds %struct.SubBand, %struct.SubBand* %4, i32 0, i32 8, !dbg !12288
  %5 = load %struct.SubBand*, %struct.SubBand** %parent, align 8, !dbg !12288
  %tobool = icmp ne %struct.SubBand* %5, null, !dbg !12286
  br i1 %tobool, label %if.then, label %if.end, !dbg !12289

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %pbuf, metadata !12290, metadata !2947), !dbg !12292
  %6 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12293
  %parent1 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %6, i32 0, i32 8, !dbg !12295
  %7 = load %struct.SubBand*, %struct.SubBand** %parent1, align 8, !dbg !12295
  %ibuf = getelementptr inbounds %struct.SubBand, %struct.SubBand* %7, i32 0, i32 7, !dbg !12296
  %8 = load i8*, i8** %ibuf, align 8, !dbg !12296
  %9 = bitcast i8* %8 to i16*, !dbg !12297
  store i16* %9, i16** %pbuf, align 8, !dbg !12298
  call void @llvm.dbg.declare(metadata i32* %stride2, metadata !12299, metadata !2947), !dbg !12300
  %10 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12301
  %parent3 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %10, i32 0, i32 8, !dbg !12302
  %11 = load %struct.SubBand*, %struct.SubBand** %parent3, align 8, !dbg !12302
  %stride4 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %11, i32 0, i32 2, !dbg !12303
  %12 = load i32, i32* %stride4, align 8, !dbg !12303
  %13 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12304
  %parent5 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %13, i32 0, i32 8, !dbg !12305
  %14 = load %struct.SubBand*, %struct.SubBand** %parent5, align 8, !dbg !12305
  %pshift6 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %14, i32 0, i32 5, !dbg !12306
  %15 = load i32, i32* %pshift6, align 4, !dbg !12306
  %add7 = add nsw i32 1, %15, !dbg !12307
  %shr8 = ashr i32 %12, %add7, !dbg !12308
  store i32 %shr8, i32* %stride2, align 4, !dbg !12309
  %16 = load i32, i32* %stride2, align 4, !dbg !12310
  %17 = load i32, i32* %y.addr, align 4, !dbg !12311
  %shr9 = ashr i32 %17, 1, !dbg !12312
  %mul = mul nsw i32 %16, %shr9, !dbg !12313
  %18 = load i32, i32* %x.addr, align 4, !dbg !12314
  %shr10 = ashr i32 %18, 1, !dbg !12315
  %add11 = add nsw i32 %mul, %shr10, !dbg !12316
  %idxprom = sext i32 %add11 to i64, !dbg !12317
  %19 = load i16*, i16** %pbuf, align 8, !dbg !12317
  %arrayidx = getelementptr inbounds i16, i16* %19, i64 %idxprom, !dbg !12317
  %20 = load i16, i16* %arrayidx, align 2, !dbg !12317
  %tobool12 = icmp ne i16 %20, 0, !dbg !12318
  %lnot = xor i1 %tobool12, true, !dbg !12318
  %lnot13 = xor i1 %lnot, true, !dbg !12319
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !12319
  %shl = shl i32 %lnot.ext, 1, !dbg !12320
  %21 = load i32, i32* %pred_ctx, align 4, !dbg !12321
  %add14 = add nsw i32 %21, %shl, !dbg !12321
  store i32 %add14, i32* %pred_ctx, align 4, !dbg !12321
  br label %if.end, !dbg !12322

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12323
  %orientation = getelementptr inbounds %struct.SubBand, %struct.SubBand* %22, i32 0, i32 1, !dbg !12326
  %23 = load i32, i32* %orientation, align 4, !dbg !12326
  %cmp = icmp eq i32 %23, 1, !dbg !12327
  br i1 %cmp, label %if.then15, label %if.end18, !dbg !12323

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* %mstride, align 4, !dbg !12328
  %idxprom16 = sext i32 %24 to i64, !dbg !12330
  %25 = load i16*, i16** %buf.addr, align 8, !dbg !12330
  %arrayidx17 = getelementptr inbounds i16, i16* %25, i64 %idxprom16, !dbg !12330
  %26 = load i16, i16* %arrayidx17, align 2, !dbg !12330
  %conv = sext i16 %26 to i32, !dbg !12330
  store i32 %conv, i32* %sign_pred, align 4, !dbg !12331
  br label %if.end18, !dbg !12332

if.end18:                                         ; preds = %if.then15, %if.end
  %27 = load i32, i32* %x.addr, align 4, !dbg !12333
  %tobool19 = icmp ne i32 %27, 0, !dbg !12333
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !12333

if.then20:                                        ; preds = %if.end18
  %28 = load i16*, i16** %buf.addr, align 8, !dbg !12336
  %arrayidx21 = getelementptr inbounds i16, i16* %28, i64 -1, !dbg !12336
  %29 = load i16, i16* %arrayidx21, align 2, !dbg !12336
  %conv22 = sext i16 %29 to i32, !dbg !12336
  %30 = load i32, i32* %mstride, align 4, !dbg !12339
  %idxprom23 = sext i32 %30 to i64, !dbg !12340
  %31 = load i16*, i16** %buf.addr, align 8, !dbg !12340
  %arrayidx24 = getelementptr inbounds i16, i16* %31, i64 %idxprom23, !dbg !12340
  %32 = load i16, i16* %arrayidx24, align 2, !dbg !12340
  %conv25 = sext i16 %32 to i32, !dbg !12340
  %or = or i32 %conv22, %conv25, !dbg !12341
  %33 = load i32, i32* %mstride, align 4, !dbg !12342
  %add26 = add nsw i32 -1, %33, !dbg !12343
  %idxprom27 = sext i32 %add26 to i64, !dbg !12344
  %34 = load i16*, i16** %buf.addr, align 8, !dbg !12344
  %arrayidx28 = getelementptr inbounds i16, i16* %34, i64 %idxprom27, !dbg !12344
  %35 = load i16, i16* %arrayidx28, align 2, !dbg !12344
  %conv29 = sext i16 %35 to i32, !dbg !12344
  %or30 = or i32 %or, %conv29, !dbg !12345
  %tobool31 = icmp ne i32 %or30, 0, !dbg !12346
  %lnot32 = xor i1 %tobool31, true, !dbg !12346
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !12346
  %36 = load i32, i32* %pred_ctx, align 4, !dbg !12347
  %add34 = add nsw i32 %36, %lnot.ext33, !dbg !12347
  store i32 %add34, i32* %pred_ctx, align 4, !dbg !12347
  %37 = load %struct.SubBand*, %struct.SubBand** %b.addr, align 8, !dbg !12348
  %orientation35 = getelementptr inbounds %struct.SubBand, %struct.SubBand* %37, i32 0, i32 1, !dbg !12349
  %38 = load i32, i32* %orientation35, align 4, !dbg !12349
  %cmp36 = icmp eq i32 %38, 2, !dbg !12350
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !12348

if.then38:                                        ; preds = %if.then20
  %39 = load i16*, i16** %buf.addr, align 8, !dbg !12351
  %arrayidx39 = getelementptr inbounds i16, i16* %39, i64 -1, !dbg !12351
  %40 = load i16, i16* %arrayidx39, align 2, !dbg !12351
  %conv40 = sext i16 %40 to i32, !dbg !12351
  store i32 %conv40, i32* %sign_pred, align 4, !dbg !12354
  br label %if.end41, !dbg !12355

if.end41:                                         ; preds = %if.then38, %if.then20
  br label %if.end48, !dbg !12356

if.else:                                          ; preds = %if.end18
  %41 = load i32, i32* %mstride, align 4, !dbg !12358
  %idxprom42 = sext i32 %41 to i64, !dbg !12361
  %42 = load i16*, i16** %buf.addr, align 8, !dbg !12361
  %arrayidx43 = getelementptr inbounds i16, i16* %42, i64 %idxprom42, !dbg !12361
  %43 = load i16, i16* %arrayidx43, align 2, !dbg !12361
  %tobool44 = icmp ne i16 %43, 0, !dbg !12362
  %lnot45 = xor i1 %tobool44, true, !dbg !12362
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !12362
  %44 = load i32, i32* %pred_ctx, align 4, !dbg !12363
  %add47 = add nsw i32 %44, %lnot.ext46, !dbg !12363
  store i32 %add47, i32* %pred_ctx, align 4, !dbg !12363
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.end41
  %45 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !12364
  %46 = load i32, i32* %pred_ctx, align 4, !dbg !12366
  %call = call i32 @dirac_get_arith_uint(%struct.DiracArith* %45, i32 %46, i32 14), !dbg !12367
  store i32 %call, i32* %coeff, align 4, !dbg !12368
  %47 = load i32, i32* %coeff, align 4, !dbg !12369
  %tobool49 = icmp ne i32 %47, 0, !dbg !12369
  br i1 %tobool49, label %if.then50, label %if.end63, !dbg !12369

if.then50:                                        ; preds = %if.end48
  %48 = load i32, i32* %coeff, align 4, !dbg !12370
  %49 = load i32, i32* %qfactor.addr, align 4, !dbg !12374
  %mul51 = mul i32 %48, %49, !dbg !12375
  %50 = load i32, i32* %qoffset.addr, align 4, !dbg !12376
  %add52 = add i32 %mul51, %50, !dbg !12377
  %shr53 = lshr i32 %add52, 2, !dbg !12378
  store i32 %shr53, i32* %coeff, align 4, !dbg !12379
  %51 = load %struct.DiracArith*, %struct.DiracArith** %c.addr, align 8, !dbg !12380
  %52 = load i32, i32* %sign_pred, align 4, !dbg !12381
  %cmp54 = icmp sgt i32 %52, 0, !dbg !12382
  %conv55 = zext i1 %cmp54 to i32, !dbg !12382
  %add56 = add nsw i32 16, %conv55, !dbg !12383
  %53 = load i32, i32* %sign_pred, align 4, !dbg !12384
  %cmp57 = icmp slt i32 %53, 0, !dbg !12385
  %conv58 = zext i1 %cmp57 to i32, !dbg !12385
  %sub59 = sub nsw i32 %add56, %conv58, !dbg !12386
  %call60 = call i32 @dirac_get_arith_bit(%struct.DiracArith* %51, i32 %sub59), !dbg !12387
  store i32 %call60, i32* %sign, align 4, !dbg !12388
  %54 = load i32, i32* %coeff, align 4, !dbg !12389
  %55 = load i32, i32* %sign, align 4, !dbg !12390
  %sub61 = sub nsw i32 0, %55, !dbg !12391
  %xor = xor i32 %54, %sub61, !dbg !12392
  %56 = load i32, i32* %sign, align 4, !dbg !12393
  %add62 = add i32 %xor, %56, !dbg !12394
  store i32 %add62, i32* %coeff, align 4, !dbg !12395
  br label %if.end63, !dbg !12396

if.end63:                                         ; preds = %if.then50, %if.end48
  %57 = load i32, i32* %coeff, align 4, !dbg !12397
  %conv64 = trunc i32 %57 to i16, !dbg !12397
  %58 = load i16*, i16** %buf.addr, align 8, !dbg !12399
  store i16 %conv64, i16* %58, align 2, !dbg !12400
  ret void, !dbg !12401
}

declare noalias i8* @av_malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal void @init_obmc_weight(%struct.Plane* %p, i8* %obmc_weight, i32 %stride, i32 %left, i32 %right, i32 %top, i32 %bottom) #1 !dbg !12402 {
entry:
  %p.addr = alloca %struct.Plane*, align 8
  %obmc_weight.addr = alloca i8*, align 8
  %stride.addr = alloca i32, align 4
  %left.addr = alloca i32, align 4
  %right.addr = alloca i32, align 4
  %top.addr = alloca i32, align 4
  %bottom.addr = alloca i32, align 4
  %y = alloca i32, align 4
  %wy = alloca i32, align 4
  store %struct.Plane* %p, %struct.Plane** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Plane** %p.addr, metadata !12405, metadata !2947), !dbg !12406
  store i8* %obmc_weight, i8** %obmc_weight.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obmc_weight.addr, metadata !12407, metadata !2947), !dbg !12408
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !12409, metadata !2947), !dbg !12410
  store i32 %left, i32* %left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %left.addr, metadata !12411, metadata !2947), !dbg !12412
  store i32 %right, i32* %right.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %right.addr, metadata !12413, metadata !2947), !dbg !12414
  store i32 %top, i32* %top.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %top.addr, metadata !12415, metadata !2947), !dbg !12416
  store i32 %bottom, i32* %bottom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bottom.addr, metadata !12417, metadata !2947), !dbg !12418
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12419, metadata !2947), !dbg !12420
  store i32 0, i32* %y, align 4, !dbg !12421
  br label %for.cond, !dbg !12423

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %top.addr, align 4, !dbg !12424
  %tobool = icmp ne i32 %0, 0, !dbg !12424
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12427

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %y, align 4, !dbg !12428
  %2 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12430
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %2, i32 0, i32 5, !dbg !12431
  %3 = load i8, i8* %yblen, align 1, !dbg !12431
  %conv = zext i8 %3 to i32, !dbg !12430
  %shr = ashr i32 %conv, 1, !dbg !12432
  %cmp = icmp slt i32 %1, %shr, !dbg !12433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %4, label %for.body, label %for.end, !dbg !12434

for.body:                                         ; preds = %land.end
  %5 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12436
  %6 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12438
  %7 = load i32, i32* %stride.addr, align 4, !dbg !12439
  %8 = load i32, i32* %left.addr, align 4, !dbg !12440
  %9 = load i32, i32* %right.addr, align 4, !dbg !12441
  call void @init_obmc_weight_row(%struct.Plane* %5, i8* %6, i32 %7, i32 %8, i32 %9, i32 8), !dbg !12442
  %10 = load i32, i32* %stride.addr, align 4, !dbg !12443
  %11 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12444
  %idx.ext = sext i32 %10 to i64, !dbg !12444
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !12444
  store i8* %add.ptr, i8** %obmc_weight.addr, align 8, !dbg !12444
  br label %for.inc, !dbg !12445

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %y, align 4, !dbg !12446
  %inc = add nsw i32 %12, 1, !dbg !12446
  store i32 %inc, i32* %y, align 4, !dbg !12446
  br label %for.cond, !dbg !12448, !llvm.loop !12449

for.end:                                          ; preds = %land.end
  br label %for.cond2, !dbg !12451

for.cond2:                                        ; preds = %for.inc14, %for.end
  %13 = load i32, i32* %y, align 4, !dbg !12452
  %14 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12456
  %yblen3 = getelementptr inbounds %struct.Plane, %struct.Plane* %14, i32 0, i32 5, !dbg !12457
  %15 = load i8, i8* %yblen3, align 1, !dbg !12457
  %conv4 = zext i8 %15 to i32, !dbg !12456
  %16 = load i32, i32* %bottom.addr, align 4, !dbg !12458
  %shr5 = ashr i32 %conv4, %16, !dbg !12459
  %cmp6 = icmp slt i32 %13, %shr5, !dbg !12460
  br i1 %cmp6, label %for.body8, label %for.end16, !dbg !12461

for.body8:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %wy, metadata !12462, metadata !2947), !dbg !12464
  %17 = load i32, i32* %y, align 4, !dbg !12465
  %18 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12466
  %yblen9 = getelementptr inbounds %struct.Plane, %struct.Plane* %18, i32 0, i32 5, !dbg !12467
  %19 = load i8, i8* %yblen9, align 1, !dbg !12467
  %conv10 = zext i8 %19 to i32, !dbg !12466
  %20 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12468
  %yoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %20, i32 0, i32 9, !dbg !12469
  %21 = load i8, i8* %yoffset, align 1, !dbg !12469
  %conv11 = zext i8 %21 to i32, !dbg !12468
  %call = call i32 @weight(i32 %17, i32 %conv10, i32 %conv11), !dbg !12470
  store i32 %call, i32* %wy, align 4, !dbg !12464
  %22 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12471
  %23 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12472
  %24 = load i32, i32* %stride.addr, align 4, !dbg !12473
  %25 = load i32, i32* %left.addr, align 4, !dbg !12474
  %26 = load i32, i32* %right.addr, align 4, !dbg !12475
  %27 = load i32, i32* %wy, align 4, !dbg !12476
  call void @init_obmc_weight_row(%struct.Plane* %22, i8* %23, i32 %24, i32 %25, i32 %26, i32 %27), !dbg !12477
  %28 = load i32, i32* %stride.addr, align 4, !dbg !12478
  %29 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12479
  %idx.ext12 = sext i32 %28 to i64, !dbg !12479
  %add.ptr13 = getelementptr inbounds i8, i8* %29, i64 %idx.ext12, !dbg !12479
  store i8* %add.ptr13, i8** %obmc_weight.addr, align 8, !dbg !12479
  br label %for.inc14, !dbg !12480

for.inc14:                                        ; preds = %for.body8
  %30 = load i32, i32* %y, align 4, !dbg !12481
  %inc15 = add nsw i32 %30, 1, !dbg !12481
  store i32 %inc15, i32* %y, align 4, !dbg !12481
  br label %for.cond2, !dbg !12483, !llvm.loop !12484

for.end16:                                        ; preds = %for.cond2
  br label %for.cond17, !dbg !12485

for.cond17:                                       ; preds = %for.inc25, %for.end16
  %31 = load i32, i32* %y, align 4, !dbg !12486
  %32 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12490
  %yblen18 = getelementptr inbounds %struct.Plane, %struct.Plane* %32, i32 0, i32 5, !dbg !12491
  %33 = load i8, i8* %yblen18, align 1, !dbg !12491
  %conv19 = zext i8 %33 to i32, !dbg !12490
  %cmp20 = icmp slt i32 %31, %conv19, !dbg !12492
  br i1 %cmp20, label %for.body22, label %for.end27, !dbg !12493

for.body22:                                       ; preds = %for.cond17
  %34 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12494
  %35 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12496
  %36 = load i32, i32* %stride.addr, align 4, !dbg !12497
  %37 = load i32, i32* %left.addr, align 4, !dbg !12498
  %38 = load i32, i32* %right.addr, align 4, !dbg !12499
  call void @init_obmc_weight_row(%struct.Plane* %34, i8* %35, i32 %36, i32 %37, i32 %38, i32 8), !dbg !12500
  %39 = load i32, i32* %stride.addr, align 4, !dbg !12501
  %40 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12502
  %idx.ext23 = sext i32 %39 to i64, !dbg !12502
  %add.ptr24 = getelementptr inbounds i8, i8* %40, i64 %idx.ext23, !dbg !12502
  store i8* %add.ptr24, i8** %obmc_weight.addr, align 8, !dbg !12502
  br label %for.inc25, !dbg !12503

for.inc25:                                        ; preds = %for.body22
  %41 = load i32, i32* %y, align 4, !dbg !12504
  %inc26 = add nsw i32 %41, 1, !dbg !12504
  store i32 %inc26, i32* %y, align 4, !dbg !12504
  br label %for.cond17, !dbg !12506, !llvm.loop !12507

for.end27:                                        ; preds = %for.cond17
  ret void, !dbg !12508
}

; Function Attrs: nounwind uwtable
define internal void @init_obmc_weight_row(%struct.Plane* %p, i8* %obmc_weight, i32 %stride, i32 %left, i32 %right, i32 %wy) #1 !dbg !12509 {
entry:
  %p.addr = alloca %struct.Plane*, align 8
  %obmc_weight.addr = alloca i8*, align 8
  %stride.addr = alloca i32, align 4
  %left.addr = alloca i32, align 4
  %right.addr = alloca i32, align 4
  %wy.addr = alloca i32, align 4
  %x = alloca i32, align 4
  store %struct.Plane* %p, %struct.Plane** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Plane** %p.addr, metadata !12512, metadata !2947), !dbg !12513
  store i8* %obmc_weight, i8** %obmc_weight.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obmc_weight.addr, metadata !12514, metadata !2947), !dbg !12515
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !12516, metadata !2947), !dbg !12517
  store i32 %left, i32* %left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %left.addr, metadata !12518, metadata !2947), !dbg !12519
  store i32 %right, i32* %right.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %right.addr, metadata !12520, metadata !2947), !dbg !12521
  store i32 %wy, i32* %wy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wy.addr, metadata !12522, metadata !2947), !dbg !12523
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12524, metadata !2947), !dbg !12525
  store i32 0, i32* %x, align 4, !dbg !12526
  br label %for.cond, !dbg !12528

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %left.addr, align 4, !dbg !12529
  %tobool = icmp ne i32 %0, 0, !dbg !12529
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12532

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %x, align 4, !dbg !12533
  %2 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12535
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %2, i32 0, i32 4, !dbg !12536
  %3 = load i8, i8* %xblen, align 8, !dbg !12536
  %conv = zext i8 %3 to i32, !dbg !12535
  %shr = ashr i32 %conv, 1, !dbg !12537
  %cmp = icmp slt i32 %1, %shr, !dbg !12538
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %4, label %for.body, label %for.end, !dbg !12539

for.body:                                         ; preds = %land.end
  %5 = load i32, i32* %wy.addr, align 4, !dbg !12541
  %mul = mul nsw i32 %5, 8, !dbg !12542
  %conv2 = trunc i32 %mul to i8, !dbg !12541
  %6 = load i32, i32* %x, align 4, !dbg !12543
  %idxprom = sext i32 %6 to i64, !dbg !12544
  %7 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12544
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !12544
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !12545
  br label %for.inc, !dbg !12544

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %x, align 4, !dbg !12546
  %inc = add nsw i32 %8, 1, !dbg !12546
  store i32 %inc, i32* %x, align 4, !dbg !12546
  br label %for.cond, !dbg !12548, !llvm.loop !12549

for.end:                                          ; preds = %land.end
  br label %for.cond3, !dbg !12551

for.cond3:                                        ; preds = %for.inc17, %for.end
  %9 = load i32, i32* %x, align 4, !dbg !12552
  %10 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12556
  %xblen4 = getelementptr inbounds %struct.Plane, %struct.Plane* %10, i32 0, i32 4, !dbg !12557
  %11 = load i8, i8* %xblen4, align 8, !dbg !12557
  %conv5 = zext i8 %11 to i32, !dbg !12556
  %12 = load i32, i32* %right.addr, align 4, !dbg !12558
  %shr6 = ashr i32 %conv5, %12, !dbg !12559
  %cmp7 = icmp slt i32 %9, %shr6, !dbg !12560
  br i1 %cmp7, label %for.body9, label %for.end19, !dbg !12561

for.body9:                                        ; preds = %for.cond3
  %13 = load i32, i32* %wy.addr, align 4, !dbg !12562
  %14 = load i32, i32* %x, align 4, !dbg !12563
  %15 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12564
  %xblen10 = getelementptr inbounds %struct.Plane, %struct.Plane* %15, i32 0, i32 4, !dbg !12565
  %16 = load i8, i8* %xblen10, align 8, !dbg !12565
  %conv11 = zext i8 %16 to i32, !dbg !12564
  %17 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12566
  %xoffset = getelementptr inbounds %struct.Plane, %struct.Plane* %17, i32 0, i32 8, !dbg !12567
  %18 = load i8, i8* %xoffset, align 4, !dbg !12567
  %conv12 = zext i8 %18 to i32, !dbg !12566
  %call = call i32 @weight(i32 %14, i32 %conv11, i32 %conv12), !dbg !12568
  %mul13 = mul nsw i32 %13, %call, !dbg !12569
  %conv14 = trunc i32 %mul13 to i8, !dbg !12562
  %19 = load i32, i32* %x, align 4, !dbg !12570
  %idxprom15 = sext i32 %19 to i64, !dbg !12571
  %20 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12571
  %arrayidx16 = getelementptr inbounds i8, i8* %20, i64 %idxprom15, !dbg !12571
  store i8 %conv14, i8* %arrayidx16, align 1, !dbg !12572
  br label %for.inc17, !dbg !12571

for.inc17:                                        ; preds = %for.body9
  %21 = load i32, i32* %x, align 4, !dbg !12573
  %inc18 = add nsw i32 %21, 1, !dbg !12573
  store i32 %inc18, i32* %x, align 4, !dbg !12573
  br label %for.cond3, !dbg !12575, !llvm.loop !12576

for.end19:                                        ; preds = %for.cond3
  br label %for.cond20, !dbg !12577

for.cond20:                                       ; preds = %for.inc30, %for.end19
  %22 = load i32, i32* %x, align 4, !dbg !12578
  %23 = load %struct.Plane*, %struct.Plane** %p.addr, align 8, !dbg !12582
  %xblen21 = getelementptr inbounds %struct.Plane, %struct.Plane* %23, i32 0, i32 4, !dbg !12583
  %24 = load i8, i8* %xblen21, align 8, !dbg !12583
  %conv22 = zext i8 %24 to i32, !dbg !12582
  %cmp23 = icmp slt i32 %22, %conv22, !dbg !12584
  br i1 %cmp23, label %for.body25, label %for.end32, !dbg !12585

for.body25:                                       ; preds = %for.cond20
  %25 = load i32, i32* %wy.addr, align 4, !dbg !12586
  %mul26 = mul nsw i32 %25, 8, !dbg !12587
  %conv27 = trunc i32 %mul26 to i8, !dbg !12586
  %26 = load i32, i32* %x, align 4, !dbg !12588
  %idxprom28 = sext i32 %26 to i64, !dbg !12589
  %27 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12589
  %arrayidx29 = getelementptr inbounds i8, i8* %27, i64 %idxprom28, !dbg !12589
  store i8 %conv27, i8* %arrayidx29, align 1, !dbg !12590
  br label %for.inc30, !dbg !12589

for.inc30:                                        ; preds = %for.body25
  %28 = load i32, i32* %x, align 4, !dbg !12591
  %inc31 = add nsw i32 %28, 1, !dbg !12591
  store i32 %inc31, i32* %x, align 4, !dbg !12591
  br label %for.cond20, !dbg !12593, !llvm.loop !12594

for.end32:                                        ; preds = %for.cond20
  br label %for.cond33, !dbg !12595

for.cond33:                                       ; preds = %for.inc39, %for.end32
  %29 = load i32, i32* %x, align 4, !dbg !12596
  %30 = load i32, i32* %stride.addr, align 4, !dbg !12600
  %cmp34 = icmp slt i32 %29, %30, !dbg !12601
  br i1 %cmp34, label %for.body36, label %for.end41, !dbg !12602

for.body36:                                       ; preds = %for.cond33
  %31 = load i32, i32* %x, align 4, !dbg !12603
  %idxprom37 = sext i32 %31 to i64, !dbg !12604
  %32 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12604
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 %idxprom37, !dbg !12604
  store i8 0, i8* %arrayidx38, align 1, !dbg !12605
  br label %for.inc39, !dbg !12604

for.inc39:                                        ; preds = %for.body36
  %33 = load i32, i32* %x, align 4, !dbg !12606
  %inc40 = add nsw i32 %33, 1, !dbg !12606
  store i32 %inc40, i32* %x, align 4, !dbg !12606
  br label %for.cond33, !dbg !12608, !llvm.loop !12609

for.end41:                                        ; preds = %for.cond33
  ret void, !dbg !12610
}

; Function Attrs: nounwind uwtable
define internal i32 @weight(i32 %i, i32 %blen, i32 %offset) #1 !dbg !12611 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %blen.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12612, metadata !2947), !dbg !12613
  store i32 %blen, i32* %blen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blen.addr, metadata !12614, metadata !2947), !dbg !12615
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12616, metadata !2947), !dbg !12617
  %0 = load i32, i32* %i.addr, align 4, !dbg !12618
  %1 = load i32, i32* %offset.addr, align 4, !dbg !12620
  %mul = mul nsw i32 2, %1, !dbg !12621
  %cmp = icmp slt i32 %0, %mul, !dbg !12622
  br i1 %cmp, label %if.then, label %if.else, !dbg !12623

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %offset.addr, align 4, !dbg !12624
  %cmp1 = icmp eq i32 %2, 1, !dbg !12625
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12624

cond.true:                                        ; preds = %if.then
  %3 = load i32, i32* %i.addr, align 4, !dbg !12626
  %tobool = icmp ne i32 %3, 0, !dbg !12628
  %cond = select i1 %tobool, i32 5, i32 3, !dbg !12628
  br label %cond.end, !dbg !12629

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* %i.addr, align 4, !dbg !12630
  %mul2 = mul nsw i32 6, %4, !dbg !12632
  %5 = load i32, i32* %offset.addr, align 4, !dbg !12633
  %add = add nsw i32 %mul2, %5, !dbg !12634
  %sub = sub nsw i32 %add, 1, !dbg !12635
  %6 = load i32, i32* %offset.addr, align 4, !dbg !12636
  %mul3 = mul nsw i32 2, %6, !dbg !12637
  %sub4 = sub nsw i32 %mul3, 1, !dbg !12638
  %div = sdiv i32 %sub, %sub4, !dbg !12639
  %add5 = add nsw i32 1, %div, !dbg !12640
  br label %cond.end, !dbg !12641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i32 [ %cond, %cond.true ], [ %add5, %cond.false ], !dbg !12642
  store i32 %cond6, i32* %retval, align 4, !dbg !12644
  br label %return, !dbg !12644

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %i.addr, align 4, !dbg !12645
  %8 = load i32, i32* %blen.addr, align 4, !dbg !12647
  %sub7 = sub nsw i32 %8, 1, !dbg !12648
  %9 = load i32, i32* %offset.addr, align 4, !dbg !12649
  %mul8 = mul nsw i32 2, %9, !dbg !12650
  %sub9 = sub nsw i32 %sub7, %mul8, !dbg !12651
  %cmp10 = icmp sgt i32 %7, %sub9, !dbg !12652
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !12653

if.then11:                                        ; preds = %if.else
  %10 = load i32, i32* %offset.addr, align 4, !dbg !12654
  %cmp12 = icmp eq i32 %10, 1, !dbg !12655
  br i1 %cmp12, label %cond.true13, label %cond.false18, !dbg !12654

cond.true13:                                      ; preds = %if.then11
  %11 = load i32, i32* %blen.addr, align 4, !dbg !12656
  %sub14 = sub nsw i32 %11, 1, !dbg !12658
  %12 = load i32, i32* %i.addr, align 4, !dbg !12659
  %sub15 = sub nsw i32 %sub14, %12, !dbg !12660
  %tobool16 = icmp ne i32 %sub15, 0, !dbg !12661
  %cond17 = select i1 %tobool16, i32 5, i32 3, !dbg !12661
  br label %cond.end28, !dbg !12662

cond.false18:                                     ; preds = %if.then11
  %13 = load i32, i32* %blen.addr, align 4, !dbg !12663
  %sub19 = sub nsw i32 %13, 1, !dbg !12665
  %14 = load i32, i32* %i.addr, align 4, !dbg !12666
  %sub20 = sub nsw i32 %sub19, %14, !dbg !12667
  %mul21 = mul nsw i32 6, %sub20, !dbg !12668
  %15 = load i32, i32* %offset.addr, align 4, !dbg !12669
  %add22 = add nsw i32 %mul21, %15, !dbg !12670
  %sub23 = sub nsw i32 %add22, 1, !dbg !12671
  %16 = load i32, i32* %offset.addr, align 4, !dbg !12672
  %mul24 = mul nsw i32 2, %16, !dbg !12673
  %sub25 = sub nsw i32 %mul24, 1, !dbg !12674
  %div26 = sdiv i32 %sub23, %sub25, !dbg !12675
  %add27 = add nsw i32 1, %div26, !dbg !12676
  br label %cond.end28, !dbg !12677

cond.end28:                                       ; preds = %cond.false18, %cond.true13
  %cond29 = phi i32 [ %cond17, %cond.true13 ], [ %add27, %cond.false18 ], !dbg !12678
  store i32 %cond29, i32* %retval, align 4, !dbg !12680
  br label %return, !dbg !12680

if.end:                                           ; preds = %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end
  store i32 8, i32* %retval, align 4, !dbg !12681
  br label %return, !dbg !12681

return:                                           ; preds = %if.end30, %cond.end28, %cond.end
  %17 = load i32, i32* %retval, align 4, !dbg !12682
  ret i32 %17, !dbg !12682
}

; Function Attrs: nounwind uwtable
define internal void @block_mc(%struct.DiracContext* %s, %struct.DiracBlock* %block, i16* %mctmp, i8* %obmc_weight, i32 %plane, i32 %dstx, i32 %dsty) #1 !dbg !12683 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %block.addr = alloca %struct.DiracBlock*, align 8
  %mctmp.addr = alloca i16*, align 8
  %obmc_weight.addr = alloca i8*, align 8
  %plane.addr = alloca i32, align 4
  %dstx.addr = alloca i32, align 4
  %dsty.addr = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %src = alloca [5 x i8*], align 16
  %idx = alloca i32, align 4
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !12686, metadata !2947), !dbg !12687
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !12688, metadata !2947), !dbg !12689
  store i16* %mctmp, i16** %mctmp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mctmp.addr, metadata !12690, metadata !2947), !dbg !12691
  store i8* %obmc_weight, i8** %obmc_weight.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obmc_weight.addr, metadata !12692, metadata !2947), !dbg !12693
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !12694, metadata !2947), !dbg !12695
  store i32 %dstx, i32* %dstx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstx.addr, metadata !12696, metadata !2947), !dbg !12697
  store i32 %dsty, i32* %dsty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dsty.addr, metadata !12698, metadata !2947), !dbg !12699
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !12700, metadata !2947), !dbg !12701
  %0 = load i32, i32* %plane.addr, align 4, !dbg !12702
  %idxprom = sext i32 %0 to i64, !dbg !12703
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12703
  %plane1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 10, !dbg !12704
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane1, i64 0, i64 %idxprom, !dbg !12703
  store %struct.Plane* %arrayidx, %struct.Plane** %p, align 8, !dbg !12701
  call void @llvm.dbg.declare(metadata [5 x i8*]* %src, metadata !12705, metadata !2947), !dbg !12707
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !12708, metadata !2947), !dbg !12709
  %2 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12710
  %ref = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %2, i32 0, i32 1, !dbg !12711
  %3 = load i8, i8* %ref, align 2, !dbg !12711
  %conv = zext i8 %3 to i32, !dbg !12710
  %and = and i32 %conv, 3, !dbg !12712
  switch i32 %and, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb8
    i32 3, label %sw.bb30
  ], !dbg !12713

sw.bb:                                            ; preds = %entry
  %4 = load i16*, i16** %mctmp.addr, align 8, !dbg !12714
  %5 = load i32, i32* %plane.addr, align 4, !dbg !12716
  %idxprom2 = sext i32 %5 to i64, !dbg !12717
  %6 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12717
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %6, i32 0, i32 0, !dbg !12718
  %dc = bitcast %union.anon.3* %u to [3 x i16]*, !dbg !12719
  %arrayidx3 = getelementptr inbounds [3 x i16], [3 x i16]* %dc, i64 0, i64 %idxprom2, !dbg !12717
  %7 = load i16, i16* %arrayidx3, align 2, !dbg !12717
  %conv4 = sext i16 %7 to i32, !dbg !12717
  %8 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12720
  %stride = getelementptr inbounds %struct.Plane, %struct.Plane* %8, i32 0, i32 3, !dbg !12721
  %9 = load i64, i64* %stride, align 8, !dbg !12721
  %conv5 = trunc i64 %9 to i32, !dbg !12720
  %10 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12722
  %11 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12723
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %11, i32 0, i32 4, !dbg !12724
  %12 = load i8, i8* %xblen, align 8, !dbg !12724
  %conv6 = zext i8 %12 to i32, !dbg !12723
  %13 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12725
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %13, i32 0, i32 5, !dbg !12726
  %14 = load i8, i8* %yblen, align 1, !dbg !12726
  %conv7 = zext i8 %14 to i32, !dbg !12725
  call void @add_dc(i16* %4, i32 %conv4, i32 %conv5, i8* %10, i32 %conv6, i32 %conv7), !dbg !12727
  br label %return, !dbg !12728

sw.bb8:                                           ; preds = %entry, %entry
  %15 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12729
  %16 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12730
  %arraydecay = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12731
  %17 = load i32, i32* %dstx.addr, align 4, !dbg !12732
  %18 = load i32, i32* %dsty.addr, align 4, !dbg !12733
  %19 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12734
  %ref9 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %19, i32 0, i32 1, !dbg !12735
  %20 = load i8, i8* %ref9, align 2, !dbg !12735
  %conv10 = zext i8 %20 to i32, !dbg !12734
  %and11 = and i32 %conv10, 3, !dbg !12736
  %sub = sub nsw i32 %and11, 1, !dbg !12737
  %21 = load i32, i32* %plane.addr, align 4, !dbg !12738
  %call = call i32 @mc_subpel(%struct.DiracContext* %15, %struct.DiracBlock* %16, i8** %arraydecay, i32 %17, i32 %18, i32 %sub, i32 %21), !dbg !12739
  store i32 %call, i32* %idx, align 4, !dbg !12740
  %22 = load i32, i32* %idx, align 4, !dbg !12741
  %idxprom12 = sext i32 %22 to i64, !dbg !12742
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12742
  %put_pixels_tab = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 55, !dbg !12743
  %arrayidx13 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %put_pixels_tab, i64 0, i64 %idxprom12, !dbg !12742
  %24 = load void (i8*, i8**, i32, i32)*, void (i8*, i8**, i32, i32)** %arrayidx13, align 8, !dbg !12742
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12744
  %mcscratch = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 51, !dbg !12745
  %26 = load i8*, i8** %mcscratch, align 16, !dbg !12745
  %arraydecay14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12746
  %27 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12747
  %stride15 = getelementptr inbounds %struct.Plane, %struct.Plane* %27, i32 0, i32 3, !dbg !12748
  %28 = load i64, i64* %stride15, align 8, !dbg !12748
  %conv16 = trunc i64 %28 to i32, !dbg !12747
  %29 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12749
  %yblen17 = getelementptr inbounds %struct.Plane, %struct.Plane* %29, i32 0, i32 5, !dbg !12750
  %30 = load i8, i8* %yblen17, align 1, !dbg !12750
  %conv18 = zext i8 %30 to i32, !dbg !12749
  call void %24(i8* %26, i8** %arraydecay14, i32 %conv16, i32 %conv18), !dbg !12742
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12751
  %weight_func = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 58, !dbg !12753
  %32 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %weight_func, align 8, !dbg !12753
  %tobool = icmp ne void (i8*, i32, i32, i32, i32)* %32, null, !dbg !12751
  br i1 %tobool, label %if.then, label %if.end, !dbg !12754

if.then:                                          ; preds = %sw.bb8
  %33 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12755
  %weight_func19 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %33, i32 0, i32 58, !dbg !12756
  %34 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %weight_func19, align 8, !dbg !12756
  %35 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12757
  %mcscratch20 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %35, i32 0, i32 51, !dbg !12758
  %36 = load i8*, i8** %mcscratch20, align 16, !dbg !12758
  %37 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12759
  %stride21 = getelementptr inbounds %struct.Plane, %struct.Plane* %37, i32 0, i32 3, !dbg !12760
  %38 = load i64, i64* %stride21, align 8, !dbg !12760
  %conv22 = trunc i64 %38 to i32, !dbg !12759
  %39 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12761
  %weight_log2denom = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %39, i32 0, i32 41, !dbg !12762
  %40 = load i32, i32* %weight_log2denom, align 8, !dbg !12762
  %41 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12763
  %weight = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %41, i32 0, i32 40, !dbg !12764
  %arrayidx23 = getelementptr inbounds [2 x i16], [2 x i16]* %weight, i64 0, i64 0, !dbg !12763
  %42 = load i16, i16* %arrayidx23, align 2, !dbg !12763
  %conv24 = sext i16 %42 to i32, !dbg !12763
  %43 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12765
  %weight25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %43, i32 0, i32 40, !dbg !12766
  %arrayidx26 = getelementptr inbounds [2 x i16], [2 x i16]* %weight25, i64 0, i64 1, !dbg !12765
  %44 = load i16, i16* %arrayidx26, align 2, !dbg !12765
  %conv27 = sext i16 %44 to i32, !dbg !12765
  %add = add nsw i32 %conv24, %conv27, !dbg !12767
  %45 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12768
  %yblen28 = getelementptr inbounds %struct.Plane, %struct.Plane* %45, i32 0, i32 5, !dbg !12769
  %46 = load i8, i8* %yblen28, align 1, !dbg !12769
  %conv29 = zext i8 %46 to i32, !dbg !12768
  call void %34(i8* %36, i32 %conv22, i32 %40, i32 %add, i32 %conv29), !dbg !12755
  br label %if.end, !dbg !12755

if.end:                                           ; preds = %if.then, %sw.bb8
  br label %sw.epilog, !dbg !12770

sw.bb30:                                          ; preds = %entry
  %47 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12771
  %48 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12772
  %arraydecay31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12773
  %49 = load i32, i32* %dstx.addr, align 4, !dbg !12774
  %50 = load i32, i32* %dsty.addr, align 4, !dbg !12775
  %51 = load i32, i32* %plane.addr, align 4, !dbg !12776
  %call32 = call i32 @mc_subpel(%struct.DiracContext* %47, %struct.DiracBlock* %48, i8** %arraydecay31, i32 %49, i32 %50, i32 0, i32 %51), !dbg !12777
  store i32 %call32, i32* %idx, align 4, !dbg !12778
  %52 = load i32, i32* %idx, align 4, !dbg !12779
  %idxprom33 = sext i32 %52 to i64, !dbg !12780
  %53 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12780
  %put_pixels_tab34 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %53, i32 0, i32 55, !dbg !12781
  %arrayidx35 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %put_pixels_tab34, i64 0, i64 %idxprom33, !dbg !12780
  %54 = load void (i8*, i8**, i32, i32)*, void (i8*, i8**, i32, i32)** %arrayidx35, align 8, !dbg !12780
  %55 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12782
  %mcscratch36 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %55, i32 0, i32 51, !dbg !12783
  %56 = load i8*, i8** %mcscratch36, align 16, !dbg !12783
  %arraydecay37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12784
  %57 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12785
  %stride38 = getelementptr inbounds %struct.Plane, %struct.Plane* %57, i32 0, i32 3, !dbg !12786
  %58 = load i64, i64* %stride38, align 8, !dbg !12786
  %conv39 = trunc i64 %58 to i32, !dbg !12785
  %59 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12787
  %yblen40 = getelementptr inbounds %struct.Plane, %struct.Plane* %59, i32 0, i32 5, !dbg !12788
  %60 = load i8, i8* %yblen40, align 1, !dbg !12788
  %conv41 = zext i8 %60 to i32, !dbg !12787
  call void %54(i8* %56, i8** %arraydecay37, i32 %conv39, i32 %conv41), !dbg !12780
  %61 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12789
  %62 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12790
  %arraydecay42 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12791
  %63 = load i32, i32* %dstx.addr, align 4, !dbg !12792
  %64 = load i32, i32* %dsty.addr, align 4, !dbg !12793
  %65 = load i32, i32* %plane.addr, align 4, !dbg !12794
  %call43 = call i32 @mc_subpel(%struct.DiracContext* %61, %struct.DiracBlock* %62, i8** %arraydecay42, i32 %63, i32 %64, i32 1, i32 %65), !dbg !12795
  store i32 %call43, i32* %idx, align 4, !dbg !12796
  %66 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12797
  %biweight_func = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %66, i32 0, i32 59, !dbg !12799
  %67 = load void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32)** %biweight_func, align 16, !dbg !12799
  %tobool44 = icmp ne void (i8*, i8*, i32, i32, i32, i32, i32)* %67, null, !dbg !12797
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !12800

if.then45:                                        ; preds = %sw.bb30
  %68 = load i32, i32* %idx, align 4, !dbg !12801
  %idxprom46 = sext i32 %68 to i64, !dbg !12803
  %69 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12803
  %put_pixels_tab47 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %69, i32 0, i32 55, !dbg !12804
  %arrayidx48 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %put_pixels_tab47, i64 0, i64 %idxprom46, !dbg !12803
  %70 = load void (i8*, i8**, i32, i32)*, void (i8*, i8**, i32, i32)** %arrayidx48, align 8, !dbg !12803
  %71 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12805
  %mcscratch49 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %71, i32 0, i32 51, !dbg !12806
  %72 = load i8*, i8** %mcscratch49, align 16, !dbg !12806
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 32, !dbg !12807
  %arraydecay50 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12808
  %73 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12809
  %stride51 = getelementptr inbounds %struct.Plane, %struct.Plane* %73, i32 0, i32 3, !dbg !12810
  %74 = load i64, i64* %stride51, align 8, !dbg !12810
  %conv52 = trunc i64 %74 to i32, !dbg !12809
  %75 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12811
  %yblen53 = getelementptr inbounds %struct.Plane, %struct.Plane* %75, i32 0, i32 5, !dbg !12812
  %76 = load i8, i8* %yblen53, align 1, !dbg !12812
  %conv54 = zext i8 %76 to i32, !dbg !12811
  call void %70(i8* %add.ptr, i8** %arraydecay50, i32 %conv52, i32 %conv54), !dbg !12803
  %77 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12813
  %biweight_func55 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %77, i32 0, i32 59, !dbg !12814
  %78 = load void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32)** %biweight_func55, align 16, !dbg !12814
  %79 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12815
  %mcscratch56 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %79, i32 0, i32 51, !dbg !12816
  %80 = load i8*, i8** %mcscratch56, align 16, !dbg !12816
  %81 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12817
  %mcscratch57 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %81, i32 0, i32 51, !dbg !12818
  %82 = load i8*, i8** %mcscratch57, align 16, !dbg !12818
  %add.ptr58 = getelementptr inbounds i8, i8* %82, i64 32, !dbg !12819
  %83 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12820
  %stride59 = getelementptr inbounds %struct.Plane, %struct.Plane* %83, i32 0, i32 3, !dbg !12821
  %84 = load i64, i64* %stride59, align 8, !dbg !12821
  %conv60 = trunc i64 %84 to i32, !dbg !12820
  %85 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12822
  %weight_log2denom61 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %85, i32 0, i32 41, !dbg !12823
  %86 = load i32, i32* %weight_log2denom61, align 8, !dbg !12823
  %87 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12824
  %weight62 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %87, i32 0, i32 40, !dbg !12825
  %arrayidx63 = getelementptr inbounds [2 x i16], [2 x i16]* %weight62, i64 0, i64 0, !dbg !12824
  %88 = load i16, i16* %arrayidx63, align 2, !dbg !12824
  %conv64 = sext i16 %88 to i32, !dbg !12824
  %89 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12826
  %weight65 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %89, i32 0, i32 40, !dbg !12827
  %arrayidx66 = getelementptr inbounds [2 x i16], [2 x i16]* %weight65, i64 0, i64 1, !dbg !12826
  %90 = load i16, i16* %arrayidx66, align 2, !dbg !12826
  %conv67 = sext i16 %90 to i32, !dbg !12826
  %91 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12828
  %yblen68 = getelementptr inbounds %struct.Plane, %struct.Plane* %91, i32 0, i32 5, !dbg !12829
  %92 = load i8, i8* %yblen68, align 1, !dbg !12829
  %conv69 = zext i8 %92 to i32, !dbg !12828
  call void %78(i8* %80, i8* %add.ptr58, i32 %conv60, i32 %86, i32 %conv64, i32 %conv67, i32 %conv69), !dbg !12813
  br label %if.end78, !dbg !12830

if.else:                                          ; preds = %sw.bb30
  %93 = load i32, i32* %idx, align 4, !dbg !12831
  %idxprom70 = sext i32 %93 to i64, !dbg !12832
  %94 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12832
  %avg_pixels_tab = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %94, i32 0, i32 56, !dbg !12833
  %arrayidx71 = getelementptr inbounds [4 x void (i8*, i8**, i32, i32)*], [4 x void (i8*, i8**, i32, i32)*]* %avg_pixels_tab, i64 0, i64 %idxprom70, !dbg !12832
  %95 = load void (i8*, i8**, i32, i32)*, void (i8*, i8**, i32, i32)** %arrayidx71, align 8, !dbg !12832
  %96 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12834
  %mcscratch72 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %96, i32 0, i32 51, !dbg !12835
  %97 = load i8*, i8** %mcscratch72, align 16, !dbg !12835
  %arraydecay73 = getelementptr inbounds [5 x i8*], [5 x i8*]* %src, i32 0, i32 0, !dbg !12836
  %98 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12837
  %stride74 = getelementptr inbounds %struct.Plane, %struct.Plane* %98, i32 0, i32 3, !dbg !12838
  %99 = load i64, i64* %stride74, align 8, !dbg !12838
  %conv75 = trunc i64 %99 to i32, !dbg !12837
  %100 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12839
  %yblen76 = getelementptr inbounds %struct.Plane, %struct.Plane* %100, i32 0, i32 5, !dbg !12840
  %101 = load i8, i8* %yblen76, align 1, !dbg !12840
  %conv77 = zext i8 %101 to i32, !dbg !12839
  call void %95(i8* %97, i8** %arraydecay73, i32 %conv75, i32 %conv77), !dbg !12832
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then45
  br label %sw.epilog, !dbg !12841

sw.epilog:                                        ; preds = %entry, %if.end78, %if.end
  %102 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12842
  %add_obmc = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %102, i32 0, i32 57, !dbg !12843
  %103 = load void (i16*, i8*, i32, i8*, i32)*, void (i16*, i8*, i32, i8*, i32)** %add_obmc, align 16, !dbg !12843
  %104 = load i16*, i16** %mctmp.addr, align 8, !dbg !12844
  %105 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12845
  %mcscratch79 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %105, i32 0, i32 51, !dbg !12846
  %106 = load i8*, i8** %mcscratch79, align 16, !dbg !12846
  %107 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12847
  %stride80 = getelementptr inbounds %struct.Plane, %struct.Plane* %107, i32 0, i32 3, !dbg !12848
  %108 = load i64, i64* %stride80, align 8, !dbg !12848
  %conv81 = trunc i64 %108 to i32, !dbg !12847
  %109 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12849
  %110 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !12850
  %yblen82 = getelementptr inbounds %struct.Plane, %struct.Plane* %110, i32 0, i32 5, !dbg !12851
  %111 = load i8, i8* %yblen82, align 1, !dbg !12851
  %conv83 = zext i8 %111 to i32, !dbg !12850
  call void %103(i16* %104, i8* %106, i32 %conv81, i8* %109, i32 %conv83), !dbg !12842
  br label %return, !dbg !12852

return:                                           ; preds = %sw.epilog, %sw.bb
  ret void, !dbg !12853
}

; Function Attrs: nounwind uwtable
define internal void @add_dc(i16* %dst, i32 %dc, i32 %stride, i8* %obmc_weight, i32 %xblen, i32 %yblen) #1 !dbg !12855 {
entry:
  %dst.addr = alloca i16*, align 8
  %dc.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %obmc_weight.addr = alloca i8*, align 8
  %xblen.addr = alloca i32, align 4
  %yblen.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store i16* %dst, i16** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr, metadata !12858, metadata !2947), !dbg !12859
  store i32 %dc, i32* %dc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dc.addr, metadata !12860, metadata !2947), !dbg !12861
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !12862, metadata !2947), !dbg !12863
  store i8* %obmc_weight, i8** %obmc_weight.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obmc_weight.addr, metadata !12864, metadata !2947), !dbg !12865
  store i32 %xblen, i32* %xblen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xblen.addr, metadata !12866, metadata !2947), !dbg !12867
  store i32 %yblen, i32* %yblen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yblen.addr, metadata !12868, metadata !2947), !dbg !12869
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12870, metadata !2947), !dbg !12871
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12872, metadata !2947), !dbg !12873
  %0 = load i32, i32* %dc.addr, align 4, !dbg !12874
  %add = add nsw i32 %0, 128, !dbg !12874
  store i32 %add, i32* %dc.addr, align 4, !dbg !12874
  store i32 0, i32* %y, align 4, !dbg !12875
  br label %for.cond, !dbg !12877

for.cond:                                         ; preds = %for.inc22, %entry
  %1 = load i32, i32* %y, align 4, !dbg !12878
  %2 = load i32, i32* %yblen.addr, align 4, !dbg !12881
  %cmp = icmp slt i32 %1, %2, !dbg !12882
  br i1 %cmp, label %for.body, label %for.end23, !dbg !12883

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !12884
  br label %for.cond1, !dbg !12887

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %x, align 4, !dbg !12888
  %4 = load i32, i32* %xblen.addr, align 4, !dbg !12891
  %cmp2 = icmp slt i32 %3, %4, !dbg !12892
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !12893

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %dc.addr, align 4, !dbg !12894
  %6 = load i32, i32* %x, align 4, !dbg !12896
  %idxprom = sext i32 %6 to i64, !dbg !12897
  %7 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12897
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !12897
  %8 = load i8, i8* %arrayidx, align 1, !dbg !12897
  %conv = zext i8 %8 to i32, !dbg !12897
  %mul = mul nsw i32 %5, %conv, !dbg !12898
  %9 = load i32, i32* %x, align 4, !dbg !12899
  %idxprom4 = sext i32 %9 to i64, !dbg !12900
  %10 = load i16*, i16** %dst.addr, align 8, !dbg !12900
  %arrayidx5 = getelementptr inbounds i16, i16* %10, i64 %idxprom4, !dbg !12900
  %11 = load i16, i16* %arrayidx5, align 2, !dbg !12901
  %conv6 = zext i16 %11 to i32, !dbg !12901
  %add7 = add nsw i32 %conv6, %mul, !dbg !12901
  %conv8 = trunc i32 %add7 to i16, !dbg !12901
  store i16 %conv8, i16* %arrayidx5, align 2, !dbg !12901
  %12 = load i32, i32* %dc.addr, align 4, !dbg !12902
  %13 = load i32, i32* %x, align 4, !dbg !12903
  %add9 = add nsw i32 %13, 1, !dbg !12904
  %idxprom10 = sext i32 %add9 to i64, !dbg !12905
  %14 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12905
  %arrayidx11 = getelementptr inbounds i8, i8* %14, i64 %idxprom10, !dbg !12905
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !12905
  %conv12 = zext i8 %15 to i32, !dbg !12905
  %mul13 = mul nsw i32 %12, %conv12, !dbg !12906
  %16 = load i32, i32* %x, align 4, !dbg !12907
  %add14 = add nsw i32 %16, 1, !dbg !12908
  %idxprom15 = sext i32 %add14 to i64, !dbg !12909
  %17 = load i16*, i16** %dst.addr, align 8, !dbg !12909
  %arrayidx16 = getelementptr inbounds i16, i16* %17, i64 %idxprom15, !dbg !12909
  %18 = load i16, i16* %arrayidx16, align 2, !dbg !12910
  %conv17 = zext i16 %18 to i32, !dbg !12910
  %add18 = add nsw i32 %conv17, %mul13, !dbg !12910
  %conv19 = trunc i32 %add18 to i16, !dbg !12910
  store i16 %conv19, i16* %arrayidx16, align 2, !dbg !12910
  br label %for.inc, !dbg !12911

for.inc:                                          ; preds = %for.body3
  %19 = load i32, i32* %x, align 4, !dbg !12912
  %add20 = add nsw i32 %19, 2, !dbg !12912
  store i32 %add20, i32* %x, align 4, !dbg !12912
  br label %for.cond1, !dbg !12914, !llvm.loop !12915

for.end:                                          ; preds = %for.cond1
  %20 = load i32, i32* %stride.addr, align 4, !dbg !12917
  %21 = load i16*, i16** %dst.addr, align 8, !dbg !12918
  %idx.ext = sext i32 %20 to i64, !dbg !12918
  %add.ptr = getelementptr inbounds i16, i16* %21, i64 %idx.ext, !dbg !12918
  store i16* %add.ptr, i16** %dst.addr, align 8, !dbg !12918
  %22 = load i8*, i8** %obmc_weight.addr, align 8, !dbg !12919
  %add.ptr21 = getelementptr inbounds i8, i8* %22, i64 32, !dbg !12919
  store i8* %add.ptr21, i8** %obmc_weight.addr, align 8, !dbg !12919
  br label %for.inc22, !dbg !12920

for.inc22:                                        ; preds = %for.end
  %23 = load i32, i32* %y, align 4, !dbg !12921
  %inc = add nsw i32 %23, 1, !dbg !12921
  store i32 %inc, i32* %y, align 4, !dbg !12921
  br label %for.cond, !dbg !12923, !llvm.loop !12924

for.end23:                                        ; preds = %for.cond
  ret void, !dbg !12926
}

; Function Attrs: nounwind uwtable
define internal i32 @mc_subpel(%struct.DiracContext* %s, %struct.DiracBlock* %block, i8** %src, i32 %x, i32 %y, i32 %ref, i32 %plane) #1 !dbg !12927 {
entry:
  %s.addr = alloca %struct.DiracContext*, align 8
  %block.addr = alloca %struct.DiracBlock*, align 8
  %src.addr = alloca i8**, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ref.addr = alloca i32, align 4
  %plane.addr = alloca i32, align 4
  %p = alloca %struct.Plane*, align 8
  %ref_hpel = alloca i8**, align 8
  %motion_x = alloca i32, align 4
  %motion_y = alloca i32, align 4
  %mx = alloca i32, align 4
  %my = alloca i32, align 4
  %i = alloca i32, align 4
  %epel = alloca i32, align 4
  %nplanes = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  %SWAP_tmp119 = alloca i8*, align 8
  %SWAP_tmp130 = alloca i8*, align 8
  %SWAP_tmp137 = alloca i8*, align 8
  store %struct.DiracContext* %s, %struct.DiracContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracContext** %s.addr, metadata !12930, metadata !2947), !dbg !12931
  store %struct.DiracBlock* %block, %struct.DiracBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DiracBlock** %block.addr, metadata !12932, metadata !2947), !dbg !12933
  store i8** %src, i8*** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !12934, metadata !2947), !dbg !12935
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12936, metadata !2947), !dbg !12937
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12938, metadata !2947), !dbg !12939
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !12940, metadata !2947), !dbg !12941
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !12942, metadata !2947), !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.Plane** %p, metadata !12944, metadata !2947), !dbg !12945
  %0 = load i32, i32* %plane.addr, align 4, !dbg !12946
  %idxprom = sext i32 %0 to i64, !dbg !12947
  %1 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12947
  %plane1 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %1, i32 0, i32 10, !dbg !12948
  %arrayidx = getelementptr inbounds [3 x %struct.Plane], [3 x %struct.Plane]* %plane1, i64 0, i64 %idxprom, !dbg !12947
  store %struct.Plane* %arrayidx, %struct.Plane** %p, align 8, !dbg !12945
  call void @llvm.dbg.declare(metadata i8*** %ref_hpel, metadata !12949, metadata !2947), !dbg !12950
  %2 = load i32, i32* %plane.addr, align 4, !dbg !12951
  %idxprom2 = sext i32 %2 to i64, !dbg !12952
  %3 = load i32, i32* %ref.addr, align 4, !dbg !12953
  %idxprom3 = sext i32 %3 to i64, !dbg !12952
  %4 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12952
  %ref_pics = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %4, i32 0, i32 61, !dbg !12954
  %arrayidx4 = getelementptr inbounds [2 x %struct.DiracFrame*], [2 x %struct.DiracFrame*]* %ref_pics, i64 0, i64 %idxprom3, !dbg !12952
  %5 = load %struct.DiracFrame*, %struct.DiracFrame** %arrayidx4, align 8, !dbg !12952
  %hpel = getelementptr inbounds %struct.DiracFrame, %struct.DiracFrame* %5, i32 0, i32 2, !dbg !12955
  %arrayidx5 = getelementptr inbounds [3 x [4 x i8*]], [3 x [4 x i8*]]* %hpel, i64 0, i64 %idxprom2, !dbg !12952
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %arrayidx5, i32 0, i32 0, !dbg !12952
  store i8** %arraydecay, i8*** %ref_hpel, align 8, !dbg !12950
  call void @llvm.dbg.declare(metadata i32* %motion_x, metadata !12956, metadata !2947), !dbg !12957
  %6 = load i32, i32* %ref.addr, align 4, !dbg !12958
  %idxprom6 = sext i32 %6 to i64, !dbg !12959
  %7 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12959
  %u = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %7, i32 0, i32 0, !dbg !12960
  %mv = bitcast %union.anon.3* %u to [2 x [2 x i16]]*, !dbg !12961
  %arrayidx7 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv, i64 0, i64 %idxprom6, !dbg !12959
  %arrayidx8 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx7, i64 0, i64 0, !dbg !12959
  %8 = load i16, i16* %arrayidx8, align 2, !dbg !12959
  %conv = sext i16 %8 to i32, !dbg !12959
  store i32 %conv, i32* %motion_x, align 4, !dbg !12957
  call void @llvm.dbg.declare(metadata i32* %motion_y, metadata !12962, metadata !2947), !dbg !12963
  %9 = load i32, i32* %ref.addr, align 4, !dbg !12964
  %idxprom9 = sext i32 %9 to i64, !dbg !12965
  %10 = load %struct.DiracBlock*, %struct.DiracBlock** %block.addr, align 8, !dbg !12965
  %u10 = getelementptr inbounds %struct.DiracBlock, %struct.DiracBlock* %10, i32 0, i32 0, !dbg !12966
  %mv11 = bitcast %union.anon.3* %u10 to [2 x [2 x i16]]*, !dbg !12967
  %arrayidx12 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* %mv11, i64 0, i64 %idxprom9, !dbg !12965
  %arrayidx13 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx12, i64 0, i64 1, !dbg !12965
  %11 = load i16, i16* %arrayidx13, align 2, !dbg !12965
  %conv14 = sext i16 %11 to i32, !dbg !12965
  store i32 %conv14, i32* %motion_y, align 4, !dbg !12963
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !12968, metadata !2947), !dbg !12969
  call void @llvm.dbg.declare(metadata i32* %my, metadata !12970, metadata !2947), !dbg !12971
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12972, metadata !2947), !dbg !12973
  call void @llvm.dbg.declare(metadata i32* %epel, metadata !12974, metadata !2947), !dbg !12975
  call void @llvm.dbg.declare(metadata i32* %nplanes, metadata !12976, metadata !2947), !dbg !12977
  store i32 0, i32* %nplanes, align 4, !dbg !12977
  %12 = load i32, i32* %plane.addr, align 4, !dbg !12978
  %tobool = icmp ne i32 %12, 0, !dbg !12978
  br i1 %tobool, label %if.then, label %if.end, !dbg !12980

if.then:                                          ; preds = %entry
  %13 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12981
  %chroma_x_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %13, i32 0, i32 11, !dbg !12983
  %14 = load i32, i32* %chroma_x_shift, align 8, !dbg !12983
  %15 = load i32, i32* %motion_x, align 4, !dbg !12984
  %shr = ashr i32 %15, %14, !dbg !12984
  store i32 %shr, i32* %motion_x, align 4, !dbg !12984
  %16 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12985
  %chroma_y_shift = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %16, i32 0, i32 12, !dbg !12986
  %17 = load i32, i32* %chroma_y_shift, align 4, !dbg !12986
  %18 = load i32, i32* %motion_y, align 4, !dbg !12987
  %shr15 = ashr i32 %18, %17, !dbg !12987
  store i32 %shr15, i32* %motion_y, align 4, !dbg !12987
  br label %if.end, !dbg !12988

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %motion_x, align 4, !dbg !12989
  %20 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12990
  %mv_precision = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %20, i32 0, i32 39, !dbg !12991
  %21 = load i8, i8* %mv_precision, align 16, !dbg !12991
  %conv16 = zext i8 %21 to i32, !dbg !12990
  %shl = shl i32 -1, %conv16, !dbg !12992
  %neg = xor i32 %shl, -1, !dbg !12993
  %and = and i32 %19, %neg, !dbg !12994
  store i32 %and, i32* %mx, align 4, !dbg !12995
  %22 = load i32, i32* %motion_y, align 4, !dbg !12996
  %23 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !12997
  %mv_precision17 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %23, i32 0, i32 39, !dbg !12998
  %24 = load i8, i8* %mv_precision17, align 16, !dbg !12998
  %conv18 = zext i8 %24 to i32, !dbg !12997
  %shl19 = shl i32 -1, %conv18, !dbg !12999
  %neg20 = xor i32 %shl19, -1, !dbg !13000
  %and21 = and i32 %22, %neg20, !dbg !13001
  store i32 %and21, i32* %my, align 4, !dbg !13002
  %25 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13003
  %mv_precision22 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %25, i32 0, i32 39, !dbg !13004
  %26 = load i8, i8* %mv_precision22, align 16, !dbg !13004
  %conv23 = zext i8 %26 to i32, !dbg !13003
  %27 = load i32, i32* %motion_x, align 4, !dbg !13005
  %shr24 = ashr i32 %27, %conv23, !dbg !13005
  store i32 %shr24, i32* %motion_x, align 4, !dbg !13005
  %28 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13006
  %mv_precision25 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %28, i32 0, i32 39, !dbg !13007
  %29 = load i8, i8* %mv_precision25, align 16, !dbg !13007
  %conv26 = zext i8 %29 to i32, !dbg !13006
  %30 = load i32, i32* %motion_y, align 4, !dbg !13008
  %shr27 = ashr i32 %30, %conv26, !dbg !13008
  store i32 %shr27, i32* %motion_y, align 4, !dbg !13008
  %31 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13009
  %mv_precision28 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %31, i32 0, i32 39, !dbg !13010
  %32 = load i8, i8* %mv_precision28, align 16, !dbg !13010
  %conv29 = zext i8 %32 to i32, !dbg !13009
  %sub = sub nsw i32 3, %conv29, !dbg !13011
  %33 = load i32, i32* %mx, align 4, !dbg !13012
  %shl30 = shl i32 %33, %sub, !dbg !13012
  store i32 %shl30, i32* %mx, align 4, !dbg !13012
  %34 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13013
  %mv_precision31 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %34, i32 0, i32 39, !dbg !13014
  %35 = load i8, i8* %mv_precision31, align 16, !dbg !13014
  %conv32 = zext i8 %35 to i32, !dbg !13013
  %sub33 = sub nsw i32 3, %conv32, !dbg !13015
  %36 = load i32, i32* %my, align 4, !dbg !13016
  %shl34 = shl i32 %36, %sub33, !dbg !13016
  store i32 %shl34, i32* %my, align 4, !dbg !13016
  %37 = load i32, i32* %motion_x, align 4, !dbg !13017
  %38 = load i32, i32* %x.addr, align 4, !dbg !13018
  %add = add nsw i32 %38, %37, !dbg !13018
  store i32 %add, i32* %x.addr, align 4, !dbg !13018
  %39 = load i32, i32* %motion_y, align 4, !dbg !13019
  %40 = load i32, i32* %y.addr, align 4, !dbg !13020
  %add35 = add nsw i32 %40, %39, !dbg !13020
  store i32 %add35, i32* %y.addr, align 4, !dbg !13020
  %41 = load i32, i32* %mx, align 4, !dbg !13021
  %42 = load i32, i32* %my, align 4, !dbg !13022
  %or = or i32 %41, %42, !dbg !13023
  %and36 = and i32 %or, 1, !dbg !13024
  store i32 %and36, i32* %epel, align 4, !dbg !13025
  %43 = load i32, i32* %mx, align 4, !dbg !13026
  %44 = load i32, i32* %my, align 4, !dbg !13028
  %or37 = or i32 %43, %44, !dbg !13029
  %and38 = and i32 %or37, 3, !dbg !13030
  %tobool39 = icmp ne i32 %and38, 0, !dbg !13030
  br i1 %tobool39, label %if.else, label %if.then40, !dbg !13031

if.then40:                                        ; preds = %if.end
  store i32 1, i32* %nplanes, align 4, !dbg !13032
  %45 = load i32, i32* %my, align 4, !dbg !13034
  %shr41 = ashr i32 %45, 1, !dbg !13035
  %46 = load i32, i32* %mx, align 4, !dbg !13036
  %shr42 = ashr i32 %46, 2, !dbg !13037
  %add43 = add nsw i32 %shr41, %shr42, !dbg !13038
  %idxprom44 = sext i32 %add43 to i64, !dbg !13039
  %47 = load i8**, i8*** %ref_hpel, align 8, !dbg !13039
  %arrayidx45 = getelementptr inbounds i8*, i8** %47, i64 %idxprom44, !dbg !13039
  %48 = load i8*, i8** %arrayidx45, align 8, !dbg !13039
  %49 = load i32, i32* %y.addr, align 4, !dbg !13040
  %conv46 = sext i32 %49 to i64, !dbg !13040
  %50 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13041
  %stride = getelementptr inbounds %struct.Plane, %struct.Plane* %50, i32 0, i32 3, !dbg !13042
  %51 = load i64, i64* %stride, align 8, !dbg !13042
  %mul = mul nsw i64 %conv46, %51, !dbg !13043
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %mul, !dbg !13044
  %52 = load i32, i32* %x.addr, align 4, !dbg !13045
  %idx.ext = sext i32 %52 to i64, !dbg !13046
  %add.ptr47 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext, !dbg !13046
  %53 = load i8**, i8*** %src.addr, align 8, !dbg !13047
  %arrayidx48 = getelementptr inbounds i8*, i8** %53, i64 0, !dbg !13047
  store i8* %add.ptr47, i8** %arrayidx48, align 8, !dbg !13048
  br label %if.end153, !dbg !13049

if.else:                                          ; preds = %if.end
  store i32 4, i32* %nplanes, align 4, !dbg !13050
  store i32 0, i32* %i, align 4, !dbg !13052
  br label %for.cond, !dbg !13054

for.cond:                                         ; preds = %for.inc, %if.else
  %54 = load i32, i32* %i, align 4, !dbg !13055
  %cmp = icmp slt i32 %54, 4, !dbg !13058
  br i1 %cmp, label %for.body, label %for.end, !dbg !13059

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4, !dbg !13060
  %idxprom50 = sext i32 %55 to i64, !dbg !13061
  %56 = load i8**, i8*** %ref_hpel, align 8, !dbg !13061
  %arrayidx51 = getelementptr inbounds i8*, i8** %56, i64 %idxprom50, !dbg !13061
  %57 = load i8*, i8** %arrayidx51, align 8, !dbg !13061
  %58 = load i32, i32* %y.addr, align 4, !dbg !13062
  %conv52 = sext i32 %58 to i64, !dbg !13062
  %59 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13063
  %stride53 = getelementptr inbounds %struct.Plane, %struct.Plane* %59, i32 0, i32 3, !dbg !13064
  %60 = load i64, i64* %stride53, align 8, !dbg !13064
  %mul54 = mul nsw i64 %conv52, %60, !dbg !13065
  %add.ptr55 = getelementptr inbounds i8, i8* %57, i64 %mul54, !dbg !13066
  %61 = load i32, i32* %x.addr, align 4, !dbg !13067
  %idx.ext56 = sext i32 %61 to i64, !dbg !13068
  %add.ptr57 = getelementptr inbounds i8, i8* %add.ptr55, i64 %idx.ext56, !dbg !13068
  %62 = load i32, i32* %i, align 4, !dbg !13069
  %idxprom58 = sext i32 %62 to i64, !dbg !13070
  %63 = load i8**, i8*** %src.addr, align 8, !dbg !13070
  %arrayidx59 = getelementptr inbounds i8*, i8** %63, i64 %idxprom58, !dbg !13070
  store i8* %add.ptr57, i8** %arrayidx59, align 8, !dbg !13071
  br label %for.inc, !dbg !13070

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !13072
  %inc = add nsw i32 %64, 1, !dbg !13072
  store i32 %inc, i32* %i, align 4, !dbg !13072
  br label %for.cond, !dbg !13074, !llvm.loop !13075

for.end:                                          ; preds = %for.cond
  %65 = load i32, i32* %mx, align 4, !dbg !13077
  %cmp60 = icmp sgt i32 %65, 4, !dbg !13079
  br i1 %cmp60, label %if.then62, label %if.end68, !dbg !13080

if.then62:                                        ; preds = %for.end
  %66 = load i8**, i8*** %src.addr, align 8, !dbg !13081
  %arrayidx63 = getelementptr inbounds i8*, i8** %66, i64 0, !dbg !13081
  %67 = load i8*, i8** %arrayidx63, align 8, !dbg !13083
  %add.ptr64 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !13083
  store i8* %add.ptr64, i8** %arrayidx63, align 8, !dbg !13083
  %68 = load i8**, i8*** %src.addr, align 8, !dbg !13084
  %arrayidx65 = getelementptr inbounds i8*, i8** %68, i64 2, !dbg !13084
  %69 = load i8*, i8** %arrayidx65, align 8, !dbg !13085
  %add.ptr66 = getelementptr inbounds i8, i8* %69, i64 1, !dbg !13085
  store i8* %add.ptr66, i8** %arrayidx65, align 8, !dbg !13085
  %70 = load i32, i32* %x.addr, align 4, !dbg !13086
  %inc67 = add nsw i32 %70, 1, !dbg !13086
  store i32 %inc67, i32* %x.addr, align 4, !dbg !13086
  br label %if.end68, !dbg !13087

if.end68:                                         ; preds = %if.then62, %for.end
  %71 = load i32, i32* %my, align 4, !dbg !13088
  %cmp69 = icmp sgt i32 %71, 4, !dbg !13090
  br i1 %cmp69, label %if.then71, label %if.end79, !dbg !13091

if.then71:                                        ; preds = %if.end68
  %72 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13092
  %stride72 = getelementptr inbounds %struct.Plane, %struct.Plane* %72, i32 0, i32 3, !dbg !13094
  %73 = load i64, i64* %stride72, align 8, !dbg !13094
  %74 = load i8**, i8*** %src.addr, align 8, !dbg !13095
  %arrayidx73 = getelementptr inbounds i8*, i8** %74, i64 0, !dbg !13095
  %75 = load i8*, i8** %arrayidx73, align 8, !dbg !13096
  %add.ptr74 = getelementptr inbounds i8, i8* %75, i64 %73, !dbg !13096
  store i8* %add.ptr74, i8** %arrayidx73, align 8, !dbg !13096
  %76 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13097
  %stride75 = getelementptr inbounds %struct.Plane, %struct.Plane* %76, i32 0, i32 3, !dbg !13098
  %77 = load i64, i64* %stride75, align 8, !dbg !13098
  %78 = load i8**, i8*** %src.addr, align 8, !dbg !13099
  %arrayidx76 = getelementptr inbounds i8*, i8** %78, i64 1, !dbg !13099
  %79 = load i8*, i8** %arrayidx76, align 8, !dbg !13100
  %add.ptr77 = getelementptr inbounds i8, i8* %79, i64 %77, !dbg !13100
  store i8* %add.ptr77, i8** %arrayidx76, align 8, !dbg !13100
  %80 = load i32, i32* %y.addr, align 4, !dbg !13101
  %inc78 = add nsw i32 %80, 1, !dbg !13101
  store i32 %inc78, i32* %y.addr, align 4, !dbg !13101
  br label %if.end79, !dbg !13102

if.end79:                                         ; preds = %if.then71, %if.end68
  %81 = load i32, i32* %epel, align 4, !dbg !13103
  %tobool80 = icmp ne i32 %81, 0, !dbg !13103
  br i1 %tobool80, label %if.else110, label %if.then81, !dbg !13105

if.then81:                                        ; preds = %if.end79
  %82 = load i32, i32* %mx, align 4, !dbg !13106
  %and82 = and i32 %82, 3, !dbg !13109
  %tobool83 = icmp ne i32 %and82, 0, !dbg !13109
  br i1 %tobool83, label %if.else95, label %if.then84, !dbg !13110

if.then84:                                        ; preds = %if.then81
  %83 = load i32, i32* %mx, align 4, !dbg !13111
  %tobool85 = icmp ne i32 %83, 0, !dbg !13113
  %lnot = xor i1 %tobool85, true, !dbg !13113
  %lnot86 = xor i1 %lnot, true, !dbg !13114
  %lnot.ext = zext i1 %lnot86 to i32, !dbg !13114
  %add87 = add nsw i32 2, %lnot.ext, !dbg !13115
  %idxprom88 = sext i32 %add87 to i64, !dbg !13116
  %84 = load i8**, i8*** %src.addr, align 8, !dbg !13116
  %arrayidx89 = getelementptr inbounds i8*, i8** %84, i64 %idxprom88, !dbg !13116
  %85 = load i8*, i8** %arrayidx89, align 8, !dbg !13116
  %86 = load i32, i32* %mx, align 4, !dbg !13117
  %tobool90 = icmp ne i32 %86, 0, !dbg !13118
  %lnot91 = xor i1 %tobool90, true, !dbg !13118
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !13118
  %idxprom93 = sext i32 %lnot.ext92 to i64, !dbg !13119
  %87 = load i8**, i8*** %src.addr, align 8, !dbg !13119
  %arrayidx94 = getelementptr inbounds i8*, i8** %87, i64 %idxprom93, !dbg !13119
  store i8* %85, i8** %arrayidx94, align 8, !dbg !13120
  store i32 2, i32* %nplanes, align 4, !dbg !13121
  br label %if.end109, !dbg !13122

if.else95:                                        ; preds = %if.then81
  %88 = load i32, i32* %my, align 4, !dbg !13123
  %and96 = and i32 %88, 3, !dbg !13126
  %tobool97 = icmp ne i32 %and96, 0, !dbg !13126
  br i1 %tobool97, label %if.end108, label %if.then98, !dbg !13127

if.then98:                                        ; preds = %if.else95
  %89 = load i32, i32* %my, align 4, !dbg !13128
  %shr99 = ashr i32 %89, 1, !dbg !13130
  %idxprom100 = sext i32 %shr99 to i64, !dbg !13131
  %90 = load i8**, i8*** %src.addr, align 8, !dbg !13131
  %arrayidx101 = getelementptr inbounds i8*, i8** %90, i64 %idxprom100, !dbg !13131
  %91 = load i8*, i8** %arrayidx101, align 8, !dbg !13131
  %92 = load i8**, i8*** %src.addr, align 8, !dbg !13132
  %arrayidx102 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !13132
  store i8* %91, i8** %arrayidx102, align 8, !dbg !13133
  %93 = load i32, i32* %my, align 4, !dbg !13134
  %shr103 = ashr i32 %93, 1, !dbg !13135
  %add104 = add nsw i32 %shr103, 1, !dbg !13136
  %idxprom105 = sext i32 %add104 to i64, !dbg !13137
  %94 = load i8**, i8*** %src.addr, align 8, !dbg !13137
  %arrayidx106 = getelementptr inbounds i8*, i8** %94, i64 %idxprom105, !dbg !13137
  %95 = load i8*, i8** %arrayidx106, align 8, !dbg !13137
  %96 = load i8**, i8*** %src.addr, align 8, !dbg !13138
  %arrayidx107 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !13138
  store i8* %95, i8** %arrayidx107, align 8, !dbg !13139
  store i32 2, i32* %nplanes, align 4, !dbg !13140
  br label %if.end108, !dbg !13141

if.end108:                                        ; preds = %if.then98, %if.else95
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then84
  br label %if.end152, !dbg !13142

if.else110:                                       ; preds = %if.end79
  %97 = load i32, i32* %mx, align 4, !dbg !13143
  %cmp111 = icmp sgt i32 %97, 4, !dbg !13146
  br i1 %cmp111, label %if.then113, label %if.end125, !dbg !13147

if.then113:                                       ; preds = %if.else110
  br label %do.body, !dbg !13148, !llvm.loop !13150

do.body:                                          ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !13151, metadata !2947), !dbg !13153
  %98 = load i8**, i8*** %src.addr, align 8, !dbg !13154
  %arrayidx114 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !13154
  %99 = load i8*, i8** %arrayidx114, align 8, !dbg !13154
  store i8* %99, i8** %SWAP_tmp, align 8, !dbg !13156
  %100 = load i8**, i8*** %src.addr, align 8, !dbg !13157
  %arrayidx115 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !13157
  %101 = load i8*, i8** %arrayidx115, align 8, !dbg !13157
  %102 = load i8**, i8*** %src.addr, align 8, !dbg !13158
  %arrayidx116 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !13158
  store i8* %101, i8** %arrayidx116, align 8, !dbg !13159
  %103 = load i8*, i8** %SWAP_tmp, align 8, !dbg !13160
  %104 = load i8**, i8*** %src.addr, align 8, !dbg !13161
  %arrayidx117 = getelementptr inbounds i8*, i8** %104, i64 0, !dbg !13161
  store i8* %103, i8** %arrayidx117, align 8, !dbg !13162
  br label %do.end, !dbg !13163

do.end:                                           ; preds = %do.body
  br label %do.body118, !dbg !13164, !llvm.loop !13165

do.body118:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp119, metadata !13166, metadata !2947), !dbg !13168
  %105 = load i8**, i8*** %src.addr, align 8, !dbg !13169
  %arrayidx120 = getelementptr inbounds i8*, i8** %105, i64 3, !dbg !13169
  %106 = load i8*, i8** %arrayidx120, align 8, !dbg !13169
  store i8* %106, i8** %SWAP_tmp119, align 8, !dbg !13171
  %107 = load i8**, i8*** %src.addr, align 8, !dbg !13172
  %arrayidx121 = getelementptr inbounds i8*, i8** %107, i64 2, !dbg !13172
  %108 = load i8*, i8** %arrayidx121, align 8, !dbg !13172
  %109 = load i8**, i8*** %src.addr, align 8, !dbg !13173
  %arrayidx122 = getelementptr inbounds i8*, i8** %109, i64 3, !dbg !13173
  store i8* %108, i8** %arrayidx122, align 8, !dbg !13174
  %110 = load i8*, i8** %SWAP_tmp119, align 8, !dbg !13175
  %111 = load i8**, i8*** %src.addr, align 8, !dbg !13176
  %arrayidx123 = getelementptr inbounds i8*, i8** %111, i64 2, !dbg !13176
  store i8* %110, i8** %arrayidx123, align 8, !dbg !13177
  br label %do.end124, !dbg !13178

do.end124:                                        ; preds = %do.body118
  br label %if.end125, !dbg !13179

if.end125:                                        ; preds = %do.end124, %if.else110
  %112 = load i32, i32* %my, align 4, !dbg !13180
  %cmp126 = icmp sgt i32 %112, 4, !dbg !13182
  br i1 %cmp126, label %if.then128, label %if.end143, !dbg !13183

if.then128:                                       ; preds = %if.end125
  br label %do.body129, !dbg !13184, !llvm.loop !13186

do.body129:                                       ; preds = %if.then128
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp130, metadata !13187, metadata !2947), !dbg !13189
  %113 = load i8**, i8*** %src.addr, align 8, !dbg !13190
  %arrayidx131 = getelementptr inbounds i8*, i8** %113, i64 2, !dbg !13190
  %114 = load i8*, i8** %arrayidx131, align 8, !dbg !13190
  store i8* %114, i8** %SWAP_tmp130, align 8, !dbg !13192
  %115 = load i8**, i8*** %src.addr, align 8, !dbg !13193
  %arrayidx132 = getelementptr inbounds i8*, i8** %115, i64 0, !dbg !13193
  %116 = load i8*, i8** %arrayidx132, align 8, !dbg !13193
  %117 = load i8**, i8*** %src.addr, align 8, !dbg !13194
  %arrayidx133 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !13194
  store i8* %116, i8** %arrayidx133, align 8, !dbg !13195
  %118 = load i8*, i8** %SWAP_tmp130, align 8, !dbg !13196
  %119 = load i8**, i8*** %src.addr, align 8, !dbg !13197
  %arrayidx134 = getelementptr inbounds i8*, i8** %119, i64 0, !dbg !13197
  store i8* %118, i8** %arrayidx134, align 8, !dbg !13198
  br label %do.end135, !dbg !13199

do.end135:                                        ; preds = %do.body129
  br label %do.body136, !dbg !13200, !llvm.loop !13201

do.body136:                                       ; preds = %do.end135
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp137, metadata !13202, metadata !2947), !dbg !13204
  %120 = load i8**, i8*** %src.addr, align 8, !dbg !13205
  %arrayidx138 = getelementptr inbounds i8*, i8** %120, i64 3, !dbg !13205
  %121 = load i8*, i8** %arrayidx138, align 8, !dbg !13205
  store i8* %121, i8** %SWAP_tmp137, align 8, !dbg !13207
  %122 = load i8**, i8*** %src.addr, align 8, !dbg !13208
  %arrayidx139 = getelementptr inbounds i8*, i8** %122, i64 1, !dbg !13208
  %123 = load i8*, i8** %arrayidx139, align 8, !dbg !13208
  %124 = load i8**, i8*** %src.addr, align 8, !dbg !13209
  %arrayidx140 = getelementptr inbounds i8*, i8** %124, i64 3, !dbg !13209
  store i8* %123, i8** %arrayidx140, align 8, !dbg !13210
  %125 = load i8*, i8** %SWAP_tmp137, align 8, !dbg !13211
  %126 = load i8**, i8*** %src.addr, align 8, !dbg !13212
  %arrayidx141 = getelementptr inbounds i8*, i8** %126, i64 1, !dbg !13212
  store i8* %125, i8** %arrayidx141, align 8, !dbg !13213
  br label %do.end142, !dbg !13214

do.end142:                                        ; preds = %do.body136
  br label %if.end143, !dbg !13215

if.end143:                                        ; preds = %do.end142, %if.end125
  %127 = load i32, i32* %mx, align 4, !dbg !13216
  %and144 = and i32 %127, 3, !dbg !13217
  %idxprom145 = sext i32 %and144 to i64, !dbg !13218
  %128 = load i32, i32* %my, align 4, !dbg !13219
  %and146 = and i32 %128, 3, !dbg !13220
  %idxprom147 = sext i32 %and146 to i64, !dbg !13218
  %arrayidx148 = getelementptr inbounds [4 x [4 x [4 x i8]]], [4 x [4 x [4 x i8]]]* @epel_weights, i64 0, i64 %idxprom147, !dbg !13218
  %arrayidx149 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !13218
  %arraydecay150 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx149, i32 0, i32 0, !dbg !13218
  %129 = load i8**, i8*** %src.addr, align 8, !dbg !13221
  %arrayidx151 = getelementptr inbounds i8*, i8** %129, i64 4, !dbg !13221
  store i8* %arraydecay150, i8** %arrayidx151, align 8, !dbg !13222
  br label %if.end152

if.end152:                                        ; preds = %if.end143, %if.end109
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then40
  %130 = load i32, i32* %x.addr, align 4, !dbg !13223
  %131 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13225
  %xblen = getelementptr inbounds %struct.Plane, %struct.Plane* %131, i32 0, i32 4, !dbg !13226
  %132 = load i8, i8* %xblen, align 8, !dbg !13226
  %conv154 = zext i8 %132 to i32, !dbg !13225
  %add155 = add nsw i32 %130, %conv154, !dbg !13227
  %133 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13228
  %width = getelementptr inbounds %struct.Plane, %struct.Plane* %133, i32 0, i32 1, !dbg !13229
  %134 = load i32, i32* %width, align 8, !dbg !13229
  %add156 = add nsw i32 %134, 8, !dbg !13230
  %cmp157 = icmp sgt i32 %add155, %add156, !dbg !13231
  br i1 %cmp157, label %if.then170, label %lor.lhs.false, !dbg !13232

lor.lhs.false:                                    ; preds = %if.end153
  %135 = load i32, i32* %y.addr, align 4, !dbg !13233
  %136 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13234
  %yblen = getelementptr inbounds %struct.Plane, %struct.Plane* %136, i32 0, i32 5, !dbg !13235
  %137 = load i8, i8* %yblen, align 1, !dbg !13235
  %conv159 = zext i8 %137 to i32, !dbg !13234
  %add160 = add nsw i32 %135, %conv159, !dbg !13236
  %138 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13237
  %height = getelementptr inbounds %struct.Plane, %struct.Plane* %138, i32 0, i32 2, !dbg !13238
  %139 = load i32, i32* %height, align 4, !dbg !13238
  %add161 = add nsw i32 %139, 8, !dbg !13239
  %cmp162 = icmp sgt i32 %add160, %add161, !dbg !13240
  br i1 %cmp162, label %if.then170, label %lor.lhs.false164, !dbg !13241

lor.lhs.false164:                                 ; preds = %lor.lhs.false
  %140 = load i32, i32* %x.addr, align 4, !dbg !13242
  %cmp165 = icmp slt i32 %140, 0, !dbg !13243
  br i1 %cmp165, label %if.then170, label %lor.lhs.false167, !dbg !13244

lor.lhs.false167:                                 ; preds = %lor.lhs.false164
  %141 = load i32, i32* %y.addr, align 4, !dbg !13245
  %cmp168 = icmp slt i32 %141, 0, !dbg !13247
  br i1 %cmp168, label %if.then170, label %if.end197, !dbg !13248

if.then170:                                       ; preds = %lor.lhs.false167, %lor.lhs.false164, %lor.lhs.false, %if.end153
  store i32 0, i32* %i, align 4, !dbg !13250
  br label %for.cond171, !dbg !13253

for.cond171:                                      ; preds = %for.inc194, %if.then170
  %142 = load i32, i32* %i, align 4, !dbg !13254
  %143 = load i32, i32* %nplanes, align 4, !dbg !13257
  %cmp172 = icmp slt i32 %142, %143, !dbg !13258
  br i1 %cmp172, label %for.body174, label %for.end196, !dbg !13259

for.body174:                                      ; preds = %for.cond171
  %144 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13260
  %vdsp = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %144, i32 0, i32 2, !dbg !13262
  %emulated_edge_mc = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp, i32 0, i32 0, !dbg !13263
  %145 = load void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)** %emulated_edge_mc, align 16, !dbg !13263
  %146 = load i32, i32* %i, align 4, !dbg !13264
  %idxprom175 = sext i32 %146 to i64, !dbg !13265
  %147 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13265
  %edge_emu_buffer = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %147, i32 0, i32 48, !dbg !13266
  %arrayidx176 = getelementptr inbounds [4 x i8*], [4 x i8*]* %edge_emu_buffer, i64 0, i64 %idxprom175, !dbg !13265
  %148 = load i8*, i8** %arrayidx176, align 8, !dbg !13265
  %149 = load i32, i32* %i, align 4, !dbg !13267
  %idxprom177 = sext i32 %149 to i64, !dbg !13268
  %150 = load i8**, i8*** %src.addr, align 8, !dbg !13268
  %arrayidx178 = getelementptr inbounds i8*, i8** %150, i64 %idxprom177, !dbg !13268
  %151 = load i8*, i8** %arrayidx178, align 8, !dbg !13268
  %152 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13269
  %stride179 = getelementptr inbounds %struct.Plane, %struct.Plane* %152, i32 0, i32 3, !dbg !13270
  %153 = load i64, i64* %stride179, align 8, !dbg !13270
  %154 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13271
  %stride180 = getelementptr inbounds %struct.Plane, %struct.Plane* %154, i32 0, i32 3, !dbg !13272
  %155 = load i64, i64* %stride180, align 8, !dbg !13272
  %156 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13273
  %xblen181 = getelementptr inbounds %struct.Plane, %struct.Plane* %156, i32 0, i32 4, !dbg !13274
  %157 = load i8, i8* %xblen181, align 8, !dbg !13274
  %conv182 = zext i8 %157 to i32, !dbg !13273
  %158 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13275
  %yblen183 = getelementptr inbounds %struct.Plane, %struct.Plane* %158, i32 0, i32 5, !dbg !13276
  %159 = load i8, i8* %yblen183, align 1, !dbg !13276
  %conv184 = zext i8 %159 to i32, !dbg !13275
  %160 = load i32, i32* %x.addr, align 4, !dbg !13277
  %161 = load i32, i32* %y.addr, align 4, !dbg !13278
  %162 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13279
  %width185 = getelementptr inbounds %struct.Plane, %struct.Plane* %162, i32 0, i32 1, !dbg !13280
  %163 = load i32, i32* %width185, align 8, !dbg !13280
  %add186 = add nsw i32 %163, 8, !dbg !13281
  %164 = load %struct.Plane*, %struct.Plane** %p, align 8, !dbg !13282
  %height187 = getelementptr inbounds %struct.Plane, %struct.Plane* %164, i32 0, i32 2, !dbg !13283
  %165 = load i32, i32* %height187, align 4, !dbg !13283
  %add188 = add nsw i32 %165, 8, !dbg !13284
  call void %145(i8* %148, i8* %151, i64 %153, i64 %155, i32 %conv182, i32 %conv184, i32 %160, i32 %161, i32 %add186, i32 %add188), !dbg !13260
  %166 = load i32, i32* %i, align 4, !dbg !13285
  %idxprom189 = sext i32 %166 to i64, !dbg !13286
  %167 = load %struct.DiracContext*, %struct.DiracContext** %s.addr, align 8, !dbg !13286
  %edge_emu_buffer190 = getelementptr inbounds %struct.DiracContext, %struct.DiracContext* %167, i32 0, i32 48, !dbg !13287
  %arrayidx191 = getelementptr inbounds [4 x i8*], [4 x i8*]* %edge_emu_buffer190, i64 0, i64 %idxprom189, !dbg !13286
  %168 = load i8*, i8** %arrayidx191, align 8, !dbg !13286
  %169 = load i32, i32* %i, align 4, !dbg !13288
  %idxprom192 = sext i32 %169 to i64, !dbg !13289
  %170 = load i8**, i8*** %src.addr, align 8, !dbg !13289
  %arrayidx193 = getelementptr inbounds i8*, i8** %170, i64 %idxprom192, !dbg !13289
  store i8* %168, i8** %arrayidx193, align 8, !dbg !13290
  br label %for.inc194, !dbg !13291

for.inc194:                                       ; preds = %for.body174
  %171 = load i32, i32* %i, align 4, !dbg !13292
  %inc195 = add nsw i32 %171, 1, !dbg !13292
  store i32 %inc195, i32* %i, align 4, !dbg !13292
  br label %for.cond171, !dbg !13294, !llvm.loop !13295

for.end196:                                       ; preds = %for.cond171
  br label %if.end197, !dbg !13297

if.end197:                                        ; preds = %for.end196, %lor.lhs.false167
  %172 = load i32, i32* %nplanes, align 4, !dbg !13298
  %shr198 = ashr i32 %172, 1, !dbg !13299
  %173 = load i32, i32* %epel, align 4, !dbg !13300
  %add199 = add nsw i32 %shr198, %173, !dbg !13301
  ret i32 %add199, !dbg !13302
}

declare void @ff_dirac_golomb_reader_end(%struct.DiracGolombLUT**) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2942, !2943}
!llvm.ident = !{!2944}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !978, globals: !1133)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--diracdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !901, !910, !919, !925, !944, !970}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OutputFormat", file: !895, line: 123, size: 32, align: 32, elements: !896)
!895 = !DIFile(filename: "./libavcodec/mpegutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!896 = !{!897, !898, !899, !900}
!897 = !DIEnumerator(name: "FMT_MPEG1", value: 0)
!898 = !DIEnumerator(name: "FMT_H261", value: 1)
!899 = !DIEnumerator(name: "FMT_H263", value: 2)
!900 = !DIEnumerator(name: "FMT_MJPEG", value: 3)
!901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !902, line: 37, size: 32, align: 32, elements: !903)
!902 = !DIFile(filename: "./libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!903 = !{!904, !905, !906, !907, !908, !909}
!904 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!905 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!906 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!907 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!908 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!909 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918}
!912 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!913 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!914 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!915 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!916 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!917 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!918 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !920)
!920 = !{!921, !922, !923, !924}
!921 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!922 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!923 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!924 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DiracParseCodes", file: !926, line: 57, size: 32, align: 32, elements: !927)
!926 = !DIFile(filename: "libavcodec/dirac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!927 = !{!928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943}
!928 = !DIEnumerator(name: "DIRAC_PCODE_SEQ_HEADER", value: 0)
!929 = !DIEnumerator(name: "DIRAC_PCODE_END_SEQ", value: 16)
!930 = !DIEnumerator(name: "DIRAC_PCODE_AUX", value: 32)
!931 = !DIEnumerator(name: "DIRAC_PCODE_PAD", value: 48)
!932 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_CODED", value: 8)
!933 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_RAW", value: 72)
!934 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_LOW_DEL", value: 200)
!935 = !DIEnumerator(name: "DIRAC_PCODE_PICTURE_HQ", value: 232)
!936 = !DIEnumerator(name: "DIRAC_PCODE_INTER_NOREF_CO1", value: 10)
!937 = !DIEnumerator(name: "DIRAC_PCODE_INTER_NOREF_CO2", value: 9)
!938 = !DIEnumerator(name: "DIRAC_PCODE_INTER_REF_CO1", value: 13)
!939 = !DIEnumerator(name: "DIRAC_PCODE_INTER_REF_CO2", value: 14)
!940 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_CO", value: 12)
!941 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_RAW", value: 76)
!942 = !DIEnumerator(name: "DIRAC_PCODE_INTRA_REF_PICT", value: 204)
!943 = !DIEnumerator(name: "DIRAC_PCODE_MAGIC", value: 1111638852)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dirac_arith_contexts", file: !945, line: 35, size: 32, align: 32, elements: !946)
!945 = !DIFile(filename: "libavcodec/dirac_arith.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!946 = !{!947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969}
!947 = !DIEnumerator(name: "CTX_ZPZN_F1", value: 0)
!948 = !DIEnumerator(name: "CTX_ZPNN_F1", value: 1)
!949 = !DIEnumerator(name: "CTX_NPZN_F1", value: 2)
!950 = !DIEnumerator(name: "CTX_NPNN_F1", value: 3)
!951 = !DIEnumerator(name: "CTX_ZP_F2", value: 4)
!952 = !DIEnumerator(name: "CTX_ZP_F3", value: 5)
!953 = !DIEnumerator(name: "CTX_ZP_F4", value: 6)
!954 = !DIEnumerator(name: "CTX_ZP_F5", value: 7)
!955 = !DIEnumerator(name: "CTX_ZP_F6", value: 8)
!956 = !DIEnumerator(name: "CTX_NP_F2", value: 9)
!957 = !DIEnumerator(name: "CTX_NP_F3", value: 10)
!958 = !DIEnumerator(name: "CTX_NP_F4", value: 11)
!959 = !DIEnumerator(name: "CTX_NP_F5", value: 12)
!960 = !DIEnumerator(name: "CTX_NP_F6", value: 13)
!961 = !DIEnumerator(name: "CTX_COEFF_DATA", value: 14)
!962 = !DIEnumerator(name: "CTX_SIGN_NEG", value: 15)
!963 = !DIEnumerator(name: "CTX_SIGN_ZERO", value: 16)
!964 = !DIEnumerator(name: "CTX_SIGN_POS", value: 17)
!965 = !DIEnumerator(name: "CTX_ZERO_BLOCK", value: 18)
!966 = !DIEnumerator(name: "CTX_DELTA_Q_F", value: 19)
!967 = !DIEnumerator(name: "CTX_DELTA_Q_DATA", value: 20)
!968 = !DIEnumerator(name: "CTX_DELTA_Q_SIGN", value: 21)
!969 = !DIEnumerator(name: "DIRAC_CTX_COUNT", value: 22)
!970 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dirac_subband", file: !971, line: 242, size: 32, align: 32, elements: !972)
!971 = !DIFile(filename: "libavcodec/diracdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!972 = !{!973, !974, !975, !976, !977}
!973 = !DIEnumerator(name: "subband_ll", value: 0)
!974 = !DIEnumerator(name: "subband_hl", value: 1)
!975 = !DIEnumerator(name: "subband_lh", value: 2)
!976 = !DIEnumerator(name: "subband_hh", value: 3)
!977 = !DIEnumerator(name: "subband_nb", value: 4)
!978 = !{!979, !980, !981, !1092, !1011, !1019, !988, !1098, !1022, !1099, !1106, !1109, !1128, !1130, !1131, !1132}
!979 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!980 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !984)
!984 = !{!985, !993, !995, !997, !998, !999, !1000, !1001, !1002, !1003, !1010, !1013, !1014, !1015, !1016, !1017, !1018, !1020, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1044, !1046, !1047, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1080, !1081, !1082, !1083, !1084, !1085, !1088, !1089, !1090, !1091}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !983, file: !744, line: 282, baseType: !986, size: 512, align: 64)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, align: 64, elements: !991)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !989, line: 48, baseType: !990)
!989 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!990 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!991 = !{!992}
!992 = !DISubrange(count: 8)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !983, file: !744, line: 299, baseType: !994, size: 256, align: 32, offset: 512)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 256, align: 32, elements: !991)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !983, file: !744, line: 315, baseType: !996, size: 64, align: 64, offset: 768)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !983, file: !744, line: 326, baseType: !979, size: 32, align: 32, offset: 832)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !983, file: !744, line: 326, baseType: !979, size: 32, align: 32, offset: 864)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !983, file: !744, line: 334, baseType: !979, size: 32, align: 32, offset: 896)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !983, file: !744, line: 341, baseType: !979, size: 32, align: 32, offset: 928)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !983, file: !744, line: 346, baseType: !979, size: 32, align: 32, offset: 960)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !983, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !983, file: !744, line: 356, baseType: !1004, size: 64, align: 32, offset: 1024)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1005, line: 61, baseType: !1006)
!1005 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1005, line: 58, size: 64, align: 32, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1006, file: !1005, line: 59, baseType: !979, size: 32, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1006, file: !1005, line: 60, baseType: !979, size: 32, align: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !983, file: !744, line: 361, baseType: !1011, size: 64, align: 64, offset: 1088)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !989, line: 40, baseType: !1012)
!1012 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !983, file: !744, line: 369, baseType: !1011, size: 64, align: 64, offset: 1152)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !983, file: !744, line: 377, baseType: !1011, size: 64, align: 64, offset: 1216)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !983, file: !744, line: 382, baseType: !979, size: 32, align: 32, offset: 1280)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !983, file: !744, line: 386, baseType: !979, size: 32, align: 32, offset: 1312)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !983, file: !744, line: 391, baseType: !979, size: 32, align: 32, offset: 1344)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !983, file: !744, line: 396, baseType: !1019, size: 64, align: 64, offset: 1408)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !983, file: !744, line: 403, baseType: !1021, size: 512, align: 64, offset: 1472)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 512, align: 64, elements: !991)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !989, line: 55, baseType: !1023)
!1023 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !983, file: !744, line: 410, baseType: !979, size: 32, align: 32, offset: 1984)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !983, file: !744, line: 415, baseType: !979, size: 32, align: 32, offset: 2016)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !983, file: !744, line: 420, baseType: !979, size: 32, align: 32, offset: 2048)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !983, file: !744, line: 425, baseType: !979, size: 32, align: 32, offset: 2080)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !983, file: !744, line: 435, baseType: !1011, size: 64, align: 64, offset: 2112)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !983, file: !744, line: 440, baseType: !979, size: 32, align: 32, offset: 2176)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !983, file: !744, line: 445, baseType: !1022, size: 64, align: 64, offset: 2240)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !983, file: !744, line: 459, baseType: !1032, size: 512, align: 64, offset: 2304)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 512, align: 64, elements: !991)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1035, line: 94, baseType: !1036)
!1035 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1035, line: 81, size: 192, align: 64, elements: !1037)
!1037 = !{!1038, !1042, !1043}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1036, file: !1035, line: 82, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1035, line: 73, baseType: !1041)
!1041 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1035, line: 73, flags: DIFlagFwdDecl)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1036, file: !1035, line: 89, baseType: !987, size: 64, align: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1036, file: !1035, line: 93, baseType: !979, size: 32, align: 32, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !983, file: !744, line: 473, baseType: !1045, size: 64, align: 64, offset: 2816)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !983, file: !744, line: 477, baseType: !979, size: 32, align: 32, offset: 2880)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !983, file: !744, line: 479, baseType: !1048, size: 64, align: 64, offset: 2944)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1061}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1051, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1051, file: !744, line: 203, baseType: !987, size: 64, align: 64, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1051, file: !744, line: 204, baseType: !979, size: 32, align: 32, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1051, file: !744, line: 205, baseType: !1057, size: 64, align: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64, align: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1059, line: 86, baseType: !1060)
!1059 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1060 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1059, line: 86, flags: DIFlagFwdDecl)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1051, file: !744, line: 206, baseType: !1033, size: 64, align: 64, offset: 256)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !983, file: !744, line: 480, baseType: !979, size: 32, align: 32, offset: 3008)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !983, file: !744, line: 505, baseType: !979, size: 32, align: 32, offset: 3040)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !983, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !983, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !983, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !983, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !983, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !983, file: !744, line: 532, baseType: !1011, size: 64, align: 64, offset: 3264)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !983, file: !744, line: 539, baseType: !1011, size: 64, align: 64, offset: 3328)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !983, file: !744, line: 547, baseType: !1011, size: 64, align: 64, offset: 3392)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !983, file: !744, line: 554, baseType: !1057, size: 64, align: 64, offset: 3456)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !983, file: !744, line: 563, baseType: !979, size: 32, align: 32, offset: 3520)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !983, file: !744, line: 572, baseType: !979, size: 32, align: 32, offset: 3552)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !983, file: !744, line: 581, baseType: !979, size: 32, align: 32, offset: 3584)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !983, file: !744, line: 588, baseType: !1077, size: 64, align: 64, offset: 3648)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !989, line: 36, baseType: !1079)
!1079 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !983, file: !744, line: 593, baseType: !979, size: 32, align: 32, offset: 3712)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !983, file: !744, line: 596, baseType: !979, size: 32, align: 32, offset: 3744)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !983, file: !744, line: 599, baseType: !1033, size: 64, align: 64, offset: 3776)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !983, file: !744, line: 605, baseType: !1033, size: 64, align: 64, offset: 3840)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !983, file: !744, line: 616, baseType: !1033, size: 64, align: 64, offset: 3904)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !983, file: !744, line: 626, baseType: !1086, size: 64, align: 64, offset: 3968)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1087, line: 216, baseType: !1023)
!1087 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !983, file: !744, line: 627, baseType: !1086, size: 64, align: 64, offset: 4032)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !983, file: !744, line: 628, baseType: !1086, size: 64, align: 64, offset: 4096)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !983, file: !744, line: 629, baseType: !1086, size: 64, align: 64, offset: 4160)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !983, file: !744, line: 645, baseType: !1033, size: 64, align: 64, offset: 4224)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1095, line: 221, size: 32, align: 8, elements: !1096)
!1095 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1094, file: !1095, line: 221, baseType: !1098, size: 32, align: 32)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !989, line: 51, baseType: !980)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1095, line: 222, size: 16, align: 8, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1101, file: !1095, line: 222, baseType: !1104, size: 16, align: 16)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !989, line: 49, baseType: !1105)
!1105 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !989, line: 37, baseType: !1108)
!1108 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracSlice", file: !971, line: 132, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DiracSlice", file: !971, line: 127, size: 384, align: 64, elements: !1112)
!1112 = !{!1113, !1125, !1126, !1127}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1111, file: !971, line: 128, baseType: !1114, size: 256, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1115, line: 70, baseType: !1116)
!1115 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1115, line: 61, size: 256, align: 64, elements: !1117)
!1117 = !{!1118, !1121, !1122, !1123, !1124}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1116, file: !1115, line: 62, baseType: !1119, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1116, file: !1115, line: 62, baseType: !1119, size: 64, align: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1116, file: !1115, line: 67, baseType: !979, size: 32, align: 32, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1116, file: !1115, line: 68, baseType: !979, size: 32, align: 32, offset: 160)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1116, file: !1115, line: 69, baseType: !979, size: 32, align: 32, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "slice_x", scope: !1111, file: !971, line: 129, baseType: !979, size: 32, align: 32, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "slice_y", scope: !1111, file: !971, line: 130, baseType: !979, size: 32, align: 32, offset: 288)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1111, file: !971, line: 131, baseType: !979, size: 32, align: 32, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !989, line: 38, baseType: !979)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1133 = !{!1134, !2663, !2666, !2932, !2939}
!1134 = distinct !DIGlobalVariable(name: "ff_dirac_decoder", scope: !0, file: !971, line: 2351, type: !1135, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_dirac_decoder)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !1137)
!1137 = !{!1138, !1142, !1143, !1144, !1145, !1146, !1149, !1152, !1155, !1158, !1161, !1162, !1235, !1243, !1244, !1245, !1247, !2578, !2584, !2592, !2596, !2597, !2634, !2638, !2642, !2643, !2647, !2651, !2652, !2656, !2657, !2658}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1136, file: !14, line: 3475, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1136, file: !14, line: 3480, baseType: !1139, size: 64, align: 64, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1136, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1136, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1136, file: !14, line: 3487, baseType: !979, size: 32, align: 32, offset: 192)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1136, file: !14, line: 3488, baseType: !1147, size: 64, align: 64, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1136, file: !14, line: 3489, baseType: !1150, size: 64, align: 64, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1136, file: !14, line: 3490, baseType: !1153, size: 64, align: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1136, file: !14, line: 3491, baseType: !1156, size: 64, align: 64, offset: 448)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1136, file: !14, line: 3492, baseType: !1159, size: 64, align: 64, offset: 512)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1136, file: !14, line: 3493, baseType: !988, size: 8, align: 8, offset: 576)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1136, file: !14, line: 3494, baseType: !1163, size: 64, align: 64, offset: 640)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !1167)
!1167 = !{!1168, !1169, !1173, !1194, !1195, !1196, !1197, !1201, !1207, !1209, !1213}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1166, file: !713, line: 72, baseType: !1139, size: 64, align: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1166, file: !713, line: 78, baseType: !1170, size: 64, align: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1139, !1019}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1166, file: !713, line: 85, baseType: !1174, size: 64, align: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1190, !1191, !1192, !1193}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1176, file: !691, line: 247, baseType: !1139, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1176, file: !691, line: 253, baseType: !1139, size: 64, align: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1176, file: !691, line: 259, baseType: !979, size: 32, align: 32, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1176, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1176, file: !691, line: 271, baseType: !1183, size: 64, align: 64, offset: 192)
!1183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1176, file: !691, line: 265, size: 64, align: 64, elements: !1184)
!1184 = !{!1185, !1186, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1183, file: !691, line: 266, baseType: !1011, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1183, file: !691, line: 267, baseType: !1187, size: 64, align: 64)
!1187 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1183, file: !691, line: 268, baseType: !1139, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1183, file: !691, line: 270, baseType: !1004, size: 64, align: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1176, file: !691, line: 272, baseType: !1187, size: 64, align: 64, offset: 256)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1176, file: !691, line: 273, baseType: !1187, size: 64, align: 64, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1176, file: !691, line: 275, baseType: !979, size: 32, align: 32, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1176, file: !691, line: 300, baseType: !1139, size: 64, align: 64, offset: 448)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1166, file: !713, line: 93, baseType: !979, size: 32, align: 32, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1166, file: !713, line: 99, baseType: !979, size: 32, align: 32, offset: 224)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1166, file: !713, line: 108, baseType: !979, size: 32, align: 32, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1166, file: !713, line: 113, baseType: !1198, size: 64, align: 64, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64, align: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!1019, !1019, !1019}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1166, file: !713, line: 123, baseType: !1202, size: 64, align: 64, offset: 384)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64, align: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!1205, !1205}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1166, file: !713, line: 130, baseType: !1208, size: 32, align: 32, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1166, file: !713, line: 136, baseType: !1210, size: 64, align: 64, offset: 512)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1208, !1019}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1166, file: !713, line: 142, baseType: !1214, size: 64, align: 64, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!979, !1217, !1019, !1139, !979}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1220)
!1220 = !{!1221, !1233, !1234}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1219, file: !691, line: 360, baseType: !1222, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1225, file: !691, line: 307, baseType: !1139, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1225, file: !691, line: 313, baseType: !1187, size: 64, align: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1225, file: !691, line: 313, baseType: !1187, size: 64, align: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1225, file: !691, line: 318, baseType: !1187, size: 64, align: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1225, file: !691, line: 318, baseType: !1187, size: 64, align: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1225, file: !691, line: 323, baseType: !979, size: 32, align: 32, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1219, file: !691, line: 364, baseType: !979, size: 32, align: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1219, file: !691, line: 368, baseType: !979, size: 32, align: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1136, file: !14, line: 3495, baseType: !1236, size: 64, align: 64, offset: 704)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1239, file: !14, line: 3402, baseType: !979, size: 32, align: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1239, file: !14, line: 3403, baseType: !1139, size: 64, align: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1136, file: !14, line: 3507, baseType: !1139, size: 64, align: 64, offset: 768)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1136, file: !14, line: 3516, baseType: !979, size: 32, align: 32, offset: 832)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1136, file: !14, line: 3517, baseType: !1246, size: 64, align: 64, offset: 896)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1136, file: !14, line: 3527, baseType: !1248, size: 64, align: 64, offset: 960)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!979, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64, align: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1261, !1262, !1263, !1264, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1447, !1451, !1452, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2516, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1253, file: !14, line: 1561, baseType: !1163, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1253, file: !14, line: 1562, baseType: !979, size: 32, align: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1253, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1253, file: !14, line: 1565, baseType: !1259, size: 64, align: 64, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1253, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1253, file: !14, line: 1581, baseType: !980, size: 32, align: 32, offset: 224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1253, file: !14, line: 1583, baseType: !1019, size: 64, align: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1253, file: !14, line: 1591, baseType: !1265, size: 64, align: 64, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64, align: 64)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1267, line: 129, size: 1664, align: 64, elements: !1268)
!1267 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1294, !1295, !1324, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1266, file: !1267, line: 136, baseType: !979, size: 32, align: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1266, file: !1267, line: 151, baseType: !979, size: 32, align: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1266, file: !1267, line: 157, baseType: !979, size: 32, align: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1266, file: !1267, line: 159, baseType: !981, size: 64, align: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1266, file: !1267, line: 161, baseType: !1274, size: 64, align: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64, align: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1267, line: 117, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1267, line: 100, size: 832, align: 64, elements: !1277)
!1277 = !{!1278, !1285, !1286, !1287, !1288, !1289, !1291, !1292, !1293}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1276, file: !1267, line: 105, baseType: !1279, size: 256, align: 64)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1280, size: 256, align: 64, elements: !1283)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64, align: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1035, line: 238, baseType: !1282)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1035, line: 238, flags: DIFlagFwdDecl)
!1283 = !{!1284}
!1284 = !DISubrange(count: 4)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1276, file: !1267, line: 110, baseType: !979, size: 32, align: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1276, file: !1267, line: 111, baseType: !979, size: 32, align: 32, offset: 288)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1276, file: !1267, line: 111, baseType: !979, size: 32, align: 32, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1276, file: !1267, line: 112, baseType: !994, size: 256, align: 32, offset: 352)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1276, file: !1267, line: 113, baseType: !1290, size: 128, align: 32, offset: 608)
!1290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 128, align: 32, elements: !1283)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1276, file: !1267, line: 114, baseType: !979, size: 32, align: 32, offset: 736)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1276, file: !1267, line: 115, baseType: !979, size: 32, align: 32, offset: 768)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1276, file: !1267, line: 116, baseType: !979, size: 32, align: 32, offset: 800)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1266, file: !1267, line: 163, baseType: !1019, size: 64, align: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1266, file: !1267, line: 165, baseType: !1296, size: 128, align: 64, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1267, line: 122, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1267, line: 119, size: 128, align: 64, elements: !1298)
!1298 = !{!1299, !1323}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1297, file: !1267, line: 120, baseType: !1300, size: 64, align: 64)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1319, !1320, !1321, !1322}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1302, file: !14, line: 1451, baseType: !1033, size: 64, align: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1302, file: !14, line: 1461, baseType: !1011, size: 64, align: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1302, file: !14, line: 1467, baseType: !1011, size: 64, align: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1302, file: !14, line: 1468, baseType: !987, size: 64, align: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1302, file: !14, line: 1469, baseType: !979, size: 32, align: 32, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1302, file: !14, line: 1470, baseType: !979, size: 32, align: 32, offset: 288)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1302, file: !14, line: 1474, baseType: !979, size: 32, align: 32, offset: 320)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1302, file: !14, line: 1479, baseType: !1312, size: 64, align: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1315)
!1315 = !{!1316, !1317, !1318}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1314, file: !14, line: 1412, baseType: !987, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1314, file: !14, line: 1413, baseType: !979, size: 32, align: 32, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1314, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1302, file: !14, line: 1480, baseType: !979, size: 32, align: 32, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1302, file: !14, line: 1486, baseType: !1011, size: 64, align: 64, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1302, file: !14, line: 1488, baseType: !1011, size: 64, align: 64, offset: 576)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1302, file: !14, line: 1497, baseType: !1011, size: 64, align: 64, offset: 640)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1297, file: !1267, line: 121, baseType: !981, size: 64, align: 64, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1266, file: !1267, line: 166, baseType: !1325, size: 128, align: 64, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1267, line: 127, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1267, line: 124, size: 128, align: 64, elements: !1327)
!1327 = !{!1328, !1401}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1326, file: !1267, line: 125, baseType: !1329, size: 64, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1333)
!1333 = !{!1334, !1335, !1359, !1363, !1364, !1398, !1399, !1400}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1332, file: !14, line: 5751, baseType: !1163, size: 64, align: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1332, file: !14, line: 5756, baseType: !1336, size: 64, align: 64, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1339)
!1339 = !{!1340, !1341, !1344, !1345, !1346, !1350, !1354, !1358}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1338, file: !14, line: 5797, baseType: !1139, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1338, file: !14, line: 5804, baseType: !1342, size: 64, align: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64, align: 64)
!1343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1338, file: !14, line: 5815, baseType: !1163, size: 64, align: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1338, file: !14, line: 5825, baseType: !979, size: 32, align: 32, offset: 192)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1338, file: !14, line: 5826, baseType: !1347, size: 64, align: 64, offset: 256)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64, align: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!979, !1330}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1338, file: !14, line: 5827, baseType: !1351, size: 64, align: 64, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!979, !1330, !1300}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1338, file: !14, line: 5828, baseType: !1355, size: 64, align: 64, offset: 384)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64, align: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{null, !1330}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1338, file: !14, line: 5829, baseType: !1355, size: 64, align: 64, offset: 448)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1332, file: !14, line: 5762, baseType: !1360, size: 64, align: 64, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64, align: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1362)
!1362 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1332, file: !14, line: 5768, baseType: !1019, size: 64, align: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1332, file: !14, line: 5775, baseType: !1365, size: 64, align: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64, align: 64)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1367, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1367, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1367, file: !14, line: 3948, baseType: !1098, size: 32, align: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1367, file: !14, line: 3958, baseType: !987, size: 64, align: 64, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1367, file: !14, line: 3962, baseType: !979, size: 32, align: 32, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1367, file: !14, line: 3968, baseType: !979, size: 32, align: 32, offset: 224)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1367, file: !14, line: 3973, baseType: !1011, size: 64, align: 64, offset: 256)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1367, file: !14, line: 3986, baseType: !979, size: 32, align: 32, offset: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1367, file: !14, line: 3999, baseType: !979, size: 32, align: 32, offset: 352)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1367, file: !14, line: 4004, baseType: !979, size: 32, align: 32, offset: 384)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1367, file: !14, line: 4005, baseType: !979, size: 32, align: 32, offset: 416)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1367, file: !14, line: 4010, baseType: !979, size: 32, align: 32, offset: 448)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1367, file: !14, line: 4011, baseType: !979, size: 32, align: 32, offset: 480)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1367, file: !14, line: 4020, baseType: !1004, size: 64, align: 32, offset: 512)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1367, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1367, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1367, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1367, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1367, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1367, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1367, file: !14, line: 4039, baseType: !979, size: 32, align: 32, offset: 768)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1367, file: !14, line: 4046, baseType: !1022, size: 64, align: 64, offset: 832)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1367, file: !14, line: 4050, baseType: !979, size: 32, align: 32, offset: 896)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1367, file: !14, line: 4054, baseType: !979, size: 32, align: 32, offset: 928)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1367, file: !14, line: 4061, baseType: !979, size: 32, align: 32, offset: 960)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1367, file: !14, line: 4065, baseType: !979, size: 32, align: 32, offset: 992)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1367, file: !14, line: 4073, baseType: !979, size: 32, align: 32, offset: 1024)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1367, file: !14, line: 4080, baseType: !979, size: 32, align: 32, offset: 1056)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1367, file: !14, line: 4084, baseType: !979, size: 32, align: 32, offset: 1088)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1332, file: !14, line: 5781, baseType: !1365, size: 64, align: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1332, file: !14, line: 5787, baseType: !1004, size: 64, align: 32, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1332, file: !14, line: 5793, baseType: !1004, size: 64, align: 32, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1326, file: !1267, line: 126, baseType: !979, size: 32, align: 32, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1266, file: !1267, line: 172, baseType: !1300, size: 64, align: 64, offset: 576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1266, file: !1267, line: 177, baseType: !987, size: 64, align: 64, offset: 640)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1266, file: !1267, line: 178, baseType: !980, size: 32, align: 32, offset: 704)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1266, file: !1267, line: 180, baseType: !1019, size: 64, align: 64, offset: 768)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1266, file: !1267, line: 185, baseType: !979, size: 32, align: 32, offset: 832)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1266, file: !1267, line: 190, baseType: !1019, size: 64, align: 64, offset: 896)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1266, file: !1267, line: 195, baseType: !979, size: 32, align: 32, offset: 960)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1266, file: !1267, line: 200, baseType: !1300, size: 64, align: 64, offset: 1024)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1266, file: !1267, line: 201, baseType: !979, size: 32, align: 32, offset: 1088)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1266, file: !1267, line: 202, baseType: !981, size: 64, align: 64, offset: 1152)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1266, file: !1267, line: 203, baseType: !979, size: 32, align: 32, offset: 1216)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1266, file: !1267, line: 205, baseType: !979, size: 32, align: 32, offset: 1248)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1266, file: !1267, line: 206, baseType: !979, size: 32, align: 32, offset: 1280)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1266, file: !1267, line: 209, baseType: !1086, size: 64, align: 64, offset: 1344)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1266, file: !1267, line: 212, baseType: !1086, size: 64, align: 64, offset: 1408)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1266, file: !1267, line: 213, baseType: !981, size: 64, align: 64, offset: 1472)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1266, file: !1267, line: 215, baseType: !979, size: 32, align: 32, offset: 1536)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1266, file: !1267, line: 217, baseType: !979, size: 32, align: 32, offset: 1568)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1266, file: !1267, line: 220, baseType: !979, size: 32, align: 32, offset: 1600)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1253, file: !14, line: 1598, baseType: !1019, size: 64, align: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1253, file: !14, line: 1606, baseType: !1011, size: 64, align: 64, offset: 448)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1253, file: !14, line: 1614, baseType: !979, size: 32, align: 32, offset: 512)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1253, file: !14, line: 1622, baseType: !979, size: 32, align: 32, offset: 544)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1253, file: !14, line: 1628, baseType: !979, size: 32, align: 32, offset: 576)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1253, file: !14, line: 1636, baseType: !979, size: 32, align: 32, offset: 608)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1253, file: !14, line: 1643, baseType: !979, size: 32, align: 32, offset: 640)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1253, file: !14, line: 1657, baseType: !987, size: 64, align: 64, offset: 704)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1253, file: !14, line: 1658, baseType: !979, size: 32, align: 32, offset: 768)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1253, file: !14, line: 1679, baseType: !1004, size: 64, align: 32, offset: 800)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1253, file: !14, line: 1688, baseType: !979, size: 32, align: 32, offset: 864)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1253, file: !14, line: 1712, baseType: !979, size: 32, align: 32, offset: 896)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1253, file: !14, line: 1729, baseType: !979, size: 32, align: 32, offset: 928)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1253, file: !14, line: 1729, baseType: !979, size: 32, align: 32, offset: 960)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1253, file: !14, line: 1744, baseType: !979, size: 32, align: 32, offset: 992)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1253, file: !14, line: 1744, baseType: !979, size: 32, align: 32, offset: 1024)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1253, file: !14, line: 1751, baseType: !979, size: 32, align: 32, offset: 1056)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1253, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1253, file: !14, line: 1791, baseType: !1440, size: 64, align: 64, offset: 1152)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64, align: 64)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{null, !1443, !1444, !1446, !979, !979, !979}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1253, file: !14, line: 1808, baseType: !1448, size: 64, align: 64, offset: 1216)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!473, !1443, !1150}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1253, file: !14, line: 1816, baseType: !979, size: 32, align: 32, offset: 1280)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1253, file: !14, line: 1825, baseType: !1453, size: 32, align: 32, offset: 1312)
!1453 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1253, file: !14, line: 1830, baseType: !979, size: 32, align: 32, offset: 1344)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1253, file: !14, line: 1838, baseType: !1453, size: 32, align: 32, offset: 1376)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1253, file: !14, line: 1846, baseType: !979, size: 32, align: 32, offset: 1408)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1253, file: !14, line: 1851, baseType: !979, size: 32, align: 32, offset: 1440)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1253, file: !14, line: 1861, baseType: !1453, size: 32, align: 32, offset: 1472)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1253, file: !14, line: 1868, baseType: !1453, size: 32, align: 32, offset: 1504)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1253, file: !14, line: 1875, baseType: !1453, size: 32, align: 32, offset: 1536)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1253, file: !14, line: 1882, baseType: !1453, size: 32, align: 32, offset: 1568)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1253, file: !14, line: 1889, baseType: !1453, size: 32, align: 32, offset: 1600)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1253, file: !14, line: 1896, baseType: !1453, size: 32, align: 32, offset: 1632)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1253, file: !14, line: 1903, baseType: !1453, size: 32, align: 32, offset: 1664)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1253, file: !14, line: 1910, baseType: !979, size: 32, align: 32, offset: 1696)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1253, file: !14, line: 1915, baseType: !979, size: 32, align: 32, offset: 1728)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1253, file: !14, line: 1926, baseType: !1446, size: 64, align: 64, offset: 1792)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1253, file: !14, line: 1935, baseType: !1004, size: 64, align: 32, offset: 1856)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1253, file: !14, line: 1942, baseType: !979, size: 32, align: 32, offset: 1920)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1253, file: !14, line: 1948, baseType: !979, size: 32, align: 32, offset: 1952)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1253, file: !14, line: 1954, baseType: !979, size: 32, align: 32, offset: 1984)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1253, file: !14, line: 1960, baseType: !979, size: 32, align: 32, offset: 2016)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1253, file: !14, line: 1984, baseType: !979, size: 32, align: 32, offset: 2048)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1253, file: !14, line: 1991, baseType: !979, size: 32, align: 32, offset: 2080)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1253, file: !14, line: 1996, baseType: !979, size: 32, align: 32, offset: 2112)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1253, file: !14, line: 2004, baseType: !979, size: 32, align: 32, offset: 2144)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1253, file: !14, line: 2011, baseType: !979, size: 32, align: 32, offset: 2176)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1253, file: !14, line: 2018, baseType: !979, size: 32, align: 32, offset: 2208)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1253, file: !14, line: 2027, baseType: !979, size: 32, align: 32, offset: 2240)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1253, file: !14, line: 2034, baseType: !979, size: 32, align: 32, offset: 2272)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1253, file: !14, line: 2044, baseType: !979, size: 32, align: 32, offset: 2304)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1253, file: !14, line: 2054, baseType: !1483, size: 64, align: 64, offset: 2368)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1253, file: !14, line: 2061, baseType: !1483, size: 64, align: 64, offset: 2432)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1253, file: !14, line: 2066, baseType: !979, size: 32, align: 32, offset: 2496)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1253, file: !14, line: 2070, baseType: !979, size: 32, align: 32, offset: 2528)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1253, file: !14, line: 2078, baseType: !979, size: 32, align: 32, offset: 2560)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1253, file: !14, line: 2085, baseType: !979, size: 32, align: 32, offset: 2592)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1253, file: !14, line: 2092, baseType: !979, size: 32, align: 32, offset: 2624)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1253, file: !14, line: 2099, baseType: !979, size: 32, align: 32, offset: 2656)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1253, file: !14, line: 2106, baseType: !979, size: 32, align: 32, offset: 2688)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1253, file: !14, line: 2113, baseType: !979, size: 32, align: 32, offset: 2720)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1253, file: !14, line: 2120, baseType: !979, size: 32, align: 32, offset: 2752)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1253, file: !14, line: 2125, baseType: !979, size: 32, align: 32, offset: 2784)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1253, file: !14, line: 2133, baseType: !979, size: 32, align: 32, offset: 2816)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1253, file: !14, line: 2140, baseType: !979, size: 32, align: 32, offset: 2848)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1253, file: !14, line: 2145, baseType: !979, size: 32, align: 32, offset: 2880)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1253, file: !14, line: 2153, baseType: !979, size: 32, align: 32, offset: 2912)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1253, file: !14, line: 2158, baseType: !979, size: 32, align: 32, offset: 2944)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1253, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1253, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1253, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1253, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1253, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1253, file: !14, line: 2203, baseType: !979, size: 32, align: 32, offset: 3136)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1253, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1253, file: !14, line: 2212, baseType: !979, size: 32, align: 32, offset: 3200)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1253, file: !14, line: 2213, baseType: !979, size: 32, align: 32, offset: 3232)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1253, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1253, file: !14, line: 2232, baseType: !979, size: 32, align: 32, offset: 3296)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1253, file: !14, line: 2243, baseType: !979, size: 32, align: 32, offset: 3328)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1253, file: !14, line: 2249, baseType: !979, size: 32, align: 32, offset: 3360)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1253, file: !14, line: 2256, baseType: !979, size: 32, align: 32, offset: 3392)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1253, file: !14, line: 2263, baseType: !1022, size: 64, align: 64, offset: 3456)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1253, file: !14, line: 2270, baseType: !1022, size: 64, align: 64, offset: 3520)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1253, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1253, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1253, file: !14, line: 2367, baseType: !1519, size: 64, align: 64, offset: 3648)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64, align: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!979, !1443, !981, !979}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1253, file: !14, line: 2383, baseType: !979, size: 32, align: 32, offset: 3712)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1253, file: !14, line: 2386, baseType: !1453, size: 32, align: 32, offset: 3744)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1253, file: !14, line: 2387, baseType: !1453, size: 32, align: 32, offset: 3776)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1253, file: !14, line: 2394, baseType: !979, size: 32, align: 32, offset: 3808)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1253, file: !14, line: 2401, baseType: !979, size: 32, align: 32, offset: 3840)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1253, file: !14, line: 2408, baseType: !979, size: 32, align: 32, offset: 3872)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1253, file: !14, line: 2415, baseType: !979, size: 32, align: 32, offset: 3904)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1253, file: !14, line: 2422, baseType: !979, size: 32, align: 32, offset: 3936)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1253, file: !14, line: 2423, baseType: !1531, size: 64, align: 64, offset: 3968)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1533, file: !14, line: 827, baseType: !979, size: 32, align: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1533, file: !14, line: 828, baseType: !979, size: 32, align: 32, offset: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1533, file: !14, line: 829, baseType: !979, size: 32, align: 32, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1533, file: !14, line: 830, baseType: !1453, size: 32, align: 32, offset: 96)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1253, file: !14, line: 2430, baseType: !1011, size: 64, align: 64, offset: 4032)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1253, file: !14, line: 2437, baseType: !1011, size: 64, align: 64, offset: 4096)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1253, file: !14, line: 2444, baseType: !1453, size: 32, align: 32, offset: 4160)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1253, file: !14, line: 2451, baseType: !1453, size: 32, align: 32, offset: 4192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1253, file: !14, line: 2458, baseType: !979, size: 32, align: 32, offset: 4224)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1253, file: !14, line: 2469, baseType: !979, size: 32, align: 32, offset: 4256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1253, file: !14, line: 2475, baseType: !979, size: 32, align: 32, offset: 4288)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1253, file: !14, line: 2481, baseType: !979, size: 32, align: 32, offset: 4320)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1253, file: !14, line: 2485, baseType: !979, size: 32, align: 32, offset: 4352)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1253, file: !14, line: 2489, baseType: !979, size: 32, align: 32, offset: 4384)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1253, file: !14, line: 2493, baseType: !979, size: 32, align: 32, offset: 4416)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1253, file: !14, line: 2501, baseType: !979, size: 32, align: 32, offset: 4448)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1253, file: !14, line: 2506, baseType: !979, size: 32, align: 32, offset: 4480)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1253, file: !14, line: 2510, baseType: !979, size: 32, align: 32, offset: 4512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1253, file: !14, line: 2514, baseType: !1011, size: 64, align: 64, offset: 4544)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1253, file: !14, line: 2528, baseType: !1555, size: 64, align: 64, offset: 4608)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64, align: 64)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1443, !1019, !979, !979}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1253, file: !14, line: 2534, baseType: !979, size: 32, align: 32, offset: 4672)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1253, file: !14, line: 2545, baseType: !979, size: 32, align: 32, offset: 4704)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1253, file: !14, line: 2547, baseType: !979, size: 32, align: 32, offset: 4736)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1253, file: !14, line: 2549, baseType: !979, size: 32, align: 32, offset: 4768)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1253, file: !14, line: 2551, baseType: !979, size: 32, align: 32, offset: 4800)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1253, file: !14, line: 2553, baseType: !979, size: 32, align: 32, offset: 4832)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1253, file: !14, line: 2555, baseType: !979, size: 32, align: 32, offset: 4864)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1253, file: !14, line: 2557, baseType: !979, size: 32, align: 32, offset: 4896)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1253, file: !14, line: 2559, baseType: !979, size: 32, align: 32, offset: 4928)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1253, file: !14, line: 2563, baseType: !979, size: 32, align: 32, offset: 4960)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1253, file: !14, line: 2571, baseType: !1569, size: 64, align: 64, offset: 4992)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1253, file: !14, line: 2579, baseType: !1569, size: 64, align: 64, offset: 5056)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1253, file: !14, line: 2586, baseType: !979, size: 32, align: 32, offset: 5120)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1253, file: !14, line: 2615, baseType: !979, size: 32, align: 32, offset: 5152)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1253, file: !14, line: 2627, baseType: !979, size: 32, align: 32, offset: 5184)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1253, file: !14, line: 2637, baseType: !979, size: 32, align: 32, offset: 5216)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1253, file: !14, line: 2681, baseType: !979, size: 32, align: 32, offset: 5248)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1253, file: !14, line: 2709, baseType: !1011, size: 64, align: 64, offset: 5312)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1253, file: !14, line: 2716, baseType: !1578, size: 64, align: 64, offset: 5376)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1591, !1595, !1599, !1600, !1601, !1602, !2489, !2490, !2491, !2492, !2493}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1580, file: !14, line: 3642, baseType: !1139, size: 64, align: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1580, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1580, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1580, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1580, file: !14, line: 3669, baseType: !979, size: 32, align: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1580, file: !14, line: 3682, baseType: !1588, size: 64, align: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!979, !1251, !981}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1580, file: !14, line: 3698, baseType: !1592, size: 64, align: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!979, !1251, !1119, !1098}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1580, file: !14, line: 3712, baseType: !1596, size: 64, align: 64, offset: 320)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!979, !1251, !979, !1119, !1098}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1580, file: !14, line: 3726, baseType: !1592, size: 64, align: 64, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1580, file: !14, line: 3737, baseType: !1248, size: 64, align: 64, offset: 448)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1580, file: !14, line: 3746, baseType: !979, size: 32, align: 32, offset: 512)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1580, file: !14, line: 3757, baseType: !1603, size: 64, align: 64, offset: 576)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{null, !1606}
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !1608, line: 81, size: 86208, align: 64, elements: !1609)
!1608 = !DIFile(filename: "./libavcodec/mpegvideo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1609 = !{!1610, !1612, !1613, !1614, !1615, !1619, !1620, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1667, !1668, !1720, !1722, !1723, !1724, !1725, !1726, !1737, !1738, !1739, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1755, !1756, !1758, !1759, !1760, !1761, !1762, !1763, !1768, !1770, !1771, !1772, !1773, !1774, !1775, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1802, !1803, !1804, !1805, !1821, !1828, !1840, !1856, !1878, !1918, !1931, !1958, !1973, !1987, !2000, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2021, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2034, !2036, !2037, !2038, !2039, !2040, !2041, !2044, !2046, !2048, !2049, !2052, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2119, !2120, !2122, !2123, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2145, !2146, !2147, !2150, !2151, !2152, !2153, !2155, !2157, !2158, !2159, !2160, !2161, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2365, !2366, !2367, !2368, !2372, !2373, !2377, !2381, !2384, !2385, !2390, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2405, !2406, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2424, !2425, !2426, !2476, !2477, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1607, file: !1608, line: 82, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale", scope: !1607, file: !1608, line: 84, baseType: !979, size: 32, align: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale", scope: !1607, file: !1608, line: 84, baseType: !979, size: 32, align: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ac_pred", scope: !1607, file: !1608, line: 85, baseType: !979, size: 32, align: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !1607, file: !1608, line: 86, baseType: !1616, size: 384, align: 32, offset: 160)
!1616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 384, align: 32, elements: !1617)
!1617 = !{!1618}
!1618 = !DISubrange(count: 12)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic", scope: !1607, file: !1608, line: 87, baseType: !979, size: 32, align: 32, offset: 544)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scantable", scope: !1607, file: !1608, line: 90, baseType: !1621, size: 1088, align: 64, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !902, line: 35, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !902, line: 31, size: 1088, align: 64, elements: !1623)
!1623 = !{!1624, !1625, !1629}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1622, file: !902, line: 32, baseType: !1119, size: 64, align: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !1622, file: !902, line: 33, baseType: !1626, size: 512, align: 8, offset: 64)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, size: 512, align: 8, elements: !1627)
!1627 = !{!1628}
!1628 = !DISubrange(count: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !1622, file: !902, line: 34, baseType: !1626, size: 512, align: 8, offset: 576)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "intra_scantable", scope: !1607, file: !1608, line: 91, baseType: !1621, size: 1088, align: 64, offset: 1664)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "intra_h_scantable", scope: !1607, file: !1608, line: 92, baseType: !1621, size: 1088, align: 64, offset: 2752)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "intra_v_scantable", scope: !1607, file: !1608, line: 93, baseType: !1621, size: 1088, align: 64, offset: 3840)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1607, file: !1608, line: 98, baseType: !1443, size: 64, align: 64, offset: 4928)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1607, file: !1608, line: 100, baseType: !979, size: 32, align: 32, offset: 4992)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1607, file: !1608, line: 100, baseType: !979, size: 32, align: 32, offset: 5024)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1607, file: !1608, line: 101, baseType: !979, size: 32, align: 32, offset: 5056)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !1607, file: !1608, line: 102, baseType: !979, size: 32, align: 32, offset: 5088)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1607, file: !1608, line: 103, baseType: !1011, size: 64, align: 64, offset: 5120)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "out_format", scope: !1607, file: !1608, line: 104, baseType: !894, size: 32, align: 32, offset: 5184)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "h263_pred", scope: !1607, file: !1608, line: 105, baseType: !979, size: 32, align: 32, offset: 5216)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pb_frame", scope: !1607, file: !1608, line: 106, baseType: !979, size: 32, align: 32, offset: 5248)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "h263_plus", scope: !1607, file: !1608, line: 109, baseType: !979, size: 32, align: 32, offset: 5280)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "h263_flv", scope: !1607, file: !1608, line: 110, baseType: !979, size: 32, align: 32, offset: 5312)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1607, file: !1608, line: 112, baseType: !13, size: 32, align: 32, offset: 5344)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_qscale", scope: !1607, file: !1608, line: 113, baseType: !979, size: 32, align: 32, offset: 5376)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1607, file: !1608, line: 114, baseType: !979, size: 32, align: 32, offset: 5408)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1607, file: !1608, line: 115, baseType: !979, size: 32, align: 32, offset: 5440)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "luma_elim_threshold", scope: !1607, file: !1608, line: 116, baseType: !979, size: 32, align: 32, offset: 5472)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_elim_threshold", scope: !1607, file: !1608, line: 117, baseType: !979, size: 32, align: 32, offset: 5504)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1607, file: !1608, line: 118, baseType: !979, size: 32, align: 32, offset: 5536)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1607, file: !1608, line: 119, baseType: !979, size: 32, align: 32, offset: 5568)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1607, file: !1608, line: 120, baseType: !979, size: 32, align: 32, offset: 5600)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "context_initialized", scope: !1607, file: !1608, line: 124, baseType: !979, size: 32, align: 32, offset: 5632)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture_number", scope: !1607, file: !1608, line: 125, baseType: !979, size: 32, align: 32, offset: 5664)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1607, file: !1608, line: 126, baseType: !979, size: 32, align: 32, offset: 5696)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !1607, file: !1608, line: 127, baseType: !979, size: 32, align: 32, offset: 5728)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "picture_in_gop_number", scope: !1607, file: !1608, line: 128, baseType: !979, size: 32, align: 32, offset: 5760)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !1607, file: !1608, line: 129, baseType: !979, size: 32, align: 32, offset: 5792)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !1607, file: !1608, line: 129, baseType: !979, size: 32, align: 32, offset: 5824)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !1607, file: !1608, line: 130, baseType: !979, size: 32, align: 32, offset: 5856)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !1607, file: !1608, line: 131, baseType: !979, size: 32, align: 32, offset: 5888)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "h_edge_pos", scope: !1607, file: !1608, line: 132, baseType: !979, size: 32, align: 32, offset: 5920)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "v_edge_pos", scope: !1607, file: !1608, line: 132, baseType: !979, size: 32, align: 32, offset: 5952)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !1607, file: !1608, line: 133, baseType: !979, size: 32, align: 32, offset: 5984)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1607, file: !1608, line: 134, baseType: !1666, size: 64, align: 64, offset: 6016)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1087, line: 149, baseType: !1012)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "uvlinesize", scope: !1607, file: !1608, line: 135, baseType: !1666, size: 64, align: 64, offset: 6080)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1607, file: !1608, line: 136, baseType: !1669, size: 64, align: 64, offset: 6144)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64, align: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "Picture", file: !1671, line: 91, baseType: !1672)
!1671 = !DIFile(filename: "./libavcodec/mpegpicture.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Picture", file: !1671, line: 45, size: 2624, align: 64, elements: !1673)
!1673 = !{!1674, !1676, !1687, !1688, !1689, !1691, !1695, !1696, !1697, !1698, !1699, !1700, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1672, file: !1671, line: 46, baseType: !1675, size: 64, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1672, file: !1671, line: 47, baseType: !1677, size: 256, align: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1678, line: 40, baseType: !1679)
!1678 = !DIFile(filename: "./libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1678, line: 34, size: 256, align: 64, elements: !1680)
!1680 = !{!1681, !1682, !1686}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1679, file: !1678, line: 35, baseType: !981, size: 64, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1679, file: !1678, line: 36, baseType: !1683, size: 128, align: 64, offset: 64)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1251, size: 128, align: 64, elements: !1684)
!1684 = !{!1685}
!1685 = !DISubrange(count: 2)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1679, file: !1678, line: 39, baseType: !1033, size: 64, align: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table_buf", scope: !1672, file: !1671, line: 49, baseType: !1033, size: 64, align: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1672, file: !1671, line: 50, baseType: !1077, size: 64, align: 64, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !1672, file: !1671, line: 52, baseType: !1690, size: 128, align: 64, offset: 448)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 128, align: 64, elements: !1684)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1672, file: !1671, line: 53, baseType: !1692, size: 128, align: 64, offset: 576)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 128, align: 64, elements: !1684)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 32, align: 16, elements: !1684)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !1672, file: !1671, line: 55, baseType: !1033, size: 64, align: 64, offset: 704)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1672, file: !1671, line: 56, baseType: !1130, size: 64, align: 64, offset: 768)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table_buf", scope: !1672, file: !1671, line: 58, baseType: !1033, size: 64, align: 64, offset: 832)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1672, file: !1671, line: 59, baseType: !987, size: 64, align: 64, offset: 896)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !1672, file: !1671, line: 61, baseType: !1690, size: 128, align: 64, offset: 960)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !1672, file: !1671, line: 62, baseType: !1701, size: 128, align: 64, offset: 1088)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 128, align: 64, elements: !1684)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_buf", scope: !1672, file: !1671, line: 64, baseType: !1033, size: 64, align: 64, offset: 1216)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var", scope: !1672, file: !1671, line: 65, baseType: !1483, size: 64, align: 64, offset: 1280)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_buf", scope: !1672, file: !1671, line: 67, baseType: !1033, size: 64, align: 64, offset: 1344)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var", scope: !1672, file: !1671, line: 68, baseType: !1483, size: 64, align: 64, offset: 1408)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_width", scope: !1672, file: !1671, line: 70, baseType: !979, size: 32, align: 32, offset: 1472)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_height", scope: !1672, file: !1671, line: 71, baseType: !979, size: 32, align: 32, offset: 1504)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean_buf", scope: !1672, file: !1671, line: 73, baseType: !1033, size: 64, align: 64, offset: 1536)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean", scope: !1672, file: !1671, line: 74, baseType: !987, size: 64, align: 64, offset: 1600)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !1672, file: !1671, line: 76, baseType: !1033, size: 64, align: 64, offset: 1664)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !1672, file: !1671, line: 77, baseType: !1019, size: 64, align: 64, offset: 1728)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !1672, file: !1671, line: 79, baseType: !979, size: 32, align: 32, offset: 1792)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !1672, file: !1671, line: 81, baseType: !1011, size: 64, align: 64, offset: 1856)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !1672, file: !1671, line: 82, baseType: !1011, size: 64, align: 64, offset: 1920)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_score", scope: !1672, file: !1671, line: 84, baseType: !979, size: 32, align: 32, offset: 1984)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "needs_realloc", scope: !1672, file: !1671, line: 85, baseType: !979, size: 32, align: 32, offset: 2016)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1672, file: !1671, line: 87, baseType: !979, size: 32, align: 32, offset: 2048)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1672, file: !1671, line: 88, baseType: !979, size: 32, align: 32, offset: 2080)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_error", scope: !1672, file: !1671, line: 90, baseType: !1021, size: 512, align: 64, offset: 2112)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture", scope: !1607, file: !1608, line: 137, baseType: !1721, size: 64, align: 64, offset: 6208)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64, align: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_input_picture", scope: !1607, file: !1608, line: 138, baseType: !1721, size: 64, align: 64, offset: 6272)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "user_specified_pts", scope: !1607, file: !1608, line: 140, baseType: !1011, size: 64, align: 64, offset: 6336)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "dts_delta", scope: !1607, file: !1608, line: 144, baseType: !1011, size: 64, align: 64, offset: 6400)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_pts", scope: !1607, file: !1608, line: 148, baseType: !1011, size: 64, align: 64, offset: 6464)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1607, file: !1608, line: 151, baseType: !1727, size: 320, align: 64, offset: 6528)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1728, line: 40, baseType: !1729)
!1728 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1728, line: 35, size: 320, align: 64, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1729, file: !1728, line: 36, baseType: !1098, size: 32, align: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1729, file: !1728, line: 37, baseType: !979, size: 32, align: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1729, file: !1728, line: 38, baseType: !987, size: 64, align: 64, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1729, file: !1728, line: 38, baseType: !987, size: 64, align: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1729, file: !1728, line: 38, baseType: !987, size: 64, align: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1729, file: !1728, line: 39, baseType: !979, size: 32, align: 32, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "start_mb_y", scope: !1607, file: !1608, line: 153, baseType: !979, size: 32, align: 32, offset: 6848)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "end_mb_y", scope: !1607, file: !1608, line: 154, baseType: !979, size: 32, align: 32, offset: 6880)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "thread_context", scope: !1607, file: !1608, line: 155, baseType: !1740, size: 2048, align: 64, offset: 6912)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 2048, align: 64, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "slice_context_count", scope: !1607, file: !1608, line: 156, baseType: !979, size: 32, align: 32, offset: 8960)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture", scope: !1607, file: !1608, line: 162, baseType: !1670, size: 2624, align: 64, offset: 9024)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture", scope: !1607, file: !1608, line: 168, baseType: !1670, size: 2624, align: 64, offset: 11648)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "new_picture", scope: !1607, file: !1608, line: 174, baseType: !1670, size: 2624, align: 64, offset: 14272)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture", scope: !1607, file: !1608, line: 180, baseType: !1670, size: 2624, align: 64, offset: 16896)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_ptr", scope: !1607, file: !1608, line: 182, baseType: !1669, size: 64, align: 64, offset: 19520)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture_ptr", scope: !1607, file: !1608, line: 183, baseType: !1669, size: 64, align: 64, offset: 19584)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture_ptr", scope: !1607, file: !1608, line: 184, baseType: !1669, size: 64, align: 64, offset: 19648)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "last_dc", scope: !1607, file: !1608, line: 185, baseType: !1752, size: 96, align: 32, offset: 19712)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 96, align: 32, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 3)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val_base", scope: !1607, file: !1608, line: 186, baseType: !1106, size: 64, align: 64, offset: 19840)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !1607, file: !1608, line: 187, baseType: !1757, size: 192, align: 64, offset: 19904)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1106, size: 192, align: 64, elements: !1753)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale_table", scope: !1607, file: !1608, line: 188, baseType: !1119, size: 64, align: 64, offset: 20096)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale_table", scope: !1607, file: !1608, line: 189, baseType: !1119, size: 64, align: 64, offset: 20160)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale_table", scope: !1607, file: !1608, line: 190, baseType: !1119, size: 64, align: 64, offset: 20224)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block_base", scope: !1607, file: !1608, line: 191, baseType: !987, size: 64, align: 64, offset: 20288)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block", scope: !1607, file: !1608, line: 192, baseType: !987, size: 64, align: 64, offset: 20352)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val_base", scope: !1607, file: !1608, line: 193, baseType: !1764, size: 64, align: 64, offset: 20416)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64, align: 64)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 256, align: 16, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 16)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val", scope: !1607, file: !1608, line: 194, baseType: !1769, size: 192, align: 64, offset: 20480)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1764, size: 192, align: 64, elements: !1753)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skipped", scope: !1607, file: !1608, line: 195, baseType: !979, size: 32, align: 32, offset: 20672)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1607, file: !1608, line: 196, baseType: !987, size: 64, align: 64, offset: 20736)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !1607, file: !1608, line: 198, baseType: !987, size: 64, align: 64, offset: 20800)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cbp_table", scope: !1607, file: !1608, line: 199, baseType: !987, size: 64, align: 64, offset: 20864)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pred_dir_table", scope: !1607, file: !1608, line: 200, baseType: !987, size: 64, align: 64, offset: 20928)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !1607, file: !1608, line: 202, baseType: !1776, size: 256, align: 64, offset: 20992)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScratchpadContext", file: !1671, line: 40, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScratchpadContext", file: !1671, line: 35, size: 256, align: 64, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1777, file: !1671, line: 36, baseType: !987, size: 64, align: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rd_scratchpad", scope: !1777, file: !1671, line: 37, baseType: !987, size: 64, align: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "obmc_scratchpad", scope: !1777, file: !1671, line: 38, baseType: !987, size: 64, align: 64, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "b_scratchpad", scope: !1777, file: !1671, line: 39, baseType: !987, size: 64, align: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1607, file: !1608, line: 204, baseType: !979, size: 32, align: 32, offset: 21248)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale", scope: !1607, file: !1608, line: 205, baseType: !979, size: 32, align: 32, offset: 21280)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !1607, file: !1608, line: 206, baseType: !980, size: 32, align: 32, offset: 21312)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lambda2", scope: !1607, file: !1608, line: 207, baseType: !980, size: 32, align: 32, offset: 21344)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_table", scope: !1607, file: !1608, line: 208, baseType: !1446, size: 64, align: 64, offset: 21376)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_quant", scope: !1607, file: !1608, line: 209, baseType: !979, size: 32, align: 32, offset: 21440)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !1607, file: !1608, line: 210, baseType: !979, size: 32, align: 32, offset: 21472)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "closed_gop", scope: !1607, file: !1608, line: 211, baseType: !979, size: 32, align: 32, offset: 21504)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1607, file: !1608, line: 212, baseType: !979, size: 32, align: 32, offset: 21536)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1607, file: !1608, line: 213, baseType: !979, size: 32, align: 32, offset: 21568)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "last_pict_type", scope: !1607, file: !1608, line: 214, baseType: !979, size: 32, align: 32, offset: 21600)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !1607, file: !1608, line: 215, baseType: !979, size: 32, align: 32, offset: 21632)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "droppable", scope: !1607, file: !1608, line: 216, baseType: !979, size: 32, align: 32, offset: 21664)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate_index", scope: !1607, file: !1608, line: 217, baseType: !979, size: 32, align: 32, offset: 21696)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg2_frame_rate_ext", scope: !1607, file: !1608, line: 218, baseType: !1004, size: 64, align: 32, offset: 21728)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "last_lambda_for", scope: !1607, file: !1608, line: 219, baseType: !1799, size: 160, align: 32, offset: 21792)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 160, align: 32, elements: !1800)
!1800 = !{!1801}
!1801 = !DISubrange(count: 5)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "skipdct", scope: !1607, file: !1608, line: 220, baseType: !979, size: 32, align: 32, offset: 21952)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "unrestricted_mv", scope: !1607, file: !1608, line: 223, baseType: !979, size: 32, align: 32, offset: 21984)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "h263_long_vectors", scope: !1607, file: !1608, line: 224, baseType: !979, size: 32, align: 32, offset: 22016)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1607, file: !1608, line: 226, baseType: !1806, size: 256, align: 64, offset: 22080)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1807, line: 40, baseType: !1808)
!1807 = !DIFile(filename: "./libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1807, line: 35, size: 256, align: 64, elements: !1809)
!1809 = !{!1810, !1814, !1815}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1808, file: !1807, line: 36, baseType: !1811, size: 64, align: 64)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64, align: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{null, !1106}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1808, file: !1807, line: 37, baseType: !1811, size: 64, align: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1808, file: !1807, line: 39, baseType: !1816, size: 128, align: 64, offset: 128)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1817, size: 128, align: 64, elements: !1684)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1807, line: 32, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64, align: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null, !987, !988, !1666, !979}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1607, file: !1608, line: 227, baseType: !1822, size: 128, align: 64, offset: 22336)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "FDCTDSPContext", file: !1823, line: 29, baseType: !1824)
!1823 = !DIFile(filename: "./libavcodec/fdctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FDCTDSPContext", file: !1823, line: 26, size: 128, align: 64, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "fdct", scope: !1824, file: !1823, line: 27, baseType: !1811, size: 64, align: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "fdct248", scope: !1824, file: !1823, line: 28, baseType: !1811, size: 64, align: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "h264chroma", scope: !1607, file: !1608, line: 228, baseType: !1829, size: 512, align: 64, offset: 22464)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264ChromaContext", file: !1830, line: 30, baseType: !1831)
!1830 = !DIFile(filename: "./libavcodec/h264chroma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264ChromaContext", file: !1830, line: 27, size: 512, align: 64, elements: !1832)
!1832 = !{!1833, !1839}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "put_h264_chroma_pixels_tab", scope: !1831, file: !1830, line: 28, baseType: !1834, size: 256, align: 64)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 256, align: 64, elements: !1283)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_chroma_mc_func", file: !1830, line: 25, baseType: !1836)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64, align: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{null, !987, !987, !1666, !979, !979, !979}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "avg_h264_chroma_pixels_tab", scope: !1831, file: !1830, line: 29, baseType: !1834, size: 256, align: 64, offset: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1607, file: !1608, line: 229, baseType: !1841, size: 3328, align: 64, offset: 22976)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1842, line: 95, baseType: !1843)
!1842 = !DIFile(filename: "./libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1842, line: 45, size: 3328, align: 64, elements: !1844)
!1844 = !{!1845, !1852, !1853, !1854}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1843, file: !1842, line: 56, baseType: !1846, size: 1024, align: 64)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 1024, align: 64, elements: !1851)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1842, line: 38, baseType: !1848)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64, align: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !987, !1119, !1666, !979}
!1851 = !{!1284, !1284}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1843, file: !1842, line: 68, baseType: !1846, size: 1024, align: 64, offset: 1024)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1843, file: !1842, line: 82, baseType: !1846, size: 1024, align: 64, offset: 2048)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1843, file: !1842, line: 94, baseType: !1855, size: 256, align: 64, offset: 3072)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 256, align: 64, elements: !1283)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !1607, file: !1608, line: 230, baseType: !1857, size: 960, align: 64, offset: 26304)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !902, line: 100, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !902, line: 53, size: 960, align: 64, elements: !1859)
!1859 = !{!1860, !1867, !1868, !1869, !1870, !1874, !1875, !1876, !1877}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !1858, file: !902, line: 55, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64, align: 64)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !1864, !1866, !1666}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1866 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !987)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !1858, file: !902, line: 58, baseType: !1861, size: 64, align: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !1858, file: !902, line: 61, baseType: !1861, size: 64, align: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !1858, file: !902, line: 65, baseType: !1811, size: 64, align: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1858, file: !902, line: 72, baseType: !1871, size: 64, align: 64, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64, align: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !987, !1666, !1106}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1858, file: !902, line: 79, baseType: !1871, size: 64, align: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1858, file: !902, line: 96, baseType: !1626, size: 512, align: 8, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !1858, file: !902, line: 97, baseType: !901, size: 32, align: 32, offset: 896)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !1858, file: !902, line: 99, baseType: !979, size: 32, align: 32, offset: 928)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !1607, file: !1608, line: 231, baseType: !1879, size: 8640, align: 64, offset: 27264)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "MECmpContext", file: !1880, line: 80, baseType: !1881)
!1880 = !DIFile(filename: "./libavcodec/me_cmp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MECmpContext", file: !1880, line: 53, size: 8640, align: 64, elements: !1882)
!1882 = !{!1883, !1887, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1917}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sum_abs_dctelem", scope: !1881, file: !1880, line: 54, baseType: !1884, size: 64, align: 64)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!979, !1106}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !1881, file: !1880, line: 56, baseType: !1888, size: 384, align: 64, offset: 64)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1889, size: 384, align: 64, elements: !1893)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "me_cmp_func", file: !1880, line: 48, baseType: !1890)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64, align: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!979, !1606, !987, !987, !1666, !979}
!1893 = !{!1894}
!1894 = !DISubrange(count: 6)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "sse", scope: !1881, file: !1880, line: 57, baseType: !1888, size: 384, align: 64, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard8_diff", scope: !1881, file: !1880, line: 58, baseType: !1888, size: 384, align: 64, offset: 832)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dct_sad", scope: !1881, file: !1880, line: 59, baseType: !1888, size: 384, align: 64, offset: 1216)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "quant_psnr", scope: !1881, file: !1880, line: 60, baseType: !1888, size: 384, align: 64, offset: 1600)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1881, file: !1880, line: 61, baseType: !1888, size: 384, align: 64, offset: 1984)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1881, file: !1880, line: 62, baseType: !1888, size: 384, align: 64, offset: 2368)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "vsad", scope: !1881, file: !1880, line: 63, baseType: !1888, size: 384, align: 64, offset: 2752)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "vsse", scope: !1881, file: !1880, line: 64, baseType: !1888, size: 384, align: 64, offset: 3136)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "nsse", scope: !1881, file: !1880, line: 65, baseType: !1888, size: 384, align: 64, offset: 3520)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "w53", scope: !1881, file: !1880, line: 66, baseType: !1888, size: 384, align: 64, offset: 3904)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w97", scope: !1881, file: !1880, line: 67, baseType: !1888, size: 384, align: 64, offset: 4288)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "dct_max", scope: !1881, file: !1880, line: 68, baseType: !1888, size: 384, align: 64, offset: 4672)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "dct264_sad", scope: !1881, file: !1880, line: 69, baseType: !1888, size: 384, align: 64, offset: 5056)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1881, file: !1880, line: 71, baseType: !1888, size: 384, align: 64, offset: 5440)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1881, file: !1880, line: 72, baseType: !1888, size: 384, align: 64, offset: 5824)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1881, file: !1880, line: 73, baseType: !1888, size: 384, align: 64, offset: 6208)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1881, file: !1880, line: 74, baseType: !1888, size: 384, align: 64, offset: 6592)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1881, file: !1880, line: 75, baseType: !1888, size: 384, align: 64, offset: 6976)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1881, file: !1880, line: 76, baseType: !1888, size: 384, align: 64, offset: 7360)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pix_abs", scope: !1881, file: !1880, line: 78, baseType: !1915, size: 512, align: 64, offset: 7744)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1889, size: 512, align: 64, elements: !1916)
!1916 = !{!1685, !1284}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "median_sad", scope: !1881, file: !1880, line: 79, baseType: !1888, size: 384, align: 64, offset: 8256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "mdsp", scope: !1607, file: !1608, line: 232, baseType: !1919, size: 128, align: 64, offset: 35904)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegVideoDSPContext", file: !1920, line: 41, baseType: !1921)
!1920 = !DIFile(filename: "./libavcodec/mpegvideodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegVideoDSPContext", file: !1920, line: 28, size: 128, align: 64, elements: !1922)
!1922 = !{!1923, !1927}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "gmc1", scope: !1921, file: !1920, line: 32, baseType: !1924, size: 64, align: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64, align: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null, !987, !987, !979, !979, !979, !979, !979}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gmc", scope: !1921, file: !1920, line: 37, baseType: !1928, size: 64, align: 64, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64, align: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{null, !987, !987, !979, !979, !979, !979, !979, !979, !979, !979, !979, !979, !979, !979}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "mpvencdsp", scope: !1607, file: !1608, line: 233, baseType: !1932, size: 576, align: 64, offset: 36032)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegvideoEncDSPContext", file: !1933, line: 45, baseType: !1934)
!1933 = !DIFile(filename: "./libavcodec/mpegvideoencdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegvideoEncDSPContext", file: !1933, line: 32, size: 576, align: 64, elements: !1935)
!1935 = !{!1936, !1940, !1944, !1948, !1949, !1954}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "try_8x8basis", scope: !1934, file: !1933, line: 33, baseType: !1937, size: 64, align: 64)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64, align: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!979, !1106, !1106, !1106, !979}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "add_8x8basis", scope: !1934, file: !1933, line: 35, baseType: !1941, size: 64, align: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64, align: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !1106, !1106, !979}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pix_sum", scope: !1934, file: !1933, line: 37, baseType: !1945, size: 64, align: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64, align: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!979, !987, !979}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "pix_norm1", scope: !1934, file: !1933, line: 38, baseType: !1945, size: 64, align: 64, offset: 192)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "shrink", scope: !1934, file: !1933, line: 40, baseType: !1950, size: 256, align: 64, offset: 256)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 256, align: 64, elements: !1283)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64, align: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !987, !979, !1119, !979, !979, !979}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "draw_edges", scope: !1934, file: !1933, line: 43, baseType: !1955, size: 64, align: 64, offset: 512)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64, align: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !987, !979, !979, !979, !979, !979, !979}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pdsp", scope: !1607, file: !1608, line: 234, baseType: !1959, size: 192, align: 64, offset: 36608)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixblockDSPContext", file: !1960, line: 41, baseType: !1961)
!1960 = !DIFile(filename: "./libavcodec/pixblockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixblockDSPContext", file: !1960, line: 28, size: 192, align: 64, elements: !1962)
!1962 = !{!1963, !1968, !1972}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "get_pixels", scope: !1961, file: !1960, line: 29, baseType: !1964, size: 64, align: 64)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{null, !1967, !1119, !1666}
!1967 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1106)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels", scope: !1961, file: !1960, line: 32, baseType: !1969, size: 64, align: 64, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64, align: 64)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !1967, !1119, !1119, !1666}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels_unaligned", scope: !1961, file: !1960, line: 36, baseType: !1969, size: 64, align: 64, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "qdsp", scope: !1607, file: !1608, line: 235, baseType: !1974, size: 6144, align: 64, offset: 36800)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "QpelDSPContext", file: !1975, line: 76, baseType: !1976)
!1975 = !DIFile(filename: "./libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QpelDSPContext", file: !1975, line: 72, size: 6144, align: 64, elements: !1977)
!1977 = !{!1978, !1985, !1986}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "put_qpel_pixels_tab", scope: !1976, file: !1975, line: 73, baseType: !1979, size: 2048, align: 64)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 2048, align: 64, elements: !1984)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !1975, line: 65, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64, align: 64)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !987, !1119, !1666}
!1984 = !{!1685, !1767}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "avg_qpel_pixels_tab", scope: !1976, file: !1975, line: 74, baseType: !1979, size: 2048, align: 64, offset: 2048)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_qpel_pixels_tab", scope: !1976, file: !1975, line: 75, baseType: !1979, size: 2048, align: 64, offset: 4096)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1607, file: !1608, line: 236, baseType: !1988, size: 128, align: 64, offset: 42944)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !1989, line: 77, baseType: !1990)
!1989 = !DIFile(filename: "./libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !1989, line: 41, size: 128, align: 64, elements: !1991)
!1991 = !{!1992, !1996}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !1990, file: !1989, line: 63, baseType: !1993, size: 64, align: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64, align: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{null, !987, !1119, !1666, !1666, !979, !979, !979, !979, !979, !979}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !1990, file: !1989, line: 76, baseType: !1997, size: 64, align: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64, align: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !987, !1666, !979}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "h263dsp", scope: !1607, file: !1608, line: 237, baseType: !2001, size: 128, align: 64, offset: 43072)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "H263DSPContext", file: !2002, line: 29, baseType: !2003)
!2002 = !DIFile(filename: "./libavcodec/h263dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H263DSPContext", file: !2002, line: 26, size: 128, align: 64, elements: !2004)
!2004 = !{!2005, !2009}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "h263_h_loop_filter", scope: !2003, file: !2002, line: 27, baseType: !2006, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !987, !979, !979}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "h263_v_loop_filter", scope: !2003, file: !2002, line: 28, baseType: !2006, size: 64, align: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1607, file: !1608, line: 238, baseType: !979, size: 32, align: 32, offset: 43200)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !1607, file: !1608, line: 239, baseType: !979, size: 32, align: 32, offset: 43232)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table_base", scope: !1607, file: !1608, line: 240, baseType: !1693, size: 64, align: 64, offset: 43264)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table_base", scope: !1607, file: !1608, line: 241, baseType: !1693, size: 64, align: 64, offset: 43328)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table_base", scope: !1607, file: !1608, line: 242, baseType: !1693, size: 64, align: 64, offset: 43392)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table_base", scope: !1607, file: !1608, line: 243, baseType: !1693, size: 64, align: 64, offset: 43456)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table_base", scope: !1607, file: !1608, line: 244, baseType: !1693, size: 64, align: 64, offset: 43520)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table_base", scope: !1607, file: !1608, line: 245, baseType: !1693, size: 64, align: 64, offset: 43584)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table_base", scope: !1607, file: !1608, line: 246, baseType: !2019, size: 256, align: 64, offset: 43648)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 256, align: 64, elements: !2020)
!2020 = !{!1685, !1685}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table_base", scope: !1607, file: !1608, line: 247, baseType: !2022, size: 512, align: 64, offset: 43904)
!2022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 512, align: 64, elements: !2023)
!2023 = !{!1685, !1685, !1685}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table", scope: !1607, file: !1608, line: 248, baseType: !1693, size: 64, align: 64, offset: 44416)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table", scope: !1607, file: !1608, line: 249, baseType: !1693, size: 64, align: 64, offset: 44480)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table", scope: !1607, file: !1608, line: 250, baseType: !1693, size: 64, align: 64, offset: 44544)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table", scope: !1607, file: !1608, line: 251, baseType: !1693, size: 64, align: 64, offset: 44608)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table", scope: !1607, file: !1608, line: 252, baseType: !1693, size: 64, align: 64, offset: 44672)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table", scope: !1607, file: !1608, line: 253, baseType: !1693, size: 64, align: 64, offset: 44736)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table", scope: !1607, file: !1608, line: 254, baseType: !2019, size: 256, align: 64, offset: 44800)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table", scope: !1607, file: !1608, line: 255, baseType: !2022, size: 512, align: 64, offset: 45056)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_select_table", scope: !1607, file: !1608, line: 256, baseType: !2033, size: 128, align: 64, offset: 45568)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 128, align: 64, elements: !1684)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_select_table", scope: !1607, file: !1608, line: 257, baseType: !2035, size: 256, align: 64, offset: 45696)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 256, align: 64, elements: !2020)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "motion_est", scope: !1607, file: !1608, line: 258, baseType: !979, size: 32, align: 32, offset: 45952)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1607, file: !1608, line: 259, baseType: !979, size: 32, align: 32, offset: 45984)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre", scope: !1607, file: !1608, line: 260, baseType: !979, size: 32, align: 32, offset: 46016)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "mv_dir", scope: !1607, file: !1608, line: 261, baseType: !979, size: 32, align: 32, offset: 46048)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type", scope: !1607, file: !1608, line: 265, baseType: !979, size: 32, align: 32, offset: 46080)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !1607, file: !1608, line: 276, baseType: !2042, size: 512, align: 32, offset: 46112)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 512, align: 32, elements: !2043)
!2043 = !{!1685, !1284, !1685}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "field_select", scope: !1607, file: !1608, line: 277, baseType: !2045, size: 128, align: 32, offset: 46624)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 128, align: 32, elements: !2020)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv", scope: !1607, file: !1608, line: 278, baseType: !2047, size: 256, align: 32, offset: 46752)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 256, align: 32, elements: !2023)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fcode_tab", scope: !1607, file: !1608, line: 279, baseType: !987, size: 64, align: 64, offset: 47040)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "direct_scale_mv", scope: !1607, file: !1608, line: 280, baseType: !2050, size: 2048, align: 16, offset: 47104)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 2048, align: 16, elements: !2051)
!2051 = !{!1685, !1628}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1607, file: !1608, line: 282, baseType: !2053, size: 4416, align: 64, offset: 49152)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "MotionEstContext", file: !2054, line: 99, baseType: !2055)
!2054 = !DIFile(filename: "./libavcodec/motion_est.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MotionEstContext", file: !2054, line: 47, size: 4416, align: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2096, !2097, !2100, !2101, !2106, !2107}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2055, file: !2054, line: 48, baseType: !1251, size: 64, align: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2055, file: !2054, line: 49, baseType: !979, size: 32, align: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "co_located_mv", scope: !2055, file: !2054, line: 50, baseType: !2060, size: 256, align: 32, offset: 96)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 256, align: 32, elements: !2061)
!2061 = !{!1284, !1685}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "direct_basis_mv", scope: !2055, file: !2054, line: 51, baseType: !2060, size: 256, align: 32, offset: 352)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !2055, file: !2054, line: 52, baseType: !987, size: 64, align: 64, offset: 640)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "best_mb", scope: !2055, file: !2054, line: 54, baseType: !987, size: 64, align: 64, offset: 704)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "temp_mb", scope: !2055, file: !2054, line: 55, baseType: !2033, size: 128, align: 64, offset: 768)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2055, file: !2054, line: 56, baseType: !987, size: 64, align: 64, offset: 896)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "best_bits", scope: !2055, file: !2054, line: 57, baseType: !979, size: 32, align: 32, offset: 960)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2055, file: !2054, line: 58, baseType: !1130, size: 64, align: 64, offset: 1024)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "score_map", scope: !2055, file: !2054, line: 59, baseType: !1130, size: 64, align: 64, offset: 1088)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "map_generation", scope: !2055, file: !2054, line: 60, baseType: !980, size: 32, align: 32, offset: 1152)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pre_penalty_factor", scope: !2055, file: !2054, line: 61, baseType: !979, size: 32, align: 32, offset: 1184)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "penalty_factor", scope: !2055, file: !2054, line: 62, baseType: !979, size: 32, align: 32, offset: 1216)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "sub_penalty_factor", scope: !2055, file: !2054, line: 67, baseType: !979, size: 32, align: 32, offset: 1248)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mb_penalty_factor", scope: !2055, file: !2054, line: 68, baseType: !979, size: 32, align: 32, offset: 1280)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2055, file: !2054, line: 69, baseType: !979, size: 32, align: 32, offset: 1312)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sub_flags", scope: !2055, file: !2054, line: 70, baseType: !979, size: 32, align: 32, offset: 1344)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mb_flags", scope: !2055, file: !2054, line: 71, baseType: !979, size: 32, align: 32, offset: 1376)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pre_pass", scope: !2055, file: !2054, line: 72, baseType: !979, size: 32, align: 32, offset: 1408)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !2055, file: !2054, line: 73, baseType: !979, size: 32, align: 32, offset: 1440)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2055, file: !2054, line: 74, baseType: !979, size: 32, align: 32, offset: 1472)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2055, file: !2054, line: 75, baseType: !979, size: 32, align: 32, offset: 1504)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2055, file: !2054, line: 76, baseType: !979, size: 32, align: 32, offset: 1536)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2055, file: !2054, line: 77, baseType: !979, size: 32, align: 32, offset: 1568)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pred_x", scope: !2055, file: !2054, line: 78, baseType: !979, size: 32, align: 32, offset: 1600)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "pred_y", scope: !2055, file: !2054, line: 79, baseType: !979, size: 32, align: 32, offset: 1632)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2055, file: !2054, line: 80, baseType: !2087, size: 1024, align: 64, offset: 1664)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, align: 64, elements: !1851)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2055, file: !2054, line: 81, baseType: !2087, size: 1024, align: 64, offset: 2688)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2055, file: !2054, line: 82, baseType: !979, size: 32, align: 32, offset: 3712)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "uvstride", scope: !2055, file: !2054, line: 83, baseType: !979, size: 32, align: 32, offset: 3744)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum_temp", scope: !2055, file: !2054, line: 85, baseType: !1011, size: 64, align: 64, offset: 3776)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum_temp", scope: !2055, file: !2054, line: 86, baseType: !1011, size: 64, align: 64, offset: 3840)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "scene_change_score", scope: !2055, file: !2054, line: 87, baseType: !979, size: 32, align: 32, offset: 3904)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_put", scope: !2055, file: !2054, line: 89, baseType: !2095, size: 64, align: 64, offset: 3968)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_avg", scope: !2055, file: !2054, line: 90, baseType: !2095, size: 64, align: 64, offset: 4032)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_put", scope: !2055, file: !2054, line: 91, baseType: !2098, size: 64, align: 64, offset: 4096)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64, align: 64)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 1024, align: 64, elements: !1766)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_avg", scope: !2055, file: !2054, line: 92, baseType: !2098, size: 64, align: 64, offset: 4160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "mv_penalty", scope: !2055, file: !2054, line: 93, baseType: !2102, size: 64, align: 64, offset: 4224)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64, align: 64)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, size: 131080, align: 8, elements: !2104)
!2104 = !{!2105}
!2105 = !DISubrange(count: 16385)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "current_mv_penalty", scope: !2055, file: !2054, line: 94, baseType: !987, size: 64, align: 64, offset: 4288)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "sub_motion_search", scope: !2055, file: !2054, line: 95, baseType: !2108, size: 64, align: 64, offset: 4352)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64, align: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!979, !1606, !1446, !1446, !979, !979, !979, !979, !979}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "no_rounding", scope: !1607, file: !1608, line: 284, baseType: !979, size: 32, align: 32, offset: 53568)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !1607, file: !1608, line: 288, baseType: !979, size: 32, align: 32, offset: 53600)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !1607, file: !1608, line: 288, baseType: !979, size: 32, align: 32, offset: 53632)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skip_run", scope: !1607, file: !1608, line: 289, baseType: !979, size: 32, align: 32, offset: 53664)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mb_intra", scope: !1607, file: !1608, line: 290, baseType: !979, size: 32, align: 32, offset: 53696)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1607, file: !1608, line: 291, baseType: !1483, size: 64, align: 64, offset: 53760)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "block_index", scope: !1607, file: !1608, line: 293, baseType: !2118, size: 192, align: 32, offset: 53824)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 192, align: 32, elements: !1893)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "block_wrap", scope: !1607, file: !1608, line: 294, baseType: !2118, size: 192, align: 32, offset: 54016)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1607, file: !1608, line: 295, baseType: !2121, size: 192, align: 64, offset: 54208)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 192, align: 64, elements: !1753)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !1607, file: !1608, line: 297, baseType: !1446, size: 64, align: 64, offset: 54400)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1607, file: !1608, line: 300, baseType: !2124, size: 1024, align: 16, offset: 54464)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 1024, align: 16, elements: !1627)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1607, file: !1608, line: 301, baseType: !2124, size: 1024, align: 16, offset: 55488)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1607, file: !1608, line: 302, baseType: !2124, size: 1024, align: 16, offset: 56512)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_inter_matrix", scope: !1607, file: !1608, line: 303, baseType: !2124, size: 1024, align: 16, offset: 57536)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "force_duplicated_matrix", scope: !1607, file: !1608, line: 304, baseType: !979, size: 32, align: 32, offset: 58560)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "intra_quant_bias", scope: !1607, file: !1608, line: 306, baseType: !979, size: 32, align: 32, offset: 58592)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "inter_quant_bias", scope: !1607, file: !1608, line: 307, baseType: !979, size: 32, align: 32, offset: 58624)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "min_qcoeff", scope: !1607, file: !1608, line: 308, baseType: !979, size: 32, align: 32, offset: 58656)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "max_qcoeff", scope: !1607, file: !1608, line: 309, baseType: !979, size: 32, align: 32, offset: 58688)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ac_esc_length", scope: !1607, file: !1608, line: 310, baseType: !979, size: 32, align: 32, offset: 58720)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_length", scope: !1607, file: !1608, line: 311, baseType: !987, size: 64, align: 64, offset: 58752)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_last_length", scope: !1607, file: !1608, line: 312, baseType: !987, size: 64, align: 64, offset: 58816)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_length", scope: !1607, file: !1608, line: 313, baseType: !987, size: 64, align: 64, offset: 58880)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_last_length", scope: !1607, file: !1608, line: 314, baseType: !987, size: 64, align: 64, offset: 58944)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_length", scope: !1607, file: !1608, line: 315, baseType: !987, size: 64, align: 64, offset: 59008)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_last_length", scope: !1607, file: !1608, line: 316, baseType: !987, size: 64, align: 64, offset: 59072)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "luma_dc_vlc_length", scope: !1607, file: !1608, line: 317, baseType: !987, size: 64, align: 64, offset: 59136)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "coded_score", scope: !1607, file: !1608, line: 320, baseType: !1616, size: 384, align: 32, offset: 59200)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix", scope: !1607, file: !1608, line: 323, baseType: !2143, size: 64, align: 64, offset: 59584)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64, align: 64)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 2048, align: 32, elements: !1627)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix", scope: !1607, file: !1608, line: 324, baseType: !2143, size: 64, align: 64, offset: 59648)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix", scope: !1607, file: !1608, line: 325, baseType: !2143, size: 64, align: 64, offset: 59712)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix16", scope: !1607, file: !1608, line: 327, baseType: !2148, size: 64, align: 64, offset: 59776)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64, align: 64)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 2048, align: 16, elements: !2051)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix16", scope: !1607, file: !1608, line: 328, baseType: !2148, size: 64, align: 64, offset: 59840)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix16", scope: !1607, file: !1608, line: 329, baseType: !2148, size: 64, align: 64, offset: 59904)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "dct_error_sum", scope: !1607, file: !1608, line: 332, baseType: !2143, size: 64, align: 64, offset: 59968)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "dct_count", scope: !1607, file: !1608, line: 333, baseType: !2154, size: 64, align: 32, offset: 60032)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 64, align: 32, elements: !1684)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dct_offset", scope: !1607, file: !1608, line: 334, baseType: !2156, size: 64, align: 64, offset: 60096)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64, align: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "total_bits", scope: !1607, file: !1608, line: 337, baseType: !1011, size: 64, align: 64, offset: 60160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1607, file: !1608, line: 338, baseType: !979, size: 32, align: 32, offset: 60224)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "stuffing_bits", scope: !1607, file: !1608, line: 339, baseType: !979, size: 32, align: 32, offset: 60256)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "next_lambda", scope: !1607, file: !1608, line: 340, baseType: !979, size: 32, align: 32, offset: 60288)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "rc_context", scope: !1607, file: !1608, line: 341, baseType: !2162, size: 3584, align: 64, offset: 60352)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlContext", file: !2163, line: 87, baseType: !2164)
!2163 = !DIFile(filename: "./libavcodec/ratecontrol.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlContext", file: !2163, line: 63, size: 3584, align: 64, elements: !2165)
!2165 = !{!2166, !2167, !2188, !2189, !2197, !2198, !2199, !2200, !2201, !2202, !2204, !2205, !2206, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2164, file: !2163, line: 64, baseType: !979, size: 32, align: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2164, file: !2163, line: 65, baseType: !2168, size: 64, align: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64, align: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlEntry", file: !2163, line: 58, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlEntry", file: !2163, line: 41, size: 640, align: 64, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2170, file: !2163, line: 42, baseType: !979, size: 32, align: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2170, file: !2163, line: 43, baseType: !1453, size: 32, align: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !2170, file: !2163, line: 44, baseType: !979, size: 32, align: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !2170, file: !2163, line: 45, baseType: !979, size: 32, align: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !2170, file: !2163, line: 46, baseType: !979, size: 32, align: 32, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !2170, file: !2163, line: 47, baseType: !979, size: 32, align: 32, offset: 160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !2170, file: !2163, line: 48, baseType: !979, size: 32, align: 32, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "expected_bits", scope: !2170, file: !2163, line: 49, baseType: !1022, size: 64, align: 64, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "new_pict_type", scope: !2170, file: !2163, line: 50, baseType: !979, size: 32, align: 32, offset: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "new_qscale", scope: !2170, file: !2163, line: 51, baseType: !1453, size: 32, align: 32, offset: 352)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !2170, file: !2163, line: 52, baseType: !1011, size: 64, align: 64, offset: 384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !2170, file: !2163, line: 53, baseType: !1011, size: 64, align: 64, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !2170, file: !2163, line: 54, baseType: !979, size: 32, align: 32, offset: 512)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !2170, file: !2163, line: 55, baseType: !979, size: 32, align: 32, offset: 544)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !2170, file: !2163, line: 56, baseType: !979, size: 32, align: 32, offset: 576)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !2170, file: !2163, line: 57, baseType: !979, size: 32, align: 32, offset: 608)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_index", scope: !2164, file: !2163, line: 66, baseType: !1187, size: 64, align: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2164, file: !2163, line: 67, baseType: !2190, size: 960, align: 64, offset: 192)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2191, size: 960, align: 64, elements: !1800)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "Predictor", file: !2163, line: 39, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Predictor", file: !2163, line: 35, size: 192, align: 64, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2192, file: !2163, line: 36, baseType: !1187, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2192, file: !2163, line: 37, baseType: !1187, size: 64, align: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "decay", scope: !2192, file: !2163, line: 38, baseType: !1187, size: 64, align: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qsum", scope: !2164, file: !2163, line: 68, baseType: !1187, size: 64, align: 64, offset: 1152)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qcount", scope: !2164, file: !2163, line: 69, baseType: !1187, size: 64, align: 64, offset: 1216)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_rc_eq_output_sum", scope: !2164, file: !2163, line: 70, baseType: !1187, size: 64, align: 64, offset: 1280)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_wanted_bits", scope: !2164, file: !2163, line: 71, baseType: !1187, size: 64, align: 64, offset: 1344)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale", scope: !2164, file: !2163, line: 72, baseType: !1187, size: 64, align: 64, offset: 1408)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale_for", scope: !2164, file: !2163, line: 73, baseType: !2203, size: 320, align: 64, offset: 1472)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 320, align: 64, elements: !1800)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "last_mc_mb_var_sum", scope: !2164, file: !2163, line: 74, baseType: !1011, size: 64, align: 64, offset: 1792)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_var_sum", scope: !2164, file: !2163, line: 75, baseType: !1011, size: 64, align: 64, offset: 1856)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "i_cplx_sum", scope: !2164, file: !2163, line: 76, baseType: !2207, size: 320, align: 64, offset: 1920)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 320, align: 64, elements: !1800)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "p_cplx_sum", scope: !2164, file: !2163, line: 77, baseType: !2207, size: 320, align: 64, offset: 2240)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits_sum", scope: !2164, file: !2163, line: 78, baseType: !2207, size: 320, align: 64, offset: 2560)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_sum", scope: !2164, file: !2163, line: 79, baseType: !2207, size: 320, align: 64, offset: 2880)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2164, file: !2163, line: 80, baseType: !1799, size: 160, align: 32, offset: 3200)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !2164, file: !2163, line: 81, baseType: !979, size: 32, align: 32, offset: 3360)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "non_lavc_opaque", scope: !2164, file: !2163, line: 83, baseType: !1019, size: 64, align: 64, offset: 3392)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dry_run_qscale", scope: !2164, file: !2163, line: 84, baseType: !1453, size: 32, align: 32, offset: 3456)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_number", scope: !2164, file: !2163, line: 85, baseType: !979, size: 32, align: 32, offset: 3488)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq_eval", scope: !2164, file: !2163, line: 86, baseType: !2217, size: 64, align: 64, offset: 3520)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64, align: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !2219, line: 31, baseType: !2220)
!2219 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2220 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !2219, line: 31, flags: DIFlagFwdDecl)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1607, file: !1608, line: 344, baseType: !979, size: 32, align: 32, offset: 63936)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1607, file: !1608, line: 345, baseType: !979, size: 32, align: 32, offset: 63968)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1607, file: !1608, line: 346, baseType: !979, size: 32, align: 32, offset: 64000)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1607, file: !1608, line: 347, baseType: !979, size: 32, align: 32, offset: 64032)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1607, file: !1608, line: 348, baseType: !979, size: 32, align: 32, offset: 64064)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1607, file: !1608, line: 349, baseType: !979, size: 32, align: 32, offset: 64096)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "b_count", scope: !1607, file: !1608, line: 350, baseType: !979, size: 32, align: 32, offset: 64128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1607, file: !1608, line: 351, baseType: !979, size: 32, align: 32, offset: 64160)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1607, file: !1608, line: 352, baseType: !979, size: 32, align: 32, offset: 64192)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "last_bits", scope: !1607, file: !1608, line: 353, baseType: !979, size: 32, align: 32, offset: 64224)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_x", scope: !1607, file: !1608, line: 356, baseType: !979, size: 32, align: 32, offset: 64256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_y", scope: !1607, file: !1608, line: 357, baseType: !979, size: 32, align: 32, offset: 64288)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "last_resync_gb", scope: !1607, file: !1608, line: 358, baseType: !1114, size: 256, align: 64, offset: 64320)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num_left", scope: !1607, file: !1608, line: 359, baseType: !979, size: 32, align: 32, offset: 64576)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_frame_damaged", scope: !1607, file: !1608, line: 360, baseType: !979, size: 32, align: 32, offset: 64608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "parse_context", scope: !1607, file: !1608, line: 362, baseType: !2237, size: 384, align: 64, offset: 64640)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParseContext", file: !2238, line: 38, baseType: !2239)
!2238 = !DIFile(filename: "./libavcodec/parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParseContext", file: !2238, line: 28, size: 384, align: 64, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2239, file: !2238, line: 29, baseType: !987, size: 64, align: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2239, file: !2238, line: 30, baseType: !979, size: 32, align: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "last_index", scope: !2239, file: !2238, line: 31, baseType: !979, size: 32, align: 32, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2239, file: !2238, line: 32, baseType: !980, size: 32, align: 32, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2239, file: !2238, line: 33, baseType: !1098, size: 32, align: 32, offset: 160)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "frame_start_found", scope: !2239, file: !2238, line: 34, baseType: !979, size: 32, align: 32, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !2239, file: !2238, line: 35, baseType: !979, size: 32, align: 32, offset: 224)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "overread_index", scope: !2239, file: !2238, line: 36, baseType: !979, size: 32, align: 32, offset: 256)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "state64", scope: !2239, file: !2238, line: 37, baseType: !1022, size: 64, align: 64, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "gob_index", scope: !1607, file: !1608, line: 365, baseType: !979, size: 32, align: 32, offset: 65024)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "obmc", scope: !1607, file: !1608, line: 366, baseType: !979, size: 32, align: 32, offset: 65056)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info", scope: !1607, file: !1608, line: 367, baseType: !979, size: 32, align: 32, offset: 65088)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mb_info", scope: !1607, file: !1608, line: 368, baseType: !979, size: 32, align: 32, offset: 65120)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_info", scope: !1607, file: !1608, line: 368, baseType: !979, size: 32, align: 32, offset: 65152)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_ptr", scope: !1607, file: !1608, line: 369, baseType: !987, size: 64, align: 64, offset: 65216)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_size", scope: !1607, file: !1608, line: 370, baseType: !979, size: 32, align: 32, offset: 65280)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ehc_mode", scope: !1607, file: !1608, line: 371, baseType: !979, size: 32, align: 32, offset: 65312)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "rc_strategy", scope: !1607, file: !1608, line: 372, baseType: !979, size: 32, align: 32, offset: 65344)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "umvplus", scope: !1607, file: !1608, line: 375, baseType: !979, size: 32, align: 32, offset: 65376)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic_dir", scope: !1607, file: !1608, line: 376, baseType: !979, size: 32, align: 32, offset: 65408)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "h263_slice_structured", scope: !1607, file: !1608, line: 377, baseType: !979, size: 32, align: 32, offset: 65440)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "alt_inter_vlc", scope: !1607, file: !1608, line: 378, baseType: !979, size: 32, align: 32, offset: 65472)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "modified_quant", scope: !1607, file: !1608, line: 379, baseType: !979, size: 32, align: 32, offset: 65504)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter", scope: !1607, file: !1608, line: 380, baseType: !979, size: 32, align: 32, offset: 65536)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "custom_pcf", scope: !1607, file: !1608, line: 381, baseType: !979, size: 32, align: 32, offset: 65568)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "studio_profile", scope: !1607, file: !1608, line: 384, baseType: !979, size: 32, align: 32, offset: 65600)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dct_precision", scope: !1607, file: !1608, line: 385, baseType: !979, size: 32, align: 32, offset: 65632)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "time_increment_bits", scope: !1607, file: !1608, line: 387, baseType: !979, size: 32, align: 32, offset: 65664)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "last_time_base", scope: !1607, file: !1608, line: 388, baseType: !979, size: 32, align: 32, offset: 65696)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1607, file: !1608, line: 389, baseType: !979, size: 32, align: 32, offset: 65728)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1607, file: !1608, line: 390, baseType: !1011, size: 64, align: 64, offset: 65792)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_time", scope: !1607, file: !1608, line: 391, baseType: !1011, size: 64, align: 64, offset: 65856)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !1607, file: !1608, line: 392, baseType: !1104, size: 16, align: 16, offset: 65920)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !1607, file: !1608, line: 393, baseType: !1104, size: 16, align: 16, offset: 65936)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pp_field_time", scope: !1607, file: !1608, line: 394, baseType: !1104, size: 16, align: 16, offset: 65952)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pb_field_time", scope: !1607, file: !1608, line: 395, baseType: !1104, size: 16, align: 16, offset: 65968)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "real_sprite_warping_points", scope: !1607, file: !1608, line: 396, baseType: !979, size: 32, align: 32, offset: 65984)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_offset", scope: !1607, file: !1608, line: 397, baseType: !2045, size: 128, align: 32, offset: 66016)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_delta", scope: !1607, file: !1608, line: 398, baseType: !2045, size: 128, align: 32, offset: 66144)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "mcsel", scope: !1607, file: !1608, line: 399, baseType: !979, size: 32, align: 32, offset: 66272)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "quant_precision", scope: !1607, file: !1608, line: 400, baseType: !979, size: 32, align: 32, offset: 66304)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !1607, file: !1608, line: 401, baseType: !979, size: 32, align: 32, offset: 66336)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_info", scope: !1607, file: !1608, line: 402, baseType: !979, size: 32, align: 32, offset: 66368)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_warping_accuracy", scope: !1607, file: !1608, line: 403, baseType: !979, size: 32, align: 32, offset: 66400)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "data_partitioning", scope: !1607, file: !1608, line: 404, baseType: !979, size: 32, align: 32, offset: 66432)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !1607, file: !1608, line: 405, baseType: !979, size: 32, align: 32, offset: 66464)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !1607, file: !1608, line: 406, baseType: !979, size: 32, align: 32, offset: 66496)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "vo_type", scope: !1607, file: !1608, line: 407, baseType: !979, size: 32, align: 32, offset: 66528)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pb", scope: !1607, file: !1608, line: 408, baseType: !1727, size: 320, align: 64, offset: 66560)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pb2", scope: !1607, file: !1608, line: 409, baseType: !1727, size: 320, align: 64, offset: 66880)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1607, file: !1608, line: 410, baseType: !979, size: 32, align: 32, offset: 67200)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "padding_bug_score", scope: !1607, file: !1608, line: 411, baseType: !979, size: 32, align: 32, offset: 67232)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "divx_packed", scope: !1607, file: !1608, line: 414, baseType: !979, size: 32, align: 32, offset: 67264)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer", scope: !1607, file: !1608, line: 415, baseType: !987, size: 64, align: 64, offset: 67328)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer_size", scope: !1607, file: !1608, line: 416, baseType: !979, size: 32, align: 32, offset: 67392)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bitstream_buffer_size", scope: !1607, file: !1608, line: 417, baseType: !980, size: 32, align: 32, offset: 67424)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_version", scope: !1607, file: !1608, line: 420, baseType: !979, size: 32, align: 32, offset: 67456)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_first_dc_coded", scope: !1607, file: !1608, line: 421, baseType: !1752, size: 96, align: 32, offset: 67488)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "mjpeg_ctx", scope: !1607, file: !1608, line: 424, baseType: !2300, size: 64, align: 64, offset: 67584)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64, align: 64)
!2301 = !DICompositeType(tag: DW_TAG_structure_type, name: "MJpegContext", file: !1608, line: 424, flags: DIFlagFwdDecl)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "esc_pos", scope: !1607, file: !1608, line: 425, baseType: !979, size: 32, align: 32, offset: 67648)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1607, file: !1608, line: 426, baseType: !979, size: 32, align: 32, offset: 67680)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "huffman", scope: !1607, file: !1608, line: 427, baseType: !979, size: 32, align: 32, offset: 67712)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "mv_table_index", scope: !1607, file: !1608, line: 430, baseType: !979, size: 32, align: 32, offset: 67744)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table_index", scope: !1607, file: !1608, line: 431, baseType: !979, size: 32, align: 32, offset: 67776)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "rl_chroma_table_index", scope: !1607, file: !1608, line: 432, baseType: !979, size: 32, align: 32, offset: 67808)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dc_table_index", scope: !1607, file: !1608, line: 433, baseType: !979, size: 32, align: 32, offset: 67840)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "use_skip_mb_code", scope: !1607, file: !1608, line: 434, baseType: !979, size: 32, align: 32, offset: 67872)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1607, file: !1608, line: 435, baseType: !979, size: 32, align: 32, offset: 67904)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "first_slice_line", scope: !1607, file: !1608, line: 436, baseType: !979, size: 32, align: 32, offset: 67936)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flipflop_rounding", scope: !1607, file: !1608, line: 437, baseType: !979, size: 32, align: 32, offset: 67968)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "msmpeg4_version", scope: !1607, file: !1608, line: 438, baseType: !979, size: 32, align: 32, offset: 68000)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "per_mb_rl_table", scope: !1607, file: !1608, line: 439, baseType: !979, size: 32, align: 32, offset: 68032)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_level_length", scope: !1607, file: !1608, line: 440, baseType: !979, size: 32, align: 32, offset: 68064)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_run_length", scope: !1607, file: !1608, line: 441, baseType: !979, size: 32, align: 32, offset: 68096)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ac_stats", scope: !1607, file: !1608, line: 443, baseType: !2318, size: 64, align: 64, offset: 68160)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64, align: 64)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 540800, align: 32, elements: !2320)
!2320 = !{!1685, !2321, !2321, !1685}
!2321 = !DISubrange(count: 65)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "inter_intra_pred", scope: !1607, file: !1608, line: 444, baseType: !979, size: 32, align: 32, offset: 68224)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "mspel", scope: !1607, file: !1608, line: 445, baseType: !979, size: 32, align: 32, offset: 68256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1607, file: !1608, line: 448, baseType: !1114, size: 256, align: 64, offset: 68288)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "gop_picture_number", scope: !1607, file: !1608, line: 451, baseType: !979, size: 32, align: 32, offset: 68544)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv_dir", scope: !1607, file: !1608, line: 452, baseType: !979, size: 32, align: 32, offset: 68576)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay_ptr", scope: !1607, file: !1608, line: 453, baseType: !987, size: 64, align: 64, offset: 68608)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_sequence", scope: !1607, file: !1608, line: 456, baseType: !979, size: 32, align: 32, offset: 68672)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_f_code", scope: !1607, file: !1608, line: 457, baseType: !2045, size: 128, align: 32, offset: 68704)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !1607, file: !1608, line: 460, baseType: !979, size: 32, align: 32, offset: 68832)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1607, file: !1608, line: 462, baseType: !1011, size: 64, align: 64, offset: 68864)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1607, file: !1608, line: 463, baseType: !979, size: 32, align: 32, offset: 68928)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pred_frame_dct", scope: !1607, file: !1608, line: 464, baseType: !979, size: 32, align: 32, offset: 68960)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1607, file: !1608, line: 465, baseType: !979, size: 32, align: 32, offset: 68992)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "concealment_motion_vectors", scope: !1607, file: !1608, line: 466, baseType: !979, size: 32, align: 32, offset: 69024)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "q_scale_type", scope: !1607, file: !1608, line: 467, baseType: !979, size: 32, align: 32, offset: 69056)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1607, file: !1608, line: 468, baseType: !979, size: 32, align: 32, offset: 69088)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "intra_vlc_format", scope: !1607, file: !1608, line: 469, baseType: !979, size: 32, align: 32, offset: 69120)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "alternate_scan", scope: !1607, file: !1608, line: 470, baseType: !979, size: 32, align: 32, offset: 69152)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "seq_disp_ext", scope: !1607, file: !1608, line: 471, baseType: !979, size: 32, align: 32, offset: 69184)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !1607, file: !1608, line: 472, baseType: !979, size: 32, align: 32, offset: 69216)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_first_field", scope: !1607, file: !1608, line: 479, baseType: !979, size: 32, align: 32, offset: 69248)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_420_type", scope: !1607, file: !1608, line: 480, baseType: !979, size: 32, align: 32, offset: 69280)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format", scope: !1607, file: !1608, line: 481, baseType: !979, size: 32, align: 32, offset: 69312)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !1607, file: !1608, line: 485, baseType: !979, size: 32, align: 32, offset: 69344)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !1607, file: !1608, line: 486, baseType: !979, size: 32, align: 32, offset: 69376)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_frame", scope: !1607, file: !1608, line: 488, baseType: !979, size: 32, align: 32, offset: 69408)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "full_pel", scope: !1607, file: !1608, line: 489, baseType: !2154, size: 64, align: 32, offset: 69440)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_dct", scope: !1607, file: !1608, line: 490, baseType: !979, size: 32, align: 32, offset: 69504)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "first_field", scope: !1607, file: !1608, line: 491, baseType: !979, size: 32, align: 32, offset: 69536)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "drop_frame_timecode", scope: !1607, file: !1608, line: 492, baseType: !979, size: 32, align: 32, offset: 69568)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "scan_offset", scope: !1607, file: !1608, line: 493, baseType: !979, size: 32, align: 32, offset: 69600)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_mode", scope: !1607, file: !1608, line: 496, baseType: !979, size: 32, align: 32, offset: 69632)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1607, file: !1608, line: 497, baseType: !979, size: 32, align: 32, offset: 69664)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "tc_opt_str", scope: !1607, file: !1608, line: 499, baseType: !1569, size: 64, align: 64, offset: 69696)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1607, file: !1608, line: 500, baseType: !2357, size: 160, align: 32, offset: 69760)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !2358, line: 46, baseType: !2359)
!2358 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2358, line: 41, size: 160, align: 32, elements: !2360)
!2360 = !{!2361, !2362, !2363, !2364}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2359, file: !2358, line: 42, baseType: !979, size: 32, align: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2359, file: !2358, line: 43, baseType: !1098, size: 32, align: 32, offset: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2359, file: !2358, line: 44, baseType: !1004, size: 64, align: 32, offset: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !2359, file: !2358, line: 45, baseType: !980, size: 32, align: 32, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_lastgob", scope: !1607, file: !1608, line: 502, baseType: !987, size: 64, align: 64, offset: 69952)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "swap_uv", scope: !1607, file: !1608, line: 503, baseType: !979, size: 32, align: 32, offset: 70016)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "pack_pblocks", scope: !1607, file: !1608, line: 504, baseType: !979, size: 32, align: 32, offset: 70048)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "pblocks", scope: !1607, file: !1608, line: 505, baseType: !2369, size: 768, align: 64, offset: 70080)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2370, size: 768, align: 64, elements: !1617)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64, align: 64)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 1024, align: 16, elements: !1627)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1607, file: !1608, line: 507, baseType: !2370, size: 64, align: 64, offset: 70848)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1607, file: !1608, line: 508, baseType: !2374, size: 64, align: 64, offset: 70912)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64, align: 64)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 12288, align: 16, elements: !2376)
!2376 = !{!1618, !1628}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1607, file: !1608, line: 509, baseType: !2378, size: 64, align: 64, offset: 70976)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64, align: 64)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!979, !1606, !2370}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "block32", scope: !1607, file: !1608, line: 511, baseType: !2382, size: 64, align: 64, offset: 71040)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64, align: 64)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 24576, align: 32, elements: !2376)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_direction", scope: !1607, file: !1608, line: 512, baseType: !979, size: 32, align: 32, offset: 71104)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_macroblock", scope: !1607, file: !1608, line: 513, baseType: !2386, size: 64, align: 64, offset: 71168)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64, align: 64)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 12288, align: 16, elements: !2388)
!2388 = !{!1754, !2389}
!2389 = !DISubrange(count: 256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_intra", scope: !1607, file: !1608, line: 520, baseType: !2391, size: 64, align: 64, offset: 71232)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64, align: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !1606, !1106, !979, !979}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_inter", scope: !1607, file: !1608, line: 522, baseType: !2391, size: 64, align: 64, offset: 71296)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_intra", scope: !1607, file: !1608, line: 524, baseType: !2391, size: 64, align: 64, offset: 71360)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_inter", scope: !1607, file: !1608, line: 526, baseType: !2391, size: 64, align: 64, offset: 71424)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_intra", scope: !1607, file: !1608, line: 528, baseType: !2391, size: 64, align: 64, offset: 71488)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_inter", scope: !1607, file: !1608, line: 530, baseType: !2391, size: 64, align: 64, offset: 71552)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_intra", scope: !1607, file: !1608, line: 532, baseType: !2391, size: 64, align: 64, offset: 71616)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_inter", scope: !1607, file: !1608, line: 534, baseType: !2391, size: 64, align: 64, offset: 71680)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dct_quantize", scope: !1607, file: !1608, line: 536, baseType: !2402, size: 64, align: 64, offset: 71744)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64, align: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!979, !1606, !1106, !979, !979, !1446}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "fast_dct_quantize", scope: !1607, file: !1608, line: 537, baseType: !2402, size: 64, align: 64, offset: 71808)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !1607, file: !1608, line: 538, baseType: !2407, size: 64, align: 64, offset: 71872)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64, align: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{null, !1606, !1106}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "mpv_flags", scope: !1607, file: !1608, line: 540, baseType: !979, size: 32, align: 32, offset: 71936)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "quantizer_noise_shaping", scope: !1607, file: !1608, line: 541, baseType: !979, size: 32, align: 32, offset: 71968)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qsquish", scope: !1607, file: !1608, line: 547, baseType: !1453, size: 32, align: 32, offset: 72000)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_amp", scope: !1607, file: !1608, line: 548, baseType: !1453, size: 32, align: 32, offset: 72032)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_freq", scope: !1607, file: !1608, line: 549, baseType: !979, size: 32, align: 32, offset: 72064)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_cplx", scope: !1607, file: !1608, line: 550, baseType: !1453, size: 32, align: 32, offset: 72096)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_aggressivity", scope: !1607, file: !1608, line: 551, baseType: !1453, size: 32, align: 32, offset: 72128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "border_masking", scope: !1607, file: !1608, line: 552, baseType: !1453, size: 32, align: 32, offset: 72160)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "lmin", scope: !1607, file: !1608, line: 553, baseType: !979, size: 32, align: 32, offset: 72192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lmax", scope: !1607, file: !1608, line: 553, baseType: !979, size: 32, align: 32, offset: 72224)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_ignore_qmax", scope: !1607, file: !1608, line: 554, baseType: !979, size: 32, align: 32, offset: 72256)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq", scope: !1607, file: !1608, line: 556, baseType: !1569, size: 64, align: 64, offset: 72320)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "cplx_tab", scope: !1607, file: !1608, line: 559, baseType: !2423, size: 64, align: 64, offset: 72384)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "bits_tab", scope: !1607, file: !1608, line: 559, baseType: !2423, size: 64, align: 64, offset: 72448)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "context_reinit", scope: !1607, file: !1608, line: 563, baseType: !979, size: 32, align: 32, offset: 72512)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "er", scope: !1607, file: !1608, line: 565, baseType: !2427, size: 12160, align: 64, offset: 72576)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERContext", file: !2428, line: 90, baseType: !2429)
!2428 = !DIFile(filename: "./libavcodec/error_resilience.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERContext", file: !2428, line: 53, size: 12160, align: 64, elements: !2430)
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2475}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2429, file: !2428, line: 54, baseType: !1251, size: 64, align: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !2429, file: !2428, line: 55, baseType: !1879, size: 8640, align: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "mecc_inited", scope: !2429, file: !2428, line: 56, baseType: !979, size: 32, align: 32, offset: 8704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !2429, file: !2428, line: 58, baseType: !1446, size: 64, align: 64, offset: 8768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !2429, file: !2428, line: 59, baseType: !979, size: 32, align: 32, offset: 8832)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !2429, file: !2428, line: 60, baseType: !979, size: 32, align: 32, offset: 8864)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !2429, file: !2428, line: 60, baseType: !979, size: 32, align: 32, offset: 8896)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !2429, file: !2428, line: 61, baseType: !1666, size: 64, align: 64, offset: 8960)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !2429, file: !2428, line: 62, baseType: !1666, size: 64, align: 64, offset: 9024)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2429, file: !2428, line: 64, baseType: !2441, size: 32, align: 32, offset: 9088)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int", file: !2442, line: 46, baseType: !979)
!2442 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdatomic.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "error_occurred", scope: !2429, file: !2428, line: 65, baseType: !979, size: 32, align: 32, offset: 9120)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "error_status_table", scope: !2429, file: !2428, line: 66, baseType: !987, size: 64, align: 64, offset: 9152)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "er_temp_buffer", scope: !2429, file: !2428, line: 67, baseType: !987, size: 64, align: 64, offset: 9216)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !2429, file: !2428, line: 68, baseType: !1757, size: 192, align: 64, offset: 9280)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !2429, file: !2428, line: 69, baseType: !987, size: 64, align: 64, offset: 9472)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !2429, file: !2428, line: 70, baseType: !987, size: 64, align: 64, offset: 9536)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2429, file: !2428, line: 71, baseType: !2042, size: 512, align: 32, offset: 9600)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pic", scope: !2429, file: !2428, line: 73, baseType: !2451, size: 512, align: 64, offset: 10112)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERPicture", file: !2428, line: 51, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERPicture", file: !2428, line: 41, size: 512, align: 64, elements: !2453)
!2453 = !{!2454, !2455, !2457, !2458, !2459, !2460}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2452, file: !2428, line: 42, baseType: !981, size: 64, align: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2452, file: !2428, line: 43, baseType: !2456, size: 64, align: 64, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !2452, file: !2428, line: 46, baseType: !1692, size: 128, align: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !2452, file: !2428, line: 47, baseType: !1701, size: 128, align: 64, offset: 256)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2452, file: !2428, line: 49, baseType: !1130, size: 64, align: 64, offset: 384)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !2452, file: !2428, line: 50, baseType: !979, size: 32, align: 32, offset: 448)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "last_pic", scope: !2429, file: !2428, line: 74, baseType: !2451, size: 512, align: 64, offset: 10624)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "next_pic", scope: !2429, file: !2428, line: 75, baseType: !2451, size: 512, align: 64, offset: 11136)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !2429, file: !2428, line: 77, baseType: !1690, size: 128, align: 64, offset: 11648)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !2429, file: !2428, line: 78, baseType: !1690, size: 128, align: 64, offset: 11776)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !2429, file: !2428, line: 80, baseType: !1104, size: 16, align: 16, offset: 11904)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !2429, file: !2428, line: 81, baseType: !1104, size: 16, align: 16, offset: 11920)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !2429, file: !2428, line: 82, baseType: !979, size: 32, align: 32, offset: 11936)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !2429, file: !2428, line: 83, baseType: !979, size: 32, align: 32, offset: 11968)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2429, file: !2428, line: 84, baseType: !979, size: 32, align: 32, offset: 12000)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2429, file: !2428, line: 86, baseType: !2471, size: 64, align: 64, offset: 12032)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64, align: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !1019, !979, !979, !979, !2474, !979, !979, !979, !979}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64, align: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2429, file: !2428, line: 89, baseType: !1019, size: 64, align: 64, offset: 12096)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "error_rate", scope: !1607, file: !1608, line: 567, baseType: !979, size: 32, align: 32, offset: 84736)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_frames", scope: !1607, file: !1608, line: 570, baseType: !2478, size: 1152, align: 64, offset: 84800)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 1152, align: 64, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 18)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1607, file: !1608, line: 571, baseType: !979, size: 32, align: 32, offset: 85952)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1607, file: !1608, line: 572, baseType: !979, size: 32, align: 32, offset: 85984)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1607, file: !1608, line: 575, baseType: !979, size: 32, align: 32, offset: 86016)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1607, file: !1608, line: 576, baseType: !979, size: 32, align: 32, offset: 86048)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1607, file: !1608, line: 577, baseType: !979, size: 32, align: 32, offset: 86080)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1607, file: !1608, line: 578, baseType: !979, size: 32, align: 32, offset: 86112)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1607, file: !1608, line: 580, baseType: !979, size: 32, align: 32, offset: 86144)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1607, file: !1608, line: 581, baseType: !979, size: 32, align: 32, offset: 86176)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1580, file: !14, line: 3766, baseType: !1248, size: 64, align: 64, offset: 640)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1580, file: !14, line: 3774, baseType: !1248, size: 64, align: 64, offset: 704)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1580, file: !14, line: 3780, baseType: !979, size: 32, align: 32, offset: 768)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1580, file: !14, line: 3785, baseType: !979, size: 32, align: 32, offset: 800)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1580, file: !14, line: 3795, baseType: !2494, size: 64, align: 64, offset: 832)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64, align: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!979, !1251, !1033}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1253, file: !14, line: 2728, baseType: !1019, size: 64, align: 64, offset: 5440)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1253, file: !14, line: 2735, baseType: !1021, size: 512, align: 64, offset: 5504)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1253, file: !14, line: 2742, baseType: !979, size: 32, align: 32, offset: 6016)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1253, file: !14, line: 2755, baseType: !979, size: 32, align: 32, offset: 6048)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1253, file: !14, line: 2776, baseType: !979, size: 32, align: 32, offset: 6080)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1253, file: !14, line: 2783, baseType: !979, size: 32, align: 32, offset: 6112)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1253, file: !14, line: 2791, baseType: !979, size: 32, align: 32, offset: 6144)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1253, file: !14, line: 2802, baseType: !981, size: 64, align: 64, offset: 6208)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1253, file: !14, line: 2811, baseType: !979, size: 32, align: 32, offset: 6272)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1253, file: !14, line: 2821, baseType: !979, size: 32, align: 32, offset: 6304)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1253, file: !14, line: 2830, baseType: !979, size: 32, align: 32, offset: 6336)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1253, file: !14, line: 2840, baseType: !979, size: 32, align: 32, offset: 6368)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1253, file: !14, line: 2851, baseType: !2510, size: 64, align: 64, offset: 6400)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64, align: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!979, !1443, !2513, !1019, !1446, !979, !979}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64, align: 64)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!979, !1443, !1019}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1253, file: !14, line: 2871, baseType: !2517, size: 64, align: 64, offset: 6464)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64, align: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{!979, !1443, !2520, !1019, !1446, !979}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64, align: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!979, !1443, !1019, !979, !979}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1253, file: !14, line: 2878, baseType: !979, size: 32, align: 32, offset: 6528)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1253, file: !14, line: 2885, baseType: !979, size: 32, align: 32, offset: 6560)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1253, file: !14, line: 3005, baseType: !979, size: 32, align: 32, offset: 6592)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1253, file: !14, line: 3013, baseType: !910, size: 32, align: 32, offset: 6624)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1253, file: !14, line: 3020, baseType: !910, size: 32, align: 32, offset: 6656)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1253, file: !14, line: 3027, baseType: !910, size: 32, align: 32, offset: 6688)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1253, file: !14, line: 3037, baseType: !987, size: 64, align: 64, offset: 6720)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1253, file: !14, line: 3038, baseType: !979, size: 32, align: 32, offset: 6784)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1253, file: !14, line: 3050, baseType: !1022, size: 64, align: 64, offset: 6848)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1253, file: !14, line: 3065, baseType: !979, size: 32, align: 32, offset: 6912)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1253, file: !14, line: 3083, baseType: !979, size: 32, align: 32, offset: 6944)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1253, file: !14, line: 3092, baseType: !1004, size: 64, align: 32, offset: 6976)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1253, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1253, file: !14, line: 3106, baseType: !1004, size: 64, align: 32, offset: 7072)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1253, file: !14, line: 3113, baseType: !2538, size: 64, align: 64, offset: 7168)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64, align: 64)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2540)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2551}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2541, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2541, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2541, file: !14, line: 720, baseType: !1139, size: 64, align: 64, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2541, file: !14, line: 724, baseType: !1139, size: 64, align: 64, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2541, file: !14, line: 728, baseType: !979, size: 32, align: 32, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2541, file: !14, line: 734, baseType: !2549, size: 64, align: 64, offset: 256)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64, align: 64)
!2550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2541, file: !14, line: 739, baseType: !2552, size: 64, align: 64, offset: 320)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64, align: 64)
!2553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1253, file: !14, line: 3129, baseType: !1011, size: 64, align: 64, offset: 7232)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1253, file: !14, line: 3130, baseType: !1011, size: 64, align: 64, offset: 7296)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1253, file: !14, line: 3131, baseType: !1011, size: 64, align: 64, offset: 7360)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1253, file: !14, line: 3132, baseType: !1011, size: 64, align: 64, offset: 7424)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1253, file: !14, line: 3139, baseType: !1569, size: 64, align: 64, offset: 7488)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1253, file: !14, line: 3147, baseType: !979, size: 32, align: 32, offset: 7552)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1253, file: !14, line: 3165, baseType: !979, size: 32, align: 32, offset: 7584)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1253, file: !14, line: 3172, baseType: !979, size: 32, align: 32, offset: 7616)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1253, file: !14, line: 3180, baseType: !979, size: 32, align: 32, offset: 7648)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1253, file: !14, line: 3191, baseType: !1483, size: 64, align: 64, offset: 7680)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1253, file: !14, line: 3199, baseType: !987, size: 64, align: 64, offset: 7744)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1253, file: !14, line: 3207, baseType: !1569, size: 64, align: 64, offset: 7808)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1253, file: !14, line: 3214, baseType: !980, size: 32, align: 32, offset: 7872)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1253, file: !14, line: 3224, baseType: !1312, size: 64, align: 64, offset: 7936)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1253, file: !14, line: 3225, baseType: !979, size: 32, align: 32, offset: 8000)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1253, file: !14, line: 3249, baseType: !1033, size: 64, align: 64, offset: 8064)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1253, file: !14, line: 3256, baseType: !979, size: 32, align: 32, offset: 8128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1253, file: !14, line: 3271, baseType: !979, size: 32, align: 32, offset: 8160)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1253, file: !14, line: 3279, baseType: !1011, size: 64, align: 64, offset: 8192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1253, file: !14, line: 3301, baseType: !1033, size: 64, align: 64, offset: 8256)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1253, file: !14, line: 3310, baseType: !979, size: 32, align: 32, offset: 8320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1253, file: !14, line: 3337, baseType: !979, size: 32, align: 32, offset: 8352)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1253, file: !14, line: 3351, baseType: !979, size: 32, align: 32, offset: 8384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1253, file: !14, line: 3359, baseType: !979, size: 32, align: 32, offset: 8416)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1136, file: !14, line: 3535, baseType: !2579, size: 64, align: 64, offset: 1024)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64, align: 64)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!979, !1251, !2582}
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64, align: 64)
!2583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1252)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1136, file: !14, line: 3541, baseType: !2585, size: 64, align: 64, offset: 1088)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64, align: 64)
!2586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2587)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1267, line: 223, size: 128, align: 64, elements: !2589)
!2589 = !{!2590, !2591}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2588, file: !1267, line: 224, baseType: !1119, size: 64, align: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2588, file: !1267, line: 225, baseType: !1119, size: 64, align: 64, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1136, file: !14, line: 3549, baseType: !2593, size: 64, align: 64, offset: 1152)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64, align: 64)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{null, !1246}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1136, file: !14, line: 3551, baseType: !1248, size: 64, align: 64, offset: 1216)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1136, file: !14, line: 3552, baseType: !2598, size: 64, align: 64, offset: 1280)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64, align: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{!979, !1251, !987, !979, !2601}
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64, align: 64)
!2602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2603)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2633}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2603, file: !14, line: 3921, baseType: !1104, size: 16, align: 16)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !2603, file: !14, line: 3922, baseType: !1098, size: 32, align: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !2603, file: !14, line: 3923, baseType: !1098, size: 32, align: 32, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !2603, file: !14, line: 3924, baseType: !980, size: 32, align: 32, offset: 96)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !2603, file: !14, line: 3925, baseType: !2610, size: 64, align: 64, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64, align: 64)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64, align: 64)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2626, !2628, !2629, !2630, !2631, !2632}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2613, file: !14, line: 3886, baseType: !979, size: 32, align: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2613, file: !14, line: 3887, baseType: !979, size: 32, align: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2613, file: !14, line: 3888, baseType: !979, size: 32, align: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2613, file: !14, line: 3889, baseType: !979, size: 32, align: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !2613, file: !14, line: 3890, baseType: !979, size: 32, align: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !2613, file: !14, line: 3897, baseType: !2621, size: 768, align: 64, offset: 192)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2622, file: !14, line: 3855, baseType: !986, size: 512, align: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2622, file: !14, line: 3857, baseType: !994, size: 256, align: 32, offset: 512)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2613, file: !14, line: 3903, baseType: !2627, size: 256, align: 64, offset: 960)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 256, align: 64, elements: !1283)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2613, file: !14, line: 3904, baseType: !1290, size: 128, align: 32, offset: 1216)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2613, file: !14, line: 3906, baseType: !919, size: 32, align: 32, offset: 1344)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2613, file: !14, line: 3908, baseType: !1569, size: 64, align: 64, offset: 1408)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !2613, file: !14, line: 3915, baseType: !1569, size: 64, align: 64, offset: 1472)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2613, file: !14, line: 3917, baseType: !979, size: 32, align: 32, offset: 1536)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2603, file: !14, line: 3926, baseType: !1011, size: 64, align: 64, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1136, file: !14, line: 3564, baseType: !2635, size: 64, align: 64, offset: 1344)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64, align: 64)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!979, !1251, !1300, !1444, !1446}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1136, file: !14, line: 3566, baseType: !2639, size: 64, align: 64, offset: 1408)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64, align: 64)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!979, !1251, !1019, !1446, !1300}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1136, file: !14, line: 3567, baseType: !1248, size: 64, align: 64, offset: 1472)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1136, file: !14, line: 3576, baseType: !2644, size: 64, align: 64, offset: 1536)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64, align: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!979, !1251, !1444}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1136, file: !14, line: 3577, baseType: !2648, size: 64, align: 64, offset: 1600)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64, align: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!979, !1251, !1300}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1136, file: !14, line: 3584, baseType: !1588, size: 64, align: 64, offset: 1664)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1136, file: !14, line: 3589, baseType: !2653, size: 64, align: 64, offset: 1728)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64, align: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{null, !1251}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1136, file: !14, line: 3594, baseType: !979, size: 32, align: 32, offset: 1792)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1136, file: !14, line: 3600, baseType: !1139, size: 64, align: 64, offset: 1856)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1136, file: !14, line: 3609, baseType: !2659, size: 64, align: 64, offset: 1920)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64, align: 64)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64, align: 64)
!2661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2662)
!2662 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!2663 = distinct !DIGlobalVariable(name: "dirac_arith_init", scope: !0, file: !971, line: 384, type: !2664, isLocal: true, isDefinition: true, variable: i32* @dirac_arith_init)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_once_t", file: !2665, line: 168, baseType: !979)
!2665 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2666 = distinct !DIGlobalVariable(name: "default_blen", scope: !2667, file: !971, line: 1105, type: !2931, isLocal: true, isDefinition: true, variable: [4 x i8]* @dirac_unpack_prediction_parameters.default_blen)
!2667 = distinct !DISubprogram(name: "dirac_unpack_prediction_parameters", scope: !971, file: !971, line: 1103, type: !2668, isLocal: true, isDefinition: true, scopeLine: 1104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!979, !2670}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64, align: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracContext", file: !971, line: 240, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DiracContext", file: !971, line: 134, size: 91648, align: 128, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2725, !2741, !2747, !2748, !2776, !2777, !2778, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2851, !2857, !2862, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2892, !2893, !2894, !2895, !2896, !2897, !2901, !2903, !2904, !2905, !2906, !2907, !2918, !2920, !2924, !2926}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2672, file: !971, line: 135, baseType: !1251, size: 64, align: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "mpvencdsp", scope: !2672, file: !971, line: 136, baseType: !1932, size: 576, align: 64, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !2672, file: !971, line: 137, baseType: !1988, size: 128, align: 64, offset: 640)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "diracdsp", scope: !2672, file: !971, line: 138, baseType: !2678, size: 2752, align: 64, offset: 768)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracDSPContext", file: !2679, line: 55, baseType: !2680)
!2679 = !DIFile(filename: "libavcodec/diracdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2679, line: 30, size: 2752, align: 64, elements: !2681)
!2681 = !{!2682, !2686, !2693, !2694, !2696, !2697, !2703, !2708, !2713, !2719}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dirac_hpel_filter", scope: !2680, file: !2679, line: 31, baseType: !2683, size: 64, align: 64)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64, align: 64)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{null, !987, !987, !987, !1119, !979, !979, !979}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "put_dirac_pixels_tab", scope: !2680, file: !2679, line: 42, baseType: !2687, size: 768, align: 64, offset: 64)
!2687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2688, size: 768, align: 64, elements: !2692)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64, align: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{null, !987, !2691, !979, !979}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!2692 = !{!1754, !1284}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "avg_dirac_pixels_tab", scope: !2680, file: !2679, line: 43, baseType: !2687, size: 768, align: 64, offset: 832)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_rect_clamped", scope: !2680, file: !2679, line: 45, baseType: !2695, size: 192, align: 64, offset: 1600)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 192, align: 64, elements: !1753)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "put_rect_clamped", scope: !2680, file: !2679, line: 46, baseType: !1951, size: 64, align: 64, offset: 1792)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "add_rect_clamped", scope: !2680, file: !2679, line: 47, baseType: !2698, size: 64, align: 64, offset: 1856)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64, align: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{null, !987, !2701, !979, !1864, !979, !979, !979}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64, align: 64)
!2702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "add_dirac_obmc", scope: !2680, file: !2679, line: 48, baseType: !2704, size: 192, align: 64, offset: 1920)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2705, size: 192, align: 64, elements: !1753)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64, align: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !1483, !1119, !979, !1119, !979}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_subband", scope: !2680, file: !2679, line: 51, baseType: !2709, size: 256, align: 64, offset: 2112)
!2709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2710, size: 256, align: 64, elements: !1283)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64, align: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !987, !987, !1666, !1154, !1154, !979, !979}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "weight_dirac_pixels_tab", scope: !2680, file: !2679, line: 53, baseType: !2714, size: 192, align: 64, offset: 2368)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2715, size: 192, align: 64, elements: !1753)
!2715 = !DIDerivedType(tag: DW_TAG_typedef, name: "dirac_weight_func", file: !2679, line: 27, baseType: !2716)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64, align: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{null, !987, !979, !979, !979, !979}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "biweight_dirac_pixels_tab", scope: !2680, file: !2679, line: 54, baseType: !2720, size: 192, align: 64, offset: 2560)
!2720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2721, size: 192, align: 64, elements: !1753)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "dirac_biweight_func", file: !2679, line: 28, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64, align: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !987, !1119, !979, !979, !979, !979, !979}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "reader_ctx", scope: !2672, file: !971, line: 139, baseType: !2726, size: 64, align: 64, offset: 3520)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64, align: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracGolombLUT", file: !2728, line: 39, baseType: !2729)
!2728 = !DIFile(filename: "libavcodec/dirac_vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DiracGolombLUT", file: !2728, line: 34, size: 512, align: 64, elements: !2730)
!2730 = !{!2731, !2733, !2734, !2736, !2737, !2738, !2739, !2740}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "preamble", scope: !2729, file: !2728, line: 35, baseType: !2732, size: 64, align: 64)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "residual", file: !2728, line: 29, baseType: !1022)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "leftover", scope: !2729, file: !2728, line: 35, baseType: !2732, size: 64, align: 64, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !2729, file: !2728, line: 36, baseType: !2735, size: 256, align: 32, offset: 128)
!2735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 256, align: 32, elements: !991)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_bits", scope: !2729, file: !2728, line: 37, baseType: !1129, size: 32, align: 32, offset: 384)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "leftover_bits", scope: !2729, file: !2728, line: 37, baseType: !1129, size: 32, align: 32, offset: 416)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ready_num", scope: !2729, file: !2728, line: 37, baseType: !1129, size: 32, align: 32, offset: 448)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "need_s", scope: !2729, file: !2728, line: 38, baseType: !1078, size: 8, align: 8, offset: 480)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2729, file: !2728, line: 38, baseType: !1078, size: 8, align: 8, offset: 488)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2672, file: !971, line: 140, baseType: !2742, size: 64, align: 32, offset: 3584)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracVersionInfo", file: !926, line: 79, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DiracVersionInfo", file: !926, line: 76, size: 64, align: 32, elements: !2744)
!2744 = !{!2745, !2746}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2743, file: !926, line: 77, baseType: !979, size: 32, align: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !2743, file: !926, line: 78, baseType: !979, size: 32, align: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !2672, file: !971, line: 141, baseType: !1114, size: 256, align: 64, offset: 3648)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2672, file: !971, line: 142, baseType: !2749, size: 640, align: 32, offset: 3904)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDiracSeqHeader", file: !926, line: 114, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDiracSeqHeader", file: !926, line: 81, size: 640, align: 32, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2750, file: !926, line: 82, baseType: !980, size: 32, align: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2750, file: !926, line: 83, baseType: !980, size: 32, align: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format", scope: !2750, file: !926, line: 84, baseType: !988, size: 8, align: 8, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !2750, file: !926, line: 86, baseType: !988, size: 8, align: 8, offset: 72)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !2750, file: !926, line: 87, baseType: !988, size: 8, align: 8, offset: 80)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate_index", scope: !2750, file: !926, line: 89, baseType: !988, size: 8, align: 8, offset: 88)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_index", scope: !2750, file: !926, line: 90, baseType: !988, size: 8, align: 8, offset: 96)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "clean_width", scope: !2750, file: !926, line: 92, baseType: !1104, size: 16, align: 16, offset: 112)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "clean_height", scope: !2750, file: !926, line: 93, baseType: !1104, size: 16, align: 16, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "clean_left_offset", scope: !2750, file: !926, line: 94, baseType: !1104, size: 16, align: 16, offset: 144)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "clean_right_offset", scope: !2750, file: !926, line: 95, baseType: !1104, size: 16, align: 16, offset: 160)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_range_index", scope: !2750, file: !926, line: 97, baseType: !988, size: 8, align: 8, offset: 176)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "color_spec_index", scope: !2750, file: !926, line: 98, baseType: !988, size: 8, align: 8, offset: 184)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2750, file: !926, line: 100, baseType: !979, size: 32, align: 32, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2750, file: !926, line: 101, baseType: !979, size: 32, align: 32, offset: 224)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !2750, file: !926, line: 103, baseType: !1004, size: 64, align: 32, offset: 256)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2750, file: !926, line: 104, baseType: !1004, size: 64, align: 32, offset: 320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2750, file: !926, line: 106, baseType: !473, size: 32, align: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !2750, file: !926, line: 107, baseType: !767, size: 32, align: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !2750, file: !926, line: 108, baseType: !773, size: 32, align: 32, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !2750, file: !926, line: 109, baseType: !791, size: 32, align: 32, offset: 480)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2750, file: !926, line: 110, baseType: !815, size: 32, align: 32, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2750, file: !926, line: 112, baseType: !2742, size: 64, align: 32, offset: 544)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !2750, file: !926, line: 113, baseType: !979, size: 32, align: 32, offset: 608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "seen_sequence_header", scope: !2672, file: !971, line: 143, baseType: !979, size: 32, align: 32, offset: 4544)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !2672, file: !971, line: 144, baseType: !1011, size: 64, align: 64, offset: 4608)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2672, file: !971, line: 145, baseType: !2779, size: 32256, align: 64, offset: 4672)
!2779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2780, size: 32256, align: 64, elements: !1753)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "Plane", file: !971, line: 124, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Plane", file: !971, line: 106, size: 10752, align: 64, elements: !2782)
!2782 = !{!2783, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "idwt", scope: !2781, file: !971, line: 107, baseType: !2784, size: 320, align: 64)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTPlane", file: !2785, line: 44, baseType: !2786)
!2785 = !DIFile(filename: "libavcodec/dirac_dwt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTPlane", file: !2785, line: 37, size: 320, align: 64, elements: !2787)
!2787 = !{!2788, !2789, !2790, !2791, !2792, !2793}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2786, file: !2785, line: 38, baseType: !979, size: 32, align: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2786, file: !2785, line: 39, baseType: !979, size: 32, align: 32, offset: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2786, file: !2785, line: 40, baseType: !979, size: 32, align: 32, offset: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2786, file: !2785, line: 41, baseType: !987, size: 64, align: 64, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "buf_base", scope: !2786, file: !2785, line: 42, baseType: !987, size: 64, align: 64, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2786, file: !2785, line: 43, baseType: !987, size: 64, align: 64, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2781, file: !971, line: 109, baseType: !979, size: 32, align: 32, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2781, file: !971, line: 110, baseType: !979, size: 32, align: 32, offset: 352)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2781, file: !971, line: 111, baseType: !1666, size: 64, align: 64, offset: 384)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "xblen", scope: !2781, file: !971, line: 114, baseType: !988, size: 8, align: 8, offset: 448)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "yblen", scope: !2781, file: !971, line: 115, baseType: !988, size: 8, align: 8, offset: 456)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "xbsep", scope: !2781, file: !971, line: 117, baseType: !988, size: 8, align: 8, offset: 464)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ybsep", scope: !2781, file: !971, line: 118, baseType: !988, size: 8, align: 8, offset: 472)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !2781, file: !971, line: 120, baseType: !988, size: 8, align: 8, offset: 480)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "yoffset", scope: !2781, file: !971, line: 121, baseType: !988, size: 8, align: 8, offset: 488)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "band", scope: !2781, file: !971, line: 123, baseType: !2804, size: 10240, align: 64, offset: 512)
!2804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2805, size: 10240, align: 64, elements: !2820)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubBand", file: !971, line: 104, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SubBand", file: !971, line: 90, size: 512, align: 64, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2818, !2819}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2806, file: !971, line: 91, baseType: !979, size: 32, align: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !2806, file: !971, line: 92, baseType: !979, size: 32, align: 32, offset: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2806, file: !971, line: 93, baseType: !979, size: 32, align: 32, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2806, file: !971, line: 94, baseType: !979, size: 32, align: 32, offset: 96)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2806, file: !971, line: 95, baseType: !979, size: 32, align: 32, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pshift", scope: !2806, file: !971, line: 96, baseType: !979, size: 32, align: 32, offset: 160)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !2806, file: !971, line: 97, baseType: !979, size: 32, align: 32, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !2806, file: !971, line: 98, baseType: !987, size: 64, align: 64, offset: 256)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2806, file: !971, line: 99, baseType: !2817, size: 64, align: 64, offset: 320)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64, align: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2806, file: !971, line: 102, baseType: !980, size: 32, align: 32, offset: 384)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_data", scope: !2806, file: !971, line: 103, baseType: !1119, size: 64, align: 64, offset: 448)
!2820 = !{!1801, !1284}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !2672, file: !971, line: 146, baseType: !979, size: 32, align: 32, offset: 36928)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !2672, file: !971, line: 147, baseType: !979, size: 32, align: 32, offset: 36960)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !2672, file: !971, line: 149, baseType: !979, size: 32, align: 32, offset: 36992)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "pshift", scope: !2672, file: !971, line: 150, baseType: !979, size: 32, align: 32, offset: 37024)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "zero_res", scope: !2672, file: !971, line: 152, baseType: !979, size: 32, align: 32, offset: 37056)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "is_arith", scope: !2672, file: !971, line: 153, baseType: !979, size: 32, align: 32, offset: 37088)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "core_syntax", scope: !2672, file: !971, line: 154, baseType: !979, size: 32, align: 32, offset: 37120)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !2672, file: !971, line: 155, baseType: !979, size: 32, align: 32, offset: 37152)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "hq_picture", scope: !2672, file: !971, line: 156, baseType: !979, size: 32, align: 32, offset: 37184)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ld_picture", scope: !2672, file: !971, line: 157, baseType: !979, size: 32, align: 32, offset: 37216)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "dc_prediction", scope: !2672, file: !971, line: 158, baseType: !979, size: 32, align: 32, offset: 37248)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "globalmc_flag", scope: !2672, file: !971, line: 159, baseType: !979, size: 32, align: 32, offset: 37280)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "num_refs", scope: !2672, file: !971, line: 160, baseType: !979, size: 32, align: 32, offset: 37312)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "wavelet_depth", scope: !2672, file: !971, line: 163, baseType: !980, size: 32, align: 32, offset: 37344)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "wavelet_idx", scope: !2672, file: !971, line: 164, baseType: !980, size: 32, align: 32, offset: 37376)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "old_delta_quant", scope: !2672, file: !971, line: 170, baseType: !980, size: 32, align: 32, offset: 37408)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "codeblock_mode", scope: !2672, file: !971, line: 171, baseType: !980, size: 32, align: 32, offset: 37440)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "num_x", scope: !2672, file: !971, line: 173, baseType: !980, size: 32, align: 32, offset: 37472)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "num_y", scope: !2672, file: !971, line: 174, baseType: !980, size: 32, align: 32, offset: 37504)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "thread_buf", scope: !2672, file: !971, line: 176, baseType: !987, size: 64, align: 64, offset: 37568)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "threads_num_buf", scope: !2672, file: !971, line: 177, baseType: !979, size: 32, align: 32, offset: 37632)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "thread_buf_size", scope: !2672, file: !971, line: 178, baseType: !979, size: 32, align: 32, offset: 37664)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "slice_params_buf", scope: !2672, file: !971, line: 180, baseType: !1109, size: 64, align: 64, offset: 37696)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "slice_params_num_buf", scope: !2672, file: !971, line: 181, baseType: !979, size: 32, align: 32, offset: 37760)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "codeblock", scope: !2672, file: !971, line: 186, baseType: !2846, size: 384, align: 32, offset: 37792)
!2846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2847, size: 384, align: 32, elements: !1893)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2672, file: !971, line: 183, size: 64, align: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2847, file: !971, line: 184, baseType: !980, size: 32, align: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2847, file: !971, line: 185, baseType: !980, size: 32, align: 32, offset: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "lowdelay", scope: !2672, file: !971, line: 191, baseType: !2852, size: 224, align: 32, offset: 38176)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2672, file: !971, line: 188, size: 224, align: 32, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2852, file: !971, line: 189, baseType: !1004, size: 64, align: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !2852, file: !971, line: 190, baseType: !2856, size: 160, align: 8, offset: 64)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, size: 160, align: 8, elements: !2820)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "highquality", scope: !2672, file: !971, line: 196, baseType: !2858, size: 128, align: 64, offset: 38400)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2672, file: !971, line: 193, size: 128, align: 64, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_bytes", scope: !2858, file: !971, line: 194, baseType: !980, size: 32, align: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "size_scaler", scope: !2858, file: !971, line: 195, baseType: !1022, size: 64, align: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "globalmc", scope: !2672, file: !971, line: 204, baseType: !2863, size: 640, align: 32, offset: 38528)
!2863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2864, size: 640, align: 32, elements: !1684)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2672, file: !971, line: 198, size: 320, align: 32, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "pan_tilt", scope: !2864, file: !971, line: 199, baseType: !2154, size: 64, align: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "zrs", scope: !2864, file: !971, line: 200, baseType: !2045, size: 128, align: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "perspective", scope: !2864, file: !971, line: 201, baseType: !2154, size: 64, align: 32, offset: 192)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "zrs_exp", scope: !2864, file: !971, line: 202, baseType: !980, size: 32, align: 32, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "perspective_exp", scope: !2864, file: !971, line: 203, baseType: !980, size: 32, align: 32, offset: 288)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "mv_precision", scope: !2672, file: !971, line: 207, baseType: !988, size: 8, align: 8, offset: 39168)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2672, file: !971, line: 208, baseType: !1694, size: 32, align: 16, offset: 39184)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "weight_log2denom", scope: !2672, file: !971, line: 209, baseType: !980, size: 32, align: 32, offset: 39232)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "blwidth", scope: !2672, file: !971, line: 211, baseType: !979, size: 32, align: 32, offset: 39264)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "blheight", scope: !2672, file: !971, line: 212, baseType: !979, size: 32, align: 32, offset: 39296)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "sbwidth", scope: !2672, file: !971, line: 213, baseType: !979, size: 32, align: 32, offset: 39328)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "sbheight", scope: !2672, file: !971, line: 214, baseType: !979, size: 32, align: 32, offset: 39360)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "sbsplit", scope: !2672, file: !971, line: 216, baseType: !987, size: 64, align: 64, offset: 39424)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "blmotion", scope: !2672, file: !971, line: 217, baseType: !2880, size: 64, align: 64, offset: 39488)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64, align: 64)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracBlock", file: !971, line: 88, baseType: !2882)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !971, line: 82, size: 80, align: 16, elements: !2883)
!2883 = !{!2884, !2891}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2882, file: !971, line: 86, baseType: !2885, size: 64, align: 16)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2882, file: !971, line: 83, size: 64, align: 16, elements: !2886)
!2886 = !{!2887, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2885, file: !971, line: 84, baseType: !2888, size: 64, align: 16)
!2888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 64, align: 16, elements: !2020)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !2885, file: !971, line: 85, baseType: !2890, size: 48, align: 16)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 48, align: 16, elements: !1753)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2882, file: !971, line: 87, baseType: !988, size: 8, align: 8, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !2672, file: !971, line: 219, baseType: !2627, size: 256, align: 64, offset: 39552)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer_base", scope: !2672, file: !971, line: 220, baseType: !987, size: 64, align: 64, offset: 39808)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "mctmp", scope: !2672, file: !971, line: 222, baseType: !1483, size: 64, align: 64, offset: 39872)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "mcscratch", scope: !2672, file: !971, line: 223, baseType: !987, size: 64, align: 64, offset: 39936)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_stride", scope: !2672, file: !971, line: 224, baseType: !979, size: 32, align: 32, offset: 40000)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "obmc_weight", scope: !2672, file: !971, line: 226, baseType: !2898, size: 24576, align: 8, offset: 40064)
!2898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !988, size: 24576, align: 8, elements: !2899)
!2899 = !{!1754, !2900}
!2900 = !DISubrange(count: 1024)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !2672, file: !971, line: 228, baseType: !2902, size: 256, align: 64, offset: 64640)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2688, size: 256, align: 64, elements: !1283)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !2672, file: !971, line: 229, baseType: !2902, size: 256, align: 64, offset: 64896)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "add_obmc", scope: !2672, file: !971, line: 230, baseType: !2705, size: 64, align: 64, offset: 65152)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "weight_func", scope: !2672, file: !971, line: 231, baseType: !2715, size: 64, align: 64, offset: 65216)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "biweight_func", scope: !2672, file: !971, line: 232, baseType: !2721, size: 64, align: 64, offset: 65280)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture", scope: !2672, file: !971, line: 234, baseType: !2908, size: 64, align: 64, offset: 65344)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64, align: 64)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracFrame", file: !971, line: 80, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !971, line: 74, size: 1792, align: 64, elements: !2911)
!2911 = !{!2912, !2913, !2914, !2916, !2917}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "avframe", scope: !2910, file: !971, line: 75, baseType: !981, size: 64, align: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "interpolated", scope: !2910, file: !971, line: 76, baseType: !1752, size: 96, align: 32, offset: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "hpel", scope: !2910, file: !971, line: 77, baseType: !2915, size: 768, align: 64, offset: 192)
!2915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 768, align: 64, elements: !2692)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_base", scope: !2910, file: !971, line: 78, baseType: !2915, size: 768, align: 64, offset: 960)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !2910, file: !971, line: 79, baseType: !979, size: 32, align: 32, offset: 1728)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ref_pics", scope: !2672, file: !971, line: 235, baseType: !2919, size: 128, align: 64, offset: 65408)
!2919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2908, size: 128, align: 64, elements: !1684)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ref_frames", scope: !2672, file: !971, line: 237, baseType: !2921, size: 576, align: 64, offset: 65536)
!2921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2908, size: 576, align: 64, elements: !2922)
!2922 = !{!2923}
!2923 = !DISubrange(count: 9)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "delay_frames", scope: !2672, file: !971, line: 238, baseType: !2925, size: 384, align: 64, offset: 66112)
!2925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2908, size: 384, align: 64, elements: !1893)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "all_frames", scope: !2672, file: !971, line: 239, baseType: !2927, size: 25088, align: 64, offset: 66496)
!2927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 25088, align: 64, elements: !2928)
!2928 = !{!2929}
!2929 = !DISubrange(count: 14)
!2930 = !{}
!2931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1120, size: 32, align: 8, elements: !1283)
!2932 = distinct !DIGlobalVariable(name: "avgsplit", scope: !2933, file: !971, line: 1327, type: !2936, isLocal: true, isDefinition: true, variable: [7 x i8]* @pred_sbsplit.avgsplit)
!2933 = distinct !DISubprogram(name: "pred_sbsplit", scope: !971, file: !971, line: 1325, type: !2934, isLocal: true, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!979, !987, !979, !979, !979}
!2936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1120, size: 56, align: 8, elements: !2937)
!2937 = !{!2938}
!2938 = !DISubrange(count: 7)
!2939 = distinct !DIGlobalVariable(name: "epel_weights", scope: !0, file: !971, line: 1612, type: !2940, isLocal: true, isDefinition: true, variable: [4 x [4 x [4 x i8]]]* @epel_weights)
!2940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1120, size: 512, align: 8, elements: !2941)
!2941 = !{!1284, !1284, !1284}
!2942 = !{i32 2, !"Dwarf Version", i32 4}
!2943 = !{i32 2, !"Debug Info Version", i32 3}
!2944 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2945 = distinct !DISubprogram(name: "dirac_decode_init", scope: !971, file: !971, line: 386, type: !1249, isLocal: true, isDefinition: true, scopeLine: 387, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!2946 = !DILocalVariable(name: "avctx", arg: 1, scope: !2945, file: !971, line: 386, type: !1251)
!2947 = !DIExpression()
!2948 = !DILocation(line: 386, column: 68, scope: !2945)
!2949 = !DILocalVariable(name: "s", scope: !2945, file: !971, line: 388, type: !2670)
!2950 = !DILocation(line: 388, column: 19, scope: !2945)
!2951 = !DILocation(line: 388, column: 23, scope: !2945)
!2952 = !DILocation(line: 388, column: 30, scope: !2945)
!2953 = !DILocalVariable(name: "i", scope: !2945, file: !971, line: 389, type: !979)
!2954 = !DILocation(line: 389, column: 9, scope: !2945)
!2955 = !DILocalVariable(name: "ret", scope: !2945, file: !971, line: 389, type: !979)
!2956 = !DILocation(line: 389, column: 12, scope: !2945)
!2957 = !DILocation(line: 391, column: 16, scope: !2945)
!2958 = !DILocation(line: 391, column: 5, scope: !2945)
!2959 = !DILocation(line: 391, column: 8, scope: !2945)
!2960 = !DILocation(line: 391, column: 14, scope: !2945)
!2961 = !DILocation(line: 392, column: 5, scope: !2945)
!2962 = !DILocation(line: 392, column: 8, scope: !2945)
!2963 = !DILocation(line: 392, column: 21, scope: !2945)
!2964 = !DILocation(line: 394, column: 5, scope: !2945)
!2965 = !DILocation(line: 394, column: 8, scope: !2945)
!2966 = !DILocation(line: 394, column: 19, scope: !2945)
!2967 = !DILocation(line: 395, column: 5, scope: !2945)
!2968 = !DILocation(line: 395, column: 8, scope: !2945)
!2969 = !DILocation(line: 395, column: 24, scope: !2945)
!2970 = !DILocation(line: 396, column: 5, scope: !2945)
!2971 = !DILocation(line: 396, column: 8, scope: !2945)
!2972 = !DILocation(line: 396, column: 24, scope: !2945)
!2973 = !DILocation(line: 398, column: 34, scope: !2945)
!2974 = !DILocation(line: 398, column: 37, scope: !2945)
!2975 = !DILocation(line: 398, column: 5, scope: !2945)
!2976 = !DILocation(line: 399, column: 23, scope: !2945)
!2977 = !DILocation(line: 399, column: 26, scope: !2945)
!2978 = !DILocation(line: 399, column: 5, scope: !2945)
!2979 = !DILocation(line: 400, column: 30, scope: !2945)
!2980 = !DILocation(line: 400, column: 33, scope: !2945)
!2981 = !DILocation(line: 400, column: 44, scope: !2945)
!2982 = !DILocation(line: 400, column: 5, scope: !2945)
!2983 = !DILocation(line: 401, column: 23, scope: !2945)
!2984 = !DILocation(line: 401, column: 26, scope: !2945)
!2985 = !DILocation(line: 401, column: 5, scope: !2945)
!2986 = !DILocation(line: 403, column: 12, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2945, file: !971, line: 403, column: 5)
!2988 = !DILocation(line: 403, column: 10, scope: !2987)
!2989 = !DILocation(line: 403, column: 17, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2991, file: !971, discriminator: 1)
!2991 = distinct !DILexicalBlock(scope: !2987, file: !971, line: 403, column: 5)
!2992 = !DILocation(line: 403, column: 19, scope: !2990)
!2993 = !DILocation(line: 403, column: 5, scope: !2990)
!2994 = !DILocation(line: 404, column: 36, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2991, file: !971, line: 403, column: 39)
!2996 = !DILocation(line: 404, column: 23, scope: !2995)
!2997 = !DILocation(line: 404, column: 9, scope: !2995)
!2998 = !DILocation(line: 404, column: 12, scope: !2995)
!2999 = !DILocation(line: 404, column: 26, scope: !2995)
!3000 = !DILocation(line: 404, column: 34, scope: !2995)
!3001 = !DILocation(line: 405, column: 28, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2995, file: !971, line: 405, column: 13)
!3003 = !DILocation(line: 405, column: 14, scope: !3002)
!3004 = !DILocation(line: 405, column: 17, scope: !3002)
!3005 = !DILocation(line: 405, column: 31, scope: !3002)
!3006 = !DILocation(line: 405, column: 13, scope: !2995)
!3007 = !DILocation(line: 406, column: 13, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3002, file: !971, line: 405, column: 40)
!3009 = !DILocation(line: 406, column: 20, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !3008, file: !971, discriminator: 1)
!3011 = !DILocation(line: 406, column: 22, scope: !3010)
!3012 = !DILocation(line: 406, column: 13, scope: !3010)
!3013 = !DILocation(line: 407, column: 46, scope: !3008)
!3014 = !DILocation(line: 407, column: 32, scope: !3008)
!3015 = !DILocation(line: 407, column: 35, scope: !3008)
!3016 = !DILocation(line: 407, column: 51, scope: !3008)
!3017 = !DILocation(line: 407, column: 17, scope: !3008)
!3018 = !DILocation(line: 406, column: 13, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3008, file: !971, discriminator: 2)
!3020 = distinct !{!3020, !3007}
!3021 = !DILocation(line: 408, column: 13, scope: !3008)
!3022 = !DILocation(line: 410, column: 5, scope: !2995)
!3023 = !DILocation(line: 403, column: 35, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !2991, file: !971, discriminator: 2)
!3025 = !DILocation(line: 403, column: 5, scope: !3024)
!3026 = distinct !{!3026, !3027}
!3027 = !DILocation(line: 403, column: 5, scope: !2945)
!3028 = !DILocation(line: 411, column: 11, scope: !2945)
!3029 = !DILocation(line: 411, column: 9, scope: !2945)
!3030 = !DILocation(line: 412, column: 9, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2945, file: !971, line: 412, column: 9)
!3032 = !DILocation(line: 412, column: 13, scope: !3031)
!3033 = !DILocation(line: 412, column: 9, scope: !2945)
!3034 = !DILocation(line: 413, column: 9, scope: !3031)
!3035 = !DILocation(line: 415, column: 5, scope: !2945)
!3036 = !DILocation(line: 416, column: 1, scope: !2945)
!3037 = distinct !DISubprogram(name: "dirac_decode_frame", scope: !971, file: !971, line: 2255, type: !2640, isLocal: true, isDefinition: true, scopeLine: 2256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3038 = !DILocalVariable(name: "x", arg: 1, scope: !3039, file: !3040, line: 66, type: !1098)
!3039 = distinct !DISubprogram(name: "av_bswap32", scope: !3040, file: !3040, line: 66, type: !3041, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3040 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!1098, !1098}
!3043 = !DILocation(line: 66, column: 98, scope: !3039, inlinedAt: !3044)
!3044 = distinct !DILocation(line: 2292, column: 26, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !971, line: 2279, column: 14)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !971, line: 2279, column: 5)
!3047 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2279, column: 5)
!3048 = !DILocalVariable(name: "avctx", arg: 1, scope: !3037, file: !971, line: 2255, type: !1251)
!3049 = !DILocation(line: 2255, column: 47, scope: !3037)
!3050 = !DILocalVariable(name: "data", arg: 2, scope: !3037, file: !971, line: 2255, type: !1019)
!3051 = !DILocation(line: 2255, column: 60, scope: !3037)
!3052 = !DILocalVariable(name: "got_frame", arg: 3, scope: !3037, file: !971, line: 2255, type: !1446)
!3053 = !DILocation(line: 2255, column: 71, scope: !3037)
!3054 = !DILocalVariable(name: "pkt", arg: 4, scope: !3037, file: !971, line: 2255, type: !1300)
!3055 = !DILocation(line: 2255, column: 92, scope: !3037)
!3056 = !DILocalVariable(name: "s", scope: !3037, file: !971, line: 2257, type: !2670)
!3057 = !DILocation(line: 2257, column: 19, scope: !3037)
!3058 = !DILocation(line: 2257, column: 23, scope: !3037)
!3059 = !DILocation(line: 2257, column: 30, scope: !3037)
!3060 = !DILocalVariable(name: "picture", scope: !3037, file: !971, line: 2258, type: !981)
!3061 = !DILocation(line: 2258, column: 14, scope: !3037)
!3062 = !DILocation(line: 2258, column: 24, scope: !3037)
!3063 = !DILocalVariable(name: "buf", scope: !3037, file: !971, line: 2259, type: !987)
!3064 = !DILocation(line: 2259, column: 14, scope: !3037)
!3065 = !DILocation(line: 2259, column: 20, scope: !3037)
!3066 = !DILocation(line: 2259, column: 25, scope: !3037)
!3067 = !DILocalVariable(name: "buf_size", scope: !3037, file: !971, line: 2260, type: !979)
!3068 = !DILocation(line: 2260, column: 9, scope: !3037)
!3069 = !DILocation(line: 2260, column: 20, scope: !3037)
!3070 = !DILocation(line: 2260, column: 25, scope: !3037)
!3071 = !DILocalVariable(name: "i", scope: !3037, file: !971, line: 2261, type: !979)
!3072 = !DILocation(line: 2261, column: 9, scope: !3037)
!3073 = !DILocalVariable(name: "buf_idx", scope: !3037, file: !971, line: 2261, type: !979)
!3074 = !DILocation(line: 2261, column: 12, scope: !3037)
!3075 = !DILocalVariable(name: "ret", scope: !3037, file: !971, line: 2262, type: !979)
!3076 = !DILocation(line: 2262, column: 9, scope: !3037)
!3077 = !DILocalVariable(name: "data_unit_size", scope: !3037, file: !971, line: 2263, type: !980)
!3078 = !DILocation(line: 2263, column: 14, scope: !3037)
!3079 = !DILocation(line: 2266, column: 12, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2266, column: 5)
!3081 = !DILocation(line: 2266, column: 10, scope: !3080)
!3082 = !DILocation(line: 2266, column: 17, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3084, file: !971, discriminator: 1)
!3084 = distinct !DILexicalBlock(scope: !3080, file: !971, line: 2266, column: 5)
!3085 = !DILocation(line: 2266, column: 19, scope: !3083)
!3086 = !DILocation(line: 2266, column: 5, scope: !3083)
!3087 = !DILocation(line: 2267, column: 27, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3084, file: !971, line: 2267, column: 13)
!3089 = !DILocation(line: 2267, column: 13, scope: !3088)
!3090 = !DILocation(line: 2267, column: 16, scope: !3088)
!3091 = !DILocation(line: 2267, column: 30, scope: !3088)
!3092 = !DILocation(line: 2267, column: 39, scope: !3088)
!3093 = !DILocation(line: 2267, column: 47, scope: !3088)
!3094 = !DILocation(line: 2267, column: 65, scope: !3095)
!3095 = !DILexicalBlockFile(scope: !3088, file: !971, discriminator: 1)
!3096 = !DILocation(line: 2267, column: 51, scope: !3095)
!3097 = !DILocation(line: 2267, column: 54, scope: !3095)
!3098 = !DILocation(line: 2267, column: 68, scope: !3095)
!3099 = !DILocation(line: 2267, column: 13, scope: !3095)
!3100 = !DILocation(line: 2268, column: 42, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3088, file: !971, line: 2267, column: 79)
!3102 = !DILocation(line: 2268, column: 28, scope: !3101)
!3103 = !DILocation(line: 2268, column: 31, scope: !3101)
!3104 = !DILocation(line: 2268, column: 45, scope: !3101)
!3105 = !DILocation(line: 2268, column: 13, scope: !3101)
!3106 = !DILocation(line: 2269, column: 34, scope: !3101)
!3107 = !DILocation(line: 2269, column: 20, scope: !3101)
!3108 = !DILocation(line: 2269, column: 23, scope: !3101)
!3109 = !DILocation(line: 2269, column: 37, scope: !3101)
!3110 = !DILocation(line: 2269, column: 13, scope: !3101)
!3111 = !DILocation(line: 2270, column: 9, scope: !3101)
!3112 = !DILocation(line: 2267, column: 68, scope: !3113)
!3113 = !DILexicalBlockFile(scope: !3088, file: !971, discriminator: 2)
!3114 = !DILocation(line: 2266, column: 35, scope: !3115)
!3115 = !DILexicalBlockFile(scope: !3084, file: !971, discriminator: 2)
!3116 = !DILocation(line: 2266, column: 5, scope: !3115)
!3117 = distinct !{!3117, !3118}
!3118 = !DILocation(line: 2266, column: 5, scope: !3037)
!3119 = !DILocation(line: 2272, column: 5, scope: !3037)
!3120 = !DILocation(line: 2272, column: 8, scope: !3037)
!3121 = !DILocation(line: 2272, column: 24, scope: !3037)
!3122 = !DILocation(line: 2273, column: 6, scope: !3037)
!3123 = !DILocation(line: 2273, column: 16, scope: !3037)
!3124 = !DILocation(line: 2276, column: 9, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2276, column: 9)
!3126 = !DILocation(line: 2276, column: 18, scope: !3125)
!3127 = !DILocation(line: 2276, column: 9, scope: !3037)
!3128 = !DILocation(line: 2277, column: 32, scope: !3125)
!3129 = !DILocation(line: 2277, column: 46, scope: !3125)
!3130 = !DILocation(line: 2277, column: 35, scope: !3125)
!3131 = !DILocation(line: 2277, column: 52, scope: !3125)
!3132 = !DILocation(line: 2277, column: 16, scope: !3125)
!3133 = !DILocation(line: 2277, column: 9, scope: !3125)
!3134 = !DILocation(line: 2279, column: 5, scope: !3037)
!3135 = !DILocation(line: 2283, column: 9, scope: !3045)
!3136 = !DILocation(line: 2283, column: 16, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3138, file: !971, discriminator: 1)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !971, line: 2283, column: 9)
!3139 = distinct !DILexicalBlock(scope: !3045, file: !971, line: 2283, column: 9)
!3140 = !DILocation(line: 2283, column: 24, scope: !3137)
!3141 = !DILocation(line: 2283, column: 31, scope: !3137)
!3142 = !DILocation(line: 2283, column: 29, scope: !3137)
!3143 = !DILocation(line: 2283, column: 9, scope: !3137)
!3144 = !DILocation(line: 2284, column: 21, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3146, file: !971, line: 2284, column: 17)
!3146 = distinct !DILexicalBlock(scope: !3138, file: !971, line: 2283, column: 52)
!3147 = !DILocation(line: 2284, column: 17, scope: !3145)
!3148 = !DILocation(line: 2284, column: 31, scope: !3145)
!3149 = !DILocation(line: 2284, column: 38, scope: !3145)
!3150 = !DILocation(line: 2284, column: 45, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3145, file: !971, discriminator: 1)
!3152 = !DILocation(line: 2284, column: 52, scope: !3151)
!3153 = !DILocation(line: 2284, column: 41, scope: !3151)
!3154 = !DILocation(line: 2284, column: 56, scope: !3151)
!3155 = !DILocation(line: 2284, column: 63, scope: !3151)
!3156 = !DILocation(line: 2285, column: 21, scope: !3145)
!3157 = !DILocation(line: 2285, column: 28, scope: !3145)
!3158 = !DILocation(line: 2285, column: 17, scope: !3145)
!3159 = !DILocation(line: 2285, column: 32, scope: !3145)
!3160 = !DILocation(line: 2285, column: 39, scope: !3145)
!3161 = !DILocation(line: 2285, column: 46, scope: !3151)
!3162 = !DILocation(line: 2285, column: 53, scope: !3151)
!3163 = !DILocation(line: 2285, column: 42, scope: !3151)
!3164 = !DILocation(line: 2285, column: 57, scope: !3151)
!3165 = !DILocation(line: 2284, column: 17, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3146, file: !971, discriminator: 2)
!3167 = !DILocation(line: 2286, column: 17, scope: !3145)
!3168 = !DILocation(line: 2287, column: 9, scope: !3146)
!3169 = !DILocation(line: 2283, column: 48, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3138, file: !971, discriminator: 2)
!3171 = !DILocation(line: 2283, column: 9, scope: !3170)
!3172 = distinct !{!3172, !3135}
!3173 = !DILocation(line: 2289, column: 13, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3045, file: !971, line: 2289, column: 13)
!3175 = !DILocation(line: 2289, column: 21, scope: !3174)
!3176 = !DILocation(line: 2289, column: 29, scope: !3174)
!3177 = !DILocation(line: 2289, column: 26, scope: !3174)
!3178 = !DILocation(line: 2289, column: 13, scope: !3045)
!3179 = !DILocation(line: 2290, column: 13, scope: !3174)
!3180 = !DILocation(line: 2292, column: 69, scope: !3045)
!3181 = !DILocation(line: 2292, column: 73, scope: !3045)
!3182 = !DILocation(line: 2292, column: 72, scope: !3045)
!3183 = !DILocation(line: 2292, column: 80, scope: !3045)
!3184 = !DILocation(line: 2292, column: 86, scope: !3045)
!3185 = !DILocation(line: 2292, column: 26, scope: !3045)
!3186 = !DILocation(line: 68, column: 16, scope: !3039, inlinedAt: !3044)
!3187 = !DILocation(line: 68, column: 19, scope: !3039, inlinedAt: !3044)
!3188 = !DILocation(line: 68, column: 24, scope: !3039, inlinedAt: !3044)
!3189 = !DILocation(line: 68, column: 38, scope: !3039, inlinedAt: !3044)
!3190 = !DILocation(line: 68, column: 41, scope: !3039, inlinedAt: !3044)
!3191 = !DILocation(line: 68, column: 46, scope: !3039, inlinedAt: !3044)
!3192 = !DILocation(line: 68, column: 34, scope: !3039, inlinedAt: !3044)
!3193 = !DILocation(line: 68, column: 57, scope: !3039, inlinedAt: !3044)
!3194 = !DILocation(line: 68, column: 69, scope: !3039, inlinedAt: !3044)
!3195 = !DILocation(line: 68, column: 72, scope: !3039, inlinedAt: !3044)
!3196 = !DILocation(line: 68, column: 79, scope: !3039, inlinedAt: !3044)
!3197 = !DILocation(line: 68, column: 84, scope: !3039, inlinedAt: !3044)
!3198 = !DILocation(line: 68, column: 99, scope: !3039, inlinedAt: !3044)
!3199 = !DILocation(line: 68, column: 102, scope: !3039, inlinedAt: !3044)
!3200 = !DILocation(line: 68, column: 109, scope: !3039, inlinedAt: !3044)
!3201 = !DILocation(line: 68, column: 114, scope: !3039, inlinedAt: !3044)
!3202 = !DILocation(line: 68, column: 94, scope: !3039, inlinedAt: !3044)
!3203 = !DILocation(line: 68, column: 63, scope: !3039, inlinedAt: !3044)
!3204 = !DILocation(line: 2292, column: 24, scope: !3045)
!3205 = !DILocation(line: 2293, column: 13, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3045, file: !971, line: 2293, column: 13)
!3207 = !DILocation(line: 2293, column: 30, scope: !3206)
!3208 = !DILocation(line: 2293, column: 41, scope: !3206)
!3209 = !DILocation(line: 2293, column: 39, scope: !3206)
!3210 = !DILocation(line: 2293, column: 28, scope: !3206)
!3211 = !DILocation(line: 2293, column: 49, scope: !3206)
!3212 = !DILocation(line: 2293, column: 53, scope: !3213)
!3213 = !DILexicalBlockFile(scope: !3206, file: !971, discriminator: 1)
!3214 = !DILocation(line: 2293, column: 13, scope: !3213)
!3215 = !DILocation(line: 2294, column: 16, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3217, file: !971, line: 2294, column: 16)
!3217 = distinct !DILexicalBlock(scope: !3206, file: !971, line: 2293, column: 69)
!3218 = !DILocation(line: 2294, column: 33, scope: !3216)
!3219 = !DILocation(line: 2294, column: 44, scope: !3216)
!3220 = !DILocation(line: 2294, column: 42, scope: !3216)
!3221 = !DILocation(line: 2294, column: 31, scope: !3216)
!3222 = !DILocation(line: 2294, column: 16, scope: !3217)
!3223 = !DILocation(line: 2295, column: 20, scope: !3216)
!3224 = !DILocation(line: 2295, column: 23, scope: !3216)
!3225 = !DILocation(line: 2297, column: 20, scope: !3216)
!3226 = !DILocation(line: 2295, column: 13, scope: !3216)
!3227 = !DILocation(line: 2298, column: 21, scope: !3217)
!3228 = !DILocation(line: 2299, column: 13, scope: !3217)
!3229 = distinct !{!3229, !3134}
!3230 = !DILocation(line: 2302, column: 38, scope: !3045)
!3231 = !DILocation(line: 2302, column: 45, scope: !3045)
!3232 = !DILocation(line: 2302, column: 49, scope: !3045)
!3233 = !DILocation(line: 2302, column: 48, scope: !3045)
!3234 = !DILocation(line: 2302, column: 58, scope: !3045)
!3235 = !DILocation(line: 2302, column: 15, scope: !3045)
!3236 = !DILocation(line: 2302, column: 13, scope: !3045)
!3237 = !DILocation(line: 2303, column: 13, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3045, file: !971, line: 2303, column: 13)
!3239 = !DILocation(line: 2303, column: 17, scope: !3238)
!3240 = !DILocation(line: 2303, column: 13, scope: !3045)
!3241 = !DILocation(line: 2305, column: 20, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !971, line: 2304, column: 9)
!3243 = !DILocation(line: 2305, column: 23, scope: !3242)
!3244 = !DILocation(line: 2305, column: 13, scope: !3242)
!3245 = !DILocation(line: 2306, column: 20, scope: !3242)
!3246 = !DILocation(line: 2306, column: 13, scope: !3242)
!3247 = !DILocation(line: 2308, column: 20, scope: !3045)
!3248 = !DILocation(line: 2308, column: 17, scope: !3045)
!3249 = !DILocation(line: 2279, column: 5, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3046, file: !971, discriminator: 1)
!3251 = !DILocation(line: 2311, column: 10, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2311, column: 9)
!3253 = !DILocation(line: 2311, column: 13, scope: !3252)
!3254 = !DILocation(line: 2311, column: 9, scope: !3037)
!3255 = !DILocation(line: 2312, column: 16, scope: !3252)
!3256 = !DILocation(line: 2312, column: 9, scope: !3252)
!3257 = !DILocation(line: 2314, column: 9, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2314, column: 9)
!3259 = !DILocation(line: 2314, column: 12, scope: !3258)
!3260 = !DILocation(line: 2314, column: 29, scope: !3258)
!3261 = !DILocation(line: 2314, column: 38, scope: !3258)
!3262 = !DILocation(line: 2314, column: 63, scope: !3258)
!3263 = !DILocation(line: 2314, column: 66, scope: !3258)
!3264 = !DILocation(line: 2314, column: 61, scope: !3258)
!3265 = !DILocation(line: 2314, column: 9, scope: !3037)
!3266 = !DILocalVariable(name: "delayed_frame", scope: !3267, file: !971, line: 2315, type: !2908)
!3267 = distinct !DILexicalBlock(scope: !3258, file: !971, line: 2314, column: 80)
!3268 = !DILocation(line: 2315, column: 21, scope: !3267)
!3269 = !DILocation(line: 2315, column: 50, scope: !3267)
!3270 = !DILocation(line: 2315, column: 53, scope: !3267)
!3271 = !DILocation(line: 2315, column: 67, scope: !3267)
!3272 = !DILocation(line: 2315, column: 70, scope: !3267)
!3273 = !DILocation(line: 2315, column: 37, scope: !3267)
!3274 = !DILocation(line: 2317, column: 9, scope: !3267)
!3275 = !DILocation(line: 2317, column: 12, scope: !3267)
!3276 = !DILocation(line: 2317, column: 29, scope: !3267)
!3277 = !DILocation(line: 2317, column: 39, scope: !3267)
!3278 = !DILocation(line: 2319, column: 23, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3267, file: !971, line: 2319, column: 13)
!3280 = !DILocation(line: 2319, column: 26, scope: !3279)
!3281 = !DILocation(line: 2319, column: 43, scope: !3279)
!3282 = !DILocation(line: 2319, column: 46, scope: !3279)
!3283 = !DILocation(line: 2319, column: 13, scope: !3279)
!3284 = !DILocation(line: 2319, column: 13, scope: !3267)
!3285 = !DILocalVariable(name: "min_num", scope: !3286, file: !971, line: 2320, type: !979)
!3286 = distinct !DILexicalBlock(scope: !3279, file: !971, line: 2319, column: 64)
!3287 = !DILocation(line: 2320, column: 17, scope: !3286)
!3288 = !DILocation(line: 2320, column: 27, scope: !3286)
!3289 = !DILocation(line: 2320, column: 30, scope: !3286)
!3290 = !DILocation(line: 2320, column: 47, scope: !3286)
!3291 = !DILocation(line: 2320, column: 56, scope: !3286)
!3292 = !DILocation(line: 2322, column: 20, scope: !3286)
!3293 = !DILocation(line: 2322, column: 13, scope: !3286)
!3294 = !DILocation(line: 2324, column: 20, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3286, file: !971, line: 2324, column: 13)
!3296 = !DILocation(line: 2324, column: 18, scope: !3295)
!3297 = !DILocation(line: 2324, column: 41, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3299, file: !971, discriminator: 1)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !971, line: 2324, column: 13)
!3300 = !DILocation(line: 2324, column: 25, scope: !3298)
!3301 = !DILocation(line: 2324, column: 28, scope: !3298)
!3302 = !DILocation(line: 2324, column: 13, scope: !3298)
!3303 = !DILocation(line: 2325, column: 37, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3299, file: !971, line: 2325, column: 21)
!3305 = !DILocation(line: 2325, column: 21, scope: !3304)
!3306 = !DILocation(line: 2325, column: 24, scope: !3304)
!3307 = !DILocation(line: 2325, column: 41, scope: !3304)
!3308 = !DILocation(line: 2325, column: 50, scope: !3304)
!3309 = !DILocation(line: 2325, column: 75, scope: !3304)
!3310 = !DILocation(line: 2325, column: 73, scope: !3304)
!3311 = !DILocation(line: 2325, column: 21, scope: !3299)
!3312 = !DILocation(line: 2326, column: 47, scope: !3304)
!3313 = !DILocation(line: 2326, column: 31, scope: !3304)
!3314 = !DILocation(line: 2326, column: 34, scope: !3304)
!3315 = !DILocation(line: 2326, column: 51, scope: !3304)
!3316 = !DILocation(line: 2326, column: 60, scope: !3304)
!3317 = !DILocation(line: 2326, column: 29, scope: !3304)
!3318 = !DILocation(line: 2326, column: 21, scope: !3304)
!3319 = !DILocation(line: 2325, column: 75, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3304, file: !971, discriminator: 1)
!3321 = !DILocation(line: 2324, column: 46, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3299, file: !971, discriminator: 2)
!3323 = !DILocation(line: 2324, column: 13, scope: !3322)
!3324 = distinct !{!3324, !3325}
!3325 = !DILocation(line: 2324, column: 13, scope: !3286)
!3326 = !DILocation(line: 2328, column: 42, scope: !3286)
!3327 = !DILocation(line: 2328, column: 45, scope: !3286)
!3328 = !DILocation(line: 2328, column: 59, scope: !3286)
!3329 = !DILocation(line: 2328, column: 29, scope: !3286)
!3330 = !DILocation(line: 2328, column: 27, scope: !3286)
!3331 = !DILocation(line: 2329, column: 23, scope: !3286)
!3332 = !DILocation(line: 2329, column: 26, scope: !3286)
!3333 = !DILocation(line: 2329, column: 43, scope: !3286)
!3334 = !DILocation(line: 2329, column: 46, scope: !3286)
!3335 = !DILocation(line: 2329, column: 13, scope: !3286)
!3336 = !DILocation(line: 2330, column: 9, scope: !3286)
!3337 = !DILocation(line: 2332, column: 13, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3267, file: !971, line: 2332, column: 13)
!3339 = !DILocation(line: 2332, column: 13, scope: !3267)
!3340 = !DILocation(line: 2333, column: 13, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3338, file: !971, line: 2332, column: 28)
!3342 = !DILocation(line: 2333, column: 28, scope: !3341)
!3343 = !DILocation(line: 2333, column: 38, scope: !3341)
!3344 = !DILocation(line: 2334, column: 34, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3341, file: !971, line: 2334, column: 16)
!3346 = !DILocation(line: 2334, column: 40, scope: !3345)
!3347 = !DILocation(line: 2334, column: 55, scope: !3345)
!3348 = !DILocation(line: 2334, column: 21, scope: !3345)
!3349 = !DILocation(line: 2334, column: 20, scope: !3345)
!3350 = !DILocation(line: 2334, column: 65, scope: !3345)
!3351 = !DILocation(line: 2334, column: 16, scope: !3341)
!3352 = !DILocation(line: 2335, column: 24, scope: !3345)
!3353 = !DILocation(line: 2335, column: 17, scope: !3345)
!3354 = !DILocation(line: 2336, column: 14, scope: !3341)
!3355 = !DILocation(line: 2336, column: 24, scope: !3341)
!3356 = !DILocation(line: 2337, column: 9, scope: !3341)
!3357 = !DILocation(line: 2338, column: 5, scope: !3267)
!3358 = !DILocation(line: 2338, column: 16, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !3360, file: !971, discriminator: 1)
!3360 = distinct !DILexicalBlock(scope: !3258, file: !971, line: 2338, column: 16)
!3361 = !DILocation(line: 2338, column: 19, scope: !3359)
!3362 = !DILocation(line: 2338, column: 36, scope: !3359)
!3363 = !DILocation(line: 2338, column: 45, scope: !3359)
!3364 = !DILocation(line: 2338, column: 71, scope: !3359)
!3365 = !DILocation(line: 2338, column: 74, scope: !3359)
!3366 = !DILocation(line: 2338, column: 68, scope: !3359)
!3367 = !DILocation(line: 2340, column: 30, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !971, line: 2340, column: 12)
!3369 = distinct !DILexicalBlock(scope: !3360, file: !971, line: 2338, column: 88)
!3370 = !DILocation(line: 2340, column: 36, scope: !3368)
!3371 = !DILocation(line: 2340, column: 39, scope: !3368)
!3372 = !DILocation(line: 2340, column: 56, scope: !3368)
!3373 = !DILocation(line: 2340, column: 17, scope: !3368)
!3374 = !DILocation(line: 2340, column: 16, scope: !3368)
!3375 = !DILocation(line: 2340, column: 66, scope: !3368)
!3376 = !DILocation(line: 2340, column: 12, scope: !3369)
!3377 = !DILocation(line: 2341, column: 20, scope: !3368)
!3378 = !DILocation(line: 2341, column: 13, scope: !3368)
!3379 = !DILocation(line: 2342, column: 10, scope: !3369)
!3380 = !DILocation(line: 2342, column: 20, scope: !3369)
!3381 = !DILocation(line: 2343, column: 5, scope: !3369)
!3382 = !DILocation(line: 2345, column: 10, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3037, file: !971, line: 2345, column: 9)
!3384 = !DILocation(line: 2345, column: 9, scope: !3383)
!3385 = !DILocation(line: 2345, column: 9, scope: !3037)
!3386 = !DILocation(line: 2346, column: 27, scope: !3383)
!3387 = !DILocation(line: 2346, column: 36, scope: !3383)
!3388 = !DILocation(line: 2346, column: 59, scope: !3383)
!3389 = !DILocation(line: 2346, column: 9, scope: !3383)
!3390 = !DILocation(line: 2346, column: 12, scope: !3383)
!3391 = !DILocation(line: 2346, column: 25, scope: !3383)
!3392 = !DILocation(line: 2348, column: 12, scope: !3037)
!3393 = !DILocation(line: 2348, column: 5, scope: !3037)
!3394 = !DILocation(line: 2349, column: 1, scope: !3037)
!3395 = distinct !DISubprogram(name: "dirac_decode_end", scope: !971, file: !971, line: 426, type: !1249, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3396 = !DILocalVariable(name: "avctx", arg: 1, scope: !3395, file: !971, line: 426, type: !1251)
!3397 = !DILocation(line: 426, column: 67, scope: !3395)
!3398 = !DILocalVariable(name: "s", scope: !3395, file: !971, line: 428, type: !2670)
!3399 = !DILocation(line: 428, column: 19, scope: !3395)
!3400 = !DILocation(line: 428, column: 23, scope: !3395)
!3401 = !DILocation(line: 428, column: 30, scope: !3395)
!3402 = !DILocalVariable(name: "i", scope: !3395, file: !971, line: 429, type: !979)
!3403 = !DILocation(line: 429, column: 9, scope: !3395)
!3404 = !DILocation(line: 431, column: 33, scope: !3395)
!3405 = !DILocation(line: 431, column: 36, scope: !3395)
!3406 = !DILocation(line: 431, column: 5, scope: !3395)
!3407 = !DILocation(line: 433, column: 24, scope: !3395)
!3408 = !DILocation(line: 433, column: 5, scope: !3395)
!3409 = !DILocation(line: 434, column: 12, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3395, file: !971, line: 434, column: 5)
!3411 = !DILocation(line: 434, column: 10, scope: !3410)
!3412 = !DILocation(line: 434, column: 17, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3414, file: !971, discriminator: 1)
!3414 = distinct !DILexicalBlock(scope: !3410, file: !971, line: 434, column: 5)
!3415 = !DILocation(line: 434, column: 19, scope: !3413)
!3416 = !DILocation(line: 434, column: 5, scope: !3413)
!3417 = !DILocation(line: 435, column: 38, scope: !3414)
!3418 = !DILocation(line: 435, column: 24, scope: !3414)
!3419 = !DILocation(line: 435, column: 27, scope: !3414)
!3420 = !DILocation(line: 435, column: 41, scope: !3414)
!3421 = !DILocation(line: 435, column: 9, scope: !3414)
!3422 = !DILocation(line: 434, column: 35, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3414, file: !971, discriminator: 2)
!3424 = !DILocation(line: 434, column: 5, scope: !3423)
!3425 = distinct !{!3425, !3426}
!3426 = !DILocation(line: 434, column: 5, scope: !3395)
!3427 = !DILocation(line: 437, column: 15, scope: !3395)
!3428 = !DILocation(line: 437, column: 18, scope: !3395)
!3429 = !DILocation(line: 437, column: 14, scope: !3395)
!3430 = !DILocation(line: 437, column: 5, scope: !3395)
!3431 = !DILocation(line: 438, column: 15, scope: !3395)
!3432 = !DILocation(line: 438, column: 18, scope: !3395)
!3433 = !DILocation(line: 438, column: 14, scope: !3395)
!3434 = !DILocation(line: 438, column: 5, scope: !3395)
!3435 = !DILocation(line: 440, column: 5, scope: !3395)
!3436 = distinct !DISubprogram(name: "dirac_decode_flush", scope: !971, file: !971, line: 418, type: !2654, isLocal: true, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3437 = !DILocalVariable(name: "avctx", arg: 1, scope: !3436, file: !971, line: 418, type: !1251)
!3438 = !DILocation(line: 418, column: 48, scope: !3436)
!3439 = !DILocalVariable(name: "s", scope: !3436, file: !971, line: 420, type: !2670)
!3440 = !DILocation(line: 420, column: 19, scope: !3436)
!3441 = !DILocation(line: 420, column: 23, scope: !3436)
!3442 = !DILocation(line: 420, column: 30, scope: !3436)
!3443 = !DILocation(line: 421, column: 27, scope: !3436)
!3444 = !DILocation(line: 421, column: 5, scope: !3436)
!3445 = !DILocation(line: 422, column: 5, scope: !3436)
!3446 = !DILocation(line: 422, column: 8, scope: !3436)
!3447 = !DILocation(line: 422, column: 29, scope: !3436)
!3448 = !DILocation(line: 423, column: 5, scope: !3436)
!3449 = !DILocation(line: 423, column: 8, scope: !3436)
!3450 = !DILocation(line: 423, column: 21, scope: !3436)
!3451 = !DILocation(line: 424, column: 1, scope: !3436)
!3452 = distinct !DISubprogram(name: "get_delayed_pic", scope: !971, file: !971, line: 2078, type: !3453, isLocal: true, isDefinition: true, scopeLine: 2079, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!979, !2670, !981, !1446}
!3455 = !DILocalVariable(name: "s", arg: 1, scope: !3452, file: !971, line: 2078, type: !2670)
!3456 = !DILocation(line: 2078, column: 42, scope: !3452)
!3457 = !DILocalVariable(name: "picture", arg: 2, scope: !3452, file: !971, line: 2078, type: !981)
!3458 = !DILocation(line: 2078, column: 54, scope: !3452)
!3459 = !DILocalVariable(name: "got_frame", arg: 3, scope: !3452, file: !971, line: 2078, type: !1446)
!3460 = !DILocation(line: 2078, column: 68, scope: !3452)
!3461 = !DILocalVariable(name: "out", scope: !3452, file: !971, line: 2080, type: !2908)
!3462 = !DILocation(line: 2080, column: 17, scope: !3452)
!3463 = !DILocation(line: 2080, column: 23, scope: !3452)
!3464 = !DILocation(line: 2080, column: 26, scope: !3452)
!3465 = !DILocalVariable(name: "i", scope: !3452, file: !971, line: 2081, type: !979)
!3466 = !DILocation(line: 2081, column: 9, scope: !3452)
!3467 = !DILocalVariable(name: "out_idx", scope: !3452, file: !971, line: 2081, type: !979)
!3468 = !DILocation(line: 2081, column: 12, scope: !3452)
!3469 = !DILocalVariable(name: "ret", scope: !3452, file: !971, line: 2082, type: !979)
!3470 = !DILocation(line: 2082, column: 9, scope: !3452)
!3471 = !DILocation(line: 2085, column: 12, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3452, file: !971, line: 2085, column: 5)
!3473 = !DILocation(line: 2085, column: 10, scope: !3472)
!3474 = !DILocation(line: 2085, column: 33, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3476, file: !971, discriminator: 1)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !971, line: 2085, column: 5)
!3477 = !DILocation(line: 2085, column: 17, scope: !3475)
!3478 = !DILocation(line: 2085, column: 20, scope: !3475)
!3479 = !DILocation(line: 2085, column: 5, scope: !3475)
!3480 = !DILocation(line: 2086, column: 29, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3476, file: !971, line: 2086, column: 13)
!3482 = !DILocation(line: 2086, column: 13, scope: !3481)
!3483 = !DILocation(line: 2086, column: 16, scope: !3481)
!3484 = !DILocation(line: 2086, column: 33, scope: !3481)
!3485 = !DILocation(line: 2086, column: 42, scope: !3481)
!3486 = !DILocation(line: 2086, column: 67, scope: !3481)
!3487 = !DILocation(line: 2086, column: 72, scope: !3481)
!3488 = !DILocation(line: 2086, column: 81, scope: !3481)
!3489 = !DILocation(line: 2086, column: 65, scope: !3481)
!3490 = !DILocation(line: 2086, column: 13, scope: !3476)
!3491 = !DILocation(line: 2087, column: 35, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3481, file: !971, line: 2086, column: 105)
!3493 = !DILocation(line: 2087, column: 19, scope: !3492)
!3494 = !DILocation(line: 2087, column: 22, scope: !3492)
!3495 = !DILocation(line: 2087, column: 17, scope: !3492)
!3496 = !DILocation(line: 2088, column: 23, scope: !3492)
!3497 = !DILocation(line: 2088, column: 21, scope: !3492)
!3498 = !DILocation(line: 2089, column: 9, scope: !3492)
!3499 = !DILocation(line: 2086, column: 81, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3481, file: !971, discriminator: 1)
!3501 = !DILocation(line: 2085, column: 38, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3476, file: !971, discriminator: 2)
!3503 = !DILocation(line: 2085, column: 5, scope: !3502)
!3504 = distinct !{!3504, !3505}
!3505 = !DILocation(line: 2085, column: 5, scope: !3452)
!3506 = !DILocation(line: 2091, column: 14, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3452, file: !971, line: 2091, column: 5)
!3508 = !DILocation(line: 2091, column: 12, scope: !3507)
!3509 = !DILocation(line: 2091, column: 10, scope: !3507)
!3510 = !DILocation(line: 2091, column: 39, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3512, file: !971, discriminator: 1)
!3512 = distinct !DILexicalBlock(scope: !3507, file: !971, line: 2091, column: 5)
!3513 = !DILocation(line: 2091, column: 23, scope: !3511)
!3514 = !DILocation(line: 2091, column: 26, scope: !3511)
!3515 = !DILocation(line: 2091, column: 5, scope: !3511)
!3516 = !DILocation(line: 2092, column: 46, scope: !3512)
!3517 = !DILocation(line: 2092, column: 47, scope: !3512)
!3518 = !DILocation(line: 2092, column: 30, scope: !3512)
!3519 = !DILocation(line: 2092, column: 33, scope: !3512)
!3520 = !DILocation(line: 2092, column: 25, scope: !3512)
!3521 = !DILocation(line: 2092, column: 9, scope: !3512)
!3522 = !DILocation(line: 2092, column: 12, scope: !3512)
!3523 = !DILocation(line: 2092, column: 28, scope: !3512)
!3524 = !DILocation(line: 2091, column: 44, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3512, file: !971, discriminator: 2)
!3526 = !DILocation(line: 2091, column: 5, scope: !3525)
!3527 = distinct !{!3527, !3528}
!3528 = !DILocation(line: 2091, column: 5, scope: !3452)
!3529 = !DILocation(line: 2094, column: 9, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3452, file: !971, line: 2094, column: 9)
!3531 = !DILocation(line: 2094, column: 9, scope: !3452)
!3532 = !DILocation(line: 2095, column: 9, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !971, line: 2094, column: 14)
!3534 = !DILocation(line: 2095, column: 14, scope: !3533)
!3535 = !DILocation(line: 2095, column: 24, scope: !3533)
!3536 = !DILocation(line: 2096, column: 32, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !971, line: 2096, column: 12)
!3538 = !DILocation(line: 2096, column: 41, scope: !3537)
!3539 = !DILocation(line: 2096, column: 46, scope: !3537)
!3540 = !DILocation(line: 2096, column: 19, scope: !3537)
!3541 = !DILocation(line: 2096, column: 17, scope: !3537)
!3542 = !DILocation(line: 2096, column: 56, scope: !3537)
!3543 = !DILocation(line: 2096, column: 12, scope: !3533)
!3544 = !DILocation(line: 2097, column: 20, scope: !3537)
!3545 = !DILocation(line: 2097, column: 13, scope: !3537)
!3546 = !DILocation(line: 2098, column: 10, scope: !3533)
!3547 = !DILocation(line: 2098, column: 20, scope: !3533)
!3548 = !DILocation(line: 2099, column: 5, scope: !3533)
!3549 = !DILocation(line: 2101, column: 5, scope: !3452)
!3550 = !DILocation(line: 2102, column: 1, scope: !3452)
!3551 = distinct !DISubprogram(name: "dirac_decode_data_unit", scope: !971, file: !971, line: 2113, type: !3552, isLocal: true, isDefinition: true, scopeLine: 2114, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{!979, !1251, !1119, !979}
!3554 = !DILocalVariable(name: "avctx", arg: 1, scope: !3551, file: !971, line: 2113, type: !1251)
!3555 = !DILocation(line: 2113, column: 51, scope: !3551)
!3556 = !DILocalVariable(name: "buf", arg: 2, scope: !3551, file: !971, line: 2113, type: !1119)
!3557 = !DILocation(line: 2113, column: 73, scope: !3551)
!3558 = !DILocalVariable(name: "size", arg: 3, scope: !3551, file: !971, line: 2113, type: !979)
!3559 = !DILocation(line: 2113, column: 82, scope: !3551)
!3560 = !DILocalVariable(name: "s", scope: !3551, file: !971, line: 2115, type: !2670)
!3561 = !DILocation(line: 2115, column: 19, scope: !3551)
!3562 = !DILocation(line: 2115, column: 23, scope: !3551)
!3563 = !DILocation(line: 2115, column: 30, scope: !3551)
!3564 = !DILocalVariable(name: "pic", scope: !3551, file: !971, line: 2116, type: !2908)
!3565 = !DILocation(line: 2116, column: 17, scope: !3551)
!3566 = !DILocalVariable(name: "dsh", scope: !3551, file: !971, line: 2117, type: !3567)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64, align: 64)
!3568 = !DILocation(line: 2117, column: 23, scope: !3551)
!3569 = !DILocalVariable(name: "ret", scope: !3551, file: !971, line: 2118, type: !979)
!3570 = !DILocation(line: 2118, column: 9, scope: !3551)
!3571 = !DILocalVariable(name: "i", scope: !3551, file: !971, line: 2118, type: !979)
!3572 = !DILocation(line: 2118, column: 14, scope: !3551)
!3573 = !DILocalVariable(name: "parse_code", scope: !3551, file: !971, line: 2119, type: !988)
!3574 = !DILocation(line: 2119, column: 13, scope: !3551)
!3575 = !DILocalVariable(name: "tmp", scope: !3551, file: !971, line: 2120, type: !980)
!3576 = !DILocation(line: 2120, column: 14, scope: !3551)
!3577 = !DILocation(line: 2122, column: 9, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3551, file: !971, line: 2122, column: 9)
!3579 = !DILocation(line: 2122, column: 14, scope: !3578)
!3580 = !DILocation(line: 2122, column: 9, scope: !3551)
!3581 = !DILocation(line: 2123, column: 9, scope: !3578)
!3582 = !DILocation(line: 2125, column: 18, scope: !3551)
!3583 = !DILocation(line: 2125, column: 16, scope: !3551)
!3584 = !DILocation(line: 2127, column: 20, scope: !3551)
!3585 = !DILocation(line: 2127, column: 23, scope: !3551)
!3586 = !DILocation(line: 2127, column: 28, scope: !3551)
!3587 = !DILocation(line: 2127, column: 40, scope: !3551)
!3588 = !DILocation(line: 2127, column: 45, scope: !3551)
!3589 = !DILocation(line: 2127, column: 38, scope: !3551)
!3590 = !DILocation(line: 2127, column: 5, scope: !3551)
!3591 = !DILocation(line: 2129, column: 9, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3551, file: !971, line: 2129, column: 9)
!3593 = !DILocation(line: 2129, column: 20, scope: !3592)
!3594 = !DILocation(line: 2129, column: 9, scope: !3551)
!3595 = !DILocation(line: 2130, column: 13, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2130, column: 13)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !971, line: 2129, column: 47)
!3598 = !DILocation(line: 2130, column: 16, scope: !3596)
!3599 = !DILocation(line: 2130, column: 13, scope: !3597)
!3600 = !DILocation(line: 2131, column: 13, scope: !3596)
!3601 = !DILocation(line: 2134, column: 52, scope: !3597)
!3602 = !DILocation(line: 2134, column: 56, scope: !3597)
!3603 = !DILocation(line: 2134, column: 62, scope: !3597)
!3604 = !DILocation(line: 2134, column: 67, scope: !3597)
!3605 = !DILocation(line: 2134, column: 73, scope: !3597)
!3606 = !DILocation(line: 2134, column: 15, scope: !3597)
!3607 = !DILocation(line: 2134, column: 13, scope: !3597)
!3608 = !DILocation(line: 2135, column: 13, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2135, column: 13)
!3610 = !DILocation(line: 2135, column: 17, scope: !3609)
!3611 = !DILocation(line: 2135, column: 13, scope: !3597)
!3612 = !DILocation(line: 2136, column: 20, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !971, line: 2135, column: 22)
!3614 = !DILocation(line: 2136, column: 13, scope: !3613)
!3615 = !DILocation(line: 2137, column: 20, scope: !3613)
!3616 = !DILocation(line: 2137, column: 13, scope: !3613)
!3617 = !DILocation(line: 2140, column: 25, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2140, column: 13)
!3619 = !DILocation(line: 2140, column: 30, scope: !3618)
!3620 = !DILocation(line: 2140, column: 16, scope: !3618)
!3621 = !DILocation(line: 2140, column: 36, scope: !3618)
!3622 = !DILocation(line: 2140, column: 47, scope: !3618)
!3623 = !DILocation(line: 2140, column: 52, scope: !3618)
!3624 = !DILocation(line: 2140, column: 58, scope: !3618)
!3625 = !DILocation(line: 2140, column: 78, scope: !3618)
!3626 = !DILocation(line: 2140, column: 83, scope: !3618)
!3627 = !DILocation(line: 2140, column: 69, scope: !3618)
!3628 = !DILocation(line: 2140, column: 90, scope: !3618)
!3629 = !DILocation(line: 2140, column: 101, scope: !3618)
!3630 = !DILocation(line: 2140, column: 106, scope: !3618)
!3631 = !DILocation(line: 2140, column: 112, scope: !3618)
!3632 = !DILocation(line: 2140, column: 64, scope: !3618)
!3633 = !DILocation(line: 2140, column: 120, scope: !3618)
!3634 = !DILocation(line: 2140, column: 127, scope: !3618)
!3635 = !DILocation(line: 2140, column: 118, scope: !3618)
!3636 = !DILocation(line: 2140, column: 13, scope: !3597)
!3637 = !DILocation(line: 2141, column: 17, scope: !3618)
!3638 = !DILocation(line: 2141, column: 13, scope: !3618)
!3639 = !DILocation(line: 2142, column: 13, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2142, column: 13)
!3641 = !DILocation(line: 2142, column: 17, scope: !3640)
!3642 = !DILocation(line: 2142, column: 13, scope: !3597)
!3643 = !DILocation(line: 2143, column: 37, scope: !3640)
!3644 = !DILocation(line: 2143, column: 44, scope: !3640)
!3645 = !DILocation(line: 2143, column: 49, scope: !3640)
!3646 = !DILocation(line: 2143, column: 56, scope: !3640)
!3647 = !DILocation(line: 2143, column: 61, scope: !3640)
!3648 = !DILocation(line: 2143, column: 19, scope: !3640)
!3649 = !DILocation(line: 2143, column: 17, scope: !3640)
!3650 = !DILocation(line: 2143, column: 13, scope: !3640)
!3651 = !DILocation(line: 2144, column: 13, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2144, column: 13)
!3653 = !DILocation(line: 2144, column: 17, scope: !3652)
!3654 = !DILocation(line: 2144, column: 13, scope: !3597)
!3655 = !DILocation(line: 2145, column: 22, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3652, file: !971, line: 2144, column: 22)
!3657 = !DILocation(line: 2145, column: 13, scope: !3656)
!3658 = !DILocation(line: 2146, column: 20, scope: !3656)
!3659 = !DILocation(line: 2146, column: 13, scope: !3656)
!3660 = !DILocation(line: 2149, column: 20, scope: !3597)
!3661 = !DILocation(line: 2149, column: 27, scope: !3597)
!3662 = !DILocation(line: 2149, column: 32, scope: !3597)
!3663 = !DILocation(line: 2149, column: 9, scope: !3597)
!3664 = !DILocation(line: 2150, column: 26, scope: !3597)
!3665 = !DILocation(line: 2150, column: 31, scope: !3597)
!3666 = !DILocation(line: 2150, column: 9, scope: !3597)
!3667 = !DILocation(line: 2150, column: 16, scope: !3597)
!3668 = !DILocation(line: 2150, column: 24, scope: !3597)
!3669 = !DILocation(line: 2151, column: 30, scope: !3597)
!3670 = !DILocation(line: 2151, column: 35, scope: !3597)
!3671 = !DILocation(line: 2151, column: 9, scope: !3597)
!3672 = !DILocation(line: 2151, column: 16, scope: !3597)
!3673 = !DILocation(line: 2151, column: 28, scope: !3597)
!3674 = !DILocation(line: 2152, column: 28, scope: !3597)
!3675 = !DILocation(line: 2152, column: 33, scope: !3597)
!3676 = !DILocation(line: 2152, column: 9, scope: !3597)
!3677 = !DILocation(line: 2152, column: 16, scope: !3597)
!3678 = !DILocation(line: 2152, column: 26, scope: !3597)
!3679 = !DILocation(line: 2153, column: 34, scope: !3597)
!3680 = !DILocation(line: 2153, column: 39, scope: !3597)
!3681 = !DILocation(line: 2153, column: 9, scope: !3597)
!3682 = !DILocation(line: 2153, column: 16, scope: !3597)
!3683 = !DILocation(line: 2153, column: 32, scope: !3597)
!3684 = !DILocation(line: 2154, column: 29, scope: !3597)
!3685 = !DILocation(line: 2154, column: 34, scope: !3597)
!3686 = !DILocation(line: 2154, column: 9, scope: !3597)
!3687 = !DILocation(line: 2154, column: 16, scope: !3597)
!3688 = !DILocation(line: 2154, column: 27, scope: !3597)
!3689 = !DILocation(line: 2155, column: 26, scope: !3597)
!3690 = !DILocation(line: 2155, column: 31, scope: !3597)
!3691 = !DILocation(line: 2155, column: 9, scope: !3597)
!3692 = !DILocation(line: 2155, column: 16, scope: !3597)
!3693 = !DILocation(line: 2155, column: 24, scope: !3597)
!3694 = !DILocation(line: 2156, column: 24, scope: !3597)
!3695 = !DILocation(line: 2156, column: 29, scope: !3597)
!3696 = !DILocation(line: 2156, column: 9, scope: !3597)
!3697 = !DILocation(line: 2156, column: 16, scope: !3597)
!3698 = !DILocation(line: 2156, column: 22, scope: !3597)
!3699 = !DILocation(line: 2157, column: 9, scope: !3597)
!3700 = !DILocation(line: 2157, column: 16, scope: !3597)
!3701 = !DILocation(line: 2157, column: 28, scope: !3597)
!3702 = !DILocation(line: 2157, column: 33, scope: !3597)
!3703 = !DILocation(line: 2158, column: 24, scope: !3597)
!3704 = !DILocation(line: 2158, column: 29, scope: !3597)
!3705 = !DILocation(line: 2158, column: 9, scope: !3597)
!3706 = !DILocation(line: 2158, column: 12, scope: !3597)
!3707 = !DILocation(line: 2158, column: 22, scope: !3597)
!3708 = !DILocation(line: 2159, column: 28, scope: !3597)
!3709 = !DILocation(line: 2159, column: 33, scope: !3597)
!3710 = !DILocation(line: 2159, column: 41, scope: !3597)
!3711 = !DILocation(line: 2159, column: 9, scope: !3597)
!3712 = !DILocation(line: 2159, column: 12, scope: !3597)
!3713 = !DILocation(line: 2159, column: 20, scope: !3597)
!3714 = !DILocation(line: 2159, column: 26, scope: !3597)
!3715 = !DILocation(line: 2160, column: 28, scope: !3597)
!3716 = !DILocation(line: 2160, column: 33, scope: !3597)
!3717 = !DILocation(line: 2160, column: 41, scope: !3597)
!3718 = !DILocation(line: 2160, column: 9, scope: !3597)
!3719 = !DILocation(line: 2160, column: 12, scope: !3597)
!3720 = !DILocation(line: 2160, column: 20, scope: !3597)
!3721 = !DILocation(line: 2160, column: 26, scope: !3597)
!3722 = !DILocation(line: 2161, column: 9, scope: !3597)
!3723 = !DILocation(line: 2161, column: 12, scope: !3597)
!3724 = !DILocation(line: 2161, column: 19, scope: !3597)
!3725 = !DILocation(line: 2161, column: 18, scope: !3597)
!3726 = !DILocation(line: 2162, column: 18, scope: !3597)
!3727 = !DILocation(line: 2162, column: 9, scope: !3597)
!3728 = !DILocation(line: 2164, column: 21, scope: !3597)
!3729 = !DILocation(line: 2164, column: 24, scope: !3597)
!3730 = !DILocation(line: 2164, column: 34, scope: !3597)
!3731 = !DILocation(line: 2164, column: 9, scope: !3597)
!3732 = !DILocation(line: 2164, column: 12, scope: !3597)
!3733 = !DILocation(line: 2164, column: 19, scope: !3597)
!3734 = !DILocation(line: 2166, column: 48, scope: !3597)
!3735 = !DILocation(line: 2166, column: 55, scope: !3597)
!3736 = !DILocation(line: 2167, column: 49, scope: !3597)
!3737 = !DILocation(line: 2167, column: 52, scope: !3597)
!3738 = !DILocation(line: 2168, column: 49, scope: !3597)
!3739 = !DILocation(line: 2168, column: 52, scope: !3597)
!3740 = !DILocation(line: 2166, column: 15, scope: !3597)
!3741 = !DILocation(line: 2166, column: 13, scope: !3597)
!3742 = !DILocation(line: 2169, column: 13, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2169, column: 13)
!3744 = !DILocation(line: 2169, column: 17, scope: !3743)
!3745 = !DILocation(line: 2169, column: 13, scope: !3597)
!3746 = !DILocation(line: 2170, column: 20, scope: !3743)
!3747 = !DILocation(line: 2170, column: 13, scope: !3743)
!3748 = !DILocation(line: 2172, column: 38, scope: !3597)
!3749 = !DILocation(line: 2172, column: 15, scope: !3597)
!3750 = !DILocation(line: 2172, column: 13, scope: !3597)
!3751 = !DILocation(line: 2173, column: 13, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3597, file: !971, line: 2173, column: 13)
!3753 = !DILocation(line: 2173, column: 17, scope: !3752)
!3754 = !DILocation(line: 2173, column: 13, scope: !3597)
!3755 = !DILocation(line: 2174, column: 20, scope: !3752)
!3756 = !DILocation(line: 2174, column: 13, scope: !3752)
!3757 = !DILocation(line: 2176, column: 9, scope: !3597)
!3758 = !DILocation(line: 2176, column: 12, scope: !3597)
!3759 = !DILocation(line: 2176, column: 33, scope: !3597)
!3760 = !DILocation(line: 2177, column: 5, scope: !3597)
!3761 = !DILocation(line: 2177, column: 16, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3763, file: !971, discriminator: 1)
!3763 = distinct !DILexicalBlock(scope: !3592, file: !971, line: 2177, column: 16)
!3764 = !DILocation(line: 2177, column: 27, scope: !3762)
!3765 = !DILocation(line: 2178, column: 31, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3763, file: !971, line: 2177, column: 51)
!3767 = !DILocation(line: 2178, column: 9, scope: !3766)
!3768 = !DILocation(line: 2179, column: 9, scope: !3766)
!3769 = !DILocation(line: 2179, column: 12, scope: !3766)
!3770 = !DILocation(line: 2179, column: 33, scope: !3766)
!3771 = !DILocation(line: 2180, column: 5, scope: !3766)
!3772 = !DILocation(line: 2180, column: 16, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3774, file: !971, discriminator: 1)
!3774 = distinct !DILexicalBlock(scope: !3763, file: !971, line: 2180, column: 16)
!3775 = !DILocation(line: 2180, column: 27, scope: !3773)
!3776 = !DILocation(line: 2181, column: 13, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !971, line: 2181, column: 13)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !971, line: 2180, column: 47)
!3779 = !DILocation(line: 2181, column: 21, scope: !3777)
!3780 = !DILocation(line: 2181, column: 13, scope: !3778)
!3781 = !DILocalVariable(name: "ver", scope: !3782, file: !971, line: 2182, type: !1752)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !971, line: 2181, column: 27)
!3783 = !DILocation(line: 2182, column: 17, scope: !3782)
!3784 = !DILocation(line: 2185, column: 24, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !971, line: 2185, column: 17)
!3786 = !DILocation(line: 2185, column: 27, scope: !3785)
!3787 = !DILocation(line: 2185, column: 57, scope: !3785)
!3788 = !DILocation(line: 2185, column: 62, scope: !3785)
!3789 = !DILocation(line: 2185, column: 65, scope: !3785)
!3790 = !DILocation(line: 2185, column: 69, scope: !3785)
!3791 = !DILocation(line: 2185, column: 72, scope: !3785)
!3792 = !DILocation(line: 2185, column: 17, scope: !3785)
!3793 = !DILocation(line: 2185, column: 76, scope: !3785)
!3794 = !DILocation(line: 2185, column: 17, scope: !3782)
!3795 = !DILocation(line: 2186, column: 21, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3785, file: !971, line: 2186, column: 21)
!3797 = !DILocation(line: 2186, column: 28, scope: !3796)
!3798 = !DILocation(line: 2186, column: 33, scope: !3796)
!3799 = !DILocation(line: 2186, column: 36, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3796, file: !971, discriminator: 1)
!3801 = !DILocation(line: 2186, column: 43, scope: !3800)
!3802 = !DILocation(line: 2186, column: 48, scope: !3800)
!3803 = !DILocation(line: 2186, column: 51, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3796, file: !971, discriminator: 2)
!3805 = !DILocation(line: 2186, column: 58, scope: !3804)
!3806 = !DILocation(line: 2186, column: 21, scope: !3804)
!3807 = !DILocation(line: 2187, column: 21, scope: !3796)
!3808 = !DILocation(line: 2187, column: 24, scope: !3796)
!3809 = !DILocation(line: 2187, column: 40, scope: !3796)
!3810 = !DILocation(line: 2186, column: 61, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3796, file: !971, discriminator: 3)
!3812 = !DILocation(line: 2188, column: 9, scope: !3782)
!3813 = !DILocation(line: 2189, column: 5, scope: !3778)
!3814 = !DILocation(line: 2189, column: 16, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3816, file: !971, discriminator: 1)
!3816 = distinct !DILexicalBlock(scope: !3774, file: !971, line: 2189, column: 16)
!3817 = !DILocation(line: 2189, column: 27, scope: !3815)
!3818 = !DILocation(line: 2190, column: 14, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2190, column: 13)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !971, line: 2189, column: 34)
!3821 = !DILocation(line: 2190, column: 17, scope: !3819)
!3822 = !DILocation(line: 2190, column: 13, scope: !3820)
!3823 = !DILocation(line: 2191, column: 20, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !971, line: 2190, column: 39)
!3825 = !DILocation(line: 2191, column: 13, scope: !3824)
!3826 = !DILocation(line: 2192, column: 13, scope: !3824)
!3827 = !DILocation(line: 2196, column: 16, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2196, column: 9)
!3829 = !DILocation(line: 2196, column: 14, scope: !3828)
!3830 = !DILocation(line: 2196, column: 21, scope: !3831)
!3831 = !DILexicalBlockFile(scope: !3832, file: !971, discriminator: 1)
!3832 = distinct !DILexicalBlock(scope: !3828, file: !971, line: 2196, column: 9)
!3833 = !DILocation(line: 2196, column: 23, scope: !3831)
!3834 = !DILocation(line: 2196, column: 9, scope: !3831)
!3835 = !DILocation(line: 2197, column: 31, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3832, file: !971, line: 2197, column: 17)
!3837 = !DILocation(line: 2197, column: 17, scope: !3836)
!3838 = !DILocation(line: 2197, column: 20, scope: !3836)
!3839 = !DILocation(line: 2197, column: 34, scope: !3836)
!3840 = !DILocation(line: 2197, column: 43, scope: !3836)
!3841 = !DILocation(line: 2197, column: 51, scope: !3836)
!3842 = !DILocation(line: 2197, column: 17, scope: !3832)
!3843 = !DILocation(line: 2198, column: 38, scope: !3836)
!3844 = !DILocation(line: 2198, column: 24, scope: !3836)
!3845 = !DILocation(line: 2198, column: 27, scope: !3836)
!3846 = !DILocation(line: 2198, column: 21, scope: !3836)
!3847 = !DILocation(line: 2198, column: 17, scope: !3836)
!3848 = !DILocation(line: 2197, column: 63, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3836, file: !971, discriminator: 1)
!3850 = !DILocation(line: 2196, column: 39, scope: !3851)
!3851 = !DILexicalBlockFile(scope: !3832, file: !971, discriminator: 2)
!3852 = !DILocation(line: 2196, column: 9, scope: !3851)
!3853 = distinct !{!3853, !3854}
!3854 = !DILocation(line: 2196, column: 9, scope: !3820)
!3855 = !DILocation(line: 2199, column: 14, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2199, column: 13)
!3857 = !DILocation(line: 2199, column: 13, scope: !3820)
!3858 = !DILocation(line: 2200, column: 20, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !971, line: 2199, column: 19)
!3860 = !DILocation(line: 2200, column: 13, scope: !3859)
!3861 = !DILocation(line: 2201, column: 13, scope: !3859)
!3862 = !DILocation(line: 2204, column: 24, scope: !3820)
!3863 = !DILocation(line: 2204, column: 29, scope: !3820)
!3864 = !DILocation(line: 2204, column: 9, scope: !3820)
!3865 = !DILocation(line: 2207, column: 15, scope: !3820)
!3866 = !DILocation(line: 2207, column: 26, scope: !3820)
!3867 = !DILocation(line: 2207, column: 13, scope: !3820)
!3868 = !DILocation(line: 2208, column: 13, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2208, column: 13)
!3870 = !DILocation(line: 2208, column: 17, scope: !3869)
!3871 = !DILocation(line: 2208, column: 13, scope: !3820)
!3872 = !DILocation(line: 2209, column: 20, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !971, line: 2208, column: 22)
!3874 = !DILocation(line: 2209, column: 13, scope: !3873)
!3875 = !DILocation(line: 2210, column: 13, scope: !3873)
!3876 = !DILocation(line: 2212, column: 23, scope: !3820)
!3877 = !DILocation(line: 2212, column: 9, scope: !3820)
!3878 = !DILocation(line: 2212, column: 12, scope: !3820)
!3879 = !DILocation(line: 2212, column: 21, scope: !3820)
!3880 = !DILocation(line: 2213, column: 24, scope: !3820)
!3881 = !DILocation(line: 2213, column: 35, scope: !3820)
!3882 = !DILocation(line: 2213, column: 43, scope: !3820)
!3883 = !DILocation(line: 2213, column: 9, scope: !3820)
!3884 = !DILocation(line: 2213, column: 12, scope: !3820)
!3885 = !DILocation(line: 2213, column: 21, scope: !3820)
!3886 = !DILocation(line: 2214, column: 25, scope: !3820)
!3887 = !DILocation(line: 2214, column: 36, scope: !3820)
!3888 = !DILocation(line: 2214, column: 44, scope: !3820)
!3889 = !DILocation(line: 2214, column: 9, scope: !3820)
!3890 = !DILocation(line: 2214, column: 12, scope: !3820)
!3891 = !DILocation(line: 2214, column: 22, scope: !3820)
!3892 = !DILocation(line: 2215, column: 27, scope: !3820)
!3893 = !DILocation(line: 2215, column: 38, scope: !3820)
!3894 = !DILocation(line: 2215, column: 46, scope: !3820)
!3895 = !DILocation(line: 2215, column: 9, scope: !3820)
!3896 = !DILocation(line: 2215, column: 12, scope: !3820)
!3897 = !DILocation(line: 2215, column: 24, scope: !3820)
!3898 = !DILocation(line: 2216, column: 26, scope: !3820)
!3899 = !DILocation(line: 2216, column: 37, scope: !3820)
!3900 = !DILocation(line: 2216, column: 45, scope: !3820)
!3901 = !DILocation(line: 2216, column: 9, scope: !3820)
!3902 = !DILocation(line: 2216, column: 12, scope: !3820)
!3903 = !DILocation(line: 2216, column: 23, scope: !3820)
!3904 = !DILocation(line: 2217, column: 26, scope: !3820)
!3905 = !DILocation(line: 2217, column: 37, scope: !3820)
!3906 = !DILocation(line: 2217, column: 45, scope: !3820)
!3907 = !DILocation(line: 2217, column: 9, scope: !3820)
!3908 = !DILocation(line: 2217, column: 12, scope: !3820)
!3909 = !DILocation(line: 2217, column: 23, scope: !3820)
!3910 = !DILocation(line: 2218, column: 29, scope: !3820)
!3911 = !DILocation(line: 2218, column: 40, scope: !3820)
!3912 = !DILocation(line: 2218, column: 48, scope: !3820)
!3913 = !DILocation(line: 2218, column: 9, scope: !3820)
!3914 = !DILocation(line: 2218, column: 12, scope: !3820)
!3915 = !DILocation(line: 2218, column: 26, scope: !3820)
!3916 = !DILocation(line: 2219, column: 27, scope: !3820)
!3917 = !DILocation(line: 2219, column: 38, scope: !3820)
!3918 = !DILocation(line: 2219, column: 46, scope: !3820)
!3919 = !DILocation(line: 2219, column: 9, scope: !3820)
!3920 = !DILocation(line: 2219, column: 14, scope: !3820)
!3921 = !DILocation(line: 2219, column: 24, scope: !3820)
!3922 = !DILocation(line: 2220, column: 35, scope: !3820)
!3923 = !DILocation(line: 2220, column: 38, scope: !3820)
!3924 = !DILocation(line: 2220, column: 47, scope: !3820)
!3925 = !DILocation(line: 2220, column: 9, scope: !3820)
!3926 = !DILocation(line: 2220, column: 14, scope: !3820)
!3927 = !DILocation(line: 2220, column: 23, scope: !3820)
!3928 = !DILocation(line: 2220, column: 33, scope: !3820)
!3929 = !DILocation(line: 2221, column: 35, scope: !3820)
!3930 = !DILocation(line: 2221, column: 38, scope: !3820)
!3931 = !DILocation(line: 2221, column: 47, scope: !3820)
!3932 = !DILocation(line: 2221, column: 9, scope: !3820)
!3933 = !DILocation(line: 2221, column: 14, scope: !3820)
!3934 = !DILocation(line: 2221, column: 23, scope: !3820)
!3935 = !DILocation(line: 2221, column: 33, scope: !3820)
!3936 = !DILocation(line: 2224, column: 13, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2224, column: 13)
!3938 = !DILocation(line: 2224, column: 16, scope: !3937)
!3939 = !DILocation(line: 2224, column: 24, scope: !3937)
!3940 = !DILocation(line: 2224, column: 30, scope: !3937)
!3941 = !DILocation(line: 2224, column: 35, scope: !3937)
!3942 = !DILocation(line: 2224, column: 38, scope: !3943)
!3943 = !DILexicalBlockFile(scope: !3937, file: !971, discriminator: 1)
!3944 = !DILocation(line: 2224, column: 49, scope: !3943)
!3945 = !DILocation(line: 2224, column: 13, scope: !3943)
!3946 = !DILocation(line: 2225, column: 13, scope: !3937)
!3947 = !DILocation(line: 2225, column: 16, scope: !3937)
!3948 = !DILocation(line: 2225, column: 27, scope: !3937)
!3949 = !DILocation(line: 2227, column: 13, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2227, column: 13)
!3951 = !DILocation(line: 2227, column: 16, scope: !3950)
!3952 = !DILocation(line: 2227, column: 26, scope: !3950)
!3953 = !DILocation(line: 2227, column: 31, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3950, file: !971, discriminator: 1)
!3955 = !DILocation(line: 2227, column: 34, scope: !3954)
!3956 = !DILocation(line: 2227, column: 45, scope: !3954)
!3957 = !DILocation(line: 2227, column: 48, scope: !3958)
!3958 = !DILexicalBlockFile(scope: !3950, file: !971, discriminator: 2)
!3959 = !DILocation(line: 2227, column: 51, scope: !3958)
!3960 = !DILocation(line: 2227, column: 13, scope: !3958)
!3961 = !DILocation(line: 2228, column: 20, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3950, file: !971, line: 2227, column: 65)
!3963 = !DILocation(line: 2228, column: 13, scope: !3962)
!3964 = !DILocation(line: 2229, column: 13, scope: !3962)
!3965 = !DILocation(line: 2232, column: 41, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2232, column: 13)
!3967 = !DILocation(line: 2232, column: 48, scope: !3966)
!3968 = !DILocation(line: 2232, column: 53, scope: !3966)
!3969 = !DILocation(line: 2232, column: 63, scope: !3966)
!3970 = !DILocation(line: 2232, column: 74, scope: !3966)
!3971 = !DILocation(line: 2232, column: 82, scope: !3966)
!3972 = !DILocation(line: 2232, column: 62, scope: !3966)
!3973 = !DILocation(line: 2232, column: 20, scope: !3966)
!3974 = !DILocation(line: 2232, column: 18, scope: !3966)
!3975 = !DILocation(line: 2232, column: 107, scope: !3966)
!3976 = !DILocation(line: 2232, column: 13, scope: !3820)
!3977 = !DILocation(line: 2233, column: 20, scope: !3966)
!3978 = !DILocation(line: 2233, column: 13, scope: !3966)
!3979 = !DILocation(line: 2234, column: 30, scope: !3820)
!3980 = !DILocation(line: 2234, column: 9, scope: !3820)
!3981 = !DILocation(line: 2234, column: 12, scope: !3820)
!3982 = !DILocation(line: 2234, column: 28, scope: !3820)
!3983 = !DILocation(line: 2235, column: 30, scope: !3820)
!3984 = !DILocation(line: 2235, column: 35, scope: !3820)
!3985 = !DILocation(line: 2235, column: 44, scope: !3820)
!3986 = !DILocation(line: 2235, column: 9, scope: !3820)
!3987 = !DILocation(line: 2235, column: 12, scope: !3820)
!3988 = !DILocation(line: 2235, column: 21, scope: !3820)
!3989 = !DILocation(line: 2235, column: 28, scope: !3820)
!3990 = !DILocation(line: 2236, column: 30, scope: !3820)
!3991 = !DILocation(line: 2236, column: 35, scope: !3820)
!3992 = !DILocation(line: 2236, column: 44, scope: !3820)
!3993 = !DILocation(line: 2236, column: 9, scope: !3820)
!3994 = !DILocation(line: 2236, column: 12, scope: !3820)
!3995 = !DILocation(line: 2236, column: 21, scope: !3820)
!3996 = !DILocation(line: 2236, column: 28, scope: !3820)
!3997 = !DILocation(line: 2237, column: 30, scope: !3820)
!3998 = !DILocation(line: 2237, column: 35, scope: !3820)
!3999 = !DILocation(line: 2237, column: 44, scope: !3820)
!4000 = !DILocation(line: 2237, column: 9, scope: !3820)
!4001 = !DILocation(line: 2237, column: 12, scope: !3820)
!4002 = !DILocation(line: 2237, column: 21, scope: !3820)
!4003 = !DILocation(line: 2237, column: 28, scope: !3820)
!4004 = !DILocation(line: 2239, column: 27, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2239, column: 13)
!4006 = !DILocation(line: 2239, column: 36, scope: !4005)
!4007 = !DILocation(line: 2239, column: 39, scope: !4005)
!4008 = !DILocation(line: 2239, column: 48, scope: !4005)
!4009 = !DILocation(line: 2239, column: 56, scope: !4005)
!4010 = !DILocation(line: 2239, column: 35, scope: !4005)
!4011 = !DILocation(line: 2239, column: 64, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 1)
!4013 = !DILocation(line: 2239, column: 67, scope: !4012)
!4014 = !DILocation(line: 2239, column: 76, scope: !4012)
!4015 = !DILocation(line: 2239, column: 35, scope: !4012)
!4016 = !DILocation(line: 2239, column: 89, scope: !4017)
!4017 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 2)
!4018 = !DILocation(line: 2239, column: 92, scope: !4017)
!4019 = !DILocation(line: 2239, column: 101, scope: !4017)
!4020 = !DILocation(line: 2239, column: 87, scope: !4017)
!4021 = !DILocation(line: 2239, column: 35, scope: !4017)
!4022 = !DILocation(line: 2239, column: 35, scope: !4023)
!4023 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 3)
!4024 = !DILocation(line: 2239, column: 117, scope: !4023)
!4025 = !DILocation(line: 2239, column: 120, scope: !4023)
!4026 = !DILocation(line: 2239, column: 129, scope: !4023)
!4027 = !DILocation(line: 2239, column: 137, scope: !4023)
!4028 = !DILocation(line: 2239, column: 116, scope: !4023)
!4029 = !DILocation(line: 2239, column: 145, scope: !4030)
!4030 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 4)
!4031 = !DILocation(line: 2239, column: 148, scope: !4030)
!4032 = !DILocation(line: 2239, column: 157, scope: !4030)
!4033 = !DILocation(line: 2239, column: 116, scope: !4030)
!4034 = !DILocation(line: 2239, column: 170, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 5)
!4036 = !DILocation(line: 2239, column: 173, scope: !4035)
!4037 = !DILocation(line: 2239, column: 182, scope: !4035)
!4038 = !DILocation(line: 2239, column: 168, scope: !4035)
!4039 = !DILocation(line: 2239, column: 116, scope: !4035)
!4040 = !DILocation(line: 2239, column: 116, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 6)
!4042 = !DILocation(line: 2239, column: 112, scope: !4041)
!4043 = !DILocation(line: 2239, column: 33, scope: !4041)
!4044 = !DILocation(line: 2239, column: 198, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 7)
!4046 = !DILocation(line: 2239, column: 201, scope: !4045)
!4047 = !DILocation(line: 2239, column: 210, scope: !4045)
!4048 = !DILocation(line: 2239, column: 218, scope: !4045)
!4049 = !DILocation(line: 2239, column: 197, scope: !4045)
!4050 = !DILocation(line: 2239, column: 226, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 8)
!4052 = !DILocation(line: 2239, column: 229, scope: !4051)
!4053 = !DILocation(line: 2239, column: 238, scope: !4051)
!4054 = !DILocation(line: 2239, column: 197, scope: !4051)
!4055 = !DILocation(line: 2239, column: 251, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 9)
!4057 = !DILocation(line: 2239, column: 254, scope: !4056)
!4058 = !DILocation(line: 2239, column: 263, scope: !4056)
!4059 = !DILocation(line: 2239, column: 249, scope: !4056)
!4060 = !DILocation(line: 2239, column: 197, scope: !4056)
!4061 = !DILocation(line: 2239, column: 197, scope: !4062)
!4062 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 10)
!4063 = !DILocation(line: 2239, column: 33, scope: !4062)
!4064 = !DILocation(line: 2239, column: 279, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 11)
!4066 = !DILocation(line: 2239, column: 282, scope: !4065)
!4067 = !DILocation(line: 2239, column: 291, scope: !4065)
!4068 = !DILocation(line: 2239, column: 299, scope: !4065)
!4069 = !DILocation(line: 2239, column: 278, scope: !4065)
!4070 = !DILocation(line: 2239, column: 307, scope: !4071)
!4071 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 12)
!4072 = !DILocation(line: 2239, column: 310, scope: !4071)
!4073 = !DILocation(line: 2239, column: 319, scope: !4071)
!4074 = !DILocation(line: 2239, column: 278, scope: !4071)
!4075 = !DILocation(line: 2239, column: 332, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 13)
!4077 = !DILocation(line: 2239, column: 335, scope: !4076)
!4078 = !DILocation(line: 2239, column: 344, scope: !4076)
!4079 = !DILocation(line: 2239, column: 330, scope: !4076)
!4080 = !DILocation(line: 2239, column: 278, scope: !4076)
!4081 = !DILocation(line: 2239, column: 278, scope: !4082)
!4082 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 14)
!4083 = !DILocation(line: 2239, column: 33, scope: !4082)
!4084 = !DILocation(line: 2239, column: 33, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 15)
!4086 = !DILocation(line: 2239, column: 362, scope: !4085)
!4087 = !DILocation(line: 2239, column: 365, scope: !4085)
!4088 = !DILocation(line: 2239, column: 374, scope: !4085)
!4089 = !DILocation(line: 2239, column: 382, scope: !4085)
!4090 = !DILocation(line: 2239, column: 361, scope: !4085)
!4091 = !DILocation(line: 2239, column: 390, scope: !4092)
!4092 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 16)
!4093 = !DILocation(line: 2239, column: 393, scope: !4092)
!4094 = !DILocation(line: 2239, column: 402, scope: !4092)
!4095 = !DILocation(line: 2239, column: 361, scope: !4092)
!4096 = !DILocation(line: 2239, column: 415, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 17)
!4098 = !DILocation(line: 2239, column: 418, scope: !4097)
!4099 = !DILocation(line: 2239, column: 427, scope: !4097)
!4100 = !DILocation(line: 2239, column: 413, scope: !4097)
!4101 = !DILocation(line: 2239, column: 361, scope: !4097)
!4102 = !DILocation(line: 2239, column: 361, scope: !4103)
!4103 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 18)
!4104 = !DILocation(line: 2239, column: 357, scope: !4103)
!4105 = !DILocation(line: 2239, column: 31, scope: !4103)
!4106 = !DILocation(line: 2239, column: 445, scope: !4107)
!4107 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 19)
!4108 = !DILocation(line: 2239, column: 448, scope: !4107)
!4109 = !DILocation(line: 2239, column: 457, scope: !4107)
!4110 = !DILocation(line: 2239, column: 465, scope: !4107)
!4111 = !DILocation(line: 2239, column: 444, scope: !4107)
!4112 = !DILocation(line: 2239, column: 473, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 20)
!4114 = !DILocation(line: 2239, column: 476, scope: !4113)
!4115 = !DILocation(line: 2239, column: 485, scope: !4113)
!4116 = !DILocation(line: 2239, column: 444, scope: !4113)
!4117 = !DILocation(line: 2239, column: 498, scope: !4118)
!4118 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 21)
!4119 = !DILocation(line: 2239, column: 501, scope: !4118)
!4120 = !DILocation(line: 2239, column: 510, scope: !4118)
!4121 = !DILocation(line: 2239, column: 496, scope: !4118)
!4122 = !DILocation(line: 2239, column: 444, scope: !4118)
!4123 = !DILocation(line: 2239, column: 444, scope: !4124)
!4124 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 22)
!4125 = !DILocation(line: 2239, column: 526, scope: !4124)
!4126 = !DILocation(line: 2239, column: 529, scope: !4124)
!4127 = !DILocation(line: 2239, column: 538, scope: !4124)
!4128 = !DILocation(line: 2239, column: 546, scope: !4124)
!4129 = !DILocation(line: 2239, column: 525, scope: !4124)
!4130 = !DILocation(line: 2239, column: 554, scope: !4131)
!4131 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 23)
!4132 = !DILocation(line: 2239, column: 557, scope: !4131)
!4133 = !DILocation(line: 2239, column: 566, scope: !4131)
!4134 = !DILocation(line: 2239, column: 525, scope: !4131)
!4135 = !DILocation(line: 2239, column: 579, scope: !4136)
!4136 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 24)
!4137 = !DILocation(line: 2239, column: 582, scope: !4136)
!4138 = !DILocation(line: 2239, column: 591, scope: !4136)
!4139 = !DILocation(line: 2239, column: 577, scope: !4136)
!4140 = !DILocation(line: 2239, column: 525, scope: !4136)
!4141 = !DILocation(line: 2239, column: 525, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 25)
!4143 = !DILocation(line: 2239, column: 521, scope: !4142)
!4144 = !DILocation(line: 2239, column: 442, scope: !4142)
!4145 = !DILocation(line: 2239, column: 607, scope: !4146)
!4146 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 26)
!4147 = !DILocation(line: 2239, column: 610, scope: !4146)
!4148 = !DILocation(line: 2239, column: 619, scope: !4146)
!4149 = !DILocation(line: 2239, column: 627, scope: !4146)
!4150 = !DILocation(line: 2239, column: 606, scope: !4146)
!4151 = !DILocation(line: 2239, column: 635, scope: !4152)
!4152 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 27)
!4153 = !DILocation(line: 2239, column: 638, scope: !4152)
!4154 = !DILocation(line: 2239, column: 647, scope: !4152)
!4155 = !DILocation(line: 2239, column: 606, scope: !4152)
!4156 = !DILocation(line: 2239, column: 660, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 28)
!4158 = !DILocation(line: 2239, column: 663, scope: !4157)
!4159 = !DILocation(line: 2239, column: 672, scope: !4157)
!4160 = !DILocation(line: 2239, column: 658, scope: !4157)
!4161 = !DILocation(line: 2239, column: 606, scope: !4157)
!4162 = !DILocation(line: 2239, column: 606, scope: !4163)
!4163 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 29)
!4164 = !DILocation(line: 2239, column: 442, scope: !4163)
!4165 = !DILocation(line: 2239, column: 688, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 30)
!4167 = !DILocation(line: 2239, column: 691, scope: !4166)
!4168 = !DILocation(line: 2239, column: 700, scope: !4166)
!4169 = !DILocation(line: 2239, column: 708, scope: !4166)
!4170 = !DILocation(line: 2239, column: 687, scope: !4166)
!4171 = !DILocation(line: 2239, column: 716, scope: !4172)
!4172 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 31)
!4173 = !DILocation(line: 2239, column: 719, scope: !4172)
!4174 = !DILocation(line: 2239, column: 728, scope: !4172)
!4175 = !DILocation(line: 2239, column: 687, scope: !4172)
!4176 = !DILocation(line: 2239, column: 741, scope: !4177)
!4177 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 32)
!4178 = !DILocation(line: 2239, column: 744, scope: !4177)
!4179 = !DILocation(line: 2239, column: 753, scope: !4177)
!4180 = !DILocation(line: 2239, column: 739, scope: !4177)
!4181 = !DILocation(line: 2239, column: 687, scope: !4177)
!4182 = !DILocation(line: 2239, column: 687, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 33)
!4184 = !DILocation(line: 2239, column: 442, scope: !4183)
!4185 = !DILocation(line: 2239, column: 442, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 34)
!4187 = !DILocation(line: 2239, column: 31, scope: !4186)
!4188 = !DILocation(line: 2239, column: 771, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 35)
!4190 = !DILocation(line: 2239, column: 774, scope: !4189)
!4191 = !DILocation(line: 2239, column: 783, scope: !4189)
!4192 = !DILocation(line: 2239, column: 791, scope: !4189)
!4193 = !DILocation(line: 2239, column: 770, scope: !4189)
!4194 = !DILocation(line: 2239, column: 799, scope: !4195)
!4195 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 36)
!4196 = !DILocation(line: 2239, column: 802, scope: !4195)
!4197 = !DILocation(line: 2239, column: 811, scope: !4195)
!4198 = !DILocation(line: 2239, column: 770, scope: !4195)
!4199 = !DILocation(line: 2239, column: 824, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 37)
!4201 = !DILocation(line: 2239, column: 827, scope: !4200)
!4202 = !DILocation(line: 2239, column: 836, scope: !4200)
!4203 = !DILocation(line: 2239, column: 822, scope: !4200)
!4204 = !DILocation(line: 2239, column: 770, scope: !4200)
!4205 = !DILocation(line: 2239, column: 770, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 38)
!4207 = !DILocation(line: 2239, column: 31, scope: !4206)
!4208 = !DILocation(line: 2239, column: 31, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4005, file: !971, discriminator: 39)
!4210 = !DILocation(line: 2239, column: 30, scope: !4209)
!4211 = !DILocation(line: 2239, column: 13, scope: !4209)
!4212 = !DILocation(line: 2239, column: 849, scope: !4209)
!4213 = !DILocation(line: 2240, column: 13, scope: !4005)
!4214 = !DILocation(line: 2243, column: 43, scope: !3820)
!4215 = !DILocation(line: 2243, column: 15, scope: !3820)
!4216 = !DILocation(line: 2243, column: 13, scope: !3820)
!4217 = !DILocation(line: 2244, column: 13, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2244, column: 13)
!4219 = !DILocation(line: 2244, column: 17, scope: !4218)
!4220 = !DILocation(line: 2244, column: 13, scope: !3820)
!4221 = !DILocation(line: 2245, column: 20, scope: !4218)
!4222 = !DILocation(line: 2245, column: 13, scope: !4218)
!4223 = !DILocation(line: 2248, column: 43, scope: !3820)
!4224 = !DILocation(line: 2248, column: 15, scope: !3820)
!4225 = !DILocation(line: 2248, column: 13, scope: !3820)
!4226 = !DILocation(line: 2249, column: 13, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !3820, file: !971, line: 2249, column: 13)
!4228 = !DILocation(line: 2249, column: 17, scope: !4227)
!4229 = !DILocation(line: 2249, column: 13, scope: !3820)
!4230 = !DILocation(line: 2250, column: 20, scope: !4227)
!4231 = !DILocation(line: 2250, column: 13, scope: !4227)
!4232 = !DILocation(line: 2251, column: 5, scope: !3820)
!4233 = !DILocation(line: 2252, column: 5, scope: !3551)
!4234 = !DILocation(line: 2253, column: 1, scope: !3551)
!4235 = distinct !DISubprogram(name: "remove_frame", scope: !971, file: !971, line: 256, type: !4236, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!2908, !4238, !979}
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64, align: 64)
!4239 = !DILocalVariable(name: "framelist", arg: 1, scope: !4235, file: !971, line: 256, type: !4238)
!4240 = !DILocation(line: 256, column: 45, scope: !4235)
!4241 = !DILocalVariable(name: "picnum", arg: 2, scope: !4235, file: !971, line: 256, type: !979)
!4242 = !DILocation(line: 256, column: 62, scope: !4235)
!4243 = !DILocalVariable(name: "remove_pic", scope: !4235, file: !971, line: 258, type: !2908)
!4244 = !DILocation(line: 258, column: 17, scope: !4235)
!4245 = !DILocalVariable(name: "i", scope: !4235, file: !971, line: 259, type: !979)
!4246 = !DILocation(line: 259, column: 9, scope: !4235)
!4247 = !DILocalVariable(name: "remove_idx", scope: !4235, file: !971, line: 259, type: !979)
!4248 = !DILocation(line: 259, column: 12, scope: !4235)
!4249 = !DILocation(line: 261, column: 12, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4235, file: !971, line: 261, column: 5)
!4251 = !DILocation(line: 261, column: 10, scope: !4250)
!4252 = !DILocation(line: 261, column: 27, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4254, file: !971, discriminator: 1)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !971, line: 261, column: 5)
!4255 = !DILocation(line: 261, column: 17, scope: !4253)
!4256 = !DILocation(line: 261, column: 5, scope: !4253)
!4257 = !DILocation(line: 262, column: 23, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !971, line: 262, column: 13)
!4259 = !DILocation(line: 262, column: 13, scope: !4258)
!4260 = !DILocation(line: 262, column: 27, scope: !4258)
!4261 = !DILocation(line: 262, column: 36, scope: !4258)
!4262 = !DILocation(line: 262, column: 62, scope: !4258)
!4263 = !DILocation(line: 262, column: 59, scope: !4258)
!4264 = !DILocation(line: 262, column: 13, scope: !4254)
!4265 = !DILocation(line: 263, column: 36, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4258, file: !971, line: 262, column: 70)
!4267 = !DILocation(line: 263, column: 26, scope: !4266)
!4268 = !DILocation(line: 263, column: 24, scope: !4266)
!4269 = !DILocation(line: 264, column: 26, scope: !4266)
!4270 = !DILocation(line: 264, column: 24, scope: !4266)
!4271 = !DILocation(line: 265, column: 9, scope: !4266)
!4272 = !DILocation(line: 262, column: 62, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4258, file: !971, discriminator: 1)
!4274 = !DILocation(line: 261, column: 32, scope: !4275)
!4275 = !DILexicalBlockFile(scope: !4254, file: !971, discriminator: 2)
!4276 = !DILocation(line: 261, column: 5, scope: !4275)
!4277 = distinct !{!4277, !4278}
!4278 = !DILocation(line: 261, column: 5, scope: !4235)
!4279 = !DILocation(line: 267, column: 9, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4235, file: !971, line: 267, column: 9)
!4281 = !DILocation(line: 267, column: 9, scope: !4235)
!4282 = !DILocation(line: 268, column: 18, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4280, file: !971, line: 268, column: 9)
!4284 = !DILocation(line: 268, column: 16, scope: !4283)
!4285 = !DILocation(line: 268, column: 14, scope: !4283)
!4286 = !DILocation(line: 268, column: 40, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !4288, file: !971, discriminator: 1)
!4288 = distinct !DILexicalBlock(scope: !4283, file: !971, line: 268, column: 9)
!4289 = !DILocation(line: 268, column: 30, scope: !4287)
!4290 = !DILocation(line: 268, column: 9, scope: !4287)
!4291 = !DILocation(line: 269, column: 38, scope: !4288)
!4292 = !DILocation(line: 269, column: 39, scope: !4288)
!4293 = !DILocation(line: 269, column: 28, scope: !4288)
!4294 = !DILocation(line: 269, column: 23, scope: !4288)
!4295 = !DILocation(line: 269, column: 13, scope: !4288)
!4296 = !DILocation(line: 269, column: 26, scope: !4288)
!4297 = !DILocation(line: 268, column: 45, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !4288, file: !971, discriminator: 2)
!4299 = !DILocation(line: 268, column: 9, scope: !4298)
!4300 = distinct !{!4300, !4301}
!4301 = !DILocation(line: 268, column: 9, scope: !4280)
!4302 = !DILocation(line: 269, column: 41, scope: !4303)
!4303 = !DILexicalBlockFile(scope: !4283, file: !971, discriminator: 1)
!4304 = !DILocation(line: 271, column: 12, scope: !4235)
!4305 = !DILocation(line: 271, column: 5, scope: !4235)
!4306 = distinct !DISubprogram(name: "add_frame", scope: !971, file: !971, line: 274, type: !4307, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!979, !4238, !979, !2908}
!4309 = !DILocalVariable(name: "framelist", arg: 1, scope: !4306, file: !971, line: 274, type: !4238)
!4310 = !DILocation(line: 274, column: 34, scope: !4306)
!4311 = !DILocalVariable(name: "maxframes", arg: 2, scope: !4306, file: !971, line: 274, type: !979)
!4312 = !DILocation(line: 274, column: 51, scope: !4306)
!4313 = !DILocalVariable(name: "frame", arg: 3, scope: !4306, file: !971, line: 274, type: !2908)
!4314 = !DILocation(line: 274, column: 74, scope: !4306)
!4315 = !DILocalVariable(name: "i", scope: !4306, file: !971, line: 276, type: !979)
!4316 = !DILocation(line: 276, column: 9, scope: !4306)
!4317 = !DILocation(line: 277, column: 12, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4306, file: !971, line: 277, column: 5)
!4319 = !DILocation(line: 277, column: 10, scope: !4318)
!4320 = !DILocation(line: 277, column: 17, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4322, file: !971, discriminator: 1)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !971, line: 277, column: 5)
!4323 = !DILocation(line: 277, column: 21, scope: !4321)
!4324 = !DILocation(line: 277, column: 19, scope: !4321)
!4325 = !DILocation(line: 277, column: 5, scope: !4321)
!4326 = !DILocation(line: 278, column: 24, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4322, file: !971, line: 278, column: 13)
!4328 = !DILocation(line: 278, column: 14, scope: !4327)
!4329 = !DILocation(line: 278, column: 13, scope: !4322)
!4330 = !DILocation(line: 279, column: 28, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !971, line: 278, column: 28)
!4332 = !DILocation(line: 279, column: 23, scope: !4331)
!4333 = !DILocation(line: 279, column: 13, scope: !4331)
!4334 = !DILocation(line: 279, column: 26, scope: !4331)
!4335 = !DILocation(line: 280, column: 13, scope: !4331)
!4336 = !DILocation(line: 278, column: 25, scope: !4337)
!4337 = !DILexicalBlockFile(scope: !4327, file: !971, discriminator: 1)
!4338 = !DILocation(line: 277, column: 33, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4322, file: !971, discriminator: 2)
!4340 = !DILocation(line: 277, column: 5, scope: !4339)
!4341 = distinct !{!4341, !4342}
!4342 = !DILocation(line: 277, column: 5, scope: !4306)
!4343 = !DILocation(line: 282, column: 5, scope: !4306)
!4344 = !DILocation(line: 283, column: 1, scope: !4306)
!4345 = distinct !DISubprogram(name: "init_get_bits", scope: !1115, file: !1115, line: 615, type: !4346, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!979, !4348, !1119, !979}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!4349 = !DILocalVariable(name: "s", arg: 1, scope: !4345, file: !1115, line: 615, type: !4348)
!4350 = !DILocation(line: 615, column: 48, scope: !4345)
!4351 = !DILocalVariable(name: "buffer", arg: 2, scope: !4345, file: !1115, line: 615, type: !1119)
!4352 = !DILocation(line: 615, column: 66, scope: !4345)
!4353 = !DILocalVariable(name: "bit_size", arg: 3, scope: !4345, file: !1115, line: 616, type: !979)
!4354 = !DILocation(line: 616, column: 37, scope: !4345)
!4355 = !DILocalVariable(name: "buffer_size", scope: !4345, file: !1115, line: 618, type: !979)
!4356 = !DILocation(line: 618, column: 9, scope: !4345)
!4357 = !DILocalVariable(name: "ret", scope: !4345, file: !1115, line: 619, type: !979)
!4358 = !DILocation(line: 619, column: 9, scope: !4345)
!4359 = !DILocation(line: 621, column: 9, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4345, file: !1115, line: 621, column: 9)
!4361 = !DILocation(line: 621, column: 18, scope: !4360)
!4362 = !DILocation(line: 621, column: 64, scope: !4360)
!4363 = !DILocation(line: 621, column: 67, scope: !4364)
!4364 = !DILexicalBlockFile(scope: !4360, file: !1115, discriminator: 1)
!4365 = !DILocation(line: 621, column: 76, scope: !4364)
!4366 = !DILocation(line: 621, column: 80, scope: !4364)
!4367 = !DILocation(line: 621, column: 84, scope: !4368)
!4368 = !DILexicalBlockFile(scope: !4360, file: !1115, discriminator: 2)
!4369 = !DILocation(line: 621, column: 9, scope: !4368)
!4370 = !DILocation(line: 622, column: 18, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4360, file: !1115, line: 621, column: 92)
!4372 = !DILocation(line: 623, column: 16, scope: !4371)
!4373 = !DILocation(line: 624, column: 13, scope: !4371)
!4374 = !DILocation(line: 625, column: 5, scope: !4371)
!4375 = !DILocation(line: 627, column: 20, scope: !4345)
!4376 = !DILocation(line: 627, column: 29, scope: !4345)
!4377 = !DILocation(line: 627, column: 34, scope: !4345)
!4378 = !DILocation(line: 627, column: 17, scope: !4345)
!4379 = !DILocation(line: 629, column: 17, scope: !4345)
!4380 = !DILocation(line: 629, column: 5, scope: !4345)
!4381 = !DILocation(line: 629, column: 8, scope: !4345)
!4382 = !DILocation(line: 629, column: 15, scope: !4345)
!4383 = !DILocation(line: 630, column: 23, scope: !4345)
!4384 = !DILocation(line: 630, column: 5, scope: !4345)
!4385 = !DILocation(line: 630, column: 8, scope: !4345)
!4386 = !DILocation(line: 630, column: 21, scope: !4345)
!4387 = !DILocation(line: 631, column: 29, scope: !4345)
!4388 = !DILocation(line: 631, column: 38, scope: !4345)
!4389 = !DILocation(line: 631, column: 5, scope: !4345)
!4390 = !DILocation(line: 631, column: 8, scope: !4345)
!4391 = !DILocation(line: 631, column: 27, scope: !4345)
!4392 = !DILocation(line: 632, column: 21, scope: !4345)
!4393 = !DILocation(line: 632, column: 30, scope: !4345)
!4394 = !DILocation(line: 632, column: 28, scope: !4345)
!4395 = !DILocation(line: 632, column: 5, scope: !4345)
!4396 = !DILocation(line: 632, column: 8, scope: !4345)
!4397 = !DILocation(line: 632, column: 19, scope: !4345)
!4398 = !DILocation(line: 633, column: 5, scope: !4345)
!4399 = !DILocation(line: 633, column: 8, scope: !4345)
!4400 = !DILocation(line: 633, column: 14, scope: !4345)
!4401 = !DILocation(line: 639, column: 12, scope: !4345)
!4402 = !DILocation(line: 639, column: 5, scope: !4345)
!4403 = distinct !DISubprogram(name: "alloc_sequence_buffers", scope: !971, file: !971, line: 285, type: !2668, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4404 = !DILocalVariable(name: "s", arg: 1, scope: !4403, file: !971, line: 285, type: !2670)
!4405 = !DILocation(line: 285, column: 49, scope: !4403)
!4406 = !DILocalVariable(name: "sbwidth", scope: !4403, file: !971, line: 287, type: !979)
!4407 = !DILocation(line: 287, column: 9, scope: !4403)
!4408 = !DILocation(line: 287, column: 22, scope: !4403)
!4409 = !DILocation(line: 287, column: 25, scope: !4403)
!4410 = !DILocation(line: 287, column: 29, scope: !4403)
!4411 = !DILocation(line: 287, column: 36, scope: !4403)
!4412 = !DILocation(line: 287, column: 42, scope: !4403)
!4413 = !DILocation(line: 287, column: 47, scope: !4403)
!4414 = !DILocalVariable(name: "sbheight", scope: !4403, file: !971, line: 288, type: !979)
!4415 = !DILocation(line: 288, column: 9, scope: !4403)
!4416 = !DILocation(line: 288, column: 23, scope: !4403)
!4417 = !DILocation(line: 288, column: 26, scope: !4403)
!4418 = !DILocation(line: 288, column: 30, scope: !4403)
!4419 = !DILocation(line: 288, column: 38, scope: !4403)
!4420 = !DILocation(line: 288, column: 44, scope: !4403)
!4421 = !DILocation(line: 288, column: 49, scope: !4403)
!4422 = !DILocalVariable(name: "i", scope: !4403, file: !971, line: 289, type: !979)
!4423 = !DILocation(line: 289, column: 9, scope: !4403)
!4424 = !DILocalVariable(name: "w", scope: !4403, file: !971, line: 289, type: !979)
!4425 = !DILocation(line: 289, column: 12, scope: !4403)
!4426 = !DILocalVariable(name: "h", scope: !4403, file: !971, line: 289, type: !979)
!4427 = !DILocation(line: 289, column: 15, scope: !4403)
!4428 = !DILocalVariable(name: "top_padding", scope: !4403, file: !971, line: 289, type: !979)
!4429 = !DILocation(line: 289, column: 18, scope: !4403)
!4430 = !DILocation(line: 292, column: 12, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4403, file: !971, line: 292, column: 5)
!4432 = !DILocation(line: 292, column: 10, scope: !4431)
!4433 = !DILocation(line: 292, column: 17, scope: !4434)
!4434 = !DILexicalBlockFile(scope: !4435, file: !971, discriminator: 1)
!4435 = distinct !DILexicalBlock(scope: !4431, file: !971, line: 292, column: 5)
!4436 = !DILocation(line: 292, column: 19, scope: !4434)
!4437 = !DILocation(line: 292, column: 5, scope: !4434)
!4438 = !DILocalVariable(name: "max_xblen", scope: !4439, file: !971, line: 293, type: !979)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !971, line: 292, column: 29)
!4440 = !DILocation(line: 293, column: 13, scope: !4439)
!4441 = !DILocation(line: 293, column: 32, scope: !4439)
!4442 = !DILocation(line: 293, column: 36, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !4439, file: !971, discriminator: 1)
!4444 = !DILocation(line: 293, column: 39, scope: !4443)
!4445 = !DILocation(line: 293, column: 32, scope: !4443)
!4446 = !DILocation(line: 293, column: 32, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4439, file: !971, discriminator: 2)
!4448 = !DILocation(line: 293, column: 32, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4439, file: !971, discriminator: 3)
!4450 = !DILocation(line: 293, column: 28, scope: !4449)
!4451 = !DILocation(line: 293, column: 13, scope: !4449)
!4452 = !DILocalVariable(name: "max_yblen", scope: !4439, file: !971, line: 294, type: !979)
!4453 = !DILocation(line: 294, column: 13, scope: !4439)
!4454 = !DILocation(line: 294, column: 32, scope: !4439)
!4455 = !DILocation(line: 294, column: 36, scope: !4443)
!4456 = !DILocation(line: 294, column: 39, scope: !4443)
!4457 = !DILocation(line: 294, column: 32, scope: !4443)
!4458 = !DILocation(line: 294, column: 32, scope: !4447)
!4459 = !DILocation(line: 294, column: 32, scope: !4449)
!4460 = !DILocation(line: 294, column: 28, scope: !4449)
!4461 = !DILocation(line: 294, column: 13, scope: !4449)
!4462 = !DILocation(line: 295, column: 13, scope: !4439)
!4463 = !DILocation(line: 295, column: 16, scope: !4439)
!4464 = !DILocation(line: 295, column: 20, scope: !4439)
!4465 = !DILocation(line: 295, column: 30, scope: !4439)
!4466 = !DILocation(line: 295, column: 34, scope: !4443)
!4467 = !DILocation(line: 295, column: 37, scope: !4443)
!4468 = !DILocation(line: 295, column: 30, scope: !4443)
!4469 = !DILocation(line: 295, column: 30, scope: !4447)
!4470 = !DILocation(line: 295, column: 30, scope: !4449)
!4471 = !DILocation(line: 295, column: 26, scope: !4449)
!4472 = !DILocation(line: 295, column: 11, scope: !4449)
!4473 = !DILocation(line: 296, column: 13, scope: !4439)
!4474 = !DILocation(line: 296, column: 16, scope: !4439)
!4475 = !DILocation(line: 296, column: 20, scope: !4439)
!4476 = !DILocation(line: 296, column: 31, scope: !4439)
!4477 = !DILocation(line: 296, column: 35, scope: !4443)
!4478 = !DILocation(line: 296, column: 38, scope: !4443)
!4479 = !DILocation(line: 296, column: 31, scope: !4443)
!4480 = !DILocation(line: 296, column: 31, scope: !4447)
!4481 = !DILocation(line: 296, column: 31, scope: !4449)
!4482 = !DILocation(line: 296, column: 27, scope: !4449)
!4483 = !DILocation(line: 296, column: 11, scope: !4449)
!4484 = !DILocation(line: 303, column: 34, scope: !4439)
!4485 = !DILocation(line: 303, column: 43, scope: !4439)
!4486 = !DILocation(line: 303, column: 31, scope: !4439)
!4487 = !DILocation(line: 303, column: 24, scope: !4439)
!4488 = !DILocation(line: 303, column: 24, scope: !4443)
!4489 = !DILocation(line: 303, column: 59, scope: !4447)
!4490 = !DILocation(line: 303, column: 68, scope: !4447)
!4491 = !DILocation(line: 303, column: 24, scope: !4447)
!4492 = !DILocation(line: 303, column: 24, scope: !4449)
!4493 = !DILocation(line: 303, column: 21, scope: !4449)
!4494 = !DILocation(line: 304, column: 19, scope: !4439)
!4495 = !DILocation(line: 304, column: 21, scope: !4439)
!4496 = !DILocation(line: 304, column: 32, scope: !4439)
!4497 = !DILocation(line: 304, column: 37, scope: !4439)
!4498 = !DILocation(line: 304, column: 43, scope: !4439)
!4499 = !DILocation(line: 304, column: 49, scope: !4439)
!4500 = !DILocation(line: 304, column: 53, scope: !4439)
!4501 = !DILocation(line: 304, column: 56, scope: !4439)
!4502 = !DILocation(line: 304, column: 11, scope: !4439)
!4503 = !DILocation(line: 305, column: 13, scope: !4439)
!4504 = !DILocation(line: 305, column: 30, scope: !4439)
!4505 = !DILocation(line: 305, column: 32, scope: !4439)
!4506 = !DILocation(line: 305, column: 43, scope: !4439)
!4507 = !DILocation(line: 305, column: 48, scope: !4439)
!4508 = !DILocation(line: 305, column: 54, scope: !4439)
!4509 = !DILocation(line: 305, column: 25, scope: !4439)
!4510 = !DILocation(line: 305, column: 62, scope: !4439)
!4511 = !DILocation(line: 305, column: 71, scope: !4439)
!4512 = !DILocation(line: 305, column: 60, scope: !4439)
!4513 = !DILocation(line: 305, column: 11, scope: !4439)
!4514 = !DILocation(line: 307, column: 55, scope: !4439)
!4515 = !DILocation(line: 307, column: 57, scope: !4439)
!4516 = !DILocation(line: 307, column: 56, scope: !4439)
!4517 = !DILocation(line: 307, column: 54, scope: !4439)
!4518 = !DILocation(line: 307, column: 69, scope: !4439)
!4519 = !DILocation(line: 307, column: 79, scope: !4439)
!4520 = !DILocation(line: 307, column: 82, scope: !4439)
!4521 = !DILocation(line: 307, column: 76, scope: !4439)
!4522 = !DILocation(line: 307, column: 71, scope: !4439)
!4523 = !DILocation(line: 307, column: 37, scope: !4439)
!4524 = !DILocation(line: 307, column: 18, scope: !4439)
!4525 = !DILocation(line: 307, column: 9, scope: !4439)
!4526 = !DILocation(line: 307, column: 12, scope: !4439)
!4527 = !DILocation(line: 307, column: 21, scope: !4439)
!4528 = !DILocation(line: 307, column: 26, scope: !4439)
!4529 = !DILocation(line: 307, column: 35, scope: !4439)
!4530 = !DILocation(line: 308, column: 49, scope: !4439)
!4531 = !DILocation(line: 308, column: 50, scope: !4439)
!4532 = !DILocation(line: 308, column: 48, scope: !4439)
!4533 = !DILocation(line: 308, column: 61, scope: !4439)
!4534 = !DILocation(line: 308, column: 64, scope: !4439)
!4535 = !DILocation(line: 308, column: 58, scope: !4439)
!4536 = !DILocation(line: 308, column: 56, scope: !4439)
!4537 = !DILocation(line: 308, column: 32, scope: !4439)
!4538 = !DILocation(line: 308, column: 18, scope: !4439)
!4539 = !DILocation(line: 308, column: 9, scope: !4439)
!4540 = !DILocation(line: 308, column: 12, scope: !4439)
!4541 = !DILocation(line: 308, column: 21, scope: !4439)
!4542 = !DILocation(line: 308, column: 26, scope: !4439)
!4543 = !DILocation(line: 308, column: 30, scope: !4439)
!4544 = !DILocation(line: 309, column: 41, scope: !4439)
!4545 = !DILocation(line: 309, column: 32, scope: !4439)
!4546 = !DILocation(line: 309, column: 35, scope: !4439)
!4547 = !DILocation(line: 309, column: 44, scope: !4439)
!4548 = !DILocation(line: 309, column: 49, scope: !4439)
!4549 = !DILocation(line: 309, column: 61, scope: !4439)
!4550 = !DILocation(line: 309, column: 73, scope: !4439)
!4551 = !DILocation(line: 309, column: 72, scope: !4439)
!4552 = !DILocation(line: 309, column: 82, scope: !4439)
!4553 = !DILocation(line: 309, column: 85, scope: !4439)
!4554 = !DILocation(line: 309, column: 79, scope: !4439)
!4555 = !DILocation(line: 309, column: 75, scope: !4439)
!4556 = !DILocation(line: 309, column: 58, scope: !4439)
!4557 = !DILocation(line: 309, column: 18, scope: !4439)
!4558 = !DILocation(line: 309, column: 9, scope: !4439)
!4559 = !DILocation(line: 309, column: 12, scope: !4439)
!4560 = !DILocation(line: 309, column: 21, scope: !4439)
!4561 = !DILocation(line: 309, column: 26, scope: !4439)
!4562 = !DILocation(line: 309, column: 30, scope: !4439)
!4563 = !DILocation(line: 310, column: 23, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4439, file: !971, line: 310, column: 13)
!4565 = !DILocation(line: 310, column: 14, scope: !4564)
!4566 = !DILocation(line: 310, column: 17, scope: !4564)
!4567 = !DILocation(line: 310, column: 26, scope: !4564)
!4568 = !DILocation(line: 310, column: 31, scope: !4564)
!4569 = !DILocation(line: 310, column: 40, scope: !4564)
!4570 = !DILocation(line: 310, column: 53, scope: !4571)
!4571 = !DILexicalBlockFile(scope: !4564, file: !971, discriminator: 1)
!4572 = !DILocation(line: 310, column: 44, scope: !4571)
!4573 = !DILocation(line: 310, column: 47, scope: !4571)
!4574 = !DILocation(line: 310, column: 56, scope: !4571)
!4575 = !DILocation(line: 310, column: 61, scope: !4571)
!4576 = !DILocation(line: 310, column: 13, scope: !4571)
!4577 = !DILocation(line: 311, column: 13, scope: !4564)
!4578 = !DILocation(line: 312, column: 5, scope: !4439)
!4579 = !DILocation(line: 292, column: 25, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !4435, file: !971, discriminator: 2)
!4581 = !DILocation(line: 292, column: 5, scope: !4580)
!4582 = distinct !{!4582, !4583}
!4583 = !DILocation(line: 292, column: 5, scope: !4403)
!4584 = !DILocation(line: 315, column: 34, scope: !4403)
!4585 = !DILocation(line: 315, column: 43, scope: !4403)
!4586 = !DILocation(line: 315, column: 18, scope: !4403)
!4587 = !DILocation(line: 315, column: 5, scope: !4403)
!4588 = !DILocation(line: 315, column: 8, scope: !4403)
!4589 = !DILocation(line: 315, column: 16, scope: !4403)
!4590 = !DILocation(line: 316, column: 35, scope: !4403)
!4591 = !DILocation(line: 316, column: 44, scope: !4403)
!4592 = !DILocation(line: 316, column: 53, scope: !4403)
!4593 = !DILocation(line: 316, column: 58, scope: !4403)
!4594 = !DILocation(line: 316, column: 19, scope: !4403)
!4595 = !DILocation(line: 316, column: 5, scope: !4403)
!4596 = !DILocation(line: 316, column: 8, scope: !4403)
!4597 = !DILocation(line: 316, column: 17, scope: !4403)
!4598 = !DILocation(line: 318, column: 10, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4403, file: !971, line: 318, column: 9)
!4600 = !DILocation(line: 318, column: 13, scope: !4599)
!4601 = !DILocation(line: 318, column: 21, scope: !4599)
!4602 = !DILocation(line: 318, column: 25, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4599, file: !971, discriminator: 1)
!4604 = !DILocation(line: 318, column: 28, scope: !4603)
!4605 = !DILocation(line: 318, column: 9, scope: !4603)
!4606 = !DILocation(line: 319, column: 9, scope: !4599)
!4607 = !DILocation(line: 320, column: 5, scope: !4403)
!4608 = !DILocation(line: 321, column: 1, scope: !4403)
!4609 = distinct !DISubprogram(name: "free_sequence_buffers", scope: !971, file: !971, line: 352, type: !4610, isLocal: true, isDefinition: true, scopeLine: 353, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !2670}
!4612 = !DILocalVariable(name: "s", arg: 1, scope: !4609, file: !971, line: 352, type: !2670)
!4613 = !DILocation(line: 352, column: 49, scope: !4609)
!4614 = !DILocalVariable(name: "i", scope: !4609, file: !971, line: 354, type: !979)
!4615 = !DILocation(line: 354, column: 9, scope: !4609)
!4616 = !DILocalVariable(name: "j", scope: !4609, file: !971, line: 354, type: !979)
!4617 = !DILocation(line: 354, column: 12, scope: !4609)
!4618 = !DILocalVariable(name: "k", scope: !4609, file: !971, line: 354, type: !979)
!4619 = !DILocation(line: 354, column: 15, scope: !4609)
!4620 = !DILocation(line: 356, column: 12, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4609, file: !971, line: 356, column: 5)
!4622 = !DILocation(line: 356, column: 10, scope: !4621)
!4623 = !DILocation(line: 356, column: 17, scope: !4624)
!4624 = !DILexicalBlockFile(scope: !4625, file: !971, discriminator: 1)
!4625 = distinct !DILexicalBlock(scope: !4621, file: !971, line: 356, column: 5)
!4626 = !DILocation(line: 356, column: 19, scope: !4624)
!4627 = !DILocation(line: 356, column: 5, scope: !4624)
!4628 = !DILocation(line: 357, column: 27, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !971, line: 357, column: 13)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !971, line: 356, column: 39)
!4631 = !DILocation(line: 357, column: 13, scope: !4629)
!4632 = !DILocation(line: 357, column: 16, scope: !4629)
!4633 = !DILocation(line: 357, column: 30, scope: !4629)
!4634 = !DILocation(line: 357, column: 39, scope: !4629)
!4635 = !DILocation(line: 357, column: 13, scope: !4630)
!4636 = !DILocation(line: 358, column: 42, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4629, file: !971, line: 357, column: 48)
!4638 = !DILocation(line: 358, column: 28, scope: !4637)
!4639 = !DILocation(line: 358, column: 31, scope: !4637)
!4640 = !DILocation(line: 358, column: 45, scope: !4637)
!4641 = !DILocation(line: 358, column: 13, scope: !4637)
!4642 = !DILocation(line: 359, column: 34, scope: !4637)
!4643 = !DILocation(line: 359, column: 20, scope: !4637)
!4644 = !DILocation(line: 359, column: 23, scope: !4637)
!4645 = !DILocation(line: 359, column: 37, scope: !4637)
!4646 = !DILocation(line: 359, column: 13, scope: !4637)
!4647 = !DILocation(line: 360, column: 9, scope: !4637)
!4648 = !DILocation(line: 362, column: 16, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4630, file: !971, line: 362, column: 9)
!4650 = !DILocation(line: 362, column: 14, scope: !4649)
!4651 = !DILocation(line: 362, column: 21, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !4653, file: !971, discriminator: 1)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !971, line: 362, column: 9)
!4654 = !DILocation(line: 362, column: 23, scope: !4652)
!4655 = !DILocation(line: 362, column: 9, scope: !4652)
!4656 = !DILocation(line: 363, column: 20, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !971, line: 363, column: 13)
!4658 = !DILocation(line: 363, column: 18, scope: !4657)
!4659 = !DILocation(line: 363, column: 25, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !4661, file: !971, discriminator: 1)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !971, line: 363, column: 13)
!4662 = !DILocation(line: 363, column: 27, scope: !4660)
!4663 = !DILocation(line: 363, column: 13, scope: !4660)
!4664 = !DILocation(line: 364, column: 57, scope: !4661)
!4665 = !DILocation(line: 364, column: 27, scope: !4661)
!4666 = !DILocation(line: 364, column: 54, scope: !4661)
!4667 = !DILocation(line: 364, column: 41, scope: !4661)
!4668 = !DILocation(line: 364, column: 30, scope: !4661)
!4669 = !DILocation(line: 364, column: 44, scope: !4661)
!4670 = !DILocation(line: 364, column: 26, scope: !4661)
!4671 = !DILocation(line: 364, column: 17, scope: !4661)
!4672 = !DILocation(line: 363, column: 33, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4661, file: !971, discriminator: 2)
!4674 = !DILocation(line: 363, column: 13, scope: !4673)
!4675 = distinct !{!4675, !4676}
!4676 = !DILocation(line: 363, column: 13, scope: !4653)
!4677 = !DILocation(line: 364, column: 59, scope: !4678)
!4678 = !DILexicalBlockFile(scope: !4657, file: !971, discriminator: 1)
!4679 = !DILocation(line: 362, column: 29, scope: !4680)
!4680 = !DILexicalBlockFile(scope: !4653, file: !971, discriminator: 2)
!4681 = !DILocation(line: 362, column: 9, scope: !4680)
!4682 = distinct !{!4682, !4683}
!4683 = !DILocation(line: 362, column: 9, scope: !4630)
!4684 = !DILocation(line: 365, column: 5, scope: !4630)
!4685 = !DILocation(line: 356, column: 35, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4625, file: !971, discriminator: 2)
!4687 = !DILocation(line: 356, column: 5, scope: !4686)
!4688 = distinct !{!4688, !4689}
!4689 = !DILocation(line: 356, column: 5, scope: !4609)
!4690 = !DILocation(line: 367, column: 12, scope: !4609)
!4691 = !DILocation(line: 367, column: 15, scope: !4609)
!4692 = !DILocation(line: 367, column: 5, scope: !4609)
!4693 = !DILocation(line: 368, column: 12, scope: !4609)
!4694 = !DILocation(line: 368, column: 15, scope: !4609)
!4695 = !DILocation(line: 368, column: 5, scope: !4609)
!4696 = !DILocation(line: 370, column: 12, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4609, file: !971, line: 370, column: 5)
!4698 = !DILocation(line: 370, column: 10, scope: !4697)
!4699 = !DILocation(line: 370, column: 17, scope: !4700)
!4700 = !DILexicalBlockFile(scope: !4701, file: !971, discriminator: 1)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !971, line: 370, column: 5)
!4702 = !DILocation(line: 370, column: 19, scope: !4700)
!4703 = !DILocation(line: 370, column: 5, scope: !4700)
!4704 = !DILocation(line: 371, column: 28, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4701, file: !971, line: 370, column: 29)
!4706 = !DILocation(line: 371, column: 19, scope: !4705)
!4707 = !DILocation(line: 371, column: 22, scope: !4705)
!4708 = !DILocation(line: 371, column: 31, scope: !4705)
!4709 = !DILocation(line: 371, column: 36, scope: !4705)
!4710 = !DILocation(line: 371, column: 18, scope: !4705)
!4711 = !DILocation(line: 371, column: 9, scope: !4705)
!4712 = !DILocation(line: 372, column: 28, scope: !4705)
!4713 = !DILocation(line: 372, column: 19, scope: !4705)
!4714 = !DILocation(line: 372, column: 22, scope: !4705)
!4715 = !DILocation(line: 372, column: 31, scope: !4705)
!4716 = !DILocation(line: 372, column: 36, scope: !4705)
!4717 = !DILocation(line: 372, column: 18, scope: !4705)
!4718 = !DILocation(line: 372, column: 9, scope: !4705)
!4719 = !DILocation(line: 373, column: 5, scope: !4705)
!4720 = !DILocation(line: 370, column: 25, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !4701, file: !971, discriminator: 2)
!4722 = !DILocation(line: 370, column: 5, scope: !4721)
!4723 = distinct !{!4723, !4724}
!4724 = !DILocation(line: 370, column: 5, scope: !4609)
!4725 = !DILocation(line: 375, column: 5, scope: !4609)
!4726 = !DILocation(line: 375, column: 8, scope: !4609)
!4727 = !DILocation(line: 375, column: 22, scope: !4609)
!4728 = !DILocation(line: 376, column: 15, scope: !4609)
!4729 = !DILocation(line: 376, column: 18, scope: !4609)
!4730 = !DILocation(line: 376, column: 14, scope: !4609)
!4731 = !DILocation(line: 376, column: 5, scope: !4609)
!4732 = !DILocation(line: 377, column: 15, scope: !4609)
!4733 = !DILocation(line: 377, column: 18, scope: !4609)
!4734 = !DILocation(line: 377, column: 14, scope: !4609)
!4735 = !DILocation(line: 377, column: 5, scope: !4609)
!4736 = !DILocation(line: 378, column: 15, scope: !4609)
!4737 = !DILocation(line: 378, column: 18, scope: !4609)
!4738 = !DILocation(line: 378, column: 14, scope: !4609)
!4739 = !DILocation(line: 378, column: 5, scope: !4609)
!4740 = !DILocation(line: 380, column: 15, scope: !4609)
!4741 = !DILocation(line: 380, column: 18, scope: !4609)
!4742 = !DILocation(line: 380, column: 14, scope: !4609)
!4743 = !DILocation(line: 380, column: 5, scope: !4609)
!4744 = !DILocation(line: 381, column: 15, scope: !4609)
!4745 = !DILocation(line: 381, column: 18, scope: !4609)
!4746 = !DILocation(line: 381, column: 14, scope: !4609)
!4747 = !DILocation(line: 381, column: 5, scope: !4609)
!4748 = !DILocation(line: 382, column: 1, scope: !4609)
!4749 = distinct !DISubprogram(name: "get_buffer_with_edge", scope: !971, file: !971, line: 1960, type: !4750, isLocal: true, isDefinition: true, scopeLine: 1961, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!979, !1251, !981, !979}
!4752 = !DILocalVariable(name: "avctx", arg: 1, scope: !4749, file: !971, line: 1960, type: !1251)
!4753 = !DILocation(line: 1960, column: 49, scope: !4749)
!4754 = !DILocalVariable(name: "f", arg: 2, scope: !4749, file: !971, line: 1960, type: !981)
!4755 = !DILocation(line: 1960, column: 65, scope: !4749)
!4756 = !DILocalVariable(name: "flags", arg: 3, scope: !4749, file: !971, line: 1960, type: !979)
!4757 = !DILocation(line: 1960, column: 72, scope: !4749)
!4758 = !DILocalVariable(name: "ret", scope: !4749, file: !971, line: 1962, type: !979)
!4759 = !DILocation(line: 1962, column: 9, scope: !4749)
!4760 = !DILocalVariable(name: "i", scope: !4749, file: !971, line: 1962, type: !979)
!4761 = !DILocation(line: 1962, column: 14, scope: !4749)
!4762 = !DILocalVariable(name: "chroma_x_shift", scope: !4749, file: !971, line: 1963, type: !979)
!4763 = !DILocation(line: 1963, column: 9, scope: !4749)
!4764 = !DILocalVariable(name: "chroma_y_shift", scope: !4749, file: !971, line: 1963, type: !979)
!4765 = !DILocation(line: 1963, column: 25, scope: !4749)
!4766 = !DILocation(line: 1964, column: 44, scope: !4749)
!4767 = !DILocation(line: 1964, column: 51, scope: !4749)
!4768 = !DILocation(line: 1964, column: 11, scope: !4749)
!4769 = !DILocation(line: 1964, column: 9, scope: !4749)
!4770 = !DILocation(line: 1966, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4749, file: !971, line: 1966, column: 9)
!4772 = !DILocation(line: 1966, column: 13, scope: !4771)
!4773 = !DILocation(line: 1966, column: 9, scope: !4749)
!4774 = !DILocation(line: 1967, column: 16, scope: !4771)
!4775 = !DILocation(line: 1967, column: 9, scope: !4771)
!4776 = !DILocation(line: 1969, column: 16, scope: !4749)
!4777 = !DILocation(line: 1969, column: 23, scope: !4749)
!4778 = !DILocation(line: 1969, column: 29, scope: !4749)
!4779 = !DILocation(line: 1969, column: 5, scope: !4749)
!4780 = !DILocation(line: 1969, column: 8, scope: !4749)
!4781 = !DILocation(line: 1969, column: 14, scope: !4749)
!4782 = !DILocation(line: 1970, column: 17, scope: !4749)
!4783 = !DILocation(line: 1970, column: 24, scope: !4749)
!4784 = !DILocation(line: 1970, column: 31, scope: !4749)
!4785 = !DILocation(line: 1970, column: 40, scope: !4749)
!4786 = !DILocation(line: 1970, column: 5, scope: !4749)
!4787 = !DILocation(line: 1970, column: 8, scope: !4749)
!4788 = !DILocation(line: 1970, column: 15, scope: !4749)
!4789 = !DILocation(line: 1971, column: 25, scope: !4749)
!4790 = !DILocation(line: 1971, column: 32, scope: !4749)
!4791 = !DILocation(line: 1971, column: 35, scope: !4749)
!4792 = !DILocation(line: 1971, column: 11, scope: !4749)
!4793 = !DILocation(line: 1971, column: 9, scope: !4749)
!4794 = !DILocation(line: 1972, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4749, file: !971, line: 1972, column: 9)
!4796 = !DILocation(line: 1972, column: 13, scope: !4795)
!4797 = !DILocation(line: 1972, column: 9, scope: !4749)
!4798 = !DILocation(line: 1973, column: 16, scope: !4795)
!4799 = !DILocation(line: 1973, column: 9, scope: !4795)
!4800 = !DILocation(line: 1975, column: 12, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4749, file: !971, line: 1975, column: 5)
!4802 = !DILocation(line: 1975, column: 10, scope: !4801)
!4803 = !DILocation(line: 1975, column: 25, scope: !4804)
!4804 = !DILexicalBlockFile(scope: !4805, file: !971, discriminator: 1)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !971, line: 1975, column: 5)
!4806 = !DILocation(line: 1975, column: 17, scope: !4804)
!4807 = !DILocation(line: 1975, column: 20, scope: !4804)
!4808 = !DILocation(line: 1975, column: 5, scope: !4804)
!4809 = !DILocalVariable(name: "offset", scope: !4810, file: !971, line: 1976, type: !979)
!4810 = distinct !DILexicalBlock(scope: !4805, file: !971, line: 1975, column: 34)
!4811 = !DILocation(line: 1976, column: 13, scope: !4810)
!4812 = !DILocation(line: 1976, column: 30, scope: !4810)
!4813 = !DILocation(line: 1976, column: 32, scope: !4810)
!4814 = !DILocation(line: 1976, column: 35, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4810, file: !971, discriminator: 1)
!4816 = !DILocation(line: 1976, column: 36, scope: !4815)
!4817 = !DILocation(line: 1976, column: 30, scope: !4815)
!4818 = !DILocation(line: 1976, column: 41, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !4810, file: !971, discriminator: 2)
!4820 = !DILocation(line: 1976, column: 30, scope: !4819)
!4821 = !DILocation(line: 1976, column: 30, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4810, file: !971, discriminator: 3)
!4823 = !DILocation(line: 1976, column: 30, scope: !4824)
!4824 = !DILexicalBlockFile(scope: !4810, file: !971, discriminator: 4)
!4825 = !DILocation(line: 1976, column: 26, scope: !4824)
!4826 = !DILocation(line: 1977, column: 34, scope: !4810)
!4827 = !DILocation(line: 1977, column: 22, scope: !4810)
!4828 = !DILocation(line: 1977, column: 25, scope: !4810)
!4829 = !DILocation(line: 1976, column: 62, scope: !4824)
!4830 = !DILocation(line: 1977, column: 37, scope: !4810)
!4831 = !DILocation(line: 1976, column: 13, scope: !4824)
!4832 = !DILocation(line: 1978, column: 23, scope: !4810)
!4833 = !DILocation(line: 1978, column: 17, scope: !4810)
!4834 = !DILocation(line: 1978, column: 9, scope: !4810)
!4835 = !DILocation(line: 1978, column: 12, scope: !4810)
!4836 = !DILocation(line: 1978, column: 20, scope: !4810)
!4837 = !DILocation(line: 1979, column: 5, scope: !4810)
!4838 = !DILocation(line: 1975, column: 30, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4805, file: !971, discriminator: 2)
!4840 = !DILocation(line: 1975, column: 5, scope: !4839)
!4841 = distinct !{!4841, !4842}
!4842 = !DILocation(line: 1975, column: 5, scope: !4749)
!4843 = !DILocation(line: 1980, column: 16, scope: !4749)
!4844 = !DILocation(line: 1980, column: 23, scope: !4749)
!4845 = !DILocation(line: 1980, column: 5, scope: !4749)
!4846 = !DILocation(line: 1980, column: 8, scope: !4749)
!4847 = !DILocation(line: 1980, column: 14, scope: !4749)
!4848 = !DILocation(line: 1981, column: 17, scope: !4749)
!4849 = !DILocation(line: 1981, column: 24, scope: !4749)
!4850 = !DILocation(line: 1981, column: 5, scope: !4749)
!4851 = !DILocation(line: 1981, column: 8, scope: !4749)
!4852 = !DILocation(line: 1981, column: 15, scope: !4749)
!4853 = !DILocation(line: 1983, column: 5, scope: !4749)
!4854 = !DILocation(line: 1984, column: 1, scope: !4749)
!4855 = distinct !DISubprogram(name: "alloc_buffers", scope: !971, file: !971, line: 323, type: !4856, isLocal: true, isDefinition: true, scopeLine: 324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!979, !2670, !979}
!4858 = !DILocalVariable(name: "s", arg: 1, scope: !4855, file: !971, line: 323, type: !2670)
!4859 = !DILocation(line: 323, column: 40, scope: !4855)
!4860 = !DILocalVariable(name: "stride", arg: 2, scope: !4855, file: !971, line: 323, type: !979)
!4861 = !DILocation(line: 323, column: 47, scope: !4855)
!4862 = !DILocalVariable(name: "w", scope: !4855, file: !971, line: 325, type: !979)
!4863 = !DILocation(line: 325, column: 9, scope: !4855)
!4864 = !DILocation(line: 325, column: 13, scope: !4855)
!4865 = !DILocation(line: 325, column: 16, scope: !4855)
!4866 = !DILocation(line: 325, column: 20, scope: !4855)
!4867 = !DILocalVariable(name: "h", scope: !4855, file: !971, line: 326, type: !979)
!4868 = !DILocation(line: 326, column: 9, scope: !4855)
!4869 = !DILocation(line: 326, column: 13, scope: !4855)
!4870 = !DILocation(line: 326, column: 16, scope: !4855)
!4871 = !DILocation(line: 326, column: 20, scope: !4855)
!4872 = !DILocation(line: 328, column: 5, scope: !4855)
!4873 = distinct !{!4873, !4872}
!4874 = !DILocation(line: 328, column: 16, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4876, file: !971, discriminator: 1)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !971, line: 328, column: 14)
!4877 = distinct !DILexicalBlock(scope: !4855, file: !971, line: 328, column: 8)
!4878 = !DILocation(line: 328, column: 26, scope: !4875)
!4879 = !DILocation(line: 328, column: 23, scope: !4875)
!4880 = !DILocation(line: 328, column: 14, scope: !4875)
!4881 = !DILocation(line: 328, column: 32, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !4883, file: !971, discriminator: 2)
!4883 = distinct !DILexicalBlock(scope: !4876, file: !971, line: 328, column: 30)
!4884 = !DILocation(line: 328, column: 89, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !4882, file: !971, discriminator: 4)
!4886 = !DILocation(line: 328, column: 89, scope: !4882)
!4887 = !DILocation(line: 328, column: 100, scope: !4888)
!4888 = !DILexicalBlockFile(scope: !4877, file: !971, discriminator: 3)
!4889 = !DILocation(line: 329, column: 12, scope: !4855)
!4890 = !DILocation(line: 331, column: 9, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4855, file: !971, line: 331, column: 9)
!4892 = !DILocation(line: 331, column: 12, scope: !4891)
!4893 = !DILocation(line: 331, column: 29, scope: !4891)
!4894 = !DILocation(line: 331, column: 26, scope: !4891)
!4895 = !DILocation(line: 331, column: 9, scope: !4855)
!4896 = !DILocation(line: 332, column: 9, scope: !4891)
!4897 = !DILocation(line: 333, column: 5, scope: !4855)
!4898 = !DILocation(line: 333, column: 8, scope: !4855)
!4899 = !DILocation(line: 333, column: 22, scope: !4855)
!4900 = !DILocation(line: 335, column: 15, scope: !4855)
!4901 = !DILocation(line: 335, column: 18, scope: !4855)
!4902 = !DILocation(line: 335, column: 14, scope: !4855)
!4903 = !DILocation(line: 335, column: 5, scope: !4855)
!4904 = !DILocation(line: 336, column: 12, scope: !4855)
!4905 = !DILocation(line: 336, column: 15, scope: !4855)
!4906 = !DILocation(line: 336, column: 5, scope: !4855)
!4907 = !DILocation(line: 337, column: 15, scope: !4855)
!4908 = !DILocation(line: 337, column: 18, scope: !4855)
!4909 = !DILocation(line: 337, column: 14, scope: !4855)
!4910 = !DILocation(line: 337, column: 5, scope: !4855)
!4911 = !DILocation(line: 338, column: 15, scope: !4855)
!4912 = !DILocation(line: 338, column: 18, scope: !4855)
!4913 = !DILocation(line: 338, column: 14, scope: !4855)
!4914 = !DILocation(line: 338, column: 5, scope: !4855)
!4915 = !DILocation(line: 340, column: 47, scope: !4855)
!4916 = !DILocation(line: 340, column: 31, scope: !4855)
!4917 = !DILocation(line: 340, column: 5, scope: !4855)
!4918 = !DILocation(line: 340, column: 8, scope: !4855)
!4919 = !DILocation(line: 340, column: 29, scope: !4855)
!4920 = !DILocation(line: 342, column: 33, scope: !4855)
!4921 = !DILocation(line: 342, column: 39, scope: !4855)
!4922 = !DILocation(line: 342, column: 32, scope: !4855)
!4923 = !DILocation(line: 342, column: 46, scope: !4855)
!4924 = !DILocation(line: 342, column: 47, scope: !4855)
!4925 = !DILocation(line: 342, column: 45, scope: !4855)
!4926 = !DILocation(line: 342, column: 52, scope: !4855)
!4927 = !DILocation(line: 342, column: 16, scope: !4855)
!4928 = !DILocation(line: 342, column: 5, scope: !4855)
!4929 = !DILocation(line: 342, column: 8, scope: !4855)
!4930 = !DILocation(line: 342, column: 14, scope: !4855)
!4931 = !DILocation(line: 343, column: 36, scope: !4855)
!4932 = !DILocation(line: 343, column: 20, scope: !4855)
!4933 = !DILocation(line: 343, column: 5, scope: !4855)
!4934 = !DILocation(line: 343, column: 8, scope: !4855)
!4935 = !DILocation(line: 343, column: 18, scope: !4855)
!4936 = !DILocation(line: 345, column: 10, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4855, file: !971, line: 345, column: 9)
!4938 = !DILocation(line: 345, column: 13, scope: !4937)
!4939 = !DILocation(line: 345, column: 34, scope: !4937)
!4940 = !DILocation(line: 345, column: 38, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !4937, file: !971, discriminator: 1)
!4942 = !DILocation(line: 345, column: 41, scope: !4941)
!4943 = !DILocation(line: 345, column: 47, scope: !4941)
!4944 = !DILocation(line: 345, column: 51, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4937, file: !971, discriminator: 2)
!4946 = !DILocation(line: 345, column: 54, scope: !4945)
!4947 = !DILocation(line: 345, column: 9, scope: !4945)
!4948 = !DILocation(line: 346, column: 9, scope: !4937)
!4949 = !DILocation(line: 348, column: 24, scope: !4855)
!4950 = !DILocation(line: 348, column: 5, scope: !4855)
!4951 = !DILocation(line: 348, column: 8, scope: !4855)
!4952 = !DILocation(line: 348, column: 22, scope: !4855)
!4953 = !DILocation(line: 349, column: 5, scope: !4855)
!4954 = !DILocation(line: 350, column: 1, scope: !4855)
!4955 = distinct !DISubprogram(name: "dirac_decode_picture_header", scope: !971, file: !971, line: 1990, type: !2668, isLocal: true, isDefinition: true, scopeLine: 1991, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!4956 = !DILocalVariable(name: "s", arg: 1, scope: !4955, file: !971, line: 1990, type: !2670)
!4957 = !DILocation(line: 1990, column: 54, scope: !4955)
!4958 = !DILocalVariable(name: "retire", scope: !4955, file: !971, line: 1992, type: !980)
!4959 = !DILocation(line: 1992, column: 14, scope: !4955)
!4960 = !DILocalVariable(name: "picnum", scope: !4955, file: !971, line: 1992, type: !980)
!4961 = !DILocation(line: 1992, column: 22, scope: !4955)
!4962 = !DILocalVariable(name: "i", scope: !4955, file: !971, line: 1993, type: !979)
!4963 = !DILocation(line: 1993, column: 9, scope: !4955)
!4964 = !DILocalVariable(name: "j", scope: !4955, file: !971, line: 1993, type: !979)
!4965 = !DILocation(line: 1993, column: 12, scope: !4955)
!4966 = !DILocalVariable(name: "ret", scope: !4955, file: !971, line: 1993, type: !979)
!4967 = !DILocation(line: 1993, column: 15, scope: !4955)
!4968 = !DILocalVariable(name: "refdist", scope: !4955, file: !971, line: 1994, type: !1011)
!4969 = !DILocation(line: 1994, column: 13, scope: !4955)
!4970 = !DILocalVariable(name: "refnum", scope: !4955, file: !971, line: 1994, type: !1011)
!4971 = !DILocation(line: 1994, column: 22, scope: !4955)
!4972 = !DILocalVariable(name: "gb", scope: !4955, file: !971, line: 1995, type: !4348)
!4973 = !DILocation(line: 1995, column: 20, scope: !4955)
!4974 = !DILocation(line: 1995, column: 26, scope: !4955)
!4975 = !DILocation(line: 1995, column: 29, scope: !4955)
!4976 = !DILocation(line: 1998, column: 82, scope: !4955)
!4977 = !DILocation(line: 1998, column: 68, scope: !4955)
!4978 = !DILocation(line: 1998, column: 14, scope: !4955)
!4979 = !DILocation(line: 1998, column: 17, scope: !4955)
!4980 = !DILocation(line: 1998, column: 34, scope: !4955)
!4981 = !DILocation(line: 1998, column: 43, scope: !4955)
!4982 = !DILocation(line: 1998, column: 66, scope: !4955)
!4983 = !DILocation(line: 1998, column: 12, scope: !4955)
!4984 = !DILocation(line: 2001, column: 12, scope: !4955)
!4985 = !DILocation(line: 2001, column: 15, scope: !4955)
!4986 = !DILocation(line: 2001, column: 44, scope: !4955)
!4987 = !DILocation(line: 2001, column: 5, scope: !4955)
!4988 = !DILocation(line: 2005, column: 9, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4955, file: !971, line: 2005, column: 9)
!4990 = !DILocation(line: 2005, column: 12, scope: !4989)
!4991 = !DILocation(line: 2005, column: 25, scope: !4989)
!4992 = !DILocation(line: 2005, column: 9, scope: !4955)
!4993 = !DILocation(line: 2006, column: 27, scope: !4989)
!4994 = !DILocation(line: 2006, column: 9, scope: !4989)
!4995 = !DILocation(line: 2006, column: 12, scope: !4989)
!4996 = !DILocation(line: 2006, column: 25, scope: !4989)
!4997 = !DILocation(line: 2008, column: 22, scope: !4955)
!4998 = !DILocation(line: 2008, column: 25, scope: !4955)
!4999 = !DILocation(line: 2008, column: 37, scope: !4955)
!5000 = !DILocation(line: 2008, column: 5, scope: !4955)
!5001 = !DILocation(line: 2008, column: 8, scope: !4955)
!5002 = !DILocation(line: 2008, column: 20, scope: !4955)
!5003 = !DILocation(line: 2009, column: 12, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4955, file: !971, line: 2009, column: 5)
!5005 = !DILocation(line: 2009, column: 10, scope: !5004)
!5006 = !DILocation(line: 2009, column: 17, scope: !5007)
!5007 = !DILexicalBlockFile(scope: !5008, file: !971, discriminator: 1)
!5008 = distinct !DILexicalBlock(scope: !5004, file: !971, line: 2009, column: 5)
!5009 = !DILocation(line: 2009, column: 21, scope: !5007)
!5010 = !DILocation(line: 2009, column: 24, scope: !5007)
!5011 = !DILocation(line: 2009, column: 19, scope: !5007)
!5012 = !DILocation(line: 2009, column: 5, scope: !5007)
!5013 = !DILocation(line: 2010, column: 19, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5008, file: !971, line: 2009, column: 39)
!5015 = !DILocation(line: 2010, column: 48, scope: !5014)
!5016 = !DILocation(line: 2010, column: 28, scope: !5014)
!5017 = !DILocation(line: 2010, column: 26, scope: !5014)
!5018 = !DILocation(line: 2010, column: 18, scope: !5014)
!5019 = !DILocation(line: 2010, column: 16, scope: !5014)
!5020 = !DILocation(line: 2011, column: 17, scope: !5014)
!5021 = !DILocation(line: 2015, column: 16, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5014, file: !971, line: 2015, column: 9)
!5023 = !DILocation(line: 2015, column: 14, scope: !5022)
!5024 = !DILocation(line: 2015, column: 21, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !5026, file: !971, discriminator: 1)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !971, line: 2015, column: 9)
!5027 = !DILocation(line: 2015, column: 23, scope: !5025)
!5028 = !DILocation(line: 2015, column: 27, scope: !5025)
!5029 = !DILocation(line: 2015, column: 30, scope: !5030)
!5030 = !DILexicalBlockFile(scope: !5026, file: !971, discriminator: 2)
!5031 = !DILocation(line: 2015, column: 27, scope: !5030)
!5032 = !DILocation(line: 2015, column: 9, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !5022, file: !971, discriminator: 3)
!5034 = !DILocation(line: 2016, column: 31, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5026, file: !971, line: 2016, column: 17)
!5036 = !DILocation(line: 2016, column: 17, scope: !5035)
!5037 = !DILocation(line: 2016, column: 20, scope: !5035)
!5038 = !DILocation(line: 2017, column: 17, scope: !5035)
!5039 = !DILocation(line: 2017, column: 36, scope: !5040)
!5040 = !DILexicalBlockFile(scope: !5035, file: !971, discriminator: 1)
!5041 = !DILocation(line: 2017, column: 22, scope: !5040)
!5042 = !DILocation(line: 2017, column: 25, scope: !5040)
!5043 = !DILocation(line: 2017, column: 40, scope: !5040)
!5044 = !DILocation(line: 2017, column: 49, scope: !5040)
!5045 = !DILocation(line: 2017, column: 74, scope: !5040)
!5046 = !DILocation(line: 2017, column: 72, scope: !5040)
!5047 = !DILocation(line: 2017, column: 82, scope: !5040)
!5048 = !DILocation(line: 2017, column: 21, scope: !5040)
!5049 = !DILocation(line: 2017, column: 104, scope: !5050)
!5050 = !DILexicalBlockFile(scope: !5035, file: !971, discriminator: 2)
!5051 = !DILocation(line: 2017, column: 90, scope: !5050)
!5052 = !DILocation(line: 2017, column: 93, scope: !5050)
!5053 = !DILocation(line: 2017, column: 108, scope: !5050)
!5054 = !DILocation(line: 2017, column: 117, scope: !5050)
!5055 = !DILocation(line: 2017, column: 142, scope: !5050)
!5056 = !DILocation(line: 2017, column: 140, scope: !5050)
!5057 = !DILocation(line: 2017, column: 21, scope: !5050)
!5058 = !DILocation(line: 2017, column: 169, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5035, file: !971, discriminator: 3)
!5060 = !DILocation(line: 2017, column: 155, scope: !5059)
!5061 = !DILocation(line: 2017, column: 158, scope: !5059)
!5062 = !DILocation(line: 2017, column: 173, scope: !5059)
!5063 = !DILocation(line: 2017, column: 182, scope: !5059)
!5064 = !DILocation(line: 2017, column: 207, scope: !5059)
!5065 = !DILocation(line: 2017, column: 205, scope: !5059)
!5066 = !DILocation(line: 2017, column: 153, scope: !5059)
!5067 = !DILocation(line: 2017, column: 21, scope: !5059)
!5068 = !DILocation(line: 2017, column: 21, scope: !5069)
!5069 = !DILexicalBlockFile(scope: !5035, file: !971, discriminator: 4)
!5070 = !DILocation(line: 2017, column: 219, scope: !5069)
!5071 = !DILocation(line: 2017, column: 217, scope: !5069)
!5072 = !DILocation(line: 2016, column: 17, scope: !5025)
!5073 = !DILocation(line: 2018, column: 48, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5035, file: !971, line: 2017, column: 228)
!5075 = !DILocation(line: 2018, column: 34, scope: !5074)
!5076 = !DILocation(line: 2018, column: 37, scope: !5074)
!5077 = !DILocation(line: 2018, column: 29, scope: !5074)
!5078 = !DILocation(line: 2018, column: 17, scope: !5074)
!5079 = !DILocation(line: 2018, column: 20, scope: !5074)
!5080 = !DILocation(line: 2018, column: 32, scope: !5074)
!5081 = !DILocation(line: 2019, column: 43, scope: !5074)
!5082 = !DILocation(line: 2019, column: 29, scope: !5074)
!5083 = !DILocation(line: 2019, column: 32, scope: !5074)
!5084 = !DILocation(line: 2019, column: 47, scope: !5074)
!5085 = !DILocation(line: 2019, column: 56, scope: !5074)
!5086 = !DILocation(line: 2019, column: 81, scope: !5074)
!5087 = !DILocation(line: 2019, column: 79, scope: !5074)
!5088 = !DILocation(line: 2019, column: 89, scope: !5074)
!5089 = !DILocation(line: 2019, column: 28, scope: !5074)
!5090 = !DILocation(line: 2019, column: 111, scope: !5091)
!5091 = !DILexicalBlockFile(scope: !5074, file: !971, discriminator: 1)
!5092 = !DILocation(line: 2019, column: 97, scope: !5091)
!5093 = !DILocation(line: 2019, column: 100, scope: !5091)
!5094 = !DILocation(line: 2019, column: 115, scope: !5091)
!5095 = !DILocation(line: 2019, column: 124, scope: !5091)
!5096 = !DILocation(line: 2019, column: 149, scope: !5091)
!5097 = !DILocation(line: 2019, column: 147, scope: !5091)
!5098 = !DILocation(line: 2019, column: 28, scope: !5091)
!5099 = !DILocation(line: 2019, column: 176, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5074, file: !971, discriminator: 2)
!5101 = !DILocation(line: 2019, column: 162, scope: !5100)
!5102 = !DILocation(line: 2019, column: 165, scope: !5100)
!5103 = !DILocation(line: 2019, column: 180, scope: !5100)
!5104 = !DILocation(line: 2019, column: 189, scope: !5100)
!5105 = !DILocation(line: 2019, column: 214, scope: !5100)
!5106 = !DILocation(line: 2019, column: 212, scope: !5100)
!5107 = !DILocation(line: 2019, column: 160, scope: !5100)
!5108 = !DILocation(line: 2019, column: 28, scope: !5100)
!5109 = !DILocation(line: 2019, column: 28, scope: !5110)
!5110 = !DILexicalBlockFile(scope: !5074, file: !971, discriminator: 3)
!5111 = !DILocation(line: 2019, column: 25, scope: !5110)
!5112 = !DILocation(line: 2020, column: 13, scope: !5074)
!5113 = !DILocation(line: 2017, column: 219, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5035, file: !971, discriminator: 5)
!5115 = !DILocation(line: 2015, column: 40, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !5026, file: !971, discriminator: 4)
!5117 = !DILocation(line: 2015, column: 9, scope: !5116)
!5118 = distinct !{!5118, !5119}
!5119 = !DILocation(line: 2015, column: 9, scope: !5014)
!5120 = !DILocation(line: 2022, column: 26, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5014, file: !971, line: 2022, column: 13)
!5122 = !DILocation(line: 2022, column: 14, scope: !5121)
!5123 = !DILocation(line: 2022, column: 17, scope: !5121)
!5124 = !DILocation(line: 2022, column: 29, scope: !5121)
!5125 = !DILocation(line: 2022, column: 32, scope: !5126)
!5126 = !DILexicalBlockFile(scope: !5121, file: !971, discriminator: 1)
!5127 = !DILocation(line: 2022, column: 13, scope: !5126)
!5128 = !DILocation(line: 2023, column: 20, scope: !5121)
!5129 = !DILocation(line: 2023, column: 23, scope: !5121)
!5130 = !DILocation(line: 2023, column: 13, scope: !5121)
!5131 = !DILocation(line: 2026, column: 26, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5014, file: !971, line: 2026, column: 13)
!5133 = !DILocation(line: 2026, column: 14, scope: !5132)
!5134 = !DILocation(line: 2026, column: 17, scope: !5132)
!5135 = !DILocation(line: 2026, column: 13, scope: !5014)
!5136 = !DILocation(line: 2027, column: 20, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5132, file: !971, line: 2027, column: 13)
!5138 = !DILocation(line: 2027, column: 18, scope: !5137)
!5139 = !DILocation(line: 2027, column: 25, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5141, file: !971, discriminator: 1)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !971, line: 2027, column: 13)
!5142 = !DILocation(line: 2027, column: 27, scope: !5140)
!5143 = !DILocation(line: 2027, column: 13, scope: !5140)
!5144 = !DILocation(line: 2028, column: 36, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !971, line: 2028, column: 21)
!5146 = !DILocation(line: 2028, column: 22, scope: !5145)
!5147 = !DILocation(line: 2028, column: 25, scope: !5145)
!5148 = !DILocation(line: 2028, column: 39, scope: !5145)
!5149 = !DILocation(line: 2028, column: 48, scope: !5145)
!5150 = !DILocation(line: 2028, column: 21, scope: !5141)
!5151 = !DILocation(line: 2029, column: 53, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5145, file: !971, line: 2028, column: 57)
!5153 = !DILocation(line: 2029, column: 39, scope: !5152)
!5154 = !DILocation(line: 2029, column: 42, scope: !5152)
!5155 = !DILocation(line: 2029, column: 33, scope: !5152)
!5156 = !DILocation(line: 2029, column: 21, scope: !5152)
!5157 = !DILocation(line: 2029, column: 24, scope: !5152)
!5158 = !DILocation(line: 2029, column: 36, scope: !5152)
!5159 = !DILocation(line: 2030, column: 48, scope: !5152)
!5160 = !DILocation(line: 2030, column: 51, scope: !5152)
!5161 = !DILocation(line: 2030, column: 70, scope: !5152)
!5162 = !DILocation(line: 2030, column: 58, scope: !5152)
!5163 = !DILocation(line: 2030, column: 61, scope: !5152)
!5164 = !DILocation(line: 2030, column: 74, scope: !5152)
!5165 = !DILocation(line: 2030, column: 27, scope: !5152)
!5166 = !DILocation(line: 2030, column: 25, scope: !5152)
!5167 = !DILocation(line: 2031, column: 25, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5152, file: !971, line: 2031, column: 25)
!5169 = !DILocation(line: 2031, column: 29, scope: !5168)
!5170 = !DILocation(line: 2031, column: 25, scope: !5152)
!5171 = !DILocation(line: 2032, column: 32, scope: !5168)
!5172 = !DILocation(line: 2032, column: 25, scope: !5168)
!5173 = !DILocation(line: 2033, column: 21, scope: !5152)
!5174 = !DILocation(line: 2028, column: 54, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5145, file: !971, discriminator: 1)
!5176 = !DILocation(line: 2027, column: 43, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5141, file: !971, discriminator: 2)
!5178 = !DILocation(line: 2027, column: 13, scope: !5177)
!5179 = distinct !{!5179, !5180}
!5180 = !DILocation(line: 2027, column: 13, scope: !5132)
!5181 = !DILocation(line: 2034, column: 17, scope: !5137)
!5182 = !DILocation(line: 2036, column: 26, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5014, file: !971, line: 2036, column: 13)
!5184 = !DILocation(line: 2036, column: 14, scope: !5183)
!5185 = !DILocation(line: 2036, column: 17, scope: !5183)
!5186 = !DILocation(line: 2036, column: 13, scope: !5014)
!5187 = !DILocation(line: 2037, column: 20, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5183, file: !971, line: 2036, column: 30)
!5189 = !DILocation(line: 2037, column: 23, scope: !5188)
!5190 = !DILocation(line: 2037, column: 13, scope: !5188)
!5191 = !DILocation(line: 2038, column: 13, scope: !5188)
!5192 = !DILocation(line: 2041, column: 5, scope: !5014)
!5193 = !DILocation(line: 2009, column: 35, scope: !5194)
!5194 = !DILexicalBlockFile(scope: !5008, file: !971, discriminator: 2)
!5195 = !DILocation(line: 2009, column: 5, scope: !5194)
!5196 = distinct !{!5196, !5197}
!5197 = !DILocation(line: 2009, column: 5, scope: !4955)
!5198 = !DILocation(line: 2044, column: 9, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !4955, file: !971, line: 2044, column: 9)
!5200 = !DILocation(line: 2044, column: 12, scope: !5199)
!5201 = !DILocation(line: 2044, column: 29, scope: !5199)
!5202 = !DILocation(line: 2044, column: 9, scope: !4955)
!5203 = !DILocation(line: 2045, column: 19, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5199, file: !971, line: 2044, column: 40)
!5205 = !DILocation(line: 2045, column: 48, scope: !5204)
!5206 = !DILocation(line: 2045, column: 28, scope: !5204)
!5207 = !DILocation(line: 2045, column: 26, scope: !5204)
!5208 = !DILocation(line: 2045, column: 16, scope: !5204)
!5209 = !DILocation(line: 2046, column: 13, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5204, file: !971, line: 2046, column: 13)
!5211 = !DILocation(line: 2046, column: 23, scope: !5210)
!5212 = !DILocation(line: 2046, column: 20, scope: !5210)
!5213 = !DILocation(line: 2046, column: 13, scope: !5204)
!5214 = !DILocalVariable(name: "retire_pic", scope: !5215, file: !971, line: 2047, type: !2908)
!5215 = distinct !DILexicalBlock(scope: !5210, file: !971, line: 2046, column: 31)
!5216 = !DILocation(line: 2047, column: 25, scope: !5215)
!5217 = !DILocation(line: 2047, column: 51, scope: !5215)
!5218 = !DILocation(line: 2047, column: 54, scope: !5215)
!5219 = !DILocation(line: 2047, column: 66, scope: !5215)
!5220 = !DILocation(line: 2047, column: 38, scope: !5215)
!5221 = !DILocation(line: 2049, column: 17, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5215, file: !971, line: 2049, column: 17)
!5223 = !DILocation(line: 2049, column: 17, scope: !5215)
!5224 = !DILocation(line: 2050, column: 17, scope: !5222)
!5225 = !DILocation(line: 2050, column: 29, scope: !5222)
!5226 = !DILocation(line: 2050, column: 39, scope: !5222)
!5227 = !DILocation(line: 2052, column: 24, scope: !5222)
!5228 = !DILocation(line: 2052, column: 27, scope: !5222)
!5229 = !DILocation(line: 2052, column: 17, scope: !5222)
!5230 = !DILocation(line: 2053, column: 9, scope: !5215)
!5231 = !DILocation(line: 2056, column: 9, scope: !5204)
!5232 = !DILocation(line: 2056, column: 26, scope: !5233)
!5233 = !DILexicalBlockFile(scope: !5204, file: !971, discriminator: 1)
!5234 = !DILocation(line: 2056, column: 29, scope: !5233)
!5235 = !DILocation(line: 2056, column: 44, scope: !5233)
!5236 = !DILocation(line: 2056, column: 47, scope: !5233)
!5237 = !DILocation(line: 2056, column: 16, scope: !5233)
!5238 = !DILocation(line: 2056, column: 9, scope: !5233)
!5239 = !DILocation(line: 2057, column: 20, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5204, file: !971, line: 2056, column: 65)
!5241 = !DILocation(line: 2057, column: 23, scope: !5240)
!5242 = !DILocation(line: 2057, column: 13, scope: !5240)
!5243 = !DILocation(line: 2058, column: 26, scope: !5240)
!5244 = !DILocation(line: 2058, column: 29, scope: !5240)
!5245 = !DILocation(line: 2058, column: 41, scope: !5240)
!5246 = !DILocation(line: 2058, column: 44, scope: !5240)
!5247 = !DILocation(line: 2058, column: 59, scope: !5240)
!5248 = !DILocation(line: 2058, column: 68, scope: !5240)
!5249 = !DILocation(line: 2058, column: 13, scope: !5240)
!5250 = !DILocation(line: 2058, column: 93, scope: !5240)
!5251 = !DILocation(line: 2058, column: 103, scope: !5240)
!5252 = !DILocation(line: 2056, column: 9, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !5204, file: !971, discriminator: 2)
!5254 = distinct !{!5254, !5231}
!5255 = !DILocation(line: 2060, column: 5, scope: !5204)
!5256 = !DILocation(line: 2062, column: 9, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !4955, file: !971, line: 2062, column: 9)
!5258 = !DILocation(line: 2062, column: 12, scope: !5257)
!5259 = !DILocation(line: 2062, column: 9, scope: !4955)
!5260 = !DILocation(line: 2063, column: 50, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !971, line: 2062, column: 22)
!5262 = !DILocation(line: 2063, column: 15, scope: !5261)
!5263 = !DILocation(line: 2063, column: 13, scope: !5261)
!5264 = !DILocation(line: 2064, column: 13, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5261, file: !971, line: 2064, column: 13)
!5266 = !DILocation(line: 2064, column: 17, scope: !5265)
!5267 = !DILocation(line: 2064, column: 13, scope: !5261)
!5268 = !DILocation(line: 2065, column: 20, scope: !5265)
!5269 = !DILocation(line: 2065, column: 13, scope: !5265)
!5270 = !DILocation(line: 2066, column: 46, scope: !5261)
!5271 = !DILocation(line: 2066, column: 15, scope: !5261)
!5272 = !DILocation(line: 2066, column: 13, scope: !5261)
!5273 = !DILocation(line: 2067, column: 13, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5261, file: !971, line: 2067, column: 13)
!5275 = !DILocation(line: 2067, column: 17, scope: !5274)
!5276 = !DILocation(line: 2067, column: 13, scope: !5261)
!5277 = !DILocation(line: 2068, column: 20, scope: !5274)
!5278 = !DILocation(line: 2068, column: 13, scope: !5274)
!5279 = !DILocation(line: 2069, column: 5, scope: !5261)
!5280 = !DILocation(line: 2070, column: 36, scope: !4955)
!5281 = !DILocation(line: 2070, column: 11, scope: !4955)
!5282 = !DILocation(line: 2070, column: 9, scope: !4955)
!5283 = !DILocation(line: 2071, column: 9, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !4955, file: !971, line: 2071, column: 9)
!5285 = !DILocation(line: 2071, column: 13, scope: !5284)
!5286 = !DILocation(line: 2071, column: 9, scope: !4955)
!5287 = !DILocation(line: 2072, column: 16, scope: !5284)
!5288 = !DILocation(line: 2072, column: 9, scope: !5284)
!5289 = !DILocation(line: 2074, column: 17, scope: !4955)
!5290 = !DILocation(line: 2074, column: 5, scope: !4955)
!5291 = !DILocation(line: 2075, column: 5, scope: !4955)
!5292 = !DILocation(line: 2076, column: 1, scope: !4955)
!5293 = distinct !DISubprogram(name: "dirac_decode_frame_internal", scope: !971, file: !971, line: 1863, type: !2668, isLocal: true, isDefinition: true, scopeLine: 1864, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!5294 = !DILocalVariable(name: "s", arg: 1, scope: !5293, file: !971, line: 1863, type: !2670)
!5295 = !DILocation(line: 1863, column: 54, scope: !5293)
!5296 = !DILocalVariable(name: "d", scope: !5293, file: !971, line: 1865, type: !5297)
!5297 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTContext", file: !2785, line: 72, baseType: !5298)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTContext", file: !2785, line: 54, size: 5376, align: 64, elements: !5299)
!5299 = !{!5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5312, !5316, !5317, !5318, !5319, !5320, !5324}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5298, file: !2785, line: 55, baseType: !987, size: 64, align: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5298, file: !2785, line: 56, baseType: !987, size: 64, align: 64, offset: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5298, file: !2785, line: 57, baseType: !979, size: 32, align: 32, offset: 128)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5298, file: !2785, line: 58, baseType: !979, size: 32, align: 32, offset: 160)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !5298, file: !2785, line: 59, baseType: !979, size: 32, align: 32, offset: 192)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "decomposition_count", scope: !5298, file: !2785, line: 60, baseType: !979, size: 32, align: 32, offset: 224)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "support", scope: !5298, file: !2785, line: 61, baseType: !979, size: 32, align: 32, offset: 256)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_compose", scope: !5298, file: !2785, line: 63, baseType: !5308, size: 64, align: 64, offset: 320)
!5308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5309, size: 64, align: 64)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !5311, !979, !979, !979, !979}
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64, align: 64)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_l0", scope: !5298, file: !2785, line: 64, baseType: !5313, size: 64, align: 64, offset: 384)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64, align: 64)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null}
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_h0", scope: !5298, file: !2785, line: 65, baseType: !5313, size: 64, align: 64, offset: 448)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_l1", scope: !5298, file: !2785, line: 66, baseType: !5313, size: 64, align: 64, offset: 512)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_h1", scope: !5298, file: !2785, line: 67, baseType: !5313, size: 64, align: 64, offset: 576)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose", scope: !5298, file: !2785, line: 68, baseType: !5313, size: 64, align: 64, offset: 640)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "horizontal_compose", scope: !5298, file: !2785, line: 69, baseType: !5321, size: 64, align: 64, offset: 704)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64, align: 64)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{null, !987, !987, !979}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5298, file: !2785, line: 71, baseType: !5325, size: 4608, align: 64, offset: 768)
!5325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5326, size: 4608, align: 64, elements: !991)
!5326 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTCompose", file: !2785, line: 35, baseType: !5327)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTCompose", file: !2785, line: 32, size: 576, align: 64, elements: !5328)
!5328 = !{!5329, !5330}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5327, file: !2785, line: 33, baseType: !986, size: 512, align: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5327, file: !2785, line: 34, baseType: !979, size: 32, align: 32, offset: 512)
!5331 = !DILocation(line: 1865, column: 16, scope: !5293)
!5332 = !DILocalVariable(name: "y", scope: !5293, file: !971, line: 1866, type: !979)
!5333 = !DILocation(line: 1866, column: 9, scope: !5293)
!5334 = !DILocalVariable(name: "i", scope: !5293, file: !971, line: 1866, type: !979)
!5335 = !DILocation(line: 1866, column: 12, scope: !5293)
!5336 = !DILocalVariable(name: "comp", scope: !5293, file: !971, line: 1866, type: !979)
!5337 = !DILocation(line: 1866, column: 15, scope: !5293)
!5338 = !DILocalVariable(name: "dsty", scope: !5293, file: !971, line: 1866, type: !979)
!5339 = !DILocation(line: 1866, column: 21, scope: !5293)
!5340 = !DILocalVariable(name: "ret", scope: !5293, file: !971, line: 1867, type: !979)
!5341 = !DILocation(line: 1867, column: 9, scope: !5293)
!5342 = !DILocation(line: 1869, column: 9, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5293, file: !971, line: 1869, column: 9)
!5344 = !DILocation(line: 1869, column: 12, scope: !5343)
!5345 = !DILocation(line: 1869, column: 9, scope: !5293)
!5346 = !DILocation(line: 1871, column: 14, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !971, line: 1871, column: 13)
!5348 = distinct !DILexicalBlock(scope: !5343, file: !971, line: 1869, column: 23)
!5349 = !DILocation(line: 1871, column: 17, scope: !5347)
!5350 = !DILocation(line: 1871, column: 13, scope: !5348)
!5351 = !DILocation(line: 1872, column: 23, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !971, line: 1872, column: 13)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !971, line: 1871, column: 29)
!5354 = !DILocation(line: 1872, column: 18, scope: !5352)
!5355 = !DILocation(line: 1872, column: 28, scope: !5356)
!5356 = !DILexicalBlockFile(scope: !5357, file: !971, discriminator: 1)
!5357 = distinct !DILexicalBlock(scope: !5352, file: !971, line: 1872, column: 13)
!5358 = !DILocation(line: 1872, column: 33, scope: !5356)
!5359 = !DILocation(line: 1872, column: 13, scope: !5356)
!5360 = !DILocalVariable(name: "p", scope: !5361, file: !971, line: 1873, type: !5362)
!5361 = distinct !DILexicalBlock(scope: !5357, file: !971, line: 1872, column: 46)
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64, align: 64)
!5363 = !DILocation(line: 1873, column: 24, scope: !5361)
!5364 = !DILocation(line: 1873, column: 38, scope: !5361)
!5365 = !DILocation(line: 1873, column: 29, scope: !5361)
!5366 = !DILocation(line: 1873, column: 32, scope: !5361)
!5367 = !DILocation(line: 1874, column: 24, scope: !5361)
!5368 = !DILocation(line: 1874, column: 27, scope: !5361)
!5369 = !DILocation(line: 1874, column: 32, scope: !5361)
!5370 = !DILocation(line: 1874, column: 40, scope: !5361)
!5371 = !DILocation(line: 1874, column: 43, scope: !5361)
!5372 = !DILocation(line: 1874, column: 48, scope: !5361)
!5373 = !DILocation(line: 1874, column: 57, scope: !5361)
!5374 = !DILocation(line: 1874, column: 60, scope: !5361)
!5375 = !DILocation(line: 1874, column: 65, scope: !5361)
!5376 = !DILocation(line: 1874, column: 55, scope: !5361)
!5377 = !DILocation(line: 1874, column: 17, scope: !5361)
!5378 = !DILocation(line: 1875, column: 13, scope: !5361)
!5379 = !DILocation(line: 1872, column: 42, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !5357, file: !971, discriminator: 2)
!5381 = !DILocation(line: 1872, column: 13, scope: !5380)
!5382 = distinct !{!5382, !5383}
!5383 = !DILocation(line: 1872, column: 13, scope: !5353)
!5384 = !DILocation(line: 1876, column: 9, scope: !5353)
!5385 = !DILocation(line: 1877, column: 14, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5348, file: !971, line: 1877, column: 13)
!5387 = !DILocation(line: 1877, column: 17, scope: !5386)
!5388 = !DILocation(line: 1877, column: 13, scope: !5348)
!5389 = !DILocation(line: 1878, column: 40, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !971, line: 1878, column: 17)
!5391 = distinct !DILexicalBlock(scope: !5386, file: !971, line: 1877, column: 27)
!5392 = !DILocation(line: 1878, column: 24, scope: !5390)
!5393 = !DILocation(line: 1878, column: 22, scope: !5390)
!5394 = !DILocation(line: 1878, column: 44, scope: !5390)
!5395 = !DILocation(line: 1878, column: 17, scope: !5391)
!5396 = !DILocation(line: 1879, column: 24, scope: !5390)
!5397 = !DILocation(line: 1879, column: 17, scope: !5390)
!5398 = !DILocation(line: 1880, column: 9, scope: !5391)
!5399 = !DILocation(line: 1881, column: 5, scope: !5348)
!5400 = !DILocation(line: 1883, column: 15, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5293, file: !971, line: 1883, column: 5)
!5402 = !DILocation(line: 1883, column: 10, scope: !5401)
!5403 = !DILocation(line: 1883, column: 20, scope: !5404)
!5404 = !DILexicalBlockFile(scope: !5405, file: !971, discriminator: 1)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !971, line: 1883, column: 5)
!5406 = !DILocation(line: 1883, column: 25, scope: !5404)
!5407 = !DILocation(line: 1883, column: 5, scope: !5404)
!5408 = !DILocalVariable(name: "p", scope: !5409, file: !971, line: 1884, type: !5362)
!5409 = distinct !DILexicalBlock(scope: !5405, file: !971, line: 1883, column: 38)
!5410 = !DILocation(line: 1884, column: 16, scope: !5409)
!5411 = !DILocation(line: 1884, column: 30, scope: !5409)
!5412 = !DILocation(line: 1884, column: 21, scope: !5409)
!5413 = !DILocation(line: 1884, column: 24, scope: !5409)
!5414 = !DILocalVariable(name: "frame", scope: !5409, file: !971, line: 1885, type: !987)
!5415 = !DILocation(line: 1885, column: 18, scope: !5409)
!5416 = !DILocation(line: 1885, column: 60, scope: !5409)
!5417 = !DILocation(line: 1885, column: 26, scope: !5409)
!5418 = !DILocation(line: 1885, column: 29, scope: !5409)
!5419 = !DILocation(line: 1885, column: 46, scope: !5409)
!5420 = !DILocation(line: 1885, column: 55, scope: !5409)
!5421 = !DILocation(line: 1888, column: 16, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5409, file: !971, line: 1888, column: 9)
!5423 = !DILocation(line: 1888, column: 14, scope: !5422)
!5424 = !DILocation(line: 1888, column: 21, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !5426, file: !971, discriminator: 1)
!5426 = distinct !DILexicalBlock(scope: !5422, file: !971, line: 1888, column: 9)
!5427 = !DILocation(line: 1888, column: 23, scope: !5425)
!5428 = !DILocation(line: 1888, column: 9, scope: !5425)
!5429 = !DILocation(line: 1889, column: 37, scope: !5426)
!5430 = !DILocation(line: 1889, column: 40, scope: !5426)
!5431 = !DILocation(line: 1889, column: 63, scope: !5426)
!5432 = !DILocation(line: 1889, column: 68, scope: !5426)
!5433 = !DILocation(line: 1889, column: 71, scope: !5426)
!5434 = !DILocation(line: 1889, column: 77, scope: !5426)
!5435 = !DILocation(line: 1889, column: 82, scope: !5426)
!5436 = !DILocation(line: 1889, column: 85, scope: !5426)
!5437 = !DILocation(line: 1889, column: 64, scope: !5426)
!5438 = !DILocation(line: 1889, column: 61, scope: !5426)
!5439 = !DILocation(line: 1889, column: 32, scope: !5426)
!5440 = !DILocation(line: 1889, column: 13, scope: !5426)
!5441 = !DILocation(line: 1889, column: 16, scope: !5426)
!5442 = !DILocation(line: 1889, column: 35, scope: !5426)
!5443 = !DILocation(line: 1888, column: 29, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5426, file: !971, discriminator: 2)
!5445 = !DILocation(line: 1888, column: 9, scope: !5444)
!5446 = distinct !{!5446, !5447}
!5447 = !DILocation(line: 1888, column: 9, scope: !5409)
!5448 = !DILocation(line: 1891, column: 14, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5409, file: !971, line: 1891, column: 13)
!5450 = !DILocation(line: 1891, column: 17, scope: !5449)
!5451 = !DILocation(line: 1891, column: 26, scope: !5449)
!5452 = !DILocation(line: 1891, column: 30, scope: !5453)
!5453 = !DILexicalBlockFile(scope: !5449, file: !971, discriminator: 1)
!5454 = !DILocation(line: 1891, column: 33, scope: !5453)
!5455 = !DILocation(line: 1891, column: 13, scope: !5453)
!5456 = !DILocation(line: 1893, column: 20, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5449, file: !971, line: 1892, column: 9)
!5458 = !DILocation(line: 1893, column: 23, scope: !5457)
!5459 = !DILocation(line: 1893, column: 28, scope: !5457)
!5460 = !DILocation(line: 1893, column: 36, scope: !5457)
!5461 = !DILocation(line: 1893, column: 39, scope: !5457)
!5462 = !DILocation(line: 1893, column: 44, scope: !5457)
!5463 = !DILocation(line: 1893, column: 53, scope: !5457)
!5464 = !DILocation(line: 1893, column: 56, scope: !5457)
!5465 = !DILocation(line: 1893, column: 61, scope: !5457)
!5466 = !DILocation(line: 1893, column: 51, scope: !5457)
!5467 = !DILocation(line: 1893, column: 13, scope: !5457)
!5468 = !DILocation(line: 1894, column: 36, scope: !5457)
!5469 = !DILocation(line: 1894, column: 39, scope: !5457)
!5470 = !DILocation(line: 1894, column: 19, scope: !5457)
!5471 = !DILocation(line: 1894, column: 17, scope: !5457)
!5472 = !DILocation(line: 1895, column: 17, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5457, file: !971, line: 1895, column: 17)
!5474 = !DILocation(line: 1895, column: 21, scope: !5473)
!5475 = !DILocation(line: 1895, column: 17, scope: !5457)
!5476 = !DILocation(line: 1896, column: 24, scope: !5473)
!5477 = !DILocation(line: 1896, column: 17, scope: !5473)
!5478 = !DILocation(line: 1897, column: 9, scope: !5457)
!5479 = !DILocation(line: 1898, column: 41, scope: !5409)
!5480 = !DILocation(line: 1898, column: 44, scope: !5409)
!5481 = !DILocation(line: 1898, column: 50, scope: !5409)
!5482 = !DILocation(line: 1898, column: 53, scope: !5409)
!5483 = !DILocation(line: 1898, column: 64, scope: !5409)
!5484 = !DILocation(line: 1899, column: 36, scope: !5409)
!5485 = !DILocation(line: 1899, column: 39, scope: !5409)
!5486 = !DILocation(line: 1899, column: 54, scope: !5409)
!5487 = !DILocation(line: 1899, column: 57, scope: !5409)
!5488 = !DILocation(line: 1898, column: 15, scope: !5409)
!5489 = !DILocation(line: 1898, column: 13, scope: !5409)
!5490 = !DILocation(line: 1900, column: 13, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5409, file: !971, line: 1900, column: 13)
!5492 = !DILocation(line: 1900, column: 17, scope: !5491)
!5493 = !DILocation(line: 1900, column: 13, scope: !5409)
!5494 = !DILocation(line: 1901, column: 20, scope: !5491)
!5495 = !DILocation(line: 1901, column: 13, scope: !5491)
!5496 = !DILocation(line: 1903, column: 14, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5409, file: !971, line: 1903, column: 13)
!5498 = !DILocation(line: 1903, column: 17, scope: !5497)
!5499 = !DILocation(line: 1903, column: 13, scope: !5409)
!5500 = !DILocation(line: 1904, column: 20, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !971, line: 1904, column: 13)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !971, line: 1903, column: 27)
!5503 = !DILocation(line: 1904, column: 18, scope: !5501)
!5504 = !DILocation(line: 1904, column: 25, scope: !5505)
!5505 = !DILexicalBlockFile(scope: !5506, file: !971, discriminator: 1)
!5506 = distinct !DILexicalBlock(scope: !5501, file: !971, line: 1904, column: 13)
!5507 = !DILocation(line: 1904, column: 29, scope: !5505)
!5508 = !DILocation(line: 1904, column: 32, scope: !5505)
!5509 = !DILocation(line: 1904, column: 27, scope: !5505)
!5510 = !DILocation(line: 1904, column: 13, scope: !5505)
!5511 = !DILocalVariable(name: "idx", scope: !5512, file: !971, line: 1905, type: !979)
!5512 = distinct !DILexicalBlock(scope: !5506, file: !971, line: 1904, column: 49)
!5513 = !DILocation(line: 1905, column: 21, scope: !5512)
!5514 = !DILocation(line: 1905, column: 28, scope: !5512)
!5515 = !DILocation(line: 1905, column: 31, scope: !5512)
!5516 = !DILocation(line: 1905, column: 41, scope: !5512)
!5517 = !DILocation(line: 1905, column: 46, scope: !5512)
!5518 = !DILocation(line: 1906, column: 44, scope: !5512)
!5519 = !DILocation(line: 1906, column: 45, scope: !5512)
!5520 = !DILocation(line: 1906, column: 17, scope: !5512)
!5521 = !DILocation(line: 1907, column: 53, scope: !5512)
!5522 = !DILocation(line: 1907, column: 17, scope: !5512)
!5523 = !DILocation(line: 1907, column: 20, scope: !5512)
!5524 = !DILocation(line: 1907, column: 29, scope: !5512)
!5525 = !DILocation(line: 1907, column: 58, scope: !5512)
!5526 = !DILocation(line: 1907, column: 66, scope: !5512)
!5527 = !DILocation(line: 1907, column: 68, scope: !5512)
!5528 = !DILocation(line: 1907, column: 71, scope: !5512)
!5529 = !DILocation(line: 1907, column: 67, scope: !5512)
!5530 = !DILocation(line: 1907, column: 64, scope: !5512)
!5531 = !DILocation(line: 1908, column: 58, scope: !5512)
!5532 = !DILocation(line: 1908, column: 61, scope: !5512)
!5533 = !DILocation(line: 1909, column: 58, scope: !5512)
!5534 = !DILocation(line: 1909, column: 61, scope: !5512)
!5535 = !DILocation(line: 1909, column: 66, scope: !5512)
!5536 = !DILocation(line: 1909, column: 72, scope: !5512)
!5537 = !DILocation(line: 1909, column: 74, scope: !5512)
!5538 = !DILocation(line: 1909, column: 77, scope: !5512)
!5539 = !DILocation(line: 1909, column: 82, scope: !5512)
!5540 = !DILocation(line: 1909, column: 73, scope: !5512)
!5541 = !DILocation(line: 1909, column: 70, scope: !5512)
!5542 = !DILocation(line: 1910, column: 58, scope: !5512)
!5543 = !DILocation(line: 1910, column: 61, scope: !5512)
!5544 = !DILocation(line: 1910, column: 66, scope: !5512)
!5545 = !DILocation(line: 1910, column: 74, scope: !5512)
!5546 = !DILocation(line: 1910, column: 77, scope: !5512)
!5547 = !DILocation(line: 1911, column: 13, scope: !5512)
!5548 = !DILocation(line: 1904, column: 42, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5506, file: !971, discriminator: 2)
!5550 = !DILocation(line: 1904, column: 13, scope: !5549)
!5551 = distinct !{!5551, !5552}
!5552 = !DILocation(line: 1904, column: 13, scope: !5502)
!5553 = !DILocation(line: 1912, column: 9, scope: !5502)
!5554 = !DILocalVariable(name: "rowheight", scope: !5555, file: !971, line: 1913, type: !979)
!5555 = distinct !DILexicalBlock(scope: !5497, file: !971, line: 1912, column: 16)
!5556 = !DILocation(line: 1913, column: 17, scope: !5555)
!5557 = !DILocation(line: 1913, column: 29, scope: !5555)
!5558 = !DILocation(line: 1913, column: 32, scope: !5555)
!5559 = !DILocation(line: 1913, column: 38, scope: !5555)
!5560 = !DILocation(line: 1913, column: 41, scope: !5555)
!5561 = !DILocation(line: 1913, column: 37, scope: !5555)
!5562 = !DILocation(line: 1915, column: 30, scope: !5555)
!5563 = !DILocation(line: 1915, column: 33, scope: !5555)
!5564 = !DILocation(line: 1915, column: 36, scope: !5555)
!5565 = !DILocation(line: 1915, column: 43, scope: !5555)
!5566 = !DILocation(line: 1915, column: 46, scope: !5555)
!5567 = !DILocation(line: 1915, column: 54, scope: !5555)
!5568 = !DILocation(line: 1915, column: 57, scope: !5555)
!5569 = !DILocation(line: 1915, column: 64, scope: !5555)
!5570 = !DILocation(line: 1915, column: 67, scope: !5555)
!5571 = !DILocation(line: 1915, column: 13, scope: !5555)
!5572 = !DILocation(line: 1917, column: 20, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5555, file: !971, line: 1917, column: 13)
!5574 = !DILocation(line: 1917, column: 18, scope: !5573)
!5575 = !DILocation(line: 1917, column: 25, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !5577, file: !971, discriminator: 1)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !971, line: 1917, column: 13)
!5578 = !DILocation(line: 1917, column: 29, scope: !5576)
!5579 = !DILocation(line: 1917, column: 32, scope: !5576)
!5580 = !DILocation(line: 1917, column: 27, scope: !5576)
!5581 = !DILocation(line: 1917, column: 13, scope: !5576)
!5582 = !DILocalVariable(name: "ret", scope: !5583, file: !971, line: 1918, type: !979)
!5583 = distinct !DILexicalBlock(scope: !5577, file: !971, line: 1917, column: 47)
!5584 = !DILocation(line: 1918, column: 21, scope: !5583)
!5585 = !DILocation(line: 1918, column: 48, scope: !5583)
!5586 = !DILocation(line: 1918, column: 63, scope: !5583)
!5587 = !DILocation(line: 1918, column: 51, scope: !5583)
!5588 = !DILocation(line: 1918, column: 54, scope: !5583)
!5589 = !DILocation(line: 1918, column: 67, scope: !5583)
!5590 = !DILocation(line: 1918, column: 73, scope: !5583)
!5591 = !DILocation(line: 1918, column: 76, scope: !5583)
!5592 = !DILocation(line: 1918, column: 83, scope: !5583)
!5593 = !DILocation(line: 1918, column: 86, scope: !5583)
!5594 = !DILocation(line: 1918, column: 27, scope: !5583)
!5595 = !DILocation(line: 1919, column: 21, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5583, file: !971, line: 1919, column: 21)
!5597 = !DILocation(line: 1919, column: 25, scope: !5596)
!5598 = !DILocation(line: 1919, column: 21, scope: !5583)
!5599 = !DILocation(line: 1920, column: 28, scope: !5596)
!5600 = !DILocation(line: 1920, column: 21, scope: !5596)
!5601 = !DILocation(line: 1921, column: 13, scope: !5583)
!5602 = !DILocation(line: 1917, column: 43, scope: !5603)
!5603 = !DILexicalBlockFile(scope: !5577, file: !971, discriminator: 2)
!5604 = !DILocation(line: 1917, column: 13, scope: !5603)
!5605 = distinct !{!5605, !5606}
!5606 = !DILocation(line: 1917, column: 13, scope: !5555)
!5607 = !DILocation(line: 1923, column: 20, scope: !5555)
!5608 = !DILocation(line: 1923, column: 23, scope: !5555)
!5609 = !DILocation(line: 1923, column: 13, scope: !5555)
!5610 = !DILocation(line: 1923, column: 35, scope: !5555)
!5611 = !DILocation(line: 1923, column: 38, scope: !5555)
!5612 = !DILocation(line: 1923, column: 34, scope: !5555)
!5613 = !DILocation(line: 1923, column: 33, scope: !5555)
!5614 = !DILocation(line: 1923, column: 46, scope: !5555)
!5615 = !DILocation(line: 1923, column: 49, scope: !5555)
!5616 = !DILocation(line: 1923, column: 45, scope: !5555)
!5617 = !DILocation(line: 1925, column: 21, scope: !5555)
!5618 = !DILocation(line: 1925, column: 24, scope: !5555)
!5619 = !DILocation(line: 1925, column: 20, scope: !5555)
!5620 = !DILocation(line: 1925, column: 18, scope: !5555)
!5621 = !DILocation(line: 1926, column: 20, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5555, file: !971, line: 1926, column: 13)
!5623 = !DILocation(line: 1926, column: 18, scope: !5622)
!5624 = !DILocation(line: 1926, column: 25, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !5626, file: !971, discriminator: 1)
!5626 = distinct !DILexicalBlock(scope: !5622, file: !971, line: 1926, column: 13)
!5627 = !DILocation(line: 1926, column: 29, scope: !5625)
!5628 = !DILocation(line: 1926, column: 32, scope: !5625)
!5629 = !DILocation(line: 1926, column: 27, scope: !5625)
!5630 = !DILocation(line: 1926, column: 13, scope: !5625)
!5631 = !DILocalVariable(name: "h", scope: !5632, file: !971, line: 1927, type: !979)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !971, line: 1926, column: 47)
!5633 = !DILocation(line: 1927, column: 21, scope: !5632)
!5634 = !DILocalVariable(name: "start", scope: !5632, file: !971, line: 1928, type: !979)
!5635 = !DILocation(line: 1928, column: 21, scope: !5632)
!5636 = !DILocation(line: 1928, column: 31, scope: !5632)
!5637 = !DILocation(line: 1928, column: 37, scope: !5632)
!5638 = !DILocation(line: 1928, column: 30, scope: !5632)
!5639 = !DILocation(line: 1928, column: 46, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !5632, file: !971, discriminator: 1)
!5641 = !DILocation(line: 1928, column: 30, scope: !5640)
!5642 = !DILocation(line: 1928, column: 30, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5632, file: !971, discriminator: 2)
!5644 = !DILocation(line: 1928, column: 30, scope: !5645)
!5645 = !DILexicalBlockFile(scope: !5632, file: !971, discriminator: 3)
!5646 = !DILocation(line: 1928, column: 21, scope: !5645)
!5647 = !DILocalVariable(name: "mctmp", scope: !5632, file: !971, line: 1929, type: !1483)
!5648 = !DILocation(line: 1929, column: 27, scope: !5632)
!5649 = !DILocation(line: 1929, column: 35, scope: !5632)
!5650 = !DILocation(line: 1929, column: 38, scope: !5632)
!5651 = !DILocation(line: 1929, column: 46, scope: !5632)
!5652 = !DILocation(line: 1929, column: 48, scope: !5632)
!5653 = !DILocation(line: 1929, column: 47, scope: !5632)
!5654 = !DILocation(line: 1929, column: 44, scope: !5632)
!5655 = !DILocalVariable(name: "blocks", scope: !5632, file: !971, line: 1930, type: !2880)
!5656 = !DILocation(line: 1930, column: 29, scope: !5632)
!5657 = !DILocation(line: 1930, column: 38, scope: !5632)
!5658 = !DILocation(line: 1930, column: 41, scope: !5632)
!5659 = !DILocation(line: 1930, column: 52, scope: !5632)
!5660 = !DILocation(line: 1930, column: 54, scope: !5632)
!5661 = !DILocation(line: 1930, column: 57, scope: !5632)
!5662 = !DILocation(line: 1930, column: 53, scope: !5632)
!5663 = !DILocation(line: 1930, column: 50, scope: !5632)
!5664 = !DILocation(line: 1932, column: 35, scope: !5632)
!5665 = !DILocation(line: 1932, column: 38, scope: !5632)
!5666 = !DILocation(line: 1932, column: 41, scope: !5632)
!5667 = !DILocation(line: 1932, column: 17, scope: !5632)
!5668 = !DILocation(line: 1934, column: 21, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5632, file: !971, line: 1934, column: 21)
!5670 = !DILocation(line: 1934, column: 26, scope: !5669)
!5671 = !DILocation(line: 1934, column: 29, scope: !5669)
!5672 = !DILocation(line: 1934, column: 37, scope: !5669)
!5673 = !DILocation(line: 1934, column: 23, scope: !5669)
!5674 = !DILocation(line: 1934, column: 40, scope: !5669)
!5675 = !DILocation(line: 1934, column: 43, scope: !5676)
!5676 = !DILexicalBlockFile(scope: !5669, file: !971, discriminator: 1)
!5677 = !DILocation(line: 1934, column: 49, scope: !5676)
!5678 = !DILocation(line: 1934, column: 52, scope: !5676)
!5679 = !DILocation(line: 1934, column: 48, scope: !5676)
!5680 = !DILocation(line: 1934, column: 60, scope: !5676)
!5681 = !DILocation(line: 1934, column: 63, scope: !5676)
!5682 = !DILocation(line: 1934, column: 58, scope: !5676)
!5683 = !DILocation(line: 1934, column: 21, scope: !5676)
!5684 = !DILocation(line: 1935, column: 25, scope: !5669)
!5685 = !DILocation(line: 1935, column: 28, scope: !5669)
!5686 = !DILocation(line: 1935, column: 37, scope: !5669)
!5687 = !DILocation(line: 1935, column: 35, scope: !5669)
!5688 = !DILocation(line: 1935, column: 23, scope: !5669)
!5689 = !DILocation(line: 1935, column: 21, scope: !5669)
!5690 = !DILocation(line: 1937, column: 25, scope: !5669)
!5691 = !DILocation(line: 1937, column: 28, scope: !5669)
!5692 = !DILocation(line: 1937, column: 37, scope: !5669)
!5693 = !DILocation(line: 1937, column: 45, scope: !5669)
!5694 = !DILocation(line: 1937, column: 43, scope: !5669)
!5695 = !DILocation(line: 1937, column: 34, scope: !5669)
!5696 = !DILocation(line: 1937, column: 23, scope: !5669)
!5697 = !DILocation(line: 1938, column: 21, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5632, file: !971, line: 1938, column: 21)
!5699 = !DILocation(line: 1938, column: 23, scope: !5698)
!5700 = !DILocation(line: 1938, column: 21, scope: !5632)
!5701 = !DILocation(line: 1939, column: 21, scope: !5698)
!5702 = !DILocation(line: 1941, column: 24, scope: !5632)
!5703 = !DILocation(line: 1941, column: 32, scope: !5632)
!5704 = !DILocation(line: 1941, column: 35, scope: !5632)
!5705 = !DILocation(line: 1941, column: 31, scope: !5632)
!5706 = !DILocation(line: 1941, column: 30, scope: !5632)
!5707 = !DILocation(line: 1941, column: 43, scope: !5632)
!5708 = !DILocation(line: 1941, column: 46, scope: !5632)
!5709 = !DILocation(line: 1941, column: 42, scope: !5632)
!5710 = !DILocation(line: 1941, column: 29, scope: !5632)
!5711 = !DILocation(line: 1941, column: 17, scope: !5632)
!5712 = !DILocation(line: 1941, column: 59, scope: !5632)
!5713 = !DILocation(line: 1941, column: 58, scope: !5632)
!5714 = !DILocation(line: 1941, column: 57, scope: !5632)
!5715 = !DILocation(line: 1942, column: 24, scope: !5632)
!5716 = !DILocation(line: 1942, column: 27, scope: !5632)
!5717 = !DILocation(line: 1942, column: 35, scope: !5632)
!5718 = !DILocation(line: 1942, column: 42, scope: !5632)
!5719 = !DILocation(line: 1942, column: 48, scope: !5632)
!5720 = !DILocation(line: 1942, column: 17, scope: !5632)
!5721 = !DILocation(line: 1944, column: 27, scope: !5632)
!5722 = !DILocation(line: 1944, column: 35, scope: !5632)
!5723 = !DILocation(line: 1944, column: 33, scope: !5632)
!5724 = !DILocation(line: 1944, column: 26, scope: !5632)
!5725 = !DILocation(line: 1944, column: 41, scope: !5632)
!5726 = !DILocation(line: 1944, column: 44, scope: !5632)
!5727 = !DILocation(line: 1944, column: 40, scope: !5632)
!5728 = !DILocation(line: 1944, column: 53, scope: !5632)
!5729 = !DILocation(line: 1944, column: 56, scope: !5632)
!5730 = !DILocation(line: 1944, column: 51, scope: !5632)
!5731 = !DILocation(line: 1944, column: 23, scope: !5632)
!5732 = !DILocation(line: 1945, column: 44, scope: !5632)
!5733 = !DILocation(line: 1945, column: 52, scope: !5632)
!5734 = !DILocation(line: 1945, column: 50, scope: !5632)
!5735 = !DILocation(line: 1945, column: 17, scope: !5632)
!5736 = !DILocation(line: 1948, column: 17, scope: !5632)
!5737 = !DILocation(line: 1948, column: 20, scope: !5632)
!5738 = !DILocation(line: 1948, column: 29, scope: !5632)
!5739 = !DILocation(line: 1948, column: 46, scope: !5632)
!5740 = !DILocation(line: 1948, column: 54, scope: !5632)
!5741 = !DILocation(line: 1948, column: 60, scope: !5632)
!5742 = !DILocation(line: 1948, column: 63, scope: !5632)
!5743 = !DILocation(line: 1948, column: 59, scope: !5632)
!5744 = !DILocation(line: 1948, column: 52, scope: !5632)
!5745 = !DILocation(line: 1948, column: 71, scope: !5632)
!5746 = !DILocation(line: 1948, column: 78, scope: !5632)
!5747 = !DILocation(line: 1948, column: 81, scope: !5632)
!5748 = !DILocation(line: 1949, column: 57, scope: !5632)
!5749 = !DILocation(line: 1949, column: 60, scope: !5632)
!5750 = !DILocation(line: 1949, column: 65, scope: !5632)
!5751 = !DILocation(line: 1949, column: 46, scope: !5632)
!5752 = !DILocation(line: 1949, column: 72, scope: !5632)
!5753 = !DILocation(line: 1949, column: 79, scope: !5632)
!5754 = !DILocation(line: 1949, column: 82, scope: !5632)
!5755 = !DILocation(line: 1949, column: 87, scope: !5632)
!5756 = !DILocation(line: 1949, column: 94, scope: !5632)
!5757 = !DILocation(line: 1949, column: 77, scope: !5632)
!5758 = !DILocation(line: 1949, column: 70, scope: !5632)
!5759 = !DILocation(line: 1949, column: 102, scope: !5632)
!5760 = !DILocation(line: 1949, column: 105, scope: !5632)
!5761 = !DILocation(line: 1949, column: 110, scope: !5632)
!5762 = !DILocation(line: 1949, column: 117, scope: !5632)
!5763 = !DILocation(line: 1949, column: 124, scope: !5632)
!5764 = !DILocation(line: 1949, column: 127, scope: !5632)
!5765 = !DILocation(line: 1949, column: 134, scope: !5632)
!5766 = !DILocation(line: 1951, column: 25, scope: !5632)
!5767 = !DILocation(line: 1951, column: 28, scope: !5632)
!5768 = !DILocation(line: 1951, column: 22, scope: !5632)
!5769 = !DILocation(line: 1952, column: 13, scope: !5632)
!5770 = !DILocation(line: 1926, column: 43, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !5626, file: !971, discriminator: 2)
!5772 = !DILocation(line: 1926, column: 13, scope: !5771)
!5773 = distinct !{!5773, !5774}
!5774 = !DILocation(line: 1926, column: 13, scope: !5555)
!5775 = !DILocation(line: 1954, column: 5, scope: !5409)
!5776 = !DILocation(line: 1883, column: 34, scope: !5777)
!5777 = !DILexicalBlockFile(scope: !5405, file: !971, discriminator: 2)
!5778 = !DILocation(line: 1883, column: 5, scope: !5777)
!5779 = distinct !{!5779, !5780}
!5780 = !DILocation(line: 1883, column: 5, scope: !5293)
!5781 = !DILocation(line: 1957, column: 5, scope: !5293)
!5782 = !DILocation(line: 1958, column: 1, scope: !5293)
!5783 = distinct !DISubprogram(name: "get_bits_long", scope: !1115, file: !1115, line: 531, type: !5784, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!980, !4348, !979}
!5786 = !DILocalVariable(name: "s", arg: 1, scope: !5783, file: !1115, line: 531, type: !4348)
!5787 = !DILocation(line: 531, column: 57, scope: !5783)
!5788 = !DILocalVariable(name: "n", arg: 2, scope: !5783, file: !1115, line: 531, type: !979)
!5789 = !DILocation(line: 531, column: 64, scope: !5783)
!5790 = !DILocation(line: 534, column: 10, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5783, file: !1115, line: 534, column: 9)
!5792 = !DILocation(line: 534, column: 9, scope: !5783)
!5793 = !DILocation(line: 535, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5791, file: !1115, line: 534, column: 13)
!5795 = !DILocation(line: 540, column: 16, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !1115, line: 540, column: 16)
!5797 = !DILocation(line: 540, column: 18, scope: !5796)
!5798 = !DILocation(line: 540, column: 16, scope: !5791)
!5799 = !DILocation(line: 541, column: 25, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !1115, line: 540, column: 25)
!5801 = !DILocation(line: 541, column: 28, scope: !5800)
!5802 = !DILocation(line: 541, column: 16, scope: !5800)
!5803 = !DILocation(line: 541, column: 9, scope: !5800)
!5804 = !DILocalVariable(name: "ret", scope: !5805, file: !1115, line: 547, type: !980)
!5805 = distinct !DILexicalBlock(scope: !5796, file: !1115, line: 542, column: 12)
!5806 = !DILocation(line: 547, column: 18, scope: !5805)
!5807 = !DILocation(line: 547, column: 33, scope: !5805)
!5808 = !DILocation(line: 547, column: 24, scope: !5805)
!5809 = !DILocation(line: 547, column: 44, scope: !5805)
!5810 = !DILocation(line: 547, column: 46, scope: !5805)
!5811 = !DILocation(line: 547, column: 40, scope: !5805)
!5812 = !DILocation(line: 548, column: 16, scope: !5805)
!5813 = !DILocation(line: 548, column: 31, scope: !5805)
!5814 = !DILocation(line: 548, column: 34, scope: !5805)
!5815 = !DILocation(line: 548, column: 36, scope: !5805)
!5816 = !DILocation(line: 548, column: 22, scope: !5805)
!5817 = !DILocation(line: 548, column: 20, scope: !5805)
!5818 = !DILocation(line: 548, column: 9, scope: !5805)
!5819 = !DILocation(line: 552, column: 1, scope: !5783)
!5820 = distinct !DISubprogram(name: "dirac_get_se_golomb", scope: !5821, file: !5821, line: 357, type: !5822, isLocal: true, isDefinition: true, scopeLine: 358, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!5821 = !DIFile(filename: "libavcodec/golomb.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!979, !4348}
!5824 = !DILocalVariable(name: "gb", arg: 1, scope: !5820, file: !5821, line: 357, type: !4348)
!5825 = !DILocation(line: 357, column: 54, scope: !5820)
!5826 = !DILocalVariable(name: "ret", scope: !5820, file: !5821, line: 359, type: !1098)
!5827 = !DILocation(line: 359, column: 14, scope: !5820)
!5828 = !DILocation(line: 359, column: 46, scope: !5820)
!5829 = !DILocation(line: 359, column: 20, scope: !5820)
!5830 = !DILocation(line: 361, column: 9, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5820, file: !5821, line: 361, column: 9)
!5832 = !DILocation(line: 361, column: 9, scope: !5820)
!5833 = !DILocalVariable(name: "sign", scope: !5834, file: !5821, line: 362, type: !979)
!5834 = distinct !DILexicalBlock(scope: !5831, file: !5821, line: 361, column: 14)
!5835 = !DILocation(line: 362, column: 13, scope: !5834)
!5836 = !DILocation(line: 362, column: 31, scope: !5834)
!5837 = !DILocation(line: 362, column: 21, scope: !5834)
!5838 = !DILocation(line: 362, column: 20, scope: !5834)
!5839 = !DILocation(line: 363, column: 16, scope: !5834)
!5840 = !DILocation(line: 363, column: 22, scope: !5834)
!5841 = !DILocation(line: 363, column: 20, scope: !5834)
!5842 = !DILocation(line: 363, column: 30, scope: !5834)
!5843 = !DILocation(line: 363, column: 28, scope: !5834)
!5844 = !DILocation(line: 363, column: 13, scope: !5834)
!5845 = !DILocation(line: 364, column: 5, scope: !5834)
!5846 = !DILocation(line: 366, column: 12, scope: !5820)
!5847 = !DILocation(line: 366, column: 5, scope: !5820)
!5848 = !DILocalVariable(name: "s", arg: 1, scope: !2667, file: !971, line: 1103, type: !2670)
!5849 = !DILocation(line: 1103, column: 61, scope: !2667)
!5850 = !DILocalVariable(name: "gb", scope: !2667, file: !971, line: 1107, type: !4348)
!5851 = !DILocation(line: 1107, column: 20, scope: !2667)
!5852 = !DILocation(line: 1107, column: 26, scope: !2667)
!5853 = !DILocation(line: 1107, column: 29, scope: !2667)
!5854 = !DILocalVariable(name: "idx", scope: !2667, file: !971, line: 1108, type: !980)
!5855 = !DILocation(line: 1108, column: 14, scope: !2667)
!5856 = !DILocalVariable(name: "ref", scope: !2667, file: !971, line: 1108, type: !980)
!5857 = !DILocation(line: 1108, column: 19, scope: !2667)
!5858 = !DILocation(line: 1110, column: 20, scope: !2667)
!5859 = !DILocation(line: 1110, column: 5, scope: !2667)
!5860 = !DILocation(line: 1113, column: 37, scope: !2667)
!5861 = !DILocation(line: 1113, column: 11, scope: !2667)
!5862 = !DILocation(line: 1113, column: 9, scope: !2667)
!5863 = !DILocation(line: 1115, column: 9, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1115, column: 9)
!5865 = !DILocation(line: 1115, column: 13, scope: !5864)
!5866 = !DILocation(line: 1115, column: 9, scope: !2667)
!5867 = !DILocation(line: 1116, column: 16, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5864, file: !971, line: 1115, column: 18)
!5869 = !DILocation(line: 1116, column: 19, scope: !5868)
!5870 = !DILocation(line: 1116, column: 9, scope: !5868)
!5871 = !DILocation(line: 1117, column: 9, scope: !5868)
!5872 = !DILocation(line: 1120, column: 9, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1120, column: 9)
!5874 = !DILocation(line: 1120, column: 13, scope: !5873)
!5875 = !DILocation(line: 1120, column: 9, scope: !2667)
!5876 = !DILocation(line: 1121, column: 55, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5873, file: !971, line: 1120, column: 19)
!5878 = !DILocation(line: 1121, column: 29, scope: !5877)
!5879 = !DILocation(line: 1121, column: 9, scope: !5877)
!5880 = !DILocation(line: 1121, column: 12, scope: !5877)
!5881 = !DILocation(line: 1121, column: 21, scope: !5877)
!5882 = !DILocation(line: 1121, column: 27, scope: !5877)
!5883 = !DILocation(line: 1122, column: 55, scope: !5877)
!5884 = !DILocation(line: 1122, column: 29, scope: !5877)
!5885 = !DILocation(line: 1122, column: 9, scope: !5877)
!5886 = !DILocation(line: 1122, column: 12, scope: !5877)
!5887 = !DILocation(line: 1122, column: 21, scope: !5877)
!5888 = !DILocation(line: 1122, column: 27, scope: !5877)
!5889 = !DILocation(line: 1123, column: 55, scope: !5877)
!5890 = !DILocation(line: 1123, column: 29, scope: !5877)
!5891 = !DILocation(line: 1123, column: 9, scope: !5877)
!5892 = !DILocation(line: 1123, column: 12, scope: !5877)
!5893 = !DILocation(line: 1123, column: 21, scope: !5877)
!5894 = !DILocation(line: 1123, column: 27, scope: !5877)
!5895 = !DILocation(line: 1124, column: 55, scope: !5877)
!5896 = !DILocation(line: 1124, column: 29, scope: !5877)
!5897 = !DILocation(line: 1124, column: 9, scope: !5877)
!5898 = !DILocation(line: 1124, column: 12, scope: !5877)
!5899 = !DILocation(line: 1124, column: 21, scope: !5877)
!5900 = !DILocation(line: 1124, column: 27, scope: !5877)
!5901 = !DILocation(line: 1125, column: 5, scope: !5877)
!5902 = !DILocation(line: 1127, column: 42, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5873, file: !971, line: 1125, column: 12)
!5904 = !DILocation(line: 1127, column: 45, scope: !5903)
!5905 = !DILocation(line: 1127, column: 29, scope: !5903)
!5906 = !DILocation(line: 1127, column: 9, scope: !5903)
!5907 = !DILocation(line: 1127, column: 12, scope: !5903)
!5908 = !DILocation(line: 1127, column: 21, scope: !5903)
!5909 = !DILocation(line: 1127, column: 27, scope: !5903)
!5910 = !DILocation(line: 1128, column: 42, scope: !5903)
!5911 = !DILocation(line: 1128, column: 45, scope: !5903)
!5912 = !DILocation(line: 1128, column: 29, scope: !5903)
!5913 = !DILocation(line: 1128, column: 9, scope: !5903)
!5914 = !DILocation(line: 1128, column: 12, scope: !5903)
!5915 = !DILocation(line: 1128, column: 21, scope: !5903)
!5916 = !DILocation(line: 1128, column: 27, scope: !5903)
!5917 = !DILocation(line: 1129, column: 33, scope: !5903)
!5918 = !DILocation(line: 1129, column: 31, scope: !5903)
!5919 = !DILocation(line: 1129, column: 29, scope: !5903)
!5920 = !DILocation(line: 1129, column: 9, scope: !5903)
!5921 = !DILocation(line: 1129, column: 12, scope: !5903)
!5922 = !DILocation(line: 1129, column: 21, scope: !5903)
!5923 = !DILocation(line: 1129, column: 27, scope: !5903)
!5924 = !DILocation(line: 1130, column: 33, scope: !5903)
!5925 = !DILocation(line: 1130, column: 31, scope: !5903)
!5926 = !DILocation(line: 1130, column: 29, scope: !5903)
!5927 = !DILocation(line: 1130, column: 9, scope: !5903)
!5928 = !DILocation(line: 1130, column: 12, scope: !5903)
!5929 = !DILocation(line: 1130, column: 21, scope: !5903)
!5930 = !DILocation(line: 1130, column: 27, scope: !5903)
!5931 = !DILocation(line: 1135, column: 9, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1135, column: 9)
!5933 = !DILocation(line: 1135, column: 12, scope: !5932)
!5934 = !DILocation(line: 1135, column: 21, scope: !5932)
!5935 = !DILocation(line: 1135, column: 35, scope: !5932)
!5936 = !DILocation(line: 1135, column: 38, scope: !5932)
!5937 = !DILocation(line: 1135, column: 32, scope: !5932)
!5938 = !DILocation(line: 1135, column: 27, scope: !5932)
!5939 = !DILocation(line: 1135, column: 54, scope: !5932)
!5940 = !DILocation(line: 1135, column: 59, scope: !5932)
!5941 = !DILocation(line: 1136, column: 9, scope: !5932)
!5942 = !DILocation(line: 1136, column: 12, scope: !5932)
!5943 = !DILocation(line: 1136, column: 21, scope: !5932)
!5944 = !DILocation(line: 1136, column: 35, scope: !5932)
!5945 = !DILocation(line: 1136, column: 38, scope: !5932)
!5946 = !DILocation(line: 1136, column: 32, scope: !5932)
!5947 = !DILocation(line: 1136, column: 27, scope: !5932)
!5948 = !DILocation(line: 1136, column: 54, scope: !5932)
!5949 = !DILocation(line: 1136, column: 59, scope: !5932)
!5950 = !DILocation(line: 1137, column: 10, scope: !5932)
!5951 = !DILocation(line: 1137, column: 13, scope: !5932)
!5952 = !DILocation(line: 1137, column: 22, scope: !5932)
!5953 = !DILocation(line: 1137, column: 28, scope: !5932)
!5954 = !DILocation(line: 1137, column: 32, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5932, file: !971, discriminator: 1)
!5956 = !DILocation(line: 1137, column: 35, scope: !5955)
!5957 = !DILocation(line: 1137, column: 44, scope: !5955)
!5958 = !DILocation(line: 1135, column: 9, scope: !5959)
!5959 = !DILexicalBlockFile(scope: !2667, file: !971, discriminator: 1)
!5960 = !DILocation(line: 1138, column: 16, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5932, file: !971, line: 1137, column: 51)
!5962 = !DILocation(line: 1138, column: 19, scope: !5961)
!5963 = !DILocation(line: 1140, column: 16, scope: !5961)
!5964 = !DILocation(line: 1140, column: 19, scope: !5961)
!5965 = !DILocation(line: 1140, column: 28, scope: !5961)
!5966 = !DILocation(line: 1140, column: 35, scope: !5961)
!5967 = !DILocation(line: 1140, column: 38, scope: !5961)
!5968 = !DILocation(line: 1140, column: 47, scope: !5961)
!5969 = !DILocation(line: 1140, column: 54, scope: !5961)
!5970 = !DILocation(line: 1140, column: 57, scope: !5961)
!5971 = !DILocation(line: 1140, column: 73, scope: !5961)
!5972 = !DILocation(line: 1140, column: 76, scope: !5961)
!5973 = !DILocation(line: 1138, column: 9, scope: !5961)
!5974 = !DILocation(line: 1141, column: 9, scope: !5961)
!5975 = !DILocation(line: 1143, column: 10, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1143, column: 9)
!5977 = !DILocation(line: 1143, column: 13, scope: !5976)
!5978 = !DILocation(line: 1143, column: 22, scope: !5976)
!5979 = !DILocation(line: 1143, column: 28, scope: !5976)
!5980 = !DILocation(line: 1143, column: 32, scope: !5981)
!5981 = !DILexicalBlockFile(scope: !5976, file: !971, discriminator: 1)
!5982 = !DILocation(line: 1143, column: 35, scope: !5981)
!5983 = !DILocation(line: 1143, column: 44, scope: !5981)
!5984 = !DILocation(line: 1143, column: 50, scope: !5981)
!5985 = !DILocation(line: 1143, column: 53, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5976, file: !971, discriminator: 2)
!5987 = !DILocation(line: 1143, column: 56, scope: !5986)
!5988 = !DILocation(line: 1143, column: 65, scope: !5986)
!5989 = !DILocation(line: 1143, column: 73, scope: !5986)
!5990 = !DILocation(line: 1143, column: 76, scope: !5986)
!5991 = !DILocation(line: 1143, column: 85, scope: !5986)
!5992 = !DILocation(line: 1143, column: 90, scope: !5986)
!5993 = !DILocation(line: 1143, column: 71, scope: !5986)
!5994 = !DILocation(line: 1143, column: 93, scope: !5986)
!5995 = !DILocation(line: 1143, column: 96, scope: !5996)
!5996 = !DILexicalBlockFile(scope: !5976, file: !971, discriminator: 3)
!5997 = !DILocation(line: 1143, column: 99, scope: !5996)
!5998 = !DILocation(line: 1143, column: 108, scope: !5996)
!5999 = !DILocation(line: 1143, column: 116, scope: !5996)
!6000 = !DILocation(line: 1143, column: 119, scope: !5996)
!6001 = !DILocation(line: 1143, column: 128, scope: !5996)
!6002 = !DILocation(line: 1143, column: 133, scope: !5996)
!6003 = !DILocation(line: 1143, column: 114, scope: !5996)
!6004 = !DILocation(line: 1143, column: 9, scope: !5996)
!6005 = !DILocation(line: 1144, column: 16, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5976, file: !971, line: 1143, column: 137)
!6007 = !DILocation(line: 1144, column: 19, scope: !6006)
!6008 = !DILocation(line: 1144, column: 9, scope: !6006)
!6009 = !DILocation(line: 1145, column: 9, scope: !6006)
!6010 = !DILocation(line: 1147, column: 9, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1147, column: 9)
!6012 = !DILocation(line: 1147, column: 12, scope: !6011)
!6013 = !DILocation(line: 1147, column: 21, scope: !6011)
!6014 = !DILocation(line: 1147, column: 29, scope: !6011)
!6015 = !DILocation(line: 1147, column: 32, scope: !6011)
!6016 = !DILocation(line: 1147, column: 41, scope: !6011)
!6017 = !DILocation(line: 1147, column: 27, scope: !6011)
!6018 = !DILocation(line: 1147, column: 47, scope: !6011)
!6019 = !DILocation(line: 1147, column: 50, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !6011, file: !971, discriminator: 1)
!6021 = !DILocation(line: 1147, column: 53, scope: !6020)
!6022 = !DILocation(line: 1147, column: 62, scope: !6020)
!6023 = !DILocation(line: 1147, column: 70, scope: !6020)
!6024 = !DILocation(line: 1147, column: 73, scope: !6020)
!6025 = !DILocation(line: 1147, column: 82, scope: !6020)
!6026 = !DILocation(line: 1147, column: 68, scope: !6020)
!6027 = !DILocation(line: 1147, column: 9, scope: !6020)
!6028 = !DILocation(line: 1148, column: 16, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6011, file: !971, line: 1147, column: 89)
!6030 = !DILocation(line: 1148, column: 19, scope: !6029)
!6031 = !DILocation(line: 1148, column: 9, scope: !6029)
!6032 = !DILocation(line: 1149, column: 9, scope: !6029)
!6033 = !DILocation(line: 1151, column: 11, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1151, column: 9)
!6035 = !DILocation(line: 1151, column: 14, scope: !6034)
!6036 = !DILocation(line: 1151, column: 23, scope: !6034)
!6037 = !DILocation(line: 1151, column: 10, scope: !6034)
!6038 = !DILocation(line: 1151, column: 33, scope: !6034)
!6039 = !DILocation(line: 1151, column: 36, scope: !6034)
!6040 = !DILocation(line: 1151, column: 45, scope: !6034)
!6041 = !DILocation(line: 1151, column: 32, scope: !6034)
!6042 = !DILocation(line: 1151, column: 30, scope: !6034)
!6043 = !DILocation(line: 1151, column: 55, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6034, file: !971, discriminator: 1)
!6045 = !DILocation(line: 1151, column: 58, scope: !6044)
!6046 = !DILocation(line: 1151, column: 67, scope: !6044)
!6047 = !DILocation(line: 1151, column: 54, scope: !6044)
!6048 = !DILocation(line: 1151, column: 10, scope: !6044)
!6049 = !DILocation(line: 1151, column: 77, scope: !6050)
!6050 = !DILexicalBlockFile(scope: !6034, file: !971, discriminator: 2)
!6051 = !DILocation(line: 1151, column: 80, scope: !6050)
!6052 = !DILocation(line: 1151, column: 89, scope: !6050)
!6053 = !DILocation(line: 1151, column: 76, scope: !6050)
!6054 = !DILocation(line: 1151, column: 10, scope: !6050)
!6055 = !DILocation(line: 1151, column: 10, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6034, file: !971, discriminator: 3)
!6057 = !DILocation(line: 1151, column: 97, scope: !6056)
!6058 = !DILocation(line: 1151, column: 9, scope: !6056)
!6059 = !DILocation(line: 1152, column: 16, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6034, file: !971, line: 1151, column: 103)
!6061 = !DILocation(line: 1152, column: 19, scope: !6060)
!6062 = !DILocation(line: 1152, column: 9, scope: !6060)
!6063 = !DILocation(line: 1153, column: 9, scope: !6060)
!6064 = !DILocation(line: 1158, column: 49, scope: !2667)
!6065 = !DILocation(line: 1158, column: 23, scope: !2667)
!6066 = !DILocation(line: 1158, column: 5, scope: !2667)
!6067 = !DILocation(line: 1158, column: 8, scope: !2667)
!6068 = !DILocation(line: 1158, column: 21, scope: !2667)
!6069 = !DILocation(line: 1159, column: 9, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1159, column: 9)
!6071 = !DILocation(line: 1159, column: 12, scope: !6070)
!6072 = !DILocation(line: 1159, column: 25, scope: !6070)
!6073 = !DILocation(line: 1159, column: 9, scope: !2667)
!6074 = !DILocation(line: 1160, column: 16, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !971, line: 1159, column: 30)
!6076 = !DILocation(line: 1160, column: 19, scope: !6075)
!6077 = !DILocation(line: 1160, column: 9, scope: !6075)
!6078 = !DILocation(line: 1161, column: 9, scope: !6075)
!6079 = !DILocation(line: 1166, column: 34, scope: !2667)
!6080 = !DILocation(line: 1166, column: 24, scope: !2667)
!6081 = !DILocation(line: 1166, column: 5, scope: !2667)
!6082 = !DILocation(line: 1166, column: 8, scope: !2667)
!6083 = !DILocation(line: 1166, column: 22, scope: !2667)
!6084 = !DILocation(line: 1167, column: 9, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1167, column: 9)
!6086 = !DILocation(line: 1167, column: 12, scope: !6085)
!6087 = !DILocation(line: 1167, column: 9, scope: !2667)
!6088 = !DILocation(line: 1168, column: 16, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !971, line: 1167, column: 27)
!6090 = !DILocation(line: 1168, column: 19, scope: !6089)
!6091 = !DILocation(line: 1168, column: 9, scope: !6089)
!6092 = !DILocation(line: 1170, column: 18, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !971, line: 1170, column: 9)
!6094 = !DILocation(line: 1170, column: 14, scope: !6093)
!6095 = !DILocation(line: 1170, column: 23, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6097, file: !971, discriminator: 1)
!6097 = distinct !DILexicalBlock(scope: !6093, file: !971, line: 1170, column: 9)
!6098 = !DILocation(line: 1170, column: 29, scope: !6096)
!6099 = !DILocation(line: 1170, column: 32, scope: !6096)
!6100 = !DILocation(line: 1170, column: 27, scope: !6096)
!6101 = !DILocation(line: 1170, column: 9, scope: !6096)
!6102 = !DILocation(line: 1171, column: 27, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !971, line: 1171, column: 17)
!6104 = distinct !DILexicalBlock(scope: !6097, file: !971, line: 1170, column: 49)
!6105 = !DILocation(line: 1171, column: 17, scope: !6103)
!6106 = !DILocation(line: 1171, column: 17, scope: !6104)
!6107 = !DILocation(line: 1172, column: 68, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6103, file: !971, line: 1171, column: 32)
!6109 = !DILocation(line: 1172, column: 48, scope: !6108)
!6110 = !DILocation(line: 1172, column: 29, scope: !6108)
!6111 = !DILocation(line: 1172, column: 17, scope: !6108)
!6112 = !DILocation(line: 1172, column: 20, scope: !6108)
!6113 = !DILocation(line: 1172, column: 34, scope: !6108)
!6114 = !DILocation(line: 1172, column: 46, scope: !6108)
!6115 = !DILocation(line: 1173, column: 68, scope: !6108)
!6116 = !DILocation(line: 1173, column: 48, scope: !6108)
!6117 = !DILocation(line: 1173, column: 29, scope: !6108)
!6118 = !DILocation(line: 1173, column: 17, scope: !6108)
!6119 = !DILocation(line: 1173, column: 20, scope: !6108)
!6120 = !DILocation(line: 1173, column: 34, scope: !6108)
!6121 = !DILocation(line: 1173, column: 46, scope: !6108)
!6122 = !DILocation(line: 1174, column: 13, scope: !6108)
!6123 = !DILocation(line: 1177, column: 27, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6104, file: !971, line: 1177, column: 17)
!6125 = !DILocation(line: 1177, column: 17, scope: !6124)
!6126 = !DILocation(line: 1177, column: 17, scope: !6104)
!6127 = !DILocation(line: 1178, column: 70, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6124, file: !971, line: 1177, column: 32)
!6129 = !DILocation(line: 1178, column: 44, scope: !6128)
!6130 = !DILocation(line: 1178, column: 29, scope: !6128)
!6131 = !DILocation(line: 1178, column: 17, scope: !6128)
!6132 = !DILocation(line: 1178, column: 20, scope: !6128)
!6133 = !DILocation(line: 1178, column: 34, scope: !6128)
!6134 = !DILocation(line: 1178, column: 42, scope: !6128)
!6135 = !DILocation(line: 1179, column: 66, scope: !6128)
!6136 = !DILocation(line: 1179, column: 46, scope: !6128)
!6137 = !DILocation(line: 1179, column: 29, scope: !6128)
!6138 = !DILocation(line: 1179, column: 17, scope: !6128)
!6139 = !DILocation(line: 1179, column: 20, scope: !6128)
!6140 = !DILocation(line: 1179, column: 34, scope: !6128)
!6141 = !DILocation(line: 1179, column: 44, scope: !6128)
!6142 = !DILocation(line: 1180, column: 66, scope: !6128)
!6143 = !DILocation(line: 1180, column: 46, scope: !6128)
!6144 = !DILocation(line: 1180, column: 29, scope: !6128)
!6145 = !DILocation(line: 1180, column: 17, scope: !6128)
!6146 = !DILocation(line: 1180, column: 20, scope: !6128)
!6147 = !DILocation(line: 1180, column: 34, scope: !6128)
!6148 = !DILocation(line: 1180, column: 44, scope: !6128)
!6149 = !DILocation(line: 1181, column: 66, scope: !6128)
!6150 = !DILocation(line: 1181, column: 46, scope: !6128)
!6151 = !DILocation(line: 1181, column: 29, scope: !6128)
!6152 = !DILocation(line: 1181, column: 17, scope: !6128)
!6153 = !DILocation(line: 1181, column: 20, scope: !6128)
!6154 = !DILocation(line: 1181, column: 34, scope: !6128)
!6155 = !DILocation(line: 1181, column: 44, scope: !6128)
!6156 = !DILocation(line: 1182, column: 66, scope: !6128)
!6157 = !DILocation(line: 1182, column: 46, scope: !6128)
!6158 = !DILocation(line: 1182, column: 29, scope: !6128)
!6159 = !DILocation(line: 1182, column: 17, scope: !6128)
!6160 = !DILocation(line: 1182, column: 20, scope: !6128)
!6161 = !DILocation(line: 1182, column: 34, scope: !6128)
!6162 = !DILocation(line: 1182, column: 44, scope: !6128)
!6163 = !DILocation(line: 1183, column: 13, scope: !6128)
!6164 = !DILocation(line: 1184, column: 29, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6124, file: !971, line: 1183, column: 20)
!6166 = !DILocation(line: 1184, column: 17, scope: !6165)
!6167 = !DILocation(line: 1184, column: 20, scope: !6165)
!6168 = !DILocation(line: 1184, column: 34, scope: !6165)
!6169 = !DILocation(line: 1184, column: 44, scope: !6165)
!6170 = !DILocation(line: 1185, column: 29, scope: !6165)
!6171 = !DILocation(line: 1185, column: 17, scope: !6165)
!6172 = !DILocation(line: 1185, column: 20, scope: !6165)
!6173 = !DILocation(line: 1185, column: 34, scope: !6165)
!6174 = !DILocation(line: 1185, column: 44, scope: !6165)
!6175 = !DILocation(line: 1188, column: 27, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6104, file: !971, line: 1188, column: 17)
!6177 = !DILocation(line: 1188, column: 17, scope: !6176)
!6178 = !DILocation(line: 1188, column: 17, scope: !6104)
!6179 = !DILocation(line: 1189, column: 78, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !971, line: 1188, column: 32)
!6181 = !DILocation(line: 1189, column: 52, scope: !6180)
!6182 = !DILocation(line: 1189, column: 29, scope: !6180)
!6183 = !DILocation(line: 1189, column: 17, scope: !6180)
!6184 = !DILocation(line: 1189, column: 20, scope: !6180)
!6185 = !DILocation(line: 1189, column: 34, scope: !6180)
!6186 = !DILocation(line: 1189, column: 50, scope: !6180)
!6187 = !DILocation(line: 1190, column: 71, scope: !6180)
!6188 = !DILocation(line: 1190, column: 51, scope: !6180)
!6189 = !DILocation(line: 1190, column: 29, scope: !6180)
!6190 = !DILocation(line: 1190, column: 17, scope: !6180)
!6191 = !DILocation(line: 1190, column: 20, scope: !6180)
!6192 = !DILocation(line: 1190, column: 34, scope: !6180)
!6193 = !DILocation(line: 1190, column: 49, scope: !6180)
!6194 = !DILocation(line: 1191, column: 71, scope: !6180)
!6195 = !DILocation(line: 1191, column: 51, scope: !6180)
!6196 = !DILocation(line: 1191, column: 29, scope: !6180)
!6197 = !DILocation(line: 1191, column: 17, scope: !6180)
!6198 = !DILocation(line: 1191, column: 20, scope: !6180)
!6199 = !DILocation(line: 1191, column: 34, scope: !6180)
!6200 = !DILocation(line: 1191, column: 49, scope: !6180)
!6201 = !DILocation(line: 1192, column: 13, scope: !6180)
!6202 = !DILocation(line: 1193, column: 29, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6104, file: !971, line: 1193, column: 17)
!6204 = !DILocation(line: 1193, column: 17, scope: !6203)
!6205 = !DILocation(line: 1193, column: 20, scope: !6203)
!6206 = !DILocation(line: 1193, column: 34, scope: !6203)
!6207 = !DILocation(line: 1193, column: 74, scope: !6203)
!6208 = !DILocation(line: 1193, column: 62, scope: !6203)
!6209 = !DILocation(line: 1193, column: 65, scope: !6203)
!6210 = !DILocation(line: 1193, column: 79, scope: !6203)
!6211 = !DILocation(line: 1193, column: 52, scope: !6203)
!6212 = !DILocation(line: 1193, column: 50, scope: !6203)
!6213 = !DILocation(line: 1193, column: 87, scope: !6203)
!6214 = !DILocation(line: 1193, column: 17, scope: !6104)
!6215 = !DILocation(line: 1194, column: 17, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6203, file: !971, line: 1193, column: 93)
!6217 = !DILocation(line: 1197, column: 9, scope: !6104)
!6218 = !DILocation(line: 1170, column: 45, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !6097, file: !971, discriminator: 2)
!6220 = !DILocation(line: 1170, column: 9, scope: !6219)
!6221 = distinct !{!6221, !6222}
!6222 = !DILocation(line: 1170, column: 9, scope: !6089)
!6223 = !DILocation(line: 1198, column: 5, scope: !6089)
!6224 = !DILocation(line: 1202, column: 35, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1202, column: 9)
!6226 = !DILocation(line: 1202, column: 9, scope: !6225)
!6227 = !DILocation(line: 1202, column: 9, scope: !2667)
!6228 = !DILocation(line: 1203, column: 16, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6225, file: !971, line: 1202, column: 40)
!6230 = !DILocation(line: 1203, column: 19, scope: !6229)
!6231 = !DILocation(line: 1203, column: 9, scope: !6229)
!6232 = !DILocation(line: 1204, column: 9, scope: !6229)
!6233 = !DILocation(line: 1209, column: 5, scope: !2667)
!6234 = !DILocation(line: 1209, column: 8, scope: !2667)
!6235 = !DILocation(line: 1209, column: 25, scope: !2667)
!6236 = !DILocation(line: 1210, column: 5, scope: !2667)
!6237 = !DILocation(line: 1210, column: 8, scope: !2667)
!6238 = !DILocation(line: 1210, column: 18, scope: !2667)
!6239 = !DILocation(line: 1211, column: 5, scope: !2667)
!6240 = !DILocation(line: 1211, column: 8, scope: !2667)
!6241 = !DILocation(line: 1211, column: 18, scope: !2667)
!6242 = !DILocation(line: 1213, column: 19, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !2667, file: !971, line: 1213, column: 9)
!6244 = !DILocation(line: 1213, column: 9, scope: !6243)
!6245 = !DILocation(line: 1213, column: 9, scope: !2667)
!6246 = !DILocation(line: 1214, column: 57, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6243, file: !971, line: 1213, column: 24)
!6248 = !DILocation(line: 1214, column: 31, scope: !6247)
!6249 = !DILocation(line: 1214, column: 9, scope: !6247)
!6250 = !DILocation(line: 1214, column: 12, scope: !6247)
!6251 = !DILocation(line: 1214, column: 29, scope: !6247)
!6252 = !DILocation(line: 1215, column: 13, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !971, line: 1215, column: 13)
!6254 = !DILocation(line: 1215, column: 16, scope: !6253)
!6255 = !DILocation(line: 1215, column: 33, scope: !6253)
!6256 = !DILocation(line: 1215, column: 37, scope: !6253)
!6257 = !DILocation(line: 1215, column: 40, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !6253, file: !971, discriminator: 1)
!6259 = !DILocation(line: 1215, column: 43, scope: !6258)
!6260 = !DILocation(line: 1215, column: 60, scope: !6258)
!6261 = !DILocation(line: 1215, column: 13, scope: !6258)
!6262 = !DILocation(line: 1216, column: 20, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6253, file: !971, line: 1215, column: 65)
!6264 = !DILocation(line: 1216, column: 23, scope: !6263)
!6265 = !DILocation(line: 1216, column: 13, scope: !6263)
!6266 = !DILocation(line: 1217, column: 13, scope: !6263)
!6267 = !DILocation(line: 1217, column: 16, scope: !6263)
!6268 = !DILocation(line: 1217, column: 33, scope: !6263)
!6269 = !DILocation(line: 1218, column: 13, scope: !6263)
!6270 = !DILocation(line: 1220, column: 44, scope: !6247)
!6271 = !DILocation(line: 1220, column: 24, scope: !6247)
!6272 = !DILocation(line: 1220, column: 9, scope: !6247)
!6273 = !DILocation(line: 1220, column: 12, scope: !6247)
!6274 = !DILocation(line: 1220, column: 22, scope: !6247)
!6275 = !DILocation(line: 1221, column: 13, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6247, file: !971, line: 1221, column: 13)
!6277 = !DILocation(line: 1221, column: 16, scope: !6276)
!6278 = !DILocation(line: 1221, column: 25, scope: !6276)
!6279 = !DILocation(line: 1221, column: 13, scope: !6247)
!6280 = !DILocation(line: 1222, column: 48, scope: !6276)
!6281 = !DILocation(line: 1222, column: 28, scope: !6276)
!6282 = !DILocation(line: 1222, column: 13, scope: !6276)
!6283 = !DILocation(line: 1222, column: 16, scope: !6276)
!6284 = !DILocation(line: 1222, column: 26, scope: !6276)
!6285 = !DILocation(line: 1223, column: 5, scope: !6247)
!6286 = !DILocation(line: 1224, column: 5, scope: !2667)
!6287 = !DILocation(line: 1225, column: 1, scope: !2667)
!6288 = distinct !DISubprogram(name: "dirac_unpack_block_motion_data", scope: !971, file: !971, line: 1499, type: !2668, isLocal: true, isDefinition: true, scopeLine: 1500, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!6289 = !DILocalVariable(name: "s", arg: 1, scope: !6288, file: !971, line: 1499, type: !2670)
!6290 = !DILocation(line: 1499, column: 57, scope: !6288)
!6291 = !DILocalVariable(name: "gb", scope: !6288, file: !971, line: 1501, type: !4348)
!6292 = !DILocation(line: 1501, column: 20, scope: !6288)
!6293 = !DILocation(line: 1501, column: 26, scope: !6288)
!6294 = !DILocation(line: 1501, column: 29, scope: !6288)
!6295 = !DILocalVariable(name: "sbsplit", scope: !6288, file: !971, line: 1502, type: !987)
!6296 = !DILocation(line: 1502, column: 14, scope: !6288)
!6297 = !DILocation(line: 1502, column: 24, scope: !6288)
!6298 = !DILocation(line: 1502, column: 27, scope: !6288)
!6299 = !DILocalVariable(name: "i", scope: !6288, file: !971, line: 1503, type: !979)
!6300 = !DILocation(line: 1503, column: 9, scope: !6288)
!6301 = !DILocalVariable(name: "x", scope: !6288, file: !971, line: 1503, type: !979)
!6302 = !DILocation(line: 1503, column: 12, scope: !6288)
!6303 = !DILocalVariable(name: "y", scope: !6288, file: !971, line: 1503, type: !979)
!6304 = !DILocation(line: 1503, column: 15, scope: !6288)
!6305 = !DILocalVariable(name: "q", scope: !6288, file: !971, line: 1503, type: !979)
!6306 = !DILocation(line: 1503, column: 18, scope: !6288)
!6307 = !DILocalVariable(name: "p", scope: !6288, file: !971, line: 1503, type: !979)
!6308 = !DILocation(line: 1503, column: 21, scope: !6288)
!6309 = !DILocalVariable(name: "arith", scope: !6288, file: !971, line: 1504, type: !6310)
!6310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6311, size: 5120, align: 64, elements: !991)
!6311 = !DIDerivedType(tag: DW_TAG_typedef, name: "DiracArith", file: !945, line: 86, baseType: !6312)
!6312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 75, size: 640, align: 64, elements: !6313)
!6313 = !{!6314, !6315, !6316, !6317, !6318, !6319, !6323, !6324}
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !6312, file: !945, line: 76, baseType: !980, size: 32, align: 32)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6312, file: !945, line: 77, baseType: !1104, size: 16, align: 16, offset: 32)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !6312, file: !945, line: 78, baseType: !1107, size: 16, align: 16, offset: 48)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream", scope: !6312, file: !945, line: 80, baseType: !1119, size: 64, align: 64, offset: 64)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream_end", scope: !6312, file: !945, line: 81, baseType: !1119, size: 64, align: 64, offset: 128)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !6312, file: !945, line: 83, baseType: !6320, size: 352, align: 16, offset: 192)
!6320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 352, align: 16, elements: !6321)
!6321 = !{!6322}
!6322 = !DISubrange(count: 22)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !6312, file: !945, line: 84, baseType: !979, size: 32, align: 32, offset: 544)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !6312, file: !945, line: 85, baseType: !979, size: 32, align: 32, offset: 576)
!6325 = !DILocation(line: 1504, column: 16, scope: !6288)
!6326 = !DILocation(line: 1506, column: 20, scope: !6288)
!6327 = !DILocation(line: 1506, column: 5, scope: !6288)
!6328 = !DILocation(line: 1509, column: 21, scope: !6288)
!6329 = !DILocation(line: 1509, column: 24, scope: !6288)
!6330 = !DILocation(line: 1509, column: 28, scope: !6288)
!6331 = !DILocation(line: 1509, column: 40, scope: !6288)
!6332 = !DILocation(line: 1509, column: 43, scope: !6288)
!6333 = !DILocation(line: 1509, column: 52, scope: !6288)
!6334 = !DILocation(line: 1509, column: 39, scope: !6288)
!6335 = !DILocation(line: 1509, column: 35, scope: !6288)
!6336 = !DILocation(line: 1509, column: 59, scope: !6288)
!6337 = !DILocation(line: 1509, column: 69, scope: !6288)
!6338 = !DILocation(line: 1509, column: 72, scope: !6288)
!6339 = !DILocation(line: 1509, column: 81, scope: !6288)
!6340 = !DILocation(line: 1509, column: 68, scope: !6288)
!6341 = !DILocation(line: 1509, column: 64, scope: !6288)
!6342 = !DILocation(line: 1509, column: 5, scope: !6288)
!6343 = !DILocation(line: 1509, column: 8, scope: !6288)
!6344 = !DILocation(line: 1509, column: 16, scope: !6288)
!6345 = !DILocation(line: 1510, column: 22, scope: !6288)
!6346 = !DILocation(line: 1510, column: 25, scope: !6288)
!6347 = !DILocation(line: 1510, column: 29, scope: !6288)
!6348 = !DILocation(line: 1510, column: 42, scope: !6288)
!6349 = !DILocation(line: 1510, column: 45, scope: !6288)
!6350 = !DILocation(line: 1510, column: 54, scope: !6288)
!6351 = !DILocation(line: 1510, column: 41, scope: !6288)
!6352 = !DILocation(line: 1510, column: 37, scope: !6288)
!6353 = !DILocation(line: 1510, column: 61, scope: !6288)
!6354 = !DILocation(line: 1510, column: 71, scope: !6288)
!6355 = !DILocation(line: 1510, column: 74, scope: !6288)
!6356 = !DILocation(line: 1510, column: 83, scope: !6288)
!6357 = !DILocation(line: 1510, column: 70, scope: !6288)
!6358 = !DILocation(line: 1510, column: 66, scope: !6288)
!6359 = !DILocation(line: 1510, column: 5, scope: !6288)
!6360 = !DILocation(line: 1510, column: 8, scope: !6288)
!6361 = !DILocation(line: 1510, column: 17, scope: !6288)
!6362 = !DILocation(line: 1511, column: 22, scope: !6288)
!6363 = !DILocation(line: 1511, column: 25, scope: !6288)
!6364 = !DILocation(line: 1511, column: 20, scope: !6288)
!6365 = !DILocation(line: 1511, column: 5, scope: !6288)
!6366 = !DILocation(line: 1511, column: 8, scope: !6288)
!6367 = !DILocation(line: 1511, column: 16, scope: !6288)
!6368 = !DILocation(line: 1512, column: 23, scope: !6288)
!6369 = !DILocation(line: 1512, column: 26, scope: !6288)
!6370 = !DILocation(line: 1512, column: 21, scope: !6288)
!6371 = !DILocation(line: 1512, column: 5, scope: !6288)
!6372 = !DILocation(line: 1512, column: 8, scope: !6288)
!6373 = !DILocation(line: 1512, column: 17, scope: !6288)
!6374 = !DILocation(line: 1516, column: 33, scope: !6288)
!6375 = !DILocation(line: 1516, column: 40, scope: !6288)
!6376 = !DILocation(line: 1516, column: 70, scope: !6288)
!6377 = !DILocation(line: 1516, column: 44, scope: !6288)
!6378 = !DILocation(line: 1516, column: 5, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6288, file: !971, discriminator: 1)
!6380 = !DILocation(line: 1517, column: 12, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6288, file: !971, line: 1517, column: 5)
!6382 = !DILocation(line: 1517, column: 10, scope: !6381)
!6383 = !DILocation(line: 1517, column: 17, scope: !6384)
!6384 = !DILexicalBlockFile(scope: !6385, file: !971, discriminator: 1)
!6385 = distinct !DILexicalBlock(scope: !6381, file: !971, line: 1517, column: 5)
!6386 = !DILocation(line: 1517, column: 21, scope: !6384)
!6387 = !DILocation(line: 1517, column: 24, scope: !6384)
!6388 = !DILocation(line: 1517, column: 19, scope: !6384)
!6389 = !DILocation(line: 1517, column: 5, scope: !6384)
!6390 = !DILocation(line: 1518, column: 16, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !971, line: 1518, column: 9)
!6392 = distinct !DILexicalBlock(scope: !6385, file: !971, line: 1517, column: 39)
!6393 = !DILocation(line: 1518, column: 14, scope: !6391)
!6394 = !DILocation(line: 1518, column: 21, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6396, file: !971, discriminator: 1)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !971, line: 1518, column: 9)
!6397 = !DILocation(line: 1518, column: 25, scope: !6395)
!6398 = !DILocation(line: 1518, column: 28, scope: !6395)
!6399 = !DILocation(line: 1518, column: 23, scope: !6395)
!6400 = !DILocation(line: 1518, column: 9, scope: !6395)
!6401 = !DILocalVariable(name: "split", scope: !6402, file: !971, line: 1519, type: !980)
!6402 = distinct !DILexicalBlock(scope: !6396, file: !971, line: 1518, column: 42)
!6403 = !DILocation(line: 1519, column: 26, scope: !6402)
!6404 = !DILocation(line: 1519, column: 55, scope: !6402)
!6405 = !DILocation(line: 1519, column: 34, scope: !6402)
!6406 = !DILocation(line: 1520, column: 17, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6402, file: !971, line: 1520, column: 17)
!6408 = !DILocation(line: 1520, column: 23, scope: !6407)
!6409 = !DILocation(line: 1520, column: 17, scope: !6402)
!6410 = !DILocation(line: 1521, column: 17, scope: !6407)
!6411 = !DILocation(line: 1522, column: 27, scope: !6402)
!6412 = !DILocation(line: 1522, column: 48, scope: !6402)
!6413 = !DILocation(line: 1522, column: 56, scope: !6402)
!6414 = !DILocation(line: 1522, column: 55, scope: !6402)
!6415 = !DILocation(line: 1522, column: 59, scope: !6402)
!6416 = !DILocation(line: 1522, column: 62, scope: !6402)
!6417 = !DILocation(line: 1522, column: 71, scope: !6402)
!6418 = !DILocation(line: 1522, column: 74, scope: !6402)
!6419 = !DILocation(line: 1522, column: 35, scope: !6402)
!6420 = !DILocation(line: 1522, column: 33, scope: !6402)
!6421 = !DILocation(line: 1522, column: 78, scope: !6402)
!6422 = !DILocation(line: 1522, column: 26, scope: !6402)
!6423 = !DILocation(line: 1522, column: 21, scope: !6402)
!6424 = !DILocation(line: 1522, column: 13, scope: !6402)
!6425 = !DILocation(line: 1522, column: 24, scope: !6402)
!6426 = !DILocation(line: 1523, column: 9, scope: !6402)
!6427 = !DILocation(line: 1518, column: 38, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !6396, file: !971, discriminator: 2)
!6429 = !DILocation(line: 1518, column: 9, scope: !6428)
!6430 = distinct !{!6430, !6431}
!6431 = !DILocation(line: 1518, column: 9, scope: !6392)
!6432 = !DILocation(line: 1524, column: 20, scope: !6392)
!6433 = !DILocation(line: 1524, column: 23, scope: !6392)
!6434 = !DILocation(line: 1524, column: 17, scope: !6392)
!6435 = !DILocation(line: 1525, column: 5, scope: !6392)
!6436 = !DILocation(line: 1517, column: 35, scope: !6437)
!6437 = !DILexicalBlockFile(scope: !6385, file: !971, discriminator: 2)
!6438 = !DILocation(line: 1517, column: 5, scope: !6437)
!6439 = distinct !{!6439, !6440}
!6440 = !DILocation(line: 1517, column: 5, scope: !6288)
!6441 = !DILocation(line: 1528, column: 33, scope: !6288)
!6442 = !DILocation(line: 1528, column: 40, scope: !6288)
!6443 = !DILocation(line: 1528, column: 70, scope: !6288)
!6444 = !DILocation(line: 1528, column: 44, scope: !6288)
!6445 = !DILocation(line: 1528, column: 5, scope: !6379)
!6446 = !DILocation(line: 1529, column: 12, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6288, file: !971, line: 1529, column: 5)
!6448 = !DILocation(line: 1529, column: 10, scope: !6447)
!6449 = !DILocation(line: 1529, column: 17, scope: !6450)
!6450 = !DILexicalBlockFile(scope: !6451, file: !971, discriminator: 1)
!6451 = distinct !DILexicalBlock(scope: !6447, file: !971, line: 1529, column: 5)
!6452 = !DILocation(line: 1529, column: 21, scope: !6450)
!6453 = !DILocation(line: 1529, column: 24, scope: !6450)
!6454 = !DILocation(line: 1529, column: 19, scope: !6450)
!6455 = !DILocation(line: 1529, column: 5, scope: !6450)
!6456 = !DILocation(line: 1530, column: 37, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6451, file: !971, line: 1529, column: 39)
!6458 = !DILocation(line: 1530, column: 43, scope: !6457)
!6459 = !DILocation(line: 1530, column: 53, scope: !6457)
!6460 = !DILocation(line: 1530, column: 51, scope: !6457)
!6461 = !DILocation(line: 1530, column: 47, scope: !6457)
!6462 = !DILocation(line: 1530, column: 56, scope: !6457)
!6463 = !DILocation(line: 1530, column: 86, scope: !6457)
!6464 = !DILocation(line: 1530, column: 60, scope: !6457)
!6465 = !DILocation(line: 1530, column: 9, scope: !6466)
!6466 = !DILexicalBlockFile(scope: !6457, file: !971, discriminator: 1)
!6467 = !DILocation(line: 1531, column: 37, scope: !6457)
!6468 = !DILocation(line: 1531, column: 43, scope: !6457)
!6469 = !DILocation(line: 1531, column: 53, scope: !6457)
!6470 = !DILocation(line: 1531, column: 51, scope: !6457)
!6471 = !DILocation(line: 1531, column: 47, scope: !6457)
!6472 = !DILocation(line: 1531, column: 56, scope: !6457)
!6473 = !DILocation(line: 1531, column: 86, scope: !6457)
!6474 = !DILocation(line: 1531, column: 60, scope: !6457)
!6475 = !DILocation(line: 1531, column: 9, scope: !6466)
!6476 = !DILocation(line: 1532, column: 5, scope: !6457)
!6477 = !DILocation(line: 1529, column: 35, scope: !6478)
!6478 = !DILexicalBlockFile(scope: !6451, file: !971, discriminator: 2)
!6479 = !DILocation(line: 1529, column: 5, scope: !6478)
!6480 = distinct !{!6480, !6481}
!6481 = !DILocation(line: 1529, column: 5, scope: !6288)
!6482 = !DILocation(line: 1533, column: 12, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6288, file: !971, line: 1533, column: 5)
!6484 = !DILocation(line: 1533, column: 10, scope: !6483)
!6485 = !DILocation(line: 1533, column: 17, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !6487, file: !971, discriminator: 1)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !971, line: 1533, column: 5)
!6488 = !DILocation(line: 1533, column: 19, scope: !6486)
!6489 = !DILocation(line: 1533, column: 5, scope: !6486)
!6490 = !DILocation(line: 1534, column: 37, scope: !6487)
!6491 = !DILocation(line: 1534, column: 42, scope: !6487)
!6492 = !DILocation(line: 1534, column: 45, scope: !6487)
!6493 = !DILocation(line: 1534, column: 44, scope: !6487)
!6494 = !DILocation(line: 1534, column: 48, scope: !6487)
!6495 = !DILocation(line: 1534, column: 78, scope: !6487)
!6496 = !DILocation(line: 1534, column: 52, scope: !6487)
!6497 = !DILocation(line: 1534, column: 9, scope: !6486)
!6498 = !DILocation(line: 1534, column: 9, scope: !6487)
!6499 = !DILocation(line: 1533, column: 25, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6487, file: !971, discriminator: 2)
!6501 = !DILocation(line: 1533, column: 5, scope: !6500)
!6502 = distinct !{!6502, !6503}
!6503 = !DILocation(line: 1533, column: 5, scope: !6288)
!6504 = !DILocation(line: 1536, column: 12, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6288, file: !971, line: 1536, column: 5)
!6506 = !DILocation(line: 1536, column: 10, scope: !6505)
!6507 = !DILocation(line: 1536, column: 17, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6509, file: !971, discriminator: 1)
!6509 = distinct !DILexicalBlock(scope: !6505, file: !971, line: 1536, column: 5)
!6510 = !DILocation(line: 1536, column: 21, scope: !6508)
!6511 = !DILocation(line: 1536, column: 24, scope: !6508)
!6512 = !DILocation(line: 1536, column: 19, scope: !6508)
!6513 = !DILocation(line: 1536, column: 5, scope: !6508)
!6514 = !DILocation(line: 1537, column: 16, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6509, file: !971, line: 1537, column: 9)
!6516 = !DILocation(line: 1537, column: 14, scope: !6515)
!6517 = !DILocation(line: 1537, column: 21, scope: !6518)
!6518 = !DILexicalBlockFile(scope: !6519, file: !971, discriminator: 1)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !971, line: 1537, column: 9)
!6520 = !DILocation(line: 1537, column: 25, scope: !6518)
!6521 = !DILocation(line: 1537, column: 28, scope: !6518)
!6522 = !DILocation(line: 1537, column: 23, scope: !6518)
!6523 = !DILocation(line: 1537, column: 9, scope: !6518)
!6524 = !DILocalVariable(name: "blkcnt", scope: !6525, file: !971, line: 1538, type: !979)
!6525 = distinct !DILexicalBlock(scope: !6519, file: !971, line: 1537, column: 42)
!6526 = !DILocation(line: 1538, column: 17, scope: !6525)
!6527 = !DILocation(line: 1538, column: 42, scope: !6525)
!6528 = !DILocation(line: 1538, column: 46, scope: !6525)
!6529 = !DILocation(line: 1538, column: 49, scope: !6525)
!6530 = !DILocation(line: 1538, column: 44, scope: !6525)
!6531 = !DILocation(line: 1538, column: 59, scope: !6525)
!6532 = !DILocation(line: 1538, column: 57, scope: !6525)
!6533 = !DILocation(line: 1538, column: 31, scope: !6525)
!6534 = !DILocation(line: 1538, column: 34, scope: !6525)
!6535 = !DILocation(line: 1538, column: 28, scope: !6525)
!6536 = !DILocalVariable(name: "step", scope: !6525, file: !971, line: 1539, type: !979)
!6537 = !DILocation(line: 1539, column: 17, scope: !6525)
!6538 = !DILocation(line: 1539, column: 40, scope: !6525)
!6539 = !DILocation(line: 1539, column: 44, scope: !6525)
!6540 = !DILocation(line: 1539, column: 47, scope: !6525)
!6541 = !DILocation(line: 1539, column: 42, scope: !6525)
!6542 = !DILocation(line: 1539, column: 57, scope: !6525)
!6543 = !DILocation(line: 1539, column: 55, scope: !6525)
!6544 = !DILocation(line: 1539, column: 29, scope: !6525)
!6545 = !DILocation(line: 1539, column: 32, scope: !6525)
!6546 = !DILocation(line: 1539, column: 26, scope: !6525)
!6547 = !DILocation(line: 1541, column: 20, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6525, file: !971, line: 1541, column: 13)
!6549 = !DILocation(line: 1541, column: 18, scope: !6548)
!6550 = !DILocation(line: 1541, column: 25, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6552, file: !971, discriminator: 1)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !971, line: 1541, column: 13)
!6553 = !DILocation(line: 1541, column: 29, scope: !6551)
!6554 = !DILocation(line: 1541, column: 27, scope: !6551)
!6555 = !DILocation(line: 1541, column: 13, scope: !6551)
!6556 = !DILocation(line: 1542, column: 24, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6552, file: !971, line: 1542, column: 17)
!6558 = !DILocation(line: 1542, column: 22, scope: !6557)
!6559 = !DILocation(line: 1542, column: 29, scope: !6560)
!6560 = !DILexicalBlockFile(scope: !6561, file: !971, discriminator: 1)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !971, line: 1542, column: 17)
!6562 = !DILocation(line: 1542, column: 33, scope: !6560)
!6563 = !DILocation(line: 1542, column: 31, scope: !6560)
!6564 = !DILocation(line: 1542, column: 17, scope: !6560)
!6565 = !DILocalVariable(name: "bx", scope: !6566, file: !971, line: 1543, type: !979)
!6566 = distinct !DILexicalBlock(scope: !6561, file: !971, line: 1542, column: 46)
!6567 = !DILocation(line: 1543, column: 25, scope: !6566)
!6568 = !DILocation(line: 1543, column: 34, scope: !6566)
!6569 = !DILocation(line: 1543, column: 32, scope: !6566)
!6570 = !DILocation(line: 1543, column: 38, scope: !6566)
!6571 = !DILocation(line: 1543, column: 40, scope: !6566)
!6572 = !DILocation(line: 1543, column: 39, scope: !6566)
!6573 = !DILocation(line: 1543, column: 36, scope: !6566)
!6574 = !DILocalVariable(name: "by", scope: !6566, file: !971, line: 1544, type: !979)
!6575 = !DILocation(line: 1544, column: 25, scope: !6566)
!6576 = !DILocation(line: 1544, column: 34, scope: !6566)
!6577 = !DILocation(line: 1544, column: 32, scope: !6566)
!6578 = !DILocation(line: 1544, column: 38, scope: !6566)
!6579 = !DILocation(line: 1544, column: 40, scope: !6566)
!6580 = !DILocation(line: 1544, column: 39, scope: !6566)
!6581 = !DILocation(line: 1544, column: 36, scope: !6566)
!6582 = !DILocalVariable(name: "block", scope: !6566, file: !971, line: 1545, type: !2880)
!6583 = !DILocation(line: 1545, column: 33, scope: !6566)
!6584 = !DILocation(line: 1545, column: 54, scope: !6566)
!6585 = !DILocation(line: 1545, column: 57, scope: !6566)
!6586 = !DILocation(line: 1545, column: 60, scope: !6566)
!6587 = !DILocation(line: 1545, column: 56, scope: !6566)
!6588 = !DILocation(line: 1545, column: 70, scope: !6566)
!6589 = !DILocation(line: 1545, column: 68, scope: !6566)
!6590 = !DILocation(line: 1545, column: 42, scope: !6566)
!6591 = !DILocation(line: 1545, column: 45, scope: !6566)
!6592 = !DILocation(line: 1546, column: 41, scope: !6566)
!6593 = !DILocation(line: 1546, column: 44, scope: !6566)
!6594 = !DILocation(line: 1546, column: 51, scope: !6566)
!6595 = !DILocation(line: 1546, column: 58, scope: !6566)
!6596 = !DILocation(line: 1546, column: 61, scope: !6566)
!6597 = !DILocation(line: 1546, column: 70, scope: !6566)
!6598 = !DILocation(line: 1546, column: 74, scope: !6566)
!6599 = !DILocation(line: 1546, column: 21, scope: !6566)
!6600 = !DILocation(line: 1547, column: 42, scope: !6566)
!6601 = !DILocation(line: 1547, column: 49, scope: !6566)
!6602 = !DILocation(line: 1547, column: 52, scope: !6566)
!6603 = !DILocation(line: 1547, column: 61, scope: !6566)
!6604 = !DILocation(line: 1547, column: 21, scope: !6566)
!6605 = !DILocation(line: 1548, column: 17, scope: !6566)
!6606 = !DILocation(line: 1542, column: 42, scope: !6607)
!6607 = !DILexicalBlockFile(scope: !6561, file: !971, discriminator: 2)
!6608 = !DILocation(line: 1542, column: 17, scope: !6607)
!6609 = distinct !{!6609, !6610}
!6610 = !DILocation(line: 1542, column: 17, scope: !6552)
!6611 = !DILocation(line: 1548, column: 17, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6557, file: !971, discriminator: 1)
!6613 = !DILocation(line: 1541, column: 38, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !6552, file: !971, discriminator: 2)
!6615 = !DILocation(line: 1541, column: 13, scope: !6614)
!6616 = distinct !{!6616, !6617}
!6617 = !DILocation(line: 1541, column: 13, scope: !6525)
!6618 = !DILocation(line: 1549, column: 9, scope: !6525)
!6619 = !DILocation(line: 1537, column: 38, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6519, file: !971, discriminator: 2)
!6621 = !DILocation(line: 1537, column: 9, scope: !6620)
!6622 = distinct !{!6622, !6623}
!6623 = !DILocation(line: 1537, column: 9, scope: !6509)
!6624 = !DILocation(line: 1549, column: 9, scope: !6625)
!6625 = !DILexicalBlockFile(scope: !6515, file: !971, discriminator: 1)
!6626 = !DILocation(line: 1536, column: 35, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !6509, file: !971, discriminator: 2)
!6628 = !DILocation(line: 1536, column: 5, scope: !6627)
!6629 = distinct !{!6629, !6630}
!6630 = !DILocation(line: 1536, column: 5, scope: !6288)
!6631 = !DILocation(line: 1551, column: 5, scope: !6288)
!6632 = !DILocation(line: 1552, column: 1, scope: !6288)
!6633 = distinct !DISubprogram(name: "dirac_unpack_idwt_params", scope: !971, file: !971, line: 1231, type: !2668, isLocal: true, isDefinition: true, scopeLine: 1232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!6634 = !DILocalVariable(name: "s", arg: 1, scope: !6633, file: !971, line: 1231, type: !2670)
!6635 = !DILocation(line: 1231, column: 51, scope: !6633)
!6636 = !DILocalVariable(name: "gb", scope: !6633, file: !971, line: 1233, type: !4348)
!6637 = !DILocation(line: 1233, column: 20, scope: !6633)
!6638 = !DILocation(line: 1233, column: 26, scope: !6633)
!6639 = !DILocation(line: 1233, column: 29, scope: !6633)
!6640 = !DILocalVariable(name: "i", scope: !6633, file: !971, line: 1234, type: !979)
!6641 = !DILocation(line: 1234, column: 9, scope: !6633)
!6642 = !DILocalVariable(name: "level", scope: !6633, file: !971, line: 1234, type: !979)
!6643 = !DILocation(line: 1234, column: 12, scope: !6633)
!6644 = !DILocalVariable(name: "tmp", scope: !6633, file: !971, line: 1235, type: !980)
!6645 = !DILocation(line: 1235, column: 14, scope: !6633)
!6646 = !DILocation(line: 1245, column: 20, scope: !6633)
!6647 = !DILocation(line: 1245, column: 5, scope: !6633)
!6648 = !DILocation(line: 1247, column: 19, scope: !6633)
!6649 = !DILocation(line: 1247, column: 22, scope: !6633)
!6650 = !DILocation(line: 1247, column: 43, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6633, file: !971, discriminator: 1)
!6652 = !DILocation(line: 1247, column: 33, scope: !6651)
!6653 = !DILocation(line: 1247, column: 19, scope: !6651)
!6654 = !DILocation(line: 1247, column: 19, scope: !6655)
!6655 = !DILexicalBlockFile(scope: !6633, file: !971, discriminator: 2)
!6656 = !DILocation(line: 1247, column: 19, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !6633, file: !971, discriminator: 3)
!6658 = !DILocation(line: 1247, column: 5, scope: !6657)
!6659 = !DILocation(line: 1247, column: 8, scope: !6657)
!6660 = !DILocation(line: 1247, column: 17, scope: !6657)
!6661 = !DILocation(line: 1248, column: 9, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6633, file: !971, line: 1248, column: 9)
!6663 = !DILocation(line: 1248, column: 12, scope: !6662)
!6664 = !DILocation(line: 1248, column: 9, scope: !6633)
!6665 = !DILocation(line: 1249, column: 9, scope: !6662)
!6666 = !DILocation(line: 1252, column: 37, scope: !6633)
!6667 = !DILocation(line: 1252, column: 11, scope: !6633)
!6668 = !DILocation(line: 1252, column: 9, scope: !6633)
!6669 = !DILocation(line: 1252, column: 46, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6633, file: !971, line: 1252, column: 46)
!6671 = !DILocation(line: 1252, column: 50, scope: !6670)
!6672 = !DILocation(line: 1252, column: 46, scope: !6633)
!6673 = !DILocation(line: 1252, column: 64, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6675, file: !971, discriminator: 1)
!6675 = distinct !DILexicalBlock(scope: !6670, file: !971, line: 1252, column: 55)
!6676 = !DILocation(line: 1252, column: 67, scope: !6674)
!6677 = !DILocation(line: 1252, column: 57, scope: !6674)
!6678 = !DILocation(line: 1252, column: 107, scope: !6674)
!6679 = !DILocation(line: 1252, column: 207, scope: !6655)
!6680 = !DILocation(line: 1252, column: 190, scope: !6655)
!6681 = !DILocation(line: 1252, column: 193, scope: !6655)
!6682 = !DILocation(line: 1252, column: 205, scope: !6655)
!6683 = !DILocation(line: 1254, column: 37, scope: !6633)
!6684 = !DILocation(line: 1254, column: 11, scope: !6633)
!6685 = !DILocation(line: 1254, column: 9, scope: !6633)
!6686 = !DILocation(line: 1254, column: 46, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6633, file: !971, line: 1254, column: 46)
!6688 = !DILocation(line: 1254, column: 50, scope: !6687)
!6689 = !DILocation(line: 1254, column: 54, scope: !6687)
!6690 = !DILocation(line: 1254, column: 57, scope: !6691)
!6691 = !DILexicalBlockFile(scope: !6687, file: !971, discriminator: 1)
!6692 = !DILocation(line: 1254, column: 61, scope: !6691)
!6693 = !DILocation(line: 1254, column: 46, scope: !6691)
!6694 = !DILocation(line: 1254, column: 75, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !6696, file: !971, discriminator: 2)
!6696 = distinct !DILexicalBlock(scope: !6687, file: !971, line: 1254, column: 66)
!6697 = !DILocation(line: 1254, column: 78, scope: !6695)
!6698 = !DILocation(line: 1254, column: 68, scope: !6695)
!6699 = !DILocation(line: 1254, column: 132, scope: !6695)
!6700 = !DILocation(line: 1254, column: 234, scope: !6657)
!6701 = !DILocation(line: 1254, column: 215, scope: !6657)
!6702 = !DILocation(line: 1254, column: 218, scope: !6657)
!6703 = !DILocation(line: 1254, column: 232, scope: !6657)
!6704 = !DILocation(line: 1256, column: 10, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6633, file: !971, line: 1256, column: 9)
!6706 = !DILocation(line: 1256, column: 13, scope: !6705)
!6707 = !DILocation(line: 1256, column: 9, scope: !6633)
!6708 = !DILocation(line: 1258, column: 23, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !971, line: 1258, column: 13)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !971, line: 1256, column: 24)
!6711 = !DILocation(line: 1258, column: 13, scope: !6709)
!6712 = !DILocation(line: 1258, column: 13, scope: !6710)
!6713 = !DILocation(line: 1259, column: 20, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !971, line: 1259, column: 13)
!6715 = distinct !DILexicalBlock(scope: !6709, file: !971, line: 1258, column: 28)
!6716 = !DILocation(line: 1259, column: 18, scope: !6714)
!6717 = !DILocation(line: 1259, column: 25, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6719, file: !971, discriminator: 1)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !971, line: 1259, column: 13)
!6720 = !DILocation(line: 1259, column: 30, scope: !6718)
!6721 = !DILocation(line: 1259, column: 33, scope: !6718)
!6722 = !DILocation(line: 1259, column: 27, scope: !6718)
!6723 = !DILocation(line: 1259, column: 13, scope: !6718)
!6724 = !DILocation(line: 1260, column: 49, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6719, file: !971, line: 1259, column: 53)
!6726 = !DILocation(line: 1260, column: 23, scope: !6725)
!6727 = !DILocation(line: 1260, column: 21, scope: !6725)
!6728 = !DILocation(line: 1260, column: 58, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6725, file: !971, line: 1260, column: 58)
!6730 = !DILocation(line: 1260, column: 62, scope: !6729)
!6731 = !DILocation(line: 1260, column: 66, scope: !6729)
!6732 = !DILocation(line: 1260, column: 69, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6729, file: !971, discriminator: 1)
!6734 = !DILocation(line: 1260, column: 76, scope: !6733)
!6735 = !DILocation(line: 1260, column: 79, scope: !6733)
!6736 = !DILocation(line: 1260, column: 86, scope: !6733)
!6737 = !DILocation(line: 1260, column: 94, scope: !6733)
!6738 = !DILocation(line: 1260, column: 97, scope: !6733)
!6739 = !DILocation(line: 1260, column: 111, scope: !6733)
!6740 = !DILocation(line: 1260, column: 110, scope: !6733)
!6741 = !DILocation(line: 1260, column: 92, scope: !6733)
!6742 = !DILocation(line: 1260, column: 73, scope: !6733)
!6743 = !DILocation(line: 1260, column: 58, scope: !6733)
!6744 = !DILocation(line: 1260, column: 124, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !6746, file: !971, discriminator: 2)
!6746 = distinct !DILexicalBlock(scope: !6729, file: !971, line: 1260, column: 115)
!6747 = !DILocation(line: 1260, column: 127, scope: !6745)
!6748 = !DILocation(line: 1260, column: 117, scope: !6745)
!6749 = !DILocation(line: 1260, column: 168, scope: !6745)
!6750 = !DILocation(line: 1260, column: 275, scope: !6751)
!6751 = !DILexicalBlockFile(scope: !6725, file: !971, discriminator: 3)
!6752 = !DILocation(line: 1260, column: 264, scope: !6751)
!6753 = !DILocation(line: 1260, column: 251, scope: !6751)
!6754 = !DILocation(line: 1260, column: 254, scope: !6751)
!6755 = !DILocation(line: 1260, column: 267, scope: !6751)
!6756 = !DILocation(line: 1260, column: 273, scope: !6751)
!6757 = !DILocation(line: 1261, column: 49, scope: !6725)
!6758 = !DILocation(line: 1261, column: 23, scope: !6725)
!6759 = !DILocation(line: 1261, column: 21, scope: !6725)
!6760 = !DILocation(line: 1261, column: 58, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6725, file: !971, line: 1261, column: 58)
!6762 = !DILocation(line: 1261, column: 62, scope: !6761)
!6763 = !DILocation(line: 1261, column: 66, scope: !6761)
!6764 = !DILocation(line: 1261, column: 69, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !6761, file: !971, discriminator: 1)
!6766 = !DILocation(line: 1261, column: 76, scope: !6765)
!6767 = !DILocation(line: 1261, column: 79, scope: !6765)
!6768 = !DILocation(line: 1261, column: 86, scope: !6765)
!6769 = !DILocation(line: 1261, column: 94, scope: !6765)
!6770 = !DILocation(line: 1261, column: 97, scope: !6765)
!6771 = !DILocation(line: 1261, column: 111, scope: !6765)
!6772 = !DILocation(line: 1261, column: 110, scope: !6765)
!6773 = !DILocation(line: 1261, column: 92, scope: !6765)
!6774 = !DILocation(line: 1261, column: 73, scope: !6765)
!6775 = !DILocation(line: 1261, column: 58, scope: !6765)
!6776 = !DILocation(line: 1261, column: 124, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6778, file: !971, discriminator: 2)
!6778 = distinct !DILexicalBlock(scope: !6761, file: !971, line: 1261, column: 115)
!6779 = !DILocation(line: 1261, column: 127, scope: !6777)
!6780 = !DILocation(line: 1261, column: 117, scope: !6777)
!6781 = !DILocation(line: 1261, column: 169, scope: !6777)
!6782 = !DILocation(line: 1261, column: 277, scope: !6751)
!6783 = !DILocation(line: 1261, column: 265, scope: !6751)
!6784 = !DILocation(line: 1261, column: 252, scope: !6751)
!6785 = !DILocation(line: 1261, column: 255, scope: !6751)
!6786 = !DILocation(line: 1261, column: 268, scope: !6751)
!6787 = !DILocation(line: 1261, column: 275, scope: !6751)
!6788 = !DILocation(line: 1262, column: 13, scope: !6725)
!6789 = !DILocation(line: 1259, column: 49, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !6719, file: !971, discriminator: 2)
!6791 = !DILocation(line: 1259, column: 13, scope: !6790)
!6792 = distinct !{!6792, !6793}
!6793 = !DILocation(line: 1259, column: 13, scope: !6715)
!6794 = !DILocation(line: 1264, column: 45, scope: !6715)
!6795 = !DILocation(line: 1264, column: 19, scope: !6715)
!6796 = !DILocation(line: 1264, column: 17, scope: !6715)
!6797 = !DILocation(line: 1264, column: 54, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6715, file: !971, line: 1264, column: 54)
!6799 = !DILocation(line: 1264, column: 58, scope: !6798)
!6800 = !DILocation(line: 1264, column: 54, scope: !6715)
!6801 = !DILocation(line: 1264, column: 72, scope: !6802)
!6802 = !DILexicalBlockFile(scope: !6803, file: !971, discriminator: 1)
!6803 = distinct !DILexicalBlock(scope: !6798, file: !971, line: 1264, column: 63)
!6804 = !DILocation(line: 1264, column: 75, scope: !6802)
!6805 = !DILocation(line: 1264, column: 65, scope: !6802)
!6806 = !DILocation(line: 1264, column: 115, scope: !6802)
!6807 = !DILocation(line: 1264, column: 218, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6715, file: !971, discriminator: 2)
!6809 = !DILocation(line: 1264, column: 198, scope: !6808)
!6810 = !DILocation(line: 1264, column: 201, scope: !6808)
!6811 = !DILocation(line: 1264, column: 216, scope: !6808)
!6812 = !DILocation(line: 1265, column: 9, scope: !6715)
!6813 = !DILocation(line: 1267, column: 20, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !971, line: 1267, column: 13)
!6815 = distinct !DILexicalBlock(scope: !6709, file: !971, line: 1266, column: 14)
!6816 = !DILocation(line: 1267, column: 18, scope: !6814)
!6817 = !DILocation(line: 1267, column: 25, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !6819, file: !971, discriminator: 1)
!6819 = distinct !DILexicalBlock(scope: !6814, file: !971, line: 1267, column: 13)
!6820 = !DILocation(line: 1267, column: 30, scope: !6818)
!6821 = !DILocation(line: 1267, column: 33, scope: !6818)
!6822 = !DILocation(line: 1267, column: 27, scope: !6818)
!6823 = !DILocation(line: 1267, column: 13, scope: !6818)
!6824 = !DILocation(line: 1268, column: 54, scope: !6819)
!6825 = !DILocation(line: 1268, column: 41, scope: !6819)
!6826 = !DILocation(line: 1268, column: 44, scope: !6819)
!6827 = !DILocation(line: 1268, column: 57, scope: !6819)
!6828 = !DILocation(line: 1268, column: 64, scope: !6819)
!6829 = !DILocation(line: 1268, column: 30, scope: !6819)
!6830 = !DILocation(line: 1268, column: 17, scope: !6819)
!6831 = !DILocation(line: 1268, column: 20, scope: !6819)
!6832 = !DILocation(line: 1268, column: 33, scope: !6819)
!6833 = !DILocation(line: 1268, column: 39, scope: !6819)
!6834 = !DILocation(line: 1267, column: 49, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6819, file: !971, discriminator: 2)
!6836 = !DILocation(line: 1267, column: 13, scope: !6835)
!6837 = distinct !{!6837, !6838}
!6838 = !DILocation(line: 1267, column: 13, scope: !6815)
!6839 = !DILocation(line: 1270, column: 5, scope: !6710)
!6840 = !DILocation(line: 1272, column: 46, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6705, file: !971, line: 1271, column: 10)
!6842 = !DILocation(line: 1272, column: 20, scope: !6841)
!6843 = !DILocation(line: 1272, column: 9, scope: !6841)
!6844 = !DILocation(line: 1272, column: 12, scope: !6841)
!6845 = !DILocation(line: 1272, column: 18, scope: !6841)
!6846 = !DILocation(line: 1273, column: 46, scope: !6841)
!6847 = !DILocation(line: 1273, column: 20, scope: !6841)
!6848 = !DILocation(line: 1273, column: 9, scope: !6841)
!6849 = !DILocation(line: 1273, column: 12, scope: !6841)
!6850 = !DILocation(line: 1273, column: 18, scope: !6841)
!6851 = !DILocation(line: 1274, column: 13, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6841, file: !971, line: 1274, column: 13)
!6853 = !DILocation(line: 1274, column: 16, scope: !6852)
!6854 = !DILocation(line: 1274, column: 24, scope: !6852)
!6855 = !DILocation(line: 1274, column: 27, scope: !6852)
!6856 = !DILocation(line: 1274, column: 22, scope: !6852)
!6857 = !DILocation(line: 1274, column: 33, scope: !6852)
!6858 = !DILocation(line: 1274, column: 38, scope: !6852)
!6859 = !DILocation(line: 1274, column: 41, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6852, file: !971, discriminator: 1)
!6861 = !DILocation(line: 1274, column: 44, scope: !6860)
!6862 = !DILocation(line: 1274, column: 62, scope: !6860)
!6863 = !DILocation(line: 1274, column: 65, scope: !6860)
!6864 = !DILocation(line: 1274, column: 52, scope: !6860)
!6865 = !DILocation(line: 1274, column: 50, scope: !6860)
!6866 = !DILocation(line: 1274, column: 71, scope: !6860)
!6867 = !DILocation(line: 1274, column: 84, scope: !6860)
!6868 = !DILocation(line: 1275, column: 13, scope: !6852)
!6869 = !DILocation(line: 1275, column: 16, scope: !6852)
!6870 = !DILocation(line: 1275, column: 34, scope: !6852)
!6871 = !DILocation(line: 1275, column: 37, scope: !6852)
!6872 = !DILocation(line: 1275, column: 44, scope: !6852)
!6873 = !DILocation(line: 1275, column: 24, scope: !6852)
!6874 = !DILocation(line: 1275, column: 22, scope: !6852)
!6875 = !DILocation(line: 1275, column: 50, scope: !6852)
!6876 = !DILocation(line: 1275, column: 63, scope: !6852)
!6877 = !DILocation(line: 1276, column: 13, scope: !6852)
!6878 = !DILocation(line: 1276, column: 16, scope: !6852)
!6879 = !DILocation(line: 1276, column: 34, scope: !6852)
!6880 = !DILocation(line: 1276, column: 37, scope: !6852)
!6881 = !DILocation(line: 1276, column: 44, scope: !6852)
!6882 = !DILocation(line: 1276, column: 24, scope: !6852)
!6883 = !DILocation(line: 1276, column: 22, scope: !6852)
!6884 = !DILocation(line: 1276, column: 51, scope: !6852)
!6885 = !DILocation(line: 1274, column: 13, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6841, file: !971, discriminator: 2)
!6887 = !DILocation(line: 1278, column: 20, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6852, file: !971, line: 1277, column: 11)
!6889 = !DILocation(line: 1278, column: 23, scope: !6888)
!6890 = !DILocation(line: 1278, column: 13, scope: !6888)
!6891 = !DILocation(line: 1279, column: 24, scope: !6888)
!6892 = !DILocation(line: 1279, column: 27, scope: !6888)
!6893 = !DILocation(line: 1279, column: 33, scope: !6888)
!6894 = !DILocation(line: 1279, column: 13, scope: !6888)
!6895 = !DILocation(line: 1279, column: 16, scope: !6888)
!6896 = !DILocation(line: 1279, column: 22, scope: !6888)
!6897 = !DILocation(line: 1280, column: 13, scope: !6888)
!6898 = !DILocation(line: 1282, column: 13, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6841, file: !971, line: 1282, column: 13)
!6900 = !DILocation(line: 1282, column: 16, scope: !6899)
!6901 = !DILocation(line: 1282, column: 13, scope: !6841)
!6902 = !DILocation(line: 1283, column: 63, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6899, file: !971, line: 1282, column: 28)
!6904 = !DILocation(line: 1283, column: 37, scope: !6903)
!6905 = !DILocation(line: 1283, column: 13, scope: !6903)
!6906 = !DILocation(line: 1283, column: 16, scope: !6903)
!6907 = !DILocation(line: 1283, column: 25, scope: !6903)
!6908 = !DILocation(line: 1283, column: 31, scope: !6903)
!6909 = !DILocation(line: 1283, column: 35, scope: !6903)
!6910 = !DILocation(line: 1284, column: 63, scope: !6903)
!6911 = !DILocation(line: 1284, column: 37, scope: !6903)
!6912 = !DILocation(line: 1284, column: 13, scope: !6903)
!6913 = !DILocation(line: 1284, column: 16, scope: !6903)
!6914 = !DILocation(line: 1284, column: 25, scope: !6903)
!6915 = !DILocation(line: 1284, column: 31, scope: !6903)
!6916 = !DILocation(line: 1284, column: 35, scope: !6903)
!6917 = !DILocation(line: 1285, column: 17, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6903, file: !971, line: 1285, column: 17)
!6919 = !DILocation(line: 1285, column: 20, scope: !6918)
!6920 = !DILocation(line: 1285, column: 29, scope: !6918)
!6921 = !DILocation(line: 1285, column: 35, scope: !6918)
!6922 = !DILocation(line: 1285, column: 39, scope: !6918)
!6923 = !DILocation(line: 1285, column: 17, scope: !6903)
!6924 = !DILocation(line: 1286, column: 24, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6918, file: !971, line: 1285, column: 45)
!6926 = !DILocation(line: 1286, column: 27, scope: !6925)
!6927 = !DILocation(line: 1286, column: 17, scope: !6925)
!6928 = !DILocation(line: 1287, column: 17, scope: !6925)
!6929 = !DILocation(line: 1289, column: 9, scope: !6903)
!6930 = !DILocation(line: 1289, column: 20, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6932, file: !971, discriminator: 1)
!6932 = distinct !DILexicalBlock(scope: !6899, file: !971, line: 1289, column: 20)
!6933 = !DILocation(line: 1289, column: 23, scope: !6931)
!6934 = !DILocation(line: 1290, column: 69, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6932, file: !971, line: 1289, column: 35)
!6936 = !DILocation(line: 1290, column: 43, scope: !6935)
!6937 = !DILocation(line: 1290, column: 13, scope: !6935)
!6938 = !DILocation(line: 1290, column: 16, scope: !6935)
!6939 = !DILocation(line: 1290, column: 28, scope: !6935)
!6940 = !DILocation(line: 1290, column: 41, scope: !6935)
!6941 = !DILocation(line: 1291, column: 68, scope: !6935)
!6942 = !DILocation(line: 1291, column: 42, scope: !6935)
!6943 = !DILocation(line: 1291, column: 13, scope: !6935)
!6944 = !DILocation(line: 1291, column: 16, scope: !6935)
!6945 = !DILocation(line: 1291, column: 28, scope: !6935)
!6946 = !DILocation(line: 1291, column: 40, scope: !6935)
!6947 = !DILocation(line: 1292, column: 17, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6935, file: !971, line: 1292, column: 17)
!6949 = !DILocation(line: 1292, column: 20, scope: !6948)
!6950 = !DILocation(line: 1292, column: 32, scope: !6948)
!6951 = !DILocation(line: 1292, column: 45, scope: !6948)
!6952 = !DILocation(line: 1292, column: 17, scope: !6935)
!6953 = !DILocation(line: 1293, column: 24, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6948, file: !971, line: 1292, column: 64)
!6955 = !DILocation(line: 1293, column: 27, scope: !6954)
!6956 = !DILocation(line: 1293, column: 17, scope: !6954)
!6957 = !DILocation(line: 1294, column: 17, scope: !6954)
!6958 = !DILocation(line: 1296, column: 9, scope: !6935)
!6959 = !DILocation(line: 1299, column: 23, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6841, file: !971, line: 1299, column: 13)
!6961 = !DILocation(line: 1299, column: 13, scope: !6960)
!6962 = !DILocation(line: 1299, column: 13, scope: !6841)
!6963 = !DILocation(line: 1300, column: 20, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6960, file: !971, line: 1299, column: 28)
!6965 = !DILocation(line: 1300, column: 23, scope: !6964)
!6966 = !DILocation(line: 1300, column: 13, scope: !6964)
!6967 = !DILocation(line: 1302, column: 24, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6964, file: !971, line: 1302, column: 13)
!6969 = !DILocation(line: 1302, column: 18, scope: !6968)
!6970 = !DILocation(line: 1302, column: 29, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6972, file: !971, discriminator: 1)
!6972 = distinct !DILexicalBlock(scope: !6968, file: !971, line: 1302, column: 13)
!6973 = !DILocation(line: 1302, column: 37, scope: !6971)
!6974 = !DILocation(line: 1302, column: 40, scope: !6971)
!6975 = !DILocation(line: 1302, column: 35, scope: !6971)
!6976 = !DILocation(line: 1302, column: 13, scope: !6971)
!6977 = !DILocation(line: 1303, column: 28, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !971, line: 1303, column: 17)
!6979 = distinct !DILexicalBlock(scope: !6972, file: !971, line: 1302, column: 64)
!6980 = !DILocation(line: 1303, column: 27, scope: !6978)
!6981 = !DILocation(line: 1303, column: 26, scope: !6978)
!6982 = !DILocation(line: 1303, column: 24, scope: !6978)
!6983 = !DILocation(line: 1303, column: 22, scope: !6978)
!6984 = !DILocation(line: 1303, column: 35, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !6986, file: !971, discriminator: 1)
!6986 = distinct !DILexicalBlock(scope: !6978, file: !971, line: 1303, column: 17)
!6987 = !DILocation(line: 1303, column: 37, scope: !6985)
!6988 = !DILocation(line: 1303, column: 17, scope: !6985)
!6989 = !DILocation(line: 1304, column: 77, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !971, line: 1303, column: 47)
!6991 = !DILocation(line: 1304, column: 51, scope: !6990)
!6992 = !DILocation(line: 1304, column: 46, scope: !6990)
!6993 = !DILocation(line: 1304, column: 21, scope: !6990)
!6994 = !DILocation(line: 1304, column: 39, scope: !6990)
!6995 = !DILocation(line: 1304, column: 24, scope: !6990)
!6996 = !DILocation(line: 1304, column: 33, scope: !6990)
!6997 = !DILocation(line: 1304, column: 49, scope: !6990)
!6998 = !DILocation(line: 1305, column: 17, scope: !6990)
!6999 = !DILocation(line: 1303, column: 43, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !6986, file: !971, discriminator: 2)
!7001 = !DILocation(line: 1303, column: 17, scope: !7000)
!7002 = distinct !{!7002, !7003}
!7003 = !DILocation(line: 1303, column: 17, scope: !6979)
!7004 = !DILocation(line: 1306, column: 13, scope: !6979)
!7005 = !DILocation(line: 1302, column: 60, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !6972, file: !971, discriminator: 2)
!7007 = !DILocation(line: 1302, column: 13, scope: !7006)
!7008 = distinct !{!7008, !7009}
!7009 = !DILocation(line: 1302, column: 13, scope: !6964)
!7010 = !DILocation(line: 1307, column: 9, scope: !6964)
!7011 = !DILocation(line: 1308, column: 17, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !971, line: 1308, column: 17)
!7013 = distinct !DILexicalBlock(scope: !6960, file: !971, line: 1307, column: 16)
!7014 = !DILocation(line: 1308, column: 20, scope: !7012)
!7015 = !DILocation(line: 1308, column: 34, scope: !7012)
!7016 = !DILocation(line: 1308, column: 17, scope: !7013)
!7017 = !DILocation(line: 1309, column: 24, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7012, file: !971, line: 1308, column: 39)
!7019 = !DILocation(line: 1309, column: 27, scope: !7018)
!7020 = !DILocation(line: 1309, column: 96, scope: !7018)
!7021 = !DILocation(line: 1309, column: 99, scope: !7018)
!7022 = !DILocation(line: 1309, column: 17, scope: !7018)
!7023 = !DILocation(line: 1310, column: 17, scope: !7018)
!7024 = !DILocation(line: 1313, column: 24, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7013, file: !971, line: 1313, column: 13)
!7026 = !DILocation(line: 1313, column: 18, scope: !7025)
!7027 = !DILocation(line: 1313, column: 29, scope: !7028)
!7028 = !DILexicalBlockFile(scope: !7029, file: !971, discriminator: 1)
!7029 = distinct !DILexicalBlock(scope: !7025, file: !971, line: 1313, column: 13)
!7030 = !DILocation(line: 1313, column: 37, scope: !7028)
!7031 = !DILocation(line: 1313, column: 40, scope: !7028)
!7032 = !DILocation(line: 1313, column: 35, scope: !7028)
!7033 = !DILocation(line: 1313, column: 13, scope: !7028)
!7034 = !DILocation(line: 1314, column: 24, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7029, file: !971, line: 1314, column: 17)
!7036 = !DILocation(line: 1314, column: 22, scope: !7035)
!7037 = !DILocation(line: 1314, column: 29, scope: !7038)
!7038 = !DILexicalBlockFile(scope: !7039, file: !971, discriminator: 1)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !971, line: 1314, column: 17)
!7040 = !DILocation(line: 1314, column: 31, scope: !7038)
!7041 = !DILocation(line: 1314, column: 17, scope: !7038)
!7042 = !DILocation(line: 1315, column: 96, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7039, file: !971, line: 1314, column: 41)
!7044 = !DILocation(line: 1315, column: 51, scope: !7043)
!7045 = !DILocation(line: 1315, column: 89, scope: !7043)
!7046 = !DILocation(line: 1315, column: 73, scope: !7043)
!7047 = !DILocation(line: 1315, column: 76, scope: !7043)
!7048 = !DILocation(line: 1315, column: 46, scope: !7043)
!7049 = !DILocation(line: 1315, column: 21, scope: !7043)
!7050 = !DILocation(line: 1315, column: 39, scope: !7043)
!7051 = !DILocation(line: 1315, column: 24, scope: !7043)
!7052 = !DILocation(line: 1315, column: 33, scope: !7043)
!7053 = !DILocation(line: 1315, column: 49, scope: !7043)
!7054 = !DILocation(line: 1317, column: 25, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7043, file: !971, line: 1317, column: 25)
!7056 = !DILocation(line: 1317, column: 28, scope: !7055)
!7057 = !DILocation(line: 1317, column: 40, scope: !7055)
!7058 = !DILocation(line: 1317, column: 25, scope: !7043)
!7059 = !DILocation(line: 1318, column: 59, scope: !7055)
!7060 = !DILocation(line: 1318, column: 62, scope: !7055)
!7061 = !DILocation(line: 1318, column: 75, scope: !7055)
!7062 = !DILocation(line: 1318, column: 80, scope: !7055)
!7063 = !DILocation(line: 1318, column: 78, scope: !7055)
!7064 = !DILocation(line: 1318, column: 57, scope: !7055)
!7065 = !DILocation(line: 1318, column: 50, scope: !7055)
!7066 = !DILocation(line: 1318, column: 25, scope: !7055)
!7067 = !DILocation(line: 1318, column: 43, scope: !7055)
!7068 = !DILocation(line: 1318, column: 28, scope: !7055)
!7069 = !DILocation(line: 1318, column: 37, scope: !7055)
!7070 = !DILocation(line: 1318, column: 53, scope: !7055)
!7071 = !DILocation(line: 1319, column: 17, scope: !7043)
!7072 = !DILocation(line: 1314, column: 37, scope: !7073)
!7073 = !DILexicalBlockFile(scope: !7039, file: !971, discriminator: 2)
!7074 = !DILocation(line: 1314, column: 17, scope: !7073)
!7075 = distinct !{!7075, !7076}
!7076 = !DILocation(line: 1314, column: 17, scope: !7029)
!7077 = !DILocation(line: 1319, column: 17, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !7035, file: !971, discriminator: 1)
!7079 = !DILocation(line: 1313, column: 60, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !7029, file: !971, discriminator: 2)
!7081 = !DILocation(line: 1313, column: 13, scope: !7080)
!7082 = distinct !{!7082, !7083}
!7083 = !DILocation(line: 1313, column: 13, scope: !7013)
!7084 = !DILocation(line: 1322, column: 5, scope: !6633)
!7085 = !DILocation(line: 1323, column: 1, scope: !6633)
!7086 = distinct !DISubprogram(name: "init_planes", scope: !971, file: !971, line: 1049, type: !4610, isLocal: true, isDefinition: true, scopeLine: 1050, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7087 = !DILocalVariable(name: "s", arg: 1, scope: !7086, file: !971, line: 1049, type: !2670)
!7088 = !DILocation(line: 1049, column: 39, scope: !7086)
!7089 = !DILocalVariable(name: "i", scope: !7086, file: !971, line: 1051, type: !979)
!7090 = !DILocation(line: 1051, column: 9, scope: !7086)
!7091 = !DILocalVariable(name: "w", scope: !7086, file: !971, line: 1051, type: !979)
!7092 = !DILocation(line: 1051, column: 12, scope: !7086)
!7093 = !DILocalVariable(name: "h", scope: !7086, file: !971, line: 1051, type: !979)
!7094 = !DILocation(line: 1051, column: 15, scope: !7086)
!7095 = !DILocalVariable(name: "level", scope: !7086, file: !971, line: 1051, type: !979)
!7096 = !DILocation(line: 1051, column: 18, scope: !7086)
!7097 = !DILocalVariable(name: "orientation", scope: !7086, file: !971, line: 1051, type: !979)
!7098 = !DILocation(line: 1051, column: 25, scope: !7086)
!7099 = !DILocation(line: 1053, column: 12, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7086, file: !971, line: 1053, column: 5)
!7101 = !DILocation(line: 1053, column: 10, scope: !7100)
!7102 = !DILocation(line: 1053, column: 17, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !7104, file: !971, discriminator: 1)
!7104 = distinct !DILexicalBlock(scope: !7100, file: !971, line: 1053, column: 5)
!7105 = !DILocation(line: 1053, column: 19, scope: !7103)
!7106 = !DILocation(line: 1053, column: 5, scope: !7103)
!7107 = !DILocalVariable(name: "p", scope: !7108, file: !971, line: 1054, type: !5362)
!7108 = distinct !DILexicalBlock(scope: !7104, file: !971, line: 1053, column: 29)
!7109 = !DILocation(line: 1054, column: 16, scope: !7108)
!7110 = !DILocation(line: 1054, column: 30, scope: !7108)
!7111 = !DILocation(line: 1054, column: 21, scope: !7108)
!7112 = !DILocation(line: 1054, column: 24, scope: !7108)
!7113 = !DILocation(line: 1056, column: 20, scope: !7108)
!7114 = !DILocation(line: 1056, column: 23, scope: !7108)
!7115 = !DILocation(line: 1056, column: 27, scope: !7108)
!7116 = !DILocation(line: 1056, column: 37, scope: !7108)
!7117 = !DILocation(line: 1056, column: 41, scope: !7118)
!7118 = !DILexicalBlockFile(scope: !7108, file: !971, discriminator: 1)
!7119 = !DILocation(line: 1056, column: 44, scope: !7118)
!7120 = !DILocation(line: 1056, column: 37, scope: !7118)
!7121 = !DILocation(line: 1056, column: 37, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7108, file: !971, discriminator: 2)
!7123 = !DILocation(line: 1056, column: 37, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !7108, file: !971, discriminator: 3)
!7125 = !DILocation(line: 1056, column: 33, scope: !7124)
!7126 = !DILocation(line: 1056, column: 9, scope: !7124)
!7127 = !DILocation(line: 1056, column: 12, scope: !7124)
!7128 = !DILocation(line: 1056, column: 18, scope: !7124)
!7129 = !DILocation(line: 1057, column: 21, scope: !7108)
!7130 = !DILocation(line: 1057, column: 24, scope: !7108)
!7131 = !DILocation(line: 1057, column: 28, scope: !7108)
!7132 = !DILocation(line: 1057, column: 39, scope: !7108)
!7133 = !DILocation(line: 1057, column: 43, scope: !7118)
!7134 = !DILocation(line: 1057, column: 46, scope: !7118)
!7135 = !DILocation(line: 1057, column: 39, scope: !7118)
!7136 = !DILocation(line: 1057, column: 39, scope: !7122)
!7137 = !DILocation(line: 1057, column: 39, scope: !7124)
!7138 = !DILocation(line: 1057, column: 35, scope: !7124)
!7139 = !DILocation(line: 1057, column: 9, scope: !7124)
!7140 = !DILocation(line: 1057, column: 12, scope: !7124)
!7141 = !DILocation(line: 1057, column: 19, scope: !7124)
!7142 = !DILocation(line: 1058, column: 32, scope: !7108)
!7143 = !DILocation(line: 1058, column: 35, scope: !7108)
!7144 = !DILocation(line: 1058, column: 49, scope: !7108)
!7145 = !DILocation(line: 1058, column: 52, scope: !7108)
!7146 = !DILocation(line: 1058, column: 46, scope: !7108)
!7147 = !DILocation(line: 1058, column: 41, scope: !7108)
!7148 = !DILocation(line: 1058, column: 67, scope: !7108)
!7149 = !DILocation(line: 1058, column: 75, scope: !7108)
!7150 = !DILocation(line: 1058, column: 78, scope: !7108)
!7151 = !DILocation(line: 1058, column: 72, scope: !7108)
!7152 = !DILocation(line: 1058, column: 96, scope: !7108)
!7153 = !DILocation(line: 1058, column: 99, scope: !7108)
!7154 = !DILocation(line: 1058, column: 93, scope: !7108)
!7155 = !DILocation(line: 1058, column: 27, scope: !7108)
!7156 = !DILocation(line: 1058, column: 9, scope: !7108)
!7157 = !DILocation(line: 1058, column: 12, scope: !7108)
!7158 = !DILocation(line: 1058, column: 17, scope: !7108)
!7159 = !DILocation(line: 1058, column: 23, scope: !7108)
!7160 = !DILocation(line: 1059, column: 33, scope: !7108)
!7161 = !DILocation(line: 1059, column: 36, scope: !7108)
!7162 = !DILocation(line: 1059, column: 51, scope: !7108)
!7163 = !DILocation(line: 1059, column: 54, scope: !7108)
!7164 = !DILocation(line: 1059, column: 48, scope: !7108)
!7165 = !DILocation(line: 1059, column: 43, scope: !7108)
!7166 = !DILocation(line: 1059, column: 69, scope: !7108)
!7167 = !DILocation(line: 1059, column: 77, scope: !7108)
!7168 = !DILocation(line: 1059, column: 80, scope: !7108)
!7169 = !DILocation(line: 1059, column: 74, scope: !7108)
!7170 = !DILocation(line: 1059, column: 98, scope: !7108)
!7171 = !DILocation(line: 1059, column: 101, scope: !7108)
!7172 = !DILocation(line: 1059, column: 95, scope: !7108)
!7173 = !DILocation(line: 1059, column: 28, scope: !7108)
!7174 = !DILocation(line: 1059, column: 9, scope: !7108)
!7175 = !DILocation(line: 1059, column: 12, scope: !7108)
!7176 = !DILocation(line: 1059, column: 17, scope: !7108)
!7177 = !DILocation(line: 1059, column: 24, scope: !7108)
!7178 = !DILocation(line: 1060, column: 29, scope: !7108)
!7179 = !DILocation(line: 1060, column: 32, scope: !7108)
!7180 = !DILocation(line: 1060, column: 37, scope: !7108)
!7181 = !DILocation(line: 1060, column: 43, scope: !7108)
!7182 = !DILocation(line: 1060, column: 47, scope: !7108)
!7183 = !DILocation(line: 1060, column: 50, scope: !7108)
!7184 = !DILocation(line: 1060, column: 69, scope: !7108)
!7185 = !DILocation(line: 1060, column: 72, scope: !7108)
!7186 = !DILocation(line: 1060, column: 67, scope: !7108)
!7187 = !DILocation(line: 1060, column: 61, scope: !7108)
!7188 = !DILocation(line: 1060, column: 9, scope: !7108)
!7189 = !DILocation(line: 1060, column: 12, scope: !7108)
!7190 = !DILocation(line: 1060, column: 17, scope: !7108)
!7191 = !DILocation(line: 1060, column: 24, scope: !7108)
!7192 = !DILocation(line: 1062, column: 22, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7108, file: !971, line: 1062, column: 9)
!7194 = !DILocation(line: 1062, column: 25, scope: !7193)
!7195 = !DILocation(line: 1062, column: 38, scope: !7193)
!7196 = !DILocation(line: 1062, column: 20, scope: !7193)
!7197 = !DILocation(line: 1062, column: 14, scope: !7193)
!7198 = !DILocation(line: 1062, column: 42, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !7200, file: !971, discriminator: 1)
!7200 = distinct !DILexicalBlock(scope: !7193, file: !971, line: 1062, column: 9)
!7201 = !DILocation(line: 1062, column: 48, scope: !7199)
!7202 = !DILocation(line: 1062, column: 9, scope: !7199)
!7203 = !DILocation(line: 1063, column: 17, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7200, file: !971, line: 1062, column: 63)
!7205 = !DILocation(line: 1063, column: 18, scope: !7204)
!7206 = !DILocation(line: 1063, column: 15, scope: !7204)
!7207 = !DILocation(line: 1064, column: 17, scope: !7204)
!7208 = !DILocation(line: 1064, column: 18, scope: !7204)
!7209 = !DILocation(line: 1064, column: 15, scope: !7204)
!7210 = !DILocation(line: 1065, column: 34, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7204, file: !971, line: 1065, column: 13)
!7212 = !DILocation(line: 1065, column: 33, scope: !7211)
!7213 = !DILocation(line: 1065, column: 32, scope: !7211)
!7214 = !DILocation(line: 1065, column: 30, scope: !7211)
!7215 = !DILocation(line: 1065, column: 18, scope: !7211)
!7216 = !DILocation(line: 1065, column: 41, scope: !7217)
!7217 = !DILexicalBlockFile(scope: !7218, file: !971, discriminator: 1)
!7218 = distinct !DILexicalBlock(scope: !7211, file: !971, line: 1065, column: 13)
!7219 = !DILocation(line: 1065, column: 53, scope: !7217)
!7220 = !DILocation(line: 1065, column: 13, scope: !7217)
!7221 = !DILocalVariable(name: "b", scope: !7222, file: !971, line: 1066, type: !7223)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !971, line: 1065, column: 73)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64, align: 64)
!7224 = !DILocation(line: 1066, column: 26, scope: !7222)
!7225 = !DILocation(line: 1066, column: 46, scope: !7222)
!7226 = !DILocation(line: 1066, column: 31, scope: !7222)
!7227 = !DILocation(line: 1066, column: 39, scope: !7222)
!7228 = !DILocation(line: 1066, column: 34, scope: !7222)
!7229 = !DILocation(line: 1068, column: 29, scope: !7222)
!7230 = !DILocation(line: 1068, column: 32, scope: !7222)
!7231 = !DILocation(line: 1068, column: 17, scope: !7222)
!7232 = !DILocation(line: 1068, column: 20, scope: !7222)
!7233 = !DILocation(line: 1068, column: 27, scope: !7222)
!7234 = !DILocation(line: 1069, column: 27, scope: !7222)
!7235 = !DILocation(line: 1069, column: 30, scope: !7222)
!7236 = !DILocation(line: 1069, column: 35, scope: !7222)
!7237 = !DILocation(line: 1069, column: 17, scope: !7222)
!7238 = !DILocation(line: 1069, column: 20, scope: !7222)
!7239 = !DILocation(line: 1069, column: 25, scope: !7222)
!7240 = !DILocation(line: 1070, column: 28, scope: !7222)
!7241 = !DILocation(line: 1070, column: 17, scope: !7222)
!7242 = !DILocation(line: 1070, column: 20, scope: !7222)
!7243 = !DILocation(line: 1070, column: 26, scope: !7222)
!7244 = !DILocation(line: 1071, column: 29, scope: !7222)
!7245 = !DILocation(line: 1071, column: 32, scope: !7222)
!7246 = !DILocation(line: 1071, column: 37, scope: !7222)
!7247 = !DILocation(line: 1071, column: 48, scope: !7222)
!7248 = !DILocation(line: 1071, column: 51, scope: !7222)
!7249 = !DILocation(line: 1071, column: 67, scope: !7222)
!7250 = !DILocation(line: 1071, column: 65, scope: !7222)
!7251 = !DILocation(line: 1071, column: 44, scope: !7222)
!7252 = !DILocation(line: 1071, column: 17, scope: !7222)
!7253 = !DILocation(line: 1071, column: 20, scope: !7222)
!7254 = !DILocation(line: 1071, column: 27, scope: !7222)
!7255 = !DILocation(line: 1072, column: 28, scope: !7222)
!7256 = !DILocation(line: 1072, column: 17, scope: !7222)
!7257 = !DILocation(line: 1072, column: 20, scope: !7222)
!7258 = !DILocation(line: 1072, column: 26, scope: !7222)
!7259 = !DILocation(line: 1073, column: 29, scope: !7222)
!7260 = !DILocation(line: 1073, column: 17, scope: !7222)
!7261 = !DILocation(line: 1073, column: 20, scope: !7222)
!7262 = !DILocation(line: 1073, column: 27, scope: !7222)
!7263 = !DILocation(line: 1074, column: 34, scope: !7222)
!7264 = !DILocation(line: 1074, column: 17, scope: !7222)
!7265 = !DILocation(line: 1074, column: 20, scope: !7222)
!7266 = !DILocation(line: 1074, column: 32, scope: !7222)
!7267 = !DILocation(line: 1076, column: 21, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7222, file: !971, line: 1076, column: 21)
!7269 = !DILocation(line: 1076, column: 33, scope: !7268)
!7270 = !DILocation(line: 1076, column: 21, scope: !7222)
!7271 = !DILocation(line: 1077, column: 32, scope: !7268)
!7272 = !DILocation(line: 1077, column: 40, scope: !7268)
!7273 = !DILocation(line: 1077, column: 43, scope: !7268)
!7274 = !DILocation(line: 1077, column: 39, scope: !7268)
!7275 = !DILocation(line: 1077, column: 34, scope: !7268)
!7276 = !DILocation(line: 1077, column: 21, scope: !7268)
!7277 = !DILocation(line: 1077, column: 24, scope: !7268)
!7278 = !DILocation(line: 1077, column: 29, scope: !7268)
!7279 = !DILocation(line: 1078, column: 21, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7222, file: !971, line: 1078, column: 21)
!7281 = !DILocation(line: 1078, column: 33, scope: !7280)
!7282 = !DILocation(line: 1078, column: 21, scope: !7222)
!7283 = !DILocation(line: 1079, column: 33, scope: !7280)
!7284 = !DILocation(line: 1079, column: 36, scope: !7280)
!7285 = !DILocation(line: 1079, column: 42, scope: !7280)
!7286 = !DILocation(line: 1079, column: 21, scope: !7280)
!7287 = !DILocation(line: 1079, column: 24, scope: !7280)
!7288 = !DILocation(line: 1079, column: 29, scope: !7280)
!7289 = !DILocation(line: 1081, column: 21, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7222, file: !971, line: 1081, column: 21)
!7291 = !DILocation(line: 1081, column: 21, scope: !7222)
!7292 = !DILocation(line: 1082, column: 51, scope: !7290)
!7293 = !DILocation(line: 1082, column: 34, scope: !7290)
!7294 = !DILocation(line: 1082, column: 42, scope: !7290)
!7295 = !DILocation(line: 1082, column: 47, scope: !7290)
!7296 = !DILocation(line: 1082, column: 37, scope: !7290)
!7297 = !DILocation(line: 1082, column: 21, scope: !7290)
!7298 = !DILocation(line: 1082, column: 24, scope: !7290)
!7299 = !DILocation(line: 1082, column: 31, scope: !7290)
!7300 = !DILocation(line: 1083, column: 13, scope: !7222)
!7301 = !DILocation(line: 1065, column: 69, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !7218, file: !971, discriminator: 2)
!7303 = !DILocation(line: 1065, column: 13, scope: !7302)
!7304 = distinct !{!7304, !7305}
!7305 = !DILocation(line: 1065, column: 13, scope: !7204)
!7306 = !DILocation(line: 1084, column: 9, scope: !7204)
!7307 = !DILocation(line: 1062, column: 59, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7200, file: !971, discriminator: 2)
!7309 = !DILocation(line: 1062, column: 9, scope: !7308)
!7310 = distinct !{!7310, !7311}
!7311 = !DILocation(line: 1062, column: 9, scope: !7108)
!7312 = !DILocation(line: 1086, column: 13, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7108, file: !971, line: 1086, column: 13)
!7314 = !DILocation(line: 1086, column: 15, scope: !7313)
!7315 = !DILocation(line: 1086, column: 13, scope: !7108)
!7316 = !DILocation(line: 1087, column: 24, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !971, line: 1086, column: 20)
!7318 = !DILocation(line: 1087, column: 27, scope: !7317)
!7319 = !DILocation(line: 1087, column: 36, scope: !7317)
!7320 = !DILocation(line: 1087, column: 45, scope: !7317)
!7321 = !DILocation(line: 1087, column: 48, scope: !7317)
!7322 = !DILocation(line: 1087, column: 42, scope: !7317)
!7323 = !DILocation(line: 1087, column: 13, scope: !7317)
!7324 = !DILocation(line: 1087, column: 16, scope: !7317)
!7325 = !DILocation(line: 1087, column: 22, scope: !7317)
!7326 = !DILocation(line: 1088, column: 24, scope: !7317)
!7327 = !DILocation(line: 1088, column: 27, scope: !7317)
!7328 = !DILocation(line: 1088, column: 36, scope: !7317)
!7329 = !DILocation(line: 1088, column: 45, scope: !7317)
!7330 = !DILocation(line: 1088, column: 48, scope: !7317)
!7331 = !DILocation(line: 1088, column: 42, scope: !7317)
!7332 = !DILocation(line: 1088, column: 13, scope: !7317)
!7333 = !DILocation(line: 1088, column: 16, scope: !7317)
!7334 = !DILocation(line: 1088, column: 22, scope: !7317)
!7335 = !DILocation(line: 1089, column: 24, scope: !7317)
!7336 = !DILocation(line: 1089, column: 27, scope: !7317)
!7337 = !DILocation(line: 1089, column: 36, scope: !7317)
!7338 = !DILocation(line: 1089, column: 45, scope: !7317)
!7339 = !DILocation(line: 1089, column: 48, scope: !7317)
!7340 = !DILocation(line: 1089, column: 42, scope: !7317)
!7341 = !DILocation(line: 1089, column: 13, scope: !7317)
!7342 = !DILocation(line: 1089, column: 16, scope: !7317)
!7343 = !DILocation(line: 1089, column: 22, scope: !7317)
!7344 = !DILocation(line: 1090, column: 24, scope: !7317)
!7345 = !DILocation(line: 1090, column: 27, scope: !7317)
!7346 = !DILocation(line: 1090, column: 36, scope: !7317)
!7347 = !DILocation(line: 1090, column: 45, scope: !7317)
!7348 = !DILocation(line: 1090, column: 48, scope: !7317)
!7349 = !DILocation(line: 1090, column: 42, scope: !7317)
!7350 = !DILocation(line: 1090, column: 13, scope: !7317)
!7351 = !DILocation(line: 1090, column: 16, scope: !7317)
!7352 = !DILocation(line: 1090, column: 22, scope: !7317)
!7353 = !DILocation(line: 1091, column: 9, scope: !7317)
!7354 = !DILocation(line: 1093, column: 23, scope: !7108)
!7355 = !DILocation(line: 1093, column: 26, scope: !7108)
!7356 = !DILocation(line: 1093, column: 34, scope: !7108)
!7357 = !DILocation(line: 1093, column: 37, scope: !7108)
!7358 = !DILocation(line: 1093, column: 32, scope: !7108)
!7359 = !DILocation(line: 1093, column: 43, scope: !7108)
!7360 = !DILocation(line: 1093, column: 22, scope: !7108)
!7361 = !DILocation(line: 1093, column: 9, scope: !7108)
!7362 = !DILocation(line: 1093, column: 12, scope: !7108)
!7363 = !DILocation(line: 1093, column: 20, scope: !7108)
!7364 = !DILocation(line: 1094, column: 23, scope: !7108)
!7365 = !DILocation(line: 1094, column: 26, scope: !7108)
!7366 = !DILocation(line: 1094, column: 34, scope: !7108)
!7367 = !DILocation(line: 1094, column: 37, scope: !7108)
!7368 = !DILocation(line: 1094, column: 32, scope: !7108)
!7369 = !DILocation(line: 1094, column: 43, scope: !7108)
!7370 = !DILocation(line: 1094, column: 22, scope: !7108)
!7371 = !DILocation(line: 1094, column: 9, scope: !7108)
!7372 = !DILocation(line: 1094, column: 12, scope: !7108)
!7373 = !DILocation(line: 1094, column: 20, scope: !7108)
!7374 = !DILocation(line: 1095, column: 5, scope: !7108)
!7375 = !DILocation(line: 1053, column: 25, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !7104, file: !971, discriminator: 2)
!7377 = !DILocation(line: 1053, column: 5, scope: !7376)
!7378 = distinct !{!7378, !7379}
!7379 = !DILocation(line: 1053, column: 5, scope: !7086)
!7380 = !DILocation(line: 1096, column: 1, scope: !7086)
!7381 = distinct !DISubprogram(name: "get_bits", scope: !1115, file: !1115, line: 381, type: !5784, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7382 = !DILocation(line: 66, column: 98, scope: !3039, inlinedAt: !7383)
!7383 = distinct !DILocation(line: 401, column: 16, scope: !7381)
!7384 = !DILocalVariable(name: "s", arg: 1, scope: !7381, file: !1115, line: 381, type: !4348)
!7385 = !DILocation(line: 381, column: 52, scope: !7381)
!7386 = !DILocalVariable(name: "n", arg: 2, scope: !7381, file: !1115, line: 381, type: !979)
!7387 = !DILocation(line: 381, column: 59, scope: !7381)
!7388 = !DILocalVariable(name: "tmp", scope: !7381, file: !1115, line: 383, type: !979)
!7389 = !DILocation(line: 383, column: 18, scope: !7381)
!7390 = !DILocalVariable(name: "re_index", scope: !7381, file: !1115, line: 399, type: !980)
!7391 = !DILocation(line: 399, column: 18, scope: !7381)
!7392 = !DILocation(line: 399, column: 30, scope: !7381)
!7393 = !DILocation(line: 399, column: 34, scope: !7381)
!7394 = !DILocalVariable(name: "re_cache", scope: !7381, file: !1115, line: 399, type: !980)
!7395 = !DILocation(line: 399, column: 78, scope: !7381)
!7396 = !DILocalVariable(name: "re_size_plus8", scope: !7381, file: !1115, line: 399, type: !980)
!7397 = !DILocation(line: 399, column: 101, scope: !7381)
!7398 = !DILocation(line: 399, column: 118, scope: !7381)
!7399 = !DILocation(line: 399, column: 122, scope: !7381)
!7400 = !DILocation(line: 401, column: 60, scope: !7381)
!7401 = !DILocation(line: 401, column: 64, scope: !7381)
!7402 = !DILocation(line: 401, column: 74, scope: !7381)
!7403 = !DILocation(line: 401, column: 83, scope: !7381)
!7404 = !DILocation(line: 401, column: 71, scope: !7381)
!7405 = !DILocation(line: 401, column: 92, scope: !7381)
!7406 = !DILocation(line: 401, column: 16, scope: !7381)
!7407 = !DILocation(line: 68, column: 16, scope: !3039, inlinedAt: !7383)
!7408 = !DILocation(line: 68, column: 19, scope: !3039, inlinedAt: !7383)
!7409 = !DILocation(line: 68, column: 24, scope: !3039, inlinedAt: !7383)
!7410 = !DILocation(line: 68, column: 38, scope: !3039, inlinedAt: !7383)
!7411 = !DILocation(line: 68, column: 41, scope: !3039, inlinedAt: !7383)
!7412 = !DILocation(line: 68, column: 46, scope: !3039, inlinedAt: !7383)
!7413 = !DILocation(line: 68, column: 34, scope: !3039, inlinedAt: !7383)
!7414 = !DILocation(line: 68, column: 57, scope: !3039, inlinedAt: !7383)
!7415 = !DILocation(line: 68, column: 69, scope: !3039, inlinedAt: !7383)
!7416 = !DILocation(line: 68, column: 72, scope: !3039, inlinedAt: !7383)
!7417 = !DILocation(line: 68, column: 79, scope: !3039, inlinedAt: !7383)
!7418 = !DILocation(line: 68, column: 84, scope: !3039, inlinedAt: !7383)
!7419 = !DILocation(line: 68, column: 99, scope: !3039, inlinedAt: !7383)
!7420 = !DILocation(line: 68, column: 102, scope: !3039, inlinedAt: !7383)
!7421 = !DILocation(line: 68, column: 109, scope: !3039, inlinedAt: !7383)
!7422 = !DILocation(line: 68, column: 114, scope: !3039, inlinedAt: !7383)
!7423 = !DILocation(line: 68, column: 94, scope: !3039, inlinedAt: !7383)
!7424 = !DILocation(line: 68, column: 63, scope: !3039, inlinedAt: !7383)
!7425 = !DILocation(line: 401, column: 100, scope: !7381)
!7426 = !DILocation(line: 401, column: 109, scope: !7381)
!7427 = !DILocation(line: 401, column: 96, scope: !7381)
!7428 = !DILocation(line: 401, column: 14, scope: !7381)
!7429 = !DILocation(line: 402, column: 21, scope: !7381)
!7430 = !DILocation(line: 402, column: 31, scope: !7381)
!7431 = !DILocation(line: 402, column: 11, scope: !7381)
!7432 = !DILocation(line: 402, column: 9, scope: !7381)
!7433 = !DILocation(line: 403, column: 18, scope: !7381)
!7434 = !DILocation(line: 403, column: 36, scope: !7381)
!7435 = !DILocation(line: 403, column: 48, scope: !7381)
!7436 = !DILocation(line: 403, column: 45, scope: !7381)
!7437 = !DILocation(line: 403, column: 33, scope: !7381)
!7438 = !DILocation(line: 403, column: 17, scope: !7381)
!7439 = !DILocation(line: 403, column: 55, scope: !7440)
!7440 = !DILexicalBlockFile(scope: !7381, file: !1115, discriminator: 1)
!7441 = !DILocation(line: 403, column: 67, scope: !7440)
!7442 = !DILocation(line: 403, column: 64, scope: !7440)
!7443 = !DILocation(line: 403, column: 17, scope: !7440)
!7444 = !DILocation(line: 403, column: 74, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7381, file: !1115, discriminator: 2)
!7446 = !DILocation(line: 403, column: 17, scope: !7445)
!7447 = !DILocation(line: 403, column: 17, scope: !7448)
!7448 = !DILexicalBlockFile(scope: !7381, file: !1115, discriminator: 3)
!7449 = !DILocation(line: 403, column: 14, scope: !7448)
!7450 = !DILocation(line: 404, column: 18, scope: !7381)
!7451 = !DILocation(line: 404, column: 6, scope: !7381)
!7452 = !DILocation(line: 404, column: 10, scope: !7381)
!7453 = !DILocation(line: 404, column: 16, scope: !7381)
!7454 = !DILocation(line: 406, column: 12, scope: !7381)
!7455 = !DILocation(line: 406, column: 5, scope: !7381)
!7456 = distinct !DISubprogram(name: "NEG_USR32", scope: !7457, file: !7457, line: 124, type: !7458, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7457 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!1098, !1098, !1078}
!7460 = !DILocalVariable(name: "a", arg: 1, scope: !7456, file: !7457, line: 124, type: !1098)
!7461 = !DILocation(line: 124, column: 43, scope: !7456)
!7462 = !DILocalVariable(name: "s", arg: 2, scope: !7456, file: !7457, line: 124, type: !1078)
!7463 = !DILocation(line: 124, column: 53, scope: !7456)
!7464 = !DILocation(line: 125, column: 5, scope: !7456)
!7465 = !DILocation(line: 127, column: 29, scope: !7456)
!7466 = !DILocation(line: 127, column: 28, scope: !7456)
!7467 = !DILocation(line: 127, column: 18, scope: !7456)
!7468 = !{i32 209039, i32 209053}
!7469 = !DILocation(line: 129, column: 12, scope: !7456)
!7470 = !DILocation(line: 129, column: 5, scope: !7456)
!7471 = distinct !DISubprogram(name: "get_interleaved_ue_golomb", scope: !5821, file: !5821, line: 141, type: !7472, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{!980, !4348}
!7474 = !DILocation(line: 66, column: 98, scope: !3039, inlinedAt: !7475)
!7475 = distinct !DILocation(line: 196, column: 24, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !5821, line: 185, column: 12)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !5821, line: 182, column: 12)
!7478 = distinct !DILexicalBlock(scope: !7471, file: !5821, line: 176, column: 9)
!7479 = !DILocation(line: 66, column: 98, scope: !3039, inlinedAt: !7480)
!7480 = distinct !DILocation(line: 173, column: 16, scope: !7471)
!7481 = !DILocalVariable(name: "gb", arg: 1, scope: !7471, file: !5821, line: 141, type: !4348)
!7482 = !DILocation(line: 141, column: 65, scope: !7471)
!7483 = !DILocalVariable(name: "buf", scope: !7471, file: !5821, line: 143, type: !1098)
!7484 = !DILocation(line: 143, column: 14, scope: !7471)
!7485 = !DILocalVariable(name: "re_index", scope: !7471, file: !5821, line: 172, type: !980)
!7486 = !DILocation(line: 172, column: 18, scope: !7471)
!7487 = !DILocation(line: 172, column: 30, scope: !7471)
!7488 = !DILocation(line: 172, column: 35, scope: !7471)
!7489 = !DILocalVariable(name: "re_cache", scope: !7471, file: !5821, line: 172, type: !980)
!7490 = !DILocation(line: 172, column: 79, scope: !7471)
!7491 = !DILocalVariable(name: "re_size_plus8", scope: !7471, file: !5821, line: 172, type: !980)
!7492 = !DILocation(line: 172, column: 102, scope: !7471)
!7493 = !DILocation(line: 172, column: 119, scope: !7471)
!7494 = !DILocation(line: 172, column: 124, scope: !7471)
!7495 = !DILocation(line: 173, column: 60, scope: !7471)
!7496 = !DILocation(line: 173, column: 65, scope: !7471)
!7497 = !DILocation(line: 173, column: 75, scope: !7471)
!7498 = !DILocation(line: 173, column: 84, scope: !7471)
!7499 = !DILocation(line: 173, column: 72, scope: !7471)
!7500 = !DILocation(line: 173, column: 93, scope: !7471)
!7501 = !DILocation(line: 173, column: 16, scope: !7471)
!7502 = !DILocation(line: 68, column: 16, scope: !3039, inlinedAt: !7480)
!7503 = !DILocation(line: 68, column: 19, scope: !3039, inlinedAt: !7480)
!7504 = !DILocation(line: 68, column: 24, scope: !3039, inlinedAt: !7480)
!7505 = !DILocation(line: 68, column: 38, scope: !3039, inlinedAt: !7480)
!7506 = !DILocation(line: 68, column: 41, scope: !3039, inlinedAt: !7480)
!7507 = !DILocation(line: 68, column: 46, scope: !3039, inlinedAt: !7480)
!7508 = !DILocation(line: 68, column: 34, scope: !3039, inlinedAt: !7480)
!7509 = !DILocation(line: 68, column: 57, scope: !3039, inlinedAt: !7480)
!7510 = !DILocation(line: 68, column: 69, scope: !3039, inlinedAt: !7480)
!7511 = !DILocation(line: 68, column: 72, scope: !3039, inlinedAt: !7480)
!7512 = !DILocation(line: 68, column: 79, scope: !3039, inlinedAt: !7480)
!7513 = !DILocation(line: 68, column: 84, scope: !3039, inlinedAt: !7480)
!7514 = !DILocation(line: 68, column: 99, scope: !3039, inlinedAt: !7480)
!7515 = !DILocation(line: 68, column: 102, scope: !3039, inlinedAt: !7480)
!7516 = !DILocation(line: 68, column: 109, scope: !3039, inlinedAt: !7480)
!7517 = !DILocation(line: 68, column: 114, scope: !3039, inlinedAt: !7480)
!7518 = !DILocation(line: 68, column: 94, scope: !3039, inlinedAt: !7480)
!7519 = !DILocation(line: 68, column: 63, scope: !3039, inlinedAt: !7480)
!7520 = !DILocation(line: 173, column: 101, scope: !7471)
!7521 = !DILocation(line: 173, column: 110, scope: !7471)
!7522 = !DILocation(line: 173, column: 97, scope: !7471)
!7523 = !DILocation(line: 173, column: 14, scope: !7471)
!7524 = !DILocation(line: 174, column: 23, scope: !7471)
!7525 = !DILocation(line: 174, column: 9, scope: !7471)
!7526 = !DILocation(line: 176, column: 9, scope: !7478)
!7527 = !DILocation(line: 176, column: 13, scope: !7478)
!7528 = !DILocation(line: 176, column: 9, scope: !7471)
!7529 = !DILocation(line: 177, column: 13, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7478, file: !5821, line: 176, column: 27)
!7531 = !DILocation(line: 178, column: 22, scope: !7530)
!7532 = !DILocation(line: 178, column: 40, scope: !7530)
!7533 = !DILocation(line: 178, column: 82, scope: !7530)
!7534 = !DILocation(line: 178, column: 52, scope: !7530)
!7535 = !DILocation(line: 178, column: 51, scope: !7530)
!7536 = !DILocation(line: 178, column: 49, scope: !7530)
!7537 = !DILocation(line: 178, column: 37, scope: !7530)
!7538 = !DILocation(line: 178, column: 21, scope: !7530)
!7539 = !DILocation(line: 178, column: 92, scope: !7540)
!7540 = !DILexicalBlockFile(scope: !7530, file: !5821, discriminator: 1)
!7541 = !DILocation(line: 178, column: 134, scope: !7540)
!7542 = !DILocation(line: 178, column: 104, scope: !7540)
!7543 = !DILocation(line: 178, column: 103, scope: !7540)
!7544 = !DILocation(line: 178, column: 101, scope: !7540)
!7545 = !DILocation(line: 178, column: 21, scope: !7540)
!7546 = !DILocation(line: 178, column: 144, scope: !7547)
!7547 = !DILexicalBlockFile(scope: !7530, file: !5821, discriminator: 2)
!7548 = !DILocation(line: 178, column: 21, scope: !7547)
!7549 = !DILocation(line: 178, column: 21, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !7530, file: !5821, discriminator: 3)
!7551 = !DILocation(line: 178, column: 18, scope: !7550)
!7552 = !DILocation(line: 179, column: 23, scope: !7530)
!7553 = !DILocation(line: 179, column: 10, scope: !7530)
!7554 = !DILocation(line: 179, column: 15, scope: !7530)
!7555 = !DILocation(line: 179, column: 21, scope: !7530)
!7556 = !DILocation(line: 181, column: 50, scope: !7530)
!7557 = !DILocation(line: 181, column: 16, scope: !7530)
!7558 = !DILocation(line: 181, column: 9, scope: !7530)
!7559 = !DILocalVariable(name: "ret", scope: !7477, file: !5821, line: 183, type: !980)
!7560 = !DILocation(line: 183, column: 18, scope: !7477)
!7561 = !DILocation(line: 185, column: 9, scope: !7477)
!7562 = distinct !{!7562, !7561}
!7563 = !DILocation(line: 186, column: 17, scope: !7476)
!7564 = !DILocation(line: 187, column: 26, scope: !7476)
!7565 = !DILocation(line: 187, column: 44, scope: !7476)
!7566 = !DILocation(line: 187, column: 88, scope: !7476)
!7567 = !DILocation(line: 187, column: 58, scope: !7476)
!7568 = !DILocation(line: 187, column: 57, scope: !7476)
!7569 = !DILocation(line: 187, column: 94, scope: !7476)
!7570 = !DILocation(line: 187, column: 57, scope: !7571)
!7571 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 1)
!7572 = !DILocation(line: 187, column: 139, scope: !7573)
!7573 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 2)
!7574 = !DILocation(line: 187, column: 109, scope: !7573)
!7575 = !DILocation(line: 187, column: 108, scope: !7573)
!7576 = !DILocation(line: 187, column: 57, scope: !7573)
!7577 = !DILocation(line: 187, column: 57, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 3)
!7579 = !DILocation(line: 187, column: 53, scope: !7578)
!7580 = !DILocation(line: 187, column: 41, scope: !7578)
!7581 = !DILocation(line: 187, column: 25, scope: !7578)
!7582 = !DILocation(line: 187, column: 151, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 4)
!7584 = !DILocation(line: 187, column: 195, scope: !7583)
!7585 = !DILocation(line: 187, column: 165, scope: !7583)
!7586 = !DILocation(line: 187, column: 164, scope: !7583)
!7587 = !DILocation(line: 187, column: 201, scope: !7583)
!7588 = !DILocation(line: 187, column: 164, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 5)
!7590 = !DILocation(line: 187, column: 246, scope: !7591)
!7591 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 6)
!7592 = !DILocation(line: 187, column: 216, scope: !7591)
!7593 = !DILocation(line: 187, column: 215, scope: !7591)
!7594 = !DILocation(line: 187, column: 164, scope: !7591)
!7595 = !DILocation(line: 187, column: 164, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 7)
!7597 = !DILocation(line: 187, column: 160, scope: !7596)
!7598 = !DILocation(line: 187, column: 25, scope: !7596)
!7599 = !DILocation(line: 187, column: 258, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 8)
!7601 = !DILocation(line: 187, column: 25, scope: !7600)
!7602 = !DILocation(line: 187, column: 25, scope: !7603)
!7603 = !DILexicalBlockFile(scope: !7476, file: !5821, discriminator: 9)
!7604 = !DILocation(line: 187, column: 22, scope: !7603)
!7605 = !DILocation(line: 190, column: 47, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7476, file: !5821, line: 190, column: 17)
!7607 = !DILocation(line: 190, column: 17, scope: !7606)
!7608 = !DILocation(line: 190, column: 52, scope: !7606)
!7609 = !DILocation(line: 190, column: 17, scope: !7476)
!7610 = !DILocation(line: 191, column: 56, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7606, file: !5821, line: 190, column: 58)
!7612 = !DILocation(line: 191, column: 26, scope: !7611)
!7613 = !DILocation(line: 191, column: 61, scope: !7611)
!7614 = !DILocation(line: 191, column: 66, scope: !7611)
!7615 = !DILocation(line: 191, column: 21, scope: !7611)
!7616 = !DILocation(line: 192, column: 61, scope: !7611)
!7617 = !DILocation(line: 192, column: 24, scope: !7611)
!7618 = !DILocation(line: 192, column: 21, scope: !7611)
!7619 = !DILocation(line: 193, column: 17, scope: !7611)
!7620 = !DILocation(line: 195, column: 20, scope: !7476)
!7621 = !DILocation(line: 195, column: 24, scope: !7476)
!7622 = !DILocation(line: 195, column: 69, scope: !7476)
!7623 = !DILocation(line: 195, column: 32, scope: !7476)
!7624 = !DILocation(line: 195, column: 30, scope: !7476)
!7625 = !DILocation(line: 195, column: 17, scope: !7476)
!7626 = !DILocation(line: 196, column: 68, scope: !7476)
!7627 = !DILocation(line: 196, column: 73, scope: !7476)
!7628 = !DILocation(line: 196, column: 83, scope: !7476)
!7629 = !DILocation(line: 196, column: 92, scope: !7476)
!7630 = !DILocation(line: 196, column: 80, scope: !7476)
!7631 = !DILocation(line: 196, column: 101, scope: !7476)
!7632 = !DILocation(line: 196, column: 24, scope: !7476)
!7633 = !DILocation(line: 68, column: 16, scope: !3039, inlinedAt: !7475)
!7634 = !DILocation(line: 68, column: 19, scope: !3039, inlinedAt: !7475)
!7635 = !DILocation(line: 68, column: 24, scope: !3039, inlinedAt: !7475)
!7636 = !DILocation(line: 68, column: 38, scope: !3039, inlinedAt: !7475)
!7637 = !DILocation(line: 68, column: 41, scope: !3039, inlinedAt: !7475)
!7638 = !DILocation(line: 68, column: 46, scope: !3039, inlinedAt: !7475)
!7639 = !DILocation(line: 68, column: 34, scope: !3039, inlinedAt: !7475)
!7640 = !DILocation(line: 68, column: 57, scope: !3039, inlinedAt: !7475)
!7641 = !DILocation(line: 68, column: 69, scope: !3039, inlinedAt: !7475)
!7642 = !DILocation(line: 68, column: 72, scope: !3039, inlinedAt: !7475)
!7643 = !DILocation(line: 68, column: 79, scope: !3039, inlinedAt: !7475)
!7644 = !DILocation(line: 68, column: 84, scope: !3039, inlinedAt: !7475)
!7645 = !DILocation(line: 68, column: 99, scope: !3039, inlinedAt: !7475)
!7646 = !DILocation(line: 68, column: 102, scope: !3039, inlinedAt: !7475)
!7647 = !DILocation(line: 68, column: 109, scope: !3039, inlinedAt: !7475)
!7648 = !DILocation(line: 68, column: 114, scope: !3039, inlinedAt: !7475)
!7649 = !DILocation(line: 68, column: 94, scope: !3039, inlinedAt: !7475)
!7650 = !DILocation(line: 68, column: 63, scope: !3039, inlinedAt: !7475)
!7651 = !DILocation(line: 196, column: 109, scope: !7476)
!7652 = !DILocation(line: 196, column: 118, scope: !7476)
!7653 = !DILocation(line: 196, column: 105, scope: !7476)
!7654 = !DILocation(line: 196, column: 22, scope: !7476)
!7655 = !DILocation(line: 197, column: 31, scope: !7476)
!7656 = !DILocation(line: 197, column: 17, scope: !7476)
!7657 = !DILocation(line: 198, column: 9, scope: !7476)
!7658 = !DILocation(line: 198, column: 18, scope: !7659)
!7659 = !DILexicalBlockFile(scope: !7477, file: !5821, discriminator: 1)
!7660 = !DILocation(line: 198, column: 21, scope: !7659)
!7661 = !DILocation(line: 198, column: 33, scope: !7659)
!7662 = !DILocation(line: 198, column: 36, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !7477, file: !5821, discriminator: 2)
!7664 = !DILocation(line: 198, column: 47, scope: !7663)
!7665 = !DILocation(line: 198, column: 45, scope: !7663)
!7666 = !DILocation(line: 198, column: 9, scope: !7578)
!7667 = !DILocation(line: 200, column: 23, scope: !7477)
!7668 = !DILocation(line: 200, column: 10, scope: !7477)
!7669 = !DILocation(line: 200, column: 15, scope: !7477)
!7670 = !DILocation(line: 200, column: 21, scope: !7477)
!7671 = !DILocation(line: 201, column: 16, scope: !7477)
!7672 = !DILocation(line: 201, column: 20, scope: !7477)
!7673 = !DILocation(line: 201, column: 9, scope: !7477)
!7674 = !DILocation(line: 204, column: 1, scope: !7471)
!7675 = distinct !DISubprogram(name: "get_bits1", scope: !1115, file: !1115, line: 487, type: !7472, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7676 = !DILocalVariable(name: "s", arg: 1, scope: !7675, file: !1115, line: 487, type: !4348)
!7677 = !DILocation(line: 487, column: 53, scope: !7675)
!7678 = !DILocalVariable(name: "index", scope: !7675, file: !1115, line: 499, type: !980)
!7679 = !DILocation(line: 499, column: 18, scope: !7675)
!7680 = !DILocation(line: 499, column: 26, scope: !7675)
!7681 = !DILocation(line: 499, column: 29, scope: !7675)
!7682 = !DILocalVariable(name: "result", scope: !7675, file: !1115, line: 500, type: !988)
!7683 = !DILocation(line: 500, column: 13, scope: !7675)
!7684 = !DILocation(line: 500, column: 32, scope: !7675)
!7685 = !DILocation(line: 500, column: 38, scope: !7675)
!7686 = !DILocation(line: 500, column: 22, scope: !7675)
!7687 = !DILocation(line: 500, column: 25, scope: !7675)
!7688 = !DILocation(line: 505, column: 16, scope: !7675)
!7689 = !DILocation(line: 505, column: 22, scope: !7675)
!7690 = !DILocation(line: 505, column: 12, scope: !7675)
!7691 = !DILocation(line: 506, column: 12, scope: !7675)
!7692 = !DILocation(line: 509, column: 9, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7675, file: !1115, line: 509, column: 9)
!7694 = !DILocation(line: 509, column: 12, scope: !7693)
!7695 = !DILocation(line: 509, column: 20, scope: !7693)
!7696 = !DILocation(line: 509, column: 23, scope: !7693)
!7697 = !DILocation(line: 509, column: 18, scope: !7693)
!7698 = !DILocation(line: 509, column: 9, scope: !7675)
!7699 = !DILocation(line: 511, column: 14, scope: !7693)
!7700 = !DILocation(line: 511, column: 9, scope: !7693)
!7701 = !DILocation(line: 512, column: 16, scope: !7675)
!7702 = !DILocation(line: 512, column: 5, scope: !7675)
!7703 = !DILocation(line: 512, column: 8, scope: !7675)
!7704 = !DILocation(line: 512, column: 14, scope: !7675)
!7705 = !DILocation(line: 514, column: 12, scope: !7675)
!7706 = !DILocation(line: 514, column: 5, scope: !7675)
!7707 = distinct !DISubprogram(name: "align_get_bits", scope: !1115, file: !1115, line: 658, type: !7708, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!1119, !4348}
!7710 = !DILocalVariable(name: "s", arg: 1, scope: !7707, file: !1115, line: 658, type: !4348)
!7711 = !DILocation(line: 658, column: 60, scope: !7707)
!7712 = !DILocalVariable(name: "n", scope: !7707, file: !1115, line: 660, type: !979)
!7713 = !DILocation(line: 660, column: 9, scope: !7707)
!7714 = !DILocation(line: 660, column: 29, scope: !7707)
!7715 = !DILocation(line: 660, column: 14, scope: !7707)
!7716 = !DILocation(line: 660, column: 13, scope: !7707)
!7717 = !DILocation(line: 660, column: 32, scope: !7707)
!7718 = !DILocation(line: 661, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7707, file: !1115, line: 661, column: 9)
!7720 = !DILocation(line: 661, column: 9, scope: !7707)
!7721 = !DILocation(line: 662, column: 19, scope: !7719)
!7722 = !DILocation(line: 662, column: 22, scope: !7719)
!7723 = !DILocation(line: 662, column: 9, scope: !7719)
!7724 = !DILocation(line: 663, column: 12, scope: !7707)
!7725 = !DILocation(line: 663, column: 15, scope: !7707)
!7726 = !DILocation(line: 663, column: 25, scope: !7707)
!7727 = !DILocation(line: 663, column: 28, scope: !7707)
!7728 = !DILocation(line: 663, column: 34, scope: !7707)
!7729 = !DILocation(line: 663, column: 22, scope: !7707)
!7730 = !DILocation(line: 663, column: 5, scope: !7707)
!7731 = distinct !DISubprogram(name: "get_bits_count", scope: !1115, file: !1115, line: 219, type: !7732, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!979, !7734}
!7734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7735, size: 64, align: 64)
!7735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!7736 = !DILocalVariable(name: "s", arg: 1, scope: !7731, file: !1115, line: 219, type: !7734)
!7737 = !DILocation(line: 219, column: 55, scope: !7731)
!7738 = !DILocation(line: 224, column: 12, scope: !7731)
!7739 = !DILocation(line: 224, column: 15, scope: !7731)
!7740 = !DILocation(line: 224, column: 5, scope: !7731)
!7741 = distinct !DISubprogram(name: "skip_bits", scope: !1115, file: !1115, line: 460, type: !7742, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{null, !4348, !979}
!7744 = !DILocalVariable(name: "s", arg: 1, scope: !7741, file: !1115, line: 460, type: !4348)
!7745 = !DILocation(line: 460, column: 45, scope: !7741)
!7746 = !DILocalVariable(name: "n", arg: 2, scope: !7741, file: !1115, line: 460, type: !979)
!7747 = !DILocation(line: 460, column: 52, scope: !7741)
!7748 = !DILocalVariable(name: "re_index", scope: !7741, file: !1115, line: 481, type: !980)
!7749 = !DILocation(line: 481, column: 18, scope: !7741)
!7750 = !DILocation(line: 481, column: 30, scope: !7741)
!7751 = !DILocation(line: 481, column: 34, scope: !7741)
!7752 = !DILocalVariable(name: "re_cache", scope: !7741, file: !1115, line: 481, type: !980)
!7753 = !DILocation(line: 481, column: 78, scope: !7741)
!7754 = !DILocalVariable(name: "re_size_plus8", scope: !7741, file: !1115, line: 481, type: !980)
!7755 = !DILocation(line: 481, column: 101, scope: !7741)
!7756 = !DILocation(line: 481, column: 118, scope: !7741)
!7757 = !DILocation(line: 481, column: 122, scope: !7741)
!7758 = !DILocation(line: 482, column: 18, scope: !7741)
!7759 = !DILocation(line: 482, column: 36, scope: !7741)
!7760 = !DILocation(line: 482, column: 48, scope: !7741)
!7761 = !DILocation(line: 482, column: 45, scope: !7741)
!7762 = !DILocation(line: 482, column: 33, scope: !7741)
!7763 = !DILocation(line: 482, column: 17, scope: !7741)
!7764 = !DILocation(line: 482, column: 55, scope: !7765)
!7765 = !DILexicalBlockFile(scope: !7741, file: !1115, discriminator: 1)
!7766 = !DILocation(line: 482, column: 67, scope: !7765)
!7767 = !DILocation(line: 482, column: 64, scope: !7765)
!7768 = !DILocation(line: 482, column: 17, scope: !7765)
!7769 = !DILocation(line: 482, column: 74, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !7741, file: !1115, discriminator: 2)
!7771 = !DILocation(line: 482, column: 17, scope: !7770)
!7772 = !DILocation(line: 482, column: 17, scope: !7773)
!7773 = !DILexicalBlockFile(scope: !7741, file: !1115, discriminator: 3)
!7774 = !DILocation(line: 482, column: 14, scope: !7773)
!7775 = !DILocation(line: 483, column: 18, scope: !7741)
!7776 = !DILocation(line: 483, column: 6, scope: !7741)
!7777 = !DILocation(line: 483, column: 10, scope: !7741)
!7778 = !DILocation(line: 483, column: 16, scope: !7741)
!7779 = !DILocation(line: 485, column: 1, scope: !7741)
!7780 = distinct !DISubprogram(name: "dirac_get_arith_uint", scope: !945, file: !945, line: 175, type: !7781, isLocal: true, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7781 = !DISubroutineType(types: !7782)
!7782 = !{!979, !7783, !979, !979}
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64, align: 64)
!7784 = !DILocalVariable(name: "c", arg: 1, scope: !7780, file: !945, line: 175, type: !7783)
!7785 = !DILocation(line: 175, column: 52, scope: !7780)
!7786 = !DILocalVariable(name: "follow_ctx", arg: 2, scope: !7780, file: !945, line: 175, type: !979)
!7787 = !DILocation(line: 175, column: 59, scope: !7780)
!7788 = !DILocalVariable(name: "data_ctx", arg: 3, scope: !7780, file: !945, line: 175, type: !979)
!7789 = !DILocation(line: 175, column: 75, scope: !7780)
!7790 = !DILocalVariable(name: "ret", scope: !7780, file: !945, line: 177, type: !979)
!7791 = !DILocation(line: 177, column: 9, scope: !7780)
!7792 = !DILocation(line: 178, column: 5, scope: !7780)
!7793 = !DILocation(line: 178, column: 33, scope: !7794)
!7794 = !DILexicalBlockFile(scope: !7780, file: !945, discriminator: 1)
!7795 = !DILocation(line: 178, column: 36, scope: !7794)
!7796 = !DILocation(line: 178, column: 13, scope: !7794)
!7797 = !DILocation(line: 178, column: 12, scope: !7794)
!7798 = !DILocation(line: 178, column: 5, scope: !7794)
!7799 = !DILocation(line: 179, column: 13, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !945, line: 179, column: 13)
!7801 = distinct !DILexicalBlock(scope: !7780, file: !945, line: 178, column: 49)
!7802 = !DILocation(line: 179, column: 17, scope: !7800)
!7803 = !DILocation(line: 179, column: 13, scope: !7801)
!7804 = !DILocation(line: 180, column: 13, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7800, file: !945, line: 179, column: 32)
!7806 = !DILocation(line: 181, column: 13, scope: !7805)
!7807 = !DILocation(line: 181, column: 16, scope: !7805)
!7808 = !DILocation(line: 181, column: 22, scope: !7805)
!7809 = !DILocation(line: 182, column: 13, scope: !7805)
!7810 = !DILocation(line: 184, column: 13, scope: !7801)
!7811 = !DILocation(line: 185, column: 36, scope: !7801)
!7812 = !DILocation(line: 185, column: 39, scope: !7801)
!7813 = !DILocation(line: 185, column: 16, scope: !7801)
!7814 = !DILocation(line: 185, column: 13, scope: !7801)
!7815 = !DILocation(line: 186, column: 40, scope: !7801)
!7816 = !DILocation(line: 186, column: 22, scope: !7801)
!7817 = !DILocation(line: 186, column: 20, scope: !7801)
!7818 = !DILocation(line: 178, column: 5, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !7780, file: !945, discriminator: 2)
!7820 = distinct !{!7820, !7792}
!7821 = !DILocation(line: 188, column: 12, scope: !7780)
!7822 = !DILocation(line: 188, column: 15, scope: !7780)
!7823 = !DILocation(line: 188, column: 5, scope: !7780)
!7824 = !DILocation(line: 189, column: 1, scope: !7780)
!7825 = !DILocalVariable(name: "sbsplit", arg: 1, scope: !2933, file: !971, line: 1325, type: !987)
!7826 = !DILocation(line: 1325, column: 41, scope: !2933)
!7827 = !DILocalVariable(name: "stride", arg: 2, scope: !2933, file: !971, line: 1325, type: !979)
!7828 = !DILocation(line: 1325, column: 54, scope: !2933)
!7829 = !DILocalVariable(name: "x", arg: 3, scope: !2933, file: !971, line: 1325, type: !979)
!7830 = !DILocation(line: 1325, column: 66, scope: !2933)
!7831 = !DILocalVariable(name: "y", arg: 4, scope: !2933, file: !971, line: 1325, type: !979)
!7832 = !DILocation(line: 1325, column: 73, scope: !2933)
!7833 = !DILocation(line: 1329, column: 11, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !2933, file: !971, line: 1329, column: 9)
!7835 = !DILocation(line: 1329, column: 13, scope: !7834)
!7836 = !DILocation(line: 1329, column: 12, scope: !7834)
!7837 = !DILocation(line: 1329, column: 9, scope: !2933)
!7838 = !DILocation(line: 1330, column: 9, scope: !7834)
!7839 = !DILocation(line: 1331, column: 15, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7834, file: !971, line: 1331, column: 14)
!7841 = !DILocation(line: 1331, column: 14, scope: !7834)
!7842 = !DILocation(line: 1332, column: 16, scope: !7840)
!7843 = !DILocation(line: 1332, column: 9, scope: !7840)
!7844 = !DILocation(line: 1333, column: 15, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !971, line: 1333, column: 14)
!7846 = !DILocation(line: 1333, column: 14, scope: !7840)
!7847 = !DILocation(line: 1334, column: 25, scope: !7845)
!7848 = !DILocation(line: 1334, column: 24, scope: !7845)
!7849 = !DILocation(line: 1334, column: 16, scope: !7845)
!7850 = !DILocation(line: 1334, column: 9, scope: !7845)
!7851 = !DILocation(line: 1336, column: 21, scope: !2933)
!7852 = !DILocation(line: 1336, column: 44, scope: !2933)
!7853 = !DILocation(line: 1336, column: 43, scope: !2933)
!7854 = !DILocation(line: 1336, column: 35, scope: !2933)
!7855 = !DILocation(line: 1336, column: 33, scope: !2933)
!7856 = !DILocation(line: 1336, column: 63, scope: !2933)
!7857 = !DILocation(line: 1336, column: 62, scope: !2933)
!7858 = !DILocation(line: 1336, column: 69, scope: !2933)
!7859 = !DILocation(line: 1336, column: 54, scope: !2933)
!7860 = !DILocation(line: 1336, column: 52, scope: !2933)
!7861 = !DILocation(line: 1336, column: 12, scope: !2933)
!7862 = !DILocation(line: 1336, column: 5, scope: !2933)
!7863 = !DILocation(line: 1337, column: 1, scope: !2933)
!7864 = distinct !DISubprogram(name: "decode_block_params", scope: !971, file: !971, line: 1440, type: !7865, isLocal: true, isDefinition: true, scopeLine: 1442, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !2670, !7783, !2880, !979, !979, !979}
!7867 = !DILocalVariable(name: "s", arg: 1, scope: !7864, file: !971, line: 1440, type: !2670)
!7868 = !DILocation(line: 1440, column: 47, scope: !7864)
!7869 = !DILocalVariable(name: "arith", arg: 2, scope: !7864, file: !971, line: 1440, type: !7783)
!7870 = !DILocation(line: 1440, column: 61, scope: !7864)
!7871 = !DILocalVariable(name: "block", arg: 3, scope: !7864, file: !971, line: 1440, type: !2880)
!7872 = !DILocation(line: 1440, column: 83, scope: !7864)
!7873 = !DILocalVariable(name: "stride", arg: 4, scope: !7864, file: !971, line: 1441, type: !979)
!7874 = !DILocation(line: 1441, column: 37, scope: !7864)
!7875 = !DILocalVariable(name: "x", arg: 5, scope: !7864, file: !971, line: 1441, type: !979)
!7876 = !DILocation(line: 1441, column: 49, scope: !7864)
!7877 = !DILocalVariable(name: "y", arg: 6, scope: !7864, file: !971, line: 1441, type: !979)
!7878 = !DILocation(line: 1441, column: 56, scope: !7864)
!7879 = !DILocalVariable(name: "i", scope: !7864, file: !971, line: 1443, type: !979)
!7880 = !DILocation(line: 1443, column: 9, scope: !7864)
!7881 = !DILocation(line: 1445, column: 34, scope: !7864)
!7882 = !DILocation(line: 1445, column: 41, scope: !7864)
!7883 = !DILocation(line: 1445, column: 49, scope: !7864)
!7884 = !DILocation(line: 1445, column: 52, scope: !7864)
!7885 = !DILocation(line: 1445, column: 18, scope: !7864)
!7886 = !DILocation(line: 1445, column: 5, scope: !7864)
!7887 = !DILocation(line: 1445, column: 12, scope: !7864)
!7888 = !DILocation(line: 1445, column: 16, scope: !7864)
!7889 = !DILocation(line: 1446, column: 39, scope: !7864)
!7890 = !DILocation(line: 1446, column: 19, scope: !7864)
!7891 = !DILocation(line: 1446, column: 5, scope: !7864)
!7892 = !DILocation(line: 1446, column: 12, scope: !7864)
!7893 = !DILocation(line: 1446, column: 16, scope: !7864)
!7894 = !DILocation(line: 1448, column: 9, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7864, file: !971, line: 1448, column: 9)
!7896 = !DILocation(line: 1448, column: 12, scope: !7895)
!7897 = !DILocation(line: 1448, column: 21, scope: !7895)
!7898 = !DILocation(line: 1448, column: 9, scope: !7864)
!7899 = !DILocation(line: 1449, column: 39, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !971, line: 1448, column: 27)
!7901 = !DILocation(line: 1449, column: 46, scope: !7900)
!7902 = !DILocation(line: 1449, column: 54, scope: !7900)
!7903 = !DILocation(line: 1449, column: 57, scope: !7900)
!7904 = !DILocation(line: 1449, column: 23, scope: !7900)
!7905 = !DILocation(line: 1449, column: 9, scope: !7900)
!7906 = !DILocation(line: 1449, column: 16, scope: !7900)
!7907 = !DILocation(line: 1449, column: 20, scope: !7900)
!7908 = !DILocation(line: 1450, column: 43, scope: !7900)
!7909 = !DILocation(line: 1450, column: 23, scope: !7900)
!7910 = !DILocation(line: 1450, column: 53, scope: !7900)
!7911 = !DILocation(line: 1450, column: 9, scope: !7900)
!7912 = !DILocation(line: 1450, column: 16, scope: !7900)
!7913 = !DILocation(line: 1450, column: 20, scope: !7900)
!7914 = !DILocation(line: 1451, column: 5, scope: !7900)
!7915 = !DILocation(line: 1453, column: 10, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7864, file: !971, line: 1453, column: 9)
!7917 = !DILocation(line: 1453, column: 17, scope: !7916)
!7918 = !DILocation(line: 1453, column: 9, scope: !7864)
!7919 = !DILocation(line: 1454, column: 23, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7916, file: !971, line: 1453, column: 22)
!7921 = !DILocation(line: 1454, column: 30, scope: !7920)
!7922 = !DILocation(line: 1454, column: 38, scope: !7920)
!7923 = !DILocation(line: 1454, column: 41, scope: !7920)
!7924 = !DILocation(line: 1454, column: 9, scope: !7920)
!7925 = !DILocation(line: 1455, column: 16, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7920, file: !971, line: 1455, column: 9)
!7927 = !DILocation(line: 1455, column: 14, scope: !7926)
!7928 = !DILocation(line: 1455, column: 21, scope: !7929)
!7929 = !DILexicalBlockFile(scope: !7930, file: !971, discriminator: 1)
!7930 = distinct !DILexicalBlock(scope: !7926, file: !971, line: 1455, column: 9)
!7931 = !DILocation(line: 1455, column: 23, scope: !7929)
!7932 = !DILocation(line: 1455, column: 9, scope: !7929)
!7933 = !DILocation(line: 1456, column: 61, scope: !7930)
!7934 = !DILocation(line: 1456, column: 66, scope: !7930)
!7935 = !DILocation(line: 1456, column: 69, scope: !7930)
!7936 = !DILocation(line: 1456, column: 68, scope: !7930)
!7937 = !DILocation(line: 1456, column: 41, scope: !7930)
!7938 = !DILocation(line: 1456, column: 25, scope: !7930)
!7939 = !DILocation(line: 1456, column: 13, scope: !7930)
!7940 = !DILocation(line: 1456, column: 20, scope: !7930)
!7941 = !DILocation(line: 1456, column: 22, scope: !7930)
!7942 = !DILocation(line: 1456, column: 28, scope: !7930)
!7943 = !DILocation(line: 1455, column: 29, scope: !7944)
!7944 = !DILexicalBlockFile(scope: !7930, file: !971, discriminator: 2)
!7945 = !DILocation(line: 1455, column: 9, scope: !7944)
!7946 = distinct !{!7946, !7947}
!7947 = !DILocation(line: 1455, column: 9, scope: !7920)
!7948 = !DILocation(line: 1457, column: 9, scope: !7920)
!7949 = !DILocation(line: 1460, column: 9, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7864, file: !971, line: 1460, column: 9)
!7951 = !DILocation(line: 1460, column: 12, scope: !7950)
!7952 = !DILocation(line: 1460, column: 9, scope: !7864)
!7953 = !DILocation(line: 1461, column: 39, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7950, file: !971, line: 1460, column: 27)
!7955 = !DILocation(line: 1461, column: 46, scope: !7954)
!7956 = !DILocation(line: 1461, column: 54, scope: !7954)
!7957 = !DILocation(line: 1461, column: 57, scope: !7954)
!7958 = !DILocation(line: 1461, column: 23, scope: !7954)
!7959 = !DILocation(line: 1461, column: 9, scope: !7954)
!7960 = !DILocation(line: 1461, column: 16, scope: !7954)
!7961 = !DILocation(line: 1461, column: 20, scope: !7954)
!7962 = !DILocation(line: 1462, column: 43, scope: !7954)
!7963 = !DILocation(line: 1462, column: 23, scope: !7954)
!7964 = !DILocation(line: 1462, column: 53, scope: !7954)
!7965 = !DILocation(line: 1462, column: 9, scope: !7954)
!7966 = !DILocation(line: 1462, column: 16, scope: !7954)
!7967 = !DILocation(line: 1462, column: 20, scope: !7954)
!7968 = !DILocation(line: 1463, column: 5, scope: !7954)
!7969 = !DILocation(line: 1465, column: 12, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7864, file: !971, line: 1465, column: 5)
!7971 = !DILocation(line: 1465, column: 10, scope: !7970)
!7972 = !DILocation(line: 1465, column: 17, scope: !7973)
!7973 = !DILexicalBlockFile(scope: !7974, file: !971, discriminator: 1)
!7974 = distinct !DILexicalBlock(scope: !7970, file: !971, line: 1465, column: 5)
!7975 = !DILocation(line: 1465, column: 21, scope: !7973)
!7976 = !DILocation(line: 1465, column: 24, scope: !7973)
!7977 = !DILocation(line: 1465, column: 19, scope: !7973)
!7978 = !DILocation(line: 1465, column: 5, scope: !7973)
!7979 = !DILocation(line: 1466, column: 13, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !971, line: 1466, column: 13)
!7981 = !DILocation(line: 1466, column: 20, scope: !7980)
!7982 = !DILocation(line: 1466, column: 27, scope: !7980)
!7983 = !DILocation(line: 1466, column: 28, scope: !7980)
!7984 = !DILocation(line: 1466, column: 24, scope: !7980)
!7985 = !DILocation(line: 1466, column: 13, scope: !7974)
!7986 = !DILocation(line: 1467, column: 17, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !971, line: 1467, column: 17)
!7988 = distinct !DILexicalBlock(scope: !7980, file: !971, line: 1466, column: 33)
!7989 = !DILocation(line: 1467, column: 24, scope: !7987)
!7990 = !DILocation(line: 1467, column: 28, scope: !7987)
!7991 = !DILocation(line: 1467, column: 17, scope: !7988)
!7992 = !DILocation(line: 1468, column: 27, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7987, file: !971, line: 1467, column: 33)
!7994 = !DILocation(line: 1468, column: 30, scope: !7993)
!7995 = !DILocation(line: 1468, column: 37, scope: !7993)
!7996 = !DILocation(line: 1468, column: 40, scope: !7993)
!7997 = !DILocation(line: 1468, column: 43, scope: !7993)
!7998 = !DILocation(line: 1468, column: 17, scope: !7993)
!7999 = !DILocation(line: 1469, column: 13, scope: !7993)
!8000 = !DILocation(line: 1470, column: 25, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7987, file: !971, line: 1469, column: 20)
!8002 = !DILocation(line: 1470, column: 32, scope: !8001)
!8003 = !DILocation(line: 1470, column: 40, scope: !8001)
!8004 = !DILocation(line: 1470, column: 43, scope: !8001)
!8005 = !DILocation(line: 1470, column: 46, scope: !8001)
!8006 = !DILocation(line: 1470, column: 17, scope: !8001)
!8007 = !DILocation(line: 1471, column: 68, scope: !8001)
!8008 = !DILocation(line: 1471, column: 74, scope: !8001)
!8009 = !DILocation(line: 1471, column: 84, scope: !8001)
!8010 = !DILocation(line: 1471, column: 82, scope: !8001)
!8011 = !DILocation(line: 1471, column: 78, scope: !8001)
!8012 = !DILocation(line: 1471, column: 48, scope: !8001)
!8013 = !DILocation(line: 1471, column: 29, scope: !8001)
!8014 = !DILocation(line: 1471, column: 17, scope: !8001)
!8015 = !DILocation(line: 1471, column: 24, scope: !8001)
!8016 = !DILocation(line: 1471, column: 26, scope: !8001)
!8017 = !DILocation(line: 1471, column: 35, scope: !8001)
!8018 = !DILocation(line: 1472, column: 68, scope: !8001)
!8019 = !DILocation(line: 1472, column: 74, scope: !8001)
!8020 = !DILocation(line: 1472, column: 84, scope: !8001)
!8021 = !DILocation(line: 1472, column: 82, scope: !8001)
!8022 = !DILocation(line: 1472, column: 78, scope: !8001)
!8023 = !DILocation(line: 1472, column: 48, scope: !8001)
!8024 = !DILocation(line: 1472, column: 29, scope: !8001)
!8025 = !DILocation(line: 1472, column: 17, scope: !8001)
!8026 = !DILocation(line: 1472, column: 24, scope: !8001)
!8027 = !DILocation(line: 1472, column: 26, scope: !8001)
!8028 = !DILocation(line: 1472, column: 35, scope: !8001)
!8029 = !DILocation(line: 1474, column: 9, scope: !7988)
!8030 = !DILocation(line: 1466, column: 30, scope: !8031)
!8031 = !DILexicalBlockFile(scope: !7980, file: !971, discriminator: 1)
!8032 = !DILocation(line: 1465, column: 35, scope: !8033)
!8033 = !DILexicalBlockFile(scope: !7974, file: !971, discriminator: 2)
!8034 = !DILocation(line: 1465, column: 5, scope: !8033)
!8035 = distinct !{!8035, !8036}
!8036 = !DILocation(line: 1465, column: 5, scope: !7864)
!8037 = !DILocation(line: 1475, column: 1, scope: !7864)
!8038 = distinct !DISubprogram(name: "propagate_block_data", scope: !971, file: !971, line: 1480, type: !8039, isLocal: true, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{null, !2880, !979, !979}
!8041 = !DILocalVariable(name: "block", arg: 1, scope: !8038, file: !971, line: 1480, type: !2880)
!8042 = !DILocation(line: 1480, column: 46, scope: !8038)
!8043 = !DILocalVariable(name: "stride", arg: 2, scope: !8038, file: !971, line: 1480, type: !979)
!8044 = !DILocation(line: 1480, column: 57, scope: !8038)
!8045 = !DILocalVariable(name: "size", arg: 3, scope: !8038, file: !971, line: 1480, type: !979)
!8046 = !DILocation(line: 1480, column: 69, scope: !8038)
!8047 = !DILocalVariable(name: "x", scope: !8038, file: !971, line: 1482, type: !979)
!8048 = !DILocation(line: 1482, column: 9, scope: !8038)
!8049 = !DILocalVariable(name: "y", scope: !8038, file: !971, line: 1482, type: !979)
!8050 = !DILocation(line: 1482, column: 12, scope: !8038)
!8051 = !DILocalVariable(name: "dst", scope: !8038, file: !971, line: 1483, type: !2880)
!8052 = !DILocation(line: 1483, column: 17, scope: !8038)
!8053 = !DILocation(line: 1483, column: 23, scope: !8038)
!8054 = !DILocation(line: 1485, column: 12, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8038, file: !971, line: 1485, column: 5)
!8056 = !DILocation(line: 1485, column: 10, scope: !8055)
!8057 = !DILocation(line: 1485, column: 17, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8059, file: !971, discriminator: 1)
!8059 = distinct !DILexicalBlock(scope: !8055, file: !971, line: 1485, column: 5)
!8060 = !DILocation(line: 1485, column: 21, scope: !8058)
!8061 = !DILocation(line: 1485, column: 19, scope: !8058)
!8062 = !DILocation(line: 1485, column: 5, scope: !8058)
!8063 = !DILocation(line: 1486, column: 13, scope: !8059)
!8064 = !DILocation(line: 1486, column: 9, scope: !8059)
!8065 = !DILocation(line: 1486, column: 19, scope: !8059)
!8066 = !DILocation(line: 1486, column: 18, scope: !8059)
!8067 = !DILocation(line: 1485, column: 28, scope: !8068)
!8068 = !DILexicalBlockFile(scope: !8059, file: !971, discriminator: 2)
!8069 = !DILocation(line: 1485, column: 5, scope: !8068)
!8070 = distinct !{!8070, !8071}
!8071 = !DILocation(line: 1485, column: 5, scope: !8038)
!8072 = !DILocation(line: 1488, column: 12, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8038, file: !971, line: 1488, column: 5)
!8074 = !DILocation(line: 1488, column: 10, scope: !8073)
!8075 = !DILocation(line: 1488, column: 17, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8077, file: !971, discriminator: 1)
!8077 = distinct !DILexicalBlock(scope: !8073, file: !971, line: 1488, column: 5)
!8078 = !DILocation(line: 1488, column: 21, scope: !8076)
!8079 = !DILocation(line: 1488, column: 19, scope: !8076)
!8080 = !DILocation(line: 1488, column: 5, scope: !8076)
!8081 = !DILocation(line: 1489, column: 16, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8077, file: !971, line: 1488, column: 32)
!8083 = !DILocation(line: 1489, column: 13, scope: !8082)
!8084 = !DILocation(line: 1490, column: 16, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8082, file: !971, line: 1490, column: 9)
!8086 = !DILocation(line: 1490, column: 14, scope: !8085)
!8087 = !DILocation(line: 1490, column: 21, scope: !8088)
!8088 = !DILexicalBlockFile(scope: !8089, file: !971, discriminator: 1)
!8089 = distinct !DILexicalBlock(scope: !8085, file: !971, line: 1490, column: 9)
!8090 = !DILocation(line: 1490, column: 25, scope: !8088)
!8091 = !DILocation(line: 1490, column: 23, scope: !8088)
!8092 = !DILocation(line: 1490, column: 9, scope: !8088)
!8093 = !DILocation(line: 1491, column: 17, scope: !8089)
!8094 = !DILocation(line: 1491, column: 13, scope: !8089)
!8095 = !DILocation(line: 1491, column: 23, scope: !8089)
!8096 = !DILocation(line: 1491, column: 22, scope: !8089)
!8097 = !DILocation(line: 1490, column: 32, scope: !8098)
!8098 = !DILexicalBlockFile(scope: !8089, file: !971, discriminator: 2)
!8099 = !DILocation(line: 1490, column: 9, scope: !8098)
!8100 = distinct !{!8100, !8101}
!8101 = !DILocation(line: 1490, column: 9, scope: !8082)
!8102 = !DILocation(line: 1492, column: 5, scope: !8082)
!8103 = !DILocation(line: 1488, column: 28, scope: !8104)
!8104 = !DILexicalBlockFile(scope: !8077, file: !971, discriminator: 2)
!8105 = !DILocation(line: 1488, column: 5, scope: !8104)
!8106 = distinct !{!8106, !8107}
!8107 = !DILocation(line: 1488, column: 5, scope: !8038)
!8108 = !DILocation(line: 1493, column: 1, scope: !8038)
!8109 = distinct !DISubprogram(name: "dirac_get_arith_bit", scope: !945, file: !945, line: 134, type: !8110, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{!979, !7783, !979}
!8112 = !DILocalVariable(name: "c", arg: 1, scope: !8109, file: !945, line: 134, type: !7783)
!8113 = !DILocation(line: 134, column: 51, scope: !8109)
!8114 = !DILocalVariable(name: "ctx", arg: 2, scope: !8109, file: !945, line: 134, type: !979)
!8115 = !DILocation(line: 134, column: 58, scope: !8109)
!8116 = !DILocalVariable(name: "prob_zero", scope: !8109, file: !945, line: 136, type: !979)
!8117 = !DILocation(line: 136, column: 9, scope: !8109)
!8118 = !DILocation(line: 136, column: 33, scope: !8109)
!8119 = !DILocation(line: 136, column: 21, scope: !8109)
!8120 = !DILocation(line: 136, column: 24, scope: !8109)
!8121 = !DILocalVariable(name: "range_times_prob", scope: !8109, file: !945, line: 137, type: !979)
!8122 = !DILocation(line: 137, column: 9, scope: !8109)
!8123 = !DILocalVariable(name: "bit", scope: !8109, file: !945, line: 137, type: !979)
!8124 = !DILocation(line: 137, column: 27, scope: !8109)
!8125 = !DILocalVariable(name: "low", scope: !8109, file: !945, line: 138, type: !980)
!8126 = !DILocation(line: 138, column: 14, scope: !8109)
!8127 = !DILocation(line: 138, column: 20, scope: !8109)
!8128 = !DILocation(line: 138, column: 23, scope: !8109)
!8129 = !DILocalVariable(name: "range", scope: !8109, file: !945, line: 139, type: !979)
!8130 = !DILocation(line: 139, column: 9, scope: !8109)
!8131 = !DILocation(line: 139, column: 17, scope: !8109)
!8132 = !DILocation(line: 139, column: 20, scope: !8109)
!8133 = !DILocation(line: 141, column: 25, scope: !8109)
!8134 = !DILocation(line: 141, column: 28, scope: !8109)
!8135 = !DILocation(line: 141, column: 36, scope: !8109)
!8136 = !DILocation(line: 141, column: 34, scope: !8109)
!8137 = !DILocation(line: 141, column: 47, scope: !8109)
!8138 = !DILocation(line: 141, column: 22, scope: !8109)
!8139 = !DILocation(line: 144, column: 12, scope: !8109)
!8140 = !DILocation(line: 144, column: 29, scope: !8109)
!8141 = !DILocation(line: 144, column: 9, scope: !8109)
!8142 = !DILocation(line: 145, column: 14, scope: !8109)
!8143 = !DILocation(line: 145, column: 11, scope: !8109)
!8144 = !DILocation(line: 146, column: 9, scope: !8109)
!8145 = !DILocation(line: 147, column: 5, scope: !8109)
!8146 = !DILocation(line: 153, column: 15, scope: !8109)
!8147 = !DILocation(line: 153, column: 18, scope: !8109)
!8148 = !DILocation(line: 153, column: 28, scope: !8109)
!8149 = !DILocation(line: 153, column: 31, scope: !8109)
!8150 = !DILocation(line: 153, column: 34, scope: !8109)
!8151 = !DILocation(line: 154, column: 15, scope: !8109)
!8152 = !{i32 273001, i32 273018, i32 273047, i32 273076, i32 273105}
!8153 = !DILocation(line: 166, column: 64, scope: !8109)
!8154 = !DILocation(line: 166, column: 25, scope: !8109)
!8155 = !DILocation(line: 166, column: 50, scope: !8109)
!8156 = !DILocation(line: 166, column: 59, scope: !8109)
!8157 = !DILocation(line: 166, column: 17, scope: !8109)
!8158 = !DILocation(line: 166, column: 5, scope: !8109)
!8159 = !DILocation(line: 166, column: 8, scope: !8109)
!8160 = !DILocation(line: 166, column: 22, scope: !8109)
!8161 = !DILocation(line: 167, column: 14, scope: !8109)
!8162 = !DILocation(line: 167, column: 5, scope: !8109)
!8163 = !DILocation(line: 167, column: 8, scope: !8109)
!8164 = !DILocation(line: 167, column: 12, scope: !8109)
!8165 = !DILocation(line: 168, column: 16, scope: !8109)
!8166 = !DILocation(line: 168, column: 5, scope: !8109)
!8167 = !DILocation(line: 168, column: 8, scope: !8109)
!8168 = !DILocation(line: 168, column: 14, scope: !8109)
!8169 = !DILocation(line: 170, column: 12, scope: !8109)
!8170 = !DILocation(line: 170, column: 5, scope: !8109)
!8171 = !DILocation(line: 171, column: 12, scope: !8109)
!8172 = !DILocation(line: 171, column: 5, scope: !8109)
!8173 = !DILocation(line: 172, column: 12, scope: !8109)
!8174 = !DILocation(line: 172, column: 5, scope: !8109)
!8175 = distinct !DISubprogram(name: "renorm", scope: !945, file: !945, line: 92, type: !8176, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !7783}
!8178 = !DILocalVariable(name: "c", arg: 1, scope: !8175, file: !945, line: 92, type: !7783)
!8179 = !DILocation(line: 92, column: 39, scope: !8175)
!8180 = !DILocalVariable(name: "shift", scope: !8175, file: !945, line: 95, type: !979)
!8181 = !DILocation(line: 95, column: 9, scope: !8175)
!8182 = !DILocation(line: 95, column: 43, scope: !8175)
!8183 = !DILocation(line: 95, column: 46, scope: !8175)
!8184 = !DILocation(line: 95, column: 51, scope: !8175)
!8185 = !DILocation(line: 95, column: 54, scope: !8175)
!8186 = !DILocation(line: 95, column: 28, scope: !8175)
!8187 = !DILocation(line: 95, column: 26, scope: !8175)
!8188 = !DILocation(line: 95, column: 20, scope: !8175)
!8189 = !DILocation(line: 95, column: 63, scope: !8175)
!8190 = !DILocation(line: 95, column: 66, scope: !8175)
!8191 = !DILocation(line: 95, column: 71, scope: !8175)
!8192 = !DILocation(line: 95, column: 74, scope: !8175)
!8193 = !DILocation(line: 95, column: 59, scope: !8175)
!8194 = !DILocation(line: 97, column: 16, scope: !8175)
!8195 = !DILocation(line: 97, column: 5, scope: !8175)
!8196 = !DILocation(line: 97, column: 8, scope: !8175)
!8197 = !DILocation(line: 97, column: 12, scope: !8175)
!8198 = !DILocation(line: 98, column: 18, scope: !8175)
!8199 = !DILocation(line: 98, column: 5, scope: !8175)
!8200 = !DILocation(line: 98, column: 8, scope: !8175)
!8201 = !DILocation(line: 98, column: 14, scope: !8175)
!8202 = !DILocation(line: 99, column: 19, scope: !8175)
!8203 = !DILocation(line: 99, column: 5, scope: !8175)
!8204 = !DILocation(line: 99, column: 8, scope: !8175)
!8205 = !DILocation(line: 99, column: 16, scope: !8175)
!8206 = !DILocation(line: 107, column: 1, scope: !8175)
!8207 = distinct !DISubprogram(name: "refill", scope: !945, file: !945, line: 109, type: !8176, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8208 = !DILocalVariable(name: "x", arg: 1, scope: !8209, file: !3040, line: 58, type: !1104)
!8209 = distinct !DISubprogram(name: "av_bswap16", scope: !3040, file: !3040, line: 58, type: !8210, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{!1104, !1104}
!8212 = !DILocation(line: 58, column: 98, scope: !8209, inlinedAt: !8213)
!8213 = distinct !DILocation(line: 94, column: 118, scope: !8214, inlinedAt: !8218)
!8214 = distinct !DISubprogram(name: "bytestream_get_be16", scope: !8215, file: !8215, line: 94, type: !8216, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8215 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!980, !2691}
!8218 = distinct !DILocation(line: 114, column: 19, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !945, line: 113, column: 23)
!8220 = distinct !DILexicalBlock(scope: !8207, file: !945, line: 113, column: 9)
!8221 = !DILocalVariable(name: "b", arg: 1, scope: !8214, file: !8215, line: 94, type: !2691)
!8222 = !DILocation(line: 94, column: 95, scope: !8214, inlinedAt: !8218)
!8223 = !DILocalVariable(name: "c", arg: 1, scope: !8207, file: !945, line: 109, type: !7783)
!8224 = !DILocation(line: 109, column: 39, scope: !8207)
!8225 = !DILocalVariable(name: "counter", scope: !8207, file: !945, line: 111, type: !979)
!8226 = !DILocation(line: 111, column: 9, scope: !8207)
!8227 = !DILocation(line: 111, column: 19, scope: !8207)
!8228 = !DILocation(line: 111, column: 22, scope: !8207)
!8229 = !DILocation(line: 113, column: 9, scope: !8220)
!8230 = !DILocation(line: 113, column: 17, scope: !8220)
!8231 = !DILocation(line: 113, column: 9, scope: !8207)
!8232 = !DILocalVariable(name: "new", scope: !8219, file: !945, line: 114, type: !979)
!8233 = !DILocation(line: 114, column: 13, scope: !8219)
!8234 = !DILocation(line: 114, column: 40, scope: !8219)
!8235 = !DILocation(line: 114, column: 43, scope: !8219)
!8236 = !DILocation(line: 114, column: 19, scope: !8219)
!8237 = !DILocation(line: 94, column: 102, scope: !8214, inlinedAt: !8218)
!8238 = !DILocation(line: 94, column: 105, scope: !8214, inlinedAt: !8218)
!8239 = !DILocation(line: 94, column: 162, scope: !8214, inlinedAt: !8218)
!8240 = !DILocation(line: 94, column: 161, scope: !8214, inlinedAt: !8218)
!8241 = !DILocation(line: 94, column: 164, scope: !8214, inlinedAt: !8218)
!8242 = !DILocation(line: 94, column: 171, scope: !8214, inlinedAt: !8218)
!8243 = !DILocation(line: 94, column: 118, scope: !8214, inlinedAt: !8218)
!8244 = !DILocation(line: 60, column: 9, scope: !8209, inlinedAt: !8213)
!8245 = !DILocation(line: 60, column: 10, scope: !8209, inlinedAt: !8213)
!8246 = !DILocation(line: 60, column: 18, scope: !8209, inlinedAt: !8213)
!8247 = !DILocation(line: 60, column: 19, scope: !8209, inlinedAt: !8213)
!8248 = !DILocation(line: 60, column: 15, scope: !8209, inlinedAt: !8213)
!8249 = !DILocation(line: 60, column: 8, scope: !8209, inlinedAt: !8213)
!8250 = !DILocation(line: 60, column: 6, scope: !8209, inlinedAt: !8213)
!8251 = !DILocation(line: 61, column: 12, scope: !8209, inlinedAt: !8213)
!8252 = !DILocation(line: 117, column: 13, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8219, file: !945, line: 117, column: 13)
!8254 = !DILocation(line: 117, column: 16, scope: !8253)
!8255 = !DILocation(line: 117, column: 29, scope: !8253)
!8256 = !DILocation(line: 117, column: 32, scope: !8253)
!8257 = !DILocation(line: 117, column: 27, scope: !8253)
!8258 = !DILocation(line: 117, column: 13, scope: !8219)
!8259 = !DILocation(line: 118, column: 17, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8253, file: !945, line: 117, column: 48)
!8261 = !DILocation(line: 119, column: 17, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8260, file: !945, line: 119, column: 17)
!8263 = !DILocation(line: 119, column: 20, scope: !8262)
!8264 = !DILocation(line: 119, column: 33, scope: !8262)
!8265 = !DILocation(line: 119, column: 36, scope: !8262)
!8266 = !DILocation(line: 119, column: 50, scope: !8262)
!8267 = !DILocation(line: 119, column: 31, scope: !8262)
!8268 = !DILocation(line: 119, column: 17, scope: !8260)
!8269 = !DILocation(line: 120, column: 21, scope: !8262)
!8270 = !DILocation(line: 120, column: 17, scope: !8262)
!8271 = !DILocation(line: 122, column: 29, scope: !8260)
!8272 = !DILocation(line: 122, column: 32, scope: !8260)
!8273 = !DILocation(line: 122, column: 13, scope: !8260)
!8274 = !DILocation(line: 122, column: 16, scope: !8260)
!8275 = !DILocation(line: 122, column: 27, scope: !8260)
!8276 = !DILocation(line: 123, column: 13, scope: !8260)
!8277 = !DILocation(line: 123, column: 16, scope: !8260)
!8278 = !DILocation(line: 123, column: 25, scope: !8260)
!8279 = !DILocation(line: 124, column: 17, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8260, file: !945, line: 124, column: 17)
!8281 = !DILocation(line: 124, column: 20, scope: !8280)
!8282 = !DILocation(line: 124, column: 29, scope: !8280)
!8283 = !DILocation(line: 124, column: 17, scope: !8260)
!8284 = !DILocation(line: 125, column: 17, scope: !8280)
!8285 = !DILocation(line: 125, column: 20, scope: !8280)
!8286 = !DILocation(line: 125, column: 26, scope: !8280)
!8287 = !DILocation(line: 126, column: 9, scope: !8260)
!8288 = !DILocation(line: 128, column: 19, scope: !8219)
!8289 = !DILocation(line: 128, column: 26, scope: !8219)
!8290 = !DILocation(line: 128, column: 23, scope: !8219)
!8291 = !DILocation(line: 128, column: 9, scope: !8219)
!8292 = !DILocation(line: 128, column: 12, scope: !8219)
!8293 = !DILocation(line: 128, column: 16, scope: !8219)
!8294 = !DILocation(line: 129, column: 17, scope: !8219)
!8295 = !DILocation(line: 130, column: 5, scope: !8219)
!8296 = !DILocation(line: 131, column: 18, scope: !8207)
!8297 = !DILocation(line: 131, column: 5, scope: !8207)
!8298 = !DILocation(line: 131, column: 8, scope: !8207)
!8299 = !DILocation(line: 131, column: 16, scope: !8207)
!8300 = !DILocation(line: 132, column: 1, scope: !8207)
!8301 = distinct !DISubprogram(name: "pred_block_mode", scope: !971, file: !971, line: 1339, type: !8302, isLocal: true, isDefinition: true, scopeLine: 1340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8302 = !DISubroutineType(types: !8303)
!8303 = !{!979, !2880, !979, !979, !979, !979}
!8304 = !DILocalVariable(name: "block", arg: 1, scope: !8301, file: !971, line: 1339, type: !2880)
!8305 = !DILocation(line: 1339, column: 47, scope: !8301)
!8306 = !DILocalVariable(name: "stride", arg: 2, scope: !8301, file: !971, line: 1339, type: !979)
!8307 = !DILocation(line: 1339, column: 58, scope: !8301)
!8308 = !DILocalVariable(name: "x", arg: 3, scope: !8301, file: !971, line: 1339, type: !979)
!8309 = !DILocation(line: 1339, column: 70, scope: !8301)
!8310 = !DILocalVariable(name: "y", arg: 4, scope: !8301, file: !971, line: 1339, type: !979)
!8311 = !DILocation(line: 1339, column: 77, scope: !8301)
!8312 = !DILocalVariable(name: "refmask", arg: 5, scope: !8301, file: !971, line: 1339, type: !979)
!8313 = !DILocation(line: 1339, column: 84, scope: !8301)
!8314 = !DILocalVariable(name: "pred", scope: !8301, file: !971, line: 1341, type: !979)
!8315 = !DILocation(line: 1341, column: 9, scope: !8301)
!8316 = !DILocation(line: 1343, column: 11, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8301, file: !971, line: 1343, column: 9)
!8318 = !DILocation(line: 1343, column: 13, scope: !8317)
!8319 = !DILocation(line: 1343, column: 12, scope: !8317)
!8320 = !DILocation(line: 1343, column: 9, scope: !8301)
!8321 = !DILocation(line: 1344, column: 9, scope: !8317)
!8322 = !DILocation(line: 1345, column: 15, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8317, file: !971, line: 1345, column: 14)
!8324 = !DILocation(line: 1345, column: 14, scope: !8317)
!8325 = !DILocation(line: 1346, column: 16, scope: !8323)
!8326 = !DILocation(line: 1346, column: 26, scope: !8323)
!8327 = !DILocation(line: 1346, column: 32, scope: !8323)
!8328 = !DILocation(line: 1346, column: 30, scope: !8323)
!8329 = !DILocation(line: 1346, column: 9, scope: !8323)
!8330 = !DILocation(line: 1347, column: 15, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8323, file: !971, line: 1347, column: 14)
!8332 = !DILocation(line: 1347, column: 14, scope: !8323)
!8333 = !DILocation(line: 1348, column: 23, scope: !8331)
!8334 = !DILocation(line: 1348, column: 22, scope: !8331)
!8335 = !DILocation(line: 1348, column: 16, scope: !8331)
!8336 = !DILocation(line: 1348, column: 31, scope: !8331)
!8337 = !DILocation(line: 1348, column: 37, scope: !8331)
!8338 = !DILocation(line: 1348, column: 35, scope: !8331)
!8339 = !DILocation(line: 1348, column: 9, scope: !8331)
!8340 = !DILocation(line: 1351, column: 13, scope: !8301)
!8341 = !DILocation(line: 1351, column: 23, scope: !8301)
!8342 = !DILocation(line: 1351, column: 29, scope: !8301)
!8343 = !DILocation(line: 1351, column: 27, scope: !8301)
!8344 = !DILocation(line: 1351, column: 48, scope: !8301)
!8345 = !DILocation(line: 1351, column: 47, scope: !8301)
!8346 = !DILocation(line: 1351, column: 41, scope: !8301)
!8347 = !DILocation(line: 1351, column: 56, scope: !8301)
!8348 = !DILocation(line: 1351, column: 62, scope: !8301)
!8349 = !DILocation(line: 1351, column: 60, scope: !8301)
!8350 = !DILocation(line: 1351, column: 38, scope: !8301)
!8351 = !DILocation(line: 1351, column: 81, scope: !8301)
!8352 = !DILocation(line: 1351, column: 80, scope: !8301)
!8353 = !DILocation(line: 1351, column: 87, scope: !8301)
!8354 = !DILocation(line: 1351, column: 74, scope: !8301)
!8355 = !DILocation(line: 1351, column: 91, scope: !8301)
!8356 = !DILocation(line: 1351, column: 97, scope: !8301)
!8357 = !DILocation(line: 1351, column: 95, scope: !8301)
!8358 = !DILocation(line: 1351, column: 71, scope: !8301)
!8359 = !DILocation(line: 1351, column: 10, scope: !8301)
!8360 = !DILocation(line: 1352, column: 13, scope: !8301)
!8361 = !DILocation(line: 1352, column: 18, scope: !8301)
!8362 = !DILocation(line: 1352, column: 26, scope: !8301)
!8363 = !DILocation(line: 1352, column: 24, scope: !8301)
!8364 = !DILocation(line: 1352, column: 5, scope: !8301)
!8365 = !DILocation(line: 1353, column: 1, scope: !8301)
!8366 = distinct !DISubprogram(name: "pred_block_dc", scope: !971, file: !971, line: 1355, type: !8367, isLocal: true, isDefinition: true, scopeLine: 1356, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8367 = !DISubroutineType(types: !8368)
!8368 = !{null, !2880, !979, !979, !979}
!8369 = !DILocalVariable(name: "block", arg: 1, scope: !8366, file: !971, line: 1355, type: !2880)
!8370 = !DILocation(line: 1355, column: 46, scope: !8366)
!8371 = !DILocalVariable(name: "stride", arg: 2, scope: !8366, file: !971, line: 1355, type: !979)
!8372 = !DILocation(line: 1355, column: 57, scope: !8366)
!8373 = !DILocalVariable(name: "x", arg: 3, scope: !8366, file: !971, line: 1355, type: !979)
!8374 = !DILocation(line: 1355, column: 69, scope: !8366)
!8375 = !DILocalVariable(name: "y", arg: 4, scope: !8366, file: !971, line: 1355, type: !979)
!8376 = !DILocation(line: 1355, column: 76, scope: !8366)
!8377 = !DILocalVariable(name: "i", scope: !8366, file: !971, line: 1357, type: !979)
!8378 = !DILocation(line: 1357, column: 9, scope: !8366)
!8379 = !DILocalVariable(name: "n", scope: !8366, file: !971, line: 1357, type: !979)
!8380 = !DILocation(line: 1357, column: 12, scope: !8366)
!8381 = !DILocation(line: 1359, column: 12, scope: !8366)
!8382 = !DILocation(line: 1359, column: 19, scope: !8366)
!8383 = !DILocation(line: 1359, column: 21, scope: !8366)
!8384 = !DILocation(line: 1359, column: 5, scope: !8366)
!8385 = !DILocation(line: 1361, column: 9, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8366, file: !971, line: 1361, column: 9)
!8387 = !DILocation(line: 1361, column: 11, scope: !8386)
!8388 = !DILocation(line: 1361, column: 16, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8386, file: !971, discriminator: 1)
!8390 = !DILocation(line: 1361, column: 26, scope: !8389)
!8391 = !DILocation(line: 1361, column: 30, scope: !8389)
!8392 = !DILocation(line: 1361, column: 9, scope: !8389)
!8393 = !DILocation(line: 1362, column: 16, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !971, line: 1362, column: 9)
!8395 = distinct !DILexicalBlock(scope: !8386, file: !971, line: 1361, column: 36)
!8396 = !DILocation(line: 1362, column: 14, scope: !8394)
!8397 = !DILocation(line: 1362, column: 21, scope: !8398)
!8398 = !DILexicalBlockFile(scope: !8399, file: !971, discriminator: 1)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !971, line: 1362, column: 9)
!8400 = !DILocation(line: 1362, column: 23, scope: !8398)
!8401 = !DILocation(line: 1362, column: 9, scope: !8398)
!8402 = !DILocation(line: 1363, column: 46, scope: !8399)
!8403 = !DILocation(line: 1363, column: 31, scope: !8399)
!8404 = !DILocation(line: 1363, column: 41, scope: !8399)
!8405 = !DILocation(line: 1363, column: 43, scope: !8399)
!8406 = !DILocation(line: 1363, column: 25, scope: !8399)
!8407 = !DILocation(line: 1363, column: 13, scope: !8399)
!8408 = !DILocation(line: 1363, column: 20, scope: !8399)
!8409 = !DILocation(line: 1363, column: 22, scope: !8399)
!8410 = !DILocation(line: 1363, column: 28, scope: !8399)
!8411 = !DILocation(line: 1362, column: 29, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !8399, file: !971, discriminator: 2)
!8413 = !DILocation(line: 1362, column: 9, scope: !8412)
!8414 = distinct !{!8414, !8415}
!8415 = !DILocation(line: 1362, column: 9, scope: !8395)
!8416 = !DILocation(line: 1364, column: 10, scope: !8395)
!8417 = !DILocation(line: 1365, column: 5, scope: !8395)
!8418 = !DILocation(line: 1367, column: 9, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8366, file: !971, line: 1367, column: 9)
!8420 = !DILocation(line: 1367, column: 11, scope: !8419)
!8421 = !DILocation(line: 1367, column: 23, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8419, file: !971, discriminator: 1)
!8423 = !DILocation(line: 1367, column: 22, scope: !8422)
!8424 = !DILocation(line: 1367, column: 16, scope: !8422)
!8425 = !DILocation(line: 1367, column: 31, scope: !8422)
!8426 = !DILocation(line: 1367, column: 35, scope: !8422)
!8427 = !DILocation(line: 1367, column: 9, scope: !8422)
!8428 = !DILocation(line: 1368, column: 16, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !971, line: 1368, column: 9)
!8430 = distinct !DILexicalBlock(scope: !8419, file: !971, line: 1367, column: 41)
!8431 = !DILocation(line: 1368, column: 14, scope: !8429)
!8432 = !DILocation(line: 1368, column: 21, scope: !8433)
!8433 = !DILexicalBlockFile(scope: !8434, file: !971, discriminator: 1)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !971, line: 1368, column: 9)
!8435 = !DILocation(line: 1368, column: 23, scope: !8433)
!8436 = !DILocation(line: 1368, column: 9, scope: !8433)
!8437 = !DILocation(line: 1369, column: 51, scope: !8434)
!8438 = !DILocation(line: 1369, column: 31, scope: !8434)
!8439 = !DILocation(line: 1369, column: 38, scope: !8434)
!8440 = !DILocation(line: 1369, column: 37, scope: !8434)
!8441 = !DILocation(line: 1369, column: 46, scope: !8434)
!8442 = !DILocation(line: 1369, column: 48, scope: !8434)
!8443 = !DILocation(line: 1369, column: 25, scope: !8434)
!8444 = !DILocation(line: 1369, column: 13, scope: !8434)
!8445 = !DILocation(line: 1369, column: 20, scope: !8434)
!8446 = !DILocation(line: 1369, column: 22, scope: !8434)
!8447 = !DILocation(line: 1369, column: 28, scope: !8434)
!8448 = !DILocation(line: 1368, column: 29, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !8434, file: !971, discriminator: 2)
!8450 = !DILocation(line: 1368, column: 9, scope: !8449)
!8451 = distinct !{!8451, !8452}
!8452 = !DILocation(line: 1368, column: 9, scope: !8430)
!8453 = !DILocation(line: 1370, column: 10, scope: !8430)
!8454 = !DILocation(line: 1371, column: 5, scope: !8430)
!8455 = !DILocation(line: 1373, column: 9, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8366, file: !971, line: 1373, column: 9)
!8457 = !DILocation(line: 1373, column: 11, scope: !8456)
!8458 = !DILocation(line: 1373, column: 14, scope: !8459)
!8459 = !DILexicalBlockFile(scope: !8456, file: !971, discriminator: 1)
!8460 = !DILocation(line: 1373, column: 16, scope: !8459)
!8461 = !DILocation(line: 1373, column: 30, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !8456, file: !971, discriminator: 2)
!8463 = !DILocation(line: 1373, column: 29, scope: !8462)
!8464 = !DILocation(line: 1373, column: 21, scope: !8462)
!8465 = !DILocation(line: 1373, column: 38, scope: !8462)
!8466 = !DILocation(line: 1373, column: 42, scope: !8462)
!8467 = !DILocation(line: 1373, column: 9, scope: !8462)
!8468 = !DILocation(line: 1374, column: 16, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !971, line: 1374, column: 9)
!8470 = distinct !DILexicalBlock(scope: !8456, file: !971, line: 1373, column: 48)
!8471 = !DILocation(line: 1374, column: 14, scope: !8469)
!8472 = !DILocation(line: 1374, column: 21, scope: !8473)
!8473 = !DILexicalBlockFile(scope: !8474, file: !971, discriminator: 1)
!8474 = distinct !DILexicalBlock(scope: !8469, file: !971, line: 1374, column: 9)
!8475 = !DILocation(line: 1374, column: 23, scope: !8473)
!8476 = !DILocation(line: 1374, column: 9, scope: !8473)
!8477 = !DILocation(line: 1375, column: 53, scope: !8474)
!8478 = !DILocation(line: 1375, column: 31, scope: !8474)
!8479 = !DILocation(line: 1375, column: 40, scope: !8474)
!8480 = !DILocation(line: 1375, column: 39, scope: !8474)
!8481 = !DILocation(line: 1375, column: 48, scope: !8474)
!8482 = !DILocation(line: 1375, column: 50, scope: !8474)
!8483 = !DILocation(line: 1375, column: 25, scope: !8474)
!8484 = !DILocation(line: 1375, column: 13, scope: !8474)
!8485 = !DILocation(line: 1375, column: 20, scope: !8474)
!8486 = !DILocation(line: 1375, column: 22, scope: !8474)
!8487 = !DILocation(line: 1375, column: 28, scope: !8474)
!8488 = !DILocation(line: 1374, column: 29, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8474, file: !971, discriminator: 2)
!8490 = !DILocation(line: 1374, column: 9, scope: !8489)
!8491 = distinct !{!8491, !8492}
!8492 = !DILocation(line: 1374, column: 9, scope: !8470)
!8493 = !DILocation(line: 1376, column: 10, scope: !8470)
!8494 = !DILocation(line: 1377, column: 5, scope: !8470)
!8495 = !DILocation(line: 1379, column: 9, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8366, file: !971, line: 1379, column: 9)
!8497 = !DILocation(line: 1379, column: 11, scope: !8496)
!8498 = !DILocation(line: 1379, column: 9, scope: !8366)
!8499 = !DILocation(line: 1380, column: 16, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !971, line: 1380, column: 9)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !971, line: 1379, column: 17)
!8502 = !DILocation(line: 1380, column: 14, scope: !8500)
!8503 = !DILocation(line: 1380, column: 21, scope: !8504)
!8504 = !DILexicalBlockFile(scope: !8505, file: !971, discriminator: 1)
!8505 = distinct !DILexicalBlock(scope: !8500, file: !971, line: 1380, column: 9)
!8506 = !DILocation(line: 1380, column: 23, scope: !8504)
!8507 = !DILocation(line: 1380, column: 9, scope: !8504)
!8508 = !DILocation(line: 1381, column: 43, scope: !8505)
!8509 = !DILocation(line: 1381, column: 31, scope: !8505)
!8510 = !DILocation(line: 1381, column: 38, scope: !8505)
!8511 = !DILocation(line: 1381, column: 40, scope: !8505)
!8512 = !DILocation(line: 1381, column: 45, scope: !8505)
!8513 = !DILocation(line: 1381, column: 48, scope: !8505)
!8514 = !DILocation(line: 1381, column: 30, scope: !8505)
!8515 = !DILocation(line: 1381, column: 25, scope: !8505)
!8516 = !DILocation(line: 1381, column: 13, scope: !8505)
!8517 = !DILocation(line: 1381, column: 20, scope: !8505)
!8518 = !DILocation(line: 1381, column: 22, scope: !8505)
!8519 = !DILocation(line: 1381, column: 28, scope: !8505)
!8520 = !DILocation(line: 1380, column: 29, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !8505, file: !971, discriminator: 2)
!8522 = !DILocation(line: 1380, column: 9, scope: !8521)
!8523 = distinct !{!8523, !8524}
!8524 = !DILocation(line: 1380, column: 9, scope: !8501)
!8525 = !DILocation(line: 1382, column: 5, scope: !8501)
!8526 = !DILocation(line: 1382, column: 16, scope: !8527)
!8527 = !DILexicalBlockFile(scope: !8528, file: !971, discriminator: 1)
!8528 = distinct !DILexicalBlock(scope: !8496, file: !971, line: 1382, column: 16)
!8529 = !DILocation(line: 1382, column: 18, scope: !8527)
!8530 = !DILocation(line: 1383, column: 16, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !971, line: 1383, column: 9)
!8532 = distinct !DILexicalBlock(scope: !8528, file: !971, line: 1382, column: 24)
!8533 = !DILocation(line: 1383, column: 14, scope: !8531)
!8534 = !DILocation(line: 1383, column: 21, scope: !8535)
!8535 = !DILexicalBlockFile(scope: !8536, file: !971, discriminator: 1)
!8536 = distinct !DILexicalBlock(scope: !8531, file: !971, line: 1383, column: 9)
!8537 = !DILocation(line: 1383, column: 23, scope: !8535)
!8538 = !DILocation(line: 1383, column: 9, scope: !8535)
!8539 = !DILocation(line: 1384, column: 50, scope: !8536)
!8540 = !DILocation(line: 1384, column: 38, scope: !8536)
!8541 = !DILocation(line: 1384, column: 45, scope: !8536)
!8542 = !DILocation(line: 1384, column: 47, scope: !8536)
!8543 = !DILocation(line: 1384, column: 30, scope: !8536)
!8544 = !DILocation(line: 1384, column: 25, scope: !8536)
!8545 = !DILocation(line: 1384, column: 13, scope: !8536)
!8546 = !DILocation(line: 1384, column: 20, scope: !8536)
!8547 = !DILocation(line: 1384, column: 22, scope: !8536)
!8548 = !DILocation(line: 1384, column: 28, scope: !8536)
!8549 = !DILocation(line: 1383, column: 29, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !8536, file: !971, discriminator: 2)
!8551 = !DILocation(line: 1383, column: 9, scope: !8550)
!8552 = distinct !{!8552, !8553}
!8553 = !DILocation(line: 1383, column: 9, scope: !8532)
!8554 = !DILocation(line: 1385, column: 5, scope: !8532)
!8555 = !DILocation(line: 1386, column: 1, scope: !8366)
!8556 = distinct !DISubprogram(name: "dirac_get_arith_int", scope: !945, file: !945, line: 191, type: !7781, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8557 = !DILocalVariable(name: "c", arg: 1, scope: !8556, file: !945, line: 191, type: !7783)
!8558 = !DILocation(line: 191, column: 51, scope: !8556)
!8559 = !DILocalVariable(name: "follow_ctx", arg: 2, scope: !8556, file: !945, line: 191, type: !979)
!8560 = !DILocation(line: 191, column: 58, scope: !8556)
!8561 = !DILocalVariable(name: "data_ctx", arg: 3, scope: !8556, file: !945, line: 191, type: !979)
!8562 = !DILocation(line: 191, column: 74, scope: !8556)
!8563 = !DILocalVariable(name: "ret", scope: !8556, file: !945, line: 193, type: !979)
!8564 = !DILocation(line: 193, column: 9, scope: !8556)
!8565 = !DILocation(line: 193, column: 36, scope: !8556)
!8566 = !DILocation(line: 193, column: 39, scope: !8556)
!8567 = !DILocation(line: 193, column: 51, scope: !8556)
!8568 = !DILocation(line: 193, column: 15, scope: !8556)
!8569 = !DILocation(line: 194, column: 9, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8556, file: !945, line: 194, column: 9)
!8571 = !DILocation(line: 194, column: 13, scope: !8570)
!8572 = !DILocation(line: 194, column: 36, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8570, file: !945, discriminator: 1)
!8574 = !DILocation(line: 194, column: 39, scope: !8573)
!8575 = !DILocation(line: 194, column: 47, scope: !8573)
!8576 = !DILocation(line: 194, column: 16, scope: !8573)
!8577 = !DILocation(line: 194, column: 9, scope: !8573)
!8578 = !DILocation(line: 195, column: 16, scope: !8570)
!8579 = !DILocation(line: 195, column: 15, scope: !8570)
!8580 = !DILocation(line: 195, column: 13, scope: !8570)
!8581 = !DILocation(line: 195, column: 9, scope: !8570)
!8582 = !DILocation(line: 196, column: 12, scope: !8556)
!8583 = !DILocation(line: 196, column: 5, scope: !8556)
!8584 = distinct !DISubprogram(name: "global_mv", scope: !971, file: !971, line: 1424, type: !8585, isLocal: true, isDefinition: true, scopeLine: 1425, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{null, !2670, !2880, !979, !979, !979}
!8587 = !DILocalVariable(name: "s", arg: 1, scope: !8584, file: !971, line: 1424, type: !2670)
!8588 = !DILocation(line: 1424, column: 37, scope: !8584)
!8589 = !DILocalVariable(name: "block", arg: 2, scope: !8584, file: !971, line: 1424, type: !2880)
!8590 = !DILocation(line: 1424, column: 52, scope: !8584)
!8591 = !DILocalVariable(name: "x", arg: 3, scope: !8584, file: !971, line: 1424, type: !979)
!8592 = !DILocation(line: 1424, column: 63, scope: !8584)
!8593 = !DILocalVariable(name: "y", arg: 4, scope: !8584, file: !971, line: 1424, type: !979)
!8594 = !DILocation(line: 1424, column: 70, scope: !8584)
!8595 = !DILocalVariable(name: "ref", arg: 5, scope: !8584, file: !971, line: 1424, type: !979)
!8596 = !DILocation(line: 1424, column: 77, scope: !8584)
!8597 = !DILocalVariable(name: "ez", scope: !8584, file: !971, line: 1426, type: !979)
!8598 = !DILocation(line: 1426, column: 9, scope: !8584)
!8599 = !DILocation(line: 1426, column: 26, scope: !8584)
!8600 = !DILocation(line: 1426, column: 14, scope: !8584)
!8601 = !DILocation(line: 1426, column: 17, scope: !8584)
!8602 = !DILocation(line: 1426, column: 31, scope: !8584)
!8603 = !DILocalVariable(name: "ep", scope: !8584, file: !971, line: 1427, type: !979)
!8604 = !DILocation(line: 1427, column: 9, scope: !8584)
!8605 = !DILocation(line: 1427, column: 26, scope: !8584)
!8606 = !DILocation(line: 1427, column: 14, scope: !8584)
!8607 = !DILocation(line: 1427, column: 17, scope: !8584)
!8608 = !DILocation(line: 1427, column: 31, scope: !8584)
!8609 = !DILocalVariable(name: "A", scope: !8584, file: !971, line: 1428, type: !8610)
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64, align: 64)
!8611 = !DILocation(line: 1428, column: 11, scope: !8584)
!8612 = !DILocation(line: 1428, column: 31, scope: !8584)
!8613 = !DILocation(line: 1428, column: 19, scope: !8584)
!8614 = !DILocation(line: 1428, column: 22, scope: !8584)
!8615 = !DILocation(line: 1428, column: 36, scope: !8584)
!8616 = !DILocalVariable(name: "b", scope: !8584, file: !971, line: 1429, type: !1446)
!8617 = !DILocation(line: 1429, column: 10, scope: !8584)
!8618 = !DILocation(line: 1429, column: 26, scope: !8584)
!8619 = !DILocation(line: 1429, column: 14, scope: !8584)
!8620 = !DILocation(line: 1429, column: 17, scope: !8584)
!8621 = !DILocation(line: 1429, column: 31, scope: !8584)
!8622 = !DILocalVariable(name: "c", scope: !8584, file: !971, line: 1430, type: !1446)
!8623 = !DILocation(line: 1430, column: 10, scope: !8584)
!8624 = !DILocation(line: 1430, column: 26, scope: !8584)
!8625 = !DILocation(line: 1430, column: 14, scope: !8584)
!8626 = !DILocation(line: 1430, column: 17, scope: !8584)
!8627 = !DILocation(line: 1430, column: 31, scope: !8584)
!8628 = !DILocalVariable(name: "m", scope: !8584, file: !971, line: 1432, type: !979)
!8629 = !DILocation(line: 1432, column: 9, scope: !8584)
!8630 = !DILocation(line: 1432, column: 17, scope: !8584)
!8631 = !DILocation(line: 1432, column: 15, scope: !8584)
!8632 = !DILocation(line: 1432, column: 24, scope: !8584)
!8633 = !DILocation(line: 1432, column: 29, scope: !8584)
!8634 = !DILocation(line: 1432, column: 28, scope: !8584)
!8635 = !DILocation(line: 1432, column: 33, scope: !8584)
!8636 = !DILocation(line: 1432, column: 38, scope: !8584)
!8637 = !DILocation(line: 1432, column: 37, scope: !8584)
!8638 = !DILocation(line: 1432, column: 31, scope: !8584)
!8639 = !DILocation(line: 1432, column: 21, scope: !8584)
!8640 = !DILocalVariable(name: "mx", scope: !8584, file: !971, line: 1433, type: !1011)
!8641 = !DILocation(line: 1433, column: 13, scope: !8584)
!8642 = !DILocation(line: 1433, column: 18, scope: !8584)
!8643 = !DILocation(line: 1433, column: 33, scope: !8584)
!8644 = !DILocation(line: 1433, column: 52, scope: !8584)
!8645 = !DILocation(line: 1433, column: 43, scope: !8584)
!8646 = !DILocation(line: 1433, column: 41, scope: !8584)
!8647 = !DILocation(line: 1433, column: 56, scope: !8584)
!8648 = !DILocation(line: 1433, column: 73, scope: !8584)
!8649 = !DILocation(line: 1433, column: 64, scope: !8584)
!8650 = !DILocation(line: 1433, column: 63, scope: !8584)
!8651 = !DILocation(line: 1433, column: 54, scope: !8584)
!8652 = !DILocation(line: 1433, column: 82, scope: !8584)
!8653 = !DILocation(line: 1433, column: 80, scope: !8584)
!8654 = !DILocation(line: 1433, column: 88, scope: !8584)
!8655 = !DILocation(line: 1433, column: 86, scope: !8584)
!8656 = !DILocation(line: 1433, column: 78, scope: !8584)
!8657 = !DILocation(line: 1433, column: 76, scope: !8584)
!8658 = !DILocation(line: 1433, column: 20, scope: !8584)
!8659 = !DILocalVariable(name: "my", scope: !8584, file: !971, line: 1434, type: !1011)
!8660 = !DILocation(line: 1434, column: 13, scope: !8584)
!8661 = !DILocation(line: 1434, column: 18, scope: !8584)
!8662 = !DILocation(line: 1434, column: 33, scope: !8584)
!8663 = !DILocation(line: 1434, column: 52, scope: !8584)
!8664 = !DILocation(line: 1434, column: 43, scope: !8584)
!8665 = !DILocation(line: 1434, column: 41, scope: !8584)
!8666 = !DILocation(line: 1434, column: 56, scope: !8584)
!8667 = !DILocation(line: 1434, column: 73, scope: !8584)
!8668 = !DILocation(line: 1434, column: 64, scope: !8584)
!8669 = !DILocation(line: 1434, column: 63, scope: !8584)
!8670 = !DILocation(line: 1434, column: 54, scope: !8584)
!8671 = !DILocation(line: 1434, column: 82, scope: !8584)
!8672 = !DILocation(line: 1434, column: 80, scope: !8584)
!8673 = !DILocation(line: 1434, column: 88, scope: !8584)
!8674 = !DILocation(line: 1434, column: 86, scope: !8584)
!8675 = !DILocation(line: 1434, column: 78, scope: !8584)
!8676 = !DILocation(line: 1434, column: 76, scope: !8584)
!8677 = !DILocation(line: 1434, column: 20, scope: !8584)
!8678 = !DILocation(line: 1436, column: 28, scope: !8584)
!8679 = !DILocation(line: 1436, column: 38, scope: !8584)
!8680 = !DILocation(line: 1436, column: 41, scope: !8584)
!8681 = !DILocation(line: 1436, column: 40, scope: !8584)
!8682 = !DILocation(line: 1436, column: 35, scope: !8584)
!8683 = !DILocation(line: 1436, column: 33, scope: !8584)
!8684 = !DILocation(line: 1436, column: 31, scope: !8584)
!8685 = !DILocation(line: 1436, column: 51, scope: !8584)
!8686 = !DILocation(line: 1436, column: 54, scope: !8584)
!8687 = !DILocation(line: 1436, column: 53, scope: !8584)
!8688 = !DILocation(line: 1436, column: 47, scope: !8584)
!8689 = !DILocation(line: 1436, column: 27, scope: !8584)
!8690 = !DILocation(line: 1436, column: 17, scope: !8584)
!8691 = !DILocation(line: 1436, column: 5, scope: !8584)
!8692 = !DILocation(line: 1436, column: 12, scope: !8584)
!8693 = !DILocation(line: 1436, column: 14, scope: !8584)
!8694 = !DILocation(line: 1436, column: 25, scope: !8584)
!8695 = !DILocation(line: 1437, column: 28, scope: !8584)
!8696 = !DILocation(line: 1437, column: 38, scope: !8584)
!8697 = !DILocation(line: 1437, column: 41, scope: !8584)
!8698 = !DILocation(line: 1437, column: 40, scope: !8584)
!8699 = !DILocation(line: 1437, column: 35, scope: !8584)
!8700 = !DILocation(line: 1437, column: 33, scope: !8584)
!8701 = !DILocation(line: 1437, column: 31, scope: !8584)
!8702 = !DILocation(line: 1437, column: 51, scope: !8584)
!8703 = !DILocation(line: 1437, column: 54, scope: !8584)
!8704 = !DILocation(line: 1437, column: 53, scope: !8584)
!8705 = !DILocation(line: 1437, column: 47, scope: !8584)
!8706 = !DILocation(line: 1437, column: 27, scope: !8584)
!8707 = !DILocation(line: 1437, column: 17, scope: !8584)
!8708 = !DILocation(line: 1437, column: 5, scope: !8584)
!8709 = !DILocation(line: 1437, column: 12, scope: !8584)
!8710 = !DILocation(line: 1437, column: 14, scope: !8584)
!8711 = !DILocation(line: 1437, column: 25, scope: !8584)
!8712 = !DILocation(line: 1438, column: 1, scope: !8584)
!8713 = distinct !DISubprogram(name: "pred_mv", scope: !971, file: !971, line: 1388, type: !8714, isLocal: true, isDefinition: true, scopeLine: 1389, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{null, !2880, !979, !979, !979, !979}
!8716 = !DILocalVariable(name: "block", arg: 1, scope: !8713, file: !971, line: 1388, type: !2880)
!8717 = !DILocation(line: 1388, column: 40, scope: !8713)
!8718 = !DILocalVariable(name: "stride", arg: 2, scope: !8713, file: !971, line: 1388, type: !979)
!8719 = !DILocation(line: 1388, column: 51, scope: !8713)
!8720 = !DILocalVariable(name: "x", arg: 3, scope: !8713, file: !971, line: 1388, type: !979)
!8721 = !DILocation(line: 1388, column: 63, scope: !8713)
!8722 = !DILocalVariable(name: "y", arg: 4, scope: !8713, file: !971, line: 1388, type: !979)
!8723 = !DILocation(line: 1388, column: 70, scope: !8713)
!8724 = !DILocalVariable(name: "ref", arg: 5, scope: !8713, file: !971, line: 1388, type: !979)
!8725 = !DILocation(line: 1388, column: 77, scope: !8713)
!8726 = !DILocalVariable(name: "pred", scope: !8713, file: !971, line: 1390, type: !1757)
!8727 = !DILocation(line: 1390, column: 14, scope: !8713)
!8728 = !DILocalVariable(name: "refmask", scope: !8713, file: !971, line: 1391, type: !979)
!8729 = !DILocation(line: 1391, column: 9, scope: !8713)
!8730 = !DILocation(line: 1391, column: 19, scope: !8713)
!8731 = !DILocation(line: 1391, column: 22, scope: !8713)
!8732 = !DILocalVariable(name: "mask", scope: !8713, file: !971, line: 1392, type: !979)
!8733 = !DILocation(line: 1392, column: 9, scope: !8713)
!8734 = !DILocation(line: 1392, column: 16, scope: !8713)
!8735 = !DILocation(line: 1392, column: 24, scope: !8713)
!8736 = !DILocalVariable(name: "n", scope: !8713, file: !971, line: 1393, type: !979)
!8737 = !DILocation(line: 1393, column: 9, scope: !8713)
!8738 = !DILocation(line: 1395, column: 9, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8713, file: !971, line: 1395, column: 9)
!8740 = !DILocation(line: 1395, column: 11, scope: !8739)
!8741 = !DILocation(line: 1395, column: 15, scope: !8742)
!8742 = !DILexicalBlockFile(scope: !8739, file: !971, discriminator: 1)
!8743 = !DILocation(line: 1395, column: 25, scope: !8742)
!8744 = !DILocation(line: 1395, column: 31, scope: !8742)
!8745 = !DILocation(line: 1395, column: 29, scope: !8742)
!8746 = !DILocation(line: 1395, column: 40, scope: !8742)
!8747 = !DILocation(line: 1395, column: 37, scope: !8742)
!8748 = !DILocation(line: 1395, column: 9, scope: !8742)
!8749 = !DILocation(line: 1396, column: 36, scope: !8739)
!8750 = !DILocation(line: 1396, column: 21, scope: !8739)
!8751 = !DILocation(line: 1396, column: 31, scope: !8739)
!8752 = !DILocation(line: 1396, column: 33, scope: !8739)
!8753 = !DILocation(line: 1396, column: 15, scope: !8739)
!8754 = !DILocation(line: 1396, column: 9, scope: !8739)
!8755 = !DILocation(line: 1396, column: 19, scope: !8739)
!8756 = !DILocation(line: 1398, column: 9, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8713, file: !971, line: 1398, column: 9)
!8758 = !DILocation(line: 1398, column: 11, scope: !8757)
!8759 = !DILocation(line: 1398, column: 22, scope: !8760)
!8760 = !DILexicalBlockFile(scope: !8757, file: !971, discriminator: 1)
!8761 = !DILocation(line: 1398, column: 21, scope: !8760)
!8762 = !DILocation(line: 1398, column: 15, scope: !8760)
!8763 = !DILocation(line: 1398, column: 30, scope: !8760)
!8764 = !DILocation(line: 1398, column: 36, scope: !8760)
!8765 = !DILocation(line: 1398, column: 34, scope: !8760)
!8766 = !DILocation(line: 1398, column: 45, scope: !8760)
!8767 = !DILocation(line: 1398, column: 42, scope: !8760)
!8768 = !DILocation(line: 1398, column: 9, scope: !8760)
!8769 = !DILocation(line: 1399, column: 41, scope: !8757)
!8770 = !DILocation(line: 1399, column: 21, scope: !8757)
!8771 = !DILocation(line: 1399, column: 28, scope: !8757)
!8772 = !DILocation(line: 1399, column: 27, scope: !8757)
!8773 = !DILocation(line: 1399, column: 36, scope: !8757)
!8774 = !DILocation(line: 1399, column: 38, scope: !8757)
!8775 = !DILocation(line: 1399, column: 15, scope: !8757)
!8776 = !DILocation(line: 1399, column: 9, scope: !8757)
!8777 = !DILocation(line: 1399, column: 19, scope: !8757)
!8778 = !DILocation(line: 1401, column: 9, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8713, file: !971, line: 1401, column: 9)
!8780 = !DILocation(line: 1401, column: 11, scope: !8779)
!8781 = !DILocation(line: 1401, column: 14, scope: !8782)
!8782 = !DILexicalBlockFile(scope: !8779, file: !971, discriminator: 1)
!8783 = !DILocation(line: 1401, column: 16, scope: !8782)
!8784 = !DILocation(line: 1401, column: 27, scope: !8785)
!8785 = !DILexicalBlockFile(scope: !8779, file: !971, discriminator: 2)
!8786 = !DILocation(line: 1401, column: 26, scope: !8785)
!8787 = !DILocation(line: 1401, column: 33, scope: !8785)
!8788 = !DILocation(line: 1401, column: 20, scope: !8785)
!8789 = !DILocation(line: 1401, column: 37, scope: !8785)
!8790 = !DILocation(line: 1401, column: 43, scope: !8785)
!8791 = !DILocation(line: 1401, column: 41, scope: !8785)
!8792 = !DILocation(line: 1401, column: 52, scope: !8785)
!8793 = !DILocation(line: 1401, column: 49, scope: !8785)
!8794 = !DILocation(line: 1401, column: 9, scope: !8785)
!8795 = !DILocation(line: 1402, column: 43, scope: !8779)
!8796 = !DILocation(line: 1402, column: 21, scope: !8779)
!8797 = !DILocation(line: 1402, column: 28, scope: !8779)
!8798 = !DILocation(line: 1402, column: 27, scope: !8779)
!8799 = !DILocation(line: 1402, column: 34, scope: !8779)
!8800 = !DILocation(line: 1402, column: 38, scope: !8779)
!8801 = !DILocation(line: 1402, column: 40, scope: !8779)
!8802 = !DILocation(line: 1402, column: 15, scope: !8779)
!8803 = !DILocation(line: 1402, column: 9, scope: !8779)
!8804 = !DILocation(line: 1402, column: 19, scope: !8779)
!8805 = !DILocation(line: 1404, column: 13, scope: !8713)
!8806 = !DILocation(line: 1404, column: 5, scope: !8713)
!8807 = !DILocation(line: 1406, column: 21, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8713, file: !971, line: 1404, column: 16)
!8809 = !DILocation(line: 1406, column: 9, scope: !8808)
!8810 = !DILocation(line: 1406, column: 16, scope: !8808)
!8811 = !DILocation(line: 1406, column: 18, scope: !8808)
!8812 = !DILocation(line: 1406, column: 29, scope: !8808)
!8813 = !DILocation(line: 1407, column: 21, scope: !8808)
!8814 = !DILocation(line: 1407, column: 9, scope: !8808)
!8815 = !DILocation(line: 1407, column: 16, scope: !8808)
!8816 = !DILocation(line: 1407, column: 18, scope: !8808)
!8817 = !DILocation(line: 1407, column: 29, scope: !8808)
!8818 = !DILocation(line: 1408, column: 9, scope: !8808)
!8819 = !DILocation(line: 1410, column: 31, scope: !8808)
!8820 = !DILocation(line: 1410, column: 21, scope: !8808)
!8821 = !DILocation(line: 1410, column: 9, scope: !8808)
!8822 = !DILocation(line: 1410, column: 16, scope: !8808)
!8823 = !DILocation(line: 1410, column: 18, scope: !8808)
!8824 = !DILocation(line: 1410, column: 29, scope: !8808)
!8825 = !DILocation(line: 1411, column: 31, scope: !8808)
!8826 = !DILocation(line: 1411, column: 21, scope: !8808)
!8827 = !DILocation(line: 1411, column: 9, scope: !8808)
!8828 = !DILocation(line: 1411, column: 16, scope: !8808)
!8829 = !DILocation(line: 1411, column: 18, scope: !8808)
!8830 = !DILocation(line: 1411, column: 29, scope: !8808)
!8831 = !DILocation(line: 1412, column: 9, scope: !8808)
!8832 = !DILocation(line: 1414, column: 32, scope: !8808)
!8833 = !DILocation(line: 1414, column: 45, scope: !8808)
!8834 = !DILocation(line: 1414, column: 43, scope: !8808)
!8835 = !DILocation(line: 1414, column: 56, scope: !8808)
!8836 = !DILocation(line: 1414, column: 61, scope: !8808)
!8837 = !DILocation(line: 1414, column: 31, scope: !8808)
!8838 = !DILocation(line: 1414, column: 21, scope: !8808)
!8839 = !DILocation(line: 1414, column: 9, scope: !8808)
!8840 = !DILocation(line: 1414, column: 16, scope: !8808)
!8841 = !DILocation(line: 1414, column: 18, scope: !8808)
!8842 = !DILocation(line: 1414, column: 29, scope: !8808)
!8843 = !DILocation(line: 1415, column: 32, scope: !8808)
!8844 = !DILocation(line: 1415, column: 45, scope: !8808)
!8845 = !DILocation(line: 1415, column: 43, scope: !8808)
!8846 = !DILocation(line: 1415, column: 56, scope: !8808)
!8847 = !DILocation(line: 1415, column: 61, scope: !8808)
!8848 = !DILocation(line: 1415, column: 31, scope: !8808)
!8849 = !DILocation(line: 1415, column: 21, scope: !8808)
!8850 = !DILocation(line: 1415, column: 9, scope: !8808)
!8851 = !DILocation(line: 1415, column: 16, scope: !8808)
!8852 = !DILocation(line: 1415, column: 18, scope: !8808)
!8853 = !DILocation(line: 1415, column: 29, scope: !8808)
!8854 = !DILocation(line: 1416, column: 9, scope: !8808)
!8855 = !DILocation(line: 1418, column: 40, scope: !8808)
!8856 = !DILocation(line: 1418, column: 52, scope: !8808)
!8857 = !DILocation(line: 1418, column: 64, scope: !8808)
!8858 = !DILocation(line: 1418, column: 31, scope: !8808)
!8859 = !DILocation(line: 1418, column: 21, scope: !8808)
!8860 = !DILocation(line: 1418, column: 9, scope: !8808)
!8861 = !DILocation(line: 1418, column: 16, scope: !8808)
!8862 = !DILocation(line: 1418, column: 18, scope: !8808)
!8863 = !DILocation(line: 1418, column: 29, scope: !8808)
!8864 = !DILocation(line: 1419, column: 40, scope: !8808)
!8865 = !DILocation(line: 1419, column: 52, scope: !8808)
!8866 = !DILocation(line: 1419, column: 64, scope: !8808)
!8867 = !DILocation(line: 1419, column: 31, scope: !8808)
!8868 = !DILocation(line: 1419, column: 21, scope: !8808)
!8869 = !DILocation(line: 1419, column: 9, scope: !8808)
!8870 = !DILocation(line: 1419, column: 16, scope: !8808)
!8871 = !DILocation(line: 1419, column: 18, scope: !8808)
!8872 = !DILocation(line: 1419, column: 29, scope: !8808)
!8873 = !DILocation(line: 1420, column: 9, scope: !8808)
!8874 = !DILocation(line: 1422, column: 1, scope: !8713)
!8875 = distinct !DISubprogram(name: "divide3", scope: !971, file: !971, line: 251, type: !8876, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!979, !979}
!8878 = !DILocalVariable(name: "x", arg: 1, scope: !8875, file: !971, line: 251, type: !979)
!8879 = !DILocation(line: 251, column: 31, scope: !8875)
!8880 = !DILocation(line: 253, column: 19, scope: !8875)
!8881 = !DILocation(line: 253, column: 20, scope: !8875)
!8882 = !DILocation(line: 253, column: 24, scope: !8875)
!8883 = !DILocation(line: 253, column: 31, scope: !8875)
!8884 = !DILocation(line: 253, column: 40, scope: !8875)
!8885 = !DILocation(line: 253, column: 5, scope: !8875)
!8886 = distinct !DISubprogram(name: "mid_pred", scope: !7457, file: !7457, line: 76, type: !8887, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{!979, !979, !979, !979}
!8889 = !DILocalVariable(name: "a", arg: 1, scope: !8886, file: !7457, line: 76, type: !979)
!8890 = !DILocation(line: 76, column: 55, scope: !8886)
!8891 = !DILocalVariable(name: "b", arg: 2, scope: !8886, file: !7457, line: 76, type: !979)
!8892 = !DILocation(line: 76, column: 62, scope: !8886)
!8893 = !DILocalVariable(name: "c", arg: 3, scope: !8886, file: !7457, line: 76, type: !979)
!8894 = !DILocation(line: 76, column: 69, scope: !8886)
!8895 = !DILocalVariable(name: "i", scope: !8886, file: !7457, line: 78, type: !979)
!8896 = !DILocation(line: 78, column: 9, scope: !8886)
!8897 = !DILocation(line: 78, column: 11, scope: !8886)
!8898 = !DILocation(line: 79, column: 5, scope: !8886)
!8899 = !DILocation(line: 88, column: 14, scope: !8886)
!8900 = !DILocation(line: 88, column: 22, scope: !8886)
!8901 = !{i32 208504, i32 208521, i32 208550, i32 208579, i32 208608, i32 208637, i32 208666, i32 208695}
!8902 = !DILocation(line: 90, column: 12, scope: !8886)
!8903 = !DILocation(line: 90, column: 5, scope: !8886)
!8904 = distinct !DISubprogram(name: "decode_lowdelay", scope: !971, file: !971, line: 931, type: !2668, isLocal: true, isDefinition: true, scopeLine: 932, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!8905 = !DILocalVariable(name: "s", arg: 1, scope: !8904, file: !971, line: 931, type: !2670)
!8906 = !DILocation(line: 931, column: 42, scope: !8904)
!8907 = !DILocalVariable(name: "avctx", scope: !8904, file: !971, line: 933, type: !1251)
!8908 = !DILocation(line: 933, column: 21, scope: !8904)
!8909 = !DILocation(line: 933, column: 29, scope: !8904)
!8910 = !DILocation(line: 933, column: 32, scope: !8904)
!8911 = !DILocalVariable(name: "slice_x", scope: !8904, file: !971, line: 934, type: !979)
!8912 = !DILocation(line: 934, column: 9, scope: !8904)
!8913 = !DILocalVariable(name: "slice_y", scope: !8904, file: !971, line: 934, type: !979)
!8914 = !DILocation(line: 934, column: 18, scope: !8904)
!8915 = !DILocalVariable(name: "bufsize", scope: !8904, file: !971, line: 934, type: !979)
!8916 = !DILocation(line: 934, column: 27, scope: !8904)
!8917 = !DILocalVariable(name: "coef_buf_size", scope: !8904, file: !971, line: 935, type: !1011)
!8918 = !DILocation(line: 935, column: 13, scope: !8904)
!8919 = !DILocalVariable(name: "bytes", scope: !8904, file: !971, line: 935, type: !1011)
!8920 = !DILocation(line: 935, column: 28, scope: !8904)
!8921 = !DILocalVariable(name: "buf", scope: !8904, file: !971, line: 936, type: !1119)
!8922 = !DILocation(line: 936, column: 20, scope: !8904)
!8923 = !DILocalVariable(name: "slices", scope: !8904, file: !971, line: 937, type: !1109)
!8924 = !DILocation(line: 937, column: 17, scope: !8904)
!8925 = !DILocalVariable(name: "tmp", scope: !8904, file: !971, line: 938, type: !8926)
!8926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8927, size: 800, align: 32, elements: !1800)
!8927 = !DIDerivedType(tag: DW_TAG_typedef, name: "SliceCoeffs", file: !971, line: 819, baseType: !8928)
!8928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SliceCoeffs", file: !971, line: 813, size: 160, align: 32, elements: !8929)
!8929 = !{!8930, !8931, !8932, !8933, !8934}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !8928, file: !971, line: 814, baseType: !979, size: 32, align: 32)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !8928, file: !971, line: 815, baseType: !979, size: 32, align: 32, offset: 32)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "tot_h", scope: !8928, file: !971, line: 816, baseType: !979, size: 32, align: 32, offset: 64)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "tot_v", scope: !8928, file: !971, line: 817, baseType: !979, size: 32, align: 32, offset: 96)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !8928, file: !971, line: 818, baseType: !979, size: 32, align: 32, offset: 128)
!8935 = !DILocation(line: 938, column: 17, scope: !8904)
!8936 = !DILocalVariable(name: "slice_num", scope: !8904, file: !971, line: 939, type: !979)
!8937 = !DILocation(line: 939, column: 9, scope: !8904)
!8938 = !DILocation(line: 941, column: 9, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8904, file: !971, line: 941, column: 9)
!8940 = !DILocation(line: 941, column: 12, scope: !8939)
!8941 = !DILocation(line: 941, column: 37, scope: !8939)
!8942 = !DILocation(line: 941, column: 40, scope: !8939)
!8943 = !DILocation(line: 941, column: 48, scope: !8939)
!8944 = !DILocation(line: 941, column: 51, scope: !8939)
!8945 = !DILocation(line: 941, column: 46, scope: !8939)
!8946 = !DILocation(line: 941, column: 33, scope: !8939)
!8947 = !DILocation(line: 941, column: 9, scope: !8904)
!8948 = !DILocation(line: 942, column: 44, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8939, file: !971, line: 941, column: 59)
!8950 = !DILocation(line: 942, column: 47, scope: !8949)
!8951 = !DILocation(line: 942, column: 65, scope: !8949)
!8952 = !DILocation(line: 942, column: 68, scope: !8949)
!8953 = !DILocation(line: 942, column: 76, scope: !8949)
!8954 = !DILocation(line: 942, column: 79, scope: !8949)
!8955 = !DILocation(line: 942, column: 74, scope: !8949)
!8956 = !DILocation(line: 942, column: 31, scope: !8949)
!8957 = !DILocation(line: 942, column: 9, scope: !8949)
!8958 = !DILocation(line: 942, column: 12, scope: !8949)
!8959 = !DILocation(line: 942, column: 29, scope: !8949)
!8960 = !DILocation(line: 943, column: 14, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8949, file: !971, line: 943, column: 13)
!8962 = !DILocation(line: 943, column: 17, scope: !8961)
!8963 = !DILocation(line: 943, column: 13, scope: !8949)
!8964 = !DILocation(line: 944, column: 20, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8961, file: !971, line: 943, column: 35)
!8966 = !DILocation(line: 944, column: 23, scope: !8965)
!8967 = !DILocation(line: 944, column: 13, scope: !8965)
!8968 = !DILocation(line: 945, column: 13, scope: !8965)
!8969 = !DILocation(line: 945, column: 16, scope: !8965)
!8970 = !DILocation(line: 945, column: 37, scope: !8965)
!8971 = !DILocation(line: 946, column: 13, scope: !8965)
!8972 = !DILocation(line: 948, column: 35, scope: !8949)
!8973 = !DILocation(line: 948, column: 38, scope: !8949)
!8974 = !DILocation(line: 948, column: 46, scope: !8949)
!8975 = !DILocation(line: 948, column: 49, scope: !8949)
!8976 = !DILocation(line: 948, column: 44, scope: !8949)
!8977 = !DILocation(line: 948, column: 9, scope: !8949)
!8978 = !DILocation(line: 948, column: 12, scope: !8949)
!8979 = !DILocation(line: 948, column: 33, scope: !8949)
!8980 = !DILocation(line: 949, column: 5, scope: !8949)
!8981 = !DILocation(line: 950, column: 14, scope: !8904)
!8982 = !DILocation(line: 950, column: 17, scope: !8904)
!8983 = !DILocation(line: 950, column: 12, scope: !8904)
!8984 = !DILocation(line: 954, column: 36, scope: !8904)
!8985 = !DILocation(line: 954, column: 39, scope: !8904)
!8986 = !DILocation(line: 954, column: 42, scope: !8904)
!8987 = !DILocation(line: 954, column: 48, scope: !8904)
!8988 = !DILocation(line: 954, column: 53, scope: !8904)
!8989 = !DILocation(line: 954, column: 56, scope: !8904)
!8990 = !DILocation(line: 954, column: 62, scope: !8904)
!8991 = !DILocation(line: 954, column: 70, scope: !8904)
!8992 = !DILocation(line: 954, column: 21, scope: !8904)
!8993 = !DILocation(line: 954, column: 75, scope: !8904)
!8994 = !DILocation(line: 954, column: 19, scope: !8904)
!8995 = !DILocation(line: 955, column: 22, scope: !8904)
!8996 = !DILocation(line: 955, column: 44, scope: !8904)
!8997 = !DILocation(line: 955, column: 47, scope: !8904)
!8998 = !DILocation(line: 955, column: 42, scope: !8904)
!8999 = !DILocation(line: 955, column: 36, scope: !8904)
!9000 = !DILocation(line: 955, column: 56, scope: !8904)
!9001 = !DILocation(line: 955, column: 19, scope: !8904)
!9002 = !DILocation(line: 957, column: 9, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8904, file: !971, line: 957, column: 9)
!9004 = !DILocation(line: 957, column: 12, scope: !9003)
!9005 = !DILocation(line: 957, column: 31, scope: !9003)
!9006 = !DILocation(line: 957, column: 38, scope: !9003)
!9007 = !DILocation(line: 957, column: 28, scope: !9003)
!9008 = !DILocation(line: 957, column: 51, scope: !9003)
!9009 = !DILocation(line: 958, column: 9, scope: !9003)
!9010 = !DILocation(line: 958, column: 12, scope: !9003)
!9011 = !DILocation(line: 958, column: 31, scope: !9003)
!9012 = !DILocation(line: 958, column: 28, scope: !9003)
!9013 = !DILocation(line: 957, column: 9, scope: !9014)
!9014 = !DILexicalBlockFile(scope: !8904, file: !971, discriminator: 1)
!9015 = !DILocation(line: 959, column: 30, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9003, file: !971, line: 958, column: 46)
!9017 = !DILocation(line: 959, column: 37, scope: !9016)
!9018 = !DILocation(line: 959, column: 9, scope: !9016)
!9019 = !DILocation(line: 959, column: 12, scope: !9016)
!9020 = !DILocation(line: 959, column: 28, scope: !9016)
!9021 = !DILocation(line: 960, column: 30, scope: !9016)
!9022 = !DILocation(line: 960, column: 9, scope: !9016)
!9023 = !DILocation(line: 960, column: 12, scope: !9016)
!9024 = !DILocation(line: 960, column: 28, scope: !9016)
!9025 = !DILocation(line: 961, column: 38, scope: !9016)
!9026 = !DILocation(line: 961, column: 41, scope: !9016)
!9027 = !DILocation(line: 961, column: 53, scope: !9016)
!9028 = !DILocation(line: 961, column: 60, scope: !9016)
!9029 = !DILocation(line: 961, column: 74, scope: !9016)
!9030 = !DILocation(line: 961, column: 77, scope: !9016)
!9031 = !DILocation(line: 961, column: 25, scope: !9016)
!9032 = !DILocation(line: 961, column: 9, scope: !9016)
!9033 = !DILocation(line: 961, column: 12, scope: !9016)
!9034 = !DILocation(line: 961, column: 23, scope: !9016)
!9035 = !DILocation(line: 962, column: 14, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9016, file: !971, line: 962, column: 13)
!9037 = !DILocation(line: 962, column: 17, scope: !9036)
!9038 = !DILocation(line: 962, column: 13, scope: !9016)
!9039 = !DILocation(line: 963, column: 20, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9036, file: !971, line: 962, column: 29)
!9041 = !DILocation(line: 963, column: 23, scope: !9040)
!9042 = !DILocation(line: 963, column: 13, scope: !9040)
!9043 = !DILocation(line: 964, column: 13, scope: !9040)
!9044 = !DILocation(line: 966, column: 5, scope: !9016)
!9045 = !DILocation(line: 968, column: 21, scope: !8904)
!9046 = !DILocation(line: 968, column: 24, scope: !8904)
!9047 = !DILocation(line: 968, column: 5, scope: !8904)
!9048 = !DILocation(line: 970, column: 11, scope: !8904)
!9049 = !DILocation(line: 970, column: 14, scope: !8904)
!9050 = !DILocation(line: 970, column: 17, scope: !8904)
!9051 = !DILocation(line: 970, column: 42, scope: !8904)
!9052 = !DILocation(line: 970, column: 45, scope: !8904)
!9053 = !DILocation(line: 970, column: 26, scope: !8904)
!9054 = !DILocation(line: 970, column: 48, scope: !8904)
!9055 = !DILocation(line: 970, column: 24, scope: !8904)
!9056 = !DILocation(line: 970, column: 9, scope: !8904)
!9057 = !DILocation(line: 971, column: 30, scope: !8904)
!9058 = !DILocation(line: 971, column: 33, scope: !8904)
!9059 = !DILocation(line: 971, column: 15, scope: !8904)
!9060 = !DILocation(line: 971, column: 13, scope: !8904)
!9061 = !DILocation(line: 973, column: 9, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8904, file: !971, line: 973, column: 9)
!9063 = !DILocation(line: 973, column: 12, scope: !9062)
!9064 = !DILocation(line: 973, column: 9, scope: !8904)
!9065 = !DILocalVariable(name: "i", scope: !9066, file: !971, line: 974, type: !979)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !971, line: 973, column: 24)
!9067 = !DILocation(line: 974, column: 13, scope: !9066)
!9068 = !DILocation(line: 976, column: 22, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9066, file: !971, line: 976, column: 9)
!9070 = !DILocation(line: 976, column: 14, scope: !9069)
!9071 = !DILocation(line: 976, column: 27, scope: !9072)
!9072 = !DILexicalBlockFile(scope: !9073, file: !971, discriminator: 1)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !971, line: 976, column: 9)
!9074 = !DILocation(line: 976, column: 35, scope: !9072)
!9075 = !DILocation(line: 976, column: 39, scope: !9072)
!9076 = !DILocation(line: 976, column: 42, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !9073, file: !971, discriminator: 2)
!9078 = !DILocation(line: 976, column: 52, scope: !9077)
!9079 = !DILocation(line: 976, column: 55, scope: !9077)
!9080 = !DILocation(line: 976, column: 50, scope: !9077)
!9081 = !DILocation(line: 976, column: 9, scope: !9082)
!9082 = !DILexicalBlockFile(scope: !9069, file: !971, discriminator: 3)
!9083 = !DILocation(line: 977, column: 26, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !971, line: 977, column: 13)
!9085 = distinct !DILexicalBlock(scope: !9073, file: !971, line: 976, column: 73)
!9086 = !DILocation(line: 977, column: 18, scope: !9084)
!9087 = !DILocation(line: 977, column: 31, scope: !9088)
!9088 = !DILexicalBlockFile(scope: !9089, file: !971, discriminator: 1)
!9089 = distinct !DILexicalBlock(scope: !9084, file: !971, line: 977, column: 13)
!9090 = !DILocation(line: 977, column: 39, scope: !9088)
!9091 = !DILocation(line: 977, column: 43, scope: !9088)
!9092 = !DILocation(line: 977, column: 46, scope: !9093)
!9093 = !DILexicalBlockFile(scope: !9089, file: !971, discriminator: 2)
!9094 = !DILocation(line: 977, column: 56, scope: !9093)
!9095 = !DILocation(line: 977, column: 59, scope: !9093)
!9096 = !DILocation(line: 977, column: 54, scope: !9093)
!9097 = !DILocation(line: 977, column: 13, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9084, file: !971, discriminator: 3)
!9099 = !DILocation(line: 978, column: 25, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9089, file: !971, line: 977, column: 77)
!9101 = !DILocation(line: 978, column: 28, scope: !9100)
!9102 = !DILocation(line: 978, column: 40, scope: !9100)
!9103 = !DILocation(line: 978, column: 53, scope: !9100)
!9104 = !DILocation(line: 978, column: 23, scope: !9100)
!9105 = !DILocation(line: 979, column: 24, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9100, file: !971, line: 979, column: 17)
!9107 = !DILocation(line: 979, column: 22, scope: !9106)
!9108 = !DILocation(line: 979, column: 29, scope: !9109)
!9109 = !DILexicalBlockFile(scope: !9110, file: !971, discriminator: 1)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !971, line: 979, column: 17)
!9111 = !DILocation(line: 979, column: 31, scope: !9109)
!9112 = !DILocation(line: 979, column: 17, scope: !9109)
!9113 = !DILocation(line: 980, column: 25, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !971, line: 980, column: 25)
!9115 = distinct !DILexicalBlock(scope: !9110, file: !971, line: 979, column: 41)
!9116 = !DILocation(line: 980, column: 34, scope: !9114)
!9117 = !DILocation(line: 980, column: 41, scope: !9114)
!9118 = !DILocation(line: 980, column: 31, scope: !9114)
!9119 = !DILocation(line: 980, column: 25, scope: !9115)
!9120 = !DILocation(line: 981, column: 38, scope: !9114)
!9121 = !DILocation(line: 981, column: 34, scope: !9114)
!9122 = !DILocation(line: 981, column: 47, scope: !9114)
!9123 = !DILocation(line: 981, column: 50, scope: !9114)
!9124 = !DILocation(line: 981, column: 62, scope: !9114)
!9125 = !DILocation(line: 981, column: 45, scope: !9114)
!9126 = !DILocation(line: 981, column: 74, scope: !9114)
!9127 = !DILocation(line: 981, column: 31, scope: !9114)
!9128 = !DILocation(line: 981, column: 25, scope: !9114)
!9129 = !DILocation(line: 982, column: 17, scope: !9115)
!9130 = !DILocation(line: 979, column: 37, scope: !9131)
!9131 = !DILexicalBlockFile(scope: !9110, file: !971, discriminator: 2)
!9132 = !DILocation(line: 979, column: 17, scope: !9131)
!9133 = distinct !{!9133, !9134}
!9134 = !DILocation(line: 979, column: 17, scope: !9100)
!9135 = !DILocation(line: 983, column: 21, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9100, file: !971, line: 983, column: 21)
!9137 = !DILocation(line: 983, column: 27, scope: !9136)
!9138 = !DILocation(line: 983, column: 41, scope: !9136)
!9139 = !DILocation(line: 983, column: 44, scope: !9140)
!9140 = !DILexicalBlockFile(scope: !9136, file: !971, discriminator: 1)
!9141 = !DILocation(line: 983, column: 49, scope: !9140)
!9142 = !DILocation(line: 983, column: 54, scope: !9140)
!9143 = !DILocation(line: 983, column: 52, scope: !9140)
!9144 = !DILocation(line: 983, column: 21, scope: !9140)
!9145 = !DILocation(line: 984, column: 28, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9136, file: !971, line: 983, column: 63)
!9147 = !DILocation(line: 984, column: 31, scope: !9146)
!9148 = !DILocation(line: 984, column: 21, scope: !9146)
!9149 = !DILocation(line: 985, column: 21, scope: !9146)
!9150 = !DILocation(line: 988, column: 43, scope: !9100)
!9151 = !DILocation(line: 988, column: 24, scope: !9100)
!9152 = !DILocation(line: 988, column: 17, scope: !9100)
!9153 = !DILocation(line: 988, column: 35, scope: !9100)
!9154 = !DILocation(line: 988, column: 41, scope: !9100)
!9155 = !DILocation(line: 989, column: 45, scope: !9100)
!9156 = !DILocation(line: 989, column: 24, scope: !9100)
!9157 = !DILocation(line: 989, column: 17, scope: !9100)
!9158 = !DILocation(line: 989, column: 35, scope: !9100)
!9159 = !DILocation(line: 989, column: 43, scope: !9100)
!9160 = !DILocation(line: 990, column: 45, scope: !9100)
!9161 = !DILocation(line: 990, column: 24, scope: !9100)
!9162 = !DILocation(line: 990, column: 17, scope: !9100)
!9163 = !DILocation(line: 990, column: 35, scope: !9100)
!9164 = !DILocation(line: 990, column: 43, scope: !9100)
!9165 = !DILocation(line: 991, column: 39, scope: !9100)
!9166 = !DILocation(line: 991, column: 32, scope: !9100)
!9167 = !DILocation(line: 991, column: 50, scope: !9100)
!9168 = !DILocation(line: 991, column: 54, scope: !9100)
!9169 = !DILocation(line: 991, column: 59, scope: !9100)
!9170 = !DILocation(line: 991, column: 17, scope: !9100)
!9171 = !DILocation(line: 992, column: 26, scope: !9100)
!9172 = !DILocation(line: 994, column: 24, scope: !9100)
!9173 = !DILocation(line: 994, column: 21, scope: !9100)
!9174 = !DILocation(line: 995, column: 21, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9100, file: !971, line: 995, column: 21)
!9176 = !DILocation(line: 995, column: 28, scope: !9175)
!9177 = !DILocation(line: 995, column: 34, scope: !9175)
!9178 = !DILocation(line: 995, column: 31, scope: !9175)
!9179 = !DILocation(line: 995, column: 21, scope: !9100)
!9180 = !DILocation(line: 996, column: 32, scope: !9175)
!9181 = !DILocation(line: 996, column: 37, scope: !9175)
!9182 = !DILocation(line: 996, column: 29, scope: !9175)
!9183 = !DILocation(line: 996, column: 21, scope: !9175)
!9184 = !DILocation(line: 998, column: 29, scope: !9175)
!9185 = !DILocation(line: 999, column: 13, scope: !9100)
!9186 = !DILocation(line: 977, column: 73, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !9089, file: !971, discriminator: 4)
!9188 = !DILocation(line: 977, column: 13, scope: !9187)
!9189 = distinct !{!9189, !9190}
!9190 = !DILocation(line: 977, column: 13, scope: !9085)
!9191 = !DILocation(line: 1000, column: 9, scope: !9085)
!9192 = !DILocation(line: 976, column: 69, scope: !9193)
!9193 = !DILexicalBlockFile(scope: !9073, file: !971, discriminator: 4)
!9194 = !DILocation(line: 976, column: 9, scope: !9193)
!9195 = distinct !{!9195, !9196}
!9196 = !DILocation(line: 976, column: 9, scope: !9066)
!9197 = !DILocation(line: 1002, column: 13, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9066, file: !971, line: 1002, column: 13)
!9199 = !DILocation(line: 1002, column: 16, scope: !9198)
!9200 = !DILocation(line: 1002, column: 22, scope: !9198)
!9201 = !DILocation(line: 1002, column: 25, scope: !9198)
!9202 = !DILocation(line: 1002, column: 21, scope: !9198)
!9203 = !DILocation(line: 1002, column: 34, scope: !9198)
!9204 = !DILocation(line: 1002, column: 31, scope: !9198)
!9205 = !DILocation(line: 1002, column: 13, scope: !9066)
!9206 = !DILocation(line: 1003, column: 20, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9198, file: !971, line: 1002, column: 45)
!9208 = !DILocation(line: 1003, column: 23, scope: !9207)
!9209 = !DILocation(line: 1003, column: 13, scope: !9207)
!9210 = !DILocation(line: 1004, column: 13, scope: !9207)
!9211 = !DILocation(line: 1007, column: 9, scope: !9066)
!9212 = !DILocation(line: 1007, column: 16, scope: !9066)
!9213 = !DILocation(line: 1007, column: 25, scope: !9066)
!9214 = !DILocation(line: 1007, column: 53, scope: !9066)
!9215 = !DILocation(line: 1007, column: 66, scope: !9066)
!9216 = !DILocation(line: 1007, column: 69, scope: !9066)
!9217 = !DILocation(line: 1008, column: 5, scope: !9066)
!9218 = !DILocation(line: 1009, column: 22, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !971, line: 1009, column: 9)
!9220 = distinct !DILexicalBlock(scope: !9062, file: !971, line: 1008, column: 12)
!9221 = !DILocation(line: 1009, column: 14, scope: !9219)
!9222 = !DILocation(line: 1009, column: 27, scope: !9223)
!9223 = !DILexicalBlockFile(scope: !9224, file: !971, discriminator: 1)
!9224 = distinct !DILexicalBlock(scope: !9219, file: !971, line: 1009, column: 9)
!9225 = !DILocation(line: 1009, column: 35, scope: !9223)
!9226 = !DILocation(line: 1009, column: 39, scope: !9223)
!9227 = !DILocation(line: 1009, column: 42, scope: !9228)
!9228 = !DILexicalBlockFile(scope: !9224, file: !971, discriminator: 2)
!9229 = !DILocation(line: 1009, column: 52, scope: !9228)
!9230 = !DILocation(line: 1009, column: 55, scope: !9228)
!9231 = !DILocation(line: 1009, column: 50, scope: !9228)
!9232 = !DILocation(line: 1009, column: 9, scope: !9233)
!9233 = !DILexicalBlockFile(scope: !9219, file: !971, discriminator: 3)
!9234 = !DILocation(line: 1010, column: 26, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !971, line: 1010, column: 13)
!9236 = distinct !DILexicalBlock(scope: !9224, file: !971, line: 1009, column: 73)
!9237 = !DILocation(line: 1010, column: 18, scope: !9235)
!9238 = !DILocation(line: 1010, column: 31, scope: !9239)
!9239 = !DILexicalBlockFile(scope: !9240, file: !971, discriminator: 1)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !971, line: 1010, column: 13)
!9241 = !DILocation(line: 1010, column: 39, scope: !9239)
!9242 = !DILocation(line: 1010, column: 43, scope: !9239)
!9243 = !DILocation(line: 1010, column: 46, scope: !9244)
!9244 = !DILexicalBlockFile(scope: !9240, file: !971, discriminator: 2)
!9245 = !DILocation(line: 1010, column: 56, scope: !9244)
!9246 = !DILocation(line: 1010, column: 59, scope: !9244)
!9247 = !DILocation(line: 1010, column: 54, scope: !9244)
!9248 = !DILocation(line: 1010, column: 13, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !9235, file: !971, discriminator: 3)
!9250 = !DILocation(line: 1011, column: 26, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9240, file: !971, line: 1010, column: 77)
!9252 = !DILocation(line: 1011, column: 35, scope: !9251)
!9253 = !DILocation(line: 1011, column: 25, scope: !9251)
!9254 = !DILocation(line: 1011, column: 50, scope: !9251)
!9255 = !DILocation(line: 1011, column: 53, scope: !9251)
!9256 = !DILocation(line: 1011, column: 62, scope: !9251)
!9257 = !DILocation(line: 1011, column: 68, scope: !9251)
!9258 = !DILocation(line: 1011, column: 41, scope: !9251)
!9259 = !DILocation(line: 1011, column: 39, scope: !9251)
!9260 = !DILocation(line: 1011, column: 74, scope: !9251)
!9261 = !DILocation(line: 1011, column: 77, scope: !9251)
!9262 = !DILocation(line: 1011, column: 86, scope: !9251)
!9263 = !DILocation(line: 1011, column: 92, scope: !9251)
!9264 = !DILocation(line: 1011, column: 72, scope: !9251)
!9265 = !DILocation(line: 1012, column: 26, scope: !9251)
!9266 = !DILocation(line: 1012, column: 47, scope: !9251)
!9267 = !DILocation(line: 1012, column: 50, scope: !9251)
!9268 = !DILocation(line: 1012, column: 59, scope: !9251)
!9269 = !DILocation(line: 1012, column: 65, scope: !9251)
!9270 = !DILocation(line: 1012, column: 38, scope: !9251)
!9271 = !DILocation(line: 1012, column: 36, scope: !9251)
!9272 = !DILocation(line: 1012, column: 71, scope: !9251)
!9273 = !DILocation(line: 1012, column: 74, scope: !9251)
!9274 = !DILocation(line: 1012, column: 83, scope: !9251)
!9275 = !DILocation(line: 1012, column: 89, scope: !9251)
!9276 = !DILocation(line: 1012, column: 69, scope: !9251)
!9277 = !DILocation(line: 1012, column: 24, scope: !9251)
!9278 = !DILocation(line: 1011, column: 23, scope: !9251)
!9279 = !DILocation(line: 1013, column: 21, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9251, file: !971, line: 1013, column: 21)
!9281 = !DILocation(line: 1013, column: 27, scope: !9280)
!9282 = !DILocation(line: 1013, column: 41, scope: !9280)
!9283 = !DILocation(line: 1013, column: 44, scope: !9284)
!9284 = !DILexicalBlockFile(scope: !9280, file: !971, discriminator: 1)
!9285 = !DILocation(line: 1013, column: 49, scope: !9284)
!9286 = !DILocation(line: 1013, column: 54, scope: !9284)
!9287 = !DILocation(line: 1013, column: 52, scope: !9284)
!9288 = !DILocation(line: 1013, column: 21, scope: !9284)
!9289 = !DILocation(line: 1014, column: 28, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9280, file: !971, line: 1013, column: 63)
!9291 = !DILocation(line: 1014, column: 31, scope: !9290)
!9292 = !DILocation(line: 1014, column: 21, scope: !9290)
!9293 = !DILocation(line: 1015, column: 21, scope: !9290)
!9294 = !DILocation(line: 1017, column: 43, scope: !9251)
!9295 = !DILocation(line: 1017, column: 24, scope: !9251)
!9296 = !DILocation(line: 1017, column: 17, scope: !9251)
!9297 = !DILocation(line: 1017, column: 35, scope: !9251)
!9298 = !DILocation(line: 1017, column: 41, scope: !9251)
!9299 = !DILocation(line: 1018, column: 45, scope: !9251)
!9300 = !DILocation(line: 1018, column: 24, scope: !9251)
!9301 = !DILocation(line: 1018, column: 17, scope: !9251)
!9302 = !DILocation(line: 1018, column: 35, scope: !9251)
!9303 = !DILocation(line: 1018, column: 43, scope: !9251)
!9304 = !DILocation(line: 1019, column: 45, scope: !9251)
!9305 = !DILocation(line: 1019, column: 24, scope: !9251)
!9306 = !DILocation(line: 1019, column: 17, scope: !9251)
!9307 = !DILocation(line: 1019, column: 35, scope: !9251)
!9308 = !DILocation(line: 1019, column: 43, scope: !9251)
!9309 = !DILocation(line: 1020, column: 39, scope: !9251)
!9310 = !DILocation(line: 1020, column: 32, scope: !9251)
!9311 = !DILocation(line: 1020, column: 50, scope: !9251)
!9312 = !DILocation(line: 1020, column: 54, scope: !9251)
!9313 = !DILocation(line: 1020, column: 59, scope: !9251)
!9314 = !DILocation(line: 1020, column: 17, scope: !9251)
!9315 = !DILocation(line: 1021, column: 26, scope: !9251)
!9316 = !DILocation(line: 1023, column: 24, scope: !9251)
!9317 = !DILocation(line: 1023, column: 21, scope: !9251)
!9318 = !DILocation(line: 1024, column: 21, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9251, file: !971, line: 1024, column: 21)
!9320 = !DILocation(line: 1024, column: 28, scope: !9319)
!9321 = !DILocation(line: 1024, column: 34, scope: !9319)
!9322 = !DILocation(line: 1024, column: 31, scope: !9319)
!9323 = !DILocation(line: 1024, column: 21, scope: !9251)
!9324 = !DILocation(line: 1025, column: 32, scope: !9319)
!9325 = !DILocation(line: 1025, column: 37, scope: !9319)
!9326 = !DILocation(line: 1025, column: 29, scope: !9319)
!9327 = !DILocation(line: 1025, column: 21, scope: !9319)
!9328 = !DILocation(line: 1027, column: 29, scope: !9319)
!9329 = !DILocation(line: 1028, column: 13, scope: !9251)
!9330 = !DILocation(line: 1010, column: 73, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !9240, file: !971, discriminator: 4)
!9332 = !DILocation(line: 1010, column: 13, scope: !9331)
!9333 = distinct !{!9333, !9334}
!9334 = !DILocation(line: 1010, column: 13, scope: !9236)
!9335 = !DILocation(line: 1029, column: 9, scope: !9236)
!9336 = !DILocation(line: 1009, column: 69, scope: !9337)
!9337 = !DILexicalBlockFile(scope: !9224, file: !971, discriminator: 4)
!9338 = !DILocation(line: 1009, column: 9, scope: !9337)
!9339 = distinct !{!9339, !9340}
!9340 = !DILocation(line: 1009, column: 9, scope: !9220)
!9341 = !DILocation(line: 1030, column: 9, scope: !9220)
!9342 = !DILocation(line: 1030, column: 16, scope: !9220)
!9343 = !DILocation(line: 1030, column: 24, scope: !9220)
!9344 = !DILocation(line: 1030, column: 54, scope: !9220)
!9345 = !DILocation(line: 1030, column: 67, scope: !9220)
!9346 = !DILocation(line: 1034, column: 9, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !8904, file: !971, line: 1034, column: 9)
!9348 = !DILocation(line: 1034, column: 12, scope: !9347)
!9349 = !DILocation(line: 1034, column: 9, scope: !8904)
!9350 = !DILocation(line: 1035, column: 13, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !971, line: 1035, column: 13)
!9352 = distinct !DILexicalBlock(scope: !9347, file: !971, line: 1034, column: 27)
!9353 = !DILocation(line: 1035, column: 16, scope: !9351)
!9354 = !DILocation(line: 1035, column: 13, scope: !9352)
!9355 = !DILocation(line: 1036, column: 37, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9351, file: !971, line: 1035, column: 24)
!9357 = !DILocation(line: 1036, column: 40, scope: !9356)
!9358 = !DILocation(line: 1036, column: 49, scope: !9356)
!9359 = !DILocation(line: 1036, column: 13, scope: !9356)
!9360 = !DILocation(line: 1037, column: 37, scope: !9356)
!9361 = !DILocation(line: 1037, column: 40, scope: !9356)
!9362 = !DILocation(line: 1037, column: 49, scope: !9356)
!9363 = !DILocation(line: 1037, column: 13, scope: !9356)
!9364 = !DILocation(line: 1038, column: 37, scope: !9356)
!9365 = !DILocation(line: 1038, column: 40, scope: !9356)
!9366 = !DILocation(line: 1038, column: 49, scope: !9356)
!9367 = !DILocation(line: 1038, column: 13, scope: !9356)
!9368 = !DILocation(line: 1039, column: 9, scope: !9356)
!9369 = !DILocation(line: 1040, column: 36, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9351, file: !971, line: 1039, column: 16)
!9371 = !DILocation(line: 1040, column: 39, scope: !9370)
!9372 = !DILocation(line: 1040, column: 48, scope: !9370)
!9373 = !DILocation(line: 1040, column: 13, scope: !9370)
!9374 = !DILocation(line: 1041, column: 36, scope: !9370)
!9375 = !DILocation(line: 1041, column: 39, scope: !9370)
!9376 = !DILocation(line: 1041, column: 48, scope: !9370)
!9377 = !DILocation(line: 1041, column: 13, scope: !9370)
!9378 = !DILocation(line: 1042, column: 36, scope: !9370)
!9379 = !DILocation(line: 1042, column: 39, scope: !9370)
!9380 = !DILocation(line: 1042, column: 48, scope: !9370)
!9381 = !DILocation(line: 1042, column: 13, scope: !9370)
!9382 = !DILocation(line: 1044, column: 5, scope: !9352)
!9383 = !DILocation(line: 1046, column: 5, scope: !8904)
!9384 = !DILocation(line: 1047, column: 1, scope: !8904)
!9385 = distinct !DISubprogram(name: "decode_component", scope: !971, file: !971, line: 660, type: !4856, isLocal: true, isDefinition: true, scopeLine: 661, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!9386 = !DILocalVariable(name: "s", arg: 1, scope: !9385, file: !971, line: 660, type: !2670)
!9387 = !DILocation(line: 660, column: 43, scope: !9385)
!9388 = !DILocalVariable(name: "comp", arg: 2, scope: !9385, file: !971, line: 660, type: !979)
!9389 = !DILocation(line: 660, column: 50, scope: !9385)
!9390 = !DILocalVariable(name: "avctx", scope: !9385, file: !971, line: 662, type: !1251)
!9391 = !DILocation(line: 662, column: 21, scope: !9385)
!9392 = !DILocation(line: 662, column: 29, scope: !9385)
!9393 = !DILocation(line: 662, column: 32, scope: !9385)
!9394 = !DILocalVariable(name: "bands", scope: !9385, file: !971, line: 663, type: !9395)
!9395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7223, size: 1024, align: 64, elements: !1766)
!9396 = !DILocation(line: 663, column: 14, scope: !9385)
!9397 = !DILocalVariable(name: "orientation", scope: !9385, file: !971, line: 664, type: !970)
!9398 = !DILocation(line: 664, column: 24, scope: !9385)
!9399 = !DILocalVariable(name: "level", scope: !9385, file: !971, line: 665, type: !979)
!9400 = !DILocation(line: 665, column: 9, scope: !9385)
!9401 = !DILocalVariable(name: "num_bands", scope: !9385, file: !971, line: 665, type: !979)
!9402 = !DILocation(line: 665, column: 16, scope: !9385)
!9403 = !DILocalVariable(name: "ret", scope: !9385, file: !971, line: 666, type: !9404)
!9404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 512, align: 32, elements: !1766)
!9405 = !DILocation(line: 666, column: 9, scope: !9385)
!9406 = !DILocalVariable(name: "i", scope: !9385, file: !971, line: 667, type: !979)
!9407 = !DILocation(line: 667, column: 9, scope: !9385)
!9408 = !DILocalVariable(name: "damaged_count", scope: !9385, file: !971, line: 668, type: !979)
!9409 = !DILocation(line: 668, column: 9, scope: !9385)
!9410 = !DILocation(line: 671, column: 16, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9385, file: !971, line: 671, column: 5)
!9412 = !DILocation(line: 671, column: 10, scope: !9411)
!9413 = !DILocation(line: 671, column: 21, scope: !9414)
!9414 = !DILexicalBlockFile(scope: !9415, file: !971, discriminator: 1)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !971, line: 671, column: 5)
!9416 = !DILocation(line: 671, column: 29, scope: !9414)
!9417 = !DILocation(line: 671, column: 32, scope: !9414)
!9418 = !DILocation(line: 671, column: 27, scope: !9414)
!9419 = !DILocation(line: 671, column: 5, scope: !9414)
!9420 = !DILocation(line: 672, column: 30, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !971, line: 672, column: 9)
!9422 = distinct !DILexicalBlock(scope: !9415, file: !971, line: 671, column: 56)
!9423 = !DILocation(line: 672, column: 29, scope: !9421)
!9424 = !DILocation(line: 672, column: 28, scope: !9421)
!9425 = !DILocation(line: 672, column: 26, scope: !9421)
!9426 = !DILocation(line: 672, column: 14, scope: !9421)
!9427 = !DILocation(line: 672, column: 37, scope: !9428)
!9428 = !DILexicalBlockFile(scope: !9429, file: !971, discriminator: 1)
!9429 = distinct !DILexicalBlock(scope: !9421, file: !971, line: 672, column: 9)
!9430 = !DILocation(line: 672, column: 49, scope: !9428)
!9431 = !DILocation(line: 672, column: 9, scope: !9428)
!9432 = !DILocalVariable(name: "b", scope: !9433, file: !971, line: 673, type: !7223)
!9433 = distinct !DILexicalBlock(scope: !9429, file: !971, line: 672, column: 69)
!9434 = !DILocation(line: 673, column: 22, scope: !9433)
!9435 = !DILocation(line: 673, column: 54, scope: !9433)
!9436 = !DILocation(line: 673, column: 27, scope: !9433)
!9437 = !DILocation(line: 673, column: 47, scope: !9433)
!9438 = !DILocation(line: 673, column: 36, scope: !9433)
!9439 = !DILocation(line: 673, column: 30, scope: !9433)
!9440 = !DILocation(line: 673, column: 42, scope: !9433)
!9441 = !DILocation(line: 674, column: 34, scope: !9433)
!9442 = !DILocation(line: 674, column: 28, scope: !9433)
!9443 = !DILocation(line: 674, column: 13, scope: !9433)
!9444 = !DILocation(line: 674, column: 32, scope: !9433)
!9445 = !DILocation(line: 676, column: 29, scope: !9433)
!9446 = !DILocation(line: 676, column: 32, scope: !9433)
!9447 = !DILocation(line: 676, column: 13, scope: !9433)
!9448 = !DILocation(line: 678, column: 52, scope: !9433)
!9449 = !DILocation(line: 678, column: 55, scope: !9433)
!9450 = !DILocation(line: 678, column: 25, scope: !9433)
!9451 = !DILocation(line: 678, column: 13, scope: !9433)
!9452 = !DILocation(line: 678, column: 16, scope: !9433)
!9453 = !DILocation(line: 678, column: 23, scope: !9433)
!9454 = !DILocation(line: 679, column: 17, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9433, file: !971, line: 679, column: 17)
!9456 = !DILocation(line: 679, column: 20, scope: !9455)
!9457 = !DILocation(line: 679, column: 17, scope: !9433)
!9458 = !DILocation(line: 680, column: 55, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9455, file: !971, line: 679, column: 28)
!9460 = !DILocation(line: 680, column: 58, scope: !9459)
!9461 = !DILocation(line: 680, column: 28, scope: !9459)
!9462 = !DILocation(line: 680, column: 17, scope: !9459)
!9463 = !DILocation(line: 680, column: 20, scope: !9459)
!9464 = !DILocation(line: 680, column: 26, scope: !9459)
!9465 = !DILocation(line: 681, column: 21, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9459, file: !971, line: 681, column: 21)
!9467 = !DILocation(line: 681, column: 24, scope: !9466)
!9468 = !DILocation(line: 681, column: 30, scope: !9466)
!9469 = !DILocation(line: 681, column: 21, scope: !9459)
!9470 = !DILocation(line: 682, column: 28, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !971, line: 681, column: 106)
!9472 = !DILocation(line: 682, column: 31, scope: !9471)
!9473 = !DILocation(line: 682, column: 68, scope: !9471)
!9474 = !DILocation(line: 682, column: 71, scope: !9471)
!9475 = !DILocation(line: 682, column: 21, scope: !9471)
!9476 = !DILocation(line: 683, column: 21, scope: !9471)
!9477 = !DILocation(line: 683, column: 24, scope: !9471)
!9478 = !DILocation(line: 683, column: 30, scope: !9471)
!9479 = !DILocation(line: 684, column: 21, scope: !9471)
!9480 = !DILocation(line: 686, column: 33, scope: !9459)
!9481 = !DILocation(line: 686, column: 36, scope: !9459)
!9482 = !DILocation(line: 686, column: 17, scope: !9459)
!9483 = !DILocation(line: 687, column: 33, scope: !9459)
!9484 = !DILocation(line: 687, column: 36, scope: !9459)
!9485 = !DILocation(line: 687, column: 39, scope: !9459)
!9486 = !DILocation(line: 687, column: 64, scope: !9459)
!9487 = !DILocation(line: 687, column: 67, scope: !9459)
!9488 = !DILocation(line: 687, column: 48, scope: !9459)
!9489 = !DILocation(line: 687, column: 70, scope: !9459)
!9490 = !DILocation(line: 687, column: 46, scope: !9459)
!9491 = !DILocation(line: 687, column: 17, scope: !9459)
!9492 = !DILocation(line: 687, column: 20, scope: !9459)
!9493 = !DILocation(line: 687, column: 31, scope: !9459)
!9494 = !DILocation(line: 688, column: 31, scope: !9459)
!9495 = !DILocation(line: 688, column: 34, scope: !9459)
!9496 = !DILocation(line: 688, column: 62, scope: !9459)
!9497 = !DILocation(line: 688, column: 65, scope: !9459)
!9498 = !DILocation(line: 688, column: 47, scope: !9459)
!9499 = !DILocation(line: 688, column: 68, scope: !9459)
!9500 = !DILocation(line: 688, column: 72, scope: !9459)
!9501 = !DILocation(line: 688, column: 46, scope: !9459)
!9502 = !DILocation(line: 688, column: 96, scope: !9503)
!9503 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 1)
!9504 = !DILocation(line: 688, column: 99, scope: !9503)
!9505 = !DILocation(line: 688, column: 81, scope: !9503)
!9506 = !DILocation(line: 688, column: 102, scope: !9503)
!9507 = !DILocation(line: 688, column: 46, scope: !9503)
!9508 = !DILocation(line: 688, column: 46, scope: !9509)
!9509 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 2)
!9510 = !DILocation(line: 688, column: 46, scope: !9511)
!9511 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 3)
!9512 = !DILocation(line: 688, column: 42, scope: !9511)
!9513 = !DILocation(line: 688, column: 30, scope: !9511)
!9514 = !DILocation(line: 688, column: 134, scope: !9515)
!9515 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 4)
!9516 = !DILocation(line: 688, column: 137, scope: !9515)
!9517 = !DILocation(line: 688, column: 119, scope: !9515)
!9518 = !DILocation(line: 688, column: 140, scope: !9515)
!9519 = !DILocation(line: 688, column: 144, scope: !9515)
!9520 = !DILocation(line: 688, column: 118, scope: !9515)
!9521 = !DILocation(line: 688, column: 168, scope: !9522)
!9522 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 5)
!9523 = !DILocation(line: 688, column: 171, scope: !9522)
!9524 = !DILocation(line: 688, column: 153, scope: !9522)
!9525 = !DILocation(line: 688, column: 174, scope: !9522)
!9526 = !DILocation(line: 688, column: 118, scope: !9522)
!9527 = !DILocation(line: 688, column: 118, scope: !9528)
!9528 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 6)
!9529 = !DILocation(line: 688, column: 118, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 7)
!9531 = !DILocation(line: 688, column: 30, scope: !9530)
!9532 = !DILocation(line: 688, column: 189, scope: !9533)
!9533 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 8)
!9534 = !DILocation(line: 688, column: 192, scope: !9533)
!9535 = !DILocation(line: 688, column: 30, scope: !9533)
!9536 = !DILocation(line: 688, column: 30, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !9459, file: !971, discriminator: 9)
!9538 = !DILocation(line: 688, column: 17, scope: !9537)
!9539 = !DILocation(line: 688, column: 20, scope: !9537)
!9540 = !DILocation(line: 688, column: 27, scope: !9537)
!9541 = !DILocation(line: 689, column: 33, scope: !9459)
!9542 = !DILocation(line: 689, column: 36, scope: !9459)
!9543 = !DILocation(line: 689, column: 40, scope: !9459)
!9544 = !DILocation(line: 689, column: 43, scope: !9459)
!9545 = !DILocation(line: 689, column: 49, scope: !9459)
!9546 = !DILocation(line: 689, column: 17, scope: !9459)
!9547 = !DILocation(line: 690, column: 13, scope: !9459)
!9548 = !DILocation(line: 691, column: 9, scope: !9433)
!9549 = !DILocation(line: 672, column: 65, scope: !9550)
!9550 = !DILexicalBlockFile(scope: !9429, file: !971, discriminator: 2)
!9551 = !DILocation(line: 672, column: 9, scope: !9550)
!9552 = distinct !{!9552, !9553}
!9553 = !DILocation(line: 672, column: 9, scope: !9422)
!9554 = !DILocation(line: 693, column: 13, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9422, file: !971, line: 693, column: 13)
!9556 = !DILocation(line: 693, column: 16, scope: !9555)
!9557 = !DILocation(line: 693, column: 13, scope: !9422)
!9558 = !DILocation(line: 694, column: 13, scope: !9555)
!9559 = !DILocation(line: 694, column: 20, scope: !9555)
!9560 = !DILocation(line: 694, column: 28, scope: !9555)
!9561 = !DILocation(line: 694, column: 87, scope: !9555)
!9562 = !DILocation(line: 694, column: 86, scope: !9555)
!9563 = !DILocation(line: 694, column: 85, scope: !9555)
!9564 = !DILocation(line: 694, column: 58, scope: !9555)
!9565 = !DILocation(line: 694, column: 78, scope: !9555)
!9566 = !DILocation(line: 694, column: 67, scope: !9555)
!9567 = !DILocation(line: 694, column: 61, scope: !9555)
!9568 = !DILocation(line: 694, column: 73, scope: !9555)
!9569 = !DILocation(line: 694, column: 57, scope: !9555)
!9570 = !DILocation(line: 695, column: 28, scope: !9555)
!9571 = !DILocation(line: 695, column: 36, scope: !9555)
!9572 = !DILocation(line: 695, column: 35, scope: !9555)
!9573 = !DILocation(line: 695, column: 32, scope: !9555)
!9574 = !DILocation(line: 695, column: 46, scope: !9555)
!9575 = !DILocation(line: 695, column: 45, scope: !9555)
!9576 = !DILocation(line: 695, column: 44, scope: !9555)
!9577 = !DILocation(line: 695, column: 42, scope: !9555)
!9578 = !DILocation(line: 695, column: 57, scope: !9555)
!9579 = !DILocation(line: 695, column: 56, scope: !9555)
!9580 = !DILocation(line: 695, column: 55, scope: !9555)
!9581 = !DILocation(line: 695, column: 54, scope: !9555)
!9582 = !DILocation(line: 696, column: 5, scope: !9422)
!9583 = !DILocation(line: 671, column: 52, scope: !9584)
!9584 = !DILexicalBlockFile(scope: !9415, file: !971, discriminator: 2)
!9585 = !DILocation(line: 671, column: 5, scope: !9584)
!9586 = distinct !{!9586, !9587}
!9587 = !DILocation(line: 671, column: 5, scope: !9385)
!9588 = !DILocation(line: 698, column: 10, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9385, file: !971, line: 698, column: 9)
!9590 = !DILocation(line: 698, column: 13, scope: !9589)
!9591 = !DILocation(line: 698, column: 9, scope: !9385)
!9592 = !DILocation(line: 699, column: 9, scope: !9589)
!9593 = !DILocation(line: 699, column: 16, scope: !9589)
!9594 = !DILocation(line: 699, column: 24, scope: !9589)
!9595 = !DILocation(line: 699, column: 54, scope: !9589)
!9596 = !DILocation(line: 699, column: 61, scope: !9589)
!9597 = !DILocation(line: 699, column: 66, scope: !9589)
!9598 = !DILocation(line: 701, column: 12, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9385, file: !971, line: 701, column: 5)
!9600 = !DILocation(line: 701, column: 10, scope: !9599)
!9601 = !DILocation(line: 701, column: 17, scope: !9602)
!9602 = !DILexicalBlockFile(scope: !9603, file: !971, discriminator: 1)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !971, line: 701, column: 5)
!9604 = !DILocation(line: 701, column: 21, scope: !9602)
!9605 = !DILocation(line: 701, column: 24, scope: !9602)
!9606 = !DILocation(line: 701, column: 38, scope: !9602)
!9607 = !DILocation(line: 701, column: 42, scope: !9602)
!9608 = !DILocation(line: 701, column: 19, scope: !9602)
!9609 = !DILocation(line: 701, column: 5, scope: !9602)
!9610 = !DILocation(line: 702, column: 17, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !971, line: 702, column: 13)
!9612 = distinct !DILexicalBlock(scope: !9603, file: !971, line: 701, column: 52)
!9613 = !DILocation(line: 702, column: 13, scope: !9611)
!9614 = !DILocation(line: 702, column: 20, scope: !9611)
!9615 = !DILocation(line: 702, column: 13, scope: !9612)
!9616 = !DILocation(line: 703, column: 26, scope: !9611)
!9617 = !DILocation(line: 703, column: 13, scope: !9611)
!9618 = !DILocation(line: 704, column: 5, scope: !9612)
!9619 = !DILocation(line: 701, column: 48, scope: !9620)
!9620 = !DILexicalBlockFile(scope: !9603, file: !971, discriminator: 2)
!9621 = !DILocation(line: 701, column: 5, scope: !9620)
!9622 = distinct !{!9622, !9623}
!9623 = !DILocation(line: 701, column: 5, scope: !9385)
!9624 = !DILocation(line: 705, column: 9, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9385, file: !971, line: 705, column: 9)
!9626 = !DILocation(line: 705, column: 26, scope: !9625)
!9627 = !DILocation(line: 705, column: 29, scope: !9625)
!9628 = !DILocation(line: 705, column: 43, scope: !9625)
!9629 = !DILocation(line: 705, column: 47, scope: !9625)
!9630 = !DILocation(line: 705, column: 52, scope: !9625)
!9631 = !DILocation(line: 705, column: 23, scope: !9625)
!9632 = !DILocation(line: 705, column: 9, scope: !9385)
!9633 = !DILocation(line: 706, column: 9, scope: !9625)
!9634 = !DILocation(line: 708, column: 5, scope: !9385)
!9635 = !DILocation(line: 709, column: 1, scope: !9385)
!9636 = distinct !DISubprogram(name: "select_dsp_funcs", scope: !971, file: !971, line: 1802, type: !9637, isLocal: true, isDefinition: true, scopeLine: 1803, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!9637 = !DISubroutineType(types: !9638)
!9638 = !{null, !2670, !979, !979, !979, !979}
!9639 = !DILocalVariable(name: "s", arg: 1, scope: !9636, file: !971, line: 1802, type: !2670)
!9640 = !DILocation(line: 1802, column: 44, scope: !9636)
!9641 = !DILocalVariable(name: "width", arg: 2, scope: !9636, file: !971, line: 1802, type: !979)
!9642 = !DILocation(line: 1802, column: 51, scope: !9636)
!9643 = !DILocalVariable(name: "height", arg: 3, scope: !9636, file: !971, line: 1802, type: !979)
!9644 = !DILocation(line: 1802, column: 62, scope: !9636)
!9645 = !DILocalVariable(name: "xblen", arg: 4, scope: !9636, file: !971, line: 1802, type: !979)
!9646 = !DILocation(line: 1802, column: 74, scope: !9636)
!9647 = !DILocalVariable(name: "yblen", arg: 5, scope: !9636, file: !971, line: 1802, type: !979)
!9648 = !DILocation(line: 1802, column: 85, scope: !9636)
!9649 = !DILocalVariable(name: "idx", scope: !9636, file: !971, line: 1804, type: !979)
!9650 = !DILocation(line: 1804, column: 9, scope: !9636)
!9651 = !DILocation(line: 1805, column: 9, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9636, file: !971, line: 1805, column: 9)
!9653 = !DILocation(line: 1805, column: 15, scope: !9652)
!9654 = !DILocation(line: 1805, column: 9, scope: !9636)
!9655 = !DILocation(line: 1806, column: 13, scope: !9652)
!9656 = !DILocation(line: 1806, column: 9, scope: !9652)
!9657 = !DILocation(line: 1807, column: 9, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9636, file: !971, line: 1807, column: 9)
!9659 = !DILocation(line: 1807, column: 15, scope: !9658)
!9660 = !DILocation(line: 1807, column: 9, scope: !9636)
!9661 = !DILocation(line: 1808, column: 13, scope: !9658)
!9662 = !DILocation(line: 1808, column: 9, scope: !9658)
!9663 = !DILocation(line: 1810, column: 12, scope: !9636)
!9664 = !DILocation(line: 1810, column: 15, scope: !9636)
!9665 = !DILocation(line: 1810, column: 5, scope: !9636)
!9666 = !DILocation(line: 1810, column: 64, scope: !9636)
!9667 = !DILocation(line: 1810, column: 31, scope: !9636)
!9668 = !DILocation(line: 1810, column: 34, scope: !9636)
!9669 = !DILocation(line: 1810, column: 43, scope: !9636)
!9670 = !DILocation(line: 1811, column: 12, scope: !9636)
!9671 = !DILocation(line: 1811, column: 15, scope: !9636)
!9672 = !DILocation(line: 1811, column: 5, scope: !9636)
!9673 = !DILocation(line: 1811, column: 64, scope: !9636)
!9674 = !DILocation(line: 1811, column: 31, scope: !9636)
!9675 = !DILocation(line: 1811, column: 34, scope: !9636)
!9676 = !DILocation(line: 1811, column: 43, scope: !9636)
!9677 = !DILocation(line: 1812, column: 46, scope: !9636)
!9678 = !DILocation(line: 1812, column: 19, scope: !9636)
!9679 = !DILocation(line: 1812, column: 22, scope: !9636)
!9680 = !DILocation(line: 1812, column: 31, scope: !9636)
!9681 = !DILocation(line: 1812, column: 5, scope: !9636)
!9682 = !DILocation(line: 1812, column: 8, scope: !9636)
!9683 = !DILocation(line: 1812, column: 17, scope: !9636)
!9684 = !DILocation(line: 1813, column: 9, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9636, file: !971, line: 1813, column: 9)
!9686 = !DILocation(line: 1813, column: 12, scope: !9685)
!9687 = !DILocation(line: 1813, column: 29, scope: !9685)
!9688 = !DILocation(line: 1813, column: 33, scope: !9685)
!9689 = !DILocation(line: 1813, column: 36, scope: !9690)
!9690 = !DILexicalBlockFile(scope: !9685, file: !971, discriminator: 1)
!9691 = !DILocation(line: 1813, column: 39, scope: !9690)
!9692 = !DILocation(line: 1813, column: 49, scope: !9690)
!9693 = !DILocation(line: 1813, column: 54, scope: !9690)
!9694 = !DILocation(line: 1813, column: 57, scope: !9695)
!9695 = !DILexicalBlockFile(scope: !9685, file: !971, discriminator: 2)
!9696 = !DILocation(line: 1813, column: 60, scope: !9695)
!9697 = !DILocation(line: 1813, column: 70, scope: !9695)
!9698 = !DILocation(line: 1813, column: 9, scope: !9695)
!9699 = !DILocation(line: 1814, column: 62, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9685, file: !971, line: 1813, column: 76)
!9701 = !DILocation(line: 1814, column: 26, scope: !9700)
!9702 = !DILocation(line: 1814, column: 29, scope: !9700)
!9703 = !DILocation(line: 1814, column: 38, scope: !9700)
!9704 = !DILocation(line: 1814, column: 9, scope: !9700)
!9705 = !DILocation(line: 1814, column: 12, scope: !9700)
!9706 = !DILocation(line: 1814, column: 24, scope: !9700)
!9707 = !DILocation(line: 1815, column: 66, scope: !9700)
!9708 = !DILocation(line: 1815, column: 28, scope: !9700)
!9709 = !DILocation(line: 1815, column: 31, scope: !9700)
!9710 = !DILocation(line: 1815, column: 40, scope: !9700)
!9711 = !DILocation(line: 1815, column: 9, scope: !9700)
!9712 = !DILocation(line: 1815, column: 12, scope: !9700)
!9713 = !DILocation(line: 1815, column: 26, scope: !9700)
!9714 = !DILocation(line: 1816, column: 5, scope: !9700)
!9715 = !DILocation(line: 1817, column: 9, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9685, file: !971, line: 1816, column: 12)
!9717 = !DILocation(line: 1817, column: 12, scope: !9716)
!9718 = !DILocation(line: 1817, column: 24, scope: !9716)
!9719 = !DILocation(line: 1818, column: 9, scope: !9716)
!9720 = !DILocation(line: 1818, column: 12, scope: !9716)
!9721 = !DILocation(line: 1818, column: 26, scope: !9716)
!9722 = !DILocation(line: 1820, column: 1, scope: !9636)
!9723 = distinct !DISubprogram(name: "interpolate_refplane", scope: !971, file: !971, line: 1822, type: !9724, isLocal: true, isDefinition: true, scopeLine: 1823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!979, !2670, !2908, !979, !979, !979}
!9726 = !DILocalVariable(name: "s", arg: 1, scope: !9723, file: !971, line: 1822, type: !2670)
!9727 = !DILocation(line: 1822, column: 47, scope: !9723)
!9728 = !DILocalVariable(name: "ref", arg: 2, scope: !9723, file: !971, line: 1822, type: !2908)
!9729 = !DILocation(line: 1822, column: 62, scope: !9723)
!9730 = !DILocalVariable(name: "plane", arg: 3, scope: !9723, file: !971, line: 1822, type: !979)
!9731 = !DILocation(line: 1822, column: 71, scope: !9723)
!9732 = !DILocalVariable(name: "width", arg: 4, scope: !9723, file: !971, line: 1822, type: !979)
!9733 = !DILocation(line: 1822, column: 82, scope: !9723)
!9734 = !DILocalVariable(name: "height", arg: 5, scope: !9723, file: !971, line: 1822, type: !979)
!9735 = !DILocation(line: 1822, column: 93, scope: !9723)
!9736 = !DILocalVariable(name: "i", scope: !9723, file: !971, line: 1827, type: !979)
!9737 = !DILocation(line: 1827, column: 9, scope: !9723)
!9738 = !DILocalVariable(name: "edge", scope: !9723, file: !971, line: 1827, type: !979)
!9739 = !DILocation(line: 1827, column: 12, scope: !9723)
!9740 = !DILocation(line: 1829, column: 46, scope: !9723)
!9741 = !DILocation(line: 1829, column: 27, scope: !9723)
!9742 = !DILocation(line: 1829, column: 32, scope: !9723)
!9743 = !DILocation(line: 1829, column: 41, scope: !9723)
!9744 = !DILocation(line: 1829, column: 15, scope: !9723)
!9745 = !DILocation(line: 1829, column: 5, scope: !9723)
!9746 = !DILocation(line: 1829, column: 10, scope: !9723)
!9747 = !DILocation(line: 1829, column: 25, scope: !9723)
!9748 = !DILocation(line: 1830, column: 5, scope: !9723)
!9749 = !DILocation(line: 1830, column: 8, scope: !9723)
!9750 = !DILocation(line: 1830, column: 18, scope: !9723)
!9751 = !DILocation(line: 1830, column: 39, scope: !9723)
!9752 = !DILocation(line: 1830, column: 29, scope: !9723)
!9753 = !DILocation(line: 1830, column: 34, scope: !9723)
!9754 = !DILocation(line: 1830, column: 73, scope: !9723)
!9755 = !DILocation(line: 1830, column: 50, scope: !9723)
!9756 = !DILocation(line: 1830, column: 55, scope: !9723)
!9757 = !DILocation(line: 1830, column: 64, scope: !9723)
!9758 = !DILocation(line: 1830, column: 81, scope: !9723)
!9759 = !DILocation(line: 1830, column: 88, scope: !9723)
!9760 = !DILocation(line: 1830, column: 96, scope: !9723)
!9761 = !DILocation(line: 1830, column: 102, scope: !9723)
!9762 = !DILocation(line: 1833, column: 10, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9723, file: !971, line: 1833, column: 9)
!9764 = !DILocation(line: 1833, column: 13, scope: !9763)
!9765 = !DILocation(line: 1833, column: 9, scope: !9723)
!9766 = !DILocation(line: 1834, column: 9, scope: !9763)
!9767 = !DILocation(line: 1836, column: 12, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9723, file: !971, line: 1836, column: 5)
!9769 = !DILocation(line: 1836, column: 10, scope: !9768)
!9770 = !DILocation(line: 1836, column: 17, scope: !9771)
!9771 = !DILexicalBlockFile(scope: !9772, file: !971, discriminator: 1)
!9772 = distinct !DILexicalBlock(scope: !9768, file: !971, line: 1836, column: 5)
!9773 = !DILocation(line: 1836, column: 19, scope: !9771)
!9774 = !DILocation(line: 1836, column: 5, scope: !9771)
!9775 = !DILocation(line: 1837, column: 36, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !971, line: 1837, column: 13)
!9777 = distinct !DILexicalBlock(scope: !9772, file: !971, line: 1836, column: 29)
!9778 = !DILocation(line: 1837, column: 14, scope: !9776)
!9779 = !DILocation(line: 1837, column: 29, scope: !9776)
!9780 = !DILocation(line: 1837, column: 19, scope: !9776)
!9781 = !DILocation(line: 1837, column: 13, scope: !9777)
!9782 = !DILocation(line: 1838, column: 51, scope: !9776)
!9783 = !DILocation(line: 1838, column: 60, scope: !9776)
!9784 = !DILocation(line: 1838, column: 59, scope: !9776)
!9785 = !DILocation(line: 1838, column: 57, scope: !9776)
!9786 = !DILocation(line: 1838, column: 91, scope: !9776)
!9787 = !DILocation(line: 1838, column: 68, scope: !9776)
!9788 = !DILocation(line: 1838, column: 73, scope: !9776)
!9789 = !DILocation(line: 1838, column: 82, scope: !9776)
!9790 = !DILocation(line: 1838, column: 66, scope: !9776)
!9791 = !DILocation(line: 1838, column: 98, scope: !9776)
!9792 = !DILocation(line: 1838, column: 50, scope: !9776)
!9793 = !DILocation(line: 1838, column: 40, scope: !9776)
!9794 = !DILocation(line: 1838, column: 35, scope: !9776)
!9795 = !DILocation(line: 1838, column: 13, scope: !9776)
!9796 = !DILocation(line: 1838, column: 28, scope: !9776)
!9797 = !DILocation(line: 1838, column: 18, scope: !9776)
!9798 = !DILocation(line: 1838, column: 38, scope: !9776)
!9799 = !DILocation(line: 1839, column: 36, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9777, file: !971, line: 1839, column: 13)
!9801 = !DILocation(line: 1839, column: 14, scope: !9800)
!9802 = !DILocation(line: 1839, column: 29, scope: !9800)
!9803 = !DILocation(line: 1839, column: 19, scope: !9800)
!9804 = !DILocation(line: 1839, column: 13, scope: !9777)
!9805 = !DILocation(line: 1840, column: 13, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9800, file: !971, line: 1839, column: 40)
!9807 = !DILocation(line: 1843, column: 53, scope: !9777)
!9808 = !DILocation(line: 1843, column: 31, scope: !9777)
!9809 = !DILocation(line: 1843, column: 46, scope: !9777)
!9810 = !DILocation(line: 1843, column: 36, scope: !9777)
!9811 = !DILocation(line: 1843, column: 58, scope: !9777)
!9812 = !DILocation(line: 1843, column: 86, scope: !9777)
!9813 = !DILocation(line: 1843, column: 63, scope: !9777)
!9814 = !DILocation(line: 1843, column: 68, scope: !9777)
!9815 = !DILocation(line: 1843, column: 77, scope: !9777)
!9816 = !DILocation(line: 1843, column: 62, scope: !9777)
!9817 = !DILocation(line: 1843, column: 56, scope: !9777)
!9818 = !DILocation(line: 1843, column: 93, scope: !9777)
!9819 = !DILocation(line: 1843, column: 26, scope: !9777)
!9820 = !DILocation(line: 1843, column: 9, scope: !9777)
!9821 = !DILocation(line: 1843, column: 19, scope: !9777)
!9822 = !DILocation(line: 1843, column: 14, scope: !9777)
!9823 = !DILocation(line: 1843, column: 29, scope: !9777)
!9824 = !DILocation(line: 1844, column: 5, scope: !9777)
!9825 = !DILocation(line: 1836, column: 25, scope: !9826)
!9826 = !DILexicalBlockFile(scope: !9772, file: !971, discriminator: 2)
!9827 = !DILocation(line: 1836, column: 5, scope: !9826)
!9828 = distinct !{!9828, !9829}
!9829 = !DILocation(line: 1836, column: 5, scope: !9723)
!9830 = !DILocation(line: 1846, column: 28, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9723, file: !971, line: 1846, column: 9)
!9832 = !DILocation(line: 1846, column: 10, scope: !9831)
!9833 = !DILocation(line: 1846, column: 15, scope: !9831)
!9834 = !DILocation(line: 1846, column: 9, scope: !9723)
!9835 = !DILocation(line: 1847, column: 9, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9831, file: !971, line: 1846, column: 36)
!9837 = !DILocation(line: 1847, column: 12, scope: !9836)
!9838 = !DILocation(line: 1847, column: 21, scope: !9836)
!9839 = !DILocation(line: 1847, column: 49, scope: !9836)
!9840 = !DILocation(line: 1847, column: 39, scope: !9836)
!9841 = !DILocation(line: 1847, column: 44, scope: !9836)
!9842 = !DILocation(line: 1847, column: 70, scope: !9836)
!9843 = !DILocation(line: 1847, column: 60, scope: !9836)
!9844 = !DILocation(line: 1847, column: 65, scope: !9836)
!9845 = !DILocation(line: 1848, column: 49, scope: !9836)
!9846 = !DILocation(line: 1848, column: 39, scope: !9836)
!9847 = !DILocation(line: 1848, column: 44, scope: !9836)
!9848 = !DILocation(line: 1848, column: 70, scope: !9836)
!9849 = !DILocation(line: 1848, column: 60, scope: !9836)
!9850 = !DILocation(line: 1848, column: 65, scope: !9836)
!9851 = !DILocation(line: 1849, column: 62, scope: !9836)
!9852 = !DILocation(line: 1849, column: 39, scope: !9836)
!9853 = !DILocation(line: 1849, column: 44, scope: !9836)
!9854 = !DILocation(line: 1849, column: 53, scope: !9836)
!9855 = !DILocation(line: 1849, column: 70, scope: !9836)
!9856 = !DILocation(line: 1849, column: 77, scope: !9836)
!9857 = !DILocation(line: 1850, column: 9, scope: !9836)
!9858 = !DILocation(line: 1850, column: 12, scope: !9836)
!9859 = !DILocation(line: 1850, column: 22, scope: !9836)
!9860 = !DILocation(line: 1850, column: 43, scope: !9836)
!9861 = !DILocation(line: 1850, column: 33, scope: !9836)
!9862 = !DILocation(line: 1850, column: 38, scope: !9836)
!9863 = !DILocation(line: 1850, column: 77, scope: !9836)
!9864 = !DILocation(line: 1850, column: 54, scope: !9836)
!9865 = !DILocation(line: 1850, column: 59, scope: !9836)
!9866 = !DILocation(line: 1850, column: 68, scope: !9836)
!9867 = !DILocation(line: 1850, column: 85, scope: !9836)
!9868 = !DILocation(line: 1850, column: 92, scope: !9836)
!9869 = !DILocation(line: 1850, column: 100, scope: !9836)
!9870 = !DILocation(line: 1850, column: 106, scope: !9836)
!9871 = !DILocation(line: 1851, column: 9, scope: !9836)
!9872 = !DILocation(line: 1851, column: 12, scope: !9836)
!9873 = !DILocation(line: 1851, column: 22, scope: !9836)
!9874 = !DILocation(line: 1851, column: 43, scope: !9836)
!9875 = !DILocation(line: 1851, column: 33, scope: !9836)
!9876 = !DILocation(line: 1851, column: 38, scope: !9836)
!9877 = !DILocation(line: 1851, column: 77, scope: !9836)
!9878 = !DILocation(line: 1851, column: 54, scope: !9836)
!9879 = !DILocation(line: 1851, column: 59, scope: !9836)
!9880 = !DILocation(line: 1851, column: 68, scope: !9836)
!9881 = !DILocation(line: 1851, column: 85, scope: !9836)
!9882 = !DILocation(line: 1851, column: 92, scope: !9836)
!9883 = !DILocation(line: 1851, column: 100, scope: !9836)
!9884 = !DILocation(line: 1851, column: 106, scope: !9836)
!9885 = !DILocation(line: 1852, column: 9, scope: !9836)
!9886 = !DILocation(line: 1852, column: 12, scope: !9836)
!9887 = !DILocation(line: 1852, column: 22, scope: !9836)
!9888 = !DILocation(line: 1852, column: 43, scope: !9836)
!9889 = !DILocation(line: 1852, column: 33, scope: !9836)
!9890 = !DILocation(line: 1852, column: 38, scope: !9836)
!9891 = !DILocation(line: 1852, column: 77, scope: !9836)
!9892 = !DILocation(line: 1852, column: 54, scope: !9836)
!9893 = !DILocation(line: 1852, column: 59, scope: !9836)
!9894 = !DILocation(line: 1852, column: 68, scope: !9836)
!9895 = !DILocation(line: 1852, column: 85, scope: !9836)
!9896 = !DILocation(line: 1852, column: 92, scope: !9836)
!9897 = !DILocation(line: 1852, column: 100, scope: !9836)
!9898 = !DILocation(line: 1852, column: 106, scope: !9836)
!9899 = !DILocation(line: 1853, column: 5, scope: !9836)
!9900 = !DILocation(line: 1854, column: 23, scope: !9723)
!9901 = !DILocation(line: 1854, column: 5, scope: !9723)
!9902 = !DILocation(line: 1854, column: 10, scope: !9723)
!9903 = !DILocation(line: 1854, column: 30, scope: !9723)
!9904 = !DILocation(line: 1856, column: 5, scope: !9723)
!9905 = !DILocation(line: 1857, column: 1, scope: !9723)
!9906 = distinct !DISubprogram(name: "init_obmc_weights", scope: !971, file: !971, line: 1599, type: !9907, isLocal: true, isDefinition: true, scopeLine: 1600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{null, !2670, !5362, !979}
!9909 = !DILocalVariable(name: "s", arg: 1, scope: !9906, file: !971, line: 1599, type: !2670)
!9910 = !DILocation(line: 1599, column: 45, scope: !9906)
!9911 = !DILocalVariable(name: "p", arg: 2, scope: !9906, file: !971, line: 1599, type: !5362)
!9912 = !DILocation(line: 1599, column: 55, scope: !9906)
!9913 = !DILocalVariable(name: "by", arg: 3, scope: !9906, file: !971, line: 1599, type: !979)
!9914 = !DILocation(line: 1599, column: 62, scope: !9906)
!9915 = !DILocalVariable(name: "top", scope: !9906, file: !971, line: 1601, type: !979)
!9916 = !DILocation(line: 1601, column: 9, scope: !9906)
!9917 = !DILocation(line: 1601, column: 16, scope: !9906)
!9918 = !DILocation(line: 1601, column: 15, scope: !9906)
!9919 = !DILocalVariable(name: "bottom", scope: !9906, file: !971, line: 1602, type: !979)
!9920 = !DILocation(line: 1602, column: 9, scope: !9906)
!9921 = !DILocation(line: 1602, column: 18, scope: !9906)
!9922 = !DILocation(line: 1602, column: 24, scope: !9906)
!9923 = !DILocation(line: 1602, column: 27, scope: !9906)
!9924 = !DILocation(line: 1602, column: 35, scope: !9906)
!9925 = !DILocation(line: 1602, column: 21, scope: !9906)
!9926 = !DILocation(line: 1605, column: 9, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9906, file: !971, line: 1605, column: 9)
!9928 = !DILocation(line: 1605, column: 13, scope: !9927)
!9929 = !DILocation(line: 1605, column: 16, scope: !9930)
!9930 = !DILexicalBlockFile(scope: !9927, file: !971, discriminator: 1)
!9931 = !DILocation(line: 1605, column: 23, scope: !9930)
!9932 = !DILocation(line: 1605, column: 26, scope: !9933)
!9933 = !DILexicalBlockFile(scope: !9927, file: !971, discriminator: 2)
!9934 = !DILocation(line: 1605, column: 29, scope: !9933)
!9935 = !DILocation(line: 1605, column: 9, scope: !9933)
!9936 = !DILocation(line: 1606, column: 26, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9927, file: !971, line: 1605, column: 35)
!9938 = !DILocation(line: 1606, column: 29, scope: !9937)
!9939 = !DILocation(line: 1606, column: 32, scope: !9937)
!9940 = !DILocation(line: 1606, column: 58, scope: !9937)
!9941 = !DILocation(line: 1606, column: 63, scope: !9937)
!9942 = !DILocation(line: 1606, column: 9, scope: !9937)
!9943 = !DILocation(line: 1607, column: 26, scope: !9937)
!9944 = !DILocation(line: 1607, column: 29, scope: !9937)
!9945 = !DILocation(line: 1607, column: 32, scope: !9937)
!9946 = !DILocation(line: 1607, column: 58, scope: !9937)
!9947 = !DILocation(line: 1607, column: 63, scope: !9937)
!9948 = !DILocation(line: 1607, column: 9, scope: !9937)
!9949 = !DILocation(line: 1608, column: 26, scope: !9937)
!9950 = !DILocation(line: 1608, column: 29, scope: !9937)
!9951 = !DILocation(line: 1608, column: 32, scope: !9937)
!9952 = !DILocation(line: 1608, column: 58, scope: !9937)
!9953 = !DILocation(line: 1608, column: 63, scope: !9937)
!9954 = !DILocation(line: 1608, column: 9, scope: !9937)
!9955 = !DILocation(line: 1609, column: 5, scope: !9937)
!9956 = !DILocation(line: 1610, column: 1, scope: !9906)
!9957 = distinct !DISubprogram(name: "mc_row", scope: !971, file: !971, line: 1786, type: !9958, isLocal: true, isDefinition: true, scopeLine: 1787, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!9958 = !DISubroutineType(types: !9959)
!9959 = !{null, !2670, !2880, !1483, !979, !979}
!9960 = !DILocalVariable(name: "s", arg: 1, scope: !9957, file: !971, line: 1786, type: !2670)
!9961 = !DILocation(line: 1786, column: 34, scope: !9957)
!9962 = !DILocalVariable(name: "block", arg: 2, scope: !9957, file: !971, line: 1786, type: !2880)
!9963 = !DILocation(line: 1786, column: 49, scope: !9957)
!9964 = !DILocalVariable(name: "mctmp", arg: 3, scope: !9957, file: !971, line: 1786, type: !1483)
!9965 = !DILocation(line: 1786, column: 66, scope: !9957)
!9966 = !DILocalVariable(name: "plane", arg: 4, scope: !9957, file: !971, line: 1786, type: !979)
!9967 = !DILocation(line: 1786, column: 77, scope: !9957)
!9968 = !DILocalVariable(name: "dsty", arg: 5, scope: !9957, file: !971, line: 1786, type: !979)
!9969 = !DILocation(line: 1786, column: 88, scope: !9957)
!9970 = !DILocalVariable(name: "p", scope: !9957, file: !971, line: 1788, type: !5362)
!9971 = !DILocation(line: 1788, column: 12, scope: !9957)
!9972 = !DILocation(line: 1788, column: 26, scope: !9957)
!9973 = !DILocation(line: 1788, column: 17, scope: !9957)
!9974 = !DILocation(line: 1788, column: 20, scope: !9957)
!9975 = !DILocalVariable(name: "x", scope: !9957, file: !971, line: 1789, type: !979)
!9976 = !DILocation(line: 1789, column: 9, scope: !9957)
!9977 = !DILocalVariable(name: "dstx", scope: !9957, file: !971, line: 1789, type: !979)
!9978 = !DILocation(line: 1789, column: 12, scope: !9957)
!9979 = !DILocation(line: 1789, column: 19, scope: !9957)
!9980 = !DILocation(line: 1789, column: 22, scope: !9957)
!9981 = !DILocation(line: 1789, column: 30, scope: !9957)
!9982 = !DILocation(line: 1789, column: 33, scope: !9957)
!9983 = !DILocation(line: 1789, column: 28, scope: !9957)
!9984 = !DILocation(line: 1791, column: 14, scope: !9957)
!9985 = !DILocation(line: 1791, column: 17, scope: !9957)
!9986 = !DILocation(line: 1791, column: 24, scope: !9957)
!9987 = !DILocation(line: 1791, column: 31, scope: !9957)
!9988 = !DILocation(line: 1791, column: 34, scope: !9957)
!9989 = !DILocation(line: 1791, column: 50, scope: !9957)
!9990 = !DILocation(line: 1791, column: 58, scope: !9957)
!9991 = !DILocation(line: 1791, column: 61, scope: !9957)
!9992 = !DILocation(line: 1791, column: 57, scope: !9957)
!9993 = !DILocation(line: 1791, column: 70, scope: !9957)
!9994 = !DILocation(line: 1791, column: 5, scope: !9957)
!9995 = !DILocation(line: 1792, column: 14, scope: !9957)
!9996 = !DILocation(line: 1792, column: 17, scope: !9957)
!9997 = !DILocation(line: 1792, column: 11, scope: !9957)
!9998 = !DILocation(line: 1794, column: 12, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9957, file: !971, line: 1794, column: 5)
!10000 = !DILocation(line: 1794, column: 10, scope: !9999)
!10001 = !DILocation(line: 1794, column: 17, scope: !10002)
!10002 = !DILexicalBlockFile(scope: !10003, file: !971, discriminator: 1)
!10003 = distinct !DILexicalBlock(scope: !9999, file: !971, line: 1794, column: 5)
!10004 = !DILocation(line: 1794, column: 21, scope: !10002)
!10005 = !DILocation(line: 1794, column: 24, scope: !10002)
!10006 = !DILocation(line: 1794, column: 31, scope: !10002)
!10007 = !DILocation(line: 1794, column: 19, scope: !10002)
!10008 = !DILocation(line: 1794, column: 5, scope: !10002)
!10009 = !DILocation(line: 1795, column: 18, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10003, file: !971, line: 1794, column: 40)
!10011 = !DILocation(line: 1795, column: 21, scope: !10010)
!10012 = !DILocation(line: 1795, column: 27, scope: !10010)
!10013 = !DILocation(line: 1795, column: 26, scope: !10010)
!10014 = !DILocation(line: 1795, column: 30, scope: !10010)
!10015 = !DILocation(line: 1795, column: 37, scope: !10010)
!10016 = !DILocation(line: 1795, column: 40, scope: !10010)
!10017 = !DILocation(line: 1795, column: 56, scope: !10010)
!10018 = !DILocation(line: 1795, column: 63, scope: !10010)
!10019 = !DILocation(line: 1795, column: 69, scope: !10010)
!10020 = !DILocation(line: 1795, column: 9, scope: !10010)
!10021 = !DILocation(line: 1796, column: 17, scope: !10010)
!10022 = !DILocation(line: 1796, column: 20, scope: !10010)
!10023 = !DILocation(line: 1796, column: 14, scope: !10010)
!10024 = !DILocation(line: 1797, column: 18, scope: !10010)
!10025 = !DILocation(line: 1797, column: 21, scope: !10010)
!10026 = !DILocation(line: 1797, column: 15, scope: !10010)
!10027 = !DILocation(line: 1798, column: 5, scope: !10010)
!10028 = !DILocation(line: 1794, column: 36, scope: !10029)
!10029 = !DILexicalBlockFile(scope: !10003, file: !971, discriminator: 2)
!10030 = !DILocation(line: 1794, column: 5, scope: !10029)
!10031 = distinct !{!10031, !10032}
!10032 = !DILocation(line: 1794, column: 5, scope: !9957)
!10033 = !DILocation(line: 1799, column: 14, scope: !9957)
!10034 = !DILocation(line: 1799, column: 17, scope: !9957)
!10035 = !DILocation(line: 1799, column: 23, scope: !9957)
!10036 = !DILocation(line: 1799, column: 22, scope: !9957)
!10037 = !DILocation(line: 1799, column: 26, scope: !9957)
!10038 = !DILocation(line: 1799, column: 33, scope: !9957)
!10039 = !DILocation(line: 1799, column: 36, scope: !9957)
!10040 = !DILocation(line: 1799, column: 52, scope: !9957)
!10041 = !DILocation(line: 1799, column: 59, scope: !9957)
!10042 = !DILocation(line: 1799, column: 65, scope: !9957)
!10043 = !DILocation(line: 1799, column: 5, scope: !9957)
!10044 = !DILocation(line: 1800, column: 1, scope: !9957)
!10045 = distinct !DISubprogram(name: "subband_coeffs", scope: !971, file: !971, line: 821, type: !10046, isLocal: true, isDefinition: true, scopeLine: 823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10046 = !DISubroutineType(types: !10047)
!10047 = !{!979, !2670, !979, !979, !979, !10048}
!10048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8927, size: 64, align: 64)
!10049 = !DILocalVariable(name: "s", arg: 1, scope: !10045, file: !971, line: 821, type: !2670)
!10050 = !DILocation(line: 821, column: 41, scope: !10045)
!10051 = !DILocalVariable(name: "x", arg: 2, scope: !10045, file: !971, line: 821, type: !979)
!10052 = !DILocation(line: 821, column: 48, scope: !10045)
!10053 = !DILocalVariable(name: "y", arg: 3, scope: !10045, file: !971, line: 821, type: !979)
!10054 = !DILocation(line: 821, column: 55, scope: !10045)
!10055 = !DILocalVariable(name: "p", arg: 4, scope: !10045, file: !971, line: 821, type: !979)
!10056 = !DILocation(line: 821, column: 62, scope: !10045)
!10057 = !DILocalVariable(name: "c", arg: 5, scope: !10045, file: !971, line: 822, type: !10048)
!10058 = !DILocation(line: 822, column: 39, scope: !10045)
!10059 = !DILocalVariable(name: "level", scope: !10045, file: !971, line: 824, type: !979)
!10060 = !DILocation(line: 824, column: 9, scope: !10045)
!10061 = !DILocalVariable(name: "coef", scope: !10045, file: !971, line: 824, type: !979)
!10062 = !DILocation(line: 824, column: 16, scope: !10045)
!10063 = !DILocation(line: 825, column: 16, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10045, file: !971, line: 825, column: 5)
!10065 = !DILocation(line: 825, column: 10, scope: !10064)
!10066 = !DILocation(line: 825, column: 21, scope: !10067)
!10067 = !DILexicalBlockFile(scope: !10068, file: !971, discriminator: 1)
!10068 = distinct !DILexicalBlock(scope: !10064, file: !971, line: 825, column: 5)
!10069 = !DILocation(line: 825, column: 29, scope: !10067)
!10070 = !DILocation(line: 825, column: 32, scope: !10067)
!10071 = !DILocation(line: 825, column: 27, scope: !10067)
!10072 = !DILocation(line: 825, column: 5, scope: !10067)
!10073 = !DILocalVariable(name: "o", scope: !10074, file: !971, line: 826, type: !10048)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !971, line: 825, column: 56)
!10075 = !DILocation(line: 826, column: 22, scope: !10074)
!10076 = !DILocation(line: 826, column: 29, scope: !10074)
!10077 = !DILocation(line: 826, column: 27, scope: !10074)
!10078 = !DILocalVariable(name: "b", scope: !10074, file: !971, line: 827, type: !7223)
!10079 = !DILocation(line: 827, column: 18, scope: !10074)
!10080 = !DILocation(line: 827, column: 40, scope: !10074)
!10081 = !DILocation(line: 827, column: 23, scope: !10074)
!10082 = !DILocation(line: 827, column: 32, scope: !10074)
!10083 = !DILocation(line: 827, column: 26, scope: !10074)
!10084 = !DILocation(line: 827, column: 35, scope: !10074)
!10085 = !DILocation(line: 828, column: 18, scope: !10074)
!10086 = !DILocation(line: 828, column: 21, scope: !10074)
!10087 = !DILocation(line: 828, column: 30, scope: !10074)
!10088 = !DILocation(line: 828, column: 28, scope: !10074)
!10089 = !DILocation(line: 828, column: 34, scope: !10074)
!10090 = !DILocation(line: 828, column: 37, scope: !10074)
!10091 = !DILocation(line: 828, column: 32, scope: !10074)
!10092 = !DILocation(line: 828, column: 9, scope: !10074)
!10093 = !DILocation(line: 828, column: 12, scope: !10074)
!10094 = !DILocation(line: 828, column: 16, scope: !10074)
!10095 = !DILocation(line: 829, column: 19, scope: !10074)
!10096 = !DILocation(line: 829, column: 22, scope: !10074)
!10097 = !DILocation(line: 829, column: 30, scope: !10074)
!10098 = !DILocation(line: 829, column: 28, scope: !10074)
!10099 = !DILocation(line: 829, column: 34, scope: !10074)
!10100 = !DILocation(line: 829, column: 37, scope: !10074)
!10101 = !DILocation(line: 829, column: 32, scope: !10074)
!10102 = !DILocation(line: 829, column: 9, scope: !10074)
!10103 = !DILocation(line: 829, column: 12, scope: !10074)
!10104 = !DILocation(line: 829, column: 17, scope: !10074)
!10105 = !DILocation(line: 830, column: 22, scope: !10074)
!10106 = !DILocation(line: 830, column: 25, scope: !10074)
!10107 = !DILocation(line: 830, column: 34, scope: !10074)
!10108 = !DILocation(line: 830, column: 36, scope: !10074)
!10109 = !DILocation(line: 830, column: 31, scope: !10074)
!10110 = !DILocation(line: 830, column: 44, scope: !10074)
!10111 = !DILocation(line: 830, column: 47, scope: !10074)
!10112 = !DILocation(line: 830, column: 42, scope: !10074)
!10113 = !DILocation(line: 830, column: 56, scope: !10074)
!10114 = !DILocation(line: 830, column: 59, scope: !10074)
!10115 = !DILocation(line: 830, column: 54, scope: !10074)
!10116 = !DILocation(line: 830, column: 9, scope: !10074)
!10117 = !DILocation(line: 830, column: 12, scope: !10074)
!10118 = !DILocation(line: 830, column: 18, scope: !10074)
!10119 = !DILocation(line: 831, column: 22, scope: !10074)
!10120 = !DILocation(line: 831, column: 25, scope: !10074)
!10121 = !DILocation(line: 831, column: 35, scope: !10074)
!10122 = !DILocation(line: 831, column: 37, scope: !10074)
!10123 = !DILocation(line: 831, column: 32, scope: !10074)
!10124 = !DILocation(line: 831, column: 45, scope: !10074)
!10125 = !DILocation(line: 831, column: 48, scope: !10074)
!10126 = !DILocation(line: 831, column: 43, scope: !10074)
!10127 = !DILocation(line: 831, column: 57, scope: !10074)
!10128 = !DILocation(line: 831, column: 60, scope: !10074)
!10129 = !DILocation(line: 831, column: 55, scope: !10074)
!10130 = !DILocation(line: 831, column: 9, scope: !10074)
!10131 = !DILocation(line: 831, column: 12, scope: !10074)
!10132 = !DILocation(line: 831, column: 18, scope: !10074)
!10133 = !DILocation(line: 832, column: 18, scope: !10074)
!10134 = !DILocation(line: 832, column: 21, scope: !10074)
!10135 = !DILocation(line: 832, column: 27, scope: !10074)
!10136 = !DILocation(line: 832, column: 30, scope: !10074)
!10137 = !DILocation(line: 832, column: 26, scope: !10074)
!10138 = !DILocation(line: 832, column: 9, scope: !10074)
!10139 = !DILocation(line: 832, column: 12, scope: !10074)
!10140 = !DILocation(line: 832, column: 16, scope: !10074)
!10141 = !DILocation(line: 833, column: 17, scope: !10074)
!10142 = !DILocation(line: 833, column: 20, scope: !10074)
!10143 = !DILocation(line: 833, column: 33, scope: !10074)
!10144 = !DILocation(line: 833, column: 32, scope: !10074)
!10145 = !DILocation(line: 833, column: 31, scope: !10074)
!10146 = !DILocation(line: 833, column: 29, scope: !10074)
!10147 = !DILocation(line: 833, column: 24, scope: !10074)
!10148 = !DILocation(line: 833, column: 14, scope: !10074)
!10149 = !DILocation(line: 834, column: 5, scope: !10074)
!10150 = !DILocation(line: 825, column: 52, scope: !10151)
!10151 = !DILexicalBlockFile(scope: !10068, file: !971, discriminator: 2)
!10152 = !DILocation(line: 825, column: 5, scope: !10151)
!10153 = distinct !{!10153, !10154}
!10154 = !DILocation(line: 825, column: 5, scope: !10045)
!10155 = !DILocation(line: 835, column: 12, scope: !10045)
!10156 = !DILocation(line: 835, column: 5, scope: !10045)
!10157 = distinct !DISubprogram(name: "get_bits_left", scope: !1115, file: !1115, line: 814, type: !5822, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10158 = !DILocalVariable(name: "gb", arg: 1, scope: !10157, file: !1115, line: 814, type: !4348)
!10159 = !DILocation(line: 814, column: 48, scope: !10157)
!10160 = !DILocation(line: 816, column: 12, scope: !10157)
!10161 = !DILocation(line: 816, column: 16, scope: !10157)
!10162 = !DILocation(line: 816, column: 46, scope: !10157)
!10163 = !DILocation(line: 816, column: 31, scope: !10157)
!10164 = !DILocation(line: 816, column: 29, scope: !10157)
!10165 = !DILocation(line: 816, column: 5, scope: !10157)
!10166 = distinct !DISubprogram(name: "decode_hq_slice_row", scope: !971, file: !971, line: 916, type: !10167, isLocal: true, isDefinition: true, scopeLine: 917, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10167 = !DISubroutineType(types: !10168)
!10168 = !{!979, !1251, !1019, !979, !979}
!10169 = !DILocalVariable(name: "avctx", arg: 1, scope: !10166, file: !971, line: 916, type: !1251)
!10170 = !DILocation(line: 916, column: 48, scope: !10166)
!10171 = !DILocalVariable(name: "arg", arg: 2, scope: !10166, file: !971, line: 916, type: !1019)
!10172 = !DILocation(line: 916, column: 61, scope: !10166)
!10173 = !DILocalVariable(name: "jobnr", arg: 3, scope: !10166, file: !971, line: 916, type: !979)
!10174 = !DILocation(line: 916, column: 70, scope: !10166)
!10175 = !DILocalVariable(name: "threadnr", arg: 4, scope: !10166, file: !971, line: 916, type: !979)
!10176 = !DILocation(line: 916, column: 81, scope: !10166)
!10177 = !DILocalVariable(name: "i", scope: !10166, file: !971, line: 918, type: !979)
!10178 = !DILocation(line: 918, column: 9, scope: !10166)
!10179 = !DILocalVariable(name: "s", scope: !10166, file: !971, line: 919, type: !2670)
!10180 = !DILocation(line: 919, column: 19, scope: !10166)
!10181 = !DILocation(line: 919, column: 23, scope: !10166)
!10182 = !DILocation(line: 919, column: 30, scope: !10166)
!10183 = !DILocalVariable(name: "slices", scope: !10166, file: !971, line: 920, type: !1109)
!10184 = !DILocation(line: 920, column: 17, scope: !10166)
!10185 = !DILocation(line: 920, column: 41, scope: !10166)
!10186 = !DILocation(line: 920, column: 27, scope: !10166)
!10187 = !DILocation(line: 920, column: 48, scope: !10166)
!10188 = !DILocation(line: 920, column: 51, scope: !10166)
!10189 = !DILocation(line: 920, column: 57, scope: !10166)
!10190 = !DILocation(line: 920, column: 56, scope: !10166)
!10191 = !DILocation(line: 920, column: 46, scope: !10166)
!10192 = !DILocalVariable(name: "thread_buf", scope: !10166, file: !971, line: 921, type: !987)
!10193 = !DILocation(line: 921, column: 14, scope: !10166)
!10194 = !DILocation(line: 921, column: 42, scope: !10166)
!10195 = !DILocation(line: 921, column: 45, scope: !10166)
!10196 = !DILocation(line: 921, column: 61, scope: !10166)
!10197 = !DILocation(line: 921, column: 60, scope: !10166)
!10198 = !DILocation(line: 921, column: 28, scope: !10166)
!10199 = !DILocation(line: 921, column: 31, scope: !10166)
!10200 = !DILocation(line: 922, column: 12, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10166, file: !971, line: 922, column: 5)
!10202 = !DILocation(line: 922, column: 10, scope: !10201)
!10203 = !DILocation(line: 922, column: 17, scope: !10204)
!10204 = !DILexicalBlockFile(scope: !10205, file: !971, discriminator: 1)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !971, line: 922, column: 5)
!10206 = !DILocation(line: 922, column: 21, scope: !10204)
!10207 = !DILocation(line: 922, column: 24, scope: !10204)
!10208 = !DILocation(line: 922, column: 19, scope: !10204)
!10209 = !DILocation(line: 922, column: 5, scope: !10204)
!10210 = !DILocation(line: 923, column: 25, scope: !10205)
!10211 = !DILocation(line: 923, column: 36, scope: !10205)
!10212 = !DILocation(line: 923, column: 29, scope: !10205)
!10213 = !DILocation(line: 923, column: 40, scope: !10205)
!10214 = !DILocation(line: 923, column: 9, scope: !10205)
!10215 = !DILocation(line: 922, column: 32, scope: !10216)
!10216 = !DILexicalBlockFile(scope: !10205, file: !971, discriminator: 2)
!10217 = !DILocation(line: 922, column: 5, scope: !10216)
!10218 = distinct !{!10218, !10219}
!10219 = !DILocation(line: 922, column: 5, scope: !10166)
!10220 = !DILocation(line: 924, column: 5, scope: !10166)
!10221 = distinct !DISubprogram(name: "decode_lowdelay_slice", scope: !971, file: !971, line: 775, type: !10222, isLocal: true, isDefinition: true, scopeLine: 776, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{!979, !1251, !1019}
!10224 = !DILocalVariable(name: "avctx", arg: 1, scope: !10221, file: !971, line: 775, type: !1251)
!10225 = !DILocation(line: 775, column: 50, scope: !10221)
!10226 = !DILocalVariable(name: "arg", arg: 2, scope: !10221, file: !971, line: 775, type: !1019)
!10227 = !DILocation(line: 775, column: 63, scope: !10221)
!10228 = !DILocalVariable(name: "s", scope: !10221, file: !971, line: 777, type: !2670)
!10229 = !DILocation(line: 777, column: 19, scope: !10221)
!10230 = !DILocation(line: 777, column: 23, scope: !10221)
!10231 = !DILocation(line: 777, column: 30, scope: !10221)
!10232 = !DILocalVariable(name: "slice", scope: !10221, file: !971, line: 778, type: !1109)
!10233 = !DILocation(line: 778, column: 17, scope: !10221)
!10234 = !DILocation(line: 778, column: 25, scope: !10221)
!10235 = !DILocalVariable(name: "gb", scope: !10221, file: !971, line: 779, type: !4348)
!10236 = !DILocation(line: 779, column: 20, scope: !10221)
!10237 = !DILocation(line: 779, column: 26, scope: !10221)
!10238 = !DILocation(line: 779, column: 33, scope: !10221)
!10239 = !DILocalVariable(name: "orientation", scope: !10221, file: !971, line: 780, type: !970)
!10240 = !DILocation(line: 780, column: 24, scope: !10221)
!10241 = !DILocalVariable(name: "level", scope: !10221, file: !971, line: 781, type: !979)
!10242 = !DILocation(line: 781, column: 9, scope: !10221)
!10243 = !DILocalVariable(name: "quant", scope: !10221, file: !971, line: 781, type: !979)
!10244 = !DILocation(line: 781, column: 16, scope: !10221)
!10245 = !DILocalVariable(name: "chroma_bits", scope: !10221, file: !971, line: 781, type: !979)
!10246 = !DILocation(line: 781, column: 23, scope: !10221)
!10247 = !DILocalVariable(name: "chroma_end", scope: !10221, file: !971, line: 781, type: !979)
!10248 = !DILocation(line: 781, column: 36, scope: !10221)
!10249 = !DILocalVariable(name: "quant_base", scope: !10221, file: !971, line: 783, type: !979)
!10250 = !DILocation(line: 783, column: 9, scope: !10221)
!10251 = !DILocation(line: 783, column: 31, scope: !10221)
!10252 = !DILocation(line: 783, column: 22, scope: !10221)
!10253 = !DILocalVariable(name: "length_bits", scope: !10221, file: !971, line: 784, type: !979)
!10254 = !DILocation(line: 784, column: 9, scope: !10221)
!10255 = !DILocation(line: 784, column: 48, scope: !10221)
!10256 = !DILocation(line: 784, column: 55, scope: !10221)
!10257 = !DILocation(line: 784, column: 46, scope: !10221)
!10258 = !DILocation(line: 784, column: 61, scope: !10221)
!10259 = !DILocation(line: 784, column: 29, scope: !10221)
!10260 = !DILocation(line: 784, column: 27, scope: !10221)
!10261 = !DILocation(line: 784, column: 65, scope: !10221)
!10262 = !DILocalVariable(name: "luma_bits", scope: !10221, file: !971, line: 785, type: !979)
!10263 = !DILocation(line: 785, column: 9, scope: !10221)
!10264 = !DILocation(line: 785, column: 35, scope: !10221)
!10265 = !DILocation(line: 785, column: 39, scope: !10221)
!10266 = !DILocation(line: 785, column: 21, scope: !10221)
!10267 = !DILocalVariable(name: "luma_end", scope: !10221, file: !971, line: 786, type: !979)
!10268 = !DILocation(line: 786, column: 9, scope: !10221)
!10269 = !DILocation(line: 786, column: 35, scope: !10221)
!10270 = !DILocation(line: 786, column: 20, scope: !10221)
!10271 = !DILocation(line: 786, column: 43, scope: !10221)
!10272 = !DILocation(line: 786, column: 71, scope: !10221)
!10273 = !DILocation(line: 786, column: 57, scope: !10274)
!10274 = !DILexicalBlockFile(scope: !10221, file: !971, discriminator: 4)
!10275 = !DILocation(line: 786, column: 54, scope: !10221)
!10276 = !DILocation(line: 786, column: 42, scope: !10221)
!10277 = !DILocation(line: 786, column: 93, scope: !10278)
!10278 = !DILexicalBlockFile(scope: !10221, file: !971, discriminator: 1)
!10279 = !DILocation(line: 786, column: 79, scope: !10278)
!10280 = !DILocation(line: 786, column: 42, scope: !10278)
!10281 = !DILocation(line: 786, column: 101, scope: !10282)
!10282 = !DILexicalBlockFile(scope: !10221, file: !971, discriminator: 2)
!10283 = !DILocation(line: 786, column: 42, scope: !10282)
!10284 = !DILocation(line: 786, column: 42, scope: !10285)
!10285 = !DILexicalBlockFile(scope: !10221, file: !971, discriminator: 3)
!10286 = !DILocation(line: 786, column: 39, scope: !10285)
!10287 = !DILocation(line: 786, column: 9, scope: !10285)
!10288 = !DILocation(line: 789, column: 16, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10221, file: !971, line: 789, column: 5)
!10290 = !DILocation(line: 789, column: 10, scope: !10289)
!10291 = !DILocation(line: 789, column: 21, scope: !10292)
!10292 = !DILexicalBlockFile(scope: !10293, file: !971, discriminator: 1)
!10293 = distinct !DILexicalBlock(scope: !10289, file: !971, line: 789, column: 5)
!10294 = !DILocation(line: 789, column: 29, scope: !10292)
!10295 = !DILocation(line: 789, column: 32, scope: !10292)
!10296 = !DILocation(line: 789, column: 27, scope: !10292)
!10297 = !DILocation(line: 789, column: 5, scope: !10292)
!10298 = !DILocation(line: 790, column: 30, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10293, file: !971, line: 790, column: 9)
!10300 = !DILocation(line: 790, column: 29, scope: !10299)
!10301 = !DILocation(line: 790, column: 28, scope: !10299)
!10302 = !DILocation(line: 790, column: 26, scope: !10299)
!10303 = !DILocation(line: 790, column: 14, scope: !10299)
!10304 = !DILocation(line: 790, column: 37, scope: !10305)
!10305 = !DILexicalBlockFile(scope: !10306, file: !971, discriminator: 1)
!10306 = distinct !DILexicalBlock(scope: !10299, file: !971, line: 790, column: 9)
!10307 = !DILocation(line: 790, column: 49, scope: !10305)
!10308 = !DILocation(line: 790, column: 9, scope: !10305)
!10309 = !DILocation(line: 791, column: 23, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10306, file: !971, line: 790, column: 69)
!10311 = !DILocation(line: 791, column: 61, scope: !10310)
!10312 = !DILocation(line: 791, column: 36, scope: !10310)
!10313 = !DILocation(line: 791, column: 54, scope: !10310)
!10314 = !DILocation(line: 791, column: 39, scope: !10310)
!10315 = !DILocation(line: 791, column: 48, scope: !10310)
!10316 = !DILocation(line: 791, column: 34, scope: !10310)
!10317 = !DILocation(line: 791, column: 75, scope: !10310)
!10318 = !DILocation(line: 791, column: 22, scope: !10310)
!10319 = !DILocation(line: 791, column: 84, scope: !10320)
!10320 = !DILexicalBlockFile(scope: !10310, file: !971, discriminator: 1)
!10321 = !DILocation(line: 791, column: 122, scope: !10320)
!10322 = !DILocation(line: 791, column: 97, scope: !10320)
!10323 = !DILocation(line: 791, column: 115, scope: !10320)
!10324 = !DILocation(line: 791, column: 100, scope: !10320)
!10325 = !DILocation(line: 791, column: 109, scope: !10320)
!10326 = !DILocation(line: 791, column: 95, scope: !10320)
!10327 = !DILocation(line: 791, column: 22, scope: !10320)
!10328 = !DILocation(line: 791, column: 22, scope: !10329)
!10329 = !DILexicalBlockFile(scope: !10310, file: !971, discriminator: 2)
!10330 = !DILocation(line: 791, column: 22, scope: !10331)
!10331 = !DILexicalBlockFile(scope: !10310, file: !971, discriminator: 3)
!10332 = !DILocation(line: 791, column: 19, scope: !10331)
!10333 = !DILocation(line: 792, column: 28, scope: !10310)
!10334 = !DILocation(line: 792, column: 31, scope: !10310)
!10335 = !DILocation(line: 792, column: 35, scope: !10310)
!10336 = !DILocation(line: 792, column: 42, scope: !10310)
!10337 = !DILocation(line: 792, column: 49, scope: !10310)
!10338 = !DILocation(line: 792, column: 58, scope: !10310)
!10339 = !DILocation(line: 792, column: 65, scope: !10310)
!10340 = !DILocation(line: 792, column: 74, scope: !10310)
!10341 = !DILocation(line: 793, column: 53, scope: !10310)
!10342 = !DILocation(line: 793, column: 29, scope: !10310)
!10343 = !DILocation(line: 793, column: 46, scope: !10310)
!10344 = !DILocation(line: 793, column: 32, scope: !10310)
!10345 = !DILocation(line: 793, column: 41, scope: !10310)
!10346 = !DILocation(line: 792, column: 13, scope: !10310)
!10347 = !DILocation(line: 794, column: 9, scope: !10310)
!10348 = !DILocation(line: 790, column: 65, scope: !10349)
!10349 = !DILexicalBlockFile(scope: !10306, file: !971, discriminator: 2)
!10350 = !DILocation(line: 790, column: 9, scope: !10349)
!10351 = distinct !{!10351, !10352}
!10352 = !DILocation(line: 790, column: 9, scope: !10293)
!10353 = !DILocation(line: 794, column: 9, scope: !10354)
!10354 = !DILexicalBlockFile(scope: !10299, file: !971, discriminator: 1)
!10355 = !DILocation(line: 789, column: 52, scope: !10356)
!10356 = !DILexicalBlockFile(scope: !10293, file: !971, discriminator: 2)
!10357 = !DILocation(line: 789, column: 5, scope: !10356)
!10358 = distinct !{!10358, !10359}
!10359 = !DILocation(line: 789, column: 5, scope: !10221)
!10360 = !DILocation(line: 797, column: 20, scope: !10221)
!10361 = !DILocation(line: 797, column: 39, scope: !10221)
!10362 = !DILocation(line: 797, column: 24, scope: !10221)
!10363 = !DILocation(line: 797, column: 45, scope: !10221)
!10364 = !DILocation(line: 797, column: 43, scope: !10221)
!10365 = !DILocation(line: 797, column: 5, scope: !10278)
!10366 = !DILocation(line: 799, column: 21, scope: !10221)
!10367 = !DILocation(line: 799, column: 28, scope: !10221)
!10368 = !DILocation(line: 799, column: 20, scope: !10221)
!10369 = !DILocation(line: 799, column: 34, scope: !10221)
!10370 = !DILocation(line: 799, column: 40, scope: !10221)
!10371 = !DILocation(line: 799, column: 38, scope: !10221)
!10372 = !DILocation(line: 799, column: 54, scope: !10221)
!10373 = !DILocation(line: 799, column: 52, scope: !10221)
!10374 = !DILocation(line: 799, column: 17, scope: !10221)
!10375 = !DILocation(line: 800, column: 33, scope: !10221)
!10376 = !DILocation(line: 800, column: 18, scope: !10221)
!10377 = !DILocation(line: 800, column: 41, scope: !10221)
!10378 = !DILocation(line: 800, column: 71, scope: !10221)
!10379 = !DILocation(line: 800, column: 57, scope: !10274)
!10380 = !DILocation(line: 800, column: 54, scope: !10221)
!10381 = !DILocation(line: 800, column: 40, scope: !10221)
!10382 = !DILocation(line: 800, column: 93, scope: !10278)
!10383 = !DILocation(line: 800, column: 79, scope: !10278)
!10384 = !DILocation(line: 800, column: 40, scope: !10278)
!10385 = !DILocation(line: 800, column: 101, scope: !10282)
!10386 = !DILocation(line: 800, column: 40, scope: !10282)
!10387 = !DILocation(line: 800, column: 40, scope: !10285)
!10388 = !DILocation(line: 800, column: 37, scope: !10285)
!10389 = !DILocation(line: 800, column: 16, scope: !10285)
!10390 = !DILocation(line: 802, column: 16, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10221, file: !971, line: 802, column: 5)
!10392 = !DILocation(line: 802, column: 10, scope: !10391)
!10393 = !DILocation(line: 802, column: 21, scope: !10394)
!10394 = !DILexicalBlockFile(scope: !10395, file: !971, discriminator: 1)
!10395 = distinct !DILexicalBlock(scope: !10391, file: !971, line: 802, column: 5)
!10396 = !DILocation(line: 802, column: 29, scope: !10394)
!10397 = !DILocation(line: 802, column: 32, scope: !10394)
!10398 = !DILocation(line: 802, column: 27, scope: !10394)
!10399 = !DILocation(line: 802, column: 5, scope: !10394)
!10400 = !DILocation(line: 803, column: 30, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10395, file: !971, line: 803, column: 9)
!10402 = !DILocation(line: 803, column: 29, scope: !10401)
!10403 = !DILocation(line: 803, column: 28, scope: !10401)
!10404 = !DILocation(line: 803, column: 26, scope: !10401)
!10405 = !DILocation(line: 803, column: 14, scope: !10401)
!10406 = !DILocation(line: 803, column: 37, scope: !10407)
!10407 = !DILexicalBlockFile(scope: !10408, file: !971, discriminator: 1)
!10408 = distinct !DILexicalBlock(scope: !10401, file: !971, line: 803, column: 9)
!10409 = !DILocation(line: 803, column: 49, scope: !10407)
!10410 = !DILocation(line: 803, column: 9, scope: !10407)
!10411 = !DILocation(line: 804, column: 23, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10408, file: !971, line: 803, column: 69)
!10413 = !DILocation(line: 804, column: 61, scope: !10412)
!10414 = !DILocation(line: 804, column: 36, scope: !10412)
!10415 = !DILocation(line: 804, column: 54, scope: !10412)
!10416 = !DILocation(line: 804, column: 39, scope: !10412)
!10417 = !DILocation(line: 804, column: 48, scope: !10412)
!10418 = !DILocation(line: 804, column: 34, scope: !10412)
!10419 = !DILocation(line: 804, column: 75, scope: !10412)
!10420 = !DILocation(line: 804, column: 22, scope: !10412)
!10421 = !DILocation(line: 804, column: 84, scope: !10422)
!10422 = !DILexicalBlockFile(scope: !10412, file: !971, discriminator: 1)
!10423 = !DILocation(line: 804, column: 122, scope: !10422)
!10424 = !DILocation(line: 804, column: 97, scope: !10422)
!10425 = !DILocation(line: 804, column: 115, scope: !10422)
!10426 = !DILocation(line: 804, column: 100, scope: !10422)
!10427 = !DILocation(line: 804, column: 109, scope: !10422)
!10428 = !DILocation(line: 804, column: 95, scope: !10422)
!10429 = !DILocation(line: 804, column: 22, scope: !10422)
!10430 = !DILocation(line: 804, column: 22, scope: !10431)
!10431 = !DILexicalBlockFile(scope: !10412, file: !971, discriminator: 2)
!10432 = !DILocation(line: 804, column: 22, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !10412, file: !971, discriminator: 3)
!10434 = !DILocation(line: 804, column: 19, scope: !10433)
!10435 = !DILocation(line: 805, column: 28, scope: !10412)
!10436 = !DILocation(line: 805, column: 31, scope: !10412)
!10437 = !DILocation(line: 805, column: 35, scope: !10412)
!10438 = !DILocation(line: 805, column: 42, scope: !10412)
!10439 = !DILocation(line: 805, column: 49, scope: !10412)
!10440 = !DILocation(line: 805, column: 58, scope: !10412)
!10441 = !DILocation(line: 805, column: 65, scope: !10412)
!10442 = !DILocation(line: 805, column: 74, scope: !10412)
!10443 = !DILocation(line: 806, column: 53, scope: !10412)
!10444 = !DILocation(line: 806, column: 29, scope: !10412)
!10445 = !DILocation(line: 806, column: 46, scope: !10412)
!10446 = !DILocation(line: 806, column: 32, scope: !10412)
!10447 = !DILocation(line: 806, column: 41, scope: !10412)
!10448 = !DILocation(line: 807, column: 53, scope: !10412)
!10449 = !DILocation(line: 807, column: 29, scope: !10412)
!10450 = !DILocation(line: 807, column: 46, scope: !10412)
!10451 = !DILocation(line: 807, column: 32, scope: !10412)
!10452 = !DILocation(line: 807, column: 41, scope: !10412)
!10453 = !DILocation(line: 805, column: 13, scope: !10412)
!10454 = !DILocation(line: 808, column: 9, scope: !10412)
!10455 = !DILocation(line: 803, column: 65, scope: !10456)
!10456 = !DILexicalBlockFile(scope: !10408, file: !971, discriminator: 2)
!10457 = !DILocation(line: 803, column: 9, scope: !10456)
!10458 = distinct !{!10458, !10459}
!10459 = !DILocation(line: 803, column: 9, scope: !10395)
!10460 = !DILocation(line: 808, column: 9, scope: !10461)
!10461 = !DILexicalBlockFile(scope: !10401, file: !971, discriminator: 1)
!10462 = !DILocation(line: 802, column: 52, scope: !10463)
!10463 = !DILexicalBlockFile(scope: !10395, file: !971, discriminator: 2)
!10464 = !DILocation(line: 802, column: 5, scope: !10463)
!10465 = distinct !{!10465, !10466}
!10466 = !DILocation(line: 802, column: 5, scope: !10221)
!10467 = !DILocation(line: 810, column: 5, scope: !10221)
!10468 = distinct !DISubprogram(name: "intra_dc_prediction_10", scope: !971, file: !971, line: 595, type: !10469, isLocal: true, isDefinition: true, scopeLine: 595, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10469 = !DISubroutineType(types: !10470)
!10470 = !{null, !7223}
!10471 = !DILocalVariable(name: "b", arg: 1, scope: !10468, file: !971, line: 595, type: !7223)
!10472 = !DILocation(line: 595, column: 52, scope: !10468)
!10473 = !DILocalVariable(name: "buf", scope: !10468, file: !971, line: 595, type: !1130)
!10474 = !DILocation(line: 595, column: 67, scope: !10468)
!10475 = !DILocation(line: 595, column: 84, scope: !10468)
!10476 = !DILocation(line: 595, column: 87, scope: !10468)
!10477 = !DILocation(line: 595, column: 73, scope: !10468)
!10478 = !DILocalVariable(name: "x", scope: !10468, file: !971, line: 595, type: !979)
!10479 = !DILocation(line: 595, column: 97, scope: !10468)
!10480 = !DILocalVariable(name: "y", scope: !10468, file: !971, line: 595, type: !979)
!10481 = !DILocation(line: 595, column: 100, scope: !10468)
!10482 = !DILocation(line: 595, column: 110, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10468, file: !971, line: 595, column: 103)
!10484 = !DILocation(line: 595, column: 108, scope: !10483)
!10485 = !DILocation(line: 595, column: 115, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !10487, file: !971, discriminator: 1)
!10487 = distinct !DILexicalBlock(scope: !10483, file: !971, line: 595, column: 103)
!10488 = !DILocation(line: 595, column: 119, scope: !10486)
!10489 = !DILocation(line: 595, column: 122, scope: !10486)
!10490 = !DILocation(line: 595, column: 117, scope: !10486)
!10491 = !DILocation(line: 595, column: 103, scope: !10486)
!10492 = !DILocation(line: 595, column: 148, scope: !10493)
!10493 = !DILexicalBlockFile(scope: !10487, file: !971, discriminator: 2)
!10494 = !DILocation(line: 595, column: 149, scope: !10493)
!10495 = !DILocation(line: 595, column: 144, scope: !10493)
!10496 = !DILocation(line: 595, column: 138, scope: !10493)
!10497 = !DILocation(line: 595, column: 134, scope: !10493)
!10498 = !DILocation(line: 595, column: 141, scope: !10493)
!10499 = !DILocation(line: 595, column: 130, scope: !10500)
!10500 = !DILexicalBlockFile(scope: !10487, file: !971, discriminator: 3)
!10501 = !DILocation(line: 595, column: 103, scope: !10500)
!10502 = distinct !{!10502, !10503}
!10503 = !DILocation(line: 595, column: 103, scope: !10468)
!10504 = !DILocation(line: 595, column: 162, scope: !10505)
!10505 = !DILexicalBlockFile(scope: !10468, file: !971, discriminator: 4)
!10506 = !DILocation(line: 595, column: 165, scope: !10505)
!10507 = !DILocation(line: 595, column: 178, scope: !10505)
!10508 = !DILocation(line: 595, column: 181, scope: !10505)
!10509 = !DILocation(line: 595, column: 177, scope: !10505)
!10510 = !DILocation(line: 595, column: 172, scope: !10505)
!10511 = !DILocation(line: 595, column: 158, scope: !10505)
!10512 = !DILocation(line: 595, column: 198, scope: !10505)
!10513 = !DILocation(line: 595, column: 196, scope: !10505)
!10514 = !DILocation(line: 595, column: 203, scope: !10515)
!10515 = !DILexicalBlockFile(scope: !10516, file: !971, discriminator: 5)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !971, line: 595, column: 191)
!10517 = distinct !DILexicalBlock(scope: !10468, file: !971, line: 595, column: 191)
!10518 = !DILocation(line: 595, column: 207, scope: !10515)
!10519 = !DILocation(line: 595, column: 210, scope: !10515)
!10520 = !DILocation(line: 595, column: 205, scope: !10515)
!10521 = !DILocation(line: 595, column: 191, scope: !10515)
!10522 = !DILocation(line: 595, column: 241, scope: !10523)
!10523 = !DILexicalBlockFile(scope: !10524, file: !971, discriminator: 6)
!10524 = distinct !DILexicalBlock(scope: !10516, file: !971, line: 595, column: 223)
!10525 = !DILocation(line: 595, column: 244, scope: !10523)
!10526 = !DILocation(line: 595, column: 257, scope: !10523)
!10527 = !DILocation(line: 595, column: 260, scope: !10523)
!10528 = !DILocation(line: 595, column: 256, scope: !10523)
!10529 = !DILocation(line: 595, column: 251, scope: !10523)
!10530 = !DILocation(line: 595, column: 239, scope: !10523)
!10531 = !DILocation(line: 595, column: 235, scope: !10523)
!10532 = !DILocation(line: 595, column: 225, scope: !10523)
!10533 = !DILocation(line: 595, column: 232, scope: !10523)
!10534 = !DILocation(line: 595, column: 278, scope: !10523)
!10535 = !DILocation(line: 595, column: 276, scope: !10523)
!10536 = !DILocation(line: 595, column: 283, scope: !10537)
!10537 = !DILexicalBlockFile(scope: !10538, file: !971, discriminator: 7)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !971, line: 595, column: 271)
!10539 = distinct !DILexicalBlock(scope: !10524, file: !971, line: 595, column: 271)
!10540 = !DILocation(line: 595, column: 287, scope: !10537)
!10541 = !DILocation(line: 595, column: 290, scope: !10537)
!10542 = !DILocation(line: 595, column: 285, scope: !10537)
!10543 = !DILocation(line: 595, column: 271, scope: !10537)
!10544 = !DILocalVariable(name: "pred", scope: !10545, file: !971, line: 595, type: !979)
!10545 = distinct !DILexicalBlock(scope: !10538, file: !971, line: 595, column: 302)
!10546 = !DILocation(line: 595, column: 308, scope: !10545)
!10547 = !DILocation(line: 595, column: 319, scope: !10548)
!10548 = !DILexicalBlockFile(scope: !10545, file: !971, discriminator: 8)
!10549 = !DILocation(line: 595, column: 321, scope: !10548)
!10550 = !DILocation(line: 595, column: 315, scope: !10548)
!10551 = !DILocation(line: 595, column: 332, scope: !10548)
!10552 = !DILocation(line: 595, column: 337, scope: !10548)
!10553 = !DILocation(line: 595, column: 340, scope: !10548)
!10554 = !DILocation(line: 595, column: 353, scope: !10548)
!10555 = !DILocation(line: 595, column: 356, scope: !10548)
!10556 = !DILocation(line: 595, column: 352, scope: !10548)
!10557 = !DILocation(line: 595, column: 347, scope: !10548)
!10558 = !DILocation(line: 595, column: 334, scope: !10548)
!10559 = !DILocation(line: 595, column: 328, scope: !10548)
!10560 = !DILocation(line: 595, column: 326, scope: !10548)
!10561 = !DILocation(line: 595, column: 372, scope: !10548)
!10562 = !DILocation(line: 595, column: 377, scope: !10548)
!10563 = !DILocation(line: 595, column: 380, scope: !10548)
!10564 = !DILocation(line: 595, column: 393, scope: !10548)
!10565 = !DILocation(line: 595, column: 396, scope: !10548)
!10566 = !DILocation(line: 595, column: 392, scope: !10548)
!10567 = !DILocation(line: 595, column: 387, scope: !10548)
!10568 = !DILocation(line: 595, column: 374, scope: !10548)
!10569 = !DILocation(line: 595, column: 404, scope: !10548)
!10570 = !DILocation(line: 595, column: 368, scope: !10548)
!10571 = !DILocation(line: 595, column: 366, scope: !10548)
!10572 = !DILocation(line: 595, column: 308, scope: !10548)
!10573 = !DILocation(line: 595, column: 427, scope: !10548)
!10574 = !DILocation(line: 595, column: 419, scope: !10548)
!10575 = !DILocation(line: 595, column: 413, scope: !10548)
!10576 = !DILocation(line: 595, column: 409, scope: !10548)
!10577 = !DILocation(line: 595, column: 416, scope: !10548)
!10578 = !DILocation(line: 595, column: 434, scope: !10548)
!10579 = !DILocation(line: 595, column: 298, scope: !10580)
!10580 = !DILexicalBlockFile(scope: !10538, file: !971, discriminator: 9)
!10581 = !DILocation(line: 595, column: 271, scope: !10580)
!10582 = distinct !{!10582, !10583}
!10583 = !DILocation(line: 595, column: 271, scope: !10524)
!10584 = !DILocation(line: 595, column: 444, scope: !10585)
!10585 = !DILexicalBlockFile(scope: !10524, file: !971, discriminator: 10)
!10586 = !DILocation(line: 595, column: 447, scope: !10585)
!10587 = !DILocation(line: 595, column: 460, scope: !10585)
!10588 = !DILocation(line: 595, column: 463, scope: !10585)
!10589 = !DILocation(line: 595, column: 459, scope: !10585)
!10590 = !DILocation(line: 595, column: 454, scope: !10585)
!10591 = !DILocation(line: 595, column: 440, scope: !10585)
!10592 = !DILocation(line: 595, column: 473, scope: !10585)
!10593 = !DILocation(line: 595, column: 219, scope: !10594)
!10594 = !DILexicalBlockFile(scope: !10516, file: !971, discriminator: 11)
!10595 = !DILocation(line: 595, column: 191, scope: !10594)
!10596 = distinct !{!10596, !10597}
!10597 = !DILocation(line: 595, column: 191, scope: !10468)
!10598 = !DILocation(line: 595, column: 475, scope: !10599)
!10599 = !DILexicalBlockFile(scope: !10468, file: !971, discriminator: 12)
!10600 = distinct !DISubprogram(name: "intra_dc_prediction_8", scope: !971, file: !971, line: 594, type: !10469, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10601 = !DILocalVariable(name: "b", arg: 1, scope: !10600, file: !971, line: 594, type: !7223)
!10602 = !DILocation(line: 594, column: 51, scope: !10600)
!10603 = !DILocalVariable(name: "buf", scope: !10600, file: !971, line: 594, type: !1106)
!10604 = !DILocation(line: 594, column: 65, scope: !10600)
!10605 = !DILocation(line: 594, column: 81, scope: !10600)
!10606 = !DILocation(line: 594, column: 84, scope: !10600)
!10607 = !DILocation(line: 594, column: 71, scope: !10600)
!10608 = !DILocalVariable(name: "x", scope: !10600, file: !971, line: 594, type: !979)
!10609 = !DILocation(line: 594, column: 94, scope: !10600)
!10610 = !DILocalVariable(name: "y", scope: !10600, file: !971, line: 594, type: !979)
!10611 = !DILocation(line: 594, column: 97, scope: !10600)
!10612 = !DILocation(line: 594, column: 107, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10600, file: !971, line: 594, column: 100)
!10614 = !DILocation(line: 594, column: 105, scope: !10613)
!10615 = !DILocation(line: 594, column: 112, scope: !10616)
!10616 = !DILexicalBlockFile(scope: !10617, file: !971, discriminator: 1)
!10617 = distinct !DILexicalBlock(scope: !10613, file: !971, line: 594, column: 100)
!10618 = !DILocation(line: 594, column: 116, scope: !10616)
!10619 = !DILocation(line: 594, column: 119, scope: !10616)
!10620 = !DILocation(line: 594, column: 114, scope: !10616)
!10621 = !DILocation(line: 594, column: 100, scope: !10616)
!10622 = !DILocation(line: 594, column: 145, scope: !10623)
!10623 = !DILexicalBlockFile(scope: !10617, file: !971, discriminator: 2)
!10624 = !DILocation(line: 594, column: 146, scope: !10623)
!10625 = !DILocation(line: 594, column: 141, scope: !10623)
!10626 = !DILocation(line: 594, column: 135, scope: !10623)
!10627 = !DILocation(line: 594, column: 131, scope: !10623)
!10628 = !DILocation(line: 594, column: 138, scope: !10623)
!10629 = !DILocation(line: 594, column: 127, scope: !10630)
!10630 = !DILexicalBlockFile(scope: !10617, file: !971, discriminator: 3)
!10631 = !DILocation(line: 594, column: 100, scope: !10630)
!10632 = distinct !{!10632, !10633}
!10633 = !DILocation(line: 594, column: 100, scope: !10600)
!10634 = !DILocation(line: 594, column: 159, scope: !10635)
!10635 = !DILexicalBlockFile(scope: !10600, file: !971, discriminator: 4)
!10636 = !DILocation(line: 594, column: 162, scope: !10635)
!10637 = !DILocation(line: 594, column: 175, scope: !10635)
!10638 = !DILocation(line: 594, column: 178, scope: !10635)
!10639 = !DILocation(line: 594, column: 174, scope: !10635)
!10640 = !DILocation(line: 594, column: 169, scope: !10635)
!10641 = !DILocation(line: 594, column: 155, scope: !10635)
!10642 = !DILocation(line: 594, column: 195, scope: !10635)
!10643 = !DILocation(line: 594, column: 193, scope: !10635)
!10644 = !DILocation(line: 594, column: 200, scope: !10645)
!10645 = !DILexicalBlockFile(scope: !10646, file: !971, discriminator: 5)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !971, line: 594, column: 188)
!10647 = distinct !DILexicalBlock(scope: !10600, file: !971, line: 594, column: 188)
!10648 = !DILocation(line: 594, column: 204, scope: !10645)
!10649 = !DILocation(line: 594, column: 207, scope: !10645)
!10650 = !DILocation(line: 594, column: 202, scope: !10645)
!10651 = !DILocation(line: 594, column: 188, scope: !10645)
!10652 = !DILocation(line: 594, column: 238, scope: !10653)
!10653 = !DILexicalBlockFile(scope: !10654, file: !971, discriminator: 6)
!10654 = distinct !DILexicalBlock(scope: !10646, file: !971, line: 594, column: 220)
!10655 = !DILocation(line: 594, column: 241, scope: !10653)
!10656 = !DILocation(line: 594, column: 254, scope: !10653)
!10657 = !DILocation(line: 594, column: 257, scope: !10653)
!10658 = !DILocation(line: 594, column: 253, scope: !10653)
!10659 = !DILocation(line: 594, column: 248, scope: !10653)
!10660 = !DILocation(line: 594, column: 236, scope: !10653)
!10661 = !DILocation(line: 594, column: 232, scope: !10653)
!10662 = !DILocation(line: 594, column: 222, scope: !10653)
!10663 = !DILocation(line: 594, column: 229, scope: !10653)
!10664 = !DILocation(line: 594, column: 275, scope: !10653)
!10665 = !DILocation(line: 594, column: 273, scope: !10653)
!10666 = !DILocation(line: 594, column: 280, scope: !10667)
!10667 = !DILexicalBlockFile(scope: !10668, file: !971, discriminator: 7)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !971, line: 594, column: 268)
!10669 = distinct !DILexicalBlock(scope: !10654, file: !971, line: 594, column: 268)
!10670 = !DILocation(line: 594, column: 284, scope: !10667)
!10671 = !DILocation(line: 594, column: 287, scope: !10667)
!10672 = !DILocation(line: 594, column: 282, scope: !10667)
!10673 = !DILocation(line: 594, column: 268, scope: !10667)
!10674 = !DILocalVariable(name: "pred", scope: !10675, file: !971, line: 594, type: !979)
!10675 = distinct !DILexicalBlock(scope: !10668, file: !971, line: 594, column: 299)
!10676 = !DILocation(line: 594, column: 305, scope: !10675)
!10677 = !DILocation(line: 594, column: 316, scope: !10678)
!10678 = !DILexicalBlockFile(scope: !10675, file: !971, discriminator: 8)
!10679 = !DILocation(line: 594, column: 318, scope: !10678)
!10680 = !DILocation(line: 594, column: 312, scope: !10678)
!10681 = !DILocation(line: 594, column: 329, scope: !10678)
!10682 = !DILocation(line: 594, column: 334, scope: !10678)
!10683 = !DILocation(line: 594, column: 337, scope: !10678)
!10684 = !DILocation(line: 594, column: 350, scope: !10678)
!10685 = !DILocation(line: 594, column: 353, scope: !10678)
!10686 = !DILocation(line: 594, column: 349, scope: !10678)
!10687 = !DILocation(line: 594, column: 344, scope: !10678)
!10688 = !DILocation(line: 594, column: 331, scope: !10678)
!10689 = !DILocation(line: 594, column: 325, scope: !10678)
!10690 = !DILocation(line: 594, column: 323, scope: !10678)
!10691 = !DILocation(line: 594, column: 369, scope: !10678)
!10692 = !DILocation(line: 594, column: 374, scope: !10678)
!10693 = !DILocation(line: 594, column: 377, scope: !10678)
!10694 = !DILocation(line: 594, column: 390, scope: !10678)
!10695 = !DILocation(line: 594, column: 393, scope: !10678)
!10696 = !DILocation(line: 594, column: 389, scope: !10678)
!10697 = !DILocation(line: 594, column: 384, scope: !10678)
!10698 = !DILocation(line: 594, column: 371, scope: !10678)
!10699 = !DILocation(line: 594, column: 401, scope: !10678)
!10700 = !DILocation(line: 594, column: 365, scope: !10678)
!10701 = !DILocation(line: 594, column: 363, scope: !10678)
!10702 = !DILocation(line: 594, column: 305, scope: !10678)
!10703 = !DILocation(line: 594, column: 424, scope: !10678)
!10704 = !DILocation(line: 594, column: 416, scope: !10678)
!10705 = !DILocation(line: 594, column: 410, scope: !10678)
!10706 = !DILocation(line: 594, column: 406, scope: !10678)
!10707 = !DILocation(line: 594, column: 413, scope: !10678)
!10708 = !DILocation(line: 594, column: 431, scope: !10678)
!10709 = !DILocation(line: 594, column: 295, scope: !10710)
!10710 = !DILexicalBlockFile(scope: !10668, file: !971, discriminator: 9)
!10711 = !DILocation(line: 594, column: 268, scope: !10710)
!10712 = distinct !{!10712, !10713}
!10713 = !DILocation(line: 594, column: 268, scope: !10654)
!10714 = !DILocation(line: 594, column: 441, scope: !10715)
!10715 = !DILexicalBlockFile(scope: !10654, file: !971, discriminator: 10)
!10716 = !DILocation(line: 594, column: 444, scope: !10715)
!10717 = !DILocation(line: 594, column: 457, scope: !10715)
!10718 = !DILocation(line: 594, column: 460, scope: !10715)
!10719 = !DILocation(line: 594, column: 456, scope: !10715)
!10720 = !DILocation(line: 594, column: 451, scope: !10715)
!10721 = !DILocation(line: 594, column: 437, scope: !10715)
!10722 = !DILocation(line: 594, column: 470, scope: !10715)
!10723 = !DILocation(line: 594, column: 216, scope: !10724)
!10724 = !DILexicalBlockFile(scope: !10646, file: !971, discriminator: 11)
!10725 = !DILocation(line: 594, column: 188, scope: !10724)
!10726 = distinct !{!10726, !10727}
!10727 = !DILocation(line: 594, column: 188, scope: !10600)
!10728 = !DILocation(line: 594, column: 472, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10600, file: !971, discriminator: 12)
!10730 = distinct !DISubprogram(name: "decode_hq_slice", scope: !971, file: !971, line: 842, type: !10731, isLocal: true, isDefinition: true, scopeLine: 843, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{!979, !2670, !1109, !987}
!10733 = !DILocalVariable(name: "s", arg: 1, scope: !10730, file: !971, line: 842, type: !2670)
!10734 = !DILocation(line: 842, column: 42, scope: !10730)
!10735 = !DILocalVariable(name: "slice", arg: 2, scope: !10730, file: !971, line: 842, type: !1109)
!10736 = !DILocation(line: 842, column: 57, scope: !10730)
!10737 = !DILocalVariable(name: "tmp_buf", arg: 3, scope: !10730, file: !971, line: 842, type: !987)
!10738 = !DILocation(line: 842, column: 73, scope: !10730)
!10739 = !DILocalVariable(name: "i", scope: !10730, file: !971, line: 844, type: !979)
!10740 = !DILocation(line: 844, column: 9, scope: !10730)
!10741 = !DILocalVariable(name: "level", scope: !10730, file: !971, line: 844, type: !979)
!10742 = !DILocation(line: 844, column: 12, scope: !10730)
!10743 = !DILocalVariable(name: "orientation", scope: !10730, file: !971, line: 844, type: !979)
!10744 = !DILocation(line: 844, column: 19, scope: !10730)
!10745 = !DILocalVariable(name: "quant_idx", scope: !10730, file: !971, line: 844, type: !979)
!10746 = !DILocation(line: 844, column: 32, scope: !10730)
!10747 = !DILocalVariable(name: "qfactor", scope: !10730, file: !971, line: 845, type: !10748)
!10748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 640, align: 32, elements: !2820)
!10749 = !DILocation(line: 845, column: 9, scope: !10730)
!10750 = !DILocalVariable(name: "qoffset", scope: !10730, file: !971, line: 845, type: !10748)
!10751 = !DILocation(line: 845, column: 24, scope: !10730)
!10752 = !DILocalVariable(name: "gb", scope: !10730, file: !971, line: 846, type: !4348)
!10753 = !DILocation(line: 846, column: 20, scope: !10730)
!10754 = !DILocation(line: 846, column: 26, scope: !10730)
!10755 = !DILocation(line: 846, column: 33, scope: !10730)
!10756 = !DILocalVariable(name: "coeffs_num", scope: !10730, file: !971, line: 847, type: !8926)
!10757 = !DILocation(line: 847, column: 17, scope: !10730)
!10758 = !DILocation(line: 849, column: 20, scope: !10730)
!10759 = !DILocation(line: 849, column: 26, scope: !10730)
!10760 = !DILocation(line: 849, column: 29, scope: !10730)
!10761 = !DILocation(line: 849, column: 41, scope: !10730)
!10762 = !DILocation(line: 849, column: 25, scope: !10730)
!10763 = !DILocation(line: 849, column: 5, scope: !10730)
!10764 = !DILocation(line: 850, column: 26, scope: !10730)
!10765 = !DILocation(line: 850, column: 17, scope: !10730)
!10766 = !DILocation(line: 850, column: 15, scope: !10730)
!10767 = !DILocation(line: 852, column: 9, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10730, file: !971, line: 852, column: 9)
!10769 = !DILocation(line: 852, column: 19, scope: !10768)
!10770 = !DILocation(line: 852, column: 9, scope: !10730)
!10771 = !DILocation(line: 853, column: 16, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10768, file: !971, line: 852, column: 93)
!10773 = !DILocation(line: 853, column: 19, scope: !10772)
!10774 = !DILocation(line: 853, column: 67, scope: !10772)
!10775 = !DILocation(line: 853, column: 9, scope: !10772)
!10776 = !DILocation(line: 854, column: 9, scope: !10772)
!10777 = !DILocation(line: 858, column: 16, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10730, file: !971, line: 858, column: 5)
!10779 = !DILocation(line: 858, column: 10, scope: !10778)
!10780 = !DILocation(line: 858, column: 21, scope: !10781)
!10781 = !DILexicalBlockFile(scope: !10782, file: !971, discriminator: 1)
!10782 = distinct !DILexicalBlock(scope: !10778, file: !971, line: 858, column: 5)
!10783 = !DILocation(line: 858, column: 29, scope: !10781)
!10784 = !DILocation(line: 858, column: 32, scope: !10781)
!10785 = !DILocation(line: 858, column: 27, scope: !10781)
!10786 = !DILocation(line: 858, column: 5, scope: !10781)
!10787 = !DILocation(line: 859, column: 30, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !971, line: 859, column: 9)
!10789 = distinct !DILexicalBlock(scope: !10782, file: !971, line: 858, column: 56)
!10790 = !DILocation(line: 859, column: 29, scope: !10788)
!10791 = !DILocation(line: 859, column: 28, scope: !10788)
!10792 = !DILocation(line: 859, column: 26, scope: !10788)
!10793 = !DILocation(line: 859, column: 14, scope: !10788)
!10794 = !DILocation(line: 859, column: 37, scope: !10795)
!10795 = !DILexicalBlockFile(scope: !10796, file: !971, discriminator: 1)
!10796 = distinct !DILexicalBlock(scope: !10788, file: !971, line: 859, column: 9)
!10797 = !DILocation(line: 859, column: 49, scope: !10795)
!10798 = !DILocation(line: 859, column: 9, scope: !10795)
!10799 = !DILocalVariable(name: "quant", scope: !10800, file: !971, line: 860, type: !1154)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !971, line: 859, column: 69)
!10801 = !DILocation(line: 860, column: 23, scope: !10800)
!10802 = !DILocation(line: 860, column: 33, scope: !10800)
!10803 = !DILocation(line: 860, column: 70, scope: !10800)
!10804 = !DILocation(line: 860, column: 45, scope: !10800)
!10805 = !DILocation(line: 860, column: 63, scope: !10800)
!10806 = !DILocation(line: 860, column: 48, scope: !10800)
!10807 = !DILocation(line: 860, column: 57, scope: !10800)
!10808 = !DILocation(line: 860, column: 43, scope: !10800)
!10809 = !DILocation(line: 860, column: 84, scope: !10800)
!10810 = !DILocation(line: 860, column: 32, scope: !10800)
!10811 = !DILocation(line: 860, column: 93, scope: !10812)
!10812 = !DILexicalBlockFile(scope: !10800, file: !971, discriminator: 1)
!10813 = !DILocation(line: 860, column: 130, scope: !10812)
!10814 = !DILocation(line: 860, column: 105, scope: !10812)
!10815 = !DILocation(line: 860, column: 123, scope: !10812)
!10816 = !DILocation(line: 860, column: 108, scope: !10812)
!10817 = !DILocation(line: 860, column: 117, scope: !10812)
!10818 = !DILocation(line: 860, column: 103, scope: !10812)
!10819 = !DILocation(line: 860, column: 32, scope: !10812)
!10820 = !DILocation(line: 860, column: 32, scope: !10821)
!10821 = !DILexicalBlockFile(scope: !10800, file: !971, discriminator: 2)
!10822 = !DILocation(line: 860, column: 32, scope: !10823)
!10823 = !DILexicalBlockFile(scope: !10800, file: !971, discriminator: 3)
!10824 = !DILocation(line: 860, column: 23, scope: !10823)
!10825 = !DILocation(line: 861, column: 63, scope: !10800)
!10826 = !DILocation(line: 861, column: 43, scope: !10800)
!10827 = !DILocation(line: 861, column: 28, scope: !10800)
!10828 = !DILocation(line: 861, column: 13, scope: !10800)
!10829 = !DILocation(line: 861, column: 21, scope: !10800)
!10830 = !DILocation(line: 861, column: 41, scope: !10800)
!10831 = !DILocation(line: 862, column: 70, scope: !10800)
!10832 = !DILocation(line: 862, column: 43, scope: !10800)
!10833 = !DILocation(line: 862, column: 77, scope: !10800)
!10834 = !DILocation(line: 862, column: 28, scope: !10800)
!10835 = !DILocation(line: 862, column: 13, scope: !10800)
!10836 = !DILocation(line: 862, column: 21, scope: !10800)
!10837 = !DILocation(line: 862, column: 41, scope: !10800)
!10838 = !DILocation(line: 863, column: 9, scope: !10800)
!10839 = !DILocation(line: 859, column: 65, scope: !10840)
!10840 = !DILexicalBlockFile(scope: !10796, file: !971, discriminator: 2)
!10841 = !DILocation(line: 859, column: 9, scope: !10840)
!10842 = distinct !{!10842, !10843}
!10843 = !DILocation(line: 859, column: 9, scope: !10789)
!10844 = !DILocation(line: 864, column: 5, scope: !10789)
!10845 = !DILocation(line: 858, column: 52, scope: !10846)
!10846 = !DILexicalBlockFile(scope: !10782, file: !971, discriminator: 2)
!10847 = !DILocation(line: 858, column: 5, scope: !10846)
!10848 = distinct !{!10848, !10849}
!10849 = !DILocation(line: 858, column: 5, scope: !10730)
!10850 = !DILocation(line: 867, column: 12, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10730, file: !971, line: 867, column: 5)
!10852 = !DILocation(line: 867, column: 10, scope: !10851)
!10853 = !DILocation(line: 867, column: 17, scope: !10854)
!10854 = !DILexicalBlockFile(scope: !10855, file: !971, discriminator: 1)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !971, line: 867, column: 5)
!10856 = !DILocation(line: 867, column: 19, scope: !10854)
!10857 = !DILocation(line: 867, column: 5, scope: !10854)
!10858 = !DILocalVariable(name: "coef_num", scope: !10859, file: !971, line: 868, type: !979)
!10859 = distinct !DILexicalBlock(scope: !10855, file: !971, line: 867, column: 29)
!10860 = !DILocation(line: 868, column: 13, scope: !10859)
!10861 = !DILocalVariable(name: "coef_par", scope: !10859, file: !971, line: 868, type: !979)
!10862 = !DILocation(line: 868, column: 23, scope: !10859)
!10863 = !DILocalVariable(name: "off", scope: !10859, file: !971, line: 868, type: !979)
!10864 = !DILocation(line: 868, column: 33, scope: !10859)
!10865 = !DILocalVariable(name: "length", scope: !10859, file: !971, line: 869, type: !1011)
!10866 = !DILocation(line: 869, column: 17, scope: !10859)
!10867 = !DILocation(line: 869, column: 26, scope: !10859)
!10868 = !DILocation(line: 869, column: 29, scope: !10859)
!10869 = !DILocation(line: 869, column: 41, scope: !10859)
!10870 = !DILocation(line: 869, column: 62, scope: !10859)
!10871 = !DILocation(line: 869, column: 53, scope: !10859)
!10872 = !DILocation(line: 869, column: 52, scope: !10859)
!10873 = !DILocalVariable(name: "bits_end", scope: !10859, file: !971, line: 870, type: !1011)
!10874 = !DILocation(line: 870, column: 17, scope: !10859)
!10875 = !DILocation(line: 870, column: 43, scope: !10859)
!10876 = !DILocation(line: 870, column: 28, scope: !10859)
!10877 = !DILocation(line: 870, column: 51, scope: !10859)
!10878 = !DILocation(line: 870, column: 50, scope: !10859)
!10879 = !DILocation(line: 870, column: 47, scope: !10859)
!10880 = !DILocalVariable(name: "addr", scope: !10859, file: !971, line: 871, type: !1119)
!10881 = !DILocation(line: 871, column: 24, scope: !10859)
!10882 = !DILocation(line: 871, column: 46, scope: !10859)
!10883 = !DILocation(line: 871, column: 31, scope: !10859)
!10884 = !DILocation(line: 873, column: 13, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10859, file: !971, line: 873, column: 13)
!10886 = !DILocation(line: 873, column: 19, scope: !10885)
!10887 = !DILocation(line: 873, column: 38, scope: !10885)
!10888 = !DILocation(line: 873, column: 24, scope: !10885)
!10889 = !DILocation(line: 873, column: 22, scope: !10885)
!10890 = !DILocation(line: 873, column: 13, scope: !10859)
!10891 = !DILocation(line: 874, column: 20, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10885, file: !971, line: 873, column: 43)
!10893 = !DILocation(line: 874, column: 23, scope: !10892)
!10894 = !DILocation(line: 874, column: 13, scope: !10892)
!10895 = !DILocation(line: 875, column: 13, scope: !10892)
!10896 = !DILocation(line: 878, column: 35, scope: !10859)
!10897 = !DILocation(line: 878, column: 38, scope: !10859)
!10898 = !DILocation(line: 878, column: 45, scope: !10859)
!10899 = !DILocation(line: 878, column: 54, scope: !10859)
!10900 = !DILocation(line: 878, column: 61, scope: !10859)
!10901 = !DILocation(line: 878, column: 70, scope: !10859)
!10902 = !DILocation(line: 878, column: 73, scope: !10859)
!10903 = !DILocation(line: 878, column: 20, scope: !10859)
!10904 = !DILocation(line: 878, column: 18, scope: !10859)
!10905 = !DILocation(line: 880, column: 13, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10859, file: !971, line: 880, column: 13)
!10907 = !DILocation(line: 880, column: 16, scope: !10906)
!10908 = !DILocation(line: 880, column: 13, scope: !10859)
!10909 = !DILocation(line: 881, column: 51, scope: !10906)
!10910 = !DILocation(line: 881, column: 54, scope: !10906)
!10911 = !DILocation(line: 881, column: 66, scope: !10906)
!10912 = !DILocation(line: 882, column: 51, scope: !10906)
!10913 = !DILocation(line: 882, column: 59, scope: !10906)
!10914 = !DILocation(line: 882, column: 68, scope: !10906)
!10915 = !DILocation(line: 881, column: 24, scope: !10906)
!10916 = !DILocation(line: 881, column: 22, scope: !10906)
!10917 = !DILocation(line: 881, column: 13, scope: !10906)
!10918 = !DILocation(line: 884, column: 51, scope: !10906)
!10919 = !DILocation(line: 884, column: 54, scope: !10906)
!10920 = !DILocation(line: 884, column: 66, scope: !10906)
!10921 = !DILocation(line: 885, column: 51, scope: !10906)
!10922 = !DILocation(line: 885, column: 59, scope: !10906)
!10923 = !DILocation(line: 885, column: 68, scope: !10906)
!10924 = !DILocation(line: 884, column: 24, scope: !10906)
!10925 = !DILocation(line: 884, column: 22, scope: !10906)
!10926 = !DILocation(line: 887, column: 13, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10859, file: !971, line: 887, column: 13)
!10928 = !DILocation(line: 887, column: 24, scope: !10927)
!10929 = !DILocation(line: 887, column: 22, scope: !10927)
!10930 = !DILocation(line: 887, column: 13, scope: !10859)
!10931 = !DILocalVariable(name: "start_b", scope: !10932, file: !971, line: 888, type: !1154)
!10932 = distinct !DILexicalBlock(scope: !10927, file: !971, line: 887, column: 34)
!10933 = !DILocation(line: 888, column: 23, scope: !10932)
!10934 = !DILocation(line: 888, column: 33, scope: !10932)
!10935 = !DILocation(line: 888, column: 51, scope: !10932)
!10936 = !DILocation(line: 888, column: 54, scope: !10932)
!10937 = !DILocation(line: 888, column: 61, scope: !10932)
!10938 = !DILocation(line: 888, column: 47, scope: !10932)
!10939 = !DILocation(line: 888, column: 42, scope: !10932)
!10940 = !DILocalVariable(name: "end_b", scope: !10932, file: !971, line: 889, type: !1154)
!10941 = !DILocation(line: 889, column: 23, scope: !10932)
!10942 = !DILocation(line: 889, column: 31, scope: !10932)
!10943 = !DILocation(line: 889, column: 49, scope: !10932)
!10944 = !DILocation(line: 889, column: 52, scope: !10932)
!10945 = !DILocation(line: 889, column: 59, scope: !10932)
!10946 = !DILocation(line: 889, column: 45, scope: !10932)
!10947 = !DILocation(line: 889, column: 40, scope: !10932)
!10948 = !DILocation(line: 890, column: 29, scope: !10932)
!10949 = !DILocation(line: 890, column: 21, scope: !10932)
!10950 = !DILocation(line: 890, column: 42, scope: !10932)
!10951 = !DILocation(line: 890, column: 50, scope: !10932)
!10952 = !DILocation(line: 890, column: 48, scope: !10932)
!10953 = !DILocation(line: 890, column: 13, scope: !10932)
!10954 = !DILocation(line: 891, column: 9, scope: !10932)
!10955 = !DILocation(line: 893, column: 20, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10859, file: !971, line: 893, column: 9)
!10957 = !DILocation(line: 893, column: 14, scope: !10956)
!10958 = !DILocation(line: 893, column: 25, scope: !10959)
!10959 = !DILexicalBlockFile(scope: !10960, file: !971, discriminator: 1)
!10960 = distinct !DILexicalBlock(scope: !10956, file: !971, line: 893, column: 9)
!10961 = !DILocation(line: 893, column: 33, scope: !10959)
!10962 = !DILocation(line: 893, column: 36, scope: !10959)
!10963 = !DILocation(line: 893, column: 31, scope: !10959)
!10964 = !DILocation(line: 893, column: 9, scope: !10959)
!10965 = !DILocalVariable(name: "c", scope: !10966, file: !971, line: 894, type: !10967)
!10966 = distinct !DILexicalBlock(scope: !10960, file: !971, line: 893, column: 60)
!10967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10968, size: 64, align: 64)
!10968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8927)
!10969 = !DILocation(line: 894, column: 32, scope: !10966)
!10970 = !DILocation(line: 894, column: 48, scope: !10966)
!10971 = !DILocation(line: 894, column: 37, scope: !10966)
!10972 = !DILocation(line: 895, column: 34, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10966, file: !971, line: 895, column: 13)
!10974 = !DILocation(line: 895, column: 33, scope: !10973)
!10975 = !DILocation(line: 895, column: 32, scope: !10973)
!10976 = !DILocation(line: 895, column: 30, scope: !10973)
!10977 = !DILocation(line: 895, column: 18, scope: !10973)
!10978 = !DILocation(line: 895, column: 41, scope: !10979)
!10979 = !DILexicalBlockFile(scope: !10980, file: !971, discriminator: 1)
!10980 = distinct !DILexicalBlock(scope: !10973, file: !971, line: 895, column: 13)
!10981 = !DILocation(line: 895, column: 53, scope: !10979)
!10982 = !DILocation(line: 895, column: 13, scope: !10979)
!10983 = !DILocalVariable(name: "b1", scope: !10984, file: !971, line: 896, type: !10985)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !971, line: 895, column: 73)
!10985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10986, size: 64, align: 64)
!10986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2805)
!10987 = !DILocation(line: 896, column: 32, scope: !10984)
!10988 = !DILocation(line: 896, column: 62, scope: !10984)
!10989 = !DILocation(line: 896, column: 38, scope: !10984)
!10990 = !DILocation(line: 896, column: 55, scope: !10984)
!10991 = !DILocation(line: 896, column: 47, scope: !10984)
!10992 = !DILocation(line: 896, column: 41, scope: !10984)
!10993 = !DILocation(line: 896, column: 50, scope: !10984)
!10994 = !DILocalVariable(name: "buf", scope: !10984, file: !971, line: 897, type: !987)
!10995 = !DILocation(line: 897, column: 26, scope: !10984)
!10996 = !DILocation(line: 897, column: 32, scope: !10984)
!10997 = !DILocation(line: 897, column: 36, scope: !10984)
!10998 = !DILocation(line: 897, column: 43, scope: !10984)
!10999 = !DILocation(line: 897, column: 46, scope: !10984)
!11000 = !DILocation(line: 897, column: 52, scope: !10984)
!11001 = !DILocation(line: 897, column: 56, scope: !10984)
!11002 = !DILocation(line: 897, column: 50, scope: !10984)
!11003 = !DILocation(line: 897, column: 41, scope: !10984)
!11004 = !DILocation(line: 897, column: 66, scope: !10984)
!11005 = !DILocation(line: 897, column: 69, scope: !10984)
!11006 = !DILocation(line: 897, column: 78, scope: !10984)
!11007 = !DILocation(line: 897, column: 81, scope: !10984)
!11008 = !DILocation(line: 897, column: 88, scope: !10984)
!11009 = !DILocation(line: 897, column: 74, scope: !10984)
!11010 = !DILocation(line: 897, column: 63, scope: !10984)
!11011 = !DILocalVariable(name: "qfunc", scope: !10984, file: !971, line: 900, type: !1154)
!11012 = !DILocation(line: 900, column: 27, scope: !10984)
!11013 = !DILocation(line: 900, column: 35, scope: !10984)
!11014 = !DILocation(line: 900, column: 38, scope: !10984)
!11015 = !DILocation(line: 900, column: 50, scope: !10984)
!11016 = !DILocation(line: 900, column: 53, scope: !10984)
!11017 = !DILocation(line: 900, column: 59, scope: !10984)
!11018 = !DILocation(line: 900, column: 48, scope: !10984)
!11019 = !DILocation(line: 900, column: 45, scope: !10984)
!11020 = !DILocation(line: 901, column: 45, scope: !10984)
!11021 = !DILocation(line: 901, column: 17, scope: !10984)
!11022 = !DILocation(line: 901, column: 20, scope: !10984)
!11023 = !DILocation(line: 901, column: 29, scope: !10984)
!11024 = !DILocation(line: 901, column: 61, scope: !10984)
!11025 = !DILocation(line: 901, column: 53, scope: !10984)
!11026 = !DILocation(line: 901, column: 67, scope: !10984)
!11027 = !DILocation(line: 901, column: 72, scope: !10984)
!11028 = !DILocation(line: 901, column: 76, scope: !10984)
!11029 = !DILocation(line: 902, column: 67, scope: !10984)
!11030 = !DILocation(line: 902, column: 52, scope: !10984)
!11031 = !DILocation(line: 902, column: 60, scope: !10984)
!11032 = !DILocation(line: 903, column: 67, scope: !10984)
!11033 = !DILocation(line: 903, column: 52, scope: !10984)
!11034 = !DILocation(line: 903, column: 60, scope: !10984)
!11035 = !DILocation(line: 904, column: 52, scope: !10984)
!11036 = !DILocation(line: 904, column: 55, scope: !10984)
!11037 = !DILocation(line: 904, column: 62, scope: !10984)
!11038 = !DILocation(line: 904, column: 65, scope: !10984)
!11039 = !DILocation(line: 906, column: 24, scope: !10984)
!11040 = !DILocation(line: 906, column: 27, scope: !10984)
!11041 = !DILocation(line: 906, column: 35, scope: !10984)
!11042 = !DILocation(line: 906, column: 38, scope: !10984)
!11043 = !DILocation(line: 906, column: 45, scope: !10984)
!11044 = !DILocation(line: 906, column: 31, scope: !10984)
!11045 = !DILocation(line: 906, column: 21, scope: !10984)
!11046 = !DILocation(line: 907, column: 13, scope: !10984)
!11047 = !DILocation(line: 895, column: 69, scope: !11048)
!11048 = !DILexicalBlockFile(scope: !10980, file: !971, discriminator: 2)
!11049 = !DILocation(line: 895, column: 13, scope: !11048)
!11050 = distinct !{!11050, !11051}
!11051 = !DILocation(line: 895, column: 13, scope: !10966)
!11052 = !DILocation(line: 908, column: 9, scope: !10966)
!11053 = !DILocation(line: 893, column: 56, scope: !11054)
!11054 = !DILexicalBlockFile(scope: !10960, file: !971, discriminator: 2)
!11055 = !DILocation(line: 893, column: 9, scope: !11054)
!11056 = distinct !{!11056, !11057}
!11057 = !DILocation(line: 893, column: 9, scope: !10859)
!11058 = !DILocation(line: 910, column: 24, scope: !10859)
!11059 = !DILocation(line: 910, column: 28, scope: !10859)
!11060 = !DILocation(line: 910, column: 54, scope: !10859)
!11061 = !DILocation(line: 910, column: 39, scope: !10859)
!11062 = !DILocation(line: 910, column: 37, scope: !10859)
!11063 = !DILocation(line: 910, column: 9, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !10859, file: !971, discriminator: 1)
!11065 = !DILocation(line: 911, column: 5, scope: !10859)
!11066 = !DILocation(line: 867, column: 25, scope: !11067)
!11067 = !DILexicalBlockFile(scope: !10855, file: !971, discriminator: 2)
!11068 = !DILocation(line: 867, column: 5, scope: !11067)
!11069 = distinct !{!11069, !11070}
!11070 = !DILocation(line: 867, column: 5, scope: !10730)
!11071 = !DILocation(line: 913, column: 5, scope: !10730)
!11072 = !DILocation(line: 914, column: 1, scope: !10730)
!11073 = distinct !DISubprogram(name: "skip_bits_long", scope: !1115, file: !1115, line: 293, type: !7742, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11074 = !DILocalVariable(name: "a", arg: 1, scope: !11075, file: !11076, line: 127, type: !979)
!11075 = distinct !DISubprogram(name: "av_clip_c", scope: !11076, file: !11076, line: 127, type: !8887, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11076 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!11077 = !DILocation(line: 127, column: 87, scope: !11075, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 301, column: 17, scope: !11073)
!11079 = !DILocalVariable(name: "amin", arg: 2, scope: !11075, file: !11076, line: 127, type: !979)
!11080 = !DILocation(line: 127, column: 94, scope: !11075, inlinedAt: !11078)
!11081 = !DILocalVariable(name: "amax", arg: 3, scope: !11075, file: !11076, line: 127, type: !979)
!11082 = !DILocation(line: 127, column: 104, scope: !11075, inlinedAt: !11078)
!11083 = !DILocalVariable(name: "s", arg: 1, scope: !11073, file: !1115, line: 293, type: !4348)
!11084 = !DILocation(line: 293, column: 50, scope: !11073)
!11085 = !DILocalVariable(name: "n", arg: 2, scope: !11073, file: !1115, line: 293, type: !979)
!11086 = !DILocation(line: 293, column: 57, scope: !11073)
!11087 = !DILocation(line: 301, column: 27, scope: !11073)
!11088 = !DILocation(line: 301, column: 31, scope: !11073)
!11089 = !DILocation(line: 301, column: 34, scope: !11073)
!11090 = !DILocation(line: 301, column: 30, scope: !11073)
!11091 = !DILocation(line: 301, column: 41, scope: !11073)
!11092 = !DILocation(line: 301, column: 44, scope: !11073)
!11093 = !DILocation(line: 301, column: 65, scope: !11073)
!11094 = !DILocation(line: 301, column: 68, scope: !11073)
!11095 = !DILocation(line: 301, column: 63, scope: !11073)
!11096 = !DILocation(line: 301, column: 17, scope: !11073)
!11097 = !DILocation(line: 132, column: 9, scope: !11098, inlinedAt: !11078)
!11098 = distinct !DILexicalBlock(scope: !11075, file: !11076, line: 132, column: 9)
!11099 = !DILocation(line: 132, column: 13, scope: !11098, inlinedAt: !11078)
!11100 = !DILocation(line: 132, column: 11, scope: !11098, inlinedAt: !11078)
!11101 = !DILocation(line: 132, column: 9, scope: !11075, inlinedAt: !11078)
!11102 = !DILocation(line: 132, column: 26, scope: !11103, inlinedAt: !11078)
!11103 = !DILexicalBlockFile(scope: !11098, file: !11076, discriminator: 1)
!11104 = !DILocation(line: 132, column: 19, scope: !11103, inlinedAt: !11078)
!11105 = !DILocation(line: 133, column: 14, scope: !11106, inlinedAt: !11078)
!11106 = distinct !DILexicalBlock(scope: !11098, file: !11076, line: 133, column: 14)
!11107 = !DILocation(line: 133, column: 18, scope: !11106, inlinedAt: !11078)
!11108 = !DILocation(line: 133, column: 16, scope: !11106, inlinedAt: !11078)
!11109 = !DILocation(line: 133, column: 14, scope: !11098, inlinedAt: !11078)
!11110 = !DILocation(line: 133, column: 31, scope: !11111, inlinedAt: !11078)
!11111 = !DILexicalBlockFile(scope: !11106, file: !11076, discriminator: 1)
!11112 = !DILocation(line: 133, column: 24, scope: !11111, inlinedAt: !11078)
!11113 = !DILocation(line: 134, column: 17, scope: !11106, inlinedAt: !11078)
!11114 = !DILocation(line: 134, column: 10, scope: !11106, inlinedAt: !11078)
!11115 = !DILocation(line: 135, column: 1, scope: !11075, inlinedAt: !11078)
!11116 = !DILocation(line: 301, column: 5, scope: !11073)
!11117 = !DILocation(line: 301, column: 8, scope: !11073)
!11118 = !DILocation(line: 301, column: 14, scope: !11073)
!11119 = !DILocation(line: 304, column: 1, scope: !11073)
!11120 = distinct !DISubprogram(name: "decode_subband", scope: !971, file: !971, line: 723, type: !11121, isLocal: true, isDefinition: true, scopeLine: 726, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{null, !2670, !4348, !979, !979, !979, !979, !7223, !7223}
!11123 = !DILocalVariable(name: "s", arg: 1, scope: !11120, file: !971, line: 723, type: !2670)
!11124 = !DILocation(line: 723, column: 42, scope: !11120)
!11125 = !DILocalVariable(name: "gb", arg: 2, scope: !11120, file: !971, line: 723, type: !4348)
!11126 = !DILocation(line: 723, column: 60, scope: !11120)
!11127 = !DILocalVariable(name: "quant", arg: 3, scope: !11120, file: !971, line: 723, type: !979)
!11128 = !DILocation(line: 723, column: 68, scope: !11120)
!11129 = !DILocalVariable(name: "slice_x", arg: 4, scope: !11120, file: !971, line: 724, type: !979)
!11130 = !DILocation(line: 724, column: 32, scope: !11120)
!11131 = !DILocalVariable(name: "slice_y", arg: 5, scope: !11120, file: !971, line: 724, type: !979)
!11132 = !DILocation(line: 724, column: 45, scope: !11120)
!11133 = !DILocalVariable(name: "bits_end", arg: 6, scope: !11120, file: !971, line: 724, type: !979)
!11134 = !DILocation(line: 724, column: 58, scope: !11120)
!11135 = !DILocalVariable(name: "b1", arg: 7, scope: !11120, file: !971, line: 725, type: !7223)
!11136 = !DILocation(line: 725, column: 37, scope: !11120)
!11137 = !DILocalVariable(name: "b2", arg: 8, scope: !11120, file: !971, line: 725, type: !7223)
!11138 = !DILocation(line: 725, column: 50, scope: !11120)
!11139 = !DILocalVariable(name: "left", scope: !11120, file: !971, line: 727, type: !979)
!11140 = !DILocation(line: 727, column: 9, scope: !11120)
!11141 = !DILocation(line: 727, column: 16, scope: !11120)
!11142 = !DILocation(line: 727, column: 20, scope: !11120)
!11143 = !DILocation(line: 727, column: 28, scope: !11120)
!11144 = !DILocation(line: 727, column: 26, scope: !11120)
!11145 = !DILocation(line: 727, column: 38, scope: !11120)
!11146 = !DILocation(line: 727, column: 41, scope: !11120)
!11147 = !DILocation(line: 727, column: 36, scope: !11120)
!11148 = !DILocalVariable(name: "right", scope: !11120, file: !971, line: 728, type: !979)
!11149 = !DILocation(line: 728, column: 9, scope: !11120)
!11150 = !DILocation(line: 728, column: 17, scope: !11120)
!11151 = !DILocation(line: 728, column: 21, scope: !11120)
!11152 = !DILocation(line: 728, column: 29, scope: !11120)
!11153 = !DILocation(line: 728, column: 36, scope: !11120)
!11154 = !DILocation(line: 728, column: 27, scope: !11120)
!11155 = !DILocation(line: 728, column: 42, scope: !11120)
!11156 = !DILocation(line: 728, column: 45, scope: !11120)
!11157 = !DILocation(line: 728, column: 40, scope: !11120)
!11158 = !DILocalVariable(name: "top", scope: !11120, file: !971, line: 729, type: !979)
!11159 = !DILocation(line: 729, column: 9, scope: !11120)
!11160 = !DILocation(line: 729, column: 15, scope: !11120)
!11161 = !DILocation(line: 729, column: 19, scope: !11120)
!11162 = !DILocation(line: 729, column: 28, scope: !11120)
!11163 = !DILocation(line: 729, column: 26, scope: !11120)
!11164 = !DILocation(line: 729, column: 38, scope: !11120)
!11165 = !DILocation(line: 729, column: 41, scope: !11120)
!11166 = !DILocation(line: 729, column: 36, scope: !11120)
!11167 = !DILocalVariable(name: "bottom", scope: !11120, file: !971, line: 730, type: !979)
!11168 = !DILocation(line: 730, column: 9, scope: !11120)
!11169 = !DILocation(line: 730, column: 18, scope: !11120)
!11170 = !DILocation(line: 730, column: 22, scope: !11120)
!11171 = !DILocation(line: 730, column: 31, scope: !11120)
!11172 = !DILocation(line: 730, column: 38, scope: !11120)
!11173 = !DILocation(line: 730, column: 29, scope: !11120)
!11174 = !DILocation(line: 730, column: 44, scope: !11120)
!11175 = !DILocation(line: 730, column: 47, scope: !11120)
!11176 = !DILocation(line: 730, column: 42, scope: !11120)
!11177 = !DILocalVariable(name: "qfactor", scope: !11120, file: !971, line: 732, type: !979)
!11178 = !DILocation(line: 732, column: 9, scope: !11120)
!11179 = !DILocalVariable(name: "qoffset", scope: !11120, file: !971, line: 732, type: !979)
!11180 = !DILocation(line: 732, column: 18, scope: !11120)
!11181 = !DILocalVariable(name: "buf1", scope: !11120, file: !971, line: 734, type: !987)
!11182 = !DILocation(line: 734, column: 14, scope: !11120)
!11183 = !DILocation(line: 734, column: 21, scope: !11120)
!11184 = !DILocation(line: 734, column: 25, scope: !11120)
!11185 = !DILocation(line: 734, column: 32, scope: !11120)
!11186 = !DILocation(line: 734, column: 38, scope: !11120)
!11187 = !DILocation(line: 734, column: 42, scope: !11120)
!11188 = !DILocation(line: 734, column: 36, scope: !11120)
!11189 = !DILocation(line: 734, column: 30, scope: !11120)
!11190 = !DILocalVariable(name: "buf2", scope: !11120, file: !971, line: 735, type: !987)
!11191 = !DILocation(line: 735, column: 14, scope: !11120)
!11192 = !DILocation(line: 735, column: 21, scope: !11120)
!11193 = !DILocation(line: 735, column: 26, scope: !11194)
!11194 = !DILexicalBlockFile(scope: !11120, file: !971, discriminator: 1)
!11195 = !DILocation(line: 735, column: 30, scope: !11194)
!11196 = !DILocation(line: 735, column: 37, scope: !11194)
!11197 = !DILocation(line: 735, column: 43, scope: !11194)
!11198 = !DILocation(line: 735, column: 47, scope: !11194)
!11199 = !DILocation(line: 735, column: 41, scope: !11194)
!11200 = !DILocation(line: 735, column: 35, scope: !11194)
!11201 = !DILocation(line: 735, column: 21, scope: !11194)
!11202 = !DILocation(line: 735, column: 21, scope: !11203)
!11203 = !DILexicalBlockFile(scope: !11120, file: !971, discriminator: 2)
!11204 = !DILocation(line: 735, column: 21, scope: !11205)
!11205 = !DILexicalBlockFile(scope: !11120, file: !971, discriminator: 3)
!11206 = !DILocation(line: 735, column: 14, scope: !11205)
!11207 = !DILocalVariable(name: "x", scope: !11120, file: !971, line: 736, type: !979)
!11208 = !DILocation(line: 736, column: 9, scope: !11120)
!11209 = !DILocalVariable(name: "y", scope: !11120, file: !971, line: 736, type: !979)
!11210 = !DILocation(line: 736, column: 12, scope: !11120)
!11211 = !DILocation(line: 738, column: 9, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11120, file: !971, line: 738, column: 9)
!11213 = !DILocation(line: 738, column: 15, scope: !11212)
!11214 = !DILocation(line: 738, column: 9, scope: !11120)
!11215 = !DILocation(line: 739, column: 16, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11212, file: !971, line: 738, column: 91)
!11217 = !DILocation(line: 739, column: 19, scope: !11216)
!11218 = !DILocation(line: 739, column: 56, scope: !11216)
!11219 = !DILocation(line: 739, column: 9, scope: !11216)
!11220 = !DILocation(line: 740, column: 9, scope: !11216)
!11221 = !DILocation(line: 742, column: 35, scope: !11120)
!11222 = !DILocation(line: 742, column: 15, scope: !11120)
!11223 = !DILocation(line: 742, column: 13, scope: !11120)
!11224 = !DILocation(line: 743, column: 42, scope: !11120)
!11225 = !DILocation(line: 743, column: 15, scope: !11120)
!11226 = !DILocation(line: 743, column: 49, scope: !11120)
!11227 = !DILocation(line: 743, column: 13, scope: !11120)
!11228 = !DILocation(line: 746, column: 24, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11120, file: !971, line: 746, column: 9)
!11230 = !DILocation(line: 746, column: 9, scope: !11229)
!11231 = !DILocation(line: 746, column: 31, scope: !11229)
!11232 = !DILocation(line: 746, column: 28, scope: !11229)
!11233 = !DILocation(line: 746, column: 9, scope: !11120)
!11234 = !DILocation(line: 747, column: 9, scope: !11229)
!11235 = !DILocation(line: 749, column: 9, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11120, file: !971, line: 749, column: 9)
!11237 = !DILocation(line: 749, column: 12, scope: !11236)
!11238 = !DILocation(line: 749, column: 9, scope: !11120)
!11239 = !DILocation(line: 750, column: 18, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11241, file: !971, line: 750, column: 9)
!11241 = distinct !DILexicalBlock(scope: !11236, file: !971, line: 749, column: 20)
!11242 = !DILocation(line: 750, column: 16, scope: !11240)
!11243 = !DILocation(line: 750, column: 14, scope: !11240)
!11244 = !DILocation(line: 750, column: 23, scope: !11245)
!11245 = !DILexicalBlockFile(scope: !11246, file: !971, discriminator: 1)
!11246 = distinct !DILexicalBlock(scope: !11240, file: !971, line: 750, column: 9)
!11247 = !DILocation(line: 750, column: 27, scope: !11245)
!11248 = !DILocation(line: 750, column: 25, scope: !11245)
!11249 = !DILocation(line: 750, column: 9, scope: !11245)
!11250 = !DILocation(line: 751, column: 22, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !971, line: 751, column: 13)
!11252 = distinct !DILexicalBlock(scope: !11246, file: !971, line: 750, column: 40)
!11253 = !DILocation(line: 751, column: 20, scope: !11251)
!11254 = !DILocation(line: 751, column: 18, scope: !11251)
!11255 = !DILocation(line: 751, column: 28, scope: !11256)
!11256 = !DILexicalBlockFile(scope: !11257, file: !971, discriminator: 1)
!11257 = distinct !DILexicalBlock(scope: !11251, file: !971, line: 751, column: 13)
!11258 = !DILocation(line: 751, column: 32, scope: !11256)
!11259 = !DILocation(line: 751, column: 30, scope: !11256)
!11260 = !DILocation(line: 751, column: 13, scope: !11256)
!11261 = !DILocalVariable(name: "buf", scope: !11262, file: !971, line: 752, type: !1128)
!11262 = distinct !DILexicalBlock(scope: !11257, file: !971, line: 751, column: 44)
!11263 = !DILocation(line: 752, column: 26, scope: !11262)
!11264 = !DILocation(line: 752, column: 43, scope: !11262)
!11265 = !DILocation(line: 752, column: 32, scope: !11262)
!11266 = !DILocation(line: 752, column: 78, scope: !11262)
!11267 = !DILocation(line: 752, column: 82, scope: !11262)
!11268 = !DILocation(line: 752, column: 91, scope: !11262)
!11269 = !DILocation(line: 752, column: 58, scope: !11262)
!11270 = !DILocation(line: 752, column: 53, scope: !11262)
!11271 = !DILocation(line: 752, column: 49, scope: !11262)
!11272 = !DILocation(line: 752, column: 56, scope: !11262)
!11273 = !DILocation(line: 752, column: 120, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11262, file: !971, line: 752, column: 105)
!11275 = !DILocation(line: 752, column: 105, scope: !11276)
!11276 = !DILexicalBlockFile(scope: !11274, file: !971, discriminator: 6)
!11277 = !DILocation(line: 752, column: 127, scope: !11274)
!11278 = !DILocation(line: 752, column: 124, scope: !11274)
!11279 = !DILocation(line: 752, column: 105, scope: !11262)
!11280 = !DILocation(line: 752, column: 137, scope: !11281)
!11281 = !DILexicalBlockFile(scope: !11274, file: !971, discriminator: 1)
!11282 = !DILocation(line: 752, column: 149, scope: !11283)
!11283 = !DILexicalBlockFile(scope: !11284, file: !971, discriminator: 2)
!11284 = distinct !DILexicalBlock(scope: !11262, file: !971, line: 752, column: 149)
!11285 = !DILocation(line: 752, column: 174, scope: !11286)
!11286 = !DILexicalBlockFile(scope: !11287, file: !971, discriminator: 3)
!11287 = distinct !DILexicalBlock(scope: !11284, file: !971, line: 752, column: 155)
!11288 = !DILocation(line: 752, column: 163, scope: !11286)
!11289 = !DILocation(line: 752, column: 161, scope: !11286)
!11290 = !DILocation(line: 752, column: 209, scope: !11286)
!11291 = !DILocation(line: 752, column: 213, scope: !11286)
!11292 = !DILocation(line: 752, column: 222, scope: !11286)
!11293 = !DILocation(line: 752, column: 189, scope: !11286)
!11294 = !DILocation(line: 752, column: 184, scope: !11286)
!11295 = !DILocation(line: 752, column: 180, scope: !11286)
!11296 = !DILocation(line: 752, column: 187, scope: !11286)
!11297 = !DILocation(line: 752, column: 251, scope: !11286)
!11298 = !DILocation(line: 752, column: 236, scope: !11299)
!11299 = !DILexicalBlockFile(scope: !11286, file: !971, discriminator: 7)
!11300 = !DILocation(line: 752, column: 258, scope: !11286)
!11301 = !DILocation(line: 752, column: 255, scope: !11286)
!11302 = !DILocation(line: 752, column: 236, scope: !11286)
!11303 = !DILocation(line: 752, column: 268, scope: !11304)
!11304 = !DILexicalBlockFile(scope: !11305, file: !971, discriminator: 4)
!11305 = distinct !DILexicalBlock(scope: !11287, file: !971, line: 752, column: 236)
!11306 = !DILocation(line: 752, column: 276, scope: !11307)
!11307 = !DILexicalBlockFile(scope: !11287, file: !971, discriminator: 5)
!11308 = !DILocation(line: 753, column: 13, scope: !11262)
!11309 = !DILocation(line: 751, column: 40, scope: !11310)
!11310 = !DILexicalBlockFile(scope: !11257, file: !971, discriminator: 2)
!11311 = !DILocation(line: 751, column: 13, scope: !11310)
!11312 = distinct !{!11312, !11313}
!11313 = !DILocation(line: 751, column: 13, scope: !11252)
!11314 = !DILocation(line: 754, column: 21, scope: !11252)
!11315 = !DILocation(line: 754, column: 25, scope: !11252)
!11316 = !DILocation(line: 754, column: 18, scope: !11252)
!11317 = !DILocation(line: 755, column: 17, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11252, file: !971, line: 755, column: 17)
!11319 = !DILocation(line: 755, column: 17, scope: !11252)
!11320 = !DILocation(line: 756, column: 25, scope: !11318)
!11321 = !DILocation(line: 756, column: 29, scope: !11318)
!11322 = !DILocation(line: 756, column: 22, scope: !11318)
!11323 = !DILocation(line: 756, column: 17, scope: !11318)
!11324 = !DILocation(line: 757, column: 9, scope: !11252)
!11325 = !DILocation(line: 750, column: 36, scope: !11326)
!11326 = !DILexicalBlockFile(scope: !11246, file: !971, discriminator: 2)
!11327 = !DILocation(line: 750, column: 9, scope: !11326)
!11328 = distinct !{!11328, !11329}
!11329 = !DILocation(line: 750, column: 9, scope: !11241)
!11330 = !DILocation(line: 758, column: 5, scope: !11241)
!11331 = !DILocation(line: 760, column: 18, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !971, line: 760, column: 9)
!11333 = distinct !DILexicalBlock(scope: !11236, file: !971, line: 759, column: 10)
!11334 = !DILocation(line: 760, column: 16, scope: !11332)
!11335 = !DILocation(line: 760, column: 14, scope: !11332)
!11336 = !DILocation(line: 760, column: 23, scope: !11337)
!11337 = !DILexicalBlockFile(scope: !11338, file: !971, discriminator: 1)
!11338 = distinct !DILexicalBlock(scope: !11332, file: !971, line: 760, column: 9)
!11339 = !DILocation(line: 760, column: 27, scope: !11337)
!11340 = !DILocation(line: 760, column: 25, scope: !11337)
!11341 = !DILocation(line: 760, column: 9, scope: !11337)
!11342 = !DILocation(line: 761, column: 22, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !971, line: 761, column: 13)
!11344 = distinct !DILexicalBlock(scope: !11338, file: !971, line: 760, column: 40)
!11345 = !DILocation(line: 761, column: 20, scope: !11343)
!11346 = !DILocation(line: 761, column: 18, scope: !11343)
!11347 = !DILocation(line: 761, column: 28, scope: !11348)
!11348 = !DILexicalBlockFile(scope: !11349, file: !971, discriminator: 1)
!11349 = distinct !DILexicalBlock(scope: !11343, file: !971, line: 761, column: 13)
!11350 = !DILocation(line: 761, column: 32, scope: !11348)
!11351 = !DILocation(line: 761, column: 30, scope: !11348)
!11352 = !DILocation(line: 761, column: 13, scope: !11348)
!11353 = !DILocalVariable(name: "buf", scope: !11354, file: !971, line: 762, type: !1106)
!11354 = distinct !DILexicalBlock(scope: !11349, file: !971, line: 761, column: 44)
!11355 = !DILocation(line: 762, column: 26, scope: !11354)
!11356 = !DILocation(line: 762, column: 43, scope: !11354)
!11357 = !DILocation(line: 762, column: 32, scope: !11354)
!11358 = !DILocation(line: 762, column: 78, scope: !11354)
!11359 = !DILocation(line: 762, column: 82, scope: !11354)
!11360 = !DILocation(line: 762, column: 91, scope: !11354)
!11361 = !DILocation(line: 762, column: 58, scope: !11354)
!11362 = !DILocation(line: 762, column: 53, scope: !11354)
!11363 = !DILocation(line: 762, column: 49, scope: !11354)
!11364 = !DILocation(line: 762, column: 56, scope: !11354)
!11365 = !DILocation(line: 762, column: 120, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11354, file: !971, line: 762, column: 105)
!11367 = !DILocation(line: 762, column: 105, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !11366, file: !971, discriminator: 6)
!11369 = !DILocation(line: 762, column: 127, scope: !11366)
!11370 = !DILocation(line: 762, column: 124, scope: !11366)
!11371 = !DILocation(line: 762, column: 105, scope: !11354)
!11372 = !DILocation(line: 762, column: 137, scope: !11373)
!11373 = !DILexicalBlockFile(scope: !11366, file: !971, discriminator: 1)
!11374 = !DILocation(line: 762, column: 149, scope: !11375)
!11375 = !DILexicalBlockFile(scope: !11376, file: !971, discriminator: 2)
!11376 = distinct !DILexicalBlock(scope: !11354, file: !971, line: 762, column: 149)
!11377 = !DILocation(line: 762, column: 174, scope: !11378)
!11378 = !DILexicalBlockFile(scope: !11379, file: !971, discriminator: 3)
!11379 = distinct !DILexicalBlock(scope: !11376, file: !971, line: 762, column: 155)
!11380 = !DILocation(line: 762, column: 163, scope: !11378)
!11381 = !DILocation(line: 762, column: 161, scope: !11378)
!11382 = !DILocation(line: 762, column: 209, scope: !11378)
!11383 = !DILocation(line: 762, column: 213, scope: !11378)
!11384 = !DILocation(line: 762, column: 222, scope: !11378)
!11385 = !DILocation(line: 762, column: 189, scope: !11378)
!11386 = !DILocation(line: 762, column: 184, scope: !11378)
!11387 = !DILocation(line: 762, column: 180, scope: !11378)
!11388 = !DILocation(line: 762, column: 187, scope: !11378)
!11389 = !DILocation(line: 762, column: 251, scope: !11378)
!11390 = !DILocation(line: 762, column: 236, scope: !11391)
!11391 = !DILexicalBlockFile(scope: !11378, file: !971, discriminator: 7)
!11392 = !DILocation(line: 762, column: 258, scope: !11378)
!11393 = !DILocation(line: 762, column: 255, scope: !11378)
!11394 = !DILocation(line: 762, column: 236, scope: !11378)
!11395 = !DILocation(line: 762, column: 268, scope: !11396)
!11396 = !DILexicalBlockFile(scope: !11397, file: !971, discriminator: 4)
!11397 = distinct !DILexicalBlock(scope: !11379, file: !971, line: 762, column: 236)
!11398 = !DILocation(line: 762, column: 276, scope: !11399)
!11399 = !DILexicalBlockFile(scope: !11379, file: !971, discriminator: 5)
!11400 = !DILocation(line: 763, column: 13, scope: !11354)
!11401 = !DILocation(line: 761, column: 40, scope: !11402)
!11402 = !DILexicalBlockFile(scope: !11349, file: !971, discriminator: 2)
!11403 = !DILocation(line: 761, column: 13, scope: !11402)
!11404 = distinct !{!11404, !11405}
!11405 = !DILocation(line: 761, column: 13, scope: !11344)
!11406 = !DILocation(line: 764, column: 21, scope: !11344)
!11407 = !DILocation(line: 764, column: 25, scope: !11344)
!11408 = !DILocation(line: 764, column: 18, scope: !11344)
!11409 = !DILocation(line: 765, column: 17, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11344, file: !971, line: 765, column: 17)
!11411 = !DILocation(line: 765, column: 17, scope: !11344)
!11412 = !DILocation(line: 766, column: 25, scope: !11410)
!11413 = !DILocation(line: 766, column: 29, scope: !11410)
!11414 = !DILocation(line: 766, column: 22, scope: !11410)
!11415 = !DILocation(line: 766, column: 17, scope: !11410)
!11416 = !DILocation(line: 767, column: 9, scope: !11344)
!11417 = !DILocation(line: 760, column: 36, scope: !11418)
!11418 = !DILexicalBlockFile(scope: !11338, file: !971, discriminator: 2)
!11419 = !DILocation(line: 760, column: 9, scope: !11418)
!11420 = distinct !{!11420, !11421}
!11421 = !DILocation(line: 760, column: 9, scope: !11333)
!11422 = !DILocation(line: 769, column: 1, scope: !11120)
!11423 = distinct !DISubprogram(name: "coeff_unpack_golomb", scope: !971, file: !971, line: 443, type: !11424, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{!979, !4348, !979, !979}
!11426 = !DILocalVariable(name: "gb", arg: 1, scope: !11423, file: !971, line: 443, type: !4348)
!11427 = !DILocation(line: 443, column: 54, scope: !11423)
!11428 = !DILocalVariable(name: "qfactor", arg: 2, scope: !11423, file: !971, line: 443, type: !979)
!11429 = !DILocation(line: 443, column: 62, scope: !11423)
!11430 = !DILocalVariable(name: "qoffset", arg: 3, scope: !11423, file: !971, line: 443, type: !979)
!11431 = !DILocation(line: 443, column: 75, scope: !11423)
!11432 = !DILocalVariable(name: "coeff", scope: !11423, file: !971, line: 445, type: !979)
!11433 = !DILocation(line: 445, column: 9, scope: !11423)
!11434 = !DILocation(line: 445, column: 37, scope: !11423)
!11435 = !DILocation(line: 445, column: 17, scope: !11423)
!11436 = !DILocalVariable(name: "sign", scope: !11423, file: !971, line: 446, type: !11437)
!11437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!11438 = !DILocation(line: 446, column: 20, scope: !11423)
!11439 = !DILocation(line: 446, column: 29, scope: !11423)
!11440 = !DILocation(line: 446, column: 36, scope: !11423)
!11441 = !DILocation(line: 446, column: 28, scope: !11423)
!11442 = !DILocation(line: 447, column: 9, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11423, file: !971, line: 447, column: 9)
!11444 = !DILocation(line: 447, column: 9, scope: !11423)
!11445 = !DILocation(line: 448, column: 17, scope: !11443)
!11446 = !DILocation(line: 448, column: 24, scope: !11443)
!11447 = !DILocation(line: 448, column: 31, scope: !11443)
!11448 = !DILocation(line: 448, column: 29, scope: !11443)
!11449 = !DILocation(line: 448, column: 39, scope: !11443)
!11450 = !DILocation(line: 448, column: 37, scope: !11443)
!11451 = !DILocation(line: 448, column: 49, scope: !11443)
!11452 = !DILocation(line: 448, column: 47, scope: !11443)
!11453 = !DILocation(line: 448, column: 58, scope: !11443)
!11454 = !DILocation(line: 448, column: 21, scope: !11443)
!11455 = !DILocation(line: 448, column: 15, scope: !11443)
!11456 = !DILocation(line: 448, column: 9, scope: !11443)
!11457 = !DILocation(line: 449, column: 12, scope: !11423)
!11458 = !DILocation(line: 449, column: 5, scope: !11423)
!11459 = distinct !DISubprogram(name: "decode_subband_arith", scope: !971, file: !971, line: 643, type: !10222, isLocal: true, isDefinition: true, scopeLine: 644, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11460 = !DILocalVariable(name: "s", arg: 1, scope: !11461, file: !971, line: 601, type: !2670)
!11461 = distinct !DISubprogram(name: "decode_subband_internal", scope: !971, file: !971, line: 601, type: !11462, isLocal: true, isDefinition: true, scopeLine: 602, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!979, !2670, !7223, !979}
!11464 = !DILocation(line: 601, column: 88, scope: !11461, inlinedAt: !11465)
!11465 = distinct !DILocation(line: 646, column: 12, scope: !11459)
!11466 = !DILocalVariable(name: "b", arg: 2, scope: !11461, file: !971, line: 601, type: !7223)
!11467 = !DILocation(line: 601, column: 100, scope: !11461, inlinedAt: !11465)
!11468 = !DILocalVariable(name: "is_arith", arg: 3, scope: !11461, file: !971, line: 601, type: !979)
!11469 = !DILocation(line: 601, column: 107, scope: !11461, inlinedAt: !11465)
!11470 = !DILocalVariable(name: "cb_x", scope: !11461, file: !971, line: 603, type: !979)
!11471 = !DILocation(line: 603, column: 9, scope: !11461, inlinedAt: !11465)
!11472 = !DILocalVariable(name: "cb_y", scope: !11461, file: !971, line: 603, type: !979)
!11473 = !DILocation(line: 603, column: 15, scope: !11461, inlinedAt: !11465)
!11474 = !DILocalVariable(name: "left", scope: !11461, file: !971, line: 603, type: !979)
!11475 = !DILocation(line: 603, column: 21, scope: !11461, inlinedAt: !11465)
!11476 = !DILocalVariable(name: "right", scope: !11461, file: !971, line: 603, type: !979)
!11477 = !DILocation(line: 603, column: 27, scope: !11461, inlinedAt: !11465)
!11478 = !DILocalVariable(name: "top", scope: !11461, file: !971, line: 603, type: !979)
!11479 = !DILocation(line: 603, column: 34, scope: !11461, inlinedAt: !11465)
!11480 = !DILocalVariable(name: "bottom", scope: !11461, file: !971, line: 603, type: !979)
!11481 = !DILocation(line: 603, column: 39, scope: !11461, inlinedAt: !11465)
!11482 = !DILocalVariable(name: "c", scope: !11461, file: !971, line: 604, type: !6311)
!11483 = !DILocation(line: 604, column: 16, scope: !11461, inlinedAt: !11465)
!11484 = !DILocalVariable(name: "gb", scope: !11461, file: !971, line: 605, type: !1114)
!11485 = !DILocation(line: 605, column: 19, scope: !11461, inlinedAt: !11465)
!11486 = !DILocalVariable(name: "cb_width", scope: !11461, file: !971, line: 606, type: !979)
!11487 = !DILocation(line: 606, column: 9, scope: !11461, inlinedAt: !11465)
!11488 = !DILocalVariable(name: "cb_height", scope: !11461, file: !971, line: 607, type: !979)
!11489 = !DILocation(line: 607, column: 9, scope: !11461, inlinedAt: !11465)
!11490 = !DILocalVariable(name: "blockcnt_one", scope: !11461, file: !971, line: 608, type: !979)
!11491 = !DILocation(line: 608, column: 9, scope: !11461, inlinedAt: !11465)
!11492 = !DILocalVariable(name: "ret", scope: !11461, file: !971, line: 609, type: !979)
!11493 = !DILocation(line: 609, column: 9, scope: !11461, inlinedAt: !11465)
!11494 = !DILocalVariable(name: "avctx", arg: 1, scope: !11459, file: !971, line: 643, type: !1251)
!11495 = !DILocation(line: 643, column: 49, scope: !11459)
!11496 = !DILocalVariable(name: "b", arg: 2, scope: !11459, file: !971, line: 643, type: !1019)
!11497 = !DILocation(line: 643, column: 62, scope: !11459)
!11498 = !DILocalVariable(name: "s", scope: !11459, file: !971, line: 645, type: !2670)
!11499 = !DILocation(line: 645, column: 19, scope: !11459)
!11500 = !DILocation(line: 645, column: 23, scope: !11459)
!11501 = !DILocation(line: 645, column: 30, scope: !11459)
!11502 = !DILocation(line: 646, column: 36, scope: !11459)
!11503 = !DILocation(line: 646, column: 39, scope: !11459)
!11504 = !DILocation(line: 646, column: 12, scope: !11459)
!11505 = !DILocation(line: 606, column: 33, scope: !11461, inlinedAt: !11465)
!11506 = !DILocation(line: 606, column: 36, scope: !11461, inlinedAt: !11465)
!11507 = !DILocation(line: 606, column: 45, scope: !11461, inlinedAt: !11465)
!11508 = !DILocation(line: 606, column: 48, scope: !11461, inlinedAt: !11465)
!11509 = !DILocation(line: 606, column: 60, scope: !11461, inlinedAt: !11465)
!11510 = !DILocation(line: 606, column: 42, scope: !11461, inlinedAt: !11465)
!11511 = !DILocation(line: 606, column: 20, scope: !11461, inlinedAt: !11465)
!11512 = !DILocation(line: 606, column: 23, scope: !11461, inlinedAt: !11465)
!11513 = !DILocation(line: 606, column: 76, scope: !11461, inlinedAt: !11465)
!11514 = !DILocation(line: 607, column: 34, scope: !11461, inlinedAt: !11465)
!11515 = !DILocation(line: 607, column: 37, scope: !11461, inlinedAt: !11465)
!11516 = !DILocation(line: 607, column: 46, scope: !11461, inlinedAt: !11465)
!11517 = !DILocation(line: 607, column: 49, scope: !11461, inlinedAt: !11465)
!11518 = !DILocation(line: 607, column: 61, scope: !11461, inlinedAt: !11465)
!11519 = !DILocation(line: 607, column: 43, scope: !11461, inlinedAt: !11465)
!11520 = !DILocation(line: 607, column: 21, scope: !11461, inlinedAt: !11465)
!11521 = !DILocation(line: 607, column: 24, scope: !11461, inlinedAt: !11465)
!11522 = !DILocation(line: 607, column: 77, scope: !11461, inlinedAt: !11465)
!11523 = !DILocation(line: 608, column: 25, scope: !11461, inlinedAt: !11465)
!11524 = !DILocation(line: 608, column: 36, scope: !11461, inlinedAt: !11465)
!11525 = !DILocation(line: 608, column: 34, scope: !11461, inlinedAt: !11465)
!11526 = !DILocation(line: 608, column: 47, scope: !11461, inlinedAt: !11465)
!11527 = !DILocation(line: 611, column: 10, scope: !11528, inlinedAt: !11465)
!11528 = distinct !DILexicalBlock(scope: !11461, file: !971, line: 611, column: 9)
!11529 = !DILocation(line: 611, column: 13, scope: !11528, inlinedAt: !11465)
!11530 = !DILocation(line: 611, column: 9, scope: !11461, inlinedAt: !11465)
!11531 = !DILocation(line: 612, column: 9, scope: !11528, inlinedAt: !11465)
!11532 = !DILocation(line: 614, column: 25, scope: !11461, inlinedAt: !11465)
!11533 = !DILocation(line: 614, column: 28, scope: !11461, inlinedAt: !11465)
!11534 = !DILocation(line: 614, column: 40, scope: !11461, inlinedAt: !11465)
!11535 = !DILocation(line: 614, column: 43, scope: !11461, inlinedAt: !11465)
!11536 = !DILocation(line: 614, column: 5, scope: !11461, inlinedAt: !11465)
!11537 = !DILocation(line: 616, column: 9, scope: !11538, inlinedAt: !11465)
!11538 = distinct !DILexicalBlock(scope: !11461, file: !971, line: 616, column: 9)
!11539 = !DILocation(line: 616, column: 9, scope: !11461, inlinedAt: !11465)
!11540 = !DILocation(line: 617, column: 46, scope: !11538, inlinedAt: !11465)
!11541 = !DILocation(line: 617, column: 49, scope: !11538, inlinedAt: !11465)
!11542 = !DILocation(line: 617, column: 9, scope: !11538, inlinedAt: !11465)
!11543 = !DILocation(line: 619, column: 9, scope: !11461, inlinedAt: !11465)
!11544 = !DILocation(line: 620, column: 15, scope: !11545, inlinedAt: !11465)
!11545 = distinct !DILexicalBlock(scope: !11461, file: !971, line: 620, column: 5)
!11546 = !DILocation(line: 620, column: 10, scope: !11545, inlinedAt: !11465)
!11547 = !DILocation(line: 620, column: 20, scope: !11548, inlinedAt: !11465)
!11548 = !DILexicalBlockFile(scope: !11549, file: !971, discriminator: 1)
!11549 = distinct !DILexicalBlock(scope: !11545, file: !971, line: 620, column: 5)
!11550 = !DILocation(line: 620, column: 27, scope: !11548, inlinedAt: !11465)
!11551 = !DILocation(line: 620, column: 25, scope: !11548, inlinedAt: !11465)
!11552 = !DILocation(line: 620, column: 5, scope: !11548, inlinedAt: !11465)
!11553 = !DILocation(line: 621, column: 19, scope: !11554, inlinedAt: !11465)
!11554 = distinct !DILexicalBlock(scope: !11549, file: !971, line: 620, column: 46)
!11555 = !DILocation(line: 621, column: 22, scope: !11554, inlinedAt: !11465)
!11556 = !DILocation(line: 621, column: 32, scope: !11554, inlinedAt: !11465)
!11557 = !DILocation(line: 621, column: 36, scope: !11554, inlinedAt: !11465)
!11558 = !DILocation(line: 621, column: 29, scope: !11554, inlinedAt: !11465)
!11559 = !DILocation(line: 621, column: 45, scope: !11554, inlinedAt: !11465)
!11560 = !DILocation(line: 621, column: 43, scope: !11554, inlinedAt: !11465)
!11561 = !DILocation(line: 621, column: 18, scope: !11554, inlinedAt: !11465)
!11562 = !DILocation(line: 621, column: 16, scope: !11554, inlinedAt: !11465)
!11563 = !DILocation(line: 622, column: 14, scope: !11554, inlinedAt: !11465)
!11564 = !DILocation(line: 623, column: 19, scope: !11565, inlinedAt: !11465)
!11565 = distinct !DILexicalBlock(scope: !11554, file: !971, line: 623, column: 9)
!11566 = !DILocation(line: 623, column: 14, scope: !11565, inlinedAt: !11465)
!11567 = !DILocation(line: 623, column: 24, scope: !11568, inlinedAt: !11465)
!11568 = !DILexicalBlockFile(scope: !11569, file: !971, discriminator: 1)
!11569 = distinct !DILexicalBlock(scope: !11565, file: !971, line: 623, column: 9)
!11570 = !DILocation(line: 623, column: 31, scope: !11568, inlinedAt: !11465)
!11571 = !DILocation(line: 623, column: 29, scope: !11568, inlinedAt: !11465)
!11572 = !DILocation(line: 623, column: 9, scope: !11568, inlinedAt: !11465)
!11573 = !DILocation(line: 624, column: 22, scope: !11574, inlinedAt: !11465)
!11574 = distinct !DILexicalBlock(scope: !11569, file: !971, line: 623, column: 49)
!11575 = !DILocation(line: 624, column: 25, scope: !11574, inlinedAt: !11465)
!11576 = !DILocation(line: 624, column: 34, scope: !11574, inlinedAt: !11465)
!11577 = !DILocation(line: 624, column: 38, scope: !11574, inlinedAt: !11465)
!11578 = !DILocation(line: 624, column: 31, scope: !11574, inlinedAt: !11465)
!11579 = !DILocation(line: 624, column: 47, scope: !11574, inlinedAt: !11465)
!11580 = !DILocation(line: 624, column: 45, scope: !11574, inlinedAt: !11465)
!11581 = !DILocation(line: 624, column: 21, scope: !11574, inlinedAt: !11465)
!11582 = !DILocation(line: 624, column: 19, scope: !11574, inlinedAt: !11465)
!11583 = !DILocation(line: 625, column: 29, scope: !11574, inlinedAt: !11465)
!11584 = !DILocation(line: 625, column: 32, scope: !11574, inlinedAt: !11465)
!11585 = !DILocation(line: 625, column: 44, scope: !11574, inlinedAt: !11465)
!11586 = !DILocation(line: 625, column: 50, scope: !11574, inlinedAt: !11465)
!11587 = !DILocation(line: 625, column: 57, scope: !11574, inlinedAt: !11465)
!11588 = !DILocation(line: 625, column: 62, scope: !11574, inlinedAt: !11465)
!11589 = !DILocation(line: 625, column: 70, scope: !11574, inlinedAt: !11465)
!11590 = !DILocation(line: 625, column: 84, scope: !11574, inlinedAt: !11465)
!11591 = !DILocation(line: 625, column: 19, scope: !11574, inlinedAt: !11465)
!11592 = !DILocation(line: 625, column: 17, scope: !11574, inlinedAt: !11465)
!11593 = !DILocation(line: 626, column: 17, scope: !11594, inlinedAt: !11465)
!11594 = distinct !DILexicalBlock(scope: !11574, file: !971, line: 626, column: 17)
!11595 = !DILocation(line: 626, column: 21, scope: !11594, inlinedAt: !11465)
!11596 = !DILocation(line: 626, column: 17, scope: !11574, inlinedAt: !11465)
!11597 = !DILocation(line: 627, column: 24, scope: !11594, inlinedAt: !11465)
!11598 = !DILocation(line: 627, column: 17, scope: !11594, inlinedAt: !11465)
!11599 = !DILocation(line: 628, column: 20, scope: !11574, inlinedAt: !11465)
!11600 = !DILocation(line: 628, column: 18, scope: !11574, inlinedAt: !11465)
!11601 = !DILocation(line: 623, column: 45, scope: !11602, inlinedAt: !11465)
!11602 = !DILexicalBlockFile(scope: !11569, file: !971, discriminator: 2)
!11603 = !DILocation(line: 623, column: 9, scope: !11602, inlinedAt: !11465)
!11604 = distinct !{!11604, !11605}
!11605 = !DILocation(line: 623, column: 9, scope: !11554)
!11606 = !DILocation(line: 630, column: 15, scope: !11554, inlinedAt: !11465)
!11607 = !DILocation(line: 630, column: 13, scope: !11554, inlinedAt: !11465)
!11608 = !DILocation(line: 620, column: 42, scope: !11609, inlinedAt: !11465)
!11609 = !DILexicalBlockFile(scope: !11549, file: !971, discriminator: 2)
!11610 = !DILocation(line: 620, column: 5, scope: !11609, inlinedAt: !11465)
!11611 = distinct !{!11611, !11612}
!11612 = !DILocation(line: 620, column: 5, scope: !11461)
!11613 = !DILocation(line: 633, column: 9, scope: !11614, inlinedAt: !11465)
!11614 = distinct !DILexicalBlock(scope: !11461, file: !971, line: 633, column: 9)
!11615 = !DILocation(line: 633, column: 12, scope: !11614, inlinedAt: !11465)
!11616 = !DILocation(line: 633, column: 24, scope: !11614, inlinedAt: !11465)
!11617 = !DILocation(line: 633, column: 38, scope: !11614, inlinedAt: !11465)
!11618 = !DILocation(line: 633, column: 41, scope: !11619, inlinedAt: !11465)
!11619 = !DILexicalBlockFile(scope: !11614, file: !971, discriminator: 1)
!11620 = !DILocation(line: 633, column: 44, scope: !11619, inlinedAt: !11465)
!11621 = !DILocation(line: 633, column: 53, scope: !11619, inlinedAt: !11465)
!11622 = !DILocation(line: 633, column: 9, scope: !11619, inlinedAt: !11465)
!11623 = !DILocation(line: 634, column: 13, scope: !11624, inlinedAt: !11465)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !971, line: 634, column: 13)
!11625 = distinct !DILexicalBlock(scope: !11614, file: !971, line: 633, column: 59)
!11626 = !DILocation(line: 634, column: 16, scope: !11624, inlinedAt: !11465)
!11627 = !DILocation(line: 634, column: 13, scope: !11625, inlinedAt: !11465)
!11628 = !DILocation(line: 635, column: 36, scope: !11629, inlinedAt: !11465)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !971, line: 634, column: 24)
!11630 = !DILocation(line: 635, column: 13, scope: !11629, inlinedAt: !11465)
!11631 = !DILocation(line: 636, column: 9, scope: !11629, inlinedAt: !11465)
!11632 = !DILocation(line: 637, column: 35, scope: !11633, inlinedAt: !11465)
!11633 = distinct !DILexicalBlock(scope: !11624, file: !971, line: 636, column: 16)
!11634 = !DILocation(line: 637, column: 13, scope: !11633, inlinedAt: !11465)
!11635 = !DILocation(line: 639, column: 5, scope: !11625, inlinedAt: !11465)
!11636 = !DILocation(line: 640, column: 5, scope: !11461, inlinedAt: !11465)
!11637 = !DILocation(line: 641, column: 1, scope: !11461, inlinedAt: !11465)
!11638 = !DILocation(line: 646, column: 5, scope: !11459)
!11639 = distinct !DISubprogram(name: "decode_subband_golomb", scope: !971, file: !971, line: 649, type: !10222, isLocal: true, isDefinition: true, scopeLine: 650, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11640 = !DILocation(line: 601, column: 88, scope: !11461, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 653, column: 12, scope: !11639)
!11642 = !DILocation(line: 601, column: 100, scope: !11461, inlinedAt: !11641)
!11643 = !DILocation(line: 601, column: 107, scope: !11461, inlinedAt: !11641)
!11644 = !DILocation(line: 603, column: 9, scope: !11461, inlinedAt: !11641)
!11645 = !DILocation(line: 603, column: 15, scope: !11461, inlinedAt: !11641)
!11646 = !DILocation(line: 603, column: 21, scope: !11461, inlinedAt: !11641)
!11647 = !DILocation(line: 603, column: 27, scope: !11461, inlinedAt: !11641)
!11648 = !DILocation(line: 603, column: 34, scope: !11461, inlinedAt: !11641)
!11649 = !DILocation(line: 603, column: 39, scope: !11461, inlinedAt: !11641)
!11650 = !DILocation(line: 604, column: 16, scope: !11461, inlinedAt: !11641)
!11651 = !DILocation(line: 605, column: 19, scope: !11461, inlinedAt: !11641)
!11652 = !DILocation(line: 606, column: 9, scope: !11461, inlinedAt: !11641)
!11653 = !DILocation(line: 607, column: 9, scope: !11461, inlinedAt: !11641)
!11654 = !DILocation(line: 608, column: 9, scope: !11461, inlinedAt: !11641)
!11655 = !DILocation(line: 609, column: 9, scope: !11461, inlinedAt: !11641)
!11656 = !DILocalVariable(name: "avctx", arg: 1, scope: !11639, file: !971, line: 649, type: !1251)
!11657 = !DILocation(line: 649, column: 50, scope: !11639)
!11658 = !DILocalVariable(name: "arg", arg: 2, scope: !11639, file: !971, line: 649, type: !1019)
!11659 = !DILocation(line: 649, column: 63, scope: !11639)
!11660 = !DILocalVariable(name: "s", scope: !11639, file: !971, line: 651, type: !2670)
!11661 = !DILocation(line: 651, column: 19, scope: !11639)
!11662 = !DILocation(line: 651, column: 23, scope: !11639)
!11663 = !DILocation(line: 651, column: 30, scope: !11639)
!11664 = !DILocalVariable(name: "b", scope: !11639, file: !971, line: 652, type: !11665)
!11665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 64, align: 64)
!11666 = !DILocation(line: 652, column: 15, scope: !11639)
!11667 = !DILocation(line: 652, column: 19, scope: !11639)
!11668 = !DILocation(line: 653, column: 36, scope: !11639)
!11669 = !DILocation(line: 653, column: 40, scope: !11639)
!11670 = !DILocation(line: 653, column: 39, scope: !11639)
!11671 = !DILocation(line: 653, column: 12, scope: !11639)
!11672 = !DILocation(line: 606, column: 33, scope: !11461, inlinedAt: !11641)
!11673 = !DILocation(line: 606, column: 36, scope: !11461, inlinedAt: !11641)
!11674 = !DILocation(line: 606, column: 45, scope: !11461, inlinedAt: !11641)
!11675 = !DILocation(line: 606, column: 48, scope: !11461, inlinedAt: !11641)
!11676 = !DILocation(line: 606, column: 60, scope: !11461, inlinedAt: !11641)
!11677 = !DILocation(line: 606, column: 42, scope: !11461, inlinedAt: !11641)
!11678 = !DILocation(line: 606, column: 20, scope: !11461, inlinedAt: !11641)
!11679 = !DILocation(line: 606, column: 23, scope: !11461, inlinedAt: !11641)
!11680 = !DILocation(line: 606, column: 76, scope: !11461, inlinedAt: !11641)
!11681 = !DILocation(line: 607, column: 34, scope: !11461, inlinedAt: !11641)
!11682 = !DILocation(line: 607, column: 37, scope: !11461, inlinedAt: !11641)
!11683 = !DILocation(line: 607, column: 46, scope: !11461, inlinedAt: !11641)
!11684 = !DILocation(line: 607, column: 49, scope: !11461, inlinedAt: !11641)
!11685 = !DILocation(line: 607, column: 61, scope: !11461, inlinedAt: !11641)
!11686 = !DILocation(line: 607, column: 43, scope: !11461, inlinedAt: !11641)
!11687 = !DILocation(line: 607, column: 21, scope: !11461, inlinedAt: !11641)
!11688 = !DILocation(line: 607, column: 24, scope: !11461, inlinedAt: !11641)
!11689 = !DILocation(line: 607, column: 77, scope: !11461, inlinedAt: !11641)
!11690 = !DILocation(line: 608, column: 25, scope: !11461, inlinedAt: !11641)
!11691 = !DILocation(line: 608, column: 36, scope: !11461, inlinedAt: !11641)
!11692 = !DILocation(line: 608, column: 34, scope: !11461, inlinedAt: !11641)
!11693 = !DILocation(line: 608, column: 47, scope: !11461, inlinedAt: !11641)
!11694 = !DILocation(line: 611, column: 10, scope: !11528, inlinedAt: !11641)
!11695 = !DILocation(line: 611, column: 13, scope: !11528, inlinedAt: !11641)
!11696 = !DILocation(line: 611, column: 9, scope: !11461, inlinedAt: !11641)
!11697 = !DILocation(line: 612, column: 9, scope: !11528, inlinedAt: !11641)
!11698 = !DILocation(line: 614, column: 25, scope: !11461, inlinedAt: !11641)
!11699 = !DILocation(line: 614, column: 28, scope: !11461, inlinedAt: !11641)
!11700 = !DILocation(line: 614, column: 40, scope: !11461, inlinedAt: !11641)
!11701 = !DILocation(line: 614, column: 43, scope: !11461, inlinedAt: !11641)
!11702 = !DILocation(line: 614, column: 5, scope: !11461, inlinedAt: !11641)
!11703 = !DILocation(line: 616, column: 9, scope: !11538, inlinedAt: !11641)
!11704 = !DILocation(line: 616, column: 9, scope: !11461, inlinedAt: !11641)
!11705 = !DILocation(line: 617, column: 46, scope: !11538, inlinedAt: !11641)
!11706 = !DILocation(line: 617, column: 49, scope: !11538, inlinedAt: !11641)
!11707 = !DILocation(line: 617, column: 9, scope: !11538, inlinedAt: !11641)
!11708 = !DILocation(line: 619, column: 9, scope: !11461, inlinedAt: !11641)
!11709 = !DILocation(line: 620, column: 15, scope: !11545, inlinedAt: !11641)
!11710 = !DILocation(line: 620, column: 10, scope: !11545, inlinedAt: !11641)
!11711 = !DILocation(line: 620, column: 20, scope: !11548, inlinedAt: !11641)
!11712 = !DILocation(line: 620, column: 27, scope: !11548, inlinedAt: !11641)
!11713 = !DILocation(line: 620, column: 25, scope: !11548, inlinedAt: !11641)
!11714 = !DILocation(line: 620, column: 5, scope: !11548, inlinedAt: !11641)
!11715 = !DILocation(line: 621, column: 19, scope: !11554, inlinedAt: !11641)
!11716 = !DILocation(line: 621, column: 22, scope: !11554, inlinedAt: !11641)
!11717 = !DILocation(line: 621, column: 32, scope: !11554, inlinedAt: !11641)
!11718 = !DILocation(line: 621, column: 36, scope: !11554, inlinedAt: !11641)
!11719 = !DILocation(line: 621, column: 29, scope: !11554, inlinedAt: !11641)
!11720 = !DILocation(line: 621, column: 45, scope: !11554, inlinedAt: !11641)
!11721 = !DILocation(line: 621, column: 43, scope: !11554, inlinedAt: !11641)
!11722 = !DILocation(line: 621, column: 18, scope: !11554, inlinedAt: !11641)
!11723 = !DILocation(line: 621, column: 16, scope: !11554, inlinedAt: !11641)
!11724 = !DILocation(line: 622, column: 14, scope: !11554, inlinedAt: !11641)
!11725 = !DILocation(line: 623, column: 19, scope: !11565, inlinedAt: !11641)
!11726 = !DILocation(line: 623, column: 14, scope: !11565, inlinedAt: !11641)
!11727 = !DILocation(line: 623, column: 24, scope: !11568, inlinedAt: !11641)
!11728 = !DILocation(line: 623, column: 31, scope: !11568, inlinedAt: !11641)
!11729 = !DILocation(line: 623, column: 29, scope: !11568, inlinedAt: !11641)
!11730 = !DILocation(line: 623, column: 9, scope: !11568, inlinedAt: !11641)
!11731 = !DILocation(line: 624, column: 22, scope: !11574, inlinedAt: !11641)
!11732 = !DILocation(line: 624, column: 25, scope: !11574, inlinedAt: !11641)
!11733 = !DILocation(line: 624, column: 34, scope: !11574, inlinedAt: !11641)
!11734 = !DILocation(line: 624, column: 38, scope: !11574, inlinedAt: !11641)
!11735 = !DILocation(line: 624, column: 31, scope: !11574, inlinedAt: !11641)
!11736 = !DILocation(line: 624, column: 47, scope: !11574, inlinedAt: !11641)
!11737 = !DILocation(line: 624, column: 45, scope: !11574, inlinedAt: !11641)
!11738 = !DILocation(line: 624, column: 21, scope: !11574, inlinedAt: !11641)
!11739 = !DILocation(line: 624, column: 19, scope: !11574, inlinedAt: !11641)
!11740 = !DILocation(line: 625, column: 29, scope: !11574, inlinedAt: !11641)
!11741 = !DILocation(line: 625, column: 32, scope: !11574, inlinedAt: !11641)
!11742 = !DILocation(line: 625, column: 44, scope: !11574, inlinedAt: !11641)
!11743 = !DILocation(line: 625, column: 50, scope: !11574, inlinedAt: !11641)
!11744 = !DILocation(line: 625, column: 57, scope: !11574, inlinedAt: !11641)
!11745 = !DILocation(line: 625, column: 62, scope: !11574, inlinedAt: !11641)
!11746 = !DILocation(line: 625, column: 70, scope: !11574, inlinedAt: !11641)
!11747 = !DILocation(line: 625, column: 84, scope: !11574, inlinedAt: !11641)
!11748 = !DILocation(line: 625, column: 19, scope: !11574, inlinedAt: !11641)
!11749 = !DILocation(line: 625, column: 17, scope: !11574, inlinedAt: !11641)
!11750 = !DILocation(line: 626, column: 17, scope: !11594, inlinedAt: !11641)
!11751 = !DILocation(line: 626, column: 21, scope: !11594, inlinedAt: !11641)
!11752 = !DILocation(line: 626, column: 17, scope: !11574, inlinedAt: !11641)
!11753 = !DILocation(line: 627, column: 24, scope: !11594, inlinedAt: !11641)
!11754 = !DILocation(line: 627, column: 17, scope: !11594, inlinedAt: !11641)
!11755 = !DILocation(line: 628, column: 20, scope: !11574, inlinedAt: !11641)
!11756 = !DILocation(line: 628, column: 18, scope: !11574, inlinedAt: !11641)
!11757 = !DILocation(line: 623, column: 45, scope: !11602, inlinedAt: !11641)
!11758 = !DILocation(line: 623, column: 9, scope: !11602, inlinedAt: !11641)
!11759 = !DILocation(line: 630, column: 15, scope: !11554, inlinedAt: !11641)
!11760 = !DILocation(line: 630, column: 13, scope: !11554, inlinedAt: !11641)
!11761 = !DILocation(line: 620, column: 42, scope: !11609, inlinedAt: !11641)
!11762 = !DILocation(line: 620, column: 5, scope: !11609, inlinedAt: !11641)
!11763 = !DILocation(line: 633, column: 9, scope: !11614, inlinedAt: !11641)
!11764 = !DILocation(line: 633, column: 12, scope: !11614, inlinedAt: !11641)
!11765 = !DILocation(line: 633, column: 24, scope: !11614, inlinedAt: !11641)
!11766 = !DILocation(line: 633, column: 38, scope: !11614, inlinedAt: !11641)
!11767 = !DILocation(line: 633, column: 41, scope: !11619, inlinedAt: !11641)
!11768 = !DILocation(line: 633, column: 44, scope: !11619, inlinedAt: !11641)
!11769 = !DILocation(line: 633, column: 53, scope: !11619, inlinedAt: !11641)
!11770 = !DILocation(line: 633, column: 9, scope: !11619, inlinedAt: !11641)
!11771 = !DILocation(line: 634, column: 13, scope: !11624, inlinedAt: !11641)
!11772 = !DILocation(line: 634, column: 16, scope: !11624, inlinedAt: !11641)
!11773 = !DILocation(line: 634, column: 13, scope: !11625, inlinedAt: !11641)
!11774 = !DILocation(line: 635, column: 36, scope: !11629, inlinedAt: !11641)
!11775 = !DILocation(line: 635, column: 13, scope: !11629, inlinedAt: !11641)
!11776 = !DILocation(line: 636, column: 9, scope: !11629, inlinedAt: !11641)
!11777 = !DILocation(line: 637, column: 35, scope: !11633, inlinedAt: !11641)
!11778 = !DILocation(line: 637, column: 13, scope: !11633, inlinedAt: !11641)
!11779 = !DILocation(line: 639, column: 5, scope: !11625, inlinedAt: !11641)
!11780 = !DILocation(line: 640, column: 5, scope: !11461, inlinedAt: !11641)
!11781 = !DILocation(line: 641, column: 1, scope: !11461, inlinedAt: !11641)
!11782 = !DILocation(line: 653, column: 5, scope: !11639)
!11783 = distinct !DISubprogram(name: "init_get_bits8", scope: !1115, file: !1115, line: 650, type: !4346, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11784 = !DILocalVariable(name: "s", arg: 1, scope: !11783, file: !1115, line: 650, type: !4348)
!11785 = !DILocation(line: 650, column: 49, scope: !11783)
!11786 = !DILocalVariable(name: "buffer", arg: 2, scope: !11783, file: !1115, line: 650, type: !1119)
!11787 = !DILocation(line: 650, column: 67, scope: !11783)
!11788 = !DILocalVariable(name: "byte_size", arg: 3, scope: !11783, file: !1115, line: 651, type: !979)
!11789 = !DILocation(line: 651, column: 38, scope: !11783)
!11790 = !DILocation(line: 653, column: 9, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11783, file: !1115, line: 653, column: 9)
!11792 = !DILocation(line: 653, column: 19, scope: !11791)
!11793 = !DILocation(line: 653, column: 36, scope: !11791)
!11794 = !DILocation(line: 653, column: 39, scope: !11795)
!11795 = !DILexicalBlockFile(scope: !11791, file: !1115, discriminator: 1)
!11796 = !DILocation(line: 653, column: 49, scope: !11795)
!11797 = !DILocation(line: 653, column: 9, scope: !11795)
!11798 = !DILocation(line: 654, column: 19, scope: !11791)
!11799 = !DILocation(line: 654, column: 9, scope: !11791)
!11800 = !DILocation(line: 655, column: 26, scope: !11783)
!11801 = !DILocation(line: 655, column: 29, scope: !11783)
!11802 = !DILocation(line: 655, column: 37, scope: !11783)
!11803 = !DILocation(line: 655, column: 47, scope: !11783)
!11804 = !DILocation(line: 655, column: 12, scope: !11783)
!11805 = !DILocation(line: 655, column: 5, scope: !11783)
!11806 = distinct !DISubprogram(name: "codeblock", scope: !971, file: !971, line: 491, type: !11807, isLocal: true, isDefinition: true, scopeLine: 495, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{!979, !2670, !7223, !4348, !7783, !979, !979, !979, !979, !979, !979}
!11809 = !DILocalVariable(name: "s", arg: 1, scope: !11806, file: !971, line: 491, type: !2670)
!11810 = !DILocation(line: 491, column: 43, scope: !11806)
!11811 = !DILocalVariable(name: "b", arg: 2, scope: !11806, file: !971, line: 491, type: !7223)
!11812 = !DILocation(line: 491, column: 55, scope: !11806)
!11813 = !DILocalVariable(name: "gb", arg: 3, scope: !11806, file: !971, line: 492, type: !4348)
!11814 = !DILocation(line: 492, column: 45, scope: !11806)
!11815 = !DILocalVariable(name: "c", arg: 4, scope: !11806, file: !971, line: 492, type: !7783)
!11816 = !DILocation(line: 492, column: 61, scope: !11806)
!11817 = !DILocalVariable(name: "left", arg: 5, scope: !11806, file: !971, line: 493, type: !979)
!11818 = !DILocation(line: 493, column: 34, scope: !11806)
!11819 = !DILocalVariable(name: "right", arg: 6, scope: !11806, file: !971, line: 493, type: !979)
!11820 = !DILocation(line: 493, column: 44, scope: !11806)
!11821 = !DILocalVariable(name: "top", arg: 7, scope: !11806, file: !971, line: 493, type: !979)
!11822 = !DILocation(line: 493, column: 55, scope: !11806)
!11823 = !DILocalVariable(name: "bottom", arg: 8, scope: !11806, file: !971, line: 493, type: !979)
!11824 = !DILocation(line: 493, column: 64, scope: !11806)
!11825 = !DILocalVariable(name: "blockcnt_one", arg: 9, scope: !11806, file: !971, line: 494, type: !979)
!11826 = !DILocation(line: 494, column: 34, scope: !11806)
!11827 = !DILocalVariable(name: "is_arith", arg: 10, scope: !11806, file: !971, line: 494, type: !979)
!11828 = !DILocation(line: 494, column: 52, scope: !11806)
!11829 = !DILocalVariable(name: "x", scope: !11806, file: !971, line: 496, type: !979)
!11830 = !DILocation(line: 496, column: 9, scope: !11806)
!11831 = !DILocalVariable(name: "y", scope: !11806, file: !971, line: 496, type: !979)
!11832 = !DILocation(line: 496, column: 12, scope: !11806)
!11833 = !DILocalVariable(name: "zero_block", scope: !11806, file: !971, line: 496, type: !979)
!11834 = !DILocation(line: 496, column: 15, scope: !11806)
!11835 = !DILocalVariable(name: "qoffset", scope: !11806, file: !971, line: 497, type: !979)
!11836 = !DILocation(line: 497, column: 9, scope: !11806)
!11837 = !DILocalVariable(name: "qfactor", scope: !11806, file: !971, line: 497, type: !979)
!11838 = !DILocation(line: 497, column: 18, scope: !11806)
!11839 = !DILocalVariable(name: "buf", scope: !11806, file: !971, line: 498, type: !987)
!11840 = !DILocation(line: 498, column: 14, scope: !11806)
!11841 = !DILocation(line: 501, column: 10, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11806, file: !971, line: 501, column: 9)
!11843 = !DILocation(line: 501, column: 9, scope: !11806)
!11844 = !DILocation(line: 502, column: 13, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !971, line: 502, column: 13)
!11846 = distinct !DILexicalBlock(scope: !11842, file: !971, line: 501, column: 24)
!11847 = !DILocation(line: 502, column: 13, scope: !11846)
!11848 = !DILocation(line: 503, column: 46, scope: !11845)
!11849 = !DILocation(line: 503, column: 26, scope: !11845)
!11850 = !DILocation(line: 503, column: 24, scope: !11845)
!11851 = !DILocation(line: 503, column: 13, scope: !11845)
!11852 = !DILocation(line: 505, column: 36, scope: !11845)
!11853 = !DILocation(line: 505, column: 26, scope: !11845)
!11854 = !DILocation(line: 505, column: 24, scope: !11845)
!11855 = !DILocation(line: 507, column: 13, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11846, file: !971, line: 507, column: 13)
!11857 = !DILocation(line: 507, column: 13, scope: !11846)
!11858 = !DILocation(line: 508, column: 13, scope: !11856)
!11859 = !DILocation(line: 509, column: 5, scope: !11846)
!11860 = !DILocation(line: 511, column: 9, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11806, file: !971, line: 511, column: 9)
!11862 = !DILocation(line: 511, column: 12, scope: !11861)
!11863 = !DILocation(line: 511, column: 27, scope: !11861)
!11864 = !DILocation(line: 511, column: 32, scope: !11865)
!11865 = !DILexicalBlockFile(scope: !11861, file: !971, discriminator: 1)
!11866 = !DILocation(line: 511, column: 35, scope: !11865)
!11867 = !DILocation(line: 511, column: 51, scope: !11865)
!11868 = !DILocation(line: 511, column: 54, scope: !11869)
!11869 = !DILexicalBlockFile(scope: !11861, file: !971, discriminator: 2)
!11870 = !DILocation(line: 511, column: 9, scope: !11869)
!11871 = !DILocalVariable(name: "quant", scope: !11872, file: !971, line: 512, type: !979)
!11872 = distinct !DILexicalBlock(scope: !11861, file: !971, line: 511, column: 69)
!11873 = !DILocation(line: 512, column: 13, scope: !11872)
!11874 = !DILocation(line: 513, column: 13, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !971, line: 513, column: 13)
!11876 = !DILocation(line: 513, column: 13, scope: !11872)
!11877 = !DILocation(line: 514, column: 41, scope: !11875)
!11878 = !DILocation(line: 514, column: 21, scope: !11875)
!11879 = !DILocation(line: 514, column: 19, scope: !11875)
!11880 = !DILocation(line: 514, column: 13, scope: !11875)
!11881 = !DILocation(line: 516, column: 41, scope: !11875)
!11882 = !DILocation(line: 516, column: 21, scope: !11875)
!11883 = !DILocation(line: 516, column: 19, scope: !11875)
!11884 = !DILocation(line: 517, column: 13, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11872, file: !971, line: 517, column: 13)
!11886 = !DILocation(line: 517, column: 34, scope: !11885)
!11887 = !DILocation(line: 517, column: 37, scope: !11885)
!11888 = !DILocation(line: 517, column: 32, scope: !11885)
!11889 = !DILocation(line: 517, column: 19, scope: !11885)
!11890 = !DILocation(line: 517, column: 43, scope: !11885)
!11891 = !DILocation(line: 517, column: 46, scope: !11892)
!11892 = !DILexicalBlockFile(scope: !11885, file: !971, discriminator: 1)
!11893 = !DILocation(line: 517, column: 49, scope: !11892)
!11894 = !DILocation(line: 517, column: 57, scope: !11892)
!11895 = !DILocation(line: 517, column: 55, scope: !11892)
!11896 = !DILocation(line: 517, column: 63, scope: !11892)
!11897 = !DILocation(line: 517, column: 13, scope: !11892)
!11898 = !DILocation(line: 518, column: 20, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11885, file: !971, line: 517, column: 68)
!11900 = !DILocation(line: 518, column: 23, scope: !11899)
!11901 = !DILocation(line: 518, column: 13, scope: !11899)
!11902 = !DILocation(line: 519, column: 13, scope: !11899)
!11903 = !DILocation(line: 521, column: 21, scope: !11872)
!11904 = !DILocation(line: 521, column: 9, scope: !11872)
!11905 = !DILocation(line: 521, column: 12, scope: !11872)
!11906 = !DILocation(line: 521, column: 18, scope: !11872)
!11907 = !DILocation(line: 522, column: 5, scope: !11872)
!11908 = !DILocation(line: 524, column: 9, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11806, file: !971, line: 524, column: 9)
!11910 = !DILocation(line: 524, column: 12, scope: !11909)
!11911 = !DILocation(line: 524, column: 18, scope: !11909)
!11912 = !DILocation(line: 524, column: 9, scope: !11806)
!11913 = !DILocation(line: 525, column: 16, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !971, line: 524, column: 94)
!11915 = !DILocation(line: 525, column: 19, scope: !11914)
!11916 = !DILocation(line: 525, column: 56, scope: !11914)
!11917 = !DILocation(line: 525, column: 59, scope: !11914)
!11918 = !DILocation(line: 525, column: 9, scope: !11914)
!11919 = !DILocation(line: 526, column: 9, scope: !11914)
!11920 = !DILocation(line: 526, column: 12, scope: !11914)
!11921 = !DILocation(line: 526, column: 18, scope: !11914)
!11922 = !DILocation(line: 527, column: 9, scope: !11914)
!11923 = !DILocation(line: 530, column: 35, scope: !11806)
!11924 = !DILocation(line: 530, column: 38, scope: !11806)
!11925 = !DILocation(line: 530, column: 15, scope: !11806)
!11926 = !DILocation(line: 530, column: 13, scope: !11806)
!11927 = !DILocation(line: 532, column: 10, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11806, file: !971, line: 532, column: 9)
!11929 = !DILocation(line: 532, column: 13, scope: !11928)
!11930 = !DILocation(line: 532, column: 9, scope: !11806)
!11931 = !DILocation(line: 533, column: 46, scope: !11928)
!11932 = !DILocation(line: 533, column: 49, scope: !11928)
!11933 = !DILocation(line: 533, column: 19, scope: !11928)
!11934 = !DILocation(line: 533, column: 56, scope: !11928)
!11935 = !DILocation(line: 533, column: 17, scope: !11928)
!11936 = !DILocation(line: 533, column: 9, scope: !11928)
!11937 = !DILocation(line: 535, column: 46, scope: !11928)
!11938 = !DILocation(line: 535, column: 49, scope: !11928)
!11939 = !DILocation(line: 535, column: 19, scope: !11928)
!11940 = !DILocation(line: 535, column: 56, scope: !11928)
!11941 = !DILocation(line: 535, column: 17, scope: !11928)
!11942 = !DILocation(line: 537, column: 11, scope: !11806)
!11943 = !DILocation(line: 537, column: 14, scope: !11806)
!11944 = !DILocation(line: 537, column: 21, scope: !11806)
!11945 = !DILocation(line: 537, column: 27, scope: !11806)
!11946 = !DILocation(line: 537, column: 30, scope: !11806)
!11947 = !DILocation(line: 537, column: 25, scope: !11806)
!11948 = !DILocation(line: 537, column: 19, scope: !11806)
!11949 = !DILocation(line: 537, column: 9, scope: !11806)
!11950 = !DILocation(line: 538, column: 9, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11806, file: !971, line: 538, column: 9)
!11952 = !DILocation(line: 538, column: 9, scope: !11806)
!11953 = !DILocation(line: 539, column: 18, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !971, line: 539, column: 9)
!11955 = distinct !DILexicalBlock(scope: !11951, file: !971, line: 538, column: 19)
!11956 = !DILocation(line: 539, column: 16, scope: !11954)
!11957 = !DILocation(line: 539, column: 14, scope: !11954)
!11958 = !DILocation(line: 539, column: 23, scope: !11959)
!11959 = !DILexicalBlockFile(scope: !11960, file: !971, discriminator: 1)
!11960 = distinct !DILexicalBlock(scope: !11954, file: !971, line: 539, column: 9)
!11961 = !DILocation(line: 539, column: 27, scope: !11959)
!11962 = !DILocation(line: 539, column: 25, scope: !11959)
!11963 = !DILocation(line: 539, column: 9, scope: !11959)
!11964 = !DILocation(line: 540, column: 17, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !971, line: 540, column: 17)
!11966 = distinct !DILexicalBlock(scope: !11960, file: !971, line: 539, column: 40)
!11967 = !DILocation(line: 540, column: 20, scope: !11965)
!11968 = !DILocation(line: 540, column: 17, scope: !11966)
!11969 = !DILocation(line: 541, column: 24, scope: !11965)
!11970 = !DILocation(line: 541, column: 27, scope: !11965)
!11971 = !DILocation(line: 541, column: 17, scope: !11965)
!11972 = !DILocation(line: 542, column: 22, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11966, file: !971, line: 542, column: 13)
!11974 = !DILocation(line: 542, column: 20, scope: !11973)
!11975 = !DILocation(line: 542, column: 18, scope: !11973)
!11976 = !DILocation(line: 542, column: 28, scope: !11977)
!11977 = !DILexicalBlockFile(scope: !11978, file: !971, discriminator: 1)
!11978 = distinct !DILexicalBlock(scope: !11973, file: !971, line: 542, column: 13)
!11979 = !DILocation(line: 542, column: 32, scope: !11977)
!11980 = !DILocation(line: 542, column: 30, scope: !11977)
!11981 = !DILocation(line: 542, column: 13, scope: !11977)
!11982 = !DILocation(line: 543, column: 21, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !971, line: 543, column: 21)
!11984 = distinct !DILexicalBlock(scope: !11978, file: !971, line: 542, column: 44)
!11985 = !DILocation(line: 543, column: 24, scope: !11983)
!11986 = !DILocation(line: 543, column: 21, scope: !11984)
!11987 = !DILocation(line: 544, column: 43, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11983, file: !971, line: 543, column: 32)
!11989 = !DILocation(line: 544, column: 46, scope: !11988)
!11990 = !DILocation(line: 544, column: 55, scope: !11988)
!11991 = !DILocation(line: 544, column: 64, scope: !11988)
!11992 = !DILocation(line: 544, column: 78, scope: !11988)
!11993 = !DILocation(line: 544, column: 67, scope: !11988)
!11994 = !DILocation(line: 544, column: 83, scope: !11988)
!11995 = !DILocation(line: 544, column: 82, scope: !11988)
!11996 = !DILocation(line: 544, column: 86, scope: !11988)
!11997 = !DILocation(line: 544, column: 89, scope: !11988)
!11998 = !DILocation(line: 544, column: 21, scope: !11988)
!11999 = !DILocation(line: 545, column: 17, scope: !11988)
!12000 = !DILocation(line: 546, column: 42, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11983, file: !971, line: 545, column: 24)
!12002 = !DILocation(line: 546, column: 45, scope: !12001)
!12003 = !DILocation(line: 546, column: 54, scope: !12001)
!12004 = !DILocation(line: 546, column: 63, scope: !12001)
!12005 = !DILocation(line: 546, column: 77, scope: !12001)
!12006 = !DILocation(line: 546, column: 66, scope: !12001)
!12007 = !DILocation(line: 546, column: 82, scope: !12001)
!12008 = !DILocation(line: 546, column: 81, scope: !12001)
!12009 = !DILocation(line: 546, column: 85, scope: !12001)
!12010 = !DILocation(line: 546, column: 88, scope: !12001)
!12011 = !DILocation(line: 546, column: 21, scope: !12001)
!12012 = !DILocation(line: 548, column: 13, scope: !11984)
!12013 = !DILocation(line: 542, column: 40, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !11978, file: !971, discriminator: 2)
!12015 = !DILocation(line: 542, column: 13, scope: !12014)
!12016 = distinct !{!12016, !12017}
!12017 = !DILocation(line: 542, column: 13, scope: !11966)
!12018 = !DILocation(line: 549, column: 20, scope: !11966)
!12019 = !DILocation(line: 549, column: 23, scope: !11966)
!12020 = !DILocation(line: 549, column: 17, scope: !11966)
!12021 = !DILocation(line: 550, column: 9, scope: !11966)
!12022 = !DILocation(line: 539, column: 36, scope: !12023)
!12023 = !DILexicalBlockFile(scope: !11960, file: !971, discriminator: 2)
!12024 = !DILocation(line: 539, column: 9, scope: !12023)
!12025 = distinct !{!12025, !12026}
!12026 = !DILocation(line: 539, column: 9, scope: !11955)
!12027 = !DILocation(line: 551, column: 5, scope: !11955)
!12028 = !DILocation(line: 552, column: 18, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !971, line: 552, column: 9)
!12030 = distinct !DILexicalBlock(scope: !11951, file: !971, line: 551, column: 12)
!12031 = !DILocation(line: 552, column: 16, scope: !12029)
!12032 = !DILocation(line: 552, column: 14, scope: !12029)
!12033 = !DILocation(line: 552, column: 23, scope: !12034)
!12034 = !DILexicalBlockFile(scope: !12035, file: !971, discriminator: 1)
!12035 = distinct !DILexicalBlock(scope: !12029, file: !971, line: 552, column: 9)
!12036 = !DILocation(line: 552, column: 27, scope: !12034)
!12037 = !DILocation(line: 552, column: 25, scope: !12034)
!12038 = !DILocation(line: 552, column: 9, scope: !12034)
!12039 = !DILocation(line: 553, column: 31, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !971, line: 553, column: 17)
!12041 = distinct !DILexicalBlock(scope: !12035, file: !971, line: 552, column: 40)
!12042 = !DILocation(line: 553, column: 17, scope: !12040)
!12043 = !DILocation(line: 553, column: 35, scope: !12040)
!12044 = !DILocation(line: 553, column: 17, scope: !12041)
!12045 = !DILocation(line: 554, column: 17, scope: !12040)
!12046 = !DILocation(line: 555, column: 22, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12041, file: !971, line: 555, column: 13)
!12048 = !DILocation(line: 555, column: 20, scope: !12047)
!12049 = !DILocation(line: 555, column: 18, scope: !12047)
!12050 = !DILocation(line: 555, column: 28, scope: !12051)
!12051 = !DILexicalBlockFile(scope: !12052, file: !971, discriminator: 1)
!12052 = distinct !DILexicalBlock(scope: !12047, file: !971, line: 555, column: 13)
!12053 = !DILocation(line: 555, column: 32, scope: !12051)
!12054 = !DILocation(line: 555, column: 30, scope: !12051)
!12055 = !DILocation(line: 555, column: 13, scope: !12051)
!12056 = !DILocalVariable(name: "val", scope: !12057, file: !971, line: 556, type: !979)
!12057 = distinct !DILexicalBlock(scope: !12052, file: !971, line: 555, column: 44)
!12058 = !DILocation(line: 556, column: 21, scope: !12057)
!12059 = !DILocation(line: 556, column: 47, scope: !12057)
!12060 = !DILocation(line: 556, column: 51, scope: !12057)
!12061 = !DILocation(line: 556, column: 60, scope: !12057)
!12062 = !DILocation(line: 556, column: 27, scope: !12057)
!12063 = !DILocation(line: 557, column: 21, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12057, file: !971, line: 557, column: 21)
!12065 = !DILocation(line: 557, column: 24, scope: !12064)
!12066 = !DILocation(line: 557, column: 21, scope: !12057)
!12067 = !DILocation(line: 558, column: 67, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12064, file: !971, line: 557, column: 32)
!12069 = !DILocation(line: 558, column: 55, scope: !12068)
!12070 = !DILocation(line: 558, column: 54, scope: !12068)
!12071 = !DILocation(line: 558, column: 49, scope: !12068)
!12072 = !DILocation(line: 558, column: 61, scope: !12068)
!12073 = !DILocation(line: 558, column: 64, scope: !12068)
!12074 = !DILocation(line: 559, column: 17, scope: !12068)
!12075 = !DILocation(line: 560, column: 67, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12064, file: !971, line: 559, column: 24)
!12077 = !DILocation(line: 560, column: 66, scope: !12076)
!12078 = !DILocation(line: 560, column: 55, scope: !12076)
!12079 = !DILocation(line: 560, column: 54, scope: !12076)
!12080 = !DILocation(line: 560, column: 49, scope: !12076)
!12081 = !DILocation(line: 560, column: 61, scope: !12076)
!12082 = !DILocation(line: 560, column: 64, scope: !12076)
!12083 = !DILocation(line: 562, column: 13, scope: !12057)
!12084 = !DILocation(line: 555, column: 40, scope: !12085)
!12085 = !DILexicalBlockFile(scope: !12052, file: !971, discriminator: 2)
!12086 = !DILocation(line: 555, column: 13, scope: !12085)
!12087 = distinct !{!12087, !12088}
!12088 = !DILocation(line: 555, column: 13, scope: !12041)
!12089 = !DILocation(line: 563, column: 20, scope: !12041)
!12090 = !DILocation(line: 563, column: 23, scope: !12041)
!12091 = !DILocation(line: 563, column: 17, scope: !12041)
!12092 = !DILocation(line: 564, column: 10, scope: !12041)
!12093 = !DILocation(line: 552, column: 36, scope: !12094)
!12094 = !DILexicalBlockFile(scope: !12035, file: !971, discriminator: 2)
!12095 = !DILocation(line: 552, column: 9, scope: !12094)
!12096 = distinct !{!12096, !12097}
!12097 = !DILocation(line: 552, column: 9, scope: !12030)
!12098 = !DILocation(line: 566, column: 6, scope: !11806)
!12099 = !DILocation(line: 567, column: 1, scope: !11806)
!12100 = distinct !DISubprogram(name: "coeff_unpack_arith_10", scope: !971, file: !971, line: 485, type: !12101, isLocal: true, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{null, !7783, !979, !979, !7223, !1128, !979, !979}
!12103 = !DILocalVariable(name: "c", arg: 1, scope: !12100, file: !971, line: 485, type: !7783)
!12104 = !DILocation(line: 485, column: 54, scope: !12100)
!12105 = !DILocalVariable(name: "qfactor", arg: 2, scope: !12100, file: !971, line: 485, type: !979)
!12106 = !DILocation(line: 485, column: 61, scope: !12100)
!12107 = !DILocalVariable(name: "qoffset", arg: 3, scope: !12100, file: !971, line: 485, type: !979)
!12108 = !DILocation(line: 485, column: 74, scope: !12100)
!12109 = !DILocalVariable(name: "b", arg: 4, scope: !12100, file: !971, line: 485, type: !7223)
!12110 = !DILocation(line: 485, column: 92, scope: !12100)
!12111 = !DILocalVariable(name: "buf", arg: 5, scope: !12100, file: !971, line: 485, type: !1128)
!12112 = !DILocation(line: 485, column: 104, scope: !12100)
!12113 = !DILocalVariable(name: "x", arg: 6, scope: !12100, file: !971, line: 485, type: !979)
!12114 = !DILocation(line: 485, column: 113, scope: !12100)
!12115 = !DILocalVariable(name: "y", arg: 7, scope: !12100, file: !971, line: 485, type: !979)
!12116 = !DILocation(line: 485, column: 120, scope: !12100)
!12117 = !DILocalVariable(name: "sign", scope: !12100, file: !971, line: 485, type: !979)
!12118 = !DILocation(line: 485, column: 129, scope: !12100)
!12119 = !DILocalVariable(name: "sign_pred", scope: !12100, file: !971, line: 485, type: !979)
!12120 = !DILocation(line: 485, column: 135, scope: !12100)
!12121 = !DILocalVariable(name: "pred_ctx", scope: !12100, file: !971, line: 485, type: !979)
!12122 = !DILocation(line: 485, column: 150, scope: !12100)
!12123 = !DILocalVariable(name: "coeff", scope: !12100, file: !971, line: 485, type: !980)
!12124 = !DILocation(line: 485, column: 183, scope: !12100)
!12125 = !DILocalVariable(name: "mstride", scope: !12100, file: !971, line: 485, type: !1154)
!12126 = !DILocation(line: 485, column: 200, scope: !12100)
!12127 = !DILocation(line: 485, column: 212, scope: !12100)
!12128 = !DILocation(line: 485, column: 215, scope: !12100)
!12129 = !DILocation(line: 485, column: 228, scope: !12100)
!12130 = !DILocation(line: 485, column: 231, scope: !12100)
!12131 = !DILocation(line: 485, column: 227, scope: !12100)
!12132 = !DILocation(line: 485, column: 222, scope: !12100)
!12133 = !DILocation(line: 485, column: 210, scope: !12100)
!12134 = !DILocation(line: 485, column: 245, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12100, file: !971, line: 485, column: 245)
!12136 = !DILocation(line: 485, column: 248, scope: !12135)
!12137 = !DILocation(line: 485, column: 245, scope: !12100)
!12138 = !DILocalVariable(name: "pbuf", scope: !12139, file: !971, line: 485, type: !12140)
!12139 = distinct !DILexicalBlock(scope: !12135, file: !971, line: 485, column: 256)
!12140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12141, size: 64, align: 64)
!12141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!12142 = !DILocation(line: 485, column: 273, scope: !12139)
!12143 = !DILocation(line: 485, column: 291, scope: !12144)
!12144 = !DILexicalBlockFile(scope: !12139, file: !971, discriminator: 1)
!12145 = !DILocation(line: 485, column: 294, scope: !12144)
!12146 = !DILocation(line: 485, column: 302, scope: !12144)
!12147 = !DILocation(line: 485, column: 280, scope: !12144)
!12148 = !DILocation(line: 485, column: 273, scope: !12144)
!12149 = !DILocalVariable(name: "stride", scope: !12139, file: !971, line: 485, type: !1154)
!12150 = !DILocation(line: 485, column: 318, scope: !12139)
!12151 = !DILocation(line: 485, column: 327, scope: !12144)
!12152 = !DILocation(line: 485, column: 330, scope: !12144)
!12153 = !DILocation(line: 485, column: 338, scope: !12144)
!12154 = !DILocation(line: 485, column: 351, scope: !12144)
!12155 = !DILocation(line: 485, column: 354, scope: !12144)
!12156 = !DILocation(line: 485, column: 362, scope: !12144)
!12157 = !DILocation(line: 485, column: 350, scope: !12144)
!12158 = !DILocation(line: 485, column: 345, scope: !12144)
!12159 = !DILocation(line: 485, column: 318, scope: !12144)
!12160 = !DILocation(line: 485, column: 390, scope: !12144)
!12161 = !DILocation(line: 485, column: 400, scope: !12144)
!12162 = !DILocation(line: 485, column: 401, scope: !12144)
!12163 = !DILocation(line: 485, column: 397, scope: !12144)
!12164 = !DILocation(line: 485, column: 409, scope: !12144)
!12165 = !DILocation(line: 485, column: 410, scope: !12144)
!12166 = !DILocation(line: 485, column: 406, scope: !12144)
!12167 = !DILocation(line: 485, column: 385, scope: !12144)
!12168 = !DILocation(line: 485, column: 384, scope: !12144)
!12169 = !DILocation(line: 485, column: 383, scope: !12144)
!12170 = !DILocation(line: 485, column: 416, scope: !12144)
!12171 = !DILocation(line: 485, column: 380, scope: !12144)
!12172 = !DILocation(line: 485, column: 422, scope: !12144)
!12173 = !DILocation(line: 485, column: 428, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !12175, file: !971, discriminator: 2)
!12175 = distinct !DILexicalBlock(scope: !12100, file: !971, line: 485, column: 428)
!12176 = !DILocation(line: 485, column: 431, scope: !12174)
!12177 = !DILocation(line: 485, column: 443, scope: !12174)
!12178 = !DILocation(line: 485, column: 474, scope: !12179)
!12179 = !DILexicalBlockFile(scope: !12175, file: !971, discriminator: 3)
!12180 = !DILocation(line: 485, column: 470, scope: !12179)
!12181 = !DILocation(line: 485, column: 468, scope: !12179)
!12182 = !DILocation(line: 485, column: 458, scope: !12179)
!12183 = !DILocation(line: 485, column: 488, scope: !12184)
!12184 = !DILexicalBlockFile(scope: !12185, file: !971, discriminator: 4)
!12185 = distinct !DILexicalBlock(scope: !12100, file: !971, line: 485, column: 488)
!12186 = !DILocation(line: 485, column: 507, scope: !12187)
!12187 = !DILexicalBlockFile(scope: !12188, file: !971, discriminator: 5)
!12188 = distinct !DILexicalBlock(scope: !12185, file: !971, line: 485, column: 491)
!12189 = !DILocation(line: 485, column: 521, scope: !12187)
!12190 = !DILocation(line: 485, column: 517, scope: !12187)
!12191 = !DILocation(line: 485, column: 515, scope: !12187)
!12192 = !DILocation(line: 485, column: 541, scope: !12187)
!12193 = !DILocation(line: 485, column: 539, scope: !12187)
!12194 = !DILocation(line: 485, column: 532, scope: !12187)
!12195 = !DILocation(line: 485, column: 530, scope: !12187)
!12196 = !DILocation(line: 485, column: 505, scope: !12187)
!12197 = !DILocation(line: 485, column: 502, scope: !12187)
!12198 = !DILocation(line: 485, column: 556, scope: !12187)
!12199 = !DILocation(line: 485, column: 559, scope: !12187)
!12200 = !DILocation(line: 485, column: 571, scope: !12187)
!12201 = !DILocation(line: 485, column: 598, scope: !12202)
!12202 = !DILexicalBlockFile(scope: !12203, file: !971, discriminator: 6)
!12203 = distinct !DILexicalBlock(scope: !12188, file: !971, line: 485, column: 556)
!12204 = !DILocation(line: 485, column: 596, scope: !12202)
!12205 = !DILocation(line: 485, column: 586, scope: !12202)
!12206 = !DILocation(line: 485, column: 607, scope: !12207)
!12207 = !DILexicalBlockFile(scope: !12188, file: !971, discriminator: 7)
!12208 = !DILocation(line: 485, column: 633, scope: !12209)
!12209 = !DILexicalBlockFile(scope: !12210, file: !971, discriminator: 8)
!12210 = distinct !DILexicalBlock(scope: !12185, file: !971, line: 485, column: 614)
!12211 = !DILocation(line: 485, column: 629, scope: !12209)
!12212 = !DILocation(line: 485, column: 628, scope: !12209)
!12213 = !DILocation(line: 485, column: 625, scope: !12209)
!12214 = !DILocation(line: 485, column: 674, scope: !12215)
!12215 = !DILexicalBlockFile(scope: !12100, file: !971, discriminator: 9)
!12216 = !DILocation(line: 485, column: 677, scope: !12215)
!12217 = !DILocation(line: 485, column: 653, scope: !12215)
!12218 = !DILocation(line: 485, column: 651, scope: !12215)
!12219 = !DILocation(line: 485, column: 708, scope: !12215)
!12220 = !DILocation(line: 485, column: 726, scope: !12221)
!12221 = !DILexicalBlockFile(scope: !12222, file: !971, discriminator: 10)
!12222 = distinct !DILexicalBlock(scope: !12223, file: !971, line: 485, column: 715)
!12223 = distinct !DILexicalBlock(scope: !12100, file: !971, line: 485, column: 708)
!12224 = !DILocation(line: 485, column: 734, scope: !12221)
!12225 = !DILocation(line: 485, column: 732, scope: !12221)
!12226 = !DILocation(line: 485, column: 744, scope: !12221)
!12227 = !DILocation(line: 485, column: 742, scope: !12221)
!12228 = !DILocation(line: 485, column: 753, scope: !12221)
!12229 = !DILocation(line: 485, column: 723, scope: !12221)
!12230 = !DILocation(line: 485, column: 786, scope: !12221)
!12231 = !DILocation(line: 485, column: 808, scope: !12221)
!12232 = !DILocation(line: 485, column: 819, scope: !12221)
!12233 = !DILocation(line: 485, column: 804, scope: !12221)
!12234 = !DILocation(line: 485, column: 828, scope: !12221)
!12235 = !DILocation(line: 485, column: 839, scope: !12221)
!12236 = !DILocation(line: 485, column: 824, scope: !12221)
!12237 = !DILocation(line: 485, column: 766, scope: !12221)
!12238 = !DILocation(line: 485, column: 764, scope: !12221)
!12239 = !DILocation(line: 485, column: 856, scope: !12221)
!12240 = !DILocation(line: 485, column: 865, scope: !12221)
!12241 = !DILocation(line: 485, column: 864, scope: !12221)
!12242 = !DILocation(line: 485, column: 862, scope: !12221)
!12243 = !DILocation(line: 485, column: 873, scope: !12221)
!12244 = !DILocation(line: 485, column: 871, scope: !12221)
!12245 = !DILocation(line: 485, column: 853, scope: !12221)
!12246 = !DILocation(line: 485, column: 879, scope: !12221)
!12247 = !DILocation(line: 485, column: 888, scope: !12248)
!12248 = !DILexicalBlockFile(scope: !12100, file: !971, discriminator: 11)
!12249 = !DILocation(line: 485, column: 882, scope: !12248)
!12250 = !DILocation(line: 485, column: 886, scope: !12248)
!12251 = !DILocation(line: 485, column: 895, scope: !12248)
!12252 = distinct !DISubprogram(name: "coeff_unpack_arith_8", scope: !971, file: !971, line: 484, type: !12253, isLocal: true, isDefinition: true, scopeLine: 484, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12253 = !DISubroutineType(types: !12254)
!12254 = !{null, !7783, !979, !979, !7223, !1106, !979, !979}
!12255 = !DILocalVariable(name: "c", arg: 1, scope: !12252, file: !971, line: 484, type: !7783)
!12256 = !DILocation(line: 484, column: 53, scope: !12252)
!12257 = !DILocalVariable(name: "qfactor", arg: 2, scope: !12252, file: !971, line: 484, type: !979)
!12258 = !DILocation(line: 484, column: 60, scope: !12252)
!12259 = !DILocalVariable(name: "qoffset", arg: 3, scope: !12252, file: !971, line: 484, type: !979)
!12260 = !DILocation(line: 484, column: 73, scope: !12252)
!12261 = !DILocalVariable(name: "b", arg: 4, scope: !12252, file: !971, line: 484, type: !7223)
!12262 = !DILocation(line: 484, column: 91, scope: !12252)
!12263 = !DILocalVariable(name: "buf", arg: 5, scope: !12252, file: !971, line: 484, type: !1106)
!12264 = !DILocation(line: 484, column: 103, scope: !12252)
!12265 = !DILocalVariable(name: "x", arg: 6, scope: !12252, file: !971, line: 484, type: !979)
!12266 = !DILocation(line: 484, column: 112, scope: !12252)
!12267 = !DILocalVariable(name: "y", arg: 7, scope: !12252, file: !971, line: 484, type: !979)
!12268 = !DILocation(line: 484, column: 119, scope: !12252)
!12269 = !DILocalVariable(name: "sign", scope: !12252, file: !971, line: 484, type: !979)
!12270 = !DILocation(line: 484, column: 128, scope: !12252)
!12271 = !DILocalVariable(name: "sign_pred", scope: !12252, file: !971, line: 484, type: !979)
!12272 = !DILocation(line: 484, column: 134, scope: !12252)
!12273 = !DILocalVariable(name: "pred_ctx", scope: !12252, file: !971, line: 484, type: !979)
!12274 = !DILocation(line: 484, column: 149, scope: !12252)
!12275 = !DILocalVariable(name: "coeff", scope: !12252, file: !971, line: 484, type: !980)
!12276 = !DILocation(line: 484, column: 182, scope: !12252)
!12277 = !DILocalVariable(name: "mstride", scope: !12252, file: !971, line: 484, type: !1154)
!12278 = !DILocation(line: 484, column: 199, scope: !12252)
!12279 = !DILocation(line: 484, column: 211, scope: !12252)
!12280 = !DILocation(line: 484, column: 214, scope: !12252)
!12281 = !DILocation(line: 484, column: 227, scope: !12252)
!12282 = !DILocation(line: 484, column: 230, scope: !12252)
!12283 = !DILocation(line: 484, column: 226, scope: !12252)
!12284 = !DILocation(line: 484, column: 221, scope: !12252)
!12285 = !DILocation(line: 484, column: 209, scope: !12252)
!12286 = !DILocation(line: 484, column: 244, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12252, file: !971, line: 484, column: 244)
!12288 = !DILocation(line: 484, column: 247, scope: !12287)
!12289 = !DILocation(line: 484, column: 244, scope: !12252)
!12290 = !DILocalVariable(name: "pbuf", scope: !12291, file: !971, line: 484, type: !1864)
!12291 = distinct !DILexicalBlock(scope: !12287, file: !971, line: 484, column: 255)
!12292 = !DILocation(line: 484, column: 272, scope: !12291)
!12293 = !DILocation(line: 484, column: 290, scope: !12294)
!12294 = !DILexicalBlockFile(scope: !12291, file: !971, discriminator: 1)
!12295 = !DILocation(line: 484, column: 293, scope: !12294)
!12296 = !DILocation(line: 484, column: 301, scope: !12294)
!12297 = !DILocation(line: 484, column: 279, scope: !12294)
!12298 = !DILocation(line: 484, column: 272, scope: !12294)
!12299 = !DILocalVariable(name: "stride", scope: !12291, file: !971, line: 484, type: !1154)
!12300 = !DILocation(line: 484, column: 317, scope: !12291)
!12301 = !DILocation(line: 484, column: 326, scope: !12294)
!12302 = !DILocation(line: 484, column: 329, scope: !12294)
!12303 = !DILocation(line: 484, column: 337, scope: !12294)
!12304 = !DILocation(line: 484, column: 350, scope: !12294)
!12305 = !DILocation(line: 484, column: 353, scope: !12294)
!12306 = !DILocation(line: 484, column: 361, scope: !12294)
!12307 = !DILocation(line: 484, column: 349, scope: !12294)
!12308 = !DILocation(line: 484, column: 344, scope: !12294)
!12309 = !DILocation(line: 484, column: 317, scope: !12294)
!12310 = !DILocation(line: 484, column: 389, scope: !12294)
!12311 = !DILocation(line: 484, column: 399, scope: !12294)
!12312 = !DILocation(line: 484, column: 400, scope: !12294)
!12313 = !DILocation(line: 484, column: 396, scope: !12294)
!12314 = !DILocation(line: 484, column: 408, scope: !12294)
!12315 = !DILocation(line: 484, column: 409, scope: !12294)
!12316 = !DILocation(line: 484, column: 405, scope: !12294)
!12317 = !DILocation(line: 484, column: 384, scope: !12294)
!12318 = !DILocation(line: 484, column: 383, scope: !12294)
!12319 = !DILocation(line: 484, column: 382, scope: !12294)
!12320 = !DILocation(line: 484, column: 415, scope: !12294)
!12321 = !DILocation(line: 484, column: 379, scope: !12294)
!12322 = !DILocation(line: 484, column: 421, scope: !12294)
!12323 = !DILocation(line: 484, column: 427, scope: !12324)
!12324 = !DILexicalBlockFile(scope: !12325, file: !971, discriminator: 2)
!12325 = distinct !DILexicalBlock(scope: !12252, file: !971, line: 484, column: 427)
!12326 = !DILocation(line: 484, column: 430, scope: !12324)
!12327 = !DILocation(line: 484, column: 442, scope: !12324)
!12328 = !DILocation(line: 484, column: 473, scope: !12329)
!12329 = !DILexicalBlockFile(scope: !12325, file: !971, discriminator: 3)
!12330 = !DILocation(line: 484, column: 469, scope: !12329)
!12331 = !DILocation(line: 484, column: 467, scope: !12329)
!12332 = !DILocation(line: 484, column: 457, scope: !12329)
!12333 = !DILocation(line: 484, column: 487, scope: !12334)
!12334 = !DILexicalBlockFile(scope: !12335, file: !971, discriminator: 4)
!12335 = distinct !DILexicalBlock(scope: !12252, file: !971, line: 484, column: 487)
!12336 = !DILocation(line: 484, column: 506, scope: !12337)
!12337 = !DILexicalBlockFile(scope: !12338, file: !971, discriminator: 5)
!12338 = distinct !DILexicalBlock(scope: !12335, file: !971, line: 484, column: 490)
!12339 = !DILocation(line: 484, column: 520, scope: !12337)
!12340 = !DILocation(line: 484, column: 516, scope: !12337)
!12341 = !DILocation(line: 484, column: 514, scope: !12337)
!12342 = !DILocation(line: 484, column: 540, scope: !12337)
!12343 = !DILocation(line: 484, column: 538, scope: !12337)
!12344 = !DILocation(line: 484, column: 531, scope: !12337)
!12345 = !DILocation(line: 484, column: 529, scope: !12337)
!12346 = !DILocation(line: 484, column: 504, scope: !12337)
!12347 = !DILocation(line: 484, column: 501, scope: !12337)
!12348 = !DILocation(line: 484, column: 555, scope: !12337)
!12349 = !DILocation(line: 484, column: 558, scope: !12337)
!12350 = !DILocation(line: 484, column: 570, scope: !12337)
!12351 = !DILocation(line: 484, column: 597, scope: !12352)
!12352 = !DILexicalBlockFile(scope: !12353, file: !971, discriminator: 6)
!12353 = distinct !DILexicalBlock(scope: !12338, file: !971, line: 484, column: 555)
!12354 = !DILocation(line: 484, column: 595, scope: !12352)
!12355 = !DILocation(line: 484, column: 585, scope: !12352)
!12356 = !DILocation(line: 484, column: 606, scope: !12357)
!12357 = !DILexicalBlockFile(scope: !12338, file: !971, discriminator: 7)
!12358 = !DILocation(line: 484, column: 632, scope: !12359)
!12359 = !DILexicalBlockFile(scope: !12360, file: !971, discriminator: 8)
!12360 = distinct !DILexicalBlock(scope: !12335, file: !971, line: 484, column: 613)
!12361 = !DILocation(line: 484, column: 628, scope: !12359)
!12362 = !DILocation(line: 484, column: 627, scope: !12359)
!12363 = !DILocation(line: 484, column: 624, scope: !12359)
!12364 = !DILocation(line: 484, column: 673, scope: !12365)
!12365 = !DILexicalBlockFile(scope: !12252, file: !971, discriminator: 9)
!12366 = !DILocation(line: 484, column: 676, scope: !12365)
!12367 = !DILocation(line: 484, column: 652, scope: !12365)
!12368 = !DILocation(line: 484, column: 650, scope: !12365)
!12369 = !DILocation(line: 484, column: 707, scope: !12365)
!12370 = !DILocation(line: 484, column: 725, scope: !12371)
!12371 = !DILexicalBlockFile(scope: !12372, file: !971, discriminator: 10)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !971, line: 484, column: 714)
!12373 = distinct !DILexicalBlock(scope: !12252, file: !971, line: 484, column: 707)
!12374 = !DILocation(line: 484, column: 733, scope: !12371)
!12375 = !DILocation(line: 484, column: 731, scope: !12371)
!12376 = !DILocation(line: 484, column: 743, scope: !12371)
!12377 = !DILocation(line: 484, column: 741, scope: !12371)
!12378 = !DILocation(line: 484, column: 752, scope: !12371)
!12379 = !DILocation(line: 484, column: 722, scope: !12371)
!12380 = !DILocation(line: 484, column: 785, scope: !12371)
!12381 = !DILocation(line: 484, column: 807, scope: !12371)
!12382 = !DILocation(line: 484, column: 818, scope: !12371)
!12383 = !DILocation(line: 484, column: 803, scope: !12371)
!12384 = !DILocation(line: 484, column: 827, scope: !12371)
!12385 = !DILocation(line: 484, column: 838, scope: !12371)
!12386 = !DILocation(line: 484, column: 823, scope: !12371)
!12387 = !DILocation(line: 484, column: 765, scope: !12371)
!12388 = !DILocation(line: 484, column: 763, scope: !12371)
!12389 = !DILocation(line: 484, column: 855, scope: !12371)
!12390 = !DILocation(line: 484, column: 864, scope: !12371)
!12391 = !DILocation(line: 484, column: 863, scope: !12371)
!12392 = !DILocation(line: 484, column: 861, scope: !12371)
!12393 = !DILocation(line: 484, column: 872, scope: !12371)
!12394 = !DILocation(line: 484, column: 870, scope: !12371)
!12395 = !DILocation(line: 484, column: 852, scope: !12371)
!12396 = !DILocation(line: 484, column: 878, scope: !12371)
!12397 = !DILocation(line: 484, column: 887, scope: !12398)
!12398 = !DILexicalBlockFile(scope: !12252, file: !971, discriminator: 11)
!12399 = !DILocation(line: 484, column: 881, scope: !12398)
!12400 = !DILocation(line: 484, column: 885, scope: !12398)
!12401 = !DILocation(line: 484, column: 894, scope: !12398)
!12402 = distinct !DISubprogram(name: "init_obmc_weight", scope: !971, file: !971, line: 1580, type: !12403, isLocal: true, isDefinition: true, scopeLine: 1582, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{null, !5362, !987, !979, !979, !979, !979, !979}
!12405 = !DILocalVariable(name: "p", arg: 1, scope: !12402, file: !971, line: 1580, type: !5362)
!12406 = !DILocation(line: 1580, column: 37, scope: !12402)
!12407 = !DILocalVariable(name: "obmc_weight", arg: 2, scope: !12402, file: !971, line: 1580, type: !987)
!12408 = !DILocation(line: 1580, column: 49, scope: !12402)
!12409 = !DILocalVariable(name: "stride", arg: 3, scope: !12402, file: !971, line: 1580, type: !979)
!12410 = !DILocation(line: 1580, column: 66, scope: !12402)
!12411 = !DILocalVariable(name: "left", arg: 4, scope: !12402, file: !971, line: 1581, type: !979)
!12412 = !DILocation(line: 1581, column: 34, scope: !12402)
!12413 = !DILocalVariable(name: "right", arg: 5, scope: !12402, file: !971, line: 1581, type: !979)
!12414 = !DILocation(line: 1581, column: 44, scope: !12402)
!12415 = !DILocalVariable(name: "top", arg: 6, scope: !12402, file: !971, line: 1581, type: !979)
!12416 = !DILocation(line: 1581, column: 55, scope: !12402)
!12417 = !DILocalVariable(name: "bottom", arg: 7, scope: !12402, file: !971, line: 1581, type: !979)
!12418 = !DILocation(line: 1581, column: 64, scope: !12402)
!12419 = !DILocalVariable(name: "y", scope: !12402, file: !971, line: 1583, type: !979)
!12420 = !DILocation(line: 1583, column: 9, scope: !12402)
!12421 = !DILocation(line: 1584, column: 12, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12402, file: !971, line: 1584, column: 5)
!12423 = !DILocation(line: 1584, column: 10, scope: !12422)
!12424 = !DILocation(line: 1584, column: 17, scope: !12425)
!12425 = !DILexicalBlockFile(scope: !12426, file: !971, discriminator: 1)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !971, line: 1584, column: 5)
!12427 = !DILocation(line: 1584, column: 21, scope: !12425)
!12428 = !DILocation(line: 1584, column: 24, scope: !12429)
!12429 = !DILexicalBlockFile(scope: !12426, file: !971, discriminator: 2)
!12430 = !DILocation(line: 1584, column: 28, scope: !12429)
!12431 = !DILocation(line: 1584, column: 31, scope: !12429)
!12432 = !DILocation(line: 1584, column: 37, scope: !12429)
!12433 = !DILocation(line: 1584, column: 26, scope: !12429)
!12434 = !DILocation(line: 1584, column: 5, scope: !12435)
!12435 = !DILexicalBlockFile(scope: !12422, file: !971, discriminator: 3)
!12436 = !DILocation(line: 1585, column: 30, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12426, file: !971, line: 1584, column: 48)
!12438 = !DILocation(line: 1585, column: 33, scope: !12437)
!12439 = !DILocation(line: 1585, column: 46, scope: !12437)
!12440 = !DILocation(line: 1585, column: 54, scope: !12437)
!12441 = !DILocation(line: 1585, column: 60, scope: !12437)
!12442 = !DILocation(line: 1585, column: 9, scope: !12437)
!12443 = !DILocation(line: 1586, column: 24, scope: !12437)
!12444 = !DILocation(line: 1586, column: 21, scope: !12437)
!12445 = !DILocation(line: 1587, column: 5, scope: !12437)
!12446 = !DILocation(line: 1584, column: 44, scope: !12447)
!12447 = !DILexicalBlockFile(scope: !12426, file: !971, discriminator: 4)
!12448 = !DILocation(line: 1584, column: 5, scope: !12447)
!12449 = distinct !{!12449, !12450}
!12450 = !DILocation(line: 1584, column: 5, scope: !12402)
!12451 = !DILocation(line: 1588, column: 5, scope: !12402)
!12452 = !DILocation(line: 1588, column: 12, scope: !12453)
!12453 = !DILexicalBlockFile(scope: !12454, file: !971, discriminator: 1)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !971, line: 1588, column: 5)
!12455 = distinct !DILexicalBlock(scope: !12402, file: !971, line: 1588, column: 5)
!12456 = !DILocation(line: 1588, column: 16, scope: !12453)
!12457 = !DILocation(line: 1588, column: 19, scope: !12453)
!12458 = !DILocation(line: 1588, column: 28, scope: !12453)
!12459 = !DILocation(line: 1588, column: 25, scope: !12453)
!12460 = !DILocation(line: 1588, column: 14, scope: !12453)
!12461 = !DILocation(line: 1588, column: 5, scope: !12453)
!12462 = !DILocalVariable(name: "wy", scope: !12463, file: !971, line: 1589, type: !979)
!12463 = distinct !DILexicalBlock(scope: !12454, file: !971, line: 1588, column: 41)
!12464 = !DILocation(line: 1589, column: 13, scope: !12463)
!12465 = !DILocation(line: 1589, column: 25, scope: !12463)
!12466 = !DILocation(line: 1589, column: 28, scope: !12463)
!12467 = !DILocation(line: 1589, column: 31, scope: !12463)
!12468 = !DILocation(line: 1589, column: 38, scope: !12463)
!12469 = !DILocation(line: 1589, column: 41, scope: !12463)
!12470 = !DILocation(line: 1589, column: 18, scope: !12463)
!12471 = !DILocation(line: 1590, column: 30, scope: !12463)
!12472 = !DILocation(line: 1590, column: 33, scope: !12463)
!12473 = !DILocation(line: 1590, column: 46, scope: !12463)
!12474 = !DILocation(line: 1590, column: 54, scope: !12463)
!12475 = !DILocation(line: 1590, column: 60, scope: !12463)
!12476 = !DILocation(line: 1590, column: 67, scope: !12463)
!12477 = !DILocation(line: 1590, column: 9, scope: !12463)
!12478 = !DILocation(line: 1591, column: 24, scope: !12463)
!12479 = !DILocation(line: 1591, column: 21, scope: !12463)
!12480 = !DILocation(line: 1592, column: 5, scope: !12463)
!12481 = !DILocation(line: 1588, column: 37, scope: !12482)
!12482 = !DILexicalBlockFile(scope: !12454, file: !971, discriminator: 2)
!12483 = !DILocation(line: 1588, column: 5, scope: !12482)
!12484 = distinct !{!12484, !12451}
!12485 = !DILocation(line: 1593, column: 5, scope: !12402)
!12486 = !DILocation(line: 1593, column: 12, scope: !12487)
!12487 = !DILexicalBlockFile(scope: !12488, file: !971, discriminator: 1)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !971, line: 1593, column: 5)
!12489 = distinct !DILexicalBlock(scope: !12402, file: !971, line: 1593, column: 5)
!12490 = !DILocation(line: 1593, column: 16, scope: !12487)
!12491 = !DILocation(line: 1593, column: 19, scope: !12487)
!12492 = !DILocation(line: 1593, column: 14, scope: !12487)
!12493 = !DILocation(line: 1593, column: 5, scope: !12487)
!12494 = !DILocation(line: 1594, column: 30, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12488, file: !971, line: 1593, column: 31)
!12496 = !DILocation(line: 1594, column: 33, scope: !12495)
!12497 = !DILocation(line: 1594, column: 46, scope: !12495)
!12498 = !DILocation(line: 1594, column: 54, scope: !12495)
!12499 = !DILocation(line: 1594, column: 60, scope: !12495)
!12500 = !DILocation(line: 1594, column: 9, scope: !12495)
!12501 = !DILocation(line: 1595, column: 24, scope: !12495)
!12502 = !DILocation(line: 1595, column: 21, scope: !12495)
!12503 = !DILocation(line: 1596, column: 5, scope: !12495)
!12504 = !DILocation(line: 1593, column: 27, scope: !12505)
!12505 = !DILexicalBlockFile(scope: !12488, file: !971, discriminator: 2)
!12506 = !DILocation(line: 1593, column: 5, scope: !12505)
!12507 = distinct !{!12507, !12485}
!12508 = !DILocation(line: 1597, column: 1, scope: !12402)
!12509 = distinct !DISubprogram(name: "init_obmc_weight_row", scope: !971, file: !971, line: 1566, type: !12510, isLocal: true, isDefinition: true, scopeLine: 1568, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{null, !5362, !987, !979, !979, !979, !979}
!12512 = !DILocalVariable(name: "p", arg: 1, scope: !12509, file: !971, line: 1566, type: !5362)
!12513 = !DILocation(line: 1566, column: 41, scope: !12509)
!12514 = !DILocalVariable(name: "obmc_weight", arg: 2, scope: !12509, file: !971, line: 1566, type: !987)
!12515 = !DILocation(line: 1566, column: 53, scope: !12509)
!12516 = !DILocalVariable(name: "stride", arg: 3, scope: !12509, file: !971, line: 1566, type: !979)
!12517 = !DILocation(line: 1566, column: 70, scope: !12509)
!12518 = !DILocalVariable(name: "left", arg: 4, scope: !12509, file: !971, line: 1567, type: !979)
!12519 = !DILocation(line: 1567, column: 38, scope: !12509)
!12520 = !DILocalVariable(name: "right", arg: 5, scope: !12509, file: !971, line: 1567, type: !979)
!12521 = !DILocation(line: 1567, column: 48, scope: !12509)
!12522 = !DILocalVariable(name: "wy", arg: 6, scope: !12509, file: !971, line: 1567, type: !979)
!12523 = !DILocation(line: 1567, column: 59, scope: !12509)
!12524 = !DILocalVariable(name: "x", scope: !12509, file: !971, line: 1569, type: !979)
!12525 = !DILocation(line: 1569, column: 9, scope: !12509)
!12526 = !DILocation(line: 1570, column: 12, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12509, file: !971, line: 1570, column: 5)
!12528 = !DILocation(line: 1570, column: 10, scope: !12527)
!12529 = !DILocation(line: 1570, column: 17, scope: !12530)
!12530 = !DILexicalBlockFile(scope: !12531, file: !971, discriminator: 1)
!12531 = distinct !DILexicalBlock(scope: !12527, file: !971, line: 1570, column: 5)
!12532 = !DILocation(line: 1570, column: 22, scope: !12530)
!12533 = !DILocation(line: 1570, column: 25, scope: !12534)
!12534 = !DILexicalBlockFile(scope: !12531, file: !971, discriminator: 2)
!12535 = !DILocation(line: 1570, column: 29, scope: !12534)
!12536 = !DILocation(line: 1570, column: 32, scope: !12534)
!12537 = !DILocation(line: 1570, column: 38, scope: !12534)
!12538 = !DILocation(line: 1570, column: 27, scope: !12534)
!12539 = !DILocation(line: 1570, column: 5, scope: !12540)
!12540 = !DILexicalBlockFile(scope: !12527, file: !971, discriminator: 3)
!12541 = !DILocation(line: 1571, column: 26, scope: !12531)
!12542 = !DILocation(line: 1571, column: 28, scope: !12531)
!12543 = !DILocation(line: 1571, column: 21, scope: !12531)
!12544 = !DILocation(line: 1571, column: 9, scope: !12531)
!12545 = !DILocation(line: 1571, column: 24, scope: !12531)
!12546 = !DILocation(line: 1570, column: 45, scope: !12547)
!12547 = !DILexicalBlockFile(scope: !12531, file: !971, discriminator: 4)
!12548 = !DILocation(line: 1570, column: 5, scope: !12547)
!12549 = distinct !{!12549, !12550}
!12550 = !DILocation(line: 1570, column: 5, scope: !12509)
!12551 = !DILocation(line: 1572, column: 5, scope: !12509)
!12552 = !DILocation(line: 1572, column: 12, scope: !12553)
!12553 = !DILexicalBlockFile(scope: !12554, file: !971, discriminator: 1)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !971, line: 1572, column: 5)
!12555 = distinct !DILexicalBlock(scope: !12509, file: !971, line: 1572, column: 5)
!12556 = !DILocation(line: 1572, column: 16, scope: !12553)
!12557 = !DILocation(line: 1572, column: 19, scope: !12553)
!12558 = !DILocation(line: 1572, column: 28, scope: !12553)
!12559 = !DILocation(line: 1572, column: 25, scope: !12553)
!12560 = !DILocation(line: 1572, column: 14, scope: !12553)
!12561 = !DILocation(line: 1572, column: 5, scope: !12553)
!12562 = !DILocation(line: 1573, column: 26, scope: !12554)
!12563 = !DILocation(line: 1573, column: 36, scope: !12554)
!12564 = !DILocation(line: 1573, column: 39, scope: !12554)
!12565 = !DILocation(line: 1573, column: 42, scope: !12554)
!12566 = !DILocation(line: 1573, column: 49, scope: !12554)
!12567 = !DILocation(line: 1573, column: 52, scope: !12554)
!12568 = !DILocation(line: 1573, column: 29, scope: !12554)
!12569 = !DILocation(line: 1573, column: 28, scope: !12554)
!12570 = !DILocation(line: 1573, column: 21, scope: !12554)
!12571 = !DILocation(line: 1573, column: 9, scope: !12554)
!12572 = !DILocation(line: 1573, column: 24, scope: !12554)
!12573 = !DILocation(line: 1572, column: 36, scope: !12574)
!12574 = !DILexicalBlockFile(scope: !12554, file: !971, discriminator: 2)
!12575 = !DILocation(line: 1572, column: 5, scope: !12574)
!12576 = distinct !{!12576, !12551}
!12577 = !DILocation(line: 1574, column: 5, scope: !12509)
!12578 = !DILocation(line: 1574, column: 12, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !12580, file: !971, discriminator: 1)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !971, line: 1574, column: 5)
!12581 = distinct !DILexicalBlock(scope: !12509, file: !971, line: 1574, column: 5)
!12582 = !DILocation(line: 1574, column: 16, scope: !12579)
!12583 = !DILocation(line: 1574, column: 19, scope: !12579)
!12584 = !DILocation(line: 1574, column: 14, scope: !12579)
!12585 = !DILocation(line: 1574, column: 5, scope: !12579)
!12586 = !DILocation(line: 1575, column: 26, scope: !12580)
!12587 = !DILocation(line: 1575, column: 28, scope: !12580)
!12588 = !DILocation(line: 1575, column: 21, scope: !12580)
!12589 = !DILocation(line: 1575, column: 9, scope: !12580)
!12590 = !DILocation(line: 1575, column: 24, scope: !12580)
!12591 = !DILocation(line: 1574, column: 27, scope: !12592)
!12592 = !DILexicalBlockFile(scope: !12580, file: !971, discriminator: 2)
!12593 = !DILocation(line: 1574, column: 5, scope: !12592)
!12594 = distinct !{!12594, !12577}
!12595 = !DILocation(line: 1576, column: 5, scope: !12509)
!12596 = !DILocation(line: 1576, column: 12, scope: !12597)
!12597 = !DILexicalBlockFile(scope: !12598, file: !971, discriminator: 1)
!12598 = distinct !DILexicalBlock(scope: !12599, file: !971, line: 1576, column: 5)
!12599 = distinct !DILexicalBlock(scope: !12509, file: !971, line: 1576, column: 5)
!12600 = !DILocation(line: 1576, column: 16, scope: !12597)
!12601 = !DILocation(line: 1576, column: 14, scope: !12597)
!12602 = !DILocation(line: 1576, column: 5, scope: !12597)
!12603 = !DILocation(line: 1577, column: 21, scope: !12598)
!12604 = !DILocation(line: 1577, column: 9, scope: !12598)
!12605 = !DILocation(line: 1577, column: 24, scope: !12598)
!12606 = !DILocation(line: 1576, column: 25, scope: !12607)
!12607 = !DILexicalBlockFile(scope: !12598, file: !971, discriminator: 2)
!12608 = !DILocation(line: 1576, column: 5, scope: !12607)
!12609 = distinct !{!12609, !12595}
!12610 = !DILocation(line: 1578, column: 1, scope: !12509)
!12611 = distinct !DISubprogram(name: "weight", scope: !971, file: !971, line: 1554, type: !8887, isLocal: true, isDefinition: true, scopeLine: 1555, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12612 = !DILocalVariable(name: "i", arg: 1, scope: !12611, file: !971, line: 1554, type: !979)
!12613 = !DILocation(line: 1554, column: 23, scope: !12611)
!12614 = !DILocalVariable(name: "blen", arg: 2, scope: !12611, file: !971, line: 1554, type: !979)
!12615 = !DILocation(line: 1554, column: 30, scope: !12611)
!12616 = !DILocalVariable(name: "offset", arg: 3, scope: !12611, file: !971, line: 1554, type: !979)
!12617 = !DILocation(line: 1554, column: 40, scope: !12611)
!12618 = !DILocation(line: 1559, column: 9, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12611, file: !971, line: 1559, column: 9)
!12620 = !DILocation(line: 1559, column: 15, scope: !12619)
!12621 = !DILocation(line: 1559, column: 14, scope: !12619)
!12622 = !DILocation(line: 1559, column: 11, scope: !12619)
!12623 = !DILocation(line: 1559, column: 9, scope: !12611)
!12624 = !DILocation(line: 1560, column: 16, scope: !12619)
!12625 = !DILocation(line: 1560, column: 23, scope: !12619)
!12626 = !DILocation(line: 1560, column: 32, scope: !12627)
!12627 = !DILexicalBlockFile(scope: !12619, file: !971, discriminator: 1)
!12628 = !DILocation(line: 1560, column: 31, scope: !12627)
!12629 = !DILocation(line: 1560, column: 16, scope: !12627)
!12630 = !DILocation(line: 1560, column: 55, scope: !12631)
!12631 = !DILexicalBlockFile(scope: !12619, file: !971, discriminator: 2)
!12632 = !DILocation(line: 1560, column: 53, scope: !12631)
!12633 = !DILocation(line: 1560, column: 60, scope: !12631)
!12634 = !DILocation(line: 1560, column: 58, scope: !12631)
!12635 = !DILocation(line: 1560, column: 67, scope: !12631)
!12636 = !DILocation(line: 1560, column: 77, scope: !12631)
!12637 = !DILocation(line: 1560, column: 76, scope: !12631)
!12638 = !DILocation(line: 1560, column: 84, scope: !12631)
!12639 = !DILocation(line: 1560, column: 72, scope: !12631)
!12640 = !DILocation(line: 1560, column: 49, scope: !12631)
!12641 = !DILocation(line: 1560, column: 16, scope: !12631)
!12642 = !DILocation(line: 1560, column: 16, scope: !12643)
!12643 = !DILexicalBlockFile(scope: !12619, file: !971, discriminator: 3)
!12644 = !DILocation(line: 1560, column: 9, scope: !12643)
!12645 = !DILocation(line: 1561, column: 14, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12619, file: !971, line: 1561, column: 14)
!12647 = !DILocation(line: 1561, column: 18, scope: !12646)
!12648 = !DILocation(line: 1561, column: 22, scope: !12646)
!12649 = !DILocation(line: 1561, column: 29, scope: !12646)
!12650 = !DILocation(line: 1561, column: 28, scope: !12646)
!12651 = !DILocation(line: 1561, column: 25, scope: !12646)
!12652 = !DILocation(line: 1561, column: 16, scope: !12646)
!12653 = !DILocation(line: 1561, column: 14, scope: !12619)
!12654 = !DILocation(line: 1562, column: 16, scope: !12646)
!12655 = !DILocation(line: 1562, column: 23, scope: !12646)
!12656 = !DILocation(line: 1562, column: 32, scope: !12657)
!12657 = !DILexicalBlockFile(scope: !12646, file: !971, discriminator: 1)
!12658 = !DILocation(line: 1562, column: 36, scope: !12657)
!12659 = !DILocation(line: 1562, column: 41, scope: !12657)
!12660 = !DILocation(line: 1562, column: 39, scope: !12657)
!12661 = !DILocation(line: 1562, column: 31, scope: !12657)
!12662 = !DILocation(line: 1562, column: 16, scope: !12657)
!12663 = !DILocation(line: 1562, column: 64, scope: !12664)
!12664 = !DILexicalBlockFile(scope: !12646, file: !971, discriminator: 2)
!12665 = !DILocation(line: 1562, column: 68, scope: !12664)
!12666 = !DILocation(line: 1562, column: 73, scope: !12664)
!12667 = !DILocation(line: 1562, column: 71, scope: !12664)
!12668 = !DILocation(line: 1562, column: 62, scope: !12664)
!12669 = !DILocation(line: 1562, column: 78, scope: !12664)
!12670 = !DILocation(line: 1562, column: 76, scope: !12664)
!12671 = !DILocation(line: 1562, column: 85, scope: !12664)
!12672 = !DILocation(line: 1562, column: 95, scope: !12664)
!12673 = !DILocation(line: 1562, column: 94, scope: !12664)
!12674 = !DILocation(line: 1562, column: 102, scope: !12664)
!12675 = !DILocation(line: 1562, column: 90, scope: !12664)
!12676 = !DILocation(line: 1562, column: 58, scope: !12664)
!12677 = !DILocation(line: 1562, column: 16, scope: !12664)
!12678 = !DILocation(line: 1562, column: 16, scope: !12679)
!12679 = !DILexicalBlockFile(scope: !12646, file: !971, discriminator: 3)
!12680 = !DILocation(line: 1562, column: 9, scope: !12679)
!12681 = !DILocation(line: 1563, column: 5, scope: !12611)
!12682 = !DILocation(line: 1564, column: 1, scope: !12611)
!12683 = distinct !DISubprogram(name: "block_mc", scope: !971, file: !971, line: 1750, type: !12684, isLocal: true, isDefinition: true, scopeLine: 1753, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{null, !2670, !2880, !1483, !987, !979, !979, !979}
!12686 = !DILocalVariable(name: "s", arg: 1, scope: !12683, file: !971, line: 1750, type: !2670)
!12687 = !DILocation(line: 1750, column: 36, scope: !12683)
!12688 = !DILocalVariable(name: "block", arg: 2, scope: !12683, file: !971, line: 1750, type: !2880)
!12689 = !DILocation(line: 1750, column: 51, scope: !12683)
!12690 = !DILocalVariable(name: "mctmp", arg: 3, scope: !12683, file: !971, line: 1751, type: !1483)
!12691 = !DILocation(line: 1751, column: 32, scope: !12683)
!12692 = !DILocalVariable(name: "obmc_weight", arg: 4, scope: !12683, file: !971, line: 1751, type: !987)
!12693 = !DILocation(line: 1751, column: 48, scope: !12683)
!12694 = !DILocalVariable(name: "plane", arg: 5, scope: !12683, file: !971, line: 1752, type: !979)
!12695 = !DILocation(line: 1752, column: 26, scope: !12683)
!12696 = !DILocalVariable(name: "dstx", arg: 6, scope: !12683, file: !971, line: 1752, type: !979)
!12697 = !DILocation(line: 1752, column: 37, scope: !12683)
!12698 = !DILocalVariable(name: "dsty", arg: 7, scope: !12683, file: !971, line: 1752, type: !979)
!12699 = !DILocation(line: 1752, column: 47, scope: !12683)
!12700 = !DILocalVariable(name: "p", scope: !12683, file: !971, line: 1754, type: !5362)
!12701 = !DILocation(line: 1754, column: 12, scope: !12683)
!12702 = !DILocation(line: 1754, column: 26, scope: !12683)
!12703 = !DILocation(line: 1754, column: 17, scope: !12683)
!12704 = !DILocation(line: 1754, column: 20, scope: !12683)
!12705 = !DILocalVariable(name: "src", scope: !12683, file: !971, line: 1755, type: !12706)
!12706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1119, size: 320, align: 64, elements: !1800)
!12707 = !DILocation(line: 1755, column: 20, scope: !12683)
!12708 = !DILocalVariable(name: "idx", scope: !12683, file: !971, line: 1756, type: !979)
!12709 = !DILocation(line: 1756, column: 9, scope: !12683)
!12710 = !DILocation(line: 1758, column: 13, scope: !12683)
!12711 = !DILocation(line: 1758, column: 20, scope: !12683)
!12712 = !DILocation(line: 1758, column: 23, scope: !12683)
!12713 = !DILocation(line: 1758, column: 5, scope: !12683)
!12714 = !DILocation(line: 1760, column: 16, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12683, file: !971, line: 1758, column: 27)
!12716 = !DILocation(line: 1760, column: 35, scope: !12715)
!12717 = !DILocation(line: 1760, column: 23, scope: !12715)
!12718 = !DILocation(line: 1760, column: 30, scope: !12715)
!12719 = !DILocation(line: 1760, column: 32, scope: !12715)
!12720 = !DILocation(line: 1760, column: 43, scope: !12715)
!12721 = !DILocation(line: 1760, column: 46, scope: !12715)
!12722 = !DILocation(line: 1760, column: 54, scope: !12715)
!12723 = !DILocation(line: 1760, column: 67, scope: !12715)
!12724 = !DILocation(line: 1760, column: 70, scope: !12715)
!12725 = !DILocation(line: 1760, column: 77, scope: !12715)
!12726 = !DILocation(line: 1760, column: 80, scope: !12715)
!12727 = !DILocation(line: 1760, column: 9, scope: !12715)
!12728 = !DILocation(line: 1761, column: 9, scope: !12715)
!12729 = !DILocation(line: 1764, column: 25, scope: !12715)
!12730 = !DILocation(line: 1764, column: 28, scope: !12715)
!12731 = !DILocation(line: 1764, column: 35, scope: !12715)
!12732 = !DILocation(line: 1764, column: 40, scope: !12715)
!12733 = !DILocation(line: 1764, column: 46, scope: !12715)
!12734 = !DILocation(line: 1764, column: 53, scope: !12715)
!12735 = !DILocation(line: 1764, column: 60, scope: !12715)
!12736 = !DILocation(line: 1764, column: 63, scope: !12715)
!12737 = !DILocation(line: 1764, column: 66, scope: !12715)
!12738 = !DILocation(line: 1764, column: 70, scope: !12715)
!12739 = !DILocation(line: 1764, column: 15, scope: !12715)
!12740 = !DILocation(line: 1764, column: 13, scope: !12715)
!12741 = !DILocation(line: 1765, column: 27, scope: !12715)
!12742 = !DILocation(line: 1765, column: 9, scope: !12715)
!12743 = !DILocation(line: 1765, column: 12, scope: !12715)
!12744 = !DILocation(line: 1765, column: 32, scope: !12715)
!12745 = !DILocation(line: 1765, column: 35, scope: !12715)
!12746 = !DILocation(line: 1765, column: 46, scope: !12715)
!12747 = !DILocation(line: 1765, column: 51, scope: !12715)
!12748 = !DILocation(line: 1765, column: 54, scope: !12715)
!12749 = !DILocation(line: 1765, column: 62, scope: !12715)
!12750 = !DILocation(line: 1765, column: 65, scope: !12715)
!12751 = !DILocation(line: 1766, column: 13, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12715, file: !971, line: 1766, column: 13)
!12753 = !DILocation(line: 1766, column: 16, scope: !12752)
!12754 = !DILocation(line: 1766, column: 13, scope: !12715)
!12755 = !DILocation(line: 1767, column: 13, scope: !12752)
!12756 = !DILocation(line: 1767, column: 16, scope: !12752)
!12757 = !DILocation(line: 1767, column: 28, scope: !12752)
!12758 = !DILocation(line: 1767, column: 31, scope: !12752)
!12759 = !DILocation(line: 1767, column: 42, scope: !12752)
!12760 = !DILocation(line: 1767, column: 45, scope: !12752)
!12761 = !DILocation(line: 1767, column: 53, scope: !12752)
!12762 = !DILocation(line: 1767, column: 56, scope: !12752)
!12763 = !DILocation(line: 1768, column: 28, scope: !12752)
!12764 = !DILocation(line: 1768, column: 31, scope: !12752)
!12765 = !DILocation(line: 1768, column: 43, scope: !12752)
!12766 = !DILocation(line: 1768, column: 46, scope: !12752)
!12767 = !DILocation(line: 1768, column: 41, scope: !12752)
!12768 = !DILocation(line: 1768, column: 57, scope: !12752)
!12769 = !DILocation(line: 1768, column: 60, scope: !12752)
!12770 = !DILocation(line: 1769, column: 9, scope: !12715)
!12771 = !DILocation(line: 1771, column: 25, scope: !12715)
!12772 = !DILocation(line: 1771, column: 28, scope: !12715)
!12773 = !DILocation(line: 1771, column: 35, scope: !12715)
!12774 = !DILocation(line: 1771, column: 40, scope: !12715)
!12775 = !DILocation(line: 1771, column: 46, scope: !12715)
!12776 = !DILocation(line: 1771, column: 55, scope: !12715)
!12777 = !DILocation(line: 1771, column: 15, scope: !12715)
!12778 = !DILocation(line: 1771, column: 13, scope: !12715)
!12779 = !DILocation(line: 1772, column: 27, scope: !12715)
!12780 = !DILocation(line: 1772, column: 9, scope: !12715)
!12781 = !DILocation(line: 1772, column: 12, scope: !12715)
!12782 = !DILocation(line: 1772, column: 32, scope: !12715)
!12783 = !DILocation(line: 1772, column: 35, scope: !12715)
!12784 = !DILocation(line: 1772, column: 46, scope: !12715)
!12785 = !DILocation(line: 1772, column: 51, scope: !12715)
!12786 = !DILocation(line: 1772, column: 54, scope: !12715)
!12787 = !DILocation(line: 1772, column: 62, scope: !12715)
!12788 = !DILocation(line: 1772, column: 65, scope: !12715)
!12789 = !DILocation(line: 1773, column: 25, scope: !12715)
!12790 = !DILocation(line: 1773, column: 28, scope: !12715)
!12791 = !DILocation(line: 1773, column: 35, scope: !12715)
!12792 = !DILocation(line: 1773, column: 40, scope: !12715)
!12793 = !DILocation(line: 1773, column: 46, scope: !12715)
!12794 = !DILocation(line: 1773, column: 55, scope: !12715)
!12795 = !DILocation(line: 1773, column: 15, scope: !12715)
!12796 = !DILocation(line: 1773, column: 13, scope: !12715)
!12797 = !DILocation(line: 1774, column: 13, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12715, file: !971, line: 1774, column: 13)
!12799 = !DILocation(line: 1774, column: 16, scope: !12798)
!12800 = !DILocation(line: 1774, column: 13, scope: !12715)
!12801 = !DILocation(line: 1776, column: 31, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12798, file: !971, line: 1774, column: 31)
!12803 = !DILocation(line: 1776, column: 13, scope: !12802)
!12804 = !DILocation(line: 1776, column: 16, scope: !12802)
!12805 = !DILocation(line: 1776, column: 36, scope: !12802)
!12806 = !DILocation(line: 1776, column: 39, scope: !12802)
!12807 = !DILocation(line: 1776, column: 49, scope: !12802)
!12808 = !DILocation(line: 1776, column: 55, scope: !12802)
!12809 = !DILocation(line: 1776, column: 60, scope: !12802)
!12810 = !DILocation(line: 1776, column: 63, scope: !12802)
!12811 = !DILocation(line: 1776, column: 71, scope: !12802)
!12812 = !DILocation(line: 1776, column: 74, scope: !12802)
!12813 = !DILocation(line: 1777, column: 13, scope: !12802)
!12814 = !DILocation(line: 1777, column: 16, scope: !12802)
!12815 = !DILocation(line: 1777, column: 30, scope: !12802)
!12816 = !DILocation(line: 1777, column: 33, scope: !12802)
!12817 = !DILocation(line: 1777, column: 44, scope: !12802)
!12818 = !DILocation(line: 1777, column: 47, scope: !12802)
!12819 = !DILocation(line: 1777, column: 56, scope: !12802)
!12820 = !DILocation(line: 1777, column: 61, scope: !12802)
!12821 = !DILocation(line: 1777, column: 64, scope: !12802)
!12822 = !DILocation(line: 1777, column: 72, scope: !12802)
!12823 = !DILocation(line: 1777, column: 75, scope: !12802)
!12824 = !DILocation(line: 1778, column: 30, scope: !12802)
!12825 = !DILocation(line: 1778, column: 33, scope: !12802)
!12826 = !DILocation(line: 1778, column: 44, scope: !12802)
!12827 = !DILocation(line: 1778, column: 47, scope: !12802)
!12828 = !DILocation(line: 1778, column: 58, scope: !12802)
!12829 = !DILocation(line: 1778, column: 61, scope: !12802)
!12830 = !DILocation(line: 1779, column: 9, scope: !12802)
!12831 = !DILocation(line: 1780, column: 31, scope: !12798)
!12832 = !DILocation(line: 1780, column: 13, scope: !12798)
!12833 = !DILocation(line: 1780, column: 16, scope: !12798)
!12834 = !DILocation(line: 1780, column: 36, scope: !12798)
!12835 = !DILocation(line: 1780, column: 39, scope: !12798)
!12836 = !DILocation(line: 1780, column: 50, scope: !12798)
!12837 = !DILocation(line: 1780, column: 55, scope: !12798)
!12838 = !DILocation(line: 1780, column: 58, scope: !12798)
!12839 = !DILocation(line: 1780, column: 66, scope: !12798)
!12840 = !DILocation(line: 1780, column: 69, scope: !12798)
!12841 = !DILocation(line: 1781, column: 9, scope: !12715)
!12842 = !DILocation(line: 1783, column: 5, scope: !12683)
!12843 = !DILocation(line: 1783, column: 8, scope: !12683)
!12844 = !DILocation(line: 1783, column: 17, scope: !12683)
!12845 = !DILocation(line: 1783, column: 24, scope: !12683)
!12846 = !DILocation(line: 1783, column: 27, scope: !12683)
!12847 = !DILocation(line: 1783, column: 38, scope: !12683)
!12848 = !DILocation(line: 1783, column: 41, scope: !12683)
!12849 = !DILocation(line: 1783, column: 49, scope: !12683)
!12850 = !DILocation(line: 1783, column: 62, scope: !12683)
!12851 = !DILocation(line: 1783, column: 65, scope: !12683)
!12852 = !DILocation(line: 1784, column: 1, scope: !12683)
!12853 = !DILocation(line: 1784, column: 1, scope: !12854)
!12854 = !DILexicalBlockFile(scope: !12683, file: !971, discriminator: 1)
!12855 = distinct !DISubprogram(name: "add_dc", scope: !971, file: !971, line: 1734, type: !12856, isLocal: true, isDefinition: true, scopeLine: 1736, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12856 = !DISubroutineType(types: !12857)
!12857 = !{null, !1483, !979, !979, !987, !979, !979}
!12858 = !DILocalVariable(name: "dst", arg: 1, scope: !12855, file: !971, line: 1734, type: !1483)
!12859 = !DILocation(line: 1734, column: 30, scope: !12855)
!12860 = !DILocalVariable(name: "dc", arg: 2, scope: !12855, file: !971, line: 1734, type: !979)
!12861 = !DILocation(line: 1734, column: 39, scope: !12855)
!12862 = !DILocalVariable(name: "stride", arg: 3, scope: !12855, file: !971, line: 1734, type: !979)
!12863 = !DILocation(line: 1734, column: 47, scope: !12855)
!12864 = !DILocalVariable(name: "obmc_weight", arg: 4, scope: !12855, file: !971, line: 1735, type: !987)
!12865 = !DILocation(line: 1735, column: 29, scope: !12855)
!12866 = !DILocalVariable(name: "xblen", arg: 5, scope: !12855, file: !971, line: 1735, type: !979)
!12867 = !DILocation(line: 1735, column: 46, scope: !12855)
!12868 = !DILocalVariable(name: "yblen", arg: 6, scope: !12855, file: !971, line: 1735, type: !979)
!12869 = !DILocation(line: 1735, column: 57, scope: !12855)
!12870 = !DILocalVariable(name: "x", scope: !12855, file: !971, line: 1737, type: !979)
!12871 = !DILocation(line: 1737, column: 9, scope: !12855)
!12872 = !DILocalVariable(name: "y", scope: !12855, file: !971, line: 1737, type: !979)
!12873 = !DILocation(line: 1737, column: 12, scope: !12855)
!12874 = !DILocation(line: 1738, column: 8, scope: !12855)
!12875 = !DILocation(line: 1740, column: 12, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12855, file: !971, line: 1740, column: 5)
!12877 = !DILocation(line: 1740, column: 10, scope: !12876)
!12878 = !DILocation(line: 1740, column: 17, scope: !12879)
!12879 = !DILexicalBlockFile(scope: !12880, file: !971, discriminator: 1)
!12880 = distinct !DILexicalBlock(scope: !12876, file: !971, line: 1740, column: 5)
!12881 = !DILocation(line: 1740, column: 21, scope: !12879)
!12882 = !DILocation(line: 1740, column: 19, scope: !12879)
!12883 = !DILocation(line: 1740, column: 5, scope: !12879)
!12884 = !DILocation(line: 1741, column: 16, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !971, line: 1741, column: 9)
!12886 = distinct !DILexicalBlock(scope: !12880, file: !971, line: 1740, column: 33)
!12887 = !DILocation(line: 1741, column: 14, scope: !12885)
!12888 = !DILocation(line: 1741, column: 21, scope: !12889)
!12889 = !DILexicalBlockFile(scope: !12890, file: !971, discriminator: 1)
!12890 = distinct !DILexicalBlock(scope: !12885, file: !971, line: 1741, column: 9)
!12891 = !DILocation(line: 1741, column: 25, scope: !12889)
!12892 = !DILocation(line: 1741, column: 23, scope: !12889)
!12893 = !DILocation(line: 1741, column: 9, scope: !12889)
!12894 = !DILocation(line: 1742, column: 24, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12890, file: !971, line: 1741, column: 40)
!12896 = !DILocation(line: 1742, column: 41, scope: !12895)
!12897 = !DILocation(line: 1742, column: 29, scope: !12895)
!12898 = !DILocation(line: 1742, column: 27, scope: !12895)
!12899 = !DILocation(line: 1742, column: 17, scope: !12895)
!12900 = !DILocation(line: 1742, column: 13, scope: !12895)
!12901 = !DILocation(line: 1742, column: 21, scope: !12895)
!12902 = !DILocation(line: 1743, column: 25, scope: !12895)
!12903 = !DILocation(line: 1743, column: 42, scope: !12895)
!12904 = !DILocation(line: 1743, column: 43, scope: !12895)
!12905 = !DILocation(line: 1743, column: 30, scope: !12895)
!12906 = !DILocation(line: 1743, column: 28, scope: !12895)
!12907 = !DILocation(line: 1743, column: 17, scope: !12895)
!12908 = !DILocation(line: 1743, column: 18, scope: !12895)
!12909 = !DILocation(line: 1743, column: 13, scope: !12895)
!12910 = !DILocation(line: 1743, column: 22, scope: !12895)
!12911 = !DILocation(line: 1744, column: 9, scope: !12895)
!12912 = !DILocation(line: 1741, column: 34, scope: !12913)
!12913 = !DILexicalBlockFile(scope: !12890, file: !971, discriminator: 2)
!12914 = !DILocation(line: 1741, column: 9, scope: !12913)
!12915 = distinct !{!12915, !12916}
!12916 = !DILocation(line: 1741, column: 9, scope: !12886)
!12917 = !DILocation(line: 1745, column: 16, scope: !12886)
!12918 = !DILocation(line: 1745, column: 13, scope: !12886)
!12919 = !DILocation(line: 1746, column: 21, scope: !12886)
!12920 = !DILocation(line: 1747, column: 5, scope: !12886)
!12921 = !DILocation(line: 1740, column: 29, scope: !12922)
!12922 = !DILexicalBlockFile(scope: !12880, file: !971, discriminator: 2)
!12923 = !DILocation(line: 1740, column: 5, scope: !12922)
!12924 = distinct !{!12924, !12925}
!12925 = !DILocation(line: 1740, column: 5, scope: !12855)
!12926 = !DILocation(line: 1748, column: 1, scope: !12855)
!12927 = distinct !DISubprogram(name: "mc_subpel", scope: !971, file: !971, line: 1639, type: !12928, isLocal: true, isDefinition: true, scopeLine: 1641, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2930)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!979, !2670, !2880, !2691, !979, !979, !979, !979}
!12930 = !DILocalVariable(name: "s", arg: 1, scope: !12927, file: !971, line: 1639, type: !2670)
!12931 = !DILocation(line: 1639, column: 36, scope: !12927)
!12932 = !DILocalVariable(name: "block", arg: 2, scope: !12927, file: !971, line: 1639, type: !2880)
!12933 = !DILocation(line: 1639, column: 51, scope: !12927)
!12934 = !DILocalVariable(name: "src", arg: 3, scope: !12927, file: !971, line: 1639, type: !2691)
!12935 = !DILocation(line: 1639, column: 73, scope: !12927)
!12936 = !DILocalVariable(name: "x", arg: 4, scope: !12927, file: !971, line: 1640, type: !979)
!12937 = !DILocation(line: 1640, column: 26, scope: !12927)
!12938 = !DILocalVariable(name: "y", arg: 5, scope: !12927, file: !971, line: 1640, type: !979)
!12939 = !DILocation(line: 1640, column: 33, scope: !12927)
!12940 = !DILocalVariable(name: "ref", arg: 6, scope: !12927, file: !971, line: 1640, type: !979)
!12941 = !DILocation(line: 1640, column: 40, scope: !12927)
!12942 = !DILocalVariable(name: "plane", arg: 7, scope: !12927, file: !971, line: 1640, type: !979)
!12943 = !DILocation(line: 1640, column: 49, scope: !12927)
!12944 = !DILocalVariable(name: "p", scope: !12927, file: !971, line: 1642, type: !5362)
!12945 = !DILocation(line: 1642, column: 12, scope: !12927)
!12946 = !DILocation(line: 1642, column: 26, scope: !12927)
!12947 = !DILocation(line: 1642, column: 17, scope: !12927)
!12948 = !DILocation(line: 1642, column: 20, scope: !12927)
!12949 = !DILocalVariable(name: "ref_hpel", scope: !12927, file: !971, line: 1643, type: !996)
!12950 = !DILocation(line: 1643, column: 15, scope: !12927)
!12951 = !DILocation(line: 1643, column: 49, scope: !12927)
!12952 = !DILocation(line: 1643, column: 26, scope: !12927)
!12953 = !DILocation(line: 1643, column: 38, scope: !12927)
!12954 = !DILocation(line: 1643, column: 29, scope: !12927)
!12955 = !DILocation(line: 1643, column: 44, scope: !12927)
!12956 = !DILocalVariable(name: "motion_x", scope: !12927, file: !971, line: 1644, type: !979)
!12957 = !DILocation(line: 1644, column: 9, scope: !12927)
!12958 = !DILocation(line: 1644, column: 32, scope: !12927)
!12959 = !DILocation(line: 1644, column: 20, scope: !12927)
!12960 = !DILocation(line: 1644, column: 27, scope: !12927)
!12961 = !DILocation(line: 1644, column: 29, scope: !12927)
!12962 = !DILocalVariable(name: "motion_y", scope: !12927, file: !971, line: 1645, type: !979)
!12963 = !DILocation(line: 1645, column: 9, scope: !12927)
!12964 = !DILocation(line: 1645, column: 32, scope: !12927)
!12965 = !DILocation(line: 1645, column: 20, scope: !12927)
!12966 = !DILocation(line: 1645, column: 27, scope: !12927)
!12967 = !DILocation(line: 1645, column: 29, scope: !12927)
!12968 = !DILocalVariable(name: "mx", scope: !12927, file: !971, line: 1646, type: !979)
!12969 = !DILocation(line: 1646, column: 9, scope: !12927)
!12970 = !DILocalVariable(name: "my", scope: !12927, file: !971, line: 1646, type: !979)
!12971 = !DILocation(line: 1646, column: 13, scope: !12927)
!12972 = !DILocalVariable(name: "i", scope: !12927, file: !971, line: 1646, type: !979)
!12973 = !DILocation(line: 1646, column: 17, scope: !12927)
!12974 = !DILocalVariable(name: "epel", scope: !12927, file: !971, line: 1646, type: !979)
!12975 = !DILocation(line: 1646, column: 20, scope: !12927)
!12976 = !DILocalVariable(name: "nplanes", scope: !12927, file: !971, line: 1646, type: !979)
!12977 = !DILocation(line: 1646, column: 26, scope: !12927)
!12978 = !DILocation(line: 1648, column: 9, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12927, file: !971, line: 1648, column: 9)
!12980 = !DILocation(line: 1648, column: 9, scope: !12927)
!12981 = !DILocation(line: 1649, column: 22, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12979, file: !971, line: 1648, column: 16)
!12983 = !DILocation(line: 1649, column: 25, scope: !12982)
!12984 = !DILocation(line: 1649, column: 18, scope: !12982)
!12985 = !DILocation(line: 1650, column: 22, scope: !12982)
!12986 = !DILocation(line: 1650, column: 25, scope: !12982)
!12987 = !DILocation(line: 1650, column: 18, scope: !12982)
!12988 = !DILocation(line: 1651, column: 5, scope: !12982)
!12989 = !DILocation(line: 1653, column: 10, scope: !12927)
!12990 = !DILocation(line: 1653, column: 30, scope: !12927)
!12991 = !DILocation(line: 1653, column: 33, scope: !12927)
!12992 = !DILocation(line: 1653, column: 27, scope: !12927)
!12993 = !DILocation(line: 1653, column: 21, scope: !12927)
!12994 = !DILocation(line: 1653, column: 19, scope: !12927)
!12995 = !DILocation(line: 1653, column: 8, scope: !12927)
!12996 = !DILocation(line: 1654, column: 10, scope: !12927)
!12997 = !DILocation(line: 1654, column: 30, scope: !12927)
!12998 = !DILocation(line: 1654, column: 33, scope: !12927)
!12999 = !DILocation(line: 1654, column: 27, scope: !12927)
!13000 = !DILocation(line: 1654, column: 21, scope: !12927)
!13001 = !DILocation(line: 1654, column: 19, scope: !12927)
!13002 = !DILocation(line: 1654, column: 8, scope: !12927)
!13003 = !DILocation(line: 1655, column: 18, scope: !12927)
!13004 = !DILocation(line: 1655, column: 21, scope: !12927)
!13005 = !DILocation(line: 1655, column: 14, scope: !12927)
!13006 = !DILocation(line: 1656, column: 18, scope: !12927)
!13007 = !DILocation(line: 1656, column: 21, scope: !12927)
!13008 = !DILocation(line: 1656, column: 14, scope: !12927)
!13009 = !DILocation(line: 1659, column: 16, scope: !12927)
!13010 = !DILocation(line: 1659, column: 19, scope: !12927)
!13011 = !DILocation(line: 1659, column: 14, scope: !12927)
!13012 = !DILocation(line: 1659, column: 8, scope: !12927)
!13013 = !DILocation(line: 1660, column: 16, scope: !12927)
!13014 = !DILocation(line: 1660, column: 19, scope: !12927)
!13015 = !DILocation(line: 1660, column: 14, scope: !12927)
!13016 = !DILocation(line: 1660, column: 8, scope: !12927)
!13017 = !DILocation(line: 1662, column: 10, scope: !12927)
!13018 = !DILocation(line: 1662, column: 7, scope: !12927)
!13019 = !DILocation(line: 1663, column: 10, scope: !12927)
!13020 = !DILocation(line: 1663, column: 7, scope: !12927)
!13021 = !DILocation(line: 1664, column: 13, scope: !12927)
!13022 = !DILocation(line: 1664, column: 16, scope: !12927)
!13023 = !DILocation(line: 1664, column: 15, scope: !12927)
!13024 = !DILocation(line: 1664, column: 19, scope: !12927)
!13025 = !DILocation(line: 1664, column: 10, scope: !12927)
!13026 = !DILocation(line: 1667, column: 12, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !12927, file: !971, line: 1667, column: 9)
!13028 = !DILocation(line: 1667, column: 15, scope: !13027)
!13029 = !DILocation(line: 1667, column: 14, scope: !13027)
!13030 = !DILocation(line: 1667, column: 18, scope: !13027)
!13031 = !DILocation(line: 1667, column: 9, scope: !12927)
!13032 = !DILocation(line: 1668, column: 17, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13027, file: !971, line: 1667, column: 23)
!13034 = !DILocation(line: 1669, column: 28, scope: !13033)
!13035 = !DILocation(line: 1669, column: 30, scope: !13033)
!13036 = !DILocation(line: 1669, column: 36, scope: !13033)
!13037 = !DILocation(line: 1669, column: 38, scope: !13033)
!13038 = !DILocation(line: 1669, column: 34, scope: !13033)
!13039 = !DILocation(line: 1669, column: 18, scope: !13033)
!13040 = !DILocation(line: 1669, column: 46, scope: !13033)
!13041 = !DILocation(line: 1669, column: 48, scope: !13033)
!13042 = !DILocation(line: 1669, column: 51, scope: !13033)
!13043 = !DILocation(line: 1669, column: 47, scope: !13033)
!13044 = !DILocation(line: 1669, column: 44, scope: !13033)
!13045 = !DILocation(line: 1669, column: 60, scope: !13033)
!13046 = !DILocation(line: 1669, column: 58, scope: !13033)
!13047 = !DILocation(line: 1669, column: 9, scope: !13033)
!13048 = !DILocation(line: 1669, column: 16, scope: !13033)
!13049 = !DILocation(line: 1670, column: 5, scope: !13033)
!13050 = !DILocation(line: 1672, column: 17, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13027, file: !971, line: 1670, column: 12)
!13052 = !DILocation(line: 1673, column: 16, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13051, file: !971, line: 1673, column: 9)
!13054 = !DILocation(line: 1673, column: 14, scope: !13053)
!13055 = !DILocation(line: 1673, column: 21, scope: !13056)
!13056 = !DILexicalBlockFile(scope: !13057, file: !971, discriminator: 1)
!13057 = distinct !DILexicalBlock(scope: !13053, file: !971, line: 1673, column: 9)
!13058 = !DILocation(line: 1673, column: 23, scope: !13056)
!13059 = !DILocation(line: 1673, column: 9, scope: !13056)
!13060 = !DILocation(line: 1674, column: 31, scope: !13057)
!13061 = !DILocation(line: 1674, column: 22, scope: !13057)
!13062 = !DILocation(line: 1674, column: 36, scope: !13057)
!13063 = !DILocation(line: 1674, column: 38, scope: !13057)
!13064 = !DILocation(line: 1674, column: 41, scope: !13057)
!13065 = !DILocation(line: 1674, column: 37, scope: !13057)
!13066 = !DILocation(line: 1674, column: 34, scope: !13057)
!13067 = !DILocation(line: 1674, column: 50, scope: !13057)
!13068 = !DILocation(line: 1674, column: 48, scope: !13057)
!13069 = !DILocation(line: 1674, column: 17, scope: !13057)
!13070 = !DILocation(line: 1674, column: 13, scope: !13057)
!13071 = !DILocation(line: 1674, column: 20, scope: !13057)
!13072 = !DILocation(line: 1673, column: 29, scope: !13073)
!13073 = !DILexicalBlockFile(scope: !13057, file: !971, discriminator: 2)
!13074 = !DILocation(line: 1673, column: 9, scope: !13073)
!13075 = distinct !{!13075, !13076}
!13076 = !DILocation(line: 1673, column: 9, scope: !13051)
!13077 = !DILocation(line: 1678, column: 13, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13051, file: !971, line: 1678, column: 13)
!13079 = !DILocation(line: 1678, column: 16, scope: !13078)
!13080 = !DILocation(line: 1678, column: 13, scope: !13051)
!13081 = !DILocation(line: 1679, column: 13, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13078, file: !971, line: 1678, column: 21)
!13083 = !DILocation(line: 1679, column: 20, scope: !13082)
!13084 = !DILocation(line: 1680, column: 13, scope: !13082)
!13085 = !DILocation(line: 1680, column: 20, scope: !13082)
!13086 = !DILocation(line: 1681, column: 14, scope: !13082)
!13087 = !DILocation(line: 1682, column: 9, scope: !13082)
!13088 = !DILocation(line: 1683, column: 13, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13051, file: !971, line: 1683, column: 13)
!13090 = !DILocation(line: 1683, column: 16, scope: !13089)
!13091 = !DILocation(line: 1683, column: 13, scope: !13051)
!13092 = !DILocation(line: 1684, column: 23, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !971, line: 1683, column: 21)
!13094 = !DILocation(line: 1684, column: 26, scope: !13093)
!13095 = !DILocation(line: 1684, column: 13, scope: !13093)
!13096 = !DILocation(line: 1684, column: 20, scope: !13093)
!13097 = !DILocation(line: 1685, column: 23, scope: !13093)
!13098 = !DILocation(line: 1685, column: 26, scope: !13093)
!13099 = !DILocation(line: 1685, column: 13, scope: !13093)
!13100 = !DILocation(line: 1685, column: 20, scope: !13093)
!13101 = !DILocation(line: 1686, column: 14, scope: !13093)
!13102 = !DILocation(line: 1687, column: 9, scope: !13093)
!13103 = !DILocation(line: 1692, column: 14, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13051, file: !971, line: 1692, column: 13)
!13105 = !DILocation(line: 1692, column: 13, scope: !13051)
!13106 = !DILocation(line: 1695, column: 19, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13108, file: !971, line: 1695, column: 17)
!13108 = distinct !DILexicalBlock(scope: !13104, file: !971, line: 1692, column: 20)
!13109 = !DILocation(line: 1695, column: 21, scope: !13107)
!13110 = !DILocation(line: 1695, column: 17, scope: !13108)
!13111 = !DILocation(line: 1698, column: 38, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13107, file: !971, line: 1695, column: 26)
!13113 = !DILocation(line: 1698, column: 37, scope: !13112)
!13114 = !DILocation(line: 1698, column: 36, scope: !13112)
!13115 = !DILocation(line: 1698, column: 34, scope: !13112)
!13116 = !DILocation(line: 1698, column: 28, scope: !13112)
!13117 = !DILocation(line: 1698, column: 22, scope: !13112)
!13118 = !DILocation(line: 1698, column: 21, scope: !13112)
!13119 = !DILocation(line: 1698, column: 17, scope: !13112)
!13120 = !DILocation(line: 1698, column: 26, scope: !13112)
!13121 = !DILocation(line: 1699, column: 25, scope: !13112)
!13122 = !DILocation(line: 1700, column: 13, scope: !13112)
!13123 = !DILocation(line: 1700, column: 26, scope: !13124)
!13124 = !DILexicalBlockFile(scope: !13125, file: !971, discriminator: 1)
!13125 = distinct !DILexicalBlock(scope: !13107, file: !971, line: 1700, column: 24)
!13126 = !DILocation(line: 1700, column: 28, scope: !13124)
!13127 = !DILocation(line: 1700, column: 24, scope: !13124)
!13128 = !DILocation(line: 1701, column: 31, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13125, file: !971, line: 1700, column: 33)
!13130 = !DILocation(line: 1701, column: 33, scope: !13129)
!13131 = !DILocation(line: 1701, column: 26, scope: !13129)
!13132 = !DILocation(line: 1701, column: 17, scope: !13129)
!13133 = !DILocation(line: 1701, column: 24, scope: !13129)
!13134 = !DILocation(line: 1702, column: 31, scope: !13129)
!13135 = !DILocation(line: 1702, column: 33, scope: !13129)
!13136 = !DILocation(line: 1702, column: 37, scope: !13129)
!13137 = !DILocation(line: 1702, column: 26, scope: !13129)
!13138 = !DILocation(line: 1702, column: 17, scope: !13129)
!13139 = !DILocation(line: 1702, column: 24, scope: !13129)
!13140 = !DILocation(line: 1703, column: 25, scope: !13129)
!13141 = !DILocation(line: 1704, column: 13, scope: !13129)
!13142 = !DILocation(line: 1705, column: 9, scope: !13108)
!13143 = !DILocation(line: 1707, column: 17, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !971, line: 1707, column: 17)
!13145 = distinct !DILexicalBlock(scope: !13104, file: !971, line: 1705, column: 16)
!13146 = !DILocation(line: 1707, column: 20, scope: !13144)
!13147 = !DILocation(line: 1707, column: 17, scope: !13145)
!13148 = !DILocation(line: 1708, column: 17, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13144, file: !971, line: 1707, column: 25)
!13150 = distinct !{!13150, !13148}
!13151 = !DILocalVariable(name: "SWAP_tmp", scope: !13152, file: !971, line: 1708, type: !1119)
!13152 = distinct !DILexicalBlock(scope: !13149, file: !971, line: 1708, column: 19)
!13153 = !DILocation(line: 1708, column: 36, scope: !13152)
!13154 = !DILocation(line: 1708, column: 46, scope: !13155)
!13155 = !DILexicalBlockFile(scope: !13152, file: !971, discriminator: 1)
!13156 = !DILocation(line: 1708, column: 36, scope: !13155)
!13157 = !DILocation(line: 1708, column: 62, scope: !13155)
!13158 = !DILocation(line: 1708, column: 54, scope: !13155)
!13159 = !DILocation(line: 1708, column: 60, scope: !13155)
!13160 = !DILocation(line: 1708, column: 78, scope: !13155)
!13161 = !DILocation(line: 1708, column: 70, scope: !13155)
!13162 = !DILocation(line: 1708, column: 76, scope: !13155)
!13163 = !DILocation(line: 1708, column: 87, scope: !13155)
!13164 = !DILocation(line: 1709, column: 17, scope: !13149)
!13165 = distinct !{!13165, !13164}
!13166 = !DILocalVariable(name: "SWAP_tmp", scope: !13167, file: !971, line: 1709, type: !1119)
!13167 = distinct !DILexicalBlock(scope: !13149, file: !971, line: 1709, column: 19)
!13168 = !DILocation(line: 1709, column: 36, scope: !13167)
!13169 = !DILocation(line: 1709, column: 46, scope: !13170)
!13170 = !DILexicalBlockFile(scope: !13167, file: !971, discriminator: 1)
!13171 = !DILocation(line: 1709, column: 36, scope: !13170)
!13172 = !DILocation(line: 1709, column: 62, scope: !13170)
!13173 = !DILocation(line: 1709, column: 54, scope: !13170)
!13174 = !DILocation(line: 1709, column: 60, scope: !13170)
!13175 = !DILocation(line: 1709, column: 78, scope: !13170)
!13176 = !DILocation(line: 1709, column: 70, scope: !13170)
!13177 = !DILocation(line: 1709, column: 76, scope: !13170)
!13178 = !DILocation(line: 1709, column: 87, scope: !13170)
!13179 = !DILocation(line: 1710, column: 13, scope: !13149)
!13180 = !DILocation(line: 1711, column: 17, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13145, file: !971, line: 1711, column: 17)
!13182 = !DILocation(line: 1711, column: 20, scope: !13181)
!13183 = !DILocation(line: 1711, column: 17, scope: !13145)
!13184 = !DILocation(line: 1712, column: 17, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13181, file: !971, line: 1711, column: 25)
!13186 = distinct !{!13186, !13184}
!13187 = !DILocalVariable(name: "SWAP_tmp", scope: !13188, file: !971, line: 1712, type: !1119)
!13188 = distinct !DILexicalBlock(scope: !13185, file: !971, line: 1712, column: 19)
!13189 = !DILocation(line: 1712, column: 36, scope: !13188)
!13190 = !DILocation(line: 1712, column: 46, scope: !13191)
!13191 = !DILexicalBlockFile(scope: !13188, file: !971, discriminator: 1)
!13192 = !DILocation(line: 1712, column: 36, scope: !13191)
!13193 = !DILocation(line: 1712, column: 62, scope: !13191)
!13194 = !DILocation(line: 1712, column: 54, scope: !13191)
!13195 = !DILocation(line: 1712, column: 60, scope: !13191)
!13196 = !DILocation(line: 1712, column: 78, scope: !13191)
!13197 = !DILocation(line: 1712, column: 70, scope: !13191)
!13198 = !DILocation(line: 1712, column: 76, scope: !13191)
!13199 = !DILocation(line: 1712, column: 87, scope: !13191)
!13200 = !DILocation(line: 1713, column: 17, scope: !13185)
!13201 = distinct !{!13201, !13200}
!13202 = !DILocalVariable(name: "SWAP_tmp", scope: !13203, file: !971, line: 1713, type: !1119)
!13203 = distinct !DILexicalBlock(scope: !13185, file: !971, line: 1713, column: 19)
!13204 = !DILocation(line: 1713, column: 36, scope: !13203)
!13205 = !DILocation(line: 1713, column: 46, scope: !13206)
!13206 = !DILexicalBlockFile(scope: !13203, file: !971, discriminator: 1)
!13207 = !DILocation(line: 1713, column: 36, scope: !13206)
!13208 = !DILocation(line: 1713, column: 62, scope: !13206)
!13209 = !DILocation(line: 1713, column: 54, scope: !13206)
!13210 = !DILocation(line: 1713, column: 60, scope: !13206)
!13211 = !DILocation(line: 1713, column: 78, scope: !13206)
!13212 = !DILocation(line: 1713, column: 70, scope: !13206)
!13213 = !DILocation(line: 1713, column: 76, scope: !13206)
!13214 = !DILocation(line: 1713, column: 87, scope: !13206)
!13215 = !DILocation(line: 1714, column: 13, scope: !13185)
!13216 = !DILocation(line: 1715, column: 41, scope: !13145)
!13217 = !DILocation(line: 1715, column: 43, scope: !13145)
!13218 = !DILocation(line: 1715, column: 22, scope: !13145)
!13219 = !DILocation(line: 1715, column: 35, scope: !13145)
!13220 = !DILocation(line: 1715, column: 37, scope: !13145)
!13221 = !DILocation(line: 1715, column: 13, scope: !13145)
!13222 = !DILocation(line: 1715, column: 20, scope: !13145)
!13223 = !DILocation(line: 1720, column: 9, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !12927, file: !971, line: 1720, column: 9)
!13225 = !DILocation(line: 1720, column: 13, scope: !13224)
!13226 = !DILocation(line: 1720, column: 16, scope: !13224)
!13227 = !DILocation(line: 1720, column: 11, scope: !13224)
!13228 = !DILocation(line: 1720, column: 24, scope: !13224)
!13229 = !DILocation(line: 1720, column: 27, scope: !13224)
!13230 = !DILocation(line: 1720, column: 33, scope: !13224)
!13231 = !DILocation(line: 1720, column: 22, scope: !13224)
!13232 = !DILocation(line: 1720, column: 39, scope: !13224)
!13233 = !DILocation(line: 1721, column: 9, scope: !13224)
!13234 = !DILocation(line: 1721, column: 13, scope: !13224)
!13235 = !DILocation(line: 1721, column: 16, scope: !13224)
!13236 = !DILocation(line: 1721, column: 11, scope: !13224)
!13237 = !DILocation(line: 1721, column: 24, scope: !13224)
!13238 = !DILocation(line: 1721, column: 27, scope: !13224)
!13239 = !DILocation(line: 1721, column: 33, scope: !13224)
!13240 = !DILocation(line: 1721, column: 22, scope: !13224)
!13241 = !DILocation(line: 1721, column: 39, scope: !13224)
!13242 = !DILocation(line: 1722, column: 9, scope: !13224)
!13243 = !DILocation(line: 1722, column: 11, scope: !13224)
!13244 = !DILocation(line: 1722, column: 15, scope: !13224)
!13245 = !DILocation(line: 1722, column: 18, scope: !13246)
!13246 = !DILexicalBlockFile(scope: !13224, file: !971, discriminator: 1)
!13247 = !DILocation(line: 1722, column: 20, scope: !13246)
!13248 = !DILocation(line: 1720, column: 9, scope: !13249)
!13249 = !DILexicalBlockFile(scope: !12927, file: !971, discriminator: 1)
!13250 = !DILocation(line: 1723, column: 16, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13252, file: !971, line: 1723, column: 9)
!13252 = distinct !DILexicalBlock(scope: !13224, file: !971, line: 1722, column: 25)
!13253 = !DILocation(line: 1723, column: 14, scope: !13251)
!13254 = !DILocation(line: 1723, column: 21, scope: !13255)
!13255 = !DILexicalBlockFile(scope: !13256, file: !971, discriminator: 1)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !971, line: 1723, column: 9)
!13257 = !DILocation(line: 1723, column: 25, scope: !13255)
!13258 = !DILocation(line: 1723, column: 23, scope: !13255)
!13259 = !DILocation(line: 1723, column: 9, scope: !13255)
!13260 = !DILocation(line: 1724, column: 13, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13256, file: !971, line: 1723, column: 39)
!13262 = !DILocation(line: 1724, column: 16, scope: !13261)
!13263 = !DILocation(line: 1724, column: 21, scope: !13261)
!13264 = !DILocation(line: 1724, column: 57, scope: !13261)
!13265 = !DILocation(line: 1724, column: 38, scope: !13261)
!13266 = !DILocation(line: 1724, column: 41, scope: !13261)
!13267 = !DILocation(line: 1724, column: 65, scope: !13261)
!13268 = !DILocation(line: 1724, column: 61, scope: !13261)
!13269 = !DILocation(line: 1725, column: 38, scope: !13261)
!13270 = !DILocation(line: 1725, column: 41, scope: !13261)
!13271 = !DILocation(line: 1725, column: 49, scope: !13261)
!13272 = !DILocation(line: 1725, column: 52, scope: !13261)
!13273 = !DILocation(line: 1726, column: 38, scope: !13261)
!13274 = !DILocation(line: 1726, column: 41, scope: !13261)
!13275 = !DILocation(line: 1726, column: 48, scope: !13261)
!13276 = !DILocation(line: 1726, column: 51, scope: !13261)
!13277 = !DILocation(line: 1726, column: 58, scope: !13261)
!13278 = !DILocation(line: 1726, column: 61, scope: !13261)
!13279 = !DILocation(line: 1727, column: 38, scope: !13261)
!13280 = !DILocation(line: 1727, column: 41, scope: !13261)
!13281 = !DILocation(line: 1727, column: 46, scope: !13261)
!13282 = !DILocation(line: 1727, column: 53, scope: !13261)
!13283 = !DILocation(line: 1727, column: 56, scope: !13261)
!13284 = !DILocation(line: 1727, column: 62, scope: !13261)
!13285 = !DILocation(line: 1728, column: 41, scope: !13261)
!13286 = !DILocation(line: 1728, column: 22, scope: !13261)
!13287 = !DILocation(line: 1728, column: 25, scope: !13261)
!13288 = !DILocation(line: 1728, column: 17, scope: !13261)
!13289 = !DILocation(line: 1728, column: 13, scope: !13261)
!13290 = !DILocation(line: 1728, column: 20, scope: !13261)
!13291 = !DILocation(line: 1729, column: 9, scope: !13261)
!13292 = !DILocation(line: 1723, column: 35, scope: !13293)
!13293 = !DILexicalBlockFile(scope: !13256, file: !971, discriminator: 2)
!13294 = !DILocation(line: 1723, column: 9, scope: !13293)
!13295 = distinct !{!13295, !13296}
!13296 = !DILocation(line: 1723, column: 9, scope: !13252)
!13297 = !DILocation(line: 1730, column: 5, scope: !13252)
!13298 = !DILocation(line: 1731, column: 13, scope: !12927)
!13299 = !DILocation(line: 1731, column: 20, scope: !12927)
!13300 = !DILocation(line: 1731, column: 27, scope: !12927)
!13301 = !DILocation(line: 1731, column: 25, scope: !12927)
!13302 = !DILocation(line: 1731, column: 5, scope: !12927)
